/* Generated by Yosys 0.8 (git sha1 UNKNOWN, clang 9.0.0 -fPIC -Os) */

(* top =  1  *)
(* src = "word_adder_clean.v:12" *)
module word_adder(clk, rst, func, inWord, result);
  (* src = "word_adder_clean.v:33" *)
  wire [4:0] _00_;
  (* src = "word_adder_clean.v:33" *)
  wire [8:0] _01_;
  (* src = "word_adder_clean.v:33" *)
  wire [8:0] _02_;
  (* src = "word_adder_clean.v:29" *)
  wire [8:0] _03_;
  (* src = "word_adder_clean.v:27" *)
  wire [31:0] _04_;
  (* src = "word_adder_clean.v:24" *)
  wire _05_;
  (* src = "word_adder_clean.v:26" *)
  wire _06_;
  (* src = "word_adder_clean.v:29" *)
  wire _07_;
  (* src = "word_adder_clean.v:27" *)
  wire [31:0] _08_;
  (* src = "word_adder_clean.v:13" *)
  input clk;
  (* src = "word_adder_clean.v:20" *)
  reg [4:0] counter;
  (* src = "word_adder_clean.v:26" *)
  wire [4:0] counter_next;
  (* src = "word_adder_clean.v:14" *)
  input [1:0] func;
  (* src = "word_adder_clean.v:15" *)
  input [8:0] inWord;
  (* src = "word_adder_clean.v:16" *)
  output [8:0] result;
  (* src = "word_adder_clean.v:13" *)
  input rst;
  (* src = "word_adder_clean.v:22" *)
  wire running;
  (* src = "word_adder_clean.v:18" *)
  reg [8:0] word;
  (* src = "word_adder_clean.v:24" *)
  wire [8:0] word_next;
  (* src = "word_adder_clean.v:19" *)
  reg [8:0] word_sum;
  (* src = "word_adder_clean.v:29" *)
  wire [8:0] word_sum_next;
  assign _03_ = word_sum + (* src = "word_adder_clean.v:29" *) _07_;
  assign _05_ = func == (* src = "word_adder_clean.v:24" *) 1'h1;
  assign _06_ = func == (* src = "word_adder_clean.v:26" *) 2'h2;
  assign running = counter > (* src = "word_adder_clean.v:22" *) 1'h0;
  always @(posedge clk)
      word <= _01_;
  always @(posedge clk)
      word_sum <= _02_;
  always @(posedge clk)
      counter <= _00_;
  assign _00_ = rst ? (* src = "word_adder_clean.v:34" *) 5'h00 : counter_next;
  assign _02_ = rst ? (* src = "word_adder_clean.v:34" *) 9'h000 : word_sum_next;
  assign _01_ = rst ? (* src = "word_adder_clean.v:34" *) 9'h000 : word_next;
  assign _07_ = word[$signed(_08_) +: 1];
  assign _08_ = counter - (* src = "word_adder_clean.v:27" *) 1'h1;
  assign word_next = _05_ ? (* src = "word_adder_clean.v:24" *) inWord : word;
  assign _04_[4:0] = running ? (* src = "word_adder_clean.v:27" *) _08_[4:0] : 5'h00;
  assign counter_next = _06_ ? (* src = "word_adder_clean.v:27" *) 5'h08 : _04_[4:0];
  assign word_sum_next = running ? (* src = "word_adder_clean.v:29" *) _03_ : word_sum;
  assign result = word_sum;
endmodule
