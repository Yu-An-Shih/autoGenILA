module pipeline_v(clk, rst, inst, dummy_read_rf, dummy_rf_data);
  wire [7:0] _000_;
  wire [7:0] _001_;
  wire [7:0] _002_;
  wire [7:0] _003_;
  wire [1:0] _004_;
  wire _005_;
  wire [7:0] _006_;
  wire [1:0] _007_;
  wire [1:0] _008_;
  wire _009_;
  wire [7:0] _010_;
  wire [7:0] _011_;
  wire [1:0] _012_;
  wire [1:0] _013_;
  wire [1:0] _014_;
  wire [1:0] _015_;
  wire [7:0] _016_;
  wire [7:0] _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire [7:0] _045_;
  wire [7:0] _046_;
  wire [7:0] _047_;
  wire [7:0] _048_;
  wire [1:0] _049_;
  wire [1:0] _050_;
  wire [1:0] _051_;
  wire [1:0] _052_;
  wire [7:0] _053_;
  wire [7:0] _054_;
  wire [7:0] _055_;
  wire [7:0] _056_;
  wire [7:0] _057_;
  wire [7:0] _058_;
  wire [7:0] _059_;
  wire [7:0] _060_;
  wire [1:0] _061_;
  wire [1:0] _062_;
  wire [1:0] _063_;
  wire [1:0] _064_;
  wire [7:0] _065_;
  wire [1:0] _066_;
  wire [1:0] _067_;
  wire [1:0] _068_;
  wire [1:0] _069_;
  wire [7:0] _070_;
  wire [7:0] _071_;
  wire [7:0] _072_;
  wire [7:0] _073_;
  wire [7:0] _074_;
  wire [7:0] _075_;
  wire [7:0] _076_;
  wire [7:0] _077_;
  wire [7:0] _078_;
  input clk;
  input [1:0] dummy_read_rf;
  output [7:0] dummy_rf_data;
  wire [7:0] ex_alu_result;
  reg [1:0] ex_wb_rd;
  reg ex_wb_reg_wen;
  reg [7:0] ex_wb_val;
  reg [1:0] id_ex_op;
  reg [1:0] id_ex_rd;
  reg id_ex_reg_wen;
  reg [7:0] id_ex_rs1_val;
  reg [7:0] id_ex_rs2_val;
  wire [7:0] id_rs1_val;
  wire [7:0] id_rs2_val;
  wire id_wen;
  input [7:0] inst;
  wire [1:0] op;
  wire [1:0] rd;
  reg [1:0] reg_0_w_stage;
  wire reg_0_w_stage_nxt;
  reg [1:0] reg_1_w_stage;
  wire reg_1_w_stage_nxt;
  reg [1:0] reg_2_w_stage;
  wire reg_2_w_stage_nxt;
  reg [1:0] reg_3_w_stage;
  wire reg_3_w_stage_nxt;
  wire [1:0] rs1;
  wire [1:0] rs1_stage_info;
  wire [7:0] rs1_val;
  wire [1:0] rs2;
  wire [1:0] rs2_stage_info;
  wire [7:0] rs2_val;
  input rst;
  assign _016_ = id_ex_rs1_val + id_ex_rs2_val;
  assign _017_ = id_ex_rs1_val & id_ex_rs2_val;
  assign _018_ = inst[1:0] == 1'b1;
  assign _019_ = inst[1:0] == 2'b10;
  assign _020_ = inst[1:0] == 2'b11;
  assign _021_ = ! inst[5:4];
  assign _022_ = inst[5:4] == 1'b1;
  assign _023_ = inst[5:4] == 2'b10;
  assign _024_ = ! inst[3:2];
  assign _025_ = inst[3:2] == 1'b1;
  assign _026_ = inst[3:2] == 2'b10;
  assign _027_ = ! rs1_stage_info;
  assign _028_ = rs1_stage_info == 1'b1;
  assign _029_ = ! rs2_stage_info;
  assign _030_ = rs2_stage_info == 1'b1;
  assign _031_ = id_ex_op == 1'b1;
  assign _032_ = id_ex_op == 2'b10;
  assign _033_ = inst[7:6] == 1'b1;
  assign _034_ = inst[7:6] == 2'b10;
  assign _035_ = inst[7:6] == 2'b11;
  assign _036_ = ! dummy_read_rf;
  assign _037_ = dummy_read_rf == 1'b1;
  assign _038_ = dummy_read_rf == 2'b10;
  assign _039_ = ! inst[1:0];
  assign _040_ = id_wen && _018_;
  assign _041_ = id_wen && _019_;
  assign _042_ = id_wen && _020_;
  assign _043_ = id_wen && _039_;
  assign _044_ = _033_ || _034_;
  assign id_wen = _044_ || _035_;
  assign _049_ = reg_1_w_stage[1] | 2'b10;
  assign _050_ = reg_2_w_stage[1] | 2'b10;
  assign _051_ = reg_3_w_stage[1] | 2'b10;
  assign _052_ = reg_0_w_stage[1] | 2'b10;
  always @(posedge clk)
      ex_wb_val <= _006_;
  always @(posedge clk)
      ex_wb_rd <= _004_;
  always @(posedge clk)
      ex_wb_reg_wen <= _005_;
  always @(posedge clk)
      id_ex_rs1_val <= _010_;
  always @(posedge clk)
      id_ex_rs2_val <= _011_;
  always @(posedge clk)
      id_ex_op <= _007_;
  always @(posedge clk)
      id_ex_rd <= _008_;
  always @(posedge clk)
      id_ex_reg_wen <= _009_;
  always @(posedge clk)
      reg_3_w_stage <= _015_;
  always @(posedge clk)
      reg_2_w_stage <= _014_;
  always @(posedge clk)
      reg_1_w_stage <= _013_;
  always @(posedge clk)
      reg_0_w_stage <= _012_;
  assign _053_[7] = ! ex_wb_rd;
  assign _054_[7] = ex_wb_reg_wen ? _053_[7] : 1'b0;
  assign _000_[7] = rst ? 1'b0 : _054_[7];
  assign _055_[7] = ex_wb_rd == 1'b1;
  assign _056_[7] = ex_wb_reg_wen ? _055_[7] : 1'b0;
  assign _001_[7] = rst ? 1'b0 : _056_[7];
  assign _057_[7] = ex_wb_rd == 2'b10;
  assign _058_[7] = ex_wb_reg_wen ? _057_[7] : 1'b0;
  assign _002_[7] = rst ? 1'b0 : _058_[7];
  assign _059_[7] = ex_wb_rd == 2'b11;
  assign _060_[7] = ex_wb_reg_wen ? _059_[7] : 1'b0;
  assign _003_[7] = rst ? 1'b0 : _060_[7];
  assign _005_ = rst ? 1'b0 : id_ex_reg_wen;
  assign _004_ = rst ? ex_wb_rd : id_ex_rd;
  assign _006_ = rst ? ex_wb_val : ex_alu_result;
  assign _009_ = rst ? 1'b0 : id_wen;
  assign _008_ = rst ? id_ex_rd : inst[1:0];
  assign _007_ = rst ? id_ex_op : inst[7:6];
  assign _011_ = rst ? id_ex_rs2_val : id_rs2_val;
  assign _010_ = rst ? id_ex_rs1_val : id_rs1_val;
  wire [1:0] fangyuan0;
  assign fangyuan0 = { 1'b0, reg_3_w_stage[1] };

  assign _061_ = _042_ ? _051_ : fangyuan0;
  assign _015_ = rst ? 2'b00 : _061_;
  wire [1:0] fangyuan1;
  assign fangyuan1 = { 1'b0, reg_2_w_stage[1] };

  assign _062_ = _041_ ? _050_ : fangyuan1;
  assign _014_ = rst ? 2'b00 : _062_;
  wire [1:0] fangyuan2;
  assign fangyuan2 = { 1'b0, reg_1_w_stage[1] };

  assign _063_ = _040_ ? _049_ : fangyuan2;
  assign _013_ = rst ? 2'b00 : _063_;
  wire [1:0] fangyuan3;
  assign fangyuan3 = { 1'b0, reg_0_w_stage[1] };

  assign _064_ = _043_ ? _052_ : fangyuan3;
  assign _012_ = rst ? 2'b00 : _064_;
  assign _065_ = id_ex_rs1_val - id_ex_rs2_val;
  assign _066_ = _023_ ? reg_2_w_stage : reg_3_w_stage;
  assign _067_ = _022_ ? reg_1_w_stage : _066_;
  assign rs1_stage_info = _021_ ? reg_0_w_stage : _067_;
  assign _068_ = _026_ ? reg_2_w_stage : reg_3_w_stage;
  assign _069_ = _025_ ? reg_1_w_stage : _068_;
  assign rs2_stage_info = _024_ ? reg_0_w_stage : _069_;
  assign _070_ = _023_ ? _047_ : _048_;
  assign _071_ = _022_ ? _046_ : _070_;
  assign rs1_val = _021_ ? _045_ : _071_;
  assign _072_ = _026_ ? _047_ : _048_;
  assign _073_ = _025_ ? _046_ : _072_;
  assign rs2_val = _024_ ? _045_ : _073_;
  assign _074_ = _028_ ? ex_wb_val : ex_alu_result;
  assign id_rs1_val = _027_ ? rs1_val : _074_;
  assign _075_ = _030_ ? ex_wb_val : ex_alu_result;
  assign id_rs2_val = _029_ ? rs2_val : _075_;
  assign _076_ = _032_ ? _065_ : _017_;
  assign ex_alu_result = _031_ ? _016_ : _076_;
  assign _077_ = _038_ ? _047_ : _048_;
  assign _078_ = _037_ ? _046_ : _077_;
  assign dummy_rf_data = _036_ ? _045_ : _078_;
  reg [7:0] registers [3:0];
  always @(posedge clk) begin
    if (rst) registers[2'b00] <= 8'b00000000;
    if (rst) registers[2'b01] <= 8'b00000000;
    if (rst) registers[2'b10] <= 8'b00000000;
    if (rst) registers[2'b11] <= 8'b00000000;
    if (_000_[7]) registers[2'b00] <= ex_wb_val;
    if (_001_[7]) registers[2'b01] <= ex_wb_val;
    if (_002_[7]) registers[2'b10] <= ex_wb_val;
    if (_003_[7]) registers[2'b11] <= ex_wb_val;
  end
  always @(negedge 1'bx) begin
  end
  assign _045_ = registers[2'b00];
  assign _046_ = registers[2'b01];
  assign _047_ = registers[2'b10];
  assign _048_ = registers[2'b11];
  assign op = inst[7:6];
  assign rd = inst[1:0];
  assign reg_0_w_stage_nxt = reg_0_w_stage[1];
  assign reg_1_w_stage_nxt = reg_1_w_stage[1];
  assign reg_2_w_stage_nxt = reg_2_w_stage[1];
  assign reg_3_w_stage_nxt = reg_3_w_stage[1];
  assign rs1 = inst[5:4];
  assign rs2 = inst[3:2];
endmodule
