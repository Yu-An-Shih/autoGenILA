  logic _000_;
  logic _000__T ;
  logic _001_;
  logic _001__T ;
  logic _002_;
  logic _002__T ;
  logic [127:0] _003_;
  logic [127:0] _003__T ;
  logic [31:0] _004_;
  logic [31:0] _004__T ;
  logic [127:0] _005_;
  logic [127:0] _005__T ;
  logic _006_;
  logic _006__T ;
  logic _007_;
  logic _007__T ;
  logic [127:0] _008_;
  logic [127:0] _008__T ;
  logic _009_;
  logic _009__T ;
  logic [127:0] _010_;
  logic [127:0] _010__T ;
  logic [127:0] _011_;
  logic [127:0] _011__T ;
  logic [127:0] _012_;
  logic [127:0] _012__T ;
  logic [127:0] _013_;
  logic [127:0] _013__T ;
  logic [127:0] _014_;
  logic [127:0] _014__T ;
  logic [127:0] _015_;
  logic [127:0] _015__T ;
  logic [127:0] _016_;
  logic [127:0] _016__T ;
  logic [127:0] _017_;
  logic [127:0] _017__T ;
  logic [127:0] _018_;
  logic [127:0] _018__T ;
  logic [127:0] _019_;
  logic [127:0] _019__T ;
  logic [127:0] _020_;
  logic [127:0] _020__T ;
  logic [127:0] _021_;
  logic [127:0] _021__T ;
  logic [127:0] _022_;
  logic [127:0] _022__T ;
  logic [127:0] _023_;
  logic [127:0] _023__T ;
  logic [127:0] _024_;
  logic [127:0] _024__T ;
  logic [127:0] _025_;
  logic [127:0] _025__T ;
  logic _026_;
  logic _026__T ;
  logic [127:0] _027_;
  logic [127:0] _027__T ;
  logic [127:0] _028_;
  logic [127:0] _028__T ;
  logic [127:0] _029_;
  logic [127:0] _029__T ;
  logic [127:0] _030_;
  logic [127:0] _030__T ;
  logic [127:0] _031_;
  logic [127:0] _031__T ;
  logic [127:0] _032_;
  logic [127:0] _032__T ;
  logic [127:0] _033_;
  logic [127:0] _033__T ;
  logic _034_;
  logic _034__T ;
  logic _035_;
  logic _035__T ;
  logic _036_;
  logic _036__T ;
  logic _037_;
  logic _037__T ;
  logic _038_;
  logic _038__T ;
  logic _039_;
  logic _039__T ;
  logic _040_;
  logic _040__T ;
  logic _041_;
  logic _041__T ;
  logic [31:0] _042_;
  logic [31:0] _042__T ;
  logic [31:0] _043_;
  logic [31:0] _043__T ;
  logic [31:0] _044_;
  logic [31:0] _044__T ;
  logic [31:0] _045_;
  logic [31:0] _045__T ;
  logic [31:0] _046_;
  logic [31:0] _046__T ;
  logic [31:0] _047_;
  logic [31:0] _047__T ;
  logic [31:0] _048_;
  logic [31:0] _048__T ;
  logic [31:0] _049_;
  logic [31:0] _049__T ;
  logic [31:0] _050_;
  logic [31:0] _050__T ;
  logic [31:0] _051_;
  logic [31:0] _051__T ;
  logic [31:0] _052_;
  logic [31:0] _052__T ;
  logic [31:0] _053_;
  logic [31:0] _053__T ;
  logic [31:0] _054_;
  logic [31:0] _054__T ;
  logic [31:0] _055_;
  logic [31:0] _055__T ;
  logic [31:0] _056_;
  logic [31:0] _056__T ;
  logic [31:0] _057_;
  logic [31:0] _057__T ;
  logic [31:0] _058_;
  logic [31:0] _058__T ;
  logic [31:0] _059_;
  logic [31:0] _059__T ;
  logic [31:0] _060_;
  logic [31:0] _060__T ;
  logic [31:0] _061_;
  logic [31:0] _061__T ;
  logic [31:0] _062_;
  logic [31:0] _062__T ;
  logic _GEN_1;
  logic _GEN_1_T ;
  logic [127:0] _GEN_2;
  logic [127:0] _GEN_2_T ;
  logic _GEN_39;
  logic _GEN_39_T ;
  logic _GEN_4;
  logic _GEN_4_T ;
  logic _GEN_40;
  logic _GEN_40_T ;
  logic _GEN_44;
  logic _GEN_44_T ;
  logic _GEN_45;
  logic _GEN_45_T ;
  logic _GEN_46;
  logic _GEN_46_T ;
  logic [127:0] _GEN_5;
  logic [127:0] _GEN_5_T ;
  logic _GEN_50;
  logic _GEN_50_T ;
  logic _GEN_51;
  logic _GEN_51_T ;
  logic _GEN_52;
  logic _GEN_52_T ;
  logic _GEN_53;
  logic _GEN_53_T ;
  logic _GEN_59;
  logic _GEN_59_T ;
  logic _GEN_60;
  logic _GEN_60_T ;
  logic _GEN_61;
  logic _GEN_61_T ;
  logic _GEN_62;
  logic _GEN_62_T ;
  logic _GEN_68;
  logic _GEN_68_T ;
  logic _GEN_69;
  logic _GEN_69_T ;
  logic _GEN_70;
  logic _GEN_70_T ;
  logic _GEN_71;
  logic _GEN_71_T ;
  logic _GEN_81;
  logic _GEN_81_T ;
  logic _GEN_82;
  logic _GEN_82_T ;
  logic _T;
  logic  _T_T ;
  logic  _T_TZ ;
  logic  _T_PREV_VAL1 ;
  logic  _T_PREV_VAL2 ;
  assign _T_T = _T_TZ | { 1{ YZC[0] && _T != 0 }} ;
  logic _T_1;
  logic _T_1_T ;
  logic _T_12;
  logic _T_12_T ;
  logic _T_13;
  logic _T_13_T ;
  logic _T_14;
  logic _T_14_T ;
  logic _T_15;
  logic _T_15_T ;
  logic _T_18;
  logic _T_18_T ;
  logic _T_2;
  logic _T_2_T ;
  logic _T_20;
  logic _T_20_T ;
  logic _T_22;
  logic _T_22_T ;
  logic _T_24;
  logic _T_24_T ;
  logic _T_27;
  logic _T_27_T ;
  logic _T_29;
  logic _T_29_T ;
  logic _T_3;
  logic  _T_3_T ;
  logic  _T_3_TZ ;
  logic  _T_3_PREV_VAL1 ;
  logic  _T_3_PREV_VAL2 ;
  assign _T_3_T = _T_3_TZ | { 1{ YZC[1] && _T_3 != 0 }} ;
  logic _T_31;
  logic _T_31_T ;
  logic _T_33;
  logic _T_33_T ;
  logic _T_35;
  logic _T_35_T ;
  logic _T_37;
  logic _T_37_T ;
  logic _T_39;
  logic _T_39_T ;
  logic _T_4;
  logic _T_4_T ;
  logic _T_41;
  logic _T_41_T ;
  logic _T_43;
  logic _T_43_T ;
  logic _T_45;
  logic _T_45_T ;
  logic _T_47;
  logic _T_47_T ;
  logic _T_49;
  logic _T_49_T ;
  logic _T_5;
  logic _T_5_T ;
  logic _T_51;
  logic _T_51_T ;
  logic _T_53;
  logic _T_53_T ;
  logic _T_55;
  logic _T_55_T ;
  logic _T_57;
  logic _T_57_T ;
  logic _T_62;
  logic _T_62_T ;
  logic _T_65;
  logic _T_65_T ;
  logic _T_66;
  logic _T_66_T ;
  logic _T_67;
  logic _T_67_T ;
  logic _T_71;
  logic _T_71_T ;
  logic _T_72;
  logic _T_72_T ;
  logic _T_77;
  logic _T_77_T ;
  logic _T_80;
  logic _T_80_T ;
  logic _T_81;
  logic _T_81_T ;
  logic _T_82;
  logic _T_82_T ;
  logic _T_83;
  logic _T_83_T ;
  logic [127:0] _T_85;
  logic [127:0] _T_85_T ;
  logic _T_86;
  logic _T_86_T ;
  logic [127:0] _T_88;
  logic [127:0] _T_88_T ;
  logic _T_89;
  logic _T_89_T ;
  logic [127:0] _T_91;
  logic [127:0] _T_91_T ;
  logic accel_clock;
  logic accel_clock_T ;
  logic accel_io_aes256;
  logic accel_io_aes256_T ;
  logic [127:0] accel_io_decDataIn;
  logic [127:0] accel_io_decDataIn_T ;
  logic [127:0] accel_io_decDataOut;
  logic [127:0] accel_io_decDataOut_T ;
  logic accel_io_decDataValid;
  logic accel_io_decDataValid_T ;
  logic [127:0] accel_io_decIvIn;
  logic [127:0] accel_io_decIvIn_T ;
  logic [127:0] accel_io_decIvOut;
  logic [127:0] accel_io_decIvOut_T ;
  logic accel_io_decOutputValid;
  logic accel_io_decOutputValid_T ;
  logic accel_io_decReady;
  logic accel_io_decReady_T ;
  logic [127:0] accel_io_encDataIn;
  logic [127:0] accel_io_encDataIn_T ;
  logic [127:0] accel_io_encDataOut;
  logic [127:0] accel_io_encDataOut_T ;
  logic accel_io_encDataValid;
  logic accel_io_encDataValid_T ;
  logic [127:0] accel_io_encIvIn;
  logic [127:0] accel_io_encIvIn_T ;
  logic [127:0] accel_io_encIvOut;
  logic [127:0] accel_io_encIvOut_T ;
  logic accel_io_encOutputValid;
  logic accel_io_encOutputValid_T ;
  logic accel_io_encReady;
  logic accel_io_encReady_T ;
  logic [127:0] accel_io_keyIn;
  logic [127:0] accel_io_keyIn_T ;
  logic accel_io_keyShift;
  logic accel_io_keyShift_T ;
  logic accel_io_keyValid;
  logic accel_io_keyValid_T ;
  logic accel_reset;
  logic accel_reset_T ;
  logic ack;
  logic  ack_T ;
  logic  ack_TZ ;
  logic  ack_PREV_VAL1 ;
  logic  ack_PREV_VAL2 ;
  assign ack_T = ack_TZ | { 1{ YZC[2] && ack != 0 }} ;
  logic aes256Mode;
  logic  aes256Mode_T ;
  logic  aes256Mode_TZ ;
  logic  aes256Mode_PREV_VAL1 ;
  logic  aes256Mode_PREV_VAL2 ;
  assign aes256Mode_T = aes256Mode_TZ | { 1{ YZC[3] && aes256Mode != 0 }} ;
  logic cbcMode;
  logic  cbcMode_T ;
  logic  cbcMode_TZ ;
  logic  cbcMode_PREV_VAL1 ;
  logic  cbcMode_PREV_VAL2 ;
  assign cbcMode_T = cbcMode_TZ | { 1{ YZC[4] && cbcMode != 0 }} ;
  input clock;
  logic [127:0] dataReg;
  logic [127:0]  dataReg_T ;
  logic [127:0]  dataReg_TZ ;
  logic [127:0]  dataReg_PREV_VAL1 ;
  logic [127:0]  dataReg_PREV_VAL2 ;
  assign dataReg_T = dataReg_TZ | { 128{ YZC[5] && dataReg != 0 }} ;
  logic [31:0] data_rd;
  logic [31:0]  data_rd_T ;
  logic [31:0]  data_rd_TZ ;
  logic [31:0]  data_rd_PREV_VAL1 ;
  logic [31:0]  data_rd_PREV_VAL2 ;
  assign data_rd_T = data_rd_TZ | { 32{ YZC[6] && data_rd != 0 }} ;
  output io_bus_ack;
  logic io_bus_ack ;
  output io_bus_ack_T ;
  logic io_bus_ack_T ;
  input [31:0] io_bus_addr;
  input [31:0] io_bus_addr_T ;
  input io_bus_cyc;
  input io_bus_cyc_T ;
  output [31:0] io_bus_data_rd;
  logic [31:0] io_bus_data_rd ;
  output [31:0] io_bus_data_rd_T ;
  logic [31:0] io_bus_data_rd_T ;
  input [31:0] io_bus_data_wr;
  input [31:0] io_bus_data_wr_T ;
  input [3:0] io_bus_sel;
  input [3:0] io_bus_sel_T ;
  input io_bus_stb;
  input io_bus_stb_T ;
  input io_bus_we;
  input io_bus_we_T ;
  logic [127:0] iv;
  logic [127:0]  iv_T ;
  logic [127:0]  iv_TZ ;
  logic [127:0]  iv_PREV_VAL1 ;
  logic [127:0]  iv_PREV_VAL2 ;
  assign iv_T = iv_TZ | { 128{ YZC[7] && iv != 0 }} ;
  logic [127:0] key;
  logic [127:0]  key_T ;
  logic [127:0]  key_TZ ;
  logic [127:0]  key_PREV_VAL1 ;
  logic [127:0]  key_PREV_VAL2 ;
  assign key_T = key_TZ | { 128{ YZC[8] && key != 0 }} ;
  logic keyShift;
  logic  keyShift_T ;
  logic  keyShift_TZ ;
  logic  keyShift_PREV_VAL1 ;
  logic  keyShift_PREV_VAL2 ;
  assign keyShift_T = keyShift_TZ | { 1{ YZC[9] && keyShift != 0 }} ;
  logic keyUpdated;
  logic  keyUpdated_T ;
  logic  keyUpdated_TZ ;
  logic  keyUpdated_PREV_VAL1 ;
  logic  keyUpdated_PREV_VAL2 ;
  assign keyUpdated_T = keyUpdated_TZ | { 1{ YZC[10] && keyUpdated != 0 }} ;
  logic [127:0] out;
  logic [127:0]  out_T ;
  logic [127:0]  out_TZ ;
  logic [127:0]  out_PREV_VAL1 ;
  logic [127:0]  out_PREV_VAL2 ;
  assign out_T = out_TZ | { 128{ YZC[11] && out != 0 }} ;
  logic outValid;
  logic  outValid_T ;
  logic  outValid_TZ ;
  logic  outValid_PREV_VAL1 ;
  logic  outValid_PREV_VAL2 ;
  assign outValid_T = outValid_TZ | { 1{ YZC[12] && outValid != 0 }} ;
  input reset;
  input reset_T ;
  logic startDec;
  logic startDec_T ;
  logic startEnc;
  logic startEnc_T ;
  logic [4:0] statusReg;
  logic [4:0] statusReg_T ;
  assign _T_2 = accel_io_encOutputValid & _T_1;
  assign _T_2_T = ( accel_io_encOutputValid_T & _T_1 ) | ( _T_1_T & accel_io_encOutputValid ) ;
  assign _T_5 = accel_io_decOutputValid & _T_4;
  assign _T_5_T = ( accel_io_decOutputValid_T & _T_4 ) | ( _T_4_T & accel_io_decOutputValid ) ;
  assign _T_13 = io_bus_cyc & io_bus_stb;
  assign _T_13_T = ( io_bus_cyc_T & io_bus_stb ) | ( io_bus_stb_T & io_bus_cyc ) ;
  assign _T_15 = _T_13 & _T_14;
  assign _T_15_T = ( _T_13_T & _T_14 ) | ( _T_14_T & _T_13 ) ;
  assign _T_65 = io_bus_sel[0] & io_bus_data_wr[0];
  assign _T_65_T = ( io_bus_sel_T [0] & io_bus_data_wr[0] ) | ( io_bus_data_wr_T [0] & io_bus_sel[0] ) ;
  assign _T_66 = _T_65 & accel_io_encReady;
  assign _T_66_T = ( _T_65_T & accel_io_encReady ) | ( accel_io_encReady_T & _T_65 ) ;
  assign _GEN_50 = _T_62 & _T_66;
  assign _GEN_50_T = ( _T_62_T & _T_66 ) | ( _T_66_T & _T_62 ) ;
  assign _GEN_68 = io_bus_we & _GEN_59;
  assign _GEN_68_T = ( io_bus_we_T & _GEN_59 ) | ( _GEN_59_T & io_bus_we ) ;
  assign accel_io_encDataValid = _T_15 & _GEN_68;
  assign accel_io_encDataValid_T = ( _T_15_T & _GEN_68 ) | ( _GEN_68_T & _T_15 ) ;
  assign _T_71 = _T_65 & accel_io_decReady;
  assign _T_71_T = ( _T_65_T & accel_io_decReady ) | ( accel_io_decReady_T & _T_65 ) ;
  assign _GEN_44 = _T_67 & _T_71;
  assign _GEN_44_T = ( _T_67_T & _T_71 ) | ( _T_71_T & _T_67 ) ;
  assign _GEN_69 = io_bus_we & _GEN_60;
  assign _GEN_69_T = ( io_bus_we_T & _GEN_60 ) | ( _GEN_60_T & io_bus_we ) ;
  assign accel_io_decDataValid = _T_15 & _GEN_69;
  assign accel_io_decDataValid_T = ( _T_15_T & _GEN_69 ) | ( _GEN_69_T & _T_15 ) ;
  assign _T_77 = _T_71 & accel_io_encReady;
  assign _T_77_T = ( _T_71_T & accel_io_encReady ) | ( accel_io_encReady_T & _T_71 ) ;
  assign _T_80 = io_bus_sel[0] & io_bus_data_wr[1];
  assign _T_80_T = ( io_bus_sel_T [0] & io_bus_data_wr[1] ) | ( io_bus_data_wr_T [1] & io_bus_sel[0] ) ;
  assign _T_81 = _T_80 & accel_io_decReady;
  assign _T_81_T = ( _T_80_T & accel_io_decReady ) | ( accel_io_decReady_T & _T_80 ) ;
  assign _T_82 = _T_81 & accel_io_encReady;
  assign _T_82_T = ( _T_81_T & accel_io_encReady ) | ( accel_io_encReady_T & _T_81 ) ;
  assign _GEN_39 = _T_72 & _T_77;
  assign _GEN_39_T = ( _T_72_T & _T_77 ) | ( _T_77_T & _T_72 ) ;
  assign _GEN_40 = _T_72 & _T_82;
  assign _GEN_40_T = ( _T_72_T & _T_82 ) | ( _T_82_T & _T_72 ) ;
  assign _GEN_70 = io_bus_we & _GEN_61;
  assign _GEN_70_T = ( io_bus_we_T & _GEN_61 ) | ( _GEN_61_T & io_bus_we ) ;
  assign _GEN_71 = io_bus_we & _GEN_62;
  assign _GEN_71_T = ( io_bus_we_T & _GEN_62 ) | ( _GEN_62_T & io_bus_we ) ;
  assign _GEN_81 = _T_15 & _GEN_70;
  assign _GEN_81_T = ( _T_15_T & _GEN_70 ) | ( _GEN_70_T & _T_15 ) ;
  assign _GEN_82 = _T_15 & _GEN_71;
  assign _GEN_82_T = ( _T_15_T & _GEN_71 ) | ( _GEN_71_T & _T_15 ) ;
  assign _T_57 = ! io_bus_addr[31:2];
  assign _T_57_T = | io_bus_addr_T [31:2] ;
  assign _T_62 = 1'b1 == io_bus_addr[31:2];
  assign _T_62_T = | io_bus_addr_T [31:2] ;
  assign _T_67 = 2'b10 == io_bus_addr[31:2];
  assign _T_67_T = | io_bus_addr_T [31:2] ;
  assign _T_18 = 4'b1100 == io_bus_addr[31:2];
  assign _T_18_T = | io_bus_addr_T [31:2] ;
  assign _T_20 = 4'b1101 == io_bus_addr[31:2];
  assign _T_20_T = | io_bus_addr_T [31:2] ;
  assign _T_22 = 4'b1110 == io_bus_addr[31:2];
  assign _T_22_T = | io_bus_addr_T [31:2] ;
  assign _T_24 = 4'b1111 == io_bus_addr[31:2];
  assign _T_24_T = | io_bus_addr_T [31:2] ;
  assign _T_27 = io_bus_addr[31:2] == 5'b10100;
  assign _T_27_T = | io_bus_addr_T [31:2] ;
  assign _T_29 = io_bus_addr[31:2] == 5'b10101;
  assign _T_29_T = | io_bus_addr_T [31:2] ;
  assign _T_31 = io_bus_addr[31:2] == 5'b10110;
  assign _T_31_T = | io_bus_addr_T [31:2] ;
  assign _T_33 = io_bus_addr[31:2] == 5'b10111;
  assign _T_33_T = | io_bus_addr_T [31:2] ;
  assign _T_35 = io_bus_addr[31:2] == 5'b11000;
  assign _T_35_T = | io_bus_addr_T [31:2] ;
  assign _T_37 = io_bus_addr[31:2] == 5'b11001;
  assign _T_37_T = | io_bus_addr_T [31:2] ;
  assign _T_39 = io_bus_addr[31:2] == 5'b11010;
  assign _T_39_T = | io_bus_addr_T [31:2] ;
  assign _T_41 = io_bus_addr[31:2] == 5'b11011;
  assign _T_41_T = | io_bus_addr_T [31:2] ;
  assign _T_43 = io_bus_addr[31:2] == 5'b11100;
  assign _T_43_T = | io_bus_addr_T [31:2] ;
  assign _T_45 = io_bus_addr[31:2] == 5'b11101;
  assign _T_45_T = | io_bus_addr_T [31:2] ;
  assign _T_47 = io_bus_addr[31:2] == 5'b11110;
  assign _T_47_T = | io_bus_addr_T [31:2] ;
  assign _T_49 = io_bus_addr[31:2] == 5'b11111;
  assign _T_49_T = | io_bus_addr_T [31:2] ;
  assign _T_51 = io_bus_addr[31:2] == 6'b100000;
  assign _T_51_T = | io_bus_addr_T [31:2] ;
  assign _T_53 = io_bus_addr[31:2] == 6'b100001;
  assign _T_53_T = | io_bus_addr_T [31:2] ;
  assign _T_55 = io_bus_addr[31:2] == 6'b100010;
  assign _T_55_T = | io_bus_addr_T [31:2] ;
  assign _T_72 = 2'b11 == io_bus_addr[31:2];
  assign _T_72_T = | io_bus_addr_T [31:2] ;
  assign _T_83 = 3'b100 == io_bus_addr[31:2];
  assign _T_83_T = | io_bus_addr_T [31:2] ;
  assign _T_86 = 4'b1000 == io_bus_addr[31:2];
  assign _T_86_T = | io_bus_addr_T [31:2] ;
  assign _T_89 = 5'b10000 == io_bus_addr[31:2];
  assign _T_89_T = | io_bus_addr_T [31:2] ;
  assign _T_1 = ~ _T;
  assign _T_1_T = _T_T ;
  assign _T_4 = ~ _T_3;
  assign _T_4_T = _T_3_T ;
  assign _T_14 = ~ ack;
  assign _T_14_T = ack_T ;
  assign _GEN_1 = _T_2 | outValid;
  assign _GEN_1_T = ( _T_2_T & ~outValid ) | ( outValid_T & ~_T_2 ) ;
  assign _GEN_4 = _T_5 | _GEN_1;
  assign _GEN_4_T = ( _T_5_T & ~_GEN_1 ) | ( _GEN_1_T & ~_T_5 ) ;
  assign _T_12 = accel_io_encDataValid | accel_io_decDataValid;
  assign _T_12_T = ( accel_io_encDataValid_T & ~accel_io_decDataValid ) | ( accel_io_decDataValid_T & ~accel_io_encDataValid ) ;
  always @(posedge clock)
      _T <= accel_io_encOutputValid;
  always @( posedge clock )
      _T_TZ 		<= rst_zy ? 0 : ( accel_io_encOutputValid_T );
  always @(posedge clock)
      _T_3 <= accel_io_decOutputValid;
  always @( posedge clock )
      _T_3_TZ 		<= rst_zy ? 0 : ( accel_io_decOutputValid_T );
  always @(posedge clock)
      data_rd <= _004_;
  always @( posedge clock )
      data_rd_TZ 		<= rst_zy ? 0 : ( _004__T );
  always @(posedge clock)
      ack <= _000_;
  always @( posedge clock )
      ack_TZ 		<= rst_zy ? 0 : ( _000__T );
  always @(posedge clock)
      cbcMode <= _002_;
  always @( posedge clock )
      cbcMode_TZ 		<= rst_zy ? 0 : ( _002__T );
  always @(posedge clock)
      aes256Mode <= _001_;
  always @( posedge clock )
      aes256Mode_TZ 		<= rst_zy ? 0 : ( _001__T );
  always @(posedge clock)
      iv <= _005_;
  always @( posedge clock )
      iv_TZ 		<= rst_zy ? 0 : ( _005__T );
  always @(posedge clock)
      outValid <= _009_;
  always @( posedge clock )
      outValid_TZ 		<= rst_zy ? 0 : ( _009__T );
  always @(posedge clock)
      out <= _010_;
  always @( posedge clock )
      out_TZ 		<= rst_zy ? 0 : ( _010__T );
  always @(posedge clock)
      dataReg <= _003_;
  always @( posedge clock )
      dataReg_TZ 		<= rst_zy ? 0 : ( _003__T );
  always @(posedge clock)
      key <= _008_;
  always @( posedge clock )
      key_TZ 		<= rst_zy ? 0 : ( _008__T );
  always @(posedge clock)
      keyUpdated <= _007_;
  always @( posedge clock )
      keyUpdated_TZ 		<= rst_zy ? 0 : ( _007__T );
  always @(posedge clock)
      keyShift <= _006_;
  always @( posedge clock )
      keyShift_TZ 		<= rst_zy ? 0 : ( _006__T );
  assign _006_ = reset ? 1'b0 : _GEN_82;
  assign _006__T = reset ? { 1{ | reset_T  }} : ( { 1{ | reset_T  }} | _GEN_82_T );
  assign _007_ = reset ? 1'b0 : _GEN_81;
  assign _007__T = reset ? { 1{ | reset_T  }} : ( { 1{ | reset_T  }} | _GEN_81_T );
  logic [127:0] addedVar0;
  logic [127:0] addedVar0_T ;
  assign addedVar0 = { key[95:0], io_bus_data_wr };
  assign addedVar0_T = {  key_T [95:0] , io_bus_data_wr_T  };
  assign _011_ = _T_89 ? addedVar0 : key;
  assign _011__T = _T_89 ? ( { 128{ _T_89_T  }} | addedVar0_T ) : ( { 128{ _T_89_T  }} | key_T );
  assign _012_ = _T_86 ? key : _011_;
  assign _012__T = _T_86 ? ( { 128{ _T_86_T  }} | key_T ) : ( { 128{ _T_86_T  }} | _011__T );
  assign _013_ = _T_83 ? key : _012_;
  assign _013__T = _T_83 ? ( { 128{ _T_83_T  }} | key_T ) : ( { 128{ _T_83_T  }} | _012__T );
  assign _014_ = _T_72 ? key : _013_;
  assign _014__T = _T_72 ? ( { 128{ _T_72_T  }} | key_T ) : ( { 128{ _T_72_T  }} | _013__T );
  assign _015_ = _T_67 ? key : _014_;
  assign _015__T = _T_67 ? ( { 128{ _T_67_T  }} | key_T ) : ( { 128{ _T_67_T  }} | _014__T );
  assign _016_ = _T_62 ? key : _015_;
  assign _016__T = _T_62 ? ( { 128{ _T_62_T  }} | key_T ) : ( { 128{ _T_62_T  }} | _015__T );
  assign _017_ = _T_57 ? key : _016_;
  assign _017__T = _T_57 ? ( { 128{ _T_57_T  }} | key_T ) : ( { 128{ _T_57_T  }} | _016__T );
  assign _018_ = io_bus_we ? _017_ : key;
  assign _018__T = io_bus_we ? ( { 128{ io_bus_we_T  }} | _017__T ) : ( { 128{ io_bus_we_T  }} | key_T );
  assign _008_ = _T_15 ? _018_ : key;
  assign _008__T = _T_15 ? ( { 128{ _T_15_T  }} | _018__T ) : ( { 128{ _T_15_T  }} | key_T );
  logic [127:0] addedVar1;
  logic [127:0] addedVar1_T ;
  assign addedVar1 = { dataReg[95:0], io_bus_data_wr };
  assign addedVar1_T = {  dataReg_T [95:0] , io_bus_data_wr_T  };
  assign _019_ = _T_83 ? addedVar1 : dataReg;
  assign _019__T = _T_83 ? ( { 128{ _T_83_T  }} | addedVar1_T ) : ( { 128{ _T_83_T  }} | dataReg_T );
  assign _020_ = _T_72 ? dataReg : _019_;
  assign _020__T = _T_72 ? ( { 128{ _T_72_T  }} | dataReg_T ) : ( { 128{ _T_72_T  }} | _019__T );
  assign _021_ = _T_67 ? dataReg : _020_;
  assign _021__T = _T_67 ? ( { 128{ _T_67_T  }} | dataReg_T ) : ( { 128{ _T_67_T  }} | _020__T );
  assign _022_ = _T_62 ? dataReg : _021_;
  assign _022__T = _T_62 ? ( { 128{ _T_62_T  }} | dataReg_T ) : ( { 128{ _T_62_T  }} | _021__T );
  assign _023_ = _T_57 ? dataReg : _022_;
  assign _023__T = _T_57 ? ( { 128{ _T_57_T  }} | dataReg_T ) : ( { 128{ _T_57_T  }} | _022__T );
  assign _024_ = io_bus_we ? _023_ : dataReg;
  assign _024__T = io_bus_we ? ( { 128{ io_bus_we_T  }} | _023__T ) : ( { 128{ io_bus_we_T  }} | dataReg_T );
  assign _003_ = _T_15 ? _024_ : dataReg;
  assign _003__T = _T_15 ? ( { 128{ _T_15_T  }} | _024__T ) : ( { 128{ _T_15_T  }} | dataReg_T );
  assign _025_ = _T_2 ? accel_io_encDataOut : out;
  assign _025__T = _T_2 ? ( { 128{ _T_2_T  }} | accel_io_encDataOut_T ) : ( { 128{ _T_2_T  }} | out_T );
  assign _010_ = _T_5 ? accel_io_decDataOut : _025_;
  assign _010__T = _T_5 ? ( { 128{ _T_5_T  }} | accel_io_decDataOut_T ) : ( { 128{ _T_5_T  }} | _025__T );
  assign _026_ = _T_12 ? 1'b0 : _GEN_4;
  assign _026__T = _T_12 ? { 1{ | _T_12_T  }} : ( { 1{ | _T_12_T  }} | _GEN_4_T );
  assign _009_ = reset ? 1'b0 : _026_;
  assign _009__T = reset ? { 1{ | reset_T  }} : ( { 1{ | reset_T  }} | _026__T );
  logic [127:0] addedVar2;
  logic [127:0] addedVar2_T ;
  assign addedVar2 = { iv[95:0], io_bus_data_wr };
  assign addedVar2_T = {  iv_T [95:0] , io_bus_data_wr_T  };
  assign _027_ = _T_86 ? addedVar2 : _GEN_5;
  assign _027__T = _T_86 ? ( { 128{ _T_86_T  }} | addedVar2_T ) : ( { 128{ _T_86_T  }} | _GEN_5_T );
  assign _028_ = _T_83 ? _GEN_5 : _027_;
  assign _028__T = _T_83 ? ( { 128{ _T_83_T  }} | _GEN_5_T ) : ( { 128{ _T_83_T  }} | _027__T );
  assign _GEN_2 = _T_2 ? accel_io_encIvOut : iv;
  assign _GEN_2_T = _T_2 ? ( { 128{ _T_2_T  }} | accel_io_encIvOut_T ) : ( { 128{ _T_2_T  }} | iv_T );
  assign _GEN_5 = _T_5 ? accel_io_decIvOut : _GEN_2;
  assign _GEN_5_T = _T_5 ? ( { 128{ _T_5_T  }} | accel_io_decIvOut_T ) : ( { 128{ _T_5_T  }} | _GEN_2_T );
  assign _029_ = _T_72 ? _GEN_5 : _028_;
  assign _029__T = _T_72 ? ( { 128{ _T_72_T  }} | _GEN_5_T ) : ( { 128{ _T_72_T  }} | _028__T );
  assign _030_ = _T_67 ? _GEN_5 : _029_;
  assign _030__T = _T_67 ? ( { 128{ _T_67_T  }} | _GEN_5_T ) : ( { 128{ _T_67_T  }} | _029__T );
  assign _031_ = _T_62 ? _GEN_5 : _030_;
  assign _031__T = _T_62 ? ( { 128{ _T_62_T  }} | _GEN_5_T ) : ( { 128{ _T_62_T  }} | _030__T );
  assign _032_ = _T_57 ? _GEN_5 : _031_;
  assign _032__T = _T_57 ? ( { 128{ _T_57_T  }} | _GEN_5_T ) : ( { 128{ _T_57_T  }} | _031__T );
  assign _033_ = io_bus_we ? _032_ : _GEN_5;
  assign _033__T = io_bus_we ? ( { 128{ io_bus_we_T  }} | _032__T ) : ( { 128{ io_bus_we_T  }} | _GEN_5_T );
  assign _005_ = _T_15 ? _033_ : _GEN_5;
  assign _005__T = _T_15 ? ( { 128{ _T_15_T  }} | _033__T ) : ( { 128{ _T_15_T  }} | _GEN_5_T );
  assign _034_ = io_bus_sel[0] ? io_bus_data_wr[4] : aes256Mode;
  assign _034__T = io_bus_sel[0] ? ( { 1{ io_bus_sel_T  [0] }} | io_bus_data_wr_T [4] ) : ( { 1{ io_bus_sel_T  [0] }} | aes256Mode_T );
  assign _035_ = _T_57 ? _034_ : aes256Mode;
  assign _035__T = _T_57 ? ( { 1{ _T_57_T  }} | _034__T ) : ( { 1{ _T_57_T  }} | aes256Mode_T );
  assign _036_ = io_bus_we ? _035_ : aes256Mode;
  assign _036__T = io_bus_we ? ( { 1{ io_bus_we_T  }} | _035__T ) : ( { 1{ io_bus_we_T  }} | aes256Mode_T );
  assign _037_ = _T_15 ? _036_ : aes256Mode;
  assign _037__T = _T_15 ? ( { 1{ _T_15_T  }} | _036__T ) : ( { 1{ _T_15_T  }} | aes256Mode_T );
  assign _001_ = reset ? 1'b0 : _037_;
  assign _001__T = reset ? { 1{ | reset_T  }} : ( { 1{ | reset_T  }} | _037__T );
  assign _038_ = io_bus_sel[0] ? io_bus_data_wr[3] : cbcMode;
  assign _038__T = io_bus_sel[0] ? ( { 1{ io_bus_sel_T  [0] }} | io_bus_data_wr_T [3] ) : ( { 1{ io_bus_sel_T  [0] }} | cbcMode_T );
  assign _039_ = _T_57 ? _038_ : cbcMode;
  assign _039__T = _T_57 ? ( { 1{ _T_57_T  }} | _038__T ) : ( { 1{ _T_57_T  }} | cbcMode_T );
  assign _040_ = io_bus_we ? _039_ : cbcMode;
  assign _040__T = io_bus_we ? ( { 1{ io_bus_we_T  }} | _039__T ) : ( { 1{ io_bus_we_T  }} | cbcMode_T );
  assign _041_ = _T_15 ? _040_ : cbcMode;
  assign _041__T = _T_15 ? ( { 1{ _T_15_T  }} | _040__T ) : ( { 1{ _T_15_T  }} | cbcMode_T );
  assign _002_ = reset ? 1'b0 : _041_;
  assign _002__T = reset ? { 1{ | reset_T  }} : ( { 1{ | reset_T  }} | _041__T );
  assign _000_ = reset ? 1'b0 : _T_15;
  assign _000__T = reset ? { 1{ | reset_T  }} : ( { 1{ | reset_T  }} | _T_15_T );
  assign _042_ = _T_24 ? out[31:0] : 32'd0;
  assign _042__T = _T_24 ? ( { 32{ | _T_24_T  }} | out_T [31:0] ) : { 32{ | _T_24_T  }};
  assign _043_ = _T_22 ? out[63:32] : _042_;
  assign _043__T = _T_22 ? ( { 32{ _T_22_T  }} | out_T [63:32] ) : ( { 32{ _T_22_T  }} | _042__T );
  assign _044_ = _T_20 ? out[95:64] : _043_;
  assign _044__T = _T_20 ? ( { 32{ _T_20_T  }} | out_T [95:64] ) : ( { 32{ _T_20_T  }} | _043__T );
  assign _045_ = _T_18 ? out[127:96] : _044_;
  assign _045__T = _T_18 ? ( { 32{ _T_18_T  }} | out_T [127:96] ) : ( { 32{ _T_18_T  }} | _044__T );
  logic [31:0] addedVar3;
  logic [31:0] addedVar3_T ;
  assign addedVar3 = { 27'b000000000000000000000000000, aes256Mode, cbcMode, outValid, accel_io_encReady, accel_io_decReady };
  assign addedVar3_T = {  27'h0 , aes256Mode_T , cbcMode_T , outValid_T , accel_io_encReady_T , accel_io_decReady_T  };
  assign _046_ = _T_57 ? addedVar3 : _045_;
  assign _046__T = _T_57 ? ( { 32{ _T_57_T  }} | addedVar3_T ) : ( { 32{ _T_57_T  }} | _045__T );
  assign _047_ = _T_27 ? 32'd827540801 : _046_;
  assign _047__T = _T_27 ? { 32{ | _T_27_T  }} : ( { 32{ | _T_27_T  }} | _046__T );
  assign _048_ = _T_29 ? 32'd841955378 : _047_;
  assign _048__T = _T_29 ? { 32{ | _T_29_T  }} : ( { 32{ | _T_29_T  }} | _047__T );
  assign _049_ = _T_31 ? 32'd1126184501 : _048_;
  assign _049__T = _T_31 ? { 32{ | _T_31_T  }} : ( { 32{ | _T_31_T  }} | _048__T );
  assign _050_ = _T_33 ? 32'd543519343 : _049_;
  assign _050__T = _T_33 ? { 32{ | _T_33_T  }} : ( { 32{ | _T_33_T  }} | _049__T );
  assign _051_ = _T_35 ? 32'd1092647266 : _050_;
  assign _051__T = _T_35 ? { 32{ | _T_35_T  }} : ( { 32{ | _T_35_T  }} | _050__T );
  assign _052_ = _T_37 ? 32'd1752394094 : _051_;
  assign _052__T = _T_37 ? { 32{ | _T_37_T  }} : ( { 32{ | _T_37_T  }} | _051__T );
  assign _053_ = _T_39 ? 32'd1852396320 : _052_;
  assign _053__T = _T_39 ? { 32{ | _T_39_T  }} : ( { 32{ | _T_39_T  }} | _052__T );
  assign _054_ = _T_41 ? 32'd1851877479 : _053_;
  assign _054__T = _T_41 ? { 32{ | _T_41_T  }} : ( { 32{ | _T_41_T  }} | _053__T );
  assign _055_ = _T_43 ? 32'd824713321 : _054_;
  assign _055__T = _T_43 ? { 32{ | _T_43_T  }} : ( { 32{ | _T_43_T  }} | _054__T );
  assign _056_ = _T_45 ? 32'd892415794 : _055_;
  assign _056__T = _T_45 ? { 32{ | _T_45_T  }} : ( { 32{ | _T_45_T  }} | _055__T );
  assign _057_ = _T_47 ? 32'd842019375 : _056_;
  assign _057__T = _T_47 ? { 32{ | _T_47_T  }} : ( { 32{ | _T_47_T  }} | _056__T );
  assign _058_ = _T_49 ? 32'd942743600 : _057_;
  assign _058__T = _T_49 ? { 32{ | _T_49_T  }} : ( { 32{ | _T_49_T  }} | _057__T );
  assign _059_ = _T_51 ? 32'd540226106 : _058_;
  assign _059__T = _T_51 ? { 32{ | _T_51_T  }} : ( { 32{ | _T_51_T  }} | _058__T );
  assign _060_ = _T_53 ? 32'd693392208 : _059_;
  assign _060__T = _T_53 ? { 32{ | _T_53_T  }} : ( { 32{ | _T_53_T  }} | _059__T );
  assign _061_ = _T_55 ? 32'd2105376 : _060_;
  assign _061__T = _T_55 ? { 32{ | _T_55_T  }} : ( { 32{ | _T_55_T  }} | _060__T );
  assign _062_ = _T_15 ? _061_ : data_rd;
  assign _062__T = _T_15 ? ( { 32{ _T_15_T  }} | _061__T ) : ( { 32{ _T_15_T  }} | data_rd_T );
  assign _004_ = reset ? 32'd0 : _062_;
  assign _004__T = reset ? { 32{ | reset_T  }} : ( { 32{ | reset_T  }} | _062__T );
  assign _GEN_59 = _T_57 ? 1'b0 : _GEN_50;
  assign _GEN_59_T = _T_57 ? { 1{ | _T_57_T  }} : ( { 1{ | _T_57_T  }} | _GEN_50_T );
  assign _GEN_51 = _T_62 ? 1'b0 : _GEN_44;
  assign _GEN_51_T = _T_62 ? { 1{ | _T_62_T  }} : ( { 1{ | _T_62_T  }} | _GEN_44_T );
  assign _GEN_60 = _T_57 ? 1'b0 : _GEN_51;
  assign _GEN_60_T = _T_57 ? { 1{ | _T_57_T  }} : ( { 1{ | _T_57_T  }} | _GEN_51_T );
  assign _GEN_45 = _T_67 ? 1'b0 : _GEN_39;
  assign _GEN_45_T = _T_67 ? { 1{ | _T_67_T  }} : ( { 1{ | _T_67_T  }} | _GEN_39_T );
  assign _GEN_46 = _T_67 ? 1'b0 : _GEN_40;
  assign _GEN_46_T = _T_67 ? { 1{ | _T_67_T  }} : ( { 1{ | _T_67_T  }} | _GEN_40_T );
  assign _GEN_52 = _T_62 ? 1'b0 : _GEN_45;
  assign _GEN_52_T = _T_62 ? { 1{ | _T_62_T  }} : ( { 1{ | _T_62_T  }} | _GEN_45_T );
  assign _GEN_53 = _T_62 ? 1'b0 : _GEN_46;
  assign _GEN_53_T = _T_62 ? { 1{ | _T_62_T  }} : ( { 1{ | _T_62_T  }} | _GEN_46_T );
  assign _GEN_61 = _T_57 ? 1'b0 : _GEN_52;
  assign _GEN_61_T = _T_57 ? { 1{ | _T_57_T  }} : ( { 1{ | _T_57_T  }} | _GEN_52_T );
  assign _GEN_62 = _T_57 ? 1'b0 : _GEN_53;
  assign _GEN_62_T = _T_57 ? { 1{ | _T_57_T  }} : ( { 1{ | _T_57_T  }} | _GEN_53_T );
  assign accel_io_decIvIn = cbcMode ? iv : 128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
  assign accel_io_decIvIn_T = cbcMode ? ( { 128{ | cbcMode_T  }} | iv_T ) : { 128{ | cbcMode_T  }};
// module: AesCombined
  AesCombined accel (
    .YZC(YZC[64:13]),
    .io_aes256_T (  aes256Mode_T  ),
    .io_decDataIn_T (  dataReg_T  ),
    .io_decDataValid_T (  accel_io_decDataValid_T  ),
    .io_decIvIn_T (  accel_io_decIvIn_T  ),
    .io_encDataIn_T (  dataReg_T  ),
    .io_encDataValid_T (  accel_io_encDataValid_T  ),
    .io_encIvIn_T (  accel_io_decIvIn_T  ),
    .io_keyIn_T (  key_T  ),
    .io_keyShift_T (  keyShift_T  ),
    .io_keyValid_T (  keyUpdated_T  ),
    .reset_T (  reset_T  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .rst_zy(rst_zy),
    .io_decDataOut_T (  accel_io_decDataOut_T  ),
    .io_decIvOut_T (  accel_io_decIvOut_T  ),
    .io_decOutputValid_T (  accel_io_decOutputValid_T  ),
    .io_decReady_T (  accel_io_decReady_T  ),
    .io_encDataOut_T (  accel_io_encDataOut_T  ),
    .io_encIvOut_T (  accel_io_encIvOut_T  ),
    .io_encOutputValid_T (  accel_io_encOutputValid_T  ),
    .io_encReady_T (  accel_io_encReady_T  ),
    .reset ( reset ),
    .io_keyValid ( keyUpdated ),
    .io_keyShift ( keyShift ),
    .io_keyIn ( key ),
    .io_encReady ( accel_io_encReady ),
    .io_encOutputValid ( accel_io_encOutputValid ),
    .io_aes256 ( aes256Mode ),
    .io_decDataIn ( dataReg ),
    .clock ( clock ),
    .io_decDataOut ( accel_io_decDataOut ),
    .io_encDataValid ( accel_io_encDataValid ),
    .io_decDataValid ( accel_io_decDataValid ),
    .io_encDataOut ( accel_io_encDataOut ),
    .io_decOutputValid ( accel_io_decOutputValid ),
    .io_decIvOut ( accel_io_decIvOut ),
    .io_decReady ( accel_io_decReady ),
    .io_encIvOut ( accel_io_encIvOut ),
    .io_encDataIn ( dataReg ),
    .io_decIvIn ( accel_io_decIvIn ),
    .io_encIvIn ( accel_io_decIvIn )
  );
  assign _T_85 = { dataReg[95:0], io_bus_data_wr };
  assign _T_85_T = {  dataReg_T [95:0] , io_bus_data_wr_T  };
  assign _T_88 = { iv[95:0], io_bus_data_wr };
  assign _T_88_T = {  iv_T [95:0] , io_bus_data_wr_T  };
  assign _T_91 = { key[95:0], io_bus_data_wr };
  assign _T_91_T = {  key_T [95:0] , io_bus_data_wr_T  };
  assign accel_clock = clock;
  assign accel_clock_T = clock_T ;
  assign accel_io_aes256 = aes256Mode;
  assign accel_io_aes256_T = aes256Mode_T ;
  assign accel_io_decDataIn = dataReg;
  assign accel_io_decDataIn_T = dataReg_T ;
  assign accel_io_encDataIn = dataReg;
  assign accel_io_encDataIn_T = dataReg_T ;
  assign accel_io_encIvIn = accel_io_decIvIn;
  assign accel_io_encIvIn_T = accel_io_decIvIn_T ;
  assign accel_io_keyIn = key;
  assign accel_io_keyIn_T = key_T ;
  assign accel_io_keyShift = keyShift;
  assign accel_io_keyShift_T = keyShift_T ;
  assign accel_io_keyValid = keyUpdated;
  assign accel_io_keyValid_T = keyUpdated_T ;
  assign accel_reset = reset;
  assign accel_reset_T = reset_T ;
  assign io_bus_ack = ack;
  assign io_bus_ack_T = ack_T ;
  assign io_bus_data_rd = data_rd;
  assign io_bus_data_rd_T = data_rd_T ;
  assign startDec = accel_io_decDataValid;
  assign startDec_T = accel_io_decDataValid_T ;
  assign startEnc = accel_io_encDataValid;
  assign startEnc_T = accel_io_encDataValid_T ;
  assign statusReg = { aes256Mode, cbcMode, outValid, accel_io_encReady, accel_io_decReady };
  assign statusReg_T = {  aes256Mode_T , cbcMode_T , outValid_T , accel_io_encReady_T , accel_io_decReady_T  };
endmodule
