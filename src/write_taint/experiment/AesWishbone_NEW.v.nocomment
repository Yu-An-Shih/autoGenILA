module AesWishbone(clock, reset, io_bus_cyc, io_bus_stb, io_bus_we, io_bus_sel, io_bus_addr, io_bus_data_wr, io_bus_ack, io_bus_data_rd);
  wire _000_;
  wire _001_;
  wire _002_;
  wire [127:0] _003_;
  wire [31:0] _004_;
  wire [127:0] _005_;
  wire _006_;
  wire _007_;
  wire [127:0] _008_;
  wire _009_;
  wire [127:0] _010_;
  wire [127:0] _011_;
  wire [127:0] _012_;
  wire [127:0] _013_;
  wire [127:0] _014_;
  wire [127:0] _015_;
  wire [127:0] _016_;
  wire [127:0] _017_;
  wire [127:0] _018_;
  wire [127:0] _019_;
  wire [127:0] _020_;
  wire [127:0] _021_;
  wire [127:0] _022_;
  wire [127:0] _023_;
  wire [127:0] _024_;
  wire [127:0] _025_;
  wire _026_;
  wire [127:0] _027_;
  wire [127:0] _028_;
  wire [127:0] _029_;
  wire [127:0] _030_;
  wire [127:0] _031_;
  wire [127:0] _032_;
  wire [127:0] _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire [31:0] _042_;
  wire [31:0] _043_;
  wire [31:0] _044_;
  wire [31:0] _045_;
  wire [31:0] _046_;
  wire [31:0] _047_;
  wire [31:0] _048_;
  wire [31:0] _049_;
  wire [31:0] _050_;
  wire [31:0] _051_;
  wire [31:0] _052_;
  wire [31:0] _053_;
  wire [31:0] _054_;
  wire [31:0] _055_;
  wire [31:0] _056_;
  wire [31:0] _057_;
  wire [31:0] _058_;
  wire [31:0] _059_;
  wire [31:0] _060_;
  wire [31:0] _061_;
  wire [31:0] _062_;
  wire _GEN_1;
  wire [127:0] _GEN_2;
  wire _GEN_39;
  wire _GEN_4;
  wire _GEN_40;
  wire _GEN_44;
  wire _GEN_45;
  wire _GEN_46;
  wire [127:0] _GEN_5;
  wire _GEN_50;
  wire _GEN_51;
  wire _GEN_52;
  wire _GEN_53;
  wire _GEN_59;
  wire _GEN_60;
  wire _GEN_61;
  wire _GEN_62;
  wire _GEN_68;
  wire _GEN_69;
  wire _GEN_70;
  wire _GEN_71;
  wire _GEN_81;
  wire _GEN_82;
  reg _T;
  wire _T_1;
  wire _T_12;
  wire _T_13;
  wire _T_14;
  wire _T_15;
  wire _T_18;
  wire _T_2;
  wire _T_20;
  wire _T_22;
  wire _T_24;
  wire _T_27;
  wire _T_29;
  reg _T_3;
  wire _T_31;
  wire _T_33;
  wire _T_35;
  wire _T_37;
  wire _T_39;
  wire _T_4;
  wire _T_41;
  wire _T_43;
  wire _T_45;
  wire _T_47;
  wire _T_49;
  wire _T_5;
  wire _T_51;
  wire _T_53;
  wire _T_55;
  wire _T_57;
  wire _T_62;
  wire _T_65;
  wire _T_66;
  wire _T_67;
  wire _T_71;
  wire _T_72;
  wire _T_77;
  wire _T_80;
  wire _T_81;
  wire _T_82;
  wire _T_83;
  wire [127:0] _T_85;
  wire _T_86;
  wire [127:0] _T_88;
  wire _T_89;
  wire [127:0] _T_91;
  wire accel_clock;
  wire accel_io_aes256;
  wire [127:0] accel_io_decDataIn;
  wire [127:0] accel_io_decDataOut;
  wire accel_io_decDataValid;
  wire [127:0] accel_io_decIvIn;
  wire [127:0] accel_io_decIvOut;
  wire accel_io_decOutputValid;
  wire accel_io_decReady;
  wire [127:0] accel_io_encDataIn;
  wire [127:0] accel_io_encDataOut;
  wire accel_io_encDataValid;
  wire [127:0] accel_io_encIvIn;
  wire [127:0] accel_io_encIvOut;
  wire accel_io_encOutputValid;
  wire accel_io_encReady;
  wire [127:0] accel_io_keyIn;
  wire accel_io_keyShift;
  wire accel_io_keyValid;
  wire accel_reset;
  reg ack;
  reg aes256Mode;
  reg cbcMode;
  input clock;
  reg [127:0] dataReg;
  reg [31:0] data_rd;
  output io_bus_ack;
  input [31:0] io_bus_addr;
  input io_bus_cyc;
  output [31:0] io_bus_data_rd;
  input [31:0] io_bus_data_wr;
  input [3:0] io_bus_sel;
  input io_bus_stb;
  input io_bus_we;
  reg [127:0] iv;
  reg [127:0] key;
  reg keyShift;
  reg keyUpdated;
  reg [127:0] out;
  reg outValid;
  input reset;
  wire startDec;
  wire startEnc;
  wire [4:0] statusReg;
  assign _T_2 = accel_io_encOutputValid & _T_1;
  assign _T_5 = accel_io_decOutputValid & _T_4;
  assign _T_13 = io_bus_cyc & io_bus_stb;
  assign _T_15 = _T_13 & _T_14;
  assign _T_65 = io_bus_sel[0] & io_bus_data_wr[0];
  assign _T_66 = _T_65 & accel_io_encReady;
  assign _GEN_50 = _T_62 & _T_66;
  assign _GEN_68 = io_bus_we & _GEN_59;
  assign accel_io_encDataValid = _T_15 & _GEN_68;
  assign _T_71 = _T_65 & accel_io_decReady;
  assign _GEN_44 = _T_67 & _T_71;
  assign _GEN_69 = io_bus_we & _GEN_60;
  assign accel_io_decDataValid = _T_15 & _GEN_69;
  assign _T_77 = _T_71 & accel_io_encReady;
  assign _T_80 = io_bus_sel[0] & io_bus_data_wr[1];
  assign _T_81 = _T_80 & accel_io_decReady;
  assign _T_82 = _T_81 & accel_io_encReady;
  assign _GEN_39 = _T_72 & _T_77;
  assign _GEN_40 = _T_72 & _T_82;
  assign _GEN_70 = io_bus_we & _GEN_61;
  assign _GEN_71 = io_bus_we & _GEN_62;
  assign _GEN_81 = _T_15 & _GEN_70;
  assign _GEN_82 = _T_15 & _GEN_71;
  assign _T_57 = ! io_bus_addr[31:2];
  assign _T_62 = 1'b1 == io_bus_addr[31:2];
  assign _T_67 = 2'b10 == io_bus_addr[31:2];
  assign _T_18 = 4'b1100 == io_bus_addr[31:2];
  assign _T_20 = 4'b1101 == io_bus_addr[31:2];
  assign _T_22 = 4'b1110 == io_bus_addr[31:2];
  assign _T_24 = 4'b1111 == io_bus_addr[31:2];
  assign _T_27 = io_bus_addr[31:2] == 5'b10100;
  assign _T_29 = io_bus_addr[31:2] == 5'b10101;
  assign _T_31 = io_bus_addr[31:2] == 5'b10110;
  assign _T_33 = io_bus_addr[31:2] == 5'b10111;
  assign _T_35 = io_bus_addr[31:2] == 5'b11000;
  assign _T_37 = io_bus_addr[31:2] == 5'b11001;
  assign _T_39 = io_bus_addr[31:2] == 5'b11010;
  assign _T_41 = io_bus_addr[31:2] == 5'b11011;
  assign _T_43 = io_bus_addr[31:2] == 5'b11100;
  assign _T_45 = io_bus_addr[31:2] == 5'b11101;
  assign _T_47 = io_bus_addr[31:2] == 5'b11110;
  assign _T_49 = io_bus_addr[31:2] == 5'b11111;
  assign _T_51 = io_bus_addr[31:2] == 6'b100000;
  assign _T_53 = io_bus_addr[31:2] == 6'b100001;
  assign _T_55 = io_bus_addr[31:2] == 6'b100010;
  assign _T_72 = 2'b11 == io_bus_addr[31:2];
  assign _T_83 = 3'b100 == io_bus_addr[31:2];
  assign _T_86 = 4'b1000 == io_bus_addr[31:2];
  assign _T_89 = 5'b10000 == io_bus_addr[31:2];
  assign _T_1 = ~ _T;
  assign _T_4 = ~ _T_3;
  assign _T_14 = ~ ack;
  assign _GEN_1 = _T_2 | outValid;
  assign _GEN_4 = _T_5 | _GEN_1;
  assign _T_12 = accel_io_encDataValid | accel_io_decDataValid;
  always @(posedge clock)
      _T <= accel_io_encOutputValid;
  always @(posedge clock)
      _T_3 <= accel_io_decOutputValid;
  always @(posedge clock)
      data_rd <= _004_;
  always @(posedge clock)
      ack <= _000_;
  always @(posedge clock)
      cbcMode <= _002_;
  always @(posedge clock)
      aes256Mode <= _001_;
  always @(posedge clock)
      iv <= _005_;
  always @(posedge clock)
      outValid <= _009_;
  always @(posedge clock)
      out <= _010_;
  always @(posedge clock)
      dataReg <= _003_;
  always @(posedge clock)
      key <= _008_;
  always @(posedge clock)
      keyUpdated <= _007_;
  always @(posedge clock)
      keyShift <= _006_;
  assign _006_ = reset ? 1'b0 : _GEN_82;
  assign _007_ = reset ? 1'b0 : _GEN_81;
  wire [127:0] addedVar0;
  assign addedVar0 = { key[95:0], io_bus_data_wr };
  assign _011_ = _T_89 ? addedVar0 : key;
  assign _012_ = _T_86 ? key : _011_;
  assign _013_ = _T_83 ? key : _012_;
  assign _014_ = _T_72 ? key : _013_;
  assign _015_ = _T_67 ? key : _014_;
  assign _016_ = _T_62 ? key : _015_;
  assign _017_ = _T_57 ? key : _016_;
  assign _018_ = io_bus_we ? _017_ : key;
  assign _008_ = _T_15 ? _018_ : key;
  wire [127:0] addedVar1;
  assign addedVar1 = { dataReg[95:0], io_bus_data_wr };
  assign _019_ = _T_83 ? addedVar1 : dataReg;
  assign _020_ = _T_72 ? dataReg : _019_;
  assign _021_ = _T_67 ? dataReg : _020_;
  assign _022_ = _T_62 ? dataReg : _021_;
  assign _023_ = _T_57 ? dataReg : _022_;
  assign _024_ = io_bus_we ? _023_ : dataReg;
  assign _003_ = _T_15 ? _024_ : dataReg;
  assign _025_ = _T_2 ? accel_io_encDataOut : out;
  assign _010_ = _T_5 ? accel_io_decDataOut : _025_;
  assign _026_ = _T_12 ? 1'b0 : _GEN_4;
  assign _009_ = reset ? 1'b0 : _026_;
  wire [127:0] addedVar2;
  assign addedVar2 = { iv[95:0], io_bus_data_wr };
  assign _027_ = _T_86 ? addedVar2 : _GEN_5;
  assign _028_ = _T_83 ? _GEN_5 : _027_;
  assign _GEN_2 = _T_2 ? accel_io_encIvOut : iv;
  assign _GEN_5 = _T_5 ? accel_io_decIvOut : _GEN_2;
  assign _029_ = _T_72 ? _GEN_5 : _028_;
  assign _030_ = _T_67 ? _GEN_5 : _029_;
  assign _031_ = _T_62 ? _GEN_5 : _030_;
  assign _032_ = _T_57 ? _GEN_5 : _031_;
  assign _033_ = io_bus_we ? _032_ : _GEN_5;
  assign _005_ = _T_15 ? _033_ : _GEN_5;
  assign _034_ = io_bus_sel[0] ? io_bus_data_wr[4] : aes256Mode;
  assign _035_ = _T_57 ? _034_ : aes256Mode;
  assign _036_ = io_bus_we ? _035_ : aes256Mode;
  assign _037_ = _T_15 ? _036_ : aes256Mode;
  assign _001_ = reset ? 1'b0 : _037_;
  assign _038_ = io_bus_sel[0] ? io_bus_data_wr[3] : cbcMode;
  assign _039_ = _T_57 ? _038_ : cbcMode;
  assign _040_ = io_bus_we ? _039_ : cbcMode;
  assign _041_ = _T_15 ? _040_ : cbcMode;
  assign _002_ = reset ? 1'b0 : _041_;
  assign _000_ = reset ? 1'b0 : _T_15;
  assign _042_ = _T_24 ? out[31:0] : 32'd0;
  assign _043_ = _T_22 ? out[63:32] : _042_;
  assign _044_ = _T_20 ? out[95:64] : _043_;
  assign _045_ = _T_18 ? out[127:96] : _044_;
  wire [31:0] addedVar3;
  assign addedVar3 = { 27'b000000000000000000000000000, aes256Mode, cbcMode, outValid, accel_io_encReady, accel_io_decReady };
  assign _046_ = _T_57 ? addedVar3 : _045_;
  assign _047_ = _T_27 ? 32'd827540801 : _046_;
  assign _048_ = _T_29 ? 32'd841955378 : _047_;
  assign _049_ = _T_31 ? 32'd1126184501 : _048_;
  assign _050_ = _T_33 ? 32'd543519343 : _049_;
  assign _051_ = _T_35 ? 32'd1092647266 : _050_;
  assign _052_ = _T_37 ? 32'd1752394094 : _051_;
  assign _053_ = _T_39 ? 32'd1852396320 : _052_;
  assign _054_ = _T_41 ? 32'd1851877479 : _053_;
  assign _055_ = _T_43 ? 32'd824713321 : _054_;
  assign _056_ = _T_45 ? 32'd892415794 : _055_;
  assign _057_ = _T_47 ? 32'd842019375 : _056_;
  assign _058_ = _T_49 ? 32'd942743600 : _057_;
  assign _059_ = _T_51 ? 32'd540226106 : _058_;
  assign _060_ = _T_53 ? 32'd693392208 : _059_;
  assign _061_ = _T_55 ? 32'd2105376 : _060_;
  assign _062_ = _T_15 ? _061_ : data_rd;
  assign _004_ = reset ? 32'd0 : _062_;
  assign _GEN_59 = _T_57 ? 1'b0 : _GEN_50;
  assign _GEN_51 = _T_62 ? 1'b0 : _GEN_44;
  assign _GEN_60 = _T_57 ? 1'b0 : _GEN_51;
  assign _GEN_45 = _T_67 ? 1'b0 : _GEN_39;
  assign _GEN_46 = _T_67 ? 1'b0 : _GEN_40;
  assign _GEN_52 = _T_62 ? 1'b0 : _GEN_45;
  assign _GEN_53 = _T_62 ? 1'b0 : _GEN_46;
  assign _GEN_61 = _T_57 ? 1'b0 : _GEN_52;
  assign _GEN_62 = _T_57 ? 1'b0 : _GEN_53;
  assign accel_io_decIvIn = cbcMode ? iv : 128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
  AesCombined accel (
    .clock(clock),
    .io_aes256(aes256Mode),
    .io_decDataIn(dataReg),
    .io_decDataOut(accel_io_decDataOut),
    .io_decDataValid(accel_io_decDataValid),
    .io_decIvIn(accel_io_decIvIn),
    .io_decIvOut(accel_io_decIvOut),
    .io_decOutputValid(accel_io_decOutputValid),
    .io_decReady(accel_io_decReady),
    .io_encDataIn(dataReg),
    .io_encDataOut(accel_io_encDataOut),
    .io_encDataValid(accel_io_encDataValid),
    .io_encIvIn(accel_io_decIvIn),
    .io_encIvOut(accel_io_encIvOut),
    .io_encOutputValid(accel_io_encOutputValid),
    .io_encReady(accel_io_encReady),
    .io_keyIn(key),
    .io_keyShift(keyShift),
    .io_keyValid(keyUpdated),
    .reset(reset)
  );
  assign _T_85 = { dataReg[95:0], io_bus_data_wr };
  assign _T_88 = { iv[95:0], io_bus_data_wr };
  assign _T_91 = { key[95:0], io_bus_data_wr };
  assign accel_clock = clock;
  assign accel_io_aes256 = aes256Mode;
  assign accel_io_decDataIn = dataReg;
  assign accel_io_encDataIn = dataReg;
  assign accel_io_encIvIn = accel_io_decIvIn;
  assign accel_io_keyIn = key;
  assign accel_io_keyShift = keyShift;
  assign accel_io_keyValid = keyUpdated;
  assign accel_reset = reset;
  assign io_bus_ack = ack;
  assign io_bus_data_rd = data_rd;
  assign startDec = accel_io_decDataValid;
  assign startEnc = accel_io_encDataValid;
  assign statusReg = { aes256Mode, cbcMode, outValid, accel_io_encReady, accel_io_decReady };
endmodule
