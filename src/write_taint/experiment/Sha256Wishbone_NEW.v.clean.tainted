  logic _000_;
  logic _000__T ;
  logic [31:0] _001_;
  logic [31:0] _001__T ;
  logic [31:0] _002_;
  logic [31:0] _002__T ;
  logic [31:0] _003_;
  logic [31:0] _003__T ;
  logic [31:0] _004_;
  logic [31:0] _004__T ;
  logic [31:0] _005_;
  logic [31:0] _005__T ;
  logic [31:0] _006_;
  logic [31:0] _006__T ;
  logic [31:0] _007_;
  logic [31:0] _007__T ;
  logic [31:0] _008_;
  logic [31:0] _008__T ;
  logic [31:0] _009_;
  logic [31:0] _009__T ;
  logic [31:0] _010_;
  logic [31:0] _010__T ;
  logic [31:0] _011_;
  logic [31:0] _011__T ;
  logic [31:0] _012_;
  logic [31:0] _012__T ;
  logic [31:0] _013_;
  logic [31:0] _013__T ;
  logic [31:0] _014_;
  logic [31:0] _014__T ;
  logic [31:0] _015_;
  logic [31:0] _015__T ;
  logic [31:0] _016_;
  logic [31:0] _016__T ;
  logic [31:0] _017_;
  logic [31:0] _017__T ;
  logic [31:0] _018_;
  logic [31:0] _018__T ;
  logic [31:0] _019_;
  logic [31:0] _019__T ;
  logic [31:0] _020_;
  logic [31:0] _020__T ;
  logic [31:0] _021_;
  logic [31:0] _021__T ;
  logic [31:0] _022_;
  logic [31:0] _022__T ;
  logic [31:0] _023_;
  logic [31:0] _023__T ;
  logic [31:0] _024_;
  logic [31:0] _024__T ;
  logic [31:0] _025_;
  logic [31:0] _025__T ;
  logic [31:0] _026_;
  logic [31:0] _026__T ;
  logic [31:0] _027_;
  logic [31:0] _027__T ;
  logic [31:0] _028_;
  logic [31:0] _028__T ;
  logic [31:0] _029_;
  logic [31:0] _029__T ;
  logic [31:0] _030_;
  logic [31:0] _030__T ;
  logic [31:0] _031_;
  logic [31:0] _031__T ;
  logic [31:0] _032_;
  logic [31:0] _032__T ;
  logic _GEN_25;
  logic _GEN_25_T ;
  logic _GEN_26;
  logic _GEN_26_T ;
  logic _GEN_27;
  logic _GEN_27_T ;
  logic _GEN_28;
  logic _GEN_28_T ;
  logic _GEN_29;
  logic _GEN_29_T ;
  logic _GEN_30;
  logic _GEN_30_T ;
  logic _GEN_31;
  logic _GEN_31_T ;
  logic _GEN_32;
  logic _GEN_32_T ;
  logic _GEN_34;
  logic _GEN_34_T ;
  logic _T;
  logic _T_T ;
  logic _T_1;
  logic _T_1_T ;
  logic _T_10;
  logic _T_10_T ;
  logic _T_13;
  logic _T_13_T ;
  logic _T_16;
  logic _T_16_T ;
  logic _T_19;
  logic _T_19_T ;
  logic _T_2;
  logic _T_2_T ;
  logic _T_22;
  logic _T_22_T ;
  logic _T_25;
  logic _T_25_T ;
  logic _T_28;
  logic _T_28_T ;
  logic _T_31;
  logic _T_31_T ;
  logic _T_35;
  logic _T_35_T ;
  logic _T_37;
  logic _T_37_T ;
  logic _T_39;
  logic _T_39_T ;
  logic _T_4;
  logic _T_4_T ;
  logic _T_41;
  logic _T_41_T ;
  logic _T_43;
  logic _T_43_T ;
  logic _T_45;
  logic _T_45_T ;
  logic _T_47;
  logic _T_47_T ;
  logic _T_49;
  logic _T_49_T ;
  logic _T_5;
  logic _T_5_T ;
  logic _T_51;
  logic _T_51_T ;
  logic _T_53;
  logic _T_53_T ;
  logic _T_55;
  logic _T_55_T ;
  logic _T_57;
  logic _T_57_T ;
  logic _T_59;
  logic _T_59_T ;
  logic _T_6;
  logic _T_6_T ;
  logic _T_61;
  logic _T_61_T ;
  logic _T_66;
  logic _T_66_T ;
  logic _T_67;
  logic _T_67_T ;
  logic [2:0] _T_9;
  logic [2:0] _T_9_T ;
  logic accel_clock;
  logic accel_clock_T ;
  logic accel_io_first;
  logic accel_io_first_T ;
  logic [31:0] accel_io_inputData;
  logic [31:0] accel_io_inputData_T ;
  logic accel_io_inputReady;
  logic accel_io_inputReady_T ;
  logic accel_io_inputValid;
  logic accel_io_inputValid_T ;
  logic [31:0] accel_io_outputData_0;
  logic [31:0] accel_io_outputData_0_T ;
  logic [31:0] accel_io_outputData_1;
  logic [31:0] accel_io_outputData_1_T ;
  logic [31:0] accel_io_outputData_2;
  logic [31:0] accel_io_outputData_2_T ;
  logic [31:0] accel_io_outputData_3;
  logic [31:0] accel_io_outputData_3_T ;
  logic [31:0] accel_io_outputData_4;
  logic [31:0] accel_io_outputData_4_T ;
  logic [31:0] accel_io_outputData_5;
  logic [31:0] accel_io_outputData_5_T ;
  logic [31:0] accel_io_outputData_6;
  logic [31:0] accel_io_outputData_6_T ;
  logic [31:0] accel_io_outputData_7;
  logic [31:0] accel_io_outputData_7_T ;
  logic accel_io_outputValid;
  logic accel_io_outputValid_T ;
  logic accel_reset;
  logic accel_reset_T ;
  logic ack;
  logic  ack_T ;
  logic  ack_TZ ;
  logic  ack_PREV_VAL1 ;
  logic  ack_PREV_VAL2 ;
  assign ack_T = ack_TZ | { 1{ YZC[0] && ack != 0 }} ;
  input clock;
  logic [31:0] data_rd;
  logic [31:0]  data_rd_T ;
  logic [31:0]  data_rd_TZ ;
  logic [31:0]  data_rd_PREV_VAL1 ;
  logic [31:0]  data_rd_PREV_VAL2 ;
  assign data_rd_T = data_rd_TZ | { 32{ YZC[1] && data_rd != 0 }} ;
  output io_bus_ack;
  logic io_bus_ack ;
  output io_bus_ack_T ;
  logic io_bus_ack_T ;
  input [31:0] io_bus_addr;
  input [31:0] io_bus_addr_T ;
  input io_bus_cyc;
  input io_bus_cyc_T ;
  output [31:0] io_bus_data_rd;
  logic [31:0] io_bus_data_rd ;
  output [31:0] io_bus_data_rd_T ;
  logic [31:0] io_bus_data_rd_T ;
  input [31:0] io_bus_data_wr;
  input [31:0] io_bus_data_wr_T ;
  input [3:0] io_bus_sel;
  input [3:0] io_bus_sel_T ;
  input io_bus_stb;
  input io_bus_stb_T ;
  input io_bus_we;
  input io_bus_we_T ;
  input reset;
  input reset_T ;
  assign _T = io_bus_cyc & io_bus_stb;
  assign _T_T = ( io_bus_cyc_T & io_bus_stb ) | ( io_bus_stb_T & io_bus_cyc ) ;
  assign _T_2 = _T & _T_1;
  assign _T_2_T = ( _T_T & _T_1 ) | ( _T_1_T & _T ) ;
  assign _T_66 = io_bus_sel[0] & io_bus_data_wr[0];
  assign _T_66_T = ( io_bus_sel_T [0] & io_bus_data_wr[0] ) | ( io_bus_data_wr_T [0] & io_bus_sel[0] ) ;
  assign _GEN_25 = _T_67 & _T_6;
  assign _GEN_25_T = ( _T_67_T & _T_6 ) | ( _T_6_T & _T_67 ) ;
  assign _GEN_27 = _T_4 & _T_66;
  assign _GEN_27_T = ( _T_4_T & _T_66 ) | ( _T_66_T & _T_4 ) ;
  assign _GEN_30 = io_bus_we & _GEN_27;
  assign _GEN_30_T = ( io_bus_we_T & _GEN_27 ) | ( _GEN_27_T & io_bus_we ) ;
  assign _GEN_31 = io_bus_we & _GEN_28;
  assign _GEN_31_T = ( io_bus_we_T & _GEN_28 ) | ( _GEN_28_T & io_bus_we ) ;
  assign _GEN_34 = _T_2 & _GEN_32;
  assign _GEN_34_T = ( _T_2_T & _GEN_32 ) | ( _GEN_32_T & _T_2 ) ;
  assign accel_io_first = _T_2 & _GEN_30;
  assign accel_io_first_T = ( _T_2_T & _GEN_30 ) | ( _GEN_30_T & _T_2 ) ;
  assign accel_io_inputValid = _T_2 & _GEN_31;
  assign accel_io_inputValid_T = ( _T_2_T & _GEN_31 ) | ( _GEN_31_T & _T_2 ) ;
  assign _T_4 = ! io_bus_addr[31:2];
  assign _T_4_T = | io_bus_addr_T [31:2] ;
  assign _T_10 = 3'b100 == io_bus_addr[31:2];
  assign _T_10_T = | io_bus_addr_T [31:2] ;
  assign _T_13 = 3'b101 == io_bus_addr[31:2];
  assign _T_13_T = | io_bus_addr_T [31:2] ;
  assign _T_16 = 3'b110 == io_bus_addr[31:2];
  assign _T_16_T = | io_bus_addr_T [31:2] ;
  assign _T_19 = 3'b111 == io_bus_addr[31:2];
  assign _T_19_T = | io_bus_addr_T [31:2] ;
  assign _T_22 = 4'b1000 == io_bus_addr[31:2];
  assign _T_22_T = | io_bus_addr_T [31:2] ;
  assign _T_25 = 4'b1001 == io_bus_addr[31:2];
  assign _T_25_T = | io_bus_addr_T [31:2] ;
  assign _T_28 = 4'b1010 == io_bus_addr[31:2];
  assign _T_28_T = | io_bus_addr_T [31:2] ;
  assign _T_31 = 4'b1011 == io_bus_addr[31:2];
  assign _T_31_T = | io_bus_addr_T [31:2] ;
  assign _T_35 = io_bus_addr[31:2] == 5'b10100;
  assign _T_35_T = | io_bus_addr_T [31:2] ;
  assign _T_37 = io_bus_addr[31:2] == 5'b10101;
  assign _T_37_T = | io_bus_addr_T [31:2] ;
  assign _T_39 = io_bus_addr[31:2] == 5'b10110;
  assign _T_39_T = | io_bus_addr_T [31:2] ;
  assign _T_41 = io_bus_addr[31:2] == 5'b10111;
  assign _T_41_T = | io_bus_addr_T [31:2] ;
  assign _T_43 = io_bus_addr[31:2] == 5'b11000;
  assign _T_43_T = | io_bus_addr_T [31:2] ;
  assign _T_45 = io_bus_addr[31:2] == 5'b11001;
  assign _T_45_T = | io_bus_addr_T [31:2] ;
  assign _T_47 = io_bus_addr[31:2] == 5'b11010;
  assign _T_47_T = | io_bus_addr_T [31:2] ;
  assign _T_49 = io_bus_addr[31:2] == 5'b11011;
  assign _T_49_T = | io_bus_addr_T [31:2] ;
  assign _T_51 = io_bus_addr[31:2] == 5'b11100;
  assign _T_51_T = | io_bus_addr_T [31:2] ;
  assign _T_53 = io_bus_addr[31:2] == 5'b11101;
  assign _T_53_T = | io_bus_addr_T [31:2] ;
  assign _T_55 = io_bus_addr[31:2] == 5'b11110;
  assign _T_55_T = | io_bus_addr_T [31:2] ;
  assign _T_57 = io_bus_addr[31:2] == 5'b11111;
  assign _T_57_T = | io_bus_addr_T [31:2] ;
  assign _T_59 = io_bus_addr[31:2] == 6'b100000;
  assign _T_59_T = | io_bus_addr_T [31:2] ;
  assign _T_61 = io_bus_addr[31:2] == 6'b100001;
  assign _T_61_T = | io_bus_addr_T [31:2] ;
  assign _T_67 = 1'b1 == io_bus_addr[31:2];
  assign _T_67_T = | io_bus_addr_T [31:2] ;
  assign _T_1 = ~ ack;
  assign _T_1_T = ack_T ;
  assign _GEN_29 = _T_4 | _GEN_26;
  assign _GEN_29_T = ( _T_4_T & ~_GEN_26 ) | ( _GEN_26_T & ~_T_4 ) ;
  always @(posedge clock)
      data_rd <= _001_;
  always @( posedge clock )
      data_rd_TZ 		<= rst_zy ? 0 : ( _001__T );
  always @(posedge clock)
      ack <= _000_;
  always @( posedge clock )
      ack_TZ 		<= rst_zy ? 0 : ( _000__T );
  assign _000_ = reset ? 1'b0 : _GEN_34;
  assign _000__T = reset ? { 1{ | reset_T  }} : ( { 1{ | reset_T  }} | _GEN_34_T );
  assign _002_ = accel_io_outputValid ? accel_io_outputData_7 : 32'd0;
  assign _002__T = accel_io_outputValid ? ( { 32{ | accel_io_outputValid_T  }} | accel_io_outputData_7_T ) : { 32{ | accel_io_outputValid_T  }};
  assign _003_ = _T_31 ? _002_ : 32'd0;
  assign _003__T = _T_31 ? ( { 32{ | _T_31_T  }} | _002__T ) : { 32{ | _T_31_T  }};
  assign _004_ = accel_io_outputValid ? accel_io_outputData_6 : 32'd0;
  assign _004__T = accel_io_outputValid ? ( { 32{ | accel_io_outputValid_T  }} | accel_io_outputData_6_T ) : { 32{ | accel_io_outputValid_T  }};
  assign _005_ = _T_28 ? _004_ : _003_;
  assign _005__T = _T_28 ? ( { 32{ _T_28_T  }} | _004__T ) : ( { 32{ _T_28_T  }} | _003__T );
  assign _006_ = accel_io_outputValid ? accel_io_outputData_5 : 32'd0;
  assign _006__T = accel_io_outputValid ? ( { 32{ | accel_io_outputValid_T  }} | accel_io_outputData_5_T ) : { 32{ | accel_io_outputValid_T  }};
  assign _007_ = _T_25 ? _006_ : _005_;
  assign _007__T = _T_25 ? ( { 32{ _T_25_T  }} | _006__T ) : ( { 32{ _T_25_T  }} | _005__T );
  assign _008_ = accel_io_outputValid ? accel_io_outputData_4 : 32'd0;
  assign _008__T = accel_io_outputValid ? ( { 32{ | accel_io_outputValid_T  }} | accel_io_outputData_4_T ) : { 32{ | accel_io_outputValid_T  }};
  assign _009_ = _T_22 ? _008_ : _007_;
  assign _009__T = _T_22 ? ( { 32{ _T_22_T  }} | _008__T ) : ( { 32{ _T_22_T  }} | _007__T );
  assign _010_ = accel_io_outputValid ? accel_io_outputData_3 : 32'd0;
  assign _010__T = accel_io_outputValid ? ( { 32{ | accel_io_outputValid_T  }} | accel_io_outputData_3_T ) : { 32{ | accel_io_outputValid_T  }};
  assign _011_ = _T_19 ? _010_ : _009_;
  assign _011__T = _T_19 ? ( { 32{ _T_19_T  }} | _010__T ) : ( { 32{ _T_19_T  }} | _009__T );
  assign _012_ = accel_io_outputValid ? accel_io_outputData_2 : 32'd0;
  assign _012__T = accel_io_outputValid ? ( { 32{ | accel_io_outputValid_T  }} | accel_io_outputData_2_T ) : { 32{ | accel_io_outputValid_T  }};
  assign _013_ = _T_16 ? _012_ : _011_;
  assign _013__T = _T_16 ? ( { 32{ _T_16_T  }} | _012__T ) : ( { 32{ _T_16_T  }} | _011__T );
  assign _014_ = accel_io_outputValid ? accel_io_outputData_1 : 32'd0;
  assign _014__T = accel_io_outputValid ? ( { 32{ | accel_io_outputValid_T  }} | accel_io_outputData_1_T ) : { 32{ | accel_io_outputValid_T  }};
  assign _015_ = _T_13 ? _014_ : _013_;
  assign _015__T = _T_13 ? ( { 32{ _T_13_T  }} | _014__T ) : ( { 32{ _T_13_T  }} | _013__T );
  assign _016_ = accel_io_outputValid ? accel_io_outputData_0 : 32'd0;
  assign _016__T = accel_io_outputValid ? ( { 32{ | accel_io_outputValid_T  }} | accel_io_outputData_0_T ) : { 32{ | accel_io_outputValid_T  }};
  assign _017_ = _T_10 ? _016_ : _015_;
  assign _017__T = _T_10 ? ( { 32{ _T_10_T  }} | _016__T ) : ( { 32{ _T_10_T  }} | _015__T );
  logic [31:0] addedVar0;
  logic [31:0] addedVar0_T ;
  assign addedVar0 = { 29'b00000000000000000000000000000, accel_io_outputValid, _T_6, 1'b0 };
  assign addedVar0_T = {  29'h0 , accel_io_outputValid_T , _T_6_T , 1'h0  };
  assign _018_ = _T_4 ? addedVar0 : _017_;
  assign _018__T = _T_4 ? ( { 32{ _T_4_T  }} | addedVar0_T ) : ( { 32{ _T_4_T  }} | _017__T );
  assign _019_ = _T_35 ? 32'd843139155 : _018_;
  assign _019__T = _T_35 ? { 32{ | _T_35_T  }} : ( { 32{ | _T_35_T  }} | _018__T );
  assign _020_ = _T_37 ? 32'd1126184501 : _019_;
  assign _020__T = _T_37 ? { 32{ | _T_37_T  }} : ( { 32{ | _T_37_T  }} | _019__T );
  assign _021_ = _T_39 ? 32'd543519343 : _020_;
  assign _021__T = _T_39 ? { 32{ | _T_39_T  }} : ( { 32{ | _T_39_T  }} | _020__T );
  assign _022_ = _T_41 ? 32'd1092647266 : _021_;
  assign _022__T = _T_41 ? { 32{ | _T_41_T  }} : ( { 32{ | _T_41_T  }} | _021__T );
  assign _023_ = _T_43 ? 32'd1752394094 : _022_;
  assign _023__T = _T_43 ? { 32{ | _T_43_T  }} : ( { 32{ | _T_43_T  }} | _022__T );
  assign _024_ = _T_45 ? 32'd1852396320 : _023_;
  assign _024__T = _T_45 ? { 32{ | _T_45_T  }} : ( { 32{ | _T_45_T  }} | _023__T );
  assign _025_ = _T_47 ? 32'd1851877479 : _024_;
  assign _025__T = _T_47 ? { 32{ | _T_47_T  }} : ( { 32{ | _T_47_T  }} | _024__T );
  assign _026_ = _T_49 ? 32'd824713321 : _025_;
  assign _026__T = _T_49 ? { 32{ | _T_49_T  }} : ( { 32{ | _T_49_T  }} | _025__T );
  assign _027_ = _T_51 ? 32'd892415794 : _026_;
  assign _027__T = _T_51 ? { 32{ | _T_51_T  }} : ( { 32{ | _T_51_T  }} | _026__T );
  assign _028_ = _T_53 ? 32'd842019375 : _027_;
  assign _028__T = _T_53 ? { 32{ | _T_53_T  }} : ( { 32{ | _T_53_T  }} | _027__T );
  assign _029_ = _T_55 ? 32'd942743600 : _028_;
  assign _029__T = _T_55 ? { 32{ | _T_55_T  }} : ( { 32{ | _T_55_T  }} | _028__T );
  assign _030_ = _T_57 ? 32'd540226106 : _029_;
  assign _030__T = _T_57 ? { 32{ | _T_57_T  }} : ( { 32{ | _T_57_T  }} | _029__T );
  assign _031_ = _T_59 ? 32'd693392208 : _030_;
  assign _031__T = _T_59 ? { 32{ | _T_59_T  }} : ( { 32{ | _T_59_T  }} | _030__T );
  assign _032_ = _T_61 ? 32'd2105376 : _031_;
  assign _032__T = _T_61 ? { 32{ | _T_61_T  }} : ( { 32{ | _T_61_T  }} | _031__T );
  assign _001_ = _T_2 ? _032_ : data_rd;
  assign _001__T = _T_2 ? ( { 32{ _T_2_T  }} | _032__T ) : ( { 32{ _T_2_T  }} | data_rd_T );
  assign _GEN_26 = _T_67 ? _T_6 : 1'b1;
  assign _GEN_26_T = _T_67 ? ( { 1{ | _T_67_T  }} | _T_6_T ) : { 1{ | _T_67_T  }};
  assign _GEN_28 = _T_4 ? 1'b0 : _GEN_25;
  assign _GEN_28_T = _T_4 ? { 1{ | _T_4_T  }} : ( { 1{ | _T_4_T  }} | _GEN_25_T );
  assign _GEN_32 = io_bus_we ? _GEN_29 : 1'b1;
  assign _GEN_32_T = io_bus_we ? ( { 1{ | io_bus_we_T  }} | _GEN_29_T ) : { 1{ | io_bus_we_T  }};
// module: Sha256Accel
  Sha256Accel accel (
    .YZC(YZC[41:2]),
    .io_first_T (  accel_io_first_T  ),
    .io_inputData_T (  io_bus_data_wr_T  ),
    .io_inputValid_T (  accel_io_inputValid_T  ),
    .reset_T (  reset_T  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .rst_zy(rst_zy),
    .io_inputReady_T (  _T_6_T  ),
    .io_outputData_0_T (  accel_io_outputData_0_T  ),
    .io_outputData_1_T (  accel_io_outputData_1_T  ),
    .io_outputData_2_T (  accel_io_outputData_2_T  ),
    .io_outputData_3_T (  accel_io_outputData_3_T  ),
    .io_outputData_4_T (  accel_io_outputData_4_T  ),
    .io_outputData_5_T (  accel_io_outputData_5_T  ),
    .io_outputData_6_T (  accel_io_outputData_6_T  ),
    .io_outputData_7_T (  accel_io_outputData_7_T  ),
    .io_outputValid_T (  accel_io_outputValid_T  ),
    .io_outputValid ( accel_io_outputValid ),
    .io_outputData_1 ( accel_io_outputData_1 ),
    .io_outputData_2 ( accel_io_outputData_2 ),
    .io_inputData ( io_bus_data_wr ),
    .reset ( reset ),
    .io_first ( accel_io_first ),
    .io_inputValid ( accel_io_inputValid ),
    .io_outputData_0 ( accel_io_outputData_0 ),
    .io_outputData_3 ( accel_io_outputData_3 ),
    .io_inputReady ( _T_6 ),
    .io_outputData_4 ( accel_io_outputData_4 ),
    .clock ( clock ),
    .io_outputData_5 ( accel_io_outputData_5 ),
    .io_outputData_6 ( accel_io_outputData_6 ),
    .io_outputData_7 ( accel_io_outputData_7 )
  );
  assign _T_5 = accel_io_outputValid;
  assign _T_5_T = accel_io_outputValid_T ;
  assign _T_9 = { accel_io_outputValid, _T_6, 1'b0 };
  assign _T_9_T = {  accel_io_outputValid_T , _T_6_T , 1'h0  };
  assign accel_clock = clock;
  assign accel_clock_T = clock_T ;
  assign accel_io_inputData = io_bus_data_wr;
  assign accel_io_inputData_T = io_bus_data_wr_T ;
  assign accel_io_inputReady = _T_6;
  assign accel_io_inputReady_T = _T_6_T ;
  assign accel_reset = reset;
  assign accel_reset_T = reset_T ;
  assign io_bus_ack = ack;
  assign io_bus_ack_T = ack_T ;
  assign io_bus_data_rd = data_rd;
  assign io_bus_data_rd_T = data_rd_T ;
endmodule
