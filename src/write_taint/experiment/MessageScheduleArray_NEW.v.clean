module MessageScheduleArray(clock, reset, io_first, io_shiftIn, io_wordIn, io_wOut);
  wire [5:0] _00_;
  wire [31:0] _01_;
  wire [5:0] _GEN_0;
  wire [31:0] _GEN_4;
  wire [28:0] _GEN_6;
  wire [21:0] _GEN_7;
  wire [5:0] _T_1;
  wire [31:0] _T_10;
  wire [31:0] _T_11;
  wire [31:0] _T_13;
  wire [31:0] _T_16;
  wire [31:0] _T_19;
  wire [31:0] _T_20;
  wire [31:0] _T_22;
  wire [31:0] _T_24;
  wire [31:0] _T_26;
  wire [31:0] _T_28;
  wire _T_4;
  wire [31:0] _T_7;
  input clock;
  wire [5:0] i;
  reg [5:0] iReg;
  input io_first;
  input io_shiftIn;
  output [31:0] io_wOut;
  input [31:0] io_wordIn;
  reg [31:0] out;
  input reset;
  wire shreg_clock;
  wire shreg_io_enable;
  wire [31:0] shreg_io_input;
  wire [31:0] shreg_io_output_1;
  wire [31:0] shreg_io_output_14;
  wire [31:0] shreg_io_output_15;
  wire [31:0] shreg_io_output_6;
  assign _T_1 = iReg + 1'b1;
  assign _T_24 = shreg_io_output_15 + _T_13;
  assign _T_26 = _T_24 + shreg_io_output_6;
  assign _T_28 = _T_26 + _T_22;
  assign _T_4 = i < 5'b10000;
  always @(posedge clock)
      out <= _01_;
  always @(posedge clock)
      iReg <= _00_;
  assign _GEN_0 = io_shiftIn ? _T_1 : iReg;
  assign i = io_first ? 6'b000000 : _GEN_0;
  assign _00_ = reset ? 6'b000000 : i;
  assign _GEN_4 = _T_4 ? io_wordIn : _T_28;
  assign shreg_io_input = io_shiftIn ? _GEN_4 : 32'd0;
  assign _01_ = reset ? 32'd0 : shreg_io_input;
  wire [31:0] addedVar0;
  assign addedVar0 = { shreg_io_output_14[6:0], shreg_io_output_14[31:7] };
  wire [31:0] addedVar1;
  assign addedVar1 = { shreg_io_output_14[17:0], shreg_io_output_14[31:18] };
  assign _T_11 = addedVar0 ^ addedVar1;
  assign _T_13 = _T_11 ^ shreg_io_output_14[31:3];
  wire [31:0] addedVar2;
  assign addedVar2 = { shreg_io_output_1[16:0], shreg_io_output_1[31:17] };
  wire [31:0] addedVar3;
  assign addedVar3 = { shreg_io_output_1[18:0], shreg_io_output_1[31:19] };
  assign _T_20 = addedVar2 ^ addedVar3;
  assign _T_22 = _T_20 ^ shreg_io_output_1[31:10];
  ShiftRegister_1 shreg (
    .clock(clock),
    .io_enable(io_shiftIn),
    .io_input(shreg_io_input),
    .io_output_1(shreg_io_output_1),
    .io_output_14(shreg_io_output_14),
    .io_output_15(shreg_io_output_15),
    .io_output_6(shreg_io_output_6)
  );
  assign _GEN_6 = shreg_io_output_14[31:3];
  assign _GEN_7 = shreg_io_output_1[31:10];
  assign _T_10 = { shreg_io_output_14[17:0], shreg_io_output_14[31:18] };
  assign _T_16 = { shreg_io_output_1[16:0], shreg_io_output_1[31:17] };
  assign _T_19 = { shreg_io_output_1[18:0], shreg_io_output_1[31:19] };
  assign _T_7 = { shreg_io_output_14[6:0], shreg_io_output_14[31:7] };
  assign io_wOut = out;
  assign shreg_clock = clock;
  assign shreg_io_enable = io_shiftIn;
endmodule
