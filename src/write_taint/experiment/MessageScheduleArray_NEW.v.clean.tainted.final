module MessageScheduleArray ( clock , io_first , io_shiftIn , io_wordIn , reset , INSTR_IN_ZY , rst_zy , YZC , io_first_T , io_shiftIn_T , io_wordIn_T , reset_T , io_wOut , io_wOut_T );
  input rst_zy;
  integer i;
  input INSTR_IN_ZY;
  input [17:0] YZC;
  logic [5:0] _00_;
  logic [5:0] _00__T ;
  logic [31:0] _01_;
  logic [31:0] _01__T ;
  logic [5:0] _GEN_0;
  logic [5:0] _GEN_0_T ;
  logic [31:0] _GEN_4;
  logic [31:0] _GEN_4_T ;
  logic [28:0] _GEN_6;
  logic [28:0] _GEN_6_T ;
  logic [21:0] _GEN_7;
  logic [21:0] _GEN_7_T ;
  logic [5:0] _T_1;
  logic [5:0] _T_1_T ;
  logic [31:0] _T_10;
  logic [31:0] _T_10_T ;
  logic [31:0] _T_11;
  logic [31:0] _T_11_T ;
  logic [31:0] _T_13;
  logic [31:0] _T_13_T ;
  logic [31:0] _T_16;
  logic [31:0] _T_16_T ;
  logic [31:0] _T_19;
  logic [31:0] _T_19_T ;
  logic [31:0] _T_20;
  logic [31:0] _T_20_T ;
  logic [31:0] _T_22;
  logic [31:0] _T_22_T ;
  logic [31:0] _T_24;
  logic [31:0] _T_24_T ;
  logic [31:0] _T_26;
  logic [31:0] _T_26_T ;
  logic [31:0] _T_28;
  logic [31:0] _T_28_T ;
  logic _T_4;
  logic _T_4_T ;
  logic [31:0] _T_7;
  logic [31:0] _T_7_T ;
  input clock;
  logic [5:0] i;
  logic [5:0] i_T ;
  logic [5:0] iReg;
  logic [5:0]  iReg_T ;
  logic [5:0]  iReg_TZ ;
  logic [5:0]  iReg_PREV_VAL1 ;
  logic [5:0]  iReg_PREV_VAL2 ;
  assign iReg_T = iReg_TZ | { 6{ YZC[0] && iReg != 0 }} ;
  input io_first;
  input io_first_T ;
  input io_shiftIn;
  input io_shiftIn_T ;
  output [31:0] io_wOut;
  logic [31:0] io_wOut ;
  output [31:0] io_wOut_T ;
  logic [31:0] io_wOut_T ;
  input [31:0] io_wordIn;
  input [31:0] io_wordIn_T ;
  logic [31:0] out;
  logic [31:0]  out_T ;
  logic [31:0]  out_TZ ;
  logic [31:0]  out_PREV_VAL1 ;
  logic [31:0]  out_PREV_VAL2 ;
  assign out_T = out_TZ | { 32{ YZC[1] && out != 0 }} ;
  input reset;
  input reset_T ;
  logic shreg_clock;
  logic shreg_clock_T ;
  logic shreg_io_enable;
  logic shreg_io_enable_T ;
  logic [31:0] shreg_io_input;
  logic [31:0] shreg_io_input_T ;
  logic [31:0] shreg_io_output_1;
  logic [31:0] shreg_io_output_1_T ;
  logic [31:0] shreg_io_output_14;
  logic [31:0] shreg_io_output_14_T ;
  logic [31:0] shreg_io_output_15;
  logic [31:0] shreg_io_output_15_T ;
  logic [31:0] shreg_io_output_6;
  logic [31:0] shreg_io_output_6_T ;
  assign _T_1 = iReg + 1'b1;
  assign _T_1_T = iReg_T ;
  assign _T_24 = shreg_io_output_15 + _T_13;
  assign _T_24_T = shreg_io_output_15_T | _T_13_T ;
  assign _T_26 = _T_24 + shreg_io_output_6;
  assign _T_26_T = _T_24_T | shreg_io_output_6_T ;
  assign _T_28 = _T_26 + _T_22;
  assign _T_28_T = _T_26_T | _T_22_T ;
  assign _T_4 = i < 5'b10000;
  assign _T_4_T = | i_T ;
  always @(posedge clock)
      out <= _01_;
  always @( posedge clock )
      out_TZ 		<= rst_zy ? 0 : ( _01__T );
  always @(posedge clock)
      iReg <= _00_;
  always @( posedge clock )
      iReg_TZ 		<= rst_zy ? 0 : ( _00__T );
  assign _GEN_0 = io_shiftIn ? _T_1 : iReg;
  assign _GEN_0_T = io_shiftIn ? ( { 6{ io_shiftIn_T  }} | _T_1_T ) : ( { 6{ io_shiftIn_T  }} | iReg_T );
  assign i = io_first ? 6'b000000 : _GEN_0;
  assign i_T = io_first ? { 6{ | io_first_T  }} : ( { 6{ | io_first_T  }} | _GEN_0_T );
  assign _00_ = reset ? 6'b000000 : i;
  assign _00__T = reset ? { 6{ | reset_T  }} : ( { 6{ | reset_T  }} | i_T );
  assign _GEN_4 = _T_4 ? io_wordIn : _T_28;
  assign _GEN_4_T = _T_4 ? ( { 32{ _T_4_T  }} | io_wordIn_T ) : ( { 32{ _T_4_T  }} | _T_28_T );
  assign shreg_io_input = io_shiftIn ? _GEN_4 : 32'd0;
  assign shreg_io_input_T = io_shiftIn ? ( { 32{ | io_shiftIn_T  }} | _GEN_4_T ) : { 32{ | io_shiftIn_T  }};
  assign _01_ = reset ? 32'd0 : shreg_io_input;
  assign _01__T = reset ? { 32{ | reset_T  }} : ( { 32{ | reset_T  }} | shreg_io_input_T );
  logic [31:0] addedVar0;
  logic [31:0] addedVar0_T ;
  assign addedVar0 = { shreg_io_output_14[6:0], shreg_io_output_14[31:7] };
  assign addedVar0_T = {  shreg_io_output_14_T [6:0] , shreg_io_output_14_T [31:7]  };
  logic [31:0] addedVar1;
  logic [31:0] addedVar1_T ;
  assign addedVar1 = { shreg_io_output_14[17:0], shreg_io_output_14[31:18] };
  assign addedVar1_T = {  shreg_io_output_14_T [17:0] , shreg_io_output_14_T [31:18]  };
  assign _T_11 = addedVar0 ^ addedVar1;
  assign _T_11_T = addedVar0_T | addedVar1_T ;
  assign _T_13 = _T_11 ^ shreg_io_output_14[31:3];
  assign _T_13_T = _T_11_T | shreg_io_output_14_T [31:3] ;
  logic [31:0] addedVar2;
  logic [31:0] addedVar2_T ;
  assign addedVar2 = { shreg_io_output_1[16:0], shreg_io_output_1[31:17] };
  assign addedVar2_T = {  shreg_io_output_1_T [16:0] , shreg_io_output_1_T [31:17]  };
  logic [31:0] addedVar3;
  logic [31:0] addedVar3_T ;
  assign addedVar3 = { shreg_io_output_1[18:0], shreg_io_output_1[31:19] };
  assign addedVar3_T = {  shreg_io_output_1_T [18:0] , shreg_io_output_1_T [31:19]  };
  assign _T_20 = addedVar2 ^ addedVar3;
  assign _T_20_T = addedVar2_T | addedVar3_T ;
  assign _T_22 = _T_20 ^ shreg_io_output_1[31:10];
  assign _T_22_T = _T_20_T | shreg_io_output_1_T [31:10] ;
// module: ShiftRegister_1
  ShiftRegister_1 shreg (
    .YZC(YZC[17:2]),
    .io_enable_T (  io_shiftIn_T  ),
    .io_input_T (  shreg_io_input_T  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .rst_zy(rst_zy),
    .io_output_1_T (  shreg_io_output_1_T  ),
    .io_output_14_T (  shreg_io_output_14_T  ),
    .io_output_15_T (  shreg_io_output_15_T  ),
    .io_output_6_T (  shreg_io_output_6_T  ),
    .io_output_6 ( shreg_io_output_6 ),
    .io_output_15 ( shreg_io_output_15 ),
    .io_output_14 ( shreg_io_output_14 ),
    .io_output_1 ( shreg_io_output_1 ),
    .io_input ( shreg_io_input ),
    .io_enable ( io_shiftIn ),
    .clock ( clock )
  );
  assign _GEN_6 = shreg_io_output_14[31:3];
  assign _GEN_6_T = shreg_io_output_14_T [31:3] ;
  assign _GEN_7 = shreg_io_output_1[31:10];
  assign _GEN_7_T = shreg_io_output_1_T [31:10] ;
  assign _T_10 = { shreg_io_output_14[17:0], shreg_io_output_14[31:18] };
  assign _T_10_T = {  shreg_io_output_14_T [17:0] , shreg_io_output_14_T [31:18]  };
  assign _T_16 = { shreg_io_output_1[16:0], shreg_io_output_1[31:17] };
  assign _T_16_T = {  shreg_io_output_1_T [16:0] , shreg_io_output_1_T [31:17]  };
  assign _T_19 = { shreg_io_output_1[18:0], shreg_io_output_1[31:19] };
  assign _T_19_T = {  shreg_io_output_1_T [18:0] , shreg_io_output_1_T [31:19]  };
  assign _T_7 = { shreg_io_output_14[6:0], shreg_io_output_14[31:7] };
  assign _T_7_T = {  shreg_io_output_14_T [6:0] , shreg_io_output_14_T [31:7]  };
  assign io_wOut = out;
  assign io_wOut_T = out_T ;
  assign shreg_clock = clock;
  assign shreg_clock_T = clock_T ;
  assign shreg_io_enable = io_shiftIn;
  assign shreg_io_enable_T = io_shiftIn_T ;
endmodule
