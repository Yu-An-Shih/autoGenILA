/* Generated by Yosys 0.9+3901 (git sha1 9f7cd10c, gcc 9.3.0-17ubuntu1~20.04 -fPIC -Os) */

module top(clk_i, rst_i, mem_d_data_rd_i, mem_d_accept_i, mem_d_ack_i, mem_d_error_i, mem_d_resp_tag_i, mem_i_accept_i, mem_i_valid_i, mem_i_error_i, mem_i_inst_i, intr_i, reset_vector_i, cpu_id_i, mem_d_cacheable_o, mem_d_req_tag_o, mem_d_invalidate_o, mem_d_writeback_o, mem_d_flush_o, mem_i_flush_o, mem_i_invalidate_o, mem_d_addr_o_fifo0, mem_d_data_wr_o_fifo0, mem_d_rd_o_fifo0, mem_d_wr_o_fifo0, mem_i_rd_o_fifo0, mem_i_pc_o_fifo0, pc_f_q_out_fifo0, mem_d_addr_o_fifo1, mem_d_data_wr_o_fifo1, mem_d_rd_o_fifo1, mem_d_wr_o_fifo1, mem_i_rd_o_fifo1, mem_i_pc_o_fifo1, pc_f_q_out_fifo1);
  wire [31:0] _0000_;
  wire [31:0] _0001_;
  wire [31:0] _0002_;
  wire [31:0] _0003_;
  wire _0004_;
  wire _0005_;
  wire _0006_;
  wire [31:0] _0007_;
  wire [31:0] _0008_;
  wire [31:0] _0009_;
  wire [31:0] _0010_;
  wire [31:0] _0011_;
  wire [31:0] _0012_;
  wire [31:0] _0013_;
  wire [31:0] _0014_;
  wire [31:0] _0015_;
  wire [31:0] _0016_;
  wire _0017_;
  wire _0018_;
  wire _0019_;
  wire [31:0] _0020_;
  wire [31:0] _0021_;
  wire [31:0] _0022_;
  wire [31:0] _0023_;
  wire [31:0] _0024_;
  wire [31:0] _0025_;
  wire _0026_;
  wire _0027_;
  wire _0028_;
  wire _0029_;
  wire _0030_;
  wire _0031_;
  wire _0032_;
  wire _0033_;
  wire [3:0] _0034_;
  wire [3:0] _0035_;
  wire [3:0] _0036_;
  wire [3:0] _0037_;
  wire [31:0] _0038_;
  wire _0039_;
  wire _0040_;
  wire _0041_;
  wire [3:0] _0042_;
  wire [3:0] _0043_;
  wire [3:0] _0044_;
  wire [3:0] _0045_;
  wire [3:0] _0046_;
  wire [31:0] _0047_;
  wire [31:0] _0048_;
  wire [31:0] _0049_;
  wire [31:0] _0050_;
  wire _0051_;
  wire _0052_;
  wire _0053_;
  wire [31:0] _0054_;
  wire [31:0] _0055_;
  wire [31:0] _0056_;
  wire [31:0] _0057_;
  wire [31:0] _0058_;
  wire [31:0] _0059_;
  wire _0060_;
  wire _0061_;
  wire _0062_;
  wire _0063_;
  wire _0064_;
  wire _0065_;
  wire _0066_;
  wire _0067_;
  wire [31:0] _0068_;
  wire [31:0] _0069_;
  wire [31:0] _0070_;
  wire [31:0] _0071_;
  wire _0072_;
  wire _0073_;
  wire _0074_;
  wire [31:0] _0075_;
  wire [31:0] _0076_;
  wire [31:0] _0077_;
  wire [31:0] _0078_;
  wire [31:0] _0079_;
  wire [31:0] _0080_;
  wire _0081_;
  wire [31:0] _0082_;
  wire [31:0] _0083_;
  wire [5:0] _0084_;
  wire _0085_;
  wire [31:0] _0086_;
  wire _0087_;
  wire _0088_;
  wire _0089_;
  wire [5:0] _0090_;
  wire [31:0] _0091_;
  wire [31:0] _0092_;
  wire [31:0] _0093_;
  wire [31:0] _0094_;
  wire [31:0] _0095_;
  wire _0096_;
  wire _0097_;
  wire _0098_;
  wire _0099_;
  wire _0100_;
  wire _0101_;
  wire _0102_;
  wire _0103_;
  wire _0104_;
  wire _0105_;
  wire _0106_;
  wire _0107_;
  wire _0108_;
  wire _0109_;
  wire _0110_;
  wire _0111_;
  wire _0112_;
  wire _0113_;
  wire _0114_;
  wire _0115_;
  wire [31:0] _0116_;
  wire _0117_;
  wire _0118_;
  wire _0119_;
  wire _0120_;
  wire _0121_;
  wire _0122_;
  wire _0123_;
  wire _0124_;
  wire [31:0] _0125_;
  wire _0126_;
  wire [31:0] _0127_;
  wire [5:0] _0128_;
  wire [5:0] _0129_;
  wire [5:0] _0130_;
  wire [5:0] _0131_;
  wire [5:0] _0132_;
  wire [5:0] _0133_;
  wire [31:0] _0134_;
  wire [31:0] _0135_;
  wire _0136_;
  wire [31:0] _0137_;
  wire [31:0] _0138_;
  wire [31:0] _0139_;
  wire [31:0] _0140_;
  wire _0141_;
  wire [31:0] _0142_;
  wire [31:0] _0143_;
  wire [31:0] _0144_;
  wire [31:0] _0145_;
  wire [31:0] _0146_;
  wire [31:0] _0147_;
  wire _0148_;
  wire [31:0] _0149_;
  wire _0150_;
  wire [31:0] _0151_;
  wire [31:0] _0152_;
  wire [31:0] _0153_;
  wire [31:0] _0154_;
  wire [1:0] _0155_;
  wire _0156_;
  wire [1:0] _0157_;
  wire [1:0] _0158_;
  wire [31:0] _0159_;
  wire [31:0] _0160_;
  wire [31:0] _0161_;
  wire _0162_;
  wire _0163_;
  wire [31:0] _0164_;
  wire [31:0] _0165_;
  wire [31:0] _0166_;
  wire [31:0] _0167_;
  wire [31:0] _0168_;
  wire [31:0] _0169_;
  wire _0170_;
  wire [31:0] _0171_;
  wire [31:0] _0172_;
  wire [31:0] _0173_;
  wire _0174_;
  wire [31:0] _0175_;
  wire [31:0] _0176_;
  wire [31:0] _0177_;
  wire [31:0] _0178_;
  wire [31:0] _0179_;
  wire [31:0] _0180_;
  wire _0181_;
  wire [31:0] _0182_;
  wire [31:0] _0183_;
  wire [31:0] _0184_;
  wire _0185_;
  wire _0186_;
  wire [31:0] _0187_;
  wire [31:0] _0188_;
  wire [31:0] _0189_;
  wire _0190_;
  wire [31:0] _0191_;
  wire _0192_;
  wire [31:0] _0193_;
  wire [31:0] _0194_;
  wire [31:0] _0195_;
  wire [31:0] _0196_;
  wire _0197_;
  wire [31:0] _0198_;
  wire [31:0] _0199_;
  wire [1:0] _0200_;
  wire _0201_;
  wire [31:0] _0202_;
  wire [31:0] _0203_;
  wire [31:0] _0204_;
  wire [31:0] _0205_;
  wire [1:0] _0206_;
  wire [31:0] _0207_;
  wire [31:0] _0208_;
  wire [31:0] _0209_;
  wire _0210_;
  wire [31:0] _0211_;
  wire _0212_;
  wire [31:0] _0213_;
  wire [31:0] _0214_;
  wire [31:0] _0215_;
  wire [31:0] _0216_;
  wire [31:0] _0217_;
  wire [31:0] _0218_;
  wire [31:0] _0219_;
  wire [31:0] _0220_;
  wire [31:0] _0221_;
  wire [5:0] _0222_;
  wire [31:0] _0223_;
  wire [31:0] _0224_;
  wire [31:0] _0225_;
  wire [31:0] _0226_;
  wire [31:0] _0227_;
  wire [31:0] _0228_;
  wire [31:0] _0229_;
  wire [31:0] _0230_;
  wire _0231_;
  wire _0232_;
  wire _0233_;
  wire _0234_;
  wire _0235_;
  wire _0236_;
  wire _0237_;
  wire _0238_;
  wire _0239_;
  wire _0240_;
  wire _0241_;
  wire _0242_;
  wire _0243_;
  wire _0244_;
  wire _0245_;
  wire _0246_;
  wire _0247_;
  wire _0248_;
  wire _0249_;
  wire [31:0] _0250_;
  wire [31:0] _0251_;
  wire [31:0] _0252_;
  wire _0253_;
  wire _0254_;
  wire _0255_;
  wire _0256_;
  wire _0257_;
  wire _0258_;
  wire _0259_;
  wire _0260_;
  wire _0261_;
  wire _0262_;
  wire [6:0] _0263_;
  wire _0264_;
  wire [2:0] _0265_;
  wire _0266_;
  wire _0267_;
  wire _0268_;
  wire _0269_;
  wire [1:0] _0270_;
  wire _0271_;
  wire _0272_;
  wire _0273_;
  wire _0274_;
  wire _0275_;
  wire _0276_;
  wire _0277_;
  wire _0278_;
  wire _0279_;
  wire _0280_;
  wire [1:0] _0281_;
  wire _0282_;
  wire _0283_;
  wire [31:0] _0284_;
  wire [31:0] _0285_;
  wire [31:0] _0286_;
  wire [31:0] _0287_;
  wire [31:0] _0288_;
  wire [31:0] _0289_;
  wire [31:0] _0290_;
  wire [31:0] _0291_;
  wire [31:0] _0292_;
  wire [31:0] _0293_;
  wire _0294_;
  wire _0295_;
  wire _0296_;
  wire _0297_;
  wire _0298_;
  wire _0299_;
  wire _0300_;
  wire _0301_;
  wire _0302_;
  wire _0303_;
  wire _0304_;
  wire _0305_;
  wire _0306_;
  wire _0307_;
  wire _0308_;
  wire _0309_;
  wire _0310_;
  wire _0311_;
  wire _0312_;
  wire _0313_;
  wire _0314_;
  wire _0315_;
  wire _0316_;
  wire _0317_;
  wire _0318_;
  wire _0319_;
  wire _0320_;
  wire _0321_;
  wire _0322_;
  wire _0323_;
  wire _0324_;
  wire _0325_;
  wire _0326_;
  wire _0327_;
  wire _0328_;
  wire _0329_;
  wire _0330_;
  wire _0331_;
  wire _0332_;
  wire _0333_;
  wire _0334_;
  wire _0335_;
  wire _0336_;
  wire _0337_;
  wire _0338_;
  wire _0339_;
  wire _0340_;
  wire _0341_;
  wire _0342_;
  wire _0343_;
  wire _0344_;
  wire _0345_;
  wire _0346_;
  wire _0347_;
  wire _0348_;
  wire _0349_;
  wire _0350_;
  wire _0351_;
  wire _0352_;
  wire _0353_;
  wire _0354_;
  wire _0355_;
  wire _0356_;
  wire _0357_;
  wire _0358_;
  wire _0359_;
  wire _0360_;
  wire _0361_;
  wire _0362_;
  wire _0363_;
  wire _0364_;
  wire _0365_;
  wire _0366_;
  wire _0367_;
  wire _0368_;
  wire _0369_;
  wire _0370_;
  wire _0371_;
  wire _0372_;
  wire _0373_;
  wire _0374_;
  wire _0375_;
  wire _0376_;
  wire _0377_;
  wire _0378_;
  wire _0379_;
  wire _0380_;
  wire _0381_;
  wire _0382_;
  wire _0383_;
  wire _0384_;
  wire _0385_;
  wire _0386_;
  wire _0387_;
  wire _0388_;
  wire _0389_;
  wire _0390_;
  wire _0391_;
  wire _0392_;
  wire _0393_;
  wire _0394_;
  wire _0395_;
  wire _0396_;
  wire _0397_;
  wire _0398_;
  wire _0399_;
  wire _0400_;
  wire _0401_;
  wire _0402_;
  wire _0403_;
  wire _0404_;
  wire _0405_;
  wire _0406_;
  wire _0407_;
  wire _0408_;
  wire _0409_;
  wire _0410_;
  wire _0411_;
  wire _0412_;
  wire _0413_;
  wire _0414_;
  wire _0415_;
  wire _0416_;
  wire _0417_;
  wire _0418_;
  wire _0419_;
  wire _0420_;
  wire _0421_;
  wire _0422_;
  wire _0423_;
  wire _0424_;
  wire _0425_;
  wire _0426_;
  wire _0427_;
  wire _0428_;
  wire _0429_;
  wire _0430_;
  wire _0431_;
  wire _0432_;
  wire _0433_;
  wire _0434_;
  wire _0435_;
  wire _0436_;
  wire _0437_;
  wire _0438_;
  wire _0439_;
  wire _0440_;
  wire _0441_;
  wire _0442_;
  wire _0443_;
  wire _0444_;
  wire _0445_;
  wire _0446_;
  wire _0447_;
  wire _0448_;
  wire _0449_;
  wire _0450_;
  wire _0451_;
  wire _0452_;
  wire _0453_;
  wire _0454_;
  wire _0455_;
  wire _0456_;
  wire _0457_;
  wire _0458_;
  wire _0459_;
  wire _0460_;
  wire _0461_;
  wire _0462_;
  wire _0463_;
  wire _0464_;
  wire _0465_;
  wire _0466_;
  wire _0467_;
  wire _0468_;
  wire _0469_;
  wire _0470_;
  wire _0471_;
  wire _0472_;
  wire _0473_;
  wire _0474_;
  wire _0475_;
  wire _0476_;
  wire _0477_;
  wire _0478_;
  wire _0479_;
  wire _0480_;
  wire _0481_;
  wire _0482_;
  wire _0483_;
  wire _0484_;
  wire _0485_;
  wire _0486_;
  wire _0487_;
  wire _0488_;
  wire _0489_;
  wire _0490_;
  wire _0491_;
  wire _0492_;
  wire [31:0] _0493_;
  wire [62:0] _0494_;
  wire _0495_;
  wire [31:0] _0496_;
  wire [31:0] _0497_;
  wire _0498_;
  wire [31:0] _0499_;
  wire [31:0] _0500_;
  wire _0501_;
  wire _0502_;
  wire _0503_;
  wire _0504_;
  wire _0505_;
  wire _0506_;
  wire _0507_;
  wire _0508_;
  wire _0509_;
  wire _0510_;
  wire _0511_;
  wire _0512_;
  wire _0513_;
  wire _0514_;
  wire [31:0] _0515_;
  wire [31:0] _0516_;
  wire [31:0] _0517_;
  wire [31:0] _0518_;
  wire [31:0] _0519_;
  wire [31:0] _0520_;
  wire _0521_;
  wire _0522_;
  wire _0523_;
  wire _0524_;
  wire [31:0] _0525_;
  wire [31:0] _0526_;
  wire [31:0] _0527_;
  wire [31:0] _0528_;
  wire [31:0] _0529_;
  wire [31:0] _0530_;
  wire [31:0] _0531_;
  wire [62:0] _0532_;
  wire [62:0] _0533_;
  wire [62:0] _0534_;
  wire [62:0] _0535_;
  wire [31:0] _0536_;
  wire [31:0] _0537_;
  wire [31:0] _0538_;
  wire [31:0] _0539_;
  wire [31:0] _0540_;
  wire _0541_;
  wire _0542_;
  wire [31:0] _0543_;
  wire [31:0] _0544_;
  wire [31:0] _0545_;
  wire [31:0] _0546_;
  wire [3:0] _0547_;
  wire [31:0] _0548_;
  wire [31:0] _0549_;
  wire [3:0] _0550_;
  wire [31:0] _0551_;
  wire [31:0] _0552_;
  wire [3:0] _0553_;
  wire [31:0] _0554_;
  wire [31:0] _0555_;
  wire [3:0] _0556_;
  wire [31:0] _0557_;
  wire [31:0] _0558_;
  wire [3:0] _0559_;
  wire [31:0] _0560_;
  wire [31:0] _0561_;
  wire [3:0] _0562_;
  wire [31:0] _0563_;
  wire [31:0] _0564_;
  wire [3:0] _0565_;
  wire [31:0] _0566_;
  wire [31:0] _0567_;
  wire [2:0] _0568_;
  wire [31:0] _0569_;
  wire [31:0] _0570_;
  wire [2:0] _0571_;
  wire [31:0] _0572_;
  wire [31:0] _0573_;
  wire [2:0] _0574_;
  wire [31:0] _0575_;
  wire [31:0] _0576_;
  wire [2:0] _0577_;
  wire [31:0] _0578_;
  wire [31:0] _0579_;
  wire [2:0] _0580_;
  wire [31:0] _0581_;
  wire [31:0] _0582_;
  wire [2:0] _0583_;
  wire [31:0] _0584_;
  wire [3:0] _0585_;
  wire [31:0] _0586_;
  wire [31:0] _0587_;
  wire _0588_;
  wire _0589_;
  wire [31:0] _0590_;
  wire [3:0] _0591_;
  wire [31:0] _0592_;
  wire [31:0] _0593_;
  wire _0594_;
  wire _0595_;
  wire [3:0] _0596_;
  wire [31:0] _0597_;
  wire [31:0] _0598_;
  wire _0599_;
  wire _0600_;
  wire [3:0] _0601_;
  wire [31:0] _0602_;
  wire [31:0] _0603_;
  wire _0604_;
  wire _0605_;
  wire [3:0] _0606_;
  wire [31:0] _0607_;
  wire [31:0] _0608_;
  wire _0609_;
  wire _0610_;
  wire _0611_;
  wire [3:0] _0612_;
  wire [31:0] _0613_;
  wire [31:0] _0614_;
  wire _0615_;
  wire _0616_;
  wire _0617_;
  wire [3:0] _0618_;
  wire [31:0] _0619_;
  wire [31:0] _0620_;
  wire _0621_;
  wire _0622_;
  wire [3:0] _0623_;
  wire [31:0] _0624_;
  wire [31:0] _0625_;
  wire [31:0] _0626_;
  wire [31:0] _0627_;
  wire [31:0] _0628_;
  wire [31:0] _0629_;
  wire [31:0] _0630_;
  wire [31:0] _0631_;
  wire [31:0] _0632_;
  wire _0633_;
  wire _0634_;
  wire _0635_;
  wire _0636_;
  wire _0637_;
  wire _0638_;
  wire _0639_;
  wire _0640_;
  wire _0641_;
  wire _0642_;
  wire _0643_;
  wire _0644_;
  wire _0645_;
  wire _0646_;
  wire _0647_;
  wire _0648_;
  wire _0649_;
  wire _0650_;
  wire _0651_;
  wire _0652_;
  wire _0653_;
  wire _0654_;
  wire _0655_;
  wire _0656_;
  wire _0657_;
  wire _0658_;
  wire _0659_;
  wire _0660_;
  wire _0661_;
  wire _0662_;
  wire _0663_;
  wire _0664_;
  wire _0665_;
  wire _0666_;
  wire _0667_;
  wire _0668_;
  wire _0669_;
  wire _0670_;
  wire _0671_;
  wire _0672_;
  wire _0673_;
  wire _0674_;
  wire _0675_;
  wire [31:0] _0676_;
  wire [31:0] _0677_;
  wire [31:0] _0678_;
  wire [31:0] _0679_;
  wire [31:0] _0680_;
  wire [31:0] _0681_;
  wire [31:0] _0682_;
  wire [31:0] _0683_;
  wire [31:0] _0684_;
  wire [31:0] _0685_;
  wire [31:0] _0686_;
  wire [31:0] _0687_;
  wire [15:0] _0688_;
  wire [31:0] _0689_;
  wire _0690_;
  wire [31:0] _0691_;
  wire [31:0] _0692_;
  wire [31:0] _0693_;
  wire _0694_;
  wire _0695_;
  wire _0696_;
  wire _0697_;
  wire [31:0] _0698_;
  wire _0699_;
  wire [1:0] _0700_;
  wire _0701_;
  wire _0702_;
  wire _0703_;
  wire _0704_;
  wire _0705_;
  wire _0706_;
  wire _0707_;
  wire _0708_;
  wire [31:0] _0709_;
  wire [31:0] _0710_;
  wire [31:0] _0711_;
  wire _0712_;
  wire _0713_;
  wire [31:0] _0714_;
  wire _0715_;
  wire _0716_;
  wire [31:0] _0717_;
  wire [31:0] _0718_;
  wire [65:0] _0719_;
  wire _0720_;
  wire [31:0] _0721_;
  wire _0722_;
  wire _0723_;
  wire _0724_;
  wire _0725_;
  wire _0726_;
  wire _0727_;
  wire _0728_;
  wire _0729_;
  wire _0730_;
  wire _0731_;
  wire _0732_;
  wire _0733_;
  wire _0734_;
  wire [65:0] _0735_;
  wire [31:0] _0736_;
  wire _0737_;
  wire _0738_;
  wire [31:0] _0739_;
  wire [31:0] _0740_;
  wire _0741_;
  wire _0742_;
  wire _0743_;
  wire [31:0] _0744_;
  wire [31:0] _0745_;
  wire _0746_;
  wire _0747_;
  wire _0748_;
  wire _0749_;
  wire [31:0] _0750_;
  wire [31:0] _0751_;
  wire [31:0] _0752_;
  wire [31:0] _0753_;
  wire [31:0] _0754_;
  wire _0755_;
  wire [31:0] _0756_;
  wire [31:0] _0757_;
  wire [31:0] _0758_;
  wire [31:0] _0759_;
  wire _0760_;
  wire [5:0] _0761_;
  wire _0762_;
  wire _0763_;
  wire _0764_;
  wire _0765_;
  wire _0766_;
  wire _0767_;
  wire _0768_;
  wire _0769_;
  wire _0770_;
  wire _0771_;
  wire _0772_;
  wire _0773_;
  wire _0774_;
  wire _0775_;
  wire _0776_;
  wire _0777_;
  wire _0778_;
  wire _0779_;
  wire _0780_;
  wire _0781_;
  wire _0782_;
  wire _0783_;
  wire [31:0] _0784_;
  wire _0785_;
  wire _0786_;
  wire _0787_;
  wire [31:0] _0788_;
  wire _0789_;
  wire _0790_;
  wire _0791_;
  wire _0792_;
  wire _0793_;
  wire _0794_;
  wire _0795_;
  wire _0796_;
  wire _0797_;
  wire [31:0] _0798_;
  wire [31:0] _0799_;
  wire [31:0] _0800_;
  wire _0801_;
  wire _0802_;
  wire [9:0] _0803_;
  wire [9:0] _0804_;
  wire [9:0] _0805_;
  wire [5:0] _0806_;
  wire [5:0] _0807_;
  wire [5:0] _0808_;
  wire [31:0] _0809_;
  wire [31:0] _0810_;
  wire [31:0] _0811_;
  wire [31:0] _0812_;
  wire [31:0] _0813_;
  wire [31:0] _0814_;
  wire [31:0] _0815_;
  wire [31:0] _0816_;
  wire _0817_;
  wire _0818_;
  wire _0819_;
  wire _0820_;
  wire [31:0] _0821_;
  wire _0822_;
  wire _0823_;
  wire _0824_;
  wire _0825_;
  wire _0826_;
  wire _0827_;
  wire _0828_;
  wire _0829_;
  wire _0830_;
  wire _0831_;
  wire [9:0] _0832_;
  wire [5:0] _0833_;
  wire _0834_;
  wire _0835_;
  wire _0836_;
  wire _0837_;
  wire _0838_;
  wire _0839_;
  wire _0840_;
  wire _0841_;
  wire _0842_;
  wire _0843_;
  wire _0844_;
  wire _0845_;
  wire _0846_;
  wire _0847_;
  wire _0848_;
  wire _0849_;
  wire _0850_;
  wire _0851_;
  wire _0852_;
  wire _0853_;
  wire _0854_;
  wire _0855_;
  wire _0856_;
  wire _0857_;
  wire _0858_;
  wire _0859_;
  wire _0860_;
  wire _0861_;
  wire _0862_;
  wire [5:0] _0863_;
  wire [5:0] _0864_;
  wire [31:0] _0865_;
  wire [31:0] _0866_;
  wire [31:0] _0867_;
  wire [31:0] _0868_;
  wire [31:0] _0869_;
  wire [31:0] _0870_;
  wire [31:0] _0871_;
  wire [31:0] _0872_;
  wire [31:0] _0873_;
  wire [31:0] _0874_;
  wire _0875_;
  wire _0876_;
  wire [9:0] _0877_;
  wire [9:0] _0878_;
  wire [9:0] _0879_;
  wire _0880_;
  wire [5:0] _0881_;
  wire _0882_;
  wire _0883_;
  wire _0884_;
  wire _0885_;
  wire [5:0] _0886_;
  wire _0887_;
  wire [5:0] _0888_;
  wire [5:0] _0889_;
  wire [5:0] _0890_;
  wire [31:0] _0891_;
  wire [31:0] _0892_;
  wire [31:0] _0893_;
  wire [31:0] _0894_;
  wire [31:0] _0895_;
  wire [31:0] _0896_;
  wire _0897_;
  wire _0898_;
  wire [9:0] _0899_;
  wire [9:0] _0900_;
  wire _0901_;
  wire _0902_;
  wire _0903_;
  wire _0904_;
  wire [31:0] _0905_;
  wire [31:0] _0906_;
  wire [31:0] _0907_;
  wire [31:0] _0908_;
  wire _0909_;
  wire _0910_;
  wire _0911_;
  wire _0912_;
  wire _0913_;
  wire _0914_;
  wire _0915_;
  wire _0916_;
  wire _0917_;
  wire _0918_;
  wire _0919_;
  wire _0920_;
  wire _0921_;
  wire _0922_;
  wire _0923_;
  wire _0924_;
  wire _0925_;
  wire _0926_;
  wire _0927_;
  wire _0928_;
  wire [31:0] _0929_;
  wire [31:0] _0930_;
  wire [31:0] _0931_;
  wire [31:0] _0932_;
  wire _0933_;
  wire [5:0] _0934_;
  wire [5:0] _0935_;
  wire _0936_;
  wire [5:0] _0937_;
  wire [31:0] _0938_;
  wire [31:0] _0939_;
  wire [31:0] _0940_;
  wire [31:0] _0941_;
  wire [31:0] _0942_;
  wire [31:0] _0943_;
  wire [31:0] _0944_;
  wire [31:0] _0945_;
  wire [31:0] _0946_;
  wire [31:0] _0947_;
  wire [31:0] _0948_;
  wire [31:0] _0949_;
  wire [31:0] _0950_;
  wire [31:0] _0951_;
  wire [31:0] _0952_;
  wire [31:0] _0953_;
  wire [31:0] _0954_;
  wire [31:0] _0955_;
  wire [31:0] _0956_;
  wire [31:0] _0957_;
  wire [31:0] _0958_;
  wire [31:0] _0959_;
  wire [31:0] _0960_;
  wire [31:0] _0961_;
  wire [31:0] _0962_;
  wire [31:0] _0963_;
  wire [31:0] _0964_;
  wire [31:0] _0965_;
  wire [31:0] _0966_;
  wire [31:0] _0967_;
  wire [31:0] _0968_;
  wire _0969_;
  wire _0970_;
  wire _0971_;
  wire _0972_;
  wire _0973_;
  wire _0974_;
  wire _0975_;
  wire _0976_;
  wire _0977_;
  wire _0978_;
  wire _0979_;
  wire _0980_;
  wire _0981_;
  wire _0982_;
  wire _0983_;
  wire _0984_;
  wire _0985_;
  wire _0986_;
  wire _0987_;
  wire _0988_;
  wire _0989_;
  wire _0990_;
  wire _0991_;
  wire _0992_;
  wire _0993_;
  wire _0994_;
  wire _0995_;
  wire _0996_;
  wire _0997_;
  wire _0998_;
  wire _0999_;
  wire _1000_;
  wire _1001_;
  wire _1002_;
  wire _1003_;
  wire _1004_;
  wire _1005_;
  wire _1006_;
  wire _1007_;
  wire _1008_;
  wire _1009_;
  wire _1010_;
  wire _1011_;
  wire _1012_;
  wire _1013_;
  wire _1014_;
  wire _1015_;
  wire _1016_;
  wire _1017_;
  wire _1018_;
  wire _1019_;
  wire _1020_;
  wire _1021_;
  wire _1022_;
  wire _1023_;
  wire _1024_;
  wire _1025_;
  wire _1026_;
  wire _1027_;
  wire _1028_;
  wire _1029_;
  wire _1030_;
  wire _1031_;
  wire _1032_;
  wire _1033_;
  wire _1034_;
  wire _1035_;
  wire _1036_;
  wire _1037_;
  wire _1038_;
  wire _1039_;
  wire _1040_;
  wire _1041_;
  wire _1042_;
  wire _1043_;
  wire _1044_;
  wire _1045_;
  wire _1046_;
  wire _1047_;
  wire _1048_;
  wire _1049_;
  wire _1050_;
  wire _1051_;
  wire _1052_;
  wire _1053_;
  wire _1054_;
  wire _1055_;
  wire _1056_;
  wire _1057_;
  wire _1058_;
  wire _1059_;
  wire _1060_;
  wire _1061_;
  wire [31:0] _1062_;
  wire [31:0] _1063_;
  wire [31:0] _1064_;
  wire [31:0] _1065_;
  wire [31:0] _1066_;
  wire [31:0] _1067_;
  wire [31:0] _1068_;
  wire [31:0] _1069_;
  wire [31:0] _1070_;
  wire [31:0] _1071_;
  wire [31:0] _1072_;
  wire [31:0] _1073_;
  wire [31:0] _1074_;
  wire [31:0] _1075_;
  wire [31:0] _1076_;
  wire [31:0] _1077_;
  wire [31:0] _1078_;
  wire [31:0] _1079_;
  wire [31:0] _1080_;
  wire [31:0] _1081_;
  wire [31:0] _1082_;
  wire [31:0] _1083_;
  wire [31:0] _1084_;
  wire [31:0] _1085_;
  wire [31:0] _1086_;
  wire [31:0] _1087_;
  wire [31:0] _1088_;
  wire [31:0] _1089_;
  wire [31:0] _1090_;
  wire [31:0] _1091_;
  wire [31:0] _1092_;
  wire [31:0] _1093_;
  wire _1094_;
  wire [31:0] _1095_;
  wire _1096_;
  wire _1097_;
  wire _1098_;
  wire _1099_;
  wire _1100_;
  wire _1101_;
  wire _1102_;
  wire [3:0] _1103_;
  wire _1104_;
  wire _1105_;
  wire _1106_;
  wire _1107_;
  wire [31:0] _1108_;
  wire [31:0] _1109_;
  wire _1110_;
  wire [3:0] _1111_;
  wire [31:0] _1112_;
  wire [31:0] _1113_;
  wire [3:0] _1114_;
  wire [31:0] _1115_;
  wire [31:0] _1116_;
  wire [3:0] _1117_;
  wire [31:0] _1118_;
  wire [31:0] _1119_;
  wire [3:0] _1120_;
  wire [31:0] _1121_;
  wire [31:0] _1122_;
  wire [31:0] _1123_;
  wire [31:0] _1124_;
  wire [31:0] _1125_;
  wire [31:0] _1126_;
  wire _1127_;
  wire [31:0] _1128_;
  wire _1129_;
  wire _1130_;
  wire _1131_;
  wire [31:0] _1132_;
  wire [5:0] _1133_;
  wire [5:0] _1134_;
  wire [5:0] _1135_;
  wire [5:0] _1136_;
  wire [5:0] _1137_;
  wire _1138_;
  wire _1139_;
  wire _1140_;
  wire _1141_;
  wire _1142_;
  wire _1143_;
  wire _1144_;
  wire _1145_;
  wire _1146_;
  wire _1147_;
  wire _1148_;
  wire _1149_;
  wire _1150_;
  wire _1151_;
  wire _1152_;
  wire _1153_;
  wire _1154_;
  wire _1155_;
  wire _1156_;
  wire _1157_;
  wire _1158_;
  wire _1159_;
  wire _1160_;
  wire _1161_;
  wire _1162_;
  wire _1163_;
  wire _1164_;
  wire _1165_;
  wire _1166_;
  wire _1167_;
  wire _1168_;
  wire _1169_;
  wire _1170_;
  wire _1171_;
  wire _1172_;
  wire _1173_;
  wire _1174_;
  wire _1175_;
  wire _1176_;
  wire _1177_;
  wire _1178_;
  wire _1179_;
  wire _1180_;
  wire _1181_;
  wire _1182_;
  wire _1183_;
  wire _1184_;
  wire _1185_;
  wire _1186_;
  wire _1187_;
  wire _1188_;
  wire _1189_;
  wire _1190_;
  wire _1191_;
  wire _1192_;
  wire _1193_;
  wire _1194_;
  wire _1195_;
  wire _1196_;
  wire _1197_;
  wire [3:0] _1198_;
  wire _1199_;
  wire _1200_;
  wire _1201_;
  wire [31:0] _1202_;
  wire [31:0] _1203_;
  wire [31:0] _1204_;
  wire [31:0] _1205_;
  wire _1206_;
  wire _1207_;
  wire _1208_;
  wire _1209_;
  wire [31:0] _1210_;
  wire [31:0] _1211_;
  wire _1212_;
  wire _1213_;
  wire _1214_;
  wire _1215_;
  wire _1216_;
  wire _1217_;
  wire _1218_;
  wire _1219_;
  wire _1220_;
  wire _1221_;
  wire _1222_;
  wire _1223_;
  wire _1224_;
  wire _1225_;
  wire _1226_;
  wire _1227_;
  wire _1228_;
  wire _1229_;
  wire _1230_;
  wire _1231_;
  wire _1232_;
  wire _1233_;
  wire _1234_;
  wire _1235_;
  wire _1236_;
  wire _1237_;
  wire _1238_;
  wire [3:0] _1239_;
  wire [3:0] _1240_;
  wire [3:0] _1241_;
  wire _1242_;
  wire _1243_;
  wire _1244_;
  wire [31:0] _1245_;
  wire [31:0] _1246_;
  wire [31:0] _1247_;
  wire [31:0] _1248_;
  wire [31:0] _1249_;
  wire [31:0] _1250_;
  wire _1251_;
  wire _1252_;
  wire _1253_;
  wire _1254_;
  wire _1255_;
  wire _1256_;
  wire _1257_;
  wire _1258_;
  wire [35:0] _1259_;
  wire _1260_;
  wire [35:0] _1261_;
  wire [35:0] _1262_;
  wire [1:0] _1263_;
  wire _1264_;
  wire _1265_;
  wire _1266_;
  wire [31:0] _1267_;
  wire [31:0] _1268_;
  wire _1269_;
  wire _1270_;
  wire _1271_;
  wire _1272_;
  wire _1273_;
  wire _1274_;
  wire _1275_;
  wire _1276_;
  wire _1277_;
  wire _1278_;
  wire _1279_;
  wire _1280_;
  wire _1281_;
  wire _1282_;
  wire _1283_;
  wire _1284_;
  wire [35:0] _1285_;
  wire [35:0] _1286_;
  wire [35:0] _1287_;
  wire [35:0] _1288_;
  wire [35:0] _1289_;
  wire [35:0] _1290_;
  wire _1291_;
  wire _1292_;
  wire [35:0] _1293_;
  wire [35:0] _1294_;
  wire _1295_;
  wire [1:0] _1296_;
  wire [1:0] _1297_;
  wire _1298_;
  wire _1299_;
  wire [31:0] _1300_;
  wire _1301_;
  wire [32:0] _1302_;
  wire [32:0] _1303_;
  wire [31:0] _1304_;
  wire [32:0] _1305_;
  wire [32:0] _1306_;
  wire [31:0] _1307_;
  wire _1308_;
  wire _1309_;
  wire _1310_;
  wire _1311_;
  wire _1312_;
  wire _1313_;
  wire _1314_;
  wire _1315_;
  wire [31:0] _1316_;
  wire _1317_;
  wire _1318_;
  wire [32:0] _1319_;
  wire [32:0] _1320_;
  wire [32:0] _1321_;
  wire [32:0] _1322_;
  input clk_i;
  input [31:0] cpu_id_i;
  wire \fifo_d_addr.clk ;
  wire [31:0] \fifo_d_addr.in ;
  wire [31:0] \fifo_d_addr.out0 ;
  wire [31:0] \fifo_d_addr.out1 ;
  reg [31:0] \fifo_d_addr.pointer ;
  wire [31:0] \fifo_d_addr.pointer_nxt ;
  reg [31:0] \fifo_d_addr.r0 ;
  reg [31:0] \fifo_d_addr.r1 ;
  wire \fifo_d_addr.rst ;
  wire \fifo_d_addr.wr ;
  wire \fifo_d_data_wr.clk ;
  wire [31:0] \fifo_d_data_wr.in ;
  wire [31:0] \fifo_d_data_wr.out0 ;
  wire [31:0] \fifo_d_data_wr.out1 ;
  reg [31:0] \fifo_d_data_wr.pointer ;
  wire [31:0] \fifo_d_data_wr.pointer_nxt ;
  reg [31:0] \fifo_d_data_wr.r0 ;
  reg [31:0] \fifo_d_data_wr.r1 ;
  wire \fifo_d_data_wr.rst ;
  wire \fifo_d_data_wr.wr ;
  wire \fifo_d_rd.clk ;
  wire \fifo_d_rd.in ;
  wire \fifo_d_rd.out0 ;
  wire \fifo_d_rd.out1 ;
  reg \fifo_d_rd.pointer ;
  wire \fifo_d_rd.pointer_nxt ;
  reg \fifo_d_rd.r0 ;
  reg \fifo_d_rd.r1 ;
  wire \fifo_d_rd.rst ;
  wire \fifo_d_rd.wr ;
  wire \fifo_d_wr.clk ;
  wire [3:0] \fifo_d_wr.in ;
  wire [3:0] \fifo_d_wr.out0 ;
  reg [3:0] \fifo_d_wr.out1 ;
  reg [3:0] \fifo_d_wr.pointer ;
  wire [3:0] \fifo_d_wr.pointer_nxt ;
  reg [3:0] \fifo_d_wr.r0 ;
  wire [2:0] \fifo_d_wr.r1 ;
  wire \fifo_d_wr.rst ;
  wire \fifo_d_wr.wr ;
  wire \fifo_i_pc.clk ;
  wire [31:0] \fifo_i_pc.in ;
  wire [31:0] \fifo_i_pc.out0 ;
  wire [31:0] \fifo_i_pc.out1 ;
  reg [31:0] \fifo_i_pc.pointer ;
  wire [31:0] \fifo_i_pc.pointer_nxt ;
  reg [31:0] \fifo_i_pc.r0 ;
  reg [31:0] \fifo_i_pc.r1 ;
  wire \fifo_i_pc.rst ;
  wire \fifo_i_pc.wr ;
  wire \fifo_i_rd.clk ;
  wire \fifo_i_rd.in ;
  wire \fifo_i_rd.out0 ;
  wire \fifo_i_rd.out1 ;
  reg \fifo_i_rd.pointer ;
  wire \fifo_i_rd.pointer_nxt ;
  reg \fifo_i_rd.r0 ;
  reg \fifo_i_rd.r1 ;
  wire \fifo_i_rd.rst ;
  wire \fifo_i_rd.wr ;
  wire \fifo_pc_out.clk ;
  wire [31:0] \fifo_pc_out.in ;
  wire [31:0] \fifo_pc_out.out0 ;
  wire [31:0] \fifo_pc_out.out1 ;
  reg [31:0] \fifo_pc_out.pointer ;
  wire [31:0] \fifo_pc_out.pointer_nxt ;
  reg [31:0] \fifo_pc_out.r0 ;
  reg [31:0] \fifo_pc_out.r1 ;
  wire \fifo_pc_out.rst ;
  wire \fifo_pc_out.wr ;
  input intr_i;
  input mem_d_accept_i;
  input mem_d_ack_i;
  wire [31:0] mem_d_addr_o;
  output [31:0] mem_d_addr_o_fifo0;
  output [31:0] mem_d_addr_o_fifo1;
  output mem_d_cacheable_o;
  input [31:0] mem_d_data_rd_i;
  wire [31:0] mem_d_data_wr_o;
  output [31:0] mem_d_data_wr_o_fifo0;
  output [31:0] mem_d_data_wr_o_fifo1;
  input mem_d_error_i;
  output mem_d_flush_o;
  output mem_d_invalidate_o;
  wire mem_d_rd_o;
  output mem_d_rd_o_fifo0;
  output mem_d_rd_o_fifo1;
  output [10:0] mem_d_req_tag_o;
  input [10:0] mem_d_resp_tag_i;
  wire [3:0] mem_d_wr_o;
  output [3:0] mem_d_wr_o_fifo0;
  output [3:0] mem_d_wr_o_fifo1;
  output mem_d_writeback_o;
  input mem_i_accept_i;
  input mem_i_error_i;
  output mem_i_flush_o;
  input [31:0] mem_i_inst_i;
  output mem_i_invalidate_o;
  wire [31:0] mem_i_pc_o;
  output [31:0] mem_i_pc_o_fifo0;
  output [31:0] mem_i_pc_o_fifo1;
  wire mem_i_rd_o;
  output mem_i_rd_o_fifo0;
  output mem_i_rd_o_fifo1;
  input mem_i_valid_i;
  wire [31:0] pc_f_q_out;
  output [31:0] pc_f_q_out_fifo0;
  output [31:0] pc_f_q_out_fifo1;
  input [31:0] reset_vector_i;
  input rst_i;
  wire [31:0] \u0.branch_csr_pc_w ;
  wire \u0.branch_csr_request_w ;
  wire [31:0] \u0.branch_d_exec_pc_w ;
  wire [1:0] \u0.branch_d_exec_priv_w ;
  wire \u0.branch_d_exec_request_w ;
  wire [31:0] \u0.branch_pc_w ;
  wire \u0.branch_request_w ;
  wire \u0.clk_i ;
  wire [31:0] \u0.cpu_id_i ;
  wire \u0.csr_opcode_invalid_w ;
  wire [31:0] \u0.csr_opcode_opcode_w ;
  wire [31:0] \u0.csr_opcode_pc_w ;
  wire [4:0] \u0.csr_opcode_ra_idx_w ;
  wire [31:0] \u0.csr_opcode_ra_operand_w ;
  wire [4:0] \u0.csr_opcode_rb_idx_w ;
  wire [31:0] \u0.csr_opcode_rb_operand_w ;
  wire [4:0] \u0.csr_opcode_rd_idx_w ;
  wire \u0.csr_opcode_valid_w ;
  wire [5:0] \u0.csr_result_e1_exception_w ;
  wire [31:0] \u0.csr_result_e1_value_w ;
  wire [31:0] \u0.csr_result_e1_wdata_w ;
  wire \u0.csr_result_e1_write_w ;
  wire [31:0] \u0.csr_writeback_exception_addr_w ;
  wire [31:0] \u0.csr_writeback_exception_pc_w ;
  wire [5:0] \u0.csr_writeback_exception_w ;
  wire [11:0] \u0.csr_writeback_waddr_w ;
  wire [31:0] \u0.csr_writeback_wdata_w ;
  wire \u0.csr_writeback_write_w ;
  wire \u0.div_opcode_valid_w ;
  wire \u0.exec_hold_w ;
  wire \u0.exec_opcode_valid_w ;
  wire \u0.fetch_accept_w ;
  wire \u0.fetch_dec_accept_w ;
  wire \u0.fetch_dec_fault_fetch_w ;
  wire \u0.fetch_dec_fault_page_w ;
  wire [31:0] \u0.fetch_dec_instr_w ;
  wire [31:0] \u0.fetch_dec_pc_w ;
  wire \u0.fetch_dec_valid_w ;
  wire \u0.fetch_fault_fetch_w ;
  wire \u0.fetch_fault_page_w ;
  wire \u0.fetch_in_fault_w ;
  wire \u0.fetch_instr_branch_w ;
  wire \u0.fetch_instr_csr_w ;
  wire \u0.fetch_instr_div_w ;
  wire \u0.fetch_instr_exec_w ;
  wire \u0.fetch_instr_invalid_w ;
  wire \u0.fetch_instr_lsu_w ;
  wire \u0.fetch_instr_mul_w ;
  wire \u0.fetch_instr_rd_valid_w ;
  wire [31:0] \u0.fetch_instr_w ;
  wire [31:0] \u0.fetch_pc_w ;
  wire \u0.fetch_valid_w ;
  wire \u0.ifence_w ;
  wire \u0.interrupt_inhibit_w ;
  wire \u0.intr_i ;
  wire \u0.lsu_opcode_invalid_w ;
  wire [31:0] \u0.lsu_opcode_opcode_w ;
  wire [31:0] \u0.lsu_opcode_pc_w ;
  wire [4:0] \u0.lsu_opcode_ra_idx_w ;
  wire [31:0] \u0.lsu_opcode_ra_operand_w ;
  wire [4:0] \u0.lsu_opcode_rb_idx_w ;
  wire [31:0] \u0.lsu_opcode_rb_operand_w ;
  wire [4:0] \u0.lsu_opcode_rd_idx_w ;
  wire \u0.lsu_opcode_valid_w ;
  wire \u0.lsu_stall_w ;
  wire \u0.mem_d_accept_i ;
  wire \u0.mem_d_ack_i ;
  wire [31:0] \u0.mem_d_addr_o ;
  wire \u0.mem_d_cacheable_o ;
  wire [31:0] \u0.mem_d_data_rd_i ;
  wire [31:0] \u0.mem_d_data_wr_o ;
  wire \u0.mem_d_error_i ;
  wire \u0.mem_d_flush_o ;
  wire \u0.mem_d_invalidate_o ;
  wire \u0.mem_d_rd_o ;
  wire [10:0] \u0.mem_d_req_tag_o ;
  wire [10:0] \u0.mem_d_resp_tag_i ;
  wire [3:0] \u0.mem_d_wr_o ;
  wire \u0.mem_d_writeback_o ;
  wire \u0.mem_i_accept_i ;
  wire \u0.mem_i_error_i ;
  wire \u0.mem_i_flush_o ;
  wire [31:0] \u0.mem_i_inst_i ;
  wire \u0.mem_i_invalidate_o ;
  wire [31:0] \u0.mem_i_pc_o ;
  wire \u0.mem_i_rd_o ;
  wire \u0.mem_i_valid_i ;
  wire \u0.mmu_ifetch_accept_w ;
  wire \u0.mmu_ifetch_error_w ;
  wire \u0.mmu_ifetch_flush_w ;
  wire [31:0] \u0.mmu_ifetch_inst_w ;
  wire \u0.mmu_ifetch_invalidate_w ;
  wire [31:0] \u0.mmu_ifetch_pc_w ;
  wire \u0.mmu_ifetch_rd_w ;
  wire \u0.mmu_ifetch_valid_w ;
  wire \u0.mmu_load_fault_w ;
  wire \u0.mmu_lsu_accept_w ;
  wire \u0.mmu_lsu_ack_w ;
  wire [31:0] \u0.mmu_lsu_addr_w ;
  wire \u0.mmu_lsu_cacheable_w ;
  wire [31:0] \u0.mmu_lsu_data_rd_w ;
  wire [31:0] \u0.mmu_lsu_data_wr_w ;
  wire \u0.mmu_lsu_error_w ;
  wire \u0.mmu_lsu_flush_w ;
  wire \u0.mmu_lsu_invalidate_w ;
  wire \u0.mmu_lsu_rd_w ;
  wire [10:0] \u0.mmu_lsu_req_tag_w ;
  wire [10:0] \u0.mmu_lsu_resp_tag_w ;
  wire [3:0] \u0.mmu_lsu_wr_w ;
  wire \u0.mmu_lsu_writeback_w ;
  wire \u0.mmu_mxr_w ;
  wire [31:0] \u0.mmu_satp_w ;
  wire \u0.mmu_store_fault_w ;
  wire \u0.mmu_sum_w ;
  wire \u0.mul_hold_w ;
  wire \u0.mul_opcode_invalid_w ;
  wire [31:0] \u0.mul_opcode_opcode_w ;
  wire [31:0] \u0.mul_opcode_pc_w ;
  wire [4:0] \u0.mul_opcode_ra_idx_w ;
  wire [31:0] \u0.mul_opcode_ra_operand_w ;
  wire [4:0] \u0.mul_opcode_rb_idx_w ;
  wire [31:0] \u0.mul_opcode_rb_operand_w ;
  wire [4:0] \u0.mul_opcode_rd_idx_w ;
  wire \u0.mul_opcode_valid_w ;
  wire \u0.opcode_invalid_w ;
  wire [31:0] \u0.opcode_opcode_w ;
  wire [31:0] \u0.opcode_pc_w ;
  wire [4:0] \u0.opcode_ra_idx_w ;
  wire [31:0] \u0.opcode_ra_operand_w ;
  wire [4:0] \u0.opcode_rb_idx_w ;
  wire [31:0] \u0.opcode_rb_operand_w ;
  wire [4:0] \u0.opcode_rd_idx_w ;
  wire [31:0] \u0.pc_f_q_out ;
  wire [31:0] \u0.reset_vector_i ;
  wire \u0.rst_i ;
  wire \u0.squash_decode_w ;
  wire \u0.take_interrupt_w ;
  wire [31:0] \u0.u_csr.branch_csr_pc_o ;
  wire \u0.u_csr.branch_csr_request_o ;
  reg \u0.u_csr.branch_q ;
  reg [31:0] \u0.u_csr.branch_target_q ;
  wire \u0.u_csr.clk_i ;
  wire \u0.u_csr.clr_r ;
  wire [31:0] \u0.u_csr.cpu_id_i ;
  wire \u0.u_csr.csr_branch_w ;
  wire \u0.u_csr.csr_fault_r ;
  wire [1:0] \u0.u_csr.csr_priv_r ;
  wire [31:0] \u0.u_csr.csr_rdata_w ;
  wire [5:0] \u0.u_csr.csr_result_e1_exception_o ;
  wire [31:0] \u0.u_csr.csr_result_e1_value_o ;
  wire [31:0] \u0.u_csr.csr_result_e1_wdata_o ;
  wire \u0.u_csr.csr_result_e1_write_o ;
  wire [31:0] \u0.u_csr.csr_target_w ;
  reg [31:0] \u0.u_csr.csr_wdata_e1_q ;
  wire \u0.u_csr.csr_write_r ;
  wire [31:0] \u0.u_csr.csr_writeback_exception_addr_i ;
  wire [5:0] \u0.u_csr.csr_writeback_exception_i ;
  wire [31:0] \u0.u_csr.csr_writeback_exception_pc_i ;
  wire [11:0] \u0.u_csr.csr_writeback_waddr_i ;
  wire [31:0] \u0.u_csr.csr_writeback_wdata_i ;
  wire \u0.u_csr.csr_writeback_write_i ;
  wire \u0.u_csr.csrrc_w ;
  wire \u0.u_csr.csrrci_w ;
  wire \u0.u_csr.csrrs_w ;
  wire \u0.u_csr.csrrsi_w ;
  wire \u0.u_csr.csrrw_w ;
  wire \u0.u_csr.csrrwi_w ;
  wire [1:0] \u0.u_csr.current_priv_w ;
  wire [31:0] \u0.u_csr.data_r ;
  reg [5:0] \u0.u_csr.exception_e1_q ;
  wire \u0.u_csr.ifence_o ;
  reg \u0.u_csr.ifence_q ;
  wire \u0.u_csr.ifence_w ;
  wire \u0.u_csr.interrupt_inhibit_i ;
  wire [31:0] \u0.u_csr.interrupt_w ;
  wire \u0.u_csr.intr_i ;
  wire [31:0] \u0.u_csr.misa_w ;
  wire \u0.u_csr.mmu_mxr_o ;
  wire [31:0] \u0.u_csr.mmu_satp_o ;
  wire \u0.u_csr.mmu_sum_o ;
  wire \u0.u_csr.opcode_invalid_i ;
  wire [31:0] \u0.u_csr.opcode_opcode_i ;
  wire [31:0] \u0.u_csr.opcode_pc_i ;
  wire [4:0] \u0.u_csr.opcode_ra_idx_i ;
  wire [31:0] \u0.u_csr.opcode_ra_operand_i ;
  wire [4:0] \u0.u_csr.opcode_rb_idx_i ;
  wire [31:0] \u0.u_csr.opcode_rb_operand_i ;
  wire [4:0] \u0.u_csr.opcode_rd_idx_i ;
  wire \u0.u_csr.opcode_valid_i ;
  reg [31:0] \u0.u_csr.rd_result_e1_q ;
  reg \u0.u_csr.rd_valid_e1_q ;
  reg \u0.u_csr.reset_q ;
  wire [31:0] \u0.u_csr.reset_vector_i ;
  wire \u0.u_csr.rst_i ;
  wire [31:0] \u0.u_csr.satp_reg_w ;
  wire \u0.u_csr.satp_update_w ;
  wire \u0.u_csr.set_r ;
  wire \u0.u_csr.sfence_w ;
  wire [31:0] \u0.u_csr.status_reg_w ;
  wire \u0.u_csr.take_interrupt_o ;
  reg \u0.u_csr.take_interrupt_q ;
  wire \u0.u_csr.timer_irq_w ;
  wire \u0.u_csr.u_csrfile.branch_r ;
  wire [31:0] \u0.u_csr.u_csrfile.branch_target_r ;
  wire \u0.u_csr.u_csrfile.buffer_mip_w ;
  wire \u0.u_csr.u_csrfile.clk_i ;
  wire [31:0] \u0.u_csr.u_csrfile.cpu_id_i ;
  wire \u0.u_csr.u_csrfile.csr_branch_o ;
  reg [31:0] \u0.u_csr.u_csrfile.csr_mcause_q ;
  wire [31:0] \u0.u_csr.u_csrfile.csr_mcause_r ;
  reg [31:0] \u0.u_csr.u_csrfile.csr_mcycle_q ;
  wire [31:0] \u0.u_csr.u_csrfile.csr_mcycle_r ;
  reg [31:0] \u0.u_csr.u_csrfile.csr_mepc_q ;
  wire [31:0] \u0.u_csr.u_csrfile.csr_mepc_r ;
  wire [31:0] \u0.u_csr.u_csrfile.csr_mideleg_q ;
  reg [31:0] \u0.u_csr.u_csrfile.csr_mie_q ;
  wire [31:0] \u0.u_csr.u_csrfile.csr_mie_r ;
  reg [31:0] \u0.u_csr.u_csrfile.csr_mip_next_q ;
  wire [31:0] \u0.u_csr.u_csrfile.csr_mip_next_r ;
  reg [31:0] \u0.u_csr.u_csrfile.csr_mip_q ;
  wire [31:0] \u0.u_csr.u_csrfile.csr_mip_r ;
  reg \u0.u_csr.u_csrfile.csr_mip_upd_q ;
  wire [1:0] \u0.u_csr.u_csrfile.csr_mpriv_q ;
  reg [31:0] \u0.u_csr.u_csrfile.csr_mscratch_q ;
  wire [31:0] \u0.u_csr.u_csrfile.csr_mscratch_r ;
  reg \u0.u_csr.u_csrfile.csr_mtime_ie_q ;
  wire \u0.u_csr.u_csrfile.csr_mtime_ie_r ;
  reg [31:0] \u0.u_csr.u_csrfile.csr_mtimecmp_q ;
  wire [31:0] \u0.u_csr.u_csrfile.csr_mtimecmp_r ;
  reg [31:0] \u0.u_csr.u_csrfile.csr_mtval_q ;
  wire [31:0] \u0.u_csr.u_csrfile.csr_mtval_r ;
  reg [31:0] \u0.u_csr.u_csrfile.csr_mtvec_q ;
  wire [31:0] \u0.u_csr.u_csrfile.csr_mtvec_r ;
  wire [11:0] \u0.u_csr.u_csrfile.csr_raddr_i ;
  wire [31:0] \u0.u_csr.u_csrfile.csr_rdata_o ;
  wire \u0.u_csr.u_csrfile.csr_ren_i ;
  wire [31:0] \u0.u_csr.u_csrfile.csr_satp_q ;
  wire [31:0] \u0.u_csr.u_csrfile.csr_sepc_q ;
  reg [31:0] \u0.u_csr.u_csrfile.csr_sr_q ;
  wire [31:0] \u0.u_csr.u_csrfile.csr_sr_r ;
  wire [31:0] \u0.u_csr.u_csrfile.csr_stvec_q ;
  wire [31:0] \u0.u_csr.u_csrfile.csr_target_o ;
  wire [11:0] \u0.u_csr.u_csrfile.csr_waddr_i ;
  wire [31:0] \u0.u_csr.u_csrfile.csr_wdata_i ;
  wire [31:0] \u0.u_csr.u_csrfile.exception_addr_i ;
  wire [5:0] \u0.u_csr.u_csrfile.exception_i ;
  wire [31:0] \u0.u_csr.u_csrfile.exception_pc_i ;
  wire \u0.u_csr.u_csrfile.exception_s_w ;
  wire \u0.u_csr.u_csrfile.ext_intr_i ;
  wire [31:0] \u0.u_csr.u_csrfile.interrupt_o ;
  wire [31:0] \u0.u_csr.u_csrfile.irq_masked_r ;
  wire [31:0] \u0.u_csr.u_csrfile.irq_pending_r ;
  reg [1:0] \u0.u_csr.u_csrfile.irq_priv_q ;
  wire [1:0] \u0.u_csr.u_csrfile.irq_priv_r ;
  wire \u0.u_csr.u_csrfile.is_exception_w ;
  wire [31:0] \u0.u_csr.u_csrfile.misa_i ;
  wire [1:0] \u0.u_csr.u_csrfile.priv_o ;
  wire [31:0] \u0.u_csr.u_csrfile.rdata_r ;
  wire \u0.u_csr.u_csrfile.rst_i ;
  wire [31:0] \u0.u_csr.u_csrfile.satp_o ;
  wire [31:0] \u0.u_csr.u_csrfile.status_o ;
  wire \u0.u_csr.u_csrfile.timer_intr_i ;
  wire \u0.u_decode.clk_i ;
  wire \u0.u_decode.enable_muldiv_w ;
  wire \u0.u_decode.fetch_in_accept_o ;
  wire \u0.u_decode.fetch_in_fault_fetch_i ;
  wire \u0.u_decode.fetch_in_fault_page_i ;
  wire [31:0] \u0.u_decode.fetch_in_instr_i ;
  wire [31:0] \u0.u_decode.fetch_in_pc_i ;
  wire \u0.u_decode.fetch_in_valid_i ;
  wire \u0.u_decode.fetch_out_accept_i ;
  wire \u0.u_decode.fetch_out_fault_fetch_o ;
  wire \u0.u_decode.fetch_out_fault_page_o ;
  wire \u0.u_decode.fetch_out_instr_branch_o ;
  wire \u0.u_decode.fetch_out_instr_csr_o ;
  wire \u0.u_decode.fetch_out_instr_div_o ;
  wire \u0.u_decode.fetch_out_instr_exec_o ;
  wire \u0.u_decode.fetch_out_instr_invalid_o ;
  wire \u0.u_decode.fetch_out_instr_lsu_o ;
  wire \u0.u_decode.fetch_out_instr_mul_o ;
  wire [31:0] \u0.u_decode.fetch_out_instr_o ;
  wire \u0.u_decode.fetch_out_instr_rd_valid_o ;
  wire [31:0] \u0.u_decode.fetch_out_pc_o ;
  wire \u0.u_decode.fetch_out_valid_o ;
  wire [31:0] \u0.u_decode.genblk1.fetch_in_instr_w ;
  wire \u0.u_decode.genblk1.u_dec.branch_o ;
  wire \u0.u_decode.genblk1.u_dec.csr_o ;
  wire \u0.u_decode.genblk1.u_dec.div_o ;
  wire \u0.u_decode.genblk1.u_dec.enable_muldiv_i ;
  wire \u0.u_decode.genblk1.u_dec.exec_o ;
  wire \u0.u_decode.genblk1.u_dec.fetch_fault_i ;
  wire \u0.u_decode.genblk1.u_dec.invalid_o ;
  wire \u0.u_decode.genblk1.u_dec.invalid_w ;
  wire \u0.u_decode.genblk1.u_dec.lsu_o ;
  wire \u0.u_decode.genblk1.u_dec.mul_o ;
  wire [31:0] \u0.u_decode.genblk1.u_dec.opcode_i ;
  wire \u0.u_decode.genblk1.u_dec.rd_valid_o ;
  wire \u0.u_decode.genblk1.u_dec.valid_i ;
  wire \u0.u_decode.rst_i ;
  wire \u0.u_decode.squash_decode_i ;
  wire \u0.u_div.clk_i ;
  reg \u0.u_div.div_busy_q ;
  wire \u0.u_div.div_complete_w ;
  reg \u0.u_div.div_inst_q ;
  wire \u0.u_div.div_operation_w ;
  wire \u0.u_div.div_rem_inst_w ;
  wire [31:0] \u0.u_div.div_result_r ;
  wire \u0.u_div.div_start_w ;
  reg [31:0] \u0.u_div.dividend_q ;
  reg [62:0] \u0.u_div.divisor_q ;
  reg \u0.u_div.invert_res_q ;
  wire \u0.u_div.opcode_invalid_i ;
  wire [31:0] \u0.u_div.opcode_opcode_i ;
  wire [31:0] \u0.u_div.opcode_pc_i ;
  wire [4:0] \u0.u_div.opcode_ra_idx_i ;
  wire [31:0] \u0.u_div.opcode_ra_operand_i ;
  wire [4:0] \u0.u_div.opcode_rb_idx_i ;
  wire [31:0] \u0.u_div.opcode_rb_operand_i ;
  wire [4:0] \u0.u_div.opcode_rd_idx_i ;
  wire \u0.u_div.opcode_valid_i ;
  reg [31:0] \u0.u_div.q_mask_q ;
  reg [31:0] \u0.u_div.quotient_q ;
  wire \u0.u_div.rst_i ;
  wire \u0.u_div.signed_operation_w ;
  reg \u0.u_div.valid_q ;
  reg [31:0] \u0.u_div.wb_result_q ;
  wire \u0.u_div.writeback_valid_o ;
  wire [31:0] \u0.u_div.writeback_value_o ;
  wire [3:0] \u0.u_exec.alu_func_r ;
  wire [31:0] \u0.u_exec.alu_input_a_r ;
  wire [31:0] \u0.u_exec.alu_input_b_r ;
  wire [31:0] \u0.u_exec.alu_p_w ;
  wire [31:0] \u0.u_exec.bimm_r ;
  wire [31:0] \u0.u_exec.branch_d_pc_o ;
  wire [1:0] \u0.u_exec.branch_d_priv_o ;
  wire \u0.u_exec.branch_d_request_o ;
  wire \u0.u_exec.branch_r ;
  wire \u0.u_exec.branch_taken_r ;
  wire [31:0] \u0.u_exec.branch_target_r ;
  wire \u0.u_exec.clk_i ;
  wire [31:0] \u0.u_exec.greater_than_signed$func$../../core/riscv/riscv_exec.v:362$760.v ;
  wire [31:0] \u0.u_exec.greater_than_signed$func$../../core/riscv/riscv_exec.v:362$760.x ;
  wire [31:0] \u0.u_exec.greater_than_signed$func$../../core/riscv/riscv_exec.v:362$760.y ;
  wire \u0.u_exec.hold_i ;
  wire [31:0] \u0.u_exec.imm12_r ;
  wire [31:0] \u0.u_exec.imm20_r ;
  wire [31:0] \u0.u_exec.jimm20_r ;
  wire [31:0] \u0.u_exec.less_than_signed$func$../../core/riscv/riscv_exec.v:357$759.v ;
  wire [31:0] \u0.u_exec.less_than_signed$func$../../core/riscv/riscv_exec.v:357$759.x ;
  wire [31:0] \u0.u_exec.less_than_signed$func$../../core/riscv/riscv_exec.v:357$759.y ;
  wire \u0.u_exec.opcode_invalid_i ;
  wire [31:0] \u0.u_exec.opcode_opcode_i ;
  wire [31:0] \u0.u_exec.opcode_pc_i ;
  wire [4:0] \u0.u_exec.opcode_ra_idx_i ;
  wire [31:0] \u0.u_exec.opcode_ra_operand_i ;
  wire [4:0] \u0.u_exec.opcode_rb_idx_i ;
  wire [31:0] \u0.u_exec.opcode_rb_operand_i ;
  wire [4:0] \u0.u_exec.opcode_rd_idx_i ;
  wire \u0.u_exec.opcode_valid_i ;
  reg [31:0] \u0.u_exec.result_q ;
  wire \u0.u_exec.rst_i ;
  wire [4:0] \u0.u_exec.shamt_r ;
  wire [31:0] \u0.u_exec.u_alu.alu_a_i ;
  wire [31:0] \u0.u_exec.u_alu.alu_b_i ;
  wire [3:0] \u0.u_exec.u_alu.alu_op_i ;
  wire [31:0] \u0.u_exec.u_alu.alu_p_o ;
  wire [31:0] \u0.u_exec.u_alu.result_r ;
  wire [31:0] \u0.u_exec.u_alu.sub_res_w ;
  wire [31:0] \u0.u_exec.writeback_value_o ;
  reg \u0.u_fetch.active_q ;
  reg \u0.u_fetch.branch_d_q ;
  wire [31:0] \u0.u_fetch.branch_pc_i ;
  reg [31:0] \u0.u_fetch.branch_pc_q ;
  wire [31:0] \u0.u_fetch.branch_pc_w ;
  reg \u0.u_fetch.branch_q ;
  wire \u0.u_fetch.branch_request_i ;
  wire \u0.u_fetch.branch_w ;
  wire \u0.u_fetch.clk_i ;
  wire \u0.u_fetch.fetch_accept_i ;
  wire \u0.u_fetch.fetch_fault_fetch_o ;
  wire \u0.u_fetch.fetch_fault_page_o ;
  wire [31:0] \u0.u_fetch.fetch_instr_o ;
  wire \u0.u_fetch.fetch_invalidate_i ;
  wire [31:0] \u0.u_fetch.fetch_pc_o ;
  wire \u0.u_fetch.fetch_resp_drop_w ;
  wire \u0.u_fetch.fetch_valid_o ;
  wire \u0.u_fetch.icache_accept_i ;
  wire \u0.u_fetch.icache_busy_w ;
  wire \u0.u_fetch.icache_error_i ;
  reg \u0.u_fetch.icache_fetch_q ;
  wire \u0.u_fetch.icache_flush_o ;
  wire [31:0] \u0.u_fetch.icache_inst_i ;
  wire \u0.u_fetch.icache_invalidate_o ;
  wire \u0.u_fetch.icache_invalidate_q ;
  wire \u0.u_fetch.icache_page_fault_i ;
  wire [31:0] \u0.u_fetch.icache_pc_o ;
  wire [31:0] \u0.u_fetch.icache_pc_w ;
  wire \u0.u_fetch.icache_rd_o ;
  wire \u0.u_fetch.icache_valid_i ;
  reg [31:0] \u0.u_fetch.pc_d_q ;
  reg [31:0] \u0.u_fetch.pc_f_q ;
  wire \u0.u_fetch.rst_i ;
  reg [65:0] \u0.u_fetch.skid_buffer_q ;
  reg \u0.u_fetch.skid_valid_q ;
  wire \u0.u_fetch.squash_decode_o ;
  wire \u0.u_fetch.stall_w ;
  wire [31:0] \u0.u_issue.branch_csr_pc_i ;
  wire \u0.u_issue.branch_csr_request_i ;
  wire [31:0] \u0.u_issue.branch_d_exec_pc_i ;
  wire [1:0] \u0.u_issue.branch_d_exec_priv_i ;
  wire \u0.u_issue.branch_d_exec_request_i ;
  wire [31:0] \u0.u_issue.branch_pc_o ;
  wire \u0.u_issue.branch_request_o ;
  wire \u0.u_issue.clk_i ;
  wire \u0.u_issue.csr_opcode_invalid_o ;
  wire [31:0] \u0.u_issue.csr_opcode_opcode_o ;
  wire [31:0] \u0.u_issue.csr_opcode_pc_o ;
  wire [4:0] \u0.u_issue.csr_opcode_ra_idx_o ;
  wire [31:0] \u0.u_issue.csr_opcode_ra_operand_o ;
  wire [4:0] \u0.u_issue.csr_opcode_rb_idx_o ;
  wire [31:0] \u0.u_issue.csr_opcode_rb_operand_o ;
  wire [4:0] \u0.u_issue.csr_opcode_rd_idx_o ;
  wire \u0.u_issue.csr_opcode_valid_o ;
  reg \u0.u_issue.csr_pending_q ;
  wire [5:0] \u0.u_issue.csr_result_e1_exception_i ;
  wire [31:0] \u0.u_issue.csr_result_e1_value_i ;
  wire [31:0] \u0.u_issue.csr_result_e1_wdata_i ;
  wire \u0.u_issue.csr_result_e1_write_i ;
  wire [31:0] \u0.u_issue.csr_writeback_exception_addr_o ;
  wire [5:0] \u0.u_issue.csr_writeback_exception_o ;
  wire [31:0] \u0.u_issue.csr_writeback_exception_pc_o ;
  wire [11:0] \u0.u_issue.csr_writeback_waddr_o ;
  wire [31:0] \u0.u_issue.csr_writeback_wdata_o ;
  wire \u0.u_issue.csr_writeback_write_o ;
  wire \u0.u_issue.div_opcode_valid_o ;
  reg \u0.u_issue.div_pending_q ;
  wire \u0.u_issue.enable_mul_bypass_w ;
  wire \u0.u_issue.enable_muldiv_w ;
  wire \u0.u_issue.exec_hold_o ;
  wire \u0.u_issue.exec_opcode_valid_o ;
  wire \u0.u_issue.fetch_accept_o ;
  wire \u0.u_issue.fetch_fault_fetch_i ;
  wire \u0.u_issue.fetch_fault_page_i ;
  wire \u0.u_issue.fetch_instr_branch_i ;
  wire \u0.u_issue.fetch_instr_csr_i ;
  wire \u0.u_issue.fetch_instr_div_i ;
  wire \u0.u_issue.fetch_instr_exec_i ;
  wire [31:0] \u0.u_issue.fetch_instr_i ;
  wire \u0.u_issue.fetch_instr_invalid_i ;
  wire \u0.u_issue.fetch_instr_lsu_i ;
  wire \u0.u_issue.fetch_instr_mul_i ;
  wire \u0.u_issue.fetch_instr_rd_valid_i ;
  wire [31:0] \u0.u_issue.fetch_pc_i ;
  wire \u0.u_issue.fetch_valid_i ;
  wire \u0.u_issue.interrupt_inhibit_o ;
  wire \u0.u_issue.issue_branch_w ;
  wire \u0.u_issue.issue_csr_w ;
  wire \u0.u_issue.issue_div_w ;
  wire \u0.u_issue.issue_exec_w ;
  wire [4:0] \u0.u_issue.issue_fault_w ;
  wire \u0.u_issue.issue_invalid_w ;
  wire \u0.u_issue.issue_lsu_w ;
  wire \u0.u_issue.issue_mul_w ;
  wire [4:0] \u0.u_issue.issue_ra_idx_w ;
  wire [31:0] \u0.u_issue.issue_ra_value_r ;
  wire [31:0] \u0.u_issue.issue_ra_value_w ;
  wire [4:0] \u0.u_issue.issue_rb_idx_w ;
  wire [31:0] \u0.u_issue.issue_rb_value_r ;
  wire [31:0] \u0.u_issue.issue_rb_value_w ;
  wire [4:0] \u0.u_issue.issue_rd_idx_w ;
  wire \u0.u_issue.issue_sb_alloc_w ;
  wire \u0.u_issue.lsu_opcode_invalid_o ;
  wire [31:0] \u0.u_issue.lsu_opcode_opcode_o ;
  wire [31:0] \u0.u_issue.lsu_opcode_pc_o ;
  wire [4:0] \u0.u_issue.lsu_opcode_ra_idx_o ;
  wire [31:0] \u0.u_issue.lsu_opcode_ra_operand_o ;
  wire [4:0] \u0.u_issue.lsu_opcode_rb_idx_o ;
  wire [31:0] \u0.u_issue.lsu_opcode_rb_operand_o ;
  wire [4:0] \u0.u_issue.lsu_opcode_rd_idx_o ;
  wire \u0.u_issue.lsu_opcode_valid_o ;
  wire \u0.u_issue.lsu_stall_i ;
  wire \u0.u_issue.mul_hold_o ;
  wire \u0.u_issue.mul_opcode_invalid_o ;
  wire [31:0] \u0.u_issue.mul_opcode_opcode_o ;
  wire [31:0] \u0.u_issue.mul_opcode_pc_o ;
  wire [4:0] \u0.u_issue.mul_opcode_ra_idx_o ;
  wire [31:0] \u0.u_issue.mul_opcode_ra_operand_o ;
  wire [4:0] \u0.u_issue.mul_opcode_rb_idx_o ;
  wire [31:0] \u0.u_issue.mul_opcode_rb_operand_o ;
  wire [4:0] \u0.u_issue.mul_opcode_rd_idx_o ;
  wire \u0.u_issue.mul_opcode_valid_o ;
  wire \u0.u_issue.opcode_accept_r ;
  wire \u0.u_issue.opcode_invalid_o ;
  wire \u0.u_issue.opcode_issue_r ;
  wire [31:0] \u0.u_issue.opcode_opcode_o ;
  wire [31:0] \u0.u_issue.opcode_pc_o ;
  wire [4:0] \u0.u_issue.opcode_ra_idx_o ;
  wire [31:0] \u0.u_issue.opcode_ra_operand_o ;
  wire [4:0] \u0.u_issue.opcode_rb_idx_o ;
  wire [31:0] \u0.u_issue.opcode_rb_operand_o ;
  wire [4:0] \u0.u_issue.opcode_rd_idx_o ;
  wire \u0.u_issue.opcode_valid_w ;
  wire \u0.u_issue.pipe_branch_e1_w ;
  wire \u0.u_issue.pipe_csr_wb_w ;
  wire [5:0] \u0.u_issue.pipe_exception_wb_w ;
  wire \u0.u_issue.pipe_load_e1_w ;
  wire \u0.u_issue.pipe_load_e2_w ;
  wire \u0.u_issue.pipe_mul_e1_w ;
  wire \u0.u_issue.pipe_mul_e2_w ;
  wire [31:0] \u0.u_issue.pipe_opc_wb_w ;
  wire [31:0] \u0.u_issue.pipe_opcode_e1_w ;
  wire [31:0] \u0.u_issue.pipe_operand_ra_e1_w ;
  wire [31:0] \u0.u_issue.pipe_operand_rb_e1_w ;
  wire [31:0] \u0.u_issue.pipe_pc_e1_w ;
  wire [31:0] \u0.u_issue.pipe_pc_wb_w ;
  wire [31:0] \u0.u_issue.pipe_ra_val_wb_w ;
  wire [31:0] \u0.u_issue.pipe_rb_val_wb_w ;
  wire [4:0] \u0.u_issue.pipe_rd_e1_w ;
  wire [4:0] \u0.u_issue.pipe_rd_e2_w ;
  wire [4:0] \u0.u_issue.pipe_rd_wb_w ;
  wire [31:0] \u0.u_issue.pipe_result_e2_w ;
  wire [31:0] \u0.u_issue.pipe_result_wb_w ;
  wire \u0.u_issue.pipe_squash_e1_e2_w ;
  wire \u0.u_issue.pipe_stall_raw_w ;
  wire \u0.u_issue.pipe_store_e1_w ;
  wire \u0.u_issue.pipe_valid_wb_w ;
  wire \u0.u_issue.rst_i ;
  wire \u0.u_issue.squash_w ;
  wire \u0.u_issue.stall_w ;
  wire \u0.u_issue.take_interrupt_i ;
  wire \u0.u_issue.u_pipe_ctrl.alu_e1_w ;
  wire [31:0] \u0.u_issue.u_pipe_ctrl.alu_result_e1_i ;
  wire \u0.u_issue.u_pipe_ctrl.branch_e1_o ;
  wire \u0.u_issue.u_pipe_ctrl.branch_misaligned_w ;
  wire \u0.u_issue.u_pipe_ctrl.clk_i ;
  wire \u0.u_issue.u_pipe_ctrl.csr_e1_w ;
  wire [5:0] \u0.u_issue.u_pipe_ctrl.csr_result_exception_e1_i ;
  wire [31:0] \u0.u_issue.u_pipe_ctrl.csr_result_value_e1_i ;
  wire [31:0] \u0.u_issue.u_pipe_ctrl.csr_result_wdata_e1_i ;
  wire \u0.u_issue.u_pipe_ctrl.csr_result_write_e1_i ;
  wire [11:0] \u0.u_issue.u_pipe_ctrl.csr_waddr_wb_o ;
  wire \u0.u_issue.u_pipe_ctrl.csr_wb_o ;
  reg [31:0] \u0.u_issue.u_pipe_ctrl.csr_wdata_e2_q ;
  wire [31:0] \u0.u_issue.u_pipe_ctrl.csr_wdata_wb_o ;
  reg [31:0] \u0.u_issue.u_pipe_ctrl.csr_wdata_wb_q ;
  reg \u0.u_issue.u_pipe_ctrl.csr_wr_e2_q ;
  reg \u0.u_issue.u_pipe_ctrl.csr_wr_wb_q ;
  wire \u0.u_issue.u_pipe_ctrl.csr_write_wb_o ;
  reg [9:0] \u0.u_issue.u_pipe_ctrl.ctrl_e1_q ;
  reg [9:0] \u0.u_issue.u_pipe_ctrl.ctrl_e2_q ;
  reg [9:0] \u0.u_issue.u_pipe_ctrl.ctrl_wb_q ;
  wire \u0.u_issue.u_pipe_ctrl.div_complete_i ;
  wire \u0.u_issue.u_pipe_ctrl.div_e1_w ;
  wire [31:0] \u0.u_issue.u_pipe_ctrl.div_result_i ;
  reg [5:0] \u0.u_issue.u_pipe_ctrl.exception_e1_q ;
  reg [5:0] \u0.u_issue.u_pipe_ctrl.exception_e2_q ;
  wire [5:0] \u0.u_issue.u_pipe_ctrl.exception_e2_r ;
  wire [5:0] \u0.u_issue.u_pipe_ctrl.exception_wb_o ;
  reg [5:0] \u0.u_issue.u_pipe_ctrl.exception_wb_q ;
  wire \u0.u_issue.u_pipe_ctrl.issue_accept_i ;
  wire \u0.u_issue.u_pipe_ctrl.issue_branch_i ;
  wire \u0.u_issue.u_pipe_ctrl.issue_branch_taken_i ;
  wire [31:0] \u0.u_issue.u_pipe_ctrl.issue_branch_target_i ;
  wire \u0.u_issue.u_pipe_ctrl.issue_csr_i ;
  wire \u0.u_issue.u_pipe_ctrl.issue_div_i ;
  wire [5:0] \u0.u_issue.u_pipe_ctrl.issue_exception_i ;
  wire \u0.u_issue.u_pipe_ctrl.issue_lsu_i ;
  wire \u0.u_issue.u_pipe_ctrl.issue_mul_i ;
  wire [31:0] \u0.u_issue.u_pipe_ctrl.issue_opcode_i ;
  wire [31:0] \u0.u_issue.u_pipe_ctrl.issue_operand_ra_i ;
  wire [31:0] \u0.u_issue.u_pipe_ctrl.issue_operand_rb_i ;
  wire [31:0] \u0.u_issue.u_pipe_ctrl.issue_pc_i ;
  wire [4:0] \u0.u_issue.u_pipe_ctrl.issue_rd_i ;
  wire \u0.u_issue.u_pipe_ctrl.issue_rd_valid_i ;
  wire \u0.u_issue.u_pipe_ctrl.issue_stall_i ;
  wire \u0.u_issue.u_pipe_ctrl.issue_valid_i ;
  wire \u0.u_issue.u_pipe_ctrl.load_e1_o ;
  wire \u0.u_issue.u_pipe_ctrl.load_e2_o ;
  wire \u0.u_issue.u_pipe_ctrl.mem_complete_i ;
  wire [5:0] \u0.u_issue.u_pipe_ctrl.mem_exception_e2_i ;
  wire [31:0] \u0.u_issue.u_pipe_ctrl.mem_result_e2_i ;
  wire \u0.u_issue.u_pipe_ctrl.mul_e1_o ;
  wire \u0.u_issue.u_pipe_ctrl.mul_e2_o ;
  wire [31:0] \u0.u_issue.u_pipe_ctrl.mul_result_e2_i ;
  wire [31:0] \u0.u_issue.u_pipe_ctrl.opcode_e1_o ;
  reg [31:0] \u0.u_issue.u_pipe_ctrl.opcode_e1_q ;
  reg [31:0] \u0.u_issue.u_pipe_ctrl.opcode_e2_q ;
  wire [31:0] \u0.u_issue.u_pipe_ctrl.opcode_wb_o ;
  reg [31:0] \u0.u_issue.u_pipe_ctrl.opcode_wb_q ;
  wire [31:0] \u0.u_issue.u_pipe_ctrl.operand_ra_e1_o ;
  wire [31:0] \u0.u_issue.u_pipe_ctrl.operand_ra_e1_q ;
  wire [31:0] \u0.u_issue.u_pipe_ctrl.operand_ra_wb_o ;
  wire [31:0] \u0.u_issue.u_pipe_ctrl.operand_ra_wb_q ;
  wire [31:0] \u0.u_issue.u_pipe_ctrl.operand_rb_e1_o ;
  wire [31:0] \u0.u_issue.u_pipe_ctrl.operand_rb_e1_q ;
  wire [31:0] \u0.u_issue.u_pipe_ctrl.operand_rb_wb_o ;
  wire [31:0] \u0.u_issue.u_pipe_ctrl.operand_rb_wb_q ;
  wire [31:0] \u0.u_issue.u_pipe_ctrl.pc_e1_o ;
  reg [31:0] \u0.u_issue.u_pipe_ctrl.pc_e1_q ;
  reg [31:0] \u0.u_issue.u_pipe_ctrl.pc_e2_q ;
  wire [31:0] \u0.u_issue.u_pipe_ctrl.pc_wb_o ;
  reg [31:0] \u0.u_issue.u_pipe_ctrl.pc_wb_q ;
  wire [4:0] \u0.u_issue.u_pipe_ctrl.rd_e1_o ;
  wire [4:0] \u0.u_issue.u_pipe_ctrl.rd_e2_o ;
  wire [4:0] \u0.u_issue.u_pipe_ctrl.rd_wb_o ;
  wire [31:0] \u0.u_issue.u_pipe_ctrl.result_e2_o ;
  reg [31:0] \u0.u_issue.u_pipe_ctrl.result_e2_q ;
  wire [31:0] \u0.u_issue.u_pipe_ctrl.result_e2_r ;
  wire [31:0] \u0.u_issue.u_pipe_ctrl.result_wb_o ;
  reg [31:0] \u0.u_issue.u_pipe_ctrl.result_wb_q ;
  wire \u0.u_issue.u_pipe_ctrl.rst_i ;
  wire \u0.u_issue.u_pipe_ctrl.squash_e1_e2_i ;
  wire \u0.u_issue.u_pipe_ctrl.squash_e1_e2_o ;
  reg \u0.u_issue.u_pipe_ctrl.squash_e1_e2_q ;
  wire \u0.u_issue.u_pipe_ctrl.squash_e1_e2_w ;
  wire \u0.u_issue.u_pipe_ctrl.squash_wb_i ;
  wire \u0.u_issue.u_pipe_ctrl.stall_o ;
  wire \u0.u_issue.u_pipe_ctrl.store_e1_o ;
  wire \u0.u_issue.u_pipe_ctrl.take_interrupt_i ;
  reg \u0.u_issue.u_pipe_ctrl.valid_e1_q ;
  reg \u0.u_issue.u_pipe_ctrl.valid_e2_q ;
  wire \u0.u_issue.u_pipe_ctrl.valid_e2_w ;
  wire \u0.u_issue.u_pipe_ctrl.valid_wb_o ;
  reg \u0.u_issue.u_pipe_ctrl.valid_wb_q ;
  wire [31:0] \u0.u_issue.u_regfile.REGFILE.ra0_value_r ;
  wire [31:0] \u0.u_issue.u_regfile.REGFILE.rb0_value_r ;
  reg [31:0] \u0.u_issue.u_regfile.REGFILE.reg_r10_q ;
  reg [31:0] \u0.u_issue.u_regfile.REGFILE.reg_r11_q ;
  reg [31:0] \u0.u_issue.u_regfile.REGFILE.reg_r12_q ;
  reg [31:0] \u0.u_issue.u_regfile.REGFILE.reg_r13_q ;
  reg [31:0] \u0.u_issue.u_regfile.REGFILE.reg_r14_q ;
  reg [31:0] \u0.u_issue.u_regfile.REGFILE.reg_r15_q ;
  reg [31:0] \u0.u_issue.u_regfile.REGFILE.reg_r16_q ;
  reg [31:0] \u0.u_issue.u_regfile.REGFILE.reg_r17_q ;
  reg [31:0] \u0.u_issue.u_regfile.REGFILE.reg_r18_q ;
  reg [31:0] \u0.u_issue.u_regfile.REGFILE.reg_r19_q ;
  reg [31:0] \u0.u_issue.u_regfile.REGFILE.reg_r1_q ;
  reg [31:0] \u0.u_issue.u_regfile.REGFILE.reg_r20_q ;
  reg [31:0] \u0.u_issue.u_regfile.REGFILE.reg_r21_q ;
  reg [31:0] \u0.u_issue.u_regfile.REGFILE.reg_r22_q ;
  reg [31:0] \u0.u_issue.u_regfile.REGFILE.reg_r23_q ;
  reg [31:0] \u0.u_issue.u_regfile.REGFILE.reg_r24_q ;
  reg [31:0] \u0.u_issue.u_regfile.REGFILE.reg_r25_q ;
  reg [31:0] \u0.u_issue.u_regfile.REGFILE.reg_r26_q ;
  reg [31:0] \u0.u_issue.u_regfile.REGFILE.reg_r27_q ;
  reg [31:0] \u0.u_issue.u_regfile.REGFILE.reg_r28_q ;
  reg [31:0] \u0.u_issue.u_regfile.REGFILE.reg_r29_q ;
  reg [31:0] \u0.u_issue.u_regfile.REGFILE.reg_r2_q ;
  reg [31:0] \u0.u_issue.u_regfile.REGFILE.reg_r30_q ;
  reg [31:0] \u0.u_issue.u_regfile.REGFILE.reg_r31_q ;
  reg [31:0] \u0.u_issue.u_regfile.REGFILE.reg_r3_q ;
  reg [31:0] \u0.u_issue.u_regfile.REGFILE.reg_r4_q ;
  reg [31:0] \u0.u_issue.u_regfile.REGFILE.reg_r5_q ;
  reg [31:0] \u0.u_issue.u_regfile.REGFILE.reg_r6_q ;
  reg [31:0] \u0.u_issue.u_regfile.REGFILE.reg_r7_q ;
  reg [31:0] \u0.u_issue.u_regfile.REGFILE.reg_r8_q ;
  reg [31:0] \u0.u_issue.u_regfile.REGFILE.reg_r9_q ;
  wire [31:0] \u0.u_issue.u_regfile.REGFILE.x0_zero_w ;
  wire [31:0] \u0.u_issue.u_regfile.REGFILE.x10_a0_w ;
  wire [31:0] \u0.u_issue.u_regfile.REGFILE.x11_a1_w ;
  wire [31:0] \u0.u_issue.u_regfile.REGFILE.x12_a2_w ;
  wire [31:0] \u0.u_issue.u_regfile.REGFILE.x13_a3_w ;
  wire [31:0] \u0.u_issue.u_regfile.REGFILE.x14_a4_w ;
  wire [31:0] \u0.u_issue.u_regfile.REGFILE.x15_a5_w ;
  wire [31:0] \u0.u_issue.u_regfile.REGFILE.x16_a6_w ;
  wire [31:0] \u0.u_issue.u_regfile.REGFILE.x17_a7_w ;
  wire [31:0] \u0.u_issue.u_regfile.REGFILE.x18_s2_w ;
  wire [31:0] \u0.u_issue.u_regfile.REGFILE.x19_s3_w ;
  wire [31:0] \u0.u_issue.u_regfile.REGFILE.x1_ra_w ;
  wire [31:0] \u0.u_issue.u_regfile.REGFILE.x20_s4_w ;
  wire [31:0] \u0.u_issue.u_regfile.REGFILE.x21_s5_w ;
  wire [31:0] \u0.u_issue.u_regfile.REGFILE.x22_s6_w ;
  wire [31:0] \u0.u_issue.u_regfile.REGFILE.x23_s7_w ;
  wire [31:0] \u0.u_issue.u_regfile.REGFILE.x24_s8_w ;
  wire [31:0] \u0.u_issue.u_regfile.REGFILE.x25_s9_w ;
  wire [31:0] \u0.u_issue.u_regfile.REGFILE.x26_s10_w ;
  wire [31:0] \u0.u_issue.u_regfile.REGFILE.x27_s11_w ;
  wire [31:0] \u0.u_issue.u_regfile.REGFILE.x28_t3_w ;
  wire [31:0] \u0.u_issue.u_regfile.REGFILE.x29_t4_w ;
  wire [31:0] \u0.u_issue.u_regfile.REGFILE.x2_sp_w ;
  wire [31:0] \u0.u_issue.u_regfile.REGFILE.x30_t5_w ;
  wire [31:0] \u0.u_issue.u_regfile.REGFILE.x31_t6_w ;
  wire [31:0] \u0.u_issue.u_regfile.REGFILE.x3_gp_w ;
  wire [31:0] \u0.u_issue.u_regfile.REGFILE.x4_tp_w ;
  wire [31:0] \u0.u_issue.u_regfile.REGFILE.x5_t0_w ;
  wire [31:0] \u0.u_issue.u_regfile.REGFILE.x6_t1_w ;
  wire [31:0] \u0.u_issue.u_regfile.REGFILE.x7_t2_w ;
  wire [31:0] \u0.u_issue.u_regfile.REGFILE.x8_s0_w ;
  wire [31:0] \u0.u_issue.u_regfile.REGFILE.x9_s1_w ;
  wire \u0.u_issue.u_regfile.clk_i ;
  wire [4:0] \u0.u_issue.u_regfile.ra0_i ;
  wire [31:0] \u0.u_issue.u_regfile.ra0_value_o ;
  wire [4:0] \u0.u_issue.u_regfile.rb0_i ;
  wire [31:0] \u0.u_issue.u_regfile.rb0_value_o ;
  wire [4:0] \u0.u_issue.u_regfile.rd0_i ;
  wire [31:0] \u0.u_issue.u_regfile.rd0_value_i ;
  wire \u0.u_issue.u_regfile.rst_i ;
  wire \u0.u_issue.writeback_div_valid_i ;
  wire [31:0] \u0.u_issue.writeback_div_value_i ;
  wire [31:0] \u0.u_issue.writeback_exec_value_i ;
  wire [5:0] \u0.u_issue.writeback_mem_exception_i ;
  wire \u0.u_issue.writeback_mem_valid_i ;
  wire [31:0] \u0.u_issue.writeback_mem_value_i ;
  wire [31:0] \u0.u_issue.writeback_mul_value_i ;
  wire [1:0] \u0.u_lsu.addr_lsb_r ;
  wire \u0.u_lsu.clk_i ;
  wire \u0.u_lsu.complete_err_e2_w ;
  wire \u0.u_lsu.complete_ok_e2_w ;
  wire \u0.u_lsu.dcache_flush_w ;
  wire \u0.u_lsu.dcache_invalidate_w ;
  wire \u0.u_lsu.dcache_writeback_w ;
  wire \u0.u_lsu.delay_lsu_e2_w ;
  wire \u0.u_lsu.fault_load_align_w ;
  wire \u0.u_lsu.fault_load_bus_w ;
  wire \u0.u_lsu.fault_load_page_w ;
  wire \u0.u_lsu.fault_store_align_w ;
  wire \u0.u_lsu.fault_store_bus_w ;
  wire \u0.u_lsu.fault_store_page_w ;
  wire \u0.u_lsu.issue_lsu_e1_w ;
  wire \u0.u_lsu.load_byte_r ;
  wire \u0.u_lsu.load_half_r ;
  wire \u0.u_lsu.load_inst_w ;
  wire \u0.u_lsu.load_signed_inst_w ;
  wire \u0.u_lsu.load_signed_r ;
  wire \u0.u_lsu.mem_accept_i ;
  wire \u0.u_lsu.mem_ack_i ;
  wire [31:0] \u0.u_lsu.mem_addr_o ;
  reg [31:0] \u0.u_lsu.mem_addr_q ;
  wire [31:0] \u0.u_lsu.mem_addr_r ;
  wire \u0.u_lsu.mem_cacheable_o ;
  reg \u0.u_lsu.mem_cacheable_q ;
  wire [31:0] \u0.u_lsu.mem_data_r ;
  wire [31:0] \u0.u_lsu.mem_data_rd_i ;
  wire [31:0] \u0.u_lsu.mem_data_wr_o ;
  reg [31:0] \u0.u_lsu.mem_data_wr_q ;
  wire \u0.u_lsu.mem_error_i ;
  wire \u0.u_lsu.mem_flush_o ;
  reg \u0.u_lsu.mem_flush_q ;
  wire \u0.u_lsu.mem_invalidate_o ;
  reg \u0.u_lsu.mem_invalidate_q ;
  wire \u0.u_lsu.mem_load_fault_i ;
  reg \u0.u_lsu.mem_load_q ;
  reg \u0.u_lsu.mem_ls_q ;
  wire \u0.u_lsu.mem_rd_o ;
  reg \u0.u_lsu.mem_rd_q ;
  wire \u0.u_lsu.mem_rd_r ;
  wire [10:0] \u0.u_lsu.mem_req_tag_o ;
  wire [10:0] \u0.u_lsu.mem_resp_tag_i ;
  wire \u0.u_lsu.mem_store_fault_i ;
  reg \u0.u_lsu.mem_unaligned_e1_q ;
  reg \u0.u_lsu.mem_unaligned_e2_q ;
  wire \u0.u_lsu.mem_unaligned_r ;
  wire [3:0] \u0.u_lsu.mem_wr_o ;
  reg [3:0] \u0.u_lsu.mem_wr_q ;
  wire [3:0] \u0.u_lsu.mem_wr_r ;
  wire \u0.u_lsu.mem_writeback_o ;
  reg \u0.u_lsu.mem_writeback_q ;
  reg \u0.u_lsu.mem_xb_q ;
  reg \u0.u_lsu.mem_xh_q ;
  wire \u0.u_lsu.opcode_invalid_i ;
  wire [31:0] \u0.u_lsu.opcode_opcode_i ;
  wire [31:0] \u0.u_lsu.opcode_pc_i ;
  wire [4:0] \u0.u_lsu.opcode_ra_idx_i ;
  wire [31:0] \u0.u_lsu.opcode_ra_operand_i ;
  wire [4:0] \u0.u_lsu.opcode_rb_idx_i ;
  wire [31:0] \u0.u_lsu.opcode_rb_operand_i ;
  wire [4:0] \u0.u_lsu.opcode_rd_idx_i ;
  wire \u0.u_lsu.opcode_valid_i ;
  reg \u0.u_lsu.pending_lsu_e2_q ;
  wire \u0.u_lsu.req_lb_w ;
  wire \u0.u_lsu.req_lh_w ;
  wire \u0.u_lsu.req_sb_w ;
  wire \u0.u_lsu.req_sh_lh_w ;
  wire \u0.u_lsu.req_sh_w ;
  wire \u0.u_lsu.req_sw_lw_w ;
  wire [31:0] \u0.u_lsu.resp_addr_w ;
  wire \u0.u_lsu.resp_byte_w ;
  wire \u0.u_lsu.resp_half_w ;
  wire \u0.u_lsu.resp_load_w ;
  wire \u0.u_lsu.resp_signed_w ;
  wire \u0.u_lsu.rst_i ;
  wire \u0.u_lsu.stall_o ;
  wire \u0.u_lsu.u_lsu_request.accept_o ;
  wire \u0.u_lsu.u_lsu_request.clk_i ;
  reg [1:0] \u0.u_lsu.u_lsu_request.count_q ;
  wire [35:0] \u0.u_lsu.u_lsu_request.data_in_i ;
  wire [35:0] \u0.u_lsu.u_lsu_request.data_out_o ;
  wire \u0.u_lsu.u_lsu_request.pop_i ;
  wire \u0.u_lsu.u_lsu_request.push_i ;
  reg [35:0] \u0.u_lsu.u_lsu_request.ram_q[0] ;
  reg [35:0] \u0.u_lsu.u_lsu_request.ram_q[1] ;
  reg \u0.u_lsu.u_lsu_request.rd_ptr_q ;
  wire \u0.u_lsu.u_lsu_request.rst_i ;
  wire \u0.u_lsu.u_lsu_request.valid_o ;
  reg \u0.u_lsu.u_lsu_request.wr_ptr_q ;
  wire [31:0] \u0.u_lsu.wb_result_r ;
  wire [5:0] \u0.u_lsu.writeback_exception_o ;
  wire \u0.u_lsu.writeback_valid_o ;
  wire [31:0] \u0.u_lsu.writeback_value_o ;
  wire \u0.u_mmu.clk_i ;
  wire \u0.u_mmu.fetch_in_accept_o ;
  wire \u0.u_mmu.fetch_in_error_o ;
  wire \u0.u_mmu.fetch_in_fault_o ;
  wire \u0.u_mmu.fetch_in_flush_i ;
  wire [31:0] \u0.u_mmu.fetch_in_inst_o ;
  wire \u0.u_mmu.fetch_in_invalidate_i ;
  wire [31:0] \u0.u_mmu.fetch_in_pc_i ;
  wire \u0.u_mmu.fetch_in_rd_i ;
  wire \u0.u_mmu.fetch_in_valid_o ;
  wire \u0.u_mmu.fetch_out_accept_i ;
  wire \u0.u_mmu.fetch_out_error_i ;
  wire \u0.u_mmu.fetch_out_flush_o ;
  wire [31:0] \u0.u_mmu.fetch_out_inst_i ;
  wire \u0.u_mmu.fetch_out_invalidate_o ;
  wire [31:0] \u0.u_mmu.fetch_out_pc_o ;
  wire \u0.u_mmu.fetch_out_rd_o ;
  wire \u0.u_mmu.fetch_out_valid_i ;
  wire \u0.u_mmu.lsu_in_accept_o ;
  wire \u0.u_mmu.lsu_in_ack_o ;
  wire [31:0] \u0.u_mmu.lsu_in_addr_i ;
  wire \u0.u_mmu.lsu_in_cacheable_i ;
  wire [31:0] \u0.u_mmu.lsu_in_data_rd_o ;
  wire [31:0] \u0.u_mmu.lsu_in_data_wr_i ;
  wire \u0.u_mmu.lsu_in_error_o ;
  wire \u0.u_mmu.lsu_in_flush_i ;
  wire \u0.u_mmu.lsu_in_invalidate_i ;
  wire \u0.u_mmu.lsu_in_load_fault_o ;
  wire \u0.u_mmu.lsu_in_rd_i ;
  wire [10:0] \u0.u_mmu.lsu_in_req_tag_i ;
  wire [10:0] \u0.u_mmu.lsu_in_resp_tag_o ;
  wire \u0.u_mmu.lsu_in_store_fault_o ;
  wire [3:0] \u0.u_mmu.lsu_in_wr_i ;
  wire \u0.u_mmu.lsu_in_writeback_i ;
  wire \u0.u_mmu.lsu_out_accept_i ;
  wire \u0.u_mmu.lsu_out_ack_i ;
  wire [31:0] \u0.u_mmu.lsu_out_addr_o ;
  wire \u0.u_mmu.lsu_out_cacheable_o ;
  wire [31:0] \u0.u_mmu.lsu_out_data_rd_i ;
  wire [31:0] \u0.u_mmu.lsu_out_data_wr_o ;
  wire \u0.u_mmu.lsu_out_error_i ;
  wire \u0.u_mmu.lsu_out_flush_o ;
  wire \u0.u_mmu.lsu_out_invalidate_o ;
  wire \u0.u_mmu.lsu_out_rd_o ;
  wire [10:0] \u0.u_mmu.lsu_out_req_tag_o ;
  wire [10:0] \u0.u_mmu.lsu_out_resp_tag_i ;
  wire [3:0] \u0.u_mmu.lsu_out_wr_o ;
  wire \u0.u_mmu.lsu_out_writeback_o ;
  wire \u0.u_mmu.mxr_i ;
  wire \u0.u_mmu.rst_i ;
  wire [31:0] \u0.u_mmu.satp_i ;
  wire \u0.u_mmu.sum_i ;
  wire \u0.u_mul.clk_i ;
  wire \u0.u_mul.hold_i ;
  reg \u0.u_mul.mulhi_sel_e1_q ;
  wire \u0.u_mul.mult_inst_w ;
  wire [63:0] \u0.u_mul.mult_result_w ;
  wire \u0.u_mul.opcode_invalid_i ;
  wire [31:0] \u0.u_mul.opcode_opcode_i ;
  wire [31:0] \u0.u_mul.opcode_pc_i ;
  wire [4:0] \u0.u_mul.opcode_ra_idx_i ;
  wire [31:0] \u0.u_mul.opcode_ra_operand_i ;
  wire [4:0] \u0.u_mul.opcode_rb_idx_i ;
  wire [31:0] \u0.u_mul.opcode_rb_operand_i ;
  wire [4:0] \u0.u_mul.opcode_rd_idx_i ;
  wire \u0.u_mul.opcode_valid_i ;
  reg [32:0] \u0.u_mul.operand_a_e1_q ;
  wire [32:0] \u0.u_mul.operand_a_r ;
  reg [32:0] \u0.u_mul.operand_b_e1_q ;
  wire [32:0] \u0.u_mul.operand_b_r ;
  reg [31:0] \u0.u_mul.result_e2_q ;
  wire [31:0] \u0.u_mul.result_r ;
  wire \u0.u_mul.rst_i ;
  wire [31:0] \u0.u_mul.writeback_value_o ;
  wire \u0.writeback_div_valid_w ;
  wire [31:0] \u0.writeback_div_value_w ;
  wire [31:0] \u0.writeback_exec_value_w ;
  wire [5:0] \u0.writeback_mem_exception_w ;
  wire \u0.writeback_mem_valid_w ;
  wire [31:0] \u0.writeback_mem_value_w ;
  wire [31:0] \u0.writeback_mul_value_w ;
  wire wr_d_addr;
  wire wr_d_data_wr;
  wire wr_d_rd;
  wire wr_i_rd;
  assign _0003_ = \fifo_d_addr.pointer  + 1'h1;
  assign _0004_ = \fifo_d_addr.pointer  == 2'h2;
  assign _0005_ = ! \fifo_d_addr.pointer ;
  assign _0006_ = \fifo_d_addr.pointer  == 1'h1;
  always @(posedge clk_i)
    \fifo_d_addr.r0  <= _0001_;
  always @(posedge clk_i)
    \fifo_d_addr.r1  <= _0002_;
  always @(posedge clk_i)
    \fifo_d_addr.pointer  <= _0000_;
  assign _0007_ = _0006_ ? { \u0.u_lsu.mem_addr_q [31:2], 2'h0 } : \fifo_d_addr.r1 ;
  assign _0008_ = _0005_ ? \fifo_d_addr.r1  : _0007_;
  assign _0009_ = \fifo_d_addr.wr  ? _0008_ : \fifo_d_addr.r1 ;
  assign _0002_ = rst_i ? 32'h00000000 : _0009_;
  assign _0010_ = _0005_ ? { \u0.u_lsu.mem_addr_q [31:2], 2'h0 } : \fifo_d_addr.r0 ;
  assign _0011_ = \fifo_d_addr.wr  ? _0010_ : \fifo_d_addr.r0 ;
  assign _0001_ = rst_i ? 32'h00000000 : _0011_;
  assign _0000_ = rst_i ? 32'h00000000 : \fifo_d_addr.pointer_nxt ;
  assign \fifo_d_addr.pointer_nxt  = _0004_ ? 32'h00000002 : _0012_;
  assign _0012_ = \fifo_d_addr.wr  ? _0003_ : \fifo_d_addr.pointer ;
  assign _0016_ = \fifo_d_data_wr.pointer  + 1'h1;
  assign _0017_ = \fifo_d_data_wr.pointer  == 2'h2;
  assign _0018_ = ! \fifo_d_data_wr.pointer ;
  assign _0019_ = \fifo_d_data_wr.pointer  == 1'h1;
  always @(posedge clk_i)
    \fifo_d_data_wr.r0  <= _0014_;
  always @(posedge clk_i)
    \fifo_d_data_wr.r1  <= _0015_;
  always @(posedge clk_i)
    \fifo_d_data_wr.pointer  <= _0013_;
  assign _0020_ = _0019_ ? \u0.u_lsu.mem_data_wr_q  : \fifo_d_data_wr.r1 ;
  assign _0021_ = _0018_ ? \fifo_d_data_wr.r1  : _0020_;
  assign _0022_ = \fifo_d_data_wr.wr  ? _0021_ : \fifo_d_data_wr.r1 ;
  assign _0015_ = rst_i ? 32'h00000000 : _0022_;
  assign _0023_ = _0018_ ? \u0.u_lsu.mem_data_wr_q  : \fifo_d_data_wr.r0 ;
  assign _0024_ = \fifo_d_data_wr.wr  ? _0023_ : \fifo_d_data_wr.r0 ;
  assign _0014_ = rst_i ? 32'h00000000 : _0024_;
  assign _0013_ = rst_i ? 32'h00000000 : \fifo_d_data_wr.pointer_nxt ;
  assign \fifo_d_data_wr.pointer_nxt  = _0017_ ? 32'h00000002 : _0025_;
  assign _0025_ = \fifo_d_data_wr.wr  ? _0016_ : \fifo_d_data_wr.pointer ;
  assign _0029_ = \fifo_d_rd.pointer  + 1'h1;
  always @(posedge clk_i)
    \fifo_d_rd.r0  <= _0027_;
  always @(posedge clk_i)
    \fifo_d_rd.r1  <= _0028_;
  always @(posedge clk_i)
    \fifo_d_rd.pointer  <= _0026_;
  assign _0030_ = \fifo_d_rd.pointer  ? \fifo_d_rd.in  : \fifo_d_rd.r1 ;
  assign _0031_ = \fifo_d_rd.in  ? _0030_ : \fifo_d_rd.r1 ;
  assign _0028_ = rst_i ? 1'h0 : _0031_;
  assign _0032_ = \fifo_d_rd.pointer  ? \fifo_d_rd.r0  : \fifo_d_rd.in ;
  assign _0033_ = \fifo_d_rd.in  ? _0032_ : \fifo_d_rd.r0 ;
  assign _0027_ = rst_i ? 1'h0 : _0033_;
  assign _0026_ = rst_i ? 1'h0 : \fifo_d_rd.pointer_nxt ;
  assign \fifo_d_rd.pointer_nxt  = \fifo_d_rd.in  ? _0029_ : \fifo_d_rd.pointer ;
  assign _0037_ = \fifo_d_wr.pointer  + 1'h1;
  assign _0039_ = \fifo_d_wr.pointer  == 2'h2;
  assign _0040_ = ! \fifo_d_wr.pointer ;
  assign _0041_ = \fifo_d_wr.pointer  == 1'h1;
  always @(posedge clk_i)
    \fifo_d_wr.r0  <= _0035_;
  always @(posedge clk_i)
    \fifo_d_wr.out1  <= _0036_;
  always @(posedge clk_i)
    \fifo_d_wr.pointer  <= _0034_;
  assign _0042_ = _0041_ ? \fifo_d_wr.in  : \fifo_d_wr.out1 ;
  assign _0043_ = _0040_ ? \fifo_d_wr.out1  : _0042_;
  assign _0044_ = \fifo_d_data_wr.wr  ? _0043_ : \fifo_d_wr.out1 ;
  assign _0036_ = rst_i ? 4'h0 : _0044_;
  assign _0045_ = _0040_ ? \fifo_d_wr.in  : \fifo_d_wr.r0 ;
  assign _0046_ = \fifo_d_data_wr.wr  ? _0045_ : \fifo_d_wr.r0 ;
  assign _0035_ = rst_i ? 4'h0 : _0046_;
  assign _0034_ = rst_i ? 4'h0 : \fifo_d_wr.pointer_nxt ;
  assign \fifo_d_wr.pointer_nxt  = _0039_ ? 4'h2 : _0038_[3:0];
  assign _0038_[3:0] = \fifo_d_data_wr.wr  ? _0037_ : \fifo_d_wr.pointer ;
  assign _0050_ = \fifo_i_pc.pointer  + 1'h1;
  assign _0051_ = \fifo_i_pc.pointer  == 2'h2;
  assign _0052_ = ! \fifo_i_pc.pointer ;
  assign _0053_ = \fifo_i_pc.pointer  == 1'h1;
  always @(posedge clk_i)
    \fifo_i_pc.r0  <= _0048_;
  always @(posedge clk_i)
    \fifo_i_pc.r1  <= _0049_;
  always @(posedge clk_i)
    \fifo_i_pc.pointer  <= _0047_;
  assign _0054_ = _0053_ ? { \u0.u_fetch.pc_f_q [31:2], 2'h0 } : \fifo_i_pc.r1 ;
  assign _0055_ = _0052_ ? \fifo_i_pc.r1  : _0054_;
  assign _0056_ = \fifo_i_pc.wr  ? _0055_ : \fifo_i_pc.r1 ;
  assign _0049_ = rst_i ? 32'h00000000 : _0056_;
  assign _0057_ = _0052_ ? { \u0.u_fetch.pc_f_q [31:2], 2'h0 } : \fifo_i_pc.r0 ;
  assign _0058_ = \fifo_i_pc.wr  ? _0057_ : \fifo_i_pc.r0 ;
  assign _0048_ = rst_i ? 32'h00000000 : _0058_;
  assign _0047_ = rst_i ? 32'h00000000 : \fifo_i_pc.pointer_nxt ;
  assign \fifo_i_pc.pointer_nxt  = _0051_ ? 32'h00000002 : _0059_;
  assign _0059_ = \fifo_i_pc.wr  ? _0050_ : \fifo_i_pc.pointer ;
  assign _0063_ = \fifo_i_rd.pointer  + 1'h1;
  always @(posedge clk_i)
    \fifo_i_rd.r0  <= _0061_;
  always @(posedge clk_i)
    \fifo_i_rd.r1  <= _0062_;
  always @(posedge clk_i)
    \fifo_i_rd.pointer  <= _0060_;
  assign _0064_ = \fifo_i_rd.pointer  ? \fifo_i_pc.wr  : \fifo_i_rd.r1 ;
  assign _0065_ = \fifo_i_pc.wr  ? _0064_ : \fifo_i_rd.r1 ;
  assign _0062_ = rst_i ? 1'h0 : _0065_;
  assign _0066_ = \fifo_i_rd.pointer  ? \fifo_i_rd.r0  : \fifo_i_pc.wr ;
  assign _0067_ = \fifo_i_pc.wr  ? _0066_ : \fifo_i_rd.r0 ;
  assign _0061_ = rst_i ? 1'h0 : _0067_;
  assign _0060_ = rst_i ? 1'h0 : \fifo_i_rd.pointer_nxt ;
  assign \fifo_i_rd.pointer_nxt  = \fifo_i_pc.wr  ? _0063_ : \fifo_i_rd.pointer ;
  assign _0071_ = \fifo_pc_out.pointer  + 1'h1;
  assign _0072_ = \fifo_pc_out.pointer  == 2'h2;
  assign _0073_ = ! \fifo_pc_out.pointer ;
  assign _0074_ = \fifo_pc_out.pointer  == 1'h1;
  always @(posedge clk_i)
    \fifo_pc_out.r0  <= _0069_;
  always @(posedge clk_i)
    \fifo_pc_out.r1  <= _0070_;
  always @(posedge clk_i)
    \fifo_pc_out.pointer  <= _0068_;
  assign _0075_ = _0074_ ? { \u0.u_fetch.pc_f_q [31:2], 2'h0 } : \fifo_pc_out.r1 ;
  assign _0076_ = _0073_ ? \fifo_pc_out.r1  : _0075_;
  assign _0077_ = \fifo_i_pc.wr  ? _0076_ : \fifo_pc_out.r1 ;
  assign _0070_ = rst_i ? 32'h00000000 : _0077_;
  assign _0078_ = _0073_ ? { \u0.u_fetch.pc_f_q [31:2], 2'h0 } : \fifo_pc_out.r0 ;
  assign _0079_ = \fifo_i_pc.wr  ? _0078_ : \fifo_pc_out.r0 ;
  assign _0069_ = rst_i ? 32'h00000000 : _0079_;
  assign _0068_ = rst_i ? 32'h00000000 : \fifo_pc_out.pointer_nxt ;
  assign \fifo_pc_out.pointer_nxt  = _0072_ ? 32'h00000002 : _0080_;
  assign _0080_ = \fifo_i_pc.wr  ? _0071_ : \fifo_pc_out.pointer ;
  assign _0090_ = 5'h18 + { \u0.u_csr.u_csrfile.csr_mpriv_q [0], \u0.u_csr.u_csrfile.csr_mpriv_q [0] };
  assign _0091_ = \u0.u_csr.opcode_opcode_i  & 15'h707f;
  assign _0092_ = \u0.u_csr.opcode_opcode_i  & 32'hfe007fff;
  assign _0093_ = \u0.u_csr.opcode_opcode_i  & 32'hffffffff;
  assign _0094_ = \u0.u_csr.opcode_opcode_i  & 32'hdfffffff;
  assign _0095_ = \u0.u_csr.csr_rdata_w  & _0116_;
  assign _0096_ = _0141_ & _0117_;
  assign _0097_ = _0091_ == 13'h1073;
  assign _0098_ = _0091_ == 14'h2073;
  assign _0099_ = _0091_ == 14'h3073;
  assign _0100_ = _0091_ == 15'h5073;
  assign _0101_ = _0091_ == 15'h6073;
  assign _0102_ = _0091_ == 15'h7073;
  assign _0103_ = _0092_ == 29'h12000073;
  assign _0104_ = _0091_ == 13'h100f;
  assign _0105_ = \u0.u_csr.opcode_opcode_i [31:20] == 9'h180;
  assign _0106_ = _0093_ == 7'h73;
  assign _0107_ = _0094_ == 29'h10200073;
  assign _0108_ = _0093_ == 21'h100073;
  assign \u0.u_csr.csrrw_w  = \u0.u_csr.opcode_valid_i  && _0097_;
  assign \u0.u_csr.csrrs_w  = \u0.u_csr.opcode_valid_i  && _0098_;
  assign \u0.u_csr.csrrc_w  = \u0.u_csr.opcode_valid_i  && _0099_;
  assign \u0.u_csr.csrrwi_w  = \u0.u_csr.opcode_valid_i  && _0100_;
  assign \u0.u_csr.csrrsi_w  = \u0.u_csr.opcode_valid_i  && _0101_;
  assign \u0.u_csr.csrrci_w  = \u0.u_csr.opcode_valid_i  && _0102_;
  assign \u0.u_csr.sfence_w  = \u0.u_csr.opcode_valid_i  && _0103_;
  assign \u0.u_csr.ifence_w  = \u0.u_csr.opcode_valid_i  && _0104_;
  assign _0109_ = \u0.u_csr.opcode_valid_i  && _0111_;
  assign _0110_ = _0109_ && \u0.u_csr.csr_write_r ;
  assign \u0.u_csr.satp_update_w  = _0110_ && _0105_;
  assign _0112_ = \u0.u_csr.set_r  && \u0.u_csr.clr_r ;
  assign _0111_ = \u0.u_csr.set_r  || \u0.u_csr.clr_r ;
  assign _0113_ = \u0.u_csr.satp_update_w  || \u0.u_csr.ifence_w ;
  assign _0114_ = _0113_ || \u0.u_csr.sfence_w ;
  assign _0115_ = | \u0.u_csr.opcode_opcode_i [19:15];
  assign _0116_ = ~ \u0.u_csr.data_r ;
  assign _0117_ = ~ \u0.u_csr.interrupt_inhibit_i ;
  assign _0118_ = \u0.u_csr.csrrw_w  | \u0.u_csr.csrrs_w ;
  assign _0119_ = _0118_ | \u0.u_csr.csrrwi_w ;
  assign \u0.u_csr.set_r  = _0119_ | \u0.u_csr.csrrsi_w ;
  assign _0120_ = \u0.u_csr.csrrw_w  | \u0.u_csr.csrrc_w ;
  assign _0121_ = _0120_ | \u0.u_csr.csrrwi_w ;
  assign \u0.u_csr.clr_r  = _0121_ | \u0.u_csr.csrrci_w ;
  assign _0122_ = _0115_ | \u0.u_csr.csrrw_w ;
  assign \u0.u_csr.csr_write_r  = _0122_ | \u0.u_csr.csrrwi_w ;
  assign _0123_ = \u0.u_csr.csrrwi_w  | \u0.u_csr.csrrsi_w ;
  assign _0124_ = _0123_ | \u0.u_csr.csrrci_w ;
  assign _0125_ = \u0.u_csr.csr_rdata_w  | \u0.u_csr.data_r ;
  always @(posedge clk_i)
    \u0.u_csr.branch_q  <= _0081_;
  always @(posedge clk_i)
    \u0.u_csr.branch_target_q  <= _0082_;
  always @(posedge clk_i)
    \u0.u_csr.reset_q  <= _0088_;
  always @(posedge clk_i)
    \u0.u_csr.ifence_q  <= _0085_;
  always @(posedge clk_i)
    \u0.u_csr.take_interrupt_q  <= _0089_;
  always @(posedge clk_i)
    \u0.u_csr.rd_valid_e1_q  <= _0087_;
  always @(posedge clk_i)
    \u0.u_csr.rd_result_e1_q  <= _0086_;
  always @(posedge clk_i)
    \u0.u_csr.csr_wdata_e1_q  <= _0083_;
  always @(posedge clk_i)
    \u0.u_csr.exception_e1_q  <= _0084_;
  assign _0126_ = \u0.u_csr.reset_q  ? 1'h1 : \u0.u_csr.csr_branch_w ;
  assign _0081_ = rst_i ? 1'h0 : _0126_;
  assign _0127_ = \u0.u_csr.reset_q  ? reset_vector_i : \u0.u_csr.csr_target_w ;
  assign _0082_ = rst_i ? 32'h00000000 : _0127_;
  assign _0088_ = rst_i ? 1'h1 : 1'h0;
  assign _0085_ = rst_i ? 1'h0 : \u0.u_csr.ifence_w ;
  assign _0089_ = rst_i ? 1'h0 : _0096_;
  assign _0128_ = _0114_ ? 6'h31 : 6'h00;
  assign _0129_ = \u0.u_csr.opcode_invalid_i  ? 6'h12 : _0128_;
  assign _0130_ = _0108_ ? 6'h13 : _0129_;
  assign _0131_ = _0107_ ? 6'h30 : _0130_;
  assign _0132_ = _0106_ ? _0090_ : _0131_;
  assign _0133_ = \u0.u_csr.opcode_valid_i  ? _0132_ : 6'h00;
  assign _0084_ = rst_i ? 6'h00 : _0133_;
  assign _0134_ = \u0.u_csr.opcode_invalid_i  ? \u0.u_csr.opcode_opcode_i  : \u0.u_csr.csr_rdata_w ;
  assign _0135_ = \u0.u_csr.opcode_valid_i  ? _0134_ : 32'h00000000;
  assign _0086_ = rst_i ? 32'h00000000 : _0135_;
  assign _0136_ = \u0.u_csr.opcode_valid_i  ? _0111_ : 1'h0;
  assign _0087_ = rst_i ? 1'h0 : _0136_;
  assign _0137_ = \u0.u_csr.clr_r  ? _0095_ : \u0.u_csr.csr_wdata_e1_q ;
  assign _0138_ = \u0.u_csr.set_r  ? _0125_ : _0137_;
  assign _0139_ = _0112_ ? \u0.u_csr.data_r  : _0138_;
  assign _0140_ = \u0.u_csr.opcode_valid_i  ? _0139_ : 32'h00000000;
  assign _0083_ = rst_i ? 32'h00000000 : _0140_;
  assign _0141_ = | \u0.u_csr.interrupt_w ;
  assign \u0.u_csr.data_r  = _0124_ ? { 27'h0000000, \u0.u_csr.opcode_opcode_i [19:15] } : \u0.u_csr.opcode_ra_operand_i ;
  assign \u0.u_csr.u_csrfile.csr_waddr_i  = \u0.u_issue.u_pipe_ctrl.csr_wr_wb_q  ? \u0.u_issue.u_pipe_ctrl.opcode_wb_q [31:20] : 12'h000;
  assign \u0.u_csr.u_csrfile.csr_mcycle_r  = \u0.u_csr.u_csrfile.csr_mcycle_q  + 1'h1;
  assign _0213_ = \u0.u_issue.u_pipe_ctrl.pc_wb_q  + 3'h4;
  assign \u0.u_csr.u_csrfile.irq_pending_r  = \u0.u_csr.u_csrfile.csr_mip_q  & \u0.u_csr.u_csrfile.csr_mie_q ;
  assign _0214_ = \u0.u_csr.u_csrfile.csr_mscratch_q  & 32'hffffffff;
  assign _0215_ = \u0.u_csr.u_csrfile.csr_mepc_q  & 32'hffffffff;
  assign _0216_ = \u0.u_csr.u_csrfile.csr_mtvec_q  & 32'hffffffff;
  assign _0217_ = \u0.u_csr.u_csrfile.csr_mcause_q  & 32'h8000000f;
  assign _0218_ = \u0.u_csr.u_csrfile.csr_mtval_q  & 32'hffffffff;
  assign _0219_ = \u0.u_csr.u_csrfile.csr_sr_q  & 32'hffffffff;
  assign _0220_ = \u0.u_csr.u_csrfile.csr_mip_q  & 12'haaa;
  assign _0221_ = \u0.u_csr.u_csrfile.csr_mie_q  & 12'haaa;
  assign _0222_ = \u0.u_issue.u_pipe_ctrl.exception_wb_q  & 6'h30;
  assign _0223_ = \u0.u_issue.u_pipe_ctrl.csr_wdata_wb_q  & 32'hffffffff;
  assign _0224_ = \u0.u_issue.u_pipe_ctrl.csr_wdata_wb_q  & 32'h8000000f;
  assign _0225_ = \u0.u_issue.u_pipe_ctrl.csr_wdata_wb_q  & 12'haaa;
  assign _0226_ = \u0.u_csr.u_csrfile.csr_sr_q  & 32'hfffbfecc;
  assign _0227_ = \u0.u_issue.u_pipe_ctrl.csr_wdata_wb_q  & 19'h40133;
  assign _0228_ = \u0.u_csr.u_csrfile.csr_mip_q  & 32'hfffffddd;
  assign _0229_ = \u0.u_issue.u_pipe_ctrl.csr_wdata_wb_q  & 10'h222;
  assign _0230_ = \u0.u_csr.u_csrfile.csr_mie_q  & 32'hfffffddd;
  assign _0231_ = \u0.u_csr.opcode_opcode_i [31:20] == 10'h344;
  assign _0232_ = \u0.u_csr.opcode_opcode_i [31:20] == 9'h144;
  assign _0233_ = \u0.u_csr.u_csrfile.csr_waddr_i  == 10'h344;
  assign _0234_ = \u0.u_csr.u_csrfile.csr_waddr_i  == 9'h144;
  assign \u0.u_csr.u_csrfile.is_exception_w  = _0222_ == 5'h10;
  assign _0235_ = _0222_ == 6'h20;
  assign _0236_ = \u0.u_csr.u_csrfile.irq_priv_q  == 2'h3;
  assign _0237_ = { \u0.u_csr.u_csrfile.csr_mpriv_q [0], \u0.u_csr.u_csrfile.csr_mpriv_q [0] } == 1'h1;
  assign _0238_ = \u0.u_issue.u_pipe_ctrl.exception_wb_q  == 6'h30;
  assign _0239_ = { \u0.u_csr.u_csrfile.csr_mpriv_q [0], \u0.u_csr.u_csrfile.csr_mpriv_q [0] } == 2'h3;
  assign _0240_ = \u0.u_csr.u_csrfile.csr_mcycle_q  == \u0.u_csr.u_csrfile.csr_mtimecmp_q ;
  assign _0241_ = \u0.u_issue.u_pipe_ctrl.exception_wb_q  == 6'h20;
  assign _0242_ = \u0.u_issue.u_pipe_ctrl.exception_wb_q  == 6'h31;
  assign _0243_ = \u0.u_csr.opcode_valid_i  && _0231_;
  assign _0244_ = \u0.u_csr.opcode_valid_i  && _0232_;
  assign _0245_ = $signed(32'h00000001) && _0240_;
  assign _0246_ = _0243_ || _0244_;
  assign _0247_ = _0233_ || _0234_;
  assign _0248_ = _0247_ || _0283_;
  assign _0249_ = _0243_ | _0244_;
  assign \u0.u_csr.u_csrfile.buffer_mip_w  = _0249_ | \u0.u_csr.u_csrfile.csr_mip_upd_q ;
  assign _0250_ = _0226_ | _0227_;
  assign _0251_ = _0228_ | _0229_;
  assign _0252_ = _0230_ | _0229_;
  assign \u0.u_csr.u_csrfile.csr_mip_r  = _0161_ | { \u0.u_csr.u_csrfile.csr_mip_next_q [31:12], \u0.u_csr.u_csrfile.csr_mip_next_r [11], \u0.u_csr.u_csrfile.csr_mip_next_q [10:8], \u0.u_csr.u_csrfile.csr_mip_next_r [7], \u0.u_csr.u_csrfile.csr_mip_next_q [6:0] };
  always @(posedge clk_i)
    \u0.u_csr.u_csrfile.csr_mepc_q  <= _0144_;
  always @(posedge clk_i)
    \u0.u_csr.u_csrfile.csr_mcause_q  <= _0142_;
  always @(posedge clk_i)
    \u0.u_csr.u_csrfile.csr_sr_q  <= _0154_;
  always @(posedge clk_i)
    \u0.u_csr.u_csrfile.csr_mtvec_q  <= _0153_;
  always @(posedge clk_i)
    \u0.u_csr.u_csrfile.csr_mip_q  <= _0147_;
  always @(posedge clk_i)
    \u0.u_csr.u_csrfile.csr_mie_q  <= _0145_;
  reg \u0.u_csr.u_csrfile.csr_mpriv_q_reg[0] ;
  always @(posedge clk_i)
    \u0.u_csr.u_csrfile.csr_mpriv_q_reg[0]  <= 1'h1;
  assign \u0.u_csr.u_csrfile.csr_mpriv_q [0] = \u0.u_csr.u_csrfile.csr_mpriv_q_reg[0] ;
  always @(posedge clk_i)
    \u0.u_csr.u_csrfile.csr_mcycle_q  <= _0143_;
  always @(posedge clk_i)
    \u0.u_csr.u_csrfile.csr_mscratch_q  <= _0149_;
  always @(posedge clk_i)
    \u0.u_csr.u_csrfile.csr_mtval_q  <= _0152_;
  always @(posedge clk_i)
    \u0.u_csr.u_csrfile.csr_mtimecmp_q  <= _0151_;
  always @(posedge clk_i)
    \u0.u_csr.u_csrfile.csr_mtime_ie_q  <= _0150_;
  always @(posedge clk_i)
    \u0.u_csr.u_csrfile.csr_mip_next_q  <= _0146_;
  always @(posedge clk_i)
    \u0.u_csr.u_csrfile.csr_mip_upd_q  <= _0148_;
  always @(posedge clk_i)
    \u0.u_csr.u_csrfile.irq_priv_q  <= _0155_;
  assign _0202_ = _0242_ ? _0213_ : 32'h00000000;
  assign _0201_ = _0242_ ? 1'h1 : 1'h0;
  assign _0187_ = \u0.u_csr.u_csrfile.is_exception_w  ? \u0.u_csr.u_csrfile.csr_mtvec_q  : _0202_;
  assign _0186_ = \u0.u_csr.u_csrfile.is_exception_w  ? 1'h1 : _0201_;
  assign _0175_ = _0239_ ? \u0.u_csr.u_csrfile.csr_mepc_q  : 32'h00000000;
  assign _0164_ = _0238_ ? _0175_ : _0187_;
  assign _0163_ = _0238_ ? 1'h1 : _0186_;
  assign \u0.u_csr.csr_target_w  = _0241_ ? _0285_ : _0164_;
  assign \u0.u_csr.csr_branch_w  = _0241_ ? 1'h1 : _0163_;
  assign _0146_ = rst_i ? 32'h00000000 : _0284_;
  assign _0150_ = rst_i ? 1'h0 : \u0.u_csr.u_csrfile.csr_mtime_ie_r ;
  assign _0151_ = rst_i ? 32'h00000000 : \u0.u_csr.u_csrfile.csr_mtimecmp_r ;
  assign _0149_ = rst_i ? 32'h00000000 : \u0.u_csr.u_csrfile.csr_mscratch_r ;
  assign _0143_ = rst_i ? 32'h00000000 : \u0.u_csr.u_csrfile.csr_mcycle_r ;
  assign _0145_ = rst_i ? 32'h00000000 : \u0.u_csr.u_csrfile.csr_mie_r ;
  assign _0147_ = rst_i ? 32'h00000000 : \u0.u_csr.u_csrfile.csr_mip_r ;
  assign _0153_ = rst_i ? 32'h00000000 : \u0.u_csr.u_csrfile.csr_mtvec_r ;
  assign _0152_ = rst_i ? 32'h00000000 : \u0.u_csr.u_csrfile.csr_mtval_r ;
  assign _0142_ = rst_i ? 32'h00000000 : \u0.u_csr.u_csrfile.csr_mcause_r ;
  assign _0154_ = rst_i ? 32'h00000000 : \u0.u_csr.u_csrfile.csr_sr_r ;
  assign _0144_ = rst_i ? 32'h00000000 : \u0.u_csr.u_csrfile.csr_mepc_r ;
  assign \u0.u_csr.u_csrfile.csr_mtime_ie_r  = _0245_ ? 1'h0 : _0162_;
  assign \u0.u_csr.u_csrfile.csr_mip_next_r [7] = _0245_ ? \u0.u_csr.u_csrfile.csr_mtime_ie_q  : _0190_;
  assign _0190_ = 1'h0 ? 1'h1 : \u0.u_csr.u_csrfile.csr_mip_next_q [7];
  assign \u0.u_csr.u_csrfile.csr_mip_next_r [11] = intr_i ? 1'h1 : \u0.u_csr.u_csrfile.csr_mip_next_q [11];
  assign _0196_ = _0253_ ? _0223_ : \u0.u_csr.u_csrfile.csr_mscratch_q ;
  assign _0253_ = \u0.u_csr.u_csrfile.csr_waddr_i  == 10'h340;
  assign _0197_ = _0254_ ? 1'h1 : \u0.u_csr.u_csrfile.csr_mtime_ie_q ;
  assign _0254_ = \u0.u_csr.u_csrfile.csr_waddr_i  == 11'h7c0;
  assign _0198_ = _0254_ ? _0223_ : \u0.u_csr.u_csrfile.csr_mtimecmp_q ;
  function [31:0] _1606_;
    input [31:0] a;
    input [63:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1606_ = b[31:0];
      2'b1?:
        _1606_ = b[63:32];
      default:
        _1606_ = a;
    endcase
  endfunction
  assign _0194_ = _1606_(\u0.u_csr.u_csrfile.csr_mie_q , { _0225_, _0252_ }, { _0256_, _0255_ });
  assign _0255_ = \u0.u_csr.u_csrfile.csr_waddr_i  == 9'h104;
  assign _0256_ = \u0.u_csr.u_csrfile.csr_waddr_i  == 10'h304;
  function [31:0] _1609_;
    input [31:0] a;
    input [63:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1609_ = b[31:0];
      2'b1?:
        _1609_ = b[63:32];
      default:
        _1609_ = a;
    endcase
  endfunction
  assign _0195_ = _1609_(\u0.u_csr.u_csrfile.csr_mip_q , { _0225_, _0251_ }, { _0233_, _0234_ });
  assign _0199_ = _0257_ ? _0223_ : \u0.u_csr.u_csrfile.csr_mtvec_q ;
  assign _0257_ = \u0.u_csr.u_csrfile.csr_waddr_i  == 10'h305;
  function [31:0] _1612_;
    input [31:0] a;
    input [63:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1612_ = b[31:0];
      2'b1?:
        _1612_ = b[63:32];
      default:
        _1612_ = a;
    endcase
  endfunction
  assign _0160_ = _1612_(\u0.u_csr.u_csrfile.csr_sr_q , { _0223_, _0250_ }, { _0259_, _0258_ });
  assign _0258_ = \u0.u_csr.u_csrfile.csr_waddr_i  == 9'h100;
  assign _0259_ = \u0.u_csr.u_csrfile.csr_waddr_i  == 10'h300;
  assign _0208_ = _0260_ ? _0223_ : \u0.u_csr.u_csrfile.csr_mtval_q ;
  assign _0260_ = \u0.u_csr.u_csrfile.csr_waddr_i  == 10'h343;
  assign _0211_ = _0261_ ? _0224_ : \u0.u_csr.u_csrfile.csr_mcause_q ;
  assign _0261_ = \u0.u_csr.u_csrfile.csr_waddr_i  == 10'h342;
  assign _0204_ = _0262_ ? _0223_ : \u0.u_csr.u_csrfile.csr_mepc_q ;
  assign _0262_ = \u0.u_csr.u_csrfile.csr_waddr_i  == 10'h341;
  assign _0159_[31:13] = \u0.u_csr.u_csrfile.is_exception_w  ? \u0.u_csr.u_csrfile.csr_sr_q [31:13] : _0160_[31:13];
  assign _0159_[10:8] = \u0.u_csr.u_csrfile.is_exception_w  ? \u0.u_csr.u_csrfile.csr_sr_q [10:8] : _0160_[10:8];
  assign _0159_[6:4] = \u0.u_csr.u_csrfile.is_exception_w  ? \u0.u_csr.u_csrfile.csr_sr_q [6:4] : _0160_[6:4];
  assign _0159_[2:0] = \u0.u_csr.u_csrfile.is_exception_w  ? \u0.u_csr.u_csrfile.csr_sr_q [2:0] : _0160_[2:0];
  assign _0207_ = \u0.u_csr.u_csrfile.is_exception_w  ? { 28'h0000000, \u0.u_issue.u_pipe_ctrl.exception_wb_q [3:0] } : _0211_;
  assign _0191_ = \u0.u_csr.u_csrfile.is_exception_w  ? _0205_ : _0208_;
  assign _0189_ = \u0.u_csr.u_csrfile.is_exception_w  ? \u0.u_issue.u_pipe_ctrl.pc_wb_q  : _0204_;
  assign _0159_[3] = \u0.u_csr.u_csrfile.is_exception_w  ? 1'h0 : _0160_[3];
  assign _0159_[12:11] = \u0.u_csr.u_csrfile.is_exception_w  ? { \u0.u_csr.u_csrfile.csr_mpriv_q [0], \u0.u_csr.u_csrfile.csr_mpriv_q [0] } : _0160_[12:11];
  assign _0159_[7] = \u0.u_csr.u_csrfile.is_exception_w  ? \u0.u_csr.u_csrfile.csr_sr_q [3] : _0160_[7];
  assign _0181_ = \u0.u_csr.u_csrfile.is_exception_w  ? \u0.u_csr.u_csrfile.csr_mtime_ie_q  : _0197_;
  assign _0182_ = \u0.u_csr.u_csrfile.is_exception_w  ? \u0.u_csr.u_csrfile.csr_mtimecmp_q  : _0198_;
  assign _0180_ = \u0.u_csr.u_csrfile.is_exception_w  ? \u0.u_csr.u_csrfile.csr_mscratch_q  : _0196_;
  assign _0178_ = \u0.u_csr.u_csrfile.is_exception_w  ? \u0.u_csr.u_csrfile.csr_mie_q  : _0194_;
  assign _0179_ = \u0.u_csr.u_csrfile.is_exception_w  ? \u0.u_csr.u_csrfile.csr_mip_q  : _0195_;
  assign _0184_ = \u0.u_csr.u_csrfile.is_exception_w  ? \u0.u_csr.u_csrfile.csr_mtvec_q  : _0199_;
  function [31:0] _1637_;
    input [31:0] a;
    input [63:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1637_ = b[31:0];
      2'b1?:
        _1637_ = b[63:32];
      default:
        _1637_ = a;
    endcase
  endfunction
  assign _0205_ = _1637_(32'h00000000, { \u0.u_issue.u_pipe_ctrl.pc_wb_q , \u0.u_issue.u_pipe_ctrl.result_wb_q  }, { _0266_, _0264_ });
  assign _0264_ = | _0263_;
  assign _0263_[0] = \u0.u_issue.u_pipe_ctrl.exception_wb_q  == 5'h12;
  assign _0263_[1] = \u0.u_issue.u_pipe_ctrl.exception_wb_q  == 5'h14;
  assign _0263_[2] = \u0.u_issue.u_pipe_ctrl.exception_wb_q  == 5'h15;
  assign _0263_[3] = \u0.u_issue.u_pipe_ctrl.exception_wb_q  == 5'h16;
  assign _0263_[4] = \u0.u_issue.u_pipe_ctrl.exception_wb_q  == 5'h17;
  assign _0263_[5] = \u0.u_issue.u_pipe_ctrl.exception_wb_q  == 5'h1d;
  assign _0263_[6] = \u0.u_issue.u_pipe_ctrl.exception_wb_q  == 5'h1f;
  assign _0266_ = | _0265_;
  assign _0265_[0] = \u0.u_issue.u_pipe_ctrl.exception_wb_q  == 5'h10;
  assign _0265_[1] = \u0.u_issue.u_pipe_ctrl.exception_wb_q  == 5'h11;
  assign _0265_[2] = \u0.u_issue.u_pipe_ctrl.exception_wb_q  == 5'h1c;
  assign _0209_[31:13] = _0238_ ? \u0.u_csr.u_csrfile.csr_sr_q [31:13] : _0159_[31:13];
  assign _0209_[10:9] = _0238_ ? \u0.u_csr.u_csrfile.csr_sr_q [10:9] : _0159_[10:9];
  assign _0209_[6] = _0238_ ? \u0.u_csr.u_csrfile.csr_sr_q [6] : _0159_[6];
  assign _0209_[4] = _0238_ ? \u0.u_csr.u_csrfile.csr_sr_q [4] : _0159_[4];
  assign _0209_[2] = _0238_ ? \u0.u_csr.u_csrfile.csr_sr_q [2] : _0159_[2];
  assign _0209_[0] = _0238_ ? \u0.u_csr.u_csrfile.csr_sr_q [0] : _0159_[0];
  assign _0157_[0] = _0239_ ? 1'h1 : \u0.u_csr.u_csrfile.csr_sr_q [7];
  assign _0212_ = _0239_ ? \u0.u_csr.u_csrfile.csr_sr_q [7] : \u0.u_csr.u_csrfile.csr_sr_q [3];
  assign _0157_[1] = _0239_ ? \u0.u_csr.u_csrfile.csr_sr_q [8] : 1'h0;
  assign _0156_ = _0239_ ? \u0.u_csr.u_csrfile.csr_sr_q [5] : 1'h1;
  assign _0210_ = _0239_ ? \u0.u_csr.u_csrfile.csr_sr_q [1] : \u0.u_csr.u_csrfile.csr_sr_q [5];
  assign _0209_[12:11] = _0238_ ? _0158_ : _0159_[12:11];
  assign _0209_[8:7] = _0238_ ? _0157_ : _0159_[8:7];
  assign _0209_[5] = _0238_ ? _0156_ : _0159_[5];
  assign _0209_[3] = _0238_ ? _0212_ : _0159_[3];
  assign _0209_[1] = _0238_ ? _0210_ : _0159_[1];
  assign _0170_ = _0238_ ? \u0.u_csr.u_csrfile.csr_mtime_ie_q  : _0181_;
  assign _0171_ = _0238_ ? \u0.u_csr.u_csrfile.csr_mtimecmp_q  : _0182_;
  assign _0169_ = _0238_ ? \u0.u_csr.u_csrfile.csr_mscratch_q  : _0180_;
  assign _0167_ = _0238_ ? \u0.u_csr.u_csrfile.csr_mie_q  : _0178_;
  assign _0168_ = _0238_ ? \u0.u_csr.u_csrfile.csr_mip_q  : _0179_;
  assign _0173_ = _0238_ ? \u0.u_csr.u_csrfile.csr_mtvec_q  : _0184_;
  assign _0158_ = _0239_ ? 2'h0 : \u0.u_csr.u_csrfile.csr_sr_q [12:11];
  assign _0183_ = _0238_ ? \u0.u_csr.u_csrfile.csr_mtval_q  : _0191_;
  assign _0203_ = _0238_ ? \u0.u_csr.u_csrfile.csr_mcause_q  : _0207_;
  assign _0177_ = _0238_ ? \u0.u_csr.u_csrfile.csr_mepc_q  : _0189_;
  assign \u0.u_csr.u_csrfile.csr_sr_r [31:13] = _0235_ ? \u0.u_csr.u_csrfile.csr_sr_q [31:13] : _0209_[31:13];
  assign \u0.u_csr.u_csrfile.csr_sr_r [10:9] = _0235_ ? \u0.u_csr.u_csrfile.csr_sr_q [10:9] : _0209_[10:9];
  assign \u0.u_csr.u_csrfile.csr_sr_r [6] = _0235_ ? \u0.u_csr.u_csrfile.csr_sr_q [6] : _0209_[6];
  assign \u0.u_csr.u_csrfile.csr_sr_r [4] = _0235_ ? \u0.u_csr.u_csrfile.csr_sr_q [4] : _0209_[4];
  assign \u0.u_csr.u_csrfile.csr_sr_r [2] = _0235_ ? \u0.u_csr.u_csrfile.csr_sr_q [2] : _0209_[2];
  assign \u0.u_csr.u_csrfile.csr_sr_r [0] = _0235_ ? \u0.u_csr.u_csrfile.csr_sr_q [0] : _0209_[0];
  assign _0193_ = \u0.u_csr.interrupt_w [11] ? 32'h8000000b : \u0.u_csr.u_csrfile.csr_mcause_q ;
  assign _0188_ = \u0.u_csr.interrupt_w [7] ? 32'h80000007 : _0193_;
  assign _0176_ = \u0.u_csr.interrupt_w [3] ? 32'h80000003 : _0188_;
  assign _0165_ = _0236_ ? _0176_ : \u0.u_csr.u_csrfile.csr_mcause_q ;
  assign _0172_ = _0236_ ? 32'h00000000 : \u0.u_csr.u_csrfile.csr_mtval_q ;
  assign _0166_ = _0236_ ? \u0.u_issue.u_pipe_ctrl.pc_wb_q  : \u0.u_csr.u_csrfile.csr_mepc_q ;
  assign _0185_ = _0236_ ? 1'h0 : \u0.u_csr.u_csrfile.csr_sr_q [3];
  assign _0206_ = _0236_ ? { \u0.u_csr.u_csrfile.csr_mpriv_q [0], \u0.u_csr.u_csrfile.csr_mpriv_q [0] } : \u0.u_csr.u_csrfile.csr_sr_q [12:11];
  assign _0200_[0] = _0236_ ? \u0.u_csr.u_csrfile.csr_sr_q [3] : \u0.u_csr.u_csrfile.csr_sr_q [7];
  assign _0200_[1] = _0236_ ? \u0.u_csr.u_csrfile.csr_sr_q [8] : _0237_;
  assign _0192_ = _0236_ ? \u0.u_csr.u_csrfile.csr_sr_q [5] : \u0.u_csr.u_csrfile.csr_sr_q [1];
  assign _0174_ = _0236_ ? \u0.u_csr.u_csrfile.csr_sr_q [1] : 1'h0;
  assign \u0.u_csr.u_csrfile.csr_sr_r [12:11] = _0235_ ? _0206_ : _0209_[12:11];
  assign \u0.u_csr.u_csrfile.csr_sr_r [8:7] = _0235_ ? _0200_ : _0209_[8:7];
  assign \u0.u_csr.u_csrfile.csr_sr_r [5] = _0235_ ? _0192_ : _0209_[5];
  assign \u0.u_csr.u_csrfile.csr_sr_r [3] = _0235_ ? _0185_ : _0209_[3];
  assign \u0.u_csr.u_csrfile.csr_sr_r [1] = _0235_ ? _0174_ : _0209_[1];
  assign \u0.u_csr.u_csrfile.csr_mtval_r  = _0235_ ? _0172_ : _0183_;
  assign \u0.u_csr.u_csrfile.csr_mcause_r  = _0235_ ? _0165_ : _0203_;
  assign \u0.u_csr.u_csrfile.csr_mepc_r  = _0235_ ? _0166_ : _0177_;
  assign _0162_ = _0235_ ? \u0.u_csr.u_csrfile.csr_mtime_ie_q  : _0170_;
  assign \u0.u_csr.u_csrfile.csr_mtimecmp_r  = _0235_ ? \u0.u_csr.u_csrfile.csr_mtimecmp_q  : _0171_;
  assign \u0.u_csr.u_csrfile.csr_mscratch_r  = _0235_ ? \u0.u_csr.u_csrfile.csr_mscratch_q  : _0169_;
  assign \u0.u_csr.u_csrfile.csr_mie_r  = _0235_ ? \u0.u_csr.u_csrfile.csr_mie_q  : _0167_;
  assign _0161_ = _0235_ ? \u0.u_csr.u_csrfile.csr_mip_q  : _0168_;
  assign \u0.u_csr.u_csrfile.csr_mtvec_r  = _0235_ ? \u0.u_csr.u_csrfile.csr_mtvec_q  : _0173_;
  function [31:0] _1708_;
    input [31:0] a;
    input [383:0] b;
    input [11:0] s;
    casez (s) // synopsys parallel_case
      12'b???????????1:
        _1708_ = b[31:0];
      12'b??????????1?:
        _1708_ = b[63:32];
      12'b?????????1??:
        _1708_ = b[95:64];
      12'b????????1???:
        _1708_ = b[127:96];
      12'b???????1????:
        _1708_ = b[159:128];
      12'b??????1?????:
        _1708_ = b[191:160];
      12'b?????1??????:
        _1708_ = b[223:192];
      12'b????1???????:
        _1708_ = b[255:224];
      12'b???1????????:
        _1708_ = b[287:256];
      12'b??1?????????:
        _1708_ = b[319:288];
      12'b?1??????????:
        _1708_ = b[351:320];
      12'b1???????????:
        _1708_ = b[383:352];
      default:
        _1708_ = a;
    endcase
  endfunction
  assign \u0.u_csr.csr_rdata_w  = _1708_(32'h00000000, { _0214_, _0215_, _0216_, _0217_, _0218_, _0219_, _0220_, _0221_, \u0.u_csr.u_csrfile.csr_mcycle_q , cpu_id_i, 32'h40001100, \u0.u_csr.u_csrfile.csr_mtimecmp_q  }, { _0278_, _0277_, _0276_, _0275_, _0274_, _0273_, _0231_, _0272_, _0271_, _0269_, _0268_, _0267_ });
  assign _0267_ = \u0.u_csr.opcode_opcode_i [31:20] == 11'h7c0;
  assign _0268_ = \u0.u_csr.opcode_opcode_i [31:20] == 10'h301;
  assign _0269_ = \u0.u_csr.opcode_opcode_i [31:20] == 12'hf14;
  assign _0271_ = | _0270_;
  assign _0270_[0] = \u0.u_csr.opcode_opcode_i [31:20] == 12'hc00;
  assign _0270_[1] = \u0.u_csr.opcode_opcode_i [31:20] == 12'hc01;
  assign _0272_ = \u0.u_csr.opcode_opcode_i [31:20] == 10'h304;
  assign _0273_ = \u0.u_csr.opcode_opcode_i [31:20] == 10'h300;
  assign _0274_ = \u0.u_csr.opcode_opcode_i [31:20] == 10'h343;
  assign _0275_ = \u0.u_csr.opcode_opcode_i [31:20] == 10'h342;
  assign _0276_ = \u0.u_csr.opcode_opcode_i [31:20] == 10'h305;
  assign _0277_ = \u0.u_csr.opcode_opcode_i [31:20] == 10'h341;
  assign _0278_ = \u0.u_csr.opcode_opcode_i [31:20] == 10'h340;
  assign _0279_ = _0248_ ? 1'h0 : \u0.u_csr.u_csrfile.csr_mip_upd_q ;
  assign _0280_ = _0246_ ? 1'h1 : _0279_;
  assign _0148_ = rst_i ? 1'h0 : _0280_;
  assign _0281_ = _0282_ ? 2'h3 : \u0.u_csr.u_csrfile.irq_priv_q ;
  assign _0155_ = rst_i ? 2'h3 : _0281_;
  assign _0282_ = | \u0.u_csr.interrupt_w ;
  assign _0283_ = | \u0.u_issue.u_pipe_ctrl.exception_wb_q ;
  assign \u0.u_csr.interrupt_w  = \u0.u_csr.u_csrfile.csr_sr_q [3] ? \u0.u_csr.u_csrfile.irq_pending_r  : 32'h00000000;
  assign _0284_ = \u0.u_csr.u_csrfile.buffer_mip_w  ? { \u0.u_csr.u_csrfile.csr_mip_next_q [31:12], \u0.u_csr.u_csrfile.csr_mip_next_r [11], \u0.u_csr.u_csrfile.csr_mip_next_q [10:8], \u0.u_csr.u_csrfile.csr_mip_next_r [7], \u0.u_csr.u_csrfile.csr_mip_next_q [6:0] } : 32'h00000000;
  assign _0285_ = _0236_ ? \u0.u_csr.u_csrfile.csr_mtvec_q  : 32'h00000000;
  assign \u0.u_decode.genblk1.u_dec.fetch_fault_i  = \u0.u_decode.fetch_in_fault_page_i  | \u0.u_decode.fetch_in_fault_fetch_i ;
  assign \u0.u_csr.opcode_opcode_i  = \u0.u_decode.genblk1.u_dec.fetch_fault_i  ? 32'h00000000 : \u0.u_decode.fetch_in_instr_i ;
  assign _0286_ = \u0.u_csr.opcode_opcode_i  & 32'hffffffff;
  assign _0287_ = \u0.u_csr.opcode_opcode_i  & 32'hdfffffff;
  assign _0288_ = \u0.u_csr.opcode_opcode_i  & 15'h707f;
  assign _0289_ = \u0.u_csr.opcode_opcode_i  & 32'hffff8fff;
  assign _0290_ = \u0.u_csr.opcode_opcode_i  & 32'hfe007fff;
  assign _0291_ = \u0.u_csr.opcode_opcode_i  & 32'hfe00707f;
  assign _0292_ = \u0.u_csr.opcode_opcode_i  & 7'h7f;
  assign _0293_ = \u0.u_csr.opcode_opcode_i  & 32'hfc00707f;
  assign _0294_ = _0286_ == 7'h73;
  assign _0295_ = _0286_ == 21'h100073;
  assign _0296_ = _0287_ == 29'h10200073;
  assign _0297_ = _0288_ == 13'h1073;
  assign _0298_ = _0288_ == 14'h2073;
  assign _0299_ = _0288_ == 14'h3073;
  assign _0300_ = _0288_ == 15'h5073;
  assign _0301_ = _0288_ == 15'h6073;
  assign _0302_ = _0288_ == 15'h7073;
  assign _0303_ = _0289_ == 29'h10500073;
  assign _0304_ = _0288_ == 4'hf;
  assign _0305_ = _0288_ == 13'h100f;
  assign _0306_ = _0290_ == 29'h12000073;
  assign _0307_ = _0291_ == 26'h2000033;
  assign _0308_ = _0291_ == 26'h2001033;
  assign _0309_ = _0291_ == 26'h2002033;
  assign _0310_ = _0291_ == 26'h2003033;
  assign _0311_ = _0291_ == 26'h2004033;
  assign _0312_ = _0291_ == 26'h2005033;
  assign _0313_ = _0291_ == 26'h2006033;
  assign _0314_ = _0291_ == 26'h2007033;
  assign _0315_ = _0288_ == 7'h67;
  assign _0316_ = _0292_ == 7'h6f;
  assign _0317_ = _0292_ == 6'h37;
  assign _0318_ = _0292_ == 5'h17;
  assign _0319_ = _0288_ == 5'h13;
  assign _0320_ = _0293_ == 13'h1013;
  assign _0321_ = _0288_ == 14'h2013;
  assign _0322_ = _0288_ == 14'h3013;
  assign _0323_ = _0288_ == 15'h4013;
  assign _0324_ = _0293_ == 15'h5013;
  assign _0325_ = _0293_ == 31'h40005013;
  assign _0326_ = _0288_ == 15'h6013;
  assign _0327_ = _0288_ == 15'h7013;
  assign _0328_ = _0291_ == 6'h33;
  assign _0329_ = _0291_ == 31'h40000033;
  assign _0330_ = _0291_ == 13'h1033;
  assign _0331_ = _0291_ == 14'h2033;
  assign _0332_ = _0291_ == 14'h3033;
  assign _0333_ = _0291_ == 15'h4033;
  assign _0334_ = _0291_ == 15'h5033;
  assign _0335_ = _0291_ == 31'h40005033;
  assign _0336_ = _0291_ == 15'h6033;
  assign _0337_ = _0291_ == 15'h7033;
  assign _0338_ = _0288_ == 2'h3;
  assign _0339_ = _0288_ == 13'h1003;
  assign _0340_ = _0288_ == 14'h2003;
  assign _0341_ = _0288_ == 15'h4003;
  assign _0342_ = _0288_ == 15'h5003;
  assign _0343_ = _0288_ == 15'h6003;
  assign _0344_ = _0288_ == 6'h23;
  assign _0345_ = _0288_ == 13'h1023;
  assign _0346_ = _0288_ == 14'h2023;
  assign _0347_ = _0288_ == 7'h63;
  assign _0348_ = _0288_ == 13'h1063;
  assign _0349_ = _0288_ == 15'h4063;
  assign _0350_ = _0288_ == 15'h5063;
  assign _0351_ = _0288_ == 15'h6063;
  assign _0352_ = _0288_ == 15'h7063;
  assign _0353_ = 1'h1 && _0307_;
  assign _0354_ = 1'h1 && _0308_;
  assign _0355_ = 1'h1 && _0309_;
  assign _0356_ = 1'h1 && _0310_;
  assign _0357_ = 1'h1 && _0311_;
  assign _0358_ = 1'h1 && _0312_;
  assign _0359_ = 1'h1 && _0313_;
  assign _0360_ = 1'h1 && _0314_;
  assign \u0.u_decode.genblk1.u_dec.mul_o  = 1'h1 && _0435_;
  assign \u0.u_decode.genblk1.u_dec.div_o  = 1'h1 && _0438_;
  assign \u0.u_decode.genblk1.u_dec.invalid_w  = \u0.u_decode.genblk1.u_dec.valid_i  && _0490_;
  assign _0361_ = _0315_ || _0316_;
  assign _0362_ = _0361_ || _0317_;
  assign _0363_ = _0362_ || _0318_;
  assign _0364_ = _0363_ || _0319_;
  assign _0365_ = _0364_ || _0320_;
  assign _0366_ = _0365_ || _0321_;
  assign _0367_ = _0366_ || _0322_;
  assign _0368_ = _0367_ || _0323_;
  assign _0369_ = _0368_ || _0324_;
  assign _0370_ = _0369_ || _0325_;
  assign _0371_ = _0370_ || _0326_;
  assign _0372_ = _0371_ || _0327_;
  assign _0373_ = _0372_ || _0328_;
  assign _0374_ = _0373_ || _0329_;
  assign _0375_ = _0374_ || _0330_;
  assign _0376_ = _0375_ || _0331_;
  assign _0377_ = _0376_ || _0332_;
  assign _0378_ = _0377_ || _0333_;
  assign _0379_ = _0378_ || _0334_;
  assign _0380_ = _0379_ || _0335_;
  assign _0381_ = _0380_ || _0336_;
  assign _0382_ = _0381_ || _0337_;
  assign _0383_ = _0382_ || _0338_;
  assign _0384_ = _0383_ || _0339_;
  assign _0385_ = _0384_ || _0340_;
  assign _0386_ = _0385_ || _0341_;
  assign _0387_ = _0386_ || _0342_;
  assign _0388_ = _0387_ || _0343_;
  assign _0389_ = _0388_ || _0307_;
  assign _0390_ = _0389_ || _0308_;
  assign _0391_ = _0390_ || _0309_;
  assign _0392_ = _0391_ || _0310_;
  assign _0393_ = _0392_ || _0311_;
  assign _0394_ = _0393_ || _0312_;
  assign _0395_ = _0394_ || _0313_;
  assign _0396_ = _0395_ || _0314_;
  assign _0397_ = _0396_ || _0297_;
  assign _0398_ = _0397_ || _0298_;
  assign _0399_ = _0398_ || _0299_;
  assign _0400_ = _0399_ || _0300_;
  assign _0401_ = _0400_ || _0301_;
  assign \u0.u_decode.genblk1.u_dec.rd_valid_o  = _0401_ || _0302_;
  assign _0402_ = _0327_ || _0319_;
  assign _0403_ = _0402_ || _0321_;
  assign _0404_ = _0403_ || _0322_;
  assign _0405_ = _0404_ || _0326_;
  assign _0406_ = _0405_ || _0323_;
  assign _0407_ = _0406_ || _0320_;
  assign _0408_ = _0407_ || _0324_;
  assign _0409_ = _0408_ || _0325_;
  assign _0410_ = _0409_ || _0317_;
  assign _0411_ = _0410_ || _0318_;
  assign _0412_ = _0411_ || _0328_;
  assign _0413_ = _0412_ || _0329_;
  assign _0414_ = _0413_ || _0331_;
  assign _0415_ = _0414_ || _0332_;
  assign _0416_ = _0415_ || _0333_;
  assign _0417_ = _0416_ || _0336_;
  assign _0418_ = _0417_ || _0337_;
  assign _0419_ = _0418_ || _0330_;
  assign _0420_ = _0419_ || _0334_;
  assign \u0.u_decode.genblk1.u_dec.exec_o  = _0420_ || _0335_;
  assign _0421_ = _0338_ || _0339_;
  assign _0422_ = _0421_ || _0340_;
  assign _0423_ = _0422_ || _0341_;
  assign _0424_ = _0423_ || _0342_;
  assign _0425_ = _0424_ || _0343_;
  assign _0426_ = _0425_ || _0344_;
  assign _0427_ = _0426_ || _0345_;
  assign \u0.u_decode.genblk1.u_dec.lsu_o  = _0427_ || _0346_;
  assign _0428_ = _0361_ || _0347_;
  assign _0429_ = _0428_ || _0348_;
  assign _0430_ = _0429_ || _0349_;
  assign _0431_ = _0430_ || _0350_;
  assign _0432_ = _0431_ || _0351_;
  assign \u0.u_decode.genblk1.u_dec.branch_o  = _0432_ || _0352_;
  assign _0433_ = _0307_ || _0308_;
  assign _0434_ = _0433_ || _0309_;
  assign _0435_ = _0434_ || _0310_;
  assign _0436_ = _0311_ || _0312_;
  assign _0437_ = _0436_ || _0313_;
  assign _0438_ = _0437_ || _0314_;
  assign _0439_ = _0294_ || _0295_;
  assign _0440_ = _0439_ || _0296_;
  assign _0441_ = _0440_ || _0297_;
  assign _0442_ = _0441_ || _0298_;
  assign _0443_ = _0442_ || _0299_;
  assign _0444_ = _0443_ || _0300_;
  assign _0445_ = _0444_ || _0301_;
  assign _0446_ = _0445_ || _0302_;
  assign _0447_ = _0446_ || _0303_;
  assign _0448_ = _0447_ || _0304_;
  assign _0449_ = _0448_ || _0305_;
  assign _0450_ = _0449_ || _0306_;
  assign _0451_ = _0450_ || \u0.u_decode.genblk1.u_dec.invalid_w ;
  assign \u0.u_decode.genblk1.u_dec.csr_o  = _0451_ || \u0.u_decode.genblk1.u_dec.fetch_fault_i ;
  assign _0452_ = \u0.u_decode.genblk1.u_dec.exec_o  || _0316_;
  assign _0453_ = _0452_ || _0315_;
  assign _0454_ = _0453_ || _0347_;
  assign _0455_ = _0454_ || _0348_;
  assign _0456_ = _0455_ || _0349_;
  assign _0457_ = _0456_ || _0350_;
  assign _0458_ = _0457_ || _0351_;
  assign _0459_ = _0458_ || _0352_;
  assign _0460_ = _0459_ || _0338_;
  assign _0461_ = _0460_ || _0339_;
  assign _0462_ = _0461_ || _0340_;
  assign _0463_ = _0462_ || _0341_;
  assign _0464_ = _0463_ || _0342_;
  assign _0465_ = _0464_ || _0343_;
  assign _0466_ = _0465_ || _0344_;
  assign _0467_ = _0466_ || _0345_;
  assign _0468_ = _0467_ || _0346_;
  assign _0469_ = _0468_ || _0294_;
  assign _0470_ = _0469_ || _0295_;
  assign _0471_ = _0470_ || _0296_;
  assign _0472_ = _0471_ || _0297_;
  assign _0473_ = _0472_ || _0298_;
  assign _0474_ = _0473_ || _0299_;
  assign _0475_ = _0474_ || _0300_;
  assign _0476_ = _0475_ || _0301_;
  assign _0477_ = _0476_ || _0302_;
  assign _0478_ = _0477_ || _0303_;
  assign _0479_ = _0478_ || _0304_;
  assign _0480_ = _0479_ || _0305_;
  assign _0481_ = _0480_ || _0306_;
  assign _0482_ = _0481_ || _0353_;
  assign _0483_ = _0482_ || _0354_;
  assign _0484_ = _0483_ || _0355_;
  assign _0485_ = _0484_ || _0356_;
  assign _0486_ = _0485_ || _0357_;
  assign _0487_ = _0486_ || _0358_;
  assign _0488_ = _0487_ || _0359_;
  assign _0489_ = _0488_ || _0360_;
  assign _0490_ = ~ _0489_;
  assign \u0.u_div.div_complete_w  = _0511_ & \u0.u_div.div_busy_q ;
  assign _0500_ = \u0.u_csr.opcode_opcode_i  & 32'hfe00707f;
  assign \u0.u_div.div_start_w  = \u0.u_div.opcode_valid_i  & \u0.u_div.div_rem_inst_w ;
  assign _0501_ = _0500_ == 26'h2004033;
  assign _0502_ = _0500_ == 26'h2006033;
  assign _0503_ = _0500_ == 26'h2005033;
  assign _0504_ = _0500_ == 26'h2007033;
  assign _0505_ = \u0.u_div.divisor_q  <= \u0.u_div.dividend_q ;
  assign _0506_ = \u0.u_div.signed_operation_w  && \u0.u_csr.opcode_ra_operand_i [31];
  assign _0507_ = \u0.u_div.signed_operation_w  && \u0.u_div.opcode_rb_operand_i [31];
  assign _0508_ = _0501_ && _0514_;
  assign _0509_ = _0508_ && _0542_;
  assign _0510_ = _0502_ && \u0.u_csr.opcode_ra_operand_i [31];
  assign _0511_ = ! _0541_;
  assign _0512_ = _0509_ || _0510_;
  assign \u0.u_div.div_operation_w  = _0501_ || _0503_;
  assign _0513_ = \u0.u_div.div_operation_w  || _0502_;
  assign \u0.u_div.div_rem_inst_w  = _0513_ || _0504_;
  assign \u0.u_div.signed_operation_w  = _0501_ || _0502_;
  assign _0514_ = \u0.u_csr.opcode_ra_operand_i [31] != \u0.u_div.opcode_rb_operand_i [31];
  assign _0515_ = - \u0.u_csr.opcode_ra_operand_i ;
  assign _0516_ = - \u0.u_div.opcode_rb_operand_i ;
  assign _0517_ = - \u0.u_div.quotient_q ;
  assign _0518_ = - \u0.u_div.dividend_q ;
  assign _0519_ = \u0.u_div.quotient_q  | \u0.u_div.q_mask_q ;
  always @(posedge clk_i)
    \u0.u_div.wb_result_q  <= _0499_;
  always @(posedge clk_i)
    \u0.u_div.valid_q  <= _0498_;
  always @(posedge clk_i)
    \u0.u_div.dividend_q  <= _0493_;
  always @(posedge clk_i)
    \u0.u_div.divisor_q  <= _0494_;
  always @(posedge clk_i)
    \u0.u_div.quotient_q  <= _0497_;
  always @(posedge clk_i)
    \u0.u_div.q_mask_q  <= _0496_;
  always @(posedge clk_i)
    \u0.u_div.div_inst_q  <= _0492_;
  always @(posedge clk_i)
    \u0.u_div.div_busy_q  <= _0491_;
  always @(posedge clk_i)
    \u0.u_div.invert_res_q  <= _0495_;
  assign _0520_ = \u0.u_div.div_complete_w  ? \u0.u_div.div_result_r  : \u0.u_div.wb_result_q ;
  assign _0499_ = rst_i ? 32'h00000000 : _0520_;
  assign _0498_ = rst_i ? 1'h0 : \u0.u_div.div_complete_w ;
  assign \u0.u_div.div_result_r  = \u0.u_div.div_inst_q  ? _0544_ : _0545_;
  assign _0521_ = \u0.u_div.div_start_w  ? _0512_ : \u0.u_div.invert_res_q ;
  assign _0495_ = rst_i ? 1'h0 : _0521_;
  assign _0522_ = \u0.u_div.div_complete_w  ? 1'h0 : \u0.u_div.div_busy_q ;
  assign _0523_ = \u0.u_div.div_start_w  ? 1'h1 : _0522_;
  assign _0491_ = rst_i ? 1'h0 : _0523_;
  assign _0524_ = \u0.u_div.div_start_w  ? \u0.u_div.div_operation_w  : \u0.u_div.div_inst_q ;
  assign _0492_ = rst_i ? 1'h0 : _0524_;
  assign _0525_ = \u0.u_div.div_busy_q  ? { 1'h0, \u0.u_div.q_mask_q [31:1] } : \u0.u_div.q_mask_q ;
  assign _0526_ = \u0.u_div.div_complete_w  ? \u0.u_div.q_mask_q  : _0525_;
  assign _0527_ = \u0.u_div.div_start_w  ? 32'h80000000 : _0526_;
  assign _0496_ = rst_i ? 32'h00000000 : _0527_;
  assign _0528_ = _0505_ ? _0519_ : \u0.u_div.quotient_q ;
  assign _0529_ = \u0.u_div.div_busy_q  ? _0528_ : \u0.u_div.quotient_q ;
  assign _0530_ = \u0.u_div.div_complete_w  ? \u0.u_div.quotient_q  : _0529_;
  assign _0531_ = \u0.u_div.div_start_w  ? 32'h00000000 : _0530_;
  assign _0497_ = rst_i ? 32'h00000000 : _0531_;
  assign _0532_ = \u0.u_div.div_busy_q  ? { 1'h0, \u0.u_div.divisor_q [62:1] } : \u0.u_div.divisor_q ;
  assign _0533_ = \u0.u_div.div_complete_w  ? \u0.u_div.divisor_q  : _0532_;
  assign _0534_ = _0507_ ? { _0516_, 31'h00000000 } : { \u0.u_div.opcode_rb_operand_i , 31'h00000000 };
  assign _0535_ = \u0.u_div.div_start_w  ? _0534_ : _0533_;
  assign _0494_ = rst_i ? 63'h0000000000000000 : _0535_;
  assign _0536_ = _0505_ ? _0543_ : \u0.u_div.dividend_q ;
  assign _0537_ = \u0.u_div.div_busy_q  ? _0536_ : \u0.u_div.dividend_q ;
  assign _0538_ = \u0.u_div.div_complete_w  ? \u0.u_div.dividend_q  : _0537_;
  assign _0539_ = _0506_ ? _0515_ : \u0.u_csr.opcode_ra_operand_i ;
  assign _0540_ = \u0.u_div.div_start_w  ? _0539_ : _0538_;
  assign _0493_ = rst_i ? 32'h00000000 : _0540_;
  assign _0541_ = | \u0.u_div.q_mask_q ;
  assign _0542_ = | \u0.u_div.opcode_rb_operand_i ;
  assign _0543_ = \u0.u_div.dividend_q  - \u0.u_div.divisor_q [31:0];
  assign _0544_ = \u0.u_div.invert_res_q  ? _0517_ : \u0.u_div.quotient_q ;
  assign _0545_ = \u0.u_div.invert_res_q  ? _0518_ : \u0.u_div.dividend_q ;
  assign _0626_ = \u0.u_exec.opcode_pc_i  + { \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [7], \u0.u_csr.opcode_opcode_i [30:25], \u0.u_csr.opcode_opcode_i [11:8], 1'h0 };
  assign _0627_ = \u0.u_exec.opcode_pc_i  + { \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [19:12], \u0.u_csr.opcode_opcode_i [20], \u0.u_csr.opcode_opcode_i [30:21], 1'h0 };
  assign _0628_ = \u0.u_csr.opcode_ra_operand_i  + { \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31:20] };
  assign _0629_ = \u0.u_csr.opcode_opcode_i  & 32'hfe00707f;
  assign _0630_ = \u0.u_csr.opcode_opcode_i  & 15'h707f;
  assign _0631_ = \u0.u_csr.opcode_opcode_i  & 32'hfc00707f;
  assign _0632_ = \u0.u_csr.opcode_opcode_i  & 7'h7f;
  assign _0633_ = _0629_ == 6'h33;
  assign _0634_ = _0629_ == 15'h7033;
  assign _0635_ = _0629_ == 15'h6033;
  assign _0636_ = _0629_ == 13'h1033;
  assign _0637_ = _0629_ == 31'h40005033;
  assign _0638_ = _0629_ == 15'h5033;
  assign _0639_ = _0629_ == 31'h40000033;
  assign _0640_ = _0629_ == 15'h4033;
  assign _0641_ = _0629_ == 14'h2033;
  assign _0642_ = _0629_ == 14'h3033;
  assign _0643_ = _0630_ == 5'h13;
  assign _0644_ = _0630_ == 15'h7013;
  assign _0645_ = _0630_ == 14'h2013;
  assign _0646_ = _0630_ == 14'h3013;
  assign _0647_ = _0630_ == 15'h6013;
  assign _0648_ = _0630_ == 15'h4013;
  assign _0649_ = _0631_ == 13'h1013;
  assign _0650_ = _0631_ == 15'h5013;
  assign _0651_ = _0631_ == 31'h40005013;
  assign _0652_ = _0632_ == 6'h37;
  assign _0653_ = _0632_ == 5'h17;
  assign _0654_ = _0632_ == 7'h6f;
  assign _0655_ = _0630_ == 7'h67;
  assign _0656_ = _0630_ == 7'h63;
  assign _0657_ = \u0.u_csr.opcode_ra_operand_i  == \u0.u_div.opcode_rb_operand_i ;
  assign _0658_ = _0630_ == 13'h1063;
  assign _0659_ = _0630_ == 15'h4063;
  assign _0660_ = _0630_ == 15'h5063;
  assign _0661_ = _0630_ == 15'h6063;
  assign _0662_ = _0630_ == 15'h7063;
  assign _0663_ = \u0.u_csr.opcode_ra_operand_i  >= \u0.u_div.opcode_rb_operand_i ;
  assign _0664_ = \u0.u_exec.branch_r  && \u0.u_div.opcode_valid_i ;
  assign \u0.u_exec.branch_d_request_o  = _0664_ && \u0.u_exec.branch_taken_r ;
  assign _0665_ = _0654_ || _0655_;
  assign _0666_ = \u0.u_csr.opcode_ra_operand_i  < \u0.u_div.opcode_rb_operand_i ;
  assign _0667_ = \u0.u_csr.opcode_ra_operand_i [31] != \u0.u_div.opcode_rb_operand_i [31];
  assign _0668_ = \u0.u_csr.opcode_ra_operand_i  != \u0.u_div.opcode_rb_operand_i ;
  assign _0669_ = _0617_ | _0657_;
  always @(posedge clk_i)
    \u0.u_exec.result_q  <= _0546_;
  assign _0622_ = _0662_ ? _0663_ : 1'h0;
  assign _0621_ = _0662_ ? 1'h1 : 1'h0;
  assign _0616_ = _0661_ ? _0666_ : _0622_;
  assign _0615_ = _0661_ ? 1'h1 : _0621_;
  assign _0670_ = _0667_ ? \u0.u_div.opcode_rb_operand_i [31] : _0678_[31];
  assign _0671_ = _0660_ ? _0670_ : 1'hx;
  assign _0672_ = _0659_ ? 1'hx : _0671_;
  assign _0673_ = _0658_ ? 1'hx : _0672_;
  assign _0674_ = _0656_ ? 1'hx : _0673_;
  assign _0675_ = _0655_ ? 1'hx : _0674_;
  assign _0617_ = _0654_ ? 1'hx : _0675_;
  assign _0610_ = _0660_ ? _0669_ : _0616_;
  assign _0609_ = _0660_ ? 1'h1 : _0615_;
  assign _0611_ = _0667_ ? \u0.u_csr.opcode_ra_operand_i [31] : _0677_[31];
  assign _0605_ = _0659_ ? _0611_ : _0610_;
  assign _0604_ = _0659_ ? 1'h1 : _0609_;
  assign _0600_ = _0658_ ? _0668_ : _0605_;
  assign _0599_ = _0658_ ? 1'h1 : _0604_;
  assign _0595_ = _0656_ ? _0657_ : _0600_;
  assign _0594_ = _0656_ ? 1'h1 : _0599_;
  assign _0590_[31:1] = _0655_ ? _0628_[31:1] : _0626_[31:1];
  assign _0590_[0] = _0655_ ? 1'h0 : _0626_[0];
  assign _0589_ = _0655_ ? 1'h1 : _0595_;
  assign _0588_ = _0655_ ? 1'h1 : _0594_;
  assign \u0.u_exec.branch_target_r  = _0654_ ? _0627_ : _0590_;
  assign \u0.u_exec.branch_taken_r  = _0654_ ? 1'h1 : _0589_;
  assign \u0.u_exec.branch_r  = _0654_ ? 1'h1 : _0588_;
  assign _0676_ = \u0.u_exec.hold_i  ? \u0.u_exec.result_q  : \u0.u_exec.alu_p_w ;
  assign _0546_ = rst_i ? 32'h00000000 : _0676_;
  assign _0583_ = _0665_ ? 3'h4 : 3'h0;
  assign _0584_ = _0665_ ? \u0.u_exec.opcode_pc_i  : 32'h00000000;
  assign _0582_ = _0653_ ? { \u0.u_csr.opcode_opcode_i [31:12], 12'h000 } : { 29'h00000000, _0583_ };
  assign _0581_ = _0653_ ? \u0.u_exec.opcode_pc_i  : _0584_;
  assign _0580_ = _0653_ ? 3'h4 : _0583_;
  assign _0578_ = _0652_ ? { \u0.u_csr.opcode_opcode_i [31:12], 12'h000 } : _0581_;
  assign _0579_ = _0652_ ? 32'h00000000 : _0582_;
  assign _0577_ = _0652_ ? 3'h0 : _0580_;
  assign _0576_ = _0651_ ? { 27'h0000000, \u0.u_csr.opcode_opcode_i [24:20] } : _0579_;
  assign _0575_ = _0651_ ? \u0.u_csr.opcode_ra_operand_i  : _0578_;
  assign _0574_ = _0651_ ? 3'h3 : _0577_;
  assign _0573_ = _0650_ ? { 27'h0000000, \u0.u_csr.opcode_opcode_i [24:20] } : _0576_;
  assign _0572_ = _0650_ ? \u0.u_csr.opcode_ra_operand_i  : _0575_;
  assign _0571_ = _0650_ ? 3'h2 : _0574_;
  assign _0570_ = _0649_ ? { 27'h0000000, \u0.u_csr.opcode_opcode_i [24:20] } : _0573_;
  assign _0569_ = _0649_ ? \u0.u_csr.opcode_ra_operand_i  : _0572_;
  assign _0568_ = _0649_ ? 3'h1 : _0571_;
  assign _0567_ = _0648_ ? { \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31:20] } : _0570_;
  assign _0566_ = _0648_ ? \u0.u_csr.opcode_ra_operand_i  : _0569_;
  assign _0565_ = _0648_ ? 4'h9 : { 1'h0, _0568_ };
  assign _0564_ = _0647_ ? { \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31:20] } : _0567_;
  assign _0563_ = _0647_ ? \u0.u_csr.opcode_ra_operand_i  : _0566_;
  assign _0562_ = _0647_ ? 4'h8 : _0565_;
  assign _0561_ = _0646_ ? { \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31:20] } : _0564_;
  assign _0560_ = _0646_ ? \u0.u_csr.opcode_ra_operand_i  : _0563_;
  assign _0559_ = _0646_ ? 4'ha : _0562_;
  assign _0558_ = _0645_ ? { \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31:20] } : _0561_;
  assign _0557_ = _0645_ ? \u0.u_csr.opcode_ra_operand_i  : _0560_;
  assign _0556_ = _0645_ ? 4'hb : _0559_;
  assign _0555_ = _0644_ ? { \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31:20] } : _0558_;
  assign _0554_ = _0644_ ? \u0.u_csr.opcode_ra_operand_i  : _0557_;
  assign _0553_ = _0644_ ? 4'h7 : _0556_;
  assign _0552_ = _0643_ ? { \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31:20] } : _0555_;
  assign _0551_ = _0643_ ? \u0.u_csr.opcode_ra_operand_i  : _0554_;
  assign _0550_ = _0643_ ? 4'h4 : _0553_;
  assign _0549_ = _0642_ ? \u0.u_div.opcode_rb_operand_i  : _0552_;
  assign _0548_ = _0642_ ? \u0.u_csr.opcode_ra_operand_i  : _0551_;
  assign _0547_ = _0642_ ? 4'ha : _0550_;
  assign _0625_ = _0641_ ? \u0.u_div.opcode_rb_operand_i  : _0549_;
  assign _0624_ = _0641_ ? \u0.u_csr.opcode_ra_operand_i  : _0548_;
  assign _0623_ = _0641_ ? 4'hb : _0547_;
  assign _0620_ = _0640_ ? \u0.u_div.opcode_rb_operand_i  : _0625_;
  assign _0619_ = _0640_ ? \u0.u_csr.opcode_ra_operand_i  : _0624_;
  assign _0618_ = _0640_ ? 4'h9 : _0623_;
  assign _0614_ = _0639_ ? \u0.u_div.opcode_rb_operand_i  : _0620_;
  assign _0613_ = _0639_ ? \u0.u_csr.opcode_ra_operand_i  : _0619_;
  assign _0612_ = _0639_ ? 4'h6 : _0618_;
  assign _0608_ = _0638_ ? \u0.u_div.opcode_rb_operand_i  : _0614_;
  assign _0607_ = _0638_ ? \u0.u_csr.opcode_ra_operand_i  : _0613_;
  assign _0606_ = _0638_ ? 4'h2 : _0612_;
  assign _0603_ = _0637_ ? \u0.u_div.opcode_rb_operand_i  : _0608_;
  assign _0602_ = _0637_ ? \u0.u_csr.opcode_ra_operand_i  : _0607_;
  assign _0601_ = _0637_ ? 4'h3 : _0606_;
  assign _0598_ = _0636_ ? \u0.u_div.opcode_rb_operand_i  : _0603_;
  assign _0597_ = _0636_ ? \u0.u_csr.opcode_ra_operand_i  : _0602_;
  assign _0596_ = _0636_ ? 4'h1 : _0601_;
  assign _0593_ = _0635_ ? \u0.u_div.opcode_rb_operand_i  : _0598_;
  assign _0592_ = _0635_ ? \u0.u_csr.opcode_ra_operand_i  : _0597_;
  assign _0591_ = _0635_ ? 4'h8 : _0596_;
  assign _0587_ = _0634_ ? \u0.u_div.opcode_rb_operand_i  : _0593_;
  assign _0586_ = _0634_ ? \u0.u_csr.opcode_ra_operand_i  : _0592_;
  assign _0585_ = _0634_ ? 4'h7 : _0591_;
  assign \u0.u_exec.alu_input_b_r  = _0633_ ? \u0.u_div.opcode_rb_operand_i  : _0587_;
  assign \u0.u_exec.alu_input_a_r  = _0633_ ? \u0.u_csr.opcode_ra_operand_i  : _0586_;
  assign \u0.u_exec.alu_func_r  = _0633_ ? 4'h4 : _0585_;
  assign _0677_ = \u0.u_csr.opcode_ra_operand_i  - \u0.u_div.opcode_rb_operand_i ;
  assign _0678_ = \u0.u_div.opcode_rb_operand_i  - \u0.u_csr.opcode_ra_operand_i ;
  assign _0691_ = \u0.u_exec.alu_input_a_r  + \u0.u_exec.alu_input_b_r ;
  assign _0692_ = \u0.u_exec.alu_input_a_r  & \u0.u_exec.alu_input_b_r ;
  assign _0694_ = \u0.u_exec.alu_func_r  == 2'h3;
  assign _0695_ = \u0.u_exec.alu_input_a_r [31] && _0694_;
  assign _0696_ = \u0.u_exec.alu_input_a_r  < \u0.u_exec.alu_input_b_r ;
  assign _0697_ = \u0.u_exec.alu_input_a_r [31] != \u0.u_exec.alu_input_b_r [31];
  assign _0698_ = \u0.u_exec.alu_input_a_r  | \u0.u_exec.alu_input_b_r ;
  assign _0690_ = _0697_ ? _0709_[0] : _0710_[0];
  assign _0699_ = \u0.u_exec.alu_func_r  == 4'hb;
  assign _0689_ = \u0.u_exec.alu_input_b_r [4] ? { _0688_, _0687_[31:16] } : _0687_;
  assign _0700_[0] = \u0.u_exec.alu_func_r  == 2'h2;
  assign _0687_ = \u0.u_exec.alu_input_b_r [3] ? { _0688_[15:8], _0686_[31:8] } : _0686_;
  assign _0686_ = \u0.u_exec.alu_input_b_r [2] ? { _0688_[15:12], _0685_[31:4] } : _0685_;
  assign _0701_ = | { _0700_[0], _0694_ };
  assign _0685_ = \u0.u_exec.alu_input_b_r [1] ? { _0688_[15:14], _0684_[31:2] } : _0684_;
  assign _0684_ = \u0.u_exec.alu_input_b_r [0] ? { _0688_[15], \u0.u_exec.alu_input_a_r [31:1] } : \u0.u_exec.alu_input_a_r ;
  assign _0688_ = _0695_ ? 16'hffff : 16'h0000;
  assign _0679_ = \u0.u_exec.alu_input_b_r [4] ? { _0683_[15:0], 16'h0000 } : _0683_;
  assign _0702_ = \u0.u_exec.alu_func_r  == 1'h1;
  assign _0683_ = \u0.u_exec.alu_input_b_r [3] ? { _0682_[23:0], 8'h00 } : _0682_;
  assign _0682_ = \u0.u_exec.alu_input_b_r [2] ? { _0681_[27:0], 4'h0 } : _0681_;
  assign _0681_ = \u0.u_exec.alu_input_b_r [1] ? { _0680_[29:0], 2'h0 } : _0680_;
  assign _0680_ = \u0.u_exec.alu_input_b_r [0] ? { \u0.u_exec.alu_input_a_r [30:0], 1'h0 } : \u0.u_exec.alu_input_a_r ;
  function [31:0] _2182_;
    input [31:0] a;
    input [287:0] b;
    input [8:0] s;
    casez (s) // synopsys parallel_case
      9'b????????1:
        _2182_ = b[31:0];
      9'b???????1?:
        _2182_ = b[63:32];
      9'b??????1??:
        _2182_ = b[95:64];
      9'b?????1???:
        _2182_ = b[127:96];
      9'b????1????:
        _2182_ = b[159:128];
      9'b???1?????:
        _2182_ = b[191:160];
      9'b??1??????:
        _2182_ = b[223:192];
      9'b?1???????:
        _2182_ = b[255:224];
      9'b1????????:
        _2182_ = b[287:256];
      default:
        _2182_ = a;
    endcase
  endfunction
  assign \u0.u_exec.alu_p_w  = _2182_(\u0.u_exec.alu_input_a_r , { _0679_, _0689_, _0691_, \u0.u_exec.u_alu.sub_res_w , _0692_, _0698_, _0711_, 31'h00000000, _0693_[0], 31'h00000000, _0690_ }, { _0702_, _0701_, _0708_, _0707_, _0706_, _0705_, _0704_, _0703_, _0699_ });
  assign _0703_ = \u0.u_exec.alu_func_r  == 4'ha;
  assign _0704_ = \u0.u_exec.alu_func_r  == 4'h9;
  assign _0705_ = \u0.u_exec.alu_func_r  == 4'h8;
  assign _0706_ = \u0.u_exec.alu_func_r  == 3'h7;
  assign _0707_ = \u0.u_exec.alu_func_r  == 3'h6;
  assign _0708_ = \u0.u_exec.alu_func_r  == 3'h4;
  assign \u0.u_exec.u_alu.sub_res_w  = \u0.u_exec.alu_input_a_r  - \u0.u_exec.alu_input_b_r ;
  assign _0693_[0] = _0696_ ? 1'h1 : 1'h0;
  assign _0709_[0] = \u0.u_exec.alu_input_a_r [31] ? 1'h1 : 1'h0;
  assign _0710_[0] = \u0.u_exec.u_alu.sub_res_w [31] ? 1'h1 : 1'h0;
  assign _0711_ = \u0.u_exec.alu_input_a_r  ^ \u0.u_exec.alu_input_b_r ;
  assign _0721_ = { \u0.u_fetch.pc_f_q [31:2], 2'h0 } + 3'h4;
  assign _0722_ = \u0.u_fetch.active_q  & \u0.u_fetch.fetch_accept_i ;
  assign \fifo_i_pc.wr  = _0722_ & _0728_;
  assign \u0.u_decode.genblk1.u_dec.valid_i  = _0732_ & _0730_;
  assign _0723_ = \fifo_i_pc.wr  && mem_i_accept_i;
  assign _0724_ = \u0.u_fetch.branch_q  && _0733_;
  assign \u0.u_fetch.icache_busy_w  = \u0.u_fetch.icache_fetch_q  && _0729_;
  assign _0725_ = \u0.u_decode.genblk1.u_dec.valid_i  && _0726_;
  assign _0726_ = ! \u0.u_fetch.fetch_accept_i ;
  assign _0727_ = ! mem_i_accept_i;
  assign _0728_ = ! \u0.u_fetch.icache_busy_w ;
  assign _0729_ = ! mem_i_valid_i;
  assign _0730_ = ! \u0.u_fetch.fetch_resp_drop_w ;
  assign _0731_ = _0726_ || \u0.u_fetch.icache_busy_w ;
  assign \u0.u_fetch.stall_w  = _0731_ || _0727_;
  assign _0732_ = mem_i_valid_i || \u0.u_fetch.skid_valid_q ;
  assign _0733_ = ~ \u0.u_fetch.stall_w ;
  assign \u0.u_fetch.fetch_resp_drop_w  = \u0.u_fetch.branch_q  | \u0.u_fetch.branch_d_q ;
  always @(posedge clk_i)
    \u0.u_fetch.skid_buffer_q  <= _0719_;
  always @(posedge clk_i)
    \u0.u_fetch.skid_valid_q  <= _0720_;
  always @(posedge clk_i)
    \u0.u_fetch.pc_d_q  <= _0717_;
  always @(posedge clk_i)
    \u0.u_fetch.branch_d_q  <= _0713_;
  always @(posedge clk_i)
    \u0.u_fetch.pc_f_q  <= _0718_;
  always @(posedge clk_i)
    \u0.u_fetch.icache_fetch_q  <= _0716_;
  always @(posedge clk_i)
    \u0.u_fetch.active_q  <= _0712_;
  always @(posedge clk_i)
    \u0.u_fetch.branch_q  <= _0715_;
  always @(posedge clk_i)
    \u0.u_fetch.branch_pc_q  <= _0714_;
  assign _0734_ = _0725_ ? 1'h1 : 1'h0;
  assign _0720_ = rst_i ? 1'h0 : _0734_;
  assign _0735_ = _0725_ ? { \u0.u_decode.fetch_in_fault_page_i , \u0.u_decode.fetch_in_fault_fetch_i , \u0.u_exec.opcode_pc_i , \u0.u_decode.fetch_in_instr_i  } : 66'h00000000000000000;
  assign _0719_ = rst_i ? 66'h00000000000000000 : _0735_;
  assign _0736_ = _0723_ ? \u0.u_fetch.pc_f_q  : \u0.u_fetch.pc_d_q ;
  assign _0717_ = rst_i ? 32'h00000000 : _0736_;
  assign _0737_ = \u0.u_fetch.stall_w  ? \u0.u_fetch.branch_d_q  : 1'h0;
  assign _0738_ = _0724_ ? 1'h1 : _0737_;
  assign _0713_ = rst_i ? 1'h0 : _0738_;
  assign _0739_ = \u0.u_fetch.stall_w  ? \u0.u_fetch.pc_f_q  : _0721_;
  assign _0740_ = _0724_ ? \u0.u_fetch.branch_pc_q  : _0739_;
  assign _0718_ = rst_i ? 32'h00000000 : _0740_;
  assign _0741_ = mem_i_valid_i ? 1'h0 : \u0.u_fetch.icache_fetch_q ;
  assign _0742_ = _0723_ ? 1'h1 : _0741_;
  assign _0716_ = rst_i ? 1'h0 : _0742_;
  assign _0743_ = _0724_ ? 1'h1 : \u0.u_fetch.active_q ;
  assign _0712_ = rst_i ? 1'h0 : _0743_;
  assign _0744_ = _0723_ ? 32'h00000000 : \u0.u_fetch.branch_pc_q ;
  assign _0745_ = \u0.u_fetch.branch_request_i  ? \u0.u_fetch.branch_pc_i  : _0744_;
  assign _0714_ = rst_i ? 32'h00000000 : _0745_;
  assign _0746_ = _0723_ ? 1'h0 : \u0.u_fetch.branch_q ;
  assign _0747_ = \u0.u_fetch.branch_request_i  ? 1'h1 : _0746_;
  assign _0715_ = rst_i ? 1'h0 : _0747_;
  assign \u0.u_exec.opcode_pc_i  = \u0.u_fetch.skid_valid_q  ? \u0.u_fetch.skid_buffer_q [63:32] : { \u0.u_fetch.pc_d_q [31:2], 2'h0 };
  assign \u0.u_decode.fetch_in_instr_i  = \u0.u_fetch.skid_valid_q  ? \u0.u_fetch.skid_buffer_q [31:0] : mem_i_inst_i;
  assign \u0.u_decode.fetch_in_fault_fetch_i  = \u0.u_fetch.skid_valid_q  ? \u0.u_fetch.skid_buffer_q [64] : mem_i_error_i;
  assign \u0.u_decode.fetch_in_fault_page_i  = \u0.u_fetch.skid_valid_q  ? \u0.u_fetch.skid_buffer_q [65] : 1'h0;
  assign _0759_ = 1'h0 & _0784_;
  assign _0760_ = \u0.u_decode.genblk1.u_dec.valid_i  & _0785_;
  assign \u0.u_issue.opcode_valid_w  = _0760_ & _0786_;
  assign \u0.u_csr.opcode_valid_i  = \u0.u_div.opcode_valid_i  & _0787_;
  assign _0762_ = \u0.u_issue.pipe_rd_wb_w  == \u0.u_csr.opcode_opcode_i [19:15];
  assign _0763_ = \u0.u_issue.pipe_rd_wb_w  == \u0.u_csr.opcode_opcode_i [24:20];
  assign _0764_ = \u0.u_issue.pipe_rd_e2_w  == \u0.u_csr.opcode_opcode_i [19:15];
  assign _0765_ = \u0.u_issue.pipe_rd_e2_w  == \u0.u_csr.opcode_opcode_i [24:20];
  assign _0766_ = \u0.u_issue.pipe_rd_e1_w  == \u0.u_csr.opcode_opcode_i [19:15];
  assign _0767_ = \u0.u_issue.pipe_rd_e1_w  == \u0.u_csr.opcode_opcode_i [24:20];
  assign _0768_ = ! \u0.u_csr.opcode_opcode_i [19:15];
  assign _0769_ = ! \u0.u_csr.opcode_opcode_i [24:20];
  assign _0770_ = \u0.u_div.opcode_valid_i  && \u0.u_decode.genblk1.u_dec.div_o ;
  assign _0771_ = \u0.u_csr.opcode_valid_i  && \u0.u_decode.genblk1.u_dec.csr_o ;
  assign _0772_ = _0776_ && _0778_;
  assign _0773_ = \u0.u_issue.opcode_valid_w  && _0774_;
  assign \u0.u_csr.opcode_invalid_i  = \u0.u_div.opcode_valid_i  && \u0.u_decode.genblk1.u_dec.invalid_w ;
  assign _0774_ = ! _0783_;
  assign _0775_ = \u0.u_issue.u_pipe_ctrl.ctrl_e1_q [1] || \u0.u_issue.u_pipe_ctrl.ctrl_e1_q [5];
  assign _0776_ = \u0.u_issue.u_pipe_ctrl.ctrl_e1_q [1] || \u0.u_issue.u_pipe_ctrl.ctrl_e1_q [2];
  assign _0777_ = \u0.u_decode.genblk1.u_dec.mul_o  || \u0.u_decode.genblk1.u_dec.div_o ;
  assign _0778_ = _0777_ || \u0.u_decode.genblk1.u_dec.csr_o ;
  assign _0779_ = \u0.u_issue.lsu_stall_i  || \u0.u_exec.hold_i ;
  assign _0780_ = _0779_ || \u0.u_issue.div_pending_q ;
  assign _0781_ = _0780_ || \u0.u_issue.csr_pending_q ;
  assign _0782_ = _0795_ || _0796_;
  assign _0783_ = _0782_ || _0797_;
  assign \u0.u_csr.interrupt_inhibit_i  = \u0.u_issue.csr_pending_q  || \u0.u_decode.genblk1.u_dec.csr_o ;
  assign _0784_ = ~ _0798_;
  assign _0785_ = ~ \u0.u_issue.pipe_squash_e1_e2_w ;
  assign _0786_ = ~ \u0.u_csr.branch_q ;
  assign _0787_ = ~ \u0.u_csr.take_interrupt_q ;
  assign _0788_ = _0759_ | _0798_;
  assign \u0.u_fetch.branch_request_i  = \u0.u_csr.branch_q  | \u0.u_exec.branch_d_request_o ;
  always @(posedge clk_i)
    \u0.u_issue.csr_pending_q  <= _0748_;
  always @(posedge clk_i)
    \u0.u_issue.div_pending_q  <= _0749_;
  assign \u0.u_div.opcode_rb_operand_i  = _0769_ ? 32'h00000000 : _0758_;
  assign \u0.u_csr.opcode_ra_operand_i  = _0768_ ? 32'h00000000 : _0757_;
  assign _0758_ = _0767_ ? \u0.u_exec.result_q  : _0754_;
  assign _0757_ = _0766_ ? \u0.u_exec.result_q  : _0753_;
  assign _0754_ = _0765_ ? \u0.u_issue.pipe_result_e2_w  : _0751_;
  assign _0753_ = _0764_ ? \u0.u_issue.pipe_result_e2_w  : _0750_;
  assign _0751_ = _0763_ ? \u0.u_issue.u_pipe_ctrl.result_wb_q  : \u0.u_issue.issue_rb_value_w ;
  assign _0750_ = _0762_ ? \u0.u_issue.u_pipe_ctrl.result_wb_q  : \u0.u_issue.issue_ra_value_w ;
  assign _0755_ = _0773_ ? 1'h1 : 1'h0;
  assign \u0.u_div.opcode_valid_i  = _0781_ ? 1'h0 : _0755_;
  assign _0756_ = _0772_ ? 32'hffffffff : _0752_;
  assign _0752_ = _0775_ ? _0788_ : 32'h00000000;
  assign _0789_ = \u0.u_issue.pipe_csr_wb_w  ? 1'h0 : \u0.u_issue.csr_pending_q ;
  assign _0790_ = _0771_ ? 1'h1 : _0789_;
  assign _0791_ = \u0.u_issue.pipe_squash_e1_e2_w  ? 1'h0 : _0790_;
  assign _0748_ = rst_i ? 1'h0 : _0791_;
  assign _0792_ = \u0.u_div.valid_q  ? 1'h0 : \u0.u_issue.div_pending_q ;
  assign _0793_ = _0770_ ? 1'h1 : _0792_;
  assign _0794_ = \u0.u_issue.pipe_squash_e1_e2_w  ? 1'h0 : _0793_;
  assign _0749_ = rst_i ? 1'h0 : _0794_;
  wire [31:0] _2985_ = _0756_;
  assign _0795_ = _2985_[\u0.u_csr.opcode_opcode_i [19:15] +: 1];
  wire [31:0] _2986_ = _0756_;
  assign _0796_ = _2986_[\u0.u_csr.opcode_opcode_i [24:20] +: 1];
  wire [31:0] _2987_ = _0756_;
  assign _0797_ = _2987_[\u0.u_csr.opcode_opcode_i [11:7] +: 1];
  assign _0798_ = 1'h1 << \u0.u_issue.pipe_rd_e1_w ;
  assign \u0.u_fetch.branch_pc_i  = \u0.u_csr.branch_q  ? \u0.u_csr.branch_target_q  : \u0.u_exec.branch_target_r ;
  assign \u0.u_issue.issue_fault_w  = \u0.u_decode.fetch_in_fault_fetch_i  ? 5'h11 : _0761_[4:0];
  assign _0761_[4:0] = \u0.u_decode.fetch_in_fault_page_i  ? 5'h1c : 5'h00;
  assign \u0.u_fetch.fetch_accept_i  = \u0.u_issue.opcode_valid_w  ? \u0.u_csr.opcode_valid_i  : 1'h1;
  assign _0822_ = \u0.u_decode.genblk1.u_dec.lsu_o  & \u0.u_decode.genblk1.u_dec.rd_valid_o ;
  assign _0823_ = _0822_ & _0853_;
  assign _0824_ = \u0.u_decode.genblk1.u_dec.lsu_o  & _0854_;
  assign _0825_ = _0824_ & _0853_;
  assign _0826_ = \u0.u_decode.genblk1.u_dec.csr_o  & _0853_;
  assign _0827_ = \u0.u_decode.genblk1.u_dec.div_o  & _0853_;
  assign _0828_ = \u0.u_decode.genblk1.u_dec.mul_o  & _0853_;
  assign _0829_ = \u0.u_decode.genblk1.u_dec.branch_o  & _0853_;
  assign _0830_ = \u0.u_decode.genblk1.u_dec.rd_valid_o  & _0853_;
  assign \u0.u_issue.pipe_rd_e1_w  = { \u0.u_issue.u_pipe_ctrl.ctrl_e1_q [7], \u0.u_issue.u_pipe_ctrl.ctrl_e1_q [7], \u0.u_issue.u_pipe_ctrl.ctrl_e1_q [7], \u0.u_issue.u_pipe_ctrl.ctrl_e1_q [7], \u0.u_issue.u_pipe_ctrl.ctrl_e1_q [7] } & \u0.u_issue.u_pipe_ctrl.opcode_e1_q [11:7];
  assign \u0.u_issue.u_pipe_ctrl.valid_e2_w  = \u0.u_issue.u_pipe_ctrl.valid_e2_q  & _0855_;
  assign \u0.u_issue.pipe_rd_e2_w  = { _0840_, _0840_, _0840_, _0840_, _0840_ } & \u0.u_issue.u_pipe_ctrl.opcode_e2_q [11:7];
  assign _0831_ = _0862_ & _0858_;
  assign _0832_ = \u0.u_issue.u_pipe_ctrl.ctrl_e2_q  & 10'h37f;
  assign \u0.u_issue.u_pipe_ctrl.valid_wb_o  = \u0.u_issue.u_pipe_ctrl.valid_wb_q  & _0855_;
  assign \u0.u_issue.pipe_csr_wb_w  = \u0.u_issue.u_pipe_ctrl.ctrl_wb_q [3] & _0855_;
  assign \u0.u_issue.pipe_rd_wb_w  = { _0847_, _0847_, _0847_, _0847_, _0847_ } & \u0.u_issue.u_pipe_ctrl.opcode_wb_q [11:7];
  assign \u0.u_issue.u_pipe_ctrl.branch_misaligned_w  = \u0.u_exec.branch_d_request_o  && _0850_;
  assign _0834_ = \u0.u_div.opcode_valid_i  && \u0.u_div.opcode_valid_i ;
  assign _0835_ = _0834_ && _0851_;
  assign _0836_ = $signed(32'h00000001) && \u0.u_issue.u_pipe_ctrl.valid_e2_w ;
  assign _0837_ = _0836_ && _0849_;
  assign _0838_ = _0836_ && \u0.u_issue.u_pipe_ctrl.ctrl_e2_q [5];
  assign _0839_ = \u0.u_issue.u_pipe_ctrl.valid_e2_w  && \u0.u_issue.u_pipe_ctrl.ctrl_e2_q [7];
  assign _0840_ = _0839_ && _0856_;
  assign _0841_ = \u0.u_issue.u_pipe_ctrl.ctrl_e1_q [4] && _0857_;
  assign _0842_ = \u0.u_issue.u_pipe_ctrl.valid_e2_q  && _0849_;
  assign _0843_ = _0842_ && \u0.u_issue.u_pipe_ctrl.mem_complete_i ;
  assign _0844_ = \u0.u_issue.u_pipe_ctrl.valid_e2_w  && _0849_;
  assign _0845_ = \u0.u_issue.u_pipe_ctrl.valid_e2_w  && \u0.u_issue.u_pipe_ctrl.ctrl_e2_q [5];
  assign _0846_ = \u0.u_issue.u_pipe_ctrl.valid_wb_o  && \u0.u_issue.u_pipe_ctrl.ctrl_wb_q [7];
  assign _0847_ = _0846_ && _0856_;
  assign _0848_ = \u0.u_issue.pipe_squash_e1_e2_w  || 1'h0;
  assign _0849_ = \u0.u_issue.u_pipe_ctrl.ctrl_e2_q [1] || \u0.u_issue.u_pipe_ctrl.ctrl_e2_q [2];
  assign \u0.u_exec.hold_i  = _0841_ || _0831_;
  assign _0850_ = | \u0.u_exec.branch_target_r [1:0];
  assign _0851_ = ~ _0848_;
  assign _0852_ = ~ _0861_;
  assign _0853_ = ~ \u0.u_csr.take_interrupt_q ;
  assign _0854_ = ~ \u0.u_decode.genblk1.u_dec.rd_valid_o ;
  assign _0855_ = ~ \u0.u_exec.hold_i ;
  assign _0856_ = ~ \u0.u_exec.hold_i ;
  assign _0857_ = ~ \u0.u_div.valid_q ;
  assign _0858_ = ~ \u0.u_issue.u_pipe_ctrl.mem_complete_i ;
  assign _0859_ = \u0.u_decode.genblk1.u_dec.lsu_o  | \u0.u_decode.genblk1.u_dec.csr_o ;
  assign _0860_ = _0859_ | \u0.u_decode.genblk1.u_dec.div_o ;
  assign _0861_ = _0860_ | \u0.u_decode.genblk1.u_dec.mul_o ;
  assign _0862_ = \u0.u_issue.u_pipe_ctrl.ctrl_e2_q [1] | \u0.u_issue.u_pipe_ctrl.ctrl_e2_q [2];
  assign \u0.u_issue.pipe_squash_e1_e2_w  = \u0.u_issue.u_pipe_ctrl.squash_e1_e2_w  | \u0.u_issue.u_pipe_ctrl.squash_e1_e2_q ;
  always @(posedge clk_i)
    \u0.u_issue.u_pipe_ctrl.valid_wb_q  <= _0820_;
  always @(posedge clk_i)
    \u0.u_issue.u_pipe_ctrl.ctrl_wb_q  <= _0805_;
  always @(posedge clk_i)
    \u0.u_issue.u_pipe_ctrl.csr_wr_wb_q  <= _0802_;
  always @(posedge clk_i)
    \u0.u_issue.u_pipe_ctrl.csr_wdata_wb_q  <= _0800_;
  always @(posedge clk_i)
    \u0.u_issue.u_pipe_ctrl.result_wb_q  <= _0816_;
  always @(posedge clk_i)
    \u0.u_issue.u_pipe_ctrl.pc_wb_q  <= _0814_;
  always @(posedge clk_i)
    \u0.u_issue.u_pipe_ctrl.opcode_wb_q  <= _0811_;
  always @(posedge clk_i)
    \u0.u_issue.u_pipe_ctrl.exception_wb_q  <= _0808_;
  always @(posedge clk_i)
    \u0.u_issue.u_pipe_ctrl.squash_e1_e2_q  <= _0817_;
  always @(posedge clk_i)
    \u0.u_issue.u_pipe_ctrl.result_e2_q  <= _0815_;
  always @(posedge clk_i)
    \u0.u_issue.u_pipe_ctrl.valid_e2_q  <= _0819_;
  always @(posedge clk_i)
    \u0.u_issue.u_pipe_ctrl.ctrl_e2_q  <= _0804_;
  always @(posedge clk_i)
    \u0.u_issue.u_pipe_ctrl.csr_wr_e2_q  <= _0801_;
  always @(posedge clk_i)
    \u0.u_issue.u_pipe_ctrl.csr_wdata_e2_q  <= _0799_;
  always @(posedge clk_i)
    \u0.u_issue.u_pipe_ctrl.pc_e2_q  <= _0813_;
  always @(posedge clk_i)
    \u0.u_issue.u_pipe_ctrl.opcode_e2_q  <= _0810_;
  always @(posedge clk_i)
    \u0.u_issue.u_pipe_ctrl.exception_e2_q  <= _0807_;
  always @(posedge clk_i)
    \u0.u_issue.u_pipe_ctrl.exception_e1_q  <= _0806_;
  always @(posedge clk_i)
    \u0.u_issue.u_pipe_ctrl.valid_e1_q  <= _0818_;
  always @(posedge clk_i)
    \u0.u_issue.u_pipe_ctrl.ctrl_e1_q  <= _0803_;
  always @(posedge clk_i)
    \u0.u_issue.u_pipe_ctrl.pc_e1_q  <= _0812_;
  always @(posedge clk_i)
    \u0.u_issue.u_pipe_ctrl.opcode_e1_q  <= _0809_;
  assign _0863_ = 1'h0 ? 6'h00 : \u0.u_issue.u_pipe_ctrl.exception_e2_r ;
  assign _0864_ = \u0.u_exec.hold_i  ? \u0.u_issue.u_pipe_ctrl.exception_wb_q  : _0863_;
  assign _0808_ = rst_i ? 6'h00 : _0864_;
  assign _0865_ = 1'h0 ? 32'h00000000 : \u0.u_issue.u_pipe_ctrl.opcode_e2_q ;
  assign _0866_ = \u0.u_exec.hold_i  ? \u0.u_issue.u_pipe_ctrl.opcode_wb_q  : _0865_;
  assign _0811_ = rst_i ? 32'h00000000 : _0866_;
  assign _0867_ = 1'h0 ? 32'h00000000 : \u0.u_issue.u_pipe_ctrl.pc_e2_q ;
  assign _0868_ = \u0.u_exec.hold_i  ? \u0.u_issue.u_pipe_ctrl.pc_wb_q  : _0867_;
  assign _0814_ = rst_i ? 32'h00000000 : _0868_;
  assign _0869_ = _0845_ ? \u0.u_mul.result_e2_q  : \u0.u_issue.u_pipe_ctrl.result_e2_q ;
  assign _0870_ = _0844_ ? \u0.u_issue.u_pipe_ctrl.mem_result_e2_i  : _0869_;
  assign _0871_ = 1'h0 ? 32'h00000000 : _0870_;
  assign _0872_ = \u0.u_exec.hold_i  ? \u0.u_issue.u_pipe_ctrl.result_wb_q  : _0871_;
  assign _0816_ = rst_i ? 32'h00000000 : _0872_;
  assign _0873_ = 1'h0 ? 32'h00000000 : \u0.u_issue.u_pipe_ctrl.csr_wdata_e2_q ;
  assign _0874_ = \u0.u_exec.hold_i  ? \u0.u_issue.u_pipe_ctrl.csr_wdata_wb_q  : _0873_;
  assign _0800_ = rst_i ? 32'h00000000 : _0874_;
  assign _0875_ = 1'h0 ? 1'h0 : \u0.u_issue.u_pipe_ctrl.csr_wr_e2_q ;
  assign _0876_ = \u0.u_exec.hold_i  ? \u0.u_issue.u_pipe_ctrl.csr_wr_wb_q  : _0875_;
  assign _0802_ = rst_i ? 1'h0 : _0876_;
  assign _0877_ = \u0.u_issue.u_pipe_ctrl.squash_e1_e2_w  ? _0832_ : \u0.u_issue.u_pipe_ctrl.ctrl_e2_q ;
  assign _0878_ = 1'h0 ? 10'h000 : _0877_;
  assign _0879_ = \u0.u_exec.hold_i  ? \u0.u_issue.u_pipe_ctrl.ctrl_wb_q  : _0878_;
  assign _0805_ = rst_i ? 10'h000 : _0879_;
  assign _0880_ = _0882_ ? 1'h0 : \u0.u_issue.u_pipe_ctrl.valid_e2_q ;
  assign _0882_ = | _0881_;
  assign _0881_[0] = \u0.u_issue.u_pipe_ctrl.exception_e2_r  == 5'h14;
  assign _0881_[1] = \u0.u_issue.u_pipe_ctrl.exception_e2_r  == 5'h15;
  assign _0881_[2] = \u0.u_issue.u_pipe_ctrl.exception_e2_r  == 5'h16;
  assign _0881_[3] = \u0.u_issue.u_pipe_ctrl.exception_e2_r  == 5'h17;
  assign _0881_[4] = \u0.u_issue.u_pipe_ctrl.exception_e2_r  == 5'h1d;
  assign _0881_[5] = \u0.u_issue.u_pipe_ctrl.exception_e2_r  == 5'h1f;
  assign _0883_ = 1'h0 ? 1'h0 : _0880_;
  assign _0884_ = \u0.u_exec.hold_i  ? \u0.u_issue.u_pipe_ctrl.valid_wb_q  : _0883_;
  assign _0820_ = rst_i ? 1'h0 : _0884_;
  assign _0885_ = \u0.u_exec.hold_i  ? \u0.u_issue.u_pipe_ctrl.squash_e1_e2_q  : \u0.u_issue.u_pipe_ctrl.squash_e1_e2_w ;
  assign _0817_ = rst_i ? 1'h0 : _0885_;
  assign \u0.u_issue.u_pipe_ctrl.exception_e2_r  = _0843_ ? { 1'h0, \u0.u_issue.u_pipe_ctrl.mem_exception_e2_i [4:0] } : \u0.u_issue.u_pipe_ctrl.exception_e2_q ;
  assign _0821_ = _0838_ ? \u0.u_mul.result_e2_q  : \u0.u_issue.u_pipe_ctrl.result_e2_q ;
  assign \u0.u_issue.pipe_result_e2_w  = _0837_ ? \u0.u_issue.u_pipe_ctrl.mem_result_e2_i  : _0821_;
  assign _0886_ = _0887_ ? \u0.u_issue.u_pipe_ctrl.exception_e1_q  : \u0.u_csr.exception_e1_q ;
  assign _0888_ = \u0.u_issue.u_pipe_ctrl.ctrl_e1_q [8] ? 6'h20 : _0886_;
  assign _0889_ = _0848_ ? 6'h00 : _0888_;
  assign _0890_ = \u0.u_exec.hold_i  ? \u0.u_issue.u_pipe_ctrl.exception_e2_q  : _0889_;
  assign _0807_ = rst_i ? 6'h00 : _0890_;
  assign _0891_ = _0848_ ? 32'h00000000 : \u0.u_issue.u_pipe_ctrl.opcode_e1_q ;
  assign _0892_ = \u0.u_exec.hold_i  ? \u0.u_issue.u_pipe_ctrl.opcode_e2_q  : _0891_;
  assign _0810_ = rst_i ? 32'h00000000 : _0892_;
  assign _0893_ = _0848_ ? 32'h00000000 : \u0.u_issue.u_pipe_ctrl.pc_e1_q ;
  assign _0894_ = \u0.u_exec.hold_i  ? \u0.u_issue.u_pipe_ctrl.pc_e2_q  : _0893_;
  assign _0813_ = rst_i ? 32'h00000000 : _0894_;
  assign _0895_ = _0848_ ? 32'h00000000 : \u0.u_csr.csr_wdata_e1_q ;
  assign _0896_ = \u0.u_exec.hold_i  ? \u0.u_issue.u_pipe_ctrl.csr_wdata_e2_q  : _0895_;
  assign _0799_ = rst_i ? 32'h00000000 : _0896_;
  assign _0897_ = _0848_ ? 1'h0 : \u0.u_csr.rd_valid_e1_q ;
  assign _0898_ = \u0.u_exec.hold_i  ? \u0.u_issue.u_pipe_ctrl.csr_wr_e2_q  : _0897_;
  assign _0801_ = rst_i ? 1'h0 : _0898_;
  assign _0899_ = _0848_ ? 10'h000 : \u0.u_issue.u_pipe_ctrl.ctrl_e1_q ;
  assign _0900_ = \u0.u_exec.hold_i  ? \u0.u_issue.u_pipe_ctrl.ctrl_e2_q  : _0899_;
  assign _0804_ = rst_i ? 10'h000 : _0900_;
  assign _0901_ = _0887_ ? 1'h0 : \u0.u_issue.u_pipe_ctrl.valid_e1_q ;
  assign _0902_ = \u0.u_issue.u_pipe_ctrl.ctrl_e1_q [8] ? \u0.u_issue.u_pipe_ctrl.valid_e1_q  : _0901_;
  assign _0903_ = _0848_ ? 1'h0 : _0902_;
  assign _0904_ = \u0.u_exec.hold_i  ? \u0.u_issue.u_pipe_ctrl.valid_e2_q  : _0903_;
  assign _0819_ = rst_i ? 1'h0 : _0904_;
  assign _0905_ = \u0.u_issue.u_pipe_ctrl.ctrl_e1_q [3] ? \u0.u_csr.rd_result_e1_q  : \u0.u_exec.result_q ;
  assign _0906_ = \u0.u_issue.u_pipe_ctrl.ctrl_e1_q [4] ? \u0.u_div.wb_result_q  : _0905_;
  assign _0907_ = _0848_ ? 32'h00000000 : _0906_;
  assign _0908_ = \u0.u_exec.hold_i  ? \u0.u_issue.u_pipe_ctrl.result_e2_q  : _0907_;
  assign _0815_ = rst_i ? 32'h00000000 : _0908_;
  assign _0909_ = _0835_ ? 1'h1 : 1'h0;
  assign _0910_ = \u0.u_exec.hold_i  ? \u0.u_issue.u_pipe_ctrl.ctrl_e1_q [9] : _0909_;
  assign _0803_[9] = rst_i ? 1'h0 : _0910_;
  assign _0911_ = _0835_ ? _0830_ : 1'h0;
  assign _0912_ = \u0.u_exec.hold_i  ? \u0.u_issue.u_pipe_ctrl.ctrl_e1_q [7] : _0911_;
  assign _0803_[7] = rst_i ? 1'h0 : _0912_;
  assign _0913_ = _0835_ ? _0829_ : 1'h0;
  assign _0914_ = \u0.u_exec.hold_i  ? \u0.u_issue.u_pipe_ctrl.ctrl_e1_q [6] : _0913_;
  assign _0803_[6] = rst_i ? 1'h0 : _0914_;
  assign _0915_ = _0835_ ? _0828_ : 1'h0;
  assign _0916_ = \u0.u_exec.hold_i  ? \u0.u_issue.u_pipe_ctrl.ctrl_e1_q [5] : _0915_;
  assign _0803_[5] = rst_i ? 1'h0 : _0916_;
  assign _0917_ = _0835_ ? _0827_ : 1'h0;
  assign _0918_ = \u0.u_exec.hold_i  ? \u0.u_issue.u_pipe_ctrl.ctrl_e1_q [4] : _0917_;
  assign _0803_[4] = rst_i ? 1'h0 : _0918_;
  assign _0919_ = _0835_ ? _0826_ : 1'h0;
  assign _0920_ = \u0.u_exec.hold_i  ? \u0.u_issue.u_pipe_ctrl.ctrl_e1_q [3] : _0919_;
  assign _0803_[3] = rst_i ? 1'h0 : _0920_;
  assign _0921_ = _0835_ ? _0825_ : 1'h0;
  assign _0922_ = \u0.u_exec.hold_i  ? \u0.u_issue.u_pipe_ctrl.ctrl_e1_q [2] : _0921_;
  assign _0803_[2] = rst_i ? 1'h0 : _0922_;
  assign _0923_ = _0835_ ? _0823_ : 1'h0;
  assign _0924_ = \u0.u_exec.hold_i  ? \u0.u_issue.u_pipe_ctrl.ctrl_e1_q [1] : _0923_;
  assign _0803_[1] = rst_i ? 1'h0 : _0924_;
  assign _0925_ = _0835_ ? _0852_ : 1'h0;
  assign _0926_ = \u0.u_exec.hold_i  ? \u0.u_issue.u_pipe_ctrl.ctrl_e1_q [0] : _0925_;
  assign _0803_[0] = rst_i ? 1'h0 : _0926_;
  assign _0927_ = _0835_ ? \u0.u_csr.take_interrupt_q  : 1'h0;
  assign _0928_ = \u0.u_exec.hold_i  ? \u0.u_issue.u_pipe_ctrl.ctrl_e1_q [8] : _0927_;
  assign _0803_[8] = rst_i ? 1'h0 : _0928_;
  assign _0929_ = _0835_ ? \u0.u_csr.opcode_opcode_i  : 32'h00000000;
  assign _0930_ = \u0.u_exec.hold_i  ? \u0.u_issue.u_pipe_ctrl.opcode_e1_q  : _0929_;
  assign _0809_ = rst_i ? 32'h00000000 : _0930_;
  assign _0931_ = _0835_ ? \u0.u_exec.opcode_pc_i  : 32'h00000000;
  assign _0932_ = \u0.u_exec.hold_i  ? \u0.u_issue.u_pipe_ctrl.pc_e1_q  : _0931_;
  assign _0812_ = rst_i ? 32'h00000000 : _0932_;
  assign _0933_ = \u0.u_exec.hold_i  ? \u0.u_issue.u_pipe_ctrl.valid_e1_q  : _0909_;
  assign _0818_ = rst_i ? 1'h0 : _0933_;
  assign _0934_ = _0835_ ? _0937_ : 6'h00;
  assign _0935_ = \u0.u_exec.hold_i  ? \u0.u_issue.u_pipe_ctrl.exception_e1_q  : _0934_;
  assign _0806_ = rst_i ? 6'h00 : _0935_;
  assign _0936_ = | { 1'h0, \u0.u_issue.issue_fault_w  };
  assign _0887_ = | \u0.u_issue.u_pipe_ctrl.exception_e1_q ;
  assign \u0.u_issue.u_pipe_ctrl.squash_e1_e2_w  = | \u0.u_issue.u_pipe_ctrl.exception_e2_r ;
  assign _0937_ = _0936_ ? { 1'h0, \u0.u_issue.issue_fault_w  } : { 1'h0, _0833_[4:0] };
  assign _0833_[4:0] = \u0.u_issue.u_pipe_ctrl.branch_misaligned_w  ? 5'h10 : 5'h00;
  assign _0969_ = \u0.u_issue.pipe_rd_wb_w  == 1'h1;
  assign _0970_ = \u0.u_issue.pipe_rd_wb_w  == 2'h2;
  assign _0971_ = \u0.u_issue.pipe_rd_wb_w  == 2'h3;
  assign _0972_ = \u0.u_issue.pipe_rd_wb_w  == 3'h4;
  assign _0973_ = \u0.u_issue.pipe_rd_wb_w  == 3'h5;
  assign _0974_ = \u0.u_issue.pipe_rd_wb_w  == 3'h6;
  assign _0975_ = \u0.u_issue.pipe_rd_wb_w  == 3'h7;
  assign _0976_ = \u0.u_issue.pipe_rd_wb_w  == 4'h8;
  assign _0977_ = \u0.u_issue.pipe_rd_wb_w  == 4'h9;
  assign _0978_ = \u0.u_issue.pipe_rd_wb_w  == 4'ha;
  assign _0979_ = \u0.u_issue.pipe_rd_wb_w  == 4'hb;
  assign _0980_ = \u0.u_issue.pipe_rd_wb_w  == 4'hc;
  assign _0981_ = \u0.u_issue.pipe_rd_wb_w  == 4'hd;
  assign _0982_ = \u0.u_issue.pipe_rd_wb_w  == 4'he;
  assign _0983_ = \u0.u_issue.pipe_rd_wb_w  == 4'hf;
  assign _0984_ = \u0.u_issue.pipe_rd_wb_w  == 5'h10;
  assign _0985_ = \u0.u_issue.pipe_rd_wb_w  == 5'h11;
  assign _0986_ = \u0.u_issue.pipe_rd_wb_w  == 5'h12;
  assign _0987_ = \u0.u_issue.pipe_rd_wb_w  == 5'h13;
  assign _0988_ = \u0.u_issue.pipe_rd_wb_w  == 5'h14;
  assign _0989_ = \u0.u_issue.pipe_rd_wb_w  == 5'h15;
  assign _0990_ = \u0.u_issue.pipe_rd_wb_w  == 5'h16;
  assign _0991_ = \u0.u_issue.pipe_rd_wb_w  == 5'h17;
  assign _0992_ = \u0.u_issue.pipe_rd_wb_w  == 5'h18;
  assign _0993_ = \u0.u_issue.pipe_rd_wb_w  == 5'h19;
  assign _0994_ = \u0.u_issue.pipe_rd_wb_w  == 5'h1a;
  assign _0995_ = \u0.u_issue.pipe_rd_wb_w  == 5'h1b;
  assign _0996_ = \u0.u_issue.pipe_rd_wb_w  == 5'h1c;
  assign _0997_ = \u0.u_issue.pipe_rd_wb_w  == 5'h1d;
  assign _0998_ = \u0.u_issue.pipe_rd_wb_w  == 5'h1e;
  assign _0999_ = \u0.u_issue.pipe_rd_wb_w  == 5'h1f;
  always @(posedge clk_i)
    \u0.u_issue.u_regfile.REGFILE.reg_r1_q  <= _0948_;
  always @(posedge clk_i)
    \u0.u_issue.u_regfile.REGFILE.reg_r2_q  <= _0959_;
  always @(posedge clk_i)
    \u0.u_issue.u_regfile.REGFILE.reg_r3_q  <= _0962_;
  always @(posedge clk_i)
    \u0.u_issue.u_regfile.REGFILE.reg_r4_q  <= _0963_;
  always @(posedge clk_i)
    \u0.u_issue.u_regfile.REGFILE.reg_r5_q  <= _0964_;
  always @(posedge clk_i)
    \u0.u_issue.u_regfile.REGFILE.reg_r6_q  <= _0965_;
  always @(posedge clk_i)
    \u0.u_issue.u_regfile.REGFILE.reg_r7_q  <= _0966_;
  always @(posedge clk_i)
    \u0.u_issue.u_regfile.REGFILE.reg_r8_q  <= _0967_;
  always @(posedge clk_i)
    \u0.u_issue.u_regfile.REGFILE.reg_r9_q  <= _0968_;
  always @(posedge clk_i)
    \u0.u_issue.u_regfile.REGFILE.reg_r10_q  <= _0938_;
  always @(posedge clk_i)
    \u0.u_issue.u_regfile.REGFILE.reg_r11_q  <= _0939_;
  always @(posedge clk_i)
    \u0.u_issue.u_regfile.REGFILE.reg_r12_q  <= _0940_;
  always @(posedge clk_i)
    \u0.u_issue.u_regfile.REGFILE.reg_r13_q  <= _0941_;
  always @(posedge clk_i)
    \u0.u_issue.u_regfile.REGFILE.reg_r14_q  <= _0942_;
  always @(posedge clk_i)
    \u0.u_issue.u_regfile.REGFILE.reg_r15_q  <= _0943_;
  always @(posedge clk_i)
    \u0.u_issue.u_regfile.REGFILE.reg_r16_q  <= _0944_;
  always @(posedge clk_i)
    \u0.u_issue.u_regfile.REGFILE.reg_r17_q  <= _0945_;
  always @(posedge clk_i)
    \u0.u_issue.u_regfile.REGFILE.reg_r18_q  <= _0946_;
  always @(posedge clk_i)
    \u0.u_issue.u_regfile.REGFILE.reg_r19_q  <= _0947_;
  always @(posedge clk_i)
    \u0.u_issue.u_regfile.REGFILE.reg_r20_q  <= _0949_;
  always @(posedge clk_i)
    \u0.u_issue.u_regfile.REGFILE.reg_r21_q  <= _0950_;
  always @(posedge clk_i)
    \u0.u_issue.u_regfile.REGFILE.reg_r22_q  <= _0951_;
  always @(posedge clk_i)
    \u0.u_issue.u_regfile.REGFILE.reg_r23_q  <= _0952_;
  always @(posedge clk_i)
    \u0.u_issue.u_regfile.REGFILE.reg_r24_q  <= _0953_;
  always @(posedge clk_i)
    \u0.u_issue.u_regfile.REGFILE.reg_r25_q  <= _0954_;
  always @(posedge clk_i)
    \u0.u_issue.u_regfile.REGFILE.reg_r26_q  <= _0955_;
  always @(posedge clk_i)
    \u0.u_issue.u_regfile.REGFILE.reg_r27_q  <= _0956_;
  always @(posedge clk_i)
    \u0.u_issue.u_regfile.REGFILE.reg_r28_q  <= _0957_;
  always @(posedge clk_i)
    \u0.u_issue.u_regfile.REGFILE.reg_r29_q  <= _0958_;
  always @(posedge clk_i)
    \u0.u_issue.u_regfile.REGFILE.reg_r30_q  <= _0960_;
  always @(posedge clk_i)
    \u0.u_issue.u_regfile.REGFILE.reg_r31_q  <= _0961_;
  function [31:0] _2561_;
    input [31:0] a;
    input [991:0] b;
    input [30:0] s;
    casez (s) // synopsys parallel_case
      31'b??????????????????????????????1:
        _2561_ = b[31:0];
      31'b?????????????????????????????1?:
        _2561_ = b[63:32];
      31'b????????????????????????????1??:
        _2561_ = b[95:64];
      31'b???????????????????????????1???:
        _2561_ = b[127:96];
      31'b??????????????????????????1????:
        _2561_ = b[159:128];
      31'b?????????????????????????1?????:
        _2561_ = b[191:160];
      31'b????????????????????????1??????:
        _2561_ = b[223:192];
      31'b???????????????????????1???????:
        _2561_ = b[255:224];
      31'b??????????????????????1????????:
        _2561_ = b[287:256];
      31'b?????????????????????1?????????:
        _2561_ = b[319:288];
      31'b????????????????????1??????????:
        _2561_ = b[351:320];
      31'b???????????????????1???????????:
        _2561_ = b[383:352];
      31'b??????????????????1????????????:
        _2561_ = b[415:384];
      31'b?????????????????1?????????????:
        _2561_ = b[447:416];
      31'b????????????????1??????????????:
        _2561_ = b[479:448];
      31'b???????????????1???????????????:
        _2561_ = b[511:480];
      31'b??????????????1????????????????:
        _2561_ = b[543:512];
      31'b?????????????1?????????????????:
        _2561_ = b[575:544];
      31'b????????????1??????????????????:
        _2561_ = b[607:576];
      31'b???????????1???????????????????:
        _2561_ = b[639:608];
      31'b??????????1????????????????????:
        _2561_ = b[671:640];
      31'b?????????1?????????????????????:
        _2561_ = b[703:672];
      31'b????????1??????????????????????:
        _2561_ = b[735:704];
      31'b???????1???????????????????????:
        _2561_ = b[767:736];
      31'b??????1????????????????????????:
        _2561_ = b[799:768];
      31'b?????1?????????????????????????:
        _2561_ = b[831:800];
      31'b????1??????????????????????????:
        _2561_ = b[863:832];
      31'b???1???????????????????????????:
        _2561_ = b[895:864];
      31'b??1????????????????????????????:
        _2561_ = b[927:896];
      31'b?1?????????????????????????????:
        _2561_ = b[959:928];
      31'b1??????????????????????????????:
        _2561_ = b[991:960];
      default:
        _2561_ = a;
    endcase
  endfunction
  assign \u0.u_issue.issue_rb_value_w  = _2561_(32'h00000000, { \u0.u_issue.u_regfile.REGFILE.reg_r1_q , \u0.u_issue.u_regfile.REGFILE.reg_r2_q , \u0.u_issue.u_regfile.REGFILE.reg_r3_q , \u0.u_issue.u_regfile.REGFILE.reg_r4_q , \u0.u_issue.u_regfile.REGFILE.reg_r5_q , \u0.u_issue.u_regfile.REGFILE.reg_r6_q , \u0.u_issue.u_regfile.REGFILE.reg_r7_q , \u0.u_issue.u_regfile.REGFILE.reg_r8_q , \u0.u_issue.u_regfile.REGFILE.reg_r9_q , \u0.u_issue.u_regfile.REGFILE.reg_r10_q , \u0.u_issue.u_regfile.REGFILE.reg_r11_q , \u0.u_issue.u_regfile.REGFILE.reg_r12_q , \u0.u_issue.u_regfile.REGFILE.reg_r13_q , \u0.u_issue.u_regfile.REGFILE.reg_r14_q , \u0.u_issue.u_regfile.REGFILE.reg_r15_q , \u0.u_issue.u_regfile.REGFILE.reg_r16_q , \u0.u_issue.u_regfile.REGFILE.reg_r17_q , \u0.u_issue.u_regfile.REGFILE.reg_r18_q , \u0.u_issue.u_regfile.REGFILE.reg_r19_q , \u0.u_issue.u_regfile.REGFILE.reg_r20_q , \u0.u_issue.u_regfile.REGFILE.reg_r21_q , \u0.u_issue.u_regfile.REGFILE.reg_r22_q , \u0.u_issue.u_regfile.REGFILE.reg_r23_q , \u0.u_issue.u_regfile.REGFILE.reg_r24_q , \u0.u_issue.u_regfile.REGFILE.reg_r25_q , \u0.u_issue.u_regfile.REGFILE.reg_r26_q , \u0.u_issue.u_regfile.REGFILE.reg_r27_q , \u0.u_issue.u_regfile.REGFILE.reg_r28_q , \u0.u_issue.u_regfile.REGFILE.reg_r29_q , \u0.u_issue.u_regfile.REGFILE.reg_r30_q , \u0.u_issue.u_regfile.REGFILE.reg_r31_q  }, { _1030_, _1029_, _1028_, _1027_, _1026_, _1025_, _1024_, _1023_, _1022_, _1021_, _1020_, _1019_, _1018_, _1017_, _1016_, _1015_, _1014_, _1013_, _1012_, _1011_, _1010_, _1009_, _1008_, _1007_, _1006_, _1005_, _1004_, _1003_, _1002_, _1001_, _1000_ });
  assign _1000_ = \u0.u_csr.opcode_opcode_i [24:20] == 5'h1f;
  assign _1001_ = \u0.u_csr.opcode_opcode_i [24:20] == 5'h1e;
  assign _1002_ = \u0.u_csr.opcode_opcode_i [24:20] == 5'h1d;
  assign _1003_ = \u0.u_csr.opcode_opcode_i [24:20] == 5'h1c;
  assign _1004_ = \u0.u_csr.opcode_opcode_i [24:20] == 5'h1b;
  assign _1005_ = \u0.u_csr.opcode_opcode_i [24:20] == 5'h1a;
  assign _1006_ = \u0.u_csr.opcode_opcode_i [24:20] == 5'h19;
  assign _1007_ = \u0.u_csr.opcode_opcode_i [24:20] == 5'h18;
  assign _1008_ = \u0.u_csr.opcode_opcode_i [24:20] == 5'h17;
  assign _1009_ = \u0.u_csr.opcode_opcode_i [24:20] == 5'h16;
  assign _1010_ = \u0.u_csr.opcode_opcode_i [24:20] == 5'h15;
  assign _1011_ = \u0.u_csr.opcode_opcode_i [24:20] == 5'h14;
  assign _1012_ = \u0.u_csr.opcode_opcode_i [24:20] == 5'h13;
  assign _1013_ = \u0.u_csr.opcode_opcode_i [24:20] == 5'h12;
  assign _1014_ = \u0.u_csr.opcode_opcode_i [24:20] == 5'h11;
  assign _1015_ = \u0.u_csr.opcode_opcode_i [24:20] == 5'h10;
  assign _1016_ = \u0.u_csr.opcode_opcode_i [24:20] == 4'hf;
  assign _1017_ = \u0.u_csr.opcode_opcode_i [24:20] == 4'he;
  assign _1018_ = \u0.u_csr.opcode_opcode_i [24:20] == 4'hd;
  assign _1019_ = \u0.u_csr.opcode_opcode_i [24:20] == 4'hc;
  assign _1020_ = \u0.u_csr.opcode_opcode_i [24:20] == 4'hb;
  assign _1021_ = \u0.u_csr.opcode_opcode_i [24:20] == 4'ha;
  assign _1022_ = \u0.u_csr.opcode_opcode_i [24:20] == 4'h9;
  assign _1023_ = \u0.u_csr.opcode_opcode_i [24:20] == 4'h8;
  assign _1024_ = \u0.u_csr.opcode_opcode_i [24:20] == 3'h7;
  assign _1025_ = \u0.u_csr.opcode_opcode_i [24:20] == 3'h6;
  assign _1026_ = \u0.u_csr.opcode_opcode_i [24:20] == 3'h5;
  assign _1027_ = \u0.u_csr.opcode_opcode_i [24:20] == 3'h4;
  assign _1028_ = \u0.u_csr.opcode_opcode_i [24:20] == 2'h3;
  assign _1029_ = \u0.u_csr.opcode_opcode_i [24:20] == 2'h2;
  assign _1030_ = \u0.u_csr.opcode_opcode_i [24:20] == 1'h1;
  function [31:0] _2593_;
    input [31:0] a;
    input [991:0] b;
    input [30:0] s;
    casez (s) // synopsys parallel_case
      31'b??????????????????????????????1:
        _2593_ = b[31:0];
      31'b?????????????????????????????1?:
        _2593_ = b[63:32];
      31'b????????????????????????????1??:
        _2593_ = b[95:64];
      31'b???????????????????????????1???:
        _2593_ = b[127:96];
      31'b??????????????????????????1????:
        _2593_ = b[159:128];
      31'b?????????????????????????1?????:
        _2593_ = b[191:160];
      31'b????????????????????????1??????:
        _2593_ = b[223:192];
      31'b???????????????????????1???????:
        _2593_ = b[255:224];
      31'b??????????????????????1????????:
        _2593_ = b[287:256];
      31'b?????????????????????1?????????:
        _2593_ = b[319:288];
      31'b????????????????????1??????????:
        _2593_ = b[351:320];
      31'b???????????????????1???????????:
        _2593_ = b[383:352];
      31'b??????????????????1????????????:
        _2593_ = b[415:384];
      31'b?????????????????1?????????????:
        _2593_ = b[447:416];
      31'b????????????????1??????????????:
        _2593_ = b[479:448];
      31'b???????????????1???????????????:
        _2593_ = b[511:480];
      31'b??????????????1????????????????:
        _2593_ = b[543:512];
      31'b?????????????1?????????????????:
        _2593_ = b[575:544];
      31'b????????????1??????????????????:
        _2593_ = b[607:576];
      31'b???????????1???????????????????:
        _2593_ = b[639:608];
      31'b??????????1????????????????????:
        _2593_ = b[671:640];
      31'b?????????1?????????????????????:
        _2593_ = b[703:672];
      31'b????????1??????????????????????:
        _2593_ = b[735:704];
      31'b???????1???????????????????????:
        _2593_ = b[767:736];
      31'b??????1????????????????????????:
        _2593_ = b[799:768];
      31'b?????1?????????????????????????:
        _2593_ = b[831:800];
      31'b????1??????????????????????????:
        _2593_ = b[863:832];
      31'b???1???????????????????????????:
        _2593_ = b[895:864];
      31'b??1????????????????????????????:
        _2593_ = b[927:896];
      31'b?1?????????????????????????????:
        _2593_ = b[959:928];
      31'b1??????????????????????????????:
        _2593_ = b[991:960];
      default:
        _2593_ = a;
    endcase
  endfunction
  assign \u0.u_issue.issue_ra_value_w  = _2593_(32'h00000000, { \u0.u_issue.u_regfile.REGFILE.reg_r1_q , \u0.u_issue.u_regfile.REGFILE.reg_r2_q , \u0.u_issue.u_regfile.REGFILE.reg_r3_q , \u0.u_issue.u_regfile.REGFILE.reg_r4_q , \u0.u_issue.u_regfile.REGFILE.reg_r5_q , \u0.u_issue.u_regfile.REGFILE.reg_r6_q , \u0.u_issue.u_regfile.REGFILE.reg_r7_q , \u0.u_issue.u_regfile.REGFILE.reg_r8_q , \u0.u_issue.u_regfile.REGFILE.reg_r9_q , \u0.u_issue.u_regfile.REGFILE.reg_r10_q , \u0.u_issue.u_regfile.REGFILE.reg_r11_q , \u0.u_issue.u_regfile.REGFILE.reg_r12_q , \u0.u_issue.u_regfile.REGFILE.reg_r13_q , \u0.u_issue.u_regfile.REGFILE.reg_r14_q , \u0.u_issue.u_regfile.REGFILE.reg_r15_q , \u0.u_issue.u_regfile.REGFILE.reg_r16_q , \u0.u_issue.u_regfile.REGFILE.reg_r17_q , \u0.u_issue.u_regfile.REGFILE.reg_r18_q , \u0.u_issue.u_regfile.REGFILE.reg_r19_q , \u0.u_issue.u_regfile.REGFILE.reg_r20_q , \u0.u_issue.u_regfile.REGFILE.reg_r21_q , \u0.u_issue.u_regfile.REGFILE.reg_r22_q , \u0.u_issue.u_regfile.REGFILE.reg_r23_q , \u0.u_issue.u_regfile.REGFILE.reg_r24_q , \u0.u_issue.u_regfile.REGFILE.reg_r25_q , \u0.u_issue.u_regfile.REGFILE.reg_r26_q , \u0.u_issue.u_regfile.REGFILE.reg_r27_q , \u0.u_issue.u_regfile.REGFILE.reg_r28_q , \u0.u_issue.u_regfile.REGFILE.reg_r29_q , \u0.u_issue.u_regfile.REGFILE.reg_r30_q , \u0.u_issue.u_regfile.REGFILE.reg_r31_q  }, { _1061_, _1060_, _1059_, _1058_, _1057_, _1056_, _1055_, _1054_, _1053_, _1052_, _1051_, _1050_, _1049_, _1048_, _1047_, _1046_, _1045_, _1044_, _1043_, _1042_, _1041_, _1040_, _1039_, _1038_, _1037_, _1036_, _1035_, _1034_, _1033_, _1032_, _1031_ });
  assign _1031_ = \u0.u_csr.opcode_opcode_i [19:15] == 5'h1f;
  assign _1032_ = \u0.u_csr.opcode_opcode_i [19:15] == 5'h1e;
  assign _1033_ = \u0.u_csr.opcode_opcode_i [19:15] == 5'h1d;
  assign _1034_ = \u0.u_csr.opcode_opcode_i [19:15] == 5'h1c;
  assign _1035_ = \u0.u_csr.opcode_opcode_i [19:15] == 5'h1b;
  assign _1036_ = \u0.u_csr.opcode_opcode_i [19:15] == 5'h1a;
  assign _1037_ = \u0.u_csr.opcode_opcode_i [19:15] == 5'h19;
  assign _1038_ = \u0.u_csr.opcode_opcode_i [19:15] == 5'h18;
  assign _1039_ = \u0.u_csr.opcode_opcode_i [19:15] == 5'h17;
  assign _1040_ = \u0.u_csr.opcode_opcode_i [19:15] == 5'h16;
  assign _1041_ = \u0.u_csr.opcode_opcode_i [19:15] == 5'h15;
  assign _1042_ = \u0.u_csr.opcode_opcode_i [19:15] == 5'h14;
  assign _1043_ = \u0.u_csr.opcode_opcode_i [19:15] == 5'h13;
  assign _1044_ = \u0.u_csr.opcode_opcode_i [19:15] == 5'h12;
  assign _1045_ = \u0.u_csr.opcode_opcode_i [19:15] == 5'h11;
  assign _1046_ = \u0.u_csr.opcode_opcode_i [19:15] == 5'h10;
  assign _1047_ = \u0.u_csr.opcode_opcode_i [19:15] == 4'hf;
  assign _1048_ = \u0.u_csr.opcode_opcode_i [19:15] == 4'he;
  assign _1049_ = \u0.u_csr.opcode_opcode_i [19:15] == 4'hd;
  assign _1050_ = \u0.u_csr.opcode_opcode_i [19:15] == 4'hc;
  assign _1051_ = \u0.u_csr.opcode_opcode_i [19:15] == 4'hb;
  assign _1052_ = \u0.u_csr.opcode_opcode_i [19:15] == 4'ha;
  assign _1053_ = \u0.u_csr.opcode_opcode_i [19:15] == 4'h9;
  assign _1054_ = \u0.u_csr.opcode_opcode_i [19:15] == 4'h8;
  assign _1055_ = \u0.u_csr.opcode_opcode_i [19:15] == 3'h7;
  assign _1056_ = \u0.u_csr.opcode_opcode_i [19:15] == 3'h6;
  assign _1057_ = \u0.u_csr.opcode_opcode_i [19:15] == 3'h5;
  assign _1058_ = \u0.u_csr.opcode_opcode_i [19:15] == 3'h4;
  assign _1059_ = \u0.u_csr.opcode_opcode_i [19:15] == 2'h3;
  assign _1060_ = \u0.u_csr.opcode_opcode_i [19:15] == 2'h2;
  assign _1061_ = \u0.u_csr.opcode_opcode_i [19:15] == 1'h1;
  assign _1062_ = _0999_ ? \u0.u_issue.u_pipe_ctrl.result_wb_q  : \u0.u_issue.u_regfile.REGFILE.reg_r31_q ;
  assign _0961_ = rst_i ? 32'h00000000 : _1062_;
  assign _1063_ = _0998_ ? \u0.u_issue.u_pipe_ctrl.result_wb_q  : \u0.u_issue.u_regfile.REGFILE.reg_r30_q ;
  assign _0960_ = rst_i ? 32'h00000000 : _1063_;
  assign _1064_ = _0997_ ? \u0.u_issue.u_pipe_ctrl.result_wb_q  : \u0.u_issue.u_regfile.REGFILE.reg_r29_q ;
  assign _0958_ = rst_i ? 32'h00000000 : _1064_;
  assign _1065_ = _0996_ ? \u0.u_issue.u_pipe_ctrl.result_wb_q  : \u0.u_issue.u_regfile.REGFILE.reg_r28_q ;
  assign _0957_ = rst_i ? 32'h00000000 : _1065_;
  assign _1066_ = _0995_ ? \u0.u_issue.u_pipe_ctrl.result_wb_q  : \u0.u_issue.u_regfile.REGFILE.reg_r27_q ;
  assign _0956_ = rst_i ? 32'h00000000 : _1066_;
  assign _1067_ = _0994_ ? \u0.u_issue.u_pipe_ctrl.result_wb_q  : \u0.u_issue.u_regfile.REGFILE.reg_r26_q ;
  assign _0955_ = rst_i ? 32'h00000000 : _1067_;
  assign _1068_ = _0993_ ? \u0.u_issue.u_pipe_ctrl.result_wb_q  : \u0.u_issue.u_regfile.REGFILE.reg_r25_q ;
  assign _0954_ = rst_i ? 32'h00000000 : _1068_;
  assign _1069_ = _0992_ ? \u0.u_issue.u_pipe_ctrl.result_wb_q  : \u0.u_issue.u_regfile.REGFILE.reg_r24_q ;
  assign _0953_ = rst_i ? 32'h00000000 : _1069_;
  assign _1070_ = _0991_ ? \u0.u_issue.u_pipe_ctrl.result_wb_q  : \u0.u_issue.u_regfile.REGFILE.reg_r23_q ;
  assign _0952_ = rst_i ? 32'h00000000 : _1070_;
  assign _1071_ = _0990_ ? \u0.u_issue.u_pipe_ctrl.result_wb_q  : \u0.u_issue.u_regfile.REGFILE.reg_r22_q ;
  assign _0951_ = rst_i ? 32'h00000000 : _1071_;
  assign _1072_ = _0989_ ? \u0.u_issue.u_pipe_ctrl.result_wb_q  : \u0.u_issue.u_regfile.REGFILE.reg_r21_q ;
  assign _0950_ = rst_i ? 32'h00000000 : _1072_;
  assign _1073_ = _0988_ ? \u0.u_issue.u_pipe_ctrl.result_wb_q  : \u0.u_issue.u_regfile.REGFILE.reg_r20_q ;
  assign _0949_ = rst_i ? 32'h00000000 : _1073_;
  assign _1074_ = _0987_ ? \u0.u_issue.u_pipe_ctrl.result_wb_q  : \u0.u_issue.u_regfile.REGFILE.reg_r19_q ;
  assign _0947_ = rst_i ? 32'h00000000 : _1074_;
  assign _1075_ = _0986_ ? \u0.u_issue.u_pipe_ctrl.result_wb_q  : \u0.u_issue.u_regfile.REGFILE.reg_r18_q ;
  assign _0946_ = rst_i ? 32'h00000000 : _1075_;
  assign _1076_ = _0985_ ? \u0.u_issue.u_pipe_ctrl.result_wb_q  : \u0.u_issue.u_regfile.REGFILE.reg_r17_q ;
  assign _0945_ = rst_i ? 32'h00000000 : _1076_;
  assign _1077_ = _0984_ ? \u0.u_issue.u_pipe_ctrl.result_wb_q  : \u0.u_issue.u_regfile.REGFILE.reg_r16_q ;
  assign _0944_ = rst_i ? 32'h00000000 : _1077_;
  assign _1078_ = _0983_ ? \u0.u_issue.u_pipe_ctrl.result_wb_q  : \u0.u_issue.u_regfile.REGFILE.reg_r15_q ;
  assign _0943_ = rst_i ? 32'h00000000 : _1078_;
  assign _1079_ = _0982_ ? \u0.u_issue.u_pipe_ctrl.result_wb_q  : \u0.u_issue.u_regfile.REGFILE.reg_r14_q ;
  assign _0942_ = rst_i ? 32'h00000000 : _1079_;
  assign _1080_ = _0981_ ? \u0.u_issue.u_pipe_ctrl.result_wb_q  : \u0.u_issue.u_regfile.REGFILE.reg_r13_q ;
  assign _0941_ = rst_i ? 32'h00000000 : _1080_;
  assign _1081_ = _0980_ ? \u0.u_issue.u_pipe_ctrl.result_wb_q  : \u0.u_issue.u_regfile.REGFILE.reg_r12_q ;
  assign _0940_ = rst_i ? 32'h00000000 : _1081_;
  assign _1082_ = _0979_ ? \u0.u_issue.u_pipe_ctrl.result_wb_q  : \u0.u_issue.u_regfile.REGFILE.reg_r11_q ;
  assign _0939_ = rst_i ? 32'h00000000 : _1082_;
  assign _1083_ = _0978_ ? \u0.u_issue.u_pipe_ctrl.result_wb_q  : \u0.u_issue.u_regfile.REGFILE.reg_r10_q ;
  assign _0938_ = rst_i ? 32'h00000000 : _1083_;
  assign _1084_ = _0977_ ? \u0.u_issue.u_pipe_ctrl.result_wb_q  : \u0.u_issue.u_regfile.REGFILE.reg_r9_q ;
  assign _0968_ = rst_i ? 32'h00000000 : _1084_;
  assign _1085_ = _0976_ ? \u0.u_issue.u_pipe_ctrl.result_wb_q  : \u0.u_issue.u_regfile.REGFILE.reg_r8_q ;
  assign _0967_ = rst_i ? 32'h00000000 : _1085_;
  assign _1086_ = _0975_ ? \u0.u_issue.u_pipe_ctrl.result_wb_q  : \u0.u_issue.u_regfile.REGFILE.reg_r7_q ;
  assign _0966_ = rst_i ? 32'h00000000 : _1086_;
  assign _1087_ = _0974_ ? \u0.u_issue.u_pipe_ctrl.result_wb_q  : \u0.u_issue.u_regfile.REGFILE.reg_r6_q ;
  assign _0965_ = rst_i ? 32'h00000000 : _1087_;
  assign _1088_ = _0973_ ? \u0.u_issue.u_pipe_ctrl.result_wb_q  : \u0.u_issue.u_regfile.REGFILE.reg_r5_q ;
  assign _0964_ = rst_i ? 32'h00000000 : _1088_;
  assign _1089_ = _0972_ ? \u0.u_issue.u_pipe_ctrl.result_wb_q  : \u0.u_issue.u_regfile.REGFILE.reg_r4_q ;
  assign _0963_ = rst_i ? 32'h00000000 : _1089_;
  assign _1090_ = _0971_ ? \u0.u_issue.u_pipe_ctrl.result_wb_q  : \u0.u_issue.u_regfile.REGFILE.reg_r3_q ;
  assign _0962_ = rst_i ? 32'h00000000 : _1090_;
  assign _1091_ = _0970_ ? \u0.u_issue.u_pipe_ctrl.result_wb_q  : \u0.u_issue.u_regfile.REGFILE.reg_r2_q ;
  assign _0959_ = rst_i ? 32'h00000000 : _1091_;
  assign _1092_ = _0969_ ? \u0.u_issue.u_pipe_ctrl.result_wb_q  : \u0.u_issue.u_regfile.REGFILE.reg_r1_q ;
  assign _0948_ = rst_i ? 32'h00000000 : _1092_;
  assign _1125_ = \u0.u_csr.opcode_ra_operand_i  + { \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31:20] };
  assign _1126_ = \u0.u_csr.opcode_ra_operand_i  + { \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31:25], \u0.u_csr.opcode_opcode_i [11:7] };
  assign \u0.u_lsu.complete_ok_e2_w  = mem_d_ack_i & _1196_;
  assign \u0.u_lsu.complete_err_e2_w  = mem_d_ack_i & mem_d_error_i;
  assign _1127_ = \u0.u_lsu.mem_unaligned_e1_q  & _1197_;
  assign _1128_ = \u0.u_csr.opcode_opcode_i  & 15'h707f;
  assign _1129_ = \u0.u_csr.opcode_valid_i  & \u0.u_lsu.dcache_invalidate_w ;
  assign _1130_ = \u0.u_csr.opcode_valid_i  & \u0.u_lsu.dcache_writeback_w ;
  assign _1131_ = \u0.u_csr.opcode_valid_i  & \u0.u_lsu.dcache_flush_w ;
  assign \fifo_d_rd.in  = \u0.u_lsu.mem_rd_q  & _1197_;
  assign \fifo_d_wr.in  = \u0.u_lsu.mem_wr_q  & _1198_;
  assign \u0.u_lsu.fault_load_align_w  = \u0.u_lsu.mem_unaligned_e2_q  & \u0.u_lsu.u_lsu_request.data_out_o [0];
  assign \u0.u_lsu.fault_store_align_w  = \u0.u_lsu.mem_unaligned_e2_q  & _1199_;
  assign _1138_ = _1128_ == 2'h3;
  assign _1139_ = _1128_ == 13'h1003;
  assign _1140_ = _1128_ == 14'h2003;
  assign _1141_ = _1128_ == 15'h4003;
  assign _1142_ = _1128_ == 15'h5003;
  assign _1143_ = _1128_ == 15'h6003;
  assign \u0.u_lsu.req_sb_w  = _1128_ == 6'h23;
  assign \u0.u_lsu.req_sh_w  = _1128_ == 13'h1023;
  assign _1144_ = _1128_ == 14'h2023;
  assign _1145_ = _1128_ == 13'h1073;
  assign _1146_ = \u0.u_csr.opcode_opcode_i [31:20] == 10'h3a0;
  assign _1147_ = \u0.u_csr.opcode_opcode_i [31:20] == 10'h3a1;
  assign _1148_ = \u0.u_csr.opcode_opcode_i [31:20] == 10'h3a2;
  assign _1149_ = \u0.u_lsu.mem_addr_r  >= 32'h80000000;
  assign _1150_ = \u0.u_lsu.mem_addr_r  <= 32'h8fffffff;
  assign \u0.u_lsu.issue_lsu_e1_w  = _1175_ && mem_d_accept_i;
  assign \u0.u_lsu.delay_lsu_e2_w  = \u0.u_lsu.pending_lsu_e2_q  && _1169_;
  assign _1151_ = \u0.u_csr.opcode_valid_i  && _1145_;
  assign _1152_ = \u0.u_csr.opcode_valid_i  && \u0.u_lsu.load_inst_w ;
  assign _1153_ = \u0.u_csr.opcode_valid_i  && \u0.u_lsu.req_sw_lw_w ;
  assign _1154_ = \u0.u_csr.opcode_valid_i  && \u0.u_lsu.req_sh_lh_w ;
  assign \u0.u_lsu.mem_rd_r  = _1152_ && _1170_;
  assign _1155_ = \u0.u_csr.opcode_valid_i  && _1144_;
  assign _1156_ = _1155_ && _1170_;
  assign _1157_ = \u0.u_csr.opcode_valid_i  && \u0.u_lsu.req_sh_w ;
  assign _1158_ = _1157_ && _1170_;
  assign _1159_ = \u0.u_csr.opcode_valid_i  && \u0.u_lsu.req_sb_w ;
  assign \u0.u_lsu.dcache_flush_w  = _1145_ && _1146_;
  assign \u0.u_lsu.dcache_writeback_w  = _1145_ && _1147_;
  assign \u0.u_lsu.dcache_invalidate_w  = _1145_ && _1148_;
  assign _1160_ = _1184_ && \u0.u_lsu.delay_lsu_e2_w ;
  assign _1161_ = _1188_ && _1171_;
  assign _1162_ = _1149_ && _1150_;
  assign _1163_ = \u0.u_csr.opcode_valid_i  && _1191_;
  assign _1164_ = \u0.u_lsu.mem_unaligned_e1_q  && _1197_;
  assign _1165_ = mem_d_ack_i && mem_d_error_i;
  assign _1166_ = mem_d_ack_i && \u0.u_lsu.u_lsu_request.data_out_o [0];
  assign _1167_ = \u0.u_lsu.u_lsu_request.data_out_o [3] && _1118_[7];
  assign _1168_ = \u0.u_lsu.u_lsu_request.data_out_o [3] && _1123_[15];
  assign \u0.u_lsu.fault_load_bus_w  = mem_d_error_i && \u0.u_lsu.u_lsu_request.data_out_o [0];
  assign \u0.u_lsu.fault_store_bus_w  = mem_d_error_i && _1199_;
  assign \u0.u_lsu.fault_load_page_w  = mem_d_error_i && 1'h0;
  assign \u0.u_lsu.fault_store_page_w  = mem_d_error_i && 1'h0;
  assign _1169_ = ! \u0.u_lsu.complete_ok_e2_w ;
  assign _1170_ = ! \u0.u_lsu.mem_unaligned_r ;
  assign _1171_ = ! mem_d_accept_i;
  assign _1172_ = \fifo_d_rd.in  || _1257_;
  assign _1173_ = _1172_ || \u0.u_lsu.mem_writeback_q ;
  assign _1174_ = _1173_ || \u0.u_lsu.mem_invalidate_q ;
  assign _1175_ = _1174_ || \u0.u_lsu.mem_flush_q ;
  assign _1176_ = \u0.u_lsu.complete_ok_e2_w  || \u0.u_lsu.complete_err_e2_w ;
  assign _1177_ = _1138_ || _1139_;
  assign \u0.u_lsu.load_signed_inst_w  = _1177_ || _1140_;
  assign _1178_ = \u0.u_lsu.load_signed_inst_w  || _1141_;
  assign _1179_ = _1178_ || _1142_;
  assign \u0.u_lsu.load_inst_w  = _1179_ || _1143_;
  assign \u0.u_lsu.req_lb_w  = _1138_ || _1141_;
  assign \u0.u_lsu.req_lh_w  = _1139_ || _1142_;
  assign _1180_ = _1144_ || _1140_;
  assign \u0.u_lsu.req_sw_lw_w  = _1180_ || _1143_;
  assign _1181_ = \u0.u_lsu.req_sh_w  || _1139_;
  assign \u0.u_lsu.req_sh_lh_w  = _1181_ || _1142_;
  assign _1182_ = \u0.u_lsu.complete_err_e2_w  || \u0.u_lsu.mem_unaligned_e2_q ;
  assign _1183_ = \u0.u_lsu.mem_rd_q  || _1258_;
  assign _1184_ = _1183_ || \u0.u_lsu.mem_unaligned_e1_q ;
  assign _1185_ = \u0.u_lsu.mem_writeback_q  || \u0.u_lsu.mem_invalidate_q ;
  assign _1186_ = _1185_ || \u0.u_lsu.mem_flush_q ;
  assign _1187_ = _1186_ || \fifo_d_rd.in ;
  assign _1188_ = _1187_ || _1195_;
  assign _1189_ = _1162_ || _1163_;
  assign _1190_ = \u0.u_lsu.dcache_invalidate_w  || \u0.u_lsu.dcache_writeback_w ;
  assign _1191_ = _1190_ || \u0.u_lsu.dcache_flush_w ;
  assign _1192_ = _1161_ || \u0.u_lsu.delay_lsu_e2_w ;
  assign \u0.u_issue.lsu_stall_i  = _1192_ || \u0.u_lsu.mem_unaligned_e1_q ;
  assign \u0.u_lsu.u_lsu_request.push_i  = \u0.u_lsu.issue_lsu_e1_w  || _1164_;
  assign \u0.u_lsu.u_lsu_request.pop_i  = mem_d_ack_i || \u0.u_lsu.mem_unaligned_e2_q ;
  assign _1193_ = _1165_ || \u0.u_lsu.mem_unaligned_e2_q ;
  assign _1194_ = | \u0.u_lsu.mem_addr_r [1:0];
  assign _1195_ = | \fifo_d_wr.in ;
  assign _1196_ = ~ mem_d_error_i;
  assign _1197_ = ~ \u0.u_lsu.delay_lsu_e2_w ;
  assign _1198_ = ~ { \u0.u_lsu.delay_lsu_e2_w , \u0.u_lsu.delay_lsu_e2_w , \u0.u_lsu.delay_lsu_e2_w , \u0.u_lsu.delay_lsu_e2_w  };
  assign _1199_ = ~ \u0.u_lsu.u_lsu_request.data_out_o [0];
  assign _1200_ = \u0.u_lsu.req_lb_w  | \u0.u_lsu.req_sb_w ;
  assign _1201_ = \u0.u_lsu.req_lh_w  | \u0.u_lsu.req_sh_w ;
  assign \u0.u_issue.u_pipe_ctrl.mem_complete_i  = mem_d_ack_i | \u0.u_lsu.mem_unaligned_e2_q ;
  always @(posedge clk_i)
    \u0.u_lsu.mem_addr_q  <= _1093_;
  always @(posedge clk_i)
    \u0.u_lsu.mem_data_wr_q  <= _1095_;
  always @(posedge clk_i)
    \u0.u_lsu.mem_rd_q  <= _1100_;
  always @(posedge clk_i)
    \u0.u_lsu.mem_wr_q  <= _1103_;
  always @(posedge clk_i)
    \u0.u_lsu.mem_cacheable_q  <= _1094_;
  always @(posedge clk_i)
    \u0.u_lsu.mem_invalidate_q  <= _1097_;
  always @(posedge clk_i)
    \u0.u_lsu.mem_writeback_q  <= _1104_;
  always @(posedge clk_i)
    \u0.u_lsu.mem_flush_q  <= _1096_;
  always @(posedge clk_i)
    \u0.u_lsu.mem_unaligned_e1_q  <= _1101_;
  always @(posedge clk_i)
    \u0.u_lsu.mem_load_q  <= _1098_;
  always @(posedge clk_i)
    \u0.u_lsu.mem_xb_q  <= _1105_;
  always @(posedge clk_i)
    \u0.u_lsu.mem_xh_q  <= _1106_;
  always @(posedge clk_i)
    \u0.u_lsu.mem_ls_q  <= _1099_;
  always @(posedge clk_i)
    \u0.u_lsu.mem_unaligned_e2_q  <= _1102_;
  always @(posedge clk_i)
    \u0.u_lsu.pending_lsu_e2_q  <= _1107_;
  assign _1124_ = _1168_ ? { 16'hffff, _1123_[15:0] } : _1123_;
  assign _1132_[15:0] = \u0.u_lsu.u_lsu_request.data_out_o [5] ? mem_d_data_rd_i[31:16] : mem_d_data_rd_i[15:0];
  assign _1202_ = \u0.u_lsu.u_lsu_request.data_out_o [2] ? { 16'h0000, _1132_[15:0] } : 32'hxxxxxxxx;
  assign _1203_ = \u0.u_lsu.u_lsu_request.data_out_o [1] ? 32'hxxxxxxxx : _1202_;
  assign _1204_ = _1166_ ? _1203_ : 32'hxxxxxxxx;
  assign _1123_ = _1193_ ? 32'hxxxxxxxx : _1204_;
  assign _1122_ = \u0.u_lsu.u_lsu_request.data_out_o [2] ? _1124_ : mem_d_data_rd_i;
  assign _1121_ = _1167_ ? { 24'hffffff, _1118_[7:0] } : _1118_;
  function [31:0] _2809_;
    input [31:0] a;
    input [127:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        _2809_ = b[31:0];
      4'b??1?:
        _2809_ = b[63:32];
      4'b?1??:
        _2809_ = b[95:64];
      4'b1???:
        _2809_ = b[127:96];
      default:
        _2809_ = a;
    endcase
  endfunction
  assign _1205_ = _2809_(32'hxxxxxxxx, { 24'h000000, mem_d_data_rd_i[31:24], 24'h000000, mem_d_data_rd_i[23:16], 24'h000000, mem_d_data_rd_i[15:8], 24'h000000, mem_d_data_rd_i[7:0] }, { _1209_, _1208_, _1207_, _1206_ });
  assign _1206_ = ! \u0.u_lsu.u_lsu_request.data_out_o [5:4];
  assign _1207_ = \u0.u_lsu.u_lsu_request.data_out_o [5:4] == 1'h1;
  assign _1208_ = \u0.u_lsu.u_lsu_request.data_out_o [5:4] == 2'h2;
  assign _1209_ = \u0.u_lsu.u_lsu_request.data_out_o [5:4] == 2'h3;
  assign _1210_ = \u0.u_lsu.u_lsu_request.data_out_o [1] ? _1205_ : 32'hxxxxxxxx;
  assign _1211_ = _1166_ ? _1210_ : 32'hxxxxxxxx;
  assign _1118_ = _1193_ ? 32'hxxxxxxxx : _1211_;
  assign _1115_ = \u0.u_lsu.u_lsu_request.data_out_o [1] ? _1121_ : _1122_;
  assign _1112_ = _1166_ ? _1115_ : 32'h00000000;
  assign \u0.u_issue.u_pipe_ctrl.mem_result_e2_i  = _1193_ ? \u0.u_lsu.u_lsu_request.data_out_o [35:4] : _1112_;
  assign _1212_ = _1161_ ? \u0.u_lsu.mem_ls_q  : \u0.u_lsu.load_signed_inst_w ;
  assign _1213_ = _1160_ ? \u0.u_lsu.mem_ls_q  : _1212_;
  assign _1214_ = _1182_ ? 1'h0 : _1213_;
  assign _1099_ = rst_i ? 1'h0 : _1214_;
  assign _1215_ = _1161_ ? \u0.u_lsu.mem_xh_q  : _1201_;
  assign _1216_ = _1160_ ? \u0.u_lsu.mem_xh_q  : _1215_;
  assign _1217_ = _1182_ ? 1'h0 : _1216_;
  assign _1106_ = rst_i ? 1'h0 : _1217_;
  assign _1218_ = _1161_ ? \u0.u_lsu.mem_xb_q  : _1200_;
  assign _1219_ = _1160_ ? \u0.u_lsu.mem_xb_q  : _1218_;
  assign _1220_ = _1182_ ? 1'h0 : _1219_;
  assign _1105_ = rst_i ? 1'h0 : _1220_;
  assign _1221_ = _1161_ ? \u0.u_lsu.mem_load_q  : _1152_;
  assign _1222_ = _1160_ ? \u0.u_lsu.mem_load_q  : _1221_;
  assign _1223_ = _1182_ ? 1'h0 : _1222_;
  assign _1098_ = rst_i ? 1'h0 : _1223_;
  assign _1224_ = _1161_ ? \u0.u_lsu.mem_unaligned_e1_q  : \u0.u_lsu.mem_unaligned_r ;
  assign _1225_ = _1160_ ? \u0.u_lsu.mem_unaligned_e1_q  : _1224_;
  assign _1226_ = _1182_ ? 1'h0 : _1225_;
  assign _1101_ = rst_i ? 1'h0 : _1226_;
  assign _1227_ = _1161_ ? \u0.u_lsu.mem_flush_q  : _1131_;
  assign _1228_ = _1160_ ? \u0.u_lsu.mem_flush_q  : _1227_;
  assign _1229_ = _1182_ ? 1'h0 : _1228_;
  assign _1096_ = rst_i ? 1'h0 : _1229_;
  assign _1230_ = _1161_ ? \u0.u_lsu.mem_writeback_q  : _1130_;
  assign _1231_ = _1160_ ? \u0.u_lsu.mem_writeback_q  : _1230_;
  assign _1232_ = _1182_ ? 1'h0 : _1231_;
  assign _1104_ = rst_i ? 1'h0 : _1232_;
  assign _1233_ = _1161_ ? \u0.u_lsu.mem_invalidate_q  : _1129_;
  assign _1234_ = _1160_ ? \u0.u_lsu.mem_invalidate_q  : _1233_;
  assign _1235_ = _1182_ ? 1'h0 : _1234_;
  assign _1097_ = rst_i ? 1'h0 : _1235_;
  assign _1236_ = _1161_ ? \u0.u_lsu.mem_cacheable_q  : _1189_;
  assign _1237_ = _1160_ ? \u0.u_lsu.mem_cacheable_q  : _1236_;
  assign _1238_ = _1182_ ? 1'h0 : _1237_;
  assign _1094_ = rst_i ? 1'h0 : _1238_;
  assign _1239_ = _1161_ ? \u0.u_lsu.mem_wr_q  : \u0.u_lsu.mem_wr_r ;
  assign _1240_ = _1160_ ? \u0.u_lsu.mem_wr_q  : _1239_;
  assign _1241_ = _1182_ ? 4'h0 : _1240_;
  assign _1103_ = rst_i ? 4'h0 : _1241_;
  assign _1242_ = _1161_ ? \u0.u_lsu.mem_rd_q  : \u0.u_lsu.mem_rd_r ;
  assign _1243_ = _1160_ ? \u0.u_lsu.mem_rd_q  : _1242_;
  assign _1244_ = _1182_ ? 1'h0 : _1243_;
  assign _1100_ = rst_i ? 1'h0 : _1244_;
  assign _1245_ = _1161_ ? \u0.u_lsu.mem_data_wr_q  : \u0.u_lsu.mem_data_r ;
  assign _1246_ = _1160_ ? \u0.u_lsu.mem_data_wr_q  : _1245_;
  assign _1247_ = _1182_ ? 32'h00000000 : _1246_;
  assign _1095_ = rst_i ? 32'h00000000 : _1247_;
  assign _1248_ = _1161_ ? \u0.u_lsu.mem_addr_q  : \u0.u_lsu.mem_addr_r ;
  assign _1249_ = _1160_ ? \u0.u_lsu.mem_addr_q  : _1248_;
  assign _1250_ = _1182_ ? 32'h00000000 : _1249_;
  assign _1093_ = rst_i ? 32'h00000000 : _1250_;
  function [3:0] _2872_;
    input [3:0] a;
    input [15:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        _2872_ = b[3:0];
      4'b??1?:
        _2872_ = b[7:4];
      4'b?1??:
        _2872_ = b[11:8];
      4'b1???:
        _2872_ = b[15:12];
      default:
        _2872_ = a;
    endcase
  endfunction
  assign _1120_ = _2872_(4'hx, 16'h8421, { _1254_, _1253_, _1252_, _1251_ });
  assign _1251_ = ! \u0.u_lsu.mem_addr_r [1:0];
  assign _1252_ = \u0.u_lsu.mem_addr_r [1:0] == 1'h1;
  assign _1253_ = \u0.u_lsu.mem_addr_r [1:0] == 2'h2;
  assign _1254_ = \u0.u_lsu.mem_addr_r [1:0] == 2'h3;
  function [31:0] _2877_;
    input [31:0] a;
    input [127:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        _2877_ = b[31:0];
      4'b??1?:
        _2877_ = b[63:32];
      4'b?1??:
        _2877_ = b[95:64];
      4'b1???:
        _2877_ = b[127:96];
      default:
        _2877_ = a;
    endcase
  endfunction
  assign _1119_ = _2877_(32'hxxxxxxxx, { \u0.u_div.opcode_rb_operand_i [7:0], 32'h00000000, \u0.u_div.opcode_rb_operand_i [7:0], 32'h00000000, \u0.u_div.opcode_rb_operand_i [7:0], 32'h00000000, \u0.u_div.opcode_rb_operand_i [7:0] }, { _1254_, _1253_, _1252_, _1251_ });
  assign _1117_ = _1159_ ? _1120_ : 4'h0;
  assign _1116_ = _1159_ ? _1119_ : 32'h00000000;
  assign _1114_ = _1253_ ? 4'hc : 4'h3;
  assign _1113_ = _1253_ ? { \u0.u_div.opcode_rb_operand_i [15:0], 16'h0000 } : { 16'h0000, \u0.u_div.opcode_rb_operand_i [15:0] };
  assign _1111_ = _1158_ ? _1114_ : _1117_;
  assign _1109_ = _1158_ ? _1113_ : _1116_;
  assign \u0.u_lsu.mem_wr_r  = _1156_ ? 4'hf : _1111_;
  assign \u0.u_lsu.mem_data_r  = _1156_ ? \u0.u_div.opcode_rb_operand_i  : _1109_;
  assign _1110_ = _1154_ ? \u0.u_lsu.mem_addr_r [0] : 1'h0;
  assign \u0.u_lsu.mem_unaligned_r  = _1153_ ? _1194_ : _1110_;
  assign _1108_ = _1152_ ? _1125_ : _1126_;
  assign \u0.u_lsu.mem_addr_r  = _1151_ ? \u0.u_csr.opcode_ra_operand_i  : _1108_;
  assign _1102_ = rst_i ? 1'h0 : _1127_;
  assign _1255_ = _1176_ ? 1'h0 : \u0.u_lsu.pending_lsu_e2_q ;
  assign _1256_ = \u0.u_lsu.issue_lsu_e1_w  ? 1'h1 : _1255_;
  assign _1107_ = rst_i ? 1'h0 : _1256_;
  assign _1257_ = | \fifo_d_wr.in ;
  assign _1258_ = | \u0.u_lsu.mem_wr_q ;
  assign \u0.u_issue.u_pipe_ctrl.mem_exception_e2_i [4:0] = \u0.u_lsu.fault_load_align_w  ? 5'h14 : _1133_[4:0];
  assign _1133_[4:0] = \u0.u_lsu.fault_store_align_w  ? 5'h16 : _1134_[4:0];
  assign _1134_[4:0] = \u0.u_lsu.fault_load_page_w  ? 5'h1d : _1135_[4:0];
  assign _1135_[4:0] = \u0.u_lsu.fault_store_page_w  ? 5'h1f : _1136_[4:0];
  assign _1136_[4:0] = \u0.u_lsu.fault_load_bus_w  ? 5'h15 : _1137_[4:0];
  assign _1137_[4:0] = \u0.u_lsu.fault_store_bus_w  ? 5'h17 : 5'h00;
  assign _1266_ = \u0.u_lsu.u_lsu_request.wr_ptr_q  + 1'h1;
  assign _1267_[0] = \u0.u_lsu.u_lsu_request.rd_ptr_q  + 1'h1;
  assign _1268_[1:0] = \u0.u_lsu.u_lsu_request.count_q  + 1'h1;
  assign _1269_ = \u0.u_lsu.u_lsu_request.push_i  & \u0.u_lsu.u_lsu_request.accept_o ;
  assign _1270_ = \u0.u_lsu.u_lsu_request.pop_i  & \u0.u_lsu.u_lsu_request.valid_o ;
  assign _1271_ = _1269_ & _1291_;
  assign _1272_ = _1292_ & _1270_;
  assign _1273_ = 1'h0 == 1'h0;
  assign _1274_ = 1'h1 == 1'h0;
  assign _1275_ = _1260_ == 1'h0;
  assign _1276_ = 1'h0 == 1'h1;
  assign _1277_ = 1'h1 == 1'h1;
  assign _1278_ = _1260_ == 1'h1;
  assign \u0.u_lsu.u_lsu_request.data_out_o  = \u0.u_lsu.u_lsu_request.rd_ptr_q  ? \u0.u_lsu.u_lsu_request.ram_q[1]  : \u0.u_lsu.u_lsu_request.ram_q[0] ;
  assign _1279_ = _1273_ & _1259_[35];
  assign _1280_ = _1274_ & _1259_[35];
  assign _1281_ = _1275_ & _1262_[35];
  assign _1282_ = _1276_ & _1259_[35];
  assign _1283_ = _1277_ & _1259_[35];
  assign _1284_ = _1278_ & _1262_[35];
  assign _1285_ = _1279_ ? 36'h000000000 : \u0.u_lsu.u_lsu_request.ram_q[0] ;
  assign _1286_ = _1280_ ? 36'h000000000 : _1285_;
  assign _1287_ = _1281_ ? _1261_ : _1286_;
  assign _1288_ = _1282_ ? 36'h000000000 : \u0.u_lsu.u_lsu_request.ram_q[1] ;
  assign _1289_ = _1283_ ? 36'h000000000 : _1288_;
  assign _1290_ = _1284_ ? _1261_ : _1289_;
  always @(posedge clk_i)
    \u0.u_lsu.u_lsu_request.ram_q[0]  <= _1287_;
  always @(posedge clk_i)
    \u0.u_lsu.u_lsu_request.ram_q[1]  <= _1290_;
  assign \u0.u_lsu.u_lsu_request.valid_o  = | \u0.u_lsu.u_lsu_request.count_q ;
  assign \u0.u_lsu.u_lsu_request.accept_o  = \u0.u_lsu.u_lsu_request.count_q  != 2'h2;
  assign _1291_ = ~ _1270_;
  assign _1292_ = ~ _1269_;
  always @(posedge clk_i)
    \u0.u_lsu.u_lsu_request.rd_ptr_q  <= _1264_;
  always @(posedge clk_i)
    \u0.u_lsu.u_lsu_request.wr_ptr_q  <= _1265_;
  always @(posedge clk_i)
    \u0.u_lsu.u_lsu_request.count_q  <= _1263_;
  assign _1259_[35] = rst_i ? 1'h1 : 1'h0;
  assign _1293_[35] = _1269_ ? 1'h1 : 1'h0;
  assign _1262_[35] = rst_i ? 1'h0 : _1293_[35];
  assign _1294_ = _1269_ ? { \u0.u_lsu.mem_addr_q , \u0.u_lsu.mem_ls_q , \u0.u_lsu.mem_xh_q , \u0.u_lsu.mem_xb_q , \u0.u_lsu.mem_load_q  } : 36'hxxxxxxxxx;
  assign _1261_ = rst_i ? 36'hxxxxxxxxx : _1294_;
  assign _1295_ = _1269_ ? \u0.u_lsu.u_lsu_request.wr_ptr_q  : 1'hx;
  assign _1260_ = rst_i ? 1'hx : _1295_;
  assign _1296_ = _1272_ ? _1300_[1:0] : \u0.u_lsu.u_lsu_request.count_q ;
  assign _1297_ = _1271_ ? _1268_[1:0] : _1296_;
  assign _1263_ = rst_i ? 2'h0 : _1297_;
  assign _1298_ = _1269_ ? _1266_ : \u0.u_lsu.u_lsu_request.wr_ptr_q ;
  assign _1265_ = rst_i ? 1'h0 : _1298_;
  assign _1299_ = _1270_ ? _1267_[0] : \u0.u_lsu.u_lsu_request.rd_ptr_q ;
  assign _1264_ = rst_i ? 1'h0 : _1299_;
  assign _1300_[1:0] = \u0.u_lsu.u_lsu_request.count_q  - 1'h1;
  assign _1307_ = \u0.u_csr.opcode_opcode_i  & 32'hfe00707f;
  assign _1308_ = _1307_ == 26'h2002033;
  assign _1309_ = _1307_ == 26'h2001033;
  assign _1310_ = _1307_ == 26'h2000033;
  assign _1311_ = _1307_ == 26'h2003033;
  assign _1312_ = \u0.u_div.opcode_valid_i  && \u0.u_mul.mult_inst_w ;
  assign _1313_ = _1310_ || _1309_;
  assign _1314_ = _1313_ || _1308_;
  assign \u0.u_mul.mult_inst_w  = _1314_ || _1311_;
  assign \u0.u_mul.mult_result_w  = { \u0.u_mul.operand_a_e1_q [32], \u0.u_mul.operand_a_e1_q [32], \u0.u_mul.operand_a_e1_q [32], \u0.u_mul.operand_a_e1_q [32], \u0.u_mul.operand_a_e1_q [32], \u0.u_mul.operand_a_e1_q [32], \u0.u_mul.operand_a_e1_q [32], \u0.u_mul.operand_a_e1_q [32], \u0.u_mul.operand_a_e1_q [32], \u0.u_mul.operand_a_e1_q [32], \u0.u_mul.operand_a_e1_q [32], \u0.u_mul.operand_a_e1_q [32], \u0.u_mul.operand_a_e1_q [32], \u0.u_mul.operand_a_e1_q [32], \u0.u_mul.operand_a_e1_q [32], \u0.u_mul.operand_a_e1_q [32], \u0.u_mul.operand_a_e1_q [32], \u0.u_mul.operand_a_e1_q [32], \u0.u_mul.operand_a_e1_q [32], \u0.u_mul.operand_a_e1_q [32], \u0.u_mul.operand_a_e1_q [32], \u0.u_mul.operand_a_e1_q [32], \u0.u_mul.operand_a_e1_q [32], \u0.u_mul.operand_a_e1_q [32], \u0.u_mul.operand_a_e1_q [32], \u0.u_mul.operand_a_e1_q [32], \u0.u_mul.operand_a_e1_q [32], \u0.u_mul.operand_a_e1_q [32], \u0.u_mul.operand_a_e1_q [32], \u0.u_mul.operand_a_e1_q [32], \u0.u_mul.operand_a_e1_q [32], \u0.u_mul.operand_a_e1_q [32], \u0.u_mul.operand_a_e1_q  } * { \u0.u_mul.operand_b_e1_q [32], \u0.u_mul.operand_b_e1_q [32], \u0.u_mul.operand_b_e1_q [32], \u0.u_mul.operand_b_e1_q [32], \u0.u_mul.operand_b_e1_q [32], \u0.u_mul.operand_b_e1_q [32], \u0.u_mul.operand_b_e1_q [32], \u0.u_mul.operand_b_e1_q [32], \u0.u_mul.operand_b_e1_q [32], \u0.u_mul.operand_b_e1_q [32], \u0.u_mul.operand_b_e1_q [32], \u0.u_mul.operand_b_e1_q [32], \u0.u_mul.operand_b_e1_q [32], \u0.u_mul.operand_b_e1_q [32], \u0.u_mul.operand_b_e1_q [32], \u0.u_mul.operand_b_e1_q [32], \u0.u_mul.operand_b_e1_q [32], \u0.u_mul.operand_b_e1_q [32], \u0.u_mul.operand_b_e1_q [32], \u0.u_mul.operand_b_e1_q [32], \u0.u_mul.operand_b_e1_q [32], \u0.u_mul.operand_b_e1_q [32], \u0.u_mul.operand_b_e1_q [32], \u0.u_mul.operand_b_e1_q [32], \u0.u_mul.operand_b_e1_q [32], \u0.u_mul.operand_b_e1_q [32], \u0.u_mul.operand_b_e1_q [32], \u0.u_mul.operand_b_e1_q [32], \u0.u_mul.operand_b_e1_q [32], \u0.u_mul.operand_b_e1_q [32], \u0.u_mul.operand_b_e1_q [32], \u0.u_mul.operand_b_e1_q [32], \u0.u_mul.operand_b_e1_q  };
  assign _1315_ = ~ _1310_;
  always @(posedge clk_i)
    \u0.u_mul.result_e2_q  <= _1304_;
  always @(posedge clk_i)
    \u0.u_mul.operand_a_e1_q  <= _1302_;
  always @(posedge clk_i)
    \u0.u_mul.operand_b_e1_q  <= _1303_;
  always @(posedge clk_i)
    \u0.u_mul.mulhi_sel_e1_q  <= _1301_;
  assign _1316_ = \u0.u_exec.hold_i  ? \u0.u_mul.result_e2_q  : \u0.u_mul.result_r ;
  assign _1304_ = rst_i ? 32'h00000000 : _1316_;
  assign _1317_ = _1312_ ? _1315_ : 1'h0;
  assign _1318_ = \u0.u_exec.hold_i  ? \u0.u_mul.mulhi_sel_e1_q  : _1317_;
  assign _1301_ = rst_i ? 1'h0 : _1318_;
  assign _1319_ = _1312_ ? \u0.u_mul.operand_b_r  : 33'h000000000;
  assign _1320_ = \u0.u_exec.hold_i  ? \u0.u_mul.operand_b_e1_q  : _1319_;
  assign _1303_ = rst_i ? 33'h000000000 : _1320_;
  assign _1321_ = _1312_ ? \u0.u_mul.operand_a_r  : 33'h000000000;
  assign _1322_ = \u0.u_exec.hold_i  ? \u0.u_mul.operand_a_e1_q  : _1321_;
  assign _1302_ = rst_i ? 33'h000000000 : _1322_;
  assign _1306_ = _1309_ ? { \u0.u_div.opcode_rb_operand_i [31], \u0.u_div.opcode_rb_operand_i  } : { 1'h0, \u0.u_div.opcode_rb_operand_i  };
  assign \u0.u_mul.operand_b_r  = _1308_ ? { 1'h0, \u0.u_div.opcode_rb_operand_i  } : _1306_;
  assign _1305_ = _1309_ ? { \u0.u_csr.opcode_ra_operand_i [31], \u0.u_csr.opcode_ra_operand_i  } : { 1'h0, \u0.u_csr.opcode_ra_operand_i  };
  assign \u0.u_mul.operand_a_r  = _1308_ ? { \u0.u_csr.opcode_ra_operand_i [31], \u0.u_csr.opcode_ra_operand_i  } : _1305_;
  assign \u0.u_mul.result_r  = \u0.u_mul.mulhi_sel_e1_q  ? \u0.u_mul.mult_result_w [63:32] : \u0.u_mul.mult_result_w [31:0];
  assign \fifo_d_addr.wr  = \fifo_d_data_wr.wr  || \fifo_d_rd.in ;
  assign \fifo_d_data_wr.wr  = | \fifo_d_wr.in ;
  assign \u0.writeback_mul_value_w  = \u0.u_mul.result_e2_q ;
  assign \u0.writeback_mem_value_w  = \u0.u_issue.u_pipe_ctrl.mem_result_e2_i ;
  assign \u0.writeback_mem_valid_w  = \u0.u_issue.u_pipe_ctrl.mem_complete_i ;
  assign \u0.writeback_mem_exception_w  = { 1'h0, \u0.u_issue.u_pipe_ctrl.mem_exception_e2_i [4:0] };
  assign \u0.writeback_exec_value_w  = \u0.u_exec.result_q ;
  assign \u0.writeback_div_value_w  = \u0.u_div.wb_result_q ;
  assign \u0.writeback_div_valid_w  = \u0.u_div.valid_q ;
  assign \u0.take_interrupt_w  = \u0.u_csr.take_interrupt_q ;
  assign \u0.squash_decode_w  = \u0.u_fetch.branch_request_i ;
  assign \u0.rst_i  = rst_i;
  assign \u0.reset_vector_i  = reset_vector_i;
  assign \u0.pc_f_q_out  = { \u0.u_fetch.pc_f_q [31:2], 2'h0 };
  assign \u0.opcode_rd_idx_w  = \u0.u_csr.opcode_opcode_i [11:7];
  assign \u0.opcode_rb_operand_w  = \u0.u_div.opcode_rb_operand_i ;
  assign \u0.opcode_rb_idx_w  = \u0.u_csr.opcode_opcode_i [24:20];
  assign \u0.opcode_ra_operand_w  = \u0.u_csr.opcode_ra_operand_i ;
  assign \u0.opcode_ra_idx_w  = \u0.u_csr.opcode_opcode_i [19:15];
  assign \u0.opcode_pc_w  = \u0.u_exec.opcode_pc_i ;
  assign \u0.opcode_opcode_w  = \u0.u_csr.opcode_opcode_i ;
  assign \u0.opcode_invalid_w  = 1'h0;
  assign \u0.mul_opcode_valid_w  = \u0.u_div.opcode_valid_i ;
  assign \u0.mul_opcode_rd_idx_w  = \u0.u_csr.opcode_opcode_i [11:7];
  assign \u0.mul_opcode_rb_operand_w  = \u0.u_div.opcode_rb_operand_i ;
  assign \u0.mul_opcode_rb_idx_w  = \u0.u_csr.opcode_opcode_i [24:20];
  assign \u0.mul_opcode_ra_operand_w  = \u0.u_csr.opcode_ra_operand_i ;
  assign \u0.mul_opcode_ra_idx_w  = \u0.u_csr.opcode_opcode_i [19:15];
  assign \u0.mul_opcode_pc_w  = \u0.u_exec.opcode_pc_i ;
  assign \u0.mul_opcode_opcode_w  = \u0.u_csr.opcode_opcode_i ;
  assign \u0.mul_opcode_invalid_w  = 1'h0;
  assign \u0.mul_hold_w  = \u0.u_exec.hold_i ;
  assign \u0.mmu_sum_w  = \u0.u_csr.u_csrfile.csr_sr_q [18];
  assign \u0.mmu_store_fault_w  = 1'h0;
  assign \u0.mmu_satp_w  = 32'h00000000;
  assign \fifo_i_pc.in  = { \u0.u_fetch.pc_f_q [31:2], 2'h0 };
  assign \u0.mmu_mxr_w  = \u0.u_csr.u_csrfile.csr_sr_q [19];
  assign \u0.mmu_lsu_writeback_w  = \u0.u_lsu.mem_writeback_q ;
  assign \u0.mmu_lsu_wr_w  = \fifo_d_wr.in ;
  assign \u0.mmu_lsu_resp_tag_w  = mem_d_resp_tag_i;
  assign \u0.mmu_lsu_req_tag_w  = 11'h000;
  assign \u0.mmu_lsu_rd_w  = \fifo_d_rd.in ;
  assign \u0.mmu_lsu_invalidate_w  = \u0.u_lsu.mem_invalidate_q ;
  assign \u0.mmu_lsu_flush_w  = \u0.u_lsu.mem_flush_q ;
  assign \u0.mmu_lsu_error_w  = mem_d_error_i;
  assign \u0.mmu_lsu_data_wr_w  = \u0.u_lsu.mem_data_wr_q ;
  assign \u0.mmu_lsu_data_rd_w  = mem_d_data_rd_i;
  assign \u0.mmu_lsu_cacheable_w  = \u0.u_lsu.mem_cacheable_q ;
  assign \u0.mmu_lsu_addr_w  = { \u0.u_lsu.mem_addr_q [31:2], 2'h0 };
  assign \u0.mmu_lsu_ack_w  = mem_d_ack_i;
  assign \u0.mmu_lsu_accept_w  = mem_d_accept_i;
  assign \u0.mmu_load_fault_w  = 1'h0;
  assign \u0.mmu_ifetch_valid_w  = mem_i_valid_i;
  assign \u0.mmu_ifetch_rd_w  = \fifo_i_pc.wr ;
  assign \u0.mmu_ifetch_pc_w  = { \u0.u_fetch.pc_f_q [31:2], 2'h0 };
  assign \u0.mmu_ifetch_invalidate_w  = 1'h0;
  assign \u0.mmu_ifetch_inst_w  = mem_i_inst_i;
  assign \u0.mmu_ifetch_flush_w  = \u0.u_csr.ifence_q ;
  assign \u0.mmu_ifetch_error_w  = mem_i_error_i;
  assign \u0.mmu_ifetch_accept_w  = mem_i_accept_i;
  assign \fifo_i_pc.out0  = \fifo_i_pc.r0 ;
  assign \u0.mem_i_valid_i  = mem_i_valid_i;
  assign \u0.mem_i_rd_o  = \fifo_i_pc.wr ;
  assign \u0.mem_i_pc_o  = { \u0.u_fetch.pc_f_q [31:2], 2'h0 };
  assign \u0.mem_i_invalidate_o  = 1'h0;
  assign \u0.mem_i_inst_i  = mem_i_inst_i;
  assign \u0.mem_i_flush_o  = \u0.u_csr.ifence_q ;
  assign \u0.mem_i_error_i  = mem_i_error_i;
  assign \u0.mem_i_accept_i  = mem_i_accept_i;
  assign \u0.mem_d_writeback_o  = \u0.u_lsu.mem_writeback_q ;
  assign \u0.mem_d_wr_o  = \fifo_d_wr.in ;
  assign \u0.mem_d_resp_tag_i  = mem_d_resp_tag_i;
  assign \u0.mem_d_req_tag_o  = 11'h000;
  assign \u0.mem_d_rd_o  = \fifo_d_rd.in ;
  assign \u0.mem_d_invalidate_o  = \u0.u_lsu.mem_invalidate_q ;
  assign \u0.mem_d_flush_o  = \u0.u_lsu.mem_flush_q ;
  assign \u0.mem_d_error_i  = mem_d_error_i;
  assign \u0.mem_d_data_wr_o  = \u0.u_lsu.mem_data_wr_q ;
  assign \u0.mem_d_data_rd_i  = mem_d_data_rd_i;
  assign \u0.mem_d_cacheable_o  = \u0.u_lsu.mem_cacheable_q ;
  assign \u0.mem_d_addr_o  = { \u0.u_lsu.mem_addr_q [31:2], 2'h0 };
  assign \u0.mem_d_ack_i  = mem_d_ack_i;
  assign \u0.mem_d_accept_i  = mem_d_accept_i;
  assign \u0.lsu_stall_w  = \u0.u_issue.lsu_stall_i ;
  assign \u0.lsu_opcode_valid_w  = \u0.u_csr.opcode_valid_i ;
  assign \u0.lsu_opcode_rd_idx_w  = \u0.u_csr.opcode_opcode_i [11:7];
  assign \u0.lsu_opcode_rb_operand_w  = \u0.u_div.opcode_rb_operand_i ;
  assign \u0.lsu_opcode_rb_idx_w  = \u0.u_csr.opcode_opcode_i [24:20];
  assign \u0.lsu_opcode_ra_operand_w  = \u0.u_csr.opcode_ra_operand_i ;
  assign \u0.lsu_opcode_ra_idx_w  = \u0.u_csr.opcode_opcode_i [19:15];
  assign \u0.lsu_opcode_pc_w  = \u0.u_exec.opcode_pc_i ;
  assign \u0.lsu_opcode_opcode_w  = \u0.u_csr.opcode_opcode_i ;
  assign \u0.lsu_opcode_invalid_w  = 1'h0;
  assign \u0.intr_i  = intr_i;
  assign \u0.interrupt_inhibit_w  = \u0.u_csr.interrupt_inhibit_i ;
  assign \u0.ifence_w  = \u0.u_csr.ifence_q ;
  assign \u0.fetch_valid_w  = \u0.u_decode.genblk1.u_dec.valid_i ;
  assign \u0.fetch_pc_w  = \u0.u_exec.opcode_pc_i ;
  assign \u0.fetch_instr_w  = \u0.u_csr.opcode_opcode_i ;
  assign \u0.fetch_instr_rd_valid_w  = \u0.u_decode.genblk1.u_dec.rd_valid_o ;
  assign \u0.fetch_instr_mul_w  = \u0.u_decode.genblk1.u_dec.mul_o ;
  assign \u0.fetch_instr_lsu_w  = \u0.u_decode.genblk1.u_dec.lsu_o ;
  assign \u0.fetch_instr_invalid_w  = \u0.u_decode.genblk1.u_dec.invalid_w ;
  assign \u0.fetch_instr_exec_w  = \u0.u_decode.genblk1.u_dec.exec_o ;
  assign \u0.fetch_instr_div_w  = \u0.u_decode.genblk1.u_dec.div_o ;
  assign \u0.fetch_instr_csr_w  = \u0.u_decode.genblk1.u_dec.csr_o ;
  assign \u0.fetch_instr_branch_w  = \u0.u_decode.genblk1.u_dec.branch_o ;
  assign \fifo_i_pc.out1  = \fifo_i_pc.r1 ;
  assign \u0.fetch_in_fault_w  = 1'h0;
  assign \u0.fetch_fault_page_w  = \u0.u_decode.fetch_in_fault_page_i ;
  assign \u0.fetch_fault_fetch_w  = \u0.u_decode.fetch_in_fault_fetch_i ;
  assign \u0.fetch_dec_valid_w  = \u0.u_decode.genblk1.u_dec.valid_i ;
  assign \u0.fetch_dec_pc_w  = \u0.u_exec.opcode_pc_i ;
  assign \u0.fetch_dec_instr_w  = \u0.u_decode.fetch_in_instr_i ;
  assign \fifo_i_pc.rst  = rst_i;
  assign \u0.fetch_dec_fault_page_w  = \u0.u_decode.fetch_in_fault_page_i ;
  assign \u0.fetch_dec_fault_fetch_w  = \u0.u_decode.fetch_in_fault_fetch_i ;
  assign \u0.fetch_dec_accept_w  = \u0.u_fetch.fetch_accept_i ;
  assign \u0.fetch_accept_w  = \u0.u_fetch.fetch_accept_i ;
  assign \u0.exec_opcode_valid_w  = \u0.u_div.opcode_valid_i ;
  assign \u0.exec_hold_w  = \u0.u_exec.hold_i ;
  assign \u0.div_opcode_valid_w  = \u0.u_div.opcode_valid_i ;
  assign \u0.csr_writeback_write_w  = \u0.u_issue.u_pipe_ctrl.csr_wr_wb_q ;
  assign \u0.csr_writeback_wdata_w  = \u0.u_issue.u_pipe_ctrl.csr_wdata_wb_q ;
  assign \u0.csr_writeback_waddr_w  = \u0.u_issue.u_pipe_ctrl.opcode_wb_q [31:20];
  assign \u0.csr_writeback_exception_w  = \u0.u_issue.u_pipe_ctrl.exception_wb_q ;
  assign \u0.csr_writeback_exception_pc_w  = \u0.u_issue.u_pipe_ctrl.pc_wb_q ;
  assign \u0.csr_writeback_exception_addr_w  = \u0.u_issue.u_pipe_ctrl.result_wb_q ;
  assign \u0.csr_result_e1_write_w  = \u0.u_csr.rd_valid_e1_q ;
  assign \u0.csr_result_e1_wdata_w  = \u0.u_csr.csr_wdata_e1_q ;
  assign \u0.csr_result_e1_value_w  = \u0.u_csr.rd_result_e1_q ;
  assign \u0.csr_result_e1_exception_w  = \u0.u_csr.exception_e1_q ;
  assign \u0.csr_opcode_valid_w  = \u0.u_csr.opcode_valid_i ;
  assign \u0.csr_opcode_rd_idx_w  = \u0.u_csr.opcode_opcode_i [11:7];
  assign \u0.csr_opcode_rb_operand_w  = \u0.u_div.opcode_rb_operand_i ;
  assign \u0.csr_opcode_rb_idx_w  = \u0.u_csr.opcode_opcode_i [24:20];
  assign \u0.csr_opcode_ra_operand_w  = \u0.u_csr.opcode_ra_operand_i ;
  assign \u0.csr_opcode_ra_idx_w  = \u0.u_csr.opcode_opcode_i [19:15];
  assign \u0.csr_opcode_pc_w  = \u0.u_exec.opcode_pc_i ;
  assign \u0.csr_opcode_opcode_w  = \u0.u_csr.opcode_opcode_i ;
  assign \u0.csr_opcode_invalid_w  = \u0.u_csr.opcode_invalid_i ;
  assign \u0.cpu_id_i  = cpu_id_i;
  assign \u0.clk_i  = clk_i;
  assign \u0.branch_request_w  = \u0.u_fetch.branch_request_i ;
  assign \u0.branch_pc_w  = \u0.u_fetch.branch_pc_i ;
  assign _0038_[31:4] = 28'b000000000000000000000000000x;
  assign \u0.branch_d_exec_request_w  = \u0.u_exec.branch_d_request_o ;
  assign \u0.branch_d_exec_priv_w  = 2'h0;
  assign \u0.branch_d_exec_pc_w  = \u0.u_exec.branch_target_r ;
  assign \u0.branch_csr_request_w  = \u0.u_csr.branch_q ;
  assign \u0.branch_csr_pc_w  = \u0.u_csr.branch_target_q ;
  assign \u0.u_mul.clk_i  = clk_i;
  assign \u0.u_mul.hold_i  = \u0.u_exec.hold_i ;
  assign \u0.u_mul.opcode_invalid_i  = 1'h0;
  assign \u0.u_mul.opcode_opcode_i  = \u0.u_csr.opcode_opcode_i ;
  assign \u0.u_mul.opcode_pc_i  = \u0.u_exec.opcode_pc_i ;
  assign \u0.u_mul.opcode_ra_idx_i  = \u0.u_csr.opcode_opcode_i [19:15];
  assign \u0.u_mul.opcode_ra_operand_i  = \u0.u_csr.opcode_ra_operand_i ;
  assign \u0.u_mul.opcode_rb_idx_i  = \u0.u_csr.opcode_opcode_i [24:20];
  assign \u0.u_mul.opcode_rb_operand_i  = \u0.u_div.opcode_rb_operand_i ;
  assign \u0.u_mul.opcode_rd_idx_i  = \u0.u_csr.opcode_opcode_i [11:7];
  assign \u0.u_mul.opcode_valid_i  = \u0.u_div.opcode_valid_i ;
  assign \u0.u_mul.rst_i  = rst_i;
  assign \u0.u_mul.writeback_value_o  = \u0.u_mul.result_e2_q ;
  assign \u0.u_mmu.clk_i  = clk_i;
  assign \u0.u_mmu.fetch_in_accept_o  = mem_i_accept_i;
  assign \u0.u_mmu.fetch_in_error_o  = mem_i_error_i;
  assign \u0.u_mmu.fetch_in_fault_o  = 1'h0;
  assign \u0.u_mmu.fetch_in_flush_i  = \u0.u_csr.ifence_q ;
  assign \u0.u_mmu.fetch_in_inst_o  = mem_i_inst_i;
  assign \u0.u_mmu.fetch_in_invalidate_i  = 1'h0;
  assign \u0.u_mmu.fetch_in_pc_i  = { \u0.u_fetch.pc_f_q [31:2], 2'h0 };
  assign \u0.u_mmu.fetch_in_rd_i  = \fifo_i_pc.wr ;
  assign \u0.u_mmu.fetch_in_valid_o  = mem_i_valid_i;
  assign \u0.u_mmu.fetch_out_accept_i  = mem_i_accept_i;
  assign \u0.u_mmu.fetch_out_error_i  = mem_i_error_i;
  assign \u0.u_mmu.fetch_out_flush_o  = \u0.u_csr.ifence_q ;
  assign \u0.u_mmu.fetch_out_inst_i  = mem_i_inst_i;
  assign \u0.u_mmu.fetch_out_invalidate_o  = 1'h0;
  assign \u0.u_mmu.fetch_out_pc_o  = { \u0.u_fetch.pc_f_q [31:2], 2'h0 };
  assign \u0.u_mmu.fetch_out_rd_o  = \fifo_i_pc.wr ;
  assign \u0.u_mmu.fetch_out_valid_i  = mem_i_valid_i;
  assign \u0.u_mmu.lsu_in_accept_o  = mem_d_accept_i;
  assign \u0.u_mmu.lsu_in_ack_o  = mem_d_ack_i;
  assign \u0.u_mmu.lsu_in_addr_i  = { \u0.u_lsu.mem_addr_q [31:2], 2'h0 };
  assign \u0.u_mmu.lsu_in_cacheable_i  = \u0.u_lsu.mem_cacheable_q ;
  assign \u0.u_mmu.lsu_in_data_rd_o  = mem_d_data_rd_i;
  assign \u0.u_mmu.lsu_in_data_wr_i  = \u0.u_lsu.mem_data_wr_q ;
  assign \u0.u_mmu.lsu_in_error_o  = mem_d_error_i;
  assign \u0.u_mmu.lsu_in_flush_i  = \u0.u_lsu.mem_flush_q ;
  assign \u0.u_mmu.lsu_in_invalidate_i  = \u0.u_lsu.mem_invalidate_q ;
  assign \u0.u_mmu.lsu_in_load_fault_o  = 1'h0;
  assign \u0.u_mmu.lsu_in_rd_i  = \fifo_d_rd.in ;
  assign \u0.u_mmu.lsu_in_req_tag_i  = 11'h000;
  assign \u0.u_mmu.lsu_in_resp_tag_o  = mem_d_resp_tag_i;
  assign \u0.u_mmu.lsu_in_store_fault_o  = 1'h0;
  assign \u0.u_mmu.lsu_in_wr_i  = \fifo_d_wr.in ;
  assign \u0.u_mmu.lsu_in_writeback_i  = \u0.u_lsu.mem_writeback_q ;
  assign \u0.u_mmu.lsu_out_accept_i  = mem_d_accept_i;
  assign \u0.u_mmu.lsu_out_ack_i  = mem_d_ack_i;
  assign \u0.u_mmu.lsu_out_addr_o  = { \u0.u_lsu.mem_addr_q [31:2], 2'h0 };
  assign \u0.u_mmu.lsu_out_cacheable_o  = \u0.u_lsu.mem_cacheable_q ;
  assign \u0.u_mmu.lsu_out_data_rd_i  = mem_d_data_rd_i;
  assign \u0.u_mmu.lsu_out_data_wr_o  = \u0.u_lsu.mem_data_wr_q ;
  assign \u0.u_mmu.lsu_out_error_i  = mem_d_error_i;
  assign \u0.u_mmu.lsu_out_flush_o  = \u0.u_lsu.mem_flush_q ;
  assign \u0.u_mmu.lsu_out_invalidate_o  = \u0.u_lsu.mem_invalidate_q ;
  assign \u0.u_mmu.lsu_out_rd_o  = \fifo_d_rd.in ;
  assign \u0.u_mmu.lsu_out_req_tag_o  = 11'h000;
  assign \u0.u_mmu.lsu_out_resp_tag_i  = mem_d_resp_tag_i;
  assign \u0.u_mmu.lsu_out_wr_o  = \fifo_d_wr.in ;
  assign \u0.u_mmu.lsu_out_writeback_o  = \u0.u_lsu.mem_writeback_q ;
  assign \u0.u_mmu.mxr_i  = \u0.u_csr.u_csrfile.csr_sr_q [19];
  assign \u0.u_mmu.rst_i  = rst_i;
  assign \u0.u_mmu.satp_i  = 32'h00000000;
  assign \u0.u_mmu.sum_i  = \u0.u_csr.u_csrfile.csr_sr_q [18];
  assign \u0.u_lsu.u_lsu_request.rst_i  = rst_i;
  assign \u0.u_lsu.u_lsu_request.data_in_i  = { \u0.u_lsu.mem_addr_q , \u0.u_lsu.mem_ls_q , \u0.u_lsu.mem_xh_q , \u0.u_lsu.mem_xb_q , \u0.u_lsu.mem_load_q  };
  assign \u0.u_lsu.u_lsu_request.clk_i  = clk_i;
  assign _1293_[34:0] = { _1293_[35], _1293_[35], _1293_[35], _1293_[35], _1293_[35], _1293_[35], _1293_[35], _1293_[35], _1293_[35], _1293_[35], _1293_[35], _1293_[35], _1293_[35], _1293_[35], _1293_[35], _1293_[35], _1293_[35], _1293_[35], _1293_[35], _1293_[35], _1293_[35], _1293_[35], _1293_[35], _1293_[35], _1293_[35], _1293_[35], _1293_[35], _1293_[35], _1293_[35], _1293_[35], _1293_[35], _1293_[35], _1293_[35], _1293_[35], _1293_[35] };
  assign _1262_[34:0] = { _1262_[35], _1262_[35], _1262_[35], _1262_[35], _1262_[35], _1262_[35], _1262_[35], _1262_[35], _1262_[35], _1262_[35], _1262_[35], _1262_[35], _1262_[35], _1262_[35], _1262_[35], _1262_[35], _1262_[35], _1262_[35], _1262_[35], _1262_[35], _1262_[35], _1262_[35], _1262_[35], _1262_[35], _1262_[35], _1262_[35], _1262_[35], _1262_[35], _1262_[35], _1262_[35], _1262_[35], _1262_[35], _1262_[35], _1262_[35], _1262_[35] };
  assign _1259_[34:0] = { _1259_[35], _1259_[35], _1259_[35], _1259_[35], _1259_[35], _1259_[35], _1259_[35], _1259_[35], _1259_[35], _1259_[35], _1259_[35], _1259_[35], _1259_[35], _1259_[35], _1259_[35], _1259_[35], _1259_[35], _1259_[35], _1259_[35], _1259_[35], _1259_[35], _1259_[35], _1259_[35], _1259_[35], _1259_[35], _1259_[35], _1259_[35], _1259_[35], _1259_[35], _1259_[35], _1259_[35], _1259_[35], _1259_[35], _1259_[35], _1259_[35] };
  assign \fifo_d_wr.clk  = clk_i;
  assign \fifo_d_wr.out0  = \fifo_d_wr.r0 ;
  assign _1132_[31:16] = 16'h0000;
  assign _1133_[5] = 1'h0;
  assign _1134_[5] = 1'h0;
  assign _1135_[5] = 1'h0;
  assign _1136_[5] = 1'h0;
  assign _1137_[5] = 1'h0;
  assign \u0.u_lsu.addr_lsb_r  = \u0.u_lsu.u_lsu_request.data_out_o [5:4];
  assign \u0.u_lsu.clk_i  = clk_i;
  assign \u0.u_lsu.load_byte_r  = \u0.u_lsu.u_lsu_request.data_out_o [1];
  assign \u0.u_lsu.load_half_r  = \u0.u_lsu.u_lsu_request.data_out_o [2];
  assign \u0.u_lsu.load_signed_r  = \u0.u_lsu.u_lsu_request.data_out_o [3];
  assign \u0.u_lsu.mem_accept_i  = mem_d_accept_i;
  assign \u0.u_lsu.mem_ack_i  = mem_d_ack_i;
  assign \u0.u_lsu.mem_addr_o  = { \u0.u_lsu.mem_addr_q [31:2], 2'h0 };
  assign \u0.u_lsu.mem_cacheable_o  = \u0.u_lsu.mem_cacheable_q ;
  assign \u0.u_lsu.mem_data_rd_i  = mem_d_data_rd_i;
  assign \u0.u_lsu.mem_data_wr_o  = \u0.u_lsu.mem_data_wr_q ;
  assign \u0.u_lsu.mem_error_i  = mem_d_error_i;
  assign \u0.u_lsu.mem_flush_o  = \u0.u_lsu.mem_flush_q ;
  assign \u0.u_lsu.mem_invalidate_o  = \u0.u_lsu.mem_invalidate_q ;
  assign \u0.u_lsu.mem_load_fault_i  = 1'h0;
  assign \u0.u_lsu.mem_rd_o  = \fifo_d_rd.in ;
  assign \u0.u_lsu.mem_req_tag_o  = 11'h000;
  assign \u0.u_lsu.mem_resp_tag_i  = mem_d_resp_tag_i;
  assign \u0.u_lsu.mem_store_fault_i  = 1'h0;
  assign \u0.u_lsu.mem_wr_o  = \fifo_d_wr.in ;
  assign \u0.u_lsu.mem_writeback_o  = \u0.u_lsu.mem_writeback_q ;
  assign \u0.u_lsu.opcode_invalid_i  = 1'h0;
  assign \u0.u_lsu.opcode_opcode_i  = \u0.u_csr.opcode_opcode_i ;
  assign \u0.u_lsu.opcode_pc_i  = \u0.u_exec.opcode_pc_i ;
  assign \u0.u_lsu.opcode_ra_idx_i  = \u0.u_csr.opcode_opcode_i [19:15];
  assign \u0.u_lsu.opcode_ra_operand_i  = \u0.u_csr.opcode_ra_operand_i ;
  assign \u0.u_lsu.opcode_rb_idx_i  = \u0.u_csr.opcode_opcode_i [24:20];
  assign \u0.u_lsu.opcode_rb_operand_i  = \u0.u_div.opcode_rb_operand_i ;
  assign \u0.u_lsu.opcode_rd_idx_i  = \u0.u_csr.opcode_opcode_i [11:7];
  assign \u0.u_lsu.opcode_valid_i  = \u0.u_csr.opcode_valid_i ;
  assign \u0.u_lsu.resp_addr_w  = \u0.u_lsu.u_lsu_request.data_out_o [35:4];
  assign \u0.u_lsu.resp_byte_w  = \u0.u_lsu.u_lsu_request.data_out_o [1];
  assign \u0.u_lsu.resp_half_w  = \u0.u_lsu.u_lsu_request.data_out_o [2];
  assign \u0.u_lsu.resp_load_w  = \u0.u_lsu.u_lsu_request.data_out_o [0];
  assign \u0.u_lsu.resp_signed_w  = \u0.u_lsu.u_lsu_request.data_out_o [3];
  assign \u0.u_lsu.rst_i  = rst_i;
  assign \u0.u_lsu.stall_o  = \u0.u_issue.lsu_stall_i ;
  assign \u0.u_lsu.wb_result_r  = \u0.u_issue.u_pipe_ctrl.mem_result_e2_i ;
  assign \u0.u_lsu.writeback_exception_o  = { 1'h0, \u0.u_issue.u_pipe_ctrl.mem_exception_e2_i [4:0] };
  assign \u0.u_lsu.writeback_valid_o  = \u0.u_issue.u_pipe_ctrl.mem_complete_i ;
  assign \u0.u_lsu.writeback_value_o  = \u0.u_issue.u_pipe_ctrl.mem_result_e2_i ;
  assign \u0.u_issue.u_pipe_ctrl.take_interrupt_i  = \u0.u_csr.take_interrupt_q ;
  assign \u0.u_issue.u_pipe_ctrl.store_e1_o  = \u0.u_issue.u_pipe_ctrl.ctrl_e1_q [2];
  assign \u0.u_issue.u_pipe_ctrl.stall_o  = \u0.u_exec.hold_i ;
  assign \u0.u_issue.u_pipe_ctrl.squash_wb_i  = 1'h0;
  assign \u0.u_issue.u_pipe_ctrl.squash_e1_e2_o  = \u0.u_issue.pipe_squash_e1_e2_w ;
  assign \u0.u_issue.u_pipe_ctrl.squash_e1_e2_i  = 1'h0;
  assign \u0.u_issue.u_pipe_ctrl.rst_i  = rst_i;
  assign \u0.u_issue.u_pipe_ctrl.result_wb_o  = \u0.u_issue.u_pipe_ctrl.result_wb_q ;
  assign \u0.u_issue.u_pipe_ctrl.result_e2_r  = \u0.u_issue.pipe_result_e2_w ;
  assign \u0.u_issue.u_pipe_ctrl.result_e2_o  = \u0.u_issue.pipe_result_e2_w ;
  assign \u0.u_issue.u_pipe_ctrl.rd_wb_o  = \u0.u_issue.pipe_rd_wb_w ;
  assign \u0.u_issue.u_pipe_ctrl.rd_e2_o  = \u0.u_issue.pipe_rd_e2_w ;
  assign \u0.u_issue.u_pipe_ctrl.rd_e1_o  = \u0.u_issue.pipe_rd_e1_w ;
  assign \u0.u_issue.u_pipe_ctrl.pc_wb_o  = \u0.u_issue.u_pipe_ctrl.pc_wb_q ;
  assign \u0.u_issue.u_pipe_ctrl.pc_e1_o  = \u0.u_issue.u_pipe_ctrl.pc_e1_q ;
  assign \u0.u_issue.u_pipe_ctrl.operand_rb_wb_q  = \u0.u_issue.pipe_rb_val_wb_w ;
  assign \u0.u_issue.u_pipe_ctrl.operand_rb_wb_o  = \u0.u_issue.pipe_rb_val_wb_w ;
  assign \u0.u_issue.u_pipe_ctrl.operand_rb_e1_q  = \u0.u_issue.pipe_operand_rb_e1_w ;
  assign \u0.u_issue.u_pipe_ctrl.operand_rb_e1_o  = \u0.u_issue.pipe_operand_rb_e1_w ;
  assign \u0.u_issue.u_pipe_ctrl.operand_ra_wb_q  = \u0.u_issue.pipe_ra_val_wb_w ;
  assign \u0.u_issue.u_pipe_ctrl.operand_ra_wb_o  = \u0.u_issue.pipe_ra_val_wb_w ;
  assign \u0.u_issue.u_pipe_ctrl.operand_ra_e1_q  = \u0.u_issue.pipe_operand_ra_e1_w ;
  assign \u0.u_issue.u_pipe_ctrl.operand_ra_e1_o  = \u0.u_issue.pipe_operand_ra_e1_w ;
  assign \u0.u_issue.u_pipe_ctrl.opcode_wb_o  = \u0.u_issue.u_pipe_ctrl.opcode_wb_q ;
  assign \u0.u_issue.u_pipe_ctrl.opcode_e1_o  = \u0.u_issue.u_pipe_ctrl.opcode_e1_q ;
  assign \u0.u_issue.u_pipe_ctrl.mul_result_e2_i  = \u0.u_mul.result_e2_q ;
  assign \u0.u_issue.u_pipe_ctrl.mul_e2_o  = \u0.u_issue.u_pipe_ctrl.ctrl_e2_q [5];
  assign \u0.u_issue.u_pipe_ctrl.mul_e1_o  = \u0.u_issue.u_pipe_ctrl.ctrl_e1_q [5];
  assign \u0.u_issue.u_pipe_ctrl.mem_exception_e2_i [5] = 1'h0;
  assign \u0.u_issue.u_pipe_ctrl.load_e2_o  = \u0.u_issue.u_pipe_ctrl.ctrl_e2_q [1];
  assign \u0.u_issue.u_pipe_ctrl.load_e1_o  = \u0.u_issue.u_pipe_ctrl.ctrl_e1_q [1];
  assign \u0.u_issue.u_pipe_ctrl.issue_valid_i  = \u0.u_div.opcode_valid_i ;
  assign \u0.u_issue.u_pipe_ctrl.issue_stall_i  = \u0.u_exec.hold_i ;
  assign \u0.u_issue.u_pipe_ctrl.issue_rd_valid_i  = \u0.u_decode.genblk1.u_dec.rd_valid_o ;
  assign \u0.u_issue.u_pipe_ctrl.issue_rd_i  = \u0.u_csr.opcode_opcode_i [11:7];
  assign \u0.u_issue.u_pipe_ctrl.issue_pc_i  = \u0.u_exec.opcode_pc_i ;
  assign \u0.u_issue.u_pipe_ctrl.issue_operand_rb_i  = \u0.u_div.opcode_rb_operand_i ;
  assign \u0.u_issue.u_pipe_ctrl.issue_operand_ra_i  = \u0.u_csr.opcode_ra_operand_i ;
  assign \u0.u_issue.u_pipe_ctrl.issue_opcode_i  = \u0.u_csr.opcode_opcode_i ;
  assign \u0.u_issue.u_pipe_ctrl.issue_mul_i  = \u0.u_decode.genblk1.u_dec.mul_o ;
  assign \u0.u_issue.u_pipe_ctrl.issue_lsu_i  = \u0.u_decode.genblk1.u_dec.lsu_o ;
  assign \u0.u_issue.u_pipe_ctrl.issue_exception_i  = { 1'h0, \u0.u_issue.issue_fault_w  };
  assign \u0.u_issue.u_pipe_ctrl.issue_div_i  = \u0.u_decode.genblk1.u_dec.div_o ;
  assign \u0.u_issue.u_pipe_ctrl.issue_csr_i  = \u0.u_decode.genblk1.u_dec.csr_o ;
  assign \u0.u_issue.u_pipe_ctrl.issue_branch_target_i  = \u0.u_exec.branch_target_r ;
  assign \u0.u_issue.u_pipe_ctrl.issue_branch_taken_i  = \u0.u_exec.branch_d_request_o ;
  assign \u0.u_issue.u_pipe_ctrl.issue_branch_i  = \u0.u_decode.genblk1.u_dec.branch_o ;
  assign \u0.u_issue.u_pipe_ctrl.issue_accept_i  = \u0.u_div.opcode_valid_i ;
  assign \u0.u_issue.u_pipe_ctrl.exception_wb_o  = \u0.u_issue.u_pipe_ctrl.exception_wb_q ;
  assign \u0.u_issue.u_pipe_ctrl.div_result_i  = \u0.u_div.wb_result_q ;
  assign \u0.u_issue.u_pipe_ctrl.div_e1_w  = \u0.u_issue.u_pipe_ctrl.ctrl_e1_q [4];
  assign \u0.u_issue.u_pipe_ctrl.div_complete_i  = \u0.u_div.valid_q ;
  assign \u0.u_issue.u_pipe_ctrl.csr_write_wb_o  = \u0.u_issue.u_pipe_ctrl.csr_wr_wb_q ;
  assign \u0.u_issue.u_pipe_ctrl.csr_wdata_wb_o  = \u0.u_issue.u_pipe_ctrl.csr_wdata_wb_q ;
  assign \u0.u_issue.u_pipe_ctrl.csr_wb_o  = \u0.u_issue.pipe_csr_wb_w ;
  assign \u0.u_issue.u_pipe_ctrl.csr_waddr_wb_o  = \u0.u_issue.u_pipe_ctrl.opcode_wb_q [31:20];
  assign \u0.u_issue.u_pipe_ctrl.csr_result_write_e1_i  = \u0.u_csr.rd_valid_e1_q ;
  assign \u0.u_issue.u_pipe_ctrl.csr_result_wdata_e1_i  = \u0.u_csr.csr_wdata_e1_q ;
  assign \u0.u_issue.u_pipe_ctrl.csr_result_value_e1_i  = \u0.u_csr.rd_result_e1_q ;
  assign \u0.u_issue.u_pipe_ctrl.csr_result_exception_e1_i  = \u0.u_csr.exception_e1_q ;
  assign \u0.u_issue.u_pipe_ctrl.csr_e1_w  = \u0.u_issue.u_pipe_ctrl.ctrl_e1_q [3];
  assign \u0.u_issue.u_pipe_ctrl.clk_i  = clk_i;
  assign \u0.u_issue.u_pipe_ctrl.branch_e1_o  = \u0.u_issue.u_pipe_ctrl.ctrl_e1_q [6];
  assign \u0.u_issue.u_pipe_ctrl.alu_result_e1_i  = \u0.u_exec.result_q ;
  assign \u0.u_issue.u_pipe_ctrl.alu_e1_w  = \u0.u_issue.u_pipe_ctrl.ctrl_e1_q [0];
  assign \fifo_d_wr.r1  = \fifo_d_wr.out1 [2:0];
  assign \fifo_d_wr.rst  = rst_i;
  assign \fifo_d_wr.wr  = \fifo_d_data_wr.wr ;
  assign \fifo_d_rd.clk  = clk_i;
  assign _0833_[5] = 1'h0;
  assign \fifo_d_rd.out0  = \fifo_d_rd.r0 ;
  assign \fifo_d_rd.out1  = \fifo_d_rd.r1 ;
  assign \u0.u_issue.u_regfile.rst_i  = rst_i;
  assign \u0.u_issue.u_regfile.rd0_value_i  = \u0.u_issue.u_pipe_ctrl.result_wb_q ;
  assign \u0.u_issue.u_regfile.rd0_i  = \u0.u_issue.pipe_rd_wb_w ;
  assign \u0.u_issue.u_regfile.rb0_value_o  = \u0.u_issue.issue_rb_value_w ;
  assign \u0.u_issue.u_regfile.rb0_i  = \u0.u_csr.opcode_opcode_i [24:20];
  assign \u0.u_issue.u_regfile.ra0_value_o  = \u0.u_issue.issue_ra_value_w ;
  assign \u0.u_issue.u_regfile.ra0_i  = \u0.u_csr.opcode_opcode_i [19:15];
  assign \u0.u_issue.u_regfile.clk_i  = clk_i;
  assign \u0.u_issue.u_regfile.REGFILE.x9_s1_w  = \u0.u_issue.u_regfile.REGFILE.reg_r9_q ;
  assign \u0.u_issue.u_regfile.REGFILE.x8_s0_w  = \u0.u_issue.u_regfile.REGFILE.reg_r8_q ;
  assign \u0.u_issue.u_regfile.REGFILE.x7_t2_w  = \u0.u_issue.u_regfile.REGFILE.reg_r7_q ;
  assign \u0.u_issue.u_regfile.REGFILE.x6_t1_w  = \u0.u_issue.u_regfile.REGFILE.reg_r6_q ;
  assign \u0.u_issue.u_regfile.REGFILE.x5_t0_w  = \u0.u_issue.u_regfile.REGFILE.reg_r5_q ;
  assign \u0.u_issue.u_regfile.REGFILE.x4_tp_w  = \u0.u_issue.u_regfile.REGFILE.reg_r4_q ;
  assign \u0.u_issue.u_regfile.REGFILE.x3_gp_w  = \u0.u_issue.u_regfile.REGFILE.reg_r3_q ;
  assign \u0.u_issue.u_regfile.REGFILE.x31_t6_w  = \u0.u_issue.u_regfile.REGFILE.reg_r31_q ;
  assign \u0.u_issue.u_regfile.REGFILE.x30_t5_w  = \u0.u_issue.u_regfile.REGFILE.reg_r30_q ;
  assign \u0.u_issue.u_regfile.REGFILE.x2_sp_w  = \u0.u_issue.u_regfile.REGFILE.reg_r2_q ;
  assign \u0.u_issue.u_regfile.REGFILE.x29_t4_w  = \u0.u_issue.u_regfile.REGFILE.reg_r29_q ;
  assign \u0.u_issue.u_regfile.REGFILE.x28_t3_w  = \u0.u_issue.u_regfile.REGFILE.reg_r28_q ;
  assign \u0.u_issue.u_regfile.REGFILE.x27_s11_w  = \u0.u_issue.u_regfile.REGFILE.reg_r27_q ;
  assign \u0.u_issue.u_regfile.REGFILE.x26_s10_w  = \u0.u_issue.u_regfile.REGFILE.reg_r26_q ;
  assign \u0.u_issue.u_regfile.REGFILE.x25_s9_w  = \u0.u_issue.u_regfile.REGFILE.reg_r25_q ;
  assign \u0.u_issue.u_regfile.REGFILE.x24_s8_w  = \u0.u_issue.u_regfile.REGFILE.reg_r24_q ;
  assign \u0.u_issue.u_regfile.REGFILE.x23_s7_w  = \u0.u_issue.u_regfile.REGFILE.reg_r23_q ;
  assign \u0.u_issue.u_regfile.REGFILE.x22_s6_w  = \u0.u_issue.u_regfile.REGFILE.reg_r22_q ;
  assign \u0.u_issue.u_regfile.REGFILE.x21_s5_w  = \u0.u_issue.u_regfile.REGFILE.reg_r21_q ;
  assign \u0.u_issue.u_regfile.REGFILE.x20_s4_w  = \u0.u_issue.u_regfile.REGFILE.reg_r20_q ;
  assign \u0.u_issue.u_regfile.REGFILE.x1_ra_w  = \u0.u_issue.u_regfile.REGFILE.reg_r1_q ;
  assign \u0.u_issue.u_regfile.REGFILE.x19_s3_w  = \u0.u_issue.u_regfile.REGFILE.reg_r19_q ;
  assign \u0.u_issue.u_regfile.REGFILE.x18_s2_w  = \u0.u_issue.u_regfile.REGFILE.reg_r18_q ;
  assign \u0.u_issue.u_regfile.REGFILE.x17_a7_w  = \u0.u_issue.u_regfile.REGFILE.reg_r17_q ;
  assign \u0.u_issue.u_regfile.REGFILE.x16_a6_w  = \u0.u_issue.u_regfile.REGFILE.reg_r16_q ;
  assign \u0.u_issue.u_regfile.REGFILE.x15_a5_w  = \u0.u_issue.u_regfile.REGFILE.reg_r15_q ;
  assign \u0.u_issue.u_regfile.REGFILE.x14_a4_w  = \u0.u_issue.u_regfile.REGFILE.reg_r14_q ;
  assign \u0.u_issue.u_regfile.REGFILE.x13_a3_w  = \u0.u_issue.u_regfile.REGFILE.reg_r13_q ;
  assign \u0.u_issue.u_regfile.REGFILE.x12_a2_w  = \u0.u_issue.u_regfile.REGFILE.reg_r12_q ;
  assign \u0.u_issue.u_regfile.REGFILE.x11_a1_w  = \u0.u_issue.u_regfile.REGFILE.reg_r11_q ;
  assign \u0.u_issue.u_regfile.REGFILE.x10_a0_w  = \u0.u_issue.u_regfile.REGFILE.reg_r10_q ;
  assign \u0.u_issue.u_regfile.REGFILE.x0_zero_w  = 32'h00000000;
  assign \u0.u_issue.u_regfile.REGFILE.rb0_value_r  = \u0.u_issue.issue_rb_value_w ;
  assign \u0.u_issue.u_regfile.REGFILE.ra0_value_r  = \u0.u_issue.issue_ra_value_w ;
  assign _0761_[5] = 1'h0;
  assign \u0.u_issue.branch_csr_pc_i  = \u0.u_csr.branch_target_q ;
  assign \u0.u_issue.branch_csr_request_i  = \u0.u_csr.branch_q ;
  assign \u0.u_issue.branch_d_exec_pc_i  = \u0.u_exec.branch_target_r ;
  assign \u0.u_issue.branch_d_exec_priv_i  = 2'h0;
  assign \u0.u_issue.branch_d_exec_request_i  = \u0.u_exec.branch_d_request_o ;
  assign \fifo_pc_out.clk  = clk_i;
  assign \u0.u_issue.branch_pc_o  = \u0.u_fetch.branch_pc_i ;
  assign \fifo_pc_out.in  = { \u0.u_fetch.pc_f_q [31:2], 2'h0 };
  assign \u0.u_issue.branch_request_o  = \u0.u_fetch.branch_request_i ;
  assign \u0.u_issue.clk_i  = clk_i;
  assign \u0.u_issue.csr_opcode_invalid_o  = \u0.u_csr.opcode_invalid_i ;
  assign \u0.u_issue.csr_opcode_opcode_o  = \u0.u_csr.opcode_opcode_i ;
  assign \u0.u_issue.csr_opcode_pc_o  = \u0.u_exec.opcode_pc_i ;
  assign \u0.u_issue.csr_opcode_ra_idx_o  = \u0.u_csr.opcode_opcode_i [19:15];
  assign \u0.u_issue.csr_opcode_ra_operand_o  = \u0.u_csr.opcode_ra_operand_i ;
  assign \u0.u_issue.csr_opcode_rb_idx_o  = \u0.u_csr.opcode_opcode_i [24:20];
  assign \u0.u_issue.csr_opcode_rb_operand_o  = \u0.u_div.opcode_rb_operand_i ;
  assign \u0.u_issue.csr_opcode_rd_idx_o  = \u0.u_csr.opcode_opcode_i [11:7];
  assign \u0.u_issue.csr_opcode_valid_o  = \u0.u_csr.opcode_valid_i ;
  assign \u0.u_issue.csr_result_e1_exception_i  = \u0.u_csr.exception_e1_q ;
  assign \u0.u_issue.csr_result_e1_value_i  = \u0.u_csr.rd_result_e1_q ;
  assign \u0.u_issue.csr_result_e1_wdata_i  = \u0.u_csr.csr_wdata_e1_q ;
  assign \u0.u_issue.csr_result_e1_write_i  = \u0.u_csr.rd_valid_e1_q ;
  assign \u0.u_issue.csr_writeback_exception_addr_o  = \u0.u_issue.u_pipe_ctrl.result_wb_q ;
  assign \u0.u_issue.csr_writeback_exception_o  = \u0.u_issue.u_pipe_ctrl.exception_wb_q ;
  assign \u0.u_issue.csr_writeback_exception_pc_o  = \u0.u_issue.u_pipe_ctrl.pc_wb_q ;
  assign \u0.u_issue.csr_writeback_waddr_o  = \u0.u_issue.u_pipe_ctrl.opcode_wb_q [31:20];
  assign \u0.u_issue.csr_writeback_wdata_o  = \u0.u_issue.u_pipe_ctrl.csr_wdata_wb_q ;
  assign \u0.u_issue.csr_writeback_write_o  = \u0.u_issue.u_pipe_ctrl.csr_wr_wb_q ;
  assign \u0.u_issue.div_opcode_valid_o  = \u0.u_div.opcode_valid_i ;
  assign \u0.u_issue.enable_mul_bypass_w  = 1'h1;
  assign \u0.u_issue.enable_muldiv_w  = 1'h1;
  assign \u0.u_issue.exec_hold_o  = \u0.u_exec.hold_i ;
  assign \u0.u_issue.exec_opcode_valid_o  = \u0.u_div.opcode_valid_i ;
  assign \u0.u_issue.fetch_accept_o  = \u0.u_fetch.fetch_accept_i ;
  assign \u0.u_issue.fetch_fault_fetch_i  = \u0.u_decode.fetch_in_fault_fetch_i ;
  assign \u0.u_issue.fetch_fault_page_i  = \u0.u_decode.fetch_in_fault_page_i ;
  assign \u0.u_issue.fetch_instr_branch_i  = \u0.u_decode.genblk1.u_dec.branch_o ;
  assign \u0.u_issue.fetch_instr_csr_i  = \u0.u_decode.genblk1.u_dec.csr_o ;
  assign \u0.u_issue.fetch_instr_div_i  = \u0.u_decode.genblk1.u_dec.div_o ;
  assign \u0.u_issue.fetch_instr_exec_i  = \u0.u_decode.genblk1.u_dec.exec_o ;
  assign \u0.u_issue.fetch_instr_i  = \u0.u_csr.opcode_opcode_i ;
  assign \u0.u_issue.fetch_instr_invalid_i  = \u0.u_decode.genblk1.u_dec.invalid_w ;
  assign \u0.u_issue.fetch_instr_lsu_i  = \u0.u_decode.genblk1.u_dec.lsu_o ;
  assign \u0.u_issue.fetch_instr_mul_i  = \u0.u_decode.genblk1.u_dec.mul_o ;
  assign \u0.u_issue.fetch_instr_rd_valid_i  = \u0.u_decode.genblk1.u_dec.rd_valid_o ;
  assign \u0.u_issue.fetch_pc_i  = \u0.u_exec.opcode_pc_i ;
  assign \u0.u_issue.fetch_valid_i  = \u0.u_decode.genblk1.u_dec.valid_i ;
  assign \u0.u_issue.interrupt_inhibit_o  = \u0.u_csr.interrupt_inhibit_i ;
  assign \u0.u_issue.issue_branch_w  = \u0.u_decode.genblk1.u_dec.branch_o ;
  assign \u0.u_issue.issue_csr_w  = \u0.u_decode.genblk1.u_dec.csr_o ;
  assign \u0.u_issue.issue_div_w  = \u0.u_decode.genblk1.u_dec.div_o ;
  assign \u0.u_issue.issue_exec_w  = \u0.u_decode.genblk1.u_dec.exec_o ;
  assign \u0.u_issue.issue_invalid_w  = \u0.u_decode.genblk1.u_dec.invalid_w ;
  assign \u0.u_issue.issue_lsu_w  = \u0.u_decode.genblk1.u_dec.lsu_o ;
  assign \u0.u_issue.issue_mul_w  = \u0.u_decode.genblk1.u_dec.mul_o ;
  assign \u0.u_issue.issue_ra_idx_w  = \u0.u_csr.opcode_opcode_i [19:15];
  assign \u0.u_issue.issue_ra_value_r  = \u0.u_csr.opcode_ra_operand_i ;
  assign \u0.u_issue.issue_rb_idx_w  = \u0.u_csr.opcode_opcode_i [24:20];
  assign \u0.u_issue.issue_rb_value_r  = \u0.u_div.opcode_rb_operand_i ;
  assign \u0.u_issue.issue_rd_idx_w  = \u0.u_csr.opcode_opcode_i [11:7];
  assign \u0.u_issue.issue_sb_alloc_w  = \u0.u_decode.genblk1.u_dec.rd_valid_o ;
  assign \u0.u_issue.lsu_opcode_invalid_o  = 1'h0;
  assign \u0.u_issue.lsu_opcode_opcode_o  = \u0.u_csr.opcode_opcode_i ;
  assign \u0.u_issue.lsu_opcode_pc_o  = \u0.u_exec.opcode_pc_i ;
  assign \u0.u_issue.lsu_opcode_ra_idx_o  = \u0.u_csr.opcode_opcode_i [19:15];
  assign \u0.u_issue.lsu_opcode_ra_operand_o  = \u0.u_csr.opcode_ra_operand_i ;
  assign \u0.u_issue.lsu_opcode_rb_idx_o  = \u0.u_csr.opcode_opcode_i [24:20];
  assign \u0.u_issue.lsu_opcode_rb_operand_o  = \u0.u_div.opcode_rb_operand_i ;
  assign \u0.u_issue.lsu_opcode_rd_idx_o  = \u0.u_csr.opcode_opcode_i [11:7];
  assign \u0.u_issue.lsu_opcode_valid_o  = \u0.u_csr.opcode_valid_i ;
  assign \u0.u_issue.mul_hold_o  = \u0.u_exec.hold_i ;
  assign \u0.u_issue.mul_opcode_invalid_o  = 1'h0;
  assign \u0.u_issue.mul_opcode_opcode_o  = \u0.u_csr.opcode_opcode_i ;
  assign \u0.u_issue.mul_opcode_pc_o  = \u0.u_exec.opcode_pc_i ;
  assign \u0.u_issue.mul_opcode_ra_idx_o  = \u0.u_csr.opcode_opcode_i [19:15];
  assign \u0.u_issue.mul_opcode_ra_operand_o  = \u0.u_csr.opcode_ra_operand_i ;
  assign \u0.u_issue.mul_opcode_rb_idx_o  = \u0.u_csr.opcode_opcode_i [24:20];
  assign \u0.u_issue.mul_opcode_rb_operand_o  = \u0.u_div.opcode_rb_operand_i ;
  assign \u0.u_issue.mul_opcode_rd_idx_o  = \u0.u_csr.opcode_opcode_i [11:7];
  assign \u0.u_issue.mul_opcode_valid_o  = \u0.u_div.opcode_valid_i ;
  assign \u0.u_issue.opcode_accept_r  = \u0.u_div.opcode_valid_i ;
  assign \u0.u_issue.opcode_invalid_o  = 1'h0;
  assign \u0.u_issue.opcode_issue_r  = \u0.u_div.opcode_valid_i ;
  assign \u0.u_issue.opcode_opcode_o  = \u0.u_csr.opcode_opcode_i ;
  assign \u0.u_issue.opcode_pc_o  = \u0.u_exec.opcode_pc_i ;
  assign \u0.u_issue.opcode_ra_idx_o  = \u0.u_csr.opcode_opcode_i [19:15];
  assign \u0.u_issue.opcode_ra_operand_o  = \u0.u_csr.opcode_ra_operand_i ;
  assign \u0.u_issue.opcode_rb_idx_o  = \u0.u_csr.opcode_opcode_i [24:20];
  assign \u0.u_issue.opcode_rb_operand_o  = \u0.u_div.opcode_rb_operand_i ;
  assign \u0.u_issue.opcode_rd_idx_o  = \u0.u_csr.opcode_opcode_i [11:7];
  assign \u0.u_issue.pipe_branch_e1_w  = \u0.u_issue.u_pipe_ctrl.ctrl_e1_q [6];
  assign \u0.u_issue.pipe_exception_wb_w  = \u0.u_issue.u_pipe_ctrl.exception_wb_q ;
  assign \u0.u_issue.pipe_load_e1_w  = \u0.u_issue.u_pipe_ctrl.ctrl_e1_q [1];
  assign \u0.u_issue.pipe_load_e2_w  = \u0.u_issue.u_pipe_ctrl.ctrl_e2_q [1];
  assign \u0.u_issue.pipe_mul_e1_w  = \u0.u_issue.u_pipe_ctrl.ctrl_e1_q [5];
  assign \u0.u_issue.pipe_mul_e2_w  = \u0.u_issue.u_pipe_ctrl.ctrl_e2_q [5];
  assign \u0.u_issue.pipe_opc_wb_w  = \u0.u_issue.u_pipe_ctrl.opcode_wb_q ;
  assign \u0.u_issue.pipe_opcode_e1_w  = \u0.u_issue.u_pipe_ctrl.opcode_e1_q ;
  assign \u0.u_issue.pipe_pc_e1_w  = \u0.u_issue.u_pipe_ctrl.pc_e1_q ;
  assign \u0.u_issue.pipe_pc_wb_w  = \u0.u_issue.u_pipe_ctrl.pc_wb_q ;
  assign \u0.u_issue.pipe_result_wb_w  = \u0.u_issue.u_pipe_ctrl.result_wb_q ;
  assign \u0.u_issue.pipe_stall_raw_w  = \u0.u_exec.hold_i ;
  assign \u0.u_issue.pipe_store_e1_w  = \u0.u_issue.u_pipe_ctrl.ctrl_e1_q [2];
  assign \u0.u_issue.pipe_valid_wb_w  = \u0.u_issue.u_pipe_ctrl.valid_wb_o ;
  assign \fifo_d_rd.rst  = rst_i;
  assign \u0.u_issue.rst_i  = rst_i;
  assign \u0.u_issue.squash_w  = \u0.u_issue.pipe_squash_e1_e2_w ;
  assign \u0.u_issue.stall_w  = \u0.u_exec.hold_i ;
  assign \u0.u_issue.take_interrupt_i  = \u0.u_csr.take_interrupt_q ;
  assign \u0.u_issue.writeback_div_valid_i  = \u0.u_div.valid_q ;
  assign \u0.u_issue.writeback_div_value_i  = \u0.u_div.wb_result_q ;
  assign \u0.u_issue.writeback_exec_value_i  = \u0.u_exec.result_q ;
  assign \u0.u_issue.writeback_mem_exception_i  = { 1'h0, \u0.u_issue.u_pipe_ctrl.mem_exception_e2_i [4:0] };
  assign \u0.u_issue.writeback_mem_valid_i  = \u0.u_issue.u_pipe_ctrl.mem_complete_i ;
  assign \u0.u_issue.writeback_mem_value_i  = \u0.u_issue.u_pipe_ctrl.mem_result_e2_i ;
  assign \u0.u_issue.writeback_mul_value_i  = \u0.u_mul.result_e2_q ;
  assign \fifo_d_rd.wr  = \fifo_d_rd.in ;
  assign \u0.u_fetch.branch_pc_w  = \u0.u_fetch.branch_pc_q ;
  assign \fifo_pc_out.out0  = \fifo_pc_out.r0 ;
  assign \fifo_pc_out.out1  = \fifo_pc_out.r1 ;
  assign \u0.u_fetch.branch_w  = \u0.u_fetch.branch_q ;
  assign \u0.u_fetch.clk_i  = clk_i;
  assign \u0.u_fetch.fetch_fault_fetch_o  = \u0.u_decode.fetch_in_fault_fetch_i ;
  assign \u0.u_fetch.fetch_fault_page_o  = \u0.u_decode.fetch_in_fault_page_i ;
  assign \fifo_pc_out.rst  = rst_i;
  assign \fifo_pc_out.wr  = \fifo_i_pc.wr ;
  assign \u0.u_fetch.fetch_instr_o  = \u0.u_decode.fetch_in_instr_i ;
  assign \u0.u_fetch.fetch_invalidate_i  = \u0.u_csr.ifence_q ;
  assign \u0.u_fetch.fetch_pc_o  = \u0.u_exec.opcode_pc_i ;
  assign \u0.u_fetch.fetch_valid_o  = \u0.u_decode.genblk1.u_dec.valid_i ;
  assign \u0.u_fetch.icache_accept_i  = mem_i_accept_i;
  assign \u0.u_fetch.icache_error_i  = mem_i_error_i;
  assign \u0.u_fetch.icache_flush_o  = \u0.u_csr.ifence_q ;
  assign \u0.u_fetch.icache_inst_i  = mem_i_inst_i;
  assign \u0.u_fetch.icache_invalidate_o  = 1'h0;
  assign \u0.u_fetch.icache_invalidate_q  = 1'h0;
  assign \u0.u_fetch.icache_page_fault_i  = 1'h0;
  assign \u0.u_fetch.icache_pc_o  = { \u0.u_fetch.pc_f_q [31:2], 2'h0 };
  assign \u0.u_fetch.icache_pc_w  = \u0.u_fetch.pc_f_q ;
  assign \u0.u_fetch.icache_rd_o  = \fifo_i_pc.wr ;
  assign \u0.u_fetch.icache_valid_i  = mem_i_valid_i;
  assign \u0.u_fetch.rst_i  = rst_i;
  assign \u0.u_fetch.squash_decode_o  = \u0.u_fetch.branch_request_i ;
  assign \u0.u_exec.u_alu.result_r  = \u0.u_exec.alu_p_w ;
  assign \u0.u_exec.u_alu.alu_p_o  = \u0.u_exec.alu_p_w ;
  assign \u0.u_exec.u_alu.alu_op_i  = \u0.u_exec.alu_func_r ;
  assign \u0.u_exec.u_alu.alu_b_i  = \u0.u_exec.alu_input_b_r ;
  assign \u0.u_exec.u_alu.alu_a_i  = \u0.u_exec.alu_input_a_r ;
  assign _0710_[31:1] = 31'h00000000;
  assign _0709_[31:1] = 31'h00000000;
  assign _0700_[1] = _0694_;
  assign _0693_[31:1] = 31'h00000000;
  assign \fifo_d_data_wr.clk  = clk_i;
  assign \fifo_d_data_wr.in  = \u0.u_lsu.mem_data_wr_q ;
  assign \fifo_d_data_wr.out0  = \fifo_d_data_wr.r0 ;
  assign \fifo_d_data_wr.out1  = \fifo_d_data_wr.r1 ;
  assign \fifo_d_data_wr.rst  = rst_i;
  assign \fifo_d_addr.clk  = clk_i;
  assign \fifo_d_addr.in  = { \u0.u_lsu.mem_addr_q [31:2], 2'h0 };
  assign \fifo_d_addr.out0  = \fifo_d_addr.r0 ;
  assign \u0.u_exec.bimm_r  = { \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [7], \u0.u_csr.opcode_opcode_i [30:25], \u0.u_csr.opcode_opcode_i [11:8], 1'h0 };
  assign \fifo_d_addr.out1  = \fifo_d_addr.r1 ;
  assign \u0.u_exec.branch_d_pc_o  = \u0.u_exec.branch_target_r ;
  assign \u0.u_exec.branch_d_priv_o  = 2'h0;
  assign \fifo_i_rd.clk  = clk_i;
  assign \fifo_i_rd.in  = \fifo_i_pc.wr ;
  assign \fifo_i_rd.out0  = \fifo_i_rd.r0 ;
  assign \fifo_i_rd.out1  = \fifo_i_rd.r1 ;
  assign \fifo_i_rd.rst  = rst_i;
  assign \fifo_i_rd.wr  = \fifo_i_pc.wr ;
  assign \u0.u_exec.clk_i  = clk_i;
  assign \u0.u_exec.greater_than_signed$func$../../core/riscv/riscv_exec.v:362$760.v  = 32'hxxxxxxxx;
  assign \u0.u_exec.greater_than_signed$func$../../core/riscv/riscv_exec.v:362$760.x  = 32'hxxxxxxxx;
  assign \u0.u_exec.greater_than_signed$func$../../core/riscv/riscv_exec.v:362$760.y  = 32'hxxxxxxxx;
  assign \u0.u_exec.imm12_r  = { \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31:20] };
  assign \u0.u_exec.imm20_r  = { \u0.u_csr.opcode_opcode_i [31:12], 12'h000 };
  assign \u0.u_exec.jimm20_r  = { \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [31], \u0.u_csr.opcode_opcode_i [19:12], \u0.u_csr.opcode_opcode_i [20], \u0.u_csr.opcode_opcode_i [30:21], 1'h0 };
  assign \u0.u_exec.less_than_signed$func$../../core/riscv/riscv_exec.v:357$759.v  = 32'hxxxxxxxx;
  assign \u0.u_exec.less_than_signed$func$../../core/riscv/riscv_exec.v:357$759.x  = 32'hxxxxxxxx;
  assign \u0.u_exec.less_than_signed$func$../../core/riscv/riscv_exec.v:357$759.y  = 32'hxxxxxxxx;
  assign \u0.u_exec.opcode_invalid_i  = 1'h0;
  assign \u0.u_exec.opcode_opcode_i  = \u0.u_csr.opcode_opcode_i ;
  assign \u0.u_exec.opcode_ra_idx_i  = \u0.u_csr.opcode_opcode_i [19:15];
  assign \u0.u_exec.opcode_ra_operand_i  = \u0.u_csr.opcode_ra_operand_i ;
  assign \u0.u_exec.opcode_rb_idx_i  = \u0.u_csr.opcode_opcode_i [24:20];
  assign \u0.u_exec.opcode_rb_operand_i  = \u0.u_div.opcode_rb_operand_i ;
  assign \u0.u_exec.opcode_rd_idx_i  = \u0.u_csr.opcode_opcode_i [11:7];
  assign \u0.u_exec.opcode_valid_i  = \u0.u_div.opcode_valid_i ;
  assign \u0.u_exec.rst_i  = rst_i;
  assign \u0.u_exec.shamt_r  = \u0.u_csr.opcode_opcode_i [24:20];
  assign \u0.u_exec.writeback_value_o  = \u0.u_exec.result_q ;
  assign \u0.u_div.clk_i  = clk_i;
  assign \u0.u_div.opcode_invalid_i  = 1'h0;
  assign \u0.u_div.opcode_opcode_i  = \u0.u_csr.opcode_opcode_i ;
  assign \u0.u_div.opcode_pc_i  = \u0.u_exec.opcode_pc_i ;
  assign \u0.u_div.opcode_ra_idx_i  = \u0.u_csr.opcode_opcode_i [19:15];
  assign \u0.u_div.opcode_ra_operand_i  = \u0.u_csr.opcode_ra_operand_i ;
  assign \u0.u_div.opcode_rb_idx_i  = \u0.u_csr.opcode_opcode_i [24:20];
  assign \u0.u_div.opcode_rd_idx_i  = \u0.u_csr.opcode_opcode_i [11:7];
  assign \u0.u_div.rst_i  = rst_i;
  assign \u0.u_div.writeback_valid_o  = \u0.u_div.valid_q ;
  assign \u0.u_div.writeback_value_o  = \u0.u_div.wb_result_q ;
  assign \u0.u_decode.genblk1.u_dec.opcode_i  = \u0.u_csr.opcode_opcode_i ;
  assign \u0.u_decode.genblk1.u_dec.invalid_o  = \u0.u_decode.genblk1.u_dec.invalid_w ;
  assign \u0.u_decode.genblk1.u_dec.enable_muldiv_i  = 1'h1;
  assign \u0.u_decode.clk_i  = clk_i;
  assign \u0.u_decode.enable_muldiv_w  = 1'h1;
  assign \u0.u_decode.fetch_in_accept_o  = \u0.u_fetch.fetch_accept_i ;
  assign \u0.u_decode.fetch_in_pc_i  = \u0.u_exec.opcode_pc_i ;
  assign \u0.u_decode.fetch_in_valid_i  = \u0.u_decode.genblk1.u_dec.valid_i ;
  assign \u0.u_decode.fetch_out_accept_i  = \u0.u_fetch.fetch_accept_i ;
  assign \u0.u_decode.fetch_out_fault_fetch_o  = \u0.u_decode.fetch_in_fault_fetch_i ;
  assign \u0.u_decode.fetch_out_fault_page_o  = \u0.u_decode.fetch_in_fault_page_i ;
  assign \u0.u_decode.fetch_out_instr_branch_o  = \u0.u_decode.genblk1.u_dec.branch_o ;
  assign \u0.u_decode.fetch_out_instr_csr_o  = \u0.u_decode.genblk1.u_dec.csr_o ;
  assign \u0.u_decode.fetch_out_instr_div_o  = \u0.u_decode.genblk1.u_dec.div_o ;
  assign \u0.u_decode.fetch_out_instr_exec_o  = \u0.u_decode.genblk1.u_dec.exec_o ;
  assign \u0.u_decode.fetch_out_instr_invalid_o  = \u0.u_decode.genblk1.u_dec.invalid_w ;
  assign \u0.u_decode.fetch_out_instr_lsu_o  = \u0.u_decode.genblk1.u_dec.lsu_o ;
  assign \u0.u_decode.fetch_out_instr_mul_o  = \u0.u_decode.genblk1.u_dec.mul_o ;
  assign \u0.u_decode.fetch_out_instr_o  = \u0.u_csr.opcode_opcode_i ;
  assign \u0.u_decode.fetch_out_instr_rd_valid_o  = \u0.u_decode.genblk1.u_dec.rd_valid_o ;
  assign \u0.u_decode.fetch_out_pc_o  = \u0.u_exec.opcode_pc_i ;
  assign \u0.u_decode.fetch_out_valid_o  = \u0.u_decode.genblk1.u_dec.valid_i ;
  assign \u0.u_decode.genblk1.fetch_in_instr_w  = \u0.u_csr.opcode_opcode_i ;
  assign \u0.u_decode.rst_i  = rst_i;
  assign \u0.u_decode.squash_decode_i  = \u0.u_fetch.branch_request_i ;
  assign \u0.u_csr.u_csrfile.timer_intr_i  = 1'h0;
  assign \u0.u_csr.u_csrfile.status_o  = \u0.u_csr.u_csrfile.csr_sr_q ;
  assign \u0.u_csr.u_csrfile.satp_o  = 32'h00000000;
  assign \u0.u_csr.u_csrfile.rst_i  = rst_i;
  assign \u0.u_csr.u_csrfile.rdata_r  = \u0.u_csr.csr_rdata_w ;
  assign \u0.u_csr.u_csrfile.priv_o  = { \u0.u_csr.u_csrfile.csr_mpriv_q [0], \u0.u_csr.u_csrfile.csr_mpriv_q [0] };
  assign \u0.u_csr.u_csrfile.misa_i  = 32'h40001100;
  assign \u0.u_csr.u_csrfile.irq_priv_r  = 2'h3;
  assign \u0.u_csr.u_csrfile.irq_masked_r  = \u0.u_csr.interrupt_w ;
  assign \u0.u_csr.u_csrfile.interrupt_o  = \u0.u_csr.interrupt_w ;
  assign \u0.u_csr.u_csrfile.ext_intr_i  = intr_i;
  assign \u0.u_csr.u_csrfile.exception_s_w  = 1'h0;
  assign \u0.u_csr.u_csrfile.exception_pc_i  = \u0.u_issue.u_pipe_ctrl.pc_wb_q ;
  assign \u0.u_csr.u_csrfile.exception_i  = \u0.u_issue.u_pipe_ctrl.exception_wb_q ;
  assign \u0.u_csr.u_csrfile.exception_addr_i  = \u0.u_issue.u_pipe_ctrl.result_wb_q ;
  assign \u0.u_csr.u_csrfile.csr_wdata_i  = \u0.u_issue.u_pipe_ctrl.csr_wdata_wb_q ;
  assign \u0.u_csr.u_csrfile.csr_target_o  = \u0.u_csr.csr_target_w ;
  assign \u0.u_csr.u_csrfile.csr_stvec_q  = 32'h00000000;
  assign \u0.u_csr.u_csrfile.csr_sepc_q  = 32'h00000000;
  assign \u0.u_csr.u_csrfile.csr_satp_q  = 32'h00000000;
  assign \u0.u_csr.u_csrfile.csr_ren_i  = \u0.u_csr.opcode_valid_i ;
  assign \u0.u_csr.u_csrfile.csr_rdata_o  = \u0.u_csr.csr_rdata_w ;
  assign \u0.u_csr.u_csrfile.csr_raddr_i  = \u0.u_csr.opcode_opcode_i [31:20];
  assign \u0.u_csr.u_csrfile.csr_mpriv_q [1] = \u0.u_csr.u_csrfile.csr_mpriv_q [0];
  assign { \u0.u_csr.u_csrfile.csr_mip_next_r [31:12], \u0.u_csr.u_csrfile.csr_mip_next_r [10:8], \u0.u_csr.u_csrfile.csr_mip_next_r [6:0] } = { \u0.u_csr.u_csrfile.csr_mip_next_q [31:12], \u0.u_csr.u_csrfile.csr_mip_next_q [10:8], \u0.u_csr.u_csrfile.csr_mip_next_q [6:0] };
  assign \u0.u_csr.u_csrfile.csr_mideleg_q  = 32'h00000000;
  assign \u0.u_csr.u_csrfile.csr_branch_o  = \u0.u_csr.csr_branch_w ;
  assign \u0.u_csr.u_csrfile.cpu_id_i  = cpu_id_i;
  assign \u0.u_csr.u_csrfile.clk_i  = clk_i;
  assign \u0.u_csr.u_csrfile.branch_target_r  = \u0.u_csr.csr_target_w ;
  assign \u0.u_csr.u_csrfile.branch_r  = \u0.u_csr.csr_branch_w ;
  assign \fifo_d_addr.rst  = rst_i;
  assign \u0.u_csr.branch_csr_pc_o  = \u0.u_csr.branch_target_q ;
  assign \u0.u_csr.branch_csr_request_o  = \u0.u_csr.branch_q ;
  assign \u0.u_csr.clk_i  = clk_i;
  assign \u0.u_csr.cpu_id_i  = cpu_id_i;
  assign \u0.u_csr.csr_fault_r  = 1'h0;
  assign \u0.u_csr.csr_priv_r  = \u0.u_csr.opcode_opcode_i [29:28];
  assign \u0.u_csr.csr_result_e1_exception_o  = \u0.u_csr.exception_e1_q ;
  assign \u0.u_csr.csr_result_e1_value_o  = \u0.u_csr.rd_result_e1_q ;
  assign \u0.u_csr.csr_result_e1_wdata_o  = \u0.u_csr.csr_wdata_e1_q ;
  assign \u0.u_csr.csr_result_e1_write_o  = \u0.u_csr.rd_valid_e1_q ;
  assign \u0.u_csr.csr_writeback_exception_addr_i  = \u0.u_issue.u_pipe_ctrl.result_wb_q ;
  assign \u0.u_csr.csr_writeback_exception_i  = \u0.u_issue.u_pipe_ctrl.exception_wb_q ;
  assign \u0.u_csr.csr_writeback_exception_pc_i  = \u0.u_issue.u_pipe_ctrl.pc_wb_q ;
  assign \u0.u_csr.csr_writeback_waddr_i  = \u0.u_issue.u_pipe_ctrl.opcode_wb_q [31:20];
  assign \u0.u_csr.csr_writeback_wdata_i  = \u0.u_issue.u_pipe_ctrl.csr_wdata_wb_q ;
  assign \u0.u_csr.csr_writeback_write_i  = \u0.u_issue.u_pipe_ctrl.csr_wr_wb_q ;
  assign \u0.u_csr.current_priv_w  = { \u0.u_csr.u_csrfile.csr_mpriv_q [0], \u0.u_csr.u_csrfile.csr_mpriv_q [0] };
  assign \u0.u_csr.ifence_o  = \u0.u_csr.ifence_q ;
  assign \u0.u_csr.intr_i  = intr_i;
  assign \u0.u_csr.misa_w  = 32'h40001100;
  assign \u0.u_csr.mmu_mxr_o  = \u0.u_csr.u_csrfile.csr_sr_q [19];
  assign \u0.u_csr.mmu_satp_o  = 32'h00000000;
  assign \u0.u_csr.mmu_sum_o  = \u0.u_csr.u_csrfile.csr_sr_q [18];
  assign \u0.u_csr.opcode_pc_i  = \u0.u_exec.opcode_pc_i ;
  assign \u0.u_csr.opcode_ra_idx_i  = \u0.u_csr.opcode_opcode_i [19:15];
  assign \u0.u_csr.opcode_rb_idx_i  = \u0.u_csr.opcode_opcode_i [24:20];
  assign \u0.u_csr.opcode_rb_operand_i  = \u0.u_div.opcode_rb_operand_i ;
  assign \u0.u_csr.opcode_rd_idx_i  = \u0.u_csr.opcode_opcode_i [11:7];
  assign \u0.u_csr.reset_vector_i  = reset_vector_i;
  assign \u0.u_csr.rst_i  = rst_i;
  assign \u0.u_csr.satp_reg_w  = 32'h00000000;
  assign \u0.u_csr.status_reg_w  = \u0.u_csr.u_csrfile.csr_sr_q ;
  assign \u0.u_csr.take_interrupt_o  = \u0.u_csr.take_interrupt_q ;
  assign \u0.u_csr.timer_irq_w  = 1'h0;
  assign \fifo_i_pc.clk  = clk_i;
  assign mem_d_addr_o = { \u0.u_lsu.mem_addr_q [31:2], 2'h0 };
  assign mem_d_addr_o_fifo0 = \fifo_d_addr.r0 ;
  assign mem_d_addr_o_fifo1 = \fifo_d_addr.r1 ;
  assign mem_d_cacheable_o = \u0.u_lsu.mem_cacheable_q ;
  assign mem_d_data_wr_o = \u0.u_lsu.mem_data_wr_q ;
  assign mem_d_data_wr_o_fifo0 = \fifo_d_data_wr.r0 ;
  assign mem_d_data_wr_o_fifo1 = \fifo_d_data_wr.r1 ;
  assign mem_d_flush_o = \u0.u_lsu.mem_flush_q ;
  assign mem_d_invalidate_o = \u0.u_lsu.mem_invalidate_q ;
  assign mem_d_rd_o = \fifo_d_rd.in ;
  assign mem_d_rd_o_fifo0 = \fifo_d_rd.r0 ;
  assign mem_d_rd_o_fifo1 = \fifo_d_rd.r1 ;
  assign mem_d_req_tag_o = 11'h000;
  assign mem_d_wr_o = \fifo_d_wr.in ;
  assign mem_d_wr_o_fifo0 = \fifo_d_wr.r0 ;
  assign mem_d_wr_o_fifo1 = \fifo_d_wr.out1 ;
  assign mem_d_writeback_o = \u0.u_lsu.mem_writeback_q ;
  assign mem_i_flush_o = \u0.u_csr.ifence_q ;
  assign mem_i_invalidate_o = 1'h0;
  assign mem_i_pc_o = { \u0.u_fetch.pc_f_q [31:2], 2'h0 };
  assign mem_i_pc_o_fifo0 = \fifo_i_pc.r0 ;
  assign mem_i_pc_o_fifo1 = \fifo_i_pc.r1 ;
  assign mem_i_rd_o = \fifo_i_pc.wr ;
  assign mem_i_rd_o_fifo0 = \fifo_i_rd.r0 ;
  assign mem_i_rd_o_fifo1 = \fifo_i_rd.r1 ;
  assign pc_f_q_out = { \u0.u_fetch.pc_f_q [31:2], 2'h0 };
  assign pc_f_q_out_fifo0 = \fifo_pc_out.r0 ;
  assign pc_f_q_out_fifo1 = \fifo_pc_out.r1 ;
  assign wr_d_addr = \fifo_d_addr.wr ;
  assign wr_d_data_wr = \fifo_d_data_wr.wr ;
  assign wr_d_rd = \fifo_d_rd.in ;
  assign wr_i_rd = \fifo_i_pc.wr ;
endmodule
