module S(clk, in, out);
  wire [7:0] _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  input clk;
  input [7:0] in;
  output [7:0] out;
  reg [7:0] out;
  always @(posedge clk)
      out <= _00_;
  wire [5:0] fangyuan0;
  assign fangyuan0 = { _06_, _05_, _04_, _03_, _02_, _01_ };

  always @(out or fangyuan0) begin
    casez (fangyuan0)
      6'b?????1 :
        _00_ = 8'b10101010 ;
      6'b????1? :
        _00_ = 8'b11110010 ;
      6'b???1?? :
        _00_ = 8'b01111011 ;
      6'b??1??? :
        _00_ = 8'b01110111 ;
      6'b?1???? :
        _00_ = 8'b01111100 ;
      6'b1????? :
        _00_ = 8'b01100011 ;
      default:
        _00_ = out ;
    endcase
  end
  assign _01_ = in == 3'h5;
  assign _02_ = in == 3'h4;
  assign _03_ = in == 2'h3;
  assign _04_ = in == 2'h2;
  assign _05_ = in == 1'h1;
  assign _06_ = ! in;
endmodule
