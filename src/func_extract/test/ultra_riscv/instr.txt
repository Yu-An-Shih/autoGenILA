#1:
(1)
//mem_i_inst_i = 24'b0+8'h13+32'h000010b7 LUI
// ADD
//mem_i_inst_i = 7'b0+5'h2+5'h3+3'b0+5'h1+5'hc+2'b11
// JAL
//               31-12 11-7 6-2   1-0
mem_i_inst_i = 20'hx+5'h1+5'h1b+2'b11
// BEQ
//mem_i_inst_i = 7'hx+5'h1+5'h2+3'h0+5'hx+5'h18+2'h3
// lb
//mem_i_inst_i = 12'hx+5'h2+3'h0+5'h1+5'h0+2'h3
//mem_i_inst_i = 12'h2+5'h2+3'h0+5'h1+5'h0+2'h3
rst_i = 0
mem_i_accept_i = 1
mem_i_valid_i = 1
mem_i_error_i = 0
intr_i = 0
reset_vector_i = 32'h80000000
cpu_id_i = 0
mem_d_data_rd_i = x
mem_d_accept_i = 1
// The following is special
mem_d_ack_i = 1
mem_d_error_i = 0
mem_d_resp_tag_i = x
R:
\u_fetch.pc_f_q
\u_fetch.pc_d_q
\u_issue.u_regfile.REGFILE.reg_r10_q
\u_issue.u_regfile.REGFILE.reg_r11_q
\u_issue.u_regfile.REGFILE.reg_r12_q
\u_issue.u_regfile.REGFILE.reg_r13_q
\u_issue.u_regfile.REGFILE.reg_r14_q
\u_issue.u_regfile.REGFILE.reg_r15_q
\u_issue.u_regfile.REGFILE.reg_r16_q
\u_issue.u_regfile.REGFILE.reg_r17_q
\u_issue.u_regfile.REGFILE.reg_r18_q
\u_issue.u_regfile.REGFILE.reg_r19_q
\u_issue.u_regfile.REGFILE.reg_r1_q 
\u_issue.u_regfile.REGFILE.reg_r20_q
\u_issue.u_regfile.REGFILE.reg_r21_q
\u_issue.u_regfile.REGFILE.reg_r22_q
\u_issue.u_regfile.REGFILE.reg_r23_q
\u_issue.u_regfile.REGFILE.reg_r24_q
\u_issue.u_regfile.REGFILE.reg_r25_q
\u_issue.u_regfile.REGFILE.reg_r26_q
\u_issue.u_regfile.REGFILE.reg_r27_q
\u_issue.u_regfile.REGFILE.reg_r28_q
\u_issue.u_regfile.REGFILE.reg_r29_q
\u_issue.u_regfile.REGFILE.reg_r2_q 
\u_issue.u_regfile.REGFILE.reg_r30_q
\u_issue.u_regfile.REGFILE.reg_r31_q
\u_issue.u_regfile.REGFILE.reg_r3_q 
\u_issue.u_regfile.REGFILE.reg_r4_q 
\u_issue.u_regfile.REGFILE.reg_r5_q 
\u_issue.u_regfile.REGFILE.reg_r6_q 
\u_issue.u_regfile.REGFILE.reg_r7_q 
\u_issue.u_regfile.REGFILE.reg_r8_q 
\u_issue.u_regfile.REGFILE.reg_r9_q 
W:
//jal: \u_decode.fetch_in_instr_i(skip) 1
//jal: \u_issue.issue_ra_idx_w(skip) 1
//jal: \u_exec.u_alu.alu_a_i(skip) 1

//\u_lsu.u_lsu_request.data_in_i(skip) 2
//\u_lsu.u_lsu_request.ram_q[0](skip) 3 
//\u_lsu.opcode_opcode_i(skip) 1
//\u_lsu.req_lb_w(skip) 1
//\u_lsu.mem_xb_q(skip) 2
//\u_lsu.load_byte_r(skip) 3 is one

//\u_lsu.wb_result_r(skip) 3
//\u_issue.u_pipe_ctrl.result_wb_q(skip) 4

//\u_exec.u_alu.alu_op_i(skip) 1
//\u_fetch.branch_pc_w(skip) 2
\u_fetch.pc_f_q(skip) 4
//\u_exec.result_q(skip) 2
//\u_exec.alu_p_w(skip) 1
//\u_exec.u_alu.alu_b_i(skip) 1
//opcode_opcode_w(skip) 1

// jal: \u_issue.u_regfile.REGFILE.reg_r1_q(skip) 5

//\u_frontend.u_decode.fetch_in_instr_i(skip) 1
//\u_frontend.u_decode.fetch_in_instr_i(skip) 2
//\u_frontend.u_decode.fetch_in_valid_i(skip) 1
//\u_frontend.u_decode.u_fifo.pc_q[0](skip) 1
//\u_frontend.u_decode.u_fifo.pc_q[0](skip) 2
//\u_frontend.u_decode.u_fifo.ram_q[0](skip) 1
//\u_frontend.u_decode.u_fifo.ram_q[0](skip) 2
//\u_exec0.jimm20_r(skip) 2
$NOP:
mem_i_inst_i = 25'b0+5'b00100+2'b11
rst_i = 0
mem_i_accept_i = 1
mem_i_valid_i = 1
mem_i_error_i = 0
intr_i = 0
reset_vector_i = 32'h80000000
cpu_id_i = 0
mem_d_data_rd_i = x
mem_d_accept_i = 1
// The following is special
mem_d_ack_i = 1
mem_d_error_i = 0
mem_d_resp_tag_i = x
