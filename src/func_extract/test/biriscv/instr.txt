#1:
(1)
//mem_i_inst_i = 24'b0+8'h13+32'h000010b7 LUI
//mem_i_inst_i = 24'b0+8'h13+7'b0+5'h2+5'h3+3'b0+5'h1+5'hc+2'b11 ADD
mem_i_inst_i = 24'b0+8'h13+20'h1+5'h1+5'h1b+2'b11
rst_i = 0
mem_i_accept_i = 1
mem_i_valid_i = 1
mem_i_error_i = 0
intr_i = 0
reset_vector_i = 32'h80000000
cpu_id_i = 0
mem_d_data_rd_i = x
mem_d_accept_i = 1
mem_d_ack_i = 0
mem_d_error_i = 0
mem_d_resp_tag_i = x
(2)
mem_i_inst_i = 24'b0+8'h13+20'h1+5'h1+5'h1b+2'b11
rst_i = 0
mem_i_accept_i = 1
mem_i_valid_i = 1
mem_i_error_i = 0
intr_i = 0
reset_vector_i = 32'h80000000
cpu_id_i = 0
mem_d_data_rd_i = x
mem_d_accept_i = 1
mem_d_ack_i = 0
mem_d_error_i = 0
mem_d_resp_tag_i = x
R:
\u_frontend.u_decode.u_fifo.pc_q[0]
//\u_frontend.u_decode.u_fifo.ram_q[0]
//\u_frontend.u_decode.u_fifo.pc_q[1]
//\u_frontend.u_decode.u_fifo.count_q
//\u_frontend.u_decode.u_fifo.ram_q[1]
//\u_issue.u_regfile.REGFILE.reg_r2_q
//\u_issue.u_regfile.REGFILE.reg_r9_q
//\u_issue.u_regfile.REGFILE.reg_r31_q
//\u_issue.u_regfile.REGFILE.reg_r18_q
//\u_issue.u_regfile.REGFILE.reg_r8_q
//\u_issue.u_regfile.REGFILE.reg_r29_q
//\u_issue.u_regfile.REGFILE.reg_r4_q
//\u_issue.u_regfile.REGFILE.reg_r7_q
//\u_issue.u_regfile.REGFILE.reg_r6_q
//\u_issue.u_regfile.REGFILE.reg_r5_q
//\u_issue.u_regfile.REGFILE.reg_r1_q
//\u_issue.u_regfile.REGFILE.reg_r3_q
//\u_issue.u_regfile.REGFILE.reg_r16_q
//\u_issue.u_regfile.REGFILE.reg_r25_q
//\u_issue.u_regfile.REGFILE.reg_r19_q
//\u_issue.u_regfile.REGFILE.reg_r30_q
//\u_issue.u_regfile.REGFILE.reg_r24_q
//\u_issue.u_regfile.REGFILE.reg_r10_q
//\u_issue.u_regfile.REGFILE.reg_r11_q
//\u_issue.u_regfile.REGFILE.reg_r27_q
//\u_issue.u_regfile.REGFILE.reg_r28_q
//\u_issue.u_regfile.REGFILE.reg_r26_q
//\u_issue.u_regfile.REGFILE.reg_r23_q
//\u_issue.u_regfile.REGFILE.reg_r15_q
//\u_issue.u_regfile.REGFILE.reg_r14_q
//\u_issue.u_regfile.REGFILE.reg_r17_q
//\u_issue.u_regfile.REGFILE.reg_r22_q
//\u_issue.u_regfile.REGFILE.reg_r13_q
//\u_issue.u_regfile.REGFILE.reg_r21_q
//\u_issue.u_regfile.REGFILE.reg_r20_q
//\u_issue.u_regfile.REGFILE.reg_r12_q
\u_frontend.u_npc.BRANCH_PREDICTION.btb_pc_q[1]
\u_frontend.u_npc.BRANCH_PREDICTION.ras_index_real_q
\u_csr.u_csrfile.csr_sr_q
\u_csr.u_csrfile.csr_mepc_q
\u_csr.u_csrfile.csr_mtval_q
\u_frontend.u_npc.BRANCH_PREDICTION.btb_is_call_q[1]
\u_frontend.u_npc.BRANCH_PREDICTION.btb_target_q[1]
\u_frontend.u_npc.BRANCH_PREDICTION.ras_index_q
\u_frontend.u_npc.BRANCH_PREDICTION.ras_stack_q[1]
\u_frontend.u_npc.BRANCH_PREDICTION.bht_sat_q[0]
\u_frontend.u_npc.BRANCH_PREDICTION.ras_stack_q[2]
\u_frontend.u_npc.BRANCH_PREDICTION.btb_pc_q[0]
\u_frontend.u_npc.BRANCH_PREDICTION.bht_sat_q[2]
\u_frontend.u_npc.BRANCH_PREDICTION.ras_stack_q[3]
\u_frontend.u_npc.BRANCH_PREDICTION.bht_sat_q[4]
\u_frontend.u_npc.BRANCH_PREDICTION.btb_is_call_q[0]
\u_frontend.u_npc.BRANCH_PREDICTION.btb_target_q[0]
\u_frontend.u_npc.BRANCH_PREDICTION.ras_stack_q[4]
\u_frontend.u_npc.BRANCH_PREDICTION.ras_stack_q[5]
\u_frontend.u_npc.BRANCH_PREDICTION.bht_sat_q[6]
\u_frontend.u_npc.BRANCH_PREDICTION.ras_stack_q[7]
\u_frontend.u_npc.BRANCH_PREDICTION.ras_stack_q[6]
\u_frontend.u_npc.BRANCH_PREDICTION.btb_pc_q[2]
\u_frontend.u_npc.BRANCH_PREDICTION.btb_pc_q[4]
\u_frontend.u_npc.BRANCH_PREDICTION.btb_pc_q[5]
\u_frontend.u_npc.BRANCH_PREDICTION.btb_pc_q[6]
\u_frontend.u_npc.BRANCH_PREDICTION.btb_target_q[7]
\u_frontend.u_npc.BRANCH_PREDICTION.btb_is_call_q[7]
\u_frontend.u_npc.BRANCH_PREDICTION.btb_target_q[4]
\u_frontend.u_npc.BRANCH_PREDICTION.ras_stack_q[0]
\u_issue.pc_x_q
\u_issue.u_pipe0_ctrl.opcode_e1_q
\u_issue.u_pipe0_ctrl.opcode_e2_q
\u_issue.u_pipe0_ctrl.opcode_wb_q
W:
\u_issue.pc_x_q(skip) 3
//\u_frontend.u_decode.fetch_in_instr_i(skip) 1
//\u_frontend.u_decode.fetch_in_instr_i(skip) 2
//\u_frontend.u_decode.fetch_in_valid_i(skip) 1
//\u_frontend.u_decode.u_fifo.pc_q[0](skip) 1
//\u_frontend.u_decode.u_fifo.pc_q[0](skip) 2
//\u_frontend.u_decode.u_fifo.ram_q[0](skip) 1
//\u_frontend.u_decode.u_fifo.ram_q[0](skip) 2
//\u_exec0.jimm20_r(skip) 2
$NOP:
mem_i_inst_i = 25'b0+5'b00100+2'b11+25'b0+5'b00100+2'b11
rst_i = 0
mem_i_accept_i = 1
mem_i_valid_i = 1
mem_i_error_i = 0
intr_i = 0
reset_vector_i = 32'h80000000
cpu_id_i = 0
mem_d_data_rd_i = x
mem_d_accept_i = 1
mem_d_ack_i = 0
mem_d_error_i = 0
mem_d_resp_tag_i = x
