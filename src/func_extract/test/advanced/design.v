/* Generated by Yosys 0.8 (git sha1 UNKNOWN, clang 9.0.0 -fPIC -Os) */

(* top =  1  *)
(* src = "advanced.v:12" *)
module advanced(clk, rst, func, inWord, result);
  (* src = "advanced.v:34" *)
  wire [8:0] _00_;
  (* src = "advanced.v:34" *)
  wire [3:0] _01_;
  (* src = "advanced.v:22" *)
  wire _02_;
  wire [2:0] _03_;
  (* src = "advanced.v:24|advanced.v:137" *)
  wire [31:0] _04_;
  (* src = "advanced.v:24|advanced.v:135" *)
  wire [31:0] _05_;
  (* src = "advanced.v:24|advanced.v:135" *)
  wire [31:0] _06_;
  (* src = "advanced.v:24|advanced.v:137" *)
  wire _07_;
  (* src = "advanced.v:24|advanced.v:135" *)
  wire _08_;
  (* src = "advanced.v:24|advanced.v:135" *)
  wire _09_;
  (* src = "advanced.v:24|advanced.v:135" *)
  wire _10_;
  (* src = "advanced.v:24|advanced.v:135" *)
  wire _11_;
  (* src = "advanced.v:24|advanced.v:137" *)
  wire _12_;
  (* src = "advanced.v:24|advanced.v:137" *)
  wire [3:0] _13_;
  (* src = "advanced.v:24|advanced.v:137" *)
  wire [3:0] _14_;
  (* src = "advanced.v:13" *)
  input clk;
  (* src = "advanced.v:14" *)
  input [1:0] func;
  (* src = "advanced.v:15" *)
  input [8:0] inWord;
  (* src = "advanced.v:16" *)
  output [8:0] result;
  (* src = "advanced.v:13" *)
  input rst;
  (* src = "advanced.v:24|advanced.v:113" *)
  wire \u0.clk ;
  (* src = "advanced.v:24|advanced.v:133" *)
  reg [2:0] \u0.cnt ;
  (* src = "advanced.v:24|advanced.v:134" *)
  wire [2:0] \u0.cnt_nxt ;
  (* src = "advanced.v:24|advanced.v:116" *)
  wire [3:0] \u0.out ;
  (* src = "advanced.v:24|advanced.v:119" *)
  reg [3:0] \u0.stg1 ;
  wire [2:0] \u0.stg1_nxt ;
  (* src = "advanced.v:24|advanced.v:120" *)
  reg \u0.stg1_vld ;
  (* src = "advanced.v:24|advanced.v:124" *)
  reg [3:0] \u0.stg2 ;
  (* src = "advanced.v:24|advanced.v:123" *)
  wire [3:0] \u0.stg2_nxt ;
  (* src = "advanced.v:24|advanced.v:125" *)
  reg \u0.stg2_vld ;
  (* src = "advanced.v:24|advanced.v:129" *)
  reg [3:0] \u0.stg3 ;
  (* src = "advanced.v:24|advanced.v:128" *)
  wire [3:0] \u0.stg3_nxt ;
  (* src = "advanced.v:24|advanced.v:114" *)
  wire \u0.valid ;
  (* src = "advanced.v:24|advanced.v:115" *)
  wire [8:0] \u0.word ;
  (* src = "advanced.v:18" *)
  reg [8:0] word;
  (* src = "advanced.v:31" *)
  wire [8:0] word_in;
  (* src = "advanced.v:22" *)
  wire [8:0] word_next;
  (* src = "advanced.v:19" *)
  reg [3:0] word_sum;
  (* src = "advanced.v:20" *)
  wire [3:0] word_sum_next;
  assign _02_ = func == (* src = "advanced.v:22" *) 1'h1;
  assign \u0.valid  = func == (* src = "advanced.v:27" *) 2'h2;
  always @(posedge clk)
      word <= _00_;
  always @(posedge clk)
      word_sum <= _01_;
  assign _01_ = rst ? (* src = "advanced.v:35" *) 4'h0 : \u0.stg3 ;
  assign _00_ = rst ? (* src = "advanced.v:35" *) 9'h000 : word_next;
  assign \u0.stg2_nxt  = \u0.stg1  + (* src = "advanced.v:24|advanced.v:126" *) 4'ha;
  assign _03_ = \u0.cnt  + (* src = "advanced.v:24|advanced.v:135" *) 1'h1;
  assign _07_ = ! (* src = "advanced.v:24|advanced.v:137" *) \u0.cnt ;
  assign _08_ = \u0.cnt  >= (* src = "advanced.v:24|advanced.v:135" *) 3'h4;
  assign _09_ = \u0.cnt  > (* src = "advanced.v:24|advanced.v:135" *) 1'h0;
  assign _10_ = _09_ && (* src = "advanced.v:24|advanced.v:135" *) _11_;
  assign _11_ = \u0.cnt  < (* src = "advanced.v:24|advanced.v:135" *) 3'h4;
  always @(posedge clk)
      \u0.stg1  <= { 1'h0, \u0.stg1_nxt  };
  always @(posedge clk)
      \u0.stg1_vld  <= \u0.valid ;
  always @(posedge clk)
      \u0.stg2  <= \u0.stg2_nxt ;
  always @(posedge clk)
      \u0.stg2_vld  <= \u0.stg1_vld ;
  always @(posedge clk)
      \u0.stg3  <= \u0.stg3_nxt ;
  always @(posedge clk)
      \u0.cnt  <= \u0.cnt_nxt ;
  assign _12_ = 4'hf[$signed(_04_) +: 1];
  assign _04_ = \u0.cnt  - (* src = "advanced.v:24|advanced.v:137" *) 1'h1;
  assign _05_[2:0] = _08_ ? (* src = "advanced.v:24|advanced.v:135" *) 3'h0 : \u0.cnt ;
  assign _06_[2:0] = _10_ ? (* src = "advanced.v:24|advanced.v:135" *) _03_ : _05_[2:0];
  assign \u0.cnt_nxt  = \u0.stg2_vld  ? (* src = "advanced.v:24|advanced.v:135" *) 3'h1 : _06_[2:0];
  assign _13_ = _07_ ? (* src = "advanced.v:24|advanced.v:137" *) \u0.stg3  : _14_;
  assign \u0.stg3_nxt  = \u0.stg2_vld  ? (* src = "advanced.v:24|advanced.v:137" *) \u0.stg2  : _13_;
  assign \u0.stg1_nxt  = { \u0.word [0], \u0.word [2], \u0.word [4] } ^ (* src = "advanced.v:24|advanced.v:121" *) { \u0.word [1], \u0.word [3], \u0.word [5] };
  assign _14_ = \u0.stg3  ^ (* src = "advanced.v:24|advanced.v:137" *) _12_;
  assign word_next = _02_ ? (* src = "advanced.v:22" *) inWord : word;
  assign { word_in[8:6], \u0.word [5:0] } = \u0.valid  ? (* src = "advanced.v:31" *) word : 9'h000;
  assign result = { 5'h00, word_sum };
  assign \u0.clk  = clk;
  assign \u0.out  = \u0.stg3 ;
  assign \u0.word [8:6] = word_in[8:6];
  assign word_in[5:0] = \u0.word [5:0];
  assign word_sum_next = \u0.stg3 ;
endmodule
