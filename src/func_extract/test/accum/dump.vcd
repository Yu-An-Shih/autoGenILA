$date
	Mon Sep 28 22:26:55 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 3 ! sum [2:0] $end
$var reg 1 " clk $end
$var reg 3 # data [2:0] $end
$var reg 1 $ rst $end
$var reg 1 % start $end
$scope module u0 $end
$var wire 1 " clk $end
$var wire 3 & data [2:0] $end
$var wire 1 $ rst $end
$var wire 1 % start $end
$var wire 3 ' sum_nxt [2:0] $end
$var wire 3 ( cnt_nxt [2:0] $end
$var reg 3 ) cnt [2:0] $end
$var reg 3 * sum [2:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx *
bx )
bx (
bx '
b0 &
0%
0$
b0 #
0"
bx !
$end
#5
1"
#10
0"
1$
#15
b0 (
b0 '
b0 !
b0 *
b0 )
1"
#20
0"
#25
1"
#30
0"
0$
#35
1"
#40
b10 (
0"
1%
b10 #
b10 &
#45
b10 )
1"
#50
b1 (
b1 '
0"
0%
#55
b10 '
b0 (
b1 !
b1 *
b1 )
1"
#60
0"
#65
b10 !
b10 *
b0 )
1"
#70
0"
#75
1"
#80
0"
#85
1"
#90
0"
#95
1"
#100
0"
#105
1"
#110
0"
#115
1"
#120
0"
#125
1"
#130
0"
