#1:
(1)
// lb
mem_rdata = 12'h2+5'h2+3'h0+5'h1+5'h0+2'h3
resetn = 1
mem_ready = 1
pcpi_wr = 0
pcpi_rd = 0
pcpi_wait = 0
pcpi_ready = 0
irq = 0
(2)
mem_rdata = 12'h2+5'h2+3'h0+5'h1+5'h0+2'h3
resetn = 1
mem_ready = 1
pcpi_wr = 0
pcpi_rd = 0
pcpi_wait = 0
pcpi_ready = 0
irq = 0
(3)
mem_rdata = 12'h2+5'h2+3'h0+5'h1+5'h0+2'h3
resetn = 1
mem_ready = 1
pcpi_wr = 0
pcpi_rd = 0
pcpi_wait = 0
pcpi_ready = 0
irq = 0
R:
\cpuregs[0]
\cpuregs[1]
\cpuregs[2]
\cpuregs[3]
\cpuregs[4]
\cpuregs[5]
\cpuregs[6]
\cpuregs[7]
\cpuregs[8]
\cpuregs[9]
\cpuregs[10]
\cpuregs[11]
\cpuregs[12]
\cpuregs[13]
\cpuregs[14]
\cpuregs[15]
\cpuregs[16]
\cpuregs[17]
\cpuregs[18]
\cpuregs[19]
\cpuregs[20]
\cpuregs[21]
\cpuregs[22]
\cpuregs[23]
\cpuregs[24]
\cpuregs[25]
\cpuregs[26]
\cpuregs[27]
\cpuregs[28]
\cpuregs[29]
\cpuregs[30]
\cpuregs[31]
reg_next_pc
W:
\cpuregs[1](skip) 7
$NOP:
//mem_rdata = 25'b0+5'b00100+2'b11
mem_rdata = x
resetn = 1
// The following is special
mem_ready = 1
pcpi_wr = 0
pcpi_rd = 0
pcpi_wait = 0
pcpi_ready = 0
irq = 0

$INVAR:
pcpi_valid
decoder_pseudo_trigger
decoder_pseudo_trigger_q
decoder_trigger
decoder_trigger_q
eoi
instr_jal
instr_rdcycle
latched_is_lh
latched_is_lu
latched_stalu
mem_do_rdata
trap
compressed_instr
instr_add
instr_and
instr_beq
instr_bge
instr_bgeu
instr_blt
instr_ecall_ebreak
instr_jalr
instr_lb
instr_lbu
instr_lh
instr_lhu
instr_lw
instr_or
instr_rdcycleh
instr_rdinstr
instr_rdinstrh
instr_retirq
instr_sb
instr_sh
instr_sll
instr_slt
instr_sltu
instr_sra
instr_srl
instr_sub
instr_xor
is_alu_reg_reg
is_beq_bne_blt_bge_bltu_bgeu
is_lb_lh_lw_lbu_lhu
is_lbu_lhu_lw
is_sb_sh_sw
latched_branch
latched_compr
latched_store
mem_do_wdata
mem_wordsize
mem_wstrb
\cpuregs[0]
instr_bltu
instr_bne

$TOP:
picorv32

#CLK:clk
#RST:resetn
