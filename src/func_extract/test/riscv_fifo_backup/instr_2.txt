//// add
//#1:add
//(1)
////mem_rdata = 7'b0+5'bx+5'bx+3'h0+5'bx+5'hc+2'h3
//mem_rdata = 7'b0+5'h2+5'h3+3'h0+5'b1+5'hc+2'h3
//resetn = 1
//mem_ready = 1
//pcpi_wr = 0
//pcpi_rd = 0
//pcpi_wait = 0
//pcpi_ready = 0
//irq = 0
//(2)
////mem_rdata = 7'b0+5'bx+5'bx+3'h0+5'bx+5'hc+2'h3
//mem_rdata = 7'b0+5'h2+5'h3+3'h0+5'b1+5'hc+2'h3
//resetn = 1
//mem_ready = 1
//pcpi_wr = 0
//pcpi_rd = 0
//pcpi_wait = 0
//pcpi_ready = 0
//irq = 0
//(3)
////mem_rdata = 7'b0+5'bx+5'bx+3'h0+5'bx+5'hc+2'h3
//mem_rdata = 7'b0+5'h2+5'h3+3'h0+5'b1+5'hc+2'h3
//resetn = 1
//mem_ready = 1
//pcpi_wr = 0
//pcpi_rd = 0
//pcpi_wait = 0
//pcpi_ready = 0
//irq = 0
//
//#memAddr:\u0.mem_addr
//#delay:7
//
//W:
////\cpuregs[1](skip) 8
//// this delay must be 7 because add instruction takes 4 cycles.
//// if delay is 8, then the reg_next_pc is 9 cycles later, and 
//// it will be added by 8 instead of 4
//\u0.reg_next_pc(skip) 7



//// jal
//#10:jal
//(1)
//mem_rdata = 20'bx+5'bx+5'h1b+2'h3
////mem_rdata = 20'bx+5'b1+5'h1b+2'h3
//resetn = 1
//mem_ready = 1
//pcpi_wr = 0
//pcpi_rd = 0
//pcpi_wait = 0
//pcpi_ready = 0
//irq = 0
//(2)
//mem_rdata = 20'bx+5'bx+5'h1b+2'h3
//resetn = 1
//mem_ready = 1
//pcpi_wr = 0
//pcpi_rd = 0
//pcpi_wait = 0
//pcpi_ready = 0
//irq = 0
//(3)
//mem_rdata = 20'bx+5'bx+5'h1b+2'h3
//resetn = 1
//mem_ready = 1
//pcpi_wr = 0
//pcpi_rd = 0
//pcpi_wait = 0
//pcpi_ready = 0
//irq = 0
//
//#memAddr:\u0.mem_addr
//#delay: 5
//
//W:
//\u0.\cpuregs[10](skip) 5
//\u0.reg_next_pc(skip) 5
//\u0.mem_addr(skip) 5



// beq
#2:beq
(1)
// for brevity
mem_rdata = 7'hx+5'hx+5'hx+3'h0+5'hx+5'h18+2'h3
//mem_rdata = 7'hx+5'h1+5'h2+3'h0+5'hx+5'h18+2'h3
resetn = 1
mem_ready = 1
pcpi_wr = 0
pcpi_rd = 0
pcpi_wait = 0
pcpi_ready = 0
irq = 0
(2)
mem_rdata = 7'hx+5'hx+5'hx+3'h0+5'hx+5'h18+2'h3
resetn = 1
mem_ready = 1
pcpi_wr = 0
pcpi_rd = 0
pcpi_wait = 0
pcpi_ready = 0
irq = 0
(3)
mem_rdata = 7'hx+5'hx+5'hx+3'h0+5'hx+5'h18+2'h3
resetn = 1
mem_ready = 1
pcpi_wr = 0
pcpi_rd = 0
pcpi_wait = 0
pcpi_ready = 0
irq = 0

#memAddr:\u0.mem_addr
#delay:8

W:
\u0.reg_next_pc(skip) 8 



//// jal
//#3:jal
//(1)
//mem_rdata = 20'bx+5'bx+5'h1b+2'h3
////mem_rdata = 20'bx+5'b1+5'h1b+2'h3
//resetn = 1
//mem_ready = 1
//pcpi_wr = 0
//pcpi_rd = 0
//pcpi_wait = 0
//pcpi_ready = 0
//irq = 0
//(2)
//mem_rdata = 20'bx+5'bx+5'h1b+2'h3
//resetn = 1
//mem_ready = 1
//pcpi_wr = 0
//pcpi_rd = 0
//pcpi_wait = 0
//pcpi_ready = 0
//irq = 0
//(3)
//mem_rdata = 20'bx+5'bx+5'h1b+2'h3
//resetn = 1
//mem_ready = 1
//pcpi_wr = 0
//pcpi_rd = 0
//pcpi_wait = 0
//pcpi_ready = 0
//irq = 0
//
//#delay: 8
//
//W:
//\u0.reg_next_pc(skip) 8 
//\u0.reg_next_pc(skip) 4 


// sw
#12:sw
(1)
mem_rdata = 7'hx+5'bx+5'bx+3'h2+5'bx+5'h8+2'b11
resetn = 1
mem_ready = 1
pcpi_wr = 0
pcpi_rd = 0
pcpi_wait = 0
pcpi_ready = 0
irq = 0
(2)
mem_rdata = 7'hx+5'bx+5'bx+3'h2+5'bx+5'h8+2'b11
resetn = 1
mem_ready = 1
pcpi_wr = 0
pcpi_rd = 0
pcpi_wait = 0
pcpi_ready = 0
irq = 0
(3)
mem_rdata = 7'hx+5'bx+5'bx+3'h2+5'bx+5'h8+2'b11
resetn = 1
mem_ready = 1
pcpi_wr = 0
pcpi_rd = 0
pcpi_wait = 0
pcpi_ready = 0
irq = 0

#memAddr:\fifo_addr.r0
#delay:8
// insert additional NOPs
#extraDelay:3

W:
\u0.mem_wdata(skip) 8


// universal information

$FIFO:
\$paramod\mem_fifo\WIDTH=1:2
\$paramod\mem_fifo\WIDTH=32:2
\$paramod\mem_fifo\WIDTH=4:2


$TOP:
top

$INVAR:
\u0.pcpi_valid
\u0.decoder_pseudo_trigger
\u0.decoder_pseudo_trigger_q
\u0.decoder_trigger
\u0.eoi
\u0.latched_is_lh
\u0.latched_stalu
\u0.trap
\u0.compressed_instr
\u0.cpu_state
\u0.\cpuregs[0]
\u0.decoder_trigger_q
\u0.instr_add
\u0.instr_and
\u0.instr_beq
\u0.instr_bgeu
\u0.instr_blt
\u0.instr_bne
\u0.instr_ecall_ebreak
\u0.instr_jal
\u0.instr_jalr
\u0.instr_lb
\u0.instr_lbu
\u0.instr_lhu
\u0.instr_lw
\u0.instr_rdcycle
\u0.instr_rdcycleh
\u0.instr_rdinstr
\u0.instr_rdinstrh
\u0.instr_retirq
\u0.instr_sh
\u0.instr_sll
\u0.instr_slt
\u0.instr_sltu
\u0.instr_sra
\u0.instr_srl
\u0.instr_sub
\u0.instr_xor
\u0.is_alu_reg_reg
\u0.is_beq_bne_blt_bge_bltu_bgeu
\u0.is_lb_lh_lw_lbu_lhu
\u0.is_lbu_lhu_lw
\u0.is_sb_sh_sw
\u0.latched_branch
\u0.latched_compr
\u0.latched_is_lu
\u0.latched_store
\u0.mem_do_rdata
\u0.mem_do_rinst
\u0.mem_do_wdata
\u0.mem_instr
\u0.mem_state
\u0.mem_valid
\u0.mem_wstrb
\u0.mem_do_prefetch
\u0.mem_wordsize
\u0.instr_bge
\u0.instr_bltu
\u0.instr_lh
\u0.instr_or
\u0.instr_sb

$NOP:
mem_rdata = 25'b0+5'b00100+2'b11
resetn = 1
mem_ready = 1
pcpi_wr = 0
pcpi_rd = 0
pcpi_wait = 0
pcpi_ready = 0
irq = 0

#CLK:clk
#RST:resetn

//$issue:
//mem_valid = 1
//mem_instr = 1
//
//$display:
//cpu_state = 8'h40
//decoder_trigger = 1
