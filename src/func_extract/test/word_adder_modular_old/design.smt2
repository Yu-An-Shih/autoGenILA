; SMT-LIBv2 description generated by Yosys 0.9+1706 (git sha1 ffd6f54, clang 9.0.0 -fPIC -Os)
; yosys-smt2-module word_adder
(declare-sort |word_adder_s| 0)
(declare-fun |word_adder_is| (|word_adder_s|) Bool)
; yosys-smt2-input clk 1
; yosys-smt2-clock clk posedge
(declare-fun |word_adder#0| (|word_adder_s|) Bool) ; \clk
(define-fun |word_adder_n clk| ((state |word_adder_s|)) Bool (|word_adder#0| state))
; yosys-smt2-register counter 5
(declare-fun |word_adder#1| (|word_adder_s|) (_ BitVec 5)) ; \counter
(define-fun |word_adder_n counter| ((state |word_adder_s|)) (_ BitVec 5) (|word_adder#1| state))
; yosys-smt2-input func 2
(declare-fun |word_adder#2| (|word_adder_s|) (_ BitVec 2)) ; \func
(define-fun |word_adder_n func| ((state |word_adder_s|)) (_ BitVec 2) (|word_adder#2| state))
; yosys-smt2-input inWord 9
(declare-fun |word_adder#3| (|word_adder_s|) (_ BitVec 9)) ; \inWord
(define-fun |word_adder_n inWord| ((state |word_adder_s|)) (_ BitVec 9) (|word_adder#3| state))
; yosys-smt2-output result 9
(declare-fun |word_adder#4| (|word_adder_s|) (_ BitVec 9)) ; \word_sum
(define-fun |word_adder_n result| ((state |word_adder_s|)) (_ BitVec 9) (|word_adder#4| state))
; yosys-smt2-input rst 1
(declare-fun |word_adder#5| (|word_adder_s|) Bool) ; \rst
(define-fun |word_adder_n rst| ((state |word_adder_s|)) Bool (|word_adder#5| state))
; yosys-smt2-register word 9
(declare-fun |word_adder#6| (|word_adder_s|) (_ BitVec 9)) ; \word
(define-fun |word_adder_n word| ((state |word_adder_s|)) (_ BitVec 9) (|word_adder#6| state))
; yosys-smt2-register word_sum 9
(define-fun |word_adder_n word_sum| ((state |word_adder_s|)) (_ BitVec 9) (|word_adder#4| state))
(define-fun |word_adder#7| ((state |word_adder_s|)) Bool (= (|word_adder#2| state) #b01)) ; \_06_
(define-fun |word_adder#8| ((state |word_adder_s|)) (_ BitVec 9) (ite (|word_adder#7| state) (|word_adder#3| state) (|word_adder#6| state))) ; \word_next
(define-fun |word_adder#9| ((state |word_adder_s|)) (_ BitVec 9) (ite (|word_adder#5| state) #b000000000 (|word_adder#8| state))) ; \_01_
(define-fun |word_adder#10| ((state |word_adder_s|)) (_ BitVec 6) (bvsub (concat #b0 (|word_adder#1| state)) #b000001)) ; { \_09_ [31] \_09_ [4:0] }
(define-fun |word_adder#11| ((state |word_adder_s|)) (_ BitVec 1) ((_ extract 0 0) (ite (bvsge (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (|word_adder#10| state))))))))))))))))))))))))))) #b00000000000000000000000000000000) (bvlshr (concat #b00000000000000000000000 (|word_adder#6| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (|word_adder#10| state)))))))))))))))))))))))))))) (bvlshr (concat #b00000000000000000000000 (|word_adder#6| state)) (bvneg (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (concat ((_ extract 5 5) (|word_adder#10| state)) (|word_adder#10| state)))))))))))))))))))))))))))))))) ; \_08_
(define-fun |word_adder#12| ((state |word_adder_s|)) (_ BitVec 9) (bvadd (|word_adder#4| state) (concat #b00000000 (|word_adder#11| state)))) ; \_03_
(define-fun |word_adder#13| ((state |word_adder_s|)) Bool (bvugt (|word_adder#1| state) #b00000)) ; \running
(define-fun |word_adder#14| ((state |word_adder_s|)) (_ BitVec 9) (ite (|word_adder#13| state) (|word_adder#12| state) (|word_adder#4| state))) ; \_05_
(define-fun |word_adder#15| ((state |word_adder_s|)) Bool (= (|word_adder#2| state) #b10)) ; \_07_
(define-fun |word_adder#16| ((state |word_adder_s|)) (_ BitVec 9) (ite (|word_adder#15| state) #b000000000 (|word_adder#14| state))) ; \word_sum_next
(define-fun |word_adder#17| ((state |word_adder_s|)) (_ BitVec 9) (ite (|word_adder#5| state) #b000000000 (|word_adder#16| state))) ; \_02_
(define-fun |word_adder#18| ((state |word_adder_s|)) (_ BitVec 5) (ite (|word_adder#13| state) ((_ extract 4 0) (|word_adder#10| state)) #b00000)) ; \_04_
(define-fun |word_adder#19| ((state |word_adder_s|)) (_ BitVec 5) (ite (|word_adder#15| state) #b01000 (|word_adder#18| state))) ; \counter_next
(define-fun |word_adder#20| ((state |word_adder_s|)) (_ BitVec 5) (ite (|word_adder#5| state) #b00000 (|word_adder#19| state))) ; \_00_
(define-fun |word_adder_a| ((state |word_adder_s|)) Bool true)
(define-fun |word_adder_u| ((state |word_adder_s|)) Bool true)
(define-fun |word_adder_i| ((state |word_adder_s|)) Bool true)
(define-fun |word_adder_h| ((state |word_adder_s|)) Bool true)
(define-fun |word_adder_t| ((state |word_adder_s|) (next_state |word_adder_s|)) Bool (and
  (= (|word_adder#9| state) (|word_adder#6| next_state)) ; $procdff$21 \word
  (= (|word_adder#17| state) (|word_adder#4| next_state)) ; $procdff$20 \word_sum
  (= (|word_adder#20| state) (|word_adder#1| next_state)) ; $procdff$19 \counter
)) ; end of module word_adder
; yosys-smt2-topmod word_adder
; end of yosys output
