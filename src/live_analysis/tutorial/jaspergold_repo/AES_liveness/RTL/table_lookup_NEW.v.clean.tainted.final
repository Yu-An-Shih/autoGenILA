module table_lookup ( clk , state , INSTR_IN_ZY , zy_end_sig , rst_zy , p0 , p1 , p2 , p3 , state_R );
  input rst_zy;
  input zy_end_sig;
  integer i;
  input INSTR_IN_ZY;
  logic [7:0] b0;
  logic [7:0] b1;
  logic [7:0] b2;
  logic [7:0] b3;
  input clk;
  output [31:0] p0;
  logic [31:0] p0 ;
  output [31:0] p1;
  logic [31:0] p1 ;
  output [31:0] p2;
  logic [31:0] p2 ;
  output [31:0] p3;
  logic [31:0] p3 ;
  input [31:0] state;
  logic [31:0] state_R0 ;
// module: T
  T t0 (
    .in_T (  state_T [31:24]  ),
    .in_R (  state_R0 [31:24]  ),
    .in_S (  state_S  ),
    .out_T ( {  p0_T [23:0] , p0_T [31:24]  } ),
    .out_R0 ( {  p0_R [23:0] , p0_R [31:24]  } ),
    .out_S (  ),
    .out ( { p0[23:0], p0[31:24] } ),
    .clk ( clk ),
    .in ( state[31:24] )
  );
  assign {  p0_S , p0_S  } = 0 ;
// module: T
  T t1 (
    .in_T (  state_T [23:16]  ),
    .in_R (  state_R0 [23:16]  ),
    .in_S (  state_S  ),
    .out_T ( {  p1_T [15:0] , p1_T [31:16]  } ),
    .out_R0 ( {  p1_R [15:0] , p1_R [31:16]  } ),
    .out_S (  ),
    .out ( { p1[15:0], p1[31:16] } ),
    .clk ( clk ),
    .in ( state[23:16] )
  );
  assign {  p1_S , p1_S  } = 0 ;
// module: T
  T t2 (
    .in_T (  state_T [15:8]  ),
    .in_R (  state_R0 [15:8]  ),
    .in_S (  state_S  ),
    .out_T ( {  p2_T [7:0] , p2_T [31:8]  } ),
    .out_R0 ( {  p2_R [7:0] , p2_R [31:8]  } ),
    .out_S (  ),
    .out ( { p2[7:0], p2[31:8] } ),
    .clk ( clk ),
    .in ( state[15:8] )
  );
  assign {  p2_S , p2_S  } = 0 ;
// module: T
  T t3 (
    .in_T (  state_T [7:0]  ),
    .in_R (  state_R0 [7:0]  ),
    .in_S (  state_S  ),
    .out_T (  p3_T  ),
    .out_R0 (  p3_R  ),
    .out_S (  p3_S  ),
    .out ( p3 ),
    .clk ( clk ),
    .in ( state[7:0] )
  );
  assign b0 = state[31:24];
  assign b1 = state[23:16];
  assign b2 = state[15:8];
  assign b3 = state[7:0];
  assign state_R = ( state_R0 );
 // ground taints for floating regs
 // ground taints for unused wires
  assign { b0_R , b1_R , b2_R , b3_R , clk_R  } = 0;
 // ground taints for unused wire slices
endmodule
