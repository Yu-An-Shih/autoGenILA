module NV_NVDLA_CACC_CALC_fp_48b(nvdla_core_clk, nvdla_core_rstn, in_data, in_op, in_op_valid, in_sel, in_valid, out_final_data, out_final_valid, out_partial_data, out_partial_valid);
  wire [39:0] _000_;
  wire [7:0] _001_;
  wire _002_;
  wire [7:0] _003_;
  wire [2:0] _004_;
  wire [41:0] _005_;
  wire _006_;
  wire [39:0] _007_;
  wire [31:0] _008_;
  wire _009_;
  wire _010_;
  wire [7:0] _011_;
  wire [39:0] _012_;
  wire _013_;
  wire [6:0] _014_;
  wire [7:0] _015_;
  wire [38:0] _016_;
  wire [7:0] _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire [8:0] _023_;
  wire [44:0] _024_;
  wire [40:0] _025_;
  wire [7:0] _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire [38:0] _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire [31:0] _049_;
  wire [35:0] _050_;
  wire [39:0] _051_;
  wire [7:0] _052_;
  wire [2:0] _053_;
  wire [7:0] _054_;
  wire [7:0] _055_;
  reg [39:0] di_aligned_mant;
  wire [39:0] di_aligned_mant_nxt;
  wire [6:0] di_expm;
  wire [5:0] di_expn;
  wire [7:0] di_expo;
  wire [7:0] di_expo_shift;
  wire [5:0] di_lead_num;
  wire [35:0] di_manm;
  wire [35:0] di_mans;
  wire [35:0] di_mant;
  wire [2:0] di_mant_cut;
  wire [39:0] di_mant_cutt;
  wire [39:0] di_mant_ext;
  wire [37:0] di_mant_pre;
  wire [39:0] di_mant_shift;
  wire di_nan;
  wire [43:0] di_pd;
  wire di_sign;
  wire [7:0] expo_nrml;
  reg [7:0] expo_trans;
  reg final_sel;
  reg final_vld;
  wire [7:0] fp32_expo_nmlz;
  wire [7:0] fp32_expo_raw;
  wire [7:0] fp32_expo_round;
  wire fp32_mant_carry;
  wire [14:0] fp32_mant_cut;
  wire [23:0] fp32_mant_effect;
  wire [22:0] fp32_mant_nmlz;
  wire [22:0] fp32_mant_nmlz_tmp;
  wire fp32_mant_point5;
  wire [24:0] fp32_mant_round;
  wire [31:0] fp32_result;
  reg [7:0] in_aligned_expo;
  input [43:0] in_data;
  reg [2:0] in_mant_cut;
  wire [2:0] in_mant_cut_nxt;
  wire [47:0] in_mask_op;
  wire in_nan;
  reg in_nan_2d;
  reg in_nan_d;
  input [47:0] in_op;
  input in_op_valid;
  input in_sel;
  input in_valid;
  wire [40:0] mant_sum;
  wire mant_sum_carry_neg;
  wire mant_sum_carry_pos;
  wire [44:0] mant_sum_comp;
  wire [39:0] mant_sum_effect;
  wire mant_sum_guard;
  wire [41:0] mant_sum_ncmp;
  wire mant_sum_point5;
  wire [40:0] mant_sum_round;
  wire [43:0] mant_sum_scmp;
  wire mant_sum_sign;
  wire mant_sum_stick;
  wire [43:0] mant_sum_total;
  reg [41:0] mant_sum_trans;
  wire [7:0] max_expo;
  wire [5:0] msum_lead_num;
  reg msum_sel;
  reg msum_vld;
  input nvdla_core_clk;
  input nvdla_core_rstn;
  reg [39:0] oi_aligned_mant;
  wire [39:0] oi_aligned_mant_nxt;
  wire [7:0] oi_expn;
  wire [7:0] oi_expo;
  wire [7:0] oi_expo_shift;
  wire [39:0] oi_mans;
  wire [39:0] oi_mant;
  wire [2:0] oi_mant_cut;
  wire [39:0] oi_mant_cutt;
  wire [39:0] oi_mant_ext;
  wire [39:0] oi_mant_shift;
  wire oi_nan;
  wire [47:0] oi_pd;
  wire oi_sign;
  output [31:0] out_final_data;
  reg [31:0] out_final_data;
  output out_final_valid;
  reg out_final_valid;
  output [47:0] out_partial_data;
  output out_partial_valid;
  reg out_partial_valid;
  wire [7:0] partial_expo;
  wire [7:0] partial_expo_nmlz;
  wire [7:0] partial_expo_nmlz_neg;
  wire [7:0] partial_expo_nmlz_pos;
  wire [7:0] partial_expo_nxt;
  wire [39:0] partial_mant;
  wire [38:0] partial_mant_abs;
  wire [39:0] partial_mant_nmlz;
  wire [40:0] partial_mant_nmlz_tmp;
  wire [39:0] partial_mant_nxt;
  wire partial_nan;
  wire partial_neg2;
  wire [47:0] partial_result;
  reg [7:0] partial_result_expo;
  reg [39:0] partial_result_mant;
  wire [47:0] partial_result_out;
  wire partial_sign;
  wire [38:0] partial_umant;
  wire [9:0] partial_umant_nan;
  reg shift_sel;
  reg shift_vld;
  assign _014_ = in_data[43:38] + 6'b101111;
  assign mant_sum = $signed(di_aligned_mant) + $signed(oi_aligned_mant);
  assign _015_ = in_aligned_expo + 1'b1;
  wire [1:0] fangyuan0;
  assign fangyuan0 = { 1'b0, mant_sum_point5 };

  assign mant_sum_round = $signed(mant_sum_trans[41:2]) + $signed(fangyuan0);
  assign partial_expo_nmlz_pos = expo_trans + mant_sum_carry_pos;
  assign _016_ = _037_ + 1'b1;
  assign fp32_mant_round = partial_mant_abs[38:15] + partial_mant_abs[14];
  assign _017_ = partial_result[47:40] + 7'b1000000;
  assign fp32_expo_round = _017_ + _023_[0];
  assign _013_ = in_valid & in_sel;
  assign _006_ = shift_vld & shift_sel;
  assign _002_ = msum_vld & msum_sel;
  assign _018_ = in_valid & _031_;
  assign _019_ = shift_vld & _032_;
  assign mant_sum_point5 = mant_sum_trans[1] & _038_;
  assign _020_ = _033_ & _039_;
  assign mant_sum_carry_pos = _020_ & mant_sum_point5;
  assign _021_ = mant_sum_trans[41] & _034_;
  assign _022_ = _021_ & _040_;
  assign mant_sum_carry_neg = _022_ & mant_sum_point5;
  assign _010_ = msum_vld & _035_;
  assign _009_ = final_sel & final_vld;
  assign partial_neg2 = partial_result[39] & _036_;
  assign fp32_mant_carry = _041_ & partial_mant_abs[14];
  assign _027_ = di_expo_shift >= 6'b101000;
  assign _028_ = oi_expo_shift >= 6'b101000;
  assign _029_ = di_expo > oi_expo;
  assign _030_ = di_expo < oi_expo;
  assign _031_ = ~ in_nan;
  assign _032_ = ~ in_nan_d;
  assign _033_ = ~ mant_sum_trans[41];
  assign _034_ = ~ mant_sum_trans[40];
  assign _035_ = ~ msum_sel;
  assign _036_ = ~ _047_;
  assign _037_ = ~ partial_result[38:0];
  assign in_nan = di_nan | oi_nan;
  assign _038_ = _033_ | mant_sum_trans[0];
  assign _023_[0] = fp32_mant_carry | partial_neg2;
  always @(posedge nvdla_core_clk)
      out_final_data <= _008_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      out_final_valid <= 1'b0;
    else
      out_final_valid <= _009_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      out_partial_valid <= 1'b0;
    else
      out_partial_valid <= _010_;
  always @(posedge nvdla_core_clk)
      partial_result_mant <= _012_;
  always @(posedge nvdla_core_clk)
      partial_result_expo <= _011_;
  always @(posedge nvdla_core_clk)
      mant_sum_trans <= _005_;
  always @(posedge nvdla_core_clk)
      expo_trans <= _001_;
  always @(posedge nvdla_core_clk)
      in_aligned_expo <= _003_;
  always @(posedge nvdla_core_clk)
      in_mant_cut <= _004_;
  always @(posedge nvdla_core_clk)
      oi_aligned_mant <= _007_;
  always @(posedge nvdla_core_clk)
      di_aligned_mant <= _000_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      in_nan_2d <= 1'b0;
    else
      in_nan_2d <= in_nan_d;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      in_nan_d <= 1'b0;
    else
      in_nan_d <= in_nan;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      final_sel <= 1'b0;
    else
      final_sel <= _002_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      msum_sel <= 1'b0;
    else
      msum_sel <= _006_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      shift_sel <= 1'b0;
    else
      shift_sel <= _013_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      final_vld <= 1'b0;
    else
      final_vld <= msum_vld;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      msum_vld <= 1'b0;
    else
      msum_vld <= shift_vld;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      shift_vld <= 1'b0;
    else
      shift_vld <= in_valid;
  wire [31:0] fangyuan1;
  assign fangyuan1 = { partial_result[39], fp32_expo_nmlz, fp32_mant_nmlz };

  assign _008_ = _009_ ? fangyuan1 : out_final_data;
  assign _012_ = msum_vld ? partial_mant_nmlz : partial_result_mant;
  assign _011_ = msum_vld ? partial_expo_nxt : partial_result_expo;
  assign _005_ = shift_vld ? mant_sum_ncmp : mant_sum_trans;
  assign _001_ = _019_ ? expo_nrml : expo_trans;
  assign _003_ = _018_ ? max_expo : in_aligned_expo;
  assign _004_ = _018_ ? in_mant_cut_nxt : in_mant_cut;
  assign _007_ = in_valid ? oi_aligned_mant_nxt : oi_aligned_mant;
  assign _000_ = in_valid ? di_aligned_mant_nxt : di_aligned_mant;
  wire [5:0] fangyuan2;
  assign fangyuan2 = { in_data[38], in_data[39], in_data[40], in_data[41], in_data[42], in_data[43] };

  assign di_nan = & fangyuan2;
  wire [7:0] fangyuan3;
  assign fangyuan3 = { in_mask_op[40], in_mask_op[41], in_mask_op[42], in_mask_op[43], in_mask_op[44], in_mask_op[45], in_mask_op[46], in_mask_op[47] };

  assign oi_nan = & fangyuan3;
  wire [38:0] fangyuan4;
  assign fangyuan4 = { mant_sum_trans[2], mant_sum_trans[3], mant_sum_trans[4], mant_sum_trans[5], mant_sum_trans[6], mant_sum_trans[7], mant_sum_trans[8], mant_sum_trans[9], mant_sum_trans[10], mant_sum_trans[11], mant_sum_trans[12], mant_sum_trans[13], mant_sum_trans[14], mant_sum_trans[15], mant_sum_trans[16], mant_sum_trans[17], mant_sum_trans[18], mant_sum_trans[19], mant_sum_trans[20], mant_sum_trans[21], mant_sum_trans[22], mant_sum_trans[23], mant_sum_trans[24], mant_sum_trans[25], mant_sum_trans[26], mant_sum_trans[27], mant_sum_trans[28], mant_sum_trans[29], mant_sum_trans[30], mant_sum_trans[31], mant_sum_trans[32], mant_sum_trans[33], mant_sum_trans[34], mant_sum_trans[35], mant_sum_trans[36], mant_sum_trans[37], mant_sum_trans[38], mant_sum_trans[39], mant_sum_trans[40] };

  assign _039_ = & fangyuan4;
  wire [37:0] fangyuan5;
  assign fangyuan5 = { mant_sum_trans[2], mant_sum_trans[3], mant_sum_trans[4], mant_sum_trans[5], mant_sum_trans[6], mant_sum_trans[7], mant_sum_trans[8], mant_sum_trans[9], mant_sum_trans[10], mant_sum_trans[11], mant_sum_trans[12], mant_sum_trans[13], mant_sum_trans[14], mant_sum_trans[15], mant_sum_trans[16], mant_sum_trans[17], mant_sum_trans[18], mant_sum_trans[19], mant_sum_trans[20], mant_sum_trans[21], mant_sum_trans[22], mant_sum_trans[23], mant_sum_trans[24], mant_sum_trans[25], mant_sum_trans[26], mant_sum_trans[27], mant_sum_trans[28], mant_sum_trans[29], mant_sum_trans[30], mant_sum_trans[31], mant_sum_trans[32], mant_sum_trans[33], mant_sum_trans[34], mant_sum_trans[35], mant_sum_trans[36], mant_sum_trans[37], mant_sum_trans[38], mant_sum_trans[39] };

  assign _040_ = & fangyuan5;
  wire [7:0] fangyuan6;
  assign fangyuan6 = { partial_result[40], partial_result[41], partial_result[42], partial_result[43], partial_result[44], partial_result[45], partial_result[46], partial_result[47] };

  assign partial_nan = & fangyuan6;
  wire [23:0] fangyuan7;
  assign fangyuan7 = { partial_mant_abs[15], partial_mant_abs[16], partial_mant_abs[17], partial_mant_abs[18], partial_mant_abs[19], partial_mant_abs[20], partial_mant_abs[21], partial_mant_abs[22], partial_mant_abs[23], partial_mant_abs[24], partial_mant_abs[25], partial_mant_abs[26], partial_mant_abs[27], partial_mant_abs[28], partial_mant_abs[29], partial_mant_abs[30], partial_mant_abs[31], partial_mant_abs[32], partial_mant_abs[33], partial_mant_abs[34], partial_mant_abs[35], partial_mant_abs[36], partial_mant_abs[37], partial_mant_abs[38] };

  assign _041_ = & fangyuan7;
  wire [37:0] fangyuan8;
  assign fangyuan8 = { in_data[0], in_data[1], in_data[2], in_data[3], in_data[4], in_data[5], in_data[6], in_data[7], in_data[8], in_data[9], in_data[10], in_data[11], in_data[12], in_data[13], in_data[14], in_data[15], in_data[16], in_data[17], in_data[18], in_data[19], in_data[20], in_data[21], in_data[22], in_data[23], in_data[24], in_data[25], in_data[26], in_data[27], in_data[28], in_data[29], in_data[30], in_data[31], in_data[32], in_data[33], in_data[34], in_data[35], in_data[36], in_data[37] };

  assign _042_ = | fangyuan8;
  wire [39:0] fangyuan9;
  assign fangyuan9 = { in_mask_op[0], in_mask_op[1], in_mask_op[2], in_mask_op[3], in_mask_op[4], in_mask_op[5], in_mask_op[6], in_mask_op[7], in_mask_op[8], in_mask_op[9], in_mask_op[10], in_mask_op[11], in_mask_op[12], in_mask_op[13], in_mask_op[14], in_mask_op[15], in_mask_op[16], in_mask_op[17], in_mask_op[18], in_mask_op[19], in_mask_op[20], in_mask_op[21], in_mask_op[22], in_mask_op[23], in_mask_op[24], in_mask_op[25], in_mask_op[26], in_mask_op[27], in_mask_op[28], in_mask_op[29], in_mask_op[30], in_mask_op[31], in_mask_op[32], in_mask_op[33], in_mask_op[34], in_mask_op[35], in_mask_op[36], in_mask_op[37], in_mask_op[38], in_mask_op[39] };

  assign _043_ = | fangyuan9;
  wire [37:0] fangyuan10;
  assign fangyuan10 = { di_mant_cutt[0], di_mant_cutt[1], di_mant_cutt[2], di_mant_cutt[3], di_mant_cutt[4], di_mant_cutt[5], di_mant_cutt[6], di_mant_cutt[7], di_mant_cutt[8], di_mant_cutt[9], di_mant_cutt[10], di_mant_cutt[11], di_mant_cutt[12], di_mant_cutt[13], di_mant_cutt[14], di_mant_cutt[15], di_mant_cutt[16], di_mant_cutt[17], di_mant_cutt[18], di_mant_cutt[19], di_mant_cutt[20], di_mant_cutt[21], di_mant_cutt[22], di_mant_cutt[23], di_mant_cutt[24], di_mant_cutt[25], di_mant_cutt[26], di_mant_cutt[27], di_mant_cutt[28], di_mant_cutt[29], di_mant_cutt[30], di_mant_cutt[31], di_mant_cutt[32], di_mant_cutt[33], di_mant_cutt[34], di_mant_cutt[35], di_mant_cutt[36], di_mant_cutt[37] };

  assign di_mant_cut[0] = | fangyuan10;
  wire [37:0] fangyuan11;
  assign fangyuan11 = { oi_mant_cutt[0], oi_mant_cutt[1], oi_mant_cutt[2], oi_mant_cutt[3], oi_mant_cutt[4], oi_mant_cutt[5], oi_mant_cutt[6], oi_mant_cutt[7], oi_mant_cutt[8], oi_mant_cutt[9], oi_mant_cutt[10], oi_mant_cutt[11], oi_mant_cutt[12], oi_mant_cutt[13], oi_mant_cutt[14], oi_mant_cutt[15], oi_mant_cutt[16], oi_mant_cutt[17], oi_mant_cutt[18], oi_mant_cutt[19], oi_mant_cutt[20], oi_mant_cutt[21], oi_mant_cutt[22], oi_mant_cutt[23], oi_mant_cutt[24], oi_mant_cutt[25], oi_mant_cutt[26], oi_mant_cutt[27], oi_mant_cutt[28], oi_mant_cutt[29], oi_mant_cutt[30], oi_mant_cutt[31], oi_mant_cutt[32], oi_mant_cutt[33], oi_mant_cutt[34], oi_mant_cutt[35], oi_mant_cutt[36], oi_mant_cutt[37] };

  assign oi_mant_cut[0] = | fangyuan11;
  wire [5:0] fangyuan12;
  assign fangyuan12 = { msum_lead_num[0], msum_lead_num[1], msum_lead_num[2], msum_lead_num[3], msum_lead_num[4], msum_lead_num[5] };

  assign _044_ = | fangyuan12;
  wire [2:0] fangyuan13;
  assign fangyuan13 = { mant_sum_scmp[0], mant_sum_scmp[1], mant_sum_scmp[2] };

  assign _045_ = | fangyuan13;
  wire [39:0] fangyuan14;
  assign fangyuan14 = { partial_mant_nmlz[0], partial_mant_nmlz[1], partial_mant_nmlz[2], partial_mant_nmlz[3], partial_mant_nmlz[4], partial_mant_nmlz[5], partial_mant_nmlz[6], partial_mant_nmlz[7], partial_mant_nmlz[8], partial_mant_nmlz[9], partial_mant_nmlz[10], partial_mant_nmlz[11], partial_mant_nmlz[12], partial_mant_nmlz[13], partial_mant_nmlz[14], partial_mant_nmlz[15], partial_mant_nmlz[16], partial_mant_nmlz[17], partial_mant_nmlz[18], partial_mant_nmlz[19], partial_mant_nmlz[20], partial_mant_nmlz[21], partial_mant_nmlz[22], partial_mant_nmlz[23], partial_mant_nmlz[24], partial_mant_nmlz[25], partial_mant_nmlz[26], partial_mant_nmlz[27], partial_mant_nmlz[28], partial_mant_nmlz[29], partial_mant_nmlz[30], partial_mant_nmlz[31], partial_mant_nmlz[32], partial_mant_nmlz[33], partial_mant_nmlz[34], partial_mant_nmlz[35], partial_mant_nmlz[36], partial_mant_nmlz[37], partial_mant_nmlz[38], partial_mant_nmlz[39] };

  assign _046_ = | fangyuan14;
  wire [38:0] fangyuan15;
  assign fangyuan15 = { partial_result[0], partial_result[1], partial_result[2], partial_result[3], partial_result[4], partial_result[5], partial_result[6], partial_result[7], partial_result[8], partial_result[9], partial_result[10], partial_result[11], partial_result[12], partial_result[13], partial_result[14], partial_result[15], partial_result[16], partial_result[17], partial_result[18], partial_result[19], partial_result[20], partial_result[21], partial_result[22], partial_result[23], partial_result[24], partial_result[25], partial_result[26], partial_result[27], partial_result[28], partial_result[29], partial_result[30], partial_result[31], partial_result[32], partial_result[33], partial_result[34], partial_result[35], partial_result[36], partial_result[37], partial_result[38] };

  assign _047_ = | fangyuan15;
  wire [39:0] fangyuan16;
  assign fangyuan16 = { partial_result[0], partial_result[1], partial_result[2], partial_result[3], partial_result[4], partial_result[5], partial_result[6], partial_result[7], partial_result[8], partial_result[9], partial_result[10], partial_result[11], partial_result[12], partial_result[13], partial_result[14], partial_result[15], partial_result[16], partial_result[17], partial_result[18], partial_result[19], partial_result[20], partial_result[21], partial_result[22], partial_result[23], partial_result[24], partial_result[25], partial_result[26], partial_result[27], partial_result[28], partial_result[29], partial_result[30], partial_result[31], partial_result[32], partial_result[33], partial_result[34], partial_result[35], partial_result[36], partial_result[37], partial_result[38], partial_result[39] };

  assign _048_ = | fangyuan16;
  assign di_manm = $signed(in_data[35:0]) <<< di_lead_num;
  wire [44:0] fangyuan17;
  assign fangyuan17 = { mant_sum, in_mant_cut, 1'b0 };
  wire [31:0] fangyuan18;
  assign fangyuan18 = { _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[5:0] };

  assign _024_[43:0] = $signed(fangyuan17) <<< fangyuan18;
  wire [79:0] fangyuan19;
  assign fangyuan19 = { di_mant_shift, di_mant_cut[2:1], di_mant_cutt[37:0] };
  wire [79:0] fangyuan20;
  assign fangyuan20 = { di_mans, 44'b00000000000000000000000000000000000000000000 };

  assign fangyuan19 = $signed(fangyuan20) >>> di_expo_shift;
  wire [79:0] fangyuan21;
  assign fangyuan21 = { oi_mant_shift, oi_mant_cut[2:1], oi_mant_cutt[37:0] };
  wire [79:0] fangyuan22;
  assign fangyuan22 = { oi_mant_ext, 40'b0000000000000000000000000000000000000000 };

  assign fangyuan21 = $signed(fangyuan22) >>> oi_expo_shift;
  assign _025_[39:0] = mant_sum_round >>> mant_sum_carry_pos;
  assign fp32_mant_nmlz_tmp = $signed(fp32_mant_round) >>> fp32_mant_carry;
  assign di_expm = _014_ - di_lead_num;
  assign di_expo_shift = max_expo - di_expo;
  assign oi_expo_shift = max_expo - oi_expo;
  assign expo_nrml = _015_ - msum_lead_num;
  wire [6:0] fangyuan23;
  assign fangyuan23 = { _049_[31], _049_[5:0] };

  assign fangyuan23 = msum_lead_num - 1'b1;
  assign partial_expo_nmlz_neg = expo_trans - mant_sum_carry_neg;
  assign in_mask_op = in_op_valid ? in_op : 48'b000000000000000000000000000000000000000000000000;
  wire [35:0] fangyuan24;
  assign fangyuan24 = { in_data[37:27], 25'b0000000000000000000000000 };

  assign _050_ = di_nan ? fangyuan24 : di_manm;
  assign di_mans = oi_nan ? 36'b000000000000000000000000000000000000 : _050_;
  assign _051_ = di_nan ? 40'b0000000000000000000000000000000000000000 : in_mask_op[39:0];
  wire [39:0] fangyuan25;
  assign fangyuan25 = { in_mask_op[39:29], 29'b00000000000000000000000000000 };

  assign oi_mant_ext = oi_nan ? fangyuan25 : _051_;
  assign _026_[6:0] = _042_ ? di_expm : 7'b0000000;
  wire [7:0] fangyuan26;
  assign fangyuan26 = { 1'b0, _026_[6:0] };

  assign di_expo = in_nan ? 8'b11111111 : fangyuan26;
  assign _052_ = _043_ ? in_mask_op[47:40] : 8'b00000000;
  assign oi_expo = in_nan ? 8'b11111111 : _052_;
  assign max_expo = _029_ ? di_expo : oi_expo;
  wire [39:0] fangyuan27;
  assign fangyuan27 = { in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37] };

  assign di_aligned_mant_nxt = _027_ ? fangyuan27 : di_mant_shift;
  wire [39:0] fangyuan28;
  assign fangyuan28 = { in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39] };

  assign oi_aligned_mant_nxt = _028_ ? fangyuan28 : oi_mant_shift;
  assign _053_ = _030_ ? di_mant_cut : 3'b000;
  assign in_mant_cut_nxt = _029_ ? oi_mant_cut : _053_;
  wire [43:0] fangyuan29;
  assign fangyuan29 = { mant_sum, in_mant_cut };

  assign mant_sum_scmp = _044_ ? _024_[43:0] : fangyuan29;
  wire [41:0] fangyuan30;
  assign fangyuan30 = { mant_sum[39:0], 2'b00 };
  wire [41:0] fangyuan31;
  assign fangyuan31 = { mant_sum_scmp[43:3], _045_ };

  assign mant_sum_ncmp = in_nan_d ? fangyuan30 : fangyuan31;
  wire [39:0] fangyuan32;
  assign fangyuan32 = { mant_sum_round[38:0], 1'b0 };

  assign partial_mant_nmlz = mant_sum_carry_neg ? fangyuan32 : _025_[39:0];
  assign partial_expo_nmlz = mant_sum_carry_neg ? partial_expo_nmlz_neg : partial_expo_nmlz_pos;
  assign _054_ = _046_ ? partial_expo_nmlz : 8'b00000000;
  assign partial_expo_nxt = in_nan_2d ? 8'b11111111 : _054_;
  wire [47:0] fangyuan33;
  assign fangyuan33 = { partial_result_expo, partial_result_mant };

  assign partial_result = _009_ ? fangyuan33 : 48'b000000000000000000000000000000000000000000000000;
  assign partial_mant_abs = partial_result[39] ? _016_ : partial_result[38:0];
  wire [22:0] fangyuan34;
  assign fangyuan34 = { 13'b0000000000000, partial_result[38:29] };

  assign fp32_mant_nmlz = partial_nan ? fangyuan34 : fp32_mant_nmlz_tmp;
  assign _055_ = partial_nan ? 8'b11111111 : fp32_expo_round;
  assign fp32_expo_nmlz = _048_ ? _055_ : 8'b00000000;
  \$paramod\NV_DW_lsd\a_width=36 u0_dw_lsd (
    .a(in_data[35:0]),
    .dec(),
    .enc(di_lead_num)
  );
  \$paramod\NV_DW_lsd\a_width=44 u1_dw_lsd (
    .a({ mant_sum, in_mant_cut }),
    .dec(),
    .enc(msum_lead_num)
  );
  assign _023_[8:1] = 8'b00000000;
  assign _026_[7] = 1'b0;
  assign _049_[30:6] = { _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31] };
  assign di_expn = in_data[43:38];
  assign di_mant = in_data[35:0];
  assign di_mant_cutt[39:38] = di_mant_cut[2:1];
  assign di_mant_ext = { di_mans, 4'b0000 };
  assign di_mant_pre = in_data[37:0];
  assign di_pd = in_data;
  assign di_sign = in_data[37];
  assign fp32_expo_raw = partial_result[47:40];
  assign fp32_mant_cut = partial_mant_abs[14:0];
  assign fp32_mant_effect = partial_mant_abs[38:15];
  assign fp32_mant_point5 = partial_mant_abs[14];
  assign fp32_result = { partial_result[39], fp32_expo_nmlz, fp32_mant_nmlz };
  assign mant_sum_comp = { mant_sum, in_mant_cut, 1'b0 };
  assign mant_sum_effect = mant_sum_trans[41:2];
  assign mant_sum_guard = mant_sum_trans[1];
  assign mant_sum_sign = mant_sum_trans[41];
  assign mant_sum_stick = mant_sum_trans[0];
  assign mant_sum_total = { mant_sum, in_mant_cut };
  assign oi_expn = in_mask_op[47:40];
  assign oi_mans = oi_mant_ext;
  assign oi_mant = in_mask_op[39:0];
  assign oi_mant_cutt[39:38] = oi_mant_cut[2:1];
  assign oi_pd = in_mask_op;
  assign oi_sign = in_mask_op[39];
  assign out_partial_data = { partial_result_expo, partial_result_mant };
  assign partial_expo = partial_result[47:40];
  assign partial_mant = partial_result[39:0];
  assign partial_mant_nmlz_tmp = { 1'bx, partial_mant_nmlz };
  assign partial_mant_nxt = partial_mant_nmlz;
  assign partial_result_out = { partial_result_expo, partial_result_mant };
  assign partial_sign = partial_result[39];
  assign partial_umant = partial_result[38:0];
  assign partial_umant_nan = partial_result[38:29];
endmodule
