  logic [2:0] _000_;
  logic [2:0] _000__T ;
  logic [2:0] _000__R ;
  logic [2:0] _000__C ;
  logic [2:0] _000__X ;
  logic [5:0] _000__S ;
  logic _001_;
  logic _001__T ;
  logic _001__R ;
  logic _001__C ;
  logic _001__X ;
  logic [5:0] _001__S ;
  logic _002_;
  logic _002__T ;
  logic _002__R ;
  logic _002__C ;
  logic _002__X ;
  logic [5:0] _002__S ;
  logic _003_;
  logic _003__T ;
  logic _003__R ;
  logic _003__C ;
  logic _003__X ;
  logic [5:0] _003__S ;
  logic [14:0] _004_;
  logic [14:0] _004__T ;
  logic [14:0] _004__R ;
  logic [14:0] _004__C ;
  logic [14:0] _004__X ;
  logic [5:0] _004__S ;
  logic [14:0] _005_;
  logic [14:0] _005__T ;
  logic [14:0] _005__R ;
  logic [14:0] _005__C ;
  logic [14:0] _005__X ;
  logic [5:0] _005__S ;
  logic [15:0] _006_;
  logic [15:0] _006__T ;
  logic [15:0] _006__R ;
  logic [15:0] _006__C ;
  logic [15:0] _006__X ;
  logic [5:0] _006__S ;
  logic [15:0] _007_;
  logic [15:0] _007__T ;
  logic [15:0] _007__R ;
  logic [15:0] _007__C ;
  logic [15:0] _007__X ;
  logic [5:0] _007__S ;
  logic [6:0] _008_;
  logic [6:0] _008__T ;
  logic [6:0] _008__R ;
  logic [6:0] _008__C ;
  logic [6:0] _008__X ;
  logic [5:0] _008__S ;
  logic [6:0] _009_;
  logic [6:0] _009__T ;
  logic [6:0] _009__R ;
  logic [6:0] _009__C ;
  logic [6:0] _009__X ;
  logic [5:0] _009__S ;
  logic [6:0] _010_;
  logic [6:0] _010__T ;
  logic [6:0] _010__R ;
  logic [6:0] _010__C ;
  logic [6:0] _010__X ;
  logic [5:0] _010__S ;
  logic [6:0] _011_;
  logic [6:0] _011__T ;
  logic [6:0] _011__R ;
  logic [6:0] _011__C ;
  logic [6:0] _011__X ;
  logic [5:0] _011__S ;
  logic _012_;
  logic _012__T ;
  logic _012__R ;
  logic _012__C ;
  logic _012__X ;
  logic [5:0] _012__S ;
  logic _013_;
  logic _013__T ;
  logic _013__R ;
  logic _013__C ;
  logic _013__X ;
  logic [5:0] _013__S ;
  logic _014_;
  logic _014__T ;
  logic _014__R ;
  logic _014__C ;
  logic _014__X ;
  logic [5:0] _014__S ;
  logic _015_;
  logic _015__T ;
  logic _015__R ;
  logic _015__C ;
  logic _015__X ;
  logic [5:0] _015__S ;
  logic [23:0] _016_;
  logic [23:0] _016__T ;
  logic [23:0] _016__R ;
  logic [23:0] _016__C ;
  logic [23:0] _016__X ;
  logic [5:0] _016__S ;
  logic [8:0] _017_;
  logic [8:0] _017__T ;
  logic [8:0] _017__R ;
  logic [8:0] _017__C ;
  logic [8:0] _017__X ;
  logic [5:0] _017__S ;
  logic [15:0] _018_;
  logic [15:0] _018__T ;
  logic [15:0] _018__R ;
  logic [15:0] _018__C ;
  logic [15:0] _018__X ;
  logic [5:0] _018__S ;
  logic _019_;
  logic _019__T ;
  logic _019__R ;
  logic _019__C ;
  logic _019__X ;
  logic [5:0] _019__S ;
  logic _020_;
  logic _020__T ;
  logic _020__R ;
  logic _020__C ;
  logic _020__X ;
  logic [5:0] _020__S ;
  logic _021_;
  logic _021__T ;
  logic _021__R ;
  logic _021__C ;
  logic _021__X ;
  logic [5:0] _021__S ;
  logic [3:0] _022_;
  logic [3:0] _022__T ;
  logic [3:0] _022__R ;
  logic [3:0] _022__C ;
  logic [3:0] _022__X ;
  logic [5:0] _022__S ;
  logic _023_;
  logic _023__T ;
  logic _023__R ;
  logic _023__C ;
  logic _023__X ;
  logic [5:0] _023__S ;
  logic _024_;
  logic _024__T ;
  logic _024__R ;
  logic _024__C ;
  logic _024__X ;
  logic [5:0] _024__S ;
  logic _025_;
  logic _025__T ;
  logic _025__R ;
  logic _025__C ;
  logic _025__X ;
  logic [5:0] _025__S ;
  logic _026_;
  logic _026__T ;
  logic _026__R ;
  logic _026__C ;
  logic _026__X ;
  logic [5:0] _026__S ;
  logic [6:0] _027_;
  logic [6:0] _027__T ;
  logic [6:0] _027__R ;
  logic [6:0] _027__C ;
  logic [6:0] _027__X ;
  logic [5:0] _027__S ;
  logic _028_;
  logic _028__T ;
  logic _028__R ;
  logic _028__C ;
  logic _028__X ;
  logic [5:0] _028__S ;
  logic _029_;
  logic _029__T ;
  logic _029__R ;
  logic _029__C ;
  logic _029__X ;
  logic [5:0] _029__S ;
  logic _030_;
  logic _030__T ;
  logic _030__R ;
  logic _030__C ;
  logic _030__X ;
  logic [5:0] _030__S ;
  logic _031_;
  logic _031__T ;
  logic _031__R ;
  logic _031__C ;
  logic _031__X ;
  logic [5:0] _031__S ;
  logic _032_;
  logic _032__T ;
  logic _032__R ;
  logic _032__C ;
  logic _032__X ;
  logic [5:0] _032__S ;
  logic [1:0] _033_;
  logic [1:0] _033__T ;
  logic [1:0] _033__R ;
  logic [1:0] _033__C ;
  logic [1:0] _033__X ;
  logic [5:0] _033__S ;
  logic [1:0] _034_;
  logic [1:0] _034__T ;
  logic [1:0] _034__R ;
  logic [1:0] _034__C ;
  logic [1:0] _034__X ;
  logic [5:0] _034__S ;
  logic _035_;
  logic _035__T ;
  logic _035__R ;
  logic _035__C ;
  logic _035__X ;
  logic [5:0] _035__S ;
  logic _036_;
  logic _036__T ;
  logic _036__R ;
  logic _036__C ;
  logic _036__X ;
  logic [5:0] _036__S ;
  logic _037_;
  logic _037__T ;
  logic _037__R ;
  logic _037__C ;
  logic _037__X ;
  logic [5:0] _037__S ;
  logic _038_;
  logic _038__T ;
  logic _038__R ;
  logic _038__C ;
  logic _038__X ;
  logic [5:0] _038__S ;
  logic [8:0] _039_;
  logic [8:0] _039__T ;
  logic [8:0] _039__R ;
  logic [8:0] _039__C ;
  logic [8:0] _039__X ;
  logic [5:0] _039__S ;
  logic [23:0] _040_;
  logic [23:0] _040__T ;
  logic [23:0] _040__R ;
  logic [23:0] _040__C ;
  logic [23:0] _040__X ;
  logic [5:0] _040__S ;
  logic [7:0] _041_;
  logic [7:0] _041__T ;
  logic [7:0] _041__R ;
  logic [7:0] _041__C ;
  logic [7:0] _041__X ;
  logic [5:0] _041__S ;
  logic _042_;
  logic _042__T ;
  logic _042__R ;
  logic _042__C ;
  logic _042__X ;
  logic [5:0] _042__S ;
  logic [8:0] _043_;
  logic [8:0] _043__T ;
  logic [8:0] _043__R ;
  logic [8:0] _043__C ;
  logic [8:0] _043__X ;
  logic [5:0] _043__S ;
  logic [6:0] _044_;
  logic [6:0] _044__T ;
  logic [6:0] _044__R ;
  logic [6:0] _044__C ;
  logic [6:0] _044__X ;
  logic [5:0] _044__S ;
  logic _045_;
  logic _045__T ;
  logic _045__R ;
  logic _045__C ;
  logic _045__X ;
  logic [5:0] _045__S ;
  logic [3:0] _046_;
  logic [3:0] _046__T ;
  logic [3:0] _046__R ;
  logic [3:0] _046__C ;
  logic [3:0] _046__X ;
  logic [5:0] _046__S ;
  logic [3:0] _047_;
  logic [3:0] _047__T ;
  logic [3:0] _047__R ;
  logic [3:0] _047__C ;
  logic [3:0] _047__X ;
  logic [5:0] _047__S ;
  logic _048_;
  logic _048__T ;
  logic _048__R ;
  logic _048__C ;
  logic _048__X ;
  logic [5:0] _048__S ;
  logic _049_;
  logic _049__T ;
  logic _049__R ;
  logic _049__C ;
  logic _049__X ;
  logic [5:0] _049__S ;
  logic _050_;
  logic _050__T ;
  logic _050__R ;
  logic _050__C ;
  logic _050__X ;
  logic [5:0] _050__S ;
  logic _051_;
  logic _051__T ;
  logic _051__R ;
  logic _051__C ;
  logic _051__X ;
  logic [5:0] _051__S ;
  logic _052_;
  logic _052__T ;
  logic _052__R ;
  logic _052__C ;
  logic _052__X ;
  logic [5:0] _052__S ;
  logic _053_;
  logic _053__T ;
  logic _053__R ;
  logic _053__C ;
  logic _053__X ;
  logic [5:0] _053__S ;
  logic _054_;
  logic _054__T ;
  logic _054__R ;
  logic _054__C ;
  logic _054__X ;
  logic [5:0] _054__S ;
  logic _055_;
  logic _055__T ;
  logic _055__R ;
  logic _055__C ;
  logic _055__X ;
  logic [5:0] _055__S ;
  logic _056_;
  logic _056__T ;
  logic _056__R ;
  logic _056__C ;
  logic _056__X ;
  logic [5:0] _056__S ;
  logic _057_;
  logic _057__T ;
  logic _057__R ;
  logic _057__C ;
  logic _057__X ;
  logic [5:0] _057__S ;
  logic _058_;
  logic _058__T ;
  logic _058__R ;
  logic _058__C ;
  logic _058__X ;
  logic [5:0] _058__S ;
  logic _059_;
  logic _059__T ;
  logic _059__R ;
  logic _059__C ;
  logic _059__X ;
  logic [5:0] _059__S ;
  logic _060_;
  logic _060__T ;
  logic _060__R ;
  logic _060__C ;
  logic _060__X ;
  logic [5:0] _060__S ;
  logic _061_;
  logic _061__T ;
  logic _061__R ;
  logic _061__C ;
  logic _061__X ;
  logic [5:0] _061__S ;
  logic _062_;
  logic _062__T ;
  logic _062__R ;
  logic _062__C ;
  logic _062__X ;
  logic [5:0] _062__S ;
  logic _063_;
  logic _063__T ;
  logic _063__R ;
  logic _063__C ;
  logic _063__X ;
  logic [5:0] _063__S ;
  logic _064_;
  logic _064__T ;
  logic _064__R ;
  logic _064__C ;
  logic _064__X ;
  logic [5:0] _064__S ;
  logic _065_;
  logic _065__T ;
  logic _065__R ;
  logic _065__C ;
  logic _065__X ;
  logic [5:0] _065__S ;
  logic _066_;
  logic _066__T ;
  logic _066__R ;
  logic _066__C ;
  logic _066__X ;
  logic [5:0] _066__S ;
  logic _067_;
  logic _067__T ;
  logic _067__R ;
  logic _067__C ;
  logic _067__X ;
  logic [5:0] _067__S ;
  logic _068_;
  logic _068__T ;
  logic _068__R ;
  logic _068__C ;
  logic _068__X ;
  logic [5:0] _068__S ;
  logic _069_;
  logic _069__T ;
  logic _069__R ;
  logic _069__C ;
  logic _069__X ;
  logic [5:0] _069__S ;
  logic _070_;
  logic _070__T ;
  logic _070__R ;
  logic _070__C ;
  logic _070__X ;
  logic [5:0] _070__S ;
  logic _071_;
  logic _071__T ;
  logic _071__R ;
  logic _071__C ;
  logic _071__X ;
  logic [5:0] _071__S ;
  logic _072_;
  logic _072__T ;
  logic _072__R ;
  logic _072__C ;
  logic _072__X ;
  logic [5:0] _072__S ;
  logic _073_;
  logic _073__T ;
  logic _073__R ;
  logic _073__C ;
  logic _073__X ;
  logic [5:0] _073__S ;
  logic _074_;
  logic _074__T ;
  logic _074__R ;
  logic _074__C ;
  logic _074__X ;
  logic [5:0] _074__S ;
  logic _075_;
  logic _075__T ;
  logic _075__R ;
  logic _075__C ;
  logic _075__X ;
  logic [5:0] _075__S ;
  logic _076_;
  logic _076__T ;
  logic _076__R ;
  logic _076__C ;
  logic _076__X ;
  logic [5:0] _076__S ;
  logic _077_;
  logic _077__T ;
  logic _077__R ;
  logic _077__C ;
  logic _077__X ;
  logic [5:0] _077__S ;
  logic _078_;
  logic _078__T ;
  logic _078__R ;
  logic _078__C ;
  logic _078__X ;
  logic [5:0] _078__S ;
  logic _079_;
  logic _079__T ;
  logic _079__R ;
  logic _079__C ;
  logic _079__X ;
  logic [5:0] _079__S ;
  logic _080_;
  logic _080__T ;
  logic _080__R ;
  logic _080__C ;
  logic _080__X ;
  logic [5:0] _080__S ;
  logic _081_;
  logic _081__T ;
  logic _081__R ;
  logic _081__C ;
  logic _081__X ;
  logic [5:0] _081__S ;
  logic _082_;
  logic _082__T ;
  logic _082__R ;
  logic _082__C ;
  logic _082__X ;
  logic [5:0] _082__S ;
  logic _083_;
  logic _083__T ;
  logic _083__R ;
  logic _083__C ;
  logic _083__X ;
  logic [5:0] _083__S ;
  logic _084_;
  logic _084__T ;
  logic _084__R ;
  logic _084__C ;
  logic _084__X ;
  logic [5:0] _084__S ;
  logic _085_;
  logic _085__T ;
  logic _085__R ;
  logic _085__C ;
  logic _085__X ;
  logic [5:0] _085__S ;
  logic _086_;
  logic _086__T ;
  logic _086__R ;
  logic _086__C ;
  logic _086__X ;
  logic [5:0] _086__S ;
  logic _087_;
  logic _087__T ;
  logic _087__R ;
  logic _087__C ;
  logic _087__X ;
  logic [5:0] _087__S ;
  logic _088_;
  logic _088__T ;
  logic _088__R ;
  logic _088__C ;
  logic _088__X ;
  logic [5:0] _088__S ;
  logic _089_;
  logic _089__T ;
  logic _089__R ;
  logic _089__C ;
  logic _089__X ;
  logic [5:0] _089__S ;
  logic _090_;
  logic _090__T ;
  logic _090__R ;
  logic _090__C ;
  logic _090__X ;
  logic [5:0] _090__S ;
  logic _091_;
  logic _091__T ;
  logic _091__R ;
  logic _091__C ;
  logic _091__X ;
  logic [5:0] _091__S ;
  logic _092_;
  logic _092__T ;
  logic _092__R ;
  logic _092__C ;
  logic _092__X ;
  logic [5:0] _092__S ;
  logic _093_;
  logic _093__T ;
  logic _093__R ;
  logic _093__C ;
  logic _093__X ;
  logic [5:0] _093__S ;
  logic _094_;
  logic _094__T ;
  logic _094__R ;
  logic _094__C ;
  logic _094__X ;
  logic [5:0] _094__S ;
  logic _095_;
  logic _095__T ;
  logic _095__R ;
  logic _095__C ;
  logic _095__X ;
  logic [5:0] _095__S ;
  logic _096_;
  logic _096__T ;
  logic _096__R ;
  logic _096__C ;
  logic _096__X ;
  logic [5:0] _096__S ;
  logic [16:0] _097_;
  logic [16:0] _097__T ;
  logic [16:0] _097__R ;
  logic [16:0] _097__C ;
  logic [16:0] _097__X ;
  logic [5:0] _097__S ;
  logic [16:0] _098_;
  logic [16:0] _098__T ;
  logic [16:0] _098__R ;
  logic [16:0] _098__C ;
  logic [16:0] _098__X ;
  logic [5:0] _098__S ;
  logic [16:0] _099_;
  logic [16:0] _099__T ;
  logic [16:0] _099__R ;
  logic [16:0] _099__C ;
  logic [16:0] _099__X ;
  logic [5:0] _099__S ;
  logic [3:0] _100_;
  logic [3:0] _100__T ;
  logic [3:0] _100__R ;
  logic [3:0] _100__C ;
  logic [3:0] _100__X ;
  logic [5:0] _100__S ;
  logic [3:0] _101_;
  logic [3:0] _101__T ;
  logic [3:0] _101__R ;
  logic [3:0] _101__C ;
  logic [3:0] _101__X ;
  logic [5:0] _101__S ;
  logic [3:0] _102_;
  logic [3:0] _102__T ;
  logic [3:0] _102__R ;
  logic [3:0] _102__C ;
  logic [3:0] _102__X ;
  logic [5:0] _102__S ;
  logic [3:0] _103_;
  logic [3:0] _103__T ;
  logic [3:0] _103__R ;
  logic [3:0] _103__C ;
  logic [3:0] _103__X ;
  logic [5:0] _103__S ;
  logic [3:0] _104_;
  logic [3:0] _104__T ;
  logic [3:0] _104__R ;
  logic [3:0] _104__C ;
  logic [3:0] _104__X ;
  logic [5:0] _104__S ;
  logic [3:0] _105_;
  logic [3:0] _105__T ;
  logic [3:0] _105__R ;
  logic [3:0] _105__C ;
  logic [3:0] _105__X ;
  logic [5:0] _105__S ;
  logic [6:0] _106_;
  logic [6:0] _106__T ;
  logic [6:0] _106__R ;
  logic [6:0] _106__C ;
  logic [6:0] _106__X ;
  logic [5:0] _106__S ;
  logic [6:0] _107_;
  logic [6:0] _107__T ;
  logic [6:0] _107__R ;
  logic [6:0] _107__C ;
  logic [6:0] _107__X ;
  logic [5:0] _107__S ;
  logic [6:0] _108_;
  logic [6:0] _108__T ;
  logic [6:0] _108__R ;
  logic [6:0] _108__C ;
  logic [6:0] _108__X ;
  logic [5:0] _108__S ;
  logic _109_;
  logic _109__T ;
  logic _109__R ;
  logic _109__C ;
  logic _109__X ;
  logic [5:0] _109__S ;
  logic _110_;
  logic _110__T ;
  logic _110__R ;
  logic _110__C ;
  logic _110__X ;
  logic [5:0] _110__S ;
  logic _111_;
  logic _111__T ;
  logic _111__R ;
  logic _111__C ;
  logic _111__X ;
  logic [5:0] _111__S ;
  logic _112_;
  logic _112__T ;
  logic _112__R ;
  logic _112__C ;
  logic _112__X ;
  logic [5:0] _112__S ;
  logic _113_;
  logic _113__T ;
  logic _113__R ;
  logic _113__C ;
  logic _113__X ;
  logic [5:0] _113__S ;
  logic _114_;
  logic _114__T ;
  logic _114__R ;
  logic _114__C ;
  logic _114__X ;
  logic [5:0] _114__S ;
  logic _115_;
  logic _115__T ;
  logic _115__R ;
  logic _115__C ;
  logic _115__X ;
  logic [5:0] _115__S ;
  logic _116_;
  logic _116__T ;
  logic _116__R ;
  logic _116__C ;
  logic _116__X ;
  logic [5:0] _116__S ;
  logic _117_;
  logic _117__T ;
  logic _117__R ;
  logic _117__C ;
  logic _117__X ;
  logic [5:0] _117__S ;
  logic _118_;
  logic _118__T ;
  logic _118__R ;
  logic _118__C ;
  logic _118__X ;
  logic [5:0] _118__S ;
  logic _119_;
  logic _119__T ;
  logic _119__R ;
  logic _119__C ;
  logic _119__X ;
  logic [5:0] _119__S ;
  logic _120_;
  logic _120__T ;
  logic _120__R ;
  logic _120__C ;
  logic _120__X ;
  logic [5:0] _120__S ;
  logic _121_;
  logic _121__T ;
  logic _121__R ;
  logic _121__C ;
  logic _121__X ;
  logic [5:0] _121__S ;
  logic _122_;
  logic _122__T ;
  logic _122__R ;
  logic _122__C ;
  logic _122__X ;
  logic [5:0] _122__S ;
  logic _123_;
  logic _123__T ;
  logic _123__R ;
  logic _123__C ;
  logic _123__X ;
  logic [5:0] _123__S ;
  logic _124_;
  logic _124__T ;
  logic _124__R ;
  logic _124__C ;
  logic _124__X ;
  logic [5:0] _124__S ;
  logic _125_;
  logic _125__T ;
  logic _125__R ;
  logic _125__C ;
  logic _125__X ;
  logic [5:0] _125__S ;
  logic _126_;
  logic _126__T ;
  logic _126__R ;
  logic _126__C ;
  logic _126__X ;
  logic [5:0] _126__S ;
  logic _127_;
  logic _127__T ;
  logic _127__R ;
  logic _127__C ;
  logic _127__X ;
  logic [5:0] _127__S ;
  logic _128_;
  logic _128__T ;
  logic _128__R ;
  logic _128__C ;
  logic _128__X ;
  logic [5:0] _128__S ;
  logic [3:0] _129_;
  logic [3:0] _129__T ;
  logic [3:0] _129__R ;
  logic [3:0] _129__C ;
  logic [3:0] _129__X ;
  logic [5:0] _129__S ;
  logic _130_;
  logic _130__T ;
  logic _130__R ;
  logic _130__C ;
  logic _130__X ;
  logic [5:0] _130__S ;
  logic _131_;
  logic _131__T ;
  logic _131__R ;
  logic _131__C ;
  logic _131__X ;
  logic [5:0] _131__S ;
  logic _132_;
  logic _132__T ;
  logic _132__R ;
  logic _132__C ;
  logic _132__X ;
  logic [5:0] _132__S ;
  logic _133_;
  logic _133__T ;
  logic _133__R ;
  logic _133__C ;
  logic _133__X ;
  logic [5:0] _133__S ;
  logic _134_;
  logic _134__T ;
  logic _134__R ;
  logic _134__C ;
  logic _134__X ;
  logic [5:0] _134__S ;
  logic _135_;
  logic _135__T ;
  logic _135__R ;
  logic _135__C ;
  logic _135__X ;
  logic [5:0] _135__S ;
  logic _136_;
  logic _136__T ;
  logic _136__R ;
  logic _136__C ;
  logic _136__X ;
  logic [5:0] _136__S ;
  logic _137_;
  logic _137__T ;
  logic _137__R ;
  logic _137__C ;
  logic _137__X ;
  logic [5:0] _137__S ;
  logic _138_;
  logic _138__T ;
  logic _138__R ;
  logic _138__C ;
  logic _138__X ;
  logic [5:0] _138__S ;
  logic _139_;
  logic _139__T ;
  logic _139__R ;
  logic _139__C ;
  logic _139__X ;
  logic [5:0] _139__S ;
  logic _140_;
  logic _140__T ;
  logic _140__R ;
  logic _140__C ;
  logic _140__X ;
  logic [5:0] _140__S ;
  logic _141_;
  logic _141__T ;
  logic _141__R ;
  logic _141__C ;
  logic _141__X ;
  logic [5:0] _141__S ;
  logic _142_;
  logic _142__T ;
  logic _142__R ;
  logic _142__C ;
  logic _142__X ;
  logic [5:0] _142__S ;
  logic _143_;
  logic _143__T ;
  logic _143__R ;
  logic _143__C ;
  logic _143__X ;
  logic [5:0] _143__S ;
  logic _144_;
  logic _144__T ;
  logic _144__R ;
  logic _144__C ;
  logic _144__X ;
  logic [5:0] _144__S ;
  logic _145_;
  logic _145__T ;
  logic _145__R ;
  logic _145__C ;
  logic _145__X ;
  logic [5:0] _145__S ;
  logic _146_;
  logic _146__T ;
  logic _146__R ;
  logic _146__C ;
  logic _146__X ;
  logic [5:0] _146__S ;
  logic _147_;
  logic _147__T ;
  logic _147__R ;
  logic _147__C ;
  logic _147__X ;
  logic [5:0] _147__S ;
  logic _148_;
  logic _148__T ;
  logic _148__R ;
  logic _148__C ;
  logic _148__X ;
  logic [5:0] _148__S ;
  logic _149_;
  logic _149__T ;
  logic _149__R ;
  logic _149__C ;
  logic _149__X ;
  logic [5:0] _149__S ;
  logic _150_;
  logic _150__T ;
  logic _150__R ;
  logic _150__C ;
  logic _150__X ;
  logic [5:0] _150__S ;
  logic _151_;
  logic _151__T ;
  logic _151__R ;
  logic _151__C ;
  logic _151__X ;
  logic [5:0] _151__S ;
  logic _152_;
  logic _152__T ;
  logic _152__R ;
  logic _152__C ;
  logic _152__X ;
  logic [5:0] _152__S ;
  logic _153_;
  logic _153__T ;
  logic _153__R ;
  logic _153__C ;
  logic _153__X ;
  logic [5:0] _153__S ;
  logic _154_;
  logic _154__T ;
  logic _154__R ;
  logic _154__C ;
  logic _154__X ;
  logic [5:0] _154__S ;
  logic _155_;
  logic _155__T ;
  logic _155__R ;
  logic _155__C ;
  logic _155__X ;
  logic [5:0] _155__S ;
  logic _156_;
  logic _156__T ;
  logic _156__R ;
  logic _156__C ;
  logic _156__X ;
  logic [5:0] _156__S ;
  logic _157_;
  logic _157__T ;
  logic _157__R ;
  logic _157__C ;
  logic _157__X ;
  logic [5:0] _157__S ;
  logic _158_;
  logic _158__T ;
  logic _158__R ;
  logic _158__C ;
  logic _158__X ;
  logic [5:0] _158__S ;
  logic _159_;
  logic _159__T ;
  logic _159__R ;
  logic _159__C ;
  logic _159__X ;
  logic [5:0] _159__S ;
  logic _160_;
  logic _160__T ;
  logic _160__R ;
  logic _160__C ;
  logic _160__X ;
  logic [5:0] _160__S ;
  logic _161_;
  logic _161__T ;
  logic _161__R ;
  logic _161__C ;
  logic _161__X ;
  logic [5:0] _161__S ;
  logic _162_;
  logic _162__T ;
  logic _162__R ;
  logic _162__C ;
  logic _162__X ;
  logic [5:0] _162__S ;
  logic _163_;
  logic _163__T ;
  logic _163__R ;
  logic _163__C ;
  logic _163__X ;
  logic [5:0] _163__S ;
  logic _164_;
  logic _164__T ;
  logic _164__R ;
  logic _164__C ;
  logic _164__X ;
  logic [5:0] _164__S ;
  logic _165_;
  logic _165__T ;
  logic _165__R ;
  logic _165__C ;
  logic _165__X ;
  logic [5:0] _165__S ;
  logic _166_;
  logic _166__T ;
  logic _166__R ;
  logic _166__C ;
  logic _166__X ;
  logic [5:0] _166__S ;
  logic _167_;
  logic _167__T ;
  logic _167__R ;
  logic _167__C ;
  logic _167__X ;
  logic [5:0] _167__S ;
  logic _168_;
  logic _168__T ;
  logic _168__R ;
  logic _168__C ;
  logic _168__X ;
  logic [5:0] _168__S ;
  logic _169_;
  logic _169__T ;
  logic _169__R ;
  logic _169__C ;
  logic _169__X ;
  logic [5:0] _169__S ;
  logic _170_;
  logic _170__T ;
  logic _170__R ;
  logic _170__C ;
  logic _170__X ;
  logic [5:0] _170__S ;
  logic _171_;
  logic _171__T ;
  logic _171__R ;
  logic _171__C ;
  logic _171__X ;
  logic [5:0] _171__S ;
  logic _172_;
  logic _172__T ;
  logic _172__R ;
  logic _172__C ;
  logic _172__X ;
  logic [5:0] _172__S ;
  logic _173_;
  logic _173__T ;
  logic _173__R ;
  logic _173__C ;
  logic _173__X ;
  logic [5:0] _173__S ;
  logic _174_;
  logic _174__T ;
  logic _174__R ;
  logic _174__C ;
  logic _174__X ;
  logic [5:0] _174__S ;
  logic _175_;
  logic _175__T ;
  logic _175__R ;
  logic _175__C ;
  logic _175__X ;
  logic [5:0] _175__S ;
  logic _176_;
  logic _176__T ;
  logic _176__R ;
  logic _176__C ;
  logic _176__X ;
  logic [5:0] _176__S ;
  logic _177_;
  logic _177__T ;
  logic _177__R ;
  logic _177__C ;
  logic _177__X ;
  logic [5:0] _177__S ;
  logic _178_;
  logic _178__T ;
  logic _178__R ;
  logic _178__C ;
  logic _178__X ;
  logic [5:0] _178__S ;
  logic _179_;
  logic _179__T ;
  logic _179__R ;
  logic _179__C ;
  logic _179__X ;
  logic [5:0] _179__S ;
  logic _180_;
  logic _180__T ;
  logic _180__R ;
  logic _180__C ;
  logic _180__X ;
  logic [5:0] _180__S ;
  logic _181_;
  logic _181__T ;
  logic _181__R ;
  logic _181__C ;
  logic _181__X ;
  logic [5:0] _181__S ;
  logic _182_;
  logic _182__T ;
  logic _182__R ;
  logic _182__C ;
  logic _182__X ;
  logic [5:0] _182__S ;
  logic _183_;
  logic _183__T ;
  logic _183__R ;
  logic _183__C ;
  logic _183__X ;
  logic [5:0] _183__S ;
  logic _184_;
  logic _184__T ;
  logic _184__R ;
  logic _184__C ;
  logic _184__X ;
  logic [5:0] _184__S ;
  logic _185_;
  logic _185__T ;
  logic _185__R ;
  logic _185__C ;
  logic _185__X ;
  logic [5:0] _185__S ;
  logic _186_;
  logic _186__T ;
  logic _186__R ;
  logic _186__C ;
  logic _186__X ;
  logic [5:0] _186__S ;
  logic _187_;
  logic _187__T ;
  logic _187__R ;
  logic _187__C ;
  logic _187__X ;
  logic [5:0] _187__S ;
  logic _188_;
  logic _188__T ;
  logic _188__R ;
  logic _188__C ;
  logic _188__X ;
  logic [5:0] _188__S ;
  logic _189_;
  logic _189__T ;
  logic _189__R ;
  logic _189__C ;
  logic _189__X ;
  logic [5:0] _189__S ;
  logic _190_;
  logic _190__T ;
  logic _190__R ;
  logic _190__C ;
  logic _190__X ;
  logic [5:0] _190__S ;
  logic _191_;
  logic _191__T ;
  logic _191__R ;
  logic _191__C ;
  logic _191__X ;
  logic [5:0] _191__S ;
  logic _192_;
  logic _192__T ;
  logic _192__R ;
  logic _192__C ;
  logic _192__X ;
  logic [5:0] _192__S ;
  logic _193_;
  logic _193__T ;
  logic _193__R ;
  logic _193__C ;
  logic _193__X ;
  logic [5:0] _193__S ;
  logic _194_;
  logic _194__T ;
  logic _194__R ;
  logic _194__C ;
  logic _194__X ;
  logic [5:0] _194__S ;
  logic _195_;
  logic _195__T ;
  logic _195__R ;
  logic _195__C ;
  logic _195__X ;
  logic [5:0] _195__S ;
  logic _196_;
  logic _196__T ;
  logic _196__R ;
  logic _196__C ;
  logic _196__X ;
  logic [5:0] _196__S ;
  logic _197_;
  logic _197__T ;
  logic _197__R ;
  logic _197__C ;
  logic _197__X ;
  logic [5:0] _197__S ;
  logic _198_;
  logic _198__T ;
  logic _198__R ;
  logic _198__C ;
  logic _198__X ;
  logic [5:0] _198__S ;
  logic _199_;
  logic _199__T ;
  logic _199__R ;
  logic _199__C ;
  logic _199__X ;
  logic [5:0] _199__S ;
  logic _200_;
  logic _200__T ;
  logic _200__R ;
  logic _200__C ;
  logic _200__X ;
  logic [5:0] _200__S ;
  logic _201_;
  logic _201__T ;
  logic _201__R ;
  logic _201__C ;
  logic _201__X ;
  logic [5:0] _201__S ;
  logic _202_;
  logic _202__T ;
  logic _202__R ;
  logic _202__C ;
  logic _202__X ;
  logic [5:0] _202__S ;
  logic _203_;
  logic _203__T ;
  logic _203__R ;
  logic _203__C ;
  logic _203__X ;
  logic [5:0] _203__S ;
  logic _204_;
  logic _204__T ;
  logic _204__R ;
  logic _204__C ;
  logic _204__X ;
  logic [5:0] _204__S ;
  logic _205_;
  logic _205__T ;
  logic _205__R ;
  logic _205__C ;
  logic _205__X ;
  logic [5:0] _205__S ;
  logic _206_;
  logic _206__T ;
  logic _206__R ;
  logic _206__C ;
  logic _206__X ;
  logic [5:0] _206__S ;
  logic _207_;
  logic _207__T ;
  logic _207__R ;
  logic _207__C ;
  logic _207__X ;
  logic [5:0] _207__S ;
  logic _208_;
  logic _208__T ;
  logic _208__R ;
  logic _208__C ;
  logic _208__X ;
  logic [5:0] _208__S ;
  logic _209_;
  logic _209__T ;
  logic _209__R ;
  logic _209__C ;
  logic _209__X ;
  logic [5:0] _209__S ;
  logic _210_;
  logic _210__T ;
  logic _210__R ;
  logic _210__C ;
  logic _210__X ;
  logic [5:0] _210__S ;
  logic _211_;
  logic _211__T ;
  logic _211__R ;
  logic _211__C ;
  logic _211__X ;
  logic [5:0] _211__S ;
  logic _212_;
  logic _212__T ;
  logic _212__R ;
  logic _212__C ;
  logic _212__X ;
  logic [5:0] _212__S ;
  logic _213_;
  logic _213__T ;
  logic _213__R ;
  logic _213__C ;
  logic _213__X ;
  logic [5:0] _213__S ;
  logic _214_;
  logic _214__T ;
  logic _214__R ;
  logic _214__C ;
  logic _214__X ;
  logic [5:0] _214__S ;
  logic _215_;
  logic _215__T ;
  logic _215__R ;
  logic _215__C ;
  logic _215__X ;
  logic [5:0] _215__S ;
  logic _216_;
  logic _216__T ;
  logic _216__R ;
  logic _216__C ;
  logic _216__X ;
  logic [5:0] _216__S ;
  logic _217_;
  logic _217__T ;
  logic _217__R ;
  logic _217__C ;
  logic _217__X ;
  logic [5:0] _217__S ;
  logic _218_;
  logic _218__T ;
  logic _218__R ;
  logic _218__C ;
  logic _218__X ;
  logic [5:0] _218__S ;
  logic _219_;
  logic _219__T ;
  logic _219__R ;
  logic _219__C ;
  logic _219__X ;
  logic [5:0] _219__S ;
  logic _220_;
  logic _220__T ;
  logic _220__R ;
  logic _220__C ;
  logic _220__X ;
  logic [5:0] _220__S ;
  logic _221_;
  logic _221__T ;
  logic _221__R ;
  logic _221__C ;
  logic _221__X ;
  logic [5:0] _221__S ;
  logic _222_;
  logic _222__T ;
  logic _222__R ;
  logic _222__C ;
  logic _222__X ;
  logic [5:0] _222__S ;
  logic _223_;
  logic _223__T ;
  logic _223__R ;
  logic _223__C ;
  logic _223__X ;
  logic [5:0] _223__S ;
  logic _224_;
  logic _224__T ;
  logic _224__R ;
  logic _224__C ;
  logic _224__X ;
  logic [5:0] _224__S ;
  logic _225_;
  logic _225__T ;
  logic _225__R ;
  logic _225__C ;
  logic _225__X ;
  logic [5:0] _225__S ;
  logic _226_;
  logic _226__T ;
  logic _226__R ;
  logic _226__C ;
  logic _226__X ;
  logic [5:0] _226__S ;
  logic _227_;
  logic _227__T ;
  logic _227__R ;
  logic _227__C ;
  logic _227__X ;
  logic [5:0] _227__S ;
  logic _228_;
  logic _228__T ;
  logic _228__R ;
  logic _228__C ;
  logic _228__X ;
  logic [5:0] _228__S ;
  logic _229_;
  logic _229__T ;
  logic _229__R ;
  logic _229__C ;
  logic _229__X ;
  logic [5:0] _229__S ;
  logic _230_;
  logic _230__T ;
  logic _230__R ;
  logic _230__C ;
  logic _230__X ;
  logic [5:0] _230__S ;
  logic _231_;
  logic _231__T ;
  logic _231__R ;
  logic _231__C ;
  logic _231__X ;
  logic [5:0] _231__S ;
  logic _232_;
  logic _232__T ;
  logic _232__R ;
  logic _232__C ;
  logic _232__X ;
  logic [5:0] _232__S ;
  logic _233_;
  logic _233__T ;
  logic _233__R ;
  logic _233__C ;
  logic _233__X ;
  logic [5:0] _233__S ;
  logic _234_;
  logic _234__T ;
  logic _234__R ;
  logic _234__C ;
  logic _234__X ;
  logic [5:0] _234__S ;
  logic _235_;
  logic _235__T ;
  logic _235__R ;
  logic _235__C ;
  logic _235__X ;
  logic [5:0] _235__S ;
  logic _236_;
  logic _236__T ;
  logic _236__R ;
  logic _236__C ;
  logic _236__X ;
  logic [5:0] _236__S ;
  logic _237_;
  logic _237__T ;
  logic _237__R ;
  logic _237__C ;
  logic _237__X ;
  logic [5:0] _237__S ;
  logic _238_;
  logic _238__T ;
  logic _238__R ;
  logic _238__C ;
  logic _238__X ;
  logic [5:0] _238__S ;
  logic _239_;
  logic _239__T ;
  logic _239__R ;
  logic _239__C ;
  logic _239__X ;
  logic [5:0] _239__S ;
  logic _240_;
  logic _240__T ;
  logic _240__R ;
  logic _240__C ;
  logic _240__X ;
  logic [5:0] _240__S ;
  logic _241_;
  logic _241__T ;
  logic _241__R ;
  logic _241__C ;
  logic _241__X ;
  logic [5:0] _241__S ;
  logic _242_;
  logic _242__T ;
  logic _242__R ;
  logic _242__C ;
  logic _242__X ;
  logic [5:0] _242__S ;
  logic _243_;
  logic _243__T ;
  logic _243__R ;
  logic _243__C ;
  logic _243__X ;
  logic [5:0] _243__S ;
  logic _244_;
  logic _244__T ;
  logic _244__R ;
  logic _244__C ;
  logic _244__X ;
  logic [5:0] _244__S ;
  logic _245_;
  logic _245__T ;
  logic _245__R ;
  logic _245__C ;
  logic _245__X ;
  logic [5:0] _245__S ;
  logic _246_;
  logic _246__T ;
  logic _246__R ;
  logic _246__C ;
  logic _246__X ;
  logic [5:0] _246__S ;
  logic _247_;
  logic _247__T ;
  logic _247__R ;
  logic _247__C ;
  logic _247__X ;
  logic [5:0] _247__S ;
  logic _248_;
  logic _248__T ;
  logic _248__R ;
  logic _248__C ;
  logic _248__X ;
  logic [5:0] _248__S ;
  logic _249_;
  logic _249__T ;
  logic _249__R ;
  logic _249__C ;
  logic _249__X ;
  logic [5:0] _249__S ;
  logic _250_;
  logic _250__T ;
  logic _250__R ;
  logic _250__C ;
  logic _250__X ;
  logic [5:0] _250__S ;
  logic _251_;
  logic _251__T ;
  logic _251__R ;
  logic _251__C ;
  logic _251__X ;
  logic [5:0] _251__S ;
  logic _252_;
  logic _252__T ;
  logic _252__R ;
  logic _252__C ;
  logic _252__X ;
  logic [5:0] _252__S ;
  logic _253_;
  logic _253__T ;
  logic _253__R ;
  logic _253__C ;
  logic _253__X ;
  logic [5:0] _253__S ;
  logic _254_;
  logic _254__T ;
  logic _254__R ;
  logic _254__C ;
  logic _254__X ;
  logic [5:0] _254__S ;
  logic _255_;
  logic _255__T ;
  logic _255__R ;
  logic _255__C ;
  logic _255__X ;
  logic [5:0] _255__S ;
  logic _256_;
  logic _256__T ;
  logic _256__R ;
  logic _256__C ;
  logic _256__X ;
  logic [5:0] _256__S ;
  logic _257_;
  logic _257__T ;
  logic _257__R ;
  logic _257__C ;
  logic _257__X ;
  logic [5:0] _257__S ;
  logic _258_;
  logic _258__T ;
  logic _258__R ;
  logic _258__C ;
  logic _258__X ;
  logic [5:0] _258__S ;
  logic [16:0] _259_;
  logic [16:0] _259__T ;
  logic [16:0] _259__R ;
  logic [16:0] _259__C ;
  logic [16:0] _259__X ;
  logic [5:0] _259__S ;
  logic [3:0] _260_;
  logic [3:0] _260__T ;
  logic [3:0] _260__R ;
  logic [3:0] _260__C ;
  logic [3:0] _260__X ;
  logic [5:0] _260__S ;
  logic [3:0] _261_;
  logic [3:0] _261__T ;
  logic [3:0] _261__R ;
  logic [3:0] _261__C ;
  logic [3:0] _261__X ;
  logic [5:0] _261__S ;
  logic [3:0] _262_;
  logic [3:0] _262__T ;
  logic [3:0] _262__R ;
  logic [3:0] _262__C ;
  logic [3:0] _262__X ;
  logic [5:0] _262__S ;
  logic [6:0] _263_;
  logic [6:0] _263__T ;
  logic [6:0] _263__R ;
  logic [6:0] _263__C ;
  logic [6:0] _263__X ;
  logic [5:0] _263__S ;
  logic [6:0] _264_;
  logic [6:0] _264__T ;
  logic [6:0] _264__R ;
  logic [6:0] _264__C ;
  logic [6:0] _264__X ;
  logic [5:0] _264__S ;
  logic _265_;
  logic _265__T ;
  logic _265__R ;
  logic _265__C ;
  logic _265__X ;
  logic [5:0] _265__S ;
  logic _266_;
  logic _266__T ;
  logic _266__R ;
  logic _266__C ;
  logic _266__X ;
  logic [5:0] _266__S ;
  logic _267_;
  logic _267__T ;
  logic _267__R ;
  logic _267__C ;
  logic _267__X ;
  logic [5:0] _267__S ;
  logic _268_;
  logic _268__T ;
  logic _268__R ;
  logic _268__C ;
  logic _268__X ;
  logic [5:0] _268__S ;
  logic _269_;
  logic _269__T ;
  logic _269__R ;
  logic _269__C ;
  logic _269__X ;
  logic [5:0] _269__S ;
  logic _270_;
  logic _270__T ;
  logic _270__R ;
  logic _270__C ;
  logic _270__X ;
  logic [5:0] _270__S ;
  logic _271_;
  logic _271__T ;
  logic _271__R ;
  logic _271__C ;
  logic _271__X ;
  logic [5:0] _271__S ;
  logic _272_;
  logic _272__T ;
  logic _272__R ;
  logic _272__C ;
  logic _272__X ;
  logic [5:0] _272__S ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_T ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_R ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_C ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_X ;
  logic [5:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_S ;
  logic [3:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl;
  logic [3:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_T ;
  logic [3:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_R ;
  logic [3:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_C ;
  logic [3:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_X ;
  logic [5:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_S ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_T ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_R ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_C ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_X ;
  logic [5:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_S ;
  logic [9:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl;
  logic [9:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_T ;
  logic [9:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_R ;
  logic [9:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_C ;
  logic [9:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_X ;
  logic [5:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_S ;
  logic [4:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva;
  logic [4:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_T ;
  logic [4:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_R ;
  logic [4:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_C ;
  logic [4:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_X ;
  logic [5:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_S ;
  logic [9:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm;
  logic [9:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_T ;
  logic [9:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_R ;
  logic [9:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_C ;
  logic [9:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_X ;
  logic [5:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_S ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_T ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_R ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_C ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_X ;
  logic [5:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_S ;
  logic [3:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_or_1_nl;
  logic [3:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_or_1_nl_T ;
  logic [3:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_or_1_nl_R ;
  logic [3:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_or_1_nl_C ;
  logic [3:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_or_1_nl_X ;
  logic [5:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_or_1_nl_S ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1;
  logic  FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1_T ;
  logic  FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1_PREV_VAL1 ;
  logic  FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1_PREV_VAL2 ;
  logic  FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1_R ;
  logic  FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1_X ;
  logic  FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1_C ;
  logic [5:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1_S ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1_t_flag ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1_r_flag ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1_S = 3 ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1;
  logic  FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1_T ;
  logic  FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1_PREV_VAL1 ;
  logic  FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1_PREV_VAL2 ;
  logic  FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1_R ;
  logic  FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1_X ;
  logic  FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1_C ;
  logic [5:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1_S ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1_t_flag ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1_r_flag ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1_S = 4 ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1;
  logic  FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1_T ;
  logic  FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1_PREV_VAL1 ;
  logic  FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1_PREV_VAL2 ;
  logic  FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1_R ;
  logic  FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1_X ;
  logic  FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1_C ;
  logic [5:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1_S ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1_t_flag ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1_r_flag ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1_S = 5 ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1;
  logic  FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1_T ;
  logic  FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1_PREV_VAL1 ;
  logic  FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1_PREV_VAL2 ;
  logic  FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1_R ;
  logic  FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1_X ;
  logic  FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1_C ;
  logic [5:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1_S ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1_t_flag ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1_r_flag ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1_S = 6 ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_T ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_R ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_C ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_X ;
  logic [5:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_S ;
  logic IntMulExt_17U_16U_33U_o_and_1_nl;
  logic IntMulExt_17U_16U_33U_o_and_1_nl_T ;
  logic IntMulExt_17U_16U_33U_o_and_1_nl_R ;
  logic IntMulExt_17U_16U_33U_o_and_1_nl_C ;
  logic IntMulExt_17U_16U_33U_o_and_1_nl_X ;
  logic [5:0] IntMulExt_17U_16U_33U_o_and_1_nl_S ;
  logic [31:0] IntMulExt_17U_16U_33U_o_mux1h_1_itm;
  logic [31:0] IntMulExt_17U_16U_33U_o_mux1h_1_itm_T ;
  logic [31:0] IntMulExt_17U_16U_33U_o_mux1h_1_itm_R ;
  logic [31:0] IntMulExt_17U_16U_33U_o_mux1h_1_itm_C ;
  logic [31:0] IntMulExt_17U_16U_33U_o_mux1h_1_itm_X ;
  logic [5:0] IntMulExt_17U_16U_33U_o_mux1h_1_itm_S ;
  logic [23:0] IntMulExt_9U_16U_25U_1_o_mul_nl;
  logic [23:0] IntMulExt_9U_16U_25U_1_o_mul_nl_T ;
  logic [23:0] IntMulExt_9U_16U_25U_1_o_mul_nl_R ;
  logic [23:0] IntMulExt_9U_16U_25U_1_o_mul_nl_C ;
  logic [23:0] IntMulExt_9U_16U_25U_1_o_mul_nl_X ;
  logic [5:0] IntMulExt_9U_16U_25U_1_o_mul_nl_S ;
  logic [23:0] IntMulExt_9U_16U_25U_o_mul_itm_2;
  logic [23:0]  IntMulExt_9U_16U_25U_o_mul_itm_2_T ;
  logic [23:0]  IntMulExt_9U_16U_25U_o_mul_itm_2_PREV_VAL1 ;
  logic [23:0]  IntMulExt_9U_16U_25U_o_mul_itm_2_PREV_VAL2 ;
  logic [23:0]  IntMulExt_9U_16U_25U_o_mul_itm_2_R ;
  logic [23:0]  IntMulExt_9U_16U_25U_o_mul_itm_2_X ;
  logic [23:0]  IntMulExt_9U_16U_25U_o_mul_itm_2_C ;
  logic [5:0] IntMulExt_9U_16U_25U_o_mul_itm_2_S ;
  logic IntMulExt_9U_16U_25U_o_mul_itm_2_t_flag ;
  logic IntMulExt_9U_16U_25U_o_mul_itm_2_r_flag ;
  assign IntMulExt_9U_16U_25U_o_mul_itm_2_S = 7 ;
  logic [16:0] IntMulExt_9U_16U_25U_o_mux_2_nl;
  logic [16:0] IntMulExt_9U_16U_25U_o_mux_2_nl_T ;
  logic [16:0] IntMulExt_9U_16U_25U_o_mux_2_nl_R ;
  logic [16:0] IntMulExt_9U_16U_25U_o_mux_2_nl_C ;
  logic [16:0] IntMulExt_9U_16U_25U_o_mux_2_nl_X ;
  logic [5:0] IntMulExt_9U_16U_25U_o_mux_2_nl_S ;
  logic [7:0] IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl;
  logic [7:0] IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_T ;
  logic [7:0] IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_R ;
  logic [7:0] IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_C ;
  logic [7:0] IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_X ;
  logic [5:0] IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_S ;
  logic IntShiftRight_25U_5U_9U_1_obits_fixed_IntShiftRight_25U_5U_9U_1_obits_fixed_nor_1_nl;
  logic IntShiftRight_25U_5U_9U_1_obits_fixed_IntShiftRight_25U_5U_9U_1_obits_fixed_nor_1_nl_T ;
  logic IntShiftRight_25U_5U_9U_1_obits_fixed_IntShiftRight_25U_5U_9U_1_obits_fixed_nor_1_nl_R ;
  logic IntShiftRight_25U_5U_9U_1_obits_fixed_IntShiftRight_25U_5U_9U_1_obits_fixed_nor_1_nl_C ;
  logic IntShiftRight_25U_5U_9U_1_obits_fixed_IntShiftRight_25U_5U_9U_1_obits_fixed_nor_1_nl_X ;
  logic [5:0] IntShiftRight_25U_5U_9U_1_obits_fixed_IntShiftRight_25U_5U_9U_1_obits_fixed_nor_1_nl_S ;
  logic [25:0] IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva;
  logic [25:0] IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_T ;
  logic [25:0] IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R ;
  logic [25:0] IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C ;
  logic [25:0] IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X ;
  logic [5:0] IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_S ;
  logic IntShiftRight_25U_5U_9U_1_obits_fixed_and_nl;
  logic IntShiftRight_25U_5U_9U_1_obits_fixed_and_nl_T ;
  logic IntShiftRight_25U_5U_9U_1_obits_fixed_and_nl_R ;
  logic IntShiftRight_25U_5U_9U_1_obits_fixed_and_nl_C ;
  logic IntShiftRight_25U_5U_9U_1_obits_fixed_and_nl_X ;
  logic [5:0] IntShiftRight_25U_5U_9U_1_obits_fixed_and_nl_S ;
  logic IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva;
  logic IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva_T ;
  logic IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva_R ;
  logic IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva_C ;
  logic IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva_X ;
  logic [5:0] IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva_S ;
  logic [6:0] IntShiftRight_25U_5U_9U_1_obits_fixed_nor_2_nl;
  logic [6:0] IntShiftRight_25U_5U_9U_1_obits_fixed_nor_2_nl_T ;
  logic [6:0] IntShiftRight_25U_5U_9U_1_obits_fixed_nor_2_nl_R ;
  logic [6:0] IntShiftRight_25U_5U_9U_1_obits_fixed_nor_2_nl_C ;
  logic [6:0] IntShiftRight_25U_5U_9U_1_obits_fixed_nor_2_nl_X ;
  logic [5:0] IntShiftRight_25U_5U_9U_1_obits_fixed_nor_2_nl_S ;
  logic IntShiftRight_25U_5U_9U_1_obits_fixed_nor_ovfl_sva;
  logic IntShiftRight_25U_5U_9U_1_obits_fixed_nor_ovfl_sva_T ;
  logic IntShiftRight_25U_5U_9U_1_obits_fixed_nor_ovfl_sva_R ;
  logic IntShiftRight_25U_5U_9U_1_obits_fixed_nor_ovfl_sva_C ;
  logic IntShiftRight_25U_5U_9U_1_obits_fixed_nor_ovfl_sva_X ;
  logic [5:0] IntShiftRight_25U_5U_9U_1_obits_fixed_nor_ovfl_sva_S ;
  logic [55:0] IntShiftRight_25U_5U_9U_mbits_fixed_sva;
  logic [55:0] IntShiftRight_25U_5U_9U_mbits_fixed_sva_T ;
  logic [55:0] IntShiftRight_25U_5U_9U_mbits_fixed_sva_R ;
  logic [55:0] IntShiftRight_25U_5U_9U_mbits_fixed_sva_C ;
  logic [55:0] IntShiftRight_25U_5U_9U_mbits_fixed_sva_X ;
  logic [5:0] IntShiftRight_25U_5U_9U_mbits_fixed_sva_S ;
  logic IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_1_nl;
  logic IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_1_nl_T ;
  logic IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_1_nl_R ;
  logic IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_1_nl_C ;
  logic IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_1_nl_X ;
  logic [5:0] IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_1_nl_S ;
  logic [6:0] IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_nl;
  logic [6:0] IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_nl_T ;
  logic [6:0] IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_nl_R ;
  logic [6:0] IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_nl_C ;
  logic [6:0] IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_nl_X ;
  logic [5:0] IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_nl_S ;
  logic [25:0] IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva;
  logic [25:0] IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_T ;
  logic [25:0] IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R ;
  logic [25:0] IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C ;
  logic [25:0] IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X ;
  logic [5:0] IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_S ;
  logic IntShiftRight_25U_5U_9U_obits_fixed_and_nl;
  logic IntShiftRight_25U_5U_9U_obits_fixed_and_nl_T ;
  logic IntShiftRight_25U_5U_9U_obits_fixed_and_nl_R ;
  logic IntShiftRight_25U_5U_9U_obits_fixed_and_nl_C ;
  logic IntShiftRight_25U_5U_9U_obits_fixed_and_nl_X ;
  logic [5:0] IntShiftRight_25U_5U_9U_obits_fixed_and_nl_S ;
  logic IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva;
  logic IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva_T ;
  logic IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva_R ;
  logic IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva_C ;
  logic IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva_X ;
  logic [5:0] IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva_S ;
  logic [6:0] IntShiftRight_25U_5U_9U_obits_fixed_nor_2_nl;
  logic [6:0] IntShiftRight_25U_5U_9U_obits_fixed_nor_2_nl_T ;
  logic [6:0] IntShiftRight_25U_5U_9U_obits_fixed_nor_2_nl_R ;
  logic [6:0] IntShiftRight_25U_5U_9U_obits_fixed_nor_2_nl_C ;
  logic [6:0] IntShiftRight_25U_5U_9U_obits_fixed_nor_2_nl_X ;
  logic [5:0] IntShiftRight_25U_5U_9U_obits_fixed_nor_2_nl_S ;
  logic IntShiftRight_25U_5U_9U_obits_fixed_nor_ovfl_sva;
  logic IntShiftRight_25U_5U_9U_obits_fixed_nor_ovfl_sva_T ;
  logic IntShiftRight_25U_5U_9U_obits_fixed_nor_ovfl_sva_R ;
  logic IntShiftRight_25U_5U_9U_obits_fixed_nor_ovfl_sva_C ;
  logic IntShiftRight_25U_5U_9U_obits_fixed_nor_ovfl_sva_X ;
  logic [5:0] IntShiftRight_25U_5U_9U_obits_fixed_nor_ovfl_sva_S ;
  logic IntShiftRight_33U_5U_17U_mbits_fixed_and_nl;
  logic IntShiftRight_33U_5U_17U_mbits_fixed_and_nl_T ;
  logic IntShiftRight_33U_5U_17U_mbits_fixed_and_nl_R ;
  logic IntShiftRight_33U_5U_17U_mbits_fixed_and_nl_C ;
  logic IntShiftRight_33U_5U_17U_mbits_fixed_and_nl_X ;
  logic [5:0] IntShiftRight_33U_5U_17U_mbits_fixed_and_nl_S ;
  logic IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_1_nl;
  logic IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_1_nl_T ;
  logic IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_1_nl_R ;
  logic IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_1_nl_C ;
  logic IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_1_nl_X ;
  logic [5:0] IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_1_nl_S ;
  logic IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_2_seb_sva;
  logic IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_2_seb_sva_T ;
  logic IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_2_seb_sva_R ;
  logic IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_2_seb_sva_C ;
  logic IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_2_seb_sva_X ;
  logic [5:0] IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_2_seb_sva_S ;
  logic [33:0] IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva;
  logic [33:0] IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_T ;
  logic [33:0] IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R ;
  logic [33:0] IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C ;
  logic [33:0] IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X ;
  logic [5:0] IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_S ;
  logic IntShiftRight_33U_5U_17U_obits_fixed_and_nl;
  logic IntShiftRight_33U_5U_17U_obits_fixed_and_nl_T ;
  logic IntShiftRight_33U_5U_17U_obits_fixed_and_nl_R ;
  logic IntShiftRight_33U_5U_17U_obits_fixed_and_nl_C ;
  logic IntShiftRight_33U_5U_17U_obits_fixed_and_nl_X ;
  logic [5:0] IntShiftRight_33U_5U_17U_obits_fixed_and_nl_S ;
  logic IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva;
  logic IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_T ;
  logic IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_R ;
  logic IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_C ;
  logic IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_X ;
  logic [5:0] IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_S ;
  logic [14:0] IntShiftRight_33U_5U_17U_obits_fixed_nor_2_nl;
  logic [14:0] IntShiftRight_33U_5U_17U_obits_fixed_nor_2_nl_T ;
  logic [14:0] IntShiftRight_33U_5U_17U_obits_fixed_nor_2_nl_R ;
  logic [14:0] IntShiftRight_33U_5U_17U_obits_fixed_nor_2_nl_C ;
  logic [14:0] IntShiftRight_33U_5U_17U_obits_fixed_nor_2_nl_X ;
  logic [5:0] IntShiftRight_33U_5U_17U_obits_fixed_nor_2_nl_S ;
  logic IntShiftRight_33U_5U_17U_obits_fixed_nor_ovfl_sva;
  logic IntShiftRight_33U_5U_17U_obits_fixed_nor_ovfl_sva_T ;
  logic IntShiftRight_33U_5U_17U_obits_fixed_nor_ovfl_sva_R ;
  logic IntShiftRight_33U_5U_17U_obits_fixed_nor_ovfl_sva_C ;
  logic IntShiftRight_33U_5U_17U_obits_fixed_nor_ovfl_sva_X ;
  logic [5:0] IntShiftRight_33U_5U_17U_obits_fixed_nor_ovfl_sva_S ;
  logic IntSubExt_16U_16U_17U_o_and_tmp;
  logic IntSubExt_16U_16U_17U_o_and_tmp_T ;
  logic IntSubExt_16U_16U_17U_o_and_tmp_R ;
  logic IntSubExt_16U_16U_17U_o_and_tmp_C ;
  logic IntSubExt_16U_16U_17U_o_and_tmp_X ;
  logic [5:0] IntSubExt_16U_16U_17U_o_and_tmp_S ;
  logic [9:0] IntSubExt_16U_16U_17U_o_asn_IntSubExt_16U_16U_17U_o_conc_1_cgspt_9_mux_nl;
  logic [9:0] IntSubExt_16U_16U_17U_o_asn_IntSubExt_16U_16U_17U_o_conc_1_cgspt_9_mux_nl_T ;
  logic [9:0] IntSubExt_16U_16U_17U_o_asn_IntSubExt_16U_16U_17U_o_conc_1_cgspt_9_mux_nl_R ;
  logic [9:0] IntSubExt_16U_16U_17U_o_asn_IntSubExt_16U_16U_17U_o_conc_1_cgspt_9_mux_nl_C ;
  logic [9:0] IntSubExt_16U_16U_17U_o_asn_IntSubExt_16U_16U_17U_o_conc_1_cgspt_9_mux_nl_X ;
  logic [5:0] IntSubExt_16U_16U_17U_o_asn_IntSubExt_16U_16U_17U_o_conc_1_cgspt_9_mux_nl_S ;
  logic [16:0] IntSubExt_16U_16U_17U_o_mux1h_1_itm;
  logic [16:0] IntSubExt_16U_16U_17U_o_mux1h_1_itm_T ;
  logic [16:0] IntSubExt_16U_16U_17U_o_mux1h_1_itm_R ;
  logic [16:0] IntSubExt_16U_16U_17U_o_mux1h_1_itm_C ;
  logic [16:0] IntSubExt_16U_16U_17U_o_mux1h_1_itm_X ;
  logic [5:0] IntSubExt_16U_16U_17U_o_mux1h_1_itm_S ;
  logic [8:0] IntSubExt_8U_8U_9U_1_o_acc_nl;
  logic [8:0] IntSubExt_8U_8U_9U_1_o_acc_nl_T ;
  logic [8:0] IntSubExt_8U_8U_9U_1_o_acc_nl_R ;
  logic [8:0] IntSubExt_8U_8U_9U_1_o_acc_nl_C ;
  logic [8:0] IntSubExt_8U_8U_9U_1_o_acc_nl_X ;
  logic [5:0] IntSubExt_8U_8U_9U_1_o_acc_nl_S ;
  logic [8:0] IntSubExt_8U_8U_9U_o_acc_itm_2;
  logic [8:0]  IntSubExt_8U_8U_9U_o_acc_itm_2_T ;
  logic [8:0]  IntSubExt_8U_8U_9U_o_acc_itm_2_PREV_VAL1 ;
  logic [8:0]  IntSubExt_8U_8U_9U_o_acc_itm_2_PREV_VAL2 ;
  logic [8:0]  IntSubExt_8U_8U_9U_o_acc_itm_2_R ;
  logic [8:0]  IntSubExt_8U_8U_9U_o_acc_itm_2_X ;
  logic [8:0]  IntSubExt_8U_8U_9U_o_acc_itm_2_C ;
  logic [5:0] IntSubExt_8U_8U_9U_o_acc_itm_2_S ;
  logic IntSubExt_8U_8U_9U_o_acc_itm_2_t_flag ;
  logic IntSubExt_8U_8U_9U_o_acc_itm_2_r_flag ;
  assign IntSubExt_8U_8U_9U_o_acc_itm_2_S = 8 ;
  logic [7:0] IntSubExt_8U_8U_9U_o_mux_4_nl;
  logic [7:0] IntSubExt_8U_8U_9U_o_mux_4_nl_T ;
  logic [7:0] IntSubExt_8U_8U_9U_o_mux_4_nl_R ;
  logic [7:0] IntSubExt_8U_8U_9U_o_mux_4_nl_C ;
  logic [7:0] IntSubExt_8U_8U_9U_o_mux_4_nl_X ;
  logic [5:0] IntSubExt_8U_8U_9U_o_mux_4_nl_S ;
  logic [15:0] IntSubExt_8U_8U_9U_o_mux_5_nl;
  logic [15:0] IntSubExt_8U_8U_9U_o_mux_5_nl_T ;
  logic [15:0] IntSubExt_8U_8U_9U_o_mux_5_nl_R ;
  logic [15:0] IntSubExt_8U_8U_9U_o_mux_5_nl_C ;
  logic [15:0] IntSubExt_8U_8U_9U_o_mux_5_nl_X ;
  logic [5:0] IntSubExt_8U_8U_9U_o_mux_5_nl_S ;
  logic IsDenorm_5U_10U_land_lpi_1_dfm;
  logic IsDenorm_5U_10U_land_lpi_1_dfm_T ;
  logic IsDenorm_5U_10U_land_lpi_1_dfm_R ;
  logic IsDenorm_5U_10U_land_lpi_1_dfm_C ;
  logic IsDenorm_5U_10U_land_lpi_1_dfm_X ;
  logic [5:0] IsDenorm_5U_10U_land_lpi_1_dfm_S ;
  logic IsDenorm_5U_10U_or_tmp;
  logic IsDenorm_5U_10U_or_tmp_T ;
  logic IsDenorm_5U_10U_or_tmp_R ;
  logic IsDenorm_5U_10U_or_tmp_C ;
  logic IsDenorm_5U_10U_or_tmp_X ;
  logic [5:0] IsDenorm_5U_10U_or_tmp_S ;
  logic IsInf_5U_10U_IsInf_5U_10U_and_cse_sva;
  logic IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_T ;
  logic IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_R ;
  logic IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_C ;
  logic IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_X ;
  logic [5:0] IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_S ;
  logic IsInf_5U_10U_land_lpi_1_dfm;
  logic IsInf_5U_10U_land_lpi_1_dfm_T ;
  logic IsInf_5U_10U_land_lpi_1_dfm_R ;
  logic IsInf_5U_10U_land_lpi_1_dfm_C ;
  logic IsInf_5U_10U_land_lpi_1_dfm_X ;
  logic [5:0] IsInf_5U_10U_land_lpi_1_dfm_S ;
  logic IsNaN_5U_10U_land_lpi_1_dfm;
  logic IsNaN_5U_10U_land_lpi_1_dfm_T ;
  logic IsNaN_5U_10U_land_lpi_1_dfm_R ;
  logic IsNaN_5U_10U_land_lpi_1_dfm_C ;
  logic IsNaN_5U_10U_land_lpi_1_dfm_X ;
  logic [5:0] IsNaN_5U_10U_land_lpi_1_dfm_S ;
  logic IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva;
  logic IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_T ;
  logic IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_R ;
  logic IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_C ;
  logic IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_X ;
  logic [5:0] IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_S ;
  logic [17:0] acc_nl;
  logic [17:0] acc_nl_T ;
  logic [17:0] acc_nl_R ;
  logic [17:0] acc_nl_C ;
  logic [17:0] acc_nl_X ;
  logic [5:0] acc_nl_S ;
  logic and_108_nl;
  logic and_108_nl_T ;
  logic and_108_nl_R ;
  logic and_108_nl_C ;
  logic and_108_nl_X ;
  logic [5:0] and_108_nl_S ;
  logic and_120_nl;
  logic and_120_nl_T ;
  logic and_120_nl_R ;
  logic and_120_nl_C ;
  logic and_120_nl_X ;
  logic [5:0] and_120_nl_S ;
  logic and_137_cse;
  logic and_137_cse_T ;
  logic and_137_cse_R ;
  logic and_137_cse_C ;
  logic and_137_cse_X ;
  logic [5:0] and_137_cse_S ;
  logic and_144_cse;
  logic and_144_cse_T ;
  logic and_144_cse_R ;
  logic and_144_cse_C ;
  logic and_144_cse_X ;
  logic [5:0] and_144_cse_S ;
  logic and_76_nl;
  logic and_76_nl_T ;
  logic and_76_nl_R ;
  logic and_76_nl_C ;
  logic and_76_nl_X ;
  logic [5:0] and_76_nl_S ;
  logic and_dcpl_16;
  logic and_dcpl_16_T ;
  logic and_dcpl_16_R ;
  logic and_dcpl_16_C ;
  logic and_dcpl_16_X ;
  logic [5:0] and_dcpl_16_S ;
  logic and_dcpl_18;
  logic and_dcpl_18_T ;
  logic and_dcpl_18_R ;
  logic and_dcpl_18_C ;
  logic and_dcpl_18_X ;
  logic [5:0] and_dcpl_18_S ;
  logic and_dcpl_19;
  logic and_dcpl_19_T ;
  logic and_dcpl_19_R ;
  logic and_dcpl_19_C ;
  logic and_dcpl_19_X ;
  logic [5:0] and_dcpl_19_S ;
  logic and_dcpl_3;
  logic and_dcpl_3_T ;
  logic and_dcpl_3_R ;
  logic and_dcpl_3_C ;
  logic and_dcpl_3_X ;
  logic [5:0] and_dcpl_3_S ;
  logic and_dcpl_50;
  logic and_dcpl_50_T ;
  logic and_dcpl_50_R ;
  logic and_dcpl_50_C ;
  logic and_dcpl_50_X ;
  logic [5:0] and_dcpl_50_S ;
  logic and_tmp_4;
  logic and_tmp_4_T ;
  logic and_tmp_4_R ;
  logic and_tmp_4_C ;
  logic and_tmp_4_X ;
  logic [5:0] and_tmp_4_S ;
  logic asn_56;
  logic asn_56_T ;
  logic asn_56_R ;
  logic asn_56_C ;
  logic asn_56_X ;
  logic [5:0] asn_56_S ;
  input [15:0] cfg_alu_in_rsc_z;
  input [15:0] cfg_alu_in_rsc_z_T ;
  wire [5:0] cfg_alu_in_rsc_z_S ;
  output [15:0] cfg_alu_in_rsc_z_R ;
  output [15:0] cfg_alu_in_rsc_z_X ;
  output [15:0] cfg_alu_in_rsc_z_C ;
  assign cfg_alu_in_rsc_z_S = 0 ;
  logic [15:0] cfg_alu_in_rsci_d;
  logic [15:0] cfg_alu_in_rsci_d_T ;
  logic [15:0] cfg_alu_in_rsci_d_R ;
  logic [15:0] cfg_alu_in_rsci_d_C ;
  logic [15:0] cfg_alu_in_rsci_d_X ;
  logic [5:0] cfg_alu_in_rsci_d_S ;
  logic [15:0] cfg_mul_in_1_sva_2;
  logic [15:0]  cfg_mul_in_1_sva_2_T ;
  logic [15:0]  cfg_mul_in_1_sva_2_PREV_VAL1 ;
  logic [15:0]  cfg_mul_in_1_sva_2_PREV_VAL2 ;
  logic [15:0]  cfg_mul_in_1_sva_2_R ;
  logic [15:0]  cfg_mul_in_1_sva_2_X ;
  logic [15:0]  cfg_mul_in_1_sva_2_C ;
  logic [5:0] cfg_mul_in_1_sva_2_S ;
  logic cfg_mul_in_1_sva_2_t_flag ;
  logic cfg_mul_in_1_sva_2_r_flag ;
  assign cfg_mul_in_1_sva_2_S = 9 ;
  input [15:0] cfg_mul_in_rsc_z;
  input [15:0] cfg_mul_in_rsc_z_T ;
  wire [5:0] cfg_mul_in_rsc_z_S ;
  output [15:0] cfg_mul_in_rsc_z_R ;
  output [15:0] cfg_mul_in_rsc_z_X ;
  output [15:0] cfg_mul_in_rsc_z_C ;
  assign cfg_mul_in_rsc_z_S = 0 ;
  logic [15:0] cfg_mul_in_rsci_d;
  logic [15:0] cfg_mul_in_rsci_d_T ;
  logic [15:0] cfg_mul_in_rsci_d_R ;
  logic [15:0] cfg_mul_in_rsci_d_C ;
  logic [15:0] cfg_mul_in_rsci_d_X ;
  logic [5:0] cfg_mul_in_rsci_d_S ;
  input [1:0] cfg_precision_rsc_z;
  input [1:0] cfg_precision_rsc_z_T ;
  wire [5:0] cfg_precision_rsc_z_S ;
  output [1:0] cfg_precision_rsc_z_R ;
  output [1:0] cfg_precision_rsc_z_X ;
  output [1:0] cfg_precision_rsc_z_C ;
  assign cfg_precision_rsc_z_S = 0 ;
  logic [1:0] cfg_precision_rsci_d;
  logic [1:0] cfg_precision_rsci_d_T ;
  logic [1:0] cfg_precision_rsci_d_R ;
  logic [1:0] cfg_precision_rsci_d_C ;
  logic [1:0] cfg_precision_rsci_d_X ;
  logic [5:0] cfg_precision_rsci_d_S ;
  logic [4:0] cfg_truncate_mux1h_3_itm;
  logic [4:0] cfg_truncate_mux1h_3_itm_T ;
  logic [4:0] cfg_truncate_mux1h_3_itm_R ;
  logic [4:0] cfg_truncate_mux1h_3_itm_C ;
  logic [4:0] cfg_truncate_mux1h_3_itm_X ;
  logic [5:0] cfg_truncate_mux1h_3_itm_S ;
  input [4:0] cfg_truncate_rsc_z;
  input [4:0] cfg_truncate_rsc_z_T ;
  wire [5:0] cfg_truncate_rsc_z_S ;
  output [4:0] cfg_truncate_rsc_z_R ;
  output [4:0] cfg_truncate_rsc_z_X ;
  output [4:0] cfg_truncate_rsc_z_C ;
  assign cfg_truncate_rsc_z_S = 0 ;
  logic [4:0] cfg_truncate_rsci_d;
  logic [4:0] cfg_truncate_rsci_d_T ;
  logic [4:0] cfg_truncate_rsci_d_R ;
  logic [4:0] cfg_truncate_rsci_d_C ;
  logic [4:0] cfg_truncate_rsci_d_X ;
  logic [5:0] cfg_truncate_rsci_d_S ;
  output chn_data_in_rsc_lz;
  logic chn_data_in_rsc_lz ;
  output chn_data_in_rsc_lz_T ;
  logic chn_data_in_rsc_lz_T ;
  logic chn_data_in_rsc_lz_R ;
  logic chn_data_in_rsc_lz_C ;
  logic chn_data_in_rsc_lz_X ;
  logic [5:0] chn_data_in_rsc_lz_S ;
  input chn_data_in_rsc_lz_R0 ;
  input chn_data_in_rsc_lz_C0 ;
  wire chn_data_in_rsc_lz_X0 ;
  assign chn_data_in_rsc_lz_X0 = chn_data_in_rsc_lz_R0 ;
  input chn_data_in_rsc_vz;
  input chn_data_in_rsc_vz_T ;
  wire [5:0] chn_data_in_rsc_vz_S ;
  output chn_data_in_rsc_vz_R ;
  output chn_data_in_rsc_vz_X ;
  output chn_data_in_rsc_vz_C ;
  assign chn_data_in_rsc_vz_S = 0 ;
  input [15:0] chn_data_in_rsc_z;
  input [15:0] chn_data_in_rsc_z_T ;
  wire [5:0] chn_data_in_rsc_z_S ;
  output [15:0] chn_data_in_rsc_z_R ;
  output [15:0] chn_data_in_rsc_z_X ;
  output [15:0] chn_data_in_rsc_z_C ;
  assign chn_data_in_rsc_z_S = 0 ;
  logic chn_data_in_rsci_bawt;
  logic chn_data_in_rsci_bawt_T ;
  logic chn_data_in_rsci_bawt_R ;
  logic chn_data_in_rsci_bawt_C ;
  logic chn_data_in_rsci_bawt_X ;
  logic [5:0] chn_data_in_rsci_bawt_S ;
  logic [15:0] chn_data_in_rsci_d_mxwt;
  logic [15:0] chn_data_in_rsci_d_mxwt_T ;
  logic [15:0] chn_data_in_rsci_d_mxwt_R ;
  logic [15:0] chn_data_in_rsci_d_mxwt_C ;
  logic [15:0] chn_data_in_rsci_d_mxwt_X ;
  logic [5:0] chn_data_in_rsci_d_mxwt_S ;
  logic chn_data_in_rsci_iswt0;
  logic  chn_data_in_rsci_iswt0_T ;
  logic  chn_data_in_rsci_iswt0_PREV_VAL1 ;
  logic  chn_data_in_rsci_iswt0_PREV_VAL2 ;
  logic  chn_data_in_rsci_iswt0_R ;
  logic  chn_data_in_rsci_iswt0_X ;
  logic  chn_data_in_rsci_iswt0_C ;
  logic [5:0] chn_data_in_rsci_iswt0_S ;
  logic chn_data_in_rsci_iswt0_t_flag ;
  logic chn_data_in_rsci_iswt0_r_flag ;
  assign chn_data_in_rsci_iswt0_S = 10 ;
  logic chn_data_in_rsci_ld_core_psct;
  logic  chn_data_in_rsci_ld_core_psct_T ;
  logic  chn_data_in_rsci_ld_core_psct_PREV_VAL1 ;
  logic  chn_data_in_rsci_ld_core_psct_PREV_VAL2 ;
  logic  chn_data_in_rsci_ld_core_psct_R ;
  logic  chn_data_in_rsci_ld_core_psct_X ;
  logic  chn_data_in_rsci_ld_core_psct_C ;
  logic [5:0] chn_data_in_rsci_ld_core_psct_S ;
  logic chn_data_in_rsci_ld_core_psct_t_flag ;
  logic chn_data_in_rsci_ld_core_psct_r_flag ;
  assign chn_data_in_rsci_ld_core_psct_S = 11 ;
  logic chn_data_in_rsci_ld_core_psct_mx0c0;
  logic chn_data_in_rsci_ld_core_psct_mx0c0_T ;
  logic chn_data_in_rsci_ld_core_psct_mx0c0_R ;
  logic chn_data_in_rsci_ld_core_psct_mx0c0_C ;
  logic chn_data_in_rsci_ld_core_psct_mx0c0_X ;
  logic [5:0] chn_data_in_rsci_ld_core_psct_mx0c0_S ;
  input chn_data_in_rsci_oswt;
  input chn_data_in_rsci_oswt_T ;
  wire [5:0] chn_data_in_rsci_oswt_S ;
  output chn_data_in_rsci_oswt_R ;
  output chn_data_in_rsci_oswt_X ;
  output chn_data_in_rsci_oswt_C ;
  assign chn_data_in_rsci_oswt_S = 0 ;
  output chn_data_in_rsci_oswt_unreg;
  logic chn_data_in_rsci_oswt_unreg ;
  output chn_data_in_rsci_oswt_unreg_T ;
  logic chn_data_in_rsci_oswt_unreg_T ;
  logic chn_data_in_rsci_oswt_unreg_R ;
  logic chn_data_in_rsci_oswt_unreg_C ;
  logic chn_data_in_rsci_oswt_unreg_X ;
  logic [5:0] chn_data_in_rsci_oswt_unreg_S ;
  input chn_data_in_rsci_oswt_unreg_R0 ;
  input chn_data_in_rsci_oswt_unreg_C0 ;
  wire chn_data_in_rsci_oswt_unreg_X0 ;
  assign chn_data_in_rsci_oswt_unreg_X0 = chn_data_in_rsci_oswt_unreg_R0 ;
  logic chn_data_in_rsci_wen_comp;
  logic chn_data_in_rsci_wen_comp_T ;
  logic chn_data_in_rsci_wen_comp_R ;
  logic chn_data_in_rsci_wen_comp_C ;
  logic chn_data_in_rsci_wen_comp_X ;
  logic [5:0] chn_data_in_rsci_wen_comp_S ;
  logic chn_data_out_and_cse;
  logic chn_data_out_and_cse_T ;
  logic chn_data_out_and_cse_R ;
  logic chn_data_out_and_cse_C ;
  logic chn_data_out_and_cse_X ;
  logic [5:0] chn_data_out_and_cse_S ;
  output chn_data_out_rsc_lz;
  logic chn_data_out_rsc_lz ;
  output chn_data_out_rsc_lz_T ;
  logic chn_data_out_rsc_lz_T ;
  logic chn_data_out_rsc_lz_R ;
  logic chn_data_out_rsc_lz_C ;
  logic chn_data_out_rsc_lz_X ;
  logic [5:0] chn_data_out_rsc_lz_S ;
  input chn_data_out_rsc_lz_R0 ;
  input chn_data_out_rsc_lz_C0 ;
  wire chn_data_out_rsc_lz_X0 ;
  assign chn_data_out_rsc_lz_X0 = chn_data_out_rsc_lz_R0 ;
  input chn_data_out_rsc_vz;
  input chn_data_out_rsc_vz_T ;
  wire [5:0] chn_data_out_rsc_vz_S ;
  output chn_data_out_rsc_vz_R ;
  output chn_data_out_rsc_vz_X ;
  output chn_data_out_rsc_vz_C ;
  assign chn_data_out_rsc_vz_S = 0 ;
  output [17:0] chn_data_out_rsc_z;
  logic [17:0] chn_data_out_rsc_z ;
  output [17:0] chn_data_out_rsc_z_T ;
  logic [17:0] chn_data_out_rsc_z_T ;
  logic [17:0] chn_data_out_rsc_z_R ;
  logic [17:0] chn_data_out_rsc_z_C ;
  logic [17:0] chn_data_out_rsc_z_X ;
  logic [5:0] chn_data_out_rsc_z_S ;
  input [17:0] chn_data_out_rsc_z_R0 ;
  input [17:0] chn_data_out_rsc_z_C0 ;
  wire [17:0] chn_data_out_rsc_z_X0 ;
  assign chn_data_out_rsc_z_X0 = chn_data_out_rsc_z_R0 ;
  logic chn_data_out_rsci_bawt;
  logic chn_data_out_rsci_bawt_T ;
  logic chn_data_out_rsci_bawt_R ;
  logic chn_data_out_rsci_bawt_C ;
  logic chn_data_out_rsci_bawt_X ;
  logic [5:0] chn_data_out_rsci_bawt_S ;
  logic chn_data_out_rsci_d_0;
  logic  chn_data_out_rsci_d_0_T ;
  logic  chn_data_out_rsci_d_0_PREV_VAL1 ;
  logic  chn_data_out_rsci_d_0_PREV_VAL2 ;
  logic  chn_data_out_rsci_d_0_R ;
  logic  chn_data_out_rsci_d_0_X ;
  logic  chn_data_out_rsci_d_0_C ;
  logic [5:0] chn_data_out_rsci_d_0_S ;
  logic chn_data_out_rsci_d_0_t_flag ;
  logic chn_data_out_rsci_d_0_r_flag ;
  assign chn_data_out_rsci_d_0_S = 12 ;
  logic [3:0] chn_data_out_rsci_d_13_10;
  logic [3:0]  chn_data_out_rsci_d_13_10_T ;
  logic [3:0]  chn_data_out_rsci_d_13_10_PREV_VAL1 ;
  logic [3:0]  chn_data_out_rsci_d_13_10_PREV_VAL2 ;
  logic [3:0]  chn_data_out_rsci_d_13_10_R ;
  logic [3:0]  chn_data_out_rsci_d_13_10_X ;
  logic [3:0]  chn_data_out_rsci_d_13_10_C ;
  logic [5:0] chn_data_out_rsci_d_13_10_S ;
  logic chn_data_out_rsci_d_13_10_t_flag ;
  logic chn_data_out_rsci_d_13_10_r_flag ;
  assign chn_data_out_rsci_d_13_10_S = 13 ;
  logic chn_data_out_rsci_d_14;
  logic  chn_data_out_rsci_d_14_T ;
  logic  chn_data_out_rsci_d_14_PREV_VAL1 ;
  logic  chn_data_out_rsci_d_14_PREV_VAL2 ;
  logic  chn_data_out_rsci_d_14_R ;
  logic  chn_data_out_rsci_d_14_X ;
  logic  chn_data_out_rsci_d_14_C ;
  logic [5:0] chn_data_out_rsci_d_14_S ;
  logic chn_data_out_rsci_d_14_t_flag ;
  logic chn_data_out_rsci_d_14_r_flag ;
  assign chn_data_out_rsci_d_14_S = 14 ;
  logic chn_data_out_rsci_d_15;
  logic  chn_data_out_rsci_d_15_T ;
  logic  chn_data_out_rsci_d_15_PREV_VAL1 ;
  logic  chn_data_out_rsci_d_15_PREV_VAL2 ;
  logic  chn_data_out_rsci_d_15_R ;
  logic  chn_data_out_rsci_d_15_X ;
  logic  chn_data_out_rsci_d_15_C ;
  logic [5:0] chn_data_out_rsci_d_15_S ;
  logic chn_data_out_rsci_d_15_t_flag ;
  logic chn_data_out_rsci_d_15_r_flag ;
  assign chn_data_out_rsci_d_15_S = 15 ;
  logic chn_data_out_rsci_d_16;
  logic  chn_data_out_rsci_d_16_T ;
  logic  chn_data_out_rsci_d_16_PREV_VAL1 ;
  logic  chn_data_out_rsci_d_16_PREV_VAL2 ;
  logic  chn_data_out_rsci_d_16_R ;
  logic  chn_data_out_rsci_d_16_X ;
  logic  chn_data_out_rsci_d_16_C ;
  logic [5:0] chn_data_out_rsci_d_16_S ;
  logic chn_data_out_rsci_d_16_t_flag ;
  logic chn_data_out_rsci_d_16_r_flag ;
  assign chn_data_out_rsci_d_16_S = 16 ;
  logic chn_data_out_rsci_d_17;
  logic  chn_data_out_rsci_d_17_T ;
  logic  chn_data_out_rsci_d_17_PREV_VAL1 ;
  logic  chn_data_out_rsci_d_17_PREV_VAL2 ;
  logic  chn_data_out_rsci_d_17_R ;
  logic  chn_data_out_rsci_d_17_X ;
  logic  chn_data_out_rsci_d_17_C ;
  logic [5:0] chn_data_out_rsci_d_17_S ;
  logic chn_data_out_rsci_d_17_t_flag ;
  logic chn_data_out_rsci_d_17_r_flag ;
  assign chn_data_out_rsci_d_17_S = 17 ;
  logic [6:0] chn_data_out_rsci_d_7_1;
  logic [6:0]  chn_data_out_rsci_d_7_1_T ;
  logic [6:0]  chn_data_out_rsci_d_7_1_PREV_VAL1 ;
  logic [6:0]  chn_data_out_rsci_d_7_1_PREV_VAL2 ;
  logic [6:0]  chn_data_out_rsci_d_7_1_R ;
  logic [6:0]  chn_data_out_rsci_d_7_1_X ;
  logic [6:0]  chn_data_out_rsci_d_7_1_C ;
  logic [5:0] chn_data_out_rsci_d_7_1_S ;
  logic chn_data_out_rsci_d_7_1_t_flag ;
  logic chn_data_out_rsci_d_7_1_r_flag ;
  assign chn_data_out_rsci_d_7_1_S = 18 ;
  logic chn_data_out_rsci_d_8;
  logic  chn_data_out_rsci_d_8_T ;
  logic  chn_data_out_rsci_d_8_PREV_VAL1 ;
  logic  chn_data_out_rsci_d_8_PREV_VAL2 ;
  logic  chn_data_out_rsci_d_8_R ;
  logic  chn_data_out_rsci_d_8_X ;
  logic  chn_data_out_rsci_d_8_C ;
  logic [5:0] chn_data_out_rsci_d_8_S ;
  logic chn_data_out_rsci_d_8_t_flag ;
  logic chn_data_out_rsci_d_8_r_flag ;
  assign chn_data_out_rsci_d_8_S = 19 ;
  logic chn_data_out_rsci_d_9;
  logic  chn_data_out_rsci_d_9_T ;
  logic  chn_data_out_rsci_d_9_PREV_VAL1 ;
  logic  chn_data_out_rsci_d_9_PREV_VAL2 ;
  logic  chn_data_out_rsci_d_9_R ;
  logic  chn_data_out_rsci_d_9_X ;
  logic  chn_data_out_rsci_d_9_C ;
  logic [5:0] chn_data_out_rsci_d_9_S ;
  logic chn_data_out_rsci_d_9_t_flag ;
  logic chn_data_out_rsci_d_9_r_flag ;
  assign chn_data_out_rsci_d_9_S = 20 ;
  logic chn_data_out_rsci_iswt0;
  logic  chn_data_out_rsci_iswt0_T ;
  logic  chn_data_out_rsci_iswt0_PREV_VAL1 ;
  logic  chn_data_out_rsci_iswt0_PREV_VAL2 ;
  logic  chn_data_out_rsci_iswt0_R ;
  logic  chn_data_out_rsci_iswt0_X ;
  logic  chn_data_out_rsci_iswt0_C ;
  logic [5:0] chn_data_out_rsci_iswt0_S ;
  logic chn_data_out_rsci_iswt0_t_flag ;
  logic chn_data_out_rsci_iswt0_r_flag ;
  assign chn_data_out_rsci_iswt0_S = 21 ;
  input chn_data_out_rsci_oswt;
  input chn_data_out_rsci_oswt_T ;
  wire [5:0] chn_data_out_rsci_oswt_S ;
  output chn_data_out_rsci_oswt_R ;
  output chn_data_out_rsci_oswt_X ;
  output chn_data_out_rsci_oswt_C ;
  assign chn_data_out_rsci_oswt_S = 0 ;
  output chn_data_out_rsci_oswt_unreg;
  logic chn_data_out_rsci_oswt_unreg ;
  output chn_data_out_rsci_oswt_unreg_T ;
  logic chn_data_out_rsci_oswt_unreg_T ;
  logic chn_data_out_rsci_oswt_unreg_R ;
  logic chn_data_out_rsci_oswt_unreg_C ;
  logic chn_data_out_rsci_oswt_unreg_X ;
  logic [5:0] chn_data_out_rsci_oswt_unreg_S ;
  input chn_data_out_rsci_oswt_unreg_R0 ;
  input chn_data_out_rsci_oswt_unreg_C0 ;
  wire chn_data_out_rsci_oswt_unreg_X0 ;
  assign chn_data_out_rsci_oswt_unreg_X0 = chn_data_out_rsci_oswt_unreg_R0 ;
  logic chn_data_out_rsci_wen_comp;
  logic chn_data_out_rsci_wen_comp_T ;
  logic chn_data_out_rsci_wen_comp_R ;
  logic chn_data_out_rsci_wen_comp_C ;
  logic chn_data_out_rsci_wen_comp_X ;
  logic [5:0] chn_data_out_rsci_wen_comp_S ;
  logic core_wen;
  logic core_wen_T ;
  logic core_wen_R ;
  logic core_wen_C ;
  logic core_wen_X ;
  logic [5:0] core_wen_S ;
  logic core_wten;
  logic core_wten_T ;
  logic core_wten_R ;
  logic core_wten_C ;
  logic core_wten_X ;
  logic [5:0] core_wten_S ;
  logic [14:0] else_else_o_trt_15_1_sva;
  logic [14:0] else_else_o_trt_15_1_sva_T ;
  logic [14:0] else_else_o_trt_15_1_sva_R ;
  logic [14:0] else_else_o_trt_15_1_sva_C ;
  logic [14:0] else_else_o_trt_15_1_sva_X ;
  logic [5:0] else_else_o_trt_15_1_sva_S ;
  logic [6:0] else_if_ac_int_cctor_16_10_sva;
  logic [6:0] else_if_ac_int_cctor_16_10_sva_T ;
  logic [6:0] else_if_ac_int_cctor_16_10_sva_R ;
  logic [6:0] else_if_ac_int_cctor_16_10_sva_C ;
  logic [6:0] else_if_ac_int_cctor_16_10_sva_X ;
  logic [5:0] else_if_ac_int_cctor_16_10_sva_S ;
  logic [1:0] fsm_output;
  logic [1:0] fsm_output_T ;
  logic [1:0] fsm_output_R ;
  logic [1:0] fsm_output_C ;
  logic [1:0] fsm_output_X ;
  logic [5:0] fsm_output_S ;
  logic i_data_and_cse;
  logic i_data_and_cse_T ;
  logic i_data_and_cse_R ;
  logic i_data_and_cse_C ;
  logic i_data_and_cse_X ;
  logic [5:0] i_data_and_cse_S ;
  logic i_data_slc_i_data_15_1_itm_3;
  logic  i_data_slc_i_data_15_1_itm_3_T ;
  logic  i_data_slc_i_data_15_1_itm_3_PREV_VAL1 ;
  logic  i_data_slc_i_data_15_1_itm_3_PREV_VAL2 ;
  logic  i_data_slc_i_data_15_1_itm_3_R ;
  logic  i_data_slc_i_data_15_1_itm_3_X ;
  logic  i_data_slc_i_data_15_1_itm_3_C ;
  logic [5:0] i_data_slc_i_data_15_1_itm_3_S ;
  logic i_data_slc_i_data_15_1_itm_3_t_flag ;
  logic i_data_slc_i_data_15_1_itm_3_r_flag ;
  assign i_data_slc_i_data_15_1_itm_3_S = 22 ;
  logic i_data_slc_i_data_15_1_itm_4;
  logic  i_data_slc_i_data_15_1_itm_4_T ;
  logic  i_data_slc_i_data_15_1_itm_4_PREV_VAL1 ;
  logic  i_data_slc_i_data_15_1_itm_4_PREV_VAL2 ;
  logic  i_data_slc_i_data_15_1_itm_4_R ;
  logic  i_data_slc_i_data_15_1_itm_4_X ;
  logic  i_data_slc_i_data_15_1_itm_4_C ;
  logic [5:0] i_data_slc_i_data_15_1_itm_4_S ;
  logic i_data_slc_i_data_15_1_itm_4_t_flag ;
  logic i_data_slc_i_data_15_1_itm_4_r_flag ;
  assign i_data_slc_i_data_15_1_itm_4_S = 23 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3;
  logic [1:0]  io_read_cfg_precision_rsc_svs_st_3_T ;
  logic [1:0]  io_read_cfg_precision_rsc_svs_st_3_PREV_VAL1 ;
  logic [1:0]  io_read_cfg_precision_rsc_svs_st_3_PREV_VAL2 ;
  logic [1:0]  io_read_cfg_precision_rsc_svs_st_3_R ;
  logic [1:0]  io_read_cfg_precision_rsc_svs_st_3_X ;
  logic [1:0]  io_read_cfg_precision_rsc_svs_st_3_C ;
  logic [5:0] io_read_cfg_precision_rsc_svs_st_3_S ;
  logic io_read_cfg_precision_rsc_svs_st_3_t_flag ;
  logic io_read_cfg_precision_rsc_svs_st_3_r_flag ;
  assign io_read_cfg_precision_rsc_svs_st_3_S = 24 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_4;
  logic [1:0]  io_read_cfg_precision_rsc_svs_st_4_T ;
  logic [1:0]  io_read_cfg_precision_rsc_svs_st_4_PREV_VAL1 ;
  logic [1:0]  io_read_cfg_precision_rsc_svs_st_4_PREV_VAL2 ;
  logic [1:0]  io_read_cfg_precision_rsc_svs_st_4_R ;
  logic [1:0]  io_read_cfg_precision_rsc_svs_st_4_X ;
  logic [1:0]  io_read_cfg_precision_rsc_svs_st_4_C ;
  logic [5:0] io_read_cfg_precision_rsc_svs_st_4_S ;
  logic io_read_cfg_precision_rsc_svs_st_4_t_flag ;
  logic io_read_cfg_precision_rsc_svs_st_4_r_flag ;
  assign io_read_cfg_precision_rsc_svs_st_4_S = 25 ;
  logic [3:0] libraries_leading_sign_10_0_8b78af2050cf8551b0aa4ca6a9790ede3d5a_1;
  logic [3:0] libraries_leading_sign_10_0_8b78af2050cf8551b0aa4ca6a9790ede3d5a_1_T ;
  logic [3:0] libraries_leading_sign_10_0_8b78af2050cf8551b0aa4ca6a9790ede3d5a_1_R ;
  logic [3:0] libraries_leading_sign_10_0_8b78af2050cf8551b0aa4ca6a9790ede3d5a_1_C ;
  logic [3:0] libraries_leading_sign_10_0_8b78af2050cf8551b0aa4ca6a9790ede3d5a_1_X ;
  logic [5:0] libraries_leading_sign_10_0_8b78af2050cf8551b0aa4ca6a9790ede3d5a_1_S ;
  logic main_stage_en_1;
  logic main_stage_en_1_T ;
  logic main_stage_en_1_R ;
  logic main_stage_en_1_C ;
  logic main_stage_en_1_X ;
  logic [5:0] main_stage_en_1_S ;
  logic main_stage_v_1;
  logic  main_stage_v_1_T ;
  logic  main_stage_v_1_PREV_VAL1 ;
  logic  main_stage_v_1_PREV_VAL2 ;
  logic  main_stage_v_1_R ;
  logic  main_stage_v_1_X ;
  logic  main_stage_v_1_C ;
  logic [5:0] main_stage_v_1_S ;
  logic main_stage_v_1_t_flag ;
  logic main_stage_v_1_r_flag ;
  assign main_stage_v_1_S = 26 ;
  logic main_stage_v_1_mx0c1;
  logic main_stage_v_1_mx0c1_T ;
  logic main_stage_v_1_mx0c1_R ;
  logic main_stage_v_1_mx0c1_C ;
  logic main_stage_v_1_mx0c1_X ;
  logic [5:0] main_stage_v_1_mx0c1_S ;
  logic main_stage_v_2;
  logic  main_stage_v_2_T ;
  logic  main_stage_v_2_PREV_VAL1 ;
  logic  main_stage_v_2_PREV_VAL2 ;
  logic  main_stage_v_2_R ;
  logic  main_stage_v_2_X ;
  logic  main_stage_v_2_C ;
  logic [5:0] main_stage_v_2_S ;
  logic main_stage_v_2_t_flag ;
  logic main_stage_v_2_r_flag ;
  assign main_stage_v_2_S = 27 ;
  logic main_stage_v_2_mx0c1;
  logic main_stage_v_2_mx0c1_T ;
  logic main_stage_v_2_mx0c1_R ;
  logic main_stage_v_2_mx0c1_C ;
  logic main_stage_v_2_mx0c1_X ;
  logic [5:0] main_stage_v_2_mx0c1_S ;
  logic mux_18_nl;
  logic mux_18_nl_T ;
  logic mux_18_nl_R ;
  logic mux_18_nl_C ;
  logic mux_18_nl_X ;
  logic [5:0] mux_18_nl_S ;
  logic mux_19_nl;
  logic mux_19_nl_T ;
  logic mux_19_nl_R ;
  logic mux_19_nl_C ;
  logic mux_19_nl_X ;
  logic [5:0] mux_19_nl_S ;
  logic mux_20_nl;
  logic mux_20_nl_T ;
  logic mux_20_nl_R ;
  logic mux_20_nl_C ;
  logic mux_20_nl_X ;
  logic [5:0] mux_20_nl_S ;
  logic mux_21_nl;
  logic mux_21_nl_T ;
  logic mux_21_nl_R ;
  logic mux_21_nl_C ;
  logic mux_21_nl_X ;
  logic [5:0] mux_21_nl_S ;
  logic mux_22_nl;
  logic mux_22_nl_T ;
  logic mux_22_nl_R ;
  logic mux_22_nl_C ;
  logic mux_22_nl_X ;
  logic [5:0] mux_22_nl_S ;
  logic mux_23_nl;
  logic mux_23_nl_T ;
  logic mux_23_nl_R ;
  logic mux_23_nl_C ;
  logic mux_23_nl_X ;
  logic [5:0] mux_23_nl_S ;
  logic mux_24_nl;
  logic mux_24_nl_T ;
  logic mux_24_nl_R ;
  logic mux_24_nl_C ;
  logic mux_24_nl_X ;
  logic [5:0] mux_24_nl_S ;
  logic mux_25_nl;
  logic mux_25_nl_T ;
  logic mux_25_nl_R ;
  logic mux_25_nl_C ;
  logic mux_25_nl_X ;
  logic [5:0] mux_25_nl_S ;
  logic mux_28_nl;
  logic mux_28_nl_T ;
  logic mux_28_nl_R ;
  logic mux_28_nl_C ;
  logic mux_28_nl_X ;
  logic [5:0] mux_28_nl_S ;
  logic mux_33_nl;
  logic mux_33_nl_T ;
  logic mux_33_nl_R ;
  logic mux_33_nl_C ;
  logic mux_33_nl_X ;
  logic [5:0] mux_33_nl_S ;
  logic mux_35_nl;
  logic mux_35_nl_T ;
  logic mux_35_nl_R ;
  logic mux_35_nl_C ;
  logic mux_35_nl_X ;
  logic [5:0] mux_35_nl_S ;
  logic mux_36_nl;
  logic mux_36_nl_T ;
  logic mux_36_nl_R ;
  logic mux_36_nl_C ;
  logic mux_36_nl_X ;
  logic [5:0] mux_36_nl_S ;
  logic mux_37_nl;
  logic mux_37_nl_T ;
  logic mux_37_nl_R ;
  logic mux_37_nl_C ;
  logic mux_37_nl_X ;
  logic [5:0] mux_37_nl_S ;
  logic mux_38_nl;
  logic mux_38_nl_T ;
  logic mux_38_nl_R ;
  logic mux_38_nl_C ;
  logic mux_38_nl_X ;
  logic [5:0] mux_38_nl_S ;
  logic mux_41_nl;
  logic mux_41_nl_T ;
  logic mux_41_nl_R ;
  logic mux_41_nl_C ;
  logic mux_41_nl_X ;
  logic [5:0] mux_41_nl_S ;
  logic mux_42_nl;
  logic mux_42_nl_T ;
  logic mux_42_nl_R ;
  logic mux_42_nl_C ;
  logic mux_42_nl_X ;
  logic [5:0] mux_42_nl_S ;
  logic mux_43_itm;
  logic mux_43_itm_T ;
  logic mux_43_itm_R ;
  logic mux_43_itm_C ;
  logic mux_43_itm_X ;
  logic [5:0] mux_43_itm_S ;
  logic mux_44_nl;
  logic mux_44_nl_T ;
  logic mux_44_nl_R ;
  logic mux_44_nl_C ;
  logic mux_44_nl_X ;
  logic [5:0] mux_44_nl_S ;
  logic mux_48_nl;
  logic mux_48_nl_T ;
  logic mux_48_nl_R ;
  logic mux_48_nl_C ;
  logic mux_48_nl_X ;
  logic [5:0] mux_48_nl_S ;
  logic mux_4_nl;
  logic mux_4_nl_T ;
  logic mux_4_nl_R ;
  logic mux_4_nl_C ;
  logic mux_4_nl_X ;
  logic [5:0] mux_4_nl_S ;
  logic mux_9_nl;
  logic mux_9_nl_T ;
  logic mux_9_nl_R ;
  logic mux_9_nl_C ;
  logic mux_9_nl_X ;
  logic [5:0] mux_9_nl_S ;
  logic [5:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva;
  logic [5:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_T ;
  logic [5:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_R ;
  logic [5:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_C ;
  logic [5:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_X ;
  logic [5:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_S ;
  logic [8:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_a;
  logic [8:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_a_T ;
  logic [8:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_a_R ;
  logic [8:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_a_C ;
  logic [8:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_a_X ;
  logic [5:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_a_S ;
  logic [4:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s;
  logic [4:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s_T ;
  logic [4:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s_R ;
  logic [4:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s_C ;
  logic [4:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s_X ;
  logic [5:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s_S ;
  logic [17:0] nl_HLS_cdp_icvt_core_chn_data_out_rsci_inst_chn_data_out_rsci_d;
  logic [17:0] nl_HLS_cdp_icvt_core_chn_data_out_rsci_inst_chn_data_out_rsci_d_T ;
  logic [17:0] nl_HLS_cdp_icvt_core_chn_data_out_rsci_inst_chn_data_out_rsci_d_R ;
  logic [17:0] nl_HLS_cdp_icvt_core_chn_data_out_rsci_inst_chn_data_out_rsci_d_C ;
  logic [17:0] nl_HLS_cdp_icvt_core_chn_data_out_rsci_inst_chn_data_out_rsci_d_X ;
  logic [5:0] nl_HLS_cdp_icvt_core_chn_data_out_rsci_inst_chn_data_out_rsci_d_S ;
  logic [24:0] nl_IntMulExt_9U_16U_25U_1_o_mul_nl;
  logic [24:0] nl_IntMulExt_9U_16U_25U_1_o_mul_nl_T ;
  logic [24:0] nl_IntMulExt_9U_16U_25U_1_o_mul_nl_R ;
  logic [24:0] nl_IntMulExt_9U_16U_25U_1_o_mul_nl_C ;
  logic [24:0] nl_IntMulExt_9U_16U_25U_1_o_mul_nl_X ;
  logic [5:0] nl_IntMulExt_9U_16U_25U_1_o_mul_nl_S ;
  logic [63:0] nl_IntShiftRight_25U_5U_9U_1_mbits_fixed_rshift_rg_a;
  logic [63:0] nl_IntShiftRight_25U_5U_9U_1_mbits_fixed_rshift_rg_a_T ;
  logic [63:0] nl_IntShiftRight_25U_5U_9U_1_mbits_fixed_rshift_rg_a_R ;
  logic [63:0] nl_IntShiftRight_25U_5U_9U_1_mbits_fixed_rshift_rg_a_C ;
  logic [63:0] nl_IntShiftRight_25U_5U_9U_1_mbits_fixed_rshift_rg_a_X ;
  logic [5:0] nl_IntShiftRight_25U_5U_9U_1_mbits_fixed_rshift_rg_a_S ;
  logic [4:0] nl_IntShiftRight_25U_5U_9U_1_mbits_fixed_rshift_rg_s;
  logic [4:0] nl_IntShiftRight_25U_5U_9U_1_mbits_fixed_rshift_rg_s_T ;
  logic [4:0] nl_IntShiftRight_25U_5U_9U_1_mbits_fixed_rshift_rg_s_R ;
  logic [4:0] nl_IntShiftRight_25U_5U_9U_1_mbits_fixed_rshift_rg_s_C ;
  logic [4:0] nl_IntShiftRight_25U_5U_9U_1_mbits_fixed_rshift_rg_s_X ;
  logic [5:0] nl_IntShiftRight_25U_5U_9U_1_mbits_fixed_rshift_rg_s_S ;
  logic [26:0] nl_IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva;
  logic [26:0] nl_IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_T ;
  logic [26:0] nl_IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R ;
  logic [26:0] nl_IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C ;
  logic [26:0] nl_IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X ;
  logic [5:0] nl_IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_S ;
  logic [55:0] nl_IntShiftRight_25U_5U_9U_mbits_fixed_rshift_rg_a;
  logic [55:0] nl_IntShiftRight_25U_5U_9U_mbits_fixed_rshift_rg_a_T ;
  logic [55:0] nl_IntShiftRight_25U_5U_9U_mbits_fixed_rshift_rg_a_R ;
  logic [55:0] nl_IntShiftRight_25U_5U_9U_mbits_fixed_rshift_rg_a_C ;
  logic [55:0] nl_IntShiftRight_25U_5U_9U_mbits_fixed_rshift_rg_a_X ;
  logic [5:0] nl_IntShiftRight_25U_5U_9U_mbits_fixed_rshift_rg_a_S ;
  logic [4:0] nl_IntShiftRight_25U_5U_9U_mbits_fixed_rshift_rg_s;
  logic [4:0] nl_IntShiftRight_25U_5U_9U_mbits_fixed_rshift_rg_s_T ;
  logic [4:0] nl_IntShiftRight_25U_5U_9U_mbits_fixed_rshift_rg_s_R ;
  logic [4:0] nl_IntShiftRight_25U_5U_9U_mbits_fixed_rshift_rg_s_C ;
  logic [4:0] nl_IntShiftRight_25U_5U_9U_mbits_fixed_rshift_rg_s_X ;
  logic [5:0] nl_IntShiftRight_25U_5U_9U_mbits_fixed_rshift_rg_s_S ;
  logic [26:0] nl_IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva;
  logic [26:0] nl_IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_T ;
  logic [26:0] nl_IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R ;
  logic [26:0] nl_IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C ;
  logic [26:0] nl_IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X ;
  logic [5:0] nl_IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_S ;
  logic [34:0] nl_IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva;
  logic [34:0] nl_IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_T ;
  logic [34:0] nl_IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R ;
  logic [34:0] nl_IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C ;
  logic [34:0] nl_IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X ;
  logic [5:0] nl_IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_S ;
  logic [9:0] nl_IntSubExt_8U_8U_9U_1_o_acc_nl;
  logic [9:0] nl_IntSubExt_8U_8U_9U_1_o_acc_nl_T ;
  logic [9:0] nl_IntSubExt_8U_8U_9U_1_o_acc_nl_R ;
  logic [9:0] nl_IntSubExt_8U_8U_9U_1_o_acc_nl_C ;
  logic [9:0] nl_IntSubExt_8U_8U_9U_1_o_acc_nl_X ;
  logic [5:0] nl_IntSubExt_8U_8U_9U_1_o_acc_nl_S ;
  logic [18:0] nl_acc_nl;
  logic [18:0] nl_acc_nl_T ;
  logic [18:0] nl_acc_nl_R ;
  logic [18:0] nl_acc_nl_C ;
  logic [18:0] nl_acc_nl_X ;
  logic [5:0] nl_acc_nl_S ;
  logic [9:0] nl_leading_sign_10_0_rg_mantissa;
  logic [9:0] nl_leading_sign_10_0_rg_mantissa_T ;
  logic [9:0] nl_leading_sign_10_0_rg_mantissa_R ;
  logic [9:0] nl_leading_sign_10_0_rg_mantissa_C ;
  logic [9:0] nl_leading_sign_10_0_rg_mantissa_X ;
  logic [5:0] nl_leading_sign_10_0_rg_mantissa_S ;
  logic [32:0] nl_z_out;
  logic [32:0] nl_z_out_T ;
  logic [32:0] nl_z_out_R ;
  logic [32:0] nl_z_out_C ;
  logic [32:0] nl_z_out_X ;
  logic [5:0] nl_z_out_S ;
  logic nor_12_nl;
  logic nor_12_nl_T ;
  logic nor_12_nl_R ;
  logic nor_12_nl_C ;
  logic nor_12_nl_X ;
  logic [5:0] nor_12_nl_S ;
  logic nor_13_cse;
  logic nor_13_cse_T ;
  logic nor_13_cse_R ;
  logic nor_13_cse_C ;
  logic nor_13_cse_X ;
  logic [5:0] nor_13_cse_S ;
  logic nor_15_nl;
  logic nor_15_nl_T ;
  logic nor_15_nl_R ;
  logic nor_15_nl_C ;
  logic nor_15_nl_X ;
  logic [5:0] nor_15_nl_S ;
  logic nor_17_cse;
  logic nor_17_cse_T ;
  logic nor_17_cse_R ;
  logic nor_17_cse_C ;
  logic nor_17_cse_X ;
  logic [5:0] nor_17_cse_S ;
  logic nor_19_nl;
  logic nor_19_nl_T ;
  logic nor_19_nl_R ;
  logic nor_19_nl_C ;
  logic nor_19_nl_X ;
  logic [5:0] nor_19_nl_S ;
  logic nor_20_nl;
  logic nor_20_nl_T ;
  logic nor_20_nl_R ;
  logic nor_20_nl_C ;
  logic nor_20_nl_X ;
  logic [5:0] nor_20_nl_S ;
  logic nor_21_nl;
  logic nor_21_nl_T ;
  logic nor_21_nl_R ;
  logic nor_21_nl_C ;
  logic nor_21_nl_X ;
  logic [5:0] nor_21_nl_S ;
  logic nor_23_cse;
  logic nor_23_cse_T ;
  logic nor_23_cse_R ;
  logic nor_23_cse_C ;
  logic nor_23_cse_X ;
  logic [5:0] nor_23_cse_S ;
  logic nor_24_nl;
  logic nor_24_nl_T ;
  logic nor_24_nl_R ;
  logic nor_24_nl_C ;
  logic nor_24_nl_X ;
  logic [5:0] nor_24_nl_S ;
  logic nor_30_nl;
  logic nor_30_nl_T ;
  logic nor_30_nl_R ;
  logic nor_30_nl_C ;
  logic nor_30_nl_X ;
  logic [5:0] nor_30_nl_S ;
  logic nor_tmp_11;
  logic  nor_tmp_11_T ;
  logic  nor_tmp_11_PREV_VAL1 ;
  logic  nor_tmp_11_PREV_VAL2 ;
  logic  nor_tmp_11_R ;
  logic  nor_tmp_11_X ;
  logic  nor_tmp_11_C ;
  logic [5:0] nor_tmp_11_S ;
  logic nor_tmp_11_t_flag ;
  logic nor_tmp_11_r_flag ;
  assign nor_tmp_11_S = 28 ;
  logic not_tmp_22;
  logic not_tmp_22_T ;
  logic not_tmp_22_R ;
  logic not_tmp_22_C ;
  logic not_tmp_22_X ;
  logic [5:0] not_tmp_22_S ;
  input nvdla_core_clk;
  input nvdla_core_clk_T ;
  wire [5:0] nvdla_core_clk_S ;
  output nvdla_core_clk_R ;
  output nvdla_core_clk_X ;
  output nvdla_core_clk_C ;
  assign nvdla_core_clk_S = 0 ;
  input nvdla_core_rstn;
  input nvdla_core_rstn_T ;
  wire [5:0] nvdla_core_rstn_S ;
  output nvdla_core_rstn_R ;
  output nvdla_core_rstn_X ;
  output nvdla_core_rstn_C ;
  assign nvdla_core_rstn_S = 0 ;
  logic or_107_cse;
  logic or_107_cse_T ;
  logic or_107_cse_R ;
  logic or_107_cse_C ;
  logic or_107_cse_X ;
  logic [5:0] or_107_cse_S ;
  logic or_127_nl;
  logic or_127_nl_T ;
  logic or_127_nl_R ;
  logic or_127_nl_C ;
  logic or_127_nl_X ;
  logic [5:0] or_127_nl_S ;
  logic or_28_nl;
  logic or_28_nl_T ;
  logic or_28_nl_R ;
  logic or_28_nl_C ;
  logic or_28_nl_X ;
  logic [5:0] or_28_nl_S ;
  logic or_2_nl;
  logic or_2_nl_T ;
  logic or_2_nl_R ;
  logic or_2_nl_C ;
  logic or_2_nl_X ;
  logic [5:0] or_2_nl_S ;
  logic or_30_nl;
  logic or_30_nl_T ;
  logic or_30_nl_R ;
  logic or_30_nl_C ;
  logic or_30_nl_X ;
  logic [5:0] or_30_nl_S ;
  logic or_38_nl;
  logic or_38_nl_T ;
  logic or_38_nl_R ;
  logic or_38_nl_C ;
  logic or_38_nl_X ;
  logic [5:0] or_38_nl_S ;
  logic or_39_nl;
  logic or_39_nl_T ;
  logic or_39_nl_R ;
  logic or_39_nl_C ;
  logic or_39_nl_X ;
  logic [5:0] or_39_nl_S ;
  logic or_3_cse;
  logic or_3_cse_T ;
  logic or_3_cse_R ;
  logic or_3_cse_C ;
  logic or_3_cse_X ;
  logic [5:0] or_3_cse_S ;
  logic or_42_cse;
  logic or_42_cse_T ;
  logic or_42_cse_R ;
  logic or_42_cse_C ;
  logic or_42_cse_X ;
  logic [5:0] or_42_cse_S ;
  logic or_65_nl;
  logic or_65_nl_T ;
  logic or_65_nl_R ;
  logic or_65_nl_C ;
  logic or_65_nl_X ;
  logic [5:0] or_65_nl_S ;
  logic or_66_cse;
  logic or_66_cse_T ;
  logic or_66_cse_R ;
  logic or_66_cse_C ;
  logic or_66_cse_X ;
  logic [5:0] or_66_cse_S ;
  logic or_70_nl;
  logic or_70_nl_T ;
  logic or_70_nl_R ;
  logic or_70_nl_C ;
  logic or_70_nl_X ;
  logic [5:0] or_70_nl_S ;
  logic or_78_cse_1;
  logic or_78_cse_1_T ;
  logic or_78_cse_1_R ;
  logic or_78_cse_1_C ;
  logic or_78_cse_1_X ;
  logic [5:0] or_78_cse_1_S ;
  logic or_83_nl;
  logic or_83_nl_T ;
  logic or_83_nl_R ;
  logic or_83_nl_C ;
  logic or_83_nl_X ;
  logic [5:0] or_83_nl_S ;
  logic or_tmp_15;
  logic or_tmp_15_T ;
  logic or_tmp_15_R ;
  logic or_tmp_15_C ;
  logic or_tmp_15_X ;
  logic [5:0] or_tmp_15_S ;
  logic or_tmp_35;
  logic or_tmp_35_T ;
  logic or_tmp_35_R ;
  logic or_tmp_35_C ;
  logic or_tmp_35_X ;
  logic [5:0] or_tmp_35_S ;
  logic or_tmp_80;
  logic or_tmp_80_T ;
  logic or_tmp_80_R ;
  logic or_tmp_80_C ;
  logic or_tmp_80_X ;
  logic [5:0] or_tmp_80_S ;
  logic reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp;
  logic  reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_T ;
  logic  reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_PREV_VAL1 ;
  logic  reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_PREV_VAL2 ;
  logic  reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_R ;
  logic  reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_X ;
  logic  reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_C ;
  logic [5:0] reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_S ;
  logic reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_t_flag ;
  logic reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_r_flag ;
  assign reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_S = 29 ;
  logic [8:0] reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1;
  logic [8:0]  reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_T ;
  logic [8:0]  reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_PREV_VAL1 ;
  logic [8:0]  reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_PREV_VAL2 ;
  logic [8:0]  reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_R ;
  logic [8:0]  reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_X ;
  logic [8:0]  reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_C ;
  logic [5:0] reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_S ;
  logic reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_t_flag ;
  logic reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_r_flag ;
  assign reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_S = 30 ;
  logic [23:0] reg_IntMulExt_17U_16U_33U_o_mul_1_itm;
  logic [23:0]  reg_IntMulExt_17U_16U_33U_o_mul_1_itm_T ;
  logic [23:0]  reg_IntMulExt_17U_16U_33U_o_mul_1_itm_PREV_VAL1 ;
  logic [23:0]  reg_IntMulExt_17U_16U_33U_o_mul_1_itm_PREV_VAL2 ;
  logic [23:0]  reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R ;
  logic [23:0]  reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X ;
  logic [23:0]  reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C ;
  logic [5:0] reg_IntMulExt_17U_16U_33U_o_mul_1_itm_S ;
  logic reg_IntMulExt_17U_16U_33U_o_mul_1_itm_t_flag ;
  logic reg_IntMulExt_17U_16U_33U_o_mul_1_itm_r_flag ;
  assign reg_IntMulExt_17U_16U_33U_o_mul_1_itm_S = 31 ;
  logic [7:0] reg_IntMulExt_17U_16U_33U_o_mul_itm;
  logic [7:0]  reg_IntMulExt_17U_16U_33U_o_mul_itm_T ;
  logic [7:0]  reg_IntMulExt_17U_16U_33U_o_mul_itm_PREV_VAL1 ;
  logic [7:0]  reg_IntMulExt_17U_16U_33U_o_mul_itm_PREV_VAL2 ;
  logic [7:0]  reg_IntMulExt_17U_16U_33U_o_mul_itm_R ;
  logic [7:0]  reg_IntMulExt_17U_16U_33U_o_mul_itm_X ;
  logic [7:0]  reg_IntMulExt_17U_16U_33U_o_mul_itm_C ;
  logic [5:0] reg_IntMulExt_17U_16U_33U_o_mul_itm_S ;
  logic reg_IntMulExt_17U_16U_33U_o_mul_itm_t_flag ;
  logic reg_IntMulExt_17U_16U_33U_o_mul_itm_r_flag ;
  assign reg_IntMulExt_17U_16U_33U_o_mul_itm_S = 32 ;
  logic reg_IntSubExt_16U_16U_17U_o_acc_1_itm;
  logic  reg_IntSubExt_16U_16U_17U_o_acc_1_itm_T ;
  logic  reg_IntSubExt_16U_16U_17U_o_acc_1_itm_PREV_VAL1 ;
  logic  reg_IntSubExt_16U_16U_17U_o_acc_1_itm_PREV_VAL2 ;
  logic  reg_IntSubExt_16U_16U_17U_o_acc_1_itm_R ;
  logic  reg_IntSubExt_16U_16U_17U_o_acc_1_itm_X ;
  logic  reg_IntSubExt_16U_16U_17U_o_acc_1_itm_C ;
  logic [5:0] reg_IntSubExt_16U_16U_17U_o_acc_1_itm_S ;
  logic reg_IntSubExt_16U_16U_17U_o_acc_1_itm_t_flag ;
  logic reg_IntSubExt_16U_16U_17U_o_acc_1_itm_r_flag ;
  assign reg_IntSubExt_16U_16U_17U_o_acc_1_itm_S = 33 ;
  logic [8:0] reg_IntSubExt_16U_16U_17U_o_acc_2_itm;
  logic [8:0]  reg_IntSubExt_16U_16U_17U_o_acc_2_itm_T ;
  logic [8:0]  reg_IntSubExt_16U_16U_17U_o_acc_2_itm_PREV_VAL1 ;
  logic [8:0]  reg_IntSubExt_16U_16U_17U_o_acc_2_itm_PREV_VAL2 ;
  logic [8:0]  reg_IntSubExt_16U_16U_17U_o_acc_2_itm_R ;
  logic [8:0]  reg_IntSubExt_16U_16U_17U_o_acc_2_itm_X ;
  logic [8:0]  reg_IntSubExt_16U_16U_17U_o_acc_2_itm_C ;
  logic [5:0] reg_IntSubExt_16U_16U_17U_o_acc_2_itm_S ;
  logic reg_IntSubExt_16U_16U_17U_o_acc_2_itm_t_flag ;
  logic reg_IntSubExt_16U_16U_17U_o_acc_2_itm_r_flag ;
  assign reg_IntSubExt_16U_16U_17U_o_acc_2_itm_S = 34 ;
  logic [6:0] reg_IntSubExt_16U_16U_17U_o_acc_itm;
  logic [6:0]  reg_IntSubExt_16U_16U_17U_o_acc_itm_T ;
  logic [6:0]  reg_IntSubExt_16U_16U_17U_o_acc_itm_PREV_VAL1 ;
  logic [6:0]  reg_IntSubExt_16U_16U_17U_o_acc_itm_PREV_VAL2 ;
  logic [6:0]  reg_IntSubExt_16U_16U_17U_o_acc_itm_R ;
  logic [6:0]  reg_IntSubExt_16U_16U_17U_o_acc_itm_X ;
  logic [6:0]  reg_IntSubExt_16U_16U_17U_o_acc_itm_C ;
  logic [5:0] reg_IntSubExt_16U_16U_17U_o_acc_itm_S ;
  logic reg_IntSubExt_16U_16U_17U_o_acc_itm_t_flag ;
  logic reg_IntSubExt_16U_16U_17U_o_acc_itm_r_flag ;
  assign reg_IntSubExt_16U_16U_17U_o_acc_itm_S = 35 ;
  logic reg_cfg_truncate_1_1_itm;
  logic  reg_cfg_truncate_1_1_itm_T ;
  logic  reg_cfg_truncate_1_1_itm_PREV_VAL1 ;
  logic  reg_cfg_truncate_1_1_itm_PREV_VAL2 ;
  logic  reg_cfg_truncate_1_1_itm_R ;
  logic  reg_cfg_truncate_1_1_itm_X ;
  logic  reg_cfg_truncate_1_1_itm_C ;
  logic [5:0] reg_cfg_truncate_1_1_itm_S ;
  logic reg_cfg_truncate_1_1_itm_t_flag ;
  logic reg_cfg_truncate_1_1_itm_r_flag ;
  assign reg_cfg_truncate_1_1_itm_S = 36 ;
  logic [3:0] reg_cfg_truncate_1_2_itm;
  logic [3:0]  reg_cfg_truncate_1_2_itm_T ;
  logic [3:0]  reg_cfg_truncate_1_2_itm_PREV_VAL1 ;
  logic [3:0]  reg_cfg_truncate_1_2_itm_PREV_VAL2 ;
  logic [3:0]  reg_cfg_truncate_1_2_itm_R ;
  logic [3:0]  reg_cfg_truncate_1_2_itm_X ;
  logic [3:0]  reg_cfg_truncate_1_2_itm_C ;
  logic [5:0] reg_cfg_truncate_1_2_itm_S ;
  logic reg_cfg_truncate_1_2_itm_t_flag ;
  logic reg_cfg_truncate_1_2_itm_r_flag ;
  assign reg_cfg_truncate_1_2_itm_S = 37 ;
  logic [3:0] reg_cfg_truncate_1_3_itm;
  logic [3:0]  reg_cfg_truncate_1_3_itm_T ;
  logic [3:0]  reg_cfg_truncate_1_3_itm_PREV_VAL1 ;
  logic [3:0]  reg_cfg_truncate_1_3_itm_PREV_VAL2 ;
  logic [3:0]  reg_cfg_truncate_1_3_itm_R ;
  logic [3:0]  reg_cfg_truncate_1_3_itm_X ;
  logic [3:0]  reg_cfg_truncate_1_3_itm_C ;
  logic [5:0] reg_cfg_truncate_1_3_itm_S ;
  logic reg_cfg_truncate_1_3_itm_t_flag ;
  logic reg_cfg_truncate_1_3_itm_r_flag ;
  assign reg_cfg_truncate_1_3_itm_S = 38 ;
  logic reg_cfg_truncate_1_itm;
  logic  reg_cfg_truncate_1_itm_T ;
  logic  reg_cfg_truncate_1_itm_PREV_VAL1 ;
  logic  reg_cfg_truncate_1_itm_PREV_VAL2 ;
  logic  reg_cfg_truncate_1_itm_R ;
  logic  reg_cfg_truncate_1_itm_X ;
  logic  reg_cfg_truncate_1_itm_C ;
  logic [5:0] reg_cfg_truncate_1_itm_S ;
  logic reg_cfg_truncate_1_itm_t_flag ;
  logic reg_cfg_truncate_1_itm_r_flag ;
  assign reg_cfg_truncate_1_itm_S = 39 ;
  logic reg_chn_data_out_rsci_ld_core_psct_cse;
  logic  reg_chn_data_out_rsci_ld_core_psct_cse_T ;
  logic  reg_chn_data_out_rsci_ld_core_psct_cse_PREV_VAL1 ;
  logic  reg_chn_data_out_rsci_ld_core_psct_cse_PREV_VAL2 ;
  logic  reg_chn_data_out_rsci_ld_core_psct_cse_R ;
  logic  reg_chn_data_out_rsci_ld_core_psct_cse_X ;
  logic  reg_chn_data_out_rsci_ld_core_psct_cse_C ;
  logic [5:0] reg_chn_data_out_rsci_ld_core_psct_cse_S ;
  logic reg_chn_data_out_rsci_ld_core_psct_cse_t_flag ;
  logic reg_chn_data_out_rsci_ld_core_psct_cse_r_flag ;
  assign reg_chn_data_out_rsci_ld_core_psct_cse_S = 40 ;
  logic [31:0] z_out;
  logic [31:0] z_out_T ;
  logic [31:0] z_out_R ;
  logic [31:0] z_out_C ;
  logic [31:0] z_out_X ;
  logic [5:0] z_out_S ;
  logic [16:0] z_out_1;
  logic [16:0] z_out_1_T ;
  logic [16:0] z_out_1_R ;
  logic [16:0] z_out_1_C ;
  logic [16:0] z_out_1_X ;
  logic [5:0] z_out_1_S ;
  logic [63:0] z_out_2;
  logic [63:0] z_out_2_T ;
  logic [63:0] z_out_2_R ;
  logic [63:0] z_out_2_C ;
  logic [63:0] z_out_2_X ;
  logic [5:0] z_out_2_S ;
  logic [25:0] fangyuan0;
  logic [25:0] fangyuan0_T ;
  logic [25:0] fangyuan0_R ;
  logic [25:0] fangyuan0_C ;
  logic [25:0] fangyuan0_X ;
  assign fangyuan0 = { IntShiftRight_25U_5U_9U_mbits_fixed_sva[55], IntShiftRight_25U_5U_9U_mbits_fixed_sva[55:31] };
  assign fangyuan0_T = {  IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [55] , IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [55:31]  };
  logic [5:0] fangyuan0_S ;
  assign fangyuan0_S = 0 ;
  logic [55:0] IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 ;
  logic [55:0] IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 ;
  logic [55:0] IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [55:55] = fangyuan0_R [25:25] ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [55:55] = fangyuan0_X [25:25] ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [55:55] = fangyuan0_C [25:25] ;
  assign { IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [0], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [1], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [2], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [3], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [4], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [5], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [6], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [7], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [8], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [9], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [10], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [11], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [12], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [13], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [14], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [15], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [16], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [17], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [18], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [19], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [20], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [21], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [22], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [23], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [24], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [25], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [26], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [27], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [28], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [29], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [30], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [31], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [32], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [33], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [34], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [35], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [36], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [37], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [38], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [39], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [40], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [41], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [42], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [43], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [44], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [45], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [46], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [47], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [48], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [49], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [50], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [51], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [52], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [53], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R0 [54] } = 0;
  assign { IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [0], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [1], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [2], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [3], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [4], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [5], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [6], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [7], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [8], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [9], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [10], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [11], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [12], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [13], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [14], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [15], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [16], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [17], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [18], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [19], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [20], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [21], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [22], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [23], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [24], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [25], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [26], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [27], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [28], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [29], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [30], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [31], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [32], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [33], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [34], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [35], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [36], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [37], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [38], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [39], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [40], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [41], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [42], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [43], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [44], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [45], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [46], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [47], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [48], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [49], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [50], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [51], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [52], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [53], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X0 [54] } = 0;
  assign { IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [0], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [1], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [2], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [3], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [4], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [5], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [6], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [7], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [8], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [9], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [10], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [11], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [12], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [13], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [14], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [15], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [16], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [17], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [18], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [19], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [20], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [21], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [22], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [23], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [24], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [25], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [26], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [27], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [28], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [29], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [30], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [31], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [32], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [33], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [34], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [35], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [36], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [37], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [38], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [39], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [40], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [41], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [42], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [43], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [44], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [45], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [46], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [47], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [48], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [49], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [50], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [51], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [52], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [53], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C0 [54] } = 0;
  logic [55:0] IntShiftRight_25U_5U_9U_mbits_fixed_sva_R1 ;
  logic [55:0] IntShiftRight_25U_5U_9U_mbits_fixed_sva_X1 ;
  logic [55:0] IntShiftRight_25U_5U_9U_mbits_fixed_sva_C1 ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_R1 [55:31] = fangyuan0_R [24:0] ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_X1 [55:31] = fangyuan0_X [24:0] ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_C1 [55:31] = fangyuan0_C [24:0] ;

  assign IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva = fangyuan0 + IntShiftRight_25U_5U_9U_obits_fixed_and_nl;
  assign IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_S = 0 ;
  logic [25:0] fangyuan0_C0 ;
  logic [25:0] fangyuan0_R0 ;
  logic [25:0] fangyuan0_X0 ;
  logic [0:0] IntShiftRight_25U_5U_9U_obits_fixed_and_nl_C0 ;
  logic [0:0] IntShiftRight_25U_5U_9U_obits_fixed_and_nl_R0 ;
  logic [0:0] IntShiftRight_25U_5U_9U_obits_fixed_and_nl_X0 ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_T = fangyuan0_T | IntShiftRight_25U_5U_9U_obits_fixed_and_nl_T ;
  assign fangyuan0_C0 = IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C ;
  assign fangyuan0_X0 = IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_and_nl_C0 = IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_and_nl_X0 = IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X ;
  assign fangyuan0_R0 = IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R | ( IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C & IntShiftRight_25U_5U_9U_obits_fixed_and_nl_T );
  assign IntShiftRight_25U_5U_9U_obits_fixed_and_nl_R0 = IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R | ( IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C & fangyuan0_T );
  logic [25:0] fangyuan1;
  logic [25:0] fangyuan1_T ;
  logic [25:0] fangyuan1_R ;
  logic [25:0] fangyuan1_C ;
  logic [25:0] fangyuan1_X ;
  assign fangyuan1 = { z_out_2[55], z_out_2[55:31] };
  assign fangyuan1_T = {  z_out_2_T [55] , z_out_2_T [55:31]  };
  logic [5:0] fangyuan1_S ;
  assign fangyuan1_S = 0 ;
  logic [63:0] z_out_2_R0 ;
  logic [63:0] z_out_2_X0 ;
  logic [63:0] z_out_2_C0 ;
  assign z_out_2_R0 [55:55] = fangyuan1_R [25:25] ;
  assign z_out_2_X0 [55:55] = fangyuan1_X [25:25] ;
  assign z_out_2_C0 [55:55] = fangyuan1_C [25:25] ;
  assign { z_out_2_R0 [0], z_out_2_R0 [1], z_out_2_R0 [2], z_out_2_R0 [3], z_out_2_R0 [4], z_out_2_R0 [5], z_out_2_R0 [6], z_out_2_R0 [7], z_out_2_R0 [8], z_out_2_R0 [9], z_out_2_R0 [10], z_out_2_R0 [11], z_out_2_R0 [12], z_out_2_R0 [13], z_out_2_R0 [14], z_out_2_R0 [15], z_out_2_R0 [16], z_out_2_R0 [17], z_out_2_R0 [18], z_out_2_R0 [19], z_out_2_R0 [20], z_out_2_R0 [21], z_out_2_R0 [22], z_out_2_R0 [23], z_out_2_R0 [24], z_out_2_R0 [25], z_out_2_R0 [26], z_out_2_R0 [27], z_out_2_R0 [28], z_out_2_R0 [29], z_out_2_R0 [30], z_out_2_R0 [31], z_out_2_R0 [32], z_out_2_R0 [33], z_out_2_R0 [34], z_out_2_R0 [35], z_out_2_R0 [36], z_out_2_R0 [37], z_out_2_R0 [38], z_out_2_R0 [39], z_out_2_R0 [40], z_out_2_R0 [41], z_out_2_R0 [42], z_out_2_R0 [43], z_out_2_R0 [44], z_out_2_R0 [45], z_out_2_R0 [46], z_out_2_R0 [47], z_out_2_R0 [48], z_out_2_R0 [49], z_out_2_R0 [50], z_out_2_R0 [51], z_out_2_R0 [52], z_out_2_R0 [53], z_out_2_R0 [54], z_out_2_R0 [63:56] } = 0;
  assign { z_out_2_X0 [0], z_out_2_X0 [1], z_out_2_X0 [2], z_out_2_X0 [3], z_out_2_X0 [4], z_out_2_X0 [5], z_out_2_X0 [6], z_out_2_X0 [7], z_out_2_X0 [8], z_out_2_X0 [9], z_out_2_X0 [10], z_out_2_X0 [11], z_out_2_X0 [12], z_out_2_X0 [13], z_out_2_X0 [14], z_out_2_X0 [15], z_out_2_X0 [16], z_out_2_X0 [17], z_out_2_X0 [18], z_out_2_X0 [19], z_out_2_X0 [20], z_out_2_X0 [21], z_out_2_X0 [22], z_out_2_X0 [23], z_out_2_X0 [24], z_out_2_X0 [25], z_out_2_X0 [26], z_out_2_X0 [27], z_out_2_X0 [28], z_out_2_X0 [29], z_out_2_X0 [30], z_out_2_X0 [31], z_out_2_X0 [32], z_out_2_X0 [33], z_out_2_X0 [34], z_out_2_X0 [35], z_out_2_X0 [36], z_out_2_X0 [37], z_out_2_X0 [38], z_out_2_X0 [39], z_out_2_X0 [40], z_out_2_X0 [41], z_out_2_X0 [42], z_out_2_X0 [43], z_out_2_X0 [44], z_out_2_X0 [45], z_out_2_X0 [46], z_out_2_X0 [47], z_out_2_X0 [48], z_out_2_X0 [49], z_out_2_X0 [50], z_out_2_X0 [51], z_out_2_X0 [52], z_out_2_X0 [53], z_out_2_X0 [54], z_out_2_X0 [63:56] } = 0;
  assign { z_out_2_C0 [0], z_out_2_C0 [1], z_out_2_C0 [2], z_out_2_C0 [3], z_out_2_C0 [4], z_out_2_C0 [5], z_out_2_C0 [6], z_out_2_C0 [7], z_out_2_C0 [8], z_out_2_C0 [9], z_out_2_C0 [10], z_out_2_C0 [11], z_out_2_C0 [12], z_out_2_C0 [13], z_out_2_C0 [14], z_out_2_C0 [15], z_out_2_C0 [16], z_out_2_C0 [17], z_out_2_C0 [18], z_out_2_C0 [19], z_out_2_C0 [20], z_out_2_C0 [21], z_out_2_C0 [22], z_out_2_C0 [23], z_out_2_C0 [24], z_out_2_C0 [25], z_out_2_C0 [26], z_out_2_C0 [27], z_out_2_C0 [28], z_out_2_C0 [29], z_out_2_C0 [30], z_out_2_C0 [31], z_out_2_C0 [32], z_out_2_C0 [33], z_out_2_C0 [34], z_out_2_C0 [35], z_out_2_C0 [36], z_out_2_C0 [37], z_out_2_C0 [38], z_out_2_C0 [39], z_out_2_C0 [40], z_out_2_C0 [41], z_out_2_C0 [42], z_out_2_C0 [43], z_out_2_C0 [44], z_out_2_C0 [45], z_out_2_C0 [46], z_out_2_C0 [47], z_out_2_C0 [48], z_out_2_C0 [49], z_out_2_C0 [50], z_out_2_C0 [51], z_out_2_C0 [52], z_out_2_C0 [53], z_out_2_C0 [54], z_out_2_C0 [63:56] } = 0;
  logic [63:0] z_out_2_R1 ;
  logic [63:0] z_out_2_X1 ;
  logic [63:0] z_out_2_C1 ;
  assign z_out_2_R1 [55:31] = fangyuan1_R [24:0] ;
  assign z_out_2_X1 [55:31] = fangyuan1_X [24:0] ;
  assign z_out_2_C1 [55:31] = fangyuan1_C [24:0] ;

  assign IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva = fangyuan1 + IntShiftRight_25U_5U_9U_1_obits_fixed_and_nl;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_S = 0 ;
  logic [25:0] fangyuan1_C0 ;
  logic [25:0] fangyuan1_R0 ;
  logic [25:0] fangyuan1_X0 ;
  logic [0:0] IntShiftRight_25U_5U_9U_1_obits_fixed_and_nl_C0 ;
  logic [0:0] IntShiftRight_25U_5U_9U_1_obits_fixed_and_nl_R0 ;
  logic [0:0] IntShiftRight_25U_5U_9U_1_obits_fixed_and_nl_X0 ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_T = fangyuan1_T | IntShiftRight_25U_5U_9U_1_obits_fixed_and_nl_T ;
  assign fangyuan1_C0 = IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C ;
  assign fangyuan1_X0 = IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_and_nl_C0 = IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_and_nl_X0 = IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X ;
  assign fangyuan1_R0 = IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R | ( IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C & IntShiftRight_25U_5U_9U_1_obits_fixed_and_nl_T );
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_and_nl_R0 = IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R | ( IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C & fangyuan1_T );
  logic [33:0] fangyuan2;
  logic [33:0] fangyuan2_T ;
  logic [33:0] fangyuan2_R ;
  logic [33:0] fangyuan2_C ;
  logic [33:0] fangyuan2_X ;
  assign fangyuan2 = { z_out_2[63], z_out_2[63:31] };
  assign fangyuan2_T = {  z_out_2_T [63] , z_out_2_T [63:31]  };
  logic [5:0] fangyuan2_S ;
  assign fangyuan2_S = 0 ;
  assign z_out_2_R1 [63:63] = fangyuan2_R [33:33] ;
  assign z_out_2_X1 [63:63] = fangyuan2_X [33:33] ;
  assign z_out_2_C1 [63:63] = fangyuan2_C [33:33] ;
  assign { z_out_2_R1 [0], z_out_2_R1 [1], z_out_2_R1 [2], z_out_2_R1 [3], z_out_2_R1 [4], z_out_2_R1 [5], z_out_2_R1 [6], z_out_2_R1 [7], z_out_2_R1 [8], z_out_2_R1 [9], z_out_2_R1 [10], z_out_2_R1 [11], z_out_2_R1 [12], z_out_2_R1 [13], z_out_2_R1 [14], z_out_2_R1 [15], z_out_2_R1 [16], z_out_2_R1 [17], z_out_2_R1 [18], z_out_2_R1 [19], z_out_2_R1 [20], z_out_2_R1 [21], z_out_2_R1 [22], z_out_2_R1 [23], z_out_2_R1 [24], z_out_2_R1 [25], z_out_2_R1 [26], z_out_2_R1 [27], z_out_2_R1 [28], z_out_2_R1 [29], z_out_2_R1 [30], z_out_2_R1 [56], z_out_2_R1 [57], z_out_2_R1 [58], z_out_2_R1 [59], z_out_2_R1 [60], z_out_2_R1 [61], z_out_2_R1 [62] } = 0;
  assign { z_out_2_X1 [0], z_out_2_X1 [1], z_out_2_X1 [2], z_out_2_X1 [3], z_out_2_X1 [4], z_out_2_X1 [5], z_out_2_X1 [6], z_out_2_X1 [7], z_out_2_X1 [8], z_out_2_X1 [9], z_out_2_X1 [10], z_out_2_X1 [11], z_out_2_X1 [12], z_out_2_X1 [13], z_out_2_X1 [14], z_out_2_X1 [15], z_out_2_X1 [16], z_out_2_X1 [17], z_out_2_X1 [18], z_out_2_X1 [19], z_out_2_X1 [20], z_out_2_X1 [21], z_out_2_X1 [22], z_out_2_X1 [23], z_out_2_X1 [24], z_out_2_X1 [25], z_out_2_X1 [26], z_out_2_X1 [27], z_out_2_X1 [28], z_out_2_X1 [29], z_out_2_X1 [30], z_out_2_X1 [56], z_out_2_X1 [57], z_out_2_X1 [58], z_out_2_X1 [59], z_out_2_X1 [60], z_out_2_X1 [61], z_out_2_X1 [62] } = 0;
  assign { z_out_2_C1 [0], z_out_2_C1 [1], z_out_2_C1 [2], z_out_2_C1 [3], z_out_2_C1 [4], z_out_2_C1 [5], z_out_2_C1 [6], z_out_2_C1 [7], z_out_2_C1 [8], z_out_2_C1 [9], z_out_2_C1 [10], z_out_2_C1 [11], z_out_2_C1 [12], z_out_2_C1 [13], z_out_2_C1 [14], z_out_2_C1 [15], z_out_2_C1 [16], z_out_2_C1 [17], z_out_2_C1 [18], z_out_2_C1 [19], z_out_2_C1 [20], z_out_2_C1 [21], z_out_2_C1 [22], z_out_2_C1 [23], z_out_2_C1 [24], z_out_2_C1 [25], z_out_2_C1 [26], z_out_2_C1 [27], z_out_2_C1 [28], z_out_2_C1 [29], z_out_2_C1 [30], z_out_2_C1 [56], z_out_2_C1 [57], z_out_2_C1 [58], z_out_2_C1 [59], z_out_2_C1 [60], z_out_2_C1 [61], z_out_2_C1 [62] } = 0;
  logic [63:0] z_out_2_R2 ;
  logic [63:0] z_out_2_X2 ;
  logic [63:0] z_out_2_C2 ;
  assign z_out_2_R2 [63:31] = fangyuan2_R [32:0] ;
  assign z_out_2_X2 [63:31] = fangyuan2_X [32:0] ;
  assign z_out_2_C2 [63:31] = fangyuan2_C [32:0] ;

  assign IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva = fangyuan2 + IntShiftRight_33U_5U_17U_obits_fixed_and_nl;
  assign IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_S = 0 ;
  logic [33:0] fangyuan2_C0 ;
  logic [33:0] fangyuan2_R0 ;
  logic [33:0] fangyuan2_X0 ;
  logic [0:0] IntShiftRight_33U_5U_17U_obits_fixed_and_nl_C0 ;
  logic [0:0] IntShiftRight_33U_5U_17U_obits_fixed_and_nl_R0 ;
  logic [0:0] IntShiftRight_33U_5U_17U_obits_fixed_and_nl_X0 ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_T = fangyuan2_T | IntShiftRight_33U_5U_17U_obits_fixed_and_nl_T ;
  assign fangyuan2_C0 = IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C ;
  assign fangyuan2_X0 = IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_and_nl_C0 = IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_and_nl_X0 = IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X ;
  assign fangyuan2_R0 = IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R | ( IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C & IntShiftRight_33U_5U_17U_obits_fixed_and_nl_T );
  assign IntShiftRight_33U_5U_17U_obits_fixed_and_nl_R0 = IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R | ( IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C & fangyuan2_T );
  logic [4:0] fangyuan3;
  logic [4:0] fangyuan3_T ;
  logic [4:0] fangyuan3_R ;
  logic [4:0] fangyuan3_C ;
  logic [4:0] fangyuan3_X ;
  assign fangyuan3 = { 1'b1, _129_ };
  assign fangyuan3_T = {  1'h0 , _129__T  };
  logic [5:0] fangyuan3_S ;
  assign fangyuan3_S = 0 ;
  logic [3:0] _129__R0 ;
  logic [3:0] _129__X0 ;
  logic [3:0] _129__C0 ;
  assign _129__R0 = fangyuan3_R [3:0] ;
  assign _129__X0 = fangyuan3_X [3:0] ;
  assign _129__C0 = fangyuan3_C [3:0] ;

  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva = fangyuan3 + 5'b10001;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_S = 0 ;
  logic [4:0] fangyuan3_C0 ;
  logic [4:0] fangyuan3_R0 ;
  logic [4:0] fangyuan3_X0 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_T = fangyuan3_T ;
  assign fangyuan3_C0 = FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_C ;
  assign fangyuan3_R0 = FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_R ;
  assign fangyuan3_X0 = FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_X ;
  logic [17:0] fangyuan4;
  logic [17:0] fangyuan4_T ;
  logic [17:0] fangyuan4_R ;
  logic [17:0] fangyuan4_C ;
  logic [17:0] fangyuan4_X ;
  assign fangyuan4 = { IntSubExt_8U_8U_9U_o_mux_4_nl[7], IntSubExt_8U_8U_9U_o_mux_4_nl, chn_data_in_rsci_d_mxwt[7:0], 1'b1 };
  assign fangyuan4_T = {  IntSubExt_8U_8U_9U_o_mux_4_nl_T [7] , IntSubExt_8U_8U_9U_o_mux_4_nl_T , chn_data_in_rsci_d_mxwt_T [7:0] , 1'h0  };
  logic [5:0] fangyuan4_S ;
  assign fangyuan4_S = 0 ;
  logic [7:0] IntSubExt_8U_8U_9U_o_mux_4_nl_R0 ;
  logic [7:0] IntSubExt_8U_8U_9U_o_mux_4_nl_X0 ;
  logic [7:0] IntSubExt_8U_8U_9U_o_mux_4_nl_C0 ;
  assign IntSubExt_8U_8U_9U_o_mux_4_nl_R0 [7:7] = fangyuan4_R [17:17] ;
  assign IntSubExt_8U_8U_9U_o_mux_4_nl_X0 [7:7] = fangyuan4_X [17:17] ;
  assign IntSubExt_8U_8U_9U_o_mux_4_nl_C0 [7:7] = fangyuan4_C [17:17] ;
  assign { IntSubExt_8U_8U_9U_o_mux_4_nl_R0 [0], IntSubExt_8U_8U_9U_o_mux_4_nl_R0 [1], IntSubExt_8U_8U_9U_o_mux_4_nl_R0 [2], IntSubExt_8U_8U_9U_o_mux_4_nl_R0 [3], IntSubExt_8U_8U_9U_o_mux_4_nl_R0 [4], IntSubExt_8U_8U_9U_o_mux_4_nl_R0 [5], IntSubExt_8U_8U_9U_o_mux_4_nl_R0 [6] } = 0;
  assign { IntSubExt_8U_8U_9U_o_mux_4_nl_X0 [0], IntSubExt_8U_8U_9U_o_mux_4_nl_X0 [1], IntSubExt_8U_8U_9U_o_mux_4_nl_X0 [2], IntSubExt_8U_8U_9U_o_mux_4_nl_X0 [3], IntSubExt_8U_8U_9U_o_mux_4_nl_X0 [4], IntSubExt_8U_8U_9U_o_mux_4_nl_X0 [5], IntSubExt_8U_8U_9U_o_mux_4_nl_X0 [6] } = 0;
  assign { IntSubExt_8U_8U_9U_o_mux_4_nl_C0 [0], IntSubExt_8U_8U_9U_o_mux_4_nl_C0 [1], IntSubExt_8U_8U_9U_o_mux_4_nl_C0 [2], IntSubExt_8U_8U_9U_o_mux_4_nl_C0 [3], IntSubExt_8U_8U_9U_o_mux_4_nl_C0 [4], IntSubExt_8U_8U_9U_o_mux_4_nl_C0 [5], IntSubExt_8U_8U_9U_o_mux_4_nl_C0 [6] } = 0;
  logic [7:0] IntSubExt_8U_8U_9U_o_mux_4_nl_R1 ;
  logic [7:0] IntSubExt_8U_8U_9U_o_mux_4_nl_X1 ;
  logic [7:0] IntSubExt_8U_8U_9U_o_mux_4_nl_C1 ;
  assign IntSubExt_8U_8U_9U_o_mux_4_nl_R1 = fangyuan4_R [16:9] ;
  assign IntSubExt_8U_8U_9U_o_mux_4_nl_X1 = fangyuan4_X [16:9] ;
  assign IntSubExt_8U_8U_9U_o_mux_4_nl_C1 = fangyuan4_C [16:9] ;
  logic [15:0] chn_data_in_rsci_d_mxwt_R0 ;
  logic [15:0] chn_data_in_rsci_d_mxwt_X0 ;
  logic [15:0] chn_data_in_rsci_d_mxwt_C0 ;
  assign chn_data_in_rsci_d_mxwt_R0 [7:0] = fangyuan4_R [8:1] ;
  assign chn_data_in_rsci_d_mxwt_X0 [7:0] = fangyuan4_X [8:1] ;
  assign chn_data_in_rsci_d_mxwt_C0 [7:0] = fangyuan4_C [8:1] ;
  logic [17:0] fangyuan5;
  logic [17:0] fangyuan5_T ;
  logic [17:0] fangyuan5_R ;
  logic [17:0] fangyuan5_C ;
  logic [17:0] fangyuan5_X ;
  assign fangyuan5 = { IntSubExt_8U_8U_9U_o_mux_5_nl[15], IntSubExt_8U_8U_9U_o_mux_5_nl, 1'b1 };
  assign fangyuan5_T = {  IntSubExt_8U_8U_9U_o_mux_5_nl_T [15] , IntSubExt_8U_8U_9U_o_mux_5_nl_T , 1'h0  };
  logic [5:0] fangyuan5_S ;
  assign fangyuan5_S = 0 ;
  logic [15:0] IntSubExt_8U_8U_9U_o_mux_5_nl_R0 ;
  logic [15:0] IntSubExt_8U_8U_9U_o_mux_5_nl_X0 ;
  logic [15:0] IntSubExt_8U_8U_9U_o_mux_5_nl_C0 ;
  assign IntSubExt_8U_8U_9U_o_mux_5_nl_R0 [15:15] = fangyuan5_R [17:17] ;
  assign IntSubExt_8U_8U_9U_o_mux_5_nl_X0 [15:15] = fangyuan5_X [17:17] ;
  assign IntSubExt_8U_8U_9U_o_mux_5_nl_C0 [15:15] = fangyuan5_C [17:17] ;
  assign { IntSubExt_8U_8U_9U_o_mux_5_nl_R0 [0], IntSubExt_8U_8U_9U_o_mux_5_nl_R0 [1], IntSubExt_8U_8U_9U_o_mux_5_nl_R0 [2], IntSubExt_8U_8U_9U_o_mux_5_nl_R0 [3], IntSubExt_8U_8U_9U_o_mux_5_nl_R0 [4], IntSubExt_8U_8U_9U_o_mux_5_nl_R0 [5], IntSubExt_8U_8U_9U_o_mux_5_nl_R0 [6], IntSubExt_8U_8U_9U_o_mux_5_nl_R0 [7], IntSubExt_8U_8U_9U_o_mux_5_nl_R0 [8], IntSubExt_8U_8U_9U_o_mux_5_nl_R0 [9], IntSubExt_8U_8U_9U_o_mux_5_nl_R0 [10], IntSubExt_8U_8U_9U_o_mux_5_nl_R0 [11], IntSubExt_8U_8U_9U_o_mux_5_nl_R0 [12], IntSubExt_8U_8U_9U_o_mux_5_nl_R0 [13], IntSubExt_8U_8U_9U_o_mux_5_nl_R0 [14] } = 0;
  assign { IntSubExt_8U_8U_9U_o_mux_5_nl_X0 [0], IntSubExt_8U_8U_9U_o_mux_5_nl_X0 [1], IntSubExt_8U_8U_9U_o_mux_5_nl_X0 [2], IntSubExt_8U_8U_9U_o_mux_5_nl_X0 [3], IntSubExt_8U_8U_9U_o_mux_5_nl_X0 [4], IntSubExt_8U_8U_9U_o_mux_5_nl_X0 [5], IntSubExt_8U_8U_9U_o_mux_5_nl_X0 [6], IntSubExt_8U_8U_9U_o_mux_5_nl_X0 [7], IntSubExt_8U_8U_9U_o_mux_5_nl_X0 [8], IntSubExt_8U_8U_9U_o_mux_5_nl_X0 [9], IntSubExt_8U_8U_9U_o_mux_5_nl_X0 [10], IntSubExt_8U_8U_9U_o_mux_5_nl_X0 [11], IntSubExt_8U_8U_9U_o_mux_5_nl_X0 [12], IntSubExt_8U_8U_9U_o_mux_5_nl_X0 [13], IntSubExt_8U_8U_9U_o_mux_5_nl_X0 [14] } = 0;
  assign { IntSubExt_8U_8U_9U_o_mux_5_nl_C0 [0], IntSubExt_8U_8U_9U_o_mux_5_nl_C0 [1], IntSubExt_8U_8U_9U_o_mux_5_nl_C0 [2], IntSubExt_8U_8U_9U_o_mux_5_nl_C0 [3], IntSubExt_8U_8U_9U_o_mux_5_nl_C0 [4], IntSubExt_8U_8U_9U_o_mux_5_nl_C0 [5], IntSubExt_8U_8U_9U_o_mux_5_nl_C0 [6], IntSubExt_8U_8U_9U_o_mux_5_nl_C0 [7], IntSubExt_8U_8U_9U_o_mux_5_nl_C0 [8], IntSubExt_8U_8U_9U_o_mux_5_nl_C0 [9], IntSubExt_8U_8U_9U_o_mux_5_nl_C0 [10], IntSubExt_8U_8U_9U_o_mux_5_nl_C0 [11], IntSubExt_8U_8U_9U_o_mux_5_nl_C0 [12], IntSubExt_8U_8U_9U_o_mux_5_nl_C0 [13], IntSubExt_8U_8U_9U_o_mux_5_nl_C0 [14] } = 0;
  logic [15:0] IntSubExt_8U_8U_9U_o_mux_5_nl_R1 ;
  logic [15:0] IntSubExt_8U_8U_9U_o_mux_5_nl_X1 ;
  logic [15:0] IntSubExt_8U_8U_9U_o_mux_5_nl_C1 ;
  assign IntSubExt_8U_8U_9U_o_mux_5_nl_R1 = fangyuan5_R [16:1] ;
  assign IntSubExt_8U_8U_9U_o_mux_5_nl_X1 = fangyuan5_X [16:1] ;
  assign IntSubExt_8U_8U_9U_o_mux_5_nl_C1 = fangyuan5_C [16:1] ;

  assign acc_nl = fangyuan4 + fangyuan5;
  assign acc_nl_S = 0 ;
  logic [17:0] fangyuan4_C0 ;
  logic [17:0] fangyuan4_R0 ;
  logic [17:0] fangyuan4_X0 ;
  logic [17:0] fangyuan5_C0 ;
  logic [17:0] fangyuan5_R0 ;
  logic [17:0] fangyuan5_X0 ;
  assign acc_nl_T = fangyuan4_T | fangyuan5_T ;
  assign fangyuan4_C0 = acc_nl_C ;
  assign fangyuan4_X0 = acc_nl_X ;
  assign fangyuan5_C0 = acc_nl_C ;
  assign fangyuan5_X0 = acc_nl_X ;
  assign fangyuan4_R0 = acc_nl_R | ( acc_nl_C & fangyuan5_T );
  assign fangyuan5_R0 = acc_nl_R | ( acc_nl_C & fangyuan4_T );
  assign nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s = libraries_leading_sign_10_0_8b78af2050cf8551b0aa4ca6a9790ede3d5a_1 + 1'b1;
  assign nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s_S = 0 ;
  logic [3:0] libraries_leading_sign_10_0_8b78af2050cf8551b0aa4ca6a9790ede3d5a_1_C0 ;
  logic [3:0] libraries_leading_sign_10_0_8b78af2050cf8551b0aa4ca6a9790ede3d5a_1_R0 ;
  logic [3:0] libraries_leading_sign_10_0_8b78af2050cf8551b0aa4ca6a9790ede3d5a_1_X0 ;
  assign nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s_T = libraries_leading_sign_10_0_8b78af2050cf8551b0aa4ca6a9790ede3d5a_1_T ;
  assign libraries_leading_sign_10_0_8b78af2050cf8551b0aa4ca6a9790ede3d5a_1_C0 = nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s_C ;
  assign libraries_leading_sign_10_0_8b78af2050cf8551b0aa4ca6a9790ede3d5a_1_R0 = nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s_R ;
  assign libraries_leading_sign_10_0_8b78af2050cf8551b0aa4ca6a9790ede3d5a_1_X0 = nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s_X ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse = _050_ & mux_25_nl;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_S = 0 ;
  logic [0:0] _050__C0 ;
  logic [0:0] _050__R0 ;
  logic [0:0] _050__X0 ;
  logic [0:0] mux_25_nl_C0 ;
  logic [0:0] mux_25_nl_R0 ;
  logic [0:0] mux_25_nl_X0 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_T = _050__T | mux_25_nl_T ;
  assign _050__C0 = FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_C ;
  assign _050__X0 = FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_X ;
  assign mux_25_nl_C0 = FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_C ;
  assign mux_25_nl_X0 = FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_X ;
  assign _050__R0 = ( FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_R | FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_C & mux_25_nl_T ) & { 1{ mux_25_nl != 0 }} ;
  assign mux_25_nl_R0 = ( FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_R | FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_C & _050__T ) & { 1{ _050_ != 0 }} ;
  assign _051_ = core_wen & chn_data_in_rsci_bawt;
  assign _051__S = 0 ;
  logic [0:0] core_wen_C0 ;
  logic [0:0] core_wen_R0 ;
  logic [0:0] core_wen_X0 ;
  logic [0:0] chn_data_in_rsci_bawt_C0 ;
  logic [0:0] chn_data_in_rsci_bawt_R0 ;
  logic [0:0] chn_data_in_rsci_bawt_X0 ;
  assign _051__T = core_wen_T | chn_data_in_rsci_bawt_T ;
  assign core_wen_C0 = _051__C ;
  assign core_wen_X0 = _051__X ;
  assign chn_data_in_rsci_bawt_C0 = _051__C ;
  assign chn_data_in_rsci_bawt_X0 = _051__X ;
  assign core_wen_R0 = ( _051__R | _051__C & chn_data_in_rsci_bawt_T ) & { 1{ chn_data_in_rsci_bawt != 0 }} ;
  assign chn_data_in_rsci_bawt_R0 = ( _051__R | _051__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign and_144_cse = _051_ & or_3_cse;
  assign and_144_cse_S = 0 ;
  logic [0:0] _051__C0 ;
  logic [0:0] _051__R0 ;
  logic [0:0] _051__X0 ;
  logic [0:0] or_3_cse_C0 ;
  logic [0:0] or_3_cse_R0 ;
  logic [0:0] or_3_cse_X0 ;
  assign and_144_cse_T = _051__T | or_3_cse_T ;
  assign _051__C0 = and_144_cse_C ;
  assign _051__X0 = and_144_cse_X ;
  assign or_3_cse_C0 = and_144_cse_C ;
  assign or_3_cse_X0 = and_144_cse_X ;
  assign _051__R0 = ( and_144_cse_R | and_144_cse_C & or_3_cse_T ) & { 1{ or_3_cse != 0 }} ;
  assign or_3_cse_R0 = ( and_144_cse_R | and_144_cse_C & _051__T ) & { 1{ _051_ != 0 }} ;
  assign and_120_nl = FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse & or_3_cse;
  assign and_120_nl_S = 0 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_C0 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_R0 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_X0 ;
  logic [0:0] or_3_cse_C1 ;
  logic [0:0] or_3_cse_R1 ;
  logic [0:0] or_3_cse_X1 ;
  assign and_120_nl_T = FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_T | or_3_cse_T ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_C0 = and_120_nl_C ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_X0 = and_120_nl_X ;
  assign or_3_cse_C1 = and_120_nl_C ;
  assign or_3_cse_X1 = and_120_nl_X ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_R0 = ( and_120_nl_R | and_120_nl_C & or_3_cse_T ) & { 1{ or_3_cse != 0 }} ;
  assign or_3_cse_R1 = ( and_120_nl_R | and_120_nl_C & FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_T ) & { 1{ FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse != 0 }} ;
  assign and_76_nl = or_3_cse & cfg_precision_rsci_d[0];
  assign and_76_nl_S = 0 ;
  logic [0:0] or_3_cse_C2 ;
  logic [0:0] or_3_cse_R2 ;
  logic [0:0] or_3_cse_X2 ;
  logic [1:0] cfg_precision_rsci_d_C0 ;
  logic [1:0] cfg_precision_rsci_d_R0 ;
  logic [1:0] cfg_precision_rsci_d_X0 ;
  assign and_76_nl_T = or_3_cse_T | cfg_precision_rsci_d_T [0] ;
  assign or_3_cse_C2 = and_76_nl_C ;
  assign or_3_cse_X2 = and_76_nl_X ;
  assign cfg_precision_rsci_d_C0 [0] = and_76_nl_C ;
  assign cfg_precision_rsci_d_X0 [0] = and_76_nl_X ;
  assign or_3_cse_R2 = ( and_76_nl_R | and_76_nl_C & cfg_precision_rsci_d_T [0] ) & { 1{ cfg_precision_rsci_d[0] != 0 }} ;
  assign cfg_precision_rsci_d_R0 [0] = ( and_76_nl_R | and_76_nl_C & or_3_cse_T ) & { 1{ or_3_cse != 0 }} ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm = IsDenorm_5U_10U_or_tmp & IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_S = 0 ;
  logic [0:0] IsDenorm_5U_10U_or_tmp_C0 ;
  logic [0:0] IsDenorm_5U_10U_or_tmp_R0 ;
  logic [0:0] IsDenorm_5U_10U_or_tmp_X0 ;
  logic [0:0] IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_C0 ;
  logic [0:0] IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_R0 ;
  logic [0:0] IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_X0 ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_T = IsDenorm_5U_10U_or_tmp_T | IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_T ;
  assign IsDenorm_5U_10U_or_tmp_C0 = IsDenorm_5U_10U_land_lpi_1_dfm_C ;
  assign IsDenorm_5U_10U_or_tmp_X0 = IsDenorm_5U_10U_land_lpi_1_dfm_X ;
  assign IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_C0 = IsDenorm_5U_10U_land_lpi_1_dfm_C ;
  assign IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_X0 = IsDenorm_5U_10U_land_lpi_1_dfm_X ;
  assign IsDenorm_5U_10U_or_tmp_R0 = ( IsDenorm_5U_10U_land_lpi_1_dfm_R | IsDenorm_5U_10U_land_lpi_1_dfm_C & IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_T ) & { 1{ IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva != 0 }} ;
  assign IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_R0 = ( IsDenorm_5U_10U_land_lpi_1_dfm_R | IsDenorm_5U_10U_land_lpi_1_dfm_C & IsDenorm_5U_10U_or_tmp_T ) & { 1{ IsDenorm_5U_10U_or_tmp != 0 }} ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_and_nl = IntShiftRight_25U_5U_9U_mbits_fixed_sva[30] & _181_;
  assign IntShiftRight_25U_5U_9U_obits_fixed_and_nl_S = 0 ;
  logic [0:0] _181__C0 ;
  logic [0:0] _181__R0 ;
  logic [0:0] _181__X0 ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_and_nl_T = IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [30] | _181__T ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_C1 [30] = IntShiftRight_25U_5U_9U_obits_fixed_and_nl_C ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_X1 [30] = IntShiftRight_25U_5U_9U_obits_fixed_and_nl_X ;
  assign _181__C0 = IntShiftRight_25U_5U_9U_obits_fixed_and_nl_C ;
  assign _181__X0 = IntShiftRight_25U_5U_9U_obits_fixed_and_nl_X ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_R1 [30] = ( IntShiftRight_25U_5U_9U_obits_fixed_and_nl_R | IntShiftRight_25U_5U_9U_obits_fixed_and_nl_C & _181__T ) & { 1{ _181_ != 0 }} ;
  assign _181__R0 = ( IntShiftRight_25U_5U_9U_obits_fixed_and_nl_R | IntShiftRight_25U_5U_9U_obits_fixed_and_nl_C & IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [30] ) & { 1{ IntShiftRight_25U_5U_9U_mbits_fixed_sva[30] != 0 }} ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva = IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva[25] & _121_;
  assign IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva_S = 0 ;
  logic [25:0] IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C0 ;
  logic [25:0] IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R0 ;
  logic [25:0] IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X0 ;
  logic [0:0] _121__C0 ;
  logic [0:0] _121__R0 ;
  logic [0:0] _121__X0 ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva_T = IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_T [25] | _121__T ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C0 [25] = IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva_C ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X0 [25] = IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva_X ;
  assign _121__C0 = IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva_C ;
  assign _121__X0 = IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva_X ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R0 [25] = ( IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva_R | IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva_C & _121__T ) & { 1{ _121_ != 0 }} ;
  assign _121__R0 = ( IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva_R | IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva_C & IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_T [25] ) & { 1{ IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva[25] != 0 }} ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_and_nl = z_out_2[30] & _212_;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_and_nl_S = 0 ;
  logic [0:0] _212__C0 ;
  logic [0:0] _212__R0 ;
  logic [0:0] _212__X0 ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_and_nl_T = z_out_2_T [30] | _212__T ;
  assign z_out_2_C2 [30] = IntShiftRight_25U_5U_9U_1_obits_fixed_and_nl_C ;
  assign z_out_2_X2 [30] = IntShiftRight_25U_5U_9U_1_obits_fixed_and_nl_X ;
  assign _212__C0 = IntShiftRight_25U_5U_9U_1_obits_fixed_and_nl_C ;
  assign _212__X0 = IntShiftRight_25U_5U_9U_1_obits_fixed_and_nl_X ;
  assign z_out_2_R2 [30] = ( IntShiftRight_25U_5U_9U_1_obits_fixed_and_nl_R | IntShiftRight_25U_5U_9U_1_obits_fixed_and_nl_C & _212__T ) & { 1{ _212_ != 0 }} ;
  assign _212__R0 = ( IntShiftRight_25U_5U_9U_1_obits_fixed_and_nl_R | IntShiftRight_25U_5U_9U_1_obits_fixed_and_nl_C & z_out_2_T [30] ) & { 1{ z_out_2[30] != 0 }} ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva = IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva[25] & _124_;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva_S = 0 ;
  logic [25:0] IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C0 ;
  logic [25:0] IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R0 ;
  logic [25:0] IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X0 ;
  logic [0:0] _124__C0 ;
  logic [0:0] _124__R0 ;
  logic [0:0] _124__X0 ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva_T = IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_T [25] | _124__T ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C0 [25] = IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva_C ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X0 [25] = IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva_X ;
  assign _124__C0 = IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva_C ;
  assign _124__X0 = IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva_X ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R0 [25] = ( IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva_R | IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva_C & _124__T ) & { 1{ _124_ != 0 }} ;
  assign _124__R0 = ( IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva_R | IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva_C & IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_T [25] ) & { 1{ IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva[25] != 0 }} ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_and_nl = z_out_2[30] & _216_;
  assign IntShiftRight_33U_5U_17U_obits_fixed_and_nl_S = 0 ;
  assign { z_out_2_R2 [0], z_out_2_R2 [1], z_out_2_R2 [2], z_out_2_R2 [3], z_out_2_R2 [4], z_out_2_R2 [5], z_out_2_R2 [6], z_out_2_R2 [7], z_out_2_R2 [8], z_out_2_R2 [9], z_out_2_R2 [10], z_out_2_R2 [11], z_out_2_R2 [12], z_out_2_R2 [13], z_out_2_R2 [14], z_out_2_R2 [15], z_out_2_R2 [16], z_out_2_R2 [17], z_out_2_R2 [18], z_out_2_R2 [19], z_out_2_R2 [20], z_out_2_R2 [21], z_out_2_R2 [22], z_out_2_R2 [23], z_out_2_R2 [24], z_out_2_R2 [25], z_out_2_R2 [26], z_out_2_R2 [27], z_out_2_R2 [28], z_out_2_R2 [29] } = 0;
  assign { z_out_2_X2 [0], z_out_2_X2 [1], z_out_2_X2 [2], z_out_2_X2 [3], z_out_2_X2 [4], z_out_2_X2 [5], z_out_2_X2 [6], z_out_2_X2 [7], z_out_2_X2 [8], z_out_2_X2 [9], z_out_2_X2 [10], z_out_2_X2 [11], z_out_2_X2 [12], z_out_2_X2 [13], z_out_2_X2 [14], z_out_2_X2 [15], z_out_2_X2 [16], z_out_2_X2 [17], z_out_2_X2 [18], z_out_2_X2 [19], z_out_2_X2 [20], z_out_2_X2 [21], z_out_2_X2 [22], z_out_2_X2 [23], z_out_2_X2 [24], z_out_2_X2 [25], z_out_2_X2 [26], z_out_2_X2 [27], z_out_2_X2 [28], z_out_2_X2 [29] } = 0;
  assign { z_out_2_C2 [0], z_out_2_C2 [1], z_out_2_C2 [2], z_out_2_C2 [3], z_out_2_C2 [4], z_out_2_C2 [5], z_out_2_C2 [6], z_out_2_C2 [7], z_out_2_C2 [8], z_out_2_C2 [9], z_out_2_C2 [10], z_out_2_C2 [11], z_out_2_C2 [12], z_out_2_C2 [13], z_out_2_C2 [14], z_out_2_C2 [15], z_out_2_C2 [16], z_out_2_C2 [17], z_out_2_C2 [18], z_out_2_C2 [19], z_out_2_C2 [20], z_out_2_C2 [21], z_out_2_C2 [22], z_out_2_C2 [23], z_out_2_C2 [24], z_out_2_C2 [25], z_out_2_C2 [26], z_out_2_C2 [27], z_out_2_C2 [28], z_out_2_C2 [29] } = 0;
  logic [63:0] z_out_2_C3 ;
  logic [63:0] z_out_2_R3 ;
  logic [63:0] z_out_2_X3 ;
  logic [0:0] _216__C0 ;
  logic [0:0] _216__R0 ;
  logic [0:0] _216__X0 ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_and_nl_T = z_out_2_T [30] | _216__T ;
  assign z_out_2_C3 [30] = IntShiftRight_33U_5U_17U_obits_fixed_and_nl_C ;
  assign z_out_2_X3 [30] = IntShiftRight_33U_5U_17U_obits_fixed_and_nl_X ;
  assign _216__C0 = IntShiftRight_33U_5U_17U_obits_fixed_and_nl_C ;
  assign _216__X0 = IntShiftRight_33U_5U_17U_obits_fixed_and_nl_X ;
  assign z_out_2_R3 [30] = ( IntShiftRight_33U_5U_17U_obits_fixed_and_nl_R | IntShiftRight_33U_5U_17U_obits_fixed_and_nl_C & _216__T ) & { 1{ _216_ != 0 }} ;
  assign _216__R0 = ( IntShiftRight_33U_5U_17U_obits_fixed_and_nl_R | IntShiftRight_33U_5U_17U_obits_fixed_and_nl_C & z_out_2_T [30] ) & { 1{ z_out_2[30] != 0 }} ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva = IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva[33] & _127_;
  assign IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_S = 0 ;
  logic [33:0] IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C0 ;
  logic [33:0] IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R0 ;
  logic [33:0] IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X0 ;
  logic [0:0] _127__C0 ;
  logic [0:0] _127__R0 ;
  logic [0:0] _127__X0 ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_T = IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_T [33] | _127__T ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C0 [33] = IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_C ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X0 [33] = IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_X ;
  assign _127__C0 = IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_C ;
  assign _127__X0 = IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_X ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R0 [33] = ( IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_R | IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_C & _127__T ) & { 1{ _127_ != 0 }} ;
  assign _127__R0 = ( IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_R | IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_C & IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_T [33] ) & { 1{ IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva[33] != 0 }} ;
  assign main_stage_en_1 = chn_data_in_rsci_bawt & or_3_cse;
  assign main_stage_en_1_S = 0 ;
  logic [0:0] chn_data_in_rsci_bawt_C1 ;
  logic [0:0] chn_data_in_rsci_bawt_R1 ;
  logic [0:0] chn_data_in_rsci_bawt_X1 ;
  logic [0:0] or_3_cse_C3 ;
  logic [0:0] or_3_cse_R3 ;
  logic [0:0] or_3_cse_X3 ;
  assign main_stage_en_1_T = chn_data_in_rsci_bawt_T | or_3_cse_T ;
  assign chn_data_in_rsci_bawt_C1 = main_stage_en_1_C ;
  assign chn_data_in_rsci_bawt_X1 = main_stage_en_1_X ;
  assign or_3_cse_C3 = main_stage_en_1_C ;
  assign or_3_cse_X3 = main_stage_en_1_X ;
  assign chn_data_in_rsci_bawt_R1 = ( main_stage_en_1_R | main_stage_en_1_C & or_3_cse_T ) & { 1{ or_3_cse != 0 }} ;
  assign or_3_cse_R3 = ( main_stage_en_1_R | main_stage_en_1_C & chn_data_in_rsci_bawt_T ) & { 1{ chn_data_in_rsci_bawt != 0 }} ;
  assign IsNaN_5U_10U_land_lpi_1_dfm = IsDenorm_5U_10U_or_tmp & IsInf_5U_10U_IsInf_5U_10U_and_cse_sva;
  assign IsNaN_5U_10U_land_lpi_1_dfm_S = 0 ;
  logic [0:0] IsDenorm_5U_10U_or_tmp_C1 ;
  logic [0:0] IsDenorm_5U_10U_or_tmp_R1 ;
  logic [0:0] IsDenorm_5U_10U_or_tmp_X1 ;
  logic [0:0] IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_C0 ;
  logic [0:0] IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_R0 ;
  logic [0:0] IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_X0 ;
  assign IsNaN_5U_10U_land_lpi_1_dfm_T = IsDenorm_5U_10U_or_tmp_T | IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_T ;
  assign IsDenorm_5U_10U_or_tmp_C1 = IsNaN_5U_10U_land_lpi_1_dfm_C ;
  assign IsDenorm_5U_10U_or_tmp_X1 = IsNaN_5U_10U_land_lpi_1_dfm_X ;
  assign IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_C0 = IsNaN_5U_10U_land_lpi_1_dfm_C ;
  assign IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_X0 = IsNaN_5U_10U_land_lpi_1_dfm_X ;
  assign IsDenorm_5U_10U_or_tmp_R1 = ( IsNaN_5U_10U_land_lpi_1_dfm_R | IsNaN_5U_10U_land_lpi_1_dfm_C & IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_T ) & { 1{ IsInf_5U_10U_IsInf_5U_10U_and_cse_sva != 0 }} ;
  assign IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_R0 = ( IsNaN_5U_10U_land_lpi_1_dfm_R | IsNaN_5U_10U_land_lpi_1_dfm_C & IsDenorm_5U_10U_or_tmp_T ) & { 1{ IsDenorm_5U_10U_or_tmp != 0 }} ;
  assign and_dcpl_3 = reg_chn_data_out_rsci_ld_core_psct_cse & chn_data_out_rsci_bawt;
  assign and_dcpl_3_S = 0 ;
  logic [0:0] reg_chn_data_out_rsci_ld_core_psct_cse_C0 ;
  logic [0:0] reg_chn_data_out_rsci_ld_core_psct_cse_R0 ;
  logic [0:0] reg_chn_data_out_rsci_ld_core_psct_cse_X0 ;
  logic [0:0] chn_data_out_rsci_bawt_C0 ;
  logic [0:0] chn_data_out_rsci_bawt_R0 ;
  logic [0:0] chn_data_out_rsci_bawt_X0 ;
  assign and_dcpl_3_T = reg_chn_data_out_rsci_ld_core_psct_cse_T | chn_data_out_rsci_bawt_T ;
  assign reg_chn_data_out_rsci_ld_core_psct_cse_C0 = and_dcpl_3_C ;
  assign reg_chn_data_out_rsci_ld_core_psct_cse_X0 = and_dcpl_3_X ;
  assign chn_data_out_rsci_bawt_C0 = and_dcpl_3_C ;
  assign chn_data_out_rsci_bawt_X0 = and_dcpl_3_X ;
  assign reg_chn_data_out_rsci_ld_core_psct_cse_R0 = ( and_dcpl_3_R | and_dcpl_3_C & chn_data_out_rsci_bawt_T ) & { 1{ chn_data_out_rsci_bawt != 0 }} ;
  assign chn_data_out_rsci_bawt_R0 = ( and_dcpl_3_R | and_dcpl_3_C & reg_chn_data_out_rsci_ld_core_psct_cse_T ) & { 1{ reg_chn_data_out_rsci_ld_core_psct_cse != 0 }} ;
  assign and_tmp_4 = or_66_cse & or_3_cse;
  assign and_tmp_4_S = 0 ;
  logic [0:0] or_66_cse_C0 ;
  logic [0:0] or_66_cse_R0 ;
  logic [0:0] or_66_cse_X0 ;
  logic [0:0] or_3_cse_C4 ;
  logic [0:0] or_3_cse_R4 ;
  logic [0:0] or_3_cse_X4 ;
  assign and_tmp_4_T = or_66_cse_T | or_3_cse_T ;
  assign or_66_cse_C0 = and_tmp_4_C ;
  assign or_66_cse_X0 = and_tmp_4_X ;
  assign or_3_cse_C4 = and_tmp_4_C ;
  assign or_3_cse_X4 = and_tmp_4_X ;
  assign or_66_cse_R0 = ( and_tmp_4_R | and_tmp_4_C & or_3_cse_T ) & { 1{ or_3_cse != 0 }} ;
  assign or_3_cse_R4 = ( and_tmp_4_R | and_tmp_4_C & or_66_cse_T ) & { 1{ or_66_cse != 0 }} ;
  assign _052_ = main_stage_v_1 & reg_chn_data_out_rsci_ld_core_psct_cse;
  assign _052__S = 0 ;
  logic [0:0] main_stage_v_1_C0 ;
  logic [0:0] main_stage_v_1_R0 ;
  logic [0:0] main_stage_v_1_X0 ;
  logic [0:0] reg_chn_data_out_rsci_ld_core_psct_cse_C1 ;
  logic [0:0] reg_chn_data_out_rsci_ld_core_psct_cse_R1 ;
  logic [0:0] reg_chn_data_out_rsci_ld_core_psct_cse_X1 ;
  assign _052__T = main_stage_v_1_T | reg_chn_data_out_rsci_ld_core_psct_cse_T ;
  assign main_stage_v_1_C0 = _052__C ;
  assign main_stage_v_1_X0 = _052__X ;
  assign reg_chn_data_out_rsci_ld_core_psct_cse_C1 = _052__C ;
  assign reg_chn_data_out_rsci_ld_core_psct_cse_X1 = _052__X ;
  assign main_stage_v_1_R0 = ( _052__R | _052__C & reg_chn_data_out_rsci_ld_core_psct_cse_T ) & { 1{ reg_chn_data_out_rsci_ld_core_psct_cse != 0 }} ;
  assign reg_chn_data_out_rsci_ld_core_psct_cse_R1 = ( _052__R | _052__C & main_stage_v_1_T ) & { 1{ main_stage_v_1 != 0 }} ;
  assign and_108_nl = _052_ & _132_;
  assign and_108_nl_S = 0 ;
  logic [0:0] _052__C0 ;
  logic [0:0] _052__R0 ;
  logic [0:0] _052__X0 ;
  logic [0:0] _132__C0 ;
  logic [0:0] _132__R0 ;
  logic [0:0] _132__X0 ;
  assign and_108_nl_T = _052__T | _132__T ;
  assign _052__C0 = and_108_nl_C ;
  assign _052__X0 = and_108_nl_X ;
  assign _132__C0 = and_108_nl_C ;
  assign _132__X0 = and_108_nl_X ;
  assign _052__R0 = ( and_108_nl_R | and_108_nl_C & _132__T ) & { 1{ _132_ != 0 }} ;
  assign _132__R0 = ( and_108_nl_R | and_108_nl_C & _052__T ) & { 1{ _052_ != 0 }} ;
  assign and_dcpl_16 = reg_chn_data_out_rsci_ld_core_psct_cse & _132_;
  assign and_dcpl_16_S = 0 ;
  logic [0:0] reg_chn_data_out_rsci_ld_core_psct_cse_C2 ;
  logic [0:0] reg_chn_data_out_rsci_ld_core_psct_cse_R2 ;
  logic [0:0] reg_chn_data_out_rsci_ld_core_psct_cse_X2 ;
  logic [0:0] _132__C1 ;
  logic [0:0] _132__R1 ;
  logic [0:0] _132__X1 ;
  assign and_dcpl_16_T = reg_chn_data_out_rsci_ld_core_psct_cse_T | _132__T ;
  assign reg_chn_data_out_rsci_ld_core_psct_cse_C2 = and_dcpl_16_C ;
  assign reg_chn_data_out_rsci_ld_core_psct_cse_X2 = and_dcpl_16_X ;
  assign _132__C1 = and_dcpl_16_C ;
  assign _132__X1 = and_dcpl_16_X ;
  assign reg_chn_data_out_rsci_ld_core_psct_cse_R2 = ( and_dcpl_16_R | and_dcpl_16_C & _132__T ) & { 1{ _132_ != 0 }} ;
  assign _132__R1 = ( and_dcpl_16_R | and_dcpl_16_C & reg_chn_data_out_rsci_ld_core_psct_cse_T ) & { 1{ reg_chn_data_out_rsci_ld_core_psct_cse != 0 }} ;
  assign and_dcpl_18 = or_3_cse & main_stage_v_2;
  assign and_dcpl_18_S = 0 ;
  logic [0:0] or_3_cse_C5 ;
  logic [0:0] or_3_cse_R5 ;
  logic [0:0] or_3_cse_X5 ;
  logic [0:0] main_stage_v_2_C0 ;
  logic [0:0] main_stage_v_2_R0 ;
  logic [0:0] main_stage_v_2_X0 ;
  assign and_dcpl_18_T = or_3_cse_T | main_stage_v_2_T ;
  assign or_3_cse_C5 = and_dcpl_18_C ;
  assign or_3_cse_X5 = and_dcpl_18_X ;
  assign main_stage_v_2_C0 = and_dcpl_18_C ;
  assign main_stage_v_2_X0 = and_dcpl_18_X ;
  assign or_3_cse_R5 = ( and_dcpl_18_R | and_dcpl_18_C & main_stage_v_2_T ) & { 1{ main_stage_v_2 != 0 }} ;
  assign main_stage_v_2_R0 = ( and_dcpl_18_R | and_dcpl_18_C & or_3_cse_T ) & { 1{ or_3_cse != 0 }} ;
  assign and_dcpl_19 = and_dcpl_3 & _131_;
  assign and_dcpl_19_S = 0 ;
  logic [0:0] and_dcpl_3_C0 ;
  logic [0:0] and_dcpl_3_R0 ;
  logic [0:0] and_dcpl_3_X0 ;
  logic [0:0] _131__C0 ;
  logic [0:0] _131__R0 ;
  logic [0:0] _131__X0 ;
  assign and_dcpl_19_T = and_dcpl_3_T | _131__T ;
  assign and_dcpl_3_C0 = and_dcpl_19_C ;
  assign and_dcpl_3_X0 = and_dcpl_19_X ;
  assign _131__C0 = and_dcpl_19_C ;
  assign _131__X0 = and_dcpl_19_X ;
  assign and_dcpl_3_R0 = ( and_dcpl_19_R | and_dcpl_19_C & _131__T ) & { 1{ _131_ != 0 }} ;
  assign _131__R0 = ( and_dcpl_19_R | and_dcpl_19_C & and_dcpl_3_T ) & { 1{ and_dcpl_3 != 0 }} ;
  assign or_tmp_80 = main_stage_en_1 & fsm_output[1];
  assign or_tmp_80_S = 0 ;
  logic [0:0] main_stage_en_1_C0 ;
  logic [0:0] main_stage_en_1_R0 ;
  logic [0:0] main_stage_en_1_X0 ;
  logic [1:0] fsm_output_C0 ;
  logic [1:0] fsm_output_R0 ;
  logic [1:0] fsm_output_X0 ;
  assign or_tmp_80_T = main_stage_en_1_T | fsm_output_T [1] ;
  assign main_stage_en_1_C0 = or_tmp_80_C ;
  assign main_stage_en_1_X0 = or_tmp_80_X ;
  assign fsm_output_C0 [1] = or_tmp_80_C ;
  assign fsm_output_X0 [1] = or_tmp_80_X ;
  assign main_stage_en_1_R0 = ( or_tmp_80_R | or_tmp_80_C & fsm_output_T [1] ) & { 1{ fsm_output[1] != 0 }} ;
  assign fsm_output_R0 [1] = ( or_tmp_80_R | or_tmp_80_C & main_stage_en_1_T ) & { 1{ main_stage_en_1 != 0 }} ;
  assign _053_ = or_3_cse & _134_;
  assign _053__S = 0 ;
  logic [0:0] or_3_cse_C6 ;
  logic [0:0] or_3_cse_R6 ;
  logic [0:0] or_3_cse_X6 ;
  logic [0:0] _134__C0 ;
  logic [0:0] _134__R0 ;
  logic [0:0] _134__X0 ;
  assign _053__T = or_3_cse_T | _134__T ;
  assign or_3_cse_C6 = _053__C ;
  assign or_3_cse_X6 = _053__X ;
  assign _134__C0 = _053__C ;
  assign _134__X0 = _053__X ;
  assign or_3_cse_R6 = ( _053__R | _053__C & _134__T ) & { 1{ _134_ != 0 }} ;
  assign _134__R0 = ( _053__R | _053__C & or_3_cse_T ) & { 1{ or_3_cse != 0 }} ;
  assign main_stage_v_1_mx0c1 = _053_ & main_stage_v_1;
  assign main_stage_v_1_mx0c1_S = 0 ;
  logic [0:0] _053__C0 ;
  logic [0:0] _053__R0 ;
  logic [0:0] _053__X0 ;
  logic [0:0] main_stage_v_1_C1 ;
  logic [0:0] main_stage_v_1_R1 ;
  logic [0:0] main_stage_v_1_X1 ;
  assign main_stage_v_1_mx0c1_T = _053__T | main_stage_v_1_T ;
  assign _053__C0 = main_stage_v_1_mx0c1_C ;
  assign _053__X0 = main_stage_v_1_mx0c1_X ;
  assign main_stage_v_1_C1 = main_stage_v_1_mx0c1_C ;
  assign main_stage_v_1_X1 = main_stage_v_1_mx0c1_X ;
  assign _053__R0 = ( main_stage_v_1_mx0c1_R | main_stage_v_1_mx0c1_C & main_stage_v_1_T ) & { 1{ main_stage_v_1 != 0 }} ;
  assign main_stage_v_1_R1 = ( main_stage_v_1_mx0c1_R | main_stage_v_1_mx0c1_C & _053__T ) & { 1{ _053_ != 0 }} ;
  assign main_stage_v_2_mx0c1 = and_dcpl_18 & _133_;
  assign main_stage_v_2_mx0c1_S = 0 ;
  logic [0:0] and_dcpl_18_C0 ;
  logic [0:0] and_dcpl_18_R0 ;
  logic [0:0] and_dcpl_18_X0 ;
  logic [0:0] _133__C0 ;
  logic [0:0] _133__R0 ;
  logic [0:0] _133__X0 ;
  assign main_stage_v_2_mx0c1_T = and_dcpl_18_T | _133__T ;
  assign and_dcpl_18_C0 = main_stage_v_2_mx0c1_C ;
  assign and_dcpl_18_X0 = main_stage_v_2_mx0c1_X ;
  assign _133__C0 = main_stage_v_2_mx0c1_C ;
  assign _133__X0 = main_stage_v_2_mx0c1_X ;
  assign and_dcpl_18_R0 = ( main_stage_v_2_mx0c1_R | main_stage_v_2_mx0c1_C & _133__T ) & { 1{ _133_ != 0 }} ;
  assign _133__R0 = ( main_stage_v_2_mx0c1_R | main_stage_v_2_mx0c1_C & and_dcpl_18_T ) & { 1{ and_dcpl_18 != 0 }} ;
  assign and_dcpl_50 = core_wen & main_stage_v_1;
  assign and_dcpl_50_S = 0 ;
  logic [0:0] core_wen_C1 ;
  logic [0:0] core_wen_R1 ;
  logic [0:0] core_wen_X1 ;
  logic [0:0] main_stage_v_1_C2 ;
  logic [0:0] main_stage_v_1_R2 ;
  logic [0:0] main_stage_v_1_X2 ;
  assign and_dcpl_50_T = core_wen_T | main_stage_v_1_T ;
  assign core_wen_C1 = and_dcpl_50_C ;
  assign core_wen_X1 = and_dcpl_50_X ;
  assign main_stage_v_1_C2 = and_dcpl_50_C ;
  assign main_stage_v_1_X2 = and_dcpl_50_X ;
  assign core_wen_R1 = ( and_dcpl_50_R | and_dcpl_50_C & main_stage_v_1_T ) & { 1{ main_stage_v_1 != 0 }} ;
  assign main_stage_v_1_R2 = ( and_dcpl_50_R | and_dcpl_50_C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign IntSubExt_16U_16U_17U_o_and_tmp = fsm_output[1] & cfg_precision_rsci_d[0];
  assign IntSubExt_16U_16U_17U_o_and_tmp_S = 0 ;
  assign { fsm_output_R0 [0] } = 0;
  assign { fsm_output_X0 [0] } = 0;
  assign { fsm_output_C0 [0] } = 0;
  assign { cfg_precision_rsci_d_R0 [1:1] } = 0;
  assign { cfg_precision_rsci_d_X0 [1:1] } = 0;
  assign { cfg_precision_rsci_d_C0 [1:1] } = 0;
  logic [1:0] fsm_output_C1 ;
  logic [1:0] fsm_output_R1 ;
  logic [1:0] fsm_output_X1 ;
  logic [1:0] cfg_precision_rsci_d_C1 ;
  logic [1:0] cfg_precision_rsci_d_R1 ;
  logic [1:0] cfg_precision_rsci_d_X1 ;
  assign IntSubExt_16U_16U_17U_o_and_tmp_T = fsm_output_T [1] | cfg_precision_rsci_d_T [0] ;
  assign fsm_output_C1 [1] = IntSubExt_16U_16U_17U_o_and_tmp_C ;
  assign fsm_output_X1 [1] = IntSubExt_16U_16U_17U_o_and_tmp_X ;
  assign cfg_precision_rsci_d_C1 [0] = IntSubExt_16U_16U_17U_o_and_tmp_C ;
  assign cfg_precision_rsci_d_X1 [0] = IntSubExt_16U_16U_17U_o_and_tmp_X ;
  assign fsm_output_R1 [1] = ( IntSubExt_16U_16U_17U_o_and_tmp_R | IntSubExt_16U_16U_17U_o_and_tmp_C & cfg_precision_rsci_d_T [0] ) & { 1{ cfg_precision_rsci_d[0] != 0 }} ;
  assign cfg_precision_rsci_d_R1 [0] = ( IntSubExt_16U_16U_17U_o_and_tmp_R | IntSubExt_16U_16U_17U_o_and_tmp_C & fsm_output_T [1] ) & { 1{ fsm_output[1] != 0 }} ;
  assign _054_ = _135_ & fsm_output[1];
  assign _054__S = 0 ;
  assign { fsm_output_R1 [0] } = 0;
  assign { fsm_output_X1 [0] } = 0;
  assign { fsm_output_C1 [0] } = 0;
  logic [0:0] _135__C0 ;
  logic [0:0] _135__R0 ;
  logic [0:0] _135__X0 ;
  logic [1:0] fsm_output_C2 ;
  logic [1:0] fsm_output_R2 ;
  logic [1:0] fsm_output_X2 ;
  assign _054__T = _135__T | fsm_output_T [1] ;
  assign _135__C0 = _054__C ;
  assign _135__X0 = _054__X ;
  assign fsm_output_C2 [1] = _054__C ;
  assign fsm_output_X2 [1] = _054__X ;
  assign _135__R0 = ( _054__R | _054__C & fsm_output_T [1] ) & { 1{ fsm_output[1] != 0 }} ;
  assign fsm_output_R2 [1] = ( _054__R | _054__C & _135__T ) & { 1{ _135_ != 0 }} ;
  assign _055_ = core_wen & chn_data_in_rsci_ld_core_psct_mx0c0;
  assign _055__S = 0 ;
  logic [0:0] core_wen_C2 ;
  logic [0:0] core_wen_R2 ;
  logic [0:0] core_wen_X2 ;
  logic [0:0] chn_data_in_rsci_ld_core_psct_mx0c0_C0 ;
  logic [0:0] chn_data_in_rsci_ld_core_psct_mx0c0_R0 ;
  logic [0:0] chn_data_in_rsci_ld_core_psct_mx0c0_X0 ;
  assign _055__T = core_wen_T | chn_data_in_rsci_ld_core_psct_mx0c0_T ;
  assign core_wen_C2 = _055__C ;
  assign core_wen_X2 = _055__X ;
  assign chn_data_in_rsci_ld_core_psct_mx0c0_C0 = _055__C ;
  assign chn_data_in_rsci_ld_core_psct_mx0c0_X0 = _055__X ;
  assign core_wen_R2 = ( _055__R | _055__C & chn_data_in_rsci_ld_core_psct_mx0c0_T ) & { 1{ chn_data_in_rsci_ld_core_psct_mx0c0 != 0 }} ;
  assign chn_data_in_rsci_ld_core_psct_mx0c0_R0 = ( _055__R | _055__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _056_ = core_wen & _226_;
  assign _056__S = 0 ;
  logic [0:0] core_wen_C3 ;
  logic [0:0] core_wen_R3 ;
  logic [0:0] core_wen_X3 ;
  logic [0:0] _226__C0 ;
  logic [0:0] _226__R0 ;
  logic [0:0] _226__X0 ;
  assign _056__T = core_wen_T | _226__T ;
  assign core_wen_C3 = _056__C ;
  assign core_wen_X3 = _056__X ;
  assign _226__C0 = _056__C ;
  assign _226__X0 = _056__X ;
  assign core_wen_R3 = ( _056__R | _056__C & _226__T ) & { 1{ _226_ != 0 }} ;
  assign _226__R0 = ( _056__R | _056__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _057_ = core_wen & _227_;
  assign _057__S = 0 ;
  logic [0:0] core_wen_C4 ;
  logic [0:0] core_wen_R4 ;
  logic [0:0] core_wen_X4 ;
  logic [0:0] _227__C0 ;
  logic [0:0] _227__R0 ;
  logic [0:0] _227__X0 ;
  assign _057__T = core_wen_T | _227__T ;
  assign core_wen_C4 = _057__C ;
  assign core_wen_X4 = _057__X ;
  assign _227__C0 = _057__C ;
  assign _227__X0 = _057__X ;
  assign core_wen_R4 = ( _057__R | _057__C & _227__T ) & { 1{ _227_ != 0 }} ;
  assign _227__R0 = ( _057__R | _057__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _058_ = _050_ & mux_4_nl;
  assign _058__S = 0 ;
  logic [0:0] _050__C1 ;
  logic [0:0] _050__R1 ;
  logic [0:0] _050__X1 ;
  logic [0:0] mux_4_nl_C0 ;
  logic [0:0] mux_4_nl_R0 ;
  logic [0:0] mux_4_nl_X0 ;
  assign _058__T = _050__T | mux_4_nl_T ;
  assign _050__C1 = _058__C ;
  assign _050__X1 = _058__X ;
  assign mux_4_nl_C0 = _058__C ;
  assign mux_4_nl_X0 = _058__X ;
  assign _050__R1 = ( _058__R | _058__C & mux_4_nl_T ) & { 1{ mux_4_nl != 0 }} ;
  assign mux_4_nl_R0 = ( _058__R | _058__C & _050__T ) & { 1{ _050_ != 0 }} ;
  assign _059_ = or_3_cse & main_stage_v_1;
  assign _059__S = 0 ;
  logic [0:0] or_3_cse_C7 ;
  logic [0:0] or_3_cse_R7 ;
  logic [0:0] or_3_cse_X7 ;
  logic [0:0] main_stage_v_1_C3 ;
  logic [0:0] main_stage_v_1_R3 ;
  logic [0:0] main_stage_v_1_X3 ;
  assign _059__T = or_3_cse_T | main_stage_v_1_T ;
  assign or_3_cse_C7 = _059__C ;
  assign or_3_cse_X7 = _059__X ;
  assign main_stage_v_1_C3 = _059__C ;
  assign main_stage_v_1_X3 = _059__X ;
  assign or_3_cse_R7 = ( _059__R | _059__C & main_stage_v_1_T ) & { 1{ main_stage_v_1 != 0 }} ;
  assign main_stage_v_1_R3 = ( _059__R | _059__C & or_3_cse_T ) & { 1{ or_3_cse != 0 }} ;
  assign _060_ = core_wen & _228_;
  assign _060__S = 0 ;
  logic [0:0] core_wen_C5 ;
  logic [0:0] core_wen_R5 ;
  logic [0:0] core_wen_X5 ;
  logic [0:0] _228__C0 ;
  logic [0:0] _228__R0 ;
  logic [0:0] _228__X0 ;
  assign _060__T = core_wen_T | _228__T ;
  assign core_wen_C5 = _060__C ;
  assign core_wen_X5 = _060__X ;
  assign _228__C0 = _060__C ;
  assign _228__X0 = _060__X ;
  assign core_wen_R5 = ( _060__R | _060__C & _228__T ) & { 1{ _228_ != 0 }} ;
  assign _228__R0 = ( _060__R | _060__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _061_ = mux_48_nl & and_dcpl_50;
  assign _061__S = 0 ;
  logic [0:0] mux_48_nl_C0 ;
  logic [0:0] mux_48_nl_R0 ;
  logic [0:0] mux_48_nl_X0 ;
  logic [0:0] and_dcpl_50_C0 ;
  logic [0:0] and_dcpl_50_R0 ;
  logic [0:0] and_dcpl_50_X0 ;
  assign _061__T = mux_48_nl_T | and_dcpl_50_T ;
  assign mux_48_nl_C0 = _061__C ;
  assign mux_48_nl_X0 = _061__X ;
  assign and_dcpl_50_C0 = _061__C ;
  assign and_dcpl_50_X0 = _061__X ;
  assign mux_48_nl_R0 = ( _061__R | _061__C & and_dcpl_50_T ) & { 1{ and_dcpl_50 != 0 }} ;
  assign and_dcpl_50_R0 = ( _061__R | _061__C & mux_48_nl_T ) & { 1{ mux_48_nl != 0 }} ;
  assign _062_ = _061_ & or_3_cse;
  assign _062__S = 0 ;
  logic [0:0] _061__C0 ;
  logic [0:0] _061__R0 ;
  logic [0:0] _061__X0 ;
  logic [0:0] or_3_cse_C8 ;
  logic [0:0] or_3_cse_R8 ;
  logic [0:0] or_3_cse_X8 ;
  assign _062__T = _061__T | or_3_cse_T ;
  assign _061__C0 = _062__C ;
  assign _061__X0 = _062__X ;
  assign or_3_cse_C8 = _062__C ;
  assign or_3_cse_X8 = _062__X ;
  assign _061__R0 = ( _062__R | _062__C & or_3_cse_T ) & { 1{ or_3_cse != 0 }} ;
  assign or_3_cse_R8 = ( _062__R | _062__C & _061__T ) & { 1{ _061_ != 0 }} ;
  assign _063_ = and_dcpl_50 & or_3_cse;
  assign _063__S = 0 ;
  logic [0:0] and_dcpl_50_C1 ;
  logic [0:0] and_dcpl_50_R1 ;
  logic [0:0] and_dcpl_50_X1 ;
  logic [0:0] or_3_cse_C9 ;
  logic [0:0] or_3_cse_R9 ;
  logic [0:0] or_3_cse_X9 ;
  assign _063__T = and_dcpl_50_T | or_3_cse_T ;
  assign and_dcpl_50_C1 = _063__C ;
  assign and_dcpl_50_X1 = _063__X ;
  assign or_3_cse_C9 = _063__C ;
  assign or_3_cse_X9 = _063__X ;
  assign and_dcpl_50_R1 = ( _063__R | _063__C & or_3_cse_T ) & { 1{ or_3_cse != 0 }} ;
  assign or_3_cse_R9 = ( _063__R | _063__C & and_dcpl_50_T ) & { 1{ and_dcpl_50 != 0 }} ;
  assign _064_ = _050_ & mux_9_nl;
  assign _064__S = 0 ;
  logic [0:0] _050__C2 ;
  logic [0:0] _050__R2 ;
  logic [0:0] _050__X2 ;
  logic [0:0] mux_9_nl_C0 ;
  logic [0:0] mux_9_nl_R0 ;
  logic [0:0] mux_9_nl_X0 ;
  assign _064__T = _050__T | mux_9_nl_T ;
  assign _050__C2 = _064__C ;
  assign _050__X2 = _064__X ;
  assign mux_9_nl_C0 = _064__C ;
  assign mux_9_nl_X0 = _064__X ;
  assign _050__R2 = ( _064__R | _064__C & mux_9_nl_T ) & { 1{ mux_9_nl != 0 }} ;
  assign mux_9_nl_R0 = ( _064__R | _064__C & _050__T ) & { 1{ _050_ != 0 }} ;
  assign _065_ = and_dcpl_50 & io_read_cfg_precision_rsc_svs_st_3[0];
  assign _065__S = 0 ;
  logic [0:0] and_dcpl_50_C2 ;
  logic [0:0] and_dcpl_50_R2 ;
  logic [0:0] and_dcpl_50_X2 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_C0 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_R0 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_X0 ;
  assign _065__T = and_dcpl_50_T | io_read_cfg_precision_rsc_svs_st_3_T [0] ;
  assign and_dcpl_50_C2 = _065__C ;
  assign and_dcpl_50_X2 = _065__X ;
  assign io_read_cfg_precision_rsc_svs_st_3_C0 [0] = _065__C ;
  assign io_read_cfg_precision_rsc_svs_st_3_X0 [0] = _065__X ;
  assign and_dcpl_50_R2 = ( _065__R | _065__C & io_read_cfg_precision_rsc_svs_st_3_T [0] ) & { 1{ io_read_cfg_precision_rsc_svs_st_3[0] != 0 }} ;
  assign io_read_cfg_precision_rsc_svs_st_3_R0 [0] = ( _065__R | _065__C & and_dcpl_50_T ) & { 1{ and_dcpl_50 != 0 }} ;
  assign _066_ = _065_ & or_3_cse;
  assign _066__S = 0 ;
  logic [0:0] _065__C0 ;
  logic [0:0] _065__R0 ;
  logic [0:0] _065__X0 ;
  logic [0:0] or_3_cse_C10 ;
  logic [0:0] or_3_cse_R10 ;
  logic [0:0] or_3_cse_X10 ;
  assign _066__T = _065__T | or_3_cse_T ;
  assign _065__C0 = _066__C ;
  assign _065__X0 = _066__X ;
  assign or_3_cse_C10 = _066__C ;
  assign or_3_cse_X10 = _066__X ;
  assign _065__R0 = ( _066__R | _066__C & or_3_cse_T ) & { 1{ or_3_cse != 0 }} ;
  assign or_3_cse_R10 = ( _066__R | _066__C & _065__T ) & { 1{ _065_ != 0 }} ;
  assign _067_ = _224_ & and_dcpl_50;
  assign _067__S = 0 ;
  logic [0:0] _224__C0 ;
  logic [0:0] _224__R0 ;
  logic [0:0] _224__X0 ;
  logic [0:0] and_dcpl_50_C3 ;
  logic [0:0] and_dcpl_50_R3 ;
  logic [0:0] and_dcpl_50_X3 ;
  assign _067__T = _224__T | and_dcpl_50_T ;
  assign _224__C0 = _067__C ;
  assign _224__X0 = _067__X ;
  assign and_dcpl_50_C3 = _067__C ;
  assign and_dcpl_50_X3 = _067__X ;
  assign _224__R0 = ( _067__R | _067__C & and_dcpl_50_T ) & { 1{ and_dcpl_50 != 0 }} ;
  assign and_dcpl_50_R3 = ( _067__R | _067__C & _224__T ) & { 1{ _224_ != 0 }} ;
  assign _068_ = _067_ & or_3_cse;
  assign _068__S = 0 ;
  logic [0:0] _067__C0 ;
  logic [0:0] _067__R0 ;
  logic [0:0] _067__X0 ;
  logic [0:0] or_3_cse_C11 ;
  logic [0:0] or_3_cse_R11 ;
  logic [0:0] or_3_cse_X11 ;
  assign _068__T = _067__T | or_3_cse_T ;
  assign _067__C0 = _068__C ;
  assign _067__X0 = _068__X ;
  assign or_3_cse_C11 = _068__C ;
  assign or_3_cse_X11 = _068__X ;
  assign _067__R0 = ( _068__R | _068__C & or_3_cse_T ) & { 1{ or_3_cse != 0 }} ;
  assign or_3_cse_R11 = ( _068__R | _068__C & _067__T ) & { 1{ _067_ != 0 }} ;
  assign _069_ = or_3_cse & core_wen;
  assign _069__S = 0 ;
  logic [0:0] or_3_cse_C12 ;
  logic [0:0] or_3_cse_R12 ;
  logic [0:0] or_3_cse_X12 ;
  logic [0:0] core_wen_C6 ;
  logic [0:0] core_wen_R6 ;
  logic [0:0] core_wen_X6 ;
  assign _069__T = or_3_cse_T | core_wen_T ;
  assign or_3_cse_C12 = _069__C ;
  assign or_3_cse_X12 = _069__X ;
  assign core_wen_C6 = _069__C ;
  assign core_wen_X6 = _069__X ;
  assign or_3_cse_R12 = ( _069__R | _069__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign core_wen_R6 = ( _069__R | _069__C & or_3_cse_T ) & { 1{ or_3_cse != 0 }} ;
  assign _070_ = _069_ & or_78_cse_1;
  assign _070__S = 0 ;
  logic [0:0] _069__C0 ;
  logic [0:0] _069__R0 ;
  logic [0:0] _069__X0 ;
  logic [0:0] or_78_cse_1_C0 ;
  logic [0:0] or_78_cse_1_R0 ;
  logic [0:0] or_78_cse_1_X0 ;
  assign _070__T = _069__T | or_78_cse_1_T ;
  assign _069__C0 = _070__C ;
  assign _069__X0 = _070__X ;
  assign or_78_cse_1_C0 = _070__C ;
  assign or_78_cse_1_X0 = _070__X ;
  assign _069__R0 = ( _070__R | _070__C & or_78_cse_1_T ) & { 1{ or_78_cse_1 != 0 }} ;
  assign or_78_cse_1_R0 = ( _070__R | _070__C & _069__T ) & { 1{ _069_ != 0 }} ;
  assign _071_ = _070_ & chn_data_in_rsci_bawt;
  assign _071__S = 0 ;
  logic [0:0] _070__C0 ;
  logic [0:0] _070__R0 ;
  logic [0:0] _070__X0 ;
  logic [0:0] chn_data_in_rsci_bawt_C2 ;
  logic [0:0] chn_data_in_rsci_bawt_R2 ;
  logic [0:0] chn_data_in_rsci_bawt_X2 ;
  assign _071__T = _070__T | chn_data_in_rsci_bawt_T ;
  assign _070__C0 = _071__C ;
  assign _070__X0 = _071__X ;
  assign chn_data_in_rsci_bawt_C2 = _071__C ;
  assign chn_data_in_rsci_bawt_X2 = _071__X ;
  assign _070__R0 = ( _071__R | _071__C & chn_data_in_rsci_bawt_T ) & { 1{ chn_data_in_rsci_bawt != 0 }} ;
  assign chn_data_in_rsci_bawt_R2 = ( _071__R | _071__C & _070__T ) & { 1{ _070_ != 0 }} ;
  assign _072_ = _050_ & mux_36_nl;
  assign _072__S = 0 ;
  logic [0:0] _050__C3 ;
  logic [0:0] _050__R3 ;
  logic [0:0] _050__X3 ;
  logic [0:0] mux_36_nl_C0 ;
  logic [0:0] mux_36_nl_R0 ;
  logic [0:0] mux_36_nl_X0 ;
  assign _072__T = _050__T | mux_36_nl_T ;
  assign _050__C3 = _072__C ;
  assign _050__X3 = _072__X ;
  assign mux_36_nl_C0 = _072__C ;
  assign mux_36_nl_X0 = _072__X ;
  assign _050__R3 = ( _072__R | _072__C & mux_36_nl_T ) & { 1{ mux_36_nl != 0 }} ;
  assign mux_36_nl_R0 = ( _072__R | _072__C & _050__T ) & { 1{ _050_ != 0 }} ;
  assign _073_ = _050_ & mux_38_nl;
  assign _073__S = 0 ;
  logic [0:0] _050__C4 ;
  logic [0:0] _050__R4 ;
  logic [0:0] _050__X4 ;
  logic [0:0] mux_38_nl_C0 ;
  logic [0:0] mux_38_nl_R0 ;
  logic [0:0] mux_38_nl_X0 ;
  assign _073__T = _050__T | mux_38_nl_T ;
  assign _050__C4 = _073__C ;
  assign _050__X4 = _073__X ;
  assign mux_38_nl_C0 = _073__C ;
  assign mux_38_nl_X0 = _073__X ;
  assign _050__R4 = ( _073__R | _073__C & mux_38_nl_T ) & { 1{ mux_38_nl != 0 }} ;
  assign mux_38_nl_R0 = ( _073__R | _073__C & _050__T ) & { 1{ _050_ != 0 }} ;
  assign _074_ = _069_ & chn_data_in_rsci_bawt;
  assign _074__S = 0 ;
  logic [0:0] _069__C1 ;
  logic [0:0] _069__R1 ;
  logic [0:0] _069__X1 ;
  logic [0:0] chn_data_in_rsci_bawt_C3 ;
  logic [0:0] chn_data_in_rsci_bawt_R3 ;
  logic [0:0] chn_data_in_rsci_bawt_X3 ;
  assign _074__T = _069__T | chn_data_in_rsci_bawt_T ;
  assign _069__C1 = _074__C ;
  assign _069__X1 = _074__X ;
  assign chn_data_in_rsci_bawt_C3 = _074__C ;
  assign chn_data_in_rsci_bawt_X3 = _074__X ;
  assign _069__R1 = ( _074__R | _074__C & chn_data_in_rsci_bawt_T ) & { 1{ chn_data_in_rsci_bawt != 0 }} ;
  assign chn_data_in_rsci_bawt_R3 = ( _074__R | _074__C & _069__T ) & { 1{ _069_ != 0 }} ;
  assign _075_ = _074_ & cfg_precision_rsci_d[0];
  assign _075__S = 0 ;
  assign { cfg_precision_rsci_d_R1 [1:1] } = 0;
  assign { cfg_precision_rsci_d_X1 [1:1] } = 0;
  assign { cfg_precision_rsci_d_C1 [1:1] } = 0;
  logic [0:0] _074__C0 ;
  logic [0:0] _074__R0 ;
  logic [0:0] _074__X0 ;
  logic [1:0] cfg_precision_rsci_d_C2 ;
  logic [1:0] cfg_precision_rsci_d_R2 ;
  logic [1:0] cfg_precision_rsci_d_X2 ;
  assign _075__T = _074__T | cfg_precision_rsci_d_T [0] ;
  assign _074__C0 = _075__C ;
  assign _074__X0 = _075__X ;
  assign cfg_precision_rsci_d_C2 [0] = _075__C ;
  assign cfg_precision_rsci_d_X2 [0] = _075__X ;
  assign _074__R0 = ( _075__R | _075__C & cfg_precision_rsci_d_T [0] ) & { 1{ cfg_precision_rsci_d[0] != 0 }} ;
  assign cfg_precision_rsci_d_R2 [0] = ( _075__R | _075__C & _074__T ) & { 1{ _074_ != 0 }} ;
  assign _076_ = _069_ & or_42_cse;
  assign _076__S = 0 ;
  logic [0:0] _069__C2 ;
  logic [0:0] _069__R2 ;
  logic [0:0] _069__X2 ;
  logic [0:0] or_42_cse_C0 ;
  logic [0:0] or_42_cse_R0 ;
  logic [0:0] or_42_cse_X0 ;
  assign _076__T = _069__T | or_42_cse_T ;
  assign _069__C2 = _076__C ;
  assign _069__X2 = _076__X ;
  assign or_42_cse_C0 = _076__C ;
  assign or_42_cse_X0 = _076__X ;
  assign _069__R2 = ( _076__R | _076__C & or_42_cse_T ) & { 1{ or_42_cse != 0 }} ;
  assign or_42_cse_R0 = ( _076__R | _076__C & _069__T ) & { 1{ _069_ != 0 }} ;
  assign _077_ = _076_ & chn_data_in_rsci_bawt;
  assign _077__S = 0 ;
  logic [0:0] _076__C0 ;
  logic [0:0] _076__R0 ;
  logic [0:0] _076__X0 ;
  logic [0:0] chn_data_in_rsci_bawt_C4 ;
  logic [0:0] chn_data_in_rsci_bawt_R4 ;
  logic [0:0] chn_data_in_rsci_bawt_X4 ;
  assign _077__T = _076__T | chn_data_in_rsci_bawt_T ;
  assign _076__C0 = _077__C ;
  assign _076__X0 = _077__X ;
  assign chn_data_in_rsci_bawt_C4 = _077__C ;
  assign chn_data_in_rsci_bawt_X4 = _077__X ;
  assign _076__R0 = ( _077__R | _077__C & chn_data_in_rsci_bawt_T ) & { 1{ chn_data_in_rsci_bawt != 0 }} ;
  assign chn_data_in_rsci_bawt_R4 = ( _077__R | _077__C & _076__T ) & { 1{ _076_ != 0 }} ;
  assign IntMulExt_17U_16U_33U_o_and_1_nl = fsm_output[1] & io_read_cfg_precision_rsc_svs_st_3[0];
  assign IntMulExt_17U_16U_33U_o_and_1_nl_S = 0 ;
  assign { fsm_output_R2 [0] } = 0;
  assign { fsm_output_X2 [0] } = 0;
  assign { fsm_output_C2 [0] } = 0;
  assign { io_read_cfg_precision_rsc_svs_st_3_R0 [1:1] } = 0;
  assign { io_read_cfg_precision_rsc_svs_st_3_X0 [1:1] } = 0;
  assign { io_read_cfg_precision_rsc_svs_st_3_C0 [1:1] } = 0;
  logic [1:0] fsm_output_C3 ;
  logic [1:0] fsm_output_R3 ;
  logic [1:0] fsm_output_X3 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_C1 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_R1 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_X1 ;
  assign IntMulExt_17U_16U_33U_o_and_1_nl_T = fsm_output_T [1] | io_read_cfg_precision_rsc_svs_st_3_T [0] ;
  assign fsm_output_C3 [1] = IntMulExt_17U_16U_33U_o_and_1_nl_C ;
  assign fsm_output_X3 [1] = IntMulExt_17U_16U_33U_o_and_1_nl_X ;
  assign io_read_cfg_precision_rsc_svs_st_3_C1 [0] = IntMulExt_17U_16U_33U_o_and_1_nl_C ;
  assign io_read_cfg_precision_rsc_svs_st_3_X1 [0] = IntMulExt_17U_16U_33U_o_and_1_nl_X ;
  assign fsm_output_R3 [1] = ( IntMulExt_17U_16U_33U_o_and_1_nl_R | IntMulExt_17U_16U_33U_o_and_1_nl_C & io_read_cfg_precision_rsc_svs_st_3_T [0] ) & { 1{ io_read_cfg_precision_rsc_svs_st_3[0] != 0 }} ;
  assign io_read_cfg_precision_rsc_svs_st_3_R1 [0] = ( IntMulExt_17U_16U_33U_o_and_1_nl_R | IntMulExt_17U_16U_33U_o_and_1_nl_C & fsm_output_T [1] ) & { 1{ fsm_output[1] != 0 }} ;
  assign _078_ = else_else_o_trt_15_1_sva[13] & nor_tmp_11;
  assign _078__S = 0 ;
  logic [14:0] else_else_o_trt_15_1_sva_C0 ;
  logic [14:0] else_else_o_trt_15_1_sva_R0 ;
  logic [14:0] else_else_o_trt_15_1_sva_X0 ;
  logic [0:0] nor_tmp_11_C0 ;
  logic [0:0] nor_tmp_11_R0 ;
  logic [0:0] nor_tmp_11_X0 ;
  assign _078__T = else_else_o_trt_15_1_sva_T [13] | nor_tmp_11_T ;
  assign else_else_o_trt_15_1_sva_C0 [13] = _078__C ;
  assign else_else_o_trt_15_1_sva_X0 [13] = _078__X ;
  assign nor_tmp_11_C0 = _078__C ;
  assign nor_tmp_11_X0 = _078__X ;
  assign else_else_o_trt_15_1_sva_R0 [13] = ( _078__R | _078__C & nor_tmp_11_T ) & { 1{ nor_tmp_11 != 0 }} ;
  assign nor_tmp_11_R0 = ( _078__R | _078__C & else_else_o_trt_15_1_sva_T [13] ) & { 1{ else_else_o_trt_15_1_sva[13] != 0 }} ;
  assign _079_ = else_else_o_trt_15_1_sva[14] & nor_tmp_11;
  assign _079__S = 0 ;
  logic [0:0] nor_tmp_11_C1 ;
  logic [0:0] nor_tmp_11_R1 ;
  logic [0:0] nor_tmp_11_X1 ;
  assign _079__T = else_else_o_trt_15_1_sva_T [14] | nor_tmp_11_T ;
  assign else_else_o_trt_15_1_sva_C0 [14] = _079__C ;
  assign else_else_o_trt_15_1_sva_X0 [14] = _079__X ;
  assign nor_tmp_11_C1 = _079__C ;
  assign nor_tmp_11_X1 = _079__X ;
  assign else_else_o_trt_15_1_sva_R0 [14] = ( _079__R | _079__C & nor_tmp_11_T ) & { 1{ nor_tmp_11 != 0 }} ;
  assign nor_tmp_11_R1 = ( _079__R | _079__C & else_else_o_trt_15_1_sva_T [14] ) & { 1{ else_else_o_trt_15_1_sva[14] != 0 }} ;
  assign _080_ = IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_1_nl & nor_tmp_11;
  assign _080__S = 0 ;
  logic [0:0] IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_1_nl_C0 ;
  logic [0:0] IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_1_nl_R0 ;
  logic [0:0] IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_1_nl_X0 ;
  logic [0:0] nor_tmp_11_C2 ;
  logic [0:0] nor_tmp_11_R2 ;
  logic [0:0] nor_tmp_11_X2 ;
  assign _080__T = IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_1_nl_T | nor_tmp_11_T ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_1_nl_C0 = _080__C ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_1_nl_X0 = _080__X ;
  assign nor_tmp_11_C2 = _080__C ;
  assign nor_tmp_11_X2 = _080__X ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_1_nl_R0 = ( _080__R | _080__C & nor_tmp_11_T ) & { 1{ nor_tmp_11 != 0 }} ;
  assign nor_tmp_11_R2 = ( _080__R | _080__C & IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_1_nl_T ) & { 1{ IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_1_nl != 0 }} ;
  assign _081_ = else_else_o_trt_15_1_sva[7] & nor_tmp_11;
  assign _081__S = 0 ;
  logic [0:0] nor_tmp_11_C3 ;
  logic [0:0] nor_tmp_11_R3 ;
  logic [0:0] nor_tmp_11_X3 ;
  assign _081__T = else_else_o_trt_15_1_sva_T [7] | nor_tmp_11_T ;
  assign else_else_o_trt_15_1_sva_C0 [7] = _081__C ;
  assign else_else_o_trt_15_1_sva_X0 [7] = _081__X ;
  assign nor_tmp_11_C3 = _081__C ;
  assign nor_tmp_11_X3 = _081__X ;
  assign else_else_o_trt_15_1_sva_R0 [7] = ( _081__R | _081__C & nor_tmp_11_T ) & { 1{ nor_tmp_11 != 0 }} ;
  assign nor_tmp_11_R3 = ( _081__R | _081__C & else_else_o_trt_15_1_sva_T [7] ) & { 1{ else_else_o_trt_15_1_sva[7] != 0 }} ;
  assign _082_ = else_else_o_trt_15_1_sva[8] & nor_tmp_11;
  assign _082__S = 0 ;
  logic [0:0] nor_tmp_11_C4 ;
  logic [0:0] nor_tmp_11_R4 ;
  logic [0:0] nor_tmp_11_X4 ;
  assign _082__T = else_else_o_trt_15_1_sva_T [8] | nor_tmp_11_T ;
  assign else_else_o_trt_15_1_sva_C0 [8] = _082__C ;
  assign else_else_o_trt_15_1_sva_X0 [8] = _082__X ;
  assign nor_tmp_11_C4 = _082__C ;
  assign nor_tmp_11_X4 = _082__X ;
  assign else_else_o_trt_15_1_sva_R0 [8] = ( _082__R | _082__C & nor_tmp_11_T ) & { 1{ nor_tmp_11 != 0 }} ;
  assign nor_tmp_11_R4 = ( _082__R | _082__C & else_else_o_trt_15_1_sva_T [8] ) & { 1{ else_else_o_trt_15_1_sva[8] != 0 }} ;
  assign _083_ = IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_2_seb_sva & nor_tmp_11;
  assign _083__S = 0 ;
  logic [0:0] IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_2_seb_sva_C0 ;
  logic [0:0] IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_2_seb_sva_R0 ;
  logic [0:0] IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_2_seb_sva_X0 ;
  logic [0:0] nor_tmp_11_C5 ;
  logic [0:0] nor_tmp_11_R5 ;
  logic [0:0] nor_tmp_11_X5 ;
  assign _083__T = IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_2_seb_sva_T | nor_tmp_11_T ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_2_seb_sva_C0 = _083__C ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_2_seb_sva_X0 = _083__X ;
  assign nor_tmp_11_C5 = _083__C ;
  assign nor_tmp_11_X5 = _083__X ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_2_seb_sva_R0 = ( _083__R | _083__C & nor_tmp_11_T ) & { 1{ nor_tmp_11 != 0 }} ;
  assign nor_tmp_11_R5 = ( _083__R | _083__C & IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_2_seb_sva_T ) & { 1{ IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_2_seb_sva != 0 }} ;
  assign _084_ = else_if_ac_int_cctor_16_10_sva[4] & nor_17_cse;
  assign _084__S = 0 ;
  logic [6:0] else_if_ac_int_cctor_16_10_sva_C0 ;
  logic [6:0] else_if_ac_int_cctor_16_10_sva_R0 ;
  logic [6:0] else_if_ac_int_cctor_16_10_sva_X0 ;
  logic [0:0] nor_17_cse_C0 ;
  logic [0:0] nor_17_cse_R0 ;
  logic [0:0] nor_17_cse_X0 ;
  assign _084__T = else_if_ac_int_cctor_16_10_sva_T [4] | nor_17_cse_T ;
  assign else_if_ac_int_cctor_16_10_sva_C0 [4] = _084__C ;
  assign else_if_ac_int_cctor_16_10_sva_X0 [4] = _084__X ;
  assign nor_17_cse_C0 = _084__C ;
  assign nor_17_cse_X0 = _084__X ;
  assign else_if_ac_int_cctor_16_10_sva_R0 [4] = ( _084__R | _084__C & nor_17_cse_T ) & { 1{ nor_17_cse != 0 }} ;
  assign nor_17_cse_R0 = ( _084__R | _084__C & else_if_ac_int_cctor_16_10_sva_T [4] ) & { 1{ else_if_ac_int_cctor_16_10_sva[4] != 0 }} ;
  assign _085_ = else_if_ac_int_cctor_16_10_sva[5] & nor_17_cse;
  assign _085__S = 0 ;
  logic [0:0] nor_17_cse_C1 ;
  logic [0:0] nor_17_cse_R1 ;
  logic [0:0] nor_17_cse_X1 ;
  assign _085__T = else_if_ac_int_cctor_16_10_sva_T [5] | nor_17_cse_T ;
  assign else_if_ac_int_cctor_16_10_sva_C0 [5] = _085__C ;
  assign else_if_ac_int_cctor_16_10_sva_X0 [5] = _085__X ;
  assign nor_17_cse_C1 = _085__C ;
  assign nor_17_cse_X1 = _085__X ;
  assign else_if_ac_int_cctor_16_10_sva_R0 [5] = ( _085__R | _085__C & nor_17_cse_T ) & { 1{ nor_17_cse != 0 }} ;
  assign nor_17_cse_R1 = ( _085__R | _085__C & else_if_ac_int_cctor_16_10_sva_T [5] ) & { 1{ else_if_ac_int_cctor_16_10_sva[5] != 0 }} ;
  assign _086_ = IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_1_nl & nor_17_cse;
  assign _086__S = 0 ;
  logic [0:0] IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_1_nl_C0 ;
  logic [0:0] IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_1_nl_R0 ;
  logic [0:0] IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_1_nl_X0 ;
  logic [0:0] nor_17_cse_C2 ;
  logic [0:0] nor_17_cse_R2 ;
  logic [0:0] nor_17_cse_X2 ;
  assign _086__T = IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_1_nl_T | nor_17_cse_T ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_1_nl_C0 = _086__C ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_1_nl_X0 = _086__X ;
  assign nor_17_cse_C2 = _086__C ;
  assign nor_17_cse_X2 = _086__X ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_1_nl_R0 = ( _086__R | _086__C & nor_17_cse_T ) & { 1{ nor_17_cse != 0 }} ;
  assign nor_17_cse_R2 = ( _086__R | _086__C & IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_1_nl_T ) & { 1{ IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_1_nl != 0 }} ;
  assign _087_ = IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva[25] & nor_17_cse;
  assign _087__S = 0 ;
  assign { IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R0 [0], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R0 [1], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R0 [2], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R0 [3], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R0 [4], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R0 [5], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R0 [6], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R0 [7], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R0 [8], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R0 [9], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R0 [10], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R0 [11], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R0 [12], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R0 [13], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R0 [14], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R0 [15], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R0 [16], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R0 [17], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R0 [18], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R0 [19], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R0 [20], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R0 [21], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R0 [22], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R0 [23], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R0 [24] } = 0;
  assign { IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X0 [0], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X0 [1], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X0 [2], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X0 [3], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X0 [4], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X0 [5], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X0 [6], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X0 [7], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X0 [8], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X0 [9], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X0 [10], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X0 [11], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X0 [12], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X0 [13], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X0 [14], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X0 [15], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X0 [16], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X0 [17], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X0 [18], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X0 [19], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X0 [20], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X0 [21], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X0 [22], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X0 [23], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X0 [24] } = 0;
  assign { IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C0 [0], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C0 [1], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C0 [2], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C0 [3], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C0 [4], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C0 [5], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C0 [6], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C0 [7], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C0 [8], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C0 [9], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C0 [10], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C0 [11], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C0 [12], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C0 [13], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C0 [14], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C0 [15], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C0 [16], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C0 [17], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C0 [18], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C0 [19], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C0 [20], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C0 [21], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C0 [22], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C0 [23], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C0 [24] } = 0;
  logic [25:0] IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C1 ;
  logic [25:0] IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R1 ;
  logic [25:0] IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X1 ;
  logic [0:0] nor_17_cse_C3 ;
  logic [0:0] nor_17_cse_R3 ;
  logic [0:0] nor_17_cse_X3 ;
  assign _087__T = IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_T [25] | nor_17_cse_T ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C1 [25] = _087__C ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X1 [25] = _087__X ;
  assign nor_17_cse_C3 = _087__C ;
  assign nor_17_cse_X3 = _087__X ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R1 [25] = ( _087__R | _087__C & nor_17_cse_T ) & { 1{ nor_17_cse != 0 }} ;
  assign nor_17_cse_R3 = ( _087__R | _087__C & IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_T [25] ) & { 1{ IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva[25] != 0 }} ;
  assign _088_ = IntShiftRight_25U_5U_9U_1_obits_fixed_IntShiftRight_25U_5U_9U_1_obits_fixed_nor_1_nl & nor_17_cse;
  assign _088__S = 0 ;
  logic [0:0] IntShiftRight_25U_5U_9U_1_obits_fixed_IntShiftRight_25U_5U_9U_1_obits_fixed_nor_1_nl_C0 ;
  logic [0:0] IntShiftRight_25U_5U_9U_1_obits_fixed_IntShiftRight_25U_5U_9U_1_obits_fixed_nor_1_nl_R0 ;
  logic [0:0] IntShiftRight_25U_5U_9U_1_obits_fixed_IntShiftRight_25U_5U_9U_1_obits_fixed_nor_1_nl_X0 ;
  logic [0:0] nor_17_cse_C4 ;
  logic [0:0] nor_17_cse_R4 ;
  logic [0:0] nor_17_cse_X4 ;
  assign _088__T = IntShiftRight_25U_5U_9U_1_obits_fixed_IntShiftRight_25U_5U_9U_1_obits_fixed_nor_1_nl_T | nor_17_cse_T ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_IntShiftRight_25U_5U_9U_1_obits_fixed_nor_1_nl_C0 = _088__C ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_IntShiftRight_25U_5U_9U_1_obits_fixed_nor_1_nl_X0 = _088__X ;
  assign nor_17_cse_C4 = _088__C ;
  assign nor_17_cse_X4 = _088__X ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_IntShiftRight_25U_5U_9U_1_obits_fixed_nor_1_nl_R0 = ( _088__R | _088__C & nor_17_cse_T ) & { 1{ nor_17_cse != 0 }} ;
  assign nor_17_cse_R4 = ( _088__R | _088__C & IntShiftRight_25U_5U_9U_1_obits_fixed_IntShiftRight_25U_5U_9U_1_obits_fixed_nor_1_nl_T ) & { 1{ IntShiftRight_25U_5U_9U_1_obits_fixed_IntShiftRight_25U_5U_9U_1_obits_fixed_nor_1_nl != 0 }} ;
  assign _089_ = else_if_ac_int_cctor_16_10_sva[6] & nor_17_cse;
  assign _089__S = 0 ;
  logic [0:0] nor_17_cse_C5 ;
  logic [0:0] nor_17_cse_R5 ;
  logic [0:0] nor_17_cse_X5 ;
  assign _089__T = else_if_ac_int_cctor_16_10_sva_T [6] | nor_17_cse_T ;
  assign else_if_ac_int_cctor_16_10_sva_C0 [6] = _089__C ;
  assign else_if_ac_int_cctor_16_10_sva_X0 [6] = _089__X ;
  assign nor_17_cse_C5 = _089__C ;
  assign nor_17_cse_X5 = _089__X ;
  assign else_if_ac_int_cctor_16_10_sva_R0 [6] = ( _089__R | _089__C & nor_17_cse_T ) & { 1{ nor_17_cse != 0 }} ;
  assign nor_17_cse_R5 = ( _089__R | _089__C & else_if_ac_int_cctor_16_10_sva_T [6] ) & { 1{ else_if_ac_int_cctor_16_10_sva[6] != 0 }} ;
  assign _090_ = IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva[25] & nor_17_cse;
  assign _090__S = 0 ;
  assign { IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R0 [0], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R0 [1], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R0 [2], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R0 [3], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R0 [4], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R0 [5], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R0 [6], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R0 [7], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R0 [8], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R0 [9], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R0 [10], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R0 [11], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R0 [12], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R0 [13], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R0 [14], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R0 [15], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R0 [16], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R0 [17], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R0 [18], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R0 [19], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R0 [20], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R0 [21], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R0 [22], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R0 [23], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R0 [24] } = 0;
  assign { IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X0 [0], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X0 [1], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X0 [2], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X0 [3], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X0 [4], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X0 [5], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X0 [6], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X0 [7], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X0 [8], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X0 [9], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X0 [10], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X0 [11], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X0 [12], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X0 [13], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X0 [14], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X0 [15], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X0 [16], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X0 [17], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X0 [18], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X0 [19], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X0 [20], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X0 [21], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X0 [22], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X0 [23], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X0 [24] } = 0;
  assign { IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C0 [0], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C0 [1], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C0 [2], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C0 [3], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C0 [4], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C0 [5], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C0 [6], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C0 [7], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C0 [8], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C0 [9], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C0 [10], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C0 [11], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C0 [12], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C0 [13], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C0 [14], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C0 [15], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C0 [16], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C0 [17], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C0 [18], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C0 [19], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C0 [20], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C0 [21], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C0 [22], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C0 [23], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C0 [24] } = 0;
  logic [25:0] IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C1 ;
  logic [25:0] IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R1 ;
  logic [25:0] IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X1 ;
  logic [0:0] nor_17_cse_C6 ;
  logic [0:0] nor_17_cse_R6 ;
  logic [0:0] nor_17_cse_X6 ;
  assign _090__T = IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_T [25] | nor_17_cse_T ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C1 [25] = _090__C ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X1 [25] = _090__X ;
  assign nor_17_cse_C6 = _090__C ;
  assign nor_17_cse_X6 = _090__X ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R1 [25] = ( _090__R | _090__C & nor_17_cse_T ) & { 1{ nor_17_cse != 0 }} ;
  assign nor_17_cse_R6 = ( _090__R | _090__C & IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_T [25] ) & { 1{ IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva[25] != 0 }} ;
  assign _091_ = FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1 & asn_56;
  assign _091__S = 0 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1_C0 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1_R0 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1_X0 ;
  logic [0:0] asn_56_C0 ;
  logic [0:0] asn_56_R0 ;
  logic [0:0] asn_56_X0 ;
  assign _091__T = FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1_T | asn_56_T ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1_C0 = _091__C ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1_X0 = _091__X ;
  assign asn_56_C0 = _091__C ;
  assign asn_56_X0 = _091__X ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1_R0 = ( _091__R | _091__C & asn_56_T ) & { 1{ asn_56 != 0 }} ;
  assign asn_56_R0 = ( _091__R | _091__C & FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1_T ) & { 1{ FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1 != 0 }} ;
  assign _092_ = FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1 & asn_56;
  assign _092__S = 0 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1_C0 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1_R0 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1_X0 ;
  logic [0:0] asn_56_C1 ;
  logic [0:0] asn_56_R1 ;
  logic [0:0] asn_56_X1 ;
  assign _092__T = FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1_T | asn_56_T ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1_C0 = _092__C ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1_X0 = _092__X ;
  assign asn_56_C1 = _092__C ;
  assign asn_56_X1 = _092__X ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1_R0 = ( _092__R | _092__C & asn_56_T ) & { 1{ asn_56 != 0 }} ;
  assign asn_56_R1 = ( _092__R | _092__C & FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1_T ) & { 1{ FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1 != 0 }} ;
  assign _093_ = reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1[0] & asn_56;
  assign _093__S = 0 ;
  logic [8:0] reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_C0 ;
  logic [8:0] reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_R0 ;
  logic [8:0] reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_X0 ;
  logic [0:0] asn_56_C2 ;
  logic [0:0] asn_56_R2 ;
  logic [0:0] asn_56_X2 ;
  assign _093__T = reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_T [0] | asn_56_T ;
  assign reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_C0 [0] = _093__C ;
  assign reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_X0 [0] = _093__X ;
  assign asn_56_C2 = _093__C ;
  assign asn_56_X2 = _093__X ;
  assign reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_R0 [0] = ( _093__R | _093__C & asn_56_T ) & { 1{ asn_56 != 0 }} ;
  assign asn_56_R2 = ( _093__R | _093__C & reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_T [0] ) & { 1{ reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1[0] != 0 }} ;
  assign _094_ = reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1[8] & asn_56;
  assign _094__S = 0 ;
  logic [0:0] asn_56_C3 ;
  logic [0:0] asn_56_R3 ;
  logic [0:0] asn_56_X3 ;
  assign _094__T = reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_T [8] | asn_56_T ;
  assign reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_C0 [8] = _094__C ;
  assign reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_X0 [8] = _094__X ;
  assign asn_56_C3 = _094__C ;
  assign asn_56_X3 = _094__X ;
  assign reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_R0 [8] = ( _094__R | _094__C & asn_56_T ) & { 1{ asn_56 != 0 }} ;
  assign asn_56_R3 = ( _094__R | _094__C & reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_T [8] ) & { 1{ reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1[8] != 0 }} ;
  assign _095_ = reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp & asn_56;
  assign _095__S = 0 ;
  logic [0:0] reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_C0 ;
  logic [0:0] reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_R0 ;
  logic [0:0] reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_X0 ;
  logic [0:0] asn_56_C4 ;
  logic [0:0] asn_56_R4 ;
  logic [0:0] asn_56_X4 ;
  assign _095__T = reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_T | asn_56_T ;
  assign reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_C0 = _095__C ;
  assign reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_X0 = _095__X ;
  assign asn_56_C4 = _095__C ;
  assign asn_56_X4 = _095__X ;
  assign reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_R0 = ( _095__R | _095__C & asn_56_T ) & { 1{ asn_56 != 0 }} ;
  assign asn_56_R4 = ( _095__R | _095__C & reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_T ) & { 1{ reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp != 0 }} ;
  assign _096_ = i_data_slc_i_data_15_1_itm_4 & asn_56;
  assign _096__S = 0 ;
  logic [0:0] i_data_slc_i_data_15_1_itm_4_C0 ;
  logic [0:0] i_data_slc_i_data_15_1_itm_4_R0 ;
  logic [0:0] i_data_slc_i_data_15_1_itm_4_X0 ;
  logic [0:0] asn_56_C5 ;
  logic [0:0] asn_56_R5 ;
  logic [0:0] asn_56_X5 ;
  assign _096__T = i_data_slc_i_data_15_1_itm_4_T | asn_56_T ;
  assign i_data_slc_i_data_15_1_itm_4_C0 = _096__C ;
  assign i_data_slc_i_data_15_1_itm_4_X0 = _096__X ;
  assign asn_56_C5 = _096__C ;
  assign asn_56_X5 = _096__X ;
  assign i_data_slc_i_data_15_1_itm_4_R0 = ( _096__R | _096__C & asn_56_T ) & { 1{ asn_56 != 0 }} ;
  assign asn_56_R5 = ( _096__R | _096__C & i_data_slc_i_data_15_1_itm_4_T ) & { 1{ i_data_slc_i_data_15_1_itm_4 != 0 }} ;
  logic [16:0] fangyuan6;
  logic [16:0] fangyuan6_T ;
  logic [16:0] fangyuan6_R ;
  logic [16:0] fangyuan6_C ;
  logic [16:0] fangyuan6_X ;
  assign fangyuan6 = { _000_[0], _000_[0], _000_[0], _000_[0], _000_[0], _000_[0], _000_[0], _000_[0], _000_[0], _000_[0], _000_[0], _000_[0], _000_[0], _000_[0], _000_[0], _000_[0], _000_[0] };
  assign fangyuan6_T = {  _000__T [0] , _000__T [0] , _000__T [0] , _000__T [0] , _000__T [0] , _000__T [0] , _000__T [0] , _000__T [0] , _000__T [0] , _000__T [0] , _000__T [0] , _000__T [0] , _000__T [0] , _000__T [0] , _000__T [0] , _000__T [0] , _000__T [0]  };
  logic [5:0] fangyuan6_S ;
  assign fangyuan6_S = 0 ;
  logic [2:0] _000__R0 ;
  logic [2:0] _000__X0 ;
  logic [2:0] _000__C0 ;
  assign _000__R0 [0:0] = fangyuan6_R [16:16] ;
  assign _000__X0 [0:0] = fangyuan6_X [16:16] ;
  assign _000__C0 [0:0] = fangyuan6_C [16:16] ;
  assign { _000__R0 [2:1] } = 0;
  assign { _000__X0 [2:1] } = 0;
  assign { _000__C0 [2:1] } = 0;
  logic [2:0] _000__R1 ;
  logic [2:0] _000__X1 ;
  logic [2:0] _000__C1 ;
  assign _000__R1 [0:0] = fangyuan6_R [15:15] ;
  assign _000__X1 [0:0] = fangyuan6_X [15:15] ;
  assign _000__C1 [0:0] = fangyuan6_C [15:15] ;
  assign { _000__R1 [2:1] } = 0;
  assign { _000__X1 [2:1] } = 0;
  assign { _000__C1 [2:1] } = 0;
  logic [2:0] _000__R2 ;
  logic [2:0] _000__X2 ;
  logic [2:0] _000__C2 ;
  assign _000__R2 [0:0] = fangyuan6_R [14:14] ;
  assign _000__X2 [0:0] = fangyuan6_X [14:14] ;
  assign _000__C2 [0:0] = fangyuan6_C [14:14] ;
  assign { _000__R2 [2:1] } = 0;
  assign { _000__X2 [2:1] } = 0;
  assign { _000__C2 [2:1] } = 0;
  logic [2:0] _000__R3 ;
  logic [2:0] _000__X3 ;
  logic [2:0] _000__C3 ;
  assign _000__R3 [0:0] = fangyuan6_R [13:13] ;
  assign _000__X3 [0:0] = fangyuan6_X [13:13] ;
  assign _000__C3 [0:0] = fangyuan6_C [13:13] ;
  assign { _000__R3 [2:1] } = 0;
  assign { _000__X3 [2:1] } = 0;
  assign { _000__C3 [2:1] } = 0;
  logic [2:0] _000__R4 ;
  logic [2:0] _000__X4 ;
  logic [2:0] _000__C4 ;
  assign _000__R4 [0:0] = fangyuan6_R [12:12] ;
  assign _000__X4 [0:0] = fangyuan6_X [12:12] ;
  assign _000__C4 [0:0] = fangyuan6_C [12:12] ;
  assign { _000__R4 [2:1] } = 0;
  assign { _000__X4 [2:1] } = 0;
  assign { _000__C4 [2:1] } = 0;
  logic [2:0] _000__R5 ;
  logic [2:0] _000__X5 ;
  logic [2:0] _000__C5 ;
  assign _000__R5 [0:0] = fangyuan6_R [11:11] ;
  assign _000__X5 [0:0] = fangyuan6_X [11:11] ;
  assign _000__C5 [0:0] = fangyuan6_C [11:11] ;
  assign { _000__R5 [2:1] } = 0;
  assign { _000__X5 [2:1] } = 0;
  assign { _000__C5 [2:1] } = 0;
  logic [2:0] _000__R6 ;
  logic [2:0] _000__X6 ;
  logic [2:0] _000__C6 ;
  assign _000__R6 [0:0] = fangyuan6_R [10:10] ;
  assign _000__X6 [0:0] = fangyuan6_X [10:10] ;
  assign _000__C6 [0:0] = fangyuan6_C [10:10] ;
  assign { _000__R6 [2:1] } = 0;
  assign { _000__X6 [2:1] } = 0;
  assign { _000__C6 [2:1] } = 0;
  logic [2:0] _000__R7 ;
  logic [2:0] _000__X7 ;
  logic [2:0] _000__C7 ;
  assign _000__R7 [0:0] = fangyuan6_R [9:9] ;
  assign _000__X7 [0:0] = fangyuan6_X [9:9] ;
  assign _000__C7 [0:0] = fangyuan6_C [9:9] ;
  assign { _000__R7 [2:1] } = 0;
  assign { _000__X7 [2:1] } = 0;
  assign { _000__C7 [2:1] } = 0;
  logic [2:0] _000__R8 ;
  logic [2:0] _000__X8 ;
  logic [2:0] _000__C8 ;
  assign _000__R8 [0:0] = fangyuan6_R [8:8] ;
  assign _000__X8 [0:0] = fangyuan6_X [8:8] ;
  assign _000__C8 [0:0] = fangyuan6_C [8:8] ;
  assign { _000__R8 [2:1] } = 0;
  assign { _000__X8 [2:1] } = 0;
  assign { _000__C8 [2:1] } = 0;
  logic [2:0] _000__R9 ;
  logic [2:0] _000__X9 ;
  logic [2:0] _000__C9 ;
  assign _000__R9 [0:0] = fangyuan6_R [7:7] ;
  assign _000__X9 [0:0] = fangyuan6_X [7:7] ;
  assign _000__C9 [0:0] = fangyuan6_C [7:7] ;
  assign { _000__R9 [2:1] } = 0;
  assign { _000__X9 [2:1] } = 0;
  assign { _000__C9 [2:1] } = 0;
  logic [2:0] _000__R10 ;
  logic [2:0] _000__X10 ;
  logic [2:0] _000__C10 ;
  assign _000__R10 [0:0] = fangyuan6_R [6:6] ;
  assign _000__X10 [0:0] = fangyuan6_X [6:6] ;
  assign _000__C10 [0:0] = fangyuan6_C [6:6] ;
  assign { _000__R10 [2:1] } = 0;
  assign { _000__X10 [2:1] } = 0;
  assign { _000__C10 [2:1] } = 0;
  logic [2:0] _000__R11 ;
  logic [2:0] _000__X11 ;
  logic [2:0] _000__C11 ;
  assign _000__R11 [0:0] = fangyuan6_R [5:5] ;
  assign _000__X11 [0:0] = fangyuan6_X [5:5] ;
  assign _000__C11 [0:0] = fangyuan6_C [5:5] ;
  assign { _000__R11 [2:1] } = 0;
  assign { _000__X11 [2:1] } = 0;
  assign { _000__C11 [2:1] } = 0;
  logic [2:0] _000__R12 ;
  logic [2:0] _000__X12 ;
  logic [2:0] _000__C12 ;
  assign _000__R12 [0:0] = fangyuan6_R [4:4] ;
  assign _000__X12 [0:0] = fangyuan6_X [4:4] ;
  assign _000__C12 [0:0] = fangyuan6_C [4:4] ;
  assign { _000__R12 [2:1] } = 0;
  assign { _000__X12 [2:1] } = 0;
  assign { _000__C12 [2:1] } = 0;
  logic [2:0] _000__R13 ;
  logic [2:0] _000__X13 ;
  logic [2:0] _000__C13 ;
  assign _000__R13 [0:0] = fangyuan6_R [3:3] ;
  assign _000__X13 [0:0] = fangyuan6_X [3:3] ;
  assign _000__C13 [0:0] = fangyuan6_C [3:3] ;
  assign { _000__R13 [2:1] } = 0;
  assign { _000__X13 [2:1] } = 0;
  assign { _000__C13 [2:1] } = 0;
  logic [2:0] _000__R14 ;
  logic [2:0] _000__X14 ;
  logic [2:0] _000__C14 ;
  assign _000__R14 [0:0] = fangyuan6_R [2:2] ;
  assign _000__X14 [0:0] = fangyuan6_X [2:2] ;
  assign _000__C14 [0:0] = fangyuan6_C [2:2] ;
  assign { _000__R14 [2:1] } = 0;
  assign { _000__X14 [2:1] } = 0;
  assign { _000__C14 [2:1] } = 0;
  logic [2:0] _000__R15 ;
  logic [2:0] _000__X15 ;
  logic [2:0] _000__C15 ;
  assign _000__R15 [0:0] = fangyuan6_R [1:1] ;
  assign _000__X15 [0:0] = fangyuan6_X [1:1] ;
  assign _000__C15 [0:0] = fangyuan6_C [1:1] ;
  assign { _000__R15 [2:1] } = 0;
  assign { _000__X15 [2:1] } = 0;
  assign { _000__C15 [2:1] } = 0;
  logic [2:0] _000__R16 ;
  logic [2:0] _000__X16 ;
  logic [2:0] _000__C16 ;
  assign _000__R16 [0:0] = fangyuan6_R [0:0] ;
  assign _000__X16 [0:0] = fangyuan6_X [0:0] ;
  assign _000__C16 [0:0] = fangyuan6_C [0:0] ;

  assign _097_ = IntSubExt_16U_16U_17U_o_asn_IntSubExt_16U_16U_17U_o_conc_1_cgspt_9_mux_nl & fangyuan6;
  assign _097__S = 0 ;
  logic [9:0] IntSubExt_16U_16U_17U_o_asn_IntSubExt_16U_16U_17U_o_conc_1_cgspt_9_mux_nl_C0 ;
  logic [9:0] IntSubExt_16U_16U_17U_o_asn_IntSubExt_16U_16U_17U_o_conc_1_cgspt_9_mux_nl_R0 ;
  logic [9:0] IntSubExt_16U_16U_17U_o_asn_IntSubExt_16U_16U_17U_o_conc_1_cgspt_9_mux_nl_X0 ;
  logic [16:0] fangyuan6_C0 ;
  logic [16:0] fangyuan6_R0 ;
  logic [16:0] fangyuan6_X0 ;
  assign _097__T = IntSubExt_16U_16U_17U_o_asn_IntSubExt_16U_16U_17U_o_conc_1_cgspt_9_mux_nl_T | fangyuan6_T ;
  assign IntSubExt_16U_16U_17U_o_asn_IntSubExt_16U_16U_17U_o_conc_1_cgspt_9_mux_nl_C0 = _097__C ;
  assign IntSubExt_16U_16U_17U_o_asn_IntSubExt_16U_16U_17U_o_conc_1_cgspt_9_mux_nl_X0 = _097__X ;
  assign fangyuan6_C0 = _097__C ;
  assign fangyuan6_X0 = _097__X ;
  assign IntSubExt_16U_16U_17U_o_asn_IntSubExt_16U_16U_17U_o_conc_1_cgspt_9_mux_nl_R0 = ( _097__R | _097__C & fangyuan6_T ) & { 17{ fangyuan6 != 0 }} ;
  assign fangyuan6_R0 = ( _097__R | _097__C & IntSubExt_16U_16U_17U_o_asn_IntSubExt_16U_16U_17U_o_conc_1_cgspt_9_mux_nl_T ) & { 10{ IntSubExt_16U_16U_17U_o_asn_IntSubExt_16U_16U_17U_o_conc_1_cgspt_9_mux_nl != 0 }} ;
  logic [16:0] fangyuan7;
  logic [16:0] fangyuan7_T ;
  logic [16:0] fangyuan7_R ;
  logic [16:0] fangyuan7_C ;
  logic [16:0] fangyuan7_X ;
  assign fangyuan7 = { mux_44_nl, mux_44_nl, mux_44_nl, mux_44_nl, mux_44_nl, mux_44_nl, mux_44_nl, mux_44_nl, mux_44_nl, mux_44_nl, mux_44_nl, mux_44_nl, mux_44_nl, mux_44_nl, mux_44_nl, mux_44_nl, mux_44_nl };
  assign fangyuan7_T = {  mux_44_nl_T , mux_44_nl_T , mux_44_nl_T , mux_44_nl_T , mux_44_nl_T , mux_44_nl_T , mux_44_nl_T , mux_44_nl_T , mux_44_nl_T , mux_44_nl_T , mux_44_nl_T , mux_44_nl_T , mux_44_nl_T , mux_44_nl_T , mux_44_nl_T , mux_44_nl_T , mux_44_nl_T  };
  logic [5:0] fangyuan7_S ;
  assign fangyuan7_S = 0 ;
  logic [0:0] mux_44_nl_R0 ;
  logic [0:0] mux_44_nl_X0 ;
  logic [0:0] mux_44_nl_C0 ;
  assign mux_44_nl_R0 = fangyuan7_R [16:16] ;
  assign mux_44_nl_X0 = fangyuan7_X [16:16] ;
  assign mux_44_nl_C0 = fangyuan7_C [16:16] ;
  logic [0:0] mux_44_nl_R1 ;
  logic [0:0] mux_44_nl_X1 ;
  logic [0:0] mux_44_nl_C1 ;
  assign mux_44_nl_R1 = fangyuan7_R [15:15] ;
  assign mux_44_nl_X1 = fangyuan7_X [15:15] ;
  assign mux_44_nl_C1 = fangyuan7_C [15:15] ;
  logic [0:0] mux_44_nl_R2 ;
  logic [0:0] mux_44_nl_X2 ;
  logic [0:0] mux_44_nl_C2 ;
  assign mux_44_nl_R2 = fangyuan7_R [14:14] ;
  assign mux_44_nl_X2 = fangyuan7_X [14:14] ;
  assign mux_44_nl_C2 = fangyuan7_C [14:14] ;
  logic [0:0] mux_44_nl_R3 ;
  logic [0:0] mux_44_nl_X3 ;
  logic [0:0] mux_44_nl_C3 ;
  assign mux_44_nl_R3 = fangyuan7_R [13:13] ;
  assign mux_44_nl_X3 = fangyuan7_X [13:13] ;
  assign mux_44_nl_C3 = fangyuan7_C [13:13] ;
  logic [0:0] mux_44_nl_R4 ;
  logic [0:0] mux_44_nl_X4 ;
  logic [0:0] mux_44_nl_C4 ;
  assign mux_44_nl_R4 = fangyuan7_R [12:12] ;
  assign mux_44_nl_X4 = fangyuan7_X [12:12] ;
  assign mux_44_nl_C4 = fangyuan7_C [12:12] ;
  logic [0:0] mux_44_nl_R5 ;
  logic [0:0] mux_44_nl_X5 ;
  logic [0:0] mux_44_nl_C5 ;
  assign mux_44_nl_R5 = fangyuan7_R [11:11] ;
  assign mux_44_nl_X5 = fangyuan7_X [11:11] ;
  assign mux_44_nl_C5 = fangyuan7_C [11:11] ;
  logic [0:0] mux_44_nl_R6 ;
  logic [0:0] mux_44_nl_X6 ;
  logic [0:0] mux_44_nl_C6 ;
  assign mux_44_nl_R6 = fangyuan7_R [10:10] ;
  assign mux_44_nl_X6 = fangyuan7_X [10:10] ;
  assign mux_44_nl_C6 = fangyuan7_C [10:10] ;
  logic [0:0] mux_44_nl_R7 ;
  logic [0:0] mux_44_nl_X7 ;
  logic [0:0] mux_44_nl_C7 ;
  assign mux_44_nl_R7 = fangyuan7_R [9:9] ;
  assign mux_44_nl_X7 = fangyuan7_X [9:9] ;
  assign mux_44_nl_C7 = fangyuan7_C [9:9] ;
  logic [0:0] mux_44_nl_R8 ;
  logic [0:0] mux_44_nl_X8 ;
  logic [0:0] mux_44_nl_C8 ;
  assign mux_44_nl_R8 = fangyuan7_R [8:8] ;
  assign mux_44_nl_X8 = fangyuan7_X [8:8] ;
  assign mux_44_nl_C8 = fangyuan7_C [8:8] ;
  logic [0:0] mux_44_nl_R9 ;
  logic [0:0] mux_44_nl_X9 ;
  logic [0:0] mux_44_nl_C9 ;
  assign mux_44_nl_R9 = fangyuan7_R [7:7] ;
  assign mux_44_nl_X9 = fangyuan7_X [7:7] ;
  assign mux_44_nl_C9 = fangyuan7_C [7:7] ;
  logic [0:0] mux_44_nl_R10 ;
  logic [0:0] mux_44_nl_X10 ;
  logic [0:0] mux_44_nl_C10 ;
  assign mux_44_nl_R10 = fangyuan7_R [6:6] ;
  assign mux_44_nl_X10 = fangyuan7_X [6:6] ;
  assign mux_44_nl_C10 = fangyuan7_C [6:6] ;
  logic [0:0] mux_44_nl_R11 ;
  logic [0:0] mux_44_nl_X11 ;
  logic [0:0] mux_44_nl_C11 ;
  assign mux_44_nl_R11 = fangyuan7_R [5:5] ;
  assign mux_44_nl_X11 = fangyuan7_X [5:5] ;
  assign mux_44_nl_C11 = fangyuan7_C [5:5] ;
  logic [0:0] mux_44_nl_R12 ;
  logic [0:0] mux_44_nl_X12 ;
  logic [0:0] mux_44_nl_C12 ;
  assign mux_44_nl_R12 = fangyuan7_R [4:4] ;
  assign mux_44_nl_X12 = fangyuan7_X [4:4] ;
  assign mux_44_nl_C12 = fangyuan7_C [4:4] ;
  logic [0:0] mux_44_nl_R13 ;
  logic [0:0] mux_44_nl_X13 ;
  logic [0:0] mux_44_nl_C13 ;
  assign mux_44_nl_R13 = fangyuan7_R [3:3] ;
  assign mux_44_nl_X13 = fangyuan7_X [3:3] ;
  assign mux_44_nl_C13 = fangyuan7_C [3:3] ;
  logic [0:0] mux_44_nl_R14 ;
  logic [0:0] mux_44_nl_X14 ;
  logic [0:0] mux_44_nl_C14 ;
  assign mux_44_nl_R14 = fangyuan7_R [2:2] ;
  assign mux_44_nl_X14 = fangyuan7_X [2:2] ;
  assign mux_44_nl_C14 = fangyuan7_C [2:2] ;
  logic [0:0] mux_44_nl_R15 ;
  logic [0:0] mux_44_nl_X15 ;
  logic [0:0] mux_44_nl_C15 ;
  assign mux_44_nl_R15 = fangyuan7_R [1:1] ;
  assign mux_44_nl_X15 = fangyuan7_X [1:1] ;
  assign mux_44_nl_C15 = fangyuan7_C [1:1] ;
  logic [0:0] mux_44_nl_R16 ;
  logic [0:0] mux_44_nl_X16 ;
  logic [0:0] mux_44_nl_C16 ;
  assign mux_44_nl_R16 = fangyuan7_R [0:0] ;
  assign mux_44_nl_X16 = fangyuan7_X [0:0] ;
  assign mux_44_nl_C16 = fangyuan7_C [0:0] ;

  assign _098_ = IntSubExt_8U_8U_9U_1_o_acc_nl & fangyuan7;
  assign _098__S = 0 ;
  logic [8:0] IntSubExt_8U_8U_9U_1_o_acc_nl_C0 ;
  logic [8:0] IntSubExt_8U_8U_9U_1_o_acc_nl_R0 ;
  logic [8:0] IntSubExt_8U_8U_9U_1_o_acc_nl_X0 ;
  logic [16:0] fangyuan7_C0 ;
  logic [16:0] fangyuan7_R0 ;
  logic [16:0] fangyuan7_X0 ;
  assign _098__T = IntSubExt_8U_8U_9U_1_o_acc_nl_T | fangyuan7_T ;
  assign IntSubExt_8U_8U_9U_1_o_acc_nl_C0 = _098__C ;
  assign IntSubExt_8U_8U_9U_1_o_acc_nl_X0 = _098__X ;
  assign fangyuan7_C0 = _098__C ;
  assign fangyuan7_X0 = _098__X ;
  assign IntSubExt_8U_8U_9U_1_o_acc_nl_R0 = ( _098__R | _098__C & fangyuan7_T ) & { 17{ fangyuan7 != 0 }} ;
  assign fangyuan7_R0 = ( _098__R | _098__C & IntSubExt_8U_8U_9U_1_o_acc_nl_T ) & { 9{ IntSubExt_8U_8U_9U_1_o_acc_nl != 0 }} ;
  logic [16:0] fangyuan8;
  logic [16:0] fangyuan8_T ;
  logic [16:0] fangyuan8_R ;
  logic [16:0] fangyuan8_C ;
  logic [16:0] fangyuan8_X ;
  assign fangyuan8 = { and_76_nl, and_76_nl, and_76_nl, and_76_nl, and_76_nl, and_76_nl, and_76_nl, and_76_nl, and_76_nl, and_76_nl, and_76_nl, and_76_nl, and_76_nl, and_76_nl, and_76_nl, and_76_nl, and_76_nl };
  assign fangyuan8_T = {  and_76_nl_T , and_76_nl_T , and_76_nl_T , and_76_nl_T , and_76_nl_T , and_76_nl_T , and_76_nl_T , and_76_nl_T , and_76_nl_T , and_76_nl_T , and_76_nl_T , and_76_nl_T , and_76_nl_T , and_76_nl_T , and_76_nl_T , and_76_nl_T , and_76_nl_T  };
  logic [5:0] fangyuan8_S ;
  assign fangyuan8_S = 0 ;
  logic [0:0] and_76_nl_R0 ;
  logic [0:0] and_76_nl_X0 ;
  logic [0:0] and_76_nl_C0 ;
  assign and_76_nl_R0 = fangyuan8_R [16:16] ;
  assign and_76_nl_X0 = fangyuan8_X [16:16] ;
  assign and_76_nl_C0 = fangyuan8_C [16:16] ;
  logic [0:0] and_76_nl_R1 ;
  logic [0:0] and_76_nl_X1 ;
  logic [0:0] and_76_nl_C1 ;
  assign and_76_nl_R1 = fangyuan8_R [15:15] ;
  assign and_76_nl_X1 = fangyuan8_X [15:15] ;
  assign and_76_nl_C1 = fangyuan8_C [15:15] ;
  logic [0:0] and_76_nl_R2 ;
  logic [0:0] and_76_nl_X2 ;
  logic [0:0] and_76_nl_C2 ;
  assign and_76_nl_R2 = fangyuan8_R [14:14] ;
  assign and_76_nl_X2 = fangyuan8_X [14:14] ;
  assign and_76_nl_C2 = fangyuan8_C [14:14] ;
  logic [0:0] and_76_nl_R3 ;
  logic [0:0] and_76_nl_X3 ;
  logic [0:0] and_76_nl_C3 ;
  assign and_76_nl_R3 = fangyuan8_R [13:13] ;
  assign and_76_nl_X3 = fangyuan8_X [13:13] ;
  assign and_76_nl_C3 = fangyuan8_C [13:13] ;
  logic [0:0] and_76_nl_R4 ;
  logic [0:0] and_76_nl_X4 ;
  logic [0:0] and_76_nl_C4 ;
  assign and_76_nl_R4 = fangyuan8_R [12:12] ;
  assign and_76_nl_X4 = fangyuan8_X [12:12] ;
  assign and_76_nl_C4 = fangyuan8_C [12:12] ;
  logic [0:0] and_76_nl_R5 ;
  logic [0:0] and_76_nl_X5 ;
  logic [0:0] and_76_nl_C5 ;
  assign and_76_nl_R5 = fangyuan8_R [11:11] ;
  assign and_76_nl_X5 = fangyuan8_X [11:11] ;
  assign and_76_nl_C5 = fangyuan8_C [11:11] ;
  logic [0:0] and_76_nl_R6 ;
  logic [0:0] and_76_nl_X6 ;
  logic [0:0] and_76_nl_C6 ;
  assign and_76_nl_R6 = fangyuan8_R [10:10] ;
  assign and_76_nl_X6 = fangyuan8_X [10:10] ;
  assign and_76_nl_C6 = fangyuan8_C [10:10] ;
  logic [0:0] and_76_nl_R7 ;
  logic [0:0] and_76_nl_X7 ;
  logic [0:0] and_76_nl_C7 ;
  assign and_76_nl_R7 = fangyuan8_R [9:9] ;
  assign and_76_nl_X7 = fangyuan8_X [9:9] ;
  assign and_76_nl_C7 = fangyuan8_C [9:9] ;
  logic [0:0] and_76_nl_R8 ;
  logic [0:0] and_76_nl_X8 ;
  logic [0:0] and_76_nl_C8 ;
  assign and_76_nl_R8 = fangyuan8_R [8:8] ;
  assign and_76_nl_X8 = fangyuan8_X [8:8] ;
  assign and_76_nl_C8 = fangyuan8_C [8:8] ;
  logic [0:0] and_76_nl_R9 ;
  logic [0:0] and_76_nl_X9 ;
  logic [0:0] and_76_nl_C9 ;
  assign and_76_nl_R9 = fangyuan8_R [7:7] ;
  assign and_76_nl_X9 = fangyuan8_X [7:7] ;
  assign and_76_nl_C9 = fangyuan8_C [7:7] ;
  logic [0:0] and_76_nl_R10 ;
  logic [0:0] and_76_nl_X10 ;
  logic [0:0] and_76_nl_C10 ;
  assign and_76_nl_R10 = fangyuan8_R [6:6] ;
  assign and_76_nl_X10 = fangyuan8_X [6:6] ;
  assign and_76_nl_C10 = fangyuan8_C [6:6] ;
  logic [0:0] and_76_nl_R11 ;
  logic [0:0] and_76_nl_X11 ;
  logic [0:0] and_76_nl_C11 ;
  assign and_76_nl_R11 = fangyuan8_R [5:5] ;
  assign and_76_nl_X11 = fangyuan8_X [5:5] ;
  assign and_76_nl_C11 = fangyuan8_C [5:5] ;
  logic [0:0] and_76_nl_R12 ;
  logic [0:0] and_76_nl_X12 ;
  logic [0:0] and_76_nl_C12 ;
  assign and_76_nl_R12 = fangyuan8_R [4:4] ;
  assign and_76_nl_X12 = fangyuan8_X [4:4] ;
  assign and_76_nl_C12 = fangyuan8_C [4:4] ;
  logic [0:0] and_76_nl_R13 ;
  logic [0:0] and_76_nl_X13 ;
  logic [0:0] and_76_nl_C13 ;
  assign and_76_nl_R13 = fangyuan8_R [3:3] ;
  assign and_76_nl_X13 = fangyuan8_X [3:3] ;
  assign and_76_nl_C13 = fangyuan8_C [3:3] ;
  logic [0:0] and_76_nl_R14 ;
  logic [0:0] and_76_nl_X14 ;
  logic [0:0] and_76_nl_C14 ;
  assign and_76_nl_R14 = fangyuan8_R [2:2] ;
  assign and_76_nl_X14 = fangyuan8_X [2:2] ;
  assign and_76_nl_C14 = fangyuan8_C [2:2] ;
  logic [0:0] and_76_nl_R15 ;
  logic [0:0] and_76_nl_X15 ;
  logic [0:0] and_76_nl_C15 ;
  assign and_76_nl_R15 = fangyuan8_R [1:1] ;
  assign and_76_nl_X15 = fangyuan8_X [1:1] ;
  assign and_76_nl_C15 = fangyuan8_C [1:1] ;
  logic [0:0] and_76_nl_R16 ;
  logic [0:0] and_76_nl_X16 ;
  logic [0:0] and_76_nl_C16 ;
  assign and_76_nl_R16 = fangyuan8_R [0:0] ;
  assign and_76_nl_X16 = fangyuan8_X [0:0] ;
  assign and_76_nl_C16 = fangyuan8_C [0:0] ;

  assign _099_ = acc_nl[17:1] & fangyuan8;
  assign _099__S = 0 ;
  logic [17:0] acc_nl_C0 ;
  logic [17:0] acc_nl_R0 ;
  logic [17:0] acc_nl_X0 ;
  logic [16:0] fangyuan8_C0 ;
  logic [16:0] fangyuan8_R0 ;
  logic [16:0] fangyuan8_X0 ;
  assign _099__T = acc_nl_T [17:1] | fangyuan8_T ;
  assign acc_nl_C0 [17:1] = _099__C ;
  assign acc_nl_X0 [17:1] = _099__X ;
  assign fangyuan8_C0 = _099__C ;
  assign fangyuan8_X0 = _099__X ;
  assign acc_nl_R0 [17:1] = ( _099__R | _099__C & fangyuan8_T ) & { 17{ fangyuan8 != 0 }} ;
  assign fangyuan8_R0 = ( _099__R | _099__C & acc_nl_T [17:1] ) & { 17{ acc_nl[17:1] != 0 }} ;
  logic [3:0] fangyuan9;
  logic [3:0] fangyuan9_T ;
  logic [3:0] fangyuan9_R ;
  logic [3:0] fangyuan9_C ;
  logic [3:0] fangyuan9_X ;
  assign fangyuan9 = { nor_tmp_11, nor_tmp_11, nor_tmp_11, nor_tmp_11 };
  assign fangyuan9_T = {  nor_tmp_11_T , nor_tmp_11_T , nor_tmp_11_T , nor_tmp_11_T  };
  logic [5:0] fangyuan9_S ;
  assign fangyuan9_S = 0 ;
  logic [0:0] nor_tmp_11_R6 ;
  logic [0:0] nor_tmp_11_X6 ;
  logic [0:0] nor_tmp_11_C6 ;
  assign nor_tmp_11_R6 = fangyuan9_R [3:3] ;
  assign nor_tmp_11_X6 = fangyuan9_X [3:3] ;
  assign nor_tmp_11_C6 = fangyuan9_C [3:3] ;
  logic [0:0] nor_tmp_11_R7 ;
  logic [0:0] nor_tmp_11_X7 ;
  logic [0:0] nor_tmp_11_C7 ;
  assign nor_tmp_11_R7 = fangyuan9_R [2:2] ;
  assign nor_tmp_11_X7 = fangyuan9_X [2:2] ;
  assign nor_tmp_11_C7 = fangyuan9_C [2:2] ;
  logic [0:0] nor_tmp_11_R8 ;
  logic [0:0] nor_tmp_11_X8 ;
  logic [0:0] nor_tmp_11_C8 ;
  assign nor_tmp_11_R8 = fangyuan9_R [1:1] ;
  assign nor_tmp_11_X8 = fangyuan9_X [1:1] ;
  assign nor_tmp_11_C8 = fangyuan9_C [1:1] ;
  logic [0:0] nor_tmp_11_R9 ;
  logic [0:0] nor_tmp_11_X9 ;
  logic [0:0] nor_tmp_11_C9 ;
  assign nor_tmp_11_R9 = fangyuan9_R [0:0] ;
  assign nor_tmp_11_X9 = fangyuan9_X [0:0] ;
  assign nor_tmp_11_C9 = fangyuan9_C [0:0] ;

  assign _100_ = else_else_o_trt_15_1_sva[12:9] & fangyuan9;
  assign _100__S = 0 ;
  logic [3:0] fangyuan9_C0 ;
  logic [3:0] fangyuan9_R0 ;
  logic [3:0] fangyuan9_X0 ;
  assign _100__T = else_else_o_trt_15_1_sva_T [12:9] | fangyuan9_T ;
  assign else_else_o_trt_15_1_sva_C0 [12:9] = _100__C ;
  assign else_else_o_trt_15_1_sva_X0 [12:9] = _100__X ;
  assign fangyuan9_C0 = _100__C ;
  assign fangyuan9_X0 = _100__X ;
  assign else_else_o_trt_15_1_sva_R0 [12:9] = ( _100__R | _100__C & fangyuan9_T ) & { 4{ fangyuan9 != 0 }} ;
  assign fangyuan9_R0 = ( _100__R | _100__C & else_else_o_trt_15_1_sva_T [12:9] ) & { 4{ else_else_o_trt_15_1_sva[12:9] != 0 }} ;
  logic [3:0] fangyuan10;
  logic [3:0] fangyuan10_T ;
  logic [3:0] fangyuan10_R ;
  logic [3:0] fangyuan10_C ;
  logic [3:0] fangyuan10_X ;
  assign fangyuan10 = { IsInf_5U_10U_land_lpi_1_dfm, IsInf_5U_10U_land_lpi_1_dfm, IsInf_5U_10U_land_lpi_1_dfm, IsInf_5U_10U_land_lpi_1_dfm };
  assign fangyuan10_T = {  IsInf_5U_10U_land_lpi_1_dfm_T , IsInf_5U_10U_land_lpi_1_dfm_T , IsInf_5U_10U_land_lpi_1_dfm_T , IsInf_5U_10U_land_lpi_1_dfm_T  };
  logic [5:0] fangyuan10_S ;
  assign fangyuan10_S = 0 ;
  logic [0:0] IsInf_5U_10U_land_lpi_1_dfm_R0 ;
  logic [0:0] IsInf_5U_10U_land_lpi_1_dfm_X0 ;
  logic [0:0] IsInf_5U_10U_land_lpi_1_dfm_C0 ;
  assign IsInf_5U_10U_land_lpi_1_dfm_R0 = fangyuan10_R [3:3] ;
  assign IsInf_5U_10U_land_lpi_1_dfm_X0 = fangyuan10_X [3:3] ;
  assign IsInf_5U_10U_land_lpi_1_dfm_C0 = fangyuan10_C [3:3] ;
  logic [0:0] IsInf_5U_10U_land_lpi_1_dfm_R1 ;
  logic [0:0] IsInf_5U_10U_land_lpi_1_dfm_X1 ;
  logic [0:0] IsInf_5U_10U_land_lpi_1_dfm_C1 ;
  assign IsInf_5U_10U_land_lpi_1_dfm_R1 = fangyuan10_R [2:2] ;
  assign IsInf_5U_10U_land_lpi_1_dfm_X1 = fangyuan10_X [2:2] ;
  assign IsInf_5U_10U_land_lpi_1_dfm_C1 = fangyuan10_C [2:2] ;
  logic [0:0] IsInf_5U_10U_land_lpi_1_dfm_R2 ;
  logic [0:0] IsInf_5U_10U_land_lpi_1_dfm_X2 ;
  logic [0:0] IsInf_5U_10U_land_lpi_1_dfm_C2 ;
  assign IsInf_5U_10U_land_lpi_1_dfm_R2 = fangyuan10_R [1:1] ;
  assign IsInf_5U_10U_land_lpi_1_dfm_X2 = fangyuan10_X [1:1] ;
  assign IsInf_5U_10U_land_lpi_1_dfm_C2 = fangyuan10_C [1:1] ;
  logic [0:0] IsInf_5U_10U_land_lpi_1_dfm_R3 ;
  logic [0:0] IsInf_5U_10U_land_lpi_1_dfm_X3 ;
  logic [0:0] IsInf_5U_10U_land_lpi_1_dfm_C3 ;
  assign IsInf_5U_10U_land_lpi_1_dfm_R3 = fangyuan10_R [0:0] ;
  assign IsInf_5U_10U_land_lpi_1_dfm_X3 = fangyuan10_X [0:0] ;
  assign IsInf_5U_10U_land_lpi_1_dfm_C3 = fangyuan10_C [0:0] ;

  assign _101_ = 4'b1110 & fangyuan10;
  assign _101__S = 0 ;
  logic [3:0] fangyuan10_C0 ;
  logic [3:0] fangyuan10_R0 ;
  logic [3:0] fangyuan10_X0 ;
  assign _101__T = fangyuan10_T ;
  assign fangyuan10_C0 = _101__C ;
  assign fangyuan10_R0 = _101__R ;
  assign fangyuan10_X0 = _101__X ;
  logic [3:0] fangyuan11;
  logic [3:0] fangyuan11_T ;
  logic [3:0] fangyuan11_R ;
  logic [3:0] fangyuan11_C ;
  logic [3:0] fangyuan11_X ;
  assign fangyuan11 = { nor_17_cse, nor_17_cse, nor_17_cse, nor_17_cse };
  assign fangyuan11_T = {  nor_17_cse_T , nor_17_cse_T , nor_17_cse_T , nor_17_cse_T  };
  logic [5:0] fangyuan11_S ;
  assign fangyuan11_S = 0 ;
  logic [0:0] nor_17_cse_R7 ;
  logic [0:0] nor_17_cse_X7 ;
  logic [0:0] nor_17_cse_C7 ;
  assign nor_17_cse_R7 = fangyuan11_R [3:3] ;
  assign nor_17_cse_X7 = fangyuan11_X [3:3] ;
  assign nor_17_cse_C7 = fangyuan11_C [3:3] ;
  logic [0:0] nor_17_cse_R8 ;
  logic [0:0] nor_17_cse_X8 ;
  logic [0:0] nor_17_cse_C8 ;
  assign nor_17_cse_R8 = fangyuan11_R [2:2] ;
  assign nor_17_cse_X8 = fangyuan11_X [2:2] ;
  assign nor_17_cse_C8 = fangyuan11_C [2:2] ;
  logic [0:0] nor_17_cse_R9 ;
  logic [0:0] nor_17_cse_X9 ;
  logic [0:0] nor_17_cse_C9 ;
  assign nor_17_cse_R9 = fangyuan11_R [1:1] ;
  assign nor_17_cse_X9 = fangyuan11_X [1:1] ;
  assign nor_17_cse_C9 = fangyuan11_C [1:1] ;
  logic [0:0] nor_17_cse_R10 ;
  logic [0:0] nor_17_cse_X10 ;
  logic [0:0] nor_17_cse_C10 ;
  assign nor_17_cse_R10 = fangyuan11_R [0:0] ;
  assign nor_17_cse_X10 = fangyuan11_X [0:0] ;
  assign nor_17_cse_C10 = fangyuan11_C [0:0] ;

  assign _102_ = else_if_ac_int_cctor_16_10_sva[3:0] & fangyuan11;
  assign _102__S = 0 ;
  logic [3:0] fangyuan11_C0 ;
  logic [3:0] fangyuan11_R0 ;
  logic [3:0] fangyuan11_X0 ;
  assign _102__T = else_if_ac_int_cctor_16_10_sva_T [3:0] | fangyuan11_T ;
  assign else_if_ac_int_cctor_16_10_sva_C0 [3:0] = _102__C ;
  assign else_if_ac_int_cctor_16_10_sva_X0 [3:0] = _102__X ;
  assign fangyuan11_C0 = _102__C ;
  assign fangyuan11_X0 = _102__X ;
  assign else_if_ac_int_cctor_16_10_sva_R0 [3:0] = ( _102__R | _102__C & fangyuan11_T ) & { 4{ fangyuan11 != 0 }} ;
  assign fangyuan11_R0 = ( _102__R | _102__C & else_if_ac_int_cctor_16_10_sva_T [3:0] ) & { 4{ else_if_ac_int_cctor_16_10_sva[3:0] != 0 }} ;
  logic [3:0] fangyuan12;
  logic [3:0] fangyuan12_T ;
  logic [3:0] fangyuan12_R ;
  logic [3:0] fangyuan12_C ;
  logic [3:0] fangyuan12_X ;
  assign fangyuan12 = { IsDenorm_5U_10U_land_lpi_1_dfm, IsDenorm_5U_10U_land_lpi_1_dfm, IsDenorm_5U_10U_land_lpi_1_dfm, IsDenorm_5U_10U_land_lpi_1_dfm };
  assign fangyuan12_T = {  IsDenorm_5U_10U_land_lpi_1_dfm_T , IsDenorm_5U_10U_land_lpi_1_dfm_T , IsDenorm_5U_10U_land_lpi_1_dfm_T , IsDenorm_5U_10U_land_lpi_1_dfm_T  };
  logic [5:0] fangyuan12_S ;
  assign fangyuan12_S = 0 ;
  logic [0:0] IsDenorm_5U_10U_land_lpi_1_dfm_R0 ;
  logic [0:0] IsDenorm_5U_10U_land_lpi_1_dfm_X0 ;
  logic [0:0] IsDenorm_5U_10U_land_lpi_1_dfm_C0 ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_R0 = fangyuan12_R [3:3] ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_X0 = fangyuan12_X [3:3] ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_C0 = fangyuan12_C [3:3] ;
  logic [0:0] IsDenorm_5U_10U_land_lpi_1_dfm_R1 ;
  logic [0:0] IsDenorm_5U_10U_land_lpi_1_dfm_X1 ;
  logic [0:0] IsDenorm_5U_10U_land_lpi_1_dfm_C1 ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_R1 = fangyuan12_R [2:2] ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_X1 = fangyuan12_X [2:2] ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_C1 = fangyuan12_C [2:2] ;
  logic [0:0] IsDenorm_5U_10U_land_lpi_1_dfm_R2 ;
  logic [0:0] IsDenorm_5U_10U_land_lpi_1_dfm_X2 ;
  logic [0:0] IsDenorm_5U_10U_land_lpi_1_dfm_C2 ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_R2 = fangyuan12_R [1:1] ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_X2 = fangyuan12_X [1:1] ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_C2 = fangyuan12_C [1:1] ;
  logic [0:0] IsDenorm_5U_10U_land_lpi_1_dfm_R3 ;
  logic [0:0] IsDenorm_5U_10U_land_lpi_1_dfm_X3 ;
  logic [0:0] IsDenorm_5U_10U_land_lpi_1_dfm_C3 ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_R3 = fangyuan12_R [0:0] ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_X3 = fangyuan12_X [0:0] ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_C3 = fangyuan12_C [0:0] ;

  assign _103_ = FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva[3:0] & fangyuan12;
  assign _103__S = 0 ;
  logic [4:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_C0 ;
  logic [4:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_R0 ;
  logic [4:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_X0 ;
  logic [3:0] fangyuan12_C0 ;
  logic [3:0] fangyuan12_R0 ;
  logic [3:0] fangyuan12_X0 ;
  assign _103__T = FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_T [3:0] | fangyuan12_T ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_C0 [3:0] = _103__C ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_X0 [3:0] = _103__X ;
  assign fangyuan12_C0 = _103__C ;
  assign fangyuan12_X0 = _103__X ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_R0 [3:0] = ( _103__R | _103__C & fangyuan12_T ) & { 4{ fangyuan12 != 0 }} ;
  assign fangyuan12_R0 = ( _103__R | _103__C & FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_T [3:0] ) & { 4{ FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva[3:0] != 0 }} ;
  logic [3:0] fangyuan13;
  logic [3:0] fangyuan13_T ;
  logic [3:0] fangyuan13_R ;
  logic [3:0] fangyuan13_C ;
  logic [3:0] fangyuan13_X ;
  assign fangyuan13 = { asn_56, asn_56, asn_56, asn_56 };
  assign fangyuan13_T = {  asn_56_T , asn_56_T , asn_56_T , asn_56_T  };
  logic [5:0] fangyuan13_S ;
  assign fangyuan13_S = 0 ;
  logic [0:0] asn_56_R6 ;
  logic [0:0] asn_56_X6 ;
  logic [0:0] asn_56_C6 ;
  assign asn_56_R6 = fangyuan13_R [3:3] ;
  assign asn_56_X6 = fangyuan13_X [3:3] ;
  assign asn_56_C6 = fangyuan13_C [3:3] ;
  logic [0:0] asn_56_R7 ;
  logic [0:0] asn_56_X7 ;
  logic [0:0] asn_56_C7 ;
  assign asn_56_R7 = fangyuan13_R [2:2] ;
  assign asn_56_X7 = fangyuan13_X [2:2] ;
  assign asn_56_C7 = fangyuan13_C [2:2] ;
  logic [0:0] asn_56_R8 ;
  logic [0:0] asn_56_X8 ;
  logic [0:0] asn_56_C8 ;
  assign asn_56_R8 = fangyuan13_R [1:1] ;
  assign asn_56_X8 = fangyuan13_X [1:1] ;
  assign asn_56_C8 = fangyuan13_C [1:1] ;
  logic [0:0] asn_56_R9 ;
  logic [0:0] asn_56_X9 ;
  logic [0:0] asn_56_C9 ;
  assign asn_56_R9 = fangyuan13_R [0:0] ;
  assign asn_56_X9 = fangyuan13_X [0:0] ;
  assign asn_56_C9 = fangyuan13_C [0:0] ;

  assign _104_ = reg_cfg_truncate_1_2_itm & fangyuan13;
  assign _104__S = 0 ;
  logic [3:0] reg_cfg_truncate_1_2_itm_C0 ;
  logic [3:0] reg_cfg_truncate_1_2_itm_R0 ;
  logic [3:0] reg_cfg_truncate_1_2_itm_X0 ;
  logic [3:0] fangyuan13_C0 ;
  logic [3:0] fangyuan13_R0 ;
  logic [3:0] fangyuan13_X0 ;
  assign _104__T = reg_cfg_truncate_1_2_itm_T | fangyuan13_T ;
  assign reg_cfg_truncate_1_2_itm_C0 = _104__C ;
  assign reg_cfg_truncate_1_2_itm_X0 = _104__X ;
  assign fangyuan13_C0 = _104__C ;
  assign fangyuan13_X0 = _104__X ;
  assign reg_cfg_truncate_1_2_itm_R0 = ( _104__R | _104__C & fangyuan13_T ) & { 4{ fangyuan13 != 0 }} ;
  assign fangyuan13_R0 = ( _104__R | _104__C & reg_cfg_truncate_1_2_itm_T ) & { 4{ reg_cfg_truncate_1_2_itm != 0 }} ;
  logic [3:0] fangyuan14;
  logic [3:0] fangyuan14_T ;
  logic [3:0] fangyuan14_R ;
  logic [3:0] fangyuan14_C ;
  logic [3:0] fangyuan14_X ;
  assign fangyuan14 = { FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse, FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse, FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse, FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse };
  assign fangyuan14_T = {  FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_T , FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_T , FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_T , FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_T  };
  logic [5:0] fangyuan14_S ;
  assign fangyuan14_S = 0 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_R1 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_X1 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_C1 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_R1 = fangyuan14_R [3:3] ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_X1 = fangyuan14_X [3:3] ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_C1 = fangyuan14_C [3:3] ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_R2 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_X2 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_C2 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_R2 = fangyuan14_R [2:2] ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_X2 = fangyuan14_X [2:2] ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_C2 = fangyuan14_C [2:2] ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_R3 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_X3 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_C3 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_R3 = fangyuan14_R [1:1] ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_X3 = fangyuan14_X [1:1] ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_C3 = fangyuan14_C [1:1] ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_R4 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_X4 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_C4 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_R4 = fangyuan14_R [0:0] ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_X4 = fangyuan14_X [0:0] ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_C4 = fangyuan14_C [0:0] ;

  assign _105_ = chn_data_in_rsci_d_mxwt[13:10] & fangyuan14;
  assign _105__S = 0 ;
  logic [3:0] fangyuan14_C0 ;
  logic [3:0] fangyuan14_R0 ;
  logic [3:0] fangyuan14_X0 ;
  assign _105__T = chn_data_in_rsci_d_mxwt_T [13:10] | fangyuan14_T ;
  assign chn_data_in_rsci_d_mxwt_C0 [13:10] = _105__C ;
  assign chn_data_in_rsci_d_mxwt_X0 [13:10] = _105__X ;
  assign fangyuan14_C0 = _105__C ;
  assign fangyuan14_X0 = _105__X ;
  assign chn_data_in_rsci_d_mxwt_R0 [13:10] = ( _105__R | _105__C & fangyuan14_T ) & { 4{ fangyuan14 != 0 }} ;
  assign fangyuan14_R0 = ( _105__R | _105__C & chn_data_in_rsci_d_mxwt_T [13:10] ) & { 4{ chn_data_in_rsci_d_mxwt[13:10] != 0 }} ;
  logic [6:0] fangyuan15;
  logic [6:0] fangyuan15_T ;
  logic [6:0] fangyuan15_R ;
  logic [6:0] fangyuan15_C ;
  logic [6:0] fangyuan15_X ;
  assign fangyuan15 = { nor_tmp_11, nor_tmp_11, nor_tmp_11, nor_tmp_11, nor_tmp_11, nor_tmp_11, nor_tmp_11 };
  assign fangyuan15_T = {  nor_tmp_11_T , nor_tmp_11_T , nor_tmp_11_T , nor_tmp_11_T , nor_tmp_11_T , nor_tmp_11_T , nor_tmp_11_T  };
  logic [5:0] fangyuan15_S ;
  assign fangyuan15_S = 0 ;
  logic [0:0] nor_tmp_11_R10 ;
  logic [0:0] nor_tmp_11_X10 ;
  logic [0:0] nor_tmp_11_C10 ;
  assign nor_tmp_11_R10 = fangyuan15_R [6:6] ;
  assign nor_tmp_11_X10 = fangyuan15_X [6:6] ;
  assign nor_tmp_11_C10 = fangyuan15_C [6:6] ;
  logic [0:0] nor_tmp_11_R11 ;
  logic [0:0] nor_tmp_11_X11 ;
  logic [0:0] nor_tmp_11_C11 ;
  assign nor_tmp_11_R11 = fangyuan15_R [5:5] ;
  assign nor_tmp_11_X11 = fangyuan15_X [5:5] ;
  assign nor_tmp_11_C11 = fangyuan15_C [5:5] ;
  logic [0:0] nor_tmp_11_R12 ;
  logic [0:0] nor_tmp_11_X12 ;
  logic [0:0] nor_tmp_11_C12 ;
  assign nor_tmp_11_R12 = fangyuan15_R [4:4] ;
  assign nor_tmp_11_X12 = fangyuan15_X [4:4] ;
  assign nor_tmp_11_C12 = fangyuan15_C [4:4] ;
  logic [0:0] nor_tmp_11_R13 ;
  logic [0:0] nor_tmp_11_X13 ;
  logic [0:0] nor_tmp_11_C13 ;
  assign nor_tmp_11_R13 = fangyuan15_R [3:3] ;
  assign nor_tmp_11_X13 = fangyuan15_X [3:3] ;
  assign nor_tmp_11_C13 = fangyuan15_C [3:3] ;
  logic [0:0] nor_tmp_11_R14 ;
  logic [0:0] nor_tmp_11_X14 ;
  logic [0:0] nor_tmp_11_C14 ;
  assign nor_tmp_11_R14 = fangyuan15_R [2:2] ;
  assign nor_tmp_11_X14 = fangyuan15_X [2:2] ;
  assign nor_tmp_11_C14 = fangyuan15_C [2:2] ;
  logic [0:0] nor_tmp_11_R15 ;
  logic [0:0] nor_tmp_11_X15 ;
  logic [0:0] nor_tmp_11_C15 ;
  assign nor_tmp_11_R15 = fangyuan15_R [1:1] ;
  assign nor_tmp_11_X15 = fangyuan15_X [1:1] ;
  assign nor_tmp_11_C15 = fangyuan15_C [1:1] ;
  logic [0:0] nor_tmp_11_R16 ;
  logic [0:0] nor_tmp_11_X16 ;
  logic [0:0] nor_tmp_11_C16 ;
  assign nor_tmp_11_R16 = fangyuan15_R [0:0] ;
  assign nor_tmp_11_X16 = fangyuan15_X [0:0] ;
  assign nor_tmp_11_C16 = fangyuan15_C [0:0] ;

  assign _106_ = else_else_o_trt_15_1_sva[6:0] & fangyuan15;
  assign _106__S = 0 ;
  logic [6:0] fangyuan15_C0 ;
  logic [6:0] fangyuan15_R0 ;
  logic [6:0] fangyuan15_X0 ;
  assign _106__T = else_else_o_trt_15_1_sva_T [6:0] | fangyuan15_T ;
  assign else_else_o_trt_15_1_sva_C0 [6:0] = _106__C ;
  assign else_else_o_trt_15_1_sva_X0 [6:0] = _106__X ;
  assign fangyuan15_C0 = _106__C ;
  assign fangyuan15_X0 = _106__X ;
  assign else_else_o_trt_15_1_sva_R0 [6:0] = ( _106__R | _106__C & fangyuan15_T ) & { 7{ fangyuan15 != 0 }} ;
  assign fangyuan15_R0 = ( _106__R | _106__C & else_else_o_trt_15_1_sva_T [6:0] ) & { 7{ else_else_o_trt_15_1_sva[6:0] != 0 }} ;
  logic [6:0] fangyuan16;
  logic [6:0] fangyuan16_T ;
  logic [6:0] fangyuan16_R ;
  logic [6:0] fangyuan16_C ;
  logic [6:0] fangyuan16_X ;
  assign fangyuan16 = { nor_17_cse, nor_17_cse, nor_17_cse, nor_17_cse, nor_17_cse, nor_17_cse, nor_17_cse };
  assign fangyuan16_T = {  nor_17_cse_T , nor_17_cse_T , nor_17_cse_T , nor_17_cse_T , nor_17_cse_T , nor_17_cse_T , nor_17_cse_T  };
  logic [5:0] fangyuan16_S ;
  assign fangyuan16_S = 0 ;
  logic [0:0] nor_17_cse_R11 ;
  logic [0:0] nor_17_cse_X11 ;
  logic [0:0] nor_17_cse_C11 ;
  assign nor_17_cse_R11 = fangyuan16_R [6:6] ;
  assign nor_17_cse_X11 = fangyuan16_X [6:6] ;
  assign nor_17_cse_C11 = fangyuan16_C [6:6] ;
  logic [0:0] nor_17_cse_R12 ;
  logic [0:0] nor_17_cse_X12 ;
  logic [0:0] nor_17_cse_C12 ;
  assign nor_17_cse_R12 = fangyuan16_R [5:5] ;
  assign nor_17_cse_X12 = fangyuan16_X [5:5] ;
  assign nor_17_cse_C12 = fangyuan16_C [5:5] ;
  logic [0:0] nor_17_cse_R13 ;
  logic [0:0] nor_17_cse_X13 ;
  logic [0:0] nor_17_cse_C13 ;
  assign nor_17_cse_R13 = fangyuan16_R [4:4] ;
  assign nor_17_cse_X13 = fangyuan16_X [4:4] ;
  assign nor_17_cse_C13 = fangyuan16_C [4:4] ;
  logic [0:0] nor_17_cse_R14 ;
  logic [0:0] nor_17_cse_X14 ;
  logic [0:0] nor_17_cse_C14 ;
  assign nor_17_cse_R14 = fangyuan16_R [3:3] ;
  assign nor_17_cse_X14 = fangyuan16_X [3:3] ;
  assign nor_17_cse_C14 = fangyuan16_C [3:3] ;
  logic [0:0] nor_17_cse_R15 ;
  logic [0:0] nor_17_cse_X15 ;
  logic [0:0] nor_17_cse_C15 ;
  assign nor_17_cse_R15 = fangyuan16_R [2:2] ;
  assign nor_17_cse_X15 = fangyuan16_X [2:2] ;
  assign nor_17_cse_C15 = fangyuan16_C [2:2] ;
  logic [0:0] nor_17_cse_R16 ;
  logic [0:0] nor_17_cse_X16 ;
  logic [0:0] nor_17_cse_C16 ;
  assign nor_17_cse_R16 = fangyuan16_R [1:1] ;
  assign nor_17_cse_X16 = fangyuan16_X [1:1] ;
  assign nor_17_cse_C16 = fangyuan16_C [1:1] ;
  logic [0:0] nor_17_cse_R17 ;
  logic [0:0] nor_17_cse_X17 ;
  logic [0:0] nor_17_cse_C17 ;
  assign nor_17_cse_R17 = fangyuan16_R [0:0] ;
  assign nor_17_cse_X17 = fangyuan16_X [0:0] ;
  assign nor_17_cse_C17 = fangyuan16_C [0:0] ;

  assign _107_ = IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_nl & fangyuan16;
  assign _107__S = 0 ;
  logic [6:0] IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_nl_C0 ;
  logic [6:0] IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_nl_R0 ;
  logic [6:0] IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_nl_X0 ;
  logic [6:0] fangyuan16_C0 ;
  logic [6:0] fangyuan16_R0 ;
  logic [6:0] fangyuan16_X0 ;
  assign _107__T = IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_nl_T | fangyuan16_T ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_nl_C0 = _107__C ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_nl_X0 = _107__X ;
  assign fangyuan16_C0 = _107__C ;
  assign fangyuan16_X0 = _107__X ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_nl_R0 = ( _107__R | _107__C & fangyuan16_T ) & { 7{ fangyuan16 != 0 }} ;
  assign fangyuan16_R0 = ( _107__R | _107__C & IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_nl_T ) & { 7{ IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_nl != 0 }} ;
  logic [6:0] fangyuan17;
  logic [6:0] fangyuan17_T ;
  logic [6:0] fangyuan17_R ;
  logic [6:0] fangyuan17_C ;
  logic [6:0] fangyuan17_X ;
  assign fangyuan17 = { asn_56, asn_56, asn_56, asn_56, asn_56, asn_56, asn_56 };
  assign fangyuan17_T = {  asn_56_T , asn_56_T , asn_56_T , asn_56_T , asn_56_T , asn_56_T , asn_56_T  };
  logic [5:0] fangyuan17_S ;
  assign fangyuan17_S = 0 ;
  logic [0:0] asn_56_R10 ;
  logic [0:0] asn_56_X10 ;
  logic [0:0] asn_56_C10 ;
  assign asn_56_R10 = fangyuan17_R [6:6] ;
  assign asn_56_X10 = fangyuan17_X [6:6] ;
  assign asn_56_C10 = fangyuan17_C [6:6] ;
  logic [0:0] asn_56_R11 ;
  logic [0:0] asn_56_X11 ;
  logic [0:0] asn_56_C11 ;
  assign asn_56_R11 = fangyuan17_R [5:5] ;
  assign asn_56_X11 = fangyuan17_X [5:5] ;
  assign asn_56_C11 = fangyuan17_C [5:5] ;
  logic [0:0] asn_56_R12 ;
  logic [0:0] asn_56_X12 ;
  logic [0:0] asn_56_C12 ;
  assign asn_56_R12 = fangyuan17_R [4:4] ;
  assign asn_56_X12 = fangyuan17_X [4:4] ;
  assign asn_56_C12 = fangyuan17_C [4:4] ;
  logic [0:0] asn_56_R13 ;
  logic [0:0] asn_56_X13 ;
  logic [0:0] asn_56_C13 ;
  assign asn_56_R13 = fangyuan17_R [3:3] ;
  assign asn_56_X13 = fangyuan17_X [3:3] ;
  assign asn_56_C13 = fangyuan17_C [3:3] ;
  logic [0:0] asn_56_R14 ;
  logic [0:0] asn_56_X14 ;
  logic [0:0] asn_56_C14 ;
  assign asn_56_R14 = fangyuan17_R [2:2] ;
  assign asn_56_X14 = fangyuan17_X [2:2] ;
  assign asn_56_C14 = fangyuan17_C [2:2] ;
  logic [0:0] asn_56_R15 ;
  logic [0:0] asn_56_X15 ;
  logic [0:0] asn_56_C15 ;
  assign asn_56_R15 = fangyuan17_R [1:1] ;
  assign asn_56_X15 = fangyuan17_X [1:1] ;
  assign asn_56_C15 = fangyuan17_C [1:1] ;
  logic [0:0] asn_56_R16 ;
  logic [0:0] asn_56_X16 ;
  logic [0:0] asn_56_C16 ;
  assign asn_56_R16 = fangyuan17_R [0:0] ;
  assign asn_56_X16 = fangyuan17_X [0:0] ;
  assign asn_56_C16 = fangyuan17_C [0:0] ;

  assign _108_ = reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1[7:1] & fangyuan17;
  assign _108__S = 0 ;
  logic [6:0] fangyuan17_C0 ;
  logic [6:0] fangyuan17_R0 ;
  logic [6:0] fangyuan17_X0 ;
  assign _108__T = reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_T [7:1] | fangyuan17_T ;
  assign reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_C0 [7:1] = _108__C ;
  assign reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_X0 [7:1] = _108__X ;
  assign fangyuan17_C0 = _108__C ;
  assign fangyuan17_X0 = _108__X ;
  assign reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_R0 [7:1] = ( _108__R | _108__C & fangyuan17_T ) & { 7{ fangyuan17 != 0 }} ;
  assign fangyuan17_R0 = ( _108__R | _108__C & reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_T [7:1] ) & { 7{ reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1[7:1] != 0 }} ;
  assign IntShiftRight_33U_5U_17U_mbits_fixed_and_nl = fsm_output[1] & nor_tmp_11;
  assign IntShiftRight_33U_5U_17U_mbits_fixed_and_nl_S = 0 ;
  assign { fsm_output_R3 [0] } = 0;
  assign { fsm_output_X3 [0] } = 0;
  assign { fsm_output_C3 [0] } = 0;
  logic [1:0] fsm_output_C4 ;
  logic [1:0] fsm_output_R4 ;
  logic [1:0] fsm_output_X4 ;
  logic [0:0] nor_tmp_11_C17 ;
  logic [0:0] nor_tmp_11_R17 ;
  logic [0:0] nor_tmp_11_X17 ;
  assign IntShiftRight_33U_5U_17U_mbits_fixed_and_nl_T = fsm_output_T [1] | nor_tmp_11_T ;
  assign fsm_output_C4 [1] = IntShiftRight_33U_5U_17U_mbits_fixed_and_nl_C ;
  assign fsm_output_X4 [1] = IntShiftRight_33U_5U_17U_mbits_fixed_and_nl_X ;
  assign nor_tmp_11_C17 = IntShiftRight_33U_5U_17U_mbits_fixed_and_nl_C ;
  assign nor_tmp_11_X17 = IntShiftRight_33U_5U_17U_mbits_fixed_and_nl_X ;
  assign fsm_output_R4 [1] = ( IntShiftRight_33U_5U_17U_mbits_fixed_and_nl_R | IntShiftRight_33U_5U_17U_mbits_fixed_and_nl_C & nor_tmp_11_T ) & { 1{ nor_tmp_11 != 0 }} ;
  assign nor_tmp_11_R17 = ( IntShiftRight_33U_5U_17U_mbits_fixed_and_nl_R | IntShiftRight_33U_5U_17U_mbits_fixed_and_nl_C & fsm_output_T [1] ) & { 1{ fsm_output[1] != 0 }} ;
  assign chn_data_out_and_cse = core_wen & _147_;
  assign chn_data_out_and_cse_S = 0 ;
  logic [0:0] core_wen_C7 ;
  logic [0:0] core_wen_R7 ;
  logic [0:0] core_wen_X7 ;
  logic [0:0] _147__C0 ;
  logic [0:0] _147__R0 ;
  logic [0:0] _147__X0 ;
  assign chn_data_out_and_cse_T = core_wen_T | _147__T ;
  assign core_wen_C7 = chn_data_out_and_cse_C ;
  assign core_wen_X7 = chn_data_out_and_cse_X ;
  assign _147__C0 = chn_data_out_and_cse_C ;
  assign _147__X0 = chn_data_out_and_cse_X ;
  assign core_wen_R7 = ( chn_data_out_and_cse_R | chn_data_out_and_cse_C & _147__T ) & { 1{ _147_ != 0 }} ;
  assign _147__R0 = ( chn_data_out_and_cse_R | chn_data_out_and_cse_C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _109_ = main_stage_v_1 & and_tmp_4;
  assign _109__S = 0 ;
  logic [0:0] main_stage_v_1_C4 ;
  logic [0:0] main_stage_v_1_R4 ;
  logic [0:0] main_stage_v_1_X4 ;
  logic [0:0] and_tmp_4_C0 ;
  logic [0:0] and_tmp_4_R0 ;
  logic [0:0] and_tmp_4_X0 ;
  assign _109__T = main_stage_v_1_T | and_tmp_4_T ;
  assign main_stage_v_1_C4 = _109__C ;
  assign main_stage_v_1_X4 = _109__X ;
  assign and_tmp_4_C0 = _109__C ;
  assign and_tmp_4_X0 = _109__X ;
  assign main_stage_v_1_R4 = ( _109__R | _109__C & and_tmp_4_T ) & { 1{ and_tmp_4 != 0 }} ;
  assign and_tmp_4_R0 = ( _109__R | _109__C & main_stage_v_1_T ) & { 1{ main_stage_v_1 != 0 }} ;
  assign _050_ = core_wen & _139_;
  assign _050__S = 0 ;
  logic [0:0] core_wen_C8 ;
  logic [0:0] core_wen_R8 ;
  logic [0:0] core_wen_X8 ;
  logic [0:0] _139__C0 ;
  logic [0:0] _139__R0 ;
  logic [0:0] _139__X0 ;
  assign _050__T = core_wen_T | _139__T ;
  assign core_wen_C8 = _050__C ;
  assign core_wen_X8 = _050__X ;
  assign _139__C0 = _050__C ;
  assign _139__X0 = _050__X ;
  assign core_wen_R8 = ( _050__R | _050__C & _139__T ) & { 1{ _139_ != 0 }} ;
  assign _139__R0 = ( _050__R | _050__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign i_data_and_cse = _050_ & mux_21_nl;
  assign i_data_and_cse_S = 0 ;
  logic [0:0] _050__C5 ;
  logic [0:0] _050__R5 ;
  logic [0:0] _050__X5 ;
  logic [0:0] mux_21_nl_C0 ;
  logic [0:0] mux_21_nl_R0 ;
  logic [0:0] mux_21_nl_X0 ;
  assign i_data_and_cse_T = _050__T | mux_21_nl_T ;
  assign _050__C5 = i_data_and_cse_C ;
  assign _050__X5 = i_data_and_cse_X ;
  assign mux_21_nl_C0 = i_data_and_cse_C ;
  assign mux_21_nl_X0 = i_data_and_cse_X ;
  assign _050__R5 = ( i_data_and_cse_R | i_data_and_cse_C & mux_21_nl_T ) & { 1{ mux_21_nl != 0 }} ;
  assign mux_21_nl_R0 = ( i_data_and_cse_R | i_data_and_cse_C & _050__T ) & { 1{ _050_ != 0 }} ;
  assign and_137_cse = _050_ & mux_22_nl;
  assign and_137_cse_S = 0 ;
  logic [0:0] _050__C6 ;
  logic [0:0] _050__R6 ;
  logic [0:0] _050__X6 ;
  logic [0:0] mux_22_nl_C0 ;
  logic [0:0] mux_22_nl_R0 ;
  logic [0:0] mux_22_nl_X0 ;
  assign and_137_cse_T = _050__T | mux_22_nl_T ;
  assign _050__C6 = and_137_cse_C ;
  assign _050__X6 = and_137_cse_X ;
  assign mux_22_nl_C0 = and_137_cse_C ;
  assign mux_22_nl_X0 = and_137_cse_X ;
  assign _050__R6 = ( and_137_cse_R | and_137_cse_C & mux_22_nl_T ) & { 1{ mux_22_nl != 0 }} ;
  assign mux_22_nl_R0 = ( and_137_cse_R | and_137_cse_C & _050__T ) & { 1{ _050_ != 0 }} ;
  assign _110_ = IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva[24:8] == 17'b11111111111111111;
  assign _110__S = 0 ;
  assign _110__T = | IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_T [24:8] ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C1 [24:8] = { 17{ _110__C }} ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R1 [24:8] = { 17{ _110__R }} ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X1 [24:8] = { 17{ _110__X }} ;
  assign _111_ = IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva[24:8] == 17'b11111111111111111;
  assign _111__S = 0 ;
  assign _111__T = | IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_T [24:8] ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C1 [24:8] = { 17{ _111__C }} ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R1 [24:8] = { 17{ _111__R }} ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X1 [24:8] = { 17{ _111__X }} ;
  assign _112_ = IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva[32:16] == 17'b11111111111111111;
  assign _112__S = 0 ;
  assign _112__T = | IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_T [32:16] ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C0 [32:16] = { 17{ _112__C }} ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R0 [32:16] = { 17{ _112__R }} ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X0 [32:16] = { 17{ _112__X }} ;
  assign IsInf_5U_10U_IsInf_5U_10U_and_cse_sva = chn_data_in_rsci_d_mxwt[14:10] == 5'b11111;
  assign IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_S = 0 ;
  assign { chn_data_in_rsci_d_mxwt_R0 [8], chn_data_in_rsci_d_mxwt_R0 [9], chn_data_in_rsci_d_mxwt_R0 [15:14] } = 0;
  assign { chn_data_in_rsci_d_mxwt_X0 [8], chn_data_in_rsci_d_mxwt_X0 [9], chn_data_in_rsci_d_mxwt_X0 [15:14] } = 0;
  assign { chn_data_in_rsci_d_mxwt_C0 [8], chn_data_in_rsci_d_mxwt_C0 [9], chn_data_in_rsci_d_mxwt_C0 [15:14] } = 0;
  logic [15:0] chn_data_in_rsci_d_mxwt_C1 ;
  logic [15:0] chn_data_in_rsci_d_mxwt_R1 ;
  logic [15:0] chn_data_in_rsci_d_mxwt_X1 ;
  assign IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_T = | chn_data_in_rsci_d_mxwt_T [14:10] ;
  assign chn_data_in_rsci_d_mxwt_C1 [14:10] = { 5{ IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_C }} ;
  assign chn_data_in_rsci_d_mxwt_R1 [14:10] = { 5{ IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_R }} ;
  assign chn_data_in_rsci_d_mxwt_X1 [14:10] = { 5{ IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_X }} ;
 assign z_out = cfg_mul_in_1_sva_2 * IntMulExt_9U_16U_25U_o_mux_2_nl;
 assign z_out_S = 0 ;
 logic [15:0] cfg_mul_in_1_sva_2_C0 ;
 logic [15:0] cfg_mul_in_1_sva_2_R0 ;
 logic [15:0] cfg_mul_in_1_sva_2_X0 ;
 logic [16:0] IntMulExt_9U_16U_25U_o_mux_2_nl_C0 ;
 logic [16:0] IntMulExt_9U_16U_25U_o_mux_2_nl_R0 ;
 logic [16:0] IntMulExt_9U_16U_25U_o_mux_2_nl_X0 ;
 assign z_out_T = cfg_mul_in_1_sva_2_T | IntMulExt_9U_16U_25U_o_mux_2_nl_T ;
 assign cfg_mul_in_1_sva_2_C0 = z_out_C ;
 assign cfg_mul_in_1_sva_2_X0 = z_out_X ;
 assign IntMulExt_9U_16U_25U_o_mux_2_nl_C0 = z_out_C ;
 assign IntMulExt_9U_16U_25U_o_mux_2_nl_X0 = z_out_X ;
 assign cfg_mul_in_1_sva_2_R0 = z_out_R | ( z_out_C & IntMulExt_9U_16U_25U_o_mux_2_nl_T );
 assign IntMulExt_9U_16U_25U_o_mux_2_nl_R0 = z_out_R | ( z_out_C & cfg_mul_in_1_sva_2_T );
 assign IntMulExt_9U_16U_25U_1_o_mul_nl = reg_IntSubExt_16U_16U_17U_o_acc_2_itm * cfg_mul_in_1_sva_2;
 assign IntMulExt_9U_16U_25U_1_o_mul_nl_S = 0 ;
 logic [8:0] reg_IntSubExt_16U_16U_17U_o_acc_2_itm_C0 ;
 logic [8:0] reg_IntSubExt_16U_16U_17U_o_acc_2_itm_R0 ;
 logic [8:0] reg_IntSubExt_16U_16U_17U_o_acc_2_itm_X0 ;
 logic [15:0] cfg_mul_in_1_sva_2_C1 ;
 logic [15:0] cfg_mul_in_1_sva_2_R1 ;
 logic [15:0] cfg_mul_in_1_sva_2_X1 ;
 assign IntMulExt_9U_16U_25U_1_o_mul_nl_T = reg_IntSubExt_16U_16U_17U_o_acc_2_itm_T | cfg_mul_in_1_sva_2_T ;
 assign reg_IntSubExt_16U_16U_17U_o_acc_2_itm_C0 = IntMulExt_9U_16U_25U_1_o_mul_nl_C ;
 assign reg_IntSubExt_16U_16U_17U_o_acc_2_itm_X0 = IntMulExt_9U_16U_25U_1_o_mul_nl_X ;
 assign cfg_mul_in_1_sva_2_C1 = IntMulExt_9U_16U_25U_1_o_mul_nl_C ;
 assign cfg_mul_in_1_sva_2_X1 = IntMulExt_9U_16U_25U_1_o_mul_nl_X ;
 assign reg_IntSubExt_16U_16U_17U_o_acc_2_itm_R0 = IntMulExt_9U_16U_25U_1_o_mul_nl_R | ( IntMulExt_9U_16U_25U_1_o_mul_nl_C & cfg_mul_in_1_sva_2_T );
 assign cfg_mul_in_1_sva_2_R1 = IntMulExt_9U_16U_25U_1_o_mul_nl_R | ( IntMulExt_9U_16U_25U_1_o_mul_nl_C & reg_IntSubExt_16U_16U_17U_o_acc_2_itm_T );
  assign or_78_cse_1 = cfg_precision_rsci_d != 2'b10;
  assign or_78_cse_1_S = 0 ;
  assign { cfg_precision_rsci_d_R2 [1:1] } = 0;
  assign { cfg_precision_rsci_d_X2 [1:1] } = 0;
  assign { cfg_precision_rsci_d_C2 [1:1] } = 0;
  logic [1:0] cfg_precision_rsci_d_C3 ;
  logic [1:0] cfg_precision_rsci_d_R3 ;
  logic [1:0] cfg_precision_rsci_d_X3 ;
  assign or_78_cse_1_T = | cfg_precision_rsci_d_T ;
  assign cfg_precision_rsci_d_C3 = { 2{ or_78_cse_1_C }} ;
  assign cfg_precision_rsci_d_R3 = { 2{ or_78_cse_1_R }} ;
  assign cfg_precision_rsci_d_X3 = { 2{ or_78_cse_1_X }} ;
  assign or_42_cse = | cfg_precision_rsci_d;
  logic [1:0] cfg_precision_rsci_d_C4 ;
  logic [1:0] cfg_precision_rsci_d_R4 ;
  logic [1:0] cfg_precision_rsci_d_X4 ;
  assign or_42_cse_T = | cfg_precision_rsci_d_T ;
  assign cfg_precision_rsci_d_C4 = { 2{ or_42_cse_C }} ;
  assign cfg_precision_rsci_d_X4 = { 2{ or_42_cse_X }} ;
  assign cfg_precision_rsci_d_R4 = { 2{ or_42_cse_R }} & cfg_precision_rsci_d ;
  assign or_42_cse_S = 0 ;
  assign or_66_cse = | io_read_cfg_precision_rsc_svs_st_3;
  assign { io_read_cfg_precision_rsc_svs_st_3_R1 [1:1] } = 0;
  assign { io_read_cfg_precision_rsc_svs_st_3_X1 [1:1] } = 0;
  assign { io_read_cfg_precision_rsc_svs_st_3_C1 [1:1] } = 0;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_C2 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_R2 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_X2 ;
  assign or_66_cse_T = | io_read_cfg_precision_rsc_svs_st_3_T ;
  assign io_read_cfg_precision_rsc_svs_st_3_C2 = { 2{ or_66_cse_C }} ;
  assign io_read_cfg_precision_rsc_svs_st_3_X2 = { 2{ or_66_cse_X }} ;
  assign io_read_cfg_precision_rsc_svs_st_3_R2 = { 2{ or_66_cse_R }} & io_read_cfg_precision_rsc_svs_st_3 ;
  assign or_66_cse_S = 0 ;
  assign IsDenorm_5U_10U_or_tmp = | chn_data_in_rsci_d_mxwt[9:0];
  assign IsDenorm_5U_10U_or_tmp_T = | chn_data_in_rsci_d_mxwt_T [9:0] ;
  assign chn_data_in_rsci_d_mxwt_C1 [9:0] = { 10{ IsDenorm_5U_10U_or_tmp_C }} ;
  assign chn_data_in_rsci_d_mxwt_X1 [9:0] = { 10{ IsDenorm_5U_10U_or_tmp_X }} ;
  assign chn_data_in_rsci_d_mxwt_R1 [9:0] = { 10{ IsDenorm_5U_10U_or_tmp_R }} & chn_data_in_rsci_d_mxwt[9:0] ;
  assign IsDenorm_5U_10U_or_tmp_S = 0 ;
  assign _113_ = | chn_data_in_rsci_d_mxwt[14:10];
  assign { chn_data_in_rsci_d_mxwt_R1 [15:15] } = 0;
  assign { chn_data_in_rsci_d_mxwt_X1 [15:15] } = 0;
  assign { chn_data_in_rsci_d_mxwt_C1 [15:15] } = 0;
  logic [15:0] chn_data_in_rsci_d_mxwt_C2 ;
  logic [15:0] chn_data_in_rsci_d_mxwt_R2 ;
  logic [15:0] chn_data_in_rsci_d_mxwt_X2 ;
  assign _113__T = | chn_data_in_rsci_d_mxwt_T [14:10] ;
  assign chn_data_in_rsci_d_mxwt_C2 [14:10] = { 5{ _113__C }} ;
  assign chn_data_in_rsci_d_mxwt_X2 [14:10] = { 5{ _113__X }} ;
  assign chn_data_in_rsci_d_mxwt_R2 [14:10] = { 5{ _113__R }} & chn_data_in_rsci_d_mxwt[14:10] ;
  assign _113__S = 0 ;
  assign _114_ = | IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva[24:8];
  assign { IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R1 [0], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R1 [1], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R1 [2], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R1 [3], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R1 [4], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R1 [5], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R1 [6], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R1 [7] } = 0;
  assign { IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X1 [0], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X1 [1], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X1 [2], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X1 [3], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X1 [4], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X1 [5], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X1 [6], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X1 [7] } = 0;
  assign { IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C1 [0], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C1 [1], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C1 [2], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C1 [3], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C1 [4], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C1 [5], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C1 [6], IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C1 [7] } = 0;
  logic [25:0] IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C2 ;
  logic [25:0] IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R2 ;
  logic [25:0] IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X2 ;
  assign _114__T = | IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_T [24:8] ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C2 [24:8] = { 17{ _114__C }} ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X2 [24:8] = { 17{ _114__X }} ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R2 [24:8] = { 17{ _114__R }} & IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva[24:8] ;
  assign _114__S = 0 ;
  assign _115_ = | IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva[24:8];
  assign { IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R1 [0], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R1 [1], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R1 [2], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R1 [3], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R1 [4], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R1 [5], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R1 [6], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R1 [7] } = 0;
  assign { IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X1 [0], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X1 [1], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X1 [2], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X1 [3], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X1 [4], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X1 [5], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X1 [6], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X1 [7] } = 0;
  assign { IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C1 [0], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C1 [1], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C1 [2], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C1 [3], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C1 [4], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C1 [5], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C1 [6], IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C1 [7] } = 0;
  logic [25:0] IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C2 ;
  logic [25:0] IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R2 ;
  logic [25:0] IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X2 ;
  assign _115__T = | IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_T [24:8] ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C2 [24:8] = { 17{ _115__C }} ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X2 [24:8] = { 17{ _115__X }} ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R2 [24:8] = { 17{ _115__R }} & IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva[24:8] ;
  assign _115__S = 0 ;
  assign _116_ = | IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva[32:16];
  assign { IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R0 [0], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R0 [1], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R0 [2], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R0 [3], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R0 [4], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R0 [5], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R0 [6], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R0 [7], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R0 [8], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R0 [9], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R0 [10], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R0 [11], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R0 [12], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R0 [13], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R0 [14], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R0 [15] } = 0;
  assign { IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X0 [0], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X0 [1], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X0 [2], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X0 [3], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X0 [4], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X0 [5], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X0 [6], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X0 [7], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X0 [8], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X0 [9], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X0 [10], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X0 [11], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X0 [12], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X0 [13], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X0 [14], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X0 [15] } = 0;
  assign { IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C0 [0], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C0 [1], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C0 [2], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C0 [3], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C0 [4], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C0 [5], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C0 [6], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C0 [7], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C0 [8], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C0 [9], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C0 [10], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C0 [11], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C0 [12], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C0 [13], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C0 [14], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C0 [15] } = 0;
  logic [33:0] IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C1 ;
  logic [33:0] IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R1 ;
  logic [33:0] IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X1 ;
  assign _116__T = | IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_T [32:16] ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C1 [32:16] = { 17{ _116__C }} ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X1 [32:16] = { 17{ _116__X }} ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R1 [32:16] = { 17{ _116__R }} & IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva[32:16] ;
  assign _116__S = 0 ;
  assign or_127_nl = io_read_cfg_precision_rsc_svs_st_3 != 2'b10;
  assign or_127_nl_S = 0 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_C3 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_R3 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_X3 ;
  assign or_127_nl_T = | io_read_cfg_precision_rsc_svs_st_3_T ;
  assign io_read_cfg_precision_rsc_svs_st_3_C3 = { 2{ or_127_nl_C }} ;
  assign io_read_cfg_precision_rsc_svs_st_3_R3 = { 2{ or_127_nl_R }} ;
  assign io_read_cfg_precision_rsc_svs_st_3_X3 = { 2{ or_127_nl_X }} ;
  assign _117_ = | io_read_cfg_precision_rsc_svs_st_4;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_4_C0 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_4_R0 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_4_X0 ;
  assign _117__T = | io_read_cfg_precision_rsc_svs_st_4_T ;
  assign io_read_cfg_precision_rsc_svs_st_4_C0 = { 2{ _117__C }} ;
  assign io_read_cfg_precision_rsc_svs_st_4_X0 = { 2{ _117__X }} ;
  assign io_read_cfg_precision_rsc_svs_st_4_R0 = { 2{ _117__R }} & io_read_cfg_precision_rsc_svs_st_4 ;
  assign _117__S = 0 ;
  assign nor_13_cse = ~ or_66_cse;
  logic [0:0] or_66_cse_C1 ;
  logic [0:0] or_66_cse_R1 ;
  logic [0:0] or_66_cse_X1 ;
  assign nor_13_cse_T = or_66_cse_T ;
  assign or_66_cse_C1 = nor_13_cse_C ;
  assign or_66_cse_R1 = nor_13_cse_R ;
  assign or_66_cse_X1 = nor_13_cse_X ;
  assign nor_13_cse_S = 0 ;
  assign _118_ = ~ reg_chn_data_out_rsci_ld_core_psct_cse;
  logic [0:0] reg_chn_data_out_rsci_ld_core_psct_cse_C3 ;
  logic [0:0] reg_chn_data_out_rsci_ld_core_psct_cse_R3 ;
  logic [0:0] reg_chn_data_out_rsci_ld_core_psct_cse_X3 ;
  assign _118__T = reg_chn_data_out_rsci_ld_core_psct_cse_T ;
  assign reg_chn_data_out_rsci_ld_core_psct_cse_C3 = _118__C ;
  assign reg_chn_data_out_rsci_ld_core_psct_cse_R3 = _118__R ;
  assign reg_chn_data_out_rsci_ld_core_psct_cse_X3 = _118__X ;
  assign _118__S = 0 ;
  assign nor_12_nl = ~ or_tmp_35;
  logic [0:0] or_tmp_35_C0 ;
  logic [0:0] or_tmp_35_R0 ;
  logic [0:0] or_tmp_35_X0 ;
  assign nor_12_nl_T = or_tmp_35_T ;
  assign or_tmp_35_C0 = nor_12_nl_C ;
  assign or_tmp_35_R0 = nor_12_nl_R ;
  assign or_tmp_35_X0 = nor_12_nl_X ;
  assign nor_12_nl_S = 0 ;
  assign _000_[0] = ~ mux_43_itm;
  logic [0:0] mux_43_itm_C0 ;
  logic [0:0] mux_43_itm_R0 ;
  logic [0:0] mux_43_itm_X0 ;
  assign _000__T [0] = mux_43_itm_T ;
  assign mux_43_itm_C0 = _000__C [0] ;
  assign mux_43_itm_R0 = _000__R [0] ;
  assign mux_43_itm_X0 = _000__X [0] ;
  assign _000__S = 0 ;
  assign IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva = ~ _113_;
  logic [0:0] _113__C0 ;
  logic [0:0] _113__R0 ;
  logic [0:0] _113__X0 ;
  assign IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_T = _113__T ;
  assign _113__C0 = IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_C ;
  assign _113__R0 = IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_R ;
  assign _113__X0 = IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_X ;
  assign IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_S = 0 ;
  assign _119_ = ~ IntShiftRight_25U_5U_9U_mbits_fixed_sva[55];
  assign { IntShiftRight_25U_5U_9U_mbits_fixed_sva_R1 [0], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R1 [1], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R1 [2], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R1 [3], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R1 [4], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R1 [5], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R1 [6], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R1 [7], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R1 [8], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R1 [9], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R1 [10], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R1 [11], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R1 [12], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R1 [13], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R1 [14], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R1 [15], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R1 [16], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R1 [17], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R1 [18], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R1 [19], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R1 [20], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R1 [21], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R1 [22], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R1 [23], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R1 [24], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R1 [25], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R1 [26], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R1 [27], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R1 [28], IntShiftRight_25U_5U_9U_mbits_fixed_sva_R1 [29] } = 0;
  assign { IntShiftRight_25U_5U_9U_mbits_fixed_sva_X1 [0], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X1 [1], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X1 [2], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X1 [3], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X1 [4], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X1 [5], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X1 [6], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X1 [7], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X1 [8], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X1 [9], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X1 [10], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X1 [11], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X1 [12], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X1 [13], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X1 [14], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X1 [15], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X1 [16], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X1 [17], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X1 [18], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X1 [19], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X1 [20], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X1 [21], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X1 [22], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X1 [23], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X1 [24], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X1 [25], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X1 [26], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X1 [27], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X1 [28], IntShiftRight_25U_5U_9U_mbits_fixed_sva_X1 [29] } = 0;
  assign { IntShiftRight_25U_5U_9U_mbits_fixed_sva_C1 [0], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C1 [1], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C1 [2], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C1 [3], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C1 [4], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C1 [5], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C1 [6], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C1 [7], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C1 [8], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C1 [9], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C1 [10], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C1 [11], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C1 [12], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C1 [13], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C1 [14], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C1 [15], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C1 [16], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C1 [17], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C1 [18], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C1 [19], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C1 [20], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C1 [21], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C1 [22], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C1 [23], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C1 [24], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C1 [25], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C1 [26], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C1 [27], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C1 [28], IntShiftRight_25U_5U_9U_mbits_fixed_sva_C1 [29] } = 0;
  logic [55:0] IntShiftRight_25U_5U_9U_mbits_fixed_sva_C2 ;
  logic [55:0] IntShiftRight_25U_5U_9U_mbits_fixed_sva_R2 ;
  logic [55:0] IntShiftRight_25U_5U_9U_mbits_fixed_sva_X2 ;
  assign _119__T = IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [55] ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_C2 [55] = _119__C ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_R2 [55] = _119__R ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_X2 [55] = _119__X ;
  assign _119__S = 0 ;
  assign _120_ = ~ _114_;
  logic [0:0] _114__C0 ;
  logic [0:0] _114__R0 ;
  logic [0:0] _114__X0 ;
  assign _120__T = _114__T ;
  assign _114__C0 = _120__C ;
  assign _114__R0 = _120__R ;
  assign _114__X0 = _120__X ;
  assign _120__S = 0 ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_nor_ovfl_sva = ~ _182_;
  logic [0:0] _182__C0 ;
  logic [0:0] _182__R0 ;
  logic [0:0] _182__X0 ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_nor_ovfl_sva_T = _182__T ;
  assign _182__C0 = IntShiftRight_25U_5U_9U_obits_fixed_nor_ovfl_sva_C ;
  assign _182__R0 = IntShiftRight_25U_5U_9U_obits_fixed_nor_ovfl_sva_R ;
  assign _182__X0 = IntShiftRight_25U_5U_9U_obits_fixed_nor_ovfl_sva_X ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_nor_ovfl_sva_S = 0 ;
  assign _121_ = ~ _110_;
  logic [0:0] _110__C0 ;
  logic [0:0] _110__R0 ;
  logic [0:0] _110__X0 ;
  assign _121__T = _110__T ;
  assign _110__C0 = _121__C ;
  assign _110__R0 = _121__R ;
  assign _110__X0 = _121__X ;
  assign _121__S = 0 ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_nor_2_nl = ~ _008_;
  logic [6:0] _008__C0 ;
  logic [6:0] _008__R0 ;
  logic [6:0] _008__X0 ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_nor_2_nl_T = _008__T ;
  assign _008__C0 = IntShiftRight_25U_5U_9U_1_obits_fixed_nor_2_nl_C ;
  assign _008__R0 = IntShiftRight_25U_5U_9U_1_obits_fixed_nor_2_nl_R ;
  assign _008__X0 = IntShiftRight_25U_5U_9U_1_obits_fixed_nor_2_nl_X ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_nor_2_nl_S = 0 ;
  assign else_if_ac_int_cctor_16_10_sva = ~ _009_;
  logic [6:0] _009__C0 ;
  logic [6:0] _009__R0 ;
  logic [6:0] _009__X0 ;
  assign else_if_ac_int_cctor_16_10_sva_T = _009__T ;
  assign _009__C0 = else_if_ac_int_cctor_16_10_sva_C ;
  assign _009__R0 = else_if_ac_int_cctor_16_10_sva_R ;
  assign _009__X0 = else_if_ac_int_cctor_16_10_sva_X ;
  assign else_if_ac_int_cctor_16_10_sva_S = 0 ;
  assign _122_ = ~ z_out_2[55];
  assign _122__T = z_out_2_T [55] ;
  assign z_out_2_C3 [55] = _122__C ;
  assign z_out_2_R3 [55] = _122__R ;
  assign z_out_2_X3 [55] = _122__X ;
  assign _122__S = 0 ;
  assign _123_ = ~ _115_;
  logic [0:0] _115__C0 ;
  logic [0:0] _115__R0 ;
  logic [0:0] _115__X0 ;
  assign _123__T = _115__T ;
  assign _115__C0 = _123__C ;
  assign _115__R0 = _123__R ;
  assign _115__X0 = _123__X ;
  assign _123__S = 0 ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_nor_ovfl_sva = ~ _213_;
  logic [0:0] _213__C0 ;
  logic [0:0] _213__R0 ;
  logic [0:0] _213__X0 ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_nor_ovfl_sva_T = _213__T ;
  assign _213__C0 = IntShiftRight_25U_5U_9U_1_obits_fixed_nor_ovfl_sva_C ;
  assign _213__R0 = IntShiftRight_25U_5U_9U_1_obits_fixed_nor_ovfl_sva_R ;
  assign _213__X0 = IntShiftRight_25U_5U_9U_1_obits_fixed_nor_ovfl_sva_X ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_nor_ovfl_sva_S = 0 ;
  assign _124_ = ~ _111_;
  logic [0:0] _111__C0 ;
  logic [0:0] _111__R0 ;
  logic [0:0] _111__X0 ;
  assign _124__T = _111__T ;
  assign _111__C0 = _124__C ;
  assign _111__R0 = _124__R ;
  assign _111__X0 = _124__X ;
  assign _124__S = 0 ;
  assign _125_ = ~ _214_;
  logic [0:0] _214__C0 ;
  logic [0:0] _214__R0 ;
  logic [0:0] _214__X0 ;
  assign _125__T = _214__T ;
  assign _214__C0 = _125__C ;
  assign _214__R0 = _125__R ;
  assign _214__X0 = _125__X ;
  assign _125__S = 0 ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_2_seb_sva = ~ _215_;
  logic [0:0] _215__C0 ;
  logic [0:0] _215__R0 ;
  logic [0:0] _215__X0 ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_2_seb_sva_T = _215__T ;
  assign _215__C0 = IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_2_seb_sva_C ;
  assign _215__R0 = IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_2_seb_sva_R ;
  assign _215__X0 = IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_2_seb_sva_X ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_2_seb_sva_S = 0 ;
  assign _126_ = ~ z_out_2[63];
  assign _126__T = z_out_2_T [63] ;
  assign z_out_2_C3 [63] = _126__C ;
  assign z_out_2_R3 [63] = _126__R ;
  assign z_out_2_X3 [63] = _126__X ;
  assign _126__S = 0 ;
  assign _127_ = ~ _112_;
  logic [0:0] _112__C0 ;
  logic [0:0] _112__R0 ;
  logic [0:0] _112__X0 ;
  assign _127__T = _112__T ;
  assign _112__C0 = _127__C ;
  assign _112__R0 = _127__R ;
  assign _112__X0 = _127__X ;
  assign _127__S = 0 ;
  assign _128_ = ~ _116_;
  logic [0:0] _116__C0 ;
  logic [0:0] _116__R0 ;
  logic [0:0] _116__X0 ;
  assign _128__T = _116__T ;
  assign _116__C0 = _128__C ;
  assign _116__R0 = _128__R ;
  assign _116__X0 = _128__X ;
  assign _128__S = 0 ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_nor_ovfl_sva = ~ _217_;
  logic [0:0] _217__C0 ;
  logic [0:0] _217__R0 ;
  logic [0:0] _217__X0 ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_nor_ovfl_sva_T = _217__T ;
  assign _217__C0 = IntShiftRight_33U_5U_17U_obits_fixed_nor_ovfl_sva_C ;
  assign _217__R0 = IntShiftRight_33U_5U_17U_obits_fixed_nor_ovfl_sva_R ;
  assign _217__X0 = IntShiftRight_33U_5U_17U_obits_fixed_nor_ovfl_sva_X ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_nor_ovfl_sva_S = 0 ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_nor_2_nl = ~ _004_;
  logic [14:0] _004__C0 ;
  logic [14:0] _004__R0 ;
  logic [14:0] _004__X0 ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_nor_2_nl_T = _004__T ;
  assign _004__C0 = IntShiftRight_33U_5U_17U_obits_fixed_nor_2_nl_C ;
  assign _004__R0 = IntShiftRight_33U_5U_17U_obits_fixed_nor_2_nl_R ;
  assign _004__X0 = IntShiftRight_33U_5U_17U_obits_fixed_nor_2_nl_X ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_nor_2_nl_S = 0 ;
  assign else_else_o_trt_15_1_sva = ~ _005_;
  logic [14:0] _005__C0 ;
  logic [14:0] _005__R0 ;
  logic [14:0] _005__X0 ;
  assign else_else_o_trt_15_1_sva_T = _005__T ;
  assign _005__C0 = else_else_o_trt_15_1_sva_C ;
  assign _005__R0 = else_else_o_trt_15_1_sva_R ;
  assign _005__X0 = else_else_o_trt_15_1_sva_X ;
  assign else_else_o_trt_15_1_sva_S = 0 ;
  assign _129_ = ~ libraries_leading_sign_10_0_8b78af2050cf8551b0aa4ca6a9790ede3d5a_1;
  logic [3:0] libraries_leading_sign_10_0_8b78af2050cf8551b0aa4ca6a9790ede3d5a_1_C1 ;
  logic [3:0] libraries_leading_sign_10_0_8b78af2050cf8551b0aa4ca6a9790ede3d5a_1_R1 ;
  logic [3:0] libraries_leading_sign_10_0_8b78af2050cf8551b0aa4ca6a9790ede3d5a_1_X1 ;
  assign _129__T = libraries_leading_sign_10_0_8b78af2050cf8551b0aa4ca6a9790ede3d5a_1_T ;
  assign libraries_leading_sign_10_0_8b78af2050cf8551b0aa4ca6a9790ede3d5a_1_C1 = _129__C ;
  assign libraries_leading_sign_10_0_8b78af2050cf8551b0aa4ca6a9790ede3d5a_1_R1 = _129__R ;
  assign libraries_leading_sign_10_0_8b78af2050cf8551b0aa4ca6a9790ede3d5a_1_X1 = _129__X ;
  assign _129__S = 0 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse = ~ _218_;
  logic [0:0] _218__C0 ;
  logic [0:0] _218__R0 ;
  logic [0:0] _218__X0 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_T = _218__T ;
  assign _218__C0 = FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_C ;
  assign _218__R0 = FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_R ;
  assign _218__X0 = FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_X ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_cse_S = 0 ;
  assign _130_ = ~ IsInf_5U_10U_IsInf_5U_10U_and_cse_sva;
  logic [0:0] IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_C1 ;
  logic [0:0] IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_R1 ;
  logic [0:0] IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_X1 ;
  assign _130__T = IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_T ;
  assign IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_C1 = _130__C ;
  assign IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_R1 = _130__R ;
  assign IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_X1 = _130__X ;
  assign _130__S = 0 ;
  assign IsInf_5U_10U_land_lpi_1_dfm = ~ _219_;
  logic [0:0] _219__C0 ;
  logic [0:0] _219__R0 ;
  logic [0:0] _219__X0 ;
  assign IsInf_5U_10U_land_lpi_1_dfm_T = _219__T ;
  assign _219__C0 = IsInf_5U_10U_land_lpi_1_dfm_C ;
  assign _219__R0 = IsInf_5U_10U_land_lpi_1_dfm_R ;
  assign _219__X0 = IsInf_5U_10U_land_lpi_1_dfm_X ;
  assign IsInf_5U_10U_land_lpi_1_dfm_S = 0 ;
  assign asn_56 = ~ or_65_nl;
  logic [0:0] or_65_nl_C0 ;
  logic [0:0] or_65_nl_R0 ;
  logic [0:0] or_65_nl_X0 ;
  assign asn_56_T = or_65_nl_T ;
  assign or_65_nl_C0 = asn_56_C ;
  assign or_65_nl_R0 = asn_56_R ;
  assign or_65_nl_X0 = asn_56_X ;
  assign asn_56_S = 0 ;
  assign _131_ = ~ main_stage_v_2;
  logic [0:0] main_stage_v_2_C1 ;
  logic [0:0] main_stage_v_2_R1 ;
  logic [0:0] main_stage_v_2_X1 ;
  assign _131__T = main_stage_v_2_T ;
  assign main_stage_v_2_C1 = _131__C ;
  assign main_stage_v_2_R1 = _131__R ;
  assign main_stage_v_2_X1 = _131__X ;
  assign _131__S = 0 ;
  assign _132_ = ~ chn_data_out_rsci_bawt;
  logic [0:0] chn_data_out_rsci_bawt_C1 ;
  logic [0:0] chn_data_out_rsci_bawt_R1 ;
  logic [0:0] chn_data_out_rsci_bawt_X1 ;
  assign _132__T = chn_data_out_rsci_bawt_T ;
  assign chn_data_out_rsci_bawt_C1 = _132__C ;
  assign chn_data_out_rsci_bawt_R1 = _132__R ;
  assign chn_data_out_rsci_bawt_X1 = _132__X ;
  assign _132__S = 0 ;
  assign _133_ = ~ main_stage_v_1;
  logic [0:0] main_stage_v_1_C5 ;
  logic [0:0] main_stage_v_1_R5 ;
  logic [0:0] main_stage_v_1_X5 ;
  assign _133__T = main_stage_v_1_T ;
  assign main_stage_v_1_C5 = _133__C ;
  assign main_stage_v_1_R5 = _133__R ;
  assign main_stage_v_1_X5 = _133__X ;
  assign _133__S = 0 ;
  assign nor_20_nl = ~ _223_;
  logic [0:0] _223__C0 ;
  logic [0:0] _223__R0 ;
  logic [0:0] _223__X0 ;
  assign nor_20_nl_T = _223__T ;
  assign _223__C0 = nor_20_nl_C ;
  assign _223__R0 = nor_20_nl_R ;
  assign _223__X0 = nor_20_nl_X ;
  assign nor_20_nl_S = 0 ;
  assign _001_ = ~ mux_42_nl;
  logic [0:0] mux_42_nl_C0 ;
  logic [0:0] mux_42_nl_R0 ;
  logic [0:0] mux_42_nl_X0 ;
  assign _001__T = mux_42_nl_T ;
  assign mux_42_nl_C0 = _001__C ;
  assign mux_42_nl_R0 = _001__R ;
  assign mux_42_nl_X0 = _001__X ;
  assign _001__S = 0 ;
  assign _134_ = ~ chn_data_in_rsci_bawt;
  logic [0:0] chn_data_in_rsci_bawt_C5 ;
  logic [0:0] chn_data_in_rsci_bawt_R5 ;
  logic [0:0] chn_data_in_rsci_bawt_X5 ;
  assign _134__T = chn_data_in_rsci_bawt_T ;
  assign chn_data_in_rsci_bawt_C5 = _134__C ;
  assign chn_data_in_rsci_bawt_R5 = _134__R ;
  assign chn_data_in_rsci_bawt_X5 = _134__X ;
  assign _134__S = 0 ;
  assign _135_ = ~ main_stage_en_1;
  logic [0:0] main_stage_en_1_C1 ;
  logic [0:0] main_stage_en_1_R1 ;
  logic [0:0] main_stage_en_1_X1 ;
  assign _135__T = main_stage_en_1_T ;
  assign main_stage_en_1_C1 = _135__C ;
  assign main_stage_en_1_R1 = _135__R ;
  assign main_stage_en_1_X1 = _135__X ;
  assign _135__S = 0 ;
  assign _136_ = ~ _054_;
  logic [0:0] _054__C0 ;
  logic [0:0] _054__R0 ;
  logic [0:0] _054__X0 ;
  assign _136__T = _054__T ;
  assign _054__C0 = _136__C ;
  assign _054__R0 = _136__R ;
  assign _054__X0 = _136__X ;
  assign _136__S = 0 ;
  assign _137_ = ~ and_dcpl_19;
  logic [0:0] and_dcpl_19_C0 ;
  logic [0:0] and_dcpl_19_R0 ;
  logic [0:0] and_dcpl_19_X0 ;
  assign _137__T = and_dcpl_19_T ;
  assign and_dcpl_19_C0 = _137__C ;
  assign and_dcpl_19_R0 = _137__R ;
  assign and_dcpl_19_X0 = _137__X ;
  assign _137__S = 0 ;
  assign _138_ = ~ main_stage_v_1_mx0c1;
  logic [0:0] main_stage_v_1_mx0c1_C0 ;
  logic [0:0] main_stage_v_1_mx0c1_R0 ;
  logic [0:0] main_stage_v_1_mx0c1_X0 ;
  assign _138__T = main_stage_v_1_mx0c1_T ;
  assign main_stage_v_1_mx0c1_C0 = _138__C ;
  assign main_stage_v_1_mx0c1_R0 = _138__R ;
  assign main_stage_v_1_mx0c1_X0 = _138__X ;
  assign _138__S = 0 ;
  assign _139_ = ~ and_dcpl_16;
  logic [0:0] and_dcpl_16_C0 ;
  logic [0:0] and_dcpl_16_R0 ;
  logic [0:0] and_dcpl_16_X0 ;
  assign _139__T = and_dcpl_16_T ;
  assign and_dcpl_16_C0 = _139__C ;
  assign and_dcpl_16_R0 = _139__R ;
  assign and_dcpl_16_X0 = _139__X ;
  assign _139__S = 0 ;
  assign _140_ = ~ main_stage_v_2_mx0c1;
  logic [0:0] main_stage_v_2_mx0c1_C0 ;
  logic [0:0] main_stage_v_2_mx0c1_R0 ;
  logic [0:0] main_stage_v_2_mx0c1_X0 ;
  assign _140__T = main_stage_v_2_mx0c1_T ;
  assign main_stage_v_2_mx0c1_C0 = _140__C ;
  assign main_stage_v_2_mx0c1_R0 = _140__R ;
  assign main_stage_v_2_mx0c1_X0 = _140__X ;
  assign _140__S = 0 ;
  assign _141_ = ~ _231_;
  logic [0:0] _231__C0 ;
  logic [0:0] _231__R0 ;
  logic [0:0] _231__X0 ;
  assign _141__T = _231__T ;
  assign _231__C0 = _141__C ;
  assign _231__R0 = _141__R ;
  assign _231__X0 = _141__X ;
  assign _141__S = 0 ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_1_nl = ~ _232_;
  logic [0:0] _232__C0 ;
  logic [0:0] _232__R0 ;
  logic [0:0] _232__X0 ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_1_nl_T = _232__T ;
  assign _232__C0 = IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_1_nl_C ;
  assign _232__R0 = IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_1_nl_R ;
  assign _232__X0 = IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_1_nl_X ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_1_nl_S = 0 ;
  assign _142_ = ~ _233_;
  logic [0:0] _233__C0 ;
  logic [0:0] _233__R0 ;
  logic [0:0] _233__X0 ;
  assign _142__T = _233__T ;
  assign _233__C0 = _142__C ;
  assign _233__R0 = _142__R ;
  assign _233__X0 = _142__X ;
  assign _142__S = 0 ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_1_nl = ~ _234_;
  logic [0:0] _234__C0 ;
  logic [0:0] _234__R0 ;
  logic [0:0] _234__X0 ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_1_nl_T = _234__T ;
  assign _234__C0 = IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_1_nl_C ;
  assign _234__R0 = IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_1_nl_R ;
  assign _234__X0 = IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_1_nl_X ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_IntShiftRight_33U_5U_17U_obits_fixed_nor_1_nl_S = 0 ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_nor_2_nl = ~ _010_;
  logic [6:0] _010__C0 ;
  logic [6:0] _010__R0 ;
  logic [6:0] _010__X0 ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_nor_2_nl_T = _010__T ;
  assign _010__C0 = IntShiftRight_25U_5U_9U_obits_fixed_nor_2_nl_C ;
  assign _010__R0 = IntShiftRight_25U_5U_9U_obits_fixed_nor_2_nl_R ;
  assign _010__X0 = IntShiftRight_25U_5U_9U_obits_fixed_nor_2_nl_X ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_nor_2_nl_S = 0 ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_nl = ~ _011_;
  logic [6:0] _011__C0 ;
  logic [6:0] _011__R0 ;
  logic [6:0] _011__X0 ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_nl_T = _011__T ;
  assign _011__C0 = IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_nl_C ;
  assign _011__R0 = IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_nl_R ;
  assign _011__X0 = IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_nl_X ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_IntShiftRight_25U_5U_9U_obits_fixed_nor_nl_S = 0 ;
  assign _143_ = ~ _235_;
  logic [0:0] _235__C0 ;
  logic [0:0] _235__R0 ;
  logic [0:0] _235__X0 ;
  assign _143__T = _235__T ;
  assign _235__C0 = _143__C ;
  assign _235__R0 = _143__R ;
  assign _235__X0 = _143__X ;
  assign _143__S = 0 ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_IntShiftRight_25U_5U_9U_1_obits_fixed_nor_1_nl = ~ _236_;
  logic [0:0] _236__C0 ;
  logic [0:0] _236__R0 ;
  logic [0:0] _236__X0 ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_IntShiftRight_25U_5U_9U_1_obits_fixed_nor_1_nl_T = _236__T ;
  assign _236__C0 = IntShiftRight_25U_5U_9U_1_obits_fixed_IntShiftRight_25U_5U_9U_1_obits_fixed_nor_1_nl_C ;
  assign _236__R0 = IntShiftRight_25U_5U_9U_1_obits_fixed_IntShiftRight_25U_5U_9U_1_obits_fixed_nor_1_nl_R ;
  assign _236__X0 = IntShiftRight_25U_5U_9U_1_obits_fixed_IntShiftRight_25U_5U_9U_1_obits_fixed_nor_1_nl_X ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_IntShiftRight_25U_5U_9U_1_obits_fixed_nor_1_nl_S = 0 ;
  assign _144_ = ~ or_3_cse;
  logic [0:0] or_3_cse_C13 ;
  logic [0:0] or_3_cse_R13 ;
  logic [0:0] or_3_cse_X13 ;
  assign _144__T = or_3_cse_T ;
  assign or_3_cse_C13 = _144__C ;
  assign or_3_cse_R13 = _144__R ;
  assign or_3_cse_X13 = _144__X ;
  assign _144__S = 0 ;
  assign nor_24_nl = ~ _237_;
  logic [0:0] _237__C0 ;
  logic [0:0] _237__R0 ;
  logic [0:0] _237__X0 ;
  assign nor_24_nl_T = _237__T ;
  assign _237__C0 = nor_24_nl_C ;
  assign _237__R0 = nor_24_nl_R ;
  assign _237__X0 = nor_24_nl_X ;
  assign nor_24_nl_S = 0 ;
  assign _145_ = ~ _238_;
  logic [0:0] _238__C0 ;
  logic [0:0] _238__R0 ;
  logic [0:0] _238__X0 ;
  assign _145__T = _238__T ;
  assign _238__C0 = _145__C ;
  assign _238__R0 = _145__R ;
  assign _238__X0 = _145__X ;
  assign _145__S = 0 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl = ~ _239_;
  logic [0:0] _239__C0 ;
  logic [0:0] _239__R0 ;
  logic [0:0] _239__X0 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_T = _239__T ;
  assign _239__C0 = FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_C ;
  assign _239__R0 = FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_R ;
  assign _239__X0 = FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_X ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_S = 0 ;
  assign _146_ = ~ _221_;
  logic [0:0] _221__C0 ;
  logic [0:0] _221__R0 ;
  logic [0:0] _221__X0 ;
  assign _146__T = _221__T ;
  assign _221__C0 = _146__C ;
  assign _221__R0 = _146__R ;
  assign _221__X0 = _146__X ;
  assign _146__S = 0 ;
  assign nor_19_nl = ~ _244_;
  logic [0:0] _244__C0 ;
  logic [0:0] _244__R0 ;
  logic [0:0] _244__X0 ;
  assign nor_19_nl_T = _244__T ;
  assign _244__C0 = nor_19_nl_C ;
  assign _244__R0 = nor_19_nl_R ;
  assign _244__X0 = nor_19_nl_X ;
  assign nor_19_nl_S = 0 ;
  logic [7:0] fangyuan18;
  logic [7:0] fangyuan18_T ;
  logic [7:0] fangyuan18_R ;
  logic [7:0] fangyuan18_C ;
  logic [7:0] fangyuan18_X ;
  assign fangyuan18 = { _006_[15], _006_[6:0] };
  assign fangyuan18_T = {  _006__T [15] , _006__T [6:0]  };
  logic [5:0] fangyuan18_S ;
  assign fangyuan18_S = 0 ;
  logic [15:0] _006__R0 ;
  logic [15:0] _006__X0 ;
  logic [15:0] _006__C0 ;
  assign _006__R0 [15:15] = fangyuan18_R [7:7] ;
  assign _006__X0 [15:15] = fangyuan18_X [7:7] ;
  assign _006__C0 [15:15] = fangyuan18_C [7:7] ;
  assign _006__R0 [6:0] = fangyuan18_R [6:0] ;
  assign _006__X0 [6:0] = fangyuan18_X [6:0] ;
  assign _006__C0 [6:0] = fangyuan18_C [6:0] ;

  assign fangyuan18 = ~ cfg_alu_in_rsci_d[7:0];
  logic [15:0] cfg_alu_in_rsci_d_C0 ;
  logic [15:0] cfg_alu_in_rsci_d_R0 ;
  logic [15:0] cfg_alu_in_rsci_d_X0 ;
  assign fangyuan18_T = cfg_alu_in_rsci_d_T [7:0] ;
  assign cfg_alu_in_rsci_d_C0 [7:0] = fangyuan18_C ;
  assign cfg_alu_in_rsci_d_R0 [7:0] = fangyuan18_R ;
  assign cfg_alu_in_rsci_d_X0 [7:0] = fangyuan18_X ;
  assign fangyuan18_S = 0 ;
  assign _007_ = ~ cfg_alu_in_rsci_d;
  assign { cfg_alu_in_rsci_d_R0 [15:8] } = 0;
  assign { cfg_alu_in_rsci_d_X0 [15:8] } = 0;
  assign { cfg_alu_in_rsci_d_C0 [15:8] } = 0;
  logic [15:0] cfg_alu_in_rsci_d_C1 ;
  logic [15:0] cfg_alu_in_rsci_d_R1 ;
  logic [15:0] cfg_alu_in_rsci_d_X1 ;
  assign _007__T = cfg_alu_in_rsci_d_T ;
  assign cfg_alu_in_rsci_d_C1 = _007__C ;
  assign cfg_alu_in_rsci_d_R1 = _007__R ;
  assign cfg_alu_in_rsci_d_X1 = _007__X ;
  assign _007__S = 0 ;
  assign _147_ = ~ _265_;
  logic [0:0] _265__C0 ;
  logic [0:0] _265__R0 ;
  logic [0:0] _265__X0 ;
  assign _147__T = _265__T ;
  assign _265__C0 = _147__C ;
  assign _265__R0 = _147__R ;
  assign _265__X0 = _147__X ;
  assign _147__S = 0 ;
  assign nor_17_cse = ~ _117_;
  logic [0:0] _117__C0 ;
  logic [0:0] _117__R0 ;
  logic [0:0] _117__X0 ;
  assign nor_17_cse_T = _117__T ;
  assign _117__C0 = nor_17_cse_C ;
  assign _117__R0 = nor_17_cse_R ;
  assign _117__X0 = nor_17_cse_X ;
  assign nor_17_cse_S = 0 ;
  assign nor_23_cse = ~ _242_;
  logic [0:0] _242__C0 ;
  logic [0:0] _242__R0 ;
  logic [0:0] _242__X0 ;
  assign nor_23_cse_T = _242__T ;
  assign _242__C0 = nor_23_cse_C ;
  assign _242__R0 = nor_23_cse_R ;
  assign _242__X0 = nor_23_cse_X ;
  assign nor_23_cse_S = 0 ;
  assign _148_ = ~ io_read_cfg_precision_rsc_svs_st_4[0];
  logic [1:0] io_read_cfg_precision_rsc_svs_st_4_C1 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_4_R1 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_4_X1 ;
  assign _148__T = io_read_cfg_precision_rsc_svs_st_4_T [0] ;
  assign io_read_cfg_precision_rsc_svs_st_4_C1 [0] = _148__C ;
  assign io_read_cfg_precision_rsc_svs_st_4_R1 [0] = _148__R ;
  assign io_read_cfg_precision_rsc_svs_st_4_X1 [0] = _148__X ;
  assign _148__S = 0 ;
  assign nor_15_nl = ~ _268_;
  logic [0:0] _268__C0 ;
  logic [0:0] _268__R0 ;
  logic [0:0] _268__X0 ;
  assign nor_15_nl_T = _268__T ;
  assign _268__C0 = nor_15_nl_C ;
  assign _268__R0 = nor_15_nl_R ;
  assign _268__X0 = nor_15_nl_X ;
  assign nor_15_nl_S = 0 ;
  assign _149_ = ~ _109_;
  logic [0:0] _109__C0 ;
  logic [0:0] _109__R0 ;
  logic [0:0] _109__X0 ;
  assign _149__T = _109__T ;
  assign _109__C0 = _149__C ;
  assign _109__R0 = _149__R ;
  assign _109__X0 = _149__X ;
  assign _149__S = 0 ;
  assign nor_21_nl = ~ _269_;
  logic [0:0] _269__C0 ;
  logic [0:0] _269__R0 ;
  logic [0:0] _269__X0 ;
  assign nor_21_nl_T = _269__T ;
  assign _269__C0 = nor_21_nl_C ;
  assign _269__R0 = nor_21_nl_R ;
  assign _269__X0 = nor_21_nl_X ;
  assign nor_21_nl_S = 0 ;
  assign _002_ = ~ or_tmp_15;
  logic [0:0] or_tmp_15_C0 ;
  logic [0:0] or_tmp_15_R0 ;
  logic [0:0] or_tmp_15_X0 ;
  assign _002__T = or_tmp_15_T ;
  assign or_tmp_15_C0 = _002__C ;
  assign or_tmp_15_R0 = _002__R ;
  assign or_tmp_15_X0 = _002__X ;
  assign _002__S = 0 ;
  assign nor_30_nl = ~ _272_;
  logic [0:0] _272__C0 ;
  logic [0:0] _272__R0 ;
  logic [0:0] _272__X0 ;
  assign nor_30_nl_T = _272__T ;
  assign _272__C0 = nor_30_nl_C ;
  assign _272__R0 = nor_30_nl_R ;
  assign _272__X0 = nor_30_nl_X ;
  assign nor_30_nl_S = 0 ;
  assign _003_ = ~ or_107_cse;
  logic [0:0] or_107_cse_C0 ;
  logic [0:0] or_107_cse_R0 ;
  logic [0:0] or_107_cse_X0 ;
  assign _003__T = or_107_cse_T ;
  assign or_107_cse_C0 = _003__C ;
  assign or_107_cse_R0 = _003__R ;
  assign or_107_cse_X0 = _003__X ;
  assign _003__S = 0 ;
  assign _150_ = nor_13_cse | chn_data_out_rsci_bawt;
  assign _150__S = 0 ;
  logic [0:0] nor_13_cse_C0 ;
  logic [0:0] nor_13_cse_R0 ;
  logic [0:0] nor_13_cse_X0 ;
  logic [0:0] chn_data_out_rsci_bawt_C2 ;
  logic [0:0] chn_data_out_rsci_bawt_R2 ;
  logic [0:0] chn_data_out_rsci_bawt_X2 ;
  assign _150__T = nor_13_cse_T | chn_data_out_rsci_bawt_T ;
  assign nor_13_cse_C0 = _150__C ;
  assign nor_13_cse_X0 = _150__X ;
  assign chn_data_out_rsci_bawt_C2 = _150__C ;
  assign chn_data_out_rsci_bawt_X2 = _150__X ;
  assign nor_13_cse_R0 = ( _150__R | _150__C & chn_data_out_rsci_bawt_T ) & { 1{ chn_data_out_rsci_bawt != 1'b1 }} ;
  assign chn_data_out_rsci_bawt_R2 = ( _150__R | _150__C & nor_13_cse_T ) & { 1{ nor_13_cse != 1'b1 }} ;
  assign or_107_cse = _150_ | _118_;
  assign or_107_cse_S = 0 ;
  logic [0:0] _150__C0 ;
  logic [0:0] _150__R0 ;
  logic [0:0] _150__X0 ;
  logic [0:0] _118__C0 ;
  logic [0:0] _118__R0 ;
  logic [0:0] _118__X0 ;
  assign or_107_cse_T = _150__T | _118__T ;
  assign _150__C0 = or_107_cse_C ;
  assign _150__X0 = or_107_cse_X ;
  assign _118__C0 = or_107_cse_C ;
  assign _118__X0 = or_107_cse_X ;
  assign _150__R0 = ( or_107_cse_R | or_107_cse_C & _118__T ) & { 1{ _118_ != 1'b1 }} ;
  assign _118__R0 = ( or_107_cse_R | or_107_cse_C & _150__T ) & { 1{ _150_ != 1'b1 }} ;
  assign _151_ = or_66_cse | chn_data_out_rsci_bawt;
  assign _151__S = 0 ;
  logic [0:0] or_66_cse_C2 ;
  logic [0:0] or_66_cse_R2 ;
  logic [0:0] or_66_cse_X2 ;
  logic [0:0] chn_data_out_rsci_bawt_C3 ;
  logic [0:0] chn_data_out_rsci_bawt_R3 ;
  logic [0:0] chn_data_out_rsci_bawt_X3 ;
  assign _151__T = or_66_cse_T | chn_data_out_rsci_bawt_T ;
  assign or_66_cse_C2 = _151__C ;
  assign or_66_cse_X2 = _151__X ;
  assign chn_data_out_rsci_bawt_C3 = _151__C ;
  assign chn_data_out_rsci_bawt_X3 = _151__X ;
  assign or_66_cse_R2 = ( _151__R | _151__C & chn_data_out_rsci_bawt_T ) & { 1{ chn_data_out_rsci_bawt != 1'b1 }} ;
  assign chn_data_out_rsci_bawt_R3 = ( _151__R | _151__C & or_66_cse_T ) & { 1{ or_66_cse != 1'b1 }} ;
  assign or_tmp_35 = _151_ | _118_;
  assign or_tmp_35_S = 0 ;
  logic [0:0] _151__C0 ;
  logic [0:0] _151__R0 ;
  logic [0:0] _151__X0 ;
  logic [0:0] _118__C1 ;
  logic [0:0] _118__R1 ;
  logic [0:0] _118__X1 ;
  assign or_tmp_35_T = _151__T | _118__T ;
  assign _151__C0 = or_tmp_35_C ;
  assign _151__X0 = or_tmp_35_X ;
  assign _118__C1 = or_tmp_35_C ;
  assign _118__X1 = or_tmp_35_X ;
  assign _151__R0 = ( or_tmp_35_R | or_tmp_35_C & _118__T ) & { 1{ _118_ != 1'b1 }} ;
  assign _118__R1 = ( or_tmp_35_R | or_tmp_35_C & _151__T ) & { 1{ _151_ != 1'b1 }} ;
  assign _152_ = IntShiftRight_25U_5U_9U_mbits_fixed_sva[0] | IntShiftRight_25U_5U_9U_mbits_fixed_sva[1];
  assign _152__S = 0 ;
  assign _152__T = IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [0] | IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [1] ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_C2 [0] = _152__C ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_X2 [0] = _152__X ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_C2 [1] = _152__C ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_X2 [1] = _152__X ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_R2 [0] = ( _152__R | _152__C & IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [1] ) & { 1{ IntShiftRight_25U_5U_9U_mbits_fixed_sva[1] != 1'b1 }} ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_R2 [1] = ( _152__R | _152__C & IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [0] ) & { 1{ IntShiftRight_25U_5U_9U_mbits_fixed_sva[0] != 1'b1 }} ;
  assign _153_ = _152_ | IntShiftRight_25U_5U_9U_mbits_fixed_sva[2];
  assign _153__S = 0 ;
  logic [0:0] _152__C0 ;
  logic [0:0] _152__R0 ;
  logic [0:0] _152__X0 ;
  assign _153__T = _152__T | IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [2] ;
  assign _152__C0 = _153__C ;
  assign _152__X0 = _153__X ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_C2 [2] = _153__C ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_X2 [2] = _153__X ;
  assign _152__R0 = ( _153__R | _153__C & IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [2] ) & { 1{ IntShiftRight_25U_5U_9U_mbits_fixed_sva[2] != 1'b1 }} ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_R2 [2] = ( _153__R | _153__C & _152__T ) & { 1{ _152_ != 1'b1 }} ;
  assign _154_ = _153_ | IntShiftRight_25U_5U_9U_mbits_fixed_sva[3];
  assign _154__S = 0 ;
  logic [0:0] _153__C0 ;
  logic [0:0] _153__R0 ;
  logic [0:0] _153__X0 ;
  assign _154__T = _153__T | IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [3] ;
  assign _153__C0 = _154__C ;
  assign _153__X0 = _154__X ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_C2 [3] = _154__C ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_X2 [3] = _154__X ;
  assign _153__R0 = ( _154__R | _154__C & IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [3] ) & { 1{ IntShiftRight_25U_5U_9U_mbits_fixed_sva[3] != 1'b1 }} ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_R2 [3] = ( _154__R | _154__C & _153__T ) & { 1{ _153_ != 1'b1 }} ;
  assign _155_ = _154_ | IntShiftRight_25U_5U_9U_mbits_fixed_sva[4];
  assign _155__S = 0 ;
  logic [0:0] _154__C0 ;
  logic [0:0] _154__R0 ;
  logic [0:0] _154__X0 ;
  assign _155__T = _154__T | IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [4] ;
  assign _154__C0 = _155__C ;
  assign _154__X0 = _155__X ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_C2 [4] = _155__C ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_X2 [4] = _155__X ;
  assign _154__R0 = ( _155__R | _155__C & IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [4] ) & { 1{ IntShiftRight_25U_5U_9U_mbits_fixed_sva[4] != 1'b1 }} ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_R2 [4] = ( _155__R | _155__C & _154__T ) & { 1{ _154_ != 1'b1 }} ;
  assign _156_ = _155_ | IntShiftRight_25U_5U_9U_mbits_fixed_sva[5];
  assign _156__S = 0 ;
  logic [0:0] _155__C0 ;
  logic [0:0] _155__R0 ;
  logic [0:0] _155__X0 ;
  assign _156__T = _155__T | IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [5] ;
  assign _155__C0 = _156__C ;
  assign _155__X0 = _156__X ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_C2 [5] = _156__C ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_X2 [5] = _156__X ;
  assign _155__R0 = ( _156__R | _156__C & IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [5] ) & { 1{ IntShiftRight_25U_5U_9U_mbits_fixed_sva[5] != 1'b1 }} ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_R2 [5] = ( _156__R | _156__C & _155__T ) & { 1{ _155_ != 1'b1 }} ;
  assign _157_ = _156_ | IntShiftRight_25U_5U_9U_mbits_fixed_sva[6];
  assign _157__S = 0 ;
  logic [0:0] _156__C0 ;
  logic [0:0] _156__R0 ;
  logic [0:0] _156__X0 ;
  assign _157__T = _156__T | IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [6] ;
  assign _156__C0 = _157__C ;
  assign _156__X0 = _157__X ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_C2 [6] = _157__C ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_X2 [6] = _157__X ;
  assign _156__R0 = ( _157__R | _157__C & IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [6] ) & { 1{ IntShiftRight_25U_5U_9U_mbits_fixed_sva[6] != 1'b1 }} ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_R2 [6] = ( _157__R | _157__C & _156__T ) & { 1{ _156_ != 1'b1 }} ;
  assign _158_ = _157_ | IntShiftRight_25U_5U_9U_mbits_fixed_sva[7];
  assign _158__S = 0 ;
  logic [0:0] _157__C0 ;
  logic [0:0] _157__R0 ;
  logic [0:0] _157__X0 ;
  assign _158__T = _157__T | IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [7] ;
  assign _157__C0 = _158__C ;
  assign _157__X0 = _158__X ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_C2 [7] = _158__C ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_X2 [7] = _158__X ;
  assign _157__R0 = ( _158__R | _158__C & IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [7] ) & { 1{ IntShiftRight_25U_5U_9U_mbits_fixed_sva[7] != 1'b1 }} ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_R2 [7] = ( _158__R | _158__C & _157__T ) & { 1{ _157_ != 1'b1 }} ;
  assign _159_ = _158_ | IntShiftRight_25U_5U_9U_mbits_fixed_sva[8];
  assign _159__S = 0 ;
  logic [0:0] _158__C0 ;
  logic [0:0] _158__R0 ;
  logic [0:0] _158__X0 ;
  assign _159__T = _158__T | IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [8] ;
  assign _158__C0 = _159__C ;
  assign _158__X0 = _159__X ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_C2 [8] = _159__C ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_X2 [8] = _159__X ;
  assign _158__R0 = ( _159__R | _159__C & IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [8] ) & { 1{ IntShiftRight_25U_5U_9U_mbits_fixed_sva[8] != 1'b1 }} ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_R2 [8] = ( _159__R | _159__C & _158__T ) & { 1{ _158_ != 1'b1 }} ;
  assign _160_ = _159_ | IntShiftRight_25U_5U_9U_mbits_fixed_sva[9];
  assign _160__S = 0 ;
  logic [0:0] _159__C0 ;
  logic [0:0] _159__R0 ;
  logic [0:0] _159__X0 ;
  assign _160__T = _159__T | IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [9] ;
  assign _159__C0 = _160__C ;
  assign _159__X0 = _160__X ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_C2 [9] = _160__C ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_X2 [9] = _160__X ;
  assign _159__R0 = ( _160__R | _160__C & IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [9] ) & { 1{ IntShiftRight_25U_5U_9U_mbits_fixed_sva[9] != 1'b1 }} ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_R2 [9] = ( _160__R | _160__C & _159__T ) & { 1{ _159_ != 1'b1 }} ;
  assign _161_ = _160_ | IntShiftRight_25U_5U_9U_mbits_fixed_sva[10];
  assign _161__S = 0 ;
  logic [0:0] _160__C0 ;
  logic [0:0] _160__R0 ;
  logic [0:0] _160__X0 ;
  assign _161__T = _160__T | IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [10] ;
  assign _160__C0 = _161__C ;
  assign _160__X0 = _161__X ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_C2 [10] = _161__C ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_X2 [10] = _161__X ;
  assign _160__R0 = ( _161__R | _161__C & IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [10] ) & { 1{ IntShiftRight_25U_5U_9U_mbits_fixed_sva[10] != 1'b1 }} ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_R2 [10] = ( _161__R | _161__C & _160__T ) & { 1{ _160_ != 1'b1 }} ;
  assign _162_ = _161_ | IntShiftRight_25U_5U_9U_mbits_fixed_sva[11];
  assign _162__S = 0 ;
  logic [0:0] _161__C0 ;
  logic [0:0] _161__R0 ;
  logic [0:0] _161__X0 ;
  assign _162__T = _161__T | IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [11] ;
  assign _161__C0 = _162__C ;
  assign _161__X0 = _162__X ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_C2 [11] = _162__C ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_X2 [11] = _162__X ;
  assign _161__R0 = ( _162__R | _162__C & IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [11] ) & { 1{ IntShiftRight_25U_5U_9U_mbits_fixed_sva[11] != 1'b1 }} ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_R2 [11] = ( _162__R | _162__C & _161__T ) & { 1{ _161_ != 1'b1 }} ;
  assign _163_ = _162_ | IntShiftRight_25U_5U_9U_mbits_fixed_sva[12];
  assign _163__S = 0 ;
  logic [0:0] _162__C0 ;
  logic [0:0] _162__R0 ;
  logic [0:0] _162__X0 ;
  assign _163__T = _162__T | IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [12] ;
  assign _162__C0 = _163__C ;
  assign _162__X0 = _163__X ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_C2 [12] = _163__C ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_X2 [12] = _163__X ;
  assign _162__R0 = ( _163__R | _163__C & IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [12] ) & { 1{ IntShiftRight_25U_5U_9U_mbits_fixed_sva[12] != 1'b1 }} ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_R2 [12] = ( _163__R | _163__C & _162__T ) & { 1{ _162_ != 1'b1 }} ;
  assign _164_ = _163_ | IntShiftRight_25U_5U_9U_mbits_fixed_sva[13];
  assign _164__S = 0 ;
  logic [0:0] _163__C0 ;
  logic [0:0] _163__R0 ;
  logic [0:0] _163__X0 ;
  assign _164__T = _163__T | IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [13] ;
  assign _163__C0 = _164__C ;
  assign _163__X0 = _164__X ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_C2 [13] = _164__C ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_X2 [13] = _164__X ;
  assign _163__R0 = ( _164__R | _164__C & IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [13] ) & { 1{ IntShiftRight_25U_5U_9U_mbits_fixed_sva[13] != 1'b1 }} ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_R2 [13] = ( _164__R | _164__C & _163__T ) & { 1{ _163_ != 1'b1 }} ;
  assign _165_ = _164_ | IntShiftRight_25U_5U_9U_mbits_fixed_sva[14];
  assign _165__S = 0 ;
  logic [0:0] _164__C0 ;
  logic [0:0] _164__R0 ;
  logic [0:0] _164__X0 ;
  assign _165__T = _164__T | IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [14] ;
  assign _164__C0 = _165__C ;
  assign _164__X0 = _165__X ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_C2 [14] = _165__C ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_X2 [14] = _165__X ;
  assign _164__R0 = ( _165__R | _165__C & IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [14] ) & { 1{ IntShiftRight_25U_5U_9U_mbits_fixed_sva[14] != 1'b1 }} ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_R2 [14] = ( _165__R | _165__C & _164__T ) & { 1{ _164_ != 1'b1 }} ;
  assign _166_ = _165_ | IntShiftRight_25U_5U_9U_mbits_fixed_sva[15];
  assign _166__S = 0 ;
  logic [0:0] _165__C0 ;
  logic [0:0] _165__R0 ;
  logic [0:0] _165__X0 ;
  assign _166__T = _165__T | IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [15] ;
  assign _165__C0 = _166__C ;
  assign _165__X0 = _166__X ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_C2 [15] = _166__C ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_X2 [15] = _166__X ;
  assign _165__R0 = ( _166__R | _166__C & IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [15] ) & { 1{ IntShiftRight_25U_5U_9U_mbits_fixed_sva[15] != 1'b1 }} ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_R2 [15] = ( _166__R | _166__C & _165__T ) & { 1{ _165_ != 1'b1 }} ;
  assign _167_ = _166_ | IntShiftRight_25U_5U_9U_mbits_fixed_sva[16];
  assign _167__S = 0 ;
  logic [0:0] _166__C0 ;
  logic [0:0] _166__R0 ;
  logic [0:0] _166__X0 ;
  assign _167__T = _166__T | IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [16] ;
  assign _166__C0 = _167__C ;
  assign _166__X0 = _167__X ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_C2 [16] = _167__C ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_X2 [16] = _167__X ;
  assign _166__R0 = ( _167__R | _167__C & IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [16] ) & { 1{ IntShiftRight_25U_5U_9U_mbits_fixed_sva[16] != 1'b1 }} ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_R2 [16] = ( _167__R | _167__C & _166__T ) & { 1{ _166_ != 1'b1 }} ;
  assign _168_ = _167_ | IntShiftRight_25U_5U_9U_mbits_fixed_sva[17];
  assign _168__S = 0 ;
  logic [0:0] _167__C0 ;
  logic [0:0] _167__R0 ;
  logic [0:0] _167__X0 ;
  assign _168__T = _167__T | IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [17] ;
  assign _167__C0 = _168__C ;
  assign _167__X0 = _168__X ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_C2 [17] = _168__C ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_X2 [17] = _168__X ;
  assign _167__R0 = ( _168__R | _168__C & IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [17] ) & { 1{ IntShiftRight_25U_5U_9U_mbits_fixed_sva[17] != 1'b1 }} ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_R2 [17] = ( _168__R | _168__C & _167__T ) & { 1{ _167_ != 1'b1 }} ;
  assign _169_ = _168_ | IntShiftRight_25U_5U_9U_mbits_fixed_sva[18];
  assign _169__S = 0 ;
  logic [0:0] _168__C0 ;
  logic [0:0] _168__R0 ;
  logic [0:0] _168__X0 ;
  assign _169__T = _168__T | IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [18] ;
  assign _168__C0 = _169__C ;
  assign _168__X0 = _169__X ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_C2 [18] = _169__C ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_X2 [18] = _169__X ;
  assign _168__R0 = ( _169__R | _169__C & IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [18] ) & { 1{ IntShiftRight_25U_5U_9U_mbits_fixed_sva[18] != 1'b1 }} ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_R2 [18] = ( _169__R | _169__C & _168__T ) & { 1{ _168_ != 1'b1 }} ;
  assign _170_ = _169_ | IntShiftRight_25U_5U_9U_mbits_fixed_sva[19];
  assign _170__S = 0 ;
  logic [0:0] _169__C0 ;
  logic [0:0] _169__R0 ;
  logic [0:0] _169__X0 ;
  assign _170__T = _169__T | IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [19] ;
  assign _169__C0 = _170__C ;
  assign _169__X0 = _170__X ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_C2 [19] = _170__C ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_X2 [19] = _170__X ;
  assign _169__R0 = ( _170__R | _170__C & IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [19] ) & { 1{ IntShiftRight_25U_5U_9U_mbits_fixed_sva[19] != 1'b1 }} ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_R2 [19] = ( _170__R | _170__C & _169__T ) & { 1{ _169_ != 1'b1 }} ;
  assign _171_ = _170_ | IntShiftRight_25U_5U_9U_mbits_fixed_sva[20];
  assign _171__S = 0 ;
  logic [0:0] _170__C0 ;
  logic [0:0] _170__R0 ;
  logic [0:0] _170__X0 ;
  assign _171__T = _170__T | IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [20] ;
  assign _170__C0 = _171__C ;
  assign _170__X0 = _171__X ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_C2 [20] = _171__C ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_X2 [20] = _171__X ;
  assign _170__R0 = ( _171__R | _171__C & IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [20] ) & { 1{ IntShiftRight_25U_5U_9U_mbits_fixed_sva[20] != 1'b1 }} ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_R2 [20] = ( _171__R | _171__C & _170__T ) & { 1{ _170_ != 1'b1 }} ;
  assign _172_ = _171_ | IntShiftRight_25U_5U_9U_mbits_fixed_sva[21];
  assign _172__S = 0 ;
  logic [0:0] _171__C0 ;
  logic [0:0] _171__R0 ;
  logic [0:0] _171__X0 ;
  assign _172__T = _171__T | IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [21] ;
  assign _171__C0 = _172__C ;
  assign _171__X0 = _172__X ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_C2 [21] = _172__C ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_X2 [21] = _172__X ;
  assign _171__R0 = ( _172__R | _172__C & IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [21] ) & { 1{ IntShiftRight_25U_5U_9U_mbits_fixed_sva[21] != 1'b1 }} ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_R2 [21] = ( _172__R | _172__C & _171__T ) & { 1{ _171_ != 1'b1 }} ;
  assign _173_ = _172_ | IntShiftRight_25U_5U_9U_mbits_fixed_sva[22];
  assign _173__S = 0 ;
  logic [0:0] _172__C0 ;
  logic [0:0] _172__R0 ;
  logic [0:0] _172__X0 ;
  assign _173__T = _172__T | IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [22] ;
  assign _172__C0 = _173__C ;
  assign _172__X0 = _173__X ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_C2 [22] = _173__C ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_X2 [22] = _173__X ;
  assign _172__R0 = ( _173__R | _173__C & IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [22] ) & { 1{ IntShiftRight_25U_5U_9U_mbits_fixed_sva[22] != 1'b1 }} ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_R2 [22] = ( _173__R | _173__C & _172__T ) & { 1{ _172_ != 1'b1 }} ;
  assign _174_ = _173_ | IntShiftRight_25U_5U_9U_mbits_fixed_sva[23];
  assign _174__S = 0 ;
  logic [0:0] _173__C0 ;
  logic [0:0] _173__R0 ;
  logic [0:0] _173__X0 ;
  assign _174__T = _173__T | IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [23] ;
  assign _173__C0 = _174__C ;
  assign _173__X0 = _174__X ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_C2 [23] = _174__C ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_X2 [23] = _174__X ;
  assign _173__R0 = ( _174__R | _174__C & IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [23] ) & { 1{ IntShiftRight_25U_5U_9U_mbits_fixed_sva[23] != 1'b1 }} ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_R2 [23] = ( _174__R | _174__C & _173__T ) & { 1{ _173_ != 1'b1 }} ;
  assign _175_ = _174_ | IntShiftRight_25U_5U_9U_mbits_fixed_sva[24];
  assign _175__S = 0 ;
  logic [0:0] _174__C0 ;
  logic [0:0] _174__R0 ;
  logic [0:0] _174__X0 ;
  assign _175__T = _174__T | IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [24] ;
  assign _174__C0 = _175__C ;
  assign _174__X0 = _175__X ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_C2 [24] = _175__C ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_X2 [24] = _175__X ;
  assign _174__R0 = ( _175__R | _175__C & IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [24] ) & { 1{ IntShiftRight_25U_5U_9U_mbits_fixed_sva[24] != 1'b1 }} ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_R2 [24] = ( _175__R | _175__C & _174__T ) & { 1{ _174_ != 1'b1 }} ;
  assign _176_ = _175_ | IntShiftRight_25U_5U_9U_mbits_fixed_sva[25];
  assign _176__S = 0 ;
  logic [0:0] _175__C0 ;
  logic [0:0] _175__R0 ;
  logic [0:0] _175__X0 ;
  assign _176__T = _175__T | IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [25] ;
  assign _175__C0 = _176__C ;
  assign _175__X0 = _176__X ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_C2 [25] = _176__C ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_X2 [25] = _176__X ;
  assign _175__R0 = ( _176__R | _176__C & IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [25] ) & { 1{ IntShiftRight_25U_5U_9U_mbits_fixed_sva[25] != 1'b1 }} ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_R2 [25] = ( _176__R | _176__C & _175__T ) & { 1{ _175_ != 1'b1 }} ;
  assign _177_ = _176_ | IntShiftRight_25U_5U_9U_mbits_fixed_sva[26];
  assign _177__S = 0 ;
  logic [0:0] _176__C0 ;
  logic [0:0] _176__R0 ;
  logic [0:0] _176__X0 ;
  assign _177__T = _176__T | IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [26] ;
  assign _176__C0 = _177__C ;
  assign _176__X0 = _177__X ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_C2 [26] = _177__C ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_X2 [26] = _177__X ;
  assign _176__R0 = ( _177__R | _177__C & IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [26] ) & { 1{ IntShiftRight_25U_5U_9U_mbits_fixed_sva[26] != 1'b1 }} ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_R2 [26] = ( _177__R | _177__C & _176__T ) & { 1{ _176_ != 1'b1 }} ;
  assign _178_ = _177_ | IntShiftRight_25U_5U_9U_mbits_fixed_sva[27];
  assign _178__S = 0 ;
  logic [0:0] _177__C0 ;
  logic [0:0] _177__R0 ;
  logic [0:0] _177__X0 ;
  assign _178__T = _177__T | IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [27] ;
  assign _177__C0 = _178__C ;
  assign _177__X0 = _178__X ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_C2 [27] = _178__C ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_X2 [27] = _178__X ;
  assign _177__R0 = ( _178__R | _178__C & IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [27] ) & { 1{ IntShiftRight_25U_5U_9U_mbits_fixed_sva[27] != 1'b1 }} ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_R2 [27] = ( _178__R | _178__C & _177__T ) & { 1{ _177_ != 1'b1 }} ;
  assign _179_ = _178_ | IntShiftRight_25U_5U_9U_mbits_fixed_sva[28];
  assign _179__S = 0 ;
  logic [0:0] _178__C0 ;
  logic [0:0] _178__R0 ;
  logic [0:0] _178__X0 ;
  assign _179__T = _178__T | IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [28] ;
  assign _178__C0 = _179__C ;
  assign _178__X0 = _179__X ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_C2 [28] = _179__C ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_X2 [28] = _179__X ;
  assign _178__R0 = ( _179__R | _179__C & IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [28] ) & { 1{ IntShiftRight_25U_5U_9U_mbits_fixed_sva[28] != 1'b1 }} ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_R2 [28] = ( _179__R | _179__C & _178__T ) & { 1{ _178_ != 1'b1 }} ;
  assign _180_ = _179_ | IntShiftRight_25U_5U_9U_mbits_fixed_sva[29];
  assign _180__S = 0 ;
  logic [0:0] _179__C0 ;
  logic [0:0] _179__R0 ;
  logic [0:0] _179__X0 ;
  assign _180__T = _179__T | IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [29] ;
  assign _179__C0 = _180__C ;
  assign _179__X0 = _180__X ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_C2 [29] = _180__C ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_X2 [29] = _180__X ;
  assign _179__R0 = ( _180__R | _180__C & IntShiftRight_25U_5U_9U_mbits_fixed_sva_T [29] ) & { 1{ IntShiftRight_25U_5U_9U_mbits_fixed_sva[29] != 1'b1 }} ;
  assign IntShiftRight_25U_5U_9U_mbits_fixed_sva_R2 [29] = ( _180__R | _180__C & _179__T ) & { 1{ _179_ != 1'b1 }} ;
  assign _181_ = _180_ | _119_;
  assign _181__S = 0 ;
  logic [0:0] _180__C0 ;
  logic [0:0] _180__R0 ;
  logic [0:0] _180__X0 ;
  logic [0:0] _119__C0 ;
  logic [0:0] _119__R0 ;
  logic [0:0] _119__X0 ;
  assign _181__T = _180__T | _119__T ;
  assign _180__C0 = _181__C ;
  assign _180__X0 = _181__X ;
  assign _119__C0 = _181__C ;
  assign _119__X0 = _181__X ;
  assign _180__R0 = ( _181__R | _181__C & _119__T ) & { 1{ _119_ != 1'b1 }} ;
  assign _119__R0 = ( _181__R | _181__C & _180__T ) & { 1{ _180_ != 1'b1 }} ;
  assign _182_ = IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva[25] | _120_;
  assign _182__S = 0 ;
  logic [0:0] _120__C0 ;
  logic [0:0] _120__R0 ;
  logic [0:0] _120__X0 ;
  assign _182__T = IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_T [25] | _120__T ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C2 [25] = _182__C ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X2 [25] = _182__X ;
  assign _120__C0 = _182__C ;
  assign _120__X0 = _182__X ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R2 [25] = ( _182__R | _182__C & _120__T ) & { 1{ _120_ != 1'b1 }} ;
  assign _120__R0 = ( _182__R | _182__C & IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_T [25] ) & { 1{ IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva[25] != 1'b1 }} ;
  assign _183_ = z_out_2[0] | z_out_2[1];
  assign _183__S = 0 ;
  assign _183__T = z_out_2_T [0] | z_out_2_T [1] ;
  assign z_out_2_C3 [0] = _183__C ;
  assign z_out_2_X3 [0] = _183__X ;
  assign z_out_2_C3 [1] = _183__C ;
  assign z_out_2_X3 [1] = _183__X ;
  assign z_out_2_R3 [0] = ( _183__R | _183__C & z_out_2_T [1] ) & { 1{ z_out_2[1] != 1'b1 }} ;
  assign z_out_2_R3 [1] = ( _183__R | _183__C & z_out_2_T [0] ) & { 1{ z_out_2[0] != 1'b1 }} ;
  assign _184_ = _183_ | z_out_2[2];
  assign _184__S = 0 ;
  logic [0:0] _183__C0 ;
  logic [0:0] _183__R0 ;
  logic [0:0] _183__X0 ;
  assign _184__T = _183__T | z_out_2_T [2] ;
  assign _183__C0 = _184__C ;
  assign _183__X0 = _184__X ;
  assign z_out_2_C3 [2] = _184__C ;
  assign z_out_2_X3 [2] = _184__X ;
  assign _183__R0 = ( _184__R | _184__C & z_out_2_T [2] ) & { 1{ z_out_2[2] != 1'b1 }} ;
  assign z_out_2_R3 [2] = ( _184__R | _184__C & _183__T ) & { 1{ _183_ != 1'b1 }} ;
  assign _185_ = _184_ | z_out_2[3];
  assign _185__S = 0 ;
  logic [0:0] _184__C0 ;
  logic [0:0] _184__R0 ;
  logic [0:0] _184__X0 ;
  assign _185__T = _184__T | z_out_2_T [3] ;
  assign _184__C0 = _185__C ;
  assign _184__X0 = _185__X ;
  assign z_out_2_C3 [3] = _185__C ;
  assign z_out_2_X3 [3] = _185__X ;
  assign _184__R0 = ( _185__R | _185__C & z_out_2_T [3] ) & { 1{ z_out_2[3] != 1'b1 }} ;
  assign z_out_2_R3 [3] = ( _185__R | _185__C & _184__T ) & { 1{ _184_ != 1'b1 }} ;
  assign _186_ = _185_ | z_out_2[4];
  assign _186__S = 0 ;
  logic [0:0] _185__C0 ;
  logic [0:0] _185__R0 ;
  logic [0:0] _185__X0 ;
  assign _186__T = _185__T | z_out_2_T [4] ;
  assign _185__C0 = _186__C ;
  assign _185__X0 = _186__X ;
  assign z_out_2_C3 [4] = _186__C ;
  assign z_out_2_X3 [4] = _186__X ;
  assign _185__R0 = ( _186__R | _186__C & z_out_2_T [4] ) & { 1{ z_out_2[4] != 1'b1 }} ;
  assign z_out_2_R3 [4] = ( _186__R | _186__C & _185__T ) & { 1{ _185_ != 1'b1 }} ;
  assign _187_ = _186_ | z_out_2[5];
  assign _187__S = 0 ;
  logic [0:0] _186__C0 ;
  logic [0:0] _186__R0 ;
  logic [0:0] _186__X0 ;
  assign _187__T = _186__T | z_out_2_T [5] ;
  assign _186__C0 = _187__C ;
  assign _186__X0 = _187__X ;
  assign z_out_2_C3 [5] = _187__C ;
  assign z_out_2_X3 [5] = _187__X ;
  assign _186__R0 = ( _187__R | _187__C & z_out_2_T [5] ) & { 1{ z_out_2[5] != 1'b1 }} ;
  assign z_out_2_R3 [5] = ( _187__R | _187__C & _186__T ) & { 1{ _186_ != 1'b1 }} ;
  assign _188_ = _187_ | z_out_2[6];
  assign _188__S = 0 ;
  logic [0:0] _187__C0 ;
  logic [0:0] _187__R0 ;
  logic [0:0] _187__X0 ;
  assign _188__T = _187__T | z_out_2_T [6] ;
  assign _187__C0 = _188__C ;
  assign _187__X0 = _188__X ;
  assign z_out_2_C3 [6] = _188__C ;
  assign z_out_2_X3 [6] = _188__X ;
  assign _187__R0 = ( _188__R | _188__C & z_out_2_T [6] ) & { 1{ z_out_2[6] != 1'b1 }} ;
  assign z_out_2_R3 [6] = ( _188__R | _188__C & _187__T ) & { 1{ _187_ != 1'b1 }} ;
  assign _189_ = _188_ | z_out_2[7];
  assign _189__S = 0 ;
  logic [0:0] _188__C0 ;
  logic [0:0] _188__R0 ;
  logic [0:0] _188__X0 ;
  assign _189__T = _188__T | z_out_2_T [7] ;
  assign _188__C0 = _189__C ;
  assign _188__X0 = _189__X ;
  assign z_out_2_C3 [7] = _189__C ;
  assign z_out_2_X3 [7] = _189__X ;
  assign _188__R0 = ( _189__R | _189__C & z_out_2_T [7] ) & { 1{ z_out_2[7] != 1'b1 }} ;
  assign z_out_2_R3 [7] = ( _189__R | _189__C & _188__T ) & { 1{ _188_ != 1'b1 }} ;
  assign _190_ = _189_ | z_out_2[8];
  assign _190__S = 0 ;
  logic [0:0] _189__C0 ;
  logic [0:0] _189__R0 ;
  logic [0:0] _189__X0 ;
  assign _190__T = _189__T | z_out_2_T [8] ;
  assign _189__C0 = _190__C ;
  assign _189__X0 = _190__X ;
  assign z_out_2_C3 [8] = _190__C ;
  assign z_out_2_X3 [8] = _190__X ;
  assign _189__R0 = ( _190__R | _190__C & z_out_2_T [8] ) & { 1{ z_out_2[8] != 1'b1 }} ;
  assign z_out_2_R3 [8] = ( _190__R | _190__C & _189__T ) & { 1{ _189_ != 1'b1 }} ;
  assign _191_ = _190_ | z_out_2[9];
  assign _191__S = 0 ;
  logic [0:0] _190__C0 ;
  logic [0:0] _190__R0 ;
  logic [0:0] _190__X0 ;
  assign _191__T = _190__T | z_out_2_T [9] ;
  assign _190__C0 = _191__C ;
  assign _190__X0 = _191__X ;
  assign z_out_2_C3 [9] = _191__C ;
  assign z_out_2_X3 [9] = _191__X ;
  assign _190__R0 = ( _191__R | _191__C & z_out_2_T [9] ) & { 1{ z_out_2[9] != 1'b1 }} ;
  assign z_out_2_R3 [9] = ( _191__R | _191__C & _190__T ) & { 1{ _190_ != 1'b1 }} ;
  assign _192_ = _191_ | z_out_2[10];
  assign _192__S = 0 ;
  logic [0:0] _191__C0 ;
  logic [0:0] _191__R0 ;
  logic [0:0] _191__X0 ;
  assign _192__T = _191__T | z_out_2_T [10] ;
  assign _191__C0 = _192__C ;
  assign _191__X0 = _192__X ;
  assign z_out_2_C3 [10] = _192__C ;
  assign z_out_2_X3 [10] = _192__X ;
  assign _191__R0 = ( _192__R | _192__C & z_out_2_T [10] ) & { 1{ z_out_2[10] != 1'b1 }} ;
  assign z_out_2_R3 [10] = ( _192__R | _192__C & _191__T ) & { 1{ _191_ != 1'b1 }} ;
  assign _193_ = _192_ | z_out_2[11];
  assign _193__S = 0 ;
  logic [0:0] _192__C0 ;
  logic [0:0] _192__R0 ;
  logic [0:0] _192__X0 ;
  assign _193__T = _192__T | z_out_2_T [11] ;
  assign _192__C0 = _193__C ;
  assign _192__X0 = _193__X ;
  assign z_out_2_C3 [11] = _193__C ;
  assign z_out_2_X3 [11] = _193__X ;
  assign _192__R0 = ( _193__R | _193__C & z_out_2_T [11] ) & { 1{ z_out_2[11] != 1'b1 }} ;
  assign z_out_2_R3 [11] = ( _193__R | _193__C & _192__T ) & { 1{ _192_ != 1'b1 }} ;
  assign _194_ = _193_ | z_out_2[12];
  assign _194__S = 0 ;
  logic [0:0] _193__C0 ;
  logic [0:0] _193__R0 ;
  logic [0:0] _193__X0 ;
  assign _194__T = _193__T | z_out_2_T [12] ;
  assign _193__C0 = _194__C ;
  assign _193__X0 = _194__X ;
  assign z_out_2_C3 [12] = _194__C ;
  assign z_out_2_X3 [12] = _194__X ;
  assign _193__R0 = ( _194__R | _194__C & z_out_2_T [12] ) & { 1{ z_out_2[12] != 1'b1 }} ;
  assign z_out_2_R3 [12] = ( _194__R | _194__C & _193__T ) & { 1{ _193_ != 1'b1 }} ;
  assign _195_ = _194_ | z_out_2[13];
  assign _195__S = 0 ;
  logic [0:0] _194__C0 ;
  logic [0:0] _194__R0 ;
  logic [0:0] _194__X0 ;
  assign _195__T = _194__T | z_out_2_T [13] ;
  assign _194__C0 = _195__C ;
  assign _194__X0 = _195__X ;
  assign z_out_2_C3 [13] = _195__C ;
  assign z_out_2_X3 [13] = _195__X ;
  assign _194__R0 = ( _195__R | _195__C & z_out_2_T [13] ) & { 1{ z_out_2[13] != 1'b1 }} ;
  assign z_out_2_R3 [13] = ( _195__R | _195__C & _194__T ) & { 1{ _194_ != 1'b1 }} ;
  assign _196_ = _195_ | z_out_2[14];
  assign _196__S = 0 ;
  logic [0:0] _195__C0 ;
  logic [0:0] _195__R0 ;
  logic [0:0] _195__X0 ;
  assign _196__T = _195__T | z_out_2_T [14] ;
  assign _195__C0 = _196__C ;
  assign _195__X0 = _196__X ;
  assign z_out_2_C3 [14] = _196__C ;
  assign z_out_2_X3 [14] = _196__X ;
  assign _195__R0 = ( _196__R | _196__C & z_out_2_T [14] ) & { 1{ z_out_2[14] != 1'b1 }} ;
  assign z_out_2_R3 [14] = ( _196__R | _196__C & _195__T ) & { 1{ _195_ != 1'b1 }} ;
  assign _197_ = _196_ | z_out_2[15];
  assign _197__S = 0 ;
  logic [0:0] _196__C0 ;
  logic [0:0] _196__R0 ;
  logic [0:0] _196__X0 ;
  assign _197__T = _196__T | z_out_2_T [15] ;
  assign _196__C0 = _197__C ;
  assign _196__X0 = _197__X ;
  assign z_out_2_C3 [15] = _197__C ;
  assign z_out_2_X3 [15] = _197__X ;
  assign _196__R0 = ( _197__R | _197__C & z_out_2_T [15] ) & { 1{ z_out_2[15] != 1'b1 }} ;
  assign z_out_2_R3 [15] = ( _197__R | _197__C & _196__T ) & { 1{ _196_ != 1'b1 }} ;
  assign _198_ = _197_ | z_out_2[16];
  assign _198__S = 0 ;
  logic [0:0] _197__C0 ;
  logic [0:0] _197__R0 ;
  logic [0:0] _197__X0 ;
  assign _198__T = _197__T | z_out_2_T [16] ;
  assign _197__C0 = _198__C ;
  assign _197__X0 = _198__X ;
  assign z_out_2_C3 [16] = _198__C ;
  assign z_out_2_X3 [16] = _198__X ;
  assign _197__R0 = ( _198__R | _198__C & z_out_2_T [16] ) & { 1{ z_out_2[16] != 1'b1 }} ;
  assign z_out_2_R3 [16] = ( _198__R | _198__C & _197__T ) & { 1{ _197_ != 1'b1 }} ;
  assign _199_ = _198_ | z_out_2[17];
  assign _199__S = 0 ;
  logic [0:0] _198__C0 ;
  logic [0:0] _198__R0 ;
  logic [0:0] _198__X0 ;
  assign _199__T = _198__T | z_out_2_T [17] ;
  assign _198__C0 = _199__C ;
  assign _198__X0 = _199__X ;
  assign z_out_2_C3 [17] = _199__C ;
  assign z_out_2_X3 [17] = _199__X ;
  assign _198__R0 = ( _199__R | _199__C & z_out_2_T [17] ) & { 1{ z_out_2[17] != 1'b1 }} ;
  assign z_out_2_R3 [17] = ( _199__R | _199__C & _198__T ) & { 1{ _198_ != 1'b1 }} ;
  assign _200_ = _199_ | z_out_2[18];
  assign _200__S = 0 ;
  logic [0:0] _199__C0 ;
  logic [0:0] _199__R0 ;
  logic [0:0] _199__X0 ;
  assign _200__T = _199__T | z_out_2_T [18] ;
  assign _199__C0 = _200__C ;
  assign _199__X0 = _200__X ;
  assign z_out_2_C3 [18] = _200__C ;
  assign z_out_2_X3 [18] = _200__X ;
  assign _199__R0 = ( _200__R | _200__C & z_out_2_T [18] ) & { 1{ z_out_2[18] != 1'b1 }} ;
  assign z_out_2_R3 [18] = ( _200__R | _200__C & _199__T ) & { 1{ _199_ != 1'b1 }} ;
  assign _201_ = _200_ | z_out_2[19];
  assign _201__S = 0 ;
  logic [0:0] _200__C0 ;
  logic [0:0] _200__R0 ;
  logic [0:0] _200__X0 ;
  assign _201__T = _200__T | z_out_2_T [19] ;
  assign _200__C0 = _201__C ;
  assign _200__X0 = _201__X ;
  assign z_out_2_C3 [19] = _201__C ;
  assign z_out_2_X3 [19] = _201__X ;
  assign _200__R0 = ( _201__R | _201__C & z_out_2_T [19] ) & { 1{ z_out_2[19] != 1'b1 }} ;
  assign z_out_2_R3 [19] = ( _201__R | _201__C & _200__T ) & { 1{ _200_ != 1'b1 }} ;
  assign _202_ = _201_ | z_out_2[20];
  assign _202__S = 0 ;
  logic [0:0] _201__C0 ;
  logic [0:0] _201__R0 ;
  logic [0:0] _201__X0 ;
  assign _202__T = _201__T | z_out_2_T [20] ;
  assign _201__C0 = _202__C ;
  assign _201__X0 = _202__X ;
  assign z_out_2_C3 [20] = _202__C ;
  assign z_out_2_X3 [20] = _202__X ;
  assign _201__R0 = ( _202__R | _202__C & z_out_2_T [20] ) & { 1{ z_out_2[20] != 1'b1 }} ;
  assign z_out_2_R3 [20] = ( _202__R | _202__C & _201__T ) & { 1{ _201_ != 1'b1 }} ;
  assign _203_ = _202_ | z_out_2[21];
  assign _203__S = 0 ;
  logic [0:0] _202__C0 ;
  logic [0:0] _202__R0 ;
  logic [0:0] _202__X0 ;
  assign _203__T = _202__T | z_out_2_T [21] ;
  assign _202__C0 = _203__C ;
  assign _202__X0 = _203__X ;
  assign z_out_2_C3 [21] = _203__C ;
  assign z_out_2_X3 [21] = _203__X ;
  assign _202__R0 = ( _203__R | _203__C & z_out_2_T [21] ) & { 1{ z_out_2[21] != 1'b1 }} ;
  assign z_out_2_R3 [21] = ( _203__R | _203__C & _202__T ) & { 1{ _202_ != 1'b1 }} ;
  assign _204_ = _203_ | z_out_2[22];
  assign _204__S = 0 ;
  logic [0:0] _203__C0 ;
  logic [0:0] _203__R0 ;
  logic [0:0] _203__X0 ;
  assign _204__T = _203__T | z_out_2_T [22] ;
  assign _203__C0 = _204__C ;
  assign _203__X0 = _204__X ;
  assign z_out_2_C3 [22] = _204__C ;
  assign z_out_2_X3 [22] = _204__X ;
  assign _203__R0 = ( _204__R | _204__C & z_out_2_T [22] ) & { 1{ z_out_2[22] != 1'b1 }} ;
  assign z_out_2_R3 [22] = ( _204__R | _204__C & _203__T ) & { 1{ _203_ != 1'b1 }} ;
  assign _205_ = _204_ | z_out_2[23];
  assign _205__S = 0 ;
  logic [0:0] _204__C0 ;
  logic [0:0] _204__R0 ;
  logic [0:0] _204__X0 ;
  assign _205__T = _204__T | z_out_2_T [23] ;
  assign _204__C0 = _205__C ;
  assign _204__X0 = _205__X ;
  assign z_out_2_C3 [23] = _205__C ;
  assign z_out_2_X3 [23] = _205__X ;
  assign _204__R0 = ( _205__R | _205__C & z_out_2_T [23] ) & { 1{ z_out_2[23] != 1'b1 }} ;
  assign z_out_2_R3 [23] = ( _205__R | _205__C & _204__T ) & { 1{ _204_ != 1'b1 }} ;
  assign _206_ = _205_ | z_out_2[24];
  assign _206__S = 0 ;
  logic [0:0] _205__C0 ;
  logic [0:0] _205__R0 ;
  logic [0:0] _205__X0 ;
  assign _206__T = _205__T | z_out_2_T [24] ;
  assign _205__C0 = _206__C ;
  assign _205__X0 = _206__X ;
  assign z_out_2_C3 [24] = _206__C ;
  assign z_out_2_X3 [24] = _206__X ;
  assign _205__R0 = ( _206__R | _206__C & z_out_2_T [24] ) & { 1{ z_out_2[24] != 1'b1 }} ;
  assign z_out_2_R3 [24] = ( _206__R | _206__C & _205__T ) & { 1{ _205_ != 1'b1 }} ;
  assign _207_ = _206_ | z_out_2[25];
  assign _207__S = 0 ;
  logic [0:0] _206__C0 ;
  logic [0:0] _206__R0 ;
  logic [0:0] _206__X0 ;
  assign _207__T = _206__T | z_out_2_T [25] ;
  assign _206__C0 = _207__C ;
  assign _206__X0 = _207__X ;
  assign z_out_2_C3 [25] = _207__C ;
  assign z_out_2_X3 [25] = _207__X ;
  assign _206__R0 = ( _207__R | _207__C & z_out_2_T [25] ) & { 1{ z_out_2[25] != 1'b1 }} ;
  assign z_out_2_R3 [25] = ( _207__R | _207__C & _206__T ) & { 1{ _206_ != 1'b1 }} ;
  assign _208_ = _207_ | z_out_2[26];
  assign _208__S = 0 ;
  logic [0:0] _207__C0 ;
  logic [0:0] _207__R0 ;
  logic [0:0] _207__X0 ;
  assign _208__T = _207__T | z_out_2_T [26] ;
  assign _207__C0 = _208__C ;
  assign _207__X0 = _208__X ;
  assign z_out_2_C3 [26] = _208__C ;
  assign z_out_2_X3 [26] = _208__X ;
  assign _207__R0 = ( _208__R | _208__C & z_out_2_T [26] ) & { 1{ z_out_2[26] != 1'b1 }} ;
  assign z_out_2_R3 [26] = ( _208__R | _208__C & _207__T ) & { 1{ _207_ != 1'b1 }} ;
  assign _209_ = _208_ | z_out_2[27];
  assign _209__S = 0 ;
  logic [0:0] _208__C0 ;
  logic [0:0] _208__R0 ;
  logic [0:0] _208__X0 ;
  assign _209__T = _208__T | z_out_2_T [27] ;
  assign _208__C0 = _209__C ;
  assign _208__X0 = _209__X ;
  assign z_out_2_C3 [27] = _209__C ;
  assign z_out_2_X3 [27] = _209__X ;
  assign _208__R0 = ( _209__R | _209__C & z_out_2_T [27] ) & { 1{ z_out_2[27] != 1'b1 }} ;
  assign z_out_2_R3 [27] = ( _209__R | _209__C & _208__T ) & { 1{ _208_ != 1'b1 }} ;
  assign _210_ = _209_ | z_out_2[28];
  assign _210__S = 0 ;
  logic [0:0] _209__C0 ;
  logic [0:0] _209__R0 ;
  logic [0:0] _209__X0 ;
  assign _210__T = _209__T | z_out_2_T [28] ;
  assign _209__C0 = _210__C ;
  assign _209__X0 = _210__X ;
  assign z_out_2_C3 [28] = _210__C ;
  assign z_out_2_X3 [28] = _210__X ;
  assign _209__R0 = ( _210__R | _210__C & z_out_2_T [28] ) & { 1{ z_out_2[28] != 1'b1 }} ;
  assign z_out_2_R3 [28] = ( _210__R | _210__C & _209__T ) & { 1{ _209_ != 1'b1 }} ;
  assign _211_ = _210_ | z_out_2[29];
  assign _211__S = 0 ;
  logic [0:0] _210__C0 ;
  logic [0:0] _210__R0 ;
  logic [0:0] _210__X0 ;
  assign _211__T = _210__T | z_out_2_T [29] ;
  assign _210__C0 = _211__C ;
  assign _210__X0 = _211__X ;
  assign z_out_2_C3 [29] = _211__C ;
  assign z_out_2_X3 [29] = _211__X ;
  assign _210__R0 = ( _211__R | _211__C & z_out_2_T [29] ) & { 1{ z_out_2[29] != 1'b1 }} ;
  assign z_out_2_R3 [29] = ( _211__R | _211__C & _210__T ) & { 1{ _210_ != 1'b1 }} ;
  assign _212_ = _211_ | _122_;
  assign _212__S = 0 ;
  logic [0:0] _211__C0 ;
  logic [0:0] _211__R0 ;
  logic [0:0] _211__X0 ;
  logic [0:0] _122__C0 ;
  logic [0:0] _122__R0 ;
  logic [0:0] _122__X0 ;
  assign _212__T = _211__T | _122__T ;
  assign _211__C0 = _212__C ;
  assign _211__X0 = _212__X ;
  assign _122__C0 = _212__C ;
  assign _122__X0 = _212__X ;
  assign _211__R0 = ( _212__R | _212__C & _122__T ) & { 1{ _122_ != 1'b1 }} ;
  assign _122__R0 = ( _212__R | _212__C & _211__T ) & { 1{ _211_ != 1'b1 }} ;
  assign _213_ = IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva[25] | _123_;
  assign _213__S = 0 ;
  logic [0:0] _123__C0 ;
  logic [0:0] _123__R0 ;
  logic [0:0] _123__X0 ;
  assign _213__T = IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_T [25] | _123__T ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C2 [25] = _213__C ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X2 [25] = _213__X ;
  assign _123__C0 = _213__C ;
  assign _123__X0 = _213__X ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R2 [25] = ( _213__R | _213__C & _123__T ) & { 1{ _123_ != 1'b1 }} ;
  assign _123__R0 = ( _213__R | _213__C & IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_T [25] ) & { 1{ IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva[25] != 1'b1 }} ;
  assign _214_ = IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva[16] | IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva;
  assign _214__S = 0 ;
  assign { IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R1 [0], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R1 [1], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R1 [2], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R1 [3], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R1 [4], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R1 [5], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R1 [6], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R1 [7], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R1 [8], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R1 [9], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R1 [10], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R1 [11], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R1 [12], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R1 [13], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R1 [14], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R1 [15], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R1 [33:33] } = 0;
  assign { IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X1 [0], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X1 [1], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X1 [2], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X1 [3], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X1 [4], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X1 [5], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X1 [6], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X1 [7], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X1 [8], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X1 [9], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X1 [10], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X1 [11], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X1 [12], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X1 [13], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X1 [14], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X1 [15], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X1 [33:33] } = 0;
  assign { IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C1 [0], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C1 [1], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C1 [2], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C1 [3], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C1 [4], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C1 [5], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C1 [6], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C1 [7], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C1 [8], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C1 [9], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C1 [10], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C1 [11], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C1 [12], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C1 [13], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C1 [14], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C1 [15], IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C1 [33:33] } = 0;
  logic [33:0] IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C2 ;
  logic [33:0] IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R2 ;
  logic [33:0] IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X2 ;
  logic [0:0] IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_C0 ;
  logic [0:0] IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_R0 ;
  logic [0:0] IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_X0 ;
  assign _214__T = IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_T [16] | IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_T ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C2 [16] = _214__C ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X2 [16] = _214__X ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_C0 = _214__C ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_X0 = _214__X ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R2 [16] = ( _214__R | _214__C & IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_T ) & { 1{ IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva != 1'b1 }} ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_R0 = ( _214__R | _214__C & IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_T [16] ) & { 1{ IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva[16] != 1'b1 }} ;
  assign _215_ = _125_ | IntShiftRight_33U_5U_17U_obits_fixed_nor_ovfl_sva;
  assign _215__S = 0 ;
  logic [0:0] _125__C0 ;
  logic [0:0] _125__R0 ;
  logic [0:0] _125__X0 ;
  logic [0:0] IntShiftRight_33U_5U_17U_obits_fixed_nor_ovfl_sva_C0 ;
  logic [0:0] IntShiftRight_33U_5U_17U_obits_fixed_nor_ovfl_sva_R0 ;
  logic [0:0] IntShiftRight_33U_5U_17U_obits_fixed_nor_ovfl_sva_X0 ;
  assign _215__T = _125__T | IntShiftRight_33U_5U_17U_obits_fixed_nor_ovfl_sva_T ;
  assign _125__C0 = _215__C ;
  assign _125__X0 = _215__X ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_nor_ovfl_sva_C0 = _215__C ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_nor_ovfl_sva_X0 = _215__X ;
  assign _125__R0 = ( _215__R | _215__C & IntShiftRight_33U_5U_17U_obits_fixed_nor_ovfl_sva_T ) & { 1{ IntShiftRight_33U_5U_17U_obits_fixed_nor_ovfl_sva != 1'b1 }} ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_nor_ovfl_sva_R0 = ( _215__R | _215__C & _125__T ) & { 1{ _125_ != 1'b1 }} ;
  assign _216_ = _211_ | _126_;
  assign _216__S = 0 ;
  logic [0:0] _211__C1 ;
  logic [0:0] _211__R1 ;
  logic [0:0] _211__X1 ;
  logic [0:0] _126__C0 ;
  logic [0:0] _126__R0 ;
  logic [0:0] _126__X0 ;
  assign _216__T = _211__T | _126__T ;
  assign _211__C1 = _216__C ;
  assign _211__X1 = _216__X ;
  assign _126__C0 = _216__C ;
  assign _126__X0 = _216__X ;
  assign _211__R1 = ( _216__R | _216__C & _126__T ) & { 1{ _126_ != 1'b1 }} ;
  assign _126__R0 = ( _216__R | _216__C & _211__T ) & { 1{ _211_ != 1'b1 }} ;
  assign _217_ = IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva[33] | _128_;
  assign _217__S = 0 ;
  logic [0:0] _128__C0 ;
  logic [0:0] _128__R0 ;
  logic [0:0] _128__X0 ;
  assign _217__T = IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_T [33] | _128__T ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C2 [33] = _217__C ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X2 [33] = _217__X ;
  assign _128__C0 = _217__C ;
  assign _128__X0 = _217__X ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R2 [33] = ( _217__R | _217__C & _128__T ) & { 1{ _128_ != 1'b1 }} ;
  assign _128__R0 = ( _217__R | _217__C & IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_T [33] ) & { 1{ IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva[33] != 1'b1 }} ;
  assign _218_ = IsDenorm_5U_10U_land_lpi_1_dfm | IsInf_5U_10U_land_lpi_1_dfm;
  assign _218__S = 0 ;
  logic [0:0] IsDenorm_5U_10U_land_lpi_1_dfm_C4 ;
  logic [0:0] IsDenorm_5U_10U_land_lpi_1_dfm_R4 ;
  logic [0:0] IsDenorm_5U_10U_land_lpi_1_dfm_X4 ;
  logic [0:0] IsInf_5U_10U_land_lpi_1_dfm_C4 ;
  logic [0:0] IsInf_5U_10U_land_lpi_1_dfm_R4 ;
  logic [0:0] IsInf_5U_10U_land_lpi_1_dfm_X4 ;
  assign _218__T = IsDenorm_5U_10U_land_lpi_1_dfm_T | IsInf_5U_10U_land_lpi_1_dfm_T ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_C4 = _218__C ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_X4 = _218__X ;
  assign IsInf_5U_10U_land_lpi_1_dfm_C4 = _218__C ;
  assign IsInf_5U_10U_land_lpi_1_dfm_X4 = _218__X ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_R4 = ( _218__R | _218__C & IsInf_5U_10U_land_lpi_1_dfm_T ) & { 1{ IsInf_5U_10U_land_lpi_1_dfm != 1'b1 }} ;
  assign IsInf_5U_10U_land_lpi_1_dfm_R4 = ( _218__R | _218__C & IsDenorm_5U_10U_land_lpi_1_dfm_T ) & { 1{ IsDenorm_5U_10U_land_lpi_1_dfm != 1'b1 }} ;
  assign _219_ = IsDenorm_5U_10U_or_tmp | _130_;
  assign _219__S = 0 ;
  logic [0:0] IsDenorm_5U_10U_or_tmp_C2 ;
  logic [0:0] IsDenorm_5U_10U_or_tmp_R2 ;
  logic [0:0] IsDenorm_5U_10U_or_tmp_X2 ;
  logic [0:0] _130__C0 ;
  logic [0:0] _130__R0 ;
  logic [0:0] _130__X0 ;
  assign _219__T = IsDenorm_5U_10U_or_tmp_T | _130__T ;
  assign IsDenorm_5U_10U_or_tmp_C2 = _219__C ;
  assign IsDenorm_5U_10U_or_tmp_X2 = _219__X ;
  assign _130__C0 = _219__C ;
  assign _130__X0 = _219__X ;
  assign IsDenorm_5U_10U_or_tmp_R2 = ( _219__R | _219__C & _130__T ) & { 1{ _130_ != 1'b1 }} ;
  assign _130__R0 = ( _219__R | _219__C & IsDenorm_5U_10U_or_tmp_T ) & { 1{ IsDenorm_5U_10U_or_tmp != 1'b1 }} ;
  assign or_65_nl = nor_17_cse | nor_tmp_11;
  assign or_65_nl_S = 0 ;
  logic [0:0] nor_17_cse_C18 ;
  logic [0:0] nor_17_cse_R18 ;
  logic [0:0] nor_17_cse_X18 ;
  logic [0:0] nor_tmp_11_C18 ;
  logic [0:0] nor_tmp_11_R18 ;
  logic [0:0] nor_tmp_11_X18 ;
  assign or_65_nl_T = nor_17_cse_T | nor_tmp_11_T ;
  assign nor_17_cse_C18 = or_65_nl_C ;
  assign nor_17_cse_X18 = or_65_nl_X ;
  assign nor_tmp_11_C18 = or_65_nl_C ;
  assign nor_tmp_11_X18 = or_65_nl_X ;
  assign nor_17_cse_R18 = ( or_65_nl_R | or_65_nl_C & nor_tmp_11_T ) & { 1{ nor_tmp_11 != 1'b1 }} ;
  assign nor_tmp_11_R18 = ( or_65_nl_R | or_65_nl_C & nor_17_cse_T ) & { 1{ nor_17_cse != 1'b1 }} ;
  assign _220_ = _131_ | _118_;
  assign _220__S = 0 ;
  logic [0:0] _131__C1 ;
  logic [0:0] _131__R1 ;
  logic [0:0] _131__X1 ;
  logic [0:0] _118__C2 ;
  logic [0:0] _118__R2 ;
  logic [0:0] _118__X2 ;
  assign _220__T = _131__T | _118__T ;
  assign _131__C1 = _220__C ;
  assign _131__X1 = _220__X ;
  assign _118__C2 = _220__C ;
  assign _118__X2 = _220__X ;
  assign _131__R1 = ( _220__R | _220__C & _118__T ) & { 1{ _118_ != 1'b1 }} ;
  assign _118__R2 = ( _220__R | _220__C & _131__T ) & { 1{ _131_ != 1'b1 }} ;
  assign or_tmp_15 = _220_ | chn_data_out_rsci_bawt;
  assign or_tmp_15_S = 0 ;
  logic [0:0] _220__C0 ;
  logic [0:0] _220__R0 ;
  logic [0:0] _220__X0 ;
  logic [0:0] chn_data_out_rsci_bawt_C4 ;
  logic [0:0] chn_data_out_rsci_bawt_R4 ;
  logic [0:0] chn_data_out_rsci_bawt_X4 ;
  assign or_tmp_15_T = _220__T | chn_data_out_rsci_bawt_T ;
  assign _220__C0 = or_tmp_15_C ;
  assign _220__X0 = or_tmp_15_X ;
  assign chn_data_out_rsci_bawt_C4 = or_tmp_15_C ;
  assign chn_data_out_rsci_bawt_X4 = or_tmp_15_X ;
  assign _220__R0 = ( or_tmp_15_R | or_tmp_15_C & chn_data_out_rsci_bawt_T ) & { 1{ chn_data_out_rsci_bawt != 1'b1 }} ;
  assign chn_data_out_rsci_bawt_R4 = ( or_tmp_15_R | or_tmp_15_C & _220__T ) & { 1{ _220_ != 1'b1 }} ;
  assign _221_ = io_read_cfg_precision_rsc_svs_st_3[1] | _133_;
  assign _221__S = 0 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_C4 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_R4 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_X4 ;
  logic [0:0] _133__C1 ;
  logic [0:0] _133__R1 ;
  logic [0:0] _133__X1 ;
  assign _221__T = io_read_cfg_precision_rsc_svs_st_3_T [1] | _133__T ;
  assign io_read_cfg_precision_rsc_svs_st_3_C4 [1] = _221__C ;
  assign io_read_cfg_precision_rsc_svs_st_3_X4 [1] = _221__X ;
  assign _133__C1 = _221__C ;
  assign _133__X1 = _221__X ;
  assign io_read_cfg_precision_rsc_svs_st_3_R4 [1] = ( _221__R | _221__C & _133__T ) & { 1{ _133_ != 1'b1 }} ;
  assign _133__R1 = ( _221__R | _221__C & io_read_cfg_precision_rsc_svs_st_3_T [1] ) & { 1{ io_read_cfg_precision_rsc_svs_st_3[1] != 1'b1 }} ;
  assign _222_ = _221_ | _118_;
  assign _222__S = 0 ;
  logic [0:0] _221__C1 ;
  logic [0:0] _221__R1 ;
  logic [0:0] _221__X1 ;
  logic [0:0] _118__C3 ;
  logic [0:0] _118__R3 ;
  logic [0:0] _118__X3 ;
  assign _222__T = _221__T | _118__T ;
  assign _221__C1 = _222__C ;
  assign _221__X1 = _222__X ;
  assign _118__C3 = _222__C ;
  assign _118__X3 = _222__X ;
  assign _221__R1 = ( _222__R | _222__C & _118__T ) & { 1{ _118_ != 1'b1 }} ;
  assign _118__R3 = ( _222__R | _222__C & _221__T ) & { 1{ _221_ != 1'b1 }} ;
  assign _223_ = _222_ | chn_data_out_rsci_bawt;
  assign _223__S = 0 ;
  logic [0:0] _222__C0 ;
  logic [0:0] _222__R0 ;
  logic [0:0] _222__X0 ;
  logic [0:0] chn_data_out_rsci_bawt_C5 ;
  logic [0:0] chn_data_out_rsci_bawt_R5 ;
  logic [0:0] chn_data_out_rsci_bawt_X5 ;
  assign _223__T = _222__T | chn_data_out_rsci_bawt_T ;
  assign _222__C0 = _223__C ;
  assign _222__X0 = _223__X ;
  assign chn_data_out_rsci_bawt_C5 = _223__C ;
  assign chn_data_out_rsci_bawt_X5 = _223__X ;
  assign _222__R0 = ( _223__R | _223__C & chn_data_out_rsci_bawt_T ) & { 1{ chn_data_out_rsci_bawt != 1'b1 }} ;
  assign chn_data_out_rsci_bawt_R5 = ( _223__R | _223__C & _222__T ) & { 1{ _222_ != 1'b1 }} ;
  assign _224_ = io_read_cfg_precision_rsc_svs_st_3[0] | nor_13_cse;
  assign _224__S = 0 ;
  logic [0:0] nor_13_cse_C1 ;
  logic [0:0] nor_13_cse_R1 ;
  logic [0:0] nor_13_cse_X1 ;
  assign _224__T = io_read_cfg_precision_rsc_svs_st_3_T [0] | nor_13_cse_T ;
  assign io_read_cfg_precision_rsc_svs_st_3_C4 [0] = _224__C ;
  assign io_read_cfg_precision_rsc_svs_st_3_X4 [0] = _224__X ;
  assign nor_13_cse_C1 = _224__C ;
  assign nor_13_cse_X1 = _224__X ;
  assign io_read_cfg_precision_rsc_svs_st_3_R4 [0] = ( _224__R | _224__C & nor_13_cse_T ) & { 1{ nor_13_cse != 1'b1 }} ;
  assign nor_13_cse_R1 = ( _224__R | _224__C & io_read_cfg_precision_rsc_svs_st_3_T [0] ) & { 1{ io_read_cfg_precision_rsc_svs_st_3[0] != 1'b1 }} ;
  assign _225_ = _224_ | chn_data_out_rsci_bawt;
  assign _225__S = 0 ;
  logic [0:0] _224__C1 ;
  logic [0:0] _224__R1 ;
  logic [0:0] _224__X1 ;
  logic [0:0] chn_data_out_rsci_bawt_C6 ;
  logic [0:0] chn_data_out_rsci_bawt_R6 ;
  logic [0:0] chn_data_out_rsci_bawt_X6 ;
  assign _225__T = _224__T | chn_data_out_rsci_bawt_T ;
  assign _224__C1 = _225__C ;
  assign _224__X1 = _225__X ;
  assign chn_data_out_rsci_bawt_C6 = _225__C ;
  assign chn_data_out_rsci_bawt_X6 = _225__X ;
  assign _224__R1 = ( _225__R | _225__C & chn_data_out_rsci_bawt_T ) & { 1{ chn_data_out_rsci_bawt != 1'b1 }} ;
  assign chn_data_out_rsci_bawt_R6 = ( _225__R | _225__C & _224__T ) & { 1{ _224_ != 1'b1 }} ;
  assign or_83_nl = _225_ | _118_;
  assign or_83_nl_S = 0 ;
  logic [0:0] _225__C0 ;
  logic [0:0] _225__R0 ;
  logic [0:0] _225__X0 ;
  logic [0:0] _118__C4 ;
  logic [0:0] _118__R4 ;
  logic [0:0] _118__X4 ;
  assign or_83_nl_T = _225__T | _118__T ;
  assign _225__C0 = or_83_nl_C ;
  assign _225__X0 = or_83_nl_X ;
  assign _118__C4 = or_83_nl_C ;
  assign _118__X4 = or_83_nl_X ;
  assign _225__R0 = ( or_83_nl_R | or_83_nl_C & _118__T ) & { 1{ _118_ != 1'b1 }} ;
  assign _118__R4 = ( or_83_nl_R | or_83_nl_C & _225__T ) & { 1{ _225_ != 1'b1 }} ;
  assign chn_data_in_rsci_ld_core_psct_mx0c0 = main_stage_en_1 | fsm_output[0];
  assign chn_data_in_rsci_ld_core_psct_mx0c0_S = 0 ;
  logic [0:0] main_stage_en_1_C2 ;
  logic [0:0] main_stage_en_1_R2 ;
  logic [0:0] main_stage_en_1_X2 ;
  assign chn_data_in_rsci_ld_core_psct_mx0c0_T = main_stage_en_1_T | fsm_output_T [0] ;
  assign main_stage_en_1_C2 = chn_data_in_rsci_ld_core_psct_mx0c0_C ;
  assign main_stage_en_1_X2 = chn_data_in_rsci_ld_core_psct_mx0c0_X ;
  assign fsm_output_C4 [0] = chn_data_in_rsci_ld_core_psct_mx0c0_C ;
  assign fsm_output_X4 [0] = chn_data_in_rsci_ld_core_psct_mx0c0_X ;
  assign main_stage_en_1_R2 = ( chn_data_in_rsci_ld_core_psct_mx0c0_R | chn_data_in_rsci_ld_core_psct_mx0c0_C & fsm_output_T [0] ) & { 1{ fsm_output[0] != 1'b1 }} ;
  assign fsm_output_R4 [0] = ( chn_data_in_rsci_ld_core_psct_mx0c0_R | chn_data_in_rsci_ld_core_psct_mx0c0_C & main_stage_en_1_T ) & { 1{ main_stage_en_1 != 1'b1 }} ;
  assign _226_ = and_dcpl_18 | and_dcpl_19;
  assign _226__S = 0 ;
  logic [0:0] and_dcpl_18_C1 ;
  logic [0:0] and_dcpl_18_R1 ;
  logic [0:0] and_dcpl_18_X1 ;
  logic [0:0] and_dcpl_19_C1 ;
  logic [0:0] and_dcpl_19_R1 ;
  logic [0:0] and_dcpl_19_X1 ;
  assign _226__T = and_dcpl_18_T | and_dcpl_19_T ;
  assign and_dcpl_18_C1 = _226__C ;
  assign and_dcpl_18_X1 = _226__X ;
  assign and_dcpl_19_C1 = _226__C ;
  assign and_dcpl_19_X1 = _226__X ;
  assign and_dcpl_18_R1 = ( _226__R | _226__C & and_dcpl_19_T ) & { 1{ and_dcpl_19 != 1'b1 }} ;
  assign and_dcpl_19_R1 = ( _226__R | _226__C & and_dcpl_18_T ) & { 1{ and_dcpl_18 != 1'b1 }} ;
  assign _227_ = or_tmp_80 | main_stage_v_1_mx0c1;
  assign _227__S = 0 ;
  logic [0:0] or_tmp_80_C0 ;
  logic [0:0] or_tmp_80_R0 ;
  logic [0:0] or_tmp_80_X0 ;
  logic [0:0] main_stage_v_1_mx0c1_C1 ;
  logic [0:0] main_stage_v_1_mx0c1_R1 ;
  logic [0:0] main_stage_v_1_mx0c1_X1 ;
  assign _227__T = or_tmp_80_T | main_stage_v_1_mx0c1_T ;
  assign or_tmp_80_C0 = _227__C ;
  assign or_tmp_80_X0 = _227__X ;
  assign main_stage_v_1_mx0c1_C1 = _227__C ;
  assign main_stage_v_1_mx0c1_X1 = _227__X ;
  assign or_tmp_80_R0 = ( _227__R | _227__C & main_stage_v_1_mx0c1_T ) & { 1{ main_stage_v_1_mx0c1 != 1'b1 }} ;
  assign main_stage_v_1_mx0c1_R1 = ( _227__R | _227__C & or_tmp_80_T ) & { 1{ or_tmp_80 != 1'b1 }} ;
  assign _228_ = _059_ | main_stage_v_2_mx0c1;
  assign _228__S = 0 ;
  logic [0:0] _059__C0 ;
  logic [0:0] _059__R0 ;
  logic [0:0] _059__X0 ;
  logic [0:0] main_stage_v_2_mx0c1_C1 ;
  logic [0:0] main_stage_v_2_mx0c1_R1 ;
  logic [0:0] main_stage_v_2_mx0c1_X1 ;
  assign _228__T = _059__T | main_stage_v_2_mx0c1_T ;
  assign _059__C0 = _228__C ;
  assign _059__X0 = _228__X ;
  assign main_stage_v_2_mx0c1_C1 = _228__C ;
  assign main_stage_v_2_mx0c1_X1 = _228__X ;
  assign _059__R0 = ( _228__R | _228__C & main_stage_v_2_mx0c1_T ) & { 1{ main_stage_v_2_mx0c1 != 1'b1 }} ;
  assign main_stage_v_2_mx0c1_R1 = ( _228__R | _228__C & _059__T ) & { 1{ _059_ != 1'b1 }} ;
  assign _229_ = FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl | IsInf_5U_10U_land_lpi_1_dfm;
  assign _229__S = 0 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_C0 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_R0 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_X0 ;
  logic [0:0] IsInf_5U_10U_land_lpi_1_dfm_C5 ;
  logic [0:0] IsInf_5U_10U_land_lpi_1_dfm_R5 ;
  logic [0:0] IsInf_5U_10U_land_lpi_1_dfm_X5 ;
  assign _229__T = FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_T | IsInf_5U_10U_land_lpi_1_dfm_T ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_C0 = _229__C ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_X0 = _229__X ;
  assign IsInf_5U_10U_land_lpi_1_dfm_C5 = _229__C ;
  assign IsInf_5U_10U_land_lpi_1_dfm_X5 = _229__X ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_R0 = ( _229__R | _229__C & IsInf_5U_10U_land_lpi_1_dfm_T ) & { 1{ IsInf_5U_10U_land_lpi_1_dfm != 1'b1 }} ;
  assign IsInf_5U_10U_land_lpi_1_dfm_R5 = ( _229__R | _229__C & FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_T ) & { 1{ FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl != 1'b1 }} ;
  assign _230_ = _229_ | IsNaN_5U_10U_land_lpi_1_dfm;
  assign _230__S = 0 ;
  logic [0:0] _229__C0 ;
  logic [0:0] _229__R0 ;
  logic [0:0] _229__X0 ;
  logic [0:0] IsNaN_5U_10U_land_lpi_1_dfm_C0 ;
  logic [0:0] IsNaN_5U_10U_land_lpi_1_dfm_R0 ;
  logic [0:0] IsNaN_5U_10U_land_lpi_1_dfm_X0 ;
  assign _230__T = _229__T | IsNaN_5U_10U_land_lpi_1_dfm_T ;
  assign _229__C0 = _230__C ;
  assign _229__X0 = _230__X ;
  assign IsNaN_5U_10U_land_lpi_1_dfm_C0 = _230__C ;
  assign IsNaN_5U_10U_land_lpi_1_dfm_X0 = _230__X ;
  assign _229__R0 = ( _230__R | _230__C & IsNaN_5U_10U_land_lpi_1_dfm_T ) & { 1{ IsNaN_5U_10U_land_lpi_1_dfm != 1'b1 }} ;
  assign IsNaN_5U_10U_land_lpi_1_dfm_R0 = ( _230__R | _230__C & _229__T ) & { 1{ _229_ != 1'b1 }} ;
  assign _231_ = IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva[0] | IntShiftRight_25U_5U_9U_obits_fixed_nor_ovfl_sva;
  assign _231__S = 0 ;
  logic [0:0] IntShiftRight_25U_5U_9U_obits_fixed_nor_ovfl_sva_C0 ;
  logic [0:0] IntShiftRight_25U_5U_9U_obits_fixed_nor_ovfl_sva_R0 ;
  logic [0:0] IntShiftRight_25U_5U_9U_obits_fixed_nor_ovfl_sva_X0 ;
  assign _231__T = IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_T [0] | IntShiftRight_25U_5U_9U_obits_fixed_nor_ovfl_sva_T ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C2 [0] = _231__C ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X2 [0] = _231__X ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_nor_ovfl_sva_C0 = _231__C ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_nor_ovfl_sva_X0 = _231__X ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R2 [0] = ( _231__R | _231__C & IntShiftRight_25U_5U_9U_obits_fixed_nor_ovfl_sva_T ) & { 1{ IntShiftRight_25U_5U_9U_obits_fixed_nor_ovfl_sva != 1'b1 }} ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_nor_ovfl_sva_R0 = ( _231__R | _231__C & IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_T [0] ) & { 1{ IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva[0] != 1'b1 }} ;
  assign _232_ = _141_ | IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva;
  assign _232__S = 0 ;
  logic [0:0] _141__C0 ;
  logic [0:0] _141__R0 ;
  logic [0:0] _141__X0 ;
  logic [0:0] IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva_C0 ;
  logic [0:0] IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva_R0 ;
  logic [0:0] IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva_X0 ;
  assign _232__T = _141__T | IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva_T ;
  assign _141__C0 = _232__C ;
  assign _141__X0 = _232__X ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva_C0 = _232__C ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva_X0 = _232__X ;
  assign _141__R0 = ( _232__R | _232__C & IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva_T ) & { 1{ IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva != 1'b1 }} ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva_R0 = ( _232__R | _232__C & _141__T ) & { 1{ _141_ != 1'b1 }} ;
  assign _233_ = IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva[0] | IntShiftRight_33U_5U_17U_obits_fixed_nor_ovfl_sva;
  assign _233__S = 0 ;
  logic [0:0] IntShiftRight_33U_5U_17U_obits_fixed_nor_ovfl_sva_C1 ;
  logic [0:0] IntShiftRight_33U_5U_17U_obits_fixed_nor_ovfl_sva_R1 ;
  logic [0:0] IntShiftRight_33U_5U_17U_obits_fixed_nor_ovfl_sva_X1 ;
  assign _233__T = IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_T [0] | IntShiftRight_33U_5U_17U_obits_fixed_nor_ovfl_sva_T ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C2 [0] = _233__C ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X2 [0] = _233__X ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_nor_ovfl_sva_C1 = _233__C ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_nor_ovfl_sva_X1 = _233__X ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R2 [0] = ( _233__R | _233__C & IntShiftRight_33U_5U_17U_obits_fixed_nor_ovfl_sva_T ) & { 1{ IntShiftRight_33U_5U_17U_obits_fixed_nor_ovfl_sva != 1'b1 }} ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_nor_ovfl_sva_R1 = ( _233__R | _233__C & IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_T [0] ) & { 1{ IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva[0] != 1'b1 }} ;
  assign _234_ = _142_ | IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva;
  assign _234__S = 0 ;
  logic [0:0] _142__C0 ;
  logic [0:0] _142__R0 ;
  logic [0:0] _142__X0 ;
  logic [0:0] IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_C1 ;
  logic [0:0] IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_R1 ;
  logic [0:0] IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_X1 ;
  assign _234__T = _142__T | IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_T ;
  assign _142__C0 = _234__C ;
  assign _142__X0 = _234__X ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_C1 = _234__C ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_X1 = _234__X ;
  assign _142__R0 = ( _234__R | _234__C & IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_T ) & { 1{ IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva != 1'b1 }} ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_R1 = ( _234__R | _234__C & _142__T ) & { 1{ _142_ != 1'b1 }} ;
  assign _235_ = IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva[0] | IntShiftRight_25U_5U_9U_1_obits_fixed_nor_ovfl_sva;
  assign _235__S = 0 ;
  logic [0:0] IntShiftRight_25U_5U_9U_1_obits_fixed_nor_ovfl_sva_C0 ;
  logic [0:0] IntShiftRight_25U_5U_9U_1_obits_fixed_nor_ovfl_sva_R0 ;
  logic [0:0] IntShiftRight_25U_5U_9U_1_obits_fixed_nor_ovfl_sva_X0 ;
  assign _235__T = IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_T [0] | IntShiftRight_25U_5U_9U_1_obits_fixed_nor_ovfl_sva_T ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C2 [0] = _235__C ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X2 [0] = _235__X ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_nor_ovfl_sva_C0 = _235__C ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_nor_ovfl_sva_X0 = _235__X ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R2 [0] = ( _235__R | _235__C & IntShiftRight_25U_5U_9U_1_obits_fixed_nor_ovfl_sva_T ) & { 1{ IntShiftRight_25U_5U_9U_1_obits_fixed_nor_ovfl_sva != 1'b1 }} ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_nor_ovfl_sva_R0 = ( _235__R | _235__C & IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_T [0] ) & { 1{ IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva[0] != 1'b1 }} ;
  assign _236_ = _143_ | IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva;
  assign _236__S = 0 ;
  logic [0:0] _143__C0 ;
  logic [0:0] _143__R0 ;
  logic [0:0] _143__X0 ;
  logic [0:0] IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva_C0 ;
  logic [0:0] IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva_R0 ;
  logic [0:0] IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva_X0 ;
  assign _236__T = _143__T | IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva_T ;
  assign _143__C0 = _236__C ;
  assign _143__X0 = _236__X ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva_C0 = _236__C ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva_X0 = _236__X ;
  assign _143__R0 = ( _236__R | _236__C & IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva_T ) & { 1{ IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva != 1'b1 }} ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva_R0 = ( _236__R | _236__C & _143__T ) & { 1{ _143_ != 1'b1 }} ;
  assign or_2_nl = chn_data_in_rsci_bawt | _144_;
  assign or_2_nl_S = 0 ;
  logic [0:0] chn_data_in_rsci_bawt_C6 ;
  logic [0:0] chn_data_in_rsci_bawt_R6 ;
  logic [0:0] chn_data_in_rsci_bawt_X6 ;
  logic [0:0] _144__C0 ;
  logic [0:0] _144__R0 ;
  logic [0:0] _144__X0 ;
  assign or_2_nl_T = chn_data_in_rsci_bawt_T | _144__T ;
  assign chn_data_in_rsci_bawt_C6 = or_2_nl_C ;
  assign chn_data_in_rsci_bawt_X6 = or_2_nl_X ;
  assign _144__C0 = or_2_nl_C ;
  assign _144__X0 = or_2_nl_X ;
  assign chn_data_in_rsci_bawt_R6 = ( or_2_nl_R | or_2_nl_C & _144__T ) & { 1{ _144_ != 1'b1 }} ;
  assign _144__R0 = ( or_2_nl_R | or_2_nl_C & chn_data_in_rsci_bawt_T ) & { 1{ chn_data_in_rsci_bawt != 1'b1 }} ;
  assign _237_ = _131_ | _117_;
  assign _237__S = 0 ;
  logic [0:0] _131__C2 ;
  logic [0:0] _131__R2 ;
  logic [0:0] _131__X2 ;
  logic [0:0] _117__C1 ;
  logic [0:0] _117__R1 ;
  logic [0:0] _117__X1 ;
  assign _237__T = _131__T | _117__T ;
  assign _131__C2 = _237__C ;
  assign _131__X2 = _237__X ;
  assign _117__C1 = _237__C ;
  assign _117__X1 = _237__X ;
  assign _131__R2 = ( _237__R | _237__C & _117__T ) & { 1{ _117_ != 1'b1 }} ;
  assign _117__R1 = ( _237__R | _237__C & _131__T ) & { 1{ _131_ != 1'b1 }} ;
  assign _238_ = IsDenorm_5U_10U_or_tmp | _113_;
  assign _238__S = 0 ;
  logic [0:0] IsDenorm_5U_10U_or_tmp_C3 ;
  logic [0:0] IsDenorm_5U_10U_or_tmp_R3 ;
  logic [0:0] IsDenorm_5U_10U_or_tmp_X3 ;
  logic [0:0] _113__C1 ;
  logic [0:0] _113__R1 ;
  logic [0:0] _113__X1 ;
  assign _238__T = IsDenorm_5U_10U_or_tmp_T | _113__T ;
  assign IsDenorm_5U_10U_or_tmp_C3 = _238__C ;
  assign IsDenorm_5U_10U_or_tmp_X3 = _238__X ;
  assign _113__C1 = _238__C ;
  assign _113__X1 = _238__X ;
  assign IsDenorm_5U_10U_or_tmp_R3 = ( _238__R | _238__C & _113__T ) & { 1{ _113_ != 1'b1 }} ;
  assign _113__R1 = ( _238__R | _238__C & IsDenorm_5U_10U_or_tmp_T ) & { 1{ IsDenorm_5U_10U_or_tmp != 1'b1 }} ;
  assign _239_ = chn_data_in_rsci_d_mxwt[14] | _145_;
  assign _239__S = 0 ;
  assign { chn_data_in_rsci_d_mxwt_R2 [0], chn_data_in_rsci_d_mxwt_R2 [1], chn_data_in_rsci_d_mxwt_R2 [2], chn_data_in_rsci_d_mxwt_R2 [3], chn_data_in_rsci_d_mxwt_R2 [4], chn_data_in_rsci_d_mxwt_R2 [5], chn_data_in_rsci_d_mxwt_R2 [6], chn_data_in_rsci_d_mxwt_R2 [7], chn_data_in_rsci_d_mxwt_R2 [8], chn_data_in_rsci_d_mxwt_R2 [9], chn_data_in_rsci_d_mxwt_R2 [15:15] } = 0;
  assign { chn_data_in_rsci_d_mxwt_X2 [0], chn_data_in_rsci_d_mxwt_X2 [1], chn_data_in_rsci_d_mxwt_X2 [2], chn_data_in_rsci_d_mxwt_X2 [3], chn_data_in_rsci_d_mxwt_X2 [4], chn_data_in_rsci_d_mxwt_X2 [5], chn_data_in_rsci_d_mxwt_X2 [6], chn_data_in_rsci_d_mxwt_X2 [7], chn_data_in_rsci_d_mxwt_X2 [8], chn_data_in_rsci_d_mxwt_X2 [9], chn_data_in_rsci_d_mxwt_X2 [15:15] } = 0;
  assign { chn_data_in_rsci_d_mxwt_C2 [0], chn_data_in_rsci_d_mxwt_C2 [1], chn_data_in_rsci_d_mxwt_C2 [2], chn_data_in_rsci_d_mxwt_C2 [3], chn_data_in_rsci_d_mxwt_C2 [4], chn_data_in_rsci_d_mxwt_C2 [5], chn_data_in_rsci_d_mxwt_C2 [6], chn_data_in_rsci_d_mxwt_C2 [7], chn_data_in_rsci_d_mxwt_C2 [8], chn_data_in_rsci_d_mxwt_C2 [9], chn_data_in_rsci_d_mxwt_C2 [15:15] } = 0;
  logic [15:0] chn_data_in_rsci_d_mxwt_C3 ;
  logic [15:0] chn_data_in_rsci_d_mxwt_R3 ;
  logic [15:0] chn_data_in_rsci_d_mxwt_X3 ;
  logic [0:0] _145__C0 ;
  logic [0:0] _145__R0 ;
  logic [0:0] _145__X0 ;
  assign _239__T = chn_data_in_rsci_d_mxwt_T [14] | _145__T ;
  assign chn_data_in_rsci_d_mxwt_C3 [14] = _239__C ;
  assign chn_data_in_rsci_d_mxwt_X3 [14] = _239__X ;
  assign _145__C0 = _239__C ;
  assign _145__X0 = _239__X ;
  assign chn_data_in_rsci_d_mxwt_R3 [14] = ( _239__R | _239__C & _145__T ) & { 1{ _145_ != 1'b1 }} ;
  assign _145__R0 = ( _239__R | _239__C & chn_data_in_rsci_d_mxwt_T [14] ) & { 1{ chn_data_in_rsci_d_mxwt[14] != 1'b1 }} ;
  assign _240_ = main_stage_v_1 | _118_;
  assign _240__S = 0 ;
  logic [0:0] main_stage_v_1_C6 ;
  logic [0:0] main_stage_v_1_R6 ;
  logic [0:0] main_stage_v_1_X6 ;
  logic [0:0] _118__C5 ;
  logic [0:0] _118__R5 ;
  logic [0:0] _118__X5 ;
  assign _240__T = main_stage_v_1_T | _118__T ;
  assign main_stage_v_1_C6 = _240__C ;
  assign main_stage_v_1_X6 = _240__X ;
  assign _118__C5 = _240__C ;
  assign _118__X5 = _240__X ;
  assign main_stage_v_1_R6 = ( _240__R | _240__C & _118__T ) & { 1{ _118_ != 1'b1 }} ;
  assign _118__R5 = ( _240__R | _240__C & main_stage_v_1_T ) & { 1{ main_stage_v_1 != 1'b1 }} ;
  assign or_38_nl = _240_ | chn_data_out_rsci_bawt;
  assign or_38_nl_S = 0 ;
  logic [0:0] _240__C0 ;
  logic [0:0] _240__R0 ;
  logic [0:0] _240__X0 ;
  logic [0:0] chn_data_out_rsci_bawt_C7 ;
  logic [0:0] chn_data_out_rsci_bawt_R7 ;
  logic [0:0] chn_data_out_rsci_bawt_X7 ;
  assign or_38_nl_T = _240__T | chn_data_out_rsci_bawt_T ;
  assign _240__C0 = or_38_nl_C ;
  assign _240__X0 = or_38_nl_X ;
  assign chn_data_out_rsci_bawt_C7 = or_38_nl_C ;
  assign chn_data_out_rsci_bawt_X7 = or_38_nl_X ;
  assign _240__R0 = ( or_38_nl_R | or_38_nl_C & chn_data_out_rsci_bawt_T ) & { 1{ chn_data_out_rsci_bawt != 1'b1 }} ;
  assign chn_data_out_rsci_bawt_R7 = ( or_38_nl_R | or_38_nl_C & _240__T ) & { 1{ _240_ != 1'b1 }} ;
  assign _241_ = _146_ | _118_;
  assign _241__S = 0 ;
  logic [0:0] _146__C0 ;
  logic [0:0] _146__R0 ;
  logic [0:0] _146__X0 ;
  logic [0:0] _118__C6 ;
  logic [0:0] _118__R6 ;
  logic [0:0] _118__X6 ;
  assign _241__T = _146__T | _118__T ;
  assign _146__C0 = _241__C ;
  assign _146__X0 = _241__X ;
  assign _118__C6 = _241__C ;
  assign _118__X6 = _241__X ;
  assign _146__R0 = ( _241__R | _241__C & _118__T ) & { 1{ _118_ != 1'b1 }} ;
  assign _118__R6 = ( _241__R | _241__C & _146__T ) & { 1{ _146_ != 1'b1 }} ;
  assign or_39_nl = _241_ | chn_data_out_rsci_bawt;
  assign or_39_nl_S = 0 ;
  logic [0:0] _241__C0 ;
  logic [0:0] _241__R0 ;
  logic [0:0] _241__X0 ;
  logic [0:0] chn_data_out_rsci_bawt_C8 ;
  logic [0:0] chn_data_out_rsci_bawt_R8 ;
  logic [0:0] chn_data_out_rsci_bawt_X8 ;
  assign or_39_nl_T = _241__T | chn_data_out_rsci_bawt_T ;
  assign _241__C0 = or_39_nl_C ;
  assign _241__X0 = or_39_nl_X ;
  assign chn_data_out_rsci_bawt_C8 = or_39_nl_C ;
  assign chn_data_out_rsci_bawt_X8 = or_39_nl_X ;
  assign _241__R0 = ( or_39_nl_R | or_39_nl_C & chn_data_out_rsci_bawt_T ) & { 1{ chn_data_out_rsci_bawt != 1'b1 }} ;
  assign chn_data_out_rsci_bawt_R8 = ( or_39_nl_R | or_39_nl_C & _241__T ) & { 1{ _241_ != 1'b1 }} ;
  assign _242_ = or_66_cse | _133_;
  assign _242__S = 0 ;
  logic [0:0] or_66_cse_C3 ;
  logic [0:0] or_66_cse_R3 ;
  logic [0:0] or_66_cse_X3 ;
  logic [0:0] _133__C2 ;
  logic [0:0] _133__R2 ;
  logic [0:0] _133__X2 ;
  assign _242__T = or_66_cse_T | _133__T ;
  assign or_66_cse_C3 = _242__C ;
  assign or_66_cse_X3 = _242__X ;
  assign _133__C2 = _242__C ;
  assign _133__X2 = _242__X ;
  assign or_66_cse_R3 = ( _242__R | _242__C & _133__T ) & { 1{ _133_ != 1'b1 }} ;
  assign _133__R2 = ( _242__R | _242__C & or_66_cse_T ) & { 1{ or_66_cse != 1'b1 }} ;
  assign _243_ = _242_ | chn_data_out_rsci_bawt;
  assign _243__S = 0 ;
  logic [0:0] _242__C1 ;
  logic [0:0] _242__R1 ;
  logic [0:0] _242__X1 ;
  logic [0:0] chn_data_out_rsci_bawt_C9 ;
  logic [0:0] chn_data_out_rsci_bawt_R9 ;
  logic [0:0] chn_data_out_rsci_bawt_X9 ;
  assign _243__T = _242__T | chn_data_out_rsci_bawt_T ;
  assign _242__C1 = _243__C ;
  assign _242__X1 = _243__X ;
  assign chn_data_out_rsci_bawt_C9 = _243__C ;
  assign chn_data_out_rsci_bawt_X9 = _243__X ;
  assign _242__R1 = ( _243__R | _243__C & chn_data_out_rsci_bawt_T ) & { 1{ chn_data_out_rsci_bawt != 1'b1 }} ;
  assign chn_data_out_rsci_bawt_R9 = ( _243__R | _243__C & _242__T ) & { 1{ _242_ != 1'b1 }} ;
  assign _244_ = _243_ | _118_;
  assign _244__S = 0 ;
  logic [0:0] _243__C0 ;
  logic [0:0] _243__R0 ;
  logic [0:0] _243__X0 ;
  logic [0:0] _118__C7 ;
  logic [0:0] _118__R7 ;
  logic [0:0] _118__X7 ;
  assign _244__T = _243__T | _118__T ;
  assign _243__C0 = _244__C ;
  assign _243__X0 = _244__X ;
  assign _118__C7 = _244__C ;
  assign _118__X7 = _244__X ;
  assign _243__R0 = ( _244__R | _244__C & _118__T ) & { 1{ _118_ != 1'b1 }} ;
  assign _118__R7 = ( _244__R | _244__C & _243__T ) & { 1{ _243_ != 1'b1 }} ;
  assign _245_ = _078_ | _084_;
  assign _245__S = 0 ;
  logic [0:0] _078__C0 ;
  logic [0:0] _078__R0 ;
  logic [0:0] _078__X0 ;
  logic [0:0] _084__C0 ;
  logic [0:0] _084__R0 ;
  logic [0:0] _084__X0 ;
  assign _245__T = _078__T | _084__T ;
  assign _078__C0 = _245__C ;
  assign _078__X0 = _245__X ;
  assign _084__C0 = _245__C ;
  assign _084__X0 = _245__X ;
  assign _078__R0 = ( _245__R | _245__C & _084__T ) & { 1{ _084_ != 1'b1 }} ;
  assign _084__R0 = ( _245__R | _245__C & _078__T ) & { 1{ _078_ != 1'b1 }} ;
  assign _246_ = _079_ | _085_;
  assign _246__S = 0 ;
  logic [0:0] _079__C0 ;
  logic [0:0] _079__R0 ;
  logic [0:0] _079__X0 ;
  logic [0:0] _085__C0 ;
  logic [0:0] _085__R0 ;
  logic [0:0] _085__X0 ;
  assign _246__T = _079__T | _085__T ;
  assign _079__C0 = _246__C ;
  assign _079__X0 = _246__X ;
  assign _085__C0 = _246__C ;
  assign _085__X0 = _246__X ;
  assign _079__R0 = ( _246__R | _246__C & _085__T ) & { 1{ _085_ != 1'b1 }} ;
  assign _085__R0 = ( _246__R | _246__C & _079__T ) & { 1{ _079_ != 1'b1 }} ;
  assign _247_ = _080_ | _086_;
  assign _247__S = 0 ;
  logic [0:0] _080__C0 ;
  logic [0:0] _080__R0 ;
  logic [0:0] _080__X0 ;
  logic [0:0] _086__C0 ;
  logic [0:0] _086__R0 ;
  logic [0:0] _086__X0 ;
  assign _247__T = _080__T | _086__T ;
  assign _080__C0 = _247__C ;
  assign _080__X0 = _247__X ;
  assign _086__C0 = _247__C ;
  assign _086__X0 = _247__X ;
  assign _080__R0 = ( _247__R | _247__C & _086__T ) & { 1{ _086_ != 1'b1 }} ;
  assign _086__R0 = ( _247__R | _247__C & _080__T ) & { 1{ _080_ != 1'b1 }} ;
  assign _248_ = _081_ | _087_;
  assign _248__S = 0 ;
  logic [0:0] _081__C0 ;
  logic [0:0] _081__R0 ;
  logic [0:0] _081__X0 ;
  logic [0:0] _087__C0 ;
  logic [0:0] _087__R0 ;
  logic [0:0] _087__X0 ;
  assign _248__T = _081__T | _087__T ;
  assign _081__C0 = _248__C ;
  assign _081__X0 = _248__X ;
  assign _087__C0 = _248__C ;
  assign _087__X0 = _248__X ;
  assign _081__R0 = ( _248__R | _248__C & _087__T ) & { 1{ _087_ != 1'b1 }} ;
  assign _087__R0 = ( _248__R | _248__C & _081__T ) & { 1{ _081_ != 1'b1 }} ;
  assign _249_ = _082_ | _088_;
  assign _249__S = 0 ;
  logic [0:0] _082__C0 ;
  logic [0:0] _082__R0 ;
  logic [0:0] _082__X0 ;
  logic [0:0] _088__C0 ;
  logic [0:0] _088__R0 ;
  logic [0:0] _088__X0 ;
  assign _249__T = _082__T | _088__T ;
  assign _082__C0 = _249__C ;
  assign _082__X0 = _249__X ;
  assign _088__C0 = _249__C ;
  assign _088__X0 = _249__X ;
  assign _082__R0 = ( _249__R | _249__C & _088__T ) & { 1{ _088_ != 1'b1 }} ;
  assign _088__R0 = ( _249__R | _249__C & _082__T ) & { 1{ _082_ != 1'b1 }} ;
  assign _250_ = _083_ | _089_;
  assign _250__S = 0 ;
  logic [0:0] _083__C0 ;
  logic [0:0] _083__R0 ;
  logic [0:0] _083__X0 ;
  logic [0:0] _089__C0 ;
  logic [0:0] _089__R0 ;
  logic [0:0] _089__X0 ;
  assign _250__T = _083__T | _089__T ;
  assign _083__C0 = _250__C ;
  assign _083__X0 = _250__X ;
  assign _089__C0 = _250__C ;
  assign _089__X0 = _250__X ;
  assign _083__R0 = ( _250__R | _250__C & _089__T ) & { 1{ _089_ != 1'b1 }} ;
  assign _089__R0 = ( _250__R | _250__C & _083__T ) & { 1{ _083_ != 1'b1 }} ;
  assign _251_ = _083_ | _090_;
  assign _251__S = 0 ;
  logic [0:0] _083__C1 ;
  logic [0:0] _083__R1 ;
  logic [0:0] _083__X1 ;
  logic [0:0] _090__C0 ;
  logic [0:0] _090__R0 ;
  logic [0:0] _090__X0 ;
  assign _251__T = _083__T | _090__T ;
  assign _083__C1 = _251__C ;
  assign _083__X1 = _251__X ;
  assign _090__C0 = _251__C ;
  assign _090__X0 = _251__X ;
  assign _083__R1 = ( _251__R | _251__C & _090__T ) & { 1{ _090_ != 1'b1 }} ;
  assign _090__R0 = ( _251__R | _251__C & _083__T ) & { 1{ _083_ != 1'b1 }} ;
  assign _252_ = _245_ | _091_;
  assign _252__S = 0 ;
  logic [0:0] _245__C0 ;
  logic [0:0] _245__R0 ;
  logic [0:0] _245__X0 ;
  logic [0:0] _091__C0 ;
  logic [0:0] _091__R0 ;
  logic [0:0] _091__X0 ;
  assign _252__T = _245__T | _091__T ;
  assign _245__C0 = _252__C ;
  assign _245__X0 = _252__X ;
  assign _091__C0 = _252__C ;
  assign _091__X0 = _252__X ;
  assign _245__R0 = ( _252__R | _252__C & _091__T ) & { 1{ _091_ != 1'b1 }} ;
  assign _091__R0 = ( _252__R | _252__C & _245__T ) & { 1{ _245_ != 1'b1 }} ;
  assign _253_ = _246_ | _092_;
  assign _253__S = 0 ;
  logic [0:0] _246__C0 ;
  logic [0:0] _246__R0 ;
  logic [0:0] _246__X0 ;
  logic [0:0] _092__C0 ;
  logic [0:0] _092__R0 ;
  logic [0:0] _092__X0 ;
  assign _253__T = _246__T | _092__T ;
  assign _246__C0 = _253__C ;
  assign _246__X0 = _253__X ;
  assign _092__C0 = _253__C ;
  assign _092__X0 = _253__X ;
  assign _246__R0 = ( _253__R | _253__C & _092__T ) & { 1{ _092_ != 1'b1 }} ;
  assign _092__R0 = ( _253__R | _253__C & _246__T ) & { 1{ _246_ != 1'b1 }} ;
  assign _254_ = _247_ | _093_;
  assign _254__S = 0 ;
  logic [0:0] _247__C0 ;
  logic [0:0] _247__R0 ;
  logic [0:0] _247__X0 ;
  logic [0:0] _093__C0 ;
  logic [0:0] _093__R0 ;
  logic [0:0] _093__X0 ;
  assign _254__T = _247__T | _093__T ;
  assign _247__C0 = _254__C ;
  assign _247__X0 = _254__X ;
  assign _093__C0 = _254__C ;
  assign _093__X0 = _254__X ;
  assign _247__R0 = ( _254__R | _254__C & _093__T ) & { 1{ _093_ != 1'b1 }} ;
  assign _093__R0 = ( _254__R | _254__C & _247__T ) & { 1{ _247_ != 1'b1 }} ;
  assign _255_ = _248_ | _094_;
  assign _255__S = 0 ;
  logic [0:0] _248__C0 ;
  logic [0:0] _248__R0 ;
  logic [0:0] _248__X0 ;
  logic [0:0] _094__C0 ;
  logic [0:0] _094__R0 ;
  logic [0:0] _094__X0 ;
  assign _255__T = _248__T | _094__T ;
  assign _248__C0 = _255__C ;
  assign _248__X0 = _255__X ;
  assign _094__C0 = _255__C ;
  assign _094__X0 = _255__X ;
  assign _248__R0 = ( _255__R | _255__C & _094__T ) & { 1{ _094_ != 1'b1 }} ;
  assign _094__R0 = ( _255__R | _255__C & _248__T ) & { 1{ _248_ != 1'b1 }} ;
  assign _256_ = _249_ | _095_;
  assign _256__S = 0 ;
  logic [0:0] _249__C0 ;
  logic [0:0] _249__R0 ;
  logic [0:0] _249__X0 ;
  logic [0:0] _095__C0 ;
  logic [0:0] _095__R0 ;
  logic [0:0] _095__X0 ;
  assign _256__T = _249__T | _095__T ;
  assign _249__C0 = _256__C ;
  assign _249__X0 = _256__X ;
  assign _095__C0 = _256__C ;
  assign _095__X0 = _256__X ;
  assign _249__R0 = ( _256__R | _256__C & _095__T ) & { 1{ _095_ != 1'b1 }} ;
  assign _095__R0 = ( _256__R | _256__C & _249__T ) & { 1{ _249_ != 1'b1 }} ;
  assign _257_ = _250_ | _096_;
  assign _257__S = 0 ;
  logic [0:0] _250__C0 ;
  logic [0:0] _250__R0 ;
  logic [0:0] _250__X0 ;
  logic [0:0] _096__C0 ;
  logic [0:0] _096__R0 ;
  logic [0:0] _096__X0 ;
  assign _257__T = _250__T | _096__T ;
  assign _250__C0 = _257__C ;
  assign _250__X0 = _257__X ;
  assign _096__C0 = _257__C ;
  assign _096__X0 = _257__X ;
  assign _250__R0 = ( _257__R | _257__C & _096__T ) & { 1{ _096_ != 1'b1 }} ;
  assign _096__R0 = ( _257__R | _257__C & _250__T ) & { 1{ _250_ != 1'b1 }} ;
  assign _258_ = _251_ | _096_;
  assign _258__S = 0 ;
  logic [0:0] _251__C0 ;
  logic [0:0] _251__R0 ;
  logic [0:0] _251__X0 ;
  logic [0:0] _096__C1 ;
  logic [0:0] _096__R1 ;
  logic [0:0] _096__X1 ;
  assign _258__T = _251__T | _096__T ;
  assign _251__C0 = _258__C ;
  assign _251__X0 = _258__X ;
  assign _096__C1 = _258__C ;
  assign _096__X1 = _258__X ;
  assign _251__R0 = ( _258__R | _258__C & _096__T ) & { 1{ _096_ != 1'b1 }} ;
  assign _096__R1 = ( _258__R | _258__C & _251__T ) & { 1{ _251_ != 1'b1 }} ;
  assign _259_ = _097_ | _098_;
  assign _259__S = 0 ;
  logic [16:0] _097__C0 ;
  logic [16:0] _097__R0 ;
  logic [16:0] _097__X0 ;
  logic [16:0] _098__C0 ;
  logic [16:0] _098__R0 ;
  logic [16:0] _098__X0 ;
  assign _259__T = _097__T | _098__T ;
  assign _097__C0 = _259__C ;
  assign _097__X0 = _259__X ;
  assign _098__C0 = _259__C ;
  assign _098__X0 = _259__X ;
  assign _097__R0 = ( _259__R | _259__C & _098__T ) & { 17{ _098_ != 17'b11111111111111111 }} ;
  assign _098__R0 = ( _259__R | _259__C & _097__T ) & { 17{ _097_ != 17'b11111111111111111 }} ;
  assign IntSubExt_16U_16U_17U_o_mux1h_1_itm = _259_ | _099_;
  assign IntSubExt_16U_16U_17U_o_mux1h_1_itm_S = 0 ;
  logic [16:0] _259__C0 ;
  logic [16:0] _259__R0 ;
  logic [16:0] _259__X0 ;
  logic [16:0] _099__C0 ;
  logic [16:0] _099__R0 ;
  logic [16:0] _099__X0 ;
  assign IntSubExt_16U_16U_17U_o_mux1h_1_itm_T = _259__T | _099__T ;
  assign _259__C0 = IntSubExt_16U_16U_17U_o_mux1h_1_itm_C ;
  assign _259__X0 = IntSubExt_16U_16U_17U_o_mux1h_1_itm_X ;
  assign _099__C0 = IntSubExt_16U_16U_17U_o_mux1h_1_itm_C ;
  assign _099__X0 = IntSubExt_16U_16U_17U_o_mux1h_1_itm_X ;
  assign _259__R0 = ( IntSubExt_16U_16U_17U_o_mux1h_1_itm_R | IntSubExt_16U_16U_17U_o_mux1h_1_itm_C & _099__T ) & { 17{ _099_ != 17'b11111111111111111 }} ;
  assign _099__R0 = ( IntSubExt_16U_16U_17U_o_mux1h_1_itm_R | IntSubExt_16U_16U_17U_o_mux1h_1_itm_C & _259__T ) & { 17{ _259_ != 17'b11111111111111111 }} ;
  assign _260_ = _100_ | _102_;
  assign _260__S = 0 ;
  logic [3:0] _100__C0 ;
  logic [3:0] _100__R0 ;
  logic [3:0] _100__X0 ;
  logic [3:0] _102__C0 ;
  logic [3:0] _102__R0 ;
  logic [3:0] _102__X0 ;
  assign _260__T = _100__T | _102__T ;
  assign _100__C0 = _260__C ;
  assign _100__X0 = _260__X ;
  assign _102__C0 = _260__C ;
  assign _102__X0 = _260__X ;
  assign _100__R0 = ( _260__R | _260__C & _102__T ) & { 4{ _102_ != 4'b1111 }} ;
  assign _102__R0 = ( _260__R | _260__C & _100__T ) & { 4{ _100_ != 4'b1111 }} ;
  assign _261_ = _101_ | _103_;
  assign _261__S = 0 ;
  logic [3:0] _101__C0 ;
  logic [3:0] _101__R0 ;
  logic [3:0] _101__X0 ;
  logic [3:0] _103__C0 ;
  logic [3:0] _103__R0 ;
  logic [3:0] _103__X0 ;
  assign _261__T = _101__T | _103__T ;
  assign _101__C0 = _261__C ;
  assign _101__X0 = _261__X ;
  assign _103__C0 = _261__C ;
  assign _103__X0 = _261__X ;
  assign _101__R0 = ( _261__R | _261__C & _103__T ) & { 4{ _103_ != 4'b1111 }} ;
  assign _103__R0 = ( _261__R | _261__C & _101__T ) & { 4{ _101_ != 4'b1111 }} ;
  assign _262_ = _260_ | _104_;
  assign _262__S = 0 ;
  logic [3:0] _260__C0 ;
  logic [3:0] _260__R0 ;
  logic [3:0] _260__X0 ;
  logic [3:0] _104__C0 ;
  logic [3:0] _104__R0 ;
  logic [3:0] _104__X0 ;
  assign _262__T = _260__T | _104__T ;
  assign _260__C0 = _262__C ;
  assign _260__X0 = _262__X ;
  assign _104__C0 = _262__C ;
  assign _104__X0 = _262__X ;
  assign _260__R0 = ( _262__R | _262__C & _104__T ) & { 4{ _104_ != 4'b1111 }} ;
  assign _104__R0 = ( _262__R | _262__C & _260__T ) & { 4{ _260_ != 4'b1111 }} ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl = _261_ | _105_;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_S = 0 ;
  logic [3:0] _261__C0 ;
  logic [3:0] _261__R0 ;
  logic [3:0] _261__X0 ;
  logic [3:0] _105__C0 ;
  logic [3:0] _105__R0 ;
  logic [3:0] _105__X0 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_T = _261__T | _105__T ;
  assign _261__C0 = FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_C ;
  assign _261__X0 = FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_X ;
  assign _105__C0 = FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_C ;
  assign _105__X0 = FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_X ;
  assign _261__R0 = ( FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_R | FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_C & _105__T ) & { 4{ _105_ != 4'b1111 }} ;
  assign _105__R0 = ( FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_R | FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_C & _261__T ) & { 4{ _261_ != 4'b1111 }} ;
  assign _263_ = _106_ | _107_;
  assign _263__S = 0 ;
  logic [6:0] _106__C0 ;
  logic [6:0] _106__R0 ;
  logic [6:0] _106__X0 ;
  logic [6:0] _107__C0 ;
  logic [6:0] _107__R0 ;
  logic [6:0] _107__X0 ;
  assign _263__T = _106__T | _107__T ;
  assign _106__C0 = _263__C ;
  assign _106__X0 = _263__X ;
  assign _107__C0 = _263__C ;
  assign _107__X0 = _263__X ;
  assign _106__R0 = ( _263__R | _263__C & _107__T ) & { 7{ _107_ != 7'b1111111 }} ;
  assign _107__R0 = ( _263__R | _263__C & _106__T ) & { 7{ _106_ != 7'b1111111 }} ;
  assign _264_ = _263_ | _108_;
  assign _264__S = 0 ;
  logic [6:0] _263__C0 ;
  logic [6:0] _263__R0 ;
  logic [6:0] _263__X0 ;
  logic [6:0] _108__C0 ;
  logic [6:0] _108__R0 ;
  logic [6:0] _108__X0 ;
  assign _264__T = _263__T | _108__T ;
  assign _263__C0 = _264__C ;
  assign _263__X0 = _264__X ;
  assign _108__C0 = _264__C ;
  assign _108__X0 = _264__X ;
  assign _263__R0 = ( _264__R | _264__C & _108__T ) & { 7{ _108_ != 7'b1111111 }} ;
  assign _108__R0 = ( _264__R | _264__C & _263__T ) & { 7{ _263_ != 7'b1111111 }} ;
  assign _265_ = and_dcpl_16 | _131_;
  assign _265__S = 0 ;
  logic [0:0] and_dcpl_16_C1 ;
  logic [0:0] and_dcpl_16_R1 ;
  logic [0:0] and_dcpl_16_X1 ;
  logic [0:0] _131__C3 ;
  logic [0:0] _131__R3 ;
  logic [0:0] _131__X3 ;
  assign _265__T = and_dcpl_16_T | _131__T ;
  assign and_dcpl_16_C1 = _265__C ;
  assign and_dcpl_16_X1 = _265__X ;
  assign _131__C3 = _265__C ;
  assign _131__X3 = _265__X ;
  assign and_dcpl_16_R1 = ( _265__R | _265__C & _131__T ) & { 1{ _131_ != 1'b1 }} ;
  assign _131__R3 = ( _265__R | _265__C & and_dcpl_16_T ) & { 1{ and_dcpl_16 != 1'b1 }} ;
  assign or_3_cse = _118_ | chn_data_out_rsci_bawt;
  assign or_3_cse_S = 0 ;
  logic [0:0] _118__C8 ;
  logic [0:0] _118__R8 ;
  logic [0:0] _118__X8 ;
  logic [0:0] chn_data_out_rsci_bawt_C10 ;
  logic [0:0] chn_data_out_rsci_bawt_R10 ;
  logic [0:0] chn_data_out_rsci_bawt_X10 ;
  assign or_3_cse_T = _118__T | chn_data_out_rsci_bawt_T ;
  assign _118__C8 = or_3_cse_C ;
  assign _118__X8 = or_3_cse_X ;
  assign chn_data_out_rsci_bawt_C10 = or_3_cse_C ;
  assign chn_data_out_rsci_bawt_X10 = or_3_cse_X ;
  assign _118__R8 = ( or_3_cse_R | or_3_cse_C & chn_data_out_rsci_bawt_T ) & { 1{ chn_data_out_rsci_bawt != 1'b1 }} ;
  assign chn_data_out_rsci_bawt_R10 = ( or_3_cse_R | or_3_cse_C & _118__T ) & { 1{ _118_ != 1'b1 }} ;
  assign _266_ = io_read_cfg_precision_rsc_svs_st_4[0] | chn_data_out_rsci_bawt;
  assign _266__S = 0 ;
  assign { io_read_cfg_precision_rsc_svs_st_4_R1 [1:1] } = 0;
  assign { io_read_cfg_precision_rsc_svs_st_4_X1 [1:1] } = 0;
  assign { io_read_cfg_precision_rsc_svs_st_4_C1 [1:1] } = 0;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_4_C2 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_4_R2 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_4_X2 ;
  logic [0:0] chn_data_out_rsci_bawt_C11 ;
  logic [0:0] chn_data_out_rsci_bawt_R11 ;
  logic [0:0] chn_data_out_rsci_bawt_X11 ;
  assign _266__T = io_read_cfg_precision_rsc_svs_st_4_T [0] | chn_data_out_rsci_bawt_T ;
  assign io_read_cfg_precision_rsc_svs_st_4_C2 [0] = _266__C ;
  assign io_read_cfg_precision_rsc_svs_st_4_X2 [0] = _266__X ;
  assign chn_data_out_rsci_bawt_C11 = _266__C ;
  assign chn_data_out_rsci_bawt_X11 = _266__X ;
  assign io_read_cfg_precision_rsc_svs_st_4_R2 [0] = ( _266__R | _266__C & chn_data_out_rsci_bawt_T ) & { 1{ chn_data_out_rsci_bawt != 1'b1 }} ;
  assign chn_data_out_rsci_bawt_R11 = ( _266__R | _266__C & io_read_cfg_precision_rsc_svs_st_4_T [0] ) & { 1{ io_read_cfg_precision_rsc_svs_st_4[0] != 1'b1 }} ;
  assign or_70_nl = _266_ | _118_;
  assign or_70_nl_S = 0 ;
  logic [0:0] _266__C0 ;
  logic [0:0] _266__R0 ;
  logic [0:0] _266__X0 ;
  logic [0:0] _118__C9 ;
  logic [0:0] _118__R9 ;
  logic [0:0] _118__X9 ;
  assign or_70_nl_T = _266__T | _118__T ;
  assign _266__C0 = or_70_nl_C ;
  assign _266__X0 = or_70_nl_X ;
  assign _118__C9 = or_70_nl_C ;
  assign _118__X9 = or_70_nl_X ;
  assign _266__R0 = ( or_70_nl_R | or_70_nl_C & _118__T ) & { 1{ _118_ != 1'b1 }} ;
  assign _118__R9 = ( or_70_nl_R | or_70_nl_C & _266__T ) & { 1{ _266_ != 1'b1 }} ;
  assign _267_ = _148_ | chn_data_out_rsci_bawt;
  assign _267__S = 0 ;
  logic [0:0] _148__C0 ;
  logic [0:0] _148__R0 ;
  logic [0:0] _148__X0 ;
  logic [0:0] chn_data_out_rsci_bawt_C12 ;
  logic [0:0] chn_data_out_rsci_bawt_R12 ;
  logic [0:0] chn_data_out_rsci_bawt_X12 ;
  assign _267__T = _148__T | chn_data_out_rsci_bawt_T ;
  assign _148__C0 = _267__C ;
  assign _148__X0 = _267__X ;
  assign chn_data_out_rsci_bawt_C12 = _267__C ;
  assign chn_data_out_rsci_bawt_X12 = _267__X ;
  assign _148__R0 = ( _267__R | _267__C & chn_data_out_rsci_bawt_T ) & { 1{ chn_data_out_rsci_bawt != 1'b1 }} ;
  assign chn_data_out_rsci_bawt_R12 = ( _267__R | _267__C & _148__T ) & { 1{ _148_ != 1'b1 }} ;
  assign _268_ = _267_ | _118_;
  assign _268__S = 0 ;
  logic [0:0] _267__C0 ;
  logic [0:0] _267__R0 ;
  logic [0:0] _267__X0 ;
  logic [0:0] _118__C10 ;
  logic [0:0] _118__R10 ;
  logic [0:0] _118__X10 ;
  assign _268__T = _267__T | _118__T ;
  assign _267__C0 = _268__C ;
  assign _267__X0 = _268__X ;
  assign _118__C10 = _268__C ;
  assign _118__X10 = _268__X ;
  assign _267__R0 = ( _268__R | _268__C & _118__T ) & { 1{ _118_ != 1'b1 }} ;
  assign _118__R10 = ( _268__R | _268__C & _267__T ) & { 1{ _267_ != 1'b1 }} ;
  assign _269_ = io_read_cfg_precision_rsc_svs_st_3[0] | _149_;
  assign _269__S = 0 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_C5 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_R5 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_X5 ;
  logic [0:0] _149__C0 ;
  logic [0:0] _149__R0 ;
  logic [0:0] _149__X0 ;
  assign _269__T = io_read_cfg_precision_rsc_svs_st_3_T [0] | _149__T ;
  assign io_read_cfg_precision_rsc_svs_st_3_C5 [0] = _269__C ;
  assign io_read_cfg_precision_rsc_svs_st_3_X5 [0] = _269__X ;
  assign _149__C0 = _269__C ;
  assign _149__X0 = _269__X ;
  assign io_read_cfg_precision_rsc_svs_st_3_R5 [0] = ( _269__R | _269__C & _149__T ) & { 1{ _149_ != 1'b1 }} ;
  assign _149__R0 = ( _269__R | _269__C & io_read_cfg_precision_rsc_svs_st_3_T [0] ) & { 1{ io_read_cfg_precision_rsc_svs_st_3[0] != 1'b1 }} ;
  assign or_28_nl = io_read_cfg_precision_rsc_svs_st_3[1] | _144_;
  assign or_28_nl_S = 0 ;
  logic [0:0] _144__C1 ;
  logic [0:0] _144__R1 ;
  logic [0:0] _144__X1 ;
  assign or_28_nl_T = io_read_cfg_precision_rsc_svs_st_3_T [1] | _144__T ;
  assign io_read_cfg_precision_rsc_svs_st_3_C5 [1] = or_28_nl_C ;
  assign io_read_cfg_precision_rsc_svs_st_3_X5 [1] = or_28_nl_X ;
  assign _144__C1 = or_28_nl_C ;
  assign _144__X1 = or_28_nl_X ;
  assign io_read_cfg_precision_rsc_svs_st_3_R5 [1] = ( or_28_nl_R | or_28_nl_C & _144__T ) & { 1{ _144_ != 1'b1 }} ;
  assign _144__R1 = ( or_28_nl_R | or_28_nl_C & io_read_cfg_precision_rsc_svs_st_3_T [1] ) & { 1{ io_read_cfg_precision_rsc_svs_st_3[1] != 1'b1 }} ;
  assign _270_ = main_stage_v_2 | chn_data_out_rsci_bawt;
  assign _270__S = 0 ;
  logic [0:0] main_stage_v_2_C2 ;
  logic [0:0] main_stage_v_2_R2 ;
  logic [0:0] main_stage_v_2_X2 ;
  logic [0:0] chn_data_out_rsci_bawt_C13 ;
  logic [0:0] chn_data_out_rsci_bawt_R13 ;
  logic [0:0] chn_data_out_rsci_bawt_X13 ;
  assign _270__T = main_stage_v_2_T | chn_data_out_rsci_bawt_T ;
  assign main_stage_v_2_C2 = _270__C ;
  assign main_stage_v_2_X2 = _270__X ;
  assign chn_data_out_rsci_bawt_C13 = _270__C ;
  assign chn_data_out_rsci_bawt_X13 = _270__X ;
  assign main_stage_v_2_R2 = ( _270__R | _270__C & chn_data_out_rsci_bawt_T ) & { 1{ chn_data_out_rsci_bawt != 1'b1 }} ;
  assign chn_data_out_rsci_bawt_R13 = ( _270__R | _270__C & main_stage_v_2_T ) & { 1{ main_stage_v_2 != 1'b1 }} ;
  assign or_30_nl = _270_ | _118_;
  assign or_30_nl_S = 0 ;
  logic [0:0] _270__C0 ;
  logic [0:0] _270__R0 ;
  logic [0:0] _270__X0 ;
  logic [0:0] _118__C11 ;
  logic [0:0] _118__R11 ;
  logic [0:0] _118__X11 ;
  assign or_30_nl_T = _270__T | _118__T ;
  assign _270__C0 = or_30_nl_C ;
  assign _270__X0 = or_30_nl_X ;
  assign _118__C11 = or_30_nl_C ;
  assign _118__X11 = or_30_nl_X ;
  assign _270__R0 = ( or_30_nl_R | or_30_nl_C & _118__T ) & { 1{ _118_ != 1'b1 }} ;
  assign _118__R11 = ( or_30_nl_R | or_30_nl_C & _270__T ) & { 1{ _270_ != 1'b1 }} ;
  assign _271_ = io_read_cfg_precision_rsc_svs_st_3[0] | _133_;
  assign _271__S = 0 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_C6 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_R6 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_X6 ;
  logic [0:0] _133__C3 ;
  logic [0:0] _133__R3 ;
  logic [0:0] _133__X3 ;
  assign _271__T = io_read_cfg_precision_rsc_svs_st_3_T [0] | _133__T ;
  assign io_read_cfg_precision_rsc_svs_st_3_C6 [0] = _271__C ;
  assign io_read_cfg_precision_rsc_svs_st_3_X6 [0] = _271__X ;
  assign _133__C3 = _271__C ;
  assign _133__X3 = _271__X ;
  assign io_read_cfg_precision_rsc_svs_st_3_R6 [0] = ( _271__R | _271__C & _133__T ) & { 1{ _133_ != 1'b1 }} ;
  assign _133__R3 = ( _271__R | _271__C & io_read_cfg_precision_rsc_svs_st_3_T [0] ) & { 1{ io_read_cfg_precision_rsc_svs_st_3[0] != 1'b1 }} ;
  assign _272_ = _271_ | or_107_cse;
  assign _272__S = 0 ;
  logic [0:0] _271__C0 ;
  logic [0:0] _271__R0 ;
  logic [0:0] _271__X0 ;
  logic [0:0] or_107_cse_C1 ;
  logic [0:0] or_107_cse_R1 ;
  logic [0:0] or_107_cse_X1 ;
  assign _272__T = _271__T | or_107_cse_T ;
  assign _271__C0 = _272__C ;
  assign _271__X0 = _272__X ;
  assign or_107_cse_C1 = _272__C ;
  assign or_107_cse_X1 = _272__X ;
  assign _271__R0 = ( _272__R | _272__C & or_107_cse_T ) & { 1{ or_107_cse != 1'b1 }} ;
  assign or_107_cse_R1 = ( _272__R | _272__C & _271__T ) & { 1{ _271_ != 1'b1 }} ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      reg_IntSubExt_16U_16U_17U_o_acc_1_itm <= 1'b0;
    else
      reg_IntSubExt_16U_16U_17U_o_acc_1_itm <= _042_;
  logic [0:0] _042__X0 ;
  logic [0:0] _042__R0 ;
  logic [0:0] _042__C0 ;
  assign _042__X0 = { 1{ reg_IntSubExt_16U_16U_17U_o_acc_1_itm_S != _042__S }} ;
  assign _042__R0 = 0 ;
  assign _042__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      reg_IntSubExt_16U_16U_17U_o_acc_1_itm_T 		<= !nvdla_core_rstn ? 0 : ( _042__T & _042__X0 );
  always @( posedge nvdla_core_clk )
      reg_IntSubExt_16U_16U_17U_o_acc_1_itm_t_flag 	<= !nvdla_core_rstn ? 0 : reg_IntSubExt_16U_16U_17U_o_acc_1_itm_t_flag ? 1 : | _042__T & ( | _042__X0 );
  always @( posedge nvdla_core_clk )
      reg_IntSubExt_16U_16U_17U_o_acc_1_itm_r_flag 	<= !nvdla_core_rstn ? 0 : reg_IntSubExt_16U_16U_17U_o_acc_1_itm_r_flag ? 1 : reg_IntSubExt_16U_16U_17U_o_acc_1_itm_t_flag ? 0 : ( | reg_IntSubExt_16U_16U_17U_o_acc_1_itm_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      reg_IntSubExt_16U_16U_17U_o_acc_itm <= 7'b0000000;
    else
      reg_IntSubExt_16U_16U_17U_o_acc_itm <= _044_;
  logic [6:0] _044__X0 ;
  logic [6:0] _044__R0 ;
  logic [6:0] _044__C0 ;
  assign _044__X0 = { 7{ reg_IntSubExt_16U_16U_17U_o_acc_itm_S != _044__S }} ;
  assign _044__R0 = 0 ;
  assign _044__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      reg_IntSubExt_16U_16U_17U_o_acc_itm_T 		<= !nvdla_core_rstn ? 0 : ( _044__T & _044__X0 );
  always @( posedge nvdla_core_clk )
      reg_IntSubExt_16U_16U_17U_o_acc_itm_t_flag 	<= !nvdla_core_rstn ? 0 : reg_IntSubExt_16U_16U_17U_o_acc_itm_t_flag ? 1 : | _044__T & ( | _044__X0 );
  always @( posedge nvdla_core_clk )
      reg_IntSubExt_16U_16U_17U_o_acc_itm_r_flag 	<= !nvdla_core_rstn ? 0 : reg_IntSubExt_16U_16U_17U_o_acc_itm_r_flag ? 1 : reg_IntSubExt_16U_16U_17U_o_acc_itm_t_flag ? 0 : ( | reg_IntSubExt_16U_16U_17U_o_acc_itm_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      IntSubExt_8U_8U_9U_o_acc_itm_2 <= 9'b000000000;
    else
      IntSubExt_8U_8U_9U_o_acc_itm_2 <= _017_;
  logic [8:0] _017__X0 ;
  logic [8:0] _017__R0 ;
  logic [8:0] _017__C0 ;
  assign _017__X0 = { 9{ IntSubExt_8U_8U_9U_o_acc_itm_2_S != _017__S }} ;
  assign _017__R0 = 0 ;
  assign _017__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      IntSubExt_8U_8U_9U_o_acc_itm_2_T 		<= !nvdla_core_rstn ? 0 : ( _017__T & _017__X0 );
  always @( posedge nvdla_core_clk )
      IntSubExt_8U_8U_9U_o_acc_itm_2_t_flag 	<= !nvdla_core_rstn ? 0 : IntSubExt_8U_8U_9U_o_acc_itm_2_t_flag ? 1 : | _017__T & ( | _017__X0 );
  always @( posedge nvdla_core_clk )
      IntSubExt_8U_8U_9U_o_acc_itm_2_r_flag 	<= !nvdla_core_rstn ? 0 : IntSubExt_8U_8U_9U_o_acc_itm_2_r_flag ? 1 : IntSubExt_8U_8U_9U_o_acc_itm_2_t_flag ? 0 : ( | IntSubExt_8U_8U_9U_o_acc_itm_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      cfg_mul_in_1_sva_2 <= 16'b0000000000000000;
    else
      cfg_mul_in_1_sva_2 <= _018_;
  logic [15:0] _018__X0 ;
  logic [15:0] _018__R0 ;
  logic [15:0] _018__C0 ;
  assign _018__X0 = { 16{ cfg_mul_in_1_sva_2_S != _018__S }} ;
  assign _018__R0 = 0 ;
  assign _018__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      cfg_mul_in_1_sva_2_T 		<= !nvdla_core_rstn ? 0 : ( _018__T & _018__X0 );
  always @( posedge nvdla_core_clk )
      cfg_mul_in_1_sva_2_t_flag 	<= !nvdla_core_rstn ? 0 : cfg_mul_in_1_sva_2_t_flag ? 1 : | _018__T & ( | _018__X0 );
  always @( posedge nvdla_core_clk )
      cfg_mul_in_1_sva_2_r_flag 	<= !nvdla_core_rstn ? 0 : cfg_mul_in_1_sva_2_r_flag ? 1 : cfg_mul_in_1_sva_2_t_flag ? 0 : ( | cfg_mul_in_1_sva_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      reg_cfg_truncate_1_3_itm <= 4'b0000;
    else
      reg_cfg_truncate_1_3_itm <= _047_;
  logic [3:0] _047__X0 ;
  logic [3:0] _047__R0 ;
  logic [3:0] _047__C0 ;
  assign _047__X0 = { 4{ reg_cfg_truncate_1_3_itm_S != _047__S }} ;
  assign _047__R0 = 0 ;
  assign _047__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      reg_cfg_truncate_1_3_itm_T 		<= !nvdla_core_rstn ? 0 : ( _047__T & _047__X0 );
  always @( posedge nvdla_core_clk )
      reg_cfg_truncate_1_3_itm_t_flag 	<= !nvdla_core_rstn ? 0 : reg_cfg_truncate_1_3_itm_t_flag ? 1 : | _047__T & ( | _047__X0 );
  always @( posedge nvdla_core_clk )
      reg_cfg_truncate_1_3_itm_r_flag 	<= !nvdla_core_rstn ? 0 : reg_cfg_truncate_1_3_itm_r_flag ? 1 : reg_cfg_truncate_1_3_itm_t_flag ? 0 : ( | reg_cfg_truncate_1_3_itm_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      reg_IntSubExt_16U_16U_17U_o_acc_2_itm <= 9'b000000000;
    else
      reg_IntSubExt_16U_16U_17U_o_acc_2_itm <= _043_;
  logic [8:0] _043__X0 ;
  logic [8:0] _043__R0 ;
  logic [8:0] _043__C0 ;
  assign _043__X0 = { 9{ reg_IntSubExt_16U_16U_17U_o_acc_2_itm_S != _043__S }} ;
  assign _043__R0 = 0 ;
  assign _043__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      reg_IntSubExt_16U_16U_17U_o_acc_2_itm_T 		<= !nvdla_core_rstn ? 0 : ( _043__T & _043__X0 );
  always @( posedge nvdla_core_clk )
      reg_IntSubExt_16U_16U_17U_o_acc_2_itm_t_flag 	<= !nvdla_core_rstn ? 0 : reg_IntSubExt_16U_16U_17U_o_acc_2_itm_t_flag ? 1 : | _043__T & ( | _043__X0 );
  always @( posedge nvdla_core_clk )
      reg_IntSubExt_16U_16U_17U_o_acc_2_itm_r_flag 	<= !nvdla_core_rstn ? 0 : reg_IntSubExt_16U_16U_17U_o_acc_2_itm_r_flag ? 1 : reg_IntSubExt_16U_16U_17U_o_acc_2_itm_t_flag ? 0 : ( | reg_IntSubExt_16U_16U_17U_o_acc_2_itm_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      reg_cfg_truncate_1_1_itm <= 1'b0;
    else
      reg_cfg_truncate_1_1_itm <= _045_;
  logic [0:0] _045__X0 ;
  logic [0:0] _045__R0 ;
  logic [0:0] _045__C0 ;
  assign _045__X0 = { 1{ reg_cfg_truncate_1_1_itm_S != _045__S }} ;
  assign _045__R0 = 0 ;
  assign _045__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      reg_cfg_truncate_1_1_itm_T 		<= !nvdla_core_rstn ? 0 : ( _045__T & _045__X0 );
  always @( posedge nvdla_core_clk )
      reg_cfg_truncate_1_1_itm_t_flag 	<= !nvdla_core_rstn ? 0 : reg_cfg_truncate_1_1_itm_t_flag ? 1 : | _045__T & ( | _045__X0 );
  always @( posedge nvdla_core_clk )
      reg_cfg_truncate_1_1_itm_r_flag 	<= !nvdla_core_rstn ? 0 : reg_cfg_truncate_1_1_itm_r_flag ? 1 : reg_cfg_truncate_1_1_itm_t_flag ? 0 : ( | reg_cfg_truncate_1_1_itm_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      i_data_slc_i_data_15_1_itm_3 <= 1'b0;
    else
      i_data_slc_i_data_15_1_itm_3 <= _031_;
  logic [0:0] _031__X0 ;
  logic [0:0] _031__R0 ;
  logic [0:0] _031__C0 ;
  assign _031__X0 = { 1{ i_data_slc_i_data_15_1_itm_3_S != _031__S }} ;
  assign _031__R0 = 0 ;
  assign _031__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      i_data_slc_i_data_15_1_itm_3_T 		<= !nvdla_core_rstn ? 0 : ( _031__T & _031__X0 );
  always @( posedge nvdla_core_clk )
      i_data_slc_i_data_15_1_itm_3_t_flag 	<= !nvdla_core_rstn ? 0 : i_data_slc_i_data_15_1_itm_3_t_flag ? 1 : | _031__T & ( | _031__X0 );
  always @( posedge nvdla_core_clk )
      i_data_slc_i_data_15_1_itm_3_r_flag 	<= !nvdla_core_rstn ? 0 : i_data_slc_i_data_15_1_itm_3_r_flag ? 1 : i_data_slc_i_data_15_1_itm_3_t_flag ? 0 : ( | i_data_slc_i_data_15_1_itm_3_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1 <= 1'b0;
    else
      FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1 <= _013_;
  logic [0:0] _013__X0 ;
  logic [0:0] _013__R0 ;
  logic [0:0] _013__C0 ;
  assign _013__X0 = { 1{ FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1_S != _013__S }} ;
  assign _013__R0 = 0 ;
  assign _013__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1_T 		<= !nvdla_core_rstn ? 0 : ( _013__T & _013__X0 );
  always @( posedge nvdla_core_clk )
      FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1_t_flag 	<= !nvdla_core_rstn ? 0 : FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1_t_flag ? 1 : | _013__T & ( | _013__X0 );
  always @( posedge nvdla_core_clk )
      FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1_r_flag 	<= !nvdla_core_rstn ? 0 : FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1_r_flag ? 1 : FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1_t_flag ? 0 : ( | FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1 <= 1'b0;
    else
      FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1 <= _012_;
  logic [0:0] _012__X0 ;
  logic [0:0] _012__R0 ;
  logic [0:0] _012__C0 ;
  assign _012__X0 = { 1{ FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1_S != _012__S }} ;
  assign _012__R0 = 0 ;
  assign _012__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1_T 		<= !nvdla_core_rstn ? 0 : ( _012__T & _012__X0 );
  always @( posedge nvdla_core_clk )
      FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1_t_flag 	<= !nvdla_core_rstn ? 0 : FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1_t_flag ? 1 : | _012__T & ( | _012__X0 );
  always @( posedge nvdla_core_clk )
      FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1_r_flag 	<= !nvdla_core_rstn ? 0 : FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1_r_flag ? 1 : FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1_t_flag ? 0 : ( | FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      nor_tmp_11 <= 1'b0;
    else
      nor_tmp_11 <= _037_;
  logic [0:0] _037__X0 ;
  logic [0:0] _037__R0 ;
  logic [0:0] _037__C0 ;
  assign _037__X0 = { 1{ nor_tmp_11_S != _037__S }} ;
  assign _037__R0 = 0 ;
  assign _037__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      nor_tmp_11_T 		<= !nvdla_core_rstn ? 0 : ( _037__T & _037__X0 );
  always @( posedge nvdla_core_clk )
      nor_tmp_11_t_flag 	<= !nvdla_core_rstn ? 0 : nor_tmp_11_t_flag ? 1 : | _037__T & ( | _037__X0 );
  always @( posedge nvdla_core_clk )
      nor_tmp_11_r_flag 	<= !nvdla_core_rstn ? 0 : nor_tmp_11_r_flag ? 1 : nor_tmp_11_t_flag ? 0 : ( | nor_tmp_11_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      io_read_cfg_precision_rsc_svs_st_4 <= 2'b00;
    else
      io_read_cfg_precision_rsc_svs_st_4 <= _034_;
  logic [1:0] _034__X0 ;
  logic [1:0] _034__R0 ;
  logic [1:0] _034__C0 ;
  assign _034__X0 = { 2{ io_read_cfg_precision_rsc_svs_st_4_S != _034__S }} ;
  assign _034__R0 = 0 ;
  assign _034__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      io_read_cfg_precision_rsc_svs_st_4_T 		<= !nvdla_core_rstn ? 0 : ( _034__T & _034__X0 );
  always @( posedge nvdla_core_clk )
      io_read_cfg_precision_rsc_svs_st_4_t_flag 	<= !nvdla_core_rstn ? 0 : io_read_cfg_precision_rsc_svs_st_4_t_flag ? 1 : | _034__T & ( | _034__X0 );
  always @( posedge nvdla_core_clk )
      io_read_cfg_precision_rsc_svs_st_4_r_flag 	<= !nvdla_core_rstn ? 0 : io_read_cfg_precision_rsc_svs_st_4_r_flag ? 1 : io_read_cfg_precision_rsc_svs_st_4_t_flag ? 0 : ( | io_read_cfg_precision_rsc_svs_st_4_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      i_data_slc_i_data_15_1_itm_4 <= 1'b0;
    else
      i_data_slc_i_data_15_1_itm_4 <= _032_;
  logic [0:0] _032__X0 ;
  logic [0:0] _032__R0 ;
  logic [0:0] _032__C0 ;
  assign _032__X0 = { 1{ i_data_slc_i_data_15_1_itm_4_S != _032__S }} ;
  assign _032__R0 = 0 ;
  assign _032__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      i_data_slc_i_data_15_1_itm_4_T 		<= !nvdla_core_rstn ? 0 : ( _032__T & _032__X0 );
  always @( posedge nvdla_core_clk )
      i_data_slc_i_data_15_1_itm_4_t_flag 	<= !nvdla_core_rstn ? 0 : i_data_slc_i_data_15_1_itm_4_t_flag ? 1 : | _032__T & ( | _032__X0 );
  always @( posedge nvdla_core_clk )
      i_data_slc_i_data_15_1_itm_4_r_flag 	<= !nvdla_core_rstn ? 0 : i_data_slc_i_data_15_1_itm_4_r_flag ? 1 : i_data_slc_i_data_15_1_itm_4_t_flag ? 0 : ( | i_data_slc_i_data_15_1_itm_4_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1 <= 1'b0;
    else
      FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1 <= _015_;
  logic [0:0] _015__X0 ;
  logic [0:0] _015__R0 ;
  logic [0:0] _015__C0 ;
  assign _015__X0 = { 1{ FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1_S != _015__S }} ;
  assign _015__R0 = 0 ;
  assign _015__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1_T 		<= !nvdla_core_rstn ? 0 : ( _015__T & _015__X0 );
  always @( posedge nvdla_core_clk )
      FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1_t_flag 	<= !nvdla_core_rstn ? 0 : FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1_t_flag ? 1 : | _015__T & ( | _015__X0 );
  always @( posedge nvdla_core_clk )
      FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1_r_flag 	<= !nvdla_core_rstn ? 0 : FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1_r_flag ? 1 : FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1_t_flag ? 0 : ( | FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1 <= 1'b0;
    else
      FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1 <= _014_;
  logic [0:0] _014__X0 ;
  logic [0:0] _014__R0 ;
  logic [0:0] _014__C0 ;
  assign _014__X0 = { 1{ FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1_S != _014__S }} ;
  assign _014__R0 = 0 ;
  assign _014__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1_T 		<= !nvdla_core_rstn ? 0 : ( _014__T & _014__X0 );
  always @( posedge nvdla_core_clk )
      FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1_t_flag 	<= !nvdla_core_rstn ? 0 : FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1_t_flag ? 1 : | _014__T & ( | _014__X0 );
  always @( posedge nvdla_core_clk )
      FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1_r_flag 	<= !nvdla_core_rstn ? 0 : FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1_r_flag ? 1 : FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1_t_flag ? 0 : ( | FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp <= 1'b0;
    else
      reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp <= _038_;
  logic [0:0] _038__X0 ;
  logic [0:0] _038__R0 ;
  logic [0:0] _038__C0 ;
  assign _038__X0 = { 1{ reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_S != _038__S }} ;
  assign _038__R0 = 0 ;
  assign _038__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_T 		<= !nvdla_core_rstn ? 0 : ( _038__T & _038__X0 );
  always @( posedge nvdla_core_clk )
      reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_t_flag 	<= !nvdla_core_rstn ? 0 : reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_t_flag ? 1 : | _038__T & ( | _038__X0 );
  always @( posedge nvdla_core_clk )
      reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_r_flag 	<= !nvdla_core_rstn ? 0 : reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_r_flag ? 1 : reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_t_flag ? 0 : ( | reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1 <= 9'b000000000;
    else
      reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1 <= _039_;
  logic [8:0] _039__X0 ;
  logic [8:0] _039__R0 ;
  logic [8:0] _039__C0 ;
  assign _039__X0 = { 9{ reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_S != _039__S }} ;
  assign _039__R0 = 0 ;
  assign _039__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_T 		<= !nvdla_core_rstn ? 0 : ( _039__T & _039__X0 );
  always @( posedge nvdla_core_clk )
      reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_t_flag 	<= !nvdla_core_rstn ? 0 : reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_t_flag ? 1 : | _039__T & ( | _039__X0 );
  always @( posedge nvdla_core_clk )
      reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_r_flag 	<= !nvdla_core_rstn ? 0 : reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_r_flag ? 1 : reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_t_flag ? 0 : ( | reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      reg_IntMulExt_17U_16U_33U_o_mul_1_itm <= 24'b000000000000000000000000;
    else
      reg_IntMulExt_17U_16U_33U_o_mul_1_itm <= _040_;
  logic [23:0] _040__X0 ;
  logic [23:0] _040__R0 ;
  logic [23:0] _040__C0 ;
  assign _040__X0 = { 24{ reg_IntMulExt_17U_16U_33U_o_mul_1_itm_S != _040__S }} ;
  assign _040__R0 = 0 ;
  assign _040__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      reg_IntMulExt_17U_16U_33U_o_mul_1_itm_T 		<= !nvdla_core_rstn ? 0 : ( _040__T & _040__X0 );
  always @( posedge nvdla_core_clk )
      reg_IntMulExt_17U_16U_33U_o_mul_1_itm_t_flag 	<= !nvdla_core_rstn ? 0 : reg_IntMulExt_17U_16U_33U_o_mul_1_itm_t_flag ? 1 : | _040__T & ( | _040__X0 );
  always @( posedge nvdla_core_clk )
      reg_IntMulExt_17U_16U_33U_o_mul_1_itm_r_flag 	<= !nvdla_core_rstn ? 0 : reg_IntMulExt_17U_16U_33U_o_mul_1_itm_r_flag ? 1 : reg_IntMulExt_17U_16U_33U_o_mul_1_itm_t_flag ? 0 : ( | reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      reg_IntMulExt_17U_16U_33U_o_mul_itm <= 8'b00000000;
    else
      reg_IntMulExt_17U_16U_33U_o_mul_itm <= _041_;
  logic [7:0] _041__X0 ;
  logic [7:0] _041__R0 ;
  logic [7:0] _041__C0 ;
  assign _041__X0 = { 8{ reg_IntMulExt_17U_16U_33U_o_mul_itm_S != _041__S }} ;
  assign _041__R0 = 0 ;
  assign _041__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      reg_IntMulExt_17U_16U_33U_o_mul_itm_T 		<= !nvdla_core_rstn ? 0 : ( _041__T & _041__X0 );
  always @( posedge nvdla_core_clk )
      reg_IntMulExt_17U_16U_33U_o_mul_itm_t_flag 	<= !nvdla_core_rstn ? 0 : reg_IntMulExt_17U_16U_33U_o_mul_itm_t_flag ? 1 : | _041__T & ( | _041__X0 );
  always @( posedge nvdla_core_clk )
      reg_IntMulExt_17U_16U_33U_o_mul_itm_r_flag 	<= !nvdla_core_rstn ? 0 : reg_IntMulExt_17U_16U_33U_o_mul_itm_r_flag ? 1 : reg_IntMulExt_17U_16U_33U_o_mul_itm_t_flag ? 0 : ( | reg_IntMulExt_17U_16U_33U_o_mul_itm_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      IntMulExt_9U_16U_25U_o_mul_itm_2 <= 24'b000000000000000000000000;
    else
      IntMulExt_9U_16U_25U_o_mul_itm_2 <= _016_;
  logic [23:0] _016__X0 ;
  logic [23:0] _016__R0 ;
  logic [23:0] _016__C0 ;
  assign _016__X0 = { 24{ IntMulExt_9U_16U_25U_o_mul_itm_2_S != _016__S }} ;
  assign _016__R0 = 0 ;
  assign _016__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      IntMulExt_9U_16U_25U_o_mul_itm_2_T 		<= !nvdla_core_rstn ? 0 : ( _016__T & _016__X0 );
  always @( posedge nvdla_core_clk )
      IntMulExt_9U_16U_25U_o_mul_itm_2_t_flag 	<= !nvdla_core_rstn ? 0 : IntMulExt_9U_16U_25U_o_mul_itm_2_t_flag ? 1 : | _016__T & ( | _016__X0 );
  always @( posedge nvdla_core_clk )
      IntMulExt_9U_16U_25U_o_mul_itm_2_r_flag 	<= !nvdla_core_rstn ? 0 : IntMulExt_9U_16U_25U_o_mul_itm_2_r_flag ? 1 : IntMulExt_9U_16U_25U_o_mul_itm_2_t_flag ? 0 : ( | IntMulExt_9U_16U_25U_o_mul_itm_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      reg_cfg_truncate_1_2_itm <= 4'b0000;
    else
      reg_cfg_truncate_1_2_itm <= _046_;
  logic [3:0] _046__X0 ;
  logic [3:0] _046__R0 ;
  logic [3:0] _046__C0 ;
  assign _046__X0 = { 4{ reg_cfg_truncate_1_2_itm_S != _046__S }} ;
  assign _046__R0 = 0 ;
  assign _046__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      reg_cfg_truncate_1_2_itm_T 		<= !nvdla_core_rstn ? 0 : ( _046__T & _046__X0 );
  always @( posedge nvdla_core_clk )
      reg_cfg_truncate_1_2_itm_t_flag 	<= !nvdla_core_rstn ? 0 : reg_cfg_truncate_1_2_itm_t_flag ? 1 : | _046__T & ( | _046__X0 );
  always @( posedge nvdla_core_clk )
      reg_cfg_truncate_1_2_itm_r_flag 	<= !nvdla_core_rstn ? 0 : reg_cfg_truncate_1_2_itm_r_flag ? 1 : reg_cfg_truncate_1_2_itm_t_flag ? 0 : ( | reg_cfg_truncate_1_2_itm_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      reg_cfg_truncate_1_itm <= 1'b0;
    else
      reg_cfg_truncate_1_itm <= _048_;
  logic [0:0] _048__X0 ;
  logic [0:0] _048__R0 ;
  logic [0:0] _048__C0 ;
  assign _048__X0 = { 1{ reg_cfg_truncate_1_itm_S != _048__S }} ;
  assign _048__R0 = 0 ;
  assign _048__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      reg_cfg_truncate_1_itm_T 		<= !nvdla_core_rstn ? 0 : ( _048__T & _048__X0 );
  always @( posedge nvdla_core_clk )
      reg_cfg_truncate_1_itm_t_flag 	<= !nvdla_core_rstn ? 0 : reg_cfg_truncate_1_itm_t_flag ? 1 : | _048__T & ( | _048__X0 );
  always @( posedge nvdla_core_clk )
      reg_cfg_truncate_1_itm_r_flag 	<= !nvdla_core_rstn ? 0 : reg_cfg_truncate_1_itm_r_flag ? 1 : reg_cfg_truncate_1_itm_t_flag ? 0 : ( | reg_cfg_truncate_1_itm_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      main_stage_v_2 <= 1'b0;
    else
      main_stage_v_2 <= _036_;
  logic [0:0] _036__X0 ;
  logic [0:0] _036__R0 ;
  logic [0:0] _036__C0 ;
  assign _036__X0 = { 1{ main_stage_v_2_S != _036__S }} ;
  assign _036__R0 = 0 ;
  assign _036__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      main_stage_v_2_T 		<= !nvdla_core_rstn ? 0 : ( _036__T & _036__X0 );
  always @( posedge nvdla_core_clk )
      main_stage_v_2_t_flag 	<= !nvdla_core_rstn ? 0 : main_stage_v_2_t_flag ? 1 : | _036__T & ( | _036__X0 );
  always @( posedge nvdla_core_clk )
      main_stage_v_2_r_flag 	<= !nvdla_core_rstn ? 0 : main_stage_v_2_r_flag ? 1 : main_stage_v_2_t_flag ? 0 : ( | main_stage_v_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      io_read_cfg_precision_rsc_svs_st_3 <= 2'b00;
    else
      io_read_cfg_precision_rsc_svs_st_3 <= _033_;
  logic [1:0] _033__X0 ;
  logic [1:0] _033__R0 ;
  logic [1:0] _033__C0 ;
  assign _033__X0 = { 2{ io_read_cfg_precision_rsc_svs_st_3_S != _033__S }} ;
  assign _033__R0 = 0 ;
  assign _033__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      io_read_cfg_precision_rsc_svs_st_3_T 		<= !nvdla_core_rstn ? 0 : ( _033__T & _033__X0 );
  always @( posedge nvdla_core_clk )
      io_read_cfg_precision_rsc_svs_st_3_t_flag 	<= !nvdla_core_rstn ? 0 : io_read_cfg_precision_rsc_svs_st_3_t_flag ? 1 : | _033__T & ( | _033__X0 );
  always @( posedge nvdla_core_clk )
      io_read_cfg_precision_rsc_svs_st_3_r_flag 	<= !nvdla_core_rstn ? 0 : io_read_cfg_precision_rsc_svs_st_3_r_flag ? 1 : io_read_cfg_precision_rsc_svs_st_3_t_flag ? 0 : ( | io_read_cfg_precision_rsc_svs_st_3_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      main_stage_v_1 <= 1'b0;
    else
      main_stage_v_1 <= _035_;
  logic [0:0] _035__X0 ;
  logic [0:0] _035__R0 ;
  logic [0:0] _035__C0 ;
  assign _035__X0 = { 1{ main_stage_v_1_S != _035__S }} ;
  assign _035__R0 = 0 ;
  assign _035__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      main_stage_v_1_T 		<= !nvdla_core_rstn ? 0 : ( _035__T & _035__X0 );
  always @( posedge nvdla_core_clk )
      main_stage_v_1_t_flag 	<= !nvdla_core_rstn ? 0 : main_stage_v_1_t_flag ? 1 : | _035__T & ( | _035__X0 );
  always @( posedge nvdla_core_clk )
      main_stage_v_1_r_flag 	<= !nvdla_core_rstn ? 0 : main_stage_v_1_r_flag ? 1 : main_stage_v_1_t_flag ? 0 : ( | main_stage_v_1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      reg_chn_data_out_rsci_ld_core_psct_cse <= 1'b0;
    else
      reg_chn_data_out_rsci_ld_core_psct_cse <= _049_;
  logic [0:0] _049__X0 ;
  logic [0:0] _049__R0 ;
  logic [0:0] _049__C0 ;
  assign _049__X0 = { 1{ reg_chn_data_out_rsci_ld_core_psct_cse_S != _049__S }} ;
  assign _049__R0 = 0 ;
  assign _049__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      reg_chn_data_out_rsci_ld_core_psct_cse_T 		<= !nvdla_core_rstn ? 0 : ( _049__T & _049__X0 );
  always @( posedge nvdla_core_clk )
      reg_chn_data_out_rsci_ld_core_psct_cse_t_flag 	<= !nvdla_core_rstn ? 0 : reg_chn_data_out_rsci_ld_core_psct_cse_t_flag ? 1 : | _049__T & ( | _049__X0 );
  always @( posedge nvdla_core_clk )
      reg_chn_data_out_rsci_ld_core_psct_cse_r_flag 	<= !nvdla_core_rstn ? 0 : reg_chn_data_out_rsci_ld_core_psct_cse_r_flag ? 1 : reg_chn_data_out_rsci_ld_core_psct_cse_t_flag ? 0 : ( | reg_chn_data_out_rsci_ld_core_psct_cse_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_data_out_rsci_d_17 <= 1'b0;
    else
      chn_data_out_rsci_d_17 <= _026_;
  logic [0:0] _026__X0 ;
  logic [0:0] _026__R0 ;
  logic [0:0] _026__C0 ;
  assign _026__X0 = { 1{ chn_data_out_rsci_d_17_S != _026__S }} ;
  assign _026__R0 = 0 ;
  assign _026__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_data_out_rsci_d_17_T 		<= !nvdla_core_rstn ? 0 : ( _026__T & _026__X0 );
  always @( posedge nvdla_core_clk )
      chn_data_out_rsci_d_17_t_flag 	<= !nvdla_core_rstn ? 0 : chn_data_out_rsci_d_17_t_flag ? 1 : | _026__T & ( | _026__X0 );
  always @( posedge nvdla_core_clk )
      chn_data_out_rsci_d_17_r_flag 	<= !nvdla_core_rstn ? 0 : chn_data_out_rsci_d_17_r_flag ? 1 : chn_data_out_rsci_d_17_t_flag ? 0 : ( | chn_data_out_rsci_d_17_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_data_out_rsci_d_16 <= 1'b0;
    else
      chn_data_out_rsci_d_16 <= _025_;
  logic [0:0] _025__X0 ;
  logic [0:0] _025__R0 ;
  logic [0:0] _025__C0 ;
  assign _025__X0 = { 1{ chn_data_out_rsci_d_16_S != _025__S }} ;
  assign _025__R0 = 0 ;
  assign _025__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_data_out_rsci_d_16_T 		<= !nvdla_core_rstn ? 0 : ( _025__T & _025__X0 );
  always @( posedge nvdla_core_clk )
      chn_data_out_rsci_d_16_t_flag 	<= !nvdla_core_rstn ? 0 : chn_data_out_rsci_d_16_t_flag ? 1 : | _025__T & ( | _025__X0 );
  always @( posedge nvdla_core_clk )
      chn_data_out_rsci_d_16_r_flag 	<= !nvdla_core_rstn ? 0 : chn_data_out_rsci_d_16_r_flag ? 1 : chn_data_out_rsci_d_16_t_flag ? 0 : ( | chn_data_out_rsci_d_16_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_data_out_rsci_d_13_10 <= 4'b0000;
    else
      chn_data_out_rsci_d_13_10 <= _022_;
  logic [3:0] _022__X0 ;
  logic [3:0] _022__R0 ;
  logic [3:0] _022__C0 ;
  assign _022__X0 = { 4{ chn_data_out_rsci_d_13_10_S != _022__S }} ;
  assign _022__R0 = 0 ;
  assign _022__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_data_out_rsci_d_13_10_T 		<= !nvdla_core_rstn ? 0 : ( _022__T & _022__X0 );
  always @( posedge nvdla_core_clk )
      chn_data_out_rsci_d_13_10_t_flag 	<= !nvdla_core_rstn ? 0 : chn_data_out_rsci_d_13_10_t_flag ? 1 : | _022__T & ( | _022__X0 );
  always @( posedge nvdla_core_clk )
      chn_data_out_rsci_d_13_10_r_flag 	<= !nvdla_core_rstn ? 0 : chn_data_out_rsci_d_13_10_r_flag ? 1 : chn_data_out_rsci_d_13_10_t_flag ? 0 : ( | chn_data_out_rsci_d_13_10_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_data_out_rsci_d_9 <= 1'b0;
    else
      chn_data_out_rsci_d_9 <= _029_;
  logic [0:0] _029__X0 ;
  logic [0:0] _029__R0 ;
  logic [0:0] _029__C0 ;
  assign _029__X0 = { 1{ chn_data_out_rsci_d_9_S != _029__S }} ;
  assign _029__R0 = 0 ;
  assign _029__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_data_out_rsci_d_9_T 		<= !nvdla_core_rstn ? 0 : ( _029__T & _029__X0 );
  always @( posedge nvdla_core_clk )
      chn_data_out_rsci_d_9_t_flag 	<= !nvdla_core_rstn ? 0 : chn_data_out_rsci_d_9_t_flag ? 1 : | _029__T & ( | _029__X0 );
  always @( posedge nvdla_core_clk )
      chn_data_out_rsci_d_9_r_flag 	<= !nvdla_core_rstn ? 0 : chn_data_out_rsci_d_9_r_flag ? 1 : chn_data_out_rsci_d_9_t_flag ? 0 : ( | chn_data_out_rsci_d_9_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_data_out_rsci_d_8 <= 1'b0;
    else
      chn_data_out_rsci_d_8 <= _028_;
  logic [0:0] _028__X0 ;
  logic [0:0] _028__R0 ;
  logic [0:0] _028__C0 ;
  assign _028__X0 = { 1{ chn_data_out_rsci_d_8_S != _028__S }} ;
  assign _028__R0 = 0 ;
  assign _028__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_data_out_rsci_d_8_T 		<= !nvdla_core_rstn ? 0 : ( _028__T & _028__X0 );
  always @( posedge nvdla_core_clk )
      chn_data_out_rsci_d_8_t_flag 	<= !nvdla_core_rstn ? 0 : chn_data_out_rsci_d_8_t_flag ? 1 : | _028__T & ( | _028__X0 );
  always @( posedge nvdla_core_clk )
      chn_data_out_rsci_d_8_r_flag 	<= !nvdla_core_rstn ? 0 : chn_data_out_rsci_d_8_r_flag ? 1 : chn_data_out_rsci_d_8_t_flag ? 0 : ( | chn_data_out_rsci_d_8_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_data_out_rsci_d_7_1 <= 7'b0000000;
    else
      chn_data_out_rsci_d_7_1 <= _027_;
  logic [6:0] _027__X0 ;
  logic [6:0] _027__R0 ;
  logic [6:0] _027__C0 ;
  assign _027__X0 = { 7{ chn_data_out_rsci_d_7_1_S != _027__S }} ;
  assign _027__R0 = 0 ;
  assign _027__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_data_out_rsci_d_7_1_T 		<= !nvdla_core_rstn ? 0 : ( _027__T & _027__X0 );
  always @( posedge nvdla_core_clk )
      chn_data_out_rsci_d_7_1_t_flag 	<= !nvdla_core_rstn ? 0 : chn_data_out_rsci_d_7_1_t_flag ? 1 : | _027__T & ( | _027__X0 );
  always @( posedge nvdla_core_clk )
      chn_data_out_rsci_d_7_1_r_flag 	<= !nvdla_core_rstn ? 0 : chn_data_out_rsci_d_7_1_r_flag ? 1 : chn_data_out_rsci_d_7_1_t_flag ? 0 : ( | chn_data_out_rsci_d_7_1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_data_out_rsci_d_0 <= 1'b0;
    else
      chn_data_out_rsci_d_0 <= _021_;
  logic [0:0] _021__X0 ;
  logic [0:0] _021__R0 ;
  logic [0:0] _021__C0 ;
  assign _021__X0 = { 1{ chn_data_out_rsci_d_0_S != _021__S }} ;
  assign _021__R0 = 0 ;
  assign _021__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_data_out_rsci_d_0_T 		<= !nvdla_core_rstn ? 0 : ( _021__T & _021__X0 );
  always @( posedge nvdla_core_clk )
      chn_data_out_rsci_d_0_t_flag 	<= !nvdla_core_rstn ? 0 : chn_data_out_rsci_d_0_t_flag ? 1 : | _021__T & ( | _021__X0 );
  always @( posedge nvdla_core_clk )
      chn_data_out_rsci_d_0_r_flag 	<= !nvdla_core_rstn ? 0 : chn_data_out_rsci_d_0_r_flag ? 1 : chn_data_out_rsci_d_0_t_flag ? 0 : ( | chn_data_out_rsci_d_0_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_data_out_rsci_d_15 <= 1'b0;
    else
      chn_data_out_rsci_d_15 <= _024_;
  logic [0:0] _024__X0 ;
  logic [0:0] _024__R0 ;
  logic [0:0] _024__C0 ;
  assign _024__X0 = { 1{ chn_data_out_rsci_d_15_S != _024__S }} ;
  assign _024__R0 = 0 ;
  assign _024__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_data_out_rsci_d_15_T 		<= !nvdla_core_rstn ? 0 : ( _024__T & _024__X0 );
  always @( posedge nvdla_core_clk )
      chn_data_out_rsci_d_15_t_flag 	<= !nvdla_core_rstn ? 0 : chn_data_out_rsci_d_15_t_flag ? 1 : | _024__T & ( | _024__X0 );
  always @( posedge nvdla_core_clk )
      chn_data_out_rsci_d_15_r_flag 	<= !nvdla_core_rstn ? 0 : chn_data_out_rsci_d_15_r_flag ? 1 : chn_data_out_rsci_d_15_t_flag ? 0 : ( | chn_data_out_rsci_d_15_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_data_out_rsci_d_14 <= 1'b0;
    else
      chn_data_out_rsci_d_14 <= _023_;
  logic [0:0] _023__X0 ;
  logic [0:0] _023__R0 ;
  logic [0:0] _023__C0 ;
  assign _023__X0 = { 1{ chn_data_out_rsci_d_14_S != _023__S }} ;
  assign _023__R0 = 0 ;
  assign _023__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_data_out_rsci_d_14_T 		<= !nvdla_core_rstn ? 0 : ( _023__T & _023__X0 );
  always @( posedge nvdla_core_clk )
      chn_data_out_rsci_d_14_t_flag 	<= !nvdla_core_rstn ? 0 : chn_data_out_rsci_d_14_t_flag ? 1 : | _023__T & ( | _023__X0 );
  always @( posedge nvdla_core_clk )
      chn_data_out_rsci_d_14_r_flag 	<= !nvdla_core_rstn ? 0 : chn_data_out_rsci_d_14_r_flag ? 1 : chn_data_out_rsci_d_14_t_flag ? 0 : ( | chn_data_out_rsci_d_14_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_data_in_rsci_ld_core_psct <= 1'b0;
    else
      chn_data_in_rsci_ld_core_psct <= _020_;
  logic [0:0] _020__X0 ;
  logic [0:0] _020__R0 ;
  logic [0:0] _020__C0 ;
  assign _020__X0 = { 1{ chn_data_in_rsci_ld_core_psct_S != _020__S }} ;
  assign _020__R0 = 0 ;
  assign _020__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_data_in_rsci_ld_core_psct_T 		<= !nvdla_core_rstn ? 0 : ( _020__T & _020__X0 );
  always @( posedge nvdla_core_clk )
      chn_data_in_rsci_ld_core_psct_t_flag 	<= !nvdla_core_rstn ? 0 : chn_data_in_rsci_ld_core_psct_t_flag ? 1 : | _020__T & ( | _020__X0 );
  always @( posedge nvdla_core_clk )
      chn_data_in_rsci_ld_core_psct_r_flag 	<= !nvdla_core_rstn ? 0 : chn_data_in_rsci_ld_core_psct_r_flag ? 1 : chn_data_in_rsci_ld_core_psct_t_flag ? 0 : ( | chn_data_in_rsci_ld_core_psct_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_data_out_rsci_iswt0 <= 1'b0;
    else
      chn_data_out_rsci_iswt0 <= _030_;
  logic [0:0] _030__X0 ;
  logic [0:0] _030__R0 ;
  logic [0:0] _030__C0 ;
  assign _030__X0 = { 1{ chn_data_out_rsci_iswt0_S != _030__S }} ;
  assign _030__R0 = 0 ;
  assign _030__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_data_out_rsci_iswt0_T 		<= !nvdla_core_rstn ? 0 : ( _030__T & _030__X0 );
  always @( posedge nvdla_core_clk )
      chn_data_out_rsci_iswt0_t_flag 	<= !nvdla_core_rstn ? 0 : chn_data_out_rsci_iswt0_t_flag ? 1 : | _030__T & ( | _030__X0 );
  always @( posedge nvdla_core_clk )
      chn_data_out_rsci_iswt0_r_flag 	<= !nvdla_core_rstn ? 0 : chn_data_out_rsci_iswt0_r_flag ? 1 : chn_data_out_rsci_iswt0_t_flag ? 0 : ( | chn_data_out_rsci_iswt0_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_data_in_rsci_iswt0 <= 1'b0;
    else
      chn_data_in_rsci_iswt0 <= _019_;
  logic [0:0] _019__X0 ;
  logic [0:0] _019__R0 ;
  logic [0:0] _019__C0 ;
  assign _019__X0 = { 1{ chn_data_in_rsci_iswt0_S != _019__S }} ;
  assign _019__R0 = 0 ;
  assign _019__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_data_in_rsci_iswt0_T 		<= !nvdla_core_rstn ? 0 : ( _019__T & _019__X0 );
  always @( posedge nvdla_core_clk )
      chn_data_in_rsci_iswt0_t_flag 	<= !nvdla_core_rstn ? 0 : chn_data_in_rsci_iswt0_t_flag ? 1 : | _019__T & ( | _019__X0 );
  always @( posedge nvdla_core_clk )
      chn_data_in_rsci_iswt0_r_flag 	<= !nvdla_core_rstn ? 0 : chn_data_in_rsci_iswt0_r_flag ? 1 : chn_data_in_rsci_iswt0_t_flag ? 0 : ( | chn_data_in_rsci_iswt0_R ) ;
  logic [15:0] fangyuan19;
  logic [15:0] fangyuan19_T ;
  logic [15:0] fangyuan19_R ;
  logic [15:0] fangyuan19_C ;
  logic [15:0] fangyuan19_X ;
  assign fangyuan19 = { _006_[15], _006_[15], _006_[15], _006_[15], _006_[15], _006_[15], _006_[15], _006_[15], _006_[15], _006_[6:0] };
  assign fangyuan19_T = {  _006__T [15] , _006__T [15] , _006__T [15] , _006__T [15] , _006__T [15] , _006__T [15] , _006__T [15] , _006__T [15] , _006__T [15] , _006__T [6:0]  };
  logic [5:0] fangyuan19_S ;
  assign fangyuan19_S = 0 ;
  assign { _006__R0 [7], _006__R0 [8], _006__R0 [9], _006__R0 [10], _006__R0 [11], _006__R0 [12], _006__R0 [13], _006__R0 [14] } = 0;
  assign { _006__X0 [7], _006__X0 [8], _006__X0 [9], _006__X0 [10], _006__X0 [11], _006__X0 [12], _006__X0 [13], _006__X0 [14] } = 0;
  assign { _006__C0 [7], _006__C0 [8], _006__C0 [9], _006__C0 [10], _006__C0 [11], _006__C0 [12], _006__C0 [13], _006__C0 [14] } = 0;
  logic [15:0] _006__R1 ;
  logic [15:0] _006__X1 ;
  logic [15:0] _006__C1 ;
  assign _006__R1 [15:15] = fangyuan19_R [15:15] ;
  assign _006__X1 [15:15] = fangyuan19_X [15:15] ;
  assign _006__C1 [15:15] = fangyuan19_C [15:15] ;
  assign { _006__R1 [0], _006__R1 [1], _006__R1 [2], _006__R1 [3], _006__R1 [4], _006__R1 [5], _006__R1 [6], _006__R1 [7], _006__R1 [8], _006__R1 [9], _006__R1 [10], _006__R1 [11], _006__R1 [12], _006__R1 [13], _006__R1 [14] } = 0;
  assign { _006__X1 [0], _006__X1 [1], _006__X1 [2], _006__X1 [3], _006__X1 [4], _006__X1 [5], _006__X1 [6], _006__X1 [7], _006__X1 [8], _006__X1 [9], _006__X1 [10], _006__X1 [11], _006__X1 [12], _006__X1 [13], _006__X1 [14] } = 0;
  assign { _006__C1 [0], _006__C1 [1], _006__C1 [2], _006__C1 [3], _006__C1 [4], _006__C1 [5], _006__C1 [6], _006__C1 [7], _006__C1 [8], _006__C1 [9], _006__C1 [10], _006__C1 [11], _006__C1 [12], _006__C1 [13], _006__C1 [14] } = 0;
  logic [15:0] _006__R2 ;
  logic [15:0] _006__X2 ;
  logic [15:0] _006__C2 ;
  assign _006__R2 [15:15] = fangyuan19_R [14:14] ;
  assign _006__X2 [15:15] = fangyuan19_X [14:14] ;
  assign _006__C2 [15:15] = fangyuan19_C [14:14] ;
  assign { _006__R2 [0], _006__R2 [1], _006__R2 [2], _006__R2 [3], _006__R2 [4], _006__R2 [5], _006__R2 [6], _006__R2 [7], _006__R2 [8], _006__R2 [9], _006__R2 [10], _006__R2 [11], _006__R2 [12], _006__R2 [13], _006__R2 [14] } = 0;
  assign { _006__X2 [0], _006__X2 [1], _006__X2 [2], _006__X2 [3], _006__X2 [4], _006__X2 [5], _006__X2 [6], _006__X2 [7], _006__X2 [8], _006__X2 [9], _006__X2 [10], _006__X2 [11], _006__X2 [12], _006__X2 [13], _006__X2 [14] } = 0;
  assign { _006__C2 [0], _006__C2 [1], _006__C2 [2], _006__C2 [3], _006__C2 [4], _006__C2 [5], _006__C2 [6], _006__C2 [7], _006__C2 [8], _006__C2 [9], _006__C2 [10], _006__C2 [11], _006__C2 [12], _006__C2 [13], _006__C2 [14] } = 0;
  logic [15:0] _006__R3 ;
  logic [15:0] _006__X3 ;
  logic [15:0] _006__C3 ;
  assign _006__R3 [15:15] = fangyuan19_R [13:13] ;
  assign _006__X3 [15:15] = fangyuan19_X [13:13] ;
  assign _006__C3 [15:15] = fangyuan19_C [13:13] ;
  assign { _006__R3 [0], _006__R3 [1], _006__R3 [2], _006__R3 [3], _006__R3 [4], _006__R3 [5], _006__R3 [6], _006__R3 [7], _006__R3 [8], _006__R3 [9], _006__R3 [10], _006__R3 [11], _006__R3 [12], _006__R3 [13], _006__R3 [14] } = 0;
  assign { _006__X3 [0], _006__X3 [1], _006__X3 [2], _006__X3 [3], _006__X3 [4], _006__X3 [5], _006__X3 [6], _006__X3 [7], _006__X3 [8], _006__X3 [9], _006__X3 [10], _006__X3 [11], _006__X3 [12], _006__X3 [13], _006__X3 [14] } = 0;
  assign { _006__C3 [0], _006__C3 [1], _006__C3 [2], _006__C3 [3], _006__C3 [4], _006__C3 [5], _006__C3 [6], _006__C3 [7], _006__C3 [8], _006__C3 [9], _006__C3 [10], _006__C3 [11], _006__C3 [12], _006__C3 [13], _006__C3 [14] } = 0;
  logic [15:0] _006__R4 ;
  logic [15:0] _006__X4 ;
  logic [15:0] _006__C4 ;
  assign _006__R4 [15:15] = fangyuan19_R [12:12] ;
  assign _006__X4 [15:15] = fangyuan19_X [12:12] ;
  assign _006__C4 [15:15] = fangyuan19_C [12:12] ;
  assign { _006__R4 [0], _006__R4 [1], _006__R4 [2], _006__R4 [3], _006__R4 [4], _006__R4 [5], _006__R4 [6], _006__R4 [7], _006__R4 [8], _006__R4 [9], _006__R4 [10], _006__R4 [11], _006__R4 [12], _006__R4 [13], _006__R4 [14] } = 0;
  assign { _006__X4 [0], _006__X4 [1], _006__X4 [2], _006__X4 [3], _006__X4 [4], _006__X4 [5], _006__X4 [6], _006__X4 [7], _006__X4 [8], _006__X4 [9], _006__X4 [10], _006__X4 [11], _006__X4 [12], _006__X4 [13], _006__X4 [14] } = 0;
  assign { _006__C4 [0], _006__C4 [1], _006__C4 [2], _006__C4 [3], _006__C4 [4], _006__C4 [5], _006__C4 [6], _006__C4 [7], _006__C4 [8], _006__C4 [9], _006__C4 [10], _006__C4 [11], _006__C4 [12], _006__C4 [13], _006__C4 [14] } = 0;
  logic [15:0] _006__R5 ;
  logic [15:0] _006__X5 ;
  logic [15:0] _006__C5 ;
  assign _006__R5 [15:15] = fangyuan19_R [11:11] ;
  assign _006__X5 [15:15] = fangyuan19_X [11:11] ;
  assign _006__C5 [15:15] = fangyuan19_C [11:11] ;
  assign { _006__R5 [0], _006__R5 [1], _006__R5 [2], _006__R5 [3], _006__R5 [4], _006__R5 [5], _006__R5 [6], _006__R5 [7], _006__R5 [8], _006__R5 [9], _006__R5 [10], _006__R5 [11], _006__R5 [12], _006__R5 [13], _006__R5 [14] } = 0;
  assign { _006__X5 [0], _006__X5 [1], _006__X5 [2], _006__X5 [3], _006__X5 [4], _006__X5 [5], _006__X5 [6], _006__X5 [7], _006__X5 [8], _006__X5 [9], _006__X5 [10], _006__X5 [11], _006__X5 [12], _006__X5 [13], _006__X5 [14] } = 0;
  assign { _006__C5 [0], _006__C5 [1], _006__C5 [2], _006__C5 [3], _006__C5 [4], _006__C5 [5], _006__C5 [6], _006__C5 [7], _006__C5 [8], _006__C5 [9], _006__C5 [10], _006__C5 [11], _006__C5 [12], _006__C5 [13], _006__C5 [14] } = 0;
  logic [15:0] _006__R6 ;
  logic [15:0] _006__X6 ;
  logic [15:0] _006__C6 ;
  assign _006__R6 [15:15] = fangyuan19_R [10:10] ;
  assign _006__X6 [15:15] = fangyuan19_X [10:10] ;
  assign _006__C6 [15:15] = fangyuan19_C [10:10] ;
  assign { _006__R6 [0], _006__R6 [1], _006__R6 [2], _006__R6 [3], _006__R6 [4], _006__R6 [5], _006__R6 [6], _006__R6 [7], _006__R6 [8], _006__R6 [9], _006__R6 [10], _006__R6 [11], _006__R6 [12], _006__R6 [13], _006__R6 [14] } = 0;
  assign { _006__X6 [0], _006__X6 [1], _006__X6 [2], _006__X6 [3], _006__X6 [4], _006__X6 [5], _006__X6 [6], _006__X6 [7], _006__X6 [8], _006__X6 [9], _006__X6 [10], _006__X6 [11], _006__X6 [12], _006__X6 [13], _006__X6 [14] } = 0;
  assign { _006__C6 [0], _006__C6 [1], _006__C6 [2], _006__C6 [3], _006__C6 [4], _006__C6 [5], _006__C6 [6], _006__C6 [7], _006__C6 [8], _006__C6 [9], _006__C6 [10], _006__C6 [11], _006__C6 [12], _006__C6 [13], _006__C6 [14] } = 0;
  logic [15:0] _006__R7 ;
  logic [15:0] _006__X7 ;
  logic [15:0] _006__C7 ;
  assign _006__R7 [15:15] = fangyuan19_R [9:9] ;
  assign _006__X7 [15:15] = fangyuan19_X [9:9] ;
  assign _006__C7 [15:15] = fangyuan19_C [9:9] ;
  assign { _006__R7 [0], _006__R7 [1], _006__R7 [2], _006__R7 [3], _006__R7 [4], _006__R7 [5], _006__R7 [6], _006__R7 [7], _006__R7 [8], _006__R7 [9], _006__R7 [10], _006__R7 [11], _006__R7 [12], _006__R7 [13], _006__R7 [14] } = 0;
  assign { _006__X7 [0], _006__X7 [1], _006__X7 [2], _006__X7 [3], _006__X7 [4], _006__X7 [5], _006__X7 [6], _006__X7 [7], _006__X7 [8], _006__X7 [9], _006__X7 [10], _006__X7 [11], _006__X7 [12], _006__X7 [13], _006__X7 [14] } = 0;
  assign { _006__C7 [0], _006__C7 [1], _006__C7 [2], _006__C7 [3], _006__C7 [4], _006__C7 [5], _006__C7 [6], _006__C7 [7], _006__C7 [8], _006__C7 [9], _006__C7 [10], _006__C7 [11], _006__C7 [12], _006__C7 [13], _006__C7 [14] } = 0;
  logic [15:0] _006__R8 ;
  logic [15:0] _006__X8 ;
  logic [15:0] _006__C8 ;
  assign _006__R8 [15:15] = fangyuan19_R [8:8] ;
  assign _006__X8 [15:15] = fangyuan19_X [8:8] ;
  assign _006__C8 [15:15] = fangyuan19_C [8:8] ;
  assign { _006__R8 [0], _006__R8 [1], _006__R8 [2], _006__R8 [3], _006__R8 [4], _006__R8 [5], _006__R8 [6], _006__R8 [7], _006__R8 [8], _006__R8 [9], _006__R8 [10], _006__R8 [11], _006__R8 [12], _006__R8 [13], _006__R8 [14] } = 0;
  assign { _006__X8 [0], _006__X8 [1], _006__X8 [2], _006__X8 [3], _006__X8 [4], _006__X8 [5], _006__X8 [6], _006__X8 [7], _006__X8 [8], _006__X8 [9], _006__X8 [10], _006__X8 [11], _006__X8 [12], _006__X8 [13], _006__X8 [14] } = 0;
  assign { _006__C8 [0], _006__C8 [1], _006__C8 [2], _006__C8 [3], _006__C8 [4], _006__C8 [5], _006__C8 [6], _006__C8 [7], _006__C8 [8], _006__C8 [9], _006__C8 [10], _006__C8 [11], _006__C8 [12], _006__C8 [13], _006__C8 [14] } = 0;
  logic [15:0] _006__R9 ;
  logic [15:0] _006__X9 ;
  logic [15:0] _006__C9 ;
  assign _006__R9 [15:15] = fangyuan19_R [7:7] ;
  assign _006__X9 [15:15] = fangyuan19_X [7:7] ;
  assign _006__C9 [15:15] = fangyuan19_C [7:7] ;
  assign _006__R9 [6:0] = fangyuan19_R [6:0] ;
  assign _006__X9 [6:0] = fangyuan19_X [6:0] ;
  assign _006__C9 [6:0] = fangyuan19_C [6:0] ;

  assign IntSubExt_8U_8U_9U_o_mux_5_nl = IntSubExt_16U_16U_17U_o_and_tmp ? _007_ : fangyuan19;
  logic [0:0] IntSubExt_16U_16U_17U_o_and_tmp_C0 ;
  logic [0:0] IntSubExt_16U_16U_17U_o_and_tmp_R0 ;
  logic [0:0] IntSubExt_16U_16U_17U_o_and_tmp_X0 ;
  assign IntSubExt_16U_16U_17U_o_and_tmp_C0 = | IntSubExt_8U_8U_9U_o_mux_5_nl_C ;
  assign IntSubExt_16U_16U_17U_o_and_tmp_X0 = | IntSubExt_8U_8U_9U_o_mux_5_nl_X ;
  assign IntSubExt_8U_8U_9U_o_mux_5_nl_T = IntSubExt_16U_16U_17U_o_and_tmp ? ( { 16{ IntSubExt_16U_16U_17U_o_and_tmp_T  }} | _007__T ) : ( { 16{ IntSubExt_16U_16U_17U_o_and_tmp_T  }} | fangyuan19_T );
  assign IntSubExt_8U_8U_9U_o_mux_5_nl_S = IntSubExt_16U_16U_17U_o_and_tmp ? _007__S : fangyuan19_S ;
  assign IntSubExt_16U_16U_17U_o_and_tmp_R0 = ( | (IntSubExt_8U_8U_9U_o_mux_5_nl_R | ( IntSubExt_8U_8U_9U_o_mux_5_nl_C & ( { 16{ IntSubExt_16U_16U_17U_o_and_tmp }} & _007__T | { 16{ !IntSubExt_16U_16U_17U_o_and_tmp }} & fangyuan19_T )))) && _007_ != fangyuan19 ;
  logic [15:0] _007__C0 ;
  logic [15:0] _007__R0 ;
  logic [15:0] _007__X0 ;
  assign _007__C0 = { 16{ IntSubExt_16U_16U_17U_o_and_tmp }} ;
  assign _007__R0 = { 16{ IntSubExt_16U_16U_17U_o_and_tmp }} & ( IntSubExt_8U_8U_9U_o_mux_5_nl_R | ( { 16{ IntSubExt_16U_16U_17U_o_and_tmp_T  }} & IntSubExt_8U_8U_9U_o_mux_5_nl_C ));
  assign _007__X0 = { 16{ IntSubExt_16U_16U_17U_o_and_tmp }} & IntSubExt_8U_8U_9U_o_mux_5_nl_X ;
  logic [15:0] fangyuan19_C0 ;
  logic [15:0] fangyuan19_R0 ;
  logic [15:0] fangyuan19_X0 ;
  assign fangyuan19_C0 = { 16{ !IntSubExt_16U_16U_17U_o_and_tmp }} ;
  assign fangyuan19_R0 = { 16{ !IntSubExt_16U_16U_17U_o_and_tmp }} & ( IntSubExt_8U_8U_9U_o_mux_5_nl_R | ( { 16{ IntSubExt_16U_16U_17U_o_and_tmp_T  }} & IntSubExt_8U_8U_9U_o_mux_5_nl_C ));
  assign fangyuan19_X0 = { 16{ !IntSubExt_16U_16U_17U_o_and_tmp }} & IntSubExt_8U_8U_9U_o_mux_5_nl_X ;
  logic [7:0] fangyuan20;
  logic [7:0] fangyuan20_T ;
  logic [7:0] fangyuan20_R ;
  logic [7:0] fangyuan20_C ;
  logic [7:0] fangyuan20_X ;
  assign fangyuan20 = { chn_data_in_rsci_d_mxwt[7], chn_data_in_rsci_d_mxwt[7], chn_data_in_rsci_d_mxwt[7], chn_data_in_rsci_d_mxwt[7], chn_data_in_rsci_d_mxwt[7], chn_data_in_rsci_d_mxwt[7], chn_data_in_rsci_d_mxwt[7], chn_data_in_rsci_d_mxwt[7] };
  assign fangyuan20_T = {  chn_data_in_rsci_d_mxwt_T [7] , chn_data_in_rsci_d_mxwt_T [7] , chn_data_in_rsci_d_mxwt_T [7] , chn_data_in_rsci_d_mxwt_T [7] , chn_data_in_rsci_d_mxwt_T [7] , chn_data_in_rsci_d_mxwt_T [7] , chn_data_in_rsci_d_mxwt_T [7] , chn_data_in_rsci_d_mxwt_T [7]  };
  logic [5:0] fangyuan20_S ;
  assign fangyuan20_S = 0 ;
  assign chn_data_in_rsci_d_mxwt_R3 [7:7] = fangyuan20_R [7:7] ;
  assign chn_data_in_rsci_d_mxwt_X3 [7:7] = fangyuan20_X [7:7] ;
  assign chn_data_in_rsci_d_mxwt_C3 [7:7] = fangyuan20_C [7:7] ;
  assign { chn_data_in_rsci_d_mxwt_R3 [0], chn_data_in_rsci_d_mxwt_R3 [1], chn_data_in_rsci_d_mxwt_R3 [2], chn_data_in_rsci_d_mxwt_R3 [3], chn_data_in_rsci_d_mxwt_R3 [4], chn_data_in_rsci_d_mxwt_R3 [5], chn_data_in_rsci_d_mxwt_R3 [6], chn_data_in_rsci_d_mxwt_R3 [8], chn_data_in_rsci_d_mxwt_R3 [9], chn_data_in_rsci_d_mxwt_R3 [10], chn_data_in_rsci_d_mxwt_R3 [11], chn_data_in_rsci_d_mxwt_R3 [12], chn_data_in_rsci_d_mxwt_R3 [13], chn_data_in_rsci_d_mxwt_R3 [15:15] } = 0;
  assign { chn_data_in_rsci_d_mxwt_X3 [0], chn_data_in_rsci_d_mxwt_X3 [1], chn_data_in_rsci_d_mxwt_X3 [2], chn_data_in_rsci_d_mxwt_X3 [3], chn_data_in_rsci_d_mxwt_X3 [4], chn_data_in_rsci_d_mxwt_X3 [5], chn_data_in_rsci_d_mxwt_X3 [6], chn_data_in_rsci_d_mxwt_X3 [8], chn_data_in_rsci_d_mxwt_X3 [9], chn_data_in_rsci_d_mxwt_X3 [10], chn_data_in_rsci_d_mxwt_X3 [11], chn_data_in_rsci_d_mxwt_X3 [12], chn_data_in_rsci_d_mxwt_X3 [13], chn_data_in_rsci_d_mxwt_X3 [15:15] } = 0;
  assign { chn_data_in_rsci_d_mxwt_C3 [0], chn_data_in_rsci_d_mxwt_C3 [1], chn_data_in_rsci_d_mxwt_C3 [2], chn_data_in_rsci_d_mxwt_C3 [3], chn_data_in_rsci_d_mxwt_C3 [4], chn_data_in_rsci_d_mxwt_C3 [5], chn_data_in_rsci_d_mxwt_C3 [6], chn_data_in_rsci_d_mxwt_C3 [8], chn_data_in_rsci_d_mxwt_C3 [9], chn_data_in_rsci_d_mxwt_C3 [10], chn_data_in_rsci_d_mxwt_C3 [11], chn_data_in_rsci_d_mxwt_C3 [12], chn_data_in_rsci_d_mxwt_C3 [13], chn_data_in_rsci_d_mxwt_C3 [15:15] } = 0;
  logic [15:0] chn_data_in_rsci_d_mxwt_R4 ;
  logic [15:0] chn_data_in_rsci_d_mxwt_X4 ;
  logic [15:0] chn_data_in_rsci_d_mxwt_C4 ;
  assign chn_data_in_rsci_d_mxwt_R4 [7:7] = fangyuan20_R [6:6] ;
  assign chn_data_in_rsci_d_mxwt_X4 [7:7] = fangyuan20_X [6:6] ;
  assign chn_data_in_rsci_d_mxwt_C4 [7:7] = fangyuan20_C [6:6] ;
  assign { chn_data_in_rsci_d_mxwt_R4 [0], chn_data_in_rsci_d_mxwt_R4 [1], chn_data_in_rsci_d_mxwt_R4 [2], chn_data_in_rsci_d_mxwt_R4 [3], chn_data_in_rsci_d_mxwt_R4 [4], chn_data_in_rsci_d_mxwt_R4 [5], chn_data_in_rsci_d_mxwt_R4 [6], chn_data_in_rsci_d_mxwt_R4 [15:8] } = 0;
  assign { chn_data_in_rsci_d_mxwt_X4 [0], chn_data_in_rsci_d_mxwt_X4 [1], chn_data_in_rsci_d_mxwt_X4 [2], chn_data_in_rsci_d_mxwt_X4 [3], chn_data_in_rsci_d_mxwt_X4 [4], chn_data_in_rsci_d_mxwt_X4 [5], chn_data_in_rsci_d_mxwt_X4 [6], chn_data_in_rsci_d_mxwt_X4 [15:8] } = 0;
  assign { chn_data_in_rsci_d_mxwt_C4 [0], chn_data_in_rsci_d_mxwt_C4 [1], chn_data_in_rsci_d_mxwt_C4 [2], chn_data_in_rsci_d_mxwt_C4 [3], chn_data_in_rsci_d_mxwt_C4 [4], chn_data_in_rsci_d_mxwt_C4 [5], chn_data_in_rsci_d_mxwt_C4 [6], chn_data_in_rsci_d_mxwt_C4 [15:8] } = 0;
  logic [15:0] chn_data_in_rsci_d_mxwt_R5 ;
  logic [15:0] chn_data_in_rsci_d_mxwt_X5 ;
  logic [15:0] chn_data_in_rsci_d_mxwt_C5 ;
  assign chn_data_in_rsci_d_mxwt_R5 [7:7] = fangyuan20_R [5:5] ;
  assign chn_data_in_rsci_d_mxwt_X5 [7:7] = fangyuan20_X [5:5] ;
  assign chn_data_in_rsci_d_mxwt_C5 [7:7] = fangyuan20_C [5:5] ;
  assign { chn_data_in_rsci_d_mxwt_R5 [0], chn_data_in_rsci_d_mxwt_R5 [1], chn_data_in_rsci_d_mxwt_R5 [2], chn_data_in_rsci_d_mxwt_R5 [3], chn_data_in_rsci_d_mxwt_R5 [4], chn_data_in_rsci_d_mxwt_R5 [5], chn_data_in_rsci_d_mxwt_R5 [6], chn_data_in_rsci_d_mxwt_R5 [15:8] } = 0;
  assign { chn_data_in_rsci_d_mxwt_X5 [0], chn_data_in_rsci_d_mxwt_X5 [1], chn_data_in_rsci_d_mxwt_X5 [2], chn_data_in_rsci_d_mxwt_X5 [3], chn_data_in_rsci_d_mxwt_X5 [4], chn_data_in_rsci_d_mxwt_X5 [5], chn_data_in_rsci_d_mxwt_X5 [6], chn_data_in_rsci_d_mxwt_X5 [15:8] } = 0;
  assign { chn_data_in_rsci_d_mxwt_C5 [0], chn_data_in_rsci_d_mxwt_C5 [1], chn_data_in_rsci_d_mxwt_C5 [2], chn_data_in_rsci_d_mxwt_C5 [3], chn_data_in_rsci_d_mxwt_C5 [4], chn_data_in_rsci_d_mxwt_C5 [5], chn_data_in_rsci_d_mxwt_C5 [6], chn_data_in_rsci_d_mxwt_C5 [15:8] } = 0;
  logic [15:0] chn_data_in_rsci_d_mxwt_R6 ;
  logic [15:0] chn_data_in_rsci_d_mxwt_X6 ;
  logic [15:0] chn_data_in_rsci_d_mxwt_C6 ;
  assign chn_data_in_rsci_d_mxwt_R6 [7:7] = fangyuan20_R [4:4] ;
  assign chn_data_in_rsci_d_mxwt_X6 [7:7] = fangyuan20_X [4:4] ;
  assign chn_data_in_rsci_d_mxwt_C6 [7:7] = fangyuan20_C [4:4] ;
  assign { chn_data_in_rsci_d_mxwt_R6 [0], chn_data_in_rsci_d_mxwt_R6 [1], chn_data_in_rsci_d_mxwt_R6 [2], chn_data_in_rsci_d_mxwt_R6 [3], chn_data_in_rsci_d_mxwt_R6 [4], chn_data_in_rsci_d_mxwt_R6 [5], chn_data_in_rsci_d_mxwt_R6 [6], chn_data_in_rsci_d_mxwt_R6 [15:8] } = 0;
  assign { chn_data_in_rsci_d_mxwt_X6 [0], chn_data_in_rsci_d_mxwt_X6 [1], chn_data_in_rsci_d_mxwt_X6 [2], chn_data_in_rsci_d_mxwt_X6 [3], chn_data_in_rsci_d_mxwt_X6 [4], chn_data_in_rsci_d_mxwt_X6 [5], chn_data_in_rsci_d_mxwt_X6 [6], chn_data_in_rsci_d_mxwt_X6 [15:8] } = 0;
  assign { chn_data_in_rsci_d_mxwt_C6 [0], chn_data_in_rsci_d_mxwt_C6 [1], chn_data_in_rsci_d_mxwt_C6 [2], chn_data_in_rsci_d_mxwt_C6 [3], chn_data_in_rsci_d_mxwt_C6 [4], chn_data_in_rsci_d_mxwt_C6 [5], chn_data_in_rsci_d_mxwt_C6 [6], chn_data_in_rsci_d_mxwt_C6 [15:8] } = 0;
  logic [15:0] chn_data_in_rsci_d_mxwt_R7 ;
  logic [15:0] chn_data_in_rsci_d_mxwt_X7 ;
  logic [15:0] chn_data_in_rsci_d_mxwt_C7 ;
  assign chn_data_in_rsci_d_mxwt_R7 [7:7] = fangyuan20_R [3:3] ;
  assign chn_data_in_rsci_d_mxwt_X7 [7:7] = fangyuan20_X [3:3] ;
  assign chn_data_in_rsci_d_mxwt_C7 [7:7] = fangyuan20_C [3:3] ;
  assign { chn_data_in_rsci_d_mxwt_R7 [0], chn_data_in_rsci_d_mxwt_R7 [1], chn_data_in_rsci_d_mxwt_R7 [2], chn_data_in_rsci_d_mxwt_R7 [3], chn_data_in_rsci_d_mxwt_R7 [4], chn_data_in_rsci_d_mxwt_R7 [5], chn_data_in_rsci_d_mxwt_R7 [6], chn_data_in_rsci_d_mxwt_R7 [15:8] } = 0;
  assign { chn_data_in_rsci_d_mxwt_X7 [0], chn_data_in_rsci_d_mxwt_X7 [1], chn_data_in_rsci_d_mxwt_X7 [2], chn_data_in_rsci_d_mxwt_X7 [3], chn_data_in_rsci_d_mxwt_X7 [4], chn_data_in_rsci_d_mxwt_X7 [5], chn_data_in_rsci_d_mxwt_X7 [6], chn_data_in_rsci_d_mxwt_X7 [15:8] } = 0;
  assign { chn_data_in_rsci_d_mxwt_C7 [0], chn_data_in_rsci_d_mxwt_C7 [1], chn_data_in_rsci_d_mxwt_C7 [2], chn_data_in_rsci_d_mxwt_C7 [3], chn_data_in_rsci_d_mxwt_C7 [4], chn_data_in_rsci_d_mxwt_C7 [5], chn_data_in_rsci_d_mxwt_C7 [6], chn_data_in_rsci_d_mxwt_C7 [15:8] } = 0;
  logic [15:0] chn_data_in_rsci_d_mxwt_R8 ;
  logic [15:0] chn_data_in_rsci_d_mxwt_X8 ;
  logic [15:0] chn_data_in_rsci_d_mxwt_C8 ;
  assign chn_data_in_rsci_d_mxwt_R8 [7:7] = fangyuan20_R [2:2] ;
  assign chn_data_in_rsci_d_mxwt_X8 [7:7] = fangyuan20_X [2:2] ;
  assign chn_data_in_rsci_d_mxwt_C8 [7:7] = fangyuan20_C [2:2] ;
  assign { chn_data_in_rsci_d_mxwt_R8 [0], chn_data_in_rsci_d_mxwt_R8 [1], chn_data_in_rsci_d_mxwt_R8 [2], chn_data_in_rsci_d_mxwt_R8 [3], chn_data_in_rsci_d_mxwt_R8 [4], chn_data_in_rsci_d_mxwt_R8 [5], chn_data_in_rsci_d_mxwt_R8 [6], chn_data_in_rsci_d_mxwt_R8 [15:8] } = 0;
  assign { chn_data_in_rsci_d_mxwt_X8 [0], chn_data_in_rsci_d_mxwt_X8 [1], chn_data_in_rsci_d_mxwt_X8 [2], chn_data_in_rsci_d_mxwt_X8 [3], chn_data_in_rsci_d_mxwt_X8 [4], chn_data_in_rsci_d_mxwt_X8 [5], chn_data_in_rsci_d_mxwt_X8 [6], chn_data_in_rsci_d_mxwt_X8 [15:8] } = 0;
  assign { chn_data_in_rsci_d_mxwt_C8 [0], chn_data_in_rsci_d_mxwt_C8 [1], chn_data_in_rsci_d_mxwt_C8 [2], chn_data_in_rsci_d_mxwt_C8 [3], chn_data_in_rsci_d_mxwt_C8 [4], chn_data_in_rsci_d_mxwt_C8 [5], chn_data_in_rsci_d_mxwt_C8 [6], chn_data_in_rsci_d_mxwt_C8 [15:8] } = 0;
  logic [15:0] chn_data_in_rsci_d_mxwt_R9 ;
  logic [15:0] chn_data_in_rsci_d_mxwt_X9 ;
  logic [15:0] chn_data_in_rsci_d_mxwt_C9 ;
  assign chn_data_in_rsci_d_mxwt_R9 [7:7] = fangyuan20_R [1:1] ;
  assign chn_data_in_rsci_d_mxwt_X9 [7:7] = fangyuan20_X [1:1] ;
  assign chn_data_in_rsci_d_mxwt_C9 [7:7] = fangyuan20_C [1:1] ;
  assign { chn_data_in_rsci_d_mxwt_R9 [0], chn_data_in_rsci_d_mxwt_R9 [1], chn_data_in_rsci_d_mxwt_R9 [2], chn_data_in_rsci_d_mxwt_R9 [3], chn_data_in_rsci_d_mxwt_R9 [4], chn_data_in_rsci_d_mxwt_R9 [5], chn_data_in_rsci_d_mxwt_R9 [6], chn_data_in_rsci_d_mxwt_R9 [15:8] } = 0;
  assign { chn_data_in_rsci_d_mxwt_X9 [0], chn_data_in_rsci_d_mxwt_X9 [1], chn_data_in_rsci_d_mxwt_X9 [2], chn_data_in_rsci_d_mxwt_X9 [3], chn_data_in_rsci_d_mxwt_X9 [4], chn_data_in_rsci_d_mxwt_X9 [5], chn_data_in_rsci_d_mxwt_X9 [6], chn_data_in_rsci_d_mxwt_X9 [15:8] } = 0;
  assign { chn_data_in_rsci_d_mxwt_C9 [0], chn_data_in_rsci_d_mxwt_C9 [1], chn_data_in_rsci_d_mxwt_C9 [2], chn_data_in_rsci_d_mxwt_C9 [3], chn_data_in_rsci_d_mxwt_C9 [4], chn_data_in_rsci_d_mxwt_C9 [5], chn_data_in_rsci_d_mxwt_C9 [6], chn_data_in_rsci_d_mxwt_C9 [15:8] } = 0;
  logic [15:0] chn_data_in_rsci_d_mxwt_R10 ;
  logic [15:0] chn_data_in_rsci_d_mxwt_X10 ;
  logic [15:0] chn_data_in_rsci_d_mxwt_C10 ;
  assign chn_data_in_rsci_d_mxwt_R10 [7:7] = fangyuan20_R [0:0] ;
  assign chn_data_in_rsci_d_mxwt_X10 [7:7] = fangyuan20_X [0:0] ;
  assign chn_data_in_rsci_d_mxwt_C10 [7:7] = fangyuan20_C [0:0] ;

  assign IntSubExt_8U_8U_9U_o_mux_4_nl = IntSubExt_16U_16U_17U_o_and_tmp ? chn_data_in_rsci_d_mxwt[15:8] : fangyuan20;
  logic [0:0] IntSubExt_16U_16U_17U_o_and_tmp_C1 ;
  logic [0:0] IntSubExt_16U_16U_17U_o_and_tmp_R1 ;
  logic [0:0] IntSubExt_16U_16U_17U_o_and_tmp_X1 ;
  assign IntSubExt_16U_16U_17U_o_and_tmp_C1 = | IntSubExt_8U_8U_9U_o_mux_4_nl_C ;
  assign IntSubExt_16U_16U_17U_o_and_tmp_X1 = | IntSubExt_8U_8U_9U_o_mux_4_nl_X ;
  assign IntSubExt_8U_8U_9U_o_mux_4_nl_T = IntSubExt_16U_16U_17U_o_and_tmp ? ( { 8{ IntSubExt_16U_16U_17U_o_and_tmp_T  }} | chn_data_in_rsci_d_mxwt_T [15:8] ) : ( { 8{ IntSubExt_16U_16U_17U_o_and_tmp_T  }} | fangyuan20_T );
  assign IntSubExt_8U_8U_9U_o_mux_4_nl_S = IntSubExt_16U_16U_17U_o_and_tmp ? chn_data_in_rsci_d_mxwt_S : fangyuan20_S ;
  assign IntSubExt_16U_16U_17U_o_and_tmp_R1 = ( | (IntSubExt_8U_8U_9U_o_mux_4_nl_R | ( IntSubExt_8U_8U_9U_o_mux_4_nl_C & ( { 8{ IntSubExt_16U_16U_17U_o_and_tmp }} & chn_data_in_rsci_d_mxwt_T [15:8] | { 8{ !IntSubExt_16U_16U_17U_o_and_tmp }} & fangyuan20_T )))) && chn_data_in_rsci_d_mxwt[15:8] != fangyuan20 ;
  assign chn_data_in_rsci_d_mxwt_C10 [15:8] = { 8{ IntSubExt_16U_16U_17U_o_and_tmp }} ;
  assign chn_data_in_rsci_d_mxwt_R10 [15:8] = { 8{ IntSubExt_16U_16U_17U_o_and_tmp }} & ( IntSubExt_8U_8U_9U_o_mux_4_nl_R | ( { 8{ IntSubExt_16U_16U_17U_o_and_tmp_T  }} & IntSubExt_8U_8U_9U_o_mux_4_nl_C ));
  assign chn_data_in_rsci_d_mxwt_X10 [15:8] = { 8{ IntSubExt_16U_16U_17U_o_and_tmp }} & IntSubExt_8U_8U_9U_o_mux_4_nl_X ;
  logic [7:0] fangyuan20_C0 ;
  logic [7:0] fangyuan20_R0 ;
  logic [7:0] fangyuan20_X0 ;
  assign fangyuan20_C0 = { 8{ !IntSubExt_16U_16U_17U_o_and_tmp }} ;
  assign fangyuan20_R0 = { 8{ !IntSubExt_16U_16U_17U_o_and_tmp }} & ( IntSubExt_8U_8U_9U_o_mux_4_nl_R | ( { 8{ IntSubExt_16U_16U_17U_o_and_tmp_T  }} & IntSubExt_8U_8U_9U_o_mux_4_nl_C ));
  assign fangyuan20_X0 = { 8{ !IntSubExt_16U_16U_17U_o_and_tmp }} & IntSubExt_8U_8U_9U_o_mux_4_nl_X ;
  logic [16:0] fangyuan21;
  logic [16:0] fangyuan21_T ;
  logic [16:0] fangyuan21_R ;
  logic [16:0] fangyuan21_C ;
  logic [16:0] fangyuan21_X ;
  assign fangyuan21 = { reg_IntSubExt_16U_16U_17U_o_acc_itm, reg_IntSubExt_16U_16U_17U_o_acc_1_itm, reg_IntSubExt_16U_16U_17U_o_acc_2_itm };
  assign fangyuan21_T = {  reg_IntSubExt_16U_16U_17U_o_acc_itm_T , reg_IntSubExt_16U_16U_17U_o_acc_1_itm_T , reg_IntSubExt_16U_16U_17U_o_acc_2_itm_T  };
  logic [5:0] fangyuan21_S ;
  assign fangyuan21_S = 0 ;
  logic [6:0] reg_IntSubExt_16U_16U_17U_o_acc_itm_R0 ;
  logic [6:0] reg_IntSubExt_16U_16U_17U_o_acc_itm_X0 ;
  logic [6:0] reg_IntSubExt_16U_16U_17U_o_acc_itm_C0 ;
  assign reg_IntSubExt_16U_16U_17U_o_acc_itm_R0 = fangyuan21_R [16:10] ;
  assign reg_IntSubExt_16U_16U_17U_o_acc_itm_X0 = fangyuan21_X [16:10] ;
  assign reg_IntSubExt_16U_16U_17U_o_acc_itm_C0 = fangyuan21_C [16:10] ;
  logic [0:0] reg_IntSubExt_16U_16U_17U_o_acc_1_itm_R0 ;
  logic [0:0] reg_IntSubExt_16U_16U_17U_o_acc_1_itm_X0 ;
  logic [0:0] reg_IntSubExt_16U_16U_17U_o_acc_1_itm_C0 ;
  assign reg_IntSubExt_16U_16U_17U_o_acc_1_itm_R0 = fangyuan21_R [9:9] ;
  assign reg_IntSubExt_16U_16U_17U_o_acc_1_itm_X0 = fangyuan21_X [9:9] ;
  assign reg_IntSubExt_16U_16U_17U_o_acc_1_itm_C0 = fangyuan21_C [9:9] ;
  logic [8:0] reg_IntSubExt_16U_16U_17U_o_acc_2_itm_R1 ;
  logic [8:0] reg_IntSubExt_16U_16U_17U_o_acc_2_itm_X1 ;
  logic [8:0] reg_IntSubExt_16U_16U_17U_o_acc_2_itm_C1 ;
  assign reg_IntSubExt_16U_16U_17U_o_acc_2_itm_R1 = fangyuan21_R [8:0] ;
  assign reg_IntSubExt_16U_16U_17U_o_acc_2_itm_X1 = fangyuan21_X [8:0] ;
  assign reg_IntSubExt_16U_16U_17U_o_acc_2_itm_C1 = fangyuan21_C [8:0] ;
  logic [16:0] fangyuan22;
  logic [16:0] fangyuan22_T ;
  logic [16:0] fangyuan22_R ;
  logic [16:0] fangyuan22_C ;
  logic [16:0] fangyuan22_X ;
  assign fangyuan22 = { IntSubExt_8U_8U_9U_o_acc_itm_2[8], IntSubExt_8U_8U_9U_o_acc_itm_2[8], IntSubExt_8U_8U_9U_o_acc_itm_2[8], IntSubExt_8U_8U_9U_o_acc_itm_2[8], IntSubExt_8U_8U_9U_o_acc_itm_2[8], IntSubExt_8U_8U_9U_o_acc_itm_2[8], IntSubExt_8U_8U_9U_o_acc_itm_2[8], IntSubExt_8U_8U_9U_o_acc_itm_2[8], IntSubExt_8U_8U_9U_o_acc_itm_2 };
  assign fangyuan22_T = {  IntSubExt_8U_8U_9U_o_acc_itm_2_T [8] , IntSubExt_8U_8U_9U_o_acc_itm_2_T [8] , IntSubExt_8U_8U_9U_o_acc_itm_2_T [8] , IntSubExt_8U_8U_9U_o_acc_itm_2_T [8] , IntSubExt_8U_8U_9U_o_acc_itm_2_T [8] , IntSubExt_8U_8U_9U_o_acc_itm_2_T [8] , IntSubExt_8U_8U_9U_o_acc_itm_2_T [8] , IntSubExt_8U_8U_9U_o_acc_itm_2_T [8] , IntSubExt_8U_8U_9U_o_acc_itm_2_T  };
  logic [5:0] fangyuan22_S ;
  assign fangyuan22_S = 0 ;
  logic [8:0] IntSubExt_8U_8U_9U_o_acc_itm_2_R0 ;
  logic [8:0] IntSubExt_8U_8U_9U_o_acc_itm_2_X0 ;
  logic [8:0] IntSubExt_8U_8U_9U_o_acc_itm_2_C0 ;
  assign IntSubExt_8U_8U_9U_o_acc_itm_2_R0 [8:8] = fangyuan22_R [16:16] ;
  assign IntSubExt_8U_8U_9U_o_acc_itm_2_X0 [8:8] = fangyuan22_X [16:16] ;
  assign IntSubExt_8U_8U_9U_o_acc_itm_2_C0 [8:8] = fangyuan22_C [16:16] ;
  assign { IntSubExt_8U_8U_9U_o_acc_itm_2_R0 [0], IntSubExt_8U_8U_9U_o_acc_itm_2_R0 [1], IntSubExt_8U_8U_9U_o_acc_itm_2_R0 [2], IntSubExt_8U_8U_9U_o_acc_itm_2_R0 [3], IntSubExt_8U_8U_9U_o_acc_itm_2_R0 [4], IntSubExt_8U_8U_9U_o_acc_itm_2_R0 [5], IntSubExt_8U_8U_9U_o_acc_itm_2_R0 [6], IntSubExt_8U_8U_9U_o_acc_itm_2_R0 [7] } = 0;
  assign { IntSubExt_8U_8U_9U_o_acc_itm_2_X0 [0], IntSubExt_8U_8U_9U_o_acc_itm_2_X0 [1], IntSubExt_8U_8U_9U_o_acc_itm_2_X0 [2], IntSubExt_8U_8U_9U_o_acc_itm_2_X0 [3], IntSubExt_8U_8U_9U_o_acc_itm_2_X0 [4], IntSubExt_8U_8U_9U_o_acc_itm_2_X0 [5], IntSubExt_8U_8U_9U_o_acc_itm_2_X0 [6], IntSubExt_8U_8U_9U_o_acc_itm_2_X0 [7] } = 0;
  assign { IntSubExt_8U_8U_9U_o_acc_itm_2_C0 [0], IntSubExt_8U_8U_9U_o_acc_itm_2_C0 [1], IntSubExt_8U_8U_9U_o_acc_itm_2_C0 [2], IntSubExt_8U_8U_9U_o_acc_itm_2_C0 [3], IntSubExt_8U_8U_9U_o_acc_itm_2_C0 [4], IntSubExt_8U_8U_9U_o_acc_itm_2_C0 [5], IntSubExt_8U_8U_9U_o_acc_itm_2_C0 [6], IntSubExt_8U_8U_9U_o_acc_itm_2_C0 [7] } = 0;
  logic [8:0] IntSubExt_8U_8U_9U_o_acc_itm_2_R1 ;
  logic [8:0] IntSubExt_8U_8U_9U_o_acc_itm_2_X1 ;
  logic [8:0] IntSubExt_8U_8U_9U_o_acc_itm_2_C1 ;
  assign IntSubExt_8U_8U_9U_o_acc_itm_2_R1 [8:8] = fangyuan22_R [15:15] ;
  assign IntSubExt_8U_8U_9U_o_acc_itm_2_X1 [8:8] = fangyuan22_X [15:15] ;
  assign IntSubExt_8U_8U_9U_o_acc_itm_2_C1 [8:8] = fangyuan22_C [15:15] ;
  assign { IntSubExt_8U_8U_9U_o_acc_itm_2_R1 [0], IntSubExt_8U_8U_9U_o_acc_itm_2_R1 [1], IntSubExt_8U_8U_9U_o_acc_itm_2_R1 [2], IntSubExt_8U_8U_9U_o_acc_itm_2_R1 [3], IntSubExt_8U_8U_9U_o_acc_itm_2_R1 [4], IntSubExt_8U_8U_9U_o_acc_itm_2_R1 [5], IntSubExt_8U_8U_9U_o_acc_itm_2_R1 [6], IntSubExt_8U_8U_9U_o_acc_itm_2_R1 [7] } = 0;
  assign { IntSubExt_8U_8U_9U_o_acc_itm_2_X1 [0], IntSubExt_8U_8U_9U_o_acc_itm_2_X1 [1], IntSubExt_8U_8U_9U_o_acc_itm_2_X1 [2], IntSubExt_8U_8U_9U_o_acc_itm_2_X1 [3], IntSubExt_8U_8U_9U_o_acc_itm_2_X1 [4], IntSubExt_8U_8U_9U_o_acc_itm_2_X1 [5], IntSubExt_8U_8U_9U_o_acc_itm_2_X1 [6], IntSubExt_8U_8U_9U_o_acc_itm_2_X1 [7] } = 0;
  assign { IntSubExt_8U_8U_9U_o_acc_itm_2_C1 [0], IntSubExt_8U_8U_9U_o_acc_itm_2_C1 [1], IntSubExt_8U_8U_9U_o_acc_itm_2_C1 [2], IntSubExt_8U_8U_9U_o_acc_itm_2_C1 [3], IntSubExt_8U_8U_9U_o_acc_itm_2_C1 [4], IntSubExt_8U_8U_9U_o_acc_itm_2_C1 [5], IntSubExt_8U_8U_9U_o_acc_itm_2_C1 [6], IntSubExt_8U_8U_9U_o_acc_itm_2_C1 [7] } = 0;
  logic [8:0] IntSubExt_8U_8U_9U_o_acc_itm_2_R2 ;
  logic [8:0] IntSubExt_8U_8U_9U_o_acc_itm_2_X2 ;
  logic [8:0] IntSubExt_8U_8U_9U_o_acc_itm_2_C2 ;
  assign IntSubExt_8U_8U_9U_o_acc_itm_2_R2 [8:8] = fangyuan22_R [14:14] ;
  assign IntSubExt_8U_8U_9U_o_acc_itm_2_X2 [8:8] = fangyuan22_X [14:14] ;
  assign IntSubExt_8U_8U_9U_o_acc_itm_2_C2 [8:8] = fangyuan22_C [14:14] ;
  assign { IntSubExt_8U_8U_9U_o_acc_itm_2_R2 [0], IntSubExt_8U_8U_9U_o_acc_itm_2_R2 [1], IntSubExt_8U_8U_9U_o_acc_itm_2_R2 [2], IntSubExt_8U_8U_9U_o_acc_itm_2_R2 [3], IntSubExt_8U_8U_9U_o_acc_itm_2_R2 [4], IntSubExt_8U_8U_9U_o_acc_itm_2_R2 [5], IntSubExt_8U_8U_9U_o_acc_itm_2_R2 [6], IntSubExt_8U_8U_9U_o_acc_itm_2_R2 [7] } = 0;
  assign { IntSubExt_8U_8U_9U_o_acc_itm_2_X2 [0], IntSubExt_8U_8U_9U_o_acc_itm_2_X2 [1], IntSubExt_8U_8U_9U_o_acc_itm_2_X2 [2], IntSubExt_8U_8U_9U_o_acc_itm_2_X2 [3], IntSubExt_8U_8U_9U_o_acc_itm_2_X2 [4], IntSubExt_8U_8U_9U_o_acc_itm_2_X2 [5], IntSubExt_8U_8U_9U_o_acc_itm_2_X2 [6], IntSubExt_8U_8U_9U_o_acc_itm_2_X2 [7] } = 0;
  assign { IntSubExt_8U_8U_9U_o_acc_itm_2_C2 [0], IntSubExt_8U_8U_9U_o_acc_itm_2_C2 [1], IntSubExt_8U_8U_9U_o_acc_itm_2_C2 [2], IntSubExt_8U_8U_9U_o_acc_itm_2_C2 [3], IntSubExt_8U_8U_9U_o_acc_itm_2_C2 [4], IntSubExt_8U_8U_9U_o_acc_itm_2_C2 [5], IntSubExt_8U_8U_9U_o_acc_itm_2_C2 [6], IntSubExt_8U_8U_9U_o_acc_itm_2_C2 [7] } = 0;
  logic [8:0] IntSubExt_8U_8U_9U_o_acc_itm_2_R3 ;
  logic [8:0] IntSubExt_8U_8U_9U_o_acc_itm_2_X3 ;
  logic [8:0] IntSubExt_8U_8U_9U_o_acc_itm_2_C3 ;
  assign IntSubExt_8U_8U_9U_o_acc_itm_2_R3 [8:8] = fangyuan22_R [13:13] ;
  assign IntSubExt_8U_8U_9U_o_acc_itm_2_X3 [8:8] = fangyuan22_X [13:13] ;
  assign IntSubExt_8U_8U_9U_o_acc_itm_2_C3 [8:8] = fangyuan22_C [13:13] ;
  assign { IntSubExt_8U_8U_9U_o_acc_itm_2_R3 [0], IntSubExt_8U_8U_9U_o_acc_itm_2_R3 [1], IntSubExt_8U_8U_9U_o_acc_itm_2_R3 [2], IntSubExt_8U_8U_9U_o_acc_itm_2_R3 [3], IntSubExt_8U_8U_9U_o_acc_itm_2_R3 [4], IntSubExt_8U_8U_9U_o_acc_itm_2_R3 [5], IntSubExt_8U_8U_9U_o_acc_itm_2_R3 [6], IntSubExt_8U_8U_9U_o_acc_itm_2_R3 [7] } = 0;
  assign { IntSubExt_8U_8U_9U_o_acc_itm_2_X3 [0], IntSubExt_8U_8U_9U_o_acc_itm_2_X3 [1], IntSubExt_8U_8U_9U_o_acc_itm_2_X3 [2], IntSubExt_8U_8U_9U_o_acc_itm_2_X3 [3], IntSubExt_8U_8U_9U_o_acc_itm_2_X3 [4], IntSubExt_8U_8U_9U_o_acc_itm_2_X3 [5], IntSubExt_8U_8U_9U_o_acc_itm_2_X3 [6], IntSubExt_8U_8U_9U_o_acc_itm_2_X3 [7] } = 0;
  assign { IntSubExt_8U_8U_9U_o_acc_itm_2_C3 [0], IntSubExt_8U_8U_9U_o_acc_itm_2_C3 [1], IntSubExt_8U_8U_9U_o_acc_itm_2_C3 [2], IntSubExt_8U_8U_9U_o_acc_itm_2_C3 [3], IntSubExt_8U_8U_9U_o_acc_itm_2_C3 [4], IntSubExt_8U_8U_9U_o_acc_itm_2_C3 [5], IntSubExt_8U_8U_9U_o_acc_itm_2_C3 [6], IntSubExt_8U_8U_9U_o_acc_itm_2_C3 [7] } = 0;
  logic [8:0] IntSubExt_8U_8U_9U_o_acc_itm_2_R4 ;
  logic [8:0] IntSubExt_8U_8U_9U_o_acc_itm_2_X4 ;
  logic [8:0] IntSubExt_8U_8U_9U_o_acc_itm_2_C4 ;
  assign IntSubExt_8U_8U_9U_o_acc_itm_2_R4 [8:8] = fangyuan22_R [12:12] ;
  assign IntSubExt_8U_8U_9U_o_acc_itm_2_X4 [8:8] = fangyuan22_X [12:12] ;
  assign IntSubExt_8U_8U_9U_o_acc_itm_2_C4 [8:8] = fangyuan22_C [12:12] ;
  assign { IntSubExt_8U_8U_9U_o_acc_itm_2_R4 [0], IntSubExt_8U_8U_9U_o_acc_itm_2_R4 [1], IntSubExt_8U_8U_9U_o_acc_itm_2_R4 [2], IntSubExt_8U_8U_9U_o_acc_itm_2_R4 [3], IntSubExt_8U_8U_9U_o_acc_itm_2_R4 [4], IntSubExt_8U_8U_9U_o_acc_itm_2_R4 [5], IntSubExt_8U_8U_9U_o_acc_itm_2_R4 [6], IntSubExt_8U_8U_9U_o_acc_itm_2_R4 [7] } = 0;
  assign { IntSubExt_8U_8U_9U_o_acc_itm_2_X4 [0], IntSubExt_8U_8U_9U_o_acc_itm_2_X4 [1], IntSubExt_8U_8U_9U_o_acc_itm_2_X4 [2], IntSubExt_8U_8U_9U_o_acc_itm_2_X4 [3], IntSubExt_8U_8U_9U_o_acc_itm_2_X4 [4], IntSubExt_8U_8U_9U_o_acc_itm_2_X4 [5], IntSubExt_8U_8U_9U_o_acc_itm_2_X4 [6], IntSubExt_8U_8U_9U_o_acc_itm_2_X4 [7] } = 0;
  assign { IntSubExt_8U_8U_9U_o_acc_itm_2_C4 [0], IntSubExt_8U_8U_9U_o_acc_itm_2_C4 [1], IntSubExt_8U_8U_9U_o_acc_itm_2_C4 [2], IntSubExt_8U_8U_9U_o_acc_itm_2_C4 [3], IntSubExt_8U_8U_9U_o_acc_itm_2_C4 [4], IntSubExt_8U_8U_9U_o_acc_itm_2_C4 [5], IntSubExt_8U_8U_9U_o_acc_itm_2_C4 [6], IntSubExt_8U_8U_9U_o_acc_itm_2_C4 [7] } = 0;
  logic [8:0] IntSubExt_8U_8U_9U_o_acc_itm_2_R5 ;
  logic [8:0] IntSubExt_8U_8U_9U_o_acc_itm_2_X5 ;
  logic [8:0] IntSubExt_8U_8U_9U_o_acc_itm_2_C5 ;
  assign IntSubExt_8U_8U_9U_o_acc_itm_2_R5 [8:8] = fangyuan22_R [11:11] ;
  assign IntSubExt_8U_8U_9U_o_acc_itm_2_X5 [8:8] = fangyuan22_X [11:11] ;
  assign IntSubExt_8U_8U_9U_o_acc_itm_2_C5 [8:8] = fangyuan22_C [11:11] ;
  assign { IntSubExt_8U_8U_9U_o_acc_itm_2_R5 [0], IntSubExt_8U_8U_9U_o_acc_itm_2_R5 [1], IntSubExt_8U_8U_9U_o_acc_itm_2_R5 [2], IntSubExt_8U_8U_9U_o_acc_itm_2_R5 [3], IntSubExt_8U_8U_9U_o_acc_itm_2_R5 [4], IntSubExt_8U_8U_9U_o_acc_itm_2_R5 [5], IntSubExt_8U_8U_9U_o_acc_itm_2_R5 [6], IntSubExt_8U_8U_9U_o_acc_itm_2_R5 [7] } = 0;
  assign { IntSubExt_8U_8U_9U_o_acc_itm_2_X5 [0], IntSubExt_8U_8U_9U_o_acc_itm_2_X5 [1], IntSubExt_8U_8U_9U_o_acc_itm_2_X5 [2], IntSubExt_8U_8U_9U_o_acc_itm_2_X5 [3], IntSubExt_8U_8U_9U_o_acc_itm_2_X5 [4], IntSubExt_8U_8U_9U_o_acc_itm_2_X5 [5], IntSubExt_8U_8U_9U_o_acc_itm_2_X5 [6], IntSubExt_8U_8U_9U_o_acc_itm_2_X5 [7] } = 0;
  assign { IntSubExt_8U_8U_9U_o_acc_itm_2_C5 [0], IntSubExt_8U_8U_9U_o_acc_itm_2_C5 [1], IntSubExt_8U_8U_9U_o_acc_itm_2_C5 [2], IntSubExt_8U_8U_9U_o_acc_itm_2_C5 [3], IntSubExt_8U_8U_9U_o_acc_itm_2_C5 [4], IntSubExt_8U_8U_9U_o_acc_itm_2_C5 [5], IntSubExt_8U_8U_9U_o_acc_itm_2_C5 [6], IntSubExt_8U_8U_9U_o_acc_itm_2_C5 [7] } = 0;
  logic [8:0] IntSubExt_8U_8U_9U_o_acc_itm_2_R6 ;
  logic [8:0] IntSubExt_8U_8U_9U_o_acc_itm_2_X6 ;
  logic [8:0] IntSubExt_8U_8U_9U_o_acc_itm_2_C6 ;
  assign IntSubExt_8U_8U_9U_o_acc_itm_2_R6 [8:8] = fangyuan22_R [10:10] ;
  assign IntSubExt_8U_8U_9U_o_acc_itm_2_X6 [8:8] = fangyuan22_X [10:10] ;
  assign IntSubExt_8U_8U_9U_o_acc_itm_2_C6 [8:8] = fangyuan22_C [10:10] ;
  assign { IntSubExt_8U_8U_9U_o_acc_itm_2_R6 [0], IntSubExt_8U_8U_9U_o_acc_itm_2_R6 [1], IntSubExt_8U_8U_9U_o_acc_itm_2_R6 [2], IntSubExt_8U_8U_9U_o_acc_itm_2_R6 [3], IntSubExt_8U_8U_9U_o_acc_itm_2_R6 [4], IntSubExt_8U_8U_9U_o_acc_itm_2_R6 [5], IntSubExt_8U_8U_9U_o_acc_itm_2_R6 [6], IntSubExt_8U_8U_9U_o_acc_itm_2_R6 [7] } = 0;
  assign { IntSubExt_8U_8U_9U_o_acc_itm_2_X6 [0], IntSubExt_8U_8U_9U_o_acc_itm_2_X6 [1], IntSubExt_8U_8U_9U_o_acc_itm_2_X6 [2], IntSubExt_8U_8U_9U_o_acc_itm_2_X6 [3], IntSubExt_8U_8U_9U_o_acc_itm_2_X6 [4], IntSubExt_8U_8U_9U_o_acc_itm_2_X6 [5], IntSubExt_8U_8U_9U_o_acc_itm_2_X6 [6], IntSubExt_8U_8U_9U_o_acc_itm_2_X6 [7] } = 0;
  assign { IntSubExt_8U_8U_9U_o_acc_itm_2_C6 [0], IntSubExt_8U_8U_9U_o_acc_itm_2_C6 [1], IntSubExt_8U_8U_9U_o_acc_itm_2_C6 [2], IntSubExt_8U_8U_9U_o_acc_itm_2_C6 [3], IntSubExt_8U_8U_9U_o_acc_itm_2_C6 [4], IntSubExt_8U_8U_9U_o_acc_itm_2_C6 [5], IntSubExt_8U_8U_9U_o_acc_itm_2_C6 [6], IntSubExt_8U_8U_9U_o_acc_itm_2_C6 [7] } = 0;
  logic [8:0] IntSubExt_8U_8U_9U_o_acc_itm_2_R7 ;
  logic [8:0] IntSubExt_8U_8U_9U_o_acc_itm_2_X7 ;
  logic [8:0] IntSubExt_8U_8U_9U_o_acc_itm_2_C7 ;
  assign IntSubExt_8U_8U_9U_o_acc_itm_2_R7 [8:8] = fangyuan22_R [9:9] ;
  assign IntSubExt_8U_8U_9U_o_acc_itm_2_X7 [8:8] = fangyuan22_X [9:9] ;
  assign IntSubExt_8U_8U_9U_o_acc_itm_2_C7 [8:8] = fangyuan22_C [9:9] ;
  assign { IntSubExt_8U_8U_9U_o_acc_itm_2_R7 [0], IntSubExt_8U_8U_9U_o_acc_itm_2_R7 [1], IntSubExt_8U_8U_9U_o_acc_itm_2_R7 [2], IntSubExt_8U_8U_9U_o_acc_itm_2_R7 [3], IntSubExt_8U_8U_9U_o_acc_itm_2_R7 [4], IntSubExt_8U_8U_9U_o_acc_itm_2_R7 [5], IntSubExt_8U_8U_9U_o_acc_itm_2_R7 [6], IntSubExt_8U_8U_9U_o_acc_itm_2_R7 [7] } = 0;
  assign { IntSubExt_8U_8U_9U_o_acc_itm_2_X7 [0], IntSubExt_8U_8U_9U_o_acc_itm_2_X7 [1], IntSubExt_8U_8U_9U_o_acc_itm_2_X7 [2], IntSubExt_8U_8U_9U_o_acc_itm_2_X7 [3], IntSubExt_8U_8U_9U_o_acc_itm_2_X7 [4], IntSubExt_8U_8U_9U_o_acc_itm_2_X7 [5], IntSubExt_8U_8U_9U_o_acc_itm_2_X7 [6], IntSubExt_8U_8U_9U_o_acc_itm_2_X7 [7] } = 0;
  assign { IntSubExt_8U_8U_9U_o_acc_itm_2_C7 [0], IntSubExt_8U_8U_9U_o_acc_itm_2_C7 [1], IntSubExt_8U_8U_9U_o_acc_itm_2_C7 [2], IntSubExt_8U_8U_9U_o_acc_itm_2_C7 [3], IntSubExt_8U_8U_9U_o_acc_itm_2_C7 [4], IntSubExt_8U_8U_9U_o_acc_itm_2_C7 [5], IntSubExt_8U_8U_9U_o_acc_itm_2_C7 [6], IntSubExt_8U_8U_9U_o_acc_itm_2_C7 [7] } = 0;
  logic [8:0] IntSubExt_8U_8U_9U_o_acc_itm_2_R8 ;
  logic [8:0] IntSubExt_8U_8U_9U_o_acc_itm_2_X8 ;
  logic [8:0] IntSubExt_8U_8U_9U_o_acc_itm_2_C8 ;
  assign IntSubExt_8U_8U_9U_o_acc_itm_2_R8 = fangyuan22_R [8:0] ;
  assign IntSubExt_8U_8U_9U_o_acc_itm_2_X8 = fangyuan22_X [8:0] ;
  assign IntSubExt_8U_8U_9U_o_acc_itm_2_C8 = fangyuan22_C [8:0] ;

  assign IntMulExt_9U_16U_25U_o_mux_2_nl = IntMulExt_17U_16U_33U_o_and_1_nl ? fangyuan21 : fangyuan22;
  logic [0:0] IntMulExt_17U_16U_33U_o_and_1_nl_C0 ;
  logic [0:0] IntMulExt_17U_16U_33U_o_and_1_nl_R0 ;
  logic [0:0] IntMulExt_17U_16U_33U_o_and_1_nl_X0 ;
  assign IntMulExt_17U_16U_33U_o_and_1_nl_C0 = | IntMulExt_9U_16U_25U_o_mux_2_nl_C ;
  assign IntMulExt_17U_16U_33U_o_and_1_nl_X0 = | IntMulExt_9U_16U_25U_o_mux_2_nl_X ;
  assign IntMulExt_9U_16U_25U_o_mux_2_nl_T = IntMulExt_17U_16U_33U_o_and_1_nl ? ( { 17{ IntMulExt_17U_16U_33U_o_and_1_nl_T  }} | fangyuan21_T ) : ( { 17{ IntMulExt_17U_16U_33U_o_and_1_nl_T  }} | fangyuan22_T );
  assign IntMulExt_9U_16U_25U_o_mux_2_nl_S = IntMulExt_17U_16U_33U_o_and_1_nl ? fangyuan21_S : fangyuan22_S ;
  assign IntMulExt_17U_16U_33U_o_and_1_nl_R0 = ( | (IntMulExt_9U_16U_25U_o_mux_2_nl_R | ( IntMulExt_9U_16U_25U_o_mux_2_nl_C & ( { 17{ IntMulExt_17U_16U_33U_o_and_1_nl }} & fangyuan21_T | { 17{ !IntMulExt_17U_16U_33U_o_and_1_nl }} & fangyuan22_T )))) && fangyuan21 != fangyuan22 ;
  logic [16:0] fangyuan21_C0 ;
  logic [16:0] fangyuan21_R0 ;
  logic [16:0] fangyuan21_X0 ;
  assign fangyuan21_C0 = { 17{ IntMulExt_17U_16U_33U_o_and_1_nl }} ;
  assign fangyuan21_R0 = { 17{ IntMulExt_17U_16U_33U_o_and_1_nl }} & ( IntMulExt_9U_16U_25U_o_mux_2_nl_R | ( { 17{ IntMulExt_17U_16U_33U_o_and_1_nl_T  }} & IntMulExt_9U_16U_25U_o_mux_2_nl_C ));
  assign fangyuan21_X0 = { 17{ IntMulExt_17U_16U_33U_o_and_1_nl }} & IntMulExt_9U_16U_25U_o_mux_2_nl_X ;
  logic [16:0] fangyuan22_C0 ;
  logic [16:0] fangyuan22_R0 ;
  logic [16:0] fangyuan22_X0 ;
  assign fangyuan22_C0 = { 17{ !IntMulExt_17U_16U_33U_o_and_1_nl }} ;
  assign fangyuan22_R0 = { 17{ !IntMulExt_17U_16U_33U_o_and_1_nl }} & ( IntMulExt_9U_16U_25U_o_mux_2_nl_R | ( { 17{ IntMulExt_17U_16U_33U_o_and_1_nl_T  }} & IntMulExt_9U_16U_25U_o_mux_2_nl_C ));
  assign fangyuan22_X0 = { 17{ !IntMulExt_17U_16U_33U_o_and_1_nl }} & IntMulExt_9U_16U_25U_o_mux_2_nl_X ;
  assign mux_38_nl = or_42_cse ? nor_19_nl : mux_37_nl;
  logic [0:0] or_42_cse_C1 ;
  logic [0:0] or_42_cse_R1 ;
  logic [0:0] or_42_cse_X1 ;
  assign or_42_cse_C1 = | mux_38_nl_C ;
  assign or_42_cse_X1 = | mux_38_nl_X ;
  assign mux_38_nl_T = or_42_cse ? ( { 1{ or_42_cse_T  }} | nor_19_nl_T ) : ( { 1{ or_42_cse_T  }} | mux_37_nl_T );
  assign mux_38_nl_S = or_42_cse ? nor_19_nl_S : mux_37_nl_S ;
  assign or_42_cse_R1 = ( | (mux_38_nl_R | ( mux_38_nl_C & ( { 1{ or_42_cse }} & nor_19_nl_T | { 1{ !or_42_cse }} & mux_37_nl_T )))) && nor_19_nl != mux_37_nl ;
  logic [0:0] nor_19_nl_C0 ;
  logic [0:0] nor_19_nl_R0 ;
  logic [0:0] nor_19_nl_X0 ;
  assign nor_19_nl_C0 = { 1{ or_42_cse }} ;
  assign nor_19_nl_R0 = { 1{ or_42_cse }} & ( mux_38_nl_R | ( { 1{ or_42_cse_T  }} & mux_38_nl_C ));
  assign nor_19_nl_X0 = { 1{ or_42_cse }} & mux_38_nl_X ;
  logic [0:0] mux_37_nl_C0 ;
  logic [0:0] mux_37_nl_R0 ;
  logic [0:0] mux_37_nl_X0 ;
  assign mux_37_nl_C0 = { 1{ !or_42_cse }} ;
  assign mux_37_nl_R0 = { 1{ !or_42_cse }} & ( mux_38_nl_R | ( { 1{ or_42_cse_T  }} & mux_38_nl_C ));
  assign mux_37_nl_X0 = { 1{ !or_42_cse }} & mux_38_nl_X ;
  assign mux_37_nl = _242_ ? main_stage_en_1 : mux_28_nl;
  logic [0:0] _242__C2 ;
  logic [0:0] _242__R2 ;
  logic [0:0] _242__X2 ;
  assign _242__C2 = | mux_37_nl_C ;
  assign _242__X2 = | mux_37_nl_X ;
  assign mux_37_nl_T = _242_ ? ( { 1{ _242__T  }} | main_stage_en_1_T ) : ( { 1{ _242__T  }} | mux_28_nl_T );
  assign mux_37_nl_S = _242_ ? main_stage_en_1_S : mux_28_nl_S ;
  assign _242__R2 = ( | (mux_37_nl_R | ( mux_37_nl_C & ( { 1{ _242_ }} & main_stage_en_1_T | { 1{ !_242_ }} & mux_28_nl_T )))) && main_stage_en_1 != mux_28_nl ;
  logic [0:0] main_stage_en_1_C3 ;
  logic [0:0] main_stage_en_1_R3 ;
  logic [0:0] main_stage_en_1_X3 ;
  assign main_stage_en_1_C3 = { 1{ _242_ }} ;
  assign main_stage_en_1_R3 = { 1{ _242_ }} & ( mux_37_nl_R | ( { 1{ _242__T  }} & mux_37_nl_C ));
  assign main_stage_en_1_X3 = { 1{ _242_ }} & mux_37_nl_X ;
  logic [0:0] mux_28_nl_C0 ;
  logic [0:0] mux_28_nl_R0 ;
  logic [0:0] mux_28_nl_X0 ;
  assign mux_28_nl_C0 = { 1{ !_242_ }} ;
  assign mux_28_nl_R0 = { 1{ !_242_ }} & ( mux_37_nl_R | ( { 1{ _242__T  }} & mux_37_nl_C ));
  assign mux_28_nl_X0 = { 1{ !_242_ }} & mux_37_nl_X ;
  assign mux_28_nl = chn_data_in_rsci_bawt ? or_107_cse : nor_12_nl;
  logic [0:0] chn_data_in_rsci_bawt_C7 ;
  logic [0:0] chn_data_in_rsci_bawt_R7 ;
  logic [0:0] chn_data_in_rsci_bawt_X7 ;
  assign chn_data_in_rsci_bawt_C7 = | mux_28_nl_C ;
  assign chn_data_in_rsci_bawt_X7 = | mux_28_nl_X ;
  assign mux_28_nl_T = chn_data_in_rsci_bawt ? ( { 1{ chn_data_in_rsci_bawt_T  }} | or_107_cse_T ) : ( { 1{ chn_data_in_rsci_bawt_T  }} | nor_12_nl_T );
  assign mux_28_nl_S = chn_data_in_rsci_bawt ? or_107_cse_S : nor_12_nl_S ;
  assign chn_data_in_rsci_bawt_R7 = ( | (mux_28_nl_R | ( mux_28_nl_C & ( { 1{ chn_data_in_rsci_bawt }} & or_107_cse_T | { 1{ !chn_data_in_rsci_bawt }} & nor_12_nl_T )))) && or_107_cse != nor_12_nl ;
  logic [0:0] or_107_cse_C2 ;
  logic [0:0] or_107_cse_R2 ;
  logic [0:0] or_107_cse_X2 ;
  assign or_107_cse_C2 = { 1{ chn_data_in_rsci_bawt }} ;
  assign or_107_cse_R2 = { 1{ chn_data_in_rsci_bawt }} & ( mux_28_nl_R | ( { 1{ chn_data_in_rsci_bawt_T  }} & mux_28_nl_C ));
  assign or_107_cse_X2 = { 1{ chn_data_in_rsci_bawt }} & mux_28_nl_X ;
  logic [0:0] nor_12_nl_C0 ;
  logic [0:0] nor_12_nl_R0 ;
  logic [0:0] nor_12_nl_X0 ;
  assign nor_12_nl_C0 = { 1{ !chn_data_in_rsci_bawt }} ;
  assign nor_12_nl_R0 = { 1{ !chn_data_in_rsci_bawt }} & ( mux_28_nl_R | ( { 1{ chn_data_in_rsci_bawt_T  }} & mux_28_nl_C ));
  assign nor_12_nl_X0 = { 1{ !chn_data_in_rsci_bawt }} & mux_28_nl_X ;
  assign mux_36_nl = chn_data_in_rsci_bawt ? mux_35_nl : not_tmp_22;
  logic [0:0] chn_data_in_rsci_bawt_C8 ;
  logic [0:0] chn_data_in_rsci_bawt_R8 ;
  logic [0:0] chn_data_in_rsci_bawt_X8 ;
  assign chn_data_in_rsci_bawt_C8 = | mux_36_nl_C ;
  assign chn_data_in_rsci_bawt_X8 = | mux_36_nl_X ;
  assign mux_36_nl_T = chn_data_in_rsci_bawt ? ( { 1{ chn_data_in_rsci_bawt_T  }} | mux_35_nl_T ) : ( { 1{ chn_data_in_rsci_bawt_T  }} | not_tmp_22_T );
  assign mux_36_nl_S = chn_data_in_rsci_bawt ? mux_35_nl_S : not_tmp_22_S ;
  assign chn_data_in_rsci_bawt_R8 = ( | (mux_36_nl_R | ( mux_36_nl_C & ( { 1{ chn_data_in_rsci_bawt }} & mux_35_nl_T | { 1{ !chn_data_in_rsci_bawt }} & not_tmp_22_T )))) && mux_35_nl != not_tmp_22 ;
  logic [0:0] mux_35_nl_C0 ;
  logic [0:0] mux_35_nl_R0 ;
  logic [0:0] mux_35_nl_X0 ;
  assign mux_35_nl_C0 = { 1{ chn_data_in_rsci_bawt }} ;
  assign mux_35_nl_R0 = { 1{ chn_data_in_rsci_bawt }} & ( mux_36_nl_R | ( { 1{ chn_data_in_rsci_bawt_T  }} & mux_36_nl_C ));
  assign mux_35_nl_X0 = { 1{ chn_data_in_rsci_bawt }} & mux_36_nl_X ;
  logic [0:0] not_tmp_22_C0 ;
  logic [0:0] not_tmp_22_R0 ;
  logic [0:0] not_tmp_22_X0 ;
  assign not_tmp_22_C0 = { 1{ !chn_data_in_rsci_bawt }} ;
  assign not_tmp_22_R0 = { 1{ !chn_data_in_rsci_bawt }} & ( mux_36_nl_R | ( { 1{ chn_data_in_rsci_bawt_T  }} & mux_36_nl_C ));
  assign not_tmp_22_X0 = { 1{ !chn_data_in_rsci_bawt }} & mux_36_nl_X ;
  assign mux_35_nl = or_78_cse_1 ? mux_33_nl : not_tmp_22;
  logic [0:0] or_78_cse_1_C1 ;
  logic [0:0] or_78_cse_1_R1 ;
  logic [0:0] or_78_cse_1_X1 ;
  assign or_78_cse_1_C1 = | mux_35_nl_C ;
  assign or_78_cse_1_X1 = | mux_35_nl_X ;
  assign mux_35_nl_T = or_78_cse_1 ? ( { 1{ or_78_cse_1_T  }} | mux_33_nl_T ) : ( { 1{ or_78_cse_1_T  }} | not_tmp_22_T );
  assign mux_35_nl_S = or_78_cse_1 ? mux_33_nl_S : not_tmp_22_S ;
  assign or_78_cse_1_R1 = ( | (mux_35_nl_R | ( mux_35_nl_C & ( { 1{ or_78_cse_1 }} & mux_33_nl_T | { 1{ !or_78_cse_1 }} & not_tmp_22_T )))) && mux_33_nl != not_tmp_22 ;
  logic [0:0] mux_33_nl_C0 ;
  logic [0:0] mux_33_nl_R0 ;
  logic [0:0] mux_33_nl_X0 ;
  assign mux_33_nl_C0 = { 1{ or_78_cse_1 }} ;
  assign mux_33_nl_R0 = { 1{ or_78_cse_1 }} & ( mux_35_nl_R | ( { 1{ or_78_cse_1_T  }} & mux_35_nl_C ));
  assign mux_33_nl_X0 = { 1{ or_78_cse_1 }} & mux_35_nl_X ;
  logic [0:0] not_tmp_22_C1 ;
  logic [0:0] not_tmp_22_R1 ;
  logic [0:0] not_tmp_22_X1 ;
  assign not_tmp_22_C1 = { 1{ !or_78_cse_1 }} ;
  assign not_tmp_22_R1 = { 1{ !or_78_cse_1 }} & ( mux_35_nl_R | ( { 1{ or_78_cse_1_T  }} & mux_35_nl_C ));
  assign not_tmp_22_X1 = { 1{ !or_78_cse_1 }} & mux_35_nl_X ;
  assign mux_33_nl = io_read_cfg_precision_rsc_svs_st_3[0] ? or_38_nl : or_39_nl;
  assign { io_read_cfg_precision_rsc_svs_st_3_R6 [1:1] } = 0;
  assign { io_read_cfg_precision_rsc_svs_st_3_X6 [1:1] } = 0;
  assign { io_read_cfg_precision_rsc_svs_st_3_C6 [1:1] } = 0;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_C7 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_R7 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_X7 ;
  assign io_read_cfg_precision_rsc_svs_st_3_C7 [0] = | mux_33_nl_C ;
  assign io_read_cfg_precision_rsc_svs_st_3_X7 [0] = | mux_33_nl_X ;
  assign mux_33_nl_T = io_read_cfg_precision_rsc_svs_st_3[0] ? ( { 1{ io_read_cfg_precision_rsc_svs_st_3_T  [0] }} | or_38_nl_T ) : ( { 1{ io_read_cfg_precision_rsc_svs_st_3_T  [0] }} | or_39_nl_T );
  assign mux_33_nl_S = io_read_cfg_precision_rsc_svs_st_3[0] ? or_38_nl_S : or_39_nl_S ;
  assign io_read_cfg_precision_rsc_svs_st_3_R7 [0] = ( | (mux_33_nl_R | ( mux_33_nl_C & ( { 1{ io_read_cfg_precision_rsc_svs_st_3[0] }} & or_38_nl_T | { 1{ !io_read_cfg_precision_rsc_svs_st_3[0] }} & or_39_nl_T )))) && or_38_nl != or_39_nl ;
  logic [0:0] or_38_nl_C0 ;
  logic [0:0] or_38_nl_R0 ;
  logic [0:0] or_38_nl_X0 ;
  assign or_38_nl_C0 = { 1{ io_read_cfg_precision_rsc_svs_st_3[0] }} ;
  assign or_38_nl_R0 = { 1{ io_read_cfg_precision_rsc_svs_st_3[0] }} & ( mux_33_nl_R | ( { 1{ io_read_cfg_precision_rsc_svs_st_3_T  [0] }} & mux_33_nl_C ));
  assign or_38_nl_X0 = { 1{ io_read_cfg_precision_rsc_svs_st_3[0] }} & mux_33_nl_X ;
  logic [0:0] or_39_nl_C0 ;
  logic [0:0] or_39_nl_R0 ;
  logic [0:0] or_39_nl_X0 ;
  assign or_39_nl_C0 = { 1{ !io_read_cfg_precision_rsc_svs_st_3[0] }} ;
  assign or_39_nl_R0 = { 1{ !io_read_cfg_precision_rsc_svs_st_3[0] }} & ( mux_33_nl_R | ( { 1{ io_read_cfg_precision_rsc_svs_st_3_T  [0] }} & mux_33_nl_C ));
  assign or_39_nl_X0 = { 1{ !io_read_cfg_precision_rsc_svs_st_3[0] }} & mux_33_nl_X ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl = IsDenorm_5U_10U_land_lpi_1_dfm ? FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva[4] : FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl;
  logic [0:0] IsDenorm_5U_10U_land_lpi_1_dfm_C5 ;
  logic [0:0] IsDenorm_5U_10U_land_lpi_1_dfm_R5 ;
  logic [0:0] IsDenorm_5U_10U_land_lpi_1_dfm_X5 ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_C5 = | FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_C ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_X5 = | FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_X ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_T = IsDenorm_5U_10U_land_lpi_1_dfm ? ( { 1{ IsDenorm_5U_10U_land_lpi_1_dfm_T  }} | FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_T [4] ) : ( { 1{ IsDenorm_5U_10U_land_lpi_1_dfm_T  }} | FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_T );
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_S = IsDenorm_5U_10U_land_lpi_1_dfm ? FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_S : FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_S ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_R5 = ( | (FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_R | ( FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_C & ( { 1{ IsDenorm_5U_10U_land_lpi_1_dfm }} & FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_T [4] | { 1{ !IsDenorm_5U_10U_land_lpi_1_dfm }} & FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_T )))) && FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva[4] != FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_C0 [4] = { 1{ IsDenorm_5U_10U_land_lpi_1_dfm }} ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_R0 [4] = { 1{ IsDenorm_5U_10U_land_lpi_1_dfm }} & ( FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_R | ( { 1{ IsDenorm_5U_10U_land_lpi_1_dfm_T  }} & FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_C ));
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_X0 [4] = { 1{ IsDenorm_5U_10U_land_lpi_1_dfm }} & FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_X ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_C0 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_R0 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_X0 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_C0 = { 1{ !IsDenorm_5U_10U_land_lpi_1_dfm }} ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_R0 = { 1{ !IsDenorm_5U_10U_land_lpi_1_dfm }} & ( FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_R | ( { 1{ IsDenorm_5U_10U_land_lpi_1_dfm_T  }} & FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_C ));
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_X0 = { 1{ !IsDenorm_5U_10U_land_lpi_1_dfm }} & FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_X ;
  assign mux_9_nl = or_3_cse ? nor_23_cse : nor_24_nl;
  logic [0:0] or_3_cse_C14 ;
  logic [0:0] or_3_cse_R14 ;
  logic [0:0] or_3_cse_X14 ;
  assign or_3_cse_C14 = | mux_9_nl_C ;
  assign or_3_cse_X14 = | mux_9_nl_X ;
  assign mux_9_nl_T = or_3_cse ? ( { 1{ or_3_cse_T  }} | nor_23_cse_T ) : ( { 1{ or_3_cse_T  }} | nor_24_nl_T );
  assign mux_9_nl_S = or_3_cse ? nor_23_cse_S : nor_24_nl_S ;
  assign or_3_cse_R14 = ( | (mux_9_nl_R | ( mux_9_nl_C & ( { 1{ or_3_cse }} & nor_23_cse_T | { 1{ !or_3_cse }} & nor_24_nl_T )))) && nor_23_cse != nor_24_nl ;
  logic [0:0] nor_23_cse_C0 ;
  logic [0:0] nor_23_cse_R0 ;
  logic [0:0] nor_23_cse_X0 ;
  assign nor_23_cse_C0 = { 1{ or_3_cse }} ;
  assign nor_23_cse_R0 = { 1{ or_3_cse }} & ( mux_9_nl_R | ( { 1{ or_3_cse_T  }} & mux_9_nl_C ));
  assign nor_23_cse_X0 = { 1{ or_3_cse }} & mux_9_nl_X ;
  logic [0:0] nor_24_nl_C0 ;
  logic [0:0] nor_24_nl_R0 ;
  logic [0:0] nor_24_nl_X0 ;
  assign nor_24_nl_C0 = { 1{ !or_3_cse }} ;
  assign nor_24_nl_R0 = { 1{ !or_3_cse }} & ( mux_9_nl_R | ( { 1{ or_3_cse_T  }} & mux_9_nl_C ));
  assign nor_24_nl_X0 = { 1{ !or_3_cse }} & mux_9_nl_X ;
  assign mux_48_nl = or_66_cse ? io_read_cfg_precision_rsc_svs_st_3[0] : or_127_nl;
  logic [0:0] or_66_cse_C4 ;
  logic [0:0] or_66_cse_R4 ;
  logic [0:0] or_66_cse_X4 ;
  assign or_66_cse_C4 = | mux_48_nl_C ;
  assign or_66_cse_X4 = | mux_48_nl_X ;
  assign mux_48_nl_T = or_66_cse ? ( { 1{ or_66_cse_T  }} | io_read_cfg_precision_rsc_svs_st_3_T [0] ) : ( { 1{ or_66_cse_T  }} | or_127_nl_T );
  assign mux_48_nl_S = or_66_cse ? io_read_cfg_precision_rsc_svs_st_3_S : or_127_nl_S ;
  assign or_66_cse_R4 = ( | (mux_48_nl_R | ( mux_48_nl_C & ( { 1{ or_66_cse }} & io_read_cfg_precision_rsc_svs_st_3_T [0] | { 1{ !or_66_cse }} & or_127_nl_T )))) && io_read_cfg_precision_rsc_svs_st_3[0] != or_127_nl ;
  assign { io_read_cfg_precision_rsc_svs_st_3_R7 [1:1] } = 0;
  assign { io_read_cfg_precision_rsc_svs_st_3_X7 [1:1] } = 0;
  assign { io_read_cfg_precision_rsc_svs_st_3_C7 [1:1] } = 0;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_C8 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_R8 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_X8 ;
  assign io_read_cfg_precision_rsc_svs_st_3_C8 [0] = { 1{ or_66_cse }} ;
  assign io_read_cfg_precision_rsc_svs_st_3_R8 [0] = { 1{ or_66_cse }} & ( mux_48_nl_R | ( { 1{ or_66_cse_T  }} & mux_48_nl_C ));
  assign io_read_cfg_precision_rsc_svs_st_3_X8 [0] = { 1{ or_66_cse }} & mux_48_nl_X ;
  logic [0:0] or_127_nl_C0 ;
  logic [0:0] or_127_nl_R0 ;
  logic [0:0] or_127_nl_X0 ;
  assign or_127_nl_C0 = { 1{ !or_66_cse }} ;
  assign or_127_nl_R0 = { 1{ !or_66_cse }} & ( mux_48_nl_R | ( { 1{ or_66_cse_T  }} & mux_48_nl_C ));
  assign or_127_nl_X0 = { 1{ !or_66_cse }} & mux_48_nl_X ;
  assign mux_4_nl = main_stage_v_1 ? or_2_nl : main_stage_en_1;
  logic [0:0] main_stage_v_1_C7 ;
  logic [0:0] main_stage_v_1_R7 ;
  logic [0:0] main_stage_v_1_X7 ;
  assign main_stage_v_1_C7 = | mux_4_nl_C ;
  assign main_stage_v_1_X7 = | mux_4_nl_X ;
  assign mux_4_nl_T = main_stage_v_1 ? ( { 1{ main_stage_v_1_T  }} | or_2_nl_T ) : ( { 1{ main_stage_v_1_T  }} | main_stage_en_1_T );
  assign mux_4_nl_S = main_stage_v_1 ? or_2_nl_S : main_stage_en_1_S ;
  assign main_stage_v_1_R7 = ( | (mux_4_nl_R | ( mux_4_nl_C & ( { 1{ main_stage_v_1 }} & or_2_nl_T | { 1{ !main_stage_v_1 }} & main_stage_en_1_T )))) && or_2_nl != main_stage_en_1 ;
  logic [0:0] or_2_nl_C0 ;
  logic [0:0] or_2_nl_R0 ;
  logic [0:0] or_2_nl_X0 ;
  assign or_2_nl_C0 = { 1{ main_stage_v_1 }} ;
  assign or_2_nl_R0 = { 1{ main_stage_v_1 }} & ( mux_4_nl_R | ( { 1{ main_stage_v_1_T  }} & mux_4_nl_C ));
  assign or_2_nl_X0 = { 1{ main_stage_v_1 }} & mux_4_nl_X ;
  logic [0:0] main_stage_en_1_C4 ;
  logic [0:0] main_stage_en_1_R4 ;
  logic [0:0] main_stage_en_1_X4 ;
  assign main_stage_en_1_C4 = { 1{ !main_stage_v_1 }} ;
  assign main_stage_en_1_R4 = { 1{ !main_stage_v_1 }} & ( mux_4_nl_R | ( { 1{ main_stage_v_1_T  }} & mux_4_nl_C ));
  assign main_stage_en_1_X4 = { 1{ !main_stage_v_1 }} & mux_4_nl_X ;
  assign _011_ = IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva ? 7'b1111111 : IntShiftRight_25U_5U_9U_obits_fixed_nor_2_nl;
  logic [0:0] IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva_C1 ;
  logic [0:0] IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva_R1 ;
  logic [0:0] IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva_X1 ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva_C1 = | _011__C ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva_X1 = | _011__X ;
  logic [6:0] IntShiftRight_25U_5U_9U_obits_fixed_nor_2_nl_C0 ;
  logic [6:0] IntShiftRight_25U_5U_9U_obits_fixed_nor_2_nl_R0 ;
  logic [6:0] IntShiftRight_25U_5U_9U_obits_fixed_nor_2_nl_X0 ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_nor_2_nl_C0 = { 7{ !IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva }};
  assign IntShiftRight_25U_5U_9U_obits_fixed_nor_2_nl_R0 = { 7{ !IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva }} & ( _011__R | ( { 7{ IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva_T  }} & _011__C ));
  assign IntShiftRight_25U_5U_9U_obits_fixed_nor_2_nl_X0 = { 7{ !IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva }} & _011__X ;
  assign _011__T = IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva ? { 7{ | IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva_T  }} : ( { 7{ | IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva_T  }} | IntShiftRight_25U_5U_9U_obits_fixed_nor_2_nl_T );
  assign _011__S = IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva ? IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva_S : IntShiftRight_25U_5U_9U_obits_fixed_nor_2_nl_S ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva_R1 = ( | (_011__R | ( { 7{ !IntShiftRight_25U_5U_9U_obits_fixed_and_unfl_sva }} & IntShiftRight_25U_5U_9U_obits_fixed_nor_2_nl_T & _011__C ))) && 7'b1111111 != IntShiftRight_25U_5U_9U_obits_fixed_nor_2_nl ;
  assign _010_ = _182_ ? IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva[7:1] : 7'b1111111;
  logic [0:0] _182__C1 ;
  logic [0:0] _182__R1 ;
  logic [0:0] _182__X1 ;
  assign _182__C1 = | _010__C ;
  assign _182__X1 = | _010__X ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_C2 [7:1] = { 7{ _182_ }} ;
  assign IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_R2 [7:1] = { 7{ _182_ }} & ( _010__R | ( { 7{ _182__T  }} & _010__C ));
  assign IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_X2 [7:1] = { 7{ _182_ }} & _010__X ;
  assign _010__T = _182_ ? ( { 7{ | _182__T  }} | IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_T [7:1] ) : { 7{ | _182__T  }};
  assign _010__S = _182_ ? IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_S : _182__S ;
  assign _182__R1 = ( | (_010__R | ( { 7{ _182_ }} & IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva_T [7:1] & _010__C ))) && IntShiftRight_25U_5U_9U_obits_fixed_acc_sat_sva[7:1] != 7'b1111111 ;
  assign mux_43_itm = or_78_cse_1 ? or_83_nl : _001_;
  logic [0:0] or_78_cse_1_C2 ;
  logic [0:0] or_78_cse_1_R2 ;
  logic [0:0] or_78_cse_1_X2 ;
  assign or_78_cse_1_C2 = | mux_43_itm_C ;
  assign or_78_cse_1_X2 = | mux_43_itm_X ;
  assign mux_43_itm_T = or_78_cse_1 ? ( { 1{ or_78_cse_1_T  }} | or_83_nl_T ) : ( { 1{ or_78_cse_1_T  }} | _001__T );
  assign mux_43_itm_S = or_78_cse_1 ? or_83_nl_S : _001__S ;
  assign or_78_cse_1_R2 = ( | (mux_43_itm_R | ( mux_43_itm_C & ( { 1{ or_78_cse_1 }} & or_83_nl_T | { 1{ !or_78_cse_1 }} & _001__T )))) && or_83_nl != _001_ ;
  logic [0:0] or_83_nl_C0 ;
  logic [0:0] or_83_nl_R0 ;
  logic [0:0] or_83_nl_X0 ;
  assign or_83_nl_C0 = { 1{ or_78_cse_1 }} ;
  assign or_83_nl_R0 = { 1{ or_78_cse_1 }} & ( mux_43_itm_R | ( { 1{ or_78_cse_1_T  }} & mux_43_itm_C ));
  assign or_83_nl_X0 = { 1{ or_78_cse_1 }} & mux_43_itm_X ;
  logic [0:0] _001__C0 ;
  logic [0:0] _001__R0 ;
  logic [0:0] _001__X0 ;
  assign _001__C0 = { 1{ !or_78_cse_1 }} ;
  assign _001__R0 = { 1{ !or_78_cse_1 }} & ( mux_43_itm_R | ( { 1{ or_78_cse_1_T  }} & mux_43_itm_C ));
  assign _001__X0 = { 1{ !or_78_cse_1 }} & mux_43_itm_X ;
  assign mux_42_nl = io_read_cfg_precision_rsc_svs_st_3[0] ? or_3_cse : or_tmp_35;
  assign { io_read_cfg_precision_rsc_svs_st_3_R8 [1:1] } = 0;
  assign { io_read_cfg_precision_rsc_svs_st_3_X8 [1:1] } = 0;
  assign { io_read_cfg_precision_rsc_svs_st_3_C8 [1:1] } = 0;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_C9 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_R9 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_X9 ;
  assign io_read_cfg_precision_rsc_svs_st_3_C9 [0] = | mux_42_nl_C ;
  assign io_read_cfg_precision_rsc_svs_st_3_X9 [0] = | mux_42_nl_X ;
  assign mux_42_nl_T = io_read_cfg_precision_rsc_svs_st_3[0] ? ( { 1{ io_read_cfg_precision_rsc_svs_st_3_T  [0] }} | or_3_cse_T ) : ( { 1{ io_read_cfg_precision_rsc_svs_st_3_T  [0] }} | or_tmp_35_T );
  assign mux_42_nl_S = io_read_cfg_precision_rsc_svs_st_3[0] ? or_3_cse_S : or_tmp_35_S ;
  assign io_read_cfg_precision_rsc_svs_st_3_R9 [0] = ( | (mux_42_nl_R | ( mux_42_nl_C & ( { 1{ io_read_cfg_precision_rsc_svs_st_3[0] }} & or_3_cse_T | { 1{ !io_read_cfg_precision_rsc_svs_st_3[0] }} & or_tmp_35_T )))) && or_3_cse != or_tmp_35 ;
  logic [0:0] or_3_cse_C15 ;
  logic [0:0] or_3_cse_R15 ;
  logic [0:0] or_3_cse_X15 ;
  assign or_3_cse_C15 = { 1{ io_read_cfg_precision_rsc_svs_st_3[0] }} ;
  assign or_3_cse_R15 = { 1{ io_read_cfg_precision_rsc_svs_st_3[0] }} & ( mux_42_nl_R | ( { 1{ io_read_cfg_precision_rsc_svs_st_3_T  [0] }} & mux_42_nl_C ));
  assign or_3_cse_X15 = { 1{ io_read_cfg_precision_rsc_svs_st_3[0] }} & mux_42_nl_X ;
  logic [0:0] or_tmp_35_C1 ;
  logic [0:0] or_tmp_35_R1 ;
  logic [0:0] or_tmp_35_X1 ;
  assign or_tmp_35_C1 = { 1{ !io_read_cfg_precision_rsc_svs_st_3[0] }} ;
  assign or_tmp_35_R1 = { 1{ !io_read_cfg_precision_rsc_svs_st_3[0] }} & ( mux_42_nl_R | ( { 1{ io_read_cfg_precision_rsc_svs_st_3_T  [0] }} & mux_42_nl_C ));
  assign or_tmp_35_X1 = { 1{ !io_read_cfg_precision_rsc_svs_st_3[0] }} & mux_42_nl_X ;
  assign not_tmp_22 = io_read_cfg_precision_rsc_svs_st_3[0] ? and_108_nl : nor_20_nl;
  assign { io_read_cfg_precision_rsc_svs_st_3_R9 [1:1] } = 0;
  assign { io_read_cfg_precision_rsc_svs_st_3_X9 [1:1] } = 0;
  assign { io_read_cfg_precision_rsc_svs_st_3_C9 [1:1] } = 0;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_C10 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_R10 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_X10 ;
  assign io_read_cfg_precision_rsc_svs_st_3_C10 [0] = | not_tmp_22_C ;
  assign io_read_cfg_precision_rsc_svs_st_3_X10 [0] = | not_tmp_22_X ;
  assign not_tmp_22_T = io_read_cfg_precision_rsc_svs_st_3[0] ? ( { 1{ io_read_cfg_precision_rsc_svs_st_3_T  [0] }} | and_108_nl_T ) : ( { 1{ io_read_cfg_precision_rsc_svs_st_3_T  [0] }} | nor_20_nl_T );
  assign not_tmp_22_S = io_read_cfg_precision_rsc_svs_st_3[0] ? and_108_nl_S : nor_20_nl_S ;
  assign io_read_cfg_precision_rsc_svs_st_3_R10 [0] = ( | (not_tmp_22_R | ( not_tmp_22_C & ( { 1{ io_read_cfg_precision_rsc_svs_st_3[0] }} & and_108_nl_T | { 1{ !io_read_cfg_precision_rsc_svs_st_3[0] }} & nor_20_nl_T )))) && and_108_nl != nor_20_nl ;
  logic [0:0] and_108_nl_C0 ;
  logic [0:0] and_108_nl_R0 ;
  logic [0:0] and_108_nl_X0 ;
  assign and_108_nl_C0 = { 1{ io_read_cfg_precision_rsc_svs_st_3[0] }} ;
  assign and_108_nl_R0 = { 1{ io_read_cfg_precision_rsc_svs_st_3[0] }} & ( not_tmp_22_R | ( { 1{ io_read_cfg_precision_rsc_svs_st_3_T  [0] }} & not_tmp_22_C ));
  assign and_108_nl_X0 = { 1{ io_read_cfg_precision_rsc_svs_st_3[0] }} & not_tmp_22_X ;
  logic [0:0] nor_20_nl_C0 ;
  logic [0:0] nor_20_nl_R0 ;
  logic [0:0] nor_20_nl_X0 ;
  assign nor_20_nl_C0 = { 1{ !io_read_cfg_precision_rsc_svs_st_3[0] }} ;
  assign nor_20_nl_R0 = { 1{ !io_read_cfg_precision_rsc_svs_st_3[0] }} & ( not_tmp_22_R | ( { 1{ io_read_cfg_precision_rsc_svs_st_3_T  [0] }} & not_tmp_22_C ));
  assign nor_20_nl_X0 = { 1{ !io_read_cfg_precision_rsc_svs_st_3[0] }} & not_tmp_22_X ;
  assign _005_ = IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva ? 15'b111111111111111 : IntShiftRight_33U_5U_17U_obits_fixed_nor_2_nl;
  logic [0:0] IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_C2 ;
  logic [0:0] IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_R2 ;
  logic [0:0] IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_X2 ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_C2 = | _005__C ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_X2 = | _005__X ;
  logic [14:0] IntShiftRight_33U_5U_17U_obits_fixed_nor_2_nl_C0 ;
  logic [14:0] IntShiftRight_33U_5U_17U_obits_fixed_nor_2_nl_R0 ;
  logic [14:0] IntShiftRight_33U_5U_17U_obits_fixed_nor_2_nl_X0 ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_nor_2_nl_C0 = { 15{ !IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva }};
  assign IntShiftRight_33U_5U_17U_obits_fixed_nor_2_nl_R0 = { 15{ !IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva }} & ( _005__R | ( { 15{ IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_T  }} & _005__C ));
  assign IntShiftRight_33U_5U_17U_obits_fixed_nor_2_nl_X0 = { 15{ !IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva }} & _005__X ;
  assign _005__T = IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva ? { 15{ | IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_T  }} : ( { 15{ | IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_T  }} | IntShiftRight_33U_5U_17U_obits_fixed_nor_2_nl_T );
  assign _005__S = IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva ? IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_S : IntShiftRight_33U_5U_17U_obits_fixed_nor_2_nl_S ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva_R2 = ( | (_005__R | ( { 15{ !IntShiftRight_33U_5U_17U_obits_fixed_and_unfl_sva }} & IntShiftRight_33U_5U_17U_obits_fixed_nor_2_nl_T & _005__C ))) && 15'b111111111111111 != IntShiftRight_33U_5U_17U_obits_fixed_nor_2_nl ;
  assign _004_ = _217_ ? IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva[15:1] : 15'b111111111111111;
  logic [0:0] _217__C1 ;
  logic [0:0] _217__R1 ;
  logic [0:0] _217__X1 ;
  assign _217__C1 = | _004__C ;
  assign _217__X1 = | _004__X ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_C2 [15:1] = { 15{ _217_ }} ;
  assign IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_R2 [15:1] = { 15{ _217_ }} & ( _004__R | ( { 15{ _217__T  }} & _004__C ));
  assign IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_X2 [15:1] = { 15{ _217_ }} & _004__X ;
  assign _004__T = _217_ ? ( { 15{ | _217__T  }} | IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_T [15:1] ) : { 15{ | _217__T  }};
  assign _004__S = _217_ ? IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_S : _217__S ;
  assign _217__R1 = ( | (_004__R | ( { 15{ _217_ }} & IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva_T [15:1] & _004__C ))) && IntShiftRight_33U_5U_17U_obits_fixed_acc_sat_sva[15:1] != 15'b111111111111111 ;
  assign _009_ = IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva ? 7'b1111111 : IntShiftRight_25U_5U_9U_1_obits_fixed_nor_2_nl;
  logic [0:0] IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva_C1 ;
  logic [0:0] IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva_R1 ;
  logic [0:0] IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva_X1 ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva_C1 = | _009__C ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva_X1 = | _009__X ;
  logic [6:0] IntShiftRight_25U_5U_9U_1_obits_fixed_nor_2_nl_C0 ;
  logic [6:0] IntShiftRight_25U_5U_9U_1_obits_fixed_nor_2_nl_R0 ;
  logic [6:0] IntShiftRight_25U_5U_9U_1_obits_fixed_nor_2_nl_X0 ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_nor_2_nl_C0 = { 7{ !IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva }};
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_nor_2_nl_R0 = { 7{ !IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva }} & ( _009__R | ( { 7{ IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva_T  }} & _009__C ));
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_nor_2_nl_X0 = { 7{ !IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva }} & _009__X ;
  assign _009__T = IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva ? { 7{ | IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva_T  }} : ( { 7{ | IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva_T  }} | IntShiftRight_25U_5U_9U_1_obits_fixed_nor_2_nl_T );
  assign _009__S = IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva ? IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva_S : IntShiftRight_25U_5U_9U_1_obits_fixed_nor_2_nl_S ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva_R1 = ( | (_009__R | ( { 7{ !IntShiftRight_25U_5U_9U_1_obits_fixed_and_unfl_sva }} & IntShiftRight_25U_5U_9U_1_obits_fixed_nor_2_nl_T & _009__C ))) && 7'b1111111 != IntShiftRight_25U_5U_9U_1_obits_fixed_nor_2_nl ;
  assign _008_ = _213_ ? IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva[7:1] : 7'b1111111;
  logic [0:0] _213__C1 ;
  logic [0:0] _213__R1 ;
  logic [0:0] _213__X1 ;
  assign _213__C1 = | _008__C ;
  assign _213__X1 = | _008__X ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_C2 [7:1] = { 7{ _213_ }} ;
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_R2 [7:1] = { 7{ _213_ }} & ( _008__R | ( { 7{ _213__T  }} & _008__C ));
  assign IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_X2 [7:1] = { 7{ _213_ }} & _008__X ;
  assign _008__T = _213_ ? ( { 7{ | _213__T  }} | IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_T [7:1] ) : { 7{ | _213__T  }};
  assign _008__S = _213_ ? IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_S : _213__S ;
  assign _213__R1 = ( | (_008__R | ( { 7{ _213_ }} & IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva_T [7:1] & _008__C ))) && IntShiftRight_25U_5U_9U_1_obits_fixed_acc_sat_sva[7:1] != 7'b1111111 ;
  assign mux_44_nl = or_42_cse ? nor_12_nl : or_107_cse;
  logic [0:0] or_42_cse_C2 ;
  logic [0:0] or_42_cse_R2 ;
  logic [0:0] or_42_cse_X2 ;
  assign or_42_cse_C2 = | mux_44_nl_C ;
  assign or_42_cse_X2 = | mux_44_nl_X ;
  assign mux_44_nl_T = or_42_cse ? ( { 1{ or_42_cse_T  }} | nor_12_nl_T ) : ( { 1{ or_42_cse_T  }} | or_107_cse_T );
  assign mux_44_nl_S = or_42_cse ? nor_12_nl_S : or_107_cse_S ;
  assign or_42_cse_R2 = ( | (mux_44_nl_R | ( mux_44_nl_C & ( { 1{ or_42_cse }} & nor_12_nl_T | { 1{ !or_42_cse }} & or_107_cse_T )))) && nor_12_nl != or_107_cse ;
  logic [0:0] nor_12_nl_C1 ;
  logic [0:0] nor_12_nl_R1 ;
  logic [0:0] nor_12_nl_X1 ;
  assign nor_12_nl_C1 = { 1{ or_42_cse }} ;
  assign nor_12_nl_R1 = { 1{ or_42_cse }} & ( mux_44_nl_R | ( { 1{ or_42_cse_T  }} & mux_44_nl_C ));
  assign nor_12_nl_X1 = { 1{ or_42_cse }} & mux_44_nl_X ;
  logic [0:0] or_107_cse_C3 ;
  logic [0:0] or_107_cse_R3 ;
  logic [0:0] or_107_cse_X3 ;
  assign or_107_cse_C3 = { 1{ !or_42_cse }} ;
  assign or_107_cse_R3 = { 1{ !or_42_cse }} & ( mux_44_nl_R | ( { 1{ or_42_cse_T  }} & mux_44_nl_C ));
  assign or_107_cse_X3 = { 1{ !or_42_cse }} & mux_44_nl_X ;
  assign IntSubExt_16U_16U_17U_o_asn_IntSubExt_16U_16U_17U_o_conc_1_cgspt_9_mux_nl = and_120_nl ? chn_data_in_rsci_d_mxwt[9:0] : FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl;
  logic [0:0] and_120_nl_C0 ;
  logic [0:0] and_120_nl_R0 ;
  logic [0:0] and_120_nl_X0 ;
  assign and_120_nl_C0 = | IntSubExt_16U_16U_17U_o_asn_IntSubExt_16U_16U_17U_o_conc_1_cgspt_9_mux_nl_C ;
  assign and_120_nl_X0 = | IntSubExt_16U_16U_17U_o_asn_IntSubExt_16U_16U_17U_o_conc_1_cgspt_9_mux_nl_X ;
  assign IntSubExt_16U_16U_17U_o_asn_IntSubExt_16U_16U_17U_o_conc_1_cgspt_9_mux_nl_T = and_120_nl ? ( { 10{ and_120_nl_T  }} | chn_data_in_rsci_d_mxwt_T [9:0] ) : ( { 10{ and_120_nl_T  }} | FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_T );
  assign IntSubExt_16U_16U_17U_o_asn_IntSubExt_16U_16U_17U_o_conc_1_cgspt_9_mux_nl_S = and_120_nl ? chn_data_in_rsci_d_mxwt_S : FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_S ;
  assign and_120_nl_R0 = ( | (IntSubExt_16U_16U_17U_o_asn_IntSubExt_16U_16U_17U_o_conc_1_cgspt_9_mux_nl_R | ( IntSubExt_16U_16U_17U_o_asn_IntSubExt_16U_16U_17U_o_conc_1_cgspt_9_mux_nl_C & ( { 10{ and_120_nl }} & chn_data_in_rsci_d_mxwt_T [9:0] | { 10{ !and_120_nl }} & FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_T )))) && chn_data_in_rsci_d_mxwt[9:0] != FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl ;
  assign { chn_data_in_rsci_d_mxwt_R10 [0], chn_data_in_rsci_d_mxwt_R10 [1], chn_data_in_rsci_d_mxwt_R10 [2], chn_data_in_rsci_d_mxwt_R10 [3], chn_data_in_rsci_d_mxwt_R10 [4], chn_data_in_rsci_d_mxwt_R10 [5], chn_data_in_rsci_d_mxwt_R10 [6] } = 0;
  assign { chn_data_in_rsci_d_mxwt_X10 [0], chn_data_in_rsci_d_mxwt_X10 [1], chn_data_in_rsci_d_mxwt_X10 [2], chn_data_in_rsci_d_mxwt_X10 [3], chn_data_in_rsci_d_mxwt_X10 [4], chn_data_in_rsci_d_mxwt_X10 [5], chn_data_in_rsci_d_mxwt_X10 [6] } = 0;
  assign { chn_data_in_rsci_d_mxwt_C10 [0], chn_data_in_rsci_d_mxwt_C10 [1], chn_data_in_rsci_d_mxwt_C10 [2], chn_data_in_rsci_d_mxwt_C10 [3], chn_data_in_rsci_d_mxwt_C10 [4], chn_data_in_rsci_d_mxwt_C10 [5], chn_data_in_rsci_d_mxwt_C10 [6] } = 0;
  logic [15:0] chn_data_in_rsci_d_mxwt_C11 ;
  logic [15:0] chn_data_in_rsci_d_mxwt_R11 ;
  logic [15:0] chn_data_in_rsci_d_mxwt_X11 ;
  assign chn_data_in_rsci_d_mxwt_C11 [9:0] = { 10{ and_120_nl }} ;
  assign chn_data_in_rsci_d_mxwt_R11 [9:0] = { 10{ and_120_nl }} & ( IntSubExt_16U_16U_17U_o_asn_IntSubExt_16U_16U_17U_o_conc_1_cgspt_9_mux_nl_R | ( { 10{ and_120_nl_T  }} & IntSubExt_16U_16U_17U_o_asn_IntSubExt_16U_16U_17U_o_conc_1_cgspt_9_mux_nl_C ));
  assign chn_data_in_rsci_d_mxwt_X11 [9:0] = { 10{ and_120_nl }} & IntSubExt_16U_16U_17U_o_asn_IntSubExt_16U_16U_17U_o_conc_1_cgspt_9_mux_nl_X ;
  logic [9:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_C0 ;
  logic [9:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_R0 ;
  logic [9:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_X0 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_C0 = { 10{ !and_120_nl }} ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_R0 = { 10{ !and_120_nl }} & ( IntSubExt_16U_16U_17U_o_asn_IntSubExt_16U_16U_17U_o_conc_1_cgspt_9_mux_nl_R | ( { 10{ and_120_nl_T  }} & IntSubExt_16U_16U_17U_o_asn_IntSubExt_16U_16U_17U_o_conc_1_cgspt_9_mux_nl_C ));
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_X0 = { 10{ !and_120_nl }} & IntSubExt_16U_16U_17U_o_asn_IntSubExt_16U_16U_17U_o_conc_1_cgspt_9_mux_nl_X ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl = _219_ ? FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm : 10'b1111111111;
  logic [0:0] _219__C1 ;
  logic [0:0] _219__R1 ;
  logic [0:0] _219__X1 ;
  assign _219__C1 = | FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_C ;
  assign _219__X1 = | FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_X ;
  logic [9:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_C0 ;
  logic [9:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_R0 ;
  logic [9:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_X0 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_C0 = { 10{ _219_ }} ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_R0 = { 10{ _219_ }} & ( FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_R | ( { 10{ _219__T  }} & FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_C ));
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_X0 = { 10{ _219_ }} & FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_X ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_T = _219_ ? ( { 10{ | _219__T  }} | FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_T ) : { 10{ | _219__T  }};
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_S = _219_ ? FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_S : _219__S ;
  assign _219__R1 = ( | (FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_R | ( { 10{ _219_ }} & FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_T & FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_C ))) && FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm != 10'b1111111111 ;
  logic [4:0] fangyuan23;
  logic [4:0] fangyuan23_T ;
  logic [4:0] fangyuan23_R ;
  logic [4:0] fangyuan23_C ;
  logic [4:0] fangyuan23_X ;
  assign fangyuan23 = { 1'b0, FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_or_1_nl };
  assign fangyuan23_T = {  1'h0 , FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_or_1_nl_T  };
  logic [5:0] fangyuan23_S ;
  assign fangyuan23_S = 0 ;
  logic [3:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_or_1_nl_R0 ;
  logic [3:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_or_1_nl_X0 ;
  logic [3:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_or_1_nl_C0 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_or_1_nl_R0 = fangyuan23_R [3:0] ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_or_1_nl_X0 = fangyuan23_X [3:0] ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_or_1_nl_C0 = fangyuan23_C [3:0] ;

  assign cfg_truncate_mux1h_3_itm = mux_43_itm ? cfg_truncate_rsci_d : fangyuan23;
  logic [0:0] mux_43_itm_C1 ;
  logic [0:0] mux_43_itm_R1 ;
  logic [0:0] mux_43_itm_X1 ;
  assign mux_43_itm_C1 = | cfg_truncate_mux1h_3_itm_C ;
  assign mux_43_itm_X1 = | cfg_truncate_mux1h_3_itm_X ;
  assign cfg_truncate_mux1h_3_itm_T = mux_43_itm ? ( { 5{ mux_43_itm_T  }} | cfg_truncate_rsci_d_T ) : ( { 5{ mux_43_itm_T  }} | fangyuan23_T );
  assign cfg_truncate_mux1h_3_itm_S = mux_43_itm ? cfg_truncate_rsci_d_S : fangyuan23_S ;
  assign mux_43_itm_R1 = ( | (cfg_truncate_mux1h_3_itm_R | ( cfg_truncate_mux1h_3_itm_C & ( { 5{ mux_43_itm }} & cfg_truncate_rsci_d_T | { 5{ !mux_43_itm }} & fangyuan23_T )))) && cfg_truncate_rsci_d != fangyuan23 ;
  logic [4:0] cfg_truncate_rsci_d_C0 ;
  logic [4:0] cfg_truncate_rsci_d_R0 ;
  logic [4:0] cfg_truncate_rsci_d_X0 ;
  assign cfg_truncate_rsci_d_C0 = { 5{ mux_43_itm }} ;
  assign cfg_truncate_rsci_d_R0 = { 5{ mux_43_itm }} & ( cfg_truncate_mux1h_3_itm_R | ( { 5{ mux_43_itm_T  }} & cfg_truncate_mux1h_3_itm_C ));
  assign cfg_truncate_rsci_d_X0 = { 5{ mux_43_itm }} & cfg_truncate_mux1h_3_itm_X ;
  logic [4:0] fangyuan23_C0 ;
  logic [4:0] fangyuan23_R0 ;
  logic [4:0] fangyuan23_X0 ;
  assign fangyuan23_C0 = { 5{ !mux_43_itm }} ;
  assign fangyuan23_R0 = { 5{ !mux_43_itm }} & ( cfg_truncate_mux1h_3_itm_R | ( { 5{ mux_43_itm_T  }} & cfg_truncate_mux1h_3_itm_C ));
  assign fangyuan23_X0 = { 5{ !mux_43_itm }} & cfg_truncate_mux1h_3_itm_X ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_or_1_nl = IsNaN_5U_10U_land_lpi_1_dfm ? 4'b1111 : FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl;
  logic [0:0] IsNaN_5U_10U_land_lpi_1_dfm_C1 ;
  logic [0:0] IsNaN_5U_10U_land_lpi_1_dfm_R1 ;
  logic [0:0] IsNaN_5U_10U_land_lpi_1_dfm_X1 ;
  assign IsNaN_5U_10U_land_lpi_1_dfm_C1 = | FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_or_1_nl_C ;
  assign IsNaN_5U_10U_land_lpi_1_dfm_X1 = | FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_or_1_nl_X ;
  logic [3:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_C0 ;
  logic [3:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_R0 ;
  logic [3:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_X0 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_C0 = { 4{ !IsNaN_5U_10U_land_lpi_1_dfm }};
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_R0 = { 4{ !IsNaN_5U_10U_land_lpi_1_dfm }} & ( FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_or_1_nl_R | ( { 4{ IsNaN_5U_10U_land_lpi_1_dfm_T  }} & FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_or_1_nl_C ));
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_X0 = { 4{ !IsNaN_5U_10U_land_lpi_1_dfm }} & FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_or_1_nl_X ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_or_1_nl_T = IsNaN_5U_10U_land_lpi_1_dfm ? { 4{ | IsNaN_5U_10U_land_lpi_1_dfm_T  }} : ( { 4{ | IsNaN_5U_10U_land_lpi_1_dfm_T  }} | FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_T );
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_or_1_nl_S = IsNaN_5U_10U_land_lpi_1_dfm ? IsNaN_5U_10U_land_lpi_1_dfm_S : FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_S ;
  assign IsNaN_5U_10U_land_lpi_1_dfm_R1 = ( | (FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_or_1_nl_R | ( { 4{ !IsNaN_5U_10U_land_lpi_1_dfm }} & FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_T & FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_FpExpoWidthInc_5U_6U_10U_1U_1U_if_3_or_1_nl_C ))) && 4'b1111 != FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl ;
  assign mux_25_nl = or_78_cse_1 ? nor_30_nl : mux_24_nl;
  logic [0:0] or_78_cse_1_C3 ;
  logic [0:0] or_78_cse_1_R3 ;
  logic [0:0] or_78_cse_1_X3 ;
  assign or_78_cse_1_C3 = | mux_25_nl_C ;
  assign or_78_cse_1_X3 = | mux_25_nl_X ;
  assign mux_25_nl_T = or_78_cse_1 ? ( { 1{ or_78_cse_1_T  }} | nor_30_nl_T ) : ( { 1{ or_78_cse_1_T  }} | mux_24_nl_T );
  assign mux_25_nl_S = or_78_cse_1 ? nor_30_nl_S : mux_24_nl_S ;
  assign or_78_cse_1_R3 = ( | (mux_25_nl_R | ( mux_25_nl_C & ( { 1{ or_78_cse_1 }} & nor_30_nl_T | { 1{ !or_78_cse_1 }} & mux_24_nl_T )))) && nor_30_nl != mux_24_nl ;
  logic [0:0] nor_30_nl_C0 ;
  logic [0:0] nor_30_nl_R0 ;
  logic [0:0] nor_30_nl_X0 ;
  assign nor_30_nl_C0 = { 1{ or_78_cse_1 }} ;
  assign nor_30_nl_R0 = { 1{ or_78_cse_1 }} & ( mux_25_nl_R | ( { 1{ or_78_cse_1_T  }} & mux_25_nl_C ));
  assign nor_30_nl_X0 = { 1{ or_78_cse_1 }} & mux_25_nl_X ;
  logic [0:0] mux_24_nl_C0 ;
  logic [0:0] mux_24_nl_R0 ;
  logic [0:0] mux_24_nl_X0 ;
  assign mux_24_nl_C0 = { 1{ !or_78_cse_1 }} ;
  assign mux_24_nl_R0 = { 1{ !or_78_cse_1 }} & ( mux_25_nl_R | ( { 1{ or_78_cse_1_T  }} & mux_25_nl_C ));
  assign mux_24_nl_X0 = { 1{ !or_78_cse_1 }} & mux_25_nl_X ;
  assign mux_24_nl = _271_ ? main_stage_en_1 : mux_23_nl;
  logic [0:0] _271__C1 ;
  logic [0:0] _271__R1 ;
  logic [0:0] _271__X1 ;
  assign _271__C1 = | mux_24_nl_C ;
  assign _271__X1 = | mux_24_nl_X ;
  assign mux_24_nl_T = _271_ ? ( { 1{ _271__T  }} | main_stage_en_1_T ) : ( { 1{ _271__T  }} | mux_23_nl_T );
  assign mux_24_nl_S = _271_ ? main_stage_en_1_S : mux_23_nl_S ;
  assign _271__R1 = ( | (mux_24_nl_R | ( mux_24_nl_C & ( { 1{ _271_ }} & main_stage_en_1_T | { 1{ !_271_ }} & mux_23_nl_T )))) && main_stage_en_1 != mux_23_nl ;
  logic [0:0] main_stage_en_1_C5 ;
  logic [0:0] main_stage_en_1_R5 ;
  logic [0:0] main_stage_en_1_X5 ;
  assign main_stage_en_1_C5 = { 1{ _271_ }} ;
  assign main_stage_en_1_R5 = { 1{ _271_ }} & ( mux_24_nl_R | ( { 1{ _271__T  }} & mux_24_nl_C ));
  assign main_stage_en_1_X5 = { 1{ _271_ }} & mux_24_nl_X ;
  logic [0:0] mux_23_nl_C0 ;
  logic [0:0] mux_23_nl_R0 ;
  logic [0:0] mux_23_nl_X0 ;
  assign mux_23_nl_C0 = { 1{ !_271_ }} ;
  assign mux_23_nl_R0 = { 1{ !_271_ }} & ( mux_24_nl_R | ( { 1{ _271__T  }} & mux_24_nl_C ));
  assign mux_23_nl_X0 = { 1{ !_271_ }} & mux_24_nl_X ;
  assign mux_23_nl = chn_data_in_rsci_bawt ? or_tmp_35 : _003_;
  logic [0:0] chn_data_in_rsci_bawt_C9 ;
  logic [0:0] chn_data_in_rsci_bawt_R9 ;
  logic [0:0] chn_data_in_rsci_bawt_X9 ;
  assign chn_data_in_rsci_bawt_C9 = | mux_23_nl_C ;
  assign chn_data_in_rsci_bawt_X9 = | mux_23_nl_X ;
  assign mux_23_nl_T = chn_data_in_rsci_bawt ? ( { 1{ chn_data_in_rsci_bawt_T  }} | or_tmp_35_T ) : ( { 1{ chn_data_in_rsci_bawt_T  }} | _003__T );
  assign mux_23_nl_S = chn_data_in_rsci_bawt ? or_tmp_35_S : _003__S ;
  assign chn_data_in_rsci_bawt_R9 = ( | (mux_23_nl_R | ( mux_23_nl_C & ( { 1{ chn_data_in_rsci_bawt }} & or_tmp_35_T | { 1{ !chn_data_in_rsci_bawt }} & _003__T )))) && or_tmp_35 != _003_ ;
  logic [0:0] or_tmp_35_C2 ;
  logic [0:0] or_tmp_35_R2 ;
  logic [0:0] or_tmp_35_X2 ;
  assign or_tmp_35_C2 = { 1{ chn_data_in_rsci_bawt }} ;
  assign or_tmp_35_R2 = { 1{ chn_data_in_rsci_bawt }} & ( mux_23_nl_R | ( { 1{ chn_data_in_rsci_bawt_T  }} & mux_23_nl_C ));
  assign or_tmp_35_X2 = { 1{ chn_data_in_rsci_bawt }} & mux_23_nl_X ;
  logic [0:0] _003__C0 ;
  logic [0:0] _003__R0 ;
  logic [0:0] _003__X0 ;
  assign _003__C0 = { 1{ !chn_data_in_rsci_bawt }} ;
  assign _003__R0 = { 1{ !chn_data_in_rsci_bawt }} & ( mux_23_nl_R | ( { 1{ chn_data_in_rsci_bawt_T  }} & mux_23_nl_C ));
  assign _003__X0 = { 1{ !chn_data_in_rsci_bawt }} & mux_23_nl_X ;
  assign mux_22_nl = main_stage_v_1 ? or_30_nl : _002_;
  logic [0:0] main_stage_v_1_C8 ;
  logic [0:0] main_stage_v_1_R8 ;
  logic [0:0] main_stage_v_1_X8 ;
  assign main_stage_v_1_C8 = | mux_22_nl_C ;
  assign main_stage_v_1_X8 = | mux_22_nl_X ;
  assign mux_22_nl_T = main_stage_v_1 ? ( { 1{ main_stage_v_1_T  }} | or_30_nl_T ) : ( { 1{ main_stage_v_1_T  }} | _002__T );
  assign mux_22_nl_S = main_stage_v_1 ? or_30_nl_S : _002__S ;
  assign main_stage_v_1_R8 = ( | (mux_22_nl_R | ( mux_22_nl_C & ( { 1{ main_stage_v_1 }} & or_30_nl_T | { 1{ !main_stage_v_1 }} & _002__T )))) && or_30_nl != _002_ ;
  logic [0:0] or_30_nl_C0 ;
  logic [0:0] or_30_nl_R0 ;
  logic [0:0] or_30_nl_X0 ;
  assign or_30_nl_C0 = { 1{ main_stage_v_1 }} ;
  assign or_30_nl_R0 = { 1{ main_stage_v_1 }} & ( mux_22_nl_R | ( { 1{ main_stage_v_1_T  }} & mux_22_nl_C ));
  assign or_30_nl_X0 = { 1{ main_stage_v_1 }} & mux_22_nl_X ;
  logic [0:0] _002__C0 ;
  logic [0:0] _002__R0 ;
  logic [0:0] _002__X0 ;
  assign _002__C0 = { 1{ !main_stage_v_1 }} ;
  assign _002__R0 = { 1{ !main_stage_v_1 }} & ( mux_22_nl_R | ( { 1{ main_stage_v_1_T  }} & mux_22_nl_C ));
  assign _002__X0 = { 1{ !main_stage_v_1 }} & mux_22_nl_X ;
  assign mux_21_nl = or_65_nl ? nor_21_nl : mux_20_nl;
  logic [0:0] or_65_nl_C1 ;
  logic [0:0] or_65_nl_R1 ;
  logic [0:0] or_65_nl_X1 ;
  assign or_65_nl_C1 = | mux_21_nl_C ;
  assign or_65_nl_X1 = | mux_21_nl_X ;
  assign mux_21_nl_T = or_65_nl ? ( { 1{ or_65_nl_T  }} | nor_21_nl_T ) : ( { 1{ or_65_nl_T  }} | mux_20_nl_T );
  assign mux_21_nl_S = or_65_nl ? nor_21_nl_S : mux_20_nl_S ;
  assign or_65_nl_R1 = ( | (mux_21_nl_R | ( mux_21_nl_C & ( { 1{ or_65_nl }} & nor_21_nl_T | { 1{ !or_65_nl }} & mux_20_nl_T )))) && nor_21_nl != mux_20_nl ;
  logic [0:0] nor_21_nl_C0 ;
  logic [0:0] nor_21_nl_R0 ;
  logic [0:0] nor_21_nl_X0 ;
  assign nor_21_nl_C0 = { 1{ or_65_nl }} ;
  assign nor_21_nl_R0 = { 1{ or_65_nl }} & ( mux_21_nl_R | ( { 1{ or_65_nl_T  }} & mux_21_nl_C ));
  assign nor_21_nl_X0 = { 1{ or_65_nl }} & mux_21_nl_X ;
  logic [0:0] mux_20_nl_C0 ;
  logic [0:0] mux_20_nl_R0 ;
  logic [0:0] mux_20_nl_X0 ;
  assign mux_20_nl_C0 = { 1{ !or_65_nl }} ;
  assign mux_20_nl_R0 = { 1{ !or_65_nl }} & ( mux_21_nl_R | ( { 1{ or_65_nl_T  }} & mux_21_nl_C ));
  assign mux_20_nl_X0 = { 1{ !or_65_nl }} & mux_21_nl_X ;
  assign mux_20_nl = io_read_cfg_precision_rsc_svs_st_3[0] ? _002_ : mux_19_nl;
  assign { io_read_cfg_precision_rsc_svs_st_3_R10 [1:1] } = 0;
  assign { io_read_cfg_precision_rsc_svs_st_3_X10 [1:1] } = 0;
  assign { io_read_cfg_precision_rsc_svs_st_3_C10 [1:1] } = 0;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_C11 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_R11 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_X11 ;
  assign io_read_cfg_precision_rsc_svs_st_3_C11 [0] = | mux_20_nl_C ;
  assign io_read_cfg_precision_rsc_svs_st_3_X11 [0] = | mux_20_nl_X ;
  assign mux_20_nl_T = io_read_cfg_precision_rsc_svs_st_3[0] ? ( { 1{ io_read_cfg_precision_rsc_svs_st_3_T  [0] }} | _002__T ) : ( { 1{ io_read_cfg_precision_rsc_svs_st_3_T  [0] }} | mux_19_nl_T );
  assign mux_20_nl_S = io_read_cfg_precision_rsc_svs_st_3[0] ? _002__S : mux_19_nl_S ;
  assign io_read_cfg_precision_rsc_svs_st_3_R11 [0] = ( | (mux_20_nl_R | ( mux_20_nl_C & ( { 1{ io_read_cfg_precision_rsc_svs_st_3[0] }} & _002__T | { 1{ !io_read_cfg_precision_rsc_svs_st_3[0] }} & mux_19_nl_T )))) && _002_ != mux_19_nl ;
  logic [0:0] _002__C1 ;
  logic [0:0] _002__R1 ;
  logic [0:0] _002__X1 ;
  assign _002__C1 = { 1{ io_read_cfg_precision_rsc_svs_st_3[0] }} ;
  assign _002__R1 = { 1{ io_read_cfg_precision_rsc_svs_st_3[0] }} & ( mux_20_nl_R | ( { 1{ io_read_cfg_precision_rsc_svs_st_3_T  [0] }} & mux_20_nl_C ));
  assign _002__X1 = { 1{ io_read_cfg_precision_rsc_svs_st_3[0] }} & mux_20_nl_X ;
  logic [0:0] mux_19_nl_C0 ;
  logic [0:0] mux_19_nl_R0 ;
  logic [0:0] mux_19_nl_X0 ;
  assign mux_19_nl_C0 = { 1{ !io_read_cfg_precision_rsc_svs_st_3[0] }} ;
  assign mux_19_nl_R0 = { 1{ !io_read_cfg_precision_rsc_svs_st_3[0] }} & ( mux_20_nl_R | ( { 1{ io_read_cfg_precision_rsc_svs_st_3_T  [0] }} & mux_20_nl_C ));
  assign mux_19_nl_X0 = { 1{ !io_read_cfg_precision_rsc_svs_st_3[0] }} & mux_20_nl_X ;
  assign mux_19_nl = main_stage_v_1 ? mux_18_nl : _002_;
  logic [0:0] main_stage_v_1_C9 ;
  logic [0:0] main_stage_v_1_R9 ;
  logic [0:0] main_stage_v_1_X9 ;
  assign main_stage_v_1_C9 = | mux_19_nl_C ;
  assign main_stage_v_1_X9 = | mux_19_nl_X ;
  assign mux_19_nl_T = main_stage_v_1 ? ( { 1{ main_stage_v_1_T  }} | mux_18_nl_T ) : ( { 1{ main_stage_v_1_T  }} | _002__T );
  assign mux_19_nl_S = main_stage_v_1 ? mux_18_nl_S : _002__S ;
  assign main_stage_v_1_R9 = ( | (mux_19_nl_R | ( mux_19_nl_C & ( { 1{ main_stage_v_1 }} & mux_18_nl_T | { 1{ !main_stage_v_1 }} & _002__T )))) && mux_18_nl != _002_ ;
  logic [0:0] mux_18_nl_C0 ;
  logic [0:0] mux_18_nl_R0 ;
  logic [0:0] mux_18_nl_X0 ;
  assign mux_18_nl_C0 = { 1{ main_stage_v_1 }} ;
  assign mux_18_nl_R0 = { 1{ main_stage_v_1 }} & ( mux_19_nl_R | ( { 1{ main_stage_v_1_T  }} & mux_19_nl_C ));
  assign mux_18_nl_X0 = { 1{ main_stage_v_1 }} & mux_19_nl_X ;
  logic [0:0] _002__C2 ;
  logic [0:0] _002__R2 ;
  logic [0:0] _002__X2 ;
  assign _002__C2 = { 1{ !main_stage_v_1 }} ;
  assign _002__R2 = { 1{ !main_stage_v_1 }} & ( mux_19_nl_R | ( { 1{ main_stage_v_1_T  }} & mux_19_nl_C ));
  assign _002__X2 = { 1{ !main_stage_v_1 }} & mux_19_nl_X ;
  assign mux_18_nl = main_stage_v_2 ? or_28_nl : and_tmp_4;
  logic [0:0] main_stage_v_2_C3 ;
  logic [0:0] main_stage_v_2_R3 ;
  logic [0:0] main_stage_v_2_X3 ;
  assign main_stage_v_2_C3 = | mux_18_nl_C ;
  assign main_stage_v_2_X3 = | mux_18_nl_X ;
  assign mux_18_nl_T = main_stage_v_2 ? ( { 1{ main_stage_v_2_T  }} | or_28_nl_T ) : ( { 1{ main_stage_v_2_T  }} | and_tmp_4_T );
  assign mux_18_nl_S = main_stage_v_2 ? or_28_nl_S : and_tmp_4_S ;
  assign main_stage_v_2_R3 = ( | (mux_18_nl_R | ( mux_18_nl_C & ( { 1{ main_stage_v_2 }} & or_28_nl_T | { 1{ !main_stage_v_2 }} & and_tmp_4_T )))) && or_28_nl != and_tmp_4 ;
  logic [0:0] or_28_nl_C0 ;
  logic [0:0] or_28_nl_R0 ;
  logic [0:0] or_28_nl_X0 ;
  assign or_28_nl_C0 = { 1{ main_stage_v_2 }} ;
  assign or_28_nl_R0 = { 1{ main_stage_v_2 }} & ( mux_18_nl_R | ( { 1{ main_stage_v_2_T  }} & mux_18_nl_C ));
  assign or_28_nl_X0 = { 1{ main_stage_v_2 }} & mux_18_nl_X ;
  logic [0:0] and_tmp_4_C1 ;
  logic [0:0] and_tmp_4_R1 ;
  logic [0:0] and_tmp_4_X1 ;
  assign and_tmp_4_C1 = { 1{ !main_stage_v_2 }} ;
  assign and_tmp_4_R1 = { 1{ !main_stage_v_2 }} & ( mux_18_nl_R | ( { 1{ main_stage_v_2_T  }} & mux_18_nl_C ));
  assign and_tmp_4_X1 = { 1{ !main_stage_v_2 }} & mux_18_nl_X ;
  logic [31:0] fangyuan24;
  logic [31:0] fangyuan24_T ;
  logic [31:0] fangyuan24_R ;
  logic [31:0] fangyuan24_C ;
  logic [31:0] fangyuan24_X ;
  assign fangyuan24 = { 8'b00000000, IntMulExt_9U_16U_25U_1_o_mul_nl };
  assign fangyuan24_T = {  8'h0 , IntMulExt_9U_16U_25U_1_o_mul_nl_T  };
  logic [5:0] fangyuan24_S ;
  assign fangyuan24_S = 0 ;
  logic [23:0] IntMulExt_9U_16U_25U_1_o_mul_nl_R0 ;
  logic [23:0] IntMulExt_9U_16U_25U_1_o_mul_nl_X0 ;
  logic [23:0] IntMulExt_9U_16U_25U_1_o_mul_nl_C0 ;
  assign IntMulExt_9U_16U_25U_1_o_mul_nl_R0 = fangyuan24_R [23:0] ;
  assign IntMulExt_9U_16U_25U_1_o_mul_nl_X0 = fangyuan24_X [23:0] ;
  assign IntMulExt_9U_16U_25U_1_o_mul_nl_C0 = fangyuan24_C [23:0] ;

  assign IntMulExt_17U_16U_33U_o_mux1h_1_itm = mux_41_nl ? z_out : fangyuan24;
  logic [0:0] mux_41_nl_C0 ;
  logic [0:0] mux_41_nl_R0 ;
  logic [0:0] mux_41_nl_X0 ;
  assign mux_41_nl_C0 = | IntMulExt_17U_16U_33U_o_mux1h_1_itm_C ;
  assign mux_41_nl_X0 = | IntMulExt_17U_16U_33U_o_mux1h_1_itm_X ;
  assign IntMulExt_17U_16U_33U_o_mux1h_1_itm_T = mux_41_nl ? ( { 32{ mux_41_nl_T  }} | z_out_T ) : ( { 32{ mux_41_nl_T  }} | fangyuan24_T );
  assign IntMulExt_17U_16U_33U_o_mux1h_1_itm_S = mux_41_nl ? z_out_S : fangyuan24_S ;
  assign mux_41_nl_R0 = ( | (IntMulExt_17U_16U_33U_o_mux1h_1_itm_R | ( IntMulExt_17U_16U_33U_o_mux1h_1_itm_C & ( { 32{ mux_41_nl }} & z_out_T | { 32{ !mux_41_nl }} & fangyuan24_T )))) && z_out != fangyuan24 ;
  logic [31:0] z_out_C0 ;
  logic [31:0] z_out_R0 ;
  logic [31:0] z_out_X0 ;
  assign z_out_C0 = { 32{ mux_41_nl }} ;
  assign z_out_R0 = { 32{ mux_41_nl }} & ( IntMulExt_17U_16U_33U_o_mux1h_1_itm_R | ( { 32{ mux_41_nl_T  }} & IntMulExt_17U_16U_33U_o_mux1h_1_itm_C ));
  assign z_out_X0 = { 32{ mux_41_nl }} & IntMulExt_17U_16U_33U_o_mux1h_1_itm_X ;
  logic [31:0] fangyuan24_C0 ;
  logic [31:0] fangyuan24_R0 ;
  logic [31:0] fangyuan24_X0 ;
  assign fangyuan24_C0 = { 32{ !mux_41_nl }} ;
  assign fangyuan24_R0 = { 32{ !mux_41_nl }} & ( IntMulExt_17U_16U_33U_o_mux1h_1_itm_R | ( { 32{ mux_41_nl_T  }} & IntMulExt_17U_16U_33U_o_mux1h_1_itm_C ));
  assign fangyuan24_X0 = { 32{ !mux_41_nl }} & IntMulExt_17U_16U_33U_o_mux1h_1_itm_X ;
  assign mux_41_nl = io_read_cfg_precision_rsc_svs_st_3[0] ? or_70_nl : nor_15_nl;
  assign { io_read_cfg_precision_rsc_svs_st_3_R11 [1:1] } = 0;
  assign { io_read_cfg_precision_rsc_svs_st_3_X11 [1:1] } = 0;
  assign { io_read_cfg_precision_rsc_svs_st_3_C11 [1:1] } = 0;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_C12 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_R12 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_X12 ;
  assign io_read_cfg_precision_rsc_svs_st_3_C12 [0] = | mux_41_nl_C ;
  assign io_read_cfg_precision_rsc_svs_st_3_X12 [0] = | mux_41_nl_X ;
  assign mux_41_nl_T = io_read_cfg_precision_rsc_svs_st_3[0] ? ( { 1{ io_read_cfg_precision_rsc_svs_st_3_T  [0] }} | or_70_nl_T ) : ( { 1{ io_read_cfg_precision_rsc_svs_st_3_T  [0] }} | nor_15_nl_T );
  assign mux_41_nl_S = io_read_cfg_precision_rsc_svs_st_3[0] ? or_70_nl_S : nor_15_nl_S ;
  assign io_read_cfg_precision_rsc_svs_st_3_R12 [0] = ( | (mux_41_nl_R | ( mux_41_nl_C & ( { 1{ io_read_cfg_precision_rsc_svs_st_3[0] }} & or_70_nl_T | { 1{ !io_read_cfg_precision_rsc_svs_st_3[0] }} & nor_15_nl_T )))) && or_70_nl != nor_15_nl ;
  logic [0:0] or_70_nl_C0 ;
  logic [0:0] or_70_nl_R0 ;
  logic [0:0] or_70_nl_X0 ;
  assign or_70_nl_C0 = { 1{ io_read_cfg_precision_rsc_svs_st_3[0] }} ;
  assign or_70_nl_R0 = { 1{ io_read_cfg_precision_rsc_svs_st_3[0] }} & ( mux_41_nl_R | ( { 1{ io_read_cfg_precision_rsc_svs_st_3_T  [0] }} & mux_41_nl_C ));
  assign or_70_nl_X0 = { 1{ io_read_cfg_precision_rsc_svs_st_3[0] }} & mux_41_nl_X ;
  logic [0:0] nor_15_nl_C0 ;
  logic [0:0] nor_15_nl_R0 ;
  logic [0:0] nor_15_nl_X0 ;
  assign nor_15_nl_C0 = { 1{ !io_read_cfg_precision_rsc_svs_st_3[0] }} ;
  assign nor_15_nl_R0 = { 1{ !io_read_cfg_precision_rsc_svs_st_3[0] }} & ( mux_41_nl_R | ( { 1{ io_read_cfg_precision_rsc_svs_st_3_T  [0] }} & mux_41_nl_C ));
  assign nor_15_nl_X0 = { 1{ !io_read_cfg_precision_rsc_svs_st_3[0] }} & mux_41_nl_X ;
  logic [7:0] fangyuan25;
  logic [7:0] fangyuan25_T ;
  logic [7:0] fangyuan25_R ;
  logic [7:0] fangyuan25_C ;
  logic [7:0] fangyuan25_X ;
  assign fangyuan25 = { reg_IntMulExt_17U_16U_33U_o_mul_1_itm[23], reg_IntMulExt_17U_16U_33U_o_mul_1_itm[23], reg_IntMulExt_17U_16U_33U_o_mul_1_itm[23], reg_IntMulExt_17U_16U_33U_o_mul_1_itm[23], reg_IntMulExt_17U_16U_33U_o_mul_1_itm[23], reg_IntMulExt_17U_16U_33U_o_mul_1_itm[23], reg_IntMulExt_17U_16U_33U_o_mul_1_itm[23], reg_IntMulExt_17U_16U_33U_o_mul_1_itm[23] };
  assign fangyuan25_T = {  reg_IntMulExt_17U_16U_33U_o_mul_1_itm_T [23] , reg_IntMulExt_17U_16U_33U_o_mul_1_itm_T [23] , reg_IntMulExt_17U_16U_33U_o_mul_1_itm_T [23] , reg_IntMulExt_17U_16U_33U_o_mul_1_itm_T [23] , reg_IntMulExt_17U_16U_33U_o_mul_1_itm_T [23] , reg_IntMulExt_17U_16U_33U_o_mul_1_itm_T [23] , reg_IntMulExt_17U_16U_33U_o_mul_1_itm_T [23] , reg_IntMulExt_17U_16U_33U_o_mul_1_itm_T [23]  };
  logic [5:0] fangyuan25_S ;
  assign fangyuan25_S = 0 ;
  logic [23:0] reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R0 ;
  logic [23:0] reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X0 ;
  logic [23:0] reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C0 ;
  assign reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R0 [23:23] = fangyuan25_R [7:7] ;
  assign reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X0 [23:23] = fangyuan25_X [7:7] ;
  assign reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C0 [23:23] = fangyuan25_C [7:7] ;
  assign { reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R0 [0], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R0 [1], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R0 [2], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R0 [3], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R0 [4], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R0 [5], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R0 [6], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R0 [7], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R0 [8], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R0 [9], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R0 [10], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R0 [11], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R0 [12], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R0 [13], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R0 [14], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R0 [15], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R0 [16], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R0 [17], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R0 [18], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R0 [19], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R0 [20], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R0 [21], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R0 [22] } = 0;
  assign { reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X0 [0], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X0 [1], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X0 [2], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X0 [3], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X0 [4], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X0 [5], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X0 [6], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X0 [7], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X0 [8], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X0 [9], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X0 [10], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X0 [11], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X0 [12], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X0 [13], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X0 [14], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X0 [15], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X0 [16], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X0 [17], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X0 [18], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X0 [19], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X0 [20], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X0 [21], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X0 [22] } = 0;
  assign { reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C0 [0], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C0 [1], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C0 [2], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C0 [3], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C0 [4], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C0 [5], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C0 [6], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C0 [7], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C0 [8], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C0 [9], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C0 [10], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C0 [11], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C0 [12], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C0 [13], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C0 [14], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C0 [15], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C0 [16], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C0 [17], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C0 [18], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C0 [19], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C0 [20], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C0 [21], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C0 [22] } = 0;
  logic [23:0] reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R1 ;
  logic [23:0] reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X1 ;
  logic [23:0] reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C1 ;
  assign reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R1 [23:23] = fangyuan25_R [6:6] ;
  assign reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X1 [23:23] = fangyuan25_X [6:6] ;
  assign reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C1 [23:23] = fangyuan25_C [6:6] ;
  assign { reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R1 [0], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R1 [1], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R1 [2], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R1 [3], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R1 [4], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R1 [5], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R1 [6], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R1 [7], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R1 [8], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R1 [9], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R1 [10], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R1 [11], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R1 [12], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R1 [13], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R1 [14], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R1 [15], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R1 [16], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R1 [17], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R1 [18], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R1 [19], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R1 [20], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R1 [21], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R1 [22] } = 0;
  assign { reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X1 [0], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X1 [1], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X1 [2], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X1 [3], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X1 [4], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X1 [5], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X1 [6], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X1 [7], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X1 [8], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X1 [9], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X1 [10], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X1 [11], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X1 [12], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X1 [13], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X1 [14], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X1 [15], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X1 [16], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X1 [17], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X1 [18], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X1 [19], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X1 [20], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X1 [21], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X1 [22] } = 0;
  assign { reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C1 [0], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C1 [1], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C1 [2], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C1 [3], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C1 [4], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C1 [5], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C1 [6], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C1 [7], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C1 [8], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C1 [9], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C1 [10], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C1 [11], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C1 [12], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C1 [13], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C1 [14], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C1 [15], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C1 [16], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C1 [17], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C1 [18], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C1 [19], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C1 [20], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C1 [21], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C1 [22] } = 0;
  logic [23:0] reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R2 ;
  logic [23:0] reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X2 ;
  logic [23:0] reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C2 ;
  assign reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R2 [23:23] = fangyuan25_R [5:5] ;
  assign reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X2 [23:23] = fangyuan25_X [5:5] ;
  assign reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C2 [23:23] = fangyuan25_C [5:5] ;
  assign { reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R2 [0], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R2 [1], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R2 [2], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R2 [3], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R2 [4], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R2 [5], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R2 [6], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R2 [7], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R2 [8], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R2 [9], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R2 [10], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R2 [11], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R2 [12], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R2 [13], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R2 [14], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R2 [15], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R2 [16], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R2 [17], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R2 [18], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R2 [19], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R2 [20], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R2 [21], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R2 [22] } = 0;
  assign { reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X2 [0], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X2 [1], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X2 [2], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X2 [3], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X2 [4], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X2 [5], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X2 [6], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X2 [7], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X2 [8], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X2 [9], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X2 [10], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X2 [11], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X2 [12], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X2 [13], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X2 [14], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X2 [15], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X2 [16], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X2 [17], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X2 [18], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X2 [19], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X2 [20], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X2 [21], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X2 [22] } = 0;
  assign { reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C2 [0], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C2 [1], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C2 [2], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C2 [3], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C2 [4], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C2 [5], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C2 [6], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C2 [7], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C2 [8], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C2 [9], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C2 [10], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C2 [11], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C2 [12], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C2 [13], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C2 [14], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C2 [15], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C2 [16], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C2 [17], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C2 [18], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C2 [19], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C2 [20], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C2 [21], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C2 [22] } = 0;
  logic [23:0] reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R3 ;
  logic [23:0] reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X3 ;
  logic [23:0] reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C3 ;
  assign reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R3 [23:23] = fangyuan25_R [4:4] ;
  assign reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X3 [23:23] = fangyuan25_X [4:4] ;
  assign reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C3 [23:23] = fangyuan25_C [4:4] ;
  assign { reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R3 [0], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R3 [1], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R3 [2], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R3 [3], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R3 [4], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R3 [5], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R3 [6], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R3 [7], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R3 [8], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R3 [9], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R3 [10], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R3 [11], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R3 [12], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R3 [13], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R3 [14], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R3 [15], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R3 [16], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R3 [17], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R3 [18], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R3 [19], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R3 [20], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R3 [21], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R3 [22] } = 0;
  assign { reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X3 [0], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X3 [1], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X3 [2], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X3 [3], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X3 [4], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X3 [5], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X3 [6], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X3 [7], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X3 [8], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X3 [9], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X3 [10], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X3 [11], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X3 [12], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X3 [13], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X3 [14], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X3 [15], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X3 [16], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X3 [17], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X3 [18], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X3 [19], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X3 [20], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X3 [21], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X3 [22] } = 0;
  assign { reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C3 [0], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C3 [1], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C3 [2], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C3 [3], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C3 [4], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C3 [5], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C3 [6], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C3 [7], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C3 [8], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C3 [9], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C3 [10], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C3 [11], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C3 [12], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C3 [13], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C3 [14], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C3 [15], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C3 [16], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C3 [17], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C3 [18], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C3 [19], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C3 [20], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C3 [21], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C3 [22] } = 0;
  logic [23:0] reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R4 ;
  logic [23:0] reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X4 ;
  logic [23:0] reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C4 ;
  assign reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R4 [23:23] = fangyuan25_R [3:3] ;
  assign reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X4 [23:23] = fangyuan25_X [3:3] ;
  assign reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C4 [23:23] = fangyuan25_C [3:3] ;
  assign { reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R4 [0], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R4 [1], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R4 [2], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R4 [3], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R4 [4], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R4 [5], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R4 [6], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R4 [7], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R4 [8], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R4 [9], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R4 [10], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R4 [11], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R4 [12], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R4 [13], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R4 [14], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R4 [15], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R4 [16], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R4 [17], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R4 [18], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R4 [19], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R4 [20], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R4 [21], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R4 [22] } = 0;
  assign { reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X4 [0], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X4 [1], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X4 [2], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X4 [3], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X4 [4], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X4 [5], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X4 [6], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X4 [7], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X4 [8], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X4 [9], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X4 [10], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X4 [11], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X4 [12], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X4 [13], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X4 [14], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X4 [15], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X4 [16], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X4 [17], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X4 [18], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X4 [19], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X4 [20], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X4 [21], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X4 [22] } = 0;
  assign { reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C4 [0], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C4 [1], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C4 [2], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C4 [3], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C4 [4], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C4 [5], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C4 [6], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C4 [7], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C4 [8], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C4 [9], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C4 [10], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C4 [11], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C4 [12], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C4 [13], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C4 [14], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C4 [15], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C4 [16], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C4 [17], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C4 [18], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C4 [19], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C4 [20], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C4 [21], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C4 [22] } = 0;
  logic [23:0] reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R5 ;
  logic [23:0] reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X5 ;
  logic [23:0] reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C5 ;
  assign reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R5 [23:23] = fangyuan25_R [2:2] ;
  assign reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X5 [23:23] = fangyuan25_X [2:2] ;
  assign reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C5 [23:23] = fangyuan25_C [2:2] ;
  assign { reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R5 [0], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R5 [1], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R5 [2], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R5 [3], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R5 [4], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R5 [5], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R5 [6], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R5 [7], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R5 [8], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R5 [9], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R5 [10], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R5 [11], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R5 [12], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R5 [13], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R5 [14], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R5 [15], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R5 [16], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R5 [17], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R5 [18], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R5 [19], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R5 [20], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R5 [21], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R5 [22] } = 0;
  assign { reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X5 [0], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X5 [1], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X5 [2], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X5 [3], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X5 [4], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X5 [5], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X5 [6], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X5 [7], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X5 [8], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X5 [9], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X5 [10], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X5 [11], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X5 [12], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X5 [13], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X5 [14], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X5 [15], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X5 [16], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X5 [17], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X5 [18], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X5 [19], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X5 [20], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X5 [21], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X5 [22] } = 0;
  assign { reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C5 [0], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C5 [1], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C5 [2], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C5 [3], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C5 [4], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C5 [5], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C5 [6], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C5 [7], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C5 [8], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C5 [9], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C5 [10], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C5 [11], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C5 [12], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C5 [13], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C5 [14], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C5 [15], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C5 [16], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C5 [17], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C5 [18], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C5 [19], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C5 [20], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C5 [21], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C5 [22] } = 0;
  logic [23:0] reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R6 ;
  logic [23:0] reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X6 ;
  logic [23:0] reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C6 ;
  assign reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R6 [23:23] = fangyuan25_R [1:1] ;
  assign reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X6 [23:23] = fangyuan25_X [1:1] ;
  assign reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C6 [23:23] = fangyuan25_C [1:1] ;
  assign { reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R6 [0], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R6 [1], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R6 [2], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R6 [3], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R6 [4], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R6 [5], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R6 [6], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R6 [7], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R6 [8], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R6 [9], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R6 [10], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R6 [11], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R6 [12], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R6 [13], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R6 [14], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R6 [15], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R6 [16], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R6 [17], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R6 [18], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R6 [19], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R6 [20], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R6 [21], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R6 [22] } = 0;
  assign { reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X6 [0], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X6 [1], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X6 [2], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X6 [3], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X6 [4], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X6 [5], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X6 [6], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X6 [7], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X6 [8], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X6 [9], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X6 [10], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X6 [11], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X6 [12], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X6 [13], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X6 [14], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X6 [15], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X6 [16], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X6 [17], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X6 [18], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X6 [19], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X6 [20], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X6 [21], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X6 [22] } = 0;
  assign { reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C6 [0], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C6 [1], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C6 [2], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C6 [3], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C6 [4], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C6 [5], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C6 [6], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C6 [7], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C6 [8], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C6 [9], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C6 [10], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C6 [11], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C6 [12], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C6 [13], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C6 [14], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C6 [15], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C6 [16], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C6 [17], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C6 [18], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C6 [19], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C6 [20], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C6 [21], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C6 [22] } = 0;
  logic [23:0] reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R7 ;
  logic [23:0] reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X7 ;
  logic [23:0] reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C7 ;
  assign reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R7 [23:23] = fangyuan25_R [0:0] ;
  assign reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X7 [23:23] = fangyuan25_X [0:0] ;
  assign reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C7 [23:23] = fangyuan25_C [0:0] ;

  assign IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl = IntShiftRight_33U_5U_17U_mbits_fixed_and_nl ? reg_IntMulExt_17U_16U_33U_o_mul_itm : fangyuan25;
  logic [0:0] IntShiftRight_33U_5U_17U_mbits_fixed_and_nl_C0 ;
  logic [0:0] IntShiftRight_33U_5U_17U_mbits_fixed_and_nl_R0 ;
  logic [0:0] IntShiftRight_33U_5U_17U_mbits_fixed_and_nl_X0 ;
  assign IntShiftRight_33U_5U_17U_mbits_fixed_and_nl_C0 = | IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_C ;
  assign IntShiftRight_33U_5U_17U_mbits_fixed_and_nl_X0 = | IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_X ;
  assign IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_T = IntShiftRight_33U_5U_17U_mbits_fixed_and_nl ? ( { 8{ IntShiftRight_33U_5U_17U_mbits_fixed_and_nl_T  }} | reg_IntMulExt_17U_16U_33U_o_mul_itm_T ) : ( { 8{ IntShiftRight_33U_5U_17U_mbits_fixed_and_nl_T  }} | fangyuan25_T );
  assign IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_S = IntShiftRight_33U_5U_17U_mbits_fixed_and_nl ? reg_IntMulExt_17U_16U_33U_o_mul_itm_S : fangyuan25_S ;
  assign IntShiftRight_33U_5U_17U_mbits_fixed_and_nl_R0 = ( | (IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_R | ( IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_C & ( { 8{ IntShiftRight_33U_5U_17U_mbits_fixed_and_nl }} & reg_IntMulExt_17U_16U_33U_o_mul_itm_T | { 8{ !IntShiftRight_33U_5U_17U_mbits_fixed_and_nl }} & fangyuan25_T )))) && reg_IntMulExt_17U_16U_33U_o_mul_itm != fangyuan25 ;
  logic [7:0] reg_IntMulExt_17U_16U_33U_o_mul_itm_C0 ;
  logic [7:0] reg_IntMulExt_17U_16U_33U_o_mul_itm_R0 ;
  logic [7:0] reg_IntMulExt_17U_16U_33U_o_mul_itm_X0 ;
  assign reg_IntMulExt_17U_16U_33U_o_mul_itm_C0 = { 8{ IntShiftRight_33U_5U_17U_mbits_fixed_and_nl }} ;
  assign reg_IntMulExt_17U_16U_33U_o_mul_itm_R0 = { 8{ IntShiftRight_33U_5U_17U_mbits_fixed_and_nl }} & ( IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_R | ( { 8{ IntShiftRight_33U_5U_17U_mbits_fixed_and_nl_T  }} & IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_C ));
  assign reg_IntMulExt_17U_16U_33U_o_mul_itm_X0 = { 8{ IntShiftRight_33U_5U_17U_mbits_fixed_and_nl }} & IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_X ;
  logic [7:0] fangyuan25_C0 ;
  logic [7:0] fangyuan25_R0 ;
  logic [7:0] fangyuan25_X0 ;
  assign fangyuan25_C0 = { 8{ !IntShiftRight_33U_5U_17U_mbits_fixed_and_nl }} ;
  assign fangyuan25_R0 = { 8{ !IntShiftRight_33U_5U_17U_mbits_fixed_and_nl }} & ( IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_R | ( { 8{ IntShiftRight_33U_5U_17U_mbits_fixed_and_nl_T  }} & IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_C ));
  assign fangyuan25_X0 = { 8{ !IntShiftRight_33U_5U_17U_mbits_fixed_and_nl }} & IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_X ;
  assign _042_ = _077_ ? IntSubExt_16U_16U_17U_o_mux1h_1_itm[9] : reg_IntSubExt_16U_16U_17U_o_acc_1_itm;
  logic [0:0] _077__C0 ;
  logic [0:0] _077__R0 ;
  logic [0:0] _077__X0 ;
  assign _077__C0 = | _042__C ;
  assign _077__X0 = | _042__X ;
  assign _042__T = _077_ ? ( { 1{ _077__T  }} | IntSubExt_16U_16U_17U_o_mux1h_1_itm_T [9] ) : ( { 1{ _077__T  }} | reg_IntSubExt_16U_16U_17U_o_acc_1_itm_T );
  assign _042__S = _077_ ? IntSubExt_16U_16U_17U_o_mux1h_1_itm_S : reg_IntSubExt_16U_16U_17U_o_acc_1_itm_S ;
  assign _077__R0 = ( | (_042__R | ( _042__C & ( { 1{ _077_ }} & IntSubExt_16U_16U_17U_o_mux1h_1_itm_T [9] | { 1{ !_077_ }} & reg_IntSubExt_16U_16U_17U_o_acc_1_itm_T )))) && IntSubExt_16U_16U_17U_o_mux1h_1_itm[9] != reg_IntSubExt_16U_16U_17U_o_acc_1_itm ;
  logic [16:0] IntSubExt_16U_16U_17U_o_mux1h_1_itm_C0 ;
  logic [16:0] IntSubExt_16U_16U_17U_o_mux1h_1_itm_R0 ;
  logic [16:0] IntSubExt_16U_16U_17U_o_mux1h_1_itm_X0 ;
  assign IntSubExt_16U_16U_17U_o_mux1h_1_itm_C0 [9] = { 1{ _077_ }} ;
  assign IntSubExt_16U_16U_17U_o_mux1h_1_itm_R0 [9] = { 1{ _077_ }} & ( _042__R | ( { 1{ _077__T  }} & _042__C ));
  assign IntSubExt_16U_16U_17U_o_mux1h_1_itm_X0 [9] = { 1{ _077_ }} & _042__X ;
  logic [0:0] reg_IntSubExt_16U_16U_17U_o_acc_1_itm_C1 ;
  logic [0:0] reg_IntSubExt_16U_16U_17U_o_acc_1_itm_R1 ;
  logic [0:0] reg_IntSubExt_16U_16U_17U_o_acc_1_itm_X1 ;
  assign reg_IntSubExt_16U_16U_17U_o_acc_1_itm_C1 = { 1{ !_077_ }} ;
  assign reg_IntSubExt_16U_16U_17U_o_acc_1_itm_R1 = { 1{ !_077_ }} & ( _042__R | ( { 1{ _077__T  }} & _042__C ));
  assign reg_IntSubExt_16U_16U_17U_o_acc_1_itm_X1 = { 1{ !_077_ }} & _042__X ;
  assign _044_ = _075_ ? IntSubExt_16U_16U_17U_o_mux1h_1_itm[16:10] : reg_IntSubExt_16U_16U_17U_o_acc_itm;
  logic [0:0] _075__C0 ;
  logic [0:0] _075__R0 ;
  logic [0:0] _075__X0 ;
  assign _075__C0 = | _044__C ;
  assign _075__X0 = | _044__X ;
  assign _044__T = _075_ ? ( { 7{ _075__T  }} | IntSubExt_16U_16U_17U_o_mux1h_1_itm_T [16:10] ) : ( { 7{ _075__T  }} | reg_IntSubExt_16U_16U_17U_o_acc_itm_T );
  assign _044__S = _075_ ? IntSubExt_16U_16U_17U_o_mux1h_1_itm_S : reg_IntSubExt_16U_16U_17U_o_acc_itm_S ;
  assign _075__R0 = ( | (_044__R | ( _044__C & ( { 7{ _075_ }} & IntSubExt_16U_16U_17U_o_mux1h_1_itm_T [16:10] | { 7{ !_075_ }} & reg_IntSubExt_16U_16U_17U_o_acc_itm_T )))) && IntSubExt_16U_16U_17U_o_mux1h_1_itm[16:10] != reg_IntSubExt_16U_16U_17U_o_acc_itm ;
  assign IntSubExt_16U_16U_17U_o_mux1h_1_itm_C0 [16:10] = { 7{ _075_ }} ;
  assign IntSubExt_16U_16U_17U_o_mux1h_1_itm_R0 [16:10] = { 7{ _075_ }} & ( _044__R | ( { 7{ _075__T  }} & _044__C ));
  assign IntSubExt_16U_16U_17U_o_mux1h_1_itm_X0 [16:10] = { 7{ _075_ }} & _044__X ;
  logic [6:0] reg_IntSubExt_16U_16U_17U_o_acc_itm_C1 ;
  logic [6:0] reg_IntSubExt_16U_16U_17U_o_acc_itm_R1 ;
  logic [6:0] reg_IntSubExt_16U_16U_17U_o_acc_itm_X1 ;
  assign reg_IntSubExt_16U_16U_17U_o_acc_itm_C1 = { 7{ !_075_ }} ;
  assign reg_IntSubExt_16U_16U_17U_o_acc_itm_R1 = { 7{ !_075_ }} & ( _044__R | ( { 7{ _075__T  }} & _044__C ));
  assign reg_IntSubExt_16U_16U_17U_o_acc_itm_X1 = { 7{ !_075_ }} & _044__X ;
  assign _017_ = _073_ ? acc_nl[9:1] : IntSubExt_8U_8U_9U_o_acc_itm_2;
  logic [0:0] _073__C0 ;
  logic [0:0] _073__R0 ;
  logic [0:0] _073__X0 ;
  assign _073__C0 = | _017__C ;
  assign _073__X0 = | _017__X ;
  assign _017__T = _073_ ? ( { 9{ _073__T  }} | acc_nl_T [9:1] ) : ( { 9{ _073__T  }} | IntSubExt_8U_8U_9U_o_acc_itm_2_T );
  assign _017__S = _073_ ? acc_nl_S : IntSubExt_8U_8U_9U_o_acc_itm_2_S ;
  assign _073__R0 = ( | (_017__R | ( _017__C & ( { 9{ _073_ }} & acc_nl_T [9:1] | { 9{ !_073_ }} & IntSubExt_8U_8U_9U_o_acc_itm_2_T )))) && acc_nl[9:1] != IntSubExt_8U_8U_9U_o_acc_itm_2 ;
  assign { acc_nl_R0 [0] } = 0;
  assign { acc_nl_X0 [0] } = 0;
  assign { acc_nl_C0 [0] } = 0;
  logic [17:0] acc_nl_C1 ;
  logic [17:0] acc_nl_R1 ;
  logic [17:0] acc_nl_X1 ;
  assign acc_nl_C1 [9:1] = { 9{ _073_ }} ;
  assign acc_nl_R1 [9:1] = { 9{ _073_ }} & ( _017__R | ( { 9{ _073__T  }} & _017__C ));
  assign acc_nl_X1 [9:1] = { 9{ _073_ }} & _017__X ;
  logic [8:0] IntSubExt_8U_8U_9U_o_acc_itm_2_C9 ;
  logic [8:0] IntSubExt_8U_8U_9U_o_acc_itm_2_R9 ;
  logic [8:0] IntSubExt_8U_8U_9U_o_acc_itm_2_X9 ;
  assign IntSubExt_8U_8U_9U_o_acc_itm_2_C9 = { 9{ !_073_ }} ;
  assign IntSubExt_8U_8U_9U_o_acc_itm_2_R9 = { 9{ !_073_ }} & ( _017__R | ( { 9{ _073__T  }} & _017__C ));
  assign IntSubExt_8U_8U_9U_o_acc_itm_2_X9 = { 9{ !_073_ }} & _017__X ;
  assign _018_ = _072_ ? cfg_mul_in_rsci_d : cfg_mul_in_1_sva_2;
  logic [0:0] _072__C0 ;
  logic [0:0] _072__R0 ;
  logic [0:0] _072__X0 ;
  assign _072__C0 = | _018__C ;
  assign _072__X0 = | _018__X ;
  assign _018__T = _072_ ? ( { 16{ _072__T  }} | cfg_mul_in_rsci_d_T ) : ( { 16{ _072__T  }} | cfg_mul_in_1_sva_2_T );
  assign _018__S = _072_ ? cfg_mul_in_rsci_d_S : cfg_mul_in_1_sva_2_S ;
  assign _072__R0 = ( | (_018__R | ( _018__C & ( { 16{ _072_ }} & cfg_mul_in_rsci_d_T | { 16{ !_072_ }} & cfg_mul_in_1_sva_2_T )))) && cfg_mul_in_rsci_d != cfg_mul_in_1_sva_2 ;
  logic [15:0] cfg_mul_in_rsci_d_C0 ;
  logic [15:0] cfg_mul_in_rsci_d_R0 ;
  logic [15:0] cfg_mul_in_rsci_d_X0 ;
  assign cfg_mul_in_rsci_d_C0 = { 16{ _072_ }} ;
  assign cfg_mul_in_rsci_d_R0 = { 16{ _072_ }} & ( _018__R | ( { 16{ _072__T  }} & _018__C ));
  assign cfg_mul_in_rsci_d_X0 = { 16{ _072_ }} & _018__X ;
  logic [15:0] cfg_mul_in_1_sva_2_C2 ;
  logic [15:0] cfg_mul_in_1_sva_2_R2 ;
  logic [15:0] cfg_mul_in_1_sva_2_X2 ;
  assign cfg_mul_in_1_sva_2_C2 = { 16{ !_072_ }} ;
  assign cfg_mul_in_1_sva_2_R2 = { 16{ !_072_ }} & ( _018__R | ( { 16{ _072__T  }} & _018__C ));
  assign cfg_mul_in_1_sva_2_X2 = { 16{ !_072_ }} & _018__X ;
  assign _043_ = and_144_cse ? IntSubExt_16U_16U_17U_o_mux1h_1_itm[8:0] : reg_IntSubExt_16U_16U_17U_o_acc_2_itm;
  logic [0:0] and_144_cse_C0 ;
  logic [0:0] and_144_cse_R0 ;
  logic [0:0] and_144_cse_X0 ;
  assign and_144_cse_C0 = | _043__C ;
  assign and_144_cse_X0 = | _043__X ;
  assign _043__T = and_144_cse ? ( { 9{ and_144_cse_T  }} | IntSubExt_16U_16U_17U_o_mux1h_1_itm_T [8:0] ) : ( { 9{ and_144_cse_T  }} | reg_IntSubExt_16U_16U_17U_o_acc_2_itm_T );
  assign _043__S = and_144_cse ? IntSubExt_16U_16U_17U_o_mux1h_1_itm_S : reg_IntSubExt_16U_16U_17U_o_acc_2_itm_S ;
  assign and_144_cse_R0 = ( | (_043__R | ( _043__C & ( { 9{ and_144_cse }} & IntSubExt_16U_16U_17U_o_mux1h_1_itm_T [8:0] | { 9{ !and_144_cse }} & reg_IntSubExt_16U_16U_17U_o_acc_2_itm_T )))) && IntSubExt_16U_16U_17U_o_mux1h_1_itm[8:0] != reg_IntSubExt_16U_16U_17U_o_acc_2_itm ;
  assign IntSubExt_16U_16U_17U_o_mux1h_1_itm_C0 [8:0] = { 9{ and_144_cse }} ;
  assign IntSubExt_16U_16U_17U_o_mux1h_1_itm_R0 [8:0] = { 9{ and_144_cse }} & ( _043__R | ( { 9{ and_144_cse_T  }} & _043__C ));
  assign IntSubExt_16U_16U_17U_o_mux1h_1_itm_X0 [8:0] = { 9{ and_144_cse }} & _043__X ;
  logic [8:0] reg_IntSubExt_16U_16U_17U_o_acc_2_itm_C2 ;
  logic [8:0] reg_IntSubExt_16U_16U_17U_o_acc_2_itm_R2 ;
  logic [8:0] reg_IntSubExt_16U_16U_17U_o_acc_2_itm_X2 ;
  assign reg_IntSubExt_16U_16U_17U_o_acc_2_itm_C2 = { 9{ !and_144_cse }} ;
  assign reg_IntSubExt_16U_16U_17U_o_acc_2_itm_R2 = { 9{ !and_144_cse }} & ( _043__R | ( { 9{ and_144_cse_T  }} & _043__C ));
  assign reg_IntSubExt_16U_16U_17U_o_acc_2_itm_X2 = { 9{ !and_144_cse }} & _043__X ;
  assign _047_ = and_144_cse ? cfg_truncate_mux1h_3_itm[3:0] : reg_cfg_truncate_1_3_itm;
  logic [0:0] and_144_cse_C1 ;
  logic [0:0] and_144_cse_R1 ;
  logic [0:0] and_144_cse_X1 ;
  assign and_144_cse_C1 = | _047__C ;
  assign and_144_cse_X1 = | _047__X ;
  assign _047__T = and_144_cse ? ( { 4{ and_144_cse_T  }} | cfg_truncate_mux1h_3_itm_T [3:0] ) : ( { 4{ and_144_cse_T  }} | reg_cfg_truncate_1_3_itm_T );
  assign _047__S = and_144_cse ? cfg_truncate_mux1h_3_itm_S : reg_cfg_truncate_1_3_itm_S ;
  assign and_144_cse_R1 = ( | (_047__R | ( _047__C & ( { 4{ and_144_cse }} & cfg_truncate_mux1h_3_itm_T [3:0] | { 4{ !and_144_cse }} & reg_cfg_truncate_1_3_itm_T )))) && cfg_truncate_mux1h_3_itm[3:0] != reg_cfg_truncate_1_3_itm ;
  logic [4:0] cfg_truncate_mux1h_3_itm_C0 ;
  logic [4:0] cfg_truncate_mux1h_3_itm_R0 ;
  logic [4:0] cfg_truncate_mux1h_3_itm_X0 ;
  assign cfg_truncate_mux1h_3_itm_C0 [3:0] = { 4{ and_144_cse }} ;
  assign cfg_truncate_mux1h_3_itm_R0 [3:0] = { 4{ and_144_cse }} & ( _047__R | ( { 4{ and_144_cse_T  }} & _047__C ));
  assign cfg_truncate_mux1h_3_itm_X0 [3:0] = { 4{ and_144_cse }} & _047__X ;
  logic [3:0] reg_cfg_truncate_1_3_itm_C0 ;
  logic [3:0] reg_cfg_truncate_1_3_itm_R0 ;
  logic [3:0] reg_cfg_truncate_1_3_itm_X0 ;
  assign reg_cfg_truncate_1_3_itm_C0 = { 4{ !and_144_cse }} ;
  assign reg_cfg_truncate_1_3_itm_R0 = { 4{ !and_144_cse }} & ( _047__R | ( { 4{ and_144_cse_T  }} & _047__C ));
  assign reg_cfg_truncate_1_3_itm_X0 = { 4{ !and_144_cse }} & _047__X ;
  assign _045_ = _071_ ? cfg_truncate_mux1h_3_itm[4] : reg_cfg_truncate_1_1_itm;
  logic [0:0] _071__C0 ;
  logic [0:0] _071__R0 ;
  logic [0:0] _071__X0 ;
  assign _071__C0 = | _045__C ;
  assign _071__X0 = | _045__X ;
  assign _045__T = _071_ ? ( { 1{ _071__T  }} | cfg_truncate_mux1h_3_itm_T [4] ) : ( { 1{ _071__T  }} | reg_cfg_truncate_1_1_itm_T );
  assign _045__S = _071_ ? cfg_truncate_mux1h_3_itm_S : reg_cfg_truncate_1_1_itm_S ;
  assign _071__R0 = ( | (_045__R | ( _045__C & ( { 1{ _071_ }} & cfg_truncate_mux1h_3_itm_T [4] | { 1{ !_071_ }} & reg_cfg_truncate_1_1_itm_T )))) && cfg_truncate_mux1h_3_itm[4] != reg_cfg_truncate_1_1_itm ;
  assign cfg_truncate_mux1h_3_itm_C0 [4] = { 1{ _071_ }} ;
  assign cfg_truncate_mux1h_3_itm_R0 [4] = { 1{ _071_ }} & ( _045__R | ( { 1{ _071__T  }} & _045__C ));
  assign cfg_truncate_mux1h_3_itm_X0 [4] = { 1{ _071_ }} & _045__X ;
  logic [0:0] reg_cfg_truncate_1_1_itm_C0 ;
  logic [0:0] reg_cfg_truncate_1_1_itm_R0 ;
  logic [0:0] reg_cfg_truncate_1_1_itm_X0 ;
  assign reg_cfg_truncate_1_1_itm_C0 = { 1{ !_071_ }} ;
  assign reg_cfg_truncate_1_1_itm_R0 = { 1{ !_071_ }} & ( _045__R | ( { 1{ _071__T  }} & _045__C ));
  assign reg_cfg_truncate_1_1_itm_X0 = { 1{ !_071_ }} & _045__X ;
  assign _012_ = FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse ? _230_ : FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_C0 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_R0 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_X0 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_C0 = | _012__C ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_X0 = | _012__X ;
  assign _012__T = FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse ? ( { 1{ FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_T  }} | _230__T ) : ( { 1{ FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_T  }} | FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1_T );
  assign _012__S = FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse ? _230__S : FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1_S ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_R0 = ( | (_012__R | ( _012__C & ( { 1{ FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse }} & _230__T | { 1{ !FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse }} & FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1_T )))) && _230_ != FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1 ;
  logic [0:0] _230__C0 ;
  logic [0:0] _230__R0 ;
  logic [0:0] _230__X0 ;
  assign _230__C0 = { 1{ FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse }} ;
  assign _230__R0 = { 1{ FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse }} & ( _012__R | ( { 1{ FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_T  }} & _012__C ));
  assign _230__X0 = { 1{ FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse }} & _012__X ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1_C0 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1_R0 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1_X0 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1_C0 = { 1{ !FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse }} ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1_R0 = { 1{ !FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse }} & ( _012__R | ( { 1{ FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_T  }} & _012__C ));
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1_X0 = { 1{ !FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse }} & _012__X ;
  assign _013_ = FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse ? chn_data_in_rsci_d_mxwt[14] : FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_C1 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_R1 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_X1 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_C1 = | _013__C ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_X1 = | _013__X ;
  assign _013__T = FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse ? ( { 1{ FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_T  }} | chn_data_in_rsci_d_mxwt_T [14] ) : ( { 1{ FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_T  }} | FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1_T );
  assign _013__S = FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse ? chn_data_in_rsci_d_mxwt_S : FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1_S ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_R1 = ( | (_013__R | ( _013__C & ( { 1{ FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse }} & chn_data_in_rsci_d_mxwt_T [14] | { 1{ !FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse }} & FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1_T )))) && chn_data_in_rsci_d_mxwt[14] != FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1 ;
  assign chn_data_in_rsci_d_mxwt_C11 [14] = { 1{ FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse }} ;
  assign chn_data_in_rsci_d_mxwt_R11 [14] = { 1{ FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse }} & ( _013__R | ( { 1{ FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_T  }} & _013__C ));
  assign chn_data_in_rsci_d_mxwt_X11 [14] = { 1{ FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse }} & _013__X ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1_C0 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1_R0 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1_X0 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1_C0 = { 1{ !FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse }} ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1_R0 = { 1{ !FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse }} & ( _013__R | ( { 1{ FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_T  }} & _013__C ));
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1_X0 = { 1{ !FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse }} & _013__X ;
  assign _031_ = FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse ? chn_data_in_rsci_d_mxwt[15] : i_data_slc_i_data_15_1_itm_3;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_C2 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_R2 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_X2 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_C2 = | _031__C ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_X2 = | _031__X ;
  assign _031__T = FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse ? ( { 1{ FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_T  }} | chn_data_in_rsci_d_mxwt_T [15] ) : ( { 1{ FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_T  }} | i_data_slc_i_data_15_1_itm_3_T );
  assign _031__S = FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse ? chn_data_in_rsci_d_mxwt_S : i_data_slc_i_data_15_1_itm_3_S ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_R2 = ( | (_031__R | ( _031__C & ( { 1{ FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse }} & chn_data_in_rsci_d_mxwt_T [15] | { 1{ !FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse }} & i_data_slc_i_data_15_1_itm_3_T )))) && chn_data_in_rsci_d_mxwt[15] != i_data_slc_i_data_15_1_itm_3 ;
  assign chn_data_in_rsci_d_mxwt_C11 [15] = { 1{ FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse }} ;
  assign chn_data_in_rsci_d_mxwt_R11 [15] = { 1{ FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse }} & ( _031__R | ( { 1{ FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_T  }} & _031__C ));
  assign chn_data_in_rsci_d_mxwt_X11 [15] = { 1{ FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse }} & _031__X ;
  logic [0:0] i_data_slc_i_data_15_1_itm_3_C0 ;
  logic [0:0] i_data_slc_i_data_15_1_itm_3_R0 ;
  logic [0:0] i_data_slc_i_data_15_1_itm_3_X0 ;
  assign i_data_slc_i_data_15_1_itm_3_C0 = { 1{ !FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse }} ;
  assign i_data_slc_i_data_15_1_itm_3_R0 = { 1{ !FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse }} & ( _031__R | ( { 1{ FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse_T  }} & _031__C ));
  assign i_data_slc_i_data_15_1_itm_3_X0 = { 1{ !FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_and_2_cse }} & _031__X ;
  assign _034_ = and_137_cse ? io_read_cfg_precision_rsc_svs_st_3 : io_read_cfg_precision_rsc_svs_st_4;
  logic [0:0] and_137_cse_C0 ;
  logic [0:0] and_137_cse_R0 ;
  logic [0:0] and_137_cse_X0 ;
  assign and_137_cse_C0 = | _034__C ;
  assign and_137_cse_X0 = | _034__X ;
  assign _034__T = and_137_cse ? ( { 2{ and_137_cse_T  }} | io_read_cfg_precision_rsc_svs_st_3_T ) : ( { 2{ and_137_cse_T  }} | io_read_cfg_precision_rsc_svs_st_4_T );
  assign _034__S = and_137_cse ? io_read_cfg_precision_rsc_svs_st_3_S : io_read_cfg_precision_rsc_svs_st_4_S ;
  assign and_137_cse_R0 = ( | (_034__R | ( _034__C & ( { 2{ and_137_cse }} & io_read_cfg_precision_rsc_svs_st_3_T | { 2{ !and_137_cse }} & io_read_cfg_precision_rsc_svs_st_4_T )))) && io_read_cfg_precision_rsc_svs_st_3 != io_read_cfg_precision_rsc_svs_st_4 ;
  assign { io_read_cfg_precision_rsc_svs_st_3_R12 [1:1] } = 0;
  assign { io_read_cfg_precision_rsc_svs_st_3_X12 [1:1] } = 0;
  assign { io_read_cfg_precision_rsc_svs_st_3_C12 [1:1] } = 0;
  assign { io_read_cfg_precision_rsc_svs_st_4_R2 [1:1] } = 0;
  assign { io_read_cfg_precision_rsc_svs_st_4_X2 [1:1] } = 0;
  assign { io_read_cfg_precision_rsc_svs_st_4_C2 [1:1] } = 0;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_C13 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_R13 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_X13 ;
  assign io_read_cfg_precision_rsc_svs_st_3_C13 = { 2{ and_137_cse }} ;
  assign io_read_cfg_precision_rsc_svs_st_3_R13 = { 2{ and_137_cse }} & ( _034__R | ( { 2{ and_137_cse_T  }} & _034__C ));
  assign io_read_cfg_precision_rsc_svs_st_3_X13 = { 2{ and_137_cse }} & _034__X ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_4_C3 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_4_R3 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_4_X3 ;
  assign io_read_cfg_precision_rsc_svs_st_4_C3 = { 2{ !and_137_cse }} ;
  assign io_read_cfg_precision_rsc_svs_st_4_R3 = { 2{ !and_137_cse }} & ( _034__R | ( { 2{ and_137_cse_T  }} & _034__C ));
  assign io_read_cfg_precision_rsc_svs_st_4_X3 = { 2{ !and_137_cse }} & _034__X ;
  assign _037_ = and_137_cse ? io_read_cfg_precision_rsc_svs_st_3[0] : nor_tmp_11;
  logic [0:0] and_137_cse_C1 ;
  logic [0:0] and_137_cse_R1 ;
  logic [0:0] and_137_cse_X1 ;
  assign and_137_cse_C1 = | _037__C ;
  assign and_137_cse_X1 = | _037__X ;
  assign _037__T = and_137_cse ? ( { 1{ and_137_cse_T  }} | io_read_cfg_precision_rsc_svs_st_3_T [0] ) : ( { 1{ and_137_cse_T  }} | nor_tmp_11_T );
  assign _037__S = and_137_cse ? io_read_cfg_precision_rsc_svs_st_3_S : nor_tmp_11_S ;
  assign and_137_cse_R1 = ( | (_037__R | ( _037__C & ( { 1{ and_137_cse }} & io_read_cfg_precision_rsc_svs_st_3_T [0] | { 1{ !and_137_cse }} & nor_tmp_11_T )))) && io_read_cfg_precision_rsc_svs_st_3[0] != nor_tmp_11 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_C14 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_R14 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_X14 ;
  assign io_read_cfg_precision_rsc_svs_st_3_C14 [0] = { 1{ and_137_cse }} ;
  assign io_read_cfg_precision_rsc_svs_st_3_R14 [0] = { 1{ and_137_cse }} & ( _037__R | ( { 1{ and_137_cse_T  }} & _037__C ));
  assign io_read_cfg_precision_rsc_svs_st_3_X14 [0] = { 1{ and_137_cse }} & _037__X ;
  logic [0:0] nor_tmp_11_C19 ;
  logic [0:0] nor_tmp_11_R19 ;
  logic [0:0] nor_tmp_11_X19 ;
  assign nor_tmp_11_C19 = { 1{ !and_137_cse }} ;
  assign nor_tmp_11_R19 = { 1{ !and_137_cse }} & ( _037__R | ( { 1{ and_137_cse_T  }} & _037__C ));
  assign nor_tmp_11_X19 = { 1{ !and_137_cse }} & _037__X ;
  assign _039_ = i_data_and_cse ? reg_IntSubExt_16U_16U_17U_o_acc_2_itm : reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1;
  logic [0:0] i_data_and_cse_C0 ;
  logic [0:0] i_data_and_cse_R0 ;
  logic [0:0] i_data_and_cse_X0 ;
  assign i_data_and_cse_C0 = | _039__C ;
  assign i_data_and_cse_X0 = | _039__X ;
  assign _039__T = i_data_and_cse ? ( { 9{ i_data_and_cse_T  }} | reg_IntSubExt_16U_16U_17U_o_acc_2_itm_T ) : ( { 9{ i_data_and_cse_T  }} | reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_T );
  assign _039__S = i_data_and_cse ? reg_IntSubExt_16U_16U_17U_o_acc_2_itm_S : reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_S ;
  assign i_data_and_cse_R0 = ( | (_039__R | ( _039__C & ( { 9{ i_data_and_cse }} & reg_IntSubExt_16U_16U_17U_o_acc_2_itm_T | { 9{ !i_data_and_cse }} & reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_T )))) && reg_IntSubExt_16U_16U_17U_o_acc_2_itm != reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1 ;
  logic [8:0] reg_IntSubExt_16U_16U_17U_o_acc_2_itm_C3 ;
  logic [8:0] reg_IntSubExt_16U_16U_17U_o_acc_2_itm_R3 ;
  logic [8:0] reg_IntSubExt_16U_16U_17U_o_acc_2_itm_X3 ;
  assign reg_IntSubExt_16U_16U_17U_o_acc_2_itm_C3 = { 9{ i_data_and_cse }} ;
  assign reg_IntSubExt_16U_16U_17U_o_acc_2_itm_R3 = { 9{ i_data_and_cse }} & ( _039__R | ( { 9{ i_data_and_cse_T  }} & _039__C ));
  assign reg_IntSubExt_16U_16U_17U_o_acc_2_itm_X3 = { 9{ i_data_and_cse }} & _039__X ;
  logic [8:0] reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_C1 ;
  logic [8:0] reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_R1 ;
  logic [8:0] reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_X1 ;
  assign reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_C1 = { 9{ !i_data_and_cse }} ;
  assign reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_R1 = { 9{ !i_data_and_cse }} & ( _039__R | ( { 9{ i_data_and_cse_T  }} & _039__C ));
  assign reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_1_X1 = { 9{ !i_data_and_cse }} & _039__X ;
  assign _038_ = i_data_and_cse ? reg_IntSubExt_16U_16U_17U_o_acc_1_itm : reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp;
  logic [0:0] i_data_and_cse_C1 ;
  logic [0:0] i_data_and_cse_R1 ;
  logic [0:0] i_data_and_cse_X1 ;
  assign i_data_and_cse_C1 = | _038__C ;
  assign i_data_and_cse_X1 = | _038__X ;
  assign _038__T = i_data_and_cse ? ( { 1{ i_data_and_cse_T  }} | reg_IntSubExt_16U_16U_17U_o_acc_1_itm_T ) : ( { 1{ i_data_and_cse_T  }} | reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_T );
  assign _038__S = i_data_and_cse ? reg_IntSubExt_16U_16U_17U_o_acc_1_itm_S : reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_S ;
  assign i_data_and_cse_R1 = ( | (_038__R | ( _038__C & ( { 1{ i_data_and_cse }} & reg_IntSubExt_16U_16U_17U_o_acc_1_itm_T | { 1{ !i_data_and_cse }} & reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_T )))) && reg_IntSubExt_16U_16U_17U_o_acc_1_itm != reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp ;
  logic [0:0] reg_IntSubExt_16U_16U_17U_o_acc_1_itm_C2 ;
  logic [0:0] reg_IntSubExt_16U_16U_17U_o_acc_1_itm_R2 ;
  logic [0:0] reg_IntSubExt_16U_16U_17U_o_acc_1_itm_X2 ;
  assign reg_IntSubExt_16U_16U_17U_o_acc_1_itm_C2 = { 1{ i_data_and_cse }} ;
  assign reg_IntSubExt_16U_16U_17U_o_acc_1_itm_R2 = { 1{ i_data_and_cse }} & ( _038__R | ( { 1{ i_data_and_cse_T  }} & _038__C ));
  assign reg_IntSubExt_16U_16U_17U_o_acc_1_itm_X2 = { 1{ i_data_and_cse }} & _038__X ;
  logic [0:0] reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_C1 ;
  logic [0:0] reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_R1 ;
  logic [0:0] reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_X1 ;
  assign reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_C1 = { 1{ !i_data_and_cse }} ;
  assign reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_R1 = { 1{ !i_data_and_cse }} & ( _038__R | ( { 1{ i_data_and_cse_T  }} & _038__C ));
  assign reg_FpExpoWidthInc_5U_6U_10U_1U_1U_o_mant_lpi_1_dfm_6_tmp_X1 = { 1{ !i_data_and_cse }} & _038__X ;
  assign _014_ = i_data_and_cse ? FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1 : FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1;
  logic [0:0] i_data_and_cse_C2 ;
  logic [0:0] i_data_and_cse_R2 ;
  logic [0:0] i_data_and_cse_X2 ;
  assign i_data_and_cse_C2 = | _014__C ;
  assign i_data_and_cse_X2 = | _014__X ;
  assign _014__T = i_data_and_cse ? ( { 1{ i_data_and_cse_T  }} | FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1_T ) : ( { 1{ i_data_and_cse_T  }} | FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1_T );
  assign _014__S = i_data_and_cse ? FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1_S : FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1_S ;
  assign i_data_and_cse_R2 = ( | (_014__R | ( _014__C & ( { 1{ i_data_and_cse }} & FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1_T | { 1{ !i_data_and_cse }} & FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1_T )))) && FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1 != FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1_C1 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1_R1 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1_X1 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1_C1 = { 1{ i_data_and_cse }} ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1_R1 = { 1{ i_data_and_cse }} & ( _014__R | ( { 1{ i_data_and_cse_T  }} & _014__C ));
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_0_1_X1 = { 1{ i_data_and_cse }} & _014__X ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1_C1 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1_R1 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1_X1 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1_C1 = { 1{ !i_data_and_cse }} ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1_R1 = { 1{ !i_data_and_cse }} & ( _014__R | ( { 1{ i_data_and_cse_T  }} & _014__C ));
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_0_1_X1 = { 1{ !i_data_and_cse }} & _014__X ;
  assign _015_ = i_data_and_cse ? FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1 : FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1;
  logic [0:0] i_data_and_cse_C3 ;
  logic [0:0] i_data_and_cse_R3 ;
  logic [0:0] i_data_and_cse_X3 ;
  assign i_data_and_cse_C3 = | _015__C ;
  assign i_data_and_cse_X3 = | _015__X ;
  assign _015__T = i_data_and_cse ? ( { 1{ i_data_and_cse_T  }} | FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1_T ) : ( { 1{ i_data_and_cse_T  }} | FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1_T );
  assign _015__S = i_data_and_cse ? FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1_S : FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1_S ;
  assign i_data_and_cse_R3 = ( | (_015__R | ( _015__C & ( { 1{ i_data_and_cse }} & FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1_T | { 1{ !i_data_and_cse }} & FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1_T )))) && FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1 != FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1_C1 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1_R1 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1_X1 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1_C1 = { 1{ i_data_and_cse }} ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1_R1 = { 1{ i_data_and_cse }} & ( _015__R | ( { 1{ i_data_and_cse_T  }} & _015__C ));
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_5_1_1_X1 = { 1{ i_data_and_cse }} & _015__X ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1_C1 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1_R1 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1_X1 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1_C1 = { 1{ !i_data_and_cse }} ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1_R1 = { 1{ !i_data_and_cse }} & ( _015__R | ( { 1{ i_data_and_cse_T  }} & _015__C ));
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_o_expo_5_4_lpi_1_dfm_6_1_1_X1 = { 1{ !i_data_and_cse }} & _015__X ;
  assign _032_ = i_data_and_cse ? i_data_slc_i_data_15_1_itm_3 : i_data_slc_i_data_15_1_itm_4;
  logic [0:0] i_data_and_cse_C4 ;
  logic [0:0] i_data_and_cse_R4 ;
  logic [0:0] i_data_and_cse_X4 ;
  assign i_data_and_cse_C4 = | _032__C ;
  assign i_data_and_cse_X4 = | _032__X ;
  assign _032__T = i_data_and_cse ? ( { 1{ i_data_and_cse_T  }} | i_data_slc_i_data_15_1_itm_3_T ) : ( { 1{ i_data_and_cse_T  }} | i_data_slc_i_data_15_1_itm_4_T );
  assign _032__S = i_data_and_cse ? i_data_slc_i_data_15_1_itm_3_S : i_data_slc_i_data_15_1_itm_4_S ;
  assign i_data_and_cse_R4 = ( | (_032__R | ( _032__C & ( { 1{ i_data_and_cse }} & i_data_slc_i_data_15_1_itm_3_T | { 1{ !i_data_and_cse }} & i_data_slc_i_data_15_1_itm_4_T )))) && i_data_slc_i_data_15_1_itm_3 != i_data_slc_i_data_15_1_itm_4 ;
  logic [0:0] i_data_slc_i_data_15_1_itm_3_C1 ;
  logic [0:0] i_data_slc_i_data_15_1_itm_3_R1 ;
  logic [0:0] i_data_slc_i_data_15_1_itm_3_X1 ;
  assign i_data_slc_i_data_15_1_itm_3_C1 = { 1{ i_data_and_cse }} ;
  assign i_data_slc_i_data_15_1_itm_3_R1 = { 1{ i_data_and_cse }} & ( _032__R | ( { 1{ i_data_and_cse_T  }} & _032__C ));
  assign i_data_slc_i_data_15_1_itm_3_X1 = { 1{ i_data_and_cse }} & _032__X ;
  logic [0:0] i_data_slc_i_data_15_1_itm_4_C1 ;
  logic [0:0] i_data_slc_i_data_15_1_itm_4_R1 ;
  logic [0:0] i_data_slc_i_data_15_1_itm_4_X1 ;
  assign i_data_slc_i_data_15_1_itm_4_C1 = { 1{ !i_data_and_cse }} ;
  assign i_data_slc_i_data_15_1_itm_4_R1 = { 1{ !i_data_and_cse }} & ( _032__R | ( { 1{ i_data_and_cse_T  }} & _032__C ));
  assign i_data_slc_i_data_15_1_itm_4_X1 = { 1{ !i_data_and_cse }} & _032__X ;
  assign _040_ = _068_ ? IntMulExt_17U_16U_33U_o_mux1h_1_itm[23:0] : reg_IntMulExt_17U_16U_33U_o_mul_1_itm;
  logic [0:0] _068__C0 ;
  logic [0:0] _068__R0 ;
  logic [0:0] _068__X0 ;
  assign _068__C0 = | _040__C ;
  assign _068__X0 = | _040__X ;
  assign _040__T = _068_ ? ( { 24{ _068__T  }} | IntMulExt_17U_16U_33U_o_mux1h_1_itm_T [23:0] ) : ( { 24{ _068__T  }} | reg_IntMulExt_17U_16U_33U_o_mul_1_itm_T );
  assign _040__S = _068_ ? IntMulExt_17U_16U_33U_o_mux1h_1_itm_S : reg_IntMulExt_17U_16U_33U_o_mul_1_itm_S ;
  assign _068__R0 = ( | (_040__R | ( _040__C & ( { 24{ _068_ }} & IntMulExt_17U_16U_33U_o_mux1h_1_itm_T [23:0] | { 24{ !_068_ }} & reg_IntMulExt_17U_16U_33U_o_mul_1_itm_T )))) && IntMulExt_17U_16U_33U_o_mux1h_1_itm[23:0] != reg_IntMulExt_17U_16U_33U_o_mul_1_itm ;
  assign { reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R7 [0], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R7 [1], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R7 [2], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R7 [3], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R7 [4], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R7 [5], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R7 [6], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R7 [7], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R7 [8], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R7 [9], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R7 [10], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R7 [11], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R7 [12], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R7 [13], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R7 [14], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R7 [15], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R7 [16], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R7 [17], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R7 [18], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R7 [19], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R7 [20], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R7 [21], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R7 [22] } = 0;
  assign { reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X7 [0], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X7 [1], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X7 [2], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X7 [3], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X7 [4], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X7 [5], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X7 [6], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X7 [7], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X7 [8], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X7 [9], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X7 [10], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X7 [11], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X7 [12], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X7 [13], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X7 [14], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X7 [15], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X7 [16], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X7 [17], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X7 [18], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X7 [19], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X7 [20], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X7 [21], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X7 [22] } = 0;
  assign { reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C7 [0], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C7 [1], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C7 [2], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C7 [3], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C7 [4], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C7 [5], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C7 [6], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C7 [7], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C7 [8], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C7 [9], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C7 [10], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C7 [11], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C7 [12], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C7 [13], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C7 [14], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C7 [15], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C7 [16], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C7 [17], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C7 [18], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C7 [19], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C7 [20], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C7 [21], reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C7 [22] } = 0;
  logic [31:0] IntMulExt_17U_16U_33U_o_mux1h_1_itm_C0 ;
  logic [31:0] IntMulExt_17U_16U_33U_o_mux1h_1_itm_R0 ;
  logic [31:0] IntMulExt_17U_16U_33U_o_mux1h_1_itm_X0 ;
  assign IntMulExt_17U_16U_33U_o_mux1h_1_itm_C0 [23:0] = { 24{ _068_ }} ;
  assign IntMulExt_17U_16U_33U_o_mux1h_1_itm_R0 [23:0] = { 24{ _068_ }} & ( _040__R | ( { 24{ _068__T  }} & _040__C ));
  assign IntMulExt_17U_16U_33U_o_mux1h_1_itm_X0 [23:0] = { 24{ _068_ }} & _040__X ;
  logic [23:0] reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C8 ;
  logic [23:0] reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R8 ;
  logic [23:0] reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X8 ;
  assign reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C8 = { 24{ !_068_ }} ;
  assign reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R8 = { 24{ !_068_ }} & ( _040__R | ( { 24{ _068__T  }} & _040__C ));
  assign reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X8 = { 24{ !_068_ }} & _040__X ;
  assign _041_ = _066_ ? IntMulExt_17U_16U_33U_o_mux1h_1_itm[31:24] : reg_IntMulExt_17U_16U_33U_o_mul_itm;
  logic [0:0] _066__C0 ;
  logic [0:0] _066__R0 ;
  logic [0:0] _066__X0 ;
  assign _066__C0 = | _041__C ;
  assign _066__X0 = | _041__X ;
  assign _041__T = _066_ ? ( { 8{ _066__T  }} | IntMulExt_17U_16U_33U_o_mux1h_1_itm_T [31:24] ) : ( { 8{ _066__T  }} | reg_IntMulExt_17U_16U_33U_o_mul_itm_T );
  assign _041__S = _066_ ? IntMulExt_17U_16U_33U_o_mux1h_1_itm_S : reg_IntMulExt_17U_16U_33U_o_mul_itm_S ;
  assign _066__R0 = ( | (_041__R | ( _041__C & ( { 8{ _066_ }} & IntMulExt_17U_16U_33U_o_mux1h_1_itm_T [31:24] | { 8{ !_066_ }} & reg_IntMulExt_17U_16U_33U_o_mul_itm_T )))) && IntMulExt_17U_16U_33U_o_mux1h_1_itm[31:24] != reg_IntMulExt_17U_16U_33U_o_mul_itm ;
  assign IntMulExt_17U_16U_33U_o_mux1h_1_itm_C0 [31:24] = { 8{ _066_ }} ;
  assign IntMulExt_17U_16U_33U_o_mux1h_1_itm_R0 [31:24] = { 8{ _066_ }} & ( _041__R | ( { 8{ _066__T  }} & _041__C ));
  assign IntMulExt_17U_16U_33U_o_mux1h_1_itm_X0 [31:24] = { 8{ _066_ }} & _041__X ;
  logic [7:0] reg_IntMulExt_17U_16U_33U_o_mul_itm_C1 ;
  logic [7:0] reg_IntMulExt_17U_16U_33U_o_mul_itm_R1 ;
  logic [7:0] reg_IntMulExt_17U_16U_33U_o_mul_itm_X1 ;
  assign reg_IntMulExt_17U_16U_33U_o_mul_itm_C1 = { 8{ !_066_ }} ;
  assign reg_IntMulExt_17U_16U_33U_o_mul_itm_R1 = { 8{ !_066_ }} & ( _041__R | ( { 8{ _066__T  }} & _041__C ));
  assign reg_IntMulExt_17U_16U_33U_o_mul_itm_X1 = { 8{ !_066_ }} & _041__X ;
  assign _016_ = _064_ ? z_out[23:0] : IntMulExt_9U_16U_25U_o_mul_itm_2;
  logic [0:0] _064__C0 ;
  logic [0:0] _064__R0 ;
  logic [0:0] _064__X0 ;
  assign _064__C0 = | _016__C ;
  assign _064__X0 = | _016__X ;
  assign _016__T = _064_ ? ( { 24{ _064__T  }} | z_out_T [23:0] ) : ( { 24{ _064__T  }} | IntMulExt_9U_16U_25U_o_mul_itm_2_T );
  assign _016__S = _064_ ? z_out_S : IntMulExt_9U_16U_25U_o_mul_itm_2_S ;
  assign _064__R0 = ( | (_016__R | ( _016__C & ( { 24{ _064_ }} & z_out_T [23:0] | { 24{ !_064_ }} & IntMulExt_9U_16U_25U_o_mul_itm_2_T )))) && z_out[23:0] != IntMulExt_9U_16U_25U_o_mul_itm_2 ;
  logic [31:0] z_out_C1 ;
  logic [31:0] z_out_R1 ;
  logic [31:0] z_out_X1 ;
  assign z_out_C1 [23:0] = { 24{ _064_ }} ;
  assign z_out_R1 [23:0] = { 24{ _064_ }} & ( _016__R | ( { 24{ _064__T  }} & _016__C ));
  assign z_out_X1 [23:0] = { 24{ _064_ }} & _016__X ;
  logic [23:0] IntMulExt_9U_16U_25U_o_mul_itm_2_C0 ;
  logic [23:0] IntMulExt_9U_16U_25U_o_mul_itm_2_R0 ;
  logic [23:0] IntMulExt_9U_16U_25U_o_mul_itm_2_X0 ;
  assign IntMulExt_9U_16U_25U_o_mul_itm_2_C0 = { 24{ !_064_ }} ;
  assign IntMulExt_9U_16U_25U_o_mul_itm_2_R0 = { 24{ !_064_ }} & ( _016__R | ( { 24{ _064__T  }} & _016__C ));
  assign IntMulExt_9U_16U_25U_o_mul_itm_2_X0 = { 24{ !_064_ }} & _016__X ;
  assign _046_ = _063_ ? reg_cfg_truncate_1_3_itm : reg_cfg_truncate_1_2_itm;
  logic [0:0] _063__C0 ;
  logic [0:0] _063__R0 ;
  logic [0:0] _063__X0 ;
  assign _063__C0 = | _046__C ;
  assign _063__X0 = | _046__X ;
  assign _046__T = _063_ ? ( { 4{ _063__T  }} | reg_cfg_truncate_1_3_itm_T ) : ( { 4{ _063__T  }} | reg_cfg_truncate_1_2_itm_T );
  assign _046__S = _063_ ? reg_cfg_truncate_1_3_itm_S : reg_cfg_truncate_1_2_itm_S ;
  assign _063__R0 = ( | (_046__R | ( _046__C & ( { 4{ _063_ }} & reg_cfg_truncate_1_3_itm_T | { 4{ !_063_ }} & reg_cfg_truncate_1_2_itm_T )))) && reg_cfg_truncate_1_3_itm != reg_cfg_truncate_1_2_itm ;
  logic [3:0] reg_cfg_truncate_1_3_itm_C1 ;
  logic [3:0] reg_cfg_truncate_1_3_itm_R1 ;
  logic [3:0] reg_cfg_truncate_1_3_itm_X1 ;
  assign reg_cfg_truncate_1_3_itm_C1 = { 4{ _063_ }} ;
  assign reg_cfg_truncate_1_3_itm_R1 = { 4{ _063_ }} & ( _046__R | ( { 4{ _063__T  }} & _046__C ));
  assign reg_cfg_truncate_1_3_itm_X1 = { 4{ _063_ }} & _046__X ;
  logic [3:0] reg_cfg_truncate_1_2_itm_C1 ;
  logic [3:0] reg_cfg_truncate_1_2_itm_R1 ;
  logic [3:0] reg_cfg_truncate_1_2_itm_X1 ;
  assign reg_cfg_truncate_1_2_itm_C1 = { 4{ !_063_ }} ;
  assign reg_cfg_truncate_1_2_itm_R1 = { 4{ !_063_ }} & ( _046__R | ( { 4{ _063__T  }} & _046__C ));
  assign reg_cfg_truncate_1_2_itm_X1 = { 4{ !_063_ }} & _046__X ;
  assign _048_ = _062_ ? reg_cfg_truncate_1_1_itm : reg_cfg_truncate_1_itm;
  logic [0:0] _062__C0 ;
  logic [0:0] _062__R0 ;
  logic [0:0] _062__X0 ;
  assign _062__C0 = | _048__C ;
  assign _062__X0 = | _048__X ;
  assign _048__T = _062_ ? ( { 1{ _062__T  }} | reg_cfg_truncate_1_1_itm_T ) : ( { 1{ _062__T  }} | reg_cfg_truncate_1_itm_T );
  assign _048__S = _062_ ? reg_cfg_truncate_1_1_itm_S : reg_cfg_truncate_1_itm_S ;
  assign _062__R0 = ( | (_048__R | ( _048__C & ( { 1{ _062_ }} & reg_cfg_truncate_1_1_itm_T | { 1{ !_062_ }} & reg_cfg_truncate_1_itm_T )))) && reg_cfg_truncate_1_1_itm != reg_cfg_truncate_1_itm ;
  logic [0:0] reg_cfg_truncate_1_1_itm_C1 ;
  logic [0:0] reg_cfg_truncate_1_1_itm_R1 ;
  logic [0:0] reg_cfg_truncate_1_1_itm_X1 ;
  assign reg_cfg_truncate_1_1_itm_C1 = { 1{ _062_ }} ;
  assign reg_cfg_truncate_1_1_itm_R1 = { 1{ _062_ }} & ( _048__R | ( { 1{ _062__T  }} & _048__C ));
  assign reg_cfg_truncate_1_1_itm_X1 = { 1{ _062_ }} & _048__X ;
  logic [0:0] reg_cfg_truncate_1_itm_C0 ;
  logic [0:0] reg_cfg_truncate_1_itm_R0 ;
  logic [0:0] reg_cfg_truncate_1_itm_X0 ;
  assign reg_cfg_truncate_1_itm_C0 = { 1{ !_062_ }} ;
  assign reg_cfg_truncate_1_itm_R0 = { 1{ !_062_ }} & ( _048__R | ( { 1{ _062__T  }} & _048__C ));
  assign reg_cfg_truncate_1_itm_X0 = { 1{ !_062_ }} & _048__X ;
  assign _036_ = _060_ ? _140_ : main_stage_v_2;
  logic [0:0] _060__C0 ;
  logic [0:0] _060__R0 ;
  logic [0:0] _060__X0 ;
  assign _060__C0 = | _036__C ;
  assign _060__X0 = | _036__X ;
  assign _036__T = _060_ ? ( { 1{ _060__T  }} | _140__T ) : ( { 1{ _060__T  }} | main_stage_v_2_T );
  assign _036__S = _060_ ? _140__S : main_stage_v_2_S ;
  assign _060__R0 = ( | (_036__R | ( _036__C & ( { 1{ _060_ }} & _140__T | { 1{ !_060_ }} & main_stage_v_2_T )))) && _140_ != main_stage_v_2 ;
  logic [0:0] _140__C0 ;
  logic [0:0] _140__R0 ;
  logic [0:0] _140__X0 ;
  assign _140__C0 = { 1{ _060_ }} ;
  assign _140__R0 = { 1{ _060_ }} & ( _036__R | ( { 1{ _060__T  }} & _036__C ));
  assign _140__X0 = { 1{ _060_ }} & _036__X ;
  logic [0:0] main_stage_v_2_C4 ;
  logic [0:0] main_stage_v_2_R4 ;
  logic [0:0] main_stage_v_2_X4 ;
  assign main_stage_v_2_C4 = { 1{ !_060_ }} ;
  assign main_stage_v_2_R4 = { 1{ !_060_ }} & ( _036__R | ( { 1{ _060__T  }} & _036__C ));
  assign main_stage_v_2_X4 = { 1{ !_060_ }} & _036__X ;
  assign _033_ = _058_ ? cfg_precision_rsci_d : io_read_cfg_precision_rsc_svs_st_3;
  logic [0:0] _058__C0 ;
  logic [0:0] _058__R0 ;
  logic [0:0] _058__X0 ;
  assign _058__C0 = | _033__C ;
  assign _058__X0 = | _033__X ;
  assign _033__T = _058_ ? ( { 2{ _058__T  }} | cfg_precision_rsci_d_T ) : ( { 2{ _058__T  }} | io_read_cfg_precision_rsc_svs_st_3_T );
  assign _033__S = _058_ ? cfg_precision_rsci_d_S : io_read_cfg_precision_rsc_svs_st_3_S ;
  assign _058__R0 = ( | (_033__R | ( _033__C & ( { 2{ _058_ }} & cfg_precision_rsci_d_T | { 2{ !_058_ }} & io_read_cfg_precision_rsc_svs_st_3_T )))) && cfg_precision_rsci_d != io_read_cfg_precision_rsc_svs_st_3 ;
  assign { io_read_cfg_precision_rsc_svs_st_3_R14 [1:1] } = 0;
  assign { io_read_cfg_precision_rsc_svs_st_3_X14 [1:1] } = 0;
  assign { io_read_cfg_precision_rsc_svs_st_3_C14 [1:1] } = 0;
  logic [1:0] cfg_precision_rsci_d_C5 ;
  logic [1:0] cfg_precision_rsci_d_R5 ;
  logic [1:0] cfg_precision_rsci_d_X5 ;
  assign cfg_precision_rsci_d_C5 = { 2{ _058_ }} ;
  assign cfg_precision_rsci_d_R5 = { 2{ _058_ }} & ( _033__R | ( { 2{ _058__T  }} & _033__C ));
  assign cfg_precision_rsci_d_X5 = { 2{ _058_ }} & _033__X ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_C15 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_R15 ;
  logic [1:0] io_read_cfg_precision_rsc_svs_st_3_X15 ;
  assign io_read_cfg_precision_rsc_svs_st_3_C15 = { 2{ !_058_ }} ;
  assign io_read_cfg_precision_rsc_svs_st_3_R15 = { 2{ !_058_ }} & ( _033__R | ( { 2{ _058__T  }} & _033__C ));
  assign io_read_cfg_precision_rsc_svs_st_3_X15 = { 2{ !_058_ }} & _033__X ;
  assign _035_ = _057_ ? _138_ : main_stage_v_1;
  logic [0:0] _057__C0 ;
  logic [0:0] _057__R0 ;
  logic [0:0] _057__X0 ;
  assign _057__C0 = | _035__C ;
  assign _057__X0 = | _035__X ;
  assign _035__T = _057_ ? ( { 1{ _057__T  }} | _138__T ) : ( { 1{ _057__T  }} | main_stage_v_1_T );
  assign _035__S = _057_ ? _138__S : main_stage_v_1_S ;
  assign _057__R0 = ( | (_035__R | ( _035__C & ( { 1{ _057_ }} & _138__T | { 1{ !_057_ }} & main_stage_v_1_T )))) && _138_ != main_stage_v_1 ;
  logic [0:0] _138__C0 ;
  logic [0:0] _138__R0 ;
  logic [0:0] _138__X0 ;
  assign _138__C0 = { 1{ _057_ }} ;
  assign _138__R0 = { 1{ _057_ }} & ( _035__R | ( { 1{ _057__T  }} & _035__C ));
  assign _138__X0 = { 1{ _057_ }} & _035__X ;
  logic [0:0] main_stage_v_1_C10 ;
  logic [0:0] main_stage_v_1_R10 ;
  logic [0:0] main_stage_v_1_X10 ;
  assign main_stage_v_1_C10 = { 1{ !_057_ }} ;
  assign main_stage_v_1_R10 = { 1{ !_057_ }} & ( _035__R | ( { 1{ _057__T  }} & _035__C ));
  assign main_stage_v_1_X10 = { 1{ !_057_ }} & _035__X ;
  assign _049_ = _056_ ? _137_ : reg_chn_data_out_rsci_ld_core_psct_cse;
  logic [0:0] _056__C0 ;
  logic [0:0] _056__R0 ;
  logic [0:0] _056__X0 ;
  assign _056__C0 = | _049__C ;
  assign _056__X0 = | _049__X ;
  assign _049__T = _056_ ? ( { 1{ _056__T  }} | _137__T ) : ( { 1{ _056__T  }} | reg_chn_data_out_rsci_ld_core_psct_cse_T );
  assign _049__S = _056_ ? _137__S : reg_chn_data_out_rsci_ld_core_psct_cse_S ;
  assign _056__R0 = ( | (_049__R | ( _049__C & ( { 1{ _056_ }} & _137__T | { 1{ !_056_ }} & reg_chn_data_out_rsci_ld_core_psct_cse_T )))) && _137_ != reg_chn_data_out_rsci_ld_core_psct_cse ;
  logic [0:0] _137__C0 ;
  logic [0:0] _137__R0 ;
  logic [0:0] _137__X0 ;
  assign _137__C0 = { 1{ _056_ }} ;
  assign _137__R0 = { 1{ _056_ }} & ( _049__R | ( { 1{ _056__T  }} & _049__C ));
  assign _137__X0 = { 1{ _056_ }} & _049__X ;
  logic [0:0] reg_chn_data_out_rsci_ld_core_psct_cse_C4 ;
  logic [0:0] reg_chn_data_out_rsci_ld_core_psct_cse_R4 ;
  logic [0:0] reg_chn_data_out_rsci_ld_core_psct_cse_X4 ;
  assign reg_chn_data_out_rsci_ld_core_psct_cse_C4 = { 1{ !_056_ }} ;
  assign reg_chn_data_out_rsci_ld_core_psct_cse_R4 = { 1{ !_056_ }} & ( _049__R | ( { 1{ _056__T  }} & _049__C ));
  assign reg_chn_data_out_rsci_ld_core_psct_cse_X4 = { 1{ !_056_ }} & _049__X ;
  assign _023_ = chn_data_out_and_cse ? _252_ : chn_data_out_rsci_d_14;
  logic [0:0] chn_data_out_and_cse_C0 ;
  logic [0:0] chn_data_out_and_cse_R0 ;
  logic [0:0] chn_data_out_and_cse_X0 ;
  assign chn_data_out_and_cse_C0 = | _023__C ;
  assign chn_data_out_and_cse_X0 = | _023__X ;
  assign _023__T = chn_data_out_and_cse ? ( { 1{ chn_data_out_and_cse_T  }} | _252__T ) : ( { 1{ chn_data_out_and_cse_T  }} | chn_data_out_rsci_d_14_T );
  assign _023__S = chn_data_out_and_cse ? _252__S : chn_data_out_rsci_d_14_S ;
  assign chn_data_out_and_cse_R0 = ( | (_023__R | ( _023__C & ( { 1{ chn_data_out_and_cse }} & _252__T | { 1{ !chn_data_out_and_cse }} & chn_data_out_rsci_d_14_T )))) && _252_ != chn_data_out_rsci_d_14 ;
  logic [0:0] _252__C0 ;
  logic [0:0] _252__R0 ;
  logic [0:0] _252__X0 ;
  assign _252__C0 = { 1{ chn_data_out_and_cse }} ;
  assign _252__R0 = { 1{ chn_data_out_and_cse }} & ( _023__R | ( { 1{ chn_data_out_and_cse_T  }} & _023__C ));
  assign _252__X0 = { 1{ chn_data_out_and_cse }} & _023__X ;
  logic [0:0] chn_data_out_rsci_d_14_C0 ;
  logic [0:0] chn_data_out_rsci_d_14_R0 ;
  logic [0:0] chn_data_out_rsci_d_14_X0 ;
  assign chn_data_out_rsci_d_14_C0 = { 1{ !chn_data_out_and_cse }} ;
  assign chn_data_out_rsci_d_14_R0 = { 1{ !chn_data_out_and_cse }} & ( _023__R | ( { 1{ chn_data_out_and_cse_T  }} & _023__C ));
  assign chn_data_out_rsci_d_14_X0 = { 1{ !chn_data_out_and_cse }} & _023__X ;
  assign _024_ = chn_data_out_and_cse ? _253_ : chn_data_out_rsci_d_15;
  logic [0:0] chn_data_out_and_cse_C1 ;
  logic [0:0] chn_data_out_and_cse_R1 ;
  logic [0:0] chn_data_out_and_cse_X1 ;
  assign chn_data_out_and_cse_C1 = | _024__C ;
  assign chn_data_out_and_cse_X1 = | _024__X ;
  assign _024__T = chn_data_out_and_cse ? ( { 1{ chn_data_out_and_cse_T  }} | _253__T ) : ( { 1{ chn_data_out_and_cse_T  }} | chn_data_out_rsci_d_15_T );
  assign _024__S = chn_data_out_and_cse ? _253__S : chn_data_out_rsci_d_15_S ;
  assign chn_data_out_and_cse_R1 = ( | (_024__R | ( _024__C & ( { 1{ chn_data_out_and_cse }} & _253__T | { 1{ !chn_data_out_and_cse }} & chn_data_out_rsci_d_15_T )))) && _253_ != chn_data_out_rsci_d_15 ;
  logic [0:0] _253__C0 ;
  logic [0:0] _253__R0 ;
  logic [0:0] _253__X0 ;
  assign _253__C0 = { 1{ chn_data_out_and_cse }} ;
  assign _253__R0 = { 1{ chn_data_out_and_cse }} & ( _024__R | ( { 1{ chn_data_out_and_cse_T  }} & _024__C ));
  assign _253__X0 = { 1{ chn_data_out_and_cse }} & _024__X ;
  logic [0:0] chn_data_out_rsci_d_15_C0 ;
  logic [0:0] chn_data_out_rsci_d_15_R0 ;
  logic [0:0] chn_data_out_rsci_d_15_X0 ;
  assign chn_data_out_rsci_d_15_C0 = { 1{ !chn_data_out_and_cse }} ;
  assign chn_data_out_rsci_d_15_R0 = { 1{ !chn_data_out_and_cse }} & ( _024__R | ( { 1{ chn_data_out_and_cse_T  }} & _024__C ));
  assign chn_data_out_rsci_d_15_X0 = { 1{ !chn_data_out_and_cse }} & _024__X ;
  assign _021_ = chn_data_out_and_cse ? _254_ : chn_data_out_rsci_d_0;
  logic [0:0] chn_data_out_and_cse_C2 ;
  logic [0:0] chn_data_out_and_cse_R2 ;
  logic [0:0] chn_data_out_and_cse_X2 ;
  assign chn_data_out_and_cse_C2 = | _021__C ;
  assign chn_data_out_and_cse_X2 = | _021__X ;
  assign _021__T = chn_data_out_and_cse ? ( { 1{ chn_data_out_and_cse_T  }} | _254__T ) : ( { 1{ chn_data_out_and_cse_T  }} | chn_data_out_rsci_d_0_T );
  assign _021__S = chn_data_out_and_cse ? _254__S : chn_data_out_rsci_d_0_S ;
  assign chn_data_out_and_cse_R2 = ( | (_021__R | ( _021__C & ( { 1{ chn_data_out_and_cse }} & _254__T | { 1{ !chn_data_out_and_cse }} & chn_data_out_rsci_d_0_T )))) && _254_ != chn_data_out_rsci_d_0 ;
  logic [0:0] _254__C0 ;
  logic [0:0] _254__R0 ;
  logic [0:0] _254__X0 ;
  assign _254__C0 = { 1{ chn_data_out_and_cse }} ;
  assign _254__R0 = { 1{ chn_data_out_and_cse }} & ( _021__R | ( { 1{ chn_data_out_and_cse_T  }} & _021__C ));
  assign _254__X0 = { 1{ chn_data_out_and_cse }} & _021__X ;
  logic [0:0] chn_data_out_rsci_d_0_C0 ;
  logic [0:0] chn_data_out_rsci_d_0_R0 ;
  logic [0:0] chn_data_out_rsci_d_0_X0 ;
  assign chn_data_out_rsci_d_0_C0 = { 1{ !chn_data_out_and_cse }} ;
  assign chn_data_out_rsci_d_0_R0 = { 1{ !chn_data_out_and_cse }} & ( _021__R | ( { 1{ chn_data_out_and_cse_T  }} & _021__C ));
  assign chn_data_out_rsci_d_0_X0 = { 1{ !chn_data_out_and_cse }} & _021__X ;
  assign _027_ = chn_data_out_and_cse ? _264_ : chn_data_out_rsci_d_7_1;
  logic [0:0] chn_data_out_and_cse_C3 ;
  logic [0:0] chn_data_out_and_cse_R3 ;
  logic [0:0] chn_data_out_and_cse_X3 ;
  assign chn_data_out_and_cse_C3 = | _027__C ;
  assign chn_data_out_and_cse_X3 = | _027__X ;
  assign _027__T = chn_data_out_and_cse ? ( { 7{ chn_data_out_and_cse_T  }} | _264__T ) : ( { 7{ chn_data_out_and_cse_T  }} | chn_data_out_rsci_d_7_1_T );
  assign _027__S = chn_data_out_and_cse ? _264__S : chn_data_out_rsci_d_7_1_S ;
  assign chn_data_out_and_cse_R3 = ( | (_027__R | ( _027__C & ( { 7{ chn_data_out_and_cse }} & _264__T | { 7{ !chn_data_out_and_cse }} & chn_data_out_rsci_d_7_1_T )))) && _264_ != chn_data_out_rsci_d_7_1 ;
  logic [6:0] _264__C0 ;
  logic [6:0] _264__R0 ;
  logic [6:0] _264__X0 ;
  assign _264__C0 = { 7{ chn_data_out_and_cse }} ;
  assign _264__R0 = { 7{ chn_data_out_and_cse }} & ( _027__R | ( { 7{ chn_data_out_and_cse_T  }} & _027__C ));
  assign _264__X0 = { 7{ chn_data_out_and_cse }} & _027__X ;
  logic [6:0] chn_data_out_rsci_d_7_1_C0 ;
  logic [6:0] chn_data_out_rsci_d_7_1_R0 ;
  logic [6:0] chn_data_out_rsci_d_7_1_X0 ;
  assign chn_data_out_rsci_d_7_1_C0 = { 7{ !chn_data_out_and_cse }} ;
  assign chn_data_out_rsci_d_7_1_R0 = { 7{ !chn_data_out_and_cse }} & ( _027__R | ( { 7{ chn_data_out_and_cse_T  }} & _027__C ));
  assign chn_data_out_rsci_d_7_1_X0 = { 7{ !chn_data_out_and_cse }} & _027__X ;
  assign _028_ = chn_data_out_and_cse ? _255_ : chn_data_out_rsci_d_8;
  logic [0:0] chn_data_out_and_cse_C4 ;
  logic [0:0] chn_data_out_and_cse_R4 ;
  logic [0:0] chn_data_out_and_cse_X4 ;
  assign chn_data_out_and_cse_C4 = | _028__C ;
  assign chn_data_out_and_cse_X4 = | _028__X ;
  assign _028__T = chn_data_out_and_cse ? ( { 1{ chn_data_out_and_cse_T  }} | _255__T ) : ( { 1{ chn_data_out_and_cse_T  }} | chn_data_out_rsci_d_8_T );
  assign _028__S = chn_data_out_and_cse ? _255__S : chn_data_out_rsci_d_8_S ;
  assign chn_data_out_and_cse_R4 = ( | (_028__R | ( _028__C & ( { 1{ chn_data_out_and_cse }} & _255__T | { 1{ !chn_data_out_and_cse }} & chn_data_out_rsci_d_8_T )))) && _255_ != chn_data_out_rsci_d_8 ;
  logic [0:0] _255__C0 ;
  logic [0:0] _255__R0 ;
  logic [0:0] _255__X0 ;
  assign _255__C0 = { 1{ chn_data_out_and_cse }} ;
  assign _255__R0 = { 1{ chn_data_out_and_cse }} & ( _028__R | ( { 1{ chn_data_out_and_cse_T  }} & _028__C ));
  assign _255__X0 = { 1{ chn_data_out_and_cse }} & _028__X ;
  logic [0:0] chn_data_out_rsci_d_8_C0 ;
  logic [0:0] chn_data_out_rsci_d_8_R0 ;
  logic [0:0] chn_data_out_rsci_d_8_X0 ;
  assign chn_data_out_rsci_d_8_C0 = { 1{ !chn_data_out_and_cse }} ;
  assign chn_data_out_rsci_d_8_R0 = { 1{ !chn_data_out_and_cse }} & ( _028__R | ( { 1{ chn_data_out_and_cse_T  }} & _028__C ));
  assign chn_data_out_rsci_d_8_X0 = { 1{ !chn_data_out_and_cse }} & _028__X ;
  assign _029_ = chn_data_out_and_cse ? _256_ : chn_data_out_rsci_d_9;
  logic [0:0] chn_data_out_and_cse_C5 ;
  logic [0:0] chn_data_out_and_cse_R5 ;
  logic [0:0] chn_data_out_and_cse_X5 ;
  assign chn_data_out_and_cse_C5 = | _029__C ;
  assign chn_data_out_and_cse_X5 = | _029__X ;
  assign _029__T = chn_data_out_and_cse ? ( { 1{ chn_data_out_and_cse_T  }} | _256__T ) : ( { 1{ chn_data_out_and_cse_T  }} | chn_data_out_rsci_d_9_T );
  assign _029__S = chn_data_out_and_cse ? _256__S : chn_data_out_rsci_d_9_S ;
  assign chn_data_out_and_cse_R5 = ( | (_029__R | ( _029__C & ( { 1{ chn_data_out_and_cse }} & _256__T | { 1{ !chn_data_out_and_cse }} & chn_data_out_rsci_d_9_T )))) && _256_ != chn_data_out_rsci_d_9 ;
  logic [0:0] _256__C0 ;
  logic [0:0] _256__R0 ;
  logic [0:0] _256__X0 ;
  assign _256__C0 = { 1{ chn_data_out_and_cse }} ;
  assign _256__R0 = { 1{ chn_data_out_and_cse }} & ( _029__R | ( { 1{ chn_data_out_and_cse_T  }} & _029__C ));
  assign _256__X0 = { 1{ chn_data_out_and_cse }} & _029__X ;
  logic [0:0] chn_data_out_rsci_d_9_C0 ;
  logic [0:0] chn_data_out_rsci_d_9_R0 ;
  logic [0:0] chn_data_out_rsci_d_9_X0 ;
  assign chn_data_out_rsci_d_9_C0 = { 1{ !chn_data_out_and_cse }} ;
  assign chn_data_out_rsci_d_9_R0 = { 1{ !chn_data_out_and_cse }} & ( _029__R | ( { 1{ chn_data_out_and_cse_T  }} & _029__C ));
  assign chn_data_out_rsci_d_9_X0 = { 1{ !chn_data_out_and_cse }} & _029__X ;
  assign _022_ = chn_data_out_and_cse ? _262_ : chn_data_out_rsci_d_13_10;
  logic [0:0] chn_data_out_and_cse_C6 ;
  logic [0:0] chn_data_out_and_cse_R6 ;
  logic [0:0] chn_data_out_and_cse_X6 ;
  assign chn_data_out_and_cse_C6 = | _022__C ;
  assign chn_data_out_and_cse_X6 = | _022__X ;
  assign _022__T = chn_data_out_and_cse ? ( { 4{ chn_data_out_and_cse_T  }} | _262__T ) : ( { 4{ chn_data_out_and_cse_T  }} | chn_data_out_rsci_d_13_10_T );
  assign _022__S = chn_data_out_and_cse ? _262__S : chn_data_out_rsci_d_13_10_S ;
  assign chn_data_out_and_cse_R6 = ( | (_022__R | ( _022__C & ( { 4{ chn_data_out_and_cse }} & _262__T | { 4{ !chn_data_out_and_cse }} & chn_data_out_rsci_d_13_10_T )))) && _262_ != chn_data_out_rsci_d_13_10 ;
  logic [3:0] _262__C0 ;
  logic [3:0] _262__R0 ;
  logic [3:0] _262__X0 ;
  assign _262__C0 = { 4{ chn_data_out_and_cse }} ;
  assign _262__R0 = { 4{ chn_data_out_and_cse }} & ( _022__R | ( { 4{ chn_data_out_and_cse_T  }} & _022__C ));
  assign _262__X0 = { 4{ chn_data_out_and_cse }} & _022__X ;
  logic [3:0] chn_data_out_rsci_d_13_10_C0 ;
  logic [3:0] chn_data_out_rsci_d_13_10_R0 ;
  logic [3:0] chn_data_out_rsci_d_13_10_X0 ;
  assign chn_data_out_rsci_d_13_10_C0 = { 4{ !chn_data_out_and_cse }} ;
  assign chn_data_out_rsci_d_13_10_R0 = { 4{ !chn_data_out_and_cse }} & ( _022__R | ( { 4{ chn_data_out_and_cse_T  }} & _022__C ));
  assign chn_data_out_rsci_d_13_10_X0 = { 4{ !chn_data_out_and_cse }} & _022__X ;
  assign _025_ = chn_data_out_and_cse ? _257_ : chn_data_out_rsci_d_16;
  logic [0:0] chn_data_out_and_cse_C7 ;
  logic [0:0] chn_data_out_and_cse_R7 ;
  logic [0:0] chn_data_out_and_cse_X7 ;
  assign chn_data_out_and_cse_C7 = | _025__C ;
  assign chn_data_out_and_cse_X7 = | _025__X ;
  assign _025__T = chn_data_out_and_cse ? ( { 1{ chn_data_out_and_cse_T  }} | _257__T ) : ( { 1{ chn_data_out_and_cse_T  }} | chn_data_out_rsci_d_16_T );
  assign _025__S = chn_data_out_and_cse ? _257__S : chn_data_out_rsci_d_16_S ;
  assign chn_data_out_and_cse_R7 = ( | (_025__R | ( _025__C & ( { 1{ chn_data_out_and_cse }} & _257__T | { 1{ !chn_data_out_and_cse }} & chn_data_out_rsci_d_16_T )))) && _257_ != chn_data_out_rsci_d_16 ;
  logic [0:0] _257__C0 ;
  logic [0:0] _257__R0 ;
  logic [0:0] _257__X0 ;
  assign _257__C0 = { 1{ chn_data_out_and_cse }} ;
  assign _257__R0 = { 1{ chn_data_out_and_cse }} & ( _025__R | ( { 1{ chn_data_out_and_cse_T  }} & _025__C ));
  assign _257__X0 = { 1{ chn_data_out_and_cse }} & _025__X ;
  logic [0:0] chn_data_out_rsci_d_16_C0 ;
  logic [0:0] chn_data_out_rsci_d_16_R0 ;
  logic [0:0] chn_data_out_rsci_d_16_X0 ;
  assign chn_data_out_rsci_d_16_C0 = { 1{ !chn_data_out_and_cse }} ;
  assign chn_data_out_rsci_d_16_R0 = { 1{ !chn_data_out_and_cse }} & ( _025__R | ( { 1{ chn_data_out_and_cse_T  }} & _025__C ));
  assign chn_data_out_rsci_d_16_X0 = { 1{ !chn_data_out_and_cse }} & _025__X ;
  assign _026_ = chn_data_out_and_cse ? _258_ : chn_data_out_rsci_d_17;
  logic [0:0] chn_data_out_and_cse_C8 ;
  logic [0:0] chn_data_out_and_cse_R8 ;
  logic [0:0] chn_data_out_and_cse_X8 ;
  assign chn_data_out_and_cse_C8 = | _026__C ;
  assign chn_data_out_and_cse_X8 = | _026__X ;
  assign _026__T = chn_data_out_and_cse ? ( { 1{ chn_data_out_and_cse_T  }} | _258__T ) : ( { 1{ chn_data_out_and_cse_T  }} | chn_data_out_rsci_d_17_T );
  assign _026__S = chn_data_out_and_cse ? _258__S : chn_data_out_rsci_d_17_S ;
  assign chn_data_out_and_cse_R8 = ( | (_026__R | ( _026__C & ( { 1{ chn_data_out_and_cse }} & _258__T | { 1{ !chn_data_out_and_cse }} & chn_data_out_rsci_d_17_T )))) && _258_ != chn_data_out_rsci_d_17 ;
  logic [0:0] _258__C0 ;
  logic [0:0] _258__R0 ;
  logic [0:0] _258__X0 ;
  assign _258__C0 = { 1{ chn_data_out_and_cse }} ;
  assign _258__R0 = { 1{ chn_data_out_and_cse }} & ( _026__R | ( { 1{ chn_data_out_and_cse_T  }} & _026__C ));
  assign _258__X0 = { 1{ chn_data_out_and_cse }} & _026__X ;
  logic [0:0] chn_data_out_rsci_d_17_C0 ;
  logic [0:0] chn_data_out_rsci_d_17_R0 ;
  logic [0:0] chn_data_out_rsci_d_17_X0 ;
  assign chn_data_out_rsci_d_17_C0 = { 1{ !chn_data_out_and_cse }} ;
  assign chn_data_out_rsci_d_17_R0 = { 1{ !chn_data_out_and_cse }} & ( _026__R | ( { 1{ chn_data_out_and_cse_T  }} & _026__C ));
  assign chn_data_out_rsci_d_17_X0 = { 1{ !chn_data_out_and_cse }} & _026__X ;
  assign _020_ = _055_ ? chn_data_in_rsci_ld_core_psct_mx0c0 : chn_data_in_rsci_ld_core_psct;
  logic [0:0] _055__C0 ;
  logic [0:0] _055__R0 ;
  logic [0:0] _055__X0 ;
  assign _055__C0 = | _020__C ;
  assign _055__X0 = | _020__X ;
  assign _020__T = _055_ ? ( { 1{ _055__T  }} | chn_data_in_rsci_ld_core_psct_mx0c0_T ) : ( { 1{ _055__T  }} | chn_data_in_rsci_ld_core_psct_T );
  assign _020__S = _055_ ? chn_data_in_rsci_ld_core_psct_mx0c0_S : chn_data_in_rsci_ld_core_psct_S ;
  assign _055__R0 = ( | (_020__R | ( _020__C & ( { 1{ _055_ }} & chn_data_in_rsci_ld_core_psct_mx0c0_T | { 1{ !_055_ }} & chn_data_in_rsci_ld_core_psct_T )))) && chn_data_in_rsci_ld_core_psct_mx0c0 != chn_data_in_rsci_ld_core_psct ;
  logic [0:0] chn_data_in_rsci_ld_core_psct_mx0c0_C1 ;
  logic [0:0] chn_data_in_rsci_ld_core_psct_mx0c0_R1 ;
  logic [0:0] chn_data_in_rsci_ld_core_psct_mx0c0_X1 ;
  assign chn_data_in_rsci_ld_core_psct_mx0c0_C1 = { 1{ _055_ }} ;
  assign chn_data_in_rsci_ld_core_psct_mx0c0_R1 = { 1{ _055_ }} & ( _020__R | ( { 1{ _055__T  }} & _020__C ));
  assign chn_data_in_rsci_ld_core_psct_mx0c0_X1 = { 1{ _055_ }} & _020__X ;
  logic [0:0] chn_data_in_rsci_ld_core_psct_C0 ;
  logic [0:0] chn_data_in_rsci_ld_core_psct_R0 ;
  logic [0:0] chn_data_in_rsci_ld_core_psct_X0 ;
  assign chn_data_in_rsci_ld_core_psct_C0 = { 1{ !_055_ }} ;
  assign chn_data_in_rsci_ld_core_psct_R0 = { 1{ !_055_ }} & ( _020__R | ( { 1{ _055__T  }} & _020__C ));
  assign chn_data_in_rsci_ld_core_psct_X0 = { 1{ !_055_ }} & _020__X ;
  assign _019_ = core_wen ? _136_ : chn_data_in_rsci_iswt0;
  logic [0:0] core_wen_C9 ;
  logic [0:0] core_wen_R9 ;
  logic [0:0] core_wen_X9 ;
  assign core_wen_C9 = | _019__C ;
  assign core_wen_X9 = | _019__X ;
  assign _019__T = core_wen ? ( { 1{ core_wen_T  }} | _136__T ) : ( { 1{ core_wen_T  }} | chn_data_in_rsci_iswt0_T );
  assign _019__S = core_wen ? _136__S : chn_data_in_rsci_iswt0_S ;
  assign core_wen_R9 = ( | (_019__R | ( _019__C & ( { 1{ core_wen }} & _136__T | { 1{ !core_wen }} & chn_data_in_rsci_iswt0_T )))) && _136_ != chn_data_in_rsci_iswt0 ;
  logic [0:0] _136__C0 ;
  logic [0:0] _136__R0 ;
  logic [0:0] _136__X0 ;
  assign _136__C0 = { 1{ core_wen }} ;
  assign _136__R0 = { 1{ core_wen }} & ( _019__R | ( { 1{ core_wen_T  }} & _019__C ));
  assign _136__X0 = { 1{ core_wen }} & _019__X ;
  logic [0:0] chn_data_in_rsci_iswt0_C0 ;
  logic [0:0] chn_data_in_rsci_iswt0_R0 ;
  logic [0:0] chn_data_in_rsci_iswt0_X0 ;
  assign chn_data_in_rsci_iswt0_C0 = { 1{ !core_wen }} ;
  assign chn_data_in_rsci_iswt0_R0 = { 1{ !core_wen }} & ( _019__R | ( { 1{ core_wen_T  }} & _019__C ));
  assign chn_data_in_rsci_iswt0_X0 = { 1{ !core_wen }} & _019__X ;
  assign _030_ = core_wen ? and_dcpl_18 : chn_data_out_rsci_iswt0;
  logic [0:0] core_wen_C10 ;
  logic [0:0] core_wen_R10 ;
  logic [0:0] core_wen_X10 ;
  assign core_wen_C10 = | _030__C ;
  assign core_wen_X10 = | _030__X ;
  assign _030__T = core_wen ? ( { 1{ core_wen_T  }} | and_dcpl_18_T ) : ( { 1{ core_wen_T  }} | chn_data_out_rsci_iswt0_T );
  assign _030__S = core_wen ? and_dcpl_18_S : chn_data_out_rsci_iswt0_S ;
  assign core_wen_R10 = ( | (_030__R | ( _030__C & ( { 1{ core_wen }} & and_dcpl_18_T | { 1{ !core_wen }} & chn_data_out_rsci_iswt0_T )))) && and_dcpl_18 != chn_data_out_rsci_iswt0 ;
  logic [0:0] and_dcpl_18_C2 ;
  logic [0:0] and_dcpl_18_R2 ;
  logic [0:0] and_dcpl_18_X2 ;
  assign and_dcpl_18_C2 = { 1{ core_wen }} ;
  assign and_dcpl_18_R2 = { 1{ core_wen }} & ( _030__R | ( { 1{ core_wen_T  }} & _030__C ));
  assign and_dcpl_18_X2 = { 1{ core_wen }} & _030__X ;
  logic [0:0] chn_data_out_rsci_iswt0_C0 ;
  logic [0:0] chn_data_out_rsci_iswt0_R0 ;
  logic [0:0] chn_data_out_rsci_iswt0_X0 ;
  assign chn_data_out_rsci_iswt0_C0 = { 1{ !core_wen }} ;
  assign chn_data_out_rsci_iswt0_R0 = { 1{ !core_wen }} & ( _030__R | ( { 1{ core_wen_T  }} & _030__C ));
  assign chn_data_out_rsci_iswt0_X0 = { 1{ !core_wen }} & _030__X ;
  logic [8:0] fangyuan26;
  logic [8:0] fangyuan26_T ;
  logic [8:0] fangyuan26_R ;
  logic [8:0] fangyuan26_C ;
  logic [8:0] fangyuan26_X ;
  assign fangyuan26 = { chn_data_in_rsci_d_mxwt[15], chn_data_in_rsci_d_mxwt[15:8] };
  assign fangyuan26_T = {  chn_data_in_rsci_d_mxwt_T [15] , chn_data_in_rsci_d_mxwt_T [15:8]  };
  logic [5:0] fangyuan26_S ;
  assign fangyuan26_S = 0 ;
  assign { chn_data_in_rsci_d_mxwt_R11 [10], chn_data_in_rsci_d_mxwt_R11 [11], chn_data_in_rsci_d_mxwt_R11 [12], chn_data_in_rsci_d_mxwt_R11 [13] } = 0;
  assign { chn_data_in_rsci_d_mxwt_X11 [10], chn_data_in_rsci_d_mxwt_X11 [11], chn_data_in_rsci_d_mxwt_X11 [12], chn_data_in_rsci_d_mxwt_X11 [13] } = 0;
  assign { chn_data_in_rsci_d_mxwt_C11 [10], chn_data_in_rsci_d_mxwt_C11 [11], chn_data_in_rsci_d_mxwt_C11 [12], chn_data_in_rsci_d_mxwt_C11 [13] } = 0;
  logic [15:0] chn_data_in_rsci_d_mxwt_R12 ;
  logic [15:0] chn_data_in_rsci_d_mxwt_X12 ;
  logic [15:0] chn_data_in_rsci_d_mxwt_C12 ;
  assign chn_data_in_rsci_d_mxwt_R12 [15:15] = fangyuan26_R [8:8] ;
  assign chn_data_in_rsci_d_mxwt_X12 [15:15] = fangyuan26_X [8:8] ;
  assign chn_data_in_rsci_d_mxwt_C12 [15:15] = fangyuan26_C [8:8] ;
  assign { chn_data_in_rsci_d_mxwt_R12 [0], chn_data_in_rsci_d_mxwt_R12 [1], chn_data_in_rsci_d_mxwt_R12 [2], chn_data_in_rsci_d_mxwt_R12 [3], chn_data_in_rsci_d_mxwt_R12 [4], chn_data_in_rsci_d_mxwt_R12 [5], chn_data_in_rsci_d_mxwt_R12 [6], chn_data_in_rsci_d_mxwt_R12 [7], chn_data_in_rsci_d_mxwt_R12 [8], chn_data_in_rsci_d_mxwt_R12 [9], chn_data_in_rsci_d_mxwt_R12 [10], chn_data_in_rsci_d_mxwt_R12 [11], chn_data_in_rsci_d_mxwt_R12 [12], chn_data_in_rsci_d_mxwt_R12 [13], chn_data_in_rsci_d_mxwt_R12 [14] } = 0;
  assign { chn_data_in_rsci_d_mxwt_X12 [0], chn_data_in_rsci_d_mxwt_X12 [1], chn_data_in_rsci_d_mxwt_X12 [2], chn_data_in_rsci_d_mxwt_X12 [3], chn_data_in_rsci_d_mxwt_X12 [4], chn_data_in_rsci_d_mxwt_X12 [5], chn_data_in_rsci_d_mxwt_X12 [6], chn_data_in_rsci_d_mxwt_X12 [7], chn_data_in_rsci_d_mxwt_X12 [8], chn_data_in_rsci_d_mxwt_X12 [9], chn_data_in_rsci_d_mxwt_X12 [10], chn_data_in_rsci_d_mxwt_X12 [11], chn_data_in_rsci_d_mxwt_X12 [12], chn_data_in_rsci_d_mxwt_X12 [13], chn_data_in_rsci_d_mxwt_X12 [14] } = 0;
  assign { chn_data_in_rsci_d_mxwt_C12 [0], chn_data_in_rsci_d_mxwt_C12 [1], chn_data_in_rsci_d_mxwt_C12 [2], chn_data_in_rsci_d_mxwt_C12 [3], chn_data_in_rsci_d_mxwt_C12 [4], chn_data_in_rsci_d_mxwt_C12 [5], chn_data_in_rsci_d_mxwt_C12 [6], chn_data_in_rsci_d_mxwt_C12 [7], chn_data_in_rsci_d_mxwt_C12 [8], chn_data_in_rsci_d_mxwt_C12 [9], chn_data_in_rsci_d_mxwt_C12 [10], chn_data_in_rsci_d_mxwt_C12 [11], chn_data_in_rsci_d_mxwt_C12 [12], chn_data_in_rsci_d_mxwt_C12 [13], chn_data_in_rsci_d_mxwt_C12 [14] } = 0;
  logic [15:0] chn_data_in_rsci_d_mxwt_R13 ;
  logic [15:0] chn_data_in_rsci_d_mxwt_X13 ;
  logic [15:0] chn_data_in_rsci_d_mxwt_C13 ;
  assign chn_data_in_rsci_d_mxwt_R13 [15:8] = fangyuan26_R [7:0] ;
  assign chn_data_in_rsci_d_mxwt_X13 [15:8] = fangyuan26_X [7:0] ;
  assign chn_data_in_rsci_d_mxwt_C13 [15:8] = fangyuan26_C [7:0] ;
  logic [8:0] fangyuan27;
  logic [8:0] fangyuan27_T ;
  logic [8:0] fangyuan27_R ;
  logic [8:0] fangyuan27_C ;
  logic [8:0] fangyuan27_X ;
  assign fangyuan27 = { cfg_alu_in_rsci_d[7], cfg_alu_in_rsci_d[7:0] };
  assign fangyuan27_T = {  cfg_alu_in_rsci_d_T [7] , cfg_alu_in_rsci_d_T [7:0]  };
  logic [5:0] fangyuan27_S ;
  assign fangyuan27_S = 0 ;
  logic [15:0] cfg_alu_in_rsci_d_R2 ;
  logic [15:0] cfg_alu_in_rsci_d_X2 ;
  logic [15:0] cfg_alu_in_rsci_d_C2 ;
  assign cfg_alu_in_rsci_d_R2 [7:7] = fangyuan27_R [8:8] ;
  assign cfg_alu_in_rsci_d_X2 [7:7] = fangyuan27_X [8:8] ;
  assign cfg_alu_in_rsci_d_C2 [7:7] = fangyuan27_C [8:8] ;
  assign { cfg_alu_in_rsci_d_R2 [0], cfg_alu_in_rsci_d_R2 [1], cfg_alu_in_rsci_d_R2 [2], cfg_alu_in_rsci_d_R2 [3], cfg_alu_in_rsci_d_R2 [4], cfg_alu_in_rsci_d_R2 [5], cfg_alu_in_rsci_d_R2 [6], cfg_alu_in_rsci_d_R2 [15:8] } = 0;
  assign { cfg_alu_in_rsci_d_X2 [0], cfg_alu_in_rsci_d_X2 [1], cfg_alu_in_rsci_d_X2 [2], cfg_alu_in_rsci_d_X2 [3], cfg_alu_in_rsci_d_X2 [4], cfg_alu_in_rsci_d_X2 [5], cfg_alu_in_rsci_d_X2 [6], cfg_alu_in_rsci_d_X2 [15:8] } = 0;
  assign { cfg_alu_in_rsci_d_C2 [0], cfg_alu_in_rsci_d_C2 [1], cfg_alu_in_rsci_d_C2 [2], cfg_alu_in_rsci_d_C2 [3], cfg_alu_in_rsci_d_C2 [4], cfg_alu_in_rsci_d_C2 [5], cfg_alu_in_rsci_d_C2 [6], cfg_alu_in_rsci_d_C2 [15:8] } = 0;
  logic [15:0] cfg_alu_in_rsci_d_R3 ;
  logic [15:0] cfg_alu_in_rsci_d_X3 ;
  logic [15:0] cfg_alu_in_rsci_d_C3 ;
  assign cfg_alu_in_rsci_d_R3 [7:0] = fangyuan27_R [7:0] ;
  assign cfg_alu_in_rsci_d_X3 [7:0] = fangyuan27_X [7:0] ;
  assign cfg_alu_in_rsci_d_C3 [7:0] = fangyuan27_C [7:0] ;

  assign IntSubExt_8U_8U_9U_1_o_acc_nl = fangyuan26 - fangyuan27;
  assign IntSubExt_8U_8U_9U_1_o_acc_nl_S = 0 ;
  logic [8:0] fangyuan26_C0 ;
  logic [8:0] fangyuan26_R0 ;
  logic [8:0] fangyuan26_X0 ;
  logic [8:0] fangyuan27_C0 ;
  logic [8:0] fangyuan27_R0 ;
  logic [8:0] fangyuan27_X0 ;
  assign IntSubExt_8U_8U_9U_1_o_acc_nl_T = fangyuan26_T | fangyuan27_T ;
  assign fangyuan26_C0 = IntSubExt_8U_8U_9U_1_o_acc_nl_C ;
  assign fangyuan26_X0 = IntSubExt_8U_8U_9U_1_o_acc_nl_X ;
  assign fangyuan27_C0 = IntSubExt_8U_8U_9U_1_o_acc_nl_C ;
  assign fangyuan27_X0 = IntSubExt_8U_8U_9U_1_o_acc_nl_X ;
  assign fangyuan26_R0 = IntSubExt_8U_8U_9U_1_o_acc_nl_R | ( IntSubExt_8U_8U_9U_1_o_acc_nl_C & fangyuan27_T );
  assign fangyuan27_R0 = IntSubExt_8U_8U_9U_1_o_acc_nl_R | ( IntSubExt_8U_8U_9U_1_o_acc_nl_C & fangyuan26_T );
  assign { IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_R0 [0], IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_R0 [1], IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_R0 [2], IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_R0 [3], IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_R0 [4], IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_R0 [5], IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_R0 [6] } = 0;
  assign { IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_X0 [0], IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_X0 [1], IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_X0 [2], IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_X0 [3], IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_X0 [4], IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_X0 [5], IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_X0 [6] } = 0;
  assign { IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_C0 [0], IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_C0 [1], IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_C0 [2], IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_C0 [3], IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_C0 [4], IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_C0 [5], IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_C0 [6] } = 0;
  logic [7:0] IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_R0 ;
  logic [7:0] IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_X0 ;
  logic [7:0] IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_C0 ;
  logic [7:0] IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_R1 ;
  logic [7:0] IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_X1 ;
  logic [7:0] IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_C1 ;
  logic [23:0] reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R9 ;
  logic [23:0] reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X9 ;
  logic [23:0] reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C9 ;
  logic [0:0] reg_cfg_truncate_1_itm_R1 ;
  logic [0:0] reg_cfg_truncate_1_itm_X1 ;
  logic [0:0] reg_cfg_truncate_1_itm_C1 ;
  logic [3:0] reg_cfg_truncate_1_2_itm_R2 ;
  logic [3:0] reg_cfg_truncate_1_2_itm_X2 ;
  logic [3:0] reg_cfg_truncate_1_2_itm_C2 ;
// module: hhh
  hhh h0 (
    .a_T ( {  IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_T [7] , IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_T , reg_IntMulExt_17U_16U_33U_o_mul_1_itm_T , 31'h0  } ),
    .a_R ( {  IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_R0 [7] , IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_R1 , reg_IntMulExt_17U_16U_33U_o_mul_1_itm_R9 , nouse_zy0  } ),
    .a_X ( {  IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_X0 [7] , IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_X1 , reg_IntMulExt_17U_16U_33U_o_mul_1_itm_X9 , nouse_zy1  } ),
    .a_C ( {  IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_C0 [7] , IntShiftRight_25U_5U_9U_1_mbits_fixed_mux_nl_C1 , reg_IntMulExt_17U_16U_33U_o_mul_1_itm_C9 , nouse_zy2  } ),
