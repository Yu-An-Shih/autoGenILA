; SMT-LIBv2 description generated by Yosys 0.8+598 (git sha1 91128508, gcc 7.4.0-1ubuntu1~18.04.1 -fPIC -Os)
; yosys-smt2-stdt
; yosys-smt2-module wrapper
(declare-datatype |wrapper_s| ((|wrapper_mk|
  (|wrapper_is| Bool)
  (|wrapper#0| Bool) ; \XRAM_EQ_
  (|wrapper#1| (_ BitVec 2)) ; \__ILA_I_cmd
  (|wrapper#2| (_ BitVec 16)) ; \__ILA_I_cmdaddr
  (|wrapper#3| (_ BitVec 8)) ; \__ILA_I_cmddata
  (|wrapper#4| (_ BitVec 16)) ; \__ILA_SO_aes_address
  (|wrapper#5| (_ BitVec 128)) ; \__ILA_SO_aes_counter
  (|wrapper#6| (_ BitVec 128)) ; \__ILA_SO_aes_key
  (|wrapper#7| (_ BitVec 16)) ; \__ILA_SO_aes_length
  (|wrapper#8| (_ BitVec 2)) ; \__ILA_SO_aes_status
  (|wrapper#9| (_ BitVec 128)) ; \__ILA_SO_blk_cnt
  (|wrapper#10| (_ BitVec 4)) ; \__ILA_SO_byte_cnt
  (|wrapper#11| (_ BitVec 128)) ; \__ILA_SO_enc_data
  (|wrapper#12| (_ BitVec 8)) ; \__ILA_SO_outdata
  (|wrapper#13| (_ BitVec 128)) ; \__ILA_SO_rd_data
  (|wrapper#14| (_ BitVec 16)) ; \m1.aes_reg_opaddr_i.reg_out
  (|wrapper#15| (_ BitVec 128)) ; \m1.block_counter
  (|wrapper#17| (_ BitVec 4)) ; \m1.byte_counter
  (|wrapper#19| (_ BitVec 8)) ; \m1.xram_data_in
  (|wrapper#20| (_ BitVec 2)) ; \m1.aes_reg_state
  (|wrapper#26| (_ BitVec 1)) ; \__VLG_I_xram_ack
  (|wrapper#28| (_ BitVec 128)) ; \m1.encrypted_data_buf
  (|wrapper#61| Bool) ; \__STARTED__
  (|wrapper#62| Bool) ; \__START__
  (|wrapper#63| Bool) ; \__VLG_I_stb
  (|wrapper#64| Bool) ; \__VLG_I_wr
  (|wrapper#69| (_ BitVec 128)) ; \m1.aes_reg_ctr_i.reg_out
  (|wrapper#73| (_ BitVec 5)) ; \m1.aes_time_counter
  (|wrapper#79| (_ BitVec 16)) ; \m1.operated_bytes_count
  (|wrapper#82| (_ BitVec 128)) ; \m1.uaes_ctr
  (|wrapper#110| (_ BitVec 16)) ; \m1.aes_reg_oplen_i.reg_out
  (|wrapper#135| (_ BitVec 128)) ; \m1.aes_reg_key0_i.reg_out
  (|wrapper#136| Bool) ; \clk
  (|wrapper#194| (_ BitVec 128)) ; \m1.aes_128_i.out_reg
  (|wrapper#231| Bool) ; \rst
  (|wrapper#290| (_ BitVec 128)) ; \m1.mem_data_buf
  (|wrapper#327| (_ BitVec 8)) ; \mi0_ila_r_rand_input
  (|wrapper#328| Bool) ; \mi0_read_assume_true
  (|wrapper#329| (_ BitVec 8)) ; \mi0_vlg_r_rand_input
)))
; yosys-smt2-wire XRAM_EQ_ 1
(define-fun |wrapper_n XRAM_EQ_| ((state |wrapper_s|)) Bool (|wrapper#0| state))
; yosys-smt2-input __ILA_I_cmd 2
; yosys-smt2-wire __ILA_I_cmd 2
(define-fun |wrapper_n __ILA_I_cmd| ((state |wrapper_s|)) (_ BitVec 2) (|wrapper#1| state))
; yosys-smt2-input __ILA_I_cmdaddr 16
; yosys-smt2-wire __ILA_I_cmdaddr 16
(define-fun |wrapper_n __ILA_I_cmdaddr| ((state |wrapper_s|)) (_ BitVec 16) (|wrapper#2| state))
; yosys-smt2-input __ILA_I_cmddata 8
; yosys-smt2-wire __ILA_I_cmddata 8
(define-fun |wrapper_n __ILA_I_cmddata| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#3| state))
; yosys-smt2-output __ILA_SO_aes_address 16
; yosys-smt2-wire __ILA_SO_aes_address 16
(define-fun |wrapper_n __ILA_SO_aes_address| ((state |wrapper_s|)) (_ BitVec 16) (|wrapper#4| state))
; yosys-smt2-output __ILA_SO_aes_counter 128
; yosys-smt2-wire __ILA_SO_aes_counter 128
(define-fun |wrapper_n __ILA_SO_aes_counter| ((state |wrapper_s|)) (_ BitVec 128) (|wrapper#5| state))
; yosys-smt2-output __ILA_SO_aes_key 128
; yosys-smt2-wire __ILA_SO_aes_key 128
(define-fun |wrapper_n __ILA_SO_aes_key| ((state |wrapper_s|)) (_ BitVec 128) (|wrapper#6| state))
; yosys-smt2-output __ILA_SO_aes_length 16
; yosys-smt2-wire __ILA_SO_aes_length 16
(define-fun |wrapper_n __ILA_SO_aes_length| ((state |wrapper_s|)) (_ BitVec 16) (|wrapper#7| state))
; yosys-smt2-output __ILA_SO_aes_status 2
; yosys-smt2-wire __ILA_SO_aes_status 2
(define-fun |wrapper_n __ILA_SO_aes_status| ((state |wrapper_s|)) (_ BitVec 2) (|wrapper#8| state))
; yosys-smt2-output __ILA_SO_blk_cnt 128
; yosys-smt2-wire __ILA_SO_blk_cnt 128
(define-fun |wrapper_n __ILA_SO_blk_cnt| ((state |wrapper_s|)) (_ BitVec 128) (|wrapper#9| state))
; yosys-smt2-output __ILA_SO_byte_cnt 4
; yosys-smt2-wire __ILA_SO_byte_cnt 4
(define-fun |wrapper_n __ILA_SO_byte_cnt| ((state |wrapper_s|)) (_ BitVec 4) (|wrapper#10| state))
; yosys-smt2-output __ILA_SO_enc_data 128
; yosys-smt2-wire __ILA_SO_enc_data 128
(define-fun |wrapper_n __ILA_SO_enc_data| ((state |wrapper_s|)) (_ BitVec 128) (|wrapper#11| state))
; yosys-smt2-output __ILA_SO_outdata 8
; yosys-smt2-wire __ILA_SO_outdata 8
(define-fun |wrapper_n __ILA_SO_outdata| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#12| state))
; yosys-smt2-output __ILA_SO_rd_data 128
; yosys-smt2-wire __ILA_SO_rd_data 128
(define-fun |wrapper_n __ILA_SO_rd_data| ((state |wrapper_s|)) (_ BitVec 128) (|wrapper#13| state))
; yosys-smt2-wire __MEM_XRAM_0_raddr 16
(define-fun |wrapper#16| ((state |wrapper_s|)) (_ BitVec 16) (bvadd (|wrapper#14| state) ((_ extract 15 0) (|wrapper#15| state)))) ; $techmap\m1.$add$wrapper.v:505$105_Y
(define-fun |wrapper#18| ((state |wrapper_s|)) (_ BitVec 16) (bvadd (|wrapper#16| state) (concat #b000000000000 (|wrapper#17| state)))) ; \m1.m1__DOT__xram_addr
(define-fun |wrapper_n __MEM_XRAM_0_raddr| ((state |wrapper_s|)) (_ BitVec 16) (|wrapper#18| state))
; yosys-smt2-wire __MEM_XRAM_0_rdata 8
(define-fun |wrapper_n __MEM_XRAM_0_rdata| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#19| state))
; yosys-smt2-wire __MEM_XRAM_0_ren 1
(define-fun |wrapper#21| ((state |wrapper_s|)) Bool (= (|wrapper#20| state) #b11)) ; \m1__DOT__xram_wr
(define-fun |wrapper#22| ((state |wrapper_s|)) (_ BitVec 1) (bvnot (ite (|wrapper#21| state) #b1 #b0))) ; $not$wrapper.v:202$42_Y
(define-fun |wrapper#23| ((state |wrapper_s|)) Bool (= (|wrapper#20| state) #b01)) ; \m1.aes_state_read_data
(define-fun |wrapper#24| ((state |wrapper_s|)) Bool (or  (|wrapper#23| state) false  (|wrapper#21| state) false)) ; \m1__DOT__xram_stb
(define-fun |wrapper#25| ((state |wrapper_s|)) (_ BitVec 1) (bvand (|wrapper#22| state) (ite (|wrapper#24| state) #b1 #b0))) ; $and$wrapper.v:202$43_Y
(define-fun |wrapper#27| ((state |wrapper_s|)) (_ BitVec 1) (bvand (|wrapper#25| state) (|wrapper#26| state))) ; \__MEM_XRAM_0_ren
(define-fun |wrapper_n __MEM_XRAM_0_ren| ((state |wrapper_s|)) Bool (= ((_ extract 0 0) (|wrapper#27| state)) #b1))
; yosys-smt2-wire __MEM_XRAM_0_waddr 16
(define-fun |wrapper_n __MEM_XRAM_0_waddr| ((state |wrapper_s|)) (_ BitVec 16) (|wrapper#18| state))
; yosys-smt2-wire __MEM_XRAM_0_wdata 8
(define-fun |wrapper#29| ((state |wrapper_s|)) Bool (= (|wrapper#17| state) #b1110)) ; $techmap\m1.$eq$wrapper.v:545$161_Y
(define-fun |wrapper#30| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#29| state) ((_ extract 119 112) (|wrapper#28| state)) ((_ extract 127 120) (|wrapper#28| state)))) ; $techmap\m1.$ternary$wrapper.v:624$196_Y
(define-fun |wrapper#31| ((state |wrapper_s|)) Bool (= (|wrapper#17| state) #b1101)) ; $techmap\m1.$eq$wrapper.v:544$158_Y
(define-fun |wrapper#32| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#31| state) ((_ extract 111 104) (|wrapper#28| state)) (|wrapper#30| state))) ; $techmap\m1.$ternary$wrapper.v:624$197_Y
(define-fun |wrapper#33| ((state |wrapper_s|)) Bool (= (|wrapper#17| state) #b1100)) ; $techmap\m1.$eq$wrapper.v:543$155_Y
(define-fun |wrapper#34| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#33| state) ((_ extract 103 96) (|wrapper#28| state)) (|wrapper#32| state))) ; $techmap\m1.$ternary$wrapper.v:624$198_Y
(define-fun |wrapper#35| ((state |wrapper_s|)) Bool (= (|wrapper#17| state) #b1011)) ; $techmap\m1.$eq$wrapper.v:542$152_Y
(define-fun |wrapper#36| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#35| state) ((_ extract 95 88) (|wrapper#28| state)) (|wrapper#34| state))) ; $techmap\m1.$ternary$wrapper.v:624$199_Y
(define-fun |wrapper#37| ((state |wrapper_s|)) Bool (= (|wrapper#17| state) #b1010)) ; $techmap\m1.$eq$wrapper.v:541$149_Y
(define-fun |wrapper#38| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#37| state) ((_ extract 87 80) (|wrapper#28| state)) (|wrapper#36| state))) ; $techmap\m1.$ternary$wrapper.v:624$200_Y
(define-fun |wrapper#39| ((state |wrapper_s|)) Bool (= (|wrapper#17| state) #b1001)) ; $techmap\m1.$eq$wrapper.v:540$146_Y
(define-fun |wrapper#40| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#39| state) ((_ extract 79 72) (|wrapper#28| state)) (|wrapper#38| state))) ; $techmap\m1.$ternary$wrapper.v:624$201_Y
(define-fun |wrapper#41| ((state |wrapper_s|)) Bool (= (|wrapper#17| state) #b1000)) ; $techmap\m1.$eq$wrapper.v:539$143_Y
(define-fun |wrapper#42| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#41| state) ((_ extract 71 64) (|wrapper#28| state)) (|wrapper#40| state))) ; $techmap\m1.$ternary$wrapper.v:624$202_Y
(define-fun |wrapper#43| ((state |wrapper_s|)) Bool (= (|wrapper#17| state) #b0111)) ; $techmap\m1.$eq$wrapper.v:538$140_Y
(define-fun |wrapper#44| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#43| state) ((_ extract 63 56) (|wrapper#28| state)) (|wrapper#42| state))) ; $techmap\m1.$ternary$wrapper.v:624$203_Y
(define-fun |wrapper#45| ((state |wrapper_s|)) Bool (= (|wrapper#17| state) #b0110)) ; $techmap\m1.$eq$wrapper.v:537$137_Y
(define-fun |wrapper#46| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#45| state) ((_ extract 55 48) (|wrapper#28| state)) (|wrapper#44| state))) ; $techmap\m1.$ternary$wrapper.v:624$204_Y
(define-fun |wrapper#47| ((state |wrapper_s|)) Bool (= (|wrapper#17| state) #b0101)) ; $techmap\m1.$eq$wrapper.v:536$134_Y
(define-fun |wrapper#48| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#47| state) ((_ extract 47 40) (|wrapper#28| state)) (|wrapper#46| state))) ; $techmap\m1.$ternary$wrapper.v:624$205_Y
(define-fun |wrapper#49| ((state |wrapper_s|)) Bool (= (|wrapper#17| state) #b0100)) ; $techmap\m1.$eq$wrapper.v:535$131_Y
(define-fun |wrapper#50| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#49| state) ((_ extract 39 32) (|wrapper#28| state)) (|wrapper#48| state))) ; $techmap\m1.$ternary$wrapper.v:624$206_Y
(define-fun |wrapper#51| ((state |wrapper_s|)) Bool (= (|wrapper#17| state) #b0011)) ; $techmap\m1.$eq$wrapper.v:534$128_Y
(define-fun |wrapper#52| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#51| state) ((_ extract 31 24) (|wrapper#28| state)) (|wrapper#50| state))) ; $techmap\m1.$ternary$wrapper.v:624$207_Y
(define-fun |wrapper#53| ((state |wrapper_s|)) Bool (= (|wrapper#17| state) #b0010)) ; $techmap\m1.$eq$wrapper.v:533$125_Y
(define-fun |wrapper#54| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#53| state) ((_ extract 23 16) (|wrapper#28| state)) (|wrapper#52| state))) ; $techmap\m1.$ternary$wrapper.v:624$208_Y
(define-fun |wrapper#55| ((state |wrapper_s|)) Bool (= (|wrapper#17| state) #b0001)) ; $techmap\m1.$eq$wrapper.v:532$122_Y
(define-fun |wrapper#56| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#55| state) ((_ extract 15 8) (|wrapper#28| state)) (|wrapper#54| state))) ; $techmap\m1.$ternary$wrapper.v:624$209_Y
(define-fun |wrapper#57| ((state |wrapper_s|)) Bool (not (or  (= ((_ extract 0 0) (|wrapper#17| state)) #b1) (= ((_ extract 1 1) (|wrapper#17| state)) #b1) (= ((_ extract 2 2) (|wrapper#17| state)) #b1) (= ((_ extract 3 3) (|wrapper#17| state)) #b1)))) ; $eq$wrapper.v:191$9_Y
(define-fun |wrapper#58| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#57| state) ((_ extract 7 0) (|wrapper#28| state)) (|wrapper#56| state))) ; \m1.xram_data_out
(define-fun |wrapper_n __MEM_XRAM_0_wdata| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#58| state))
; yosys-smt2-wire __MEM_XRAM_0_wen 1
(define-fun |wrapper#59| ((state |wrapper_s|)) (_ BitVec 1) (bvand (ite (|wrapper#21| state) #b1 #b0) (ite (|wrapper#24| state) #b1 #b0))) ; $and$wrapper.v:204$45_Y
(define-fun |wrapper#60| ((state |wrapper_s|)) (_ BitVec 1) (bvand (|wrapper#59| state) (|wrapper#26| state))) ; \__MEM_XRAM_0_wen
(define-fun |wrapper_n __MEM_XRAM_0_wen| ((state |wrapper_s|)) Bool (= ((_ extract 0 0) (|wrapper#60| state)) #b1))
; yosys-smt2-input __STARTED__ 1
; yosys-smt2-wire __STARTED__ 1
(define-fun |wrapper_n __STARTED__| ((state |wrapper_s|)) Bool (|wrapper#61| state))
; yosys-smt2-input __START__ 1
; yosys-smt2-wire __START__ 1
(define-fun |wrapper_n __START__| ((state |wrapper_s|)) Bool (|wrapper#62| state))
; yosys-smt2-input __VLG_I_stb 1
; yosys-smt2-wire __VLG_I_stb 1
(define-fun |wrapper_n __VLG_I_stb| ((state |wrapper_s|)) Bool (|wrapper#63| state))
; yosys-smt2-input __VLG_I_wr 1
; yosys-smt2-wire __VLG_I_wr 1
(define-fun |wrapper_n __VLG_I_wr| ((state |wrapper_s|)) Bool (|wrapper#64| state))
; yosys-smt2-input __VLG_I_xram_ack 1
; yosys-smt2-wire __VLG_I_xram_ack 1
(define-fun |wrapper_n __VLG_I_xram_ack| ((state |wrapper_s|)) Bool (= ((_ extract 0 0) (|wrapper#26| state)) #b1))
; yosys-smt2-output __VLG_O_ack 1
; yosys-smt2-wire __VLG_O_ack 1
(define-fun |wrapper#65| ((state |wrapper_s|)) Bool (bvuge (|wrapper#2| state) #b1111111100000000)) ; $techmap\m1.$ge$wrapper.v:377$61_Y
(define-fun |wrapper#66| ((state |wrapper_s|)) Bool (bvult (|wrapper#2| state) #b1111111100110000)) ; $techmap\m1.$lt$wrapper.v:377$62_Y
(define-fun |wrapper#67| ((state |wrapper_s|)) Bool (and (or  (|wrapper#65| state) false) (or  (|wrapper#66| state) false))) ; \m1.in_addr_range
(define-fun |wrapper#68| ((state |wrapper_s|)) Bool (and (or  (|wrapper#63| state) false) (or  (|wrapper#67| state) false))) ; \m1.ack
(define-fun |wrapper_n __VLG_O_ack| ((state |wrapper_s|)) Bool (|wrapper#68| state))
; yosys-smt2-output __VLG_O_xram_addr 16
; yosys-smt2-wire __VLG_O_xram_addr 16
(define-fun |wrapper_n __VLG_O_xram_addr| ((state |wrapper_s|)) (_ BitVec 16) (|wrapper#18| state))
; yosys-smt2-output __VLG_O_xram_stb 1
; yosys-smt2-wire __VLG_O_xram_stb 1
(define-fun |wrapper_n __VLG_O_xram_stb| ((state |wrapper_s|)) Bool (|wrapper#24| state))
; yosys-smt2-output __VLG_O_xram_wr 1
; yosys-smt2-wire __VLG_O_xram_wr 1
(define-fun |wrapper_n __VLG_O_xram_wr| ((state |wrapper_s|)) Bool (|wrapper#21| state))
; yosys-smt2-output __all_assert_wire__ 1
; yosys-smt2-wire __all_assert_wire__ 1
(define-fun |wrapper#70| ((state |wrapper_s|)) Bool (= (|wrapper#69| state) #b00001000000000100000010000010000000000000000110000001010000000000000000000000000000000000011000000000000000000000000100000010000)) ; $eq$wrapper.v:187$1_Y
(define-fun |wrapper#71| ((state |wrapper_s|)) Bool (= (|wrapper#20| state) #b10)) ; \m1.aes_state_operate
(define-fun |wrapper#72| ((state |wrapper_s|)) Bool (and (or  (|wrapper#70| state) false) (or  (|wrapper#71| state) false))) ; $logic_and$wrapper.v:189$4_Y
(define-fun |wrapper#74| ((state |wrapper_s|)) Bool (= (|wrapper#73| state) #b01101)) ; $eq$wrapper.v:189$5_Y
(define-fun |wrapper#75| ((state |wrapper_s|)) Bool (and (or  (|wrapper#72| state) false) (or  (|wrapper#74| state) false))) ; $logic_and$wrapper.v:190$6_Y
(define-fun |wrapper#76| ((state |wrapper_s|)) Bool (= (|wrapper#15| state) #b00101000000000010110001010100010111110001110001110110000000000000000000000000000000000000000000001110111010101101100010000010000)) ; $eq$wrapper.v:190$7_Y
(define-fun |wrapper#77| ((state |wrapper_s|)) Bool (and (or  (|wrapper#75| state) false) (or  (|wrapper#76| state) false))) ; $logic_and$wrapper.v:191$8_Y
(define-fun |wrapper#78| ((state |wrapper_s|)) Bool (and (or  (|wrapper#77| state) false) (or  (|wrapper#57| state) false))) ; $logic_and$wrapper.v:192$10_Y
(define-fun |wrapper#80| ((state |wrapper_s|)) Bool (= (|wrapper#79| state) #b1100010000010000)) ; $eq$wrapper.v:192$11_Y
(define-fun |wrapper#81| ((state |wrapper_s|)) Bool (and (or  (|wrapper#78| state) false) (or  (|wrapper#80| state) false))) ; $logic_and$wrapper.v:193$12_Y
(define-fun |wrapper#83| ((state |wrapper_s|)) Bool (= (|wrapper#82| state) #b00000000000000001111111001111111111100000111111111110101000000001000001110100000011010101101111111101101111101111111111111010000)) ; $eq$wrapper.v:193$13_Y
(define-fun |wrapper#84| ((state |wrapper_s|)) Bool (and (or  (|wrapper#81| state) false) (or  (|wrapper#83| state) false))) ; $logic_and$wrapper.v:193$14_Y
(define-fun |wrapper#85| ((state |wrapper_s|)) (_ BitVec 1) (bvnot (ite (|wrapper#84| state) #b1 #b0))) ; \cex_nonreachable_assert__p0__
(define-fun |wrapper_n __all_assert_wire__| ((state |wrapper_s|)) Bool (= ((_ extract 0 0) (|wrapper#85| state)) #b1))
; yosys-smt2-output __all_assume_wire__ 1
; yosys-smt2-wire __all_assume_wire__ 1
(define-fun |wrapper#86| ((state |wrapper_s|)) Bool (= (|wrapper#1| state) #b10)) ; $eq$wrapper.v:198$30_Y
(define-fun |wrapper#87| ((state |wrapper_s|)) (_ BitVec 1) (bvnot (ite (|wrapper#86| state) #b1 #b0))) ; $not$wrapper.v:198$31_Y
(define-fun |wrapper#88| ((state |wrapper_s|)) Bool (or  (= ((_ extract 0 0) (|wrapper#87| state)) #b1) false  (|wrapper#64| state) false)) ; \additional_mapping_control_assume__m5__
(define-fun |wrapper#89| ((state |wrapper_s|)) Bool (= (|wrapper#1| state) #b01)) ; $eq$wrapper.v:199$34_Y
(define-fun |wrapper#90| ((state |wrapper_s|)) (_ BitVec 1) (bvnot (ite (|wrapper#89| state) #b1 #b0))) ; $not$wrapper.v:199$35_Y
(define-fun |wrapper#91| ((state |wrapper_s|)) (_ BitVec 1) (bvnot (ite (|wrapper#64| state) #b1 #b0))) ; $eq$wrapper.v:199$36_Y
(define-fun |wrapper#92| ((state |wrapper_s|)) Bool (or  (= ((_ extract 0 0) (|wrapper#90| state)) #b1) false  (= ((_ extract 0 0) (|wrapper#91| state)) #b1) false)) ; \additional_mapping_control_assume__m6__
(define-fun |wrapper#93| ((state |wrapper_s|)) Bool (and (or  (|wrapper#88| state) false) (or  (|wrapper#92| state) false))) ; $logic_and$wrapper.v:258$55_Y
(define-fun |wrapper#94| ((state |wrapper_s|)) (_ BitVec 1) (bvnot (ite (|wrapper#71| state) #b1 #b0))) ; $not$wrapper.v:197$27_Y
(define-fun |wrapper#95| ((state |wrapper_s|)) (_ BitVec 1) (bvnot (|wrapper#26| state))) ; $eq$wrapper.v:200$40_Y
(define-fun |wrapper#96| ((state |wrapper_s|)) Bool (or  (= ((_ extract 0 0) (|wrapper#94| state)) #b1) false  (= ((_ extract 0 0) (|wrapper#95| state)) #b1) false)) ; \additional_mapping_control_assume__m7__
(define-fun |wrapper#97| ((state |wrapper_s|)) Bool (and (or  (|wrapper#93| state) false) (or  (|wrapper#96| state) false))) ; $logic_and$wrapper.v:258$56_Y
(define-fun |wrapper#98| ((state |wrapper_s|)) Bool (= (|wrapper#17| state) #b1111)) ; $techmap\m1.$eq$wrapper.v:499$100_Y
(define-fun |wrapper#99| ((state |wrapper_s|)) Bool (and (or  (|wrapper#98| state) false) (or  (= ((_ extract 0 0) (|wrapper#26| state)) #b1) false))) ; \m1.last_byte_acked
(define-fun |wrapper#100| ((state |wrapper_s|)) (_ BitVec 2) (ite (|wrapper#99| state) #b00 #b11)) ; $techmap\m1.$ternary$wrapper.v:517$112_Y
(define-fun |wrapper#101| ((state |wrapper_s|)) Bool (and (or  (|wrapper#99| state) false) (or  (|wrapper#21| state) false))) ; $techmap\m1.$logic_and$wrapper.v:481$87_Y
(define-fun |wrapper#102| ((state |wrapper_s|)) (_ BitVec 16) (bvadd (|wrapper#79| state) #b0000000000010000)) ; $techmap\m1.$add$wrapper.v:481$88_Y
(define-fun |wrapper#103| ((state |wrapper_s|)) (_ BitVec 16) (ite (|wrapper#101| state) (|wrapper#102| state) (|wrapper#79| state))) ; $techmap\m1.$ternary$wrapper.v:482$90_Y [15:0]
(define-fun |wrapper#104| ((state |wrapper_s|)) Bool (= (|wrapper#2| state) #b1111111100000000)) ; \m1.sel_reg_start
(define-fun |wrapper#105| ((state |wrapper_s|)) Bool (and (or  (|wrapper#104| state) false) (or  (= ((_ extract 0 0) (|wrapper#3| state)) #b1) false))) ; $techmap\m1.$logic_and$wrapper.v:409$81_Y
(define-fun |wrapper#106| ((state |wrapper_s|)) Bool (not (or  (= ((_ extract 0 0) (|wrapper#20| state)) #b1) (= ((_ extract 1 1) (|wrapper#20| state)) #b1)))) ; \m1.aes_state_idle
(define-fun |wrapper#107| ((state |wrapper_s|)) Bool (and (or  (|wrapper#64| state) false) (or  (|wrapper#106| state) false))) ; \m1.wren
(define-fun |wrapper#108| ((state |wrapper_s|)) Bool (and (or  (|wrapper#105| state) false) (or  (|wrapper#107| state) false))) ; \m1.reset_byte_counter
(define-fun |wrapper#109| ((state |wrapper_s|)) (_ BitVec 16) (ite (|wrapper#108| state) #b0000000000000000 (|wrapper#103| state))) ; \m1.operated_bytes_count_next
(define-fun |wrapper#111| ((state |wrapper_s|)) Bool (bvult (|wrapper#109| state) (|wrapper#110| state))) ; $techmap\m1.$lt$wrapper.v:502$103_Y
(define-fun |wrapper#112| ((state |wrapper_s|)) Bool (and (or  (|wrapper#101| state) false) (or  (|wrapper#111| state) false))) ; \m1.more_blocks
(define-fun |wrapper#113| ((state |wrapper_s|)) Bool (and (or  (|wrapper#99| state) false) (or  (|wrapper#112| state) false))) ; $techmap\m1.$logic_and$wrapper.v:515$111_Y
(define-fun |wrapper#114| ((state |wrapper_s|)) (_ BitVec 2) (ite (|wrapper#113| state) #b01 (|wrapper#100| state))) ; \m1.aes_reg_state_next_write_data
(define-fun |wrapper#115| ((state |wrapper_s|)) (_ BitVec 2) (ite (|wrapper#21| state) (|wrapper#114| state) #b00)) ; $techmap\m1.$ternary$wrapper.v:524$114_Y
(define-fun |wrapper#116| ((state |wrapper_s|)) Bool (bvuge (|wrapper#73| state) #b01010)) ; \m1__DOT__aes_time_enough
(define-fun |wrapper#117| ((state |wrapper_s|)) (_ BitVec 2) (ite (|wrapper#71| state) (concat #b1 (ite (|wrapper#116| state) #b1 #b0)) (|wrapper#115| state))) ; $techmap\m1.$ternary$wrapper.v:524$115_Y
(define-fun |wrapper#118| ((state |wrapper_s|)) (_ BitVec 2) (ite (|wrapper#99| state) #b10 #b01)) ; \m1.aes_reg_state_next_read_data
(define-fun |wrapper#119| ((state |wrapper_s|)) (_ BitVec 2) (ite (|wrapper#23| state) (|wrapper#118| state) (|wrapper#117| state))) ; $techmap\m1.$ternary$wrapper.v:524$116_Y
(define-fun |wrapper#120| ((state |wrapper_s|)) (_ BitVec 2) (ite (|wrapper#106| state) (concat #b0 (ite (|wrapper#108| state) #b1 #b0)) (|wrapper#119| state))) ; \m1.aes_reg_state_next
(define-fun |wrapper#121| ((state |wrapper_s|)) Bool (distinct (|wrapper#20| state) (|wrapper#120| state))) ; \m1__DOT__aes_step
(define-fun |wrapper#122| ((state |wrapper_s|)) Bool (and (or  (|wrapper#121| state) false) (or  (|wrapper#71| state) false))) ; $logic_and$wrapper.v:194$17_Y
(define-fun |wrapper#123| ((state |wrapper_s|)) (_ BitVec 1) (bvnot (ite (|wrapper#122| state) #b1 #b0))) ; $not$wrapper.v:194$18_Y
(define-fun |wrapper#124| ((state |wrapper_s|)) Bool (or  (= ((_ extract 0 0) (|wrapper#123| state)) #b1) false  (|wrapper#57| state) false)) ; \invariant_assume__m1__
(define-fun |wrapper#125| ((state |wrapper_s|)) Bool (and (or  (|wrapper#97| state) false) (or  (|wrapper#124| state) false))) ; $logic_and$wrapper.v:258$57_Y
(define-fun |wrapper#126| ((state |wrapper_s|)) Bool (or  (= ((_ extract 0 0) (|wrapper#20| state)) #b1) (= ((_ extract 1 1) (|wrapper#20| state)) #b1))) ; $ne$wrapper.v:195$21_Y
(define-fun |wrapper#127| ((state |wrapper_s|)) (_ BitVec 1) (bvnot (ite (|wrapper#126| state) #b1 #b0))) ; $not$wrapper.v:195$22_Y
(define-fun |wrapper#128| ((state |wrapper_s|)) Bool (= (|wrapper#79| state) ((_ extract 15 0) (|wrapper#15| state)))) ; $eq$wrapper.v:195$23_Y
(define-fun |wrapper#129| ((state |wrapper_s|)) Bool (or  (= ((_ extract 0 0) (|wrapper#127| state)) #b1) false  (|wrapper#128| state) false)) ; \invariant_assume__m2__
(define-fun |wrapper#130| ((state |wrapper_s|)) Bool (and (or  (|wrapper#125| state) false) (or  (|wrapper#129| state) false))) ; $logic_and$wrapper.v:258$58_Y
(define-fun |wrapper#131| ((state |wrapper_s|)) Bool (not (or  (= ((_ extract 0 0) (|wrapper#15| state)) #b1) (= ((_ extract 1 1) (|wrapper#15| state)) #b1) (= ((_ extract 2 2) (|wrapper#15| state)) #b1) (= ((_ extract 3 3) (|wrapper#15| state)) #b1)))) ; \invariant_assume__m3__
(define-fun |wrapper#132| ((state |wrapper_s|)) Bool (and (or  (|wrapper#130| state) false) (or  (|wrapper#131| state) false))) ; $logic_and$wrapper.v:258$59_Y
(define-fun |wrapper#133| ((state |wrapper_s|)) Bool (or  (= ((_ extract 0 0) (|wrapper#94| state)) #b1) false  (|wrapper#116| state) false)) ; \invariant_assume__m4__
(define-fun |wrapper#134| ((state |wrapper_s|)) Bool (and (or  (|wrapper#132| state) false) (or  (|wrapper#133| state) false))) ; \__all_assume_wire__
(define-fun |wrapper_n __all_assume_wire__| ((state |wrapper_s|)) Bool (|wrapper#134| state))
; yosys-smt2-output additional_mapping_control_assume__m5__ 1
; yosys-smt2-wire additional_mapping_control_assume__m5__ 1
(define-fun |wrapper_n additional_mapping_control_assume__m5__| ((state |wrapper_s|)) Bool (|wrapper#88| state))
; yosys-smt2-output additional_mapping_control_assume__m6__ 1
; yosys-smt2-wire additional_mapping_control_assume__m6__ 1
(define-fun |wrapper_n additional_mapping_control_assume__m6__| ((state |wrapper_s|)) Bool (|wrapper#92| state))
; yosys-smt2-output additional_mapping_control_assume__m7__ 1
; yosys-smt2-wire additional_mapping_control_assume__m7__ 1
(define-fun |wrapper_n additional_mapping_control_assume__m7__| ((state |wrapper_s|)) Bool (|wrapper#96| state))
; yosys-smt2-output aes_addr 16
; yosys-smt2-wire aes_addr 16
(define-fun |wrapper_n aes_addr| ((state |wrapper_s|)) (_ BitVec 16) (|wrapper#14| state))
; yosys-smt2-output aes_ctr 128
; yosys-smt2-wire aes_ctr 128
(define-fun |wrapper_n aes_ctr| ((state |wrapper_s|)) (_ BitVec 128) (|wrapper#69| state))
; yosys-smt2-output aes_key0 128
; yosys-smt2-wire aes_key0 128
(define-fun |wrapper_n aes_key0| ((state |wrapper_s|)) (_ BitVec 128) (|wrapper#135| state))
; yosys-smt2-output aes_len 16
; yosys-smt2-wire aes_len 16
(define-fun |wrapper_n aes_len| ((state |wrapper_s|)) (_ BitVec 16) (|wrapper#110| state))
; yosys-smt2-output aes_state 2
; yosys-smt2-wire aes_state 2
(define-fun |wrapper_n aes_state| ((state |wrapper_s|)) (_ BitVec 2) (|wrapper#20| state))
; yosys-smt2-output aes_step 1
; yosys-smt2-wire aes_step 1
(define-fun |wrapper_n aes_step| ((state |wrapper_s|)) Bool (|wrapper#121| state))
; yosys-smt2-output cex_nonreachable_assert__p0__ 1
; yosys-smt2-wire cex_nonreachable_assert__p0__ 1
(define-fun |wrapper_n cex_nonreachable_assert__p0__| ((state |wrapper_s|)) Bool (= ((_ extract 0 0) (|wrapper#85| state)) #b1))
; yosys-smt2-input clk 1
; yosys-smt2-wire clk 1
; yosys-smt2-clock clk posedge
(define-fun |wrapper_n clk| ((state |wrapper_s|)) Bool (|wrapper#136| state))
; yosys-smt2-output data_out 8
; yosys-smt2-wire data_out 8
(define-fun |wrapper#137| ((state |wrapper_s|)) Bool (= ((_ extract 3 0) (|wrapper#2| state)) #b1110)) ; $techmap\m1.aes_reg_ctr_i.$eq$wrapper.v:748$268_Y
(define-fun |wrapper#138| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#137| state) ((_ extract 119 112) (|wrapper#135| state)) ((_ extract 127 120) (|wrapper#135| state)))) ; $techmap\m1.aes_reg_key0_i.$ternary$wrapper.v:784$304_Y
(define-fun |wrapper#139| ((state |wrapper_s|)) Bool (= ((_ extract 3 0) (|wrapper#2| state)) #b1101)) ; $techmap\m1.aes_reg_ctr_i.$eq$wrapper.v:747$265_Y
(define-fun |wrapper#140| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#139| state) ((_ extract 111 104) (|wrapper#135| state)) (|wrapper#138| state))) ; $techmap\m1.aes_reg_key0_i.$ternary$wrapper.v:784$305_Y
(define-fun |wrapper#141| ((state |wrapper_s|)) Bool (= ((_ extract 3 0) (|wrapper#2| state)) #b1100)) ; $techmap\m1.aes_reg_ctr_i.$eq$wrapper.v:746$262_Y
(define-fun |wrapper#142| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#141| state) ((_ extract 103 96) (|wrapper#135| state)) (|wrapper#140| state))) ; $techmap\m1.aes_reg_key0_i.$ternary$wrapper.v:784$306_Y
(define-fun |wrapper#143| ((state |wrapper_s|)) Bool (= ((_ extract 3 0) (|wrapper#2| state)) #b1011)) ; $techmap\m1.aes_reg_ctr_i.$eq$wrapper.v:745$259_Y
(define-fun |wrapper#144| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#143| state) ((_ extract 95 88) (|wrapper#135| state)) (|wrapper#142| state))) ; $techmap\m1.aes_reg_key0_i.$ternary$wrapper.v:784$307_Y
(define-fun |wrapper#145| ((state |wrapper_s|)) Bool (= ((_ extract 3 0) (|wrapper#2| state)) #b1010)) ; $techmap\m1.aes_reg_ctr_i.$eq$wrapper.v:744$256_Y
(define-fun |wrapper#146| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#145| state) ((_ extract 87 80) (|wrapper#135| state)) (|wrapper#144| state))) ; $techmap\m1.aes_reg_key0_i.$ternary$wrapper.v:784$308_Y
(define-fun |wrapper#147| ((state |wrapper_s|)) Bool (= ((_ extract 3 0) (|wrapper#2| state)) #b1001)) ; $techmap\m1.aes_reg_ctr_i.$eq$wrapper.v:743$253_Y
(define-fun |wrapper#148| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#147| state) ((_ extract 79 72) (|wrapper#135| state)) (|wrapper#146| state))) ; $techmap\m1.aes_reg_key0_i.$ternary$wrapper.v:784$309_Y
(define-fun |wrapper#149| ((state |wrapper_s|)) Bool (= ((_ extract 3 0) (|wrapper#2| state)) #b1000)) ; $techmap\m1.aes_reg_ctr_i.$eq$wrapper.v:742$250_Y
(define-fun |wrapper#150| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#149| state) ((_ extract 71 64) (|wrapper#135| state)) (|wrapper#148| state))) ; $techmap\m1.aes_reg_key0_i.$ternary$wrapper.v:784$310_Y
(define-fun |wrapper#151| ((state |wrapper_s|)) Bool (= ((_ extract 3 0) (|wrapper#2| state)) #b0111)) ; $techmap\m1.aes_reg_ctr_i.$eq$wrapper.v:741$247_Y
(define-fun |wrapper#152| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#151| state) ((_ extract 63 56) (|wrapper#135| state)) (|wrapper#150| state))) ; $techmap\m1.aes_reg_key0_i.$ternary$wrapper.v:784$311_Y
(define-fun |wrapper#153| ((state |wrapper_s|)) Bool (= ((_ extract 3 0) (|wrapper#2| state)) #b0110)) ; $techmap\m1.aes_reg_ctr_i.$eq$wrapper.v:740$244_Y
(define-fun |wrapper#154| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#153| state) ((_ extract 55 48) (|wrapper#135| state)) (|wrapper#152| state))) ; $techmap\m1.aes_reg_key0_i.$ternary$wrapper.v:784$312_Y
(define-fun |wrapper#155| ((state |wrapper_s|)) Bool (= ((_ extract 3 0) (|wrapper#2| state)) #b0101)) ; $techmap\m1.aes_reg_ctr_i.$eq$wrapper.v:739$241_Y
(define-fun |wrapper#156| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#155| state) ((_ extract 47 40) (|wrapper#135| state)) (|wrapper#154| state))) ; $techmap\m1.aes_reg_key0_i.$ternary$wrapper.v:784$313_Y
(define-fun |wrapper#157| ((state |wrapper_s|)) Bool (= ((_ extract 3 0) (|wrapper#2| state)) #b0100)) ; $techmap\m1.aes_reg_ctr_i.$eq$wrapper.v:738$238_Y
(define-fun |wrapper#158| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#157| state) ((_ extract 39 32) (|wrapper#135| state)) (|wrapper#156| state))) ; $techmap\m1.aes_reg_key0_i.$ternary$wrapper.v:784$314_Y
(define-fun |wrapper#159| ((state |wrapper_s|)) Bool (= ((_ extract 3 0) (|wrapper#2| state)) #b0011)) ; $techmap\m1.aes_reg_ctr_i.$eq$wrapper.v:737$235_Y
(define-fun |wrapper#160| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#159| state) ((_ extract 31 24) (|wrapper#135| state)) (|wrapper#158| state))) ; $techmap\m1.aes_reg_key0_i.$ternary$wrapper.v:784$315_Y
(define-fun |wrapper#161| ((state |wrapper_s|)) Bool (= ((_ extract 3 0) (|wrapper#2| state)) #b0010)) ; $techmap\m1.aes_reg_ctr_i.$eq$wrapper.v:736$232_Y
(define-fun |wrapper#162| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#161| state) ((_ extract 23 16) (|wrapper#135| state)) (|wrapper#160| state))) ; $techmap\m1.aes_reg_key0_i.$ternary$wrapper.v:784$316_Y
(define-fun |wrapper#163| ((state |wrapper_s|)) Bool (= ((_ extract 3 0) (|wrapper#2| state)) #b0001)) ; $techmap\m1.aes_reg_ctr_i.$eq$wrapper.v:735$229_Y
(define-fun |wrapper#164| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#163| state) ((_ extract 15 8) (|wrapper#135| state)) (|wrapper#162| state))) ; $techmap\m1.aes_reg_key0_i.$ternary$wrapper.v:784$317_Y
(define-fun |wrapper#165| ((state |wrapper_s|)) Bool (not (or  (= ((_ extract 0 0) (|wrapper#2| state)) #b1) (= ((_ extract 1 1) (|wrapper#2| state)) #b1) (= ((_ extract 2 2) (|wrapper#2| state)) #b1) (= ((_ extract 3 3) (|wrapper#2| state)) #b1)))) ; $techmap\m1.aes_reg_ctr_i.$eq$wrapper.v:734$226_Y
(define-fun |wrapper#166| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#165| state) ((_ extract 7 0) (|wrapper#135| state)) (|wrapper#164| state))) ; \m1.aes_key0_dataout
(define-fun |wrapper#167| ((state |wrapper_s|)) Bool (= ((_ extract 15 4) (|wrapper#2| state)) #b111111110001)) ; \m1.aes_reg_key0_i.en
(define-fun |wrapper#168| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#167| state) (|wrapper#166| state) #b00000000)) ; $techmap\m1.$ternary$wrapper.v:397$71_Y
(define-fun |wrapper#169| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#137| state) ((_ extract 119 112) (|wrapper#69| state)) ((_ extract 127 120) (|wrapper#69| state)))) ; $techmap\m1.aes_reg_ctr_i.$ternary$wrapper.v:784$304_Y
(define-fun |wrapper#170| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#139| state) ((_ extract 111 104) (|wrapper#69| state)) (|wrapper#169| state))) ; $techmap\m1.aes_reg_ctr_i.$ternary$wrapper.v:784$305_Y
(define-fun |wrapper#171| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#141| state) ((_ extract 103 96) (|wrapper#69| state)) (|wrapper#170| state))) ; $techmap\m1.aes_reg_ctr_i.$ternary$wrapper.v:784$306_Y
(define-fun |wrapper#172| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#143| state) ((_ extract 95 88) (|wrapper#69| state)) (|wrapper#171| state))) ; $techmap\m1.aes_reg_ctr_i.$ternary$wrapper.v:784$307_Y
(define-fun |wrapper#173| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#145| state) ((_ extract 87 80) (|wrapper#69| state)) (|wrapper#172| state))) ; $techmap\m1.aes_reg_ctr_i.$ternary$wrapper.v:784$308_Y
(define-fun |wrapper#174| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#147| state) ((_ extract 79 72) (|wrapper#69| state)) (|wrapper#173| state))) ; $techmap\m1.aes_reg_ctr_i.$ternary$wrapper.v:784$309_Y
(define-fun |wrapper#175| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#149| state) ((_ extract 71 64) (|wrapper#69| state)) (|wrapper#174| state))) ; $techmap\m1.aes_reg_ctr_i.$ternary$wrapper.v:784$310_Y
(define-fun |wrapper#176| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#151| state) ((_ extract 63 56) (|wrapper#69| state)) (|wrapper#175| state))) ; $techmap\m1.aes_reg_ctr_i.$ternary$wrapper.v:784$311_Y
(define-fun |wrapper#177| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#153| state) ((_ extract 55 48) (|wrapper#69| state)) (|wrapper#176| state))) ; $techmap\m1.aes_reg_ctr_i.$ternary$wrapper.v:784$312_Y
(define-fun |wrapper#178| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#155| state) ((_ extract 47 40) (|wrapper#69| state)) (|wrapper#177| state))) ; $techmap\m1.aes_reg_ctr_i.$ternary$wrapper.v:784$313_Y
(define-fun |wrapper#179| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#157| state) ((_ extract 39 32) (|wrapper#69| state)) (|wrapper#178| state))) ; $techmap\m1.aes_reg_ctr_i.$ternary$wrapper.v:784$314_Y
(define-fun |wrapper#180| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#159| state) ((_ extract 31 24) (|wrapper#69| state)) (|wrapper#179| state))) ; $techmap\m1.aes_reg_ctr_i.$ternary$wrapper.v:784$315_Y
(define-fun |wrapper#181| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#161| state) ((_ extract 23 16) (|wrapper#69| state)) (|wrapper#180| state))) ; $techmap\m1.aes_reg_ctr_i.$ternary$wrapper.v:784$316_Y
(define-fun |wrapper#182| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#163| state) ((_ extract 15 8) (|wrapper#69| state)) (|wrapper#181| state))) ; $techmap\m1.aes_reg_ctr_i.$ternary$wrapper.v:784$317_Y
(define-fun |wrapper#183| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#165| state) ((_ extract 7 0) (|wrapper#69| state)) (|wrapper#182| state))) ; \m1.aes_ctr_dataout
(define-fun |wrapper#184| ((state |wrapper_s|)) Bool (= ((_ extract 15 4) (|wrapper#2| state)) #b111111110010)) ; \m1.aes_reg_ctr_i.en
(define-fun |wrapper#185| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#184| state) (|wrapper#183| state) (|wrapper#168| state))) ; $techmap\m1.$ternary$wrapper.v:397$72_Y
(define-fun |wrapper#186| ((state |wrapper_s|)) (_ BitVec 8) (ite (= ((_ extract 0 0) (|wrapper#2| state)) #b1) ((_ extract 15 8) (|wrapper#110| state)) ((_ extract 7 0) (|wrapper#110| state)))) ; \m1.aes_len_dataout
(define-fun |wrapper#187| ((state |wrapper_s|)) Bool (= ((_ extract 15 1) (|wrapper#2| state)) #b111111110000010)) ; \m1.aes_reg_oplen_i.en
(define-fun |wrapper#188| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#187| state) (|wrapper#186| state) (|wrapper#185| state))) ; $techmap\m1.$ternary$wrapper.v:397$73_Y
(define-fun |wrapper#189| ((state |wrapper_s|)) (_ BitVec 8) (ite (= ((_ extract 0 0) (|wrapper#2| state)) #b1) ((_ extract 15 8) (|wrapper#14| state)) ((_ extract 7 0) (|wrapper#14| state)))) ; \m1.aes_addr_dataout
(define-fun |wrapper#190| ((state |wrapper_s|)) Bool (= ((_ extract 15 1) (|wrapper#2| state)) #b111111110000001)) ; \m1.aes_reg_opaddr_i.en
(define-fun |wrapper#191| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#190| state) (|wrapper#189| state) (|wrapper#188| state))) ; $techmap\m1.$ternary$wrapper.v:397$74_Y
(define-fun |wrapper#192| ((state |wrapper_s|)) Bool (= (|wrapper#2| state) #b1111111100000001)) ; \m1.sel_reg_state
(define-fun |wrapper#193| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#192| state) (concat #b000000 (|wrapper#20| state)) (|wrapper#191| state))) ; \m1.data_out
(define-fun |wrapper_n data_out| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#193| state))
; yosys-smt2-output invariant_assume__m1__ 1
; yosys-smt2-wire invariant_assume__m1__ 1
(define-fun |wrapper_n invariant_assume__m1__| ((state |wrapper_s|)) Bool (|wrapper#124| state))
; yosys-smt2-output invariant_assume__m2__ 1
; yosys-smt2-wire invariant_assume__m2__ 1
(define-fun |wrapper_n invariant_assume__m2__| ((state |wrapper_s|)) Bool (|wrapper#129| state))
; yosys-smt2-output invariant_assume__m3__ 1
; yosys-smt2-wire invariant_assume__m3__ 1
(define-fun |wrapper_n invariant_assume__m3__| ((state |wrapper_s|)) Bool (|wrapper#131| state))
; yosys-smt2-output invariant_assume__m4__ 1
; yosys-smt2-wire invariant_assume__m4__ 1
(define-fun |wrapper_n invariant_assume__m4__| ((state |wrapper_s|)) Bool (|wrapper#133| state))
; yosys-smt2-wire m1.ack 1
(define-fun |wrapper_n m1.ack| ((state |wrapper_s|)) Bool (|wrapper#68| state))
; yosys-smt2-wire m1.addr 16
(define-fun |wrapper_n m1.addr| ((state |wrapper_s|)) (_ BitVec 16) (|wrapper#2| state))
; yosys-smt2-wire m1.aes_128_i.clk 1
; yosys-smt2-clock m1.aes_128_i.clk posedge
(define-fun |wrapper_n m1.aes_128_i.clk| ((state |wrapper_s|)) Bool (|wrapper#136| state))
; yosys-smt2-wire m1.aes_128_i.key 128
(define-fun |wrapper_n m1.aes_128_i.key| ((state |wrapper_s|)) (_ BitVec 128) (|wrapper#135| state))
; yosys-smt2-wire m1.aes_128_i.out 128
(define-fun |wrapper#195| ((state |wrapper_s|)) (_ BitVec 128) (bvnot (|wrapper#194| state))) ; \m1.aes_128_i.out
(define-fun |wrapper_n m1.aes_128_i.out| ((state |wrapper_s|)) (_ BitVec 128) (|wrapper#195| state))
; yosys-smt2-wire m1.aes_128_i.out_reg 128
(define-fun |wrapper_n m1.aes_128_i.out_reg| ((state |wrapper_s|)) (_ BitVec 128) (|wrapper#194| state))
; yosys-smt2-wire m1.aes_128_i.state 128
(define-fun |wrapper_n m1.aes_128_i.state| ((state |wrapper_s|)) (_ BitVec 128) (|wrapper#82| state))
; yosys-smt2-wire m1.aes_addr 16
(define-fun |wrapper_n m1.aes_addr| ((state |wrapper_s|)) (_ BitVec 16) (|wrapper#14| state))
; yosys-smt2-wire m1.aes_addr_dataout 8
(define-fun |wrapper_n m1.aes_addr_dataout| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#189| state))
; yosys-smt2-wire m1.aes_ctr 128
(define-fun |wrapper_n m1.aes_ctr| ((state |wrapper_s|)) (_ BitVec 128) (|wrapper#69| state))
; yosys-smt2-wire m1.aes_ctr_dataout 8
(define-fun |wrapper_n m1.aes_ctr_dataout| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#183| state))
; yosys-smt2-wire m1.aes_curr_key 95
(define-fun |wrapper_n m1.aes_curr_key| ((state |wrapper_s|)) (_ BitVec 95) ((_ extract 94 0) (|wrapper#135| state)))
; yosys-smt2-wire m1.aes_key0 128
(define-fun |wrapper_n m1.aes_key0| ((state |wrapper_s|)) (_ BitVec 128) (|wrapper#135| state))
; yosys-smt2-wire m1.aes_key0_dataout 8
(define-fun |wrapper_n m1.aes_key0_dataout| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#166| state))
; yosys-smt2-wire m1.aes_len 16
(define-fun |wrapper_n m1.aes_len| ((state |wrapper_s|)) (_ BitVec 16) (|wrapper#110| state))
; yosys-smt2-wire m1.aes_len_dataout 8
(define-fun |wrapper_n m1.aes_len_dataout| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#186| state))
; yosys-smt2-wire m1.aes_out 128
(define-fun |wrapper_n m1.aes_out| ((state |wrapper_s|)) (_ BitVec 128) (|wrapper#195| state))
; yosys-smt2-wire m1.aes_reg_ctr 128
(define-fun |wrapper_n m1.aes_reg_ctr| ((state |wrapper_s|)) (_ BitVec 128) (|wrapper#69| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.addr 4
(define-fun |wrapper_n m1.aes_reg_ctr_i.addr| ((state |wrapper_s|)) (_ BitVec 4) ((_ extract 3 0) (|wrapper#2| state)))
; yosys-smt2-wire m1.aes_reg_ctr_i.clk 1
; yosys-smt2-clock m1.aes_reg_ctr_i.clk posedge
(define-fun |wrapper_n m1.aes_reg_ctr_i.clk| ((state |wrapper_s|)) Bool (|wrapper#136| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.data_in 8
(define-fun |wrapper_n m1.aes_reg_ctr_i.data_in| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#3| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.data_out 8
(define-fun |wrapper_n m1.aes_reg_ctr_i.data_out| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#183| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.data_out_mux 8
(define-fun |wrapper_n m1.aes_reg_ctr_i.data_out_mux| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#183| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.en 1
(define-fun |wrapper_n m1.aes_reg_ctr_i.en| ((state |wrapper_s|)) Bool (|wrapper#184| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.m1__DOT__aes_reg_ctr_i__DOT__reg_out 128
(define-fun |wrapper_n m1.aes_reg_ctr_i.m1__DOT__aes_reg_ctr_i__DOT__reg_out| ((state |wrapper_s|)) (_ BitVec 128) (|wrapper#69| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.reg0_next 8
(define-fun |wrapper#196| ((state |wrapper_s|)) Bool (and (or  (|wrapper#184| state) false) (or  (|wrapper#107| state) false))) ; \m1.aes_reg_ctr_i.wr
(define-fun |wrapper#197| ((state |wrapper_s|)) Bool (and (or  (|wrapper#184| state) false) (or  (|wrapper#196| state) false))) ; $techmap\m1.aes_reg_ctr_i.$logic_and$wrapper.v:734$225_Y
(define-fun |wrapper#198| ((state |wrapper_s|)) Bool (and (or  (|wrapper#197| state) false) (or  (|wrapper#165| state) false))) ; \m1.aes_reg_ctr_i.wr0
(define-fun |wrapper#199| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#198| state) (|wrapper#3| state) ((_ extract 7 0) (|wrapper#69| state)))) ; \m1.aes_reg_ctr_i.reg0_next
(define-fun |wrapper_n m1.aes_reg_ctr_i.reg0_next| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#199| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.reg10_next 8
(define-fun |wrapper#200| ((state |wrapper_s|)) Bool (and (or  (|wrapper#197| state) false) (or  (|wrapper#145| state) false))) ; \m1.aes_reg_ctr_i.wr10
(define-fun |wrapper#201| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#200| state) (|wrapper#3| state) ((_ extract 87 80) (|wrapper#69| state)))) ; \m1.aes_reg_ctr_i.reg10_next
(define-fun |wrapper_n m1.aes_reg_ctr_i.reg10_next| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#201| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.reg11_next 8
(define-fun |wrapper#202| ((state |wrapper_s|)) Bool (and (or  (|wrapper#197| state) false) (or  (|wrapper#143| state) false))) ; \m1.aes_reg_ctr_i.wr11
(define-fun |wrapper#203| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#202| state) (|wrapper#3| state) ((_ extract 95 88) (|wrapper#69| state)))) ; \m1.aes_reg_ctr_i.reg11_next
(define-fun |wrapper_n m1.aes_reg_ctr_i.reg11_next| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#203| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.reg12_next 8
(define-fun |wrapper#204| ((state |wrapper_s|)) Bool (and (or  (|wrapper#197| state) false) (or  (|wrapper#141| state) false))) ; \m1.aes_reg_ctr_i.wr12
(define-fun |wrapper#205| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#204| state) (|wrapper#3| state) ((_ extract 103 96) (|wrapper#69| state)))) ; \m1.aes_reg_ctr_i.reg12_next
(define-fun |wrapper_n m1.aes_reg_ctr_i.reg12_next| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#205| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.reg13_next 8
(define-fun |wrapper#206| ((state |wrapper_s|)) Bool (and (or  (|wrapper#197| state) false) (or  (|wrapper#139| state) false))) ; \m1.aes_reg_ctr_i.wr13
(define-fun |wrapper#207| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#206| state) (|wrapper#3| state) ((_ extract 111 104) (|wrapper#69| state)))) ; \m1.aes_reg_ctr_i.reg13_next
(define-fun |wrapper_n m1.aes_reg_ctr_i.reg13_next| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#207| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.reg14_next 8
(define-fun |wrapper#208| ((state |wrapper_s|)) Bool (and (or  (|wrapper#197| state) false) (or  (|wrapper#137| state) false))) ; \m1.aes_reg_ctr_i.wr14
(define-fun |wrapper#209| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#208| state) (|wrapper#3| state) ((_ extract 119 112) (|wrapper#69| state)))) ; \m1.aes_reg_ctr_i.reg14_next
(define-fun |wrapper_n m1.aes_reg_ctr_i.reg14_next| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#209| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.reg15_next 8
(define-fun |wrapper#210| ((state |wrapper_s|)) Bool (= ((_ extract 3 0) (|wrapper#2| state)) #b1111)) ; $techmap\m1.aes_reg_ctr_i.$eq$wrapper.v:749$271_Y
(define-fun |wrapper#211| ((state |wrapper_s|)) Bool (and (or  (|wrapper#197| state) false) (or  (|wrapper#210| state) false))) ; \m1.aes_reg_ctr_i.wr15
(define-fun |wrapper#212| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#211| state) (|wrapper#3| state) ((_ extract 127 120) (|wrapper#69| state)))) ; \m1.aes_reg_ctr_i.reg15_next
(define-fun |wrapper_n m1.aes_reg_ctr_i.reg15_next| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#212| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.reg1_next 8
(define-fun |wrapper#213| ((state |wrapper_s|)) Bool (and (or  (|wrapper#197| state) false) (or  (|wrapper#163| state) false))) ; \m1.aes_reg_ctr_i.wr1
(define-fun |wrapper#214| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#213| state) (|wrapper#3| state) ((_ extract 15 8) (|wrapper#69| state)))) ; \m1.aes_reg_ctr_i.reg1_next
(define-fun |wrapper_n m1.aes_reg_ctr_i.reg1_next| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#214| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.reg2_next 8
(define-fun |wrapper#215| ((state |wrapper_s|)) Bool (and (or  (|wrapper#197| state) false) (or  (|wrapper#161| state) false))) ; \m1.aes_reg_ctr_i.wr2
(define-fun |wrapper#216| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#215| state) (|wrapper#3| state) ((_ extract 23 16) (|wrapper#69| state)))) ; \m1.aes_reg_ctr_i.reg2_next
(define-fun |wrapper_n m1.aes_reg_ctr_i.reg2_next| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#216| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.reg3_next 8
(define-fun |wrapper#217| ((state |wrapper_s|)) Bool (and (or  (|wrapper#197| state) false) (or  (|wrapper#159| state) false))) ; \m1.aes_reg_ctr_i.wr3
(define-fun |wrapper#218| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#217| state) (|wrapper#3| state) ((_ extract 31 24) (|wrapper#69| state)))) ; \m1.aes_reg_ctr_i.reg3_next
(define-fun |wrapper_n m1.aes_reg_ctr_i.reg3_next| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#218| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.reg4_next 8
(define-fun |wrapper#219| ((state |wrapper_s|)) Bool (and (or  (|wrapper#197| state) false) (or  (|wrapper#157| state) false))) ; \m1.aes_reg_ctr_i.wr4
(define-fun |wrapper#220| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#219| state) (|wrapper#3| state) ((_ extract 39 32) (|wrapper#69| state)))) ; \m1.aes_reg_ctr_i.reg4_next
(define-fun |wrapper_n m1.aes_reg_ctr_i.reg4_next| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#220| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.reg5_next 8
(define-fun |wrapper#221| ((state |wrapper_s|)) Bool (and (or  (|wrapper#197| state) false) (or  (|wrapper#155| state) false))) ; \m1.aes_reg_ctr_i.wr5
(define-fun |wrapper#222| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#221| state) (|wrapper#3| state) ((_ extract 47 40) (|wrapper#69| state)))) ; \m1.aes_reg_ctr_i.reg5_next
(define-fun |wrapper_n m1.aes_reg_ctr_i.reg5_next| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#222| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.reg6_next 8
(define-fun |wrapper#223| ((state |wrapper_s|)) Bool (and (or  (|wrapper#197| state) false) (or  (|wrapper#153| state) false))) ; \m1.aes_reg_ctr_i.wr6
(define-fun |wrapper#224| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#223| state) (|wrapper#3| state) ((_ extract 55 48) (|wrapper#69| state)))) ; \m1.aes_reg_ctr_i.reg6_next
(define-fun |wrapper_n m1.aes_reg_ctr_i.reg6_next| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#224| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.reg7_next 8
(define-fun |wrapper#225| ((state |wrapper_s|)) Bool (and (or  (|wrapper#197| state) false) (or  (|wrapper#151| state) false))) ; \m1.aes_reg_ctr_i.wr7
(define-fun |wrapper#226| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#225| state) (|wrapper#3| state) ((_ extract 63 56) (|wrapper#69| state)))) ; \m1.aes_reg_ctr_i.reg7_next
(define-fun |wrapper_n m1.aes_reg_ctr_i.reg7_next| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#226| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.reg8_next 8
(define-fun |wrapper#227| ((state |wrapper_s|)) Bool (and (or  (|wrapper#197| state) false) (or  (|wrapper#149| state) false))) ; \m1.aes_reg_ctr_i.wr8
(define-fun |wrapper#228| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#227| state) (|wrapper#3| state) ((_ extract 71 64) (|wrapper#69| state)))) ; \m1.aes_reg_ctr_i.reg8_next
(define-fun |wrapper_n m1.aes_reg_ctr_i.reg8_next| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#228| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.reg9_next 8
(define-fun |wrapper#229| ((state |wrapper_s|)) Bool (and (or  (|wrapper#197| state) false) (or  (|wrapper#147| state) false))) ; \m1.aes_reg_ctr_i.wr9
(define-fun |wrapper#230| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#229| state) (|wrapper#3| state) ((_ extract 79 72) (|wrapper#69| state)))) ; \m1.aes_reg_ctr_i.reg9_next
(define-fun |wrapper_n m1.aes_reg_ctr_i.reg9_next| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#230| state))
; yosys-smt2-register m1.aes_reg_ctr_i.reg_out 128
; yosys-smt2-wire m1.aes_reg_ctr_i.reg_out 128
(define-fun |wrapper_n m1.aes_reg_ctr_i.reg_out| ((state |wrapper_s|)) (_ BitVec 128) (|wrapper#69| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.rst 1
(define-fun |wrapper_n m1.aes_reg_ctr_i.rst| ((state |wrapper_s|)) Bool (|wrapper#231| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.wr 1
(define-fun |wrapper_n m1.aes_reg_ctr_i.wr| ((state |wrapper_s|)) Bool (|wrapper#196| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.wr0 1
(define-fun |wrapper_n m1.aes_reg_ctr_i.wr0| ((state |wrapper_s|)) Bool (|wrapper#198| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.wr1 1
(define-fun |wrapper_n m1.aes_reg_ctr_i.wr1| ((state |wrapper_s|)) Bool (|wrapper#213| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.wr10 1
(define-fun |wrapper_n m1.aes_reg_ctr_i.wr10| ((state |wrapper_s|)) Bool (|wrapper#200| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.wr11 1
(define-fun |wrapper_n m1.aes_reg_ctr_i.wr11| ((state |wrapper_s|)) Bool (|wrapper#202| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.wr12 1
(define-fun |wrapper_n m1.aes_reg_ctr_i.wr12| ((state |wrapper_s|)) Bool (|wrapper#204| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.wr13 1
(define-fun |wrapper_n m1.aes_reg_ctr_i.wr13| ((state |wrapper_s|)) Bool (|wrapper#206| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.wr14 1
(define-fun |wrapper_n m1.aes_reg_ctr_i.wr14| ((state |wrapper_s|)) Bool (|wrapper#208| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.wr15 1
(define-fun |wrapper_n m1.aes_reg_ctr_i.wr15| ((state |wrapper_s|)) Bool (|wrapper#211| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.wr2 1
(define-fun |wrapper_n m1.aes_reg_ctr_i.wr2| ((state |wrapper_s|)) Bool (|wrapper#215| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.wr3 1
(define-fun |wrapper_n m1.aes_reg_ctr_i.wr3| ((state |wrapper_s|)) Bool (|wrapper#217| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.wr4 1
(define-fun |wrapper_n m1.aes_reg_ctr_i.wr4| ((state |wrapper_s|)) Bool (|wrapper#219| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.wr5 1
(define-fun |wrapper_n m1.aes_reg_ctr_i.wr5| ((state |wrapper_s|)) Bool (|wrapper#221| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.wr6 1
(define-fun |wrapper_n m1.aes_reg_ctr_i.wr6| ((state |wrapper_s|)) Bool (|wrapper#223| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.wr7 1
(define-fun |wrapper_n m1.aes_reg_ctr_i.wr7| ((state |wrapper_s|)) Bool (|wrapper#225| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.wr8 1
(define-fun |wrapper_n m1.aes_reg_ctr_i.wr8| ((state |wrapper_s|)) Bool (|wrapper#227| state))
; yosys-smt2-wire m1.aes_reg_ctr_i.wr9 1
(define-fun |wrapper_n m1.aes_reg_ctr_i.wr9| ((state |wrapper_s|)) Bool (|wrapper#229| state))
; yosys-smt2-wire m1.aes_reg_key0 128
(define-fun |wrapper_n m1.aes_reg_key0| ((state |wrapper_s|)) (_ BitVec 128) (|wrapper#135| state))
; yosys-smt2-wire m1.aes_reg_key0_i.addr 4
(define-fun |wrapper_n m1.aes_reg_key0_i.addr| ((state |wrapper_s|)) (_ BitVec 4) ((_ extract 3 0) (|wrapper#2| state)))
; yosys-smt2-wire m1.aes_reg_key0_i.clk 1
; yosys-smt2-clock m1.aes_reg_key0_i.clk posedge
(define-fun |wrapper_n m1.aes_reg_key0_i.clk| ((state |wrapper_s|)) Bool (|wrapper#136| state))
; yosys-smt2-wire m1.aes_reg_key0_i.data_in 8
(define-fun |wrapper_n m1.aes_reg_key0_i.data_in| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#3| state))
; yosys-smt2-wire m1.aes_reg_key0_i.data_out 8
(define-fun |wrapper_n m1.aes_reg_key0_i.data_out| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#166| state))
; yosys-smt2-wire m1.aes_reg_key0_i.data_out_mux 8
(define-fun |wrapper_n m1.aes_reg_key0_i.data_out_mux| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#166| state))
; yosys-smt2-wire m1.aes_reg_key0_i.en 1
(define-fun |wrapper_n m1.aes_reg_key0_i.en| ((state |wrapper_s|)) Bool (|wrapper#167| state))
; yosys-smt2-wire m1.aes_reg_key0_i.m1__DOT__aes_reg_ctr_i__DOT__reg_out 128
(define-fun |wrapper_n m1.aes_reg_key0_i.m1__DOT__aes_reg_ctr_i__DOT__reg_out| ((state |wrapper_s|)) (_ BitVec 128) (|wrapper#135| state))
; yosys-smt2-wire m1.aes_reg_key0_i.reg0_next 8
(define-fun |wrapper#232| ((state |wrapper_s|)) Bool (and (or  (|wrapper#167| state) false) (or  (|wrapper#107| state) false))) ; \m1.aes_reg_key0_i.wr
(define-fun |wrapper#233| ((state |wrapper_s|)) Bool (and (or  (|wrapper#167| state) false) (or  (|wrapper#232| state) false))) ; $techmap\m1.aes_reg_key0_i.$logic_and$wrapper.v:734$225_Y
(define-fun |wrapper#234| ((state |wrapper_s|)) Bool (and (or  (|wrapper#233| state) false) (or  (|wrapper#165| state) false))) ; \m1.aes_reg_key0_i.wr0
(define-fun |wrapper#235| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#234| state) (|wrapper#3| state) ((_ extract 7 0) (|wrapper#135| state)))) ; \m1.aes_reg_key0_i.reg0_next
(define-fun |wrapper_n m1.aes_reg_key0_i.reg0_next| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#235| state))
; yosys-smt2-wire m1.aes_reg_key0_i.reg10_next 8
(define-fun |wrapper#236| ((state |wrapper_s|)) Bool (and (or  (|wrapper#233| state) false) (or  (|wrapper#145| state) false))) ; \m1.aes_reg_key0_i.wr10
(define-fun |wrapper#237| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#236| state) (|wrapper#3| state) ((_ extract 87 80) (|wrapper#135| state)))) ; \m1.aes_reg_key0_i.reg10_next
(define-fun |wrapper_n m1.aes_reg_key0_i.reg10_next| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#237| state))
; yosys-smt2-wire m1.aes_reg_key0_i.reg11_next 8
(define-fun |wrapper#238| ((state |wrapper_s|)) Bool (and (or  (|wrapper#233| state) false) (or  (|wrapper#143| state) false))) ; \m1.aes_reg_key0_i.wr11
(define-fun |wrapper#239| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#238| state) (|wrapper#3| state) ((_ extract 95 88) (|wrapper#135| state)))) ; \m1.aes_reg_key0_i.reg11_next
(define-fun |wrapper_n m1.aes_reg_key0_i.reg11_next| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#239| state))
; yosys-smt2-wire m1.aes_reg_key0_i.reg12_next 8
(define-fun |wrapper#240| ((state |wrapper_s|)) Bool (and (or  (|wrapper#233| state) false) (or  (|wrapper#141| state) false))) ; \m1.aes_reg_key0_i.wr12
(define-fun |wrapper#241| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#240| state) (|wrapper#3| state) ((_ extract 103 96) (|wrapper#135| state)))) ; \m1.aes_reg_key0_i.reg12_next
(define-fun |wrapper_n m1.aes_reg_key0_i.reg12_next| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#241| state))
; yosys-smt2-wire m1.aes_reg_key0_i.reg13_next 8
(define-fun |wrapper#242| ((state |wrapper_s|)) Bool (and (or  (|wrapper#233| state) false) (or  (|wrapper#139| state) false))) ; \m1.aes_reg_key0_i.wr13
(define-fun |wrapper#243| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#242| state) (|wrapper#3| state) ((_ extract 111 104) (|wrapper#135| state)))) ; \m1.aes_reg_key0_i.reg13_next
(define-fun |wrapper_n m1.aes_reg_key0_i.reg13_next| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#243| state))
; yosys-smt2-wire m1.aes_reg_key0_i.reg14_next 8
(define-fun |wrapper#244| ((state |wrapper_s|)) Bool (and (or  (|wrapper#233| state) false) (or  (|wrapper#137| state) false))) ; \m1.aes_reg_key0_i.wr14
(define-fun |wrapper#245| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#244| state) (|wrapper#3| state) ((_ extract 119 112) (|wrapper#135| state)))) ; \m1.aes_reg_key0_i.reg14_next
(define-fun |wrapper_n m1.aes_reg_key0_i.reg14_next| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#245| state))
; yosys-smt2-wire m1.aes_reg_key0_i.reg15_next 8
(define-fun |wrapper#246| ((state |wrapper_s|)) Bool (and (or  (|wrapper#233| state) false) (or  (|wrapper#210| state) false))) ; \m1.aes_reg_key0_i.wr15
(define-fun |wrapper#247| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#246| state) (|wrapper#3| state) ((_ extract 127 120) (|wrapper#135| state)))) ; \m1.aes_reg_key0_i.reg15_next
(define-fun |wrapper_n m1.aes_reg_key0_i.reg15_next| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#247| state))
; yosys-smt2-wire m1.aes_reg_key0_i.reg1_next 8
(define-fun |wrapper#248| ((state |wrapper_s|)) Bool (and (or  (|wrapper#233| state) false) (or  (|wrapper#163| state) false))) ; \m1.aes_reg_key0_i.wr1
(define-fun |wrapper#249| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#248| state) (|wrapper#3| state) ((_ extract 15 8) (|wrapper#135| state)))) ; \m1.aes_reg_key0_i.reg1_next
(define-fun |wrapper_n m1.aes_reg_key0_i.reg1_next| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#249| state))
; yosys-smt2-wire m1.aes_reg_key0_i.reg2_next 8
(define-fun |wrapper#250| ((state |wrapper_s|)) Bool (and (or  (|wrapper#233| state) false) (or  (|wrapper#161| state) false))) ; \m1.aes_reg_key0_i.wr2
(define-fun |wrapper#251| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#250| state) (|wrapper#3| state) ((_ extract 23 16) (|wrapper#135| state)))) ; \m1.aes_reg_key0_i.reg2_next
(define-fun |wrapper_n m1.aes_reg_key0_i.reg2_next| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#251| state))
; yosys-smt2-wire m1.aes_reg_key0_i.reg3_next 8
(define-fun |wrapper#252| ((state |wrapper_s|)) Bool (and (or  (|wrapper#233| state) false) (or  (|wrapper#159| state) false))) ; \m1.aes_reg_key0_i.wr3
(define-fun |wrapper#253| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#252| state) (|wrapper#3| state) ((_ extract 31 24) (|wrapper#135| state)))) ; \m1.aes_reg_key0_i.reg3_next
(define-fun |wrapper_n m1.aes_reg_key0_i.reg3_next| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#253| state))
; yosys-smt2-wire m1.aes_reg_key0_i.reg4_next 8
(define-fun |wrapper#254| ((state |wrapper_s|)) Bool (and (or  (|wrapper#233| state) false) (or  (|wrapper#157| state) false))) ; \m1.aes_reg_key0_i.wr4
(define-fun |wrapper#255| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#254| state) (|wrapper#3| state) ((_ extract 39 32) (|wrapper#135| state)))) ; \m1.aes_reg_key0_i.reg4_next
(define-fun |wrapper_n m1.aes_reg_key0_i.reg4_next| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#255| state))
; yosys-smt2-wire m1.aes_reg_key0_i.reg5_next 8
(define-fun |wrapper#256| ((state |wrapper_s|)) Bool (and (or  (|wrapper#233| state) false) (or  (|wrapper#155| state) false))) ; \m1.aes_reg_key0_i.wr5
(define-fun |wrapper#257| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#256| state) (|wrapper#3| state) ((_ extract 47 40) (|wrapper#135| state)))) ; \m1.aes_reg_key0_i.reg5_next
(define-fun |wrapper_n m1.aes_reg_key0_i.reg5_next| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#257| state))
; yosys-smt2-wire m1.aes_reg_key0_i.reg6_next 8
(define-fun |wrapper#258| ((state |wrapper_s|)) Bool (and (or  (|wrapper#233| state) false) (or  (|wrapper#153| state) false))) ; \m1.aes_reg_key0_i.wr6
(define-fun |wrapper#259| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#258| state) (|wrapper#3| state) ((_ extract 55 48) (|wrapper#135| state)))) ; \m1.aes_reg_key0_i.reg6_next
(define-fun |wrapper_n m1.aes_reg_key0_i.reg6_next| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#259| state))
; yosys-smt2-wire m1.aes_reg_key0_i.reg7_next 8
(define-fun |wrapper#260| ((state |wrapper_s|)) Bool (and (or  (|wrapper#233| state) false) (or  (|wrapper#151| state) false))) ; \m1.aes_reg_key0_i.wr7
(define-fun |wrapper#261| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#260| state) (|wrapper#3| state) ((_ extract 63 56) (|wrapper#135| state)))) ; \m1.aes_reg_key0_i.reg7_next
(define-fun |wrapper_n m1.aes_reg_key0_i.reg7_next| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#261| state))
; yosys-smt2-wire m1.aes_reg_key0_i.reg8_next 8
(define-fun |wrapper#262| ((state |wrapper_s|)) Bool (and (or  (|wrapper#233| state) false) (or  (|wrapper#149| state) false))) ; \m1.aes_reg_key0_i.wr8
(define-fun |wrapper#263| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#262| state) (|wrapper#3| state) ((_ extract 71 64) (|wrapper#135| state)))) ; \m1.aes_reg_key0_i.reg8_next
(define-fun |wrapper_n m1.aes_reg_key0_i.reg8_next| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#263| state))
; yosys-smt2-wire m1.aes_reg_key0_i.reg9_next 8
(define-fun |wrapper#264| ((state |wrapper_s|)) Bool (and (or  (|wrapper#233| state) false) (or  (|wrapper#147| state) false))) ; \m1.aes_reg_key0_i.wr9
(define-fun |wrapper#265| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#264| state) (|wrapper#3| state) ((_ extract 79 72) (|wrapper#135| state)))) ; \m1.aes_reg_key0_i.reg9_next
(define-fun |wrapper_n m1.aes_reg_key0_i.reg9_next| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#265| state))
; yosys-smt2-register m1.aes_reg_key0_i.reg_out 128
; yosys-smt2-wire m1.aes_reg_key0_i.reg_out 128
(define-fun |wrapper_n m1.aes_reg_key0_i.reg_out| ((state |wrapper_s|)) (_ BitVec 128) (|wrapper#135| state))
; yosys-smt2-wire m1.aes_reg_key0_i.rst 1
(define-fun |wrapper_n m1.aes_reg_key0_i.rst| ((state |wrapper_s|)) Bool (|wrapper#231| state))
; yosys-smt2-wire m1.aes_reg_key0_i.wr 1
(define-fun |wrapper_n m1.aes_reg_key0_i.wr| ((state |wrapper_s|)) Bool (|wrapper#232| state))
; yosys-smt2-wire m1.aes_reg_key0_i.wr0 1
(define-fun |wrapper_n m1.aes_reg_key0_i.wr0| ((state |wrapper_s|)) Bool (|wrapper#234| state))
; yosys-smt2-wire m1.aes_reg_key0_i.wr1 1
(define-fun |wrapper_n m1.aes_reg_key0_i.wr1| ((state |wrapper_s|)) Bool (|wrapper#248| state))
; yosys-smt2-wire m1.aes_reg_key0_i.wr10 1
(define-fun |wrapper_n m1.aes_reg_key0_i.wr10| ((state |wrapper_s|)) Bool (|wrapper#236| state))
; yosys-smt2-wire m1.aes_reg_key0_i.wr11 1
(define-fun |wrapper_n m1.aes_reg_key0_i.wr11| ((state |wrapper_s|)) Bool (|wrapper#238| state))
; yosys-smt2-wire m1.aes_reg_key0_i.wr12 1
(define-fun |wrapper_n m1.aes_reg_key0_i.wr12| ((state |wrapper_s|)) Bool (|wrapper#240| state))
; yosys-smt2-wire m1.aes_reg_key0_i.wr13 1
(define-fun |wrapper_n m1.aes_reg_key0_i.wr13| ((state |wrapper_s|)) Bool (|wrapper#242| state))
; yosys-smt2-wire m1.aes_reg_key0_i.wr14 1
(define-fun |wrapper_n m1.aes_reg_key0_i.wr14| ((state |wrapper_s|)) Bool (|wrapper#244| state))
; yosys-smt2-wire m1.aes_reg_key0_i.wr15 1
(define-fun |wrapper_n m1.aes_reg_key0_i.wr15| ((state |wrapper_s|)) Bool (|wrapper#246| state))
; yosys-smt2-wire m1.aes_reg_key0_i.wr2 1
(define-fun |wrapper_n m1.aes_reg_key0_i.wr2| ((state |wrapper_s|)) Bool (|wrapper#250| state))
; yosys-smt2-wire m1.aes_reg_key0_i.wr3 1
(define-fun |wrapper_n m1.aes_reg_key0_i.wr3| ((state |wrapper_s|)) Bool (|wrapper#252| state))
; yosys-smt2-wire m1.aes_reg_key0_i.wr4 1
(define-fun |wrapper_n m1.aes_reg_key0_i.wr4| ((state |wrapper_s|)) Bool (|wrapper#254| state))
; yosys-smt2-wire m1.aes_reg_key0_i.wr5 1
(define-fun |wrapper_n m1.aes_reg_key0_i.wr5| ((state |wrapper_s|)) Bool (|wrapper#256| state))
; yosys-smt2-wire m1.aes_reg_key0_i.wr6 1
(define-fun |wrapper_n m1.aes_reg_key0_i.wr6| ((state |wrapper_s|)) Bool (|wrapper#258| state))
; yosys-smt2-wire m1.aes_reg_key0_i.wr7 1
(define-fun |wrapper_n m1.aes_reg_key0_i.wr7| ((state |wrapper_s|)) Bool (|wrapper#260| state))
; yosys-smt2-wire m1.aes_reg_key0_i.wr8 1
(define-fun |wrapper_n m1.aes_reg_key0_i.wr8| ((state |wrapper_s|)) Bool (|wrapper#262| state))
; yosys-smt2-wire m1.aes_reg_key0_i.wr9 1
(define-fun |wrapper_n m1.aes_reg_key0_i.wr9| ((state |wrapper_s|)) Bool (|wrapper#264| state))
; yosys-smt2-wire m1.aes_reg_opaddr 16
(define-fun |wrapper_n m1.aes_reg_opaddr| ((state |wrapper_s|)) (_ BitVec 16) (|wrapper#14| state))
; yosys-smt2-wire m1.aes_reg_opaddr_i.addr 1
(define-fun |wrapper_n m1.aes_reg_opaddr_i.addr| ((state |wrapper_s|)) Bool (= ((_ extract 0 0) (|wrapper#2| state)) #b1))
; yosys-smt2-wire m1.aes_reg_opaddr_i.clk 1
; yosys-smt2-clock m1.aes_reg_opaddr_i.clk posedge
(define-fun |wrapper_n m1.aes_reg_opaddr_i.clk| ((state |wrapper_s|)) Bool (|wrapper#136| state))
; yosys-smt2-wire m1.aes_reg_opaddr_i.data_in 8
(define-fun |wrapper_n m1.aes_reg_opaddr_i.data_in| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#3| state))
; yosys-smt2-wire m1.aes_reg_opaddr_i.data_out 8
(define-fun |wrapper_n m1.aes_reg_opaddr_i.data_out| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#189| state))
; yosys-smt2-wire m1.aes_reg_opaddr_i.data_out_mux 8
(define-fun |wrapper_n m1.aes_reg_opaddr_i.data_out_mux| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#189| state))
; yosys-smt2-wire m1.aes_reg_opaddr_i.en 1
(define-fun |wrapper_n m1.aes_reg_opaddr_i.en| ((state |wrapper_s|)) Bool (|wrapper#190| state))
; yosys-smt2-wire m1.aes_reg_opaddr_i.reg0_next 8
(define-fun |wrapper#266| ((state |wrapper_s|)) Bool (and (or  (|wrapper#190| state) false) (or  (|wrapper#107| state) false))) ; \m1.aes_reg_opaddr_i.wr
(define-fun |wrapper#267| ((state |wrapper_s|)) Bool (and (or  (|wrapper#190| state) false) (or  (|wrapper#266| state) false))) ; $techmap\m1.aes_reg_opaddr_i.$logic_and$wrapper.v:693$214_Y
(define-fun |wrapper#268| ((state |wrapper_s|)) (_ BitVec 1) (bvnot ((_ extract 0 0) (|wrapper#2| state)))) ; $techmap\m1.aes_reg_opaddr_i.$eq$wrapper.v:693$215_Y
(define-fun |wrapper#269| ((state |wrapper_s|)) Bool (and (or  (|wrapper#267| state) false) (or  (= ((_ extract 0 0) (|wrapper#268| state)) #b1) false))) ; \m1.aes_reg_opaddr_i.wr0
(define-fun |wrapper#270| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#269| state) (|wrapper#3| state) ((_ extract 7 0) (|wrapper#14| state)))) ; \m1.aes_reg_opaddr_i.reg0_next
(define-fun |wrapper_n m1.aes_reg_opaddr_i.reg0_next| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#270| state))
; yosys-smt2-wire m1.aes_reg_opaddr_i.reg1_next 8
(define-fun |wrapper#271| ((state |wrapper_s|)) Bool (and (or  (|wrapper#267| state) false) (or  (= ((_ extract 0 0) (|wrapper#2| state)) #b1) false))) ; \m1.aes_reg_opaddr_i.wr1
(define-fun |wrapper#272| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#271| state) (|wrapper#3| state) ((_ extract 15 8) (|wrapper#14| state)))) ; \m1.aes_reg_opaddr_i.reg1_next
(define-fun |wrapper_n m1.aes_reg_opaddr_i.reg1_next| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#272| state))
; yosys-smt2-register m1.aes_reg_opaddr_i.reg_out 16
; yosys-smt2-wire m1.aes_reg_opaddr_i.reg_out 16
(define-fun |wrapper_n m1.aes_reg_opaddr_i.reg_out| ((state |wrapper_s|)) (_ BitVec 16) (|wrapper#14| state))
; yosys-smt2-wire m1.aes_reg_opaddr_i.rst 1
(define-fun |wrapper_n m1.aes_reg_opaddr_i.rst| ((state |wrapper_s|)) Bool (|wrapper#231| state))
; yosys-smt2-wire m1.aes_reg_opaddr_i.wr 1
(define-fun |wrapper_n m1.aes_reg_opaddr_i.wr| ((state |wrapper_s|)) Bool (|wrapper#266| state))
; yosys-smt2-wire m1.aes_reg_opaddr_i.wr0 1
(define-fun |wrapper_n m1.aes_reg_opaddr_i.wr0| ((state |wrapper_s|)) Bool (|wrapper#269| state))
; yosys-smt2-wire m1.aes_reg_opaddr_i.wr1 1
(define-fun |wrapper_n m1.aes_reg_opaddr_i.wr1| ((state |wrapper_s|)) Bool (|wrapper#271| state))
; yosys-smt2-wire m1.aes_reg_oplen 16
(define-fun |wrapper_n m1.aes_reg_oplen| ((state |wrapper_s|)) (_ BitVec 16) (|wrapper#110| state))
; yosys-smt2-wire m1.aes_reg_oplen_i.addr 1
(define-fun |wrapper_n m1.aes_reg_oplen_i.addr| ((state |wrapper_s|)) Bool (= ((_ extract 0 0) (|wrapper#2| state)) #b1))
; yosys-smt2-wire m1.aes_reg_oplen_i.clk 1
; yosys-smt2-clock m1.aes_reg_oplen_i.clk posedge
(define-fun |wrapper_n m1.aes_reg_oplen_i.clk| ((state |wrapper_s|)) Bool (|wrapper#136| state))
; yosys-smt2-wire m1.aes_reg_oplen_i.data_in 8
(define-fun |wrapper_n m1.aes_reg_oplen_i.data_in| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#3| state))
; yosys-smt2-wire m1.aes_reg_oplen_i.data_out 8
(define-fun |wrapper_n m1.aes_reg_oplen_i.data_out| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#186| state))
; yosys-smt2-wire m1.aes_reg_oplen_i.data_out_mux 8
(define-fun |wrapper_n m1.aes_reg_oplen_i.data_out_mux| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#186| state))
; yosys-smt2-wire m1.aes_reg_oplen_i.en 1
(define-fun |wrapper_n m1.aes_reg_oplen_i.en| ((state |wrapper_s|)) Bool (|wrapper#187| state))
; yosys-smt2-wire m1.aes_reg_oplen_i.reg0_next 8
(define-fun |wrapper#273| ((state |wrapper_s|)) Bool (and (or  (|wrapper#187| state) false) (or  (|wrapper#107| state) false))) ; \m1.aes_reg_oplen_i.wr
(define-fun |wrapper#274| ((state |wrapper_s|)) Bool (and (or  (|wrapper#187| state) false) (or  (|wrapper#273| state) false))) ; $techmap\m1.aes_reg_oplen_i.$logic_and$wrapper.v:693$214_Y
(define-fun |wrapper#275| ((state |wrapper_s|)) Bool (and (or  (|wrapper#274| state) false) (or  (= ((_ extract 0 0) (|wrapper#268| state)) #b1) false))) ; \m1.aes_reg_oplen_i.wr0
(define-fun |wrapper#276| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#275| state) (|wrapper#3| state) ((_ extract 7 0) (|wrapper#110| state)))) ; \m1.aes_reg_oplen_i.reg0_next
(define-fun |wrapper_n m1.aes_reg_oplen_i.reg0_next| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#276| state))
; yosys-smt2-wire m1.aes_reg_oplen_i.reg1_next 8
(define-fun |wrapper#277| ((state |wrapper_s|)) Bool (and (or  (|wrapper#274| state) false) (or  (= ((_ extract 0 0) (|wrapper#2| state)) #b1) false))) ; \m1.aes_reg_oplen_i.wr1
(define-fun |wrapper#278| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#277| state) (|wrapper#3| state) ((_ extract 15 8) (|wrapper#110| state)))) ; \m1.aes_reg_oplen_i.reg1_next
(define-fun |wrapper_n m1.aes_reg_oplen_i.reg1_next| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#278| state))
; yosys-smt2-register m1.aes_reg_oplen_i.reg_out 16
; yosys-smt2-wire m1.aes_reg_oplen_i.reg_out 16
(define-fun |wrapper_n m1.aes_reg_oplen_i.reg_out| ((state |wrapper_s|)) (_ BitVec 16) (|wrapper#110| state))
; yosys-smt2-wire m1.aes_reg_oplen_i.rst 1
(define-fun |wrapper_n m1.aes_reg_oplen_i.rst| ((state |wrapper_s|)) Bool (|wrapper#231| state))
; yosys-smt2-wire m1.aes_reg_oplen_i.wr 1
(define-fun |wrapper_n m1.aes_reg_oplen_i.wr| ((state |wrapper_s|)) Bool (|wrapper#273| state))
; yosys-smt2-wire m1.aes_reg_oplen_i.wr0 1
(define-fun |wrapper_n m1.aes_reg_oplen_i.wr0| ((state |wrapper_s|)) Bool (|wrapper#275| state))
; yosys-smt2-wire m1.aes_reg_oplen_i.wr1 1
(define-fun |wrapper_n m1.aes_reg_oplen_i.wr1| ((state |wrapper_s|)) Bool (|wrapper#277| state))
; yosys-smt2-register m1.aes_reg_state 2
; yosys-smt2-wire m1.aes_reg_state 2
(define-fun |wrapper_n m1.aes_reg_state| ((state |wrapper_s|)) (_ BitVec 2) (|wrapper#20| state))
; yosys-smt2-wire m1.aes_reg_state_next 2
(define-fun |wrapper_n m1.aes_reg_state_next| ((state |wrapper_s|)) (_ BitVec 2) (|wrapper#120| state))
; yosys-smt2-wire m1.aes_reg_state_next_idle 1
(define-fun |wrapper_n m1.aes_reg_state_next_idle| ((state |wrapper_s|)) Bool (|wrapper#108| state))
; yosys-smt2-wire m1.aes_reg_state_next_operate 1
(define-fun |wrapper_n m1.aes_reg_state_next_operate| ((state |wrapper_s|)) Bool (|wrapper#116| state))
; yosys-smt2-wire m1.aes_reg_state_next_read_data 2
(define-fun |wrapper_n m1.aes_reg_state_next_read_data| ((state |wrapper_s|)) (_ BitVec 2) (|wrapper#118| state))
; yosys-smt2-wire m1.aes_reg_state_next_write_data 2
(define-fun |wrapper_n m1.aes_reg_state_next_write_data| ((state |wrapper_s|)) (_ BitVec 2) (|wrapper#114| state))
; yosys-smt2-wire m1.aes_state 2
(define-fun |wrapper_n m1.aes_state| ((state |wrapper_s|)) (_ BitVec 2) (|wrapper#20| state))
; yosys-smt2-wire m1.aes_state_idle 1
(define-fun |wrapper_n m1.aes_state_idle| ((state |wrapper_s|)) Bool (|wrapper#106| state))
; yosys-smt2-wire m1.aes_state_operate 1
(define-fun |wrapper_n m1.aes_state_operate| ((state |wrapper_s|)) Bool (|wrapper#71| state))
; yosys-smt2-wire m1.aes_state_read_data 1
(define-fun |wrapper_n m1.aes_state_read_data| ((state |wrapper_s|)) Bool (|wrapper#23| state))
; yosys-smt2-wire m1.aes_state_write_data 1
(define-fun |wrapper_n m1.aes_state_write_data| ((state |wrapper_s|)) Bool (|wrapper#21| state))
; yosys-smt2-wire m1.aes_step 1
(define-fun |wrapper_n m1.aes_step| ((state |wrapper_s|)) Bool (|wrapper#121| state))
; yosys-smt2-register m1.aes_time_counter 5
; yosys-smt2-wire m1.aes_time_counter 5
(define-fun |wrapper_n m1.aes_time_counter| ((state |wrapper_s|)) (_ BitVec 5) (|wrapper#73| state))
; yosys-smt2-wire m1.aes_time_counter_next 5
(define-fun |wrapper#279| ((state |wrapper_s|)) (_ BitVec 5) (bvadd (|wrapper#73| state) #b00001)) ; $techmap\m1.$add$wrapper.v:574$174_Y
(define-fun |wrapper#280| ((state |wrapper_s|)) Bool (bvult (|wrapper#73| state) #b11111)) ; $techmap\m1.$lt$wrapper.v:574$173_Y
(define-fun |wrapper#281| ((state |wrapper_s|)) (_ BitVec 5) (ite (|wrapper#280| state) (|wrapper#279| state) (|wrapper#73| state))) ; $techmap\m1.$ternary$wrapper.v:575$175_Y
(define-fun |wrapper#282| ((state |wrapper_s|)) Bool (or  (|wrapper#112| state) false  (|wrapper#108| state) false)) ; $techmap\m1.$logic_or$wrapper.v:573$172_Y
(define-fun |wrapper#283| ((state |wrapper_s|)) (_ BitVec 5) (ite (|wrapper#282| state) #b00000 (|wrapper#281| state))) ; \m1.aes_time_counter_next
(define-fun |wrapper_n m1.aes_time_counter_next| ((state |wrapper_s|)) (_ BitVec 5) (|wrapper#283| state))
; yosys-smt2-wire m1.aes_time_enough 1
(define-fun |wrapper_n m1.aes_time_enough| ((state |wrapper_s|)) Bool (|wrapper#116| state))
; yosys-smt2-register m1.block_counter 128
; yosys-smt2-wire m1.block_counter 128
(define-fun |wrapper_n m1.block_counter| ((state |wrapper_s|)) (_ BitVec 128) (|wrapper#15| state))
; yosys-smt2-wire m1.block_counter_next 128
(define-fun |wrapper#284| ((state |wrapper_s|)) (_ BitVec 128) (bvadd (|wrapper#15| state) #b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000)) ; $techmap\m1.$add$wrapper.v:488$92_Y
(define-fun |wrapper#285| ((state |wrapper_s|)) (_ BitVec 128) (ite (|wrapper#112| state) (|wrapper#284| state) (|wrapper#15| state))) ; $techmap\m1.$ternary$wrapper.v:489$93_Y
(define-fun |wrapper#286| ((state |wrapper_s|)) (_ BitVec 128) (ite (|wrapper#108| state) #b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (|wrapper#285| state))) ; \m1.block_counter_next
(define-fun |wrapper_n m1.block_counter_next| ((state |wrapper_s|)) (_ BitVec 128) (|wrapper#286| state))
; yosys-smt2-register m1.byte_counter 4
; yosys-smt2-wire m1.byte_counter 4
(define-fun |wrapper_n m1.byte_counter| ((state |wrapper_s|)) (_ BitVec 4) (|wrapper#17| state))
; yosys-smt2-wire m1.byte_counter_next 4
(define-fun |wrapper#287| ((state |wrapper_s|)) (_ BitVec 4) (bvadd (|wrapper#17| state) #b0001)) ; $techmap\m1.$add$wrapper.v:496$96_Y
(define-fun |wrapper#288| ((state |wrapper_s|)) (_ BitVec 4) (ite (= ((_ extract 0 0) (|wrapper#26| state)) #b1) (|wrapper#287| state) (|wrapper#17| state))) ; $techmap\m1.$ternary$wrapper.v:497$98_Y [3:0]
(define-fun |wrapper#289| ((state |wrapper_s|)) (_ BitVec 4) (ite (|wrapper#108| state) #b0000 (|wrapper#288| state))) ; \m1.byte_counter_next
(define-fun |wrapper_n m1.byte_counter_next| ((state |wrapper_s|)) (_ BitVec 4) (|wrapper#289| state))
; yosys-smt2-wire m1.clk 1
; yosys-smt2-clock m1.clk posedge
(define-fun |wrapper_n m1.clk| ((state |wrapper_s|)) Bool (|wrapper#136| state))
; yosys-smt2-wire m1.data_in 8
(define-fun |wrapper_n m1.data_in| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#3| state))
; yosys-smt2-wire m1.data_out 8
(define-fun |wrapper_n m1.data_out| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#193| state))
; yosys-smt2-wire m1.encrypted_data 120
(define-fun |wrapper#291| ((state |wrapper_s|)) (_ BitVec 128) (bvxor (|wrapper#195| state) (|wrapper#290| state))) ; { $techmap\m1.$auto$wreduce.cc:455:run$2520 [127:120] \m1.encrypted_data }
(define-fun |wrapper_n m1.encrypted_data| ((state |wrapper_s|)) (_ BitVec 120) ((_ extract 119 0) (|wrapper#291| state)))
; yosys-smt2-register m1.encrypted_data_buf 128
; yosys-smt2-wire m1.encrypted_data_buf 128
(define-fun |wrapper_n m1.encrypted_data_buf| ((state |wrapper_s|)) (_ BitVec 128) (|wrapper#28| state))
; yosys-smt2-wire m1.encrypted_data_buf_next 128
(define-fun |wrapper#292| ((state |wrapper_s|)) (_ BitVec 128) (ite (|wrapper#71| state) (|wrapper#291| state) (|wrapper#28| state))) ; \m1.encrypted_data_buf_next
(define-fun |wrapper_n m1.encrypted_data_buf_next| ((state |wrapper_s|)) (_ BitVec 128) (|wrapper#292| state))
; yosys-smt2-wire m1.in_addr_range 1
(define-fun |wrapper_n m1.in_addr_range| ((state |wrapper_s|)) Bool (|wrapper#67| state))
; yosys-smt2-wire m1.incr_byte_counter 1
(define-fun |wrapper_n m1.incr_byte_counter| ((state |wrapper_s|)) Bool (= ((_ extract 0 0) (|wrapper#26| state)) #b1))
; yosys-smt2-wire m1.last_byte_acked 1
(define-fun |wrapper_n m1.last_byte_acked| ((state |wrapper_s|)) Bool (|wrapper#99| state))
; yosys-smt2-wire m1.m1__DOT__aes_reg_ctr_i__DOT__reg_out 128
(define-fun |wrapper_n m1.m1__DOT__aes_reg_ctr_i__DOT__reg_out| ((state |wrapper_s|)) (_ BitVec 128) (|wrapper#69| state))
; yosys-smt2-wire m1.m1__DOT__aes_reg_state 2
(define-fun |wrapper_n m1.m1__DOT__aes_reg_state| ((state |wrapper_s|)) (_ BitVec 2) (|wrapper#20| state))
; yosys-smt2-wire m1.m1__DOT__aes_step 1
(define-fun |wrapper_n m1.m1__DOT__aes_step| ((state |wrapper_s|)) Bool (|wrapper#121| state))
; yosys-smt2-wire m1.m1__DOT__aes_time_counter 5
(define-fun |wrapper_n m1.m1__DOT__aes_time_counter| ((state |wrapper_s|)) (_ BitVec 5) (|wrapper#73| state))
; yosys-smt2-wire m1.m1__DOT__aes_time_enough 1
(define-fun |wrapper_n m1.m1__DOT__aes_time_enough| ((state |wrapper_s|)) Bool (|wrapper#116| state))
; yosys-smt2-wire m1.m1__DOT__block_counter 128
(define-fun |wrapper_n m1.m1__DOT__block_counter| ((state |wrapper_s|)) (_ BitVec 128) (|wrapper#15| state))
; yosys-smt2-wire m1.m1__DOT__byte_counter 4
(define-fun |wrapper_n m1.m1__DOT__byte_counter| ((state |wrapper_s|)) (_ BitVec 4) (|wrapper#17| state))
; yosys-smt2-wire m1.m1__DOT__operated_bytes_count 16
(define-fun |wrapper_n m1.m1__DOT__operated_bytes_count| ((state |wrapper_s|)) (_ BitVec 16) (|wrapper#79| state))
; yosys-smt2-wire m1.m1__DOT__uaes_ctr 128
(define-fun |wrapper_n m1.m1__DOT__uaes_ctr| ((state |wrapper_s|)) (_ BitVec 128) (|wrapper#82| state))
; yosys-smt2-wire m1.m1__DOT__wr 1
(define-fun |wrapper_n m1.m1__DOT__wr| ((state |wrapper_s|)) Bool (|wrapper#64| state))
; yosys-smt2-wire m1.m1__DOT__xram_ack 1
(define-fun |wrapper_n m1.m1__DOT__xram_ack| ((state |wrapper_s|)) Bool (= ((_ extract 0 0) (|wrapper#26| state)) #b1))
; yosys-smt2-wire m1.m1__DOT__xram_addr 16
(define-fun |wrapper_n m1.m1__DOT__xram_addr| ((state |wrapper_s|)) (_ BitVec 16) (|wrapper#18| state))
; yosys-smt2-wire m1.m1__DOT__xram_stb 1
(define-fun |wrapper_n m1.m1__DOT__xram_stb| ((state |wrapper_s|)) Bool (|wrapper#24| state))
; yosys-smt2-wire m1.m1__DOT__xram_wr 1
(define-fun |wrapper_n m1.m1__DOT__xram_wr| ((state |wrapper_s|)) Bool (|wrapper#21| state))
; yosys-smt2-register m1.mem_data_buf 128
; yosys-smt2-wire m1.mem_data_buf 128
(define-fun |wrapper_n m1.mem_data_buf| ((state |wrapper_s|)) (_ BitVec 128) (|wrapper#290| state))
; yosys-smt2-wire m1.mem_data_buf_next 128
(define-fun |wrapper#293| ((state |wrapper_s|)) Bool (and (or  (= ((_ extract 0 0) (|wrapper#26| state)) #b1) false) (or  (|wrapper#57| state) false))) ; $techmap\m1.$logic_and$wrapper.v:531$120_Y
(define-fun |wrapper#294| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#293| state) (|wrapper#19| state) ((_ extract 7 0) (|wrapper#290| state)))) ; \m1.mem_data_buf_next [7:0]
(define-fun |wrapper#295| ((state |wrapper_s|)) Bool (and (or  (= ((_ extract 0 0) (|wrapper#26| state)) #b1) false) (or  (|wrapper#55| state) false))) ; $techmap\m1.$logic_and$wrapper.v:532$123_Y
(define-fun |wrapper#296| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#295| state) (|wrapper#19| state) ((_ extract 15 8) (|wrapper#290| state)))) ; \m1.mem_data_buf_next [15:8]
(define-fun |wrapper#297| ((state |wrapper_s|)) Bool (and (or  (= ((_ extract 0 0) (|wrapper#26| state)) #b1) false) (or  (|wrapper#53| state) false))) ; $techmap\m1.$logic_and$wrapper.v:533$126_Y
(define-fun |wrapper#298| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#297| state) (|wrapper#19| state) ((_ extract 23 16) (|wrapper#290| state)))) ; \m1.mem_data_buf_next [23:16]
(define-fun |wrapper#299| ((state |wrapper_s|)) Bool (and (or  (= ((_ extract 0 0) (|wrapper#26| state)) #b1) false) (or  (|wrapper#51| state) false))) ; $techmap\m1.$logic_and$wrapper.v:534$129_Y
(define-fun |wrapper#300| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#299| state) (|wrapper#19| state) ((_ extract 31 24) (|wrapper#290| state)))) ; \m1.mem_data_buf_next [31:24]
(define-fun |wrapper#301| ((state |wrapper_s|)) Bool (and (or  (= ((_ extract 0 0) (|wrapper#26| state)) #b1) false) (or  (|wrapper#49| state) false))) ; $techmap\m1.$logic_and$wrapper.v:535$132_Y
(define-fun |wrapper#302| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#301| state) (|wrapper#19| state) ((_ extract 39 32) (|wrapper#290| state)))) ; \m1.mem_data_buf_next [39:32]
(define-fun |wrapper#303| ((state |wrapper_s|)) Bool (and (or  (= ((_ extract 0 0) (|wrapper#26| state)) #b1) false) (or  (|wrapper#47| state) false))) ; $techmap\m1.$logic_and$wrapper.v:536$135_Y
(define-fun |wrapper#304| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#303| state) (|wrapper#19| state) ((_ extract 47 40) (|wrapper#290| state)))) ; \m1.mem_data_buf_next [47:40]
(define-fun |wrapper#305| ((state |wrapper_s|)) Bool (and (or  (= ((_ extract 0 0) (|wrapper#26| state)) #b1) false) (or  (|wrapper#45| state) false))) ; $techmap\m1.$logic_and$wrapper.v:537$138_Y
(define-fun |wrapper#306| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#305| state) (|wrapper#19| state) ((_ extract 55 48) (|wrapper#290| state)))) ; \m1.mem_data_buf_next [55:48]
(define-fun |wrapper#307| ((state |wrapper_s|)) Bool (and (or  (= ((_ extract 0 0) (|wrapper#26| state)) #b1) false) (or  (|wrapper#43| state) false))) ; $techmap\m1.$logic_and$wrapper.v:538$141_Y
(define-fun |wrapper#308| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#307| state) (|wrapper#19| state) ((_ extract 63 56) (|wrapper#290| state)))) ; \m1.mem_data_buf_next [63:56]
(define-fun |wrapper#309| ((state |wrapper_s|)) Bool (and (or  (= ((_ extract 0 0) (|wrapper#26| state)) #b1) false) (or  (|wrapper#41| state) false))) ; $techmap\m1.$logic_and$wrapper.v:539$144_Y
(define-fun |wrapper#310| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#309| state) (|wrapper#19| state) ((_ extract 71 64) (|wrapper#290| state)))) ; \m1.mem_data_buf_next [71:64]
(define-fun |wrapper#311| ((state |wrapper_s|)) Bool (and (or  (= ((_ extract 0 0) (|wrapper#26| state)) #b1) false) (or  (|wrapper#39| state) false))) ; $techmap\m1.$logic_and$wrapper.v:540$147_Y
(define-fun |wrapper#312| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#311| state) (|wrapper#19| state) ((_ extract 79 72) (|wrapper#290| state)))) ; \m1.mem_data_buf_next [79:72]
(define-fun |wrapper#313| ((state |wrapper_s|)) Bool (and (or  (= ((_ extract 0 0) (|wrapper#26| state)) #b1) false) (or  (|wrapper#37| state) false))) ; $techmap\m1.$logic_and$wrapper.v:541$150_Y
(define-fun |wrapper#314| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#313| state) (|wrapper#19| state) ((_ extract 87 80) (|wrapper#290| state)))) ; \m1.mem_data_buf_next [87:80]
(define-fun |wrapper#315| ((state |wrapper_s|)) Bool (and (or  (= ((_ extract 0 0) (|wrapper#26| state)) #b1) false) (or  (|wrapper#35| state) false))) ; $techmap\m1.$logic_and$wrapper.v:542$153_Y
(define-fun |wrapper#316| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#315| state) (|wrapper#19| state) ((_ extract 95 88) (|wrapper#290| state)))) ; \m1.mem_data_buf_next [95:88]
(define-fun |wrapper#317| ((state |wrapper_s|)) Bool (and (or  (= ((_ extract 0 0) (|wrapper#26| state)) #b1) false) (or  (|wrapper#33| state) false))) ; $techmap\m1.$logic_and$wrapper.v:543$156_Y
(define-fun |wrapper#318| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#317| state) (|wrapper#19| state) ((_ extract 103 96) (|wrapper#290| state)))) ; \m1.mem_data_buf_next [103:96]
(define-fun |wrapper#319| ((state |wrapper_s|)) Bool (and (or  (= ((_ extract 0 0) (|wrapper#26| state)) #b1) false) (or  (|wrapper#31| state) false))) ; $techmap\m1.$logic_and$wrapper.v:544$159_Y
(define-fun |wrapper#320| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#319| state) (|wrapper#19| state) ((_ extract 111 104) (|wrapper#290| state)))) ; \m1.mem_data_buf_next [111:104]
(define-fun |wrapper#321| ((state |wrapper_s|)) Bool (and (or  (= ((_ extract 0 0) (|wrapper#26| state)) #b1) false) (or  (|wrapper#29| state) false))) ; $techmap\m1.$logic_and$wrapper.v:545$162_Y
(define-fun |wrapper#322| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#321| state) (|wrapper#19| state) ((_ extract 119 112) (|wrapper#290| state)))) ; \m1.mem_data_buf_next [119:112]
(define-fun |wrapper#323| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#99| state) (|wrapper#19| state) ((_ extract 127 120) (|wrapper#290| state)))) ; \m1.mem_data_buf_next [127:120]
(define-fun |wrapper_n m1.mem_data_buf_next| ((state |wrapper_s|)) (_ BitVec 128) (concat (|wrapper#323| state) (concat (|wrapper#322| state) (concat (|wrapper#320| state) (concat (|wrapper#318| state) (concat (|wrapper#316| state) (concat (|wrapper#314| state) (concat (|wrapper#312| state) (concat (|wrapper#310| state) (concat (|wrapper#308| state) (concat (|wrapper#306| state) (concat (|wrapper#304| state) (concat (|wrapper#302| state) (concat (|wrapper#300| state) (concat (|wrapper#298| state) (concat (|wrapper#296| state) (|wrapper#294| state)))))))))))))))))
; yosys-smt2-wire m1.more_blocks 1
(define-fun |wrapper_n m1.more_blocks| ((state |wrapper_s|)) Bool (|wrapper#112| state))
; yosys-smt2-register m1.operated_bytes_count 16
; yosys-smt2-wire m1.operated_bytes_count 16
(define-fun |wrapper_n m1.operated_bytes_count| ((state |wrapper_s|)) (_ BitVec 16) (|wrapper#79| state))
; yosys-smt2-wire m1.operated_bytes_count_next 16
(define-fun |wrapper_n m1.operated_bytes_count_next| ((state |wrapper_s|)) (_ BitVec 16) (|wrapper#109| state))
; yosys-smt2-wire m1.reset_byte_counter 1
(define-fun |wrapper_n m1.reset_byte_counter| ((state |wrapper_s|)) Bool (|wrapper#108| state))
; yosys-smt2-wire m1.rst 1
(define-fun |wrapper_n m1.rst| ((state |wrapper_s|)) Bool (|wrapper#231| state))
; yosys-smt2-wire m1.sel_reg_addr 1
(define-fun |wrapper_n m1.sel_reg_addr| ((state |wrapper_s|)) Bool (|wrapper#190| state))
; yosys-smt2-wire m1.sel_reg_ctr 1
(define-fun |wrapper_n m1.sel_reg_ctr| ((state |wrapper_s|)) Bool (|wrapper#184| state))
; yosys-smt2-wire m1.sel_reg_key0 1
(define-fun |wrapper_n m1.sel_reg_key0| ((state |wrapper_s|)) Bool (|wrapper#167| state))
; yosys-smt2-wire m1.sel_reg_len 1
(define-fun |wrapper_n m1.sel_reg_len| ((state |wrapper_s|)) Bool (|wrapper#187| state))
; yosys-smt2-wire m1.sel_reg_start 1
(define-fun |wrapper_n m1.sel_reg_start| ((state |wrapper_s|)) Bool (|wrapper#104| state))
; yosys-smt2-wire m1.sel_reg_state 1
(define-fun |wrapper_n m1.sel_reg_state| ((state |wrapper_s|)) Bool (|wrapper#192| state))
; yosys-smt2-wire m1.start_op 1
(define-fun |wrapper_n m1.start_op| ((state |wrapper_s|)) Bool (|wrapper#108| state))
; yosys-smt2-wire m1.stb 1
(define-fun |wrapper_n m1.stb| ((state |wrapper_s|)) Bool (|wrapper#63| state))
; yosys-smt2-register m1.uaes_ctr 128
; yosys-smt2-wire m1.uaes_ctr 128
(define-fun |wrapper_n m1.uaes_ctr| ((state |wrapper_s|)) (_ BitVec 128) (|wrapper#82| state))
; yosys-smt2-wire m1.uaes_ctr_nxt 128
(define-fun |wrapper#324| ((state |wrapper_s|)) (_ BitVec 128) (bvadd (|wrapper#82| state) #b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000)) ; $techmap\m1.$add$wrapper.v:551$167_Y
(define-fun |wrapper#325| ((state |wrapper_s|)) (_ BitVec 128) (ite (|wrapper#112| state) (|wrapper#324| state) (|wrapper#82| state))) ; $techmap\m1.$ternary$wrapper.v:552$168_Y
(define-fun |wrapper#326| ((state |wrapper_s|)) (_ BitVec 128) (ite (|wrapper#108| state) (|wrapper#69| state) (|wrapper#325| state))) ; \m1.uaes_ctr_nxt
(define-fun |wrapper_n m1.uaes_ctr_nxt| ((state |wrapper_s|)) (_ BitVec 128) (|wrapper#326| state))
; yosys-smt2-wire m1.wr 1
(define-fun |wrapper_n m1.wr| ((state |wrapper_s|)) Bool (|wrapper#64| state))
; yosys-smt2-wire m1.wren 1
(define-fun |wrapper_n m1.wren| ((state |wrapper_s|)) Bool (|wrapper#107| state))
; yosys-smt2-wire m1.xram_ack 1
(define-fun |wrapper_n m1.xram_ack| ((state |wrapper_s|)) Bool (= ((_ extract 0 0) (|wrapper#26| state)) #b1))
; yosys-smt2-wire m1.xram_addr 16
(define-fun |wrapper_n m1.xram_addr| ((state |wrapper_s|)) (_ BitVec 16) (|wrapper#18| state))
; yosys-smt2-wire m1.xram_data_in 8
(define-fun |wrapper_n m1.xram_data_in| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#19| state))
; yosys-smt2-wire m1.xram_data_out 8
(define-fun |wrapper_n m1.xram_data_out| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#58| state))
; yosys-smt2-wire m1.xram_stb 1
(define-fun |wrapper_n m1.xram_stb| ((state |wrapper_s|)) Bool (|wrapper#24| state))
; yosys-smt2-wire m1.xram_wr 1
(define-fun |wrapper_n m1.xram_wr| ((state |wrapper_s|)) Bool (|wrapper#21| state))
; yosys-smt2-output m1__DOT__aes_reg_ctr_i__DOT__reg_out 128
; yosys-smt2-wire m1__DOT__aes_reg_ctr_i__DOT__reg_out 128
(define-fun |wrapper_n m1__DOT__aes_reg_ctr_i__DOT__reg_out| ((state |wrapper_s|)) (_ BitVec 128) (|wrapper#69| state))
; yosys-smt2-output m1__DOT__aes_reg_state 2
; yosys-smt2-wire m1__DOT__aes_reg_state 2
(define-fun |wrapper_n m1__DOT__aes_reg_state| ((state |wrapper_s|)) (_ BitVec 2) (|wrapper#20| state))
; yosys-smt2-output m1__DOT__aes_step 1
; yosys-smt2-wire m1__DOT__aes_step 1
(define-fun |wrapper_n m1__DOT__aes_step| ((state |wrapper_s|)) Bool (|wrapper#121| state))
; yosys-smt2-output m1__DOT__aes_time_counter 5
; yosys-smt2-wire m1__DOT__aes_time_counter 5
(define-fun |wrapper_n m1__DOT__aes_time_counter| ((state |wrapper_s|)) (_ BitVec 5) (|wrapper#73| state))
; yosys-smt2-output m1__DOT__aes_time_enough 1
; yosys-smt2-wire m1__DOT__aes_time_enough 1
(define-fun |wrapper_n m1__DOT__aes_time_enough| ((state |wrapper_s|)) Bool (|wrapper#116| state))
; yosys-smt2-output m1__DOT__block_counter 128
; yosys-smt2-wire m1__DOT__block_counter 128
(define-fun |wrapper_n m1__DOT__block_counter| ((state |wrapper_s|)) (_ BitVec 128) (|wrapper#15| state))
; yosys-smt2-output m1__DOT__byte_counter 4
; yosys-smt2-wire m1__DOT__byte_counter 4
(define-fun |wrapper_n m1__DOT__byte_counter| ((state |wrapper_s|)) (_ BitVec 4) (|wrapper#17| state))
; yosys-smt2-output m1__DOT__operated_bytes_count 16
; yosys-smt2-wire m1__DOT__operated_bytes_count 16
(define-fun |wrapper_n m1__DOT__operated_bytes_count| ((state |wrapper_s|)) (_ BitVec 16) (|wrapper#79| state))
; yosys-smt2-output m1__DOT__uaes_ctr 128
; yosys-smt2-wire m1__DOT__uaes_ctr 128
(define-fun |wrapper_n m1__DOT__uaes_ctr| ((state |wrapper_s|)) (_ BitVec 128) (|wrapper#82| state))
; yosys-smt2-output m1__DOT__wr 1
; yosys-smt2-wire m1__DOT__wr 1
(define-fun |wrapper_n m1__DOT__wr| ((state |wrapper_s|)) Bool (|wrapper#64| state))
; yosys-smt2-output m1__DOT__xram_ack 1
; yosys-smt2-wire m1__DOT__xram_ack 1
(define-fun |wrapper_n m1__DOT__xram_ack| ((state |wrapper_s|)) Bool (= ((_ extract 0 0) (|wrapper#26| state)) #b1))
; yosys-smt2-output m1__DOT__xram_addr 16
; yosys-smt2-wire m1__DOT__xram_addr 16
(define-fun |wrapper_n m1__DOT__xram_addr| ((state |wrapper_s|)) (_ BitVec 16) (|wrapper#18| state))
; yosys-smt2-output m1__DOT__xram_stb 1
; yosys-smt2-wire m1__DOT__xram_stb 1
(define-fun |wrapper_n m1__DOT__xram_stb| ((state |wrapper_s|)) Bool (|wrapper#24| state))
; yosys-smt2-output m1__DOT__xram_wr 1
; yosys-smt2-wire m1__DOT__xram_wr 1
(define-fun |wrapper_n m1__DOT__xram_wr| ((state |wrapper_s|)) Bool (|wrapper#21| state))
; yosys-smt2-input mi0_ila_r_rand_input 8
; yosys-smt2-wire mi0_ila_r_rand_input 8
(define-fun |wrapper_n mi0_ila_r_rand_input| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#327| state))
; yosys-smt2-output mi0_read_assume_true 1
; yosys-smt2-wire mi0_read_assume_true 1
(define-fun |wrapper_n mi0_read_assume_true| ((state |wrapper_s|)) Bool (|wrapper#328| state))
; yosys-smt2-input mi0_vlg_r_rand_input 8
; yosys-smt2-wire mi0_vlg_r_rand_input 8
(define-fun |wrapper_n mi0_vlg_r_rand_input| ((state |wrapper_s|)) (_ BitVec 8) (|wrapper#329| state))
; yosys-smt2-input rst 1
; yosys-smt2-wire rst 1
(define-fun |wrapper_n rst| ((state |wrapper_s|)) Bool (|wrapper#231| state))
; yosys-smt2-assert 0 wrapper.v:255
(define-fun |wrapper_a 0| ((state |wrapper_s|)) Bool (or (= ((_ extract 0 0) (|wrapper#85| state)) #b1) (not true))) ; $assert$wrapper.v:255$54
; yosys-smt2-assume 0 wrapper.v:241
(define-fun |wrapper_u 0| ((state |wrapper_s|)) Bool (or (|wrapper#88| state) (not true))) ; $assume$wrapper.v:241$47
; yosys-smt2-assume 1 wrapper.v:243
(define-fun |wrapper_u 1| ((state |wrapper_s|)) Bool (or (|wrapper#92| state) (not true))) ; $assume$wrapper.v:243$48
; yosys-smt2-assume 2 wrapper.v:245
(define-fun |wrapper_u 2| ((state |wrapper_s|)) Bool (or (|wrapper#96| state) (not true))) ; $assume$wrapper.v:245$49
; yosys-smt2-assume 3 wrapper.v:247
(define-fun |wrapper_u 3| ((state |wrapper_s|)) Bool (or (|wrapper#124| state) (not true))) ; $assume$wrapper.v:247$50
; yosys-smt2-assume 4 wrapper.v:249
(define-fun |wrapper_u 4| ((state |wrapper_s|)) Bool (or (|wrapper#129| state) (not true))) ; $assume$wrapper.v:249$51
; yosys-smt2-assume 5 wrapper.v:251
(define-fun |wrapper_u 5| ((state |wrapper_s|)) Bool (or (|wrapper#131| state) (not true))) ; $assume$wrapper.v:251$52
; yosys-smt2-assume 6 wrapper.v:253
(define-fun |wrapper_u 6| ((state |wrapper_s|)) Bool (or (|wrapper#133| state) (not true))) ; $assume$wrapper.v:253$53
(define-fun |wrapper#330| ((state |wrapper_s|)) (_ BitVec 128) (ite (|wrapper#231| state) (|wrapper#290| state) (concat (|wrapper#323| state) (concat (|wrapper#322| state) (concat (|wrapper#320| state) (concat (|wrapper#318| state) (concat (|wrapper#316| state) (concat (|wrapper#314| state) (concat (|wrapper#312| state) (concat (|wrapper#310| state) (concat (|wrapper#308| state) (concat (|wrapper#306| state) (concat (|wrapper#304| state) (concat (|wrapper#302| state) (concat (|wrapper#300| state) (concat (|wrapper#298| state) (concat (|wrapper#296| state) (|wrapper#294| state)))))))))))))))))) ; $techmap\m1.$0\mem_data_buf[127:0]
(define-fun |wrapper#331| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#231| state) #b00000000 (|wrapper#235| state))) ; $techmap\m1.aes_reg_key0_i.$0\reg_out[127:0] [7:0]
(define-fun |wrapper#332| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#231| state) #b00000000 (|wrapper#249| state))) ; $techmap\m1.aes_reg_key0_i.$0\reg_out[127:0] [15:8]
(define-fun |wrapper#333| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#231| state) #b00000000 (|wrapper#251| state))) ; $techmap\m1.aes_reg_key0_i.$0\reg_out[127:0] [23:16]
(define-fun |wrapper#334| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#231| state) #b00000000 (|wrapper#253| state))) ; $techmap\m1.aes_reg_key0_i.$0\reg_out[127:0] [31:24]
(define-fun |wrapper#335| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#231| state) #b00000000 (|wrapper#255| state))) ; $techmap\m1.aes_reg_key0_i.$0\reg_out[127:0] [39:32]
(define-fun |wrapper#336| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#231| state) #b00000000 (|wrapper#257| state))) ; $techmap\m1.aes_reg_key0_i.$0\reg_out[127:0] [47:40]
(define-fun |wrapper#337| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#231| state) #b00000000 (|wrapper#259| state))) ; $techmap\m1.aes_reg_key0_i.$0\reg_out[127:0] [55:48]
(define-fun |wrapper#338| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#231| state) #b00000000 (|wrapper#261| state))) ; $techmap\m1.aes_reg_key0_i.$0\reg_out[127:0] [63:56]
(define-fun |wrapper#339| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#231| state) #b00000000 (|wrapper#263| state))) ; $techmap\m1.aes_reg_key0_i.$0\reg_out[127:0] [71:64]
(define-fun |wrapper#340| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#231| state) #b00000000 (|wrapper#265| state))) ; $techmap\m1.aes_reg_key0_i.$0\reg_out[127:0] [79:72]
(define-fun |wrapper#341| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#231| state) #b00000000 (|wrapper#237| state))) ; $techmap\m1.aes_reg_key0_i.$0\reg_out[127:0] [87:80]
(define-fun |wrapper#342| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#231| state) #b00000000 (|wrapper#239| state))) ; $techmap\m1.aes_reg_key0_i.$0\reg_out[127:0] [95:88]
(define-fun |wrapper#343| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#231| state) #b00000000 (|wrapper#241| state))) ; $techmap\m1.aes_reg_key0_i.$0\reg_out[127:0] [103:96]
(define-fun |wrapper#344| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#231| state) #b00000000 (|wrapper#243| state))) ; $techmap\m1.aes_reg_key0_i.$0\reg_out[127:0] [111:104]
(define-fun |wrapper#345| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#231| state) #b00000000 (|wrapper#245| state))) ; $techmap\m1.aes_reg_key0_i.$0\reg_out[127:0] [119:112]
(define-fun |wrapper#346| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#231| state) #b00000000 (|wrapper#247| state))) ; $techmap\m1.aes_reg_key0_i.$0\reg_out[127:0] [127:120]
(define-fun |wrapper#347| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#231| state) #b00000000 (|wrapper#276| state))) ; $techmap\m1.aes_reg_oplen_i.$0\reg_out[15:0] [7:0]
(define-fun |wrapper#348| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#231| state) #b00000000 (|wrapper#278| state))) ; $techmap\m1.aes_reg_oplen_i.$0\reg_out[15:0] [15:8]
(define-fun |wrapper#349| ((state |wrapper_s|)) (_ BitVec 128) (ite (|wrapper#231| state) #b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (|wrapper#326| state))) ; $techmap\m1.$0\uaes_ctr[127:0]
(define-fun |wrapper#350| ((state |wrapper_s|)) (_ BitVec 16) (ite (|wrapper#231| state) #b0000000000000000 (|wrapper#109| state))) ; $techmap\m1.$0\operated_bytes_count[15:0]
(define-fun |wrapper#351| ((state |wrapper_s|)) (_ BitVec 5) (ite (|wrapper#231| state) #b00000 (|wrapper#283| state))) ; $techmap\m1.$0\aes_time_counter[4:0]
(define-fun |wrapper#352| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#231| state) #b00000000 (|wrapper#199| state))) ; $techmap\m1.aes_reg_ctr_i.$0\reg_out[127:0] [7:0]
(define-fun |wrapper#353| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#231| state) #b00000000 (|wrapper#214| state))) ; $techmap\m1.aes_reg_ctr_i.$0\reg_out[127:0] [15:8]
(define-fun |wrapper#354| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#231| state) #b00000000 (|wrapper#216| state))) ; $techmap\m1.aes_reg_ctr_i.$0\reg_out[127:0] [23:16]
(define-fun |wrapper#355| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#231| state) #b00000000 (|wrapper#218| state))) ; $techmap\m1.aes_reg_ctr_i.$0\reg_out[127:0] [31:24]
(define-fun |wrapper#356| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#231| state) #b00000000 (|wrapper#220| state))) ; $techmap\m1.aes_reg_ctr_i.$0\reg_out[127:0] [39:32]
(define-fun |wrapper#357| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#231| state) #b00000000 (|wrapper#222| state))) ; $techmap\m1.aes_reg_ctr_i.$0\reg_out[127:0] [47:40]
(define-fun |wrapper#358| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#231| state) #b00000000 (|wrapper#224| state))) ; $techmap\m1.aes_reg_ctr_i.$0\reg_out[127:0] [55:48]
(define-fun |wrapper#359| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#231| state) #b00000000 (|wrapper#226| state))) ; $techmap\m1.aes_reg_ctr_i.$0\reg_out[127:0] [63:56]
(define-fun |wrapper#360| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#231| state) #b00000000 (|wrapper#228| state))) ; $techmap\m1.aes_reg_ctr_i.$0\reg_out[127:0] [71:64]
(define-fun |wrapper#361| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#231| state) #b00000000 (|wrapper#230| state))) ; $techmap\m1.aes_reg_ctr_i.$0\reg_out[127:0] [79:72]
(define-fun |wrapper#362| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#231| state) #b00000000 (|wrapper#201| state))) ; $techmap\m1.aes_reg_ctr_i.$0\reg_out[127:0] [87:80]
(define-fun |wrapper#363| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#231| state) #b00000000 (|wrapper#203| state))) ; $techmap\m1.aes_reg_ctr_i.$0\reg_out[127:0] [95:88]
(define-fun |wrapper#364| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#231| state) #b00000000 (|wrapper#205| state))) ; $techmap\m1.aes_reg_ctr_i.$0\reg_out[127:0] [103:96]
(define-fun |wrapper#365| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#231| state) #b00000000 (|wrapper#207| state))) ; $techmap\m1.aes_reg_ctr_i.$0\reg_out[127:0] [111:104]
(define-fun |wrapper#366| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#231| state) #b00000000 (|wrapper#209| state))) ; $techmap\m1.aes_reg_ctr_i.$0\reg_out[127:0] [119:112]
(define-fun |wrapper#367| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#231| state) #b00000000 (|wrapper#212| state))) ; $techmap\m1.aes_reg_ctr_i.$0\reg_out[127:0] [127:120]
(define-fun |wrapper#368| ((state |wrapper_s|)) (_ BitVec 128) (ite (|wrapper#231| state) (|wrapper#28| state) (|wrapper#292| state))) ; $techmap\m1.$0\encrypted_data_buf[127:0]
(define-fun |wrapper#369| ((state |wrapper_s|)) (_ BitVec 2) (ite (|wrapper#231| state) #b00 (|wrapper#120| state))) ; $techmap\m1.$0\aes_reg_state[1:0]
(define-fun |wrapper#370| ((state |wrapper_s|)) (_ BitVec 4) (ite (|wrapper#231| state) #b0000 (|wrapper#289| state))) ; $techmap\m1.$0\byte_counter[3:0]
(define-fun |wrapper#371| ((state |wrapper_s|)) (_ BitVec 128) (ite (|wrapper#231| state) #b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (|wrapper#286| state))) ; $techmap\m1.$0\block_counter[127:0]
(define-fun |wrapper#372| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#231| state) #b00000000 (|wrapper#270| state))) ; $techmap\m1.aes_reg_opaddr_i.$0\reg_out[15:0] [7:0]
(define-fun |wrapper#373| ((state |wrapper_s|)) (_ BitVec 8) (ite (|wrapper#231| state) #b00000000 (|wrapper#272| state))) ; $techmap\m1.aes_reg_opaddr_i.$0\reg_out[15:0] [15:8]
(define-fun |wrapper_a| ((state |wrapper_s|)) Bool 
  (|wrapper_a 0| state)
)
(define-fun |wrapper_u| ((state |wrapper_s|)) Bool (and
  (|wrapper_u 0| state)
  (|wrapper_u 1| state)
  (|wrapper_u 2| state)
  (|wrapper_u 3| state)
  (|wrapper_u 4| state)
  (|wrapper_u 5| state)
  (|wrapper_u 6| state)
))
(define-fun |wrapper_i| ((state |wrapper_s|)) Bool (and
  (= (|wrapper#69| state) #b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000) ; m1.aes_reg_ctr_i.reg_out
  (= (|wrapper#135| state) #b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000) ; m1.aes_reg_key0_i.reg_out
  (= (|wrapper#14| state) #b0000000000000000) ; m1.aes_reg_opaddr_i.reg_out
  (= (|wrapper#110| state) #b0000000000000000) ; m1.aes_reg_oplen_i.reg_out
  (= (|wrapper#20| state) #b00) ; m1.aes_reg_state
  (= (|wrapper#73| state) #b00000) ; m1.aes_time_counter
  (= (|wrapper#15| state) #b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000) ; m1.block_counter
  (= (|wrapper#17| state) #b0000) ; m1.byte_counter
  (= (|wrapper#79| state) #b0000000000000000) ; m1.operated_bytes_count
  (= (|wrapper#82| state) #b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000) ; m1.uaes_ctr
))
(define-fun |wrapper_h| ((state |wrapper_s|)) Bool true)
(define-fun |wrapper_t| ((state |wrapper_s|) (next_state |wrapper_s|)) Bool (and
  (= (|wrapper#330| state) (|wrapper#290| next_state)) ; $techmap/m1.$procdff$2509 \m1.mem_data_buf
  (= (concat (|wrapper#346| state) (concat (|wrapper#345| state) (concat (|wrapper#344| state) (concat (|wrapper#343| state) (concat (|wrapper#342| state) (concat (|wrapper#341| state) (concat (|wrapper#340| state) (concat (|wrapper#339| state) (concat (|wrapper#338| state) (concat (|wrapper#337| state) (concat (|wrapper#336| state) (concat (|wrapper#335| state) (concat (|wrapper#334| state) (concat (|wrapper#333| state) (concat (|wrapper#332| state) (|wrapper#331| state)))))))))))))))) (|wrapper#135| next_state)) ; $techmap/m1.aes_reg_key0_i.$procdff$2501 \m1.aes_reg_key0_i.reg_out
  (= (concat (|wrapper#348| state) (|wrapper#347| state)) (|wrapper#110| next_state)) ; $techmap/m1.aes_reg_oplen_i.$procdff$2502 \m1.aes_reg_oplen_i.reg_out
  (= (|wrapper#349| state) (|wrapper#82| next_state)) ; $techmap/m1.$procdff$2513 \m1.uaes_ctr
  (= (|wrapper#350| state) (|wrapper#79| next_state)) ; $techmap/m1.$procdff$2506 \m1.operated_bytes_count
  (= (|wrapper#351| state) (|wrapper#73| next_state)) ; $techmap/m1.$procdff$2511 \m1.aes_time_counter
  (= (concat (|wrapper#367| state) (concat (|wrapper#366| state) (concat (|wrapper#365| state) (concat (|wrapper#364| state) (concat (|wrapper#363| state) (concat (|wrapper#362| state) (concat (|wrapper#361| state) (concat (|wrapper#360| state) (concat (|wrapper#359| state) (concat (|wrapper#358| state) (concat (|wrapper#357| state) (concat (|wrapper#356| state) (concat (|wrapper#355| state) (concat (|wrapper#354| state) (concat (|wrapper#353| state) (|wrapper#352| state)))))))))))))))) (|wrapper#69| next_state)) ; $techmap/m1.aes_reg_ctr_i.$procdff$2501 \m1.aes_reg_ctr_i.reg_out
  (= (|wrapper#368| state) (|wrapper#28| next_state)) ; $techmap/m1.$procdff$2510 \m1.encrypted_data_buf
  (= (|wrapper#369| state) (|wrapper#20| next_state)) ; $techmap/m1.$procdff$2505 \m1.aes_reg_state
  (= (|wrapper#370| state) (|wrapper#17| next_state)) ; $techmap/m1.$procdff$2508 \m1.byte_counter
  (= (|wrapper#371| state) (|wrapper#15| next_state)) ; $techmap/m1.$procdff$2507 \m1.block_counter
  (= (concat (|wrapper#373| state) (|wrapper#372| state)) (|wrapper#14| next_state)) ; $techmap/m1.aes_reg_opaddr_i.$procdff$2502 \m1.aes_reg_opaddr_i.reg_out
)) ; end of module wrapper
; yosys-smt2-topmod wrapper
; end of yosys output
