circuit simple:
  module simple:
    input clk: UInt<1>
    input in: UInt<2>
    output result: UInt<2>
    input rstn: UInt<1>

    wire _0_result_1_0_: UInt<2>
    wire result_next: UInt<2>
    wire result_next2: UInt<2>
    wire _add_simple_v_10_1: UInt<2>
    wire _add_simple_v_11_2: UInt<2>
    reg _procdff_8: UInt<2>, asClock(clk)
    wire _procmux_6: UInt<2>

    _add_simple_v_10_1 <= add(pad(in, 2), asUInt(pad(UInt<1>("h1"), 2)))
    _add_simple_v_11_2 <= add(pad(result_next2, 2), asUInt(pad(UInt<1>("h1"), 2)))
    _procdff_8 <= _0_result_1_0_
    _procmux_6 <= mux(rstn, result_next, UInt<2>("h0"))

    _0_result_1_0_ <= bits(_procmux_6, 1, 0)
    result <= bits(_procdff_8, 1, 0)
    result_next <= bits(_add_simple_v_11_2, 1, 0)
    result_next2 <= bits(_add_simple_v_10_1, 1, 0)
