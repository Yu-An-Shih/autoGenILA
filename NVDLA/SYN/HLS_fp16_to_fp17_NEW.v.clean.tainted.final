module HLS_fp16_to_fp17 ( chn_a_rsc_vz , chn_a_rsc_z , chn_o_rsc_vz , nvdla_core_clk , nvdla_core_rstn , INSTR_IN_ZY , chn_a_rsc_lz_R0 , chn_a_rsc_lz_C0 , chn_a_rsc_lz_X0 , chn_a_rsc_vz_T , chn_a_rsc_vz_S , chn_a_rsc_z_T , chn_a_rsc_z_S , chn_o_rsc_lz_R0 , chn_o_rsc_lz_C0 , chn_o_rsc_lz_X0 , chn_o_rsc_vz_T , chn_o_rsc_vz_S , chn_o_rsc_z_R0 , chn_o_rsc_z_C0 , chn_o_rsc_z_X0 , nvdla_core_clk_T , nvdla_core_clk_S , nvdla_core_rstn_T , nvdla_core_rstn_S , chn_a_rsc_lz , chn_o_rsc_lz , chn_o_rsc_z , chn_a_rsc_lz_T , chn_a_rsc_lz_S , chn_a_rsc_vz_R , chn_a_rsc_vz_X , chn_a_rsc_vz_C , chn_a_rsc_z_R , chn_a_rsc_z_X , chn_a_rsc_z_C , chn_o_rsc_lz_T , chn_o_rsc_lz_S , chn_o_rsc_vz_R , chn_o_rsc_vz_X , chn_o_rsc_vz_C , chn_o_rsc_z_T , chn_o_rsc_z_S , nvdla_core_clk_R , nvdla_core_clk_X , nvdla_core_clk_C , nvdla_core_rstn_R , nvdla_core_rstn_X , nvdla_core_rstn_C );
  logic rst_zy;
  integer i;
  input INSTR_IN_ZY;
  output chn_a_rsc_lz;
  logic chn_a_rsc_lz ;
  output chn_a_rsc_lz_T ;
  logic chn_a_rsc_lz_T ;
  logic chn_a_rsc_lz_R ;
  logic chn_a_rsc_lz_C ;
  logic chn_a_rsc_lz_X ;
  logic [13:0] chn_a_rsc_lz_S ;
  input chn_a_rsc_lz_R0 ;
  input chn_a_rsc_lz_C0 ;
  input chn_a_rsc_lz_X0 ;
  output [13:0] chn_a_rsc_lz_S ;
  input chn_a_rsc_vz;
  input chn_a_rsc_vz_T ;
  input [13:0] chn_a_rsc_vz_S ;
  output chn_a_rsc_vz_R ;
  output chn_a_rsc_vz_X ;
  output chn_a_rsc_vz_C ;
  input [15:0] chn_a_rsc_z;
  input [15:0] chn_a_rsc_z_T ;
  input [13:0] chn_a_rsc_z_S ;
  output [15:0] chn_a_rsc_z_R ;
  output [15:0] chn_a_rsc_z_X ;
  output [15:0] chn_a_rsc_z_C ;
  logic chn_a_rsci_oswt;
  logic chn_a_rsci_oswt_T ;
  logic chn_a_rsci_oswt_R ;
  logic chn_a_rsci_oswt_C ;
  logic chn_a_rsci_oswt_X ;
  logic [13:0] chn_a_rsci_oswt_S ;
  logic chn_a_rsci_oswt_unreg;
  logic chn_a_rsci_oswt_unreg_T ;
  logic chn_a_rsci_oswt_unreg_R ;
  logic chn_a_rsci_oswt_unreg_C ;
  logic chn_a_rsci_oswt_unreg_X ;
  logic [13:0] chn_a_rsci_oswt_unreg_S ;
  output chn_o_rsc_lz;
  logic chn_o_rsc_lz ;
  output chn_o_rsc_lz_T ;
  logic chn_o_rsc_lz_T ;
  logic chn_o_rsc_lz_R ;
  logic chn_o_rsc_lz_C ;
  logic chn_o_rsc_lz_X ;
  logic [13:0] chn_o_rsc_lz_S ;
  input chn_o_rsc_lz_R0 ;
  input chn_o_rsc_lz_C0 ;
  input chn_o_rsc_lz_X0 ;
  output [13:0] chn_o_rsc_lz_S ;
  input chn_o_rsc_vz;
  input chn_o_rsc_vz_T ;
  input [13:0] chn_o_rsc_vz_S ;
  output chn_o_rsc_vz_R ;
  output chn_o_rsc_vz_X ;
  output chn_o_rsc_vz_C ;
  output [16:0] chn_o_rsc_z;
  logic [16:0] chn_o_rsc_z ;
  output [16:0] chn_o_rsc_z_T ;
  logic [16:0] chn_o_rsc_z_T ;
  logic [16:0] chn_o_rsc_z_R ;
  logic [16:0] chn_o_rsc_z_C ;
  logic [16:0] chn_o_rsc_z_X ;
  logic [13:0] chn_o_rsc_z_S ;
  input [16:0] chn_o_rsc_z_R0 ;
  input [16:0] chn_o_rsc_z_C0 ;
  input [16:0] chn_o_rsc_z_X0 ;
  output [13:0] chn_o_rsc_z_S ;
  logic chn_o_rsci_oswt;
  logic chn_o_rsci_oswt_T ;
  logic chn_o_rsci_oswt_R ;
  logic chn_o_rsci_oswt_C ;
  logic chn_o_rsci_oswt_X ;
  logic [13:0] chn_o_rsci_oswt_S ;
  logic chn_o_rsci_oswt_unreg;
  logic chn_o_rsci_oswt_unreg_T ;
  logic chn_o_rsci_oswt_unreg_R ;
  logic chn_o_rsci_oswt_unreg_C ;
  logic chn_o_rsci_oswt_unreg_X ;
  logic [13:0] chn_o_rsci_oswt_unreg_S ;
  input nvdla_core_clk;
  input nvdla_core_clk_T ;
  input [13:0] nvdla_core_clk_S ;
  output nvdla_core_clk_R ;
  output nvdla_core_clk_X ;
  output nvdla_core_clk_C ;
  input nvdla_core_rstn;
  input nvdla_core_rstn_T ;
  input [13:0] nvdla_core_rstn_S ;
  output nvdla_core_rstn_R ;
  output nvdla_core_rstn_X ;
  output nvdla_core_rstn_C ;
  logic [0:0] chn_a_rsc_vz_R0 ;
  logic [0:0] chn_a_rsc_vz_X0 ;
  logic [0:0] chn_a_rsc_vz_C0 ;
  logic [15:0] chn_a_rsc_z_R0 ;
  logic [15:0] chn_a_rsc_z_X0 ;
  logic [15:0] chn_a_rsc_z_C0 ;
  logic [0:0] chn_a_rsci_oswt_R0 ;
  logic [0:0] chn_a_rsci_oswt_X0 ;
  logic [0:0] chn_a_rsci_oswt_C0 ;
  logic [0:0] chn_o_rsc_vz_R0 ;
  logic [0:0] chn_o_rsc_vz_X0 ;
  logic [0:0] chn_o_rsc_vz_C0 ;
  logic [0:0] chn_o_rsci_oswt_R0 ;
  logic [0:0] chn_o_rsci_oswt_X0 ;
  logic [0:0] chn_o_rsci_oswt_C0 ;
  logic [0:0] nvdla_core_rstn_R0 ;
  logic [0:0] nvdla_core_rstn_X0 ;
  logic [0:0] nvdla_core_rstn_C0 ;
// module: HLS_fp16_to_fp17_core
  HLS_fp16_to_fp17_core HLS_fp16_to_fp17_core_inst (
    .chn_a_rsc_vz_T (  chn_a_rsc_vz_T  ),
    .chn_a_rsc_vz_R (  chn_a_rsc_vz_R0  ),
    .chn_a_rsc_vz_X (  chn_a_rsc_vz_X0  ),
    .chn_a_rsc_vz_C (  chn_a_rsc_vz_C0  ),
    .chn_a_rsc_vz_S (  chn_a_rsc_vz_S  ),
    .chn_a_rsc_z_T (  chn_a_rsc_z_T  ),
    .chn_a_rsc_z_R (  chn_a_rsc_z_R0  ),
    .chn_a_rsc_z_X (  chn_a_rsc_z_X0  ),
    .chn_a_rsc_z_C (  chn_a_rsc_z_C0  ),
    .chn_a_rsc_z_S (  chn_a_rsc_z_S  ),
    .chn_a_rsci_oswt_T (  chn_a_rsci_oswt_T  ),
    .chn_a_rsci_oswt_R (  chn_a_rsci_oswt_R0  ),
    .chn_a_rsci_oswt_X (  chn_a_rsci_oswt_X0  ),
    .chn_a_rsci_oswt_C (  chn_a_rsci_oswt_C0  ),
    .chn_a_rsci_oswt_S (  chn_a_rsci_oswt_S  ),
    .chn_o_rsc_vz_T (  chn_o_rsc_vz_T  ),
    .chn_o_rsc_vz_R (  chn_o_rsc_vz_R0  ),
    .chn_o_rsc_vz_X (  chn_o_rsc_vz_X0  ),
    .chn_o_rsc_vz_C (  chn_o_rsc_vz_C0  ),
    .chn_o_rsc_vz_S (  chn_o_rsc_vz_S  ),
    .chn_o_rsci_oswt_T (  chn_o_rsci_oswt_T  ),
    .chn_o_rsci_oswt_R (  chn_o_rsci_oswt_R0  ),
    .chn_o_rsci_oswt_X (  chn_o_rsci_oswt_X0  ),
    .chn_o_rsci_oswt_C (  chn_o_rsci_oswt_C0  ),
    .chn_o_rsci_oswt_S (  chn_o_rsci_oswt_S  ),
    .nvdla_core_rstn_T (  nvdla_core_rstn_T  ),
    .nvdla_core_rstn_R (  nvdla_core_rstn_R0  ),
    .nvdla_core_rstn_X (  nvdla_core_rstn_X0  ),
    .nvdla_core_rstn_C (  nvdla_core_rstn_C0  ),
    .nvdla_core_rstn_S (  nvdla_core_rstn_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .chn_a_rsc_lz_T (  chn_a_rsc_lz_T  ),
    .chn_a_rsc_lz_R0 (  chn_a_rsc_lz_R  ),
    .chn_a_rsc_lz_X0 (  chn_a_rsc_lz_X  ),
    .chn_a_rsc_lz_C0 (  chn_a_rsc_lz_C  ),
    .chn_a_rsc_lz_S ( chn_a_rsc_lz_S ),
    .chn_a_rsci_oswt_unreg_T (  chn_a_rsci_oswt_unreg_T  ),
    .chn_a_rsci_oswt_unreg_R0 (  chn_a_rsci_oswt_unreg_R  ),
    .chn_a_rsci_oswt_unreg_X0 (  chn_a_rsci_oswt_unreg_X  ),
    .chn_a_rsci_oswt_unreg_C0 (  chn_a_rsci_oswt_unreg_C  ),
    .chn_a_rsci_oswt_unreg_S ( chn_a_rsci_oswt_unreg_S ),
    .chn_o_rsc_lz_T (  chn_o_rsc_lz_T  ),
    .chn_o_rsc_lz_R0 (  chn_o_rsc_lz_R  ),
    .chn_o_rsc_lz_X0 (  chn_o_rsc_lz_X  ),
    .chn_o_rsc_lz_C0 (  chn_o_rsc_lz_C  ),
    .chn_o_rsc_lz_S ( chn_o_rsc_lz_S ),
    .chn_o_rsc_z_T (  chn_o_rsc_z_T  ),
    .chn_o_rsc_z_R0 (  chn_o_rsc_z_R  ),
    .chn_o_rsc_z_X0 (  chn_o_rsc_z_X  ),
    .chn_o_rsc_z_C0 (  chn_o_rsc_z_C  ),
    .chn_o_rsc_z_S ( chn_o_rsc_z_S ),
    .chn_o_rsci_oswt_unreg_T (  chn_o_rsci_oswt_unreg_T  ),
    .chn_o_rsci_oswt_unreg_R0 (  chn_o_rsci_oswt_unreg_R  ),
    .chn_o_rsci_oswt_unreg_X0 (  chn_o_rsci_oswt_unreg_X  ),
    .chn_o_rsci_oswt_unreg_C0 (  chn_o_rsci_oswt_unreg_C  ),
    .chn_o_rsci_oswt_unreg_S ( chn_o_rsci_oswt_unreg_S ),
    .nvdla_core_rstn ( nvdla_core_rstn ),
    .chn_a_rsci_oswt_unreg ( chn_a_rsci_oswt_unreg ),
    .chn_a_rsc_lz ( chn_a_rsc_lz ),
    .chn_o_rsc_lz ( chn_o_rsc_lz ),
    .chn_a_rsc_z ( chn_a_rsc_z ),
    .chn_a_rsci_oswt ( chn_a_rsci_oswt ),
    .chn_o_rsci_oswt ( chn_o_rsci_oswt ),
    .nvdla_core_clk ( nvdla_core_clk ),
    .chn_a_rsc_vz ( chn_a_rsc_vz ),
    .chn_o_rsc_vz ( chn_o_rsc_vz ),
    .chn_o_rsci_oswt_unreg ( chn_o_rsci_oswt_unreg ),
    .chn_o_rsc_z ( chn_o_rsc_z )
  );
  logic [0:0] chn_a_rsci_oswt_unreg_R0 ;
  logic [0:0] chn_a_rsci_oswt_unreg_X0 ;
  logic [0:0] chn_a_rsci_oswt_unreg_C0 ;
// module: FP16_TO_FP17_chn_a_rsci_unreg
  FP16_TO_FP17_chn_a_rsci_unreg chn_a_rsci_unreg_inst (
    .in_0_T (  chn_a_rsci_oswt_unreg_T  ),
    .in_0_R (  chn_a_rsci_oswt_unreg_R0  ),
    .in_0_X (  chn_a_rsci_oswt_unreg_X0  ),
    .in_0_C (  chn_a_rsci_oswt_unreg_C0  ),
    .in_0_S (  chn_a_rsci_oswt_unreg_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .rst_zy(rst_zy),
    .outsig_T (  chn_a_rsci_oswt_T  ),
    .outsig_R0 (  chn_a_rsci_oswt_R  ),
    .outsig_X0 (  chn_a_rsci_oswt_X  ),
    .outsig_C0 (  chn_a_rsci_oswt_C  ),
    .outsig_S ( chn_a_rsci_oswt_S ),
    .outsig ( chn_a_rsci_oswt ),
    .in_0 ( chn_a_rsci_oswt_unreg )
  );
  logic [0:0] chn_o_rsci_oswt_unreg_R0 ;
  logic [0:0] chn_o_rsci_oswt_unreg_X0 ;
  logic [0:0] chn_o_rsci_oswt_unreg_C0 ;
// module: FP16_TO_FP17_chn_o_rsci_unreg
  FP16_TO_FP17_chn_o_rsci_unreg chn_o_rsci_unreg_inst (
    .in_0_T (  chn_o_rsci_oswt_unreg_T  ),
    .in_0_R (  chn_o_rsci_oswt_unreg_R0  ),
    .in_0_X (  chn_o_rsci_oswt_unreg_X0  ),
    .in_0_C (  chn_o_rsci_oswt_unreg_C0  ),
    .in_0_S (  chn_o_rsci_oswt_unreg_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .rst_zy(rst_zy),
    .outsig_T (  chn_o_rsci_oswt_T  ),
    .outsig_R0 (  chn_o_rsci_oswt_R  ),
    .outsig_X0 (  chn_o_rsci_oswt_X  ),
    .outsig_C0 (  chn_o_rsci_oswt_C  ),
    .outsig_S ( chn_o_rsci_oswt_S ),
    .outsig ( chn_o_rsci_oswt ),
    .in_0 ( chn_o_rsci_oswt_unreg )
  );
  assign chn_o_rsci_oswt_unreg_C = ( chn_o_rsci_oswt_unreg_C0 );
  assign chn_a_rsci_oswt_unreg_C = ( chn_a_rsci_oswt_unreg_C0 );
  assign nvdla_core_rstn_C = ( nvdla_core_rstn_C0 );
  assign chn_o_rsci_oswt_C = ( chn_o_rsci_oswt_C0 );
  assign chn_o_rsc_vz_C = ( chn_o_rsc_vz_C0 );
  assign chn_a_rsci_oswt_C = ( chn_a_rsci_oswt_C0 );
  assign chn_a_rsc_z_C = ( chn_a_rsc_z_C0 );
  assign chn_a_rsc_vz_C = ( chn_a_rsc_vz_C0 );
  assign chn_o_rsc_z_C = ( chn_o_rsc_z_C0 );
  assign chn_o_rsc_lz_C = ( chn_o_rsc_lz_C0 );
  assign chn_a_rsc_lz_C = ( chn_a_rsc_lz_C0 );
  assign chn_o_rsci_oswt_unreg_X = ( chn_o_rsci_oswt_unreg_X0 );
  assign chn_a_rsci_oswt_unreg_X = ( chn_a_rsci_oswt_unreg_X0 );
  assign nvdla_core_rstn_X = ( nvdla_core_rstn_X0 );
  assign chn_o_rsci_oswt_X = ( chn_o_rsci_oswt_X0 );
  assign chn_o_rsc_vz_X = ( chn_o_rsc_vz_X0 );
  assign chn_a_rsci_oswt_X = ( chn_a_rsci_oswt_X0 );
  assign chn_a_rsc_z_X = ( chn_a_rsc_z_X0 );
  assign chn_a_rsc_vz_X = ( chn_a_rsc_vz_X0 );
  assign chn_o_rsc_z_X = ( chn_o_rsc_z_X0 );
  assign chn_o_rsc_lz_X = ( chn_o_rsc_lz_X0 );
  assign chn_a_rsc_lz_X = ( chn_a_rsc_lz_X0 );
  assign chn_o_rsci_oswt_unreg_R = ( chn_o_rsci_oswt_unreg_X0 & chn_o_rsci_oswt_unreg_R0 );
  assign chn_a_rsci_oswt_unreg_R = ( chn_a_rsci_oswt_unreg_X0 & chn_a_rsci_oswt_unreg_R0 );
  assign nvdla_core_rstn_R = ( nvdla_core_rstn_X0 & nvdla_core_rstn_R0 );
  assign chn_o_rsci_oswt_R = ( chn_o_rsci_oswt_X0 & chn_o_rsci_oswt_R0 );
  assign chn_o_rsc_vz_R = ( chn_o_rsc_vz_X0 & chn_o_rsc_vz_R0 );
  assign chn_a_rsci_oswt_R = ( chn_a_rsci_oswt_X0 & chn_a_rsci_oswt_R0 );
  assign chn_a_rsc_z_R = ( chn_a_rsc_z_X0 & chn_a_rsc_z_R0 );
  assign chn_a_rsc_vz_R = ( chn_a_rsc_vz_X0 & chn_a_rsc_vz_R0 );
  assign chn_o_rsc_z_R = ( chn_o_rsc_z_X0 & chn_o_rsc_z_R0 );
  assign chn_o_rsc_lz_R = ( chn_o_rsc_lz_X0 & chn_o_rsc_lz_R0 );
  assign chn_a_rsc_lz_R = ( chn_a_rsc_lz_X0 & chn_a_rsc_lz_R0 );
 // ground taints for floating regs
 // ground taints for unused wires
 // ground taints for unused wire slices
  assign rst_zy = !nvdla_core_rstn ;
endmodule
