  logic _000_;
  logic _000__T ;
  logic _000__R ;
  logic _000__C ;
  logic _000__X ;
  logic [13:0] _000__S ;
  logic _001_;
  logic _001__T ;
  logic _001__R ;
  logic _001__C ;
  logic _001__X ;
  logic [13:0] _001__S ;
  logic _002_;
  logic _002__T ;
  logic _002__R ;
  logic _002__C ;
  logic _002__X ;
  logic [13:0] _002__S ;
  logic [9:0] _003_;
  logic [9:0] _003__T ;
  logic [9:0] _003__R ;
  logic [9:0] _003__C ;
  logic [9:0] _003__X ;
  logic [13:0] _003__S ;
  logic [9:0] _004_;
  logic [9:0] _004__T ;
  logic [9:0] _004__R ;
  logic [9:0] _004__C ;
  logic [9:0] _004__X ;
  logic [13:0] _004__S ;
  logic [9:0] _005_;
  logic [9:0] _005__T ;
  logic [9:0] _005__R ;
  logic [9:0] _005__C ;
  logic [9:0] _005__X ;
  logic [13:0] _005__S ;
  logic [5:0] _006_;
  logic [5:0] _006__T ;
  logic [5:0] _006__R ;
  logic [5:0] _006__C ;
  logic [5:0] _006__X ;
  logic [13:0] _006__S ;
  logic [9:0] _007_;
  logic [9:0] _007__T ;
  logic [9:0] _007__R ;
  logic [9:0] _007__C ;
  logic [9:0] _007__X ;
  logic [13:0] _007__S ;
  logic _008_;
  logic _008__T ;
  logic _008__R ;
  logic _008__C ;
  logic _008__X ;
  logic [13:0] _008__S ;
  logic _009_;
  logic _009__T ;
  logic _009__R ;
  logic _009__C ;
  logic _009__X ;
  logic [13:0] _009__S ;
  logic _010_;
  logic _010__T ;
  logic _010__R ;
  logic _010__C ;
  logic _010__X ;
  logic [13:0] _010__S ;
  logic _011_;
  logic _011__T ;
  logic _011__R ;
  logic _011__C ;
  logic _011__X ;
  logic [13:0] _011__S ;
  logic _012_;
  logic _012__T ;
  logic _012__R ;
  logic _012__C ;
  logic _012__X ;
  logic [13:0] _012__S ;
  logic _013_;
  logic _013__T ;
  logic _013__R ;
  logic _013__C ;
  logic _013__X ;
  logic [13:0] _013__S ;
  logic _014_;
  logic _014__T ;
  logic _014__R ;
  logic _014__C ;
  logic _014__X ;
  logic [13:0] _014__S ;
  logic _015_;
  logic _015__T ;
  logic _015__R ;
  logic _015__C ;
  logic _015__X ;
  logic [13:0] _015__S ;
  logic _016_;
  logic _016__T ;
  logic _016__R ;
  logic _016__C ;
  logic _016__X ;
  logic [13:0] _016__S ;
  logic _017_;
  logic _017__T ;
  logic _017__R ;
  logic _017__C ;
  logic _017__X ;
  logic [13:0] _017__S ;
  logic _018_;
  logic _018__T ;
  logic _018__R ;
  logic _018__C ;
  logic _018__X ;
  logic [13:0] _018__S ;
  logic _019_;
  logic _019__T ;
  logic _019__R ;
  logic _019__C ;
  logic _019__X ;
  logic [13:0] _019__S ;
  logic [5:0] _020_;
  logic [5:0] _020__T ;
  logic [5:0] _020__R ;
  logic [5:0] _020__C ;
  logic [5:0] _020__X ;
  logic [13:0] _020__S ;
  logic [21:0] _021_;
  logic [21:0] _021__T ;
  logic [21:0] _021__R ;
  logic [21:0] _021__C ;
  logic [21:0] _021__X ;
  logic [13:0] _021__S ;
  logic [21:0] _022_;
  logic [21:0] _022__T ;
  logic [21:0] _022__R ;
  logic [21:0] _022__C ;
  logic [21:0] _022__X ;
  logic [13:0] _022__S ;
  logic [15:0] _023_;
  logic [15:0] _023__T ;
  logic [15:0] _023__R ;
  logic [15:0] _023__C ;
  logic [15:0] _023__X ;
  logic [13:0] _023__S ;
  logic [15:0] _024_;
  logic [15:0] _024__T ;
  logic [15:0] _024__R ;
  logic [15:0] _024__C ;
  logic [15:0] _024__X ;
  logic [13:0] _024__S ;
  logic _025_;
  logic _025__T ;
  logic _025__R ;
  logic _025__C ;
  logic _025__X ;
  logic [13:0] _025__S ;
  logic _026_;
  logic _026__T ;
  logic _026__R ;
  logic _026__C ;
  logic _026__X ;
  logic [13:0] _026__S ;
  logic _027_;
  logic _027__T ;
  logic _027__R ;
  logic _027__C ;
  logic _027__X ;
  logic [13:0] _027__S ;
  logic _028_;
  logic _028__T ;
  logic _028__R ;
  logic _028__C ;
  logic _028__X ;
  logic [13:0] _028__S ;
  logic [5:0] _029_;
  logic [5:0] _029__T ;
  logic [5:0] _029__R ;
  logic [5:0] _029__C ;
  logic [5:0] _029__X ;
  logic [13:0] _029__S ;
  logic _030_;
  logic _030__T ;
  logic _030__R ;
  logic _030__C ;
  logic _030__X ;
  logic [13:0] _030__S ;
  logic [9:0] _031_;
  logic [9:0] _031__T ;
  logic [9:0] _031__R ;
  logic [9:0] _031__C ;
  logic [9:0] _031__X ;
  logic [13:0] _031__S ;
  logic _032_;
  logic _032__T ;
  logic _032__R ;
  logic _032__C ;
  logic _032__X ;
  logic [13:0] _032__S ;
  logic _033_;
  logic _033__T ;
  logic _033__R ;
  logic _033__C ;
  logic _033__X ;
  logic [13:0] _033__S ;
  logic _034_;
  logic _034__T ;
  logic _034__R ;
  logic _034__C ;
  logic _034__X ;
  logic [13:0] _034__S ;
  logic _035_;
  logic _035__T ;
  logic _035__R ;
  logic _035__C ;
  logic _035__X ;
  logic [13:0] _035__S ;
  logic _036_;
  logic _036__T ;
  logic _036__R ;
  logic _036__C ;
  logic _036__X ;
  logic [13:0] _036__S ;
  logic _037_;
  logic _037__T ;
  logic _037__R ;
  logic _037__C ;
  logic _037__X ;
  logic [13:0] _037__S ;
  logic _038_;
  logic _038__T ;
  logic _038__R ;
  logic _038__C ;
  logic _038__X ;
  logic [13:0] _038__S ;
  logic [9:0] _039_;
  logic [9:0] _039__T ;
  logic [9:0] _039__R ;
  logic [9:0] _039__C ;
  logic [9:0] _039__X ;
  logic [13:0] _039__S ;
  logic [9:0] _040_;
  logic [9:0] _040__T ;
  logic [9:0] _040__R ;
  logic [9:0] _040__C ;
  logic [9:0] _040__X ;
  logic [13:0] _040__S ;
  logic [21:0] _041_;
  logic [21:0] _041__T ;
  logic [21:0] _041__R ;
  logic [21:0] _041__C ;
  logic [21:0] _041__X ;
  logic [13:0] _041__S ;
  logic [5:0] _042_;
  logic [5:0] _042__T ;
  logic [5:0] _042__R ;
  logic [5:0] _042__C ;
  logic [5:0] _042__X ;
  logic [13:0] _042__S ;
  logic [5:0] _043_;
  logic [5:0] _043__T ;
  logic [5:0] _043__R ;
  logic [5:0] _043__C ;
  logic [5:0] _043__X ;
  logic [13:0] _043__S ;
  logic _044_;
  logic _044__T ;
  logic _044__R ;
  logic _044__C ;
  logic _044__X ;
  logic [13:0] _044__S ;
  logic _045_;
  logic _045__T ;
  logic _045__R ;
  logic _045__C ;
  logic _045__X ;
  logic [13:0] _045__S ;
  logic _046_;
  logic _046__T ;
  logic _046__R ;
  logic _046__C ;
  logic _046__X ;
  logic [13:0] _046__S ;
  logic _047_;
  logic _047__T ;
  logic _047__R ;
  logic _047__C ;
  logic _047__X ;
  logic [13:0] _047__S ;
  logic _048_;
  logic _048__T ;
  logic _048__R ;
  logic _048__C ;
  logic _048__X ;
  logic [13:0] _048__S ;
  logic _049_;
  logic _049__T ;
  logic _049__R ;
  logic _049__C ;
  logic _049__X ;
  logic [13:0] _049__S ;
  logic _050_;
  logic _050__T ;
  logic _050__R ;
  logic _050__C ;
  logic _050__X ;
  logic [13:0] _050__S ;
  logic _051_;
  logic _051__T ;
  logic _051__R ;
  logic _051__C ;
  logic _051__X ;
  logic [13:0] _051__S ;
  logic _052_;
  logic _052__T ;
  logic _052__R ;
  logic _052__C ;
  logic _052__X ;
  logic [13:0] _052__S ;
  logic _053_;
  logic _053__T ;
  logic _053__R ;
  logic _053__C ;
  logic _053__X ;
  logic [13:0] _053__S ;
  logic _054_;
  logic _054__T ;
  logic _054__R ;
  logic _054__C ;
  logic _054__X ;
  logic [13:0] _054__S ;
  logic _055_;
  logic _055__T ;
  logic _055__R ;
  logic _055__C ;
  logic _055__X ;
  logic [13:0] _055__S ;
  logic _056_;
  logic _056__T ;
  logic _056__R ;
  logic _056__C ;
  logic _056__X ;
  logic [13:0] _056__S ;
  logic _057_;
  logic _057__T ;
  logic _057__R ;
  logic _057__C ;
  logic _057__X ;
  logic [13:0] _057__S ;
  logic _058_;
  logic _058__T ;
  logic _058__R ;
  logic _058__C ;
  logic _058__X ;
  logic [13:0] _058__S ;
  logic _059_;
  logic _059__T ;
  logic _059__R ;
  logic _059__C ;
  logic _059__X ;
  logic [13:0] _059__S ;
  logic _060_;
  logic _060__T ;
  logic _060__R ;
  logic _060__C ;
  logic _060__X ;
  logic [13:0] _060__S ;
  logic _061_;
  logic _061__T ;
  logic _061__R ;
  logic _061__C ;
  logic _061__X ;
  logic [13:0] _061__S ;
  logic _062_;
  logic _062__T ;
  logic _062__R ;
  logic _062__C ;
  logic _062__X ;
  logic [13:0] _062__S ;
  logic _063_;
  logic _063__T ;
  logic _063__R ;
  logic _063__C ;
  logic _063__X ;
  logic [13:0] _063__S ;
  logic _064_;
  logic _064__T ;
  logic _064__R ;
  logic _064__C ;
  logic _064__X ;
  logic [13:0] _064__S ;
  logic _065_;
  logic _065__T ;
  logic _065__R ;
  logic _065__C ;
  logic _065__X ;
  logic [13:0] _065__S ;
  logic _066_;
  logic _066__T ;
  logic _066__R ;
  logic _066__C ;
  logic _066__X ;
  logic [13:0] _066__S ;
  logic _067_;
  logic _067__T ;
  logic _067__R ;
  logic _067__C ;
  logic _067__X ;
  logic [13:0] _067__S ;
  logic _068_;
  logic _068__T ;
  logic _068__R ;
  logic _068__C ;
  logic _068__X ;
  logic [13:0] _068__S ;
  logic _069_;
  logic _069__T ;
  logic _069__R ;
  logic _069__C ;
  logic _069__X ;
  logic [13:0] _069__S ;
  logic _070_;
  logic _070__T ;
  logic _070__R ;
  logic _070__C ;
  logic _070__X ;
  logic [13:0] _070__S ;
  logic _071_;
  logic _071__T ;
  logic _071__R ;
  logic _071__C ;
  logic _071__X ;
  logic [13:0] _071__S ;
  logic _072_;
  logic _072__T ;
  logic _072__R ;
  logic _072__C ;
  logic _072__X ;
  logic [13:0] _072__S ;
  logic _073_;
  logic _073__T ;
  logic _073__R ;
  logic _073__C ;
  logic _073__X ;
  logic [13:0] _073__S ;
  logic _074_;
  logic _074__T ;
  logic _074__R ;
  logic _074__C ;
  logic _074__X ;
  logic [13:0] _074__S ;
  logic _075_;
  logic _075__T ;
  logic _075__R ;
  logic _075__C ;
  logic _075__X ;
  logic [13:0] _075__S ;
  logic _076_;
  logic _076__T ;
  logic _076__R ;
  logic _076__C ;
  logic _076__X ;
  logic [13:0] _076__S ;
  logic _077_;
  logic _077__T ;
  logic _077__R ;
  logic _077__C ;
  logic _077__X ;
  logic [13:0] _077__S ;
  logic _078_;
  logic _078__T ;
  logic _078__R ;
  logic _078__C ;
  logic _078__X ;
  logic [13:0] _078__S ;
  logic [5:0] _079_;
  logic [5:0] _079__T ;
  logic [5:0] _079__R ;
  logic [5:0] _079__C ;
  logic [5:0] _079__X ;
  logic [13:0] _079__S ;
  logic [5:0] _080_;
  logic [5:0] _080__T ;
  logic [5:0] _080__R ;
  logic [5:0] _080__C ;
  logic [5:0] _080__X ;
  logic [13:0] _080__S ;
  logic [5:0] _081_;
  logic [5:0] _081__T ;
  logic [5:0] _081__R ;
  logic [5:0] _081__C ;
  logic [5:0] _081__X ;
  logic [13:0] _081__S ;
  logic _082_;
  logic _082__T ;
  logic _082__R ;
  logic _082__C ;
  logic _082__X ;
  logic [13:0] _082__S ;
  logic _083_;
  logic _083__T ;
  logic _083__R ;
  logic _083__C ;
  logic _083__X ;
  logic [13:0] _083__S ;
  logic _084_;
  logic _084__T ;
  logic _084__R ;
  logic _084__C ;
  logic _084__X ;
  logic [13:0] _084__S ;
  logic _085_;
  logic _085__T ;
  logic _085__R ;
  logic _085__C ;
  logic _085__X ;
  logic [13:0] _085__S ;
  logic _086_;
  logic _086__T ;
  logic _086__R ;
  logic _086__C ;
  logic _086__X ;
  logic [13:0] _086__S ;
  logic _087_;
  logic _087__T ;
  logic _087__R ;
  logic _087__C ;
  logic _087__X ;
  logic [13:0] _087__S ;
  logic _088_;
  logic _088__T ;
  logic _088__R ;
  logic _088__C ;
  logic _088__X ;
  logic [13:0] _088__S ;
  logic _089_;
  logic _089__T ;
  logic _089__R ;
  logic _089__C ;
  logic _089__X ;
  logic [13:0] _089__S ;
  logic _090_;
  logic _090__T ;
  logic _090__R ;
  logic _090__C ;
  logic _090__X ;
  logic [13:0] _090__S ;
  logic _091_;
  logic _091__T ;
  logic _091__R ;
  logic _091__C ;
  logic _091__X ;
  logic [13:0] _091__S ;
  logic _092_;
  logic _092__T ;
  logic _092__R ;
  logic _092__C ;
  logic _092__X ;
  logic [13:0] _092__S ;
  logic _093_;
  logic _093__T ;
  logic _093__R ;
  logic _093__C ;
  logic _093__X ;
  logic [13:0] _093__S ;
  logic _094_;
  logic _094__T ;
  logic _094__R ;
  logic _094__C ;
  logic _094__X ;
  logic [13:0] _094__S ;
  logic _095_;
  logic _095__T ;
  logic _095__R ;
  logic _095__C ;
  logic _095__X ;
  logic [13:0] _095__S ;
  logic _096_;
  logic _096__T ;
  logic _096__R ;
  logic _096__C ;
  logic _096__X ;
  logic [13:0] _096__S ;
  logic _097_;
  logic _097__T ;
  logic _097__R ;
  logic _097__C ;
  logic _097__X ;
  logic [13:0] _097__S ;
  logic _098_;
  logic _098__T ;
  logic _098__R ;
  logic _098__C ;
  logic _098__X ;
  logic [13:0] _098__S ;
  logic _099_;
  logic _099__T ;
  logic _099__R ;
  logic _099__C ;
  logic _099__X ;
  logic [13:0] _099__S ;
  logic _100_;
  logic _100__T ;
  logic _100__R ;
  logic _100__C ;
  logic _100__X ;
  logic [13:0] _100__S ;
  logic _101_;
  logic _101__T ;
  logic _101__R ;
  logic _101__C ;
  logic _101__X ;
  logic [13:0] _101__S ;
  logic _102_;
  logic _102__T ;
  logic _102__R ;
  logic _102__C ;
  logic _102__X ;
  logic [13:0] _102__S ;
  logic _103_;
  logic _103__T ;
  logic _103__R ;
  logic _103__C ;
  logic _103__X ;
  logic [13:0] _103__S ;
  logic _104_;
  logic _104__T ;
  logic _104__R ;
  logic _104__C ;
  logic _104__X ;
  logic [13:0] _104__S ;
  logic _105_;
  logic _105__T ;
  logic _105__R ;
  logic _105__C ;
  logic _105__X ;
  logic [13:0] _105__S ;
  logic _106_;
  logic _106__T ;
  logic _106__R ;
  logic _106__C ;
  logic _106__X ;
  logic [13:0] _106__S ;
  logic _107_;
  logic _107__T ;
  logic _107__R ;
  logic _107__C ;
  logic _107__X ;
  logic [13:0] _107__S ;
  logic _108_;
  logic _108__T ;
  logic _108__R ;
  logic _108__C ;
  logic _108__X ;
  logic [13:0] _108__S ;
  logic _109_;
  logic _109__T ;
  logic _109__R ;
  logic _109__C ;
  logic _109__X ;
  logic [13:0] _109__S ;
  logic _110_;
  logic _110__T ;
  logic _110__R ;
  logic _110__C ;
  logic _110__X ;
  logic [13:0] _110__S ;
  logic _111_;
  logic _111__T ;
  logic _111__R ;
  logic _111__C ;
  logic _111__X ;
  logic [13:0] _111__S ;
  logic _112_;
  logic _112__T ;
  logic _112__R ;
  logic _112__C ;
  logic _112__X ;
  logic [13:0] _112__S ;
  logic _113_;
  logic _113__T ;
  logic _113__R ;
  logic _113__C ;
  logic _113__X ;
  logic [13:0] _113__S ;
  logic _114_;
  logic _114__T ;
  logic _114__R ;
  logic _114__C ;
  logic _114__X ;
  logic [13:0] _114__S ;
  logic _115_;
  logic _115__T ;
  logic _115__R ;
  logic _115__C ;
  logic _115__X ;
  logic [13:0] _115__S ;
  logic _116_;
  logic _116__T ;
  logic _116__R ;
  logic _116__C ;
  logic _116__X ;
  logic [13:0] _116__S ;
  logic _117_;
  logic _117__T ;
  logic _117__R ;
  logic _117__C ;
  logic _117__X ;
  logic [13:0] _117__S ;
  logic _118_;
  logic _118__T ;
  logic _118__R ;
  logic _118__C ;
  logic _118__X ;
  logic [13:0] _118__S ;
  logic _119_;
  logic _119__T ;
  logic _119__R ;
  logic _119__C ;
  logic _119__X ;
  logic [13:0] _119__S ;
  logic _120_;
  logic _120__T ;
  logic _120__R ;
  logic _120__C ;
  logic _120__X ;
  logic [13:0] _120__S ;
  logic _121_;
  logic _121__T ;
  logic _121__R ;
  logic _121__C ;
  logic _121__X ;
  logic [13:0] _121__S ;
  logic _122_;
  logic _122__T ;
  logic _122__R ;
  logic _122__C ;
  logic _122__X ;
  logic [13:0] _122__S ;
  logic _123_;
  logic _123__T ;
  logic _123__R ;
  logic _123__C ;
  logic _123__X ;
  logic [13:0] _123__S ;
  logic _124_;
  logic _124__T ;
  logic _124__R ;
  logic _124__C ;
  logic _124__X ;
  logic [13:0] _124__S ;
  logic _125_;
  logic _125__T ;
  logic _125__R ;
  logic _125__C ;
  logic _125__X ;
  logic [13:0] _125__S ;
  logic _126_;
  logic _126__T ;
  logic _126__R ;
  logic _126__C ;
  logic _126__X ;
  logic [13:0] _126__S ;
  logic _127_;
  logic _127__T ;
  logic _127__R ;
  logic _127__C ;
  logic _127__X ;
  logic [13:0] _127__S ;
  logic _128_;
  logic _128__T ;
  logic _128__R ;
  logic _128__C ;
  logic _128__X ;
  logic [13:0] _128__S ;
  logic _129_;
  logic _129__T ;
  logic _129__R ;
  logic _129__C ;
  logic _129__X ;
  logic [13:0] _129__S ;
  logic _130_;
  logic _130__T ;
  logic _130__R ;
  logic _130__C ;
  logic _130__X ;
  logic [13:0] _130__S ;
  logic _131_;
  logic _131__T ;
  logic _131__R ;
  logic _131__C ;
  logic _131__X ;
  logic [13:0] _131__S ;
  logic _132_;
  logic _132__T ;
  logic _132__R ;
  logic _132__C ;
  logic _132__X ;
  logic [13:0] _132__S ;
  logic _133_;
  logic _133__T ;
  logic _133__R ;
  logic _133__C ;
  logic _133__X ;
  logic [13:0] _133__S ;
  logic _134_;
  logic _134__T ;
  logic _134__R ;
  logic _134__C ;
  logic _134__X ;
  logic [13:0] _134__S ;
  logic _135_;
  logic _135__T ;
  logic _135__R ;
  logic _135__C ;
  logic _135__X ;
  logic [13:0] _135__S ;
  logic _136_;
  logic _136__T ;
  logic _136__R ;
  logic _136__C ;
  logic _136__X ;
  logic [13:0] _136__S ;
  logic _137_;
  logic _137__T ;
  logic _137__R ;
  logic _137__C ;
  logic _137__X ;
  logic [13:0] _137__S ;
  logic _138_;
  logic _138__T ;
  logic _138__R ;
  logic _138__C ;
  logic _138__X ;
  logic [13:0] _138__S ;
  logic _139_;
  logic _139__T ;
  logic _139__R ;
  logic _139__C ;
  logic _139__X ;
  logic [13:0] _139__S ;
  logic _140_;
  logic _140__T ;
  logic _140__R ;
  logic _140__C ;
  logic _140__X ;
  logic [13:0] _140__S ;
  logic _141_;
  logic _141__T ;
  logic _141__R ;
  logic _141__C ;
  logic _141__X ;
  logic [13:0] _141__S ;
  logic _142_;
  logic _142__T ;
  logic _142__R ;
  logic _142__C ;
  logic _142__X ;
  logic [13:0] _142__S ;
  logic _143_;
  logic _143__T ;
  logic _143__R ;
  logic _143__C ;
  logic _143__X ;
  logic [13:0] _143__S ;
  logic _144_;
  logic _144__T ;
  logic _144__R ;
  logic _144__C ;
  logic _144__X ;
  logic [13:0] _144__S ;
  logic _145_;
  logic _145__T ;
  logic _145__R ;
  logic _145__C ;
  logic _145__X ;
  logic [13:0] _145__S ;
  logic _146_;
  logic _146__T ;
  logic _146__R ;
  logic _146__C ;
  logic _146__X ;
  logic [13:0] _146__S ;
  logic _147_;
  logic _147__T ;
  logic _147__R ;
  logic _147__C ;
  logic _147__X ;
  logic [13:0] _147__S ;
  logic _148_;
  logic _148__T ;
  logic _148__R ;
  logic _148__C ;
  logic _148__X ;
  logic [13:0] _148__S ;
  logic _149_;
  logic _149__T ;
  logic _149__R ;
  logic _149__C ;
  logic _149__X ;
  logic [13:0] _149__S ;
  logic _150_;
  logic _150__T ;
  logic _150__R ;
  logic _150__C ;
  logic _150__X ;
  logic [13:0] _150__S ;
  logic _151_;
  logic _151__T ;
  logic _151__R ;
  logic _151__C ;
  logic _151__X ;
  logic [13:0] _151__S ;
  logic _152_;
  logic _152__T ;
  logic _152__R ;
  logic _152__C ;
  logic _152__X ;
  logic [13:0] _152__S ;
  logic _153_;
  logic _153__T ;
  logic _153__R ;
  logic _153__C ;
  logic _153__X ;
  logic [13:0] _153__S ;
  logic _154_;
  logic _154__T ;
  logic _154__R ;
  logic _154__C ;
  logic _154__X ;
  logic [13:0] _154__S ;
  logic _155_;
  logic _155__T ;
  logic _155__R ;
  logic _155__C ;
  logic _155__X ;
  logic [13:0] _155__S ;
  logic _156_;
  logic _156__T ;
  logic _156__R ;
  logic _156__C ;
  logic _156__X ;
  logic [13:0] _156__S ;
  logic _157_;
  logic _157__T ;
  logic _157__R ;
  logic _157__C ;
  logic _157__X ;
  logic [13:0] _157__S ;
  logic _158_;
  logic _158__T ;
  logic _158__R ;
  logic _158__C ;
  logic _158__X ;
  logic [13:0] _158__S ;
  logic _159_;
  logic _159__T ;
  logic _159__R ;
  logic _159__C ;
  logic _159__X ;
  logic [13:0] _159__S ;
  logic _160_;
  logic _160__T ;
  logic _160__R ;
  logic _160__C ;
  logic _160__X ;
  logic [13:0] _160__S ;
  logic _161_;
  logic _161__T ;
  logic _161__R ;
  logic _161__C ;
  logic _161__X ;
  logic [13:0] _161__S ;
  logic _162_;
  logic _162__T ;
  logic _162__R ;
  logic _162__C ;
  logic _162__X ;
  logic [13:0] _162__S ;
  logic _163_;
  logic _163__T ;
  logic _163__R ;
  logic _163__C ;
  logic _163__X ;
  logic [13:0] _163__S ;
  logic _164_;
  logic _164__T ;
  logic _164__R ;
  logic _164__C ;
  logic _164__X ;
  logic [13:0] _164__S ;
  logic _165_;
  logic _165__T ;
  logic _165__R ;
  logic _165__C ;
  logic _165__X ;
  logic [13:0] _165__S ;
  logic _166_;
  logic _166__T ;
  logic _166__R ;
  logic _166__C ;
  logic _166__X ;
  logic [13:0] _166__S ;
  logic _167_;
  logic _167__T ;
  logic _167__R ;
  logic _167__C ;
  logic _167__X ;
  logic [13:0] _167__S ;
  logic _168_;
  logic _168__T ;
  logic _168__R ;
  logic _168__C ;
  logic _168__X ;
  logic [13:0] _168__S ;
  logic _169_;
  logic _169__T ;
  logic _169__R ;
  logic _169__C ;
  logic _169__X ;
  logic [13:0] _169__S ;
  logic _170_;
  logic _170__T ;
  logic _170__R ;
  logic _170__C ;
  logic _170__X ;
  logic [13:0] _170__S ;
  logic _171_;
  logic _171__T ;
  logic _171__R ;
  logic _171__C ;
  logic _171__X ;
  logic [13:0] _171__S ;
  logic _172_;
  logic _172__T ;
  logic _172__R ;
  logic _172__C ;
  logic _172__X ;
  logic [13:0] _172__S ;
  logic _173_;
  logic _173__T ;
  logic _173__R ;
  logic _173__C ;
  logic _173__X ;
  logic [13:0] _173__S ;
  logic _174_;
  logic _174__T ;
  logic _174__R ;
  logic _174__C ;
  logic _174__X ;
  logic [13:0] _174__S ;
  logic _175_;
  logic _175__T ;
  logic _175__R ;
  logic _175__C ;
  logic _175__X ;
  logic [13:0] _175__S ;
  logic _176_;
  logic _176__T ;
  logic _176__R ;
  logic _176__C ;
  logic _176__X ;
  logic [13:0] _176__S ;
  logic [5:0] _177_;
  logic [5:0] _177__T ;
  logic [5:0] _177__R ;
  logic [5:0] _177__C ;
  logic [5:0] _177__X ;
  logic [13:0] _177__S ;
  logic _178_;
  logic _178__T ;
  logic _178__R ;
  logic _178__C ;
  logic _178__X ;
  logic [13:0] _178__S ;
  logic _179_;
  logic _179__T ;
  logic _179__R ;
  logic _179__C ;
  logic _179__X ;
  logic [13:0] _179__S ;
  logic _180_;
  logic _180__T ;
  logic _180__R ;
  logic _180__C ;
  logic _180__X ;
  logic [13:0] _180__S ;
  logic _181_;
  logic _181__T ;
  logic _181__R ;
  logic _181__C ;
  logic _181__X ;
  logic [13:0] _181__S ;
  logic _182_;
  logic _182__T ;
  logic _182__R ;
  logic _182__C ;
  logic _182__X ;
  logic [13:0] _182__S ;
  logic _183_;
  logic _183__T ;
  logic _183__R ;
  logic _183__C ;
  logic _183__X ;
  logic [13:0] _183__S ;
  logic _184_;
  logic _184__T ;
  logic _184__R ;
  logic _184__C ;
  logic _184__X ;
  logic [13:0] _184__S ;
  logic _185_;
  logic _185__T ;
  logic _185__R ;
  logic _185__C ;
  logic _185__X ;
  logic [13:0] _185__S ;
  logic _186_;
  logic _186__T ;
  logic _186__R ;
  logic _186__C ;
  logic _186__X ;
  logic [13:0] _186__S ;
  logic _187_;
  logic _187__T ;
  logic _187__R ;
  logic _187__C ;
  logic _187__X ;
  logic [13:0] _187__S ;
  logic _188_;
  logic _188__T ;
  logic _188__R ;
  logic _188__C ;
  logic _188__X ;
  logic [13:0] _188__S ;
  logic _189_;
  logic _189__T ;
  logic _189__R ;
  logic _189__C ;
  logic _189__X ;
  logic [13:0] _189__S ;
  logic _190_;
  logic _190__T ;
  logic _190__R ;
  logic _190__C ;
  logic _190__X ;
  logic [13:0] _190__S ;
  logic _191_;
  logic _191__T ;
  logic _191__R ;
  logic _191__C ;
  logic _191__X ;
  logic [13:0] _191__S ;
  logic _192_;
  logic _192__T ;
  logic _192__R ;
  logic _192__C ;
  logic _192__X ;
  logic [13:0] _192__S ;
  logic _193_;
  logic _193__T ;
  logic _193__R ;
  logic _193__C ;
  logic _193__X ;
  logic [13:0] _193__S ;
  logic _194_;
  logic _194__T ;
  logic _194__R ;
  logic _194__C ;
  logic _194__X ;
  logic [13:0] _194__S ;
  logic _195_;
  logic _195__T ;
  logic _195__R ;
  logic _195__C ;
  logic _195__X ;
  logic [13:0] _195__S ;
  logic _196_;
  logic _196__T ;
  logic _196__R ;
  logic _196__C ;
  logic _196__X ;
  logic [13:0] _196__S ;
  logic _197_;
  logic _197__T ;
  logic _197__R ;
  logic _197__C ;
  logic _197__X ;
  logic [13:0] _197__S ;
  logic _198_;
  logic _198__T ;
  logic _198__R ;
  logic _198__C ;
  logic _198__X ;
  logic [13:0] _198__S ;
  logic _199_;
  logic _199__T ;
  logic _199__R ;
  logic _199__C ;
  logic _199__X ;
  logic [13:0] _199__S ;
  logic _200_;
  logic _200__T ;
  logic _200__R ;
  logic _200__C ;
  logic _200__X ;
  logic [13:0] _200__S ;
  logic _201_;
  logic _201__T ;
  logic _201__R ;
  logic _201__C ;
  logic _201__X ;
  logic [13:0] _201__S ;
  logic _202_;
  logic _202__T ;
  logic _202__R ;
  logic _202__C ;
  logic _202__X ;
  logic [13:0] _202__S ;
  logic _203_;
  logic _203__T ;
  logic _203__R ;
  logic _203__C ;
  logic _203__X ;
  logic [13:0] _203__S ;
  logic FpBitsToFloat_6U_10U_1_and_1_cse;
  logic FpBitsToFloat_6U_10U_1_and_1_cse_T ;
  logic FpBitsToFloat_6U_10U_1_and_1_cse_R ;
  logic FpBitsToFloat_6U_10U_1_and_1_cse_C ;
  logic FpBitsToFloat_6U_10U_1_and_1_cse_X ;
  logic [13:0] FpBitsToFloat_6U_10U_1_and_1_cse_S ;
  logic FpBitsToFloat_6U_10U_1_and_nl;
  logic FpBitsToFloat_6U_10U_1_and_nl_T ;
  logic FpBitsToFloat_6U_10U_1_and_nl_R ;
  logic FpBitsToFloat_6U_10U_1_and_nl_C ;
  logic FpBitsToFloat_6U_10U_1_and_nl_X ;
  logic [13:0] FpBitsToFloat_6U_10U_1_and_nl_S ;
  logic [5:0] FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2;
  logic [5:0]  FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_T ;
  logic [5:0]  FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_PREV_VAL1 ;
  logic [5:0]  FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_PREV_VAL2 ;
  logic [5:0]  FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_R ;
  logic [5:0]  FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_X ;
  logic [5:0]  FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_C ;
  logic [13:0] FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_S ;
  logic FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_t_flag ;
  logic FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_r_flag ;
  assign FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_S = 466 ;
  logic [9:0] FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2;
  logic [9:0]  FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_T ;
  logic [9:0]  FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_PREV_VAL1 ;
  logic [9:0]  FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_PREV_VAL2 ;
  logic [9:0]  FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_R ;
  logic [9:0]  FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_X ;
  logic [9:0]  FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_C ;
  logic [13:0] FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_S ;
  logic FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_t_flag ;
  logic FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_r_flag ;
  assign FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_S = 467 ;
  logic [9:0] FpMantRNE_22U_11U_else_acc_nl;
  logic [9:0] FpMantRNE_22U_11U_else_acc_nl_T ;
  logic [9:0] FpMantRNE_22U_11U_else_acc_nl_R ;
  logic [9:0] FpMantRNE_22U_11U_else_acc_nl_C ;
  logic [9:0] FpMantRNE_22U_11U_else_acc_nl_X ;
  logic [13:0] FpMantRNE_22U_11U_else_acc_nl_S ;
  logic FpMantRNE_22U_11U_else_and_svs;
  logic FpMantRNE_22U_11U_else_and_svs_T ;
  logic FpMantRNE_22U_11U_else_and_svs_R ;
  logic FpMantRNE_22U_11U_else_and_svs_C ;
  logic FpMantRNE_22U_11U_else_and_svs_X ;
  logic [13:0] FpMantRNE_22U_11U_else_and_svs_S ;
  logic FpMantRNE_22U_11U_else_carry_sva;
  logic FpMantRNE_22U_11U_else_carry_sva_T ;
  logic FpMantRNE_22U_11U_else_carry_sva_R ;
  logic FpMantRNE_22U_11U_else_carry_sva_C ;
  logic FpMantRNE_22U_11U_else_carry_sva_X ;
  logic [13:0] FpMantRNE_22U_11U_else_carry_sva_S ;
  logic FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl;
  logic FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_T ;
  logic FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_R ;
  logic FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_C ;
  logic FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_X ;
  logic [13:0] FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_S ;
  logic FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp;
  logic FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_T ;
  logic FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_R ;
  logic FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_C ;
  logic FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_X ;
  logic [13:0] FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_S ;
  logic [5:0] FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1;
  logic [5:0] FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_T ;
  logic [5:0] FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_R ;
  logic [5:0] FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_C ;
  logic [5:0] FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_X ;
  logic [13:0] FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_S ;
  logic [9:0] FpMul_6U_10U_FpMul_6U_10U_FpMul_6U_10U_nor_1_nl;
  logic [9:0] FpMul_6U_10U_FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_T ;
  logic [9:0] FpMul_6U_10U_FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_R ;
  logic [9:0] FpMul_6U_10U_FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_C ;
  logic [9:0] FpMul_6U_10U_FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_X ;
  logic [13:0] FpMul_6U_10U_FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_S ;
  logic [5:0] FpMul_6U_10U_FpMul_6U_10U_and_2_nl;
  logic [5:0] FpMul_6U_10U_FpMul_6U_10U_and_2_nl_T ;
  logic [5:0] FpMul_6U_10U_FpMul_6U_10U_and_2_nl_R ;
  logic [5:0] FpMul_6U_10U_FpMul_6U_10U_and_2_nl_C ;
  logic [5:0] FpMul_6U_10U_FpMul_6U_10U_and_2_nl_X ;
  logic [13:0] FpMul_6U_10U_FpMul_6U_10U_and_2_nl_S ;
  logic FpMul_6U_10U_FpMul_6U_10U_nor_1_nl;
  logic FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_T ;
  logic FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_R ;
  logic FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_C ;
  logic FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_X ;
  logic [13:0] FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_S ;
  logic [6:0] FpMul_6U_10U_else_2_acc_1_nl;
  logic [6:0] FpMul_6U_10U_else_2_acc_1_nl_T ;
  logic [6:0] FpMul_6U_10U_else_2_acc_1_nl_R ;
  logic [6:0] FpMul_6U_10U_else_2_acc_1_nl_C ;
  logic [6:0] FpMul_6U_10U_else_2_acc_1_nl_X ;
  logic [13:0] FpMul_6U_10U_else_2_acc_1_nl_S ;
  logic [5:0] FpMul_6U_10U_else_2_else_acc_2_nl;
  logic [5:0] FpMul_6U_10U_else_2_else_acc_2_nl_T ;
  logic [5:0] FpMul_6U_10U_else_2_else_acc_2_nl_R ;
  logic [5:0] FpMul_6U_10U_else_2_else_acc_2_nl_C ;
  logic [5:0] FpMul_6U_10U_else_2_else_acc_2_nl_X ;
  logic [13:0] FpMul_6U_10U_else_2_else_acc_2_nl_S ;
  logic FpMul_6U_10U_else_2_else_if_if_acc_1_itm_5_1;
  logic FpMul_6U_10U_else_2_else_if_if_acc_1_itm_5_1_T ;
  logic FpMul_6U_10U_else_2_else_if_if_acc_1_itm_5_1_R ;
  logic FpMul_6U_10U_else_2_else_if_if_acc_1_itm_5_1_C ;
  logic FpMul_6U_10U_else_2_else_if_if_acc_1_itm_5_1_X ;
  logic [13:0] FpMul_6U_10U_else_2_else_if_if_acc_1_itm_5_1_S ;
  logic [5:0] FpMul_6U_10U_else_2_else_if_if_acc_1_nl;
  logic [5:0] FpMul_6U_10U_else_2_else_if_if_acc_1_nl_T ;
  logic [5:0] FpMul_6U_10U_else_2_else_if_if_acc_1_nl_R ;
  logic [5:0] FpMul_6U_10U_else_2_else_if_if_acc_1_nl_C ;
  logic [5:0] FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X ;
  logic [13:0] FpMul_6U_10U_else_2_else_if_if_acc_1_nl_S ;
  logic [5:0] FpMul_6U_10U_else_2_else_if_if_acc_nl;
  logic [5:0] FpMul_6U_10U_else_2_else_if_if_acc_nl_T ;
  logic [5:0] FpMul_6U_10U_else_2_else_if_if_acc_nl_R ;
  logic [5:0] FpMul_6U_10U_else_2_else_if_if_acc_nl_C ;
  logic [5:0] FpMul_6U_10U_else_2_else_if_if_acc_nl_X ;
  logic [13:0] FpMul_6U_10U_else_2_else_if_if_acc_nl_S ;
  logic FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2;
  logic  FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_T ;
  logic  FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_PREV_VAL1 ;
  logic  FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_PREV_VAL2 ;
  logic  FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_R ;
  logic  FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_X ;
  logic  FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_C ;
  logic [13:0] FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_S ;
  logic FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_t_flag ;
  logic FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_r_flag ;
  assign FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_S = 468 ;
  logic FpMul_6U_10U_else_2_if_acc_itm_6_1;
  logic FpMul_6U_10U_else_2_if_acc_itm_6_1_T ;
  logic FpMul_6U_10U_else_2_if_acc_itm_6_1_R ;
  logic FpMul_6U_10U_else_2_if_acc_itm_6_1_C ;
  logic FpMul_6U_10U_else_2_if_acc_itm_6_1_X ;
  logic [13:0] FpMul_6U_10U_else_2_if_acc_itm_6_1_S ;
  logic [6:0] FpMul_6U_10U_else_2_if_acc_nl;
  logic [6:0] FpMul_6U_10U_else_2_if_acc_nl_T ;
  logic [6:0] FpMul_6U_10U_else_2_if_acc_nl_R ;
  logic [6:0] FpMul_6U_10U_else_2_if_acc_nl_C ;
  logic [6:0] FpMul_6U_10U_else_2_if_acc_nl_X ;
  logic [13:0] FpMul_6U_10U_else_2_if_acc_nl_S ;
  logic FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs;
  logic  FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_T ;
  logic  FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_PREV_VAL1 ;
  logic  FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_PREV_VAL2 ;
  logic  FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_R ;
  logic  FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_X ;
  logic  FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_C ;
  logic [13:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_S ;
  logic FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_t_flag ;
  logic FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_r_flag ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_S = 469 ;
  logic FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3;
  logic  FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_T ;
  logic  FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_PREV_VAL1 ;
  logic  FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_PREV_VAL2 ;
  logic  FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_R ;
  logic  FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_X ;
  logic  FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_C ;
  logic [13:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_S ;
  logic FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_t_flag ;
  logic FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_r_flag ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_S = 470 ;
  logic FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4;
  logic  FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_T ;
  logic  FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_PREV_VAL1 ;
  logic  FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_PREV_VAL2 ;
  logic  FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_R ;
  logic  FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_X ;
  logic  FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_C ;
  logic [13:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_S ;
  logic FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_t_flag ;
  logic FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_r_flag ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_S = 471 ;
  logic FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3;
  logic  FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_T ;
  logic  FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_PREV_VAL1 ;
  logic  FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_PREV_VAL2 ;
  logic  FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_R ;
  logic  FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_X ;
  logic  FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_C ;
  logic [13:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_S ;
  logic FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_t_flag ;
  logic FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_r_flag ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_S = 472 ;
  logic FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4;
  logic  FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_T ;
  logic  FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_PREV_VAL1 ;
  logic  FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_PREV_VAL2 ;
  logic  FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_R ;
  logic  FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_X ;
  logic  FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_C ;
  logic [13:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_S ;
  logic FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_t_flag ;
  logic FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_r_flag ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_S = 473 ;
  logic FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp;
  logic FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_T ;
  logic FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_R ;
  logic FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_C ;
  logic FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_X ;
  logic [13:0] FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_S ;
  logic FpMul_6U_10U_is_inf_lpi_1_dfm_2;
  logic FpMul_6U_10U_is_inf_lpi_1_dfm_2_T ;
  logic FpMul_6U_10U_is_inf_lpi_1_dfm_2_R ;
  logic FpMul_6U_10U_is_inf_lpi_1_dfm_2_C ;
  logic FpMul_6U_10U_is_inf_lpi_1_dfm_2_X ;
  logic [13:0] FpMul_6U_10U_is_inf_lpi_1_dfm_2_S ;
  logic FpMul_6U_10U_lor_1_lpi_1_dfm_3;
  logic  FpMul_6U_10U_lor_1_lpi_1_dfm_3_T ;
  logic  FpMul_6U_10U_lor_1_lpi_1_dfm_3_PREV_VAL1 ;
  logic  FpMul_6U_10U_lor_1_lpi_1_dfm_3_PREV_VAL2 ;
  logic  FpMul_6U_10U_lor_1_lpi_1_dfm_3_R ;
  logic  FpMul_6U_10U_lor_1_lpi_1_dfm_3_X ;
  logic  FpMul_6U_10U_lor_1_lpi_1_dfm_3_C ;
  logic [13:0] FpMul_6U_10U_lor_1_lpi_1_dfm_3_S ;
  logic FpMul_6U_10U_lor_1_lpi_1_dfm_3_t_flag ;
  logic FpMul_6U_10U_lor_1_lpi_1_dfm_3_r_flag ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_3_S = 474 ;
  logic FpMul_6U_10U_lor_1_lpi_1_dfm_4;
  logic  FpMul_6U_10U_lor_1_lpi_1_dfm_4_T ;
  logic  FpMul_6U_10U_lor_1_lpi_1_dfm_4_PREV_VAL1 ;
  logic  FpMul_6U_10U_lor_1_lpi_1_dfm_4_PREV_VAL2 ;
  logic  FpMul_6U_10U_lor_1_lpi_1_dfm_4_R ;
  logic  FpMul_6U_10U_lor_1_lpi_1_dfm_4_X ;
  logic  FpMul_6U_10U_lor_1_lpi_1_dfm_4_C ;
  logic [13:0] FpMul_6U_10U_lor_1_lpi_1_dfm_4_S ;
  logic FpMul_6U_10U_lor_1_lpi_1_dfm_4_t_flag ;
  logic FpMul_6U_10U_lor_1_lpi_1_dfm_4_r_flag ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_4_S = 475 ;
  logic FpMul_6U_10U_lor_1_lpi_1_dfm_st_3;
  logic  FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_T ;
  logic  FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_PREV_VAL1 ;
  logic  FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_PREV_VAL2 ;
  logic  FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_R ;
  logic  FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_X ;
  logic  FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_C ;
  logic [13:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_S ;
  logic FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_t_flag ;
  logic FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_r_flag ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_S = 476 ;
  logic FpMul_6U_10U_lor_1_lpi_1_dfm_st_4;
  logic  FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_T ;
  logic  FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_PREV_VAL1 ;
  logic  FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_PREV_VAL2 ;
  logic  FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_R ;
  logic  FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_X ;
  logic  FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_C ;
  logic [13:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_S ;
  logic FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_t_flag ;
  logic FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_r_flag ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_S = 477 ;
  logic FpMul_6U_10U_lor_2_lpi_1_dfm;
  logic FpMul_6U_10U_lor_2_lpi_1_dfm_T ;
  logic FpMul_6U_10U_lor_2_lpi_1_dfm_R ;
  logic FpMul_6U_10U_lor_2_lpi_1_dfm_C ;
  logic FpMul_6U_10U_lor_2_lpi_1_dfm_X ;
  logic [13:0] FpMul_6U_10U_lor_2_lpi_1_dfm_S ;
  logic FpMul_6U_10U_mux_10_itm_3;
  logic  FpMul_6U_10U_mux_10_itm_3_T ;
  logic  FpMul_6U_10U_mux_10_itm_3_PREV_VAL1 ;
  logic  FpMul_6U_10U_mux_10_itm_3_PREV_VAL2 ;
  logic  FpMul_6U_10U_mux_10_itm_3_R ;
  logic  FpMul_6U_10U_mux_10_itm_3_X ;
  logic  FpMul_6U_10U_mux_10_itm_3_C ;
  logic [13:0] FpMul_6U_10U_mux_10_itm_3_S ;
  logic FpMul_6U_10U_mux_10_itm_3_t_flag ;
  logic FpMul_6U_10U_mux_10_itm_3_r_flag ;
  assign FpMul_6U_10U_mux_10_itm_3_S = 478 ;
  logic FpMul_6U_10U_mux_10_itm_4;
  logic  FpMul_6U_10U_mux_10_itm_4_T ;
  logic  FpMul_6U_10U_mux_10_itm_4_PREV_VAL1 ;
  logic  FpMul_6U_10U_mux_10_itm_4_PREV_VAL2 ;
  logic  FpMul_6U_10U_mux_10_itm_4_R ;
  logic  FpMul_6U_10U_mux_10_itm_4_X ;
  logic  FpMul_6U_10U_mux_10_itm_4_C ;
  logic [13:0] FpMul_6U_10U_mux_10_itm_4_S ;
  logic FpMul_6U_10U_mux_10_itm_4_t_flag ;
  logic FpMul_6U_10U_mux_10_itm_4_r_flag ;
  assign FpMul_6U_10U_mux_10_itm_4_S = 479 ;
  logic [9:0] FpMul_6U_10U_nor_nl;
  logic [9:0] FpMul_6U_10U_nor_nl_T ;
  logic [9:0] FpMul_6U_10U_nor_nl_R ;
  logic [9:0] FpMul_6U_10U_nor_nl_C ;
  logic [9:0] FpMul_6U_10U_nor_nl_X ;
  logic [13:0] FpMul_6U_10U_nor_nl_S ;
  logic [5:0] FpMul_6U_10U_o_expo_lpi_1_dfm;
  logic [5:0] FpMul_6U_10U_o_expo_lpi_1_dfm_T ;
  logic [5:0] FpMul_6U_10U_o_expo_lpi_1_dfm_R ;
  logic [5:0] FpMul_6U_10U_o_expo_lpi_1_dfm_C ;
  logic [5:0] FpMul_6U_10U_o_expo_lpi_1_dfm_X ;
  logic [13:0] FpMul_6U_10U_o_expo_lpi_1_dfm_S ;
  logic [6:0] FpMul_6U_10U_oelse_1_acc_1_nl;
  logic [6:0] FpMul_6U_10U_oelse_1_acc_1_nl_T ;
  logic [6:0] FpMul_6U_10U_oelse_1_acc_1_nl_R ;
  logic [6:0] FpMul_6U_10U_oelse_1_acc_1_nl_C ;
  logic [6:0] FpMul_6U_10U_oelse_1_acc_1_nl_X ;
  logic [13:0] FpMul_6U_10U_oelse_1_acc_1_nl_S ;
  logic FpMul_6U_10U_oelse_1_acc_itm_7_1;
  logic FpMul_6U_10U_oelse_1_acc_itm_7_1_T ;
  logic FpMul_6U_10U_oelse_1_acc_itm_7_1_R ;
  logic FpMul_6U_10U_oelse_1_acc_itm_7_1_C ;
  logic FpMul_6U_10U_oelse_1_acc_itm_7_1_X ;
  logic [13:0] FpMul_6U_10U_oelse_1_acc_itm_7_1_S ;
  logic [7:0] FpMul_6U_10U_oelse_1_acc_nl;
  logic [7:0] FpMul_6U_10U_oelse_1_acc_nl_T ;
  logic [7:0] FpMul_6U_10U_oelse_1_acc_nl_R ;
  logic [7:0] FpMul_6U_10U_oelse_1_acc_nl_C ;
  logic [7:0] FpMul_6U_10U_oelse_1_acc_nl_X ;
  logic [13:0] FpMul_6U_10U_oelse_1_acc_nl_S ;
  logic FpMul_6U_10U_oelse_1_and_1_cse;
  logic FpMul_6U_10U_oelse_1_and_1_cse_T ;
  logic FpMul_6U_10U_oelse_1_and_1_cse_R ;
  logic FpMul_6U_10U_oelse_1_and_1_cse_C ;
  logic FpMul_6U_10U_oelse_1_and_1_cse_X ;
  logic [13:0] FpMul_6U_10U_oelse_1_and_1_cse_S ;
  logic FpMul_6U_10U_or_1_nl;
  logic FpMul_6U_10U_or_1_nl_T ;
  logic FpMul_6U_10U_or_1_nl_R ;
  logic FpMul_6U_10U_or_1_nl_C ;
  logic FpMul_6U_10U_or_1_nl_X ;
  logic [13:0] FpMul_6U_10U_or_1_nl_S ;
  logic FpMul_6U_10U_or_2_cse;
  logic FpMul_6U_10U_or_2_cse_T ;
  logic FpMul_6U_10U_or_2_cse_R ;
  logic FpMul_6U_10U_or_2_cse_C ;
  logic FpMul_6U_10U_or_2_cse_X ;
  logic [13:0] FpMul_6U_10U_or_2_cse_S ;
  logic [5:0] FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0;
  logic [5:0] FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_T ;
  logic [5:0] FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_R ;
  logic [5:0] FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_C ;
  logic [5:0] FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_X ;
  logic [13:0] FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_S ;
  logic [5:0] FpMul_6U_10U_p_expo_sva_5;
  logic [5:0]  FpMul_6U_10U_p_expo_sva_5_T ;
  logic [5:0]  FpMul_6U_10U_p_expo_sva_5_PREV_VAL1 ;
  logic [5:0]  FpMul_6U_10U_p_expo_sva_5_PREV_VAL2 ;
  logic [5:0]  FpMul_6U_10U_p_expo_sva_5_R ;
  logic [5:0]  FpMul_6U_10U_p_expo_sva_5_X ;
  logic [5:0]  FpMul_6U_10U_p_expo_sva_5_C ;
  logic [13:0] FpMul_6U_10U_p_expo_sva_5_S ;
  logic FpMul_6U_10U_p_expo_sva_5_t_flag ;
  logic FpMul_6U_10U_p_expo_sva_5_r_flag ;
  assign FpMul_6U_10U_p_expo_sva_5_S = 480 ;
  logic [19:0] FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0;
  logic [19:0] FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_T ;
  logic [19:0] FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R ;
  logic [19:0] FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C ;
  logic [19:0] FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X ;
  logic [13:0] FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_S ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_mul_tmp;
  logic [21:0] FpMul_6U_10U_p_mant_p1_mul_tmp_T ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_mul_tmp_R ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_mul_tmp_C ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_mul_tmp_X ;
  logic [13:0] FpMul_6U_10U_p_mant_p1_mul_tmp_S ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_sva;
  logic [21:0]  FpMul_6U_10U_p_mant_p1_sva_T ;
  logic [21:0]  FpMul_6U_10U_p_mant_p1_sva_PREV_VAL1 ;
  logic [21:0]  FpMul_6U_10U_p_mant_p1_sva_PREV_VAL2 ;
  logic [21:0]  FpMul_6U_10U_p_mant_p1_sva_R ;
  logic [21:0]  FpMul_6U_10U_p_mant_p1_sva_X ;
  logic [21:0]  FpMul_6U_10U_p_mant_p1_sva_C ;
  logic [13:0] FpMul_6U_10U_p_mant_p1_sva_S ;
  logic FpMul_6U_10U_p_mant_p1_sva_t_flag ;
  logic FpMul_6U_10U_p_mant_p1_sva_r_flag ;
  assign FpMul_6U_10U_p_mant_p1_sva_S = 481 ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_sva_2;
  logic [21:0]  FpMul_6U_10U_p_mant_p1_sva_2_T ;
  logic [21:0]  FpMul_6U_10U_p_mant_p1_sva_2_PREV_VAL1 ;
  logic [21:0]  FpMul_6U_10U_p_mant_p1_sva_2_PREV_VAL2 ;
  logic [21:0]  FpMul_6U_10U_p_mant_p1_sva_2_R ;
  logic [21:0]  FpMul_6U_10U_p_mant_p1_sva_2_X ;
  logic [21:0]  FpMul_6U_10U_p_mant_p1_sva_2_C ;
  logic [13:0] FpMul_6U_10U_p_mant_p1_sva_2_S ;
  logic FpMul_6U_10U_p_mant_p1_sva_2_t_flag ;
  logic FpMul_6U_10U_p_mant_p1_sva_2_r_flag ;
  assign FpMul_6U_10U_p_mant_p1_sva_2_S = 482 ;
  logic [15:0] FpMul_6U_10U_ua_sva_1_15_0_1;
  logic [15:0]  FpMul_6U_10U_ua_sva_1_15_0_1_T ;
  logic [15:0]  FpMul_6U_10U_ua_sva_1_15_0_1_PREV_VAL1 ;
  logic [15:0]  FpMul_6U_10U_ua_sva_1_15_0_1_PREV_VAL2 ;
  logic [15:0]  FpMul_6U_10U_ua_sva_1_15_0_1_R ;
  logic [15:0]  FpMul_6U_10U_ua_sva_1_15_0_1_X ;
  logic [15:0]  FpMul_6U_10U_ua_sva_1_15_0_1_C ;
  logic [13:0] FpMul_6U_10U_ua_sva_1_15_0_1_S ;
  logic FpMul_6U_10U_ua_sva_1_15_0_1_t_flag ;
  logic FpMul_6U_10U_ua_sva_1_15_0_1_r_flag ;
  assign FpMul_6U_10U_ua_sva_1_15_0_1_S = 483 ;
  logic [15:0] FpMul_6U_10U_ub_sva_1_15_0_1;
  logic [15:0]  FpMul_6U_10U_ub_sva_1_15_0_1_T ;
  logic [15:0]  FpMul_6U_10U_ub_sva_1_15_0_1_PREV_VAL1 ;
  logic [15:0]  FpMul_6U_10U_ub_sva_1_15_0_1_PREV_VAL2 ;
  logic [15:0]  FpMul_6U_10U_ub_sva_1_15_0_1_R ;
  logic [15:0]  FpMul_6U_10U_ub_sva_1_15_0_1_X ;
  logic [15:0]  FpMul_6U_10U_ub_sva_1_15_0_1_C ;
  logic [13:0] FpMul_6U_10U_ub_sva_1_15_0_1_S ;
  logic FpMul_6U_10U_ub_sva_1_15_0_1_t_flag ;
  logic FpMul_6U_10U_ub_sva_1_15_0_1_r_flag ;
  assign FpMul_6U_10U_ub_sva_1_15_0_1_S = 484 ;
  logic FpMul_6U_10U_xor_1_nl;
  logic FpMul_6U_10U_xor_1_nl_T ;
  logic FpMul_6U_10U_xor_1_nl_R ;
  logic FpMul_6U_10U_xor_1_nl_C ;
  logic FpMul_6U_10U_xor_1_nl_X ;
  logic [13:0] FpMul_6U_10U_xor_1_nl_S ;
  logic IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse;
  logic IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_T ;
  logic IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_R ;
  logic IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_C ;
  logic IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_X ;
  logic [13:0] IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_S ;
  logic IsNaN_6U_10U_1_aelse_and_cse;
  logic IsNaN_6U_10U_1_aelse_and_cse_T ;
  logic IsNaN_6U_10U_1_aelse_and_cse_R ;
  logic IsNaN_6U_10U_1_aelse_and_cse_C ;
  logic IsNaN_6U_10U_1_aelse_and_cse_X ;
  logic [13:0] IsNaN_6U_10U_1_aelse_and_cse_S ;
  logic IsNaN_6U_10U_1_land_lpi_1_dfm_3;
  logic  IsNaN_6U_10U_1_land_lpi_1_dfm_3_T ;
  logic  IsNaN_6U_10U_1_land_lpi_1_dfm_3_PREV_VAL1 ;
  logic  IsNaN_6U_10U_1_land_lpi_1_dfm_3_PREV_VAL2 ;
  logic  IsNaN_6U_10U_1_land_lpi_1_dfm_3_R ;
  logic  IsNaN_6U_10U_1_land_lpi_1_dfm_3_X ;
  logic  IsNaN_6U_10U_1_land_lpi_1_dfm_3_C ;
  logic [13:0] IsNaN_6U_10U_1_land_lpi_1_dfm_3_S ;
  logic IsNaN_6U_10U_1_land_lpi_1_dfm_3_t_flag ;
  logic IsNaN_6U_10U_1_land_lpi_1_dfm_3_r_flag ;
  assign IsNaN_6U_10U_1_land_lpi_1_dfm_3_S = 485 ;
  logic IsNaN_6U_10U_1_land_lpi_1_dfm_4;
  logic  IsNaN_6U_10U_1_land_lpi_1_dfm_4_T ;
  logic  IsNaN_6U_10U_1_land_lpi_1_dfm_4_PREV_VAL1 ;
  logic  IsNaN_6U_10U_1_land_lpi_1_dfm_4_PREV_VAL2 ;
  logic  IsNaN_6U_10U_1_land_lpi_1_dfm_4_R ;
  logic  IsNaN_6U_10U_1_land_lpi_1_dfm_4_X ;
  logic  IsNaN_6U_10U_1_land_lpi_1_dfm_4_C ;
  logic [13:0] IsNaN_6U_10U_1_land_lpi_1_dfm_4_S ;
  logic IsNaN_6U_10U_1_land_lpi_1_dfm_4_t_flag ;
  logic IsNaN_6U_10U_1_land_lpi_1_dfm_4_r_flag ;
  assign IsNaN_6U_10U_1_land_lpi_1_dfm_4_S = 486 ;
  logic IsNaN_6U_10U_1_nor_tmp;
  logic IsNaN_6U_10U_1_nor_tmp_T ;
  logic IsNaN_6U_10U_1_nor_tmp_R ;
  logic IsNaN_6U_10U_1_nor_tmp_C ;
  logic IsNaN_6U_10U_1_nor_tmp_X ;
  logic [13:0] IsNaN_6U_10U_1_nor_tmp_S ;
  logic IsNaN_6U_10U_aelse_and_cse;
  logic IsNaN_6U_10U_aelse_and_cse_T ;
  logic IsNaN_6U_10U_aelse_and_cse_R ;
  logic IsNaN_6U_10U_aelse_and_cse_C ;
  logic IsNaN_6U_10U_aelse_and_cse_X ;
  logic [13:0] IsNaN_6U_10U_aelse_and_cse_S ;
  logic IsNaN_6U_10U_land_lpi_1_dfm_4;
  logic  IsNaN_6U_10U_land_lpi_1_dfm_4_T ;
  logic  IsNaN_6U_10U_land_lpi_1_dfm_4_PREV_VAL1 ;
  logic  IsNaN_6U_10U_land_lpi_1_dfm_4_PREV_VAL2 ;
  logic  IsNaN_6U_10U_land_lpi_1_dfm_4_R ;
  logic  IsNaN_6U_10U_land_lpi_1_dfm_4_X ;
  logic  IsNaN_6U_10U_land_lpi_1_dfm_4_C ;
  logic [13:0] IsNaN_6U_10U_land_lpi_1_dfm_4_S ;
  logic IsNaN_6U_10U_land_lpi_1_dfm_4_t_flag ;
  logic IsNaN_6U_10U_land_lpi_1_dfm_4_r_flag ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_4_S = 487 ;
  logic IsNaN_6U_10U_land_lpi_1_dfm_st_3;
  logic  IsNaN_6U_10U_land_lpi_1_dfm_st_3_T ;
  logic  IsNaN_6U_10U_land_lpi_1_dfm_st_3_PREV_VAL1 ;
  logic  IsNaN_6U_10U_land_lpi_1_dfm_st_3_PREV_VAL2 ;
  logic  IsNaN_6U_10U_land_lpi_1_dfm_st_3_R ;
  logic  IsNaN_6U_10U_land_lpi_1_dfm_st_3_X ;
  logic  IsNaN_6U_10U_land_lpi_1_dfm_st_3_C ;
  logic [13:0] IsNaN_6U_10U_land_lpi_1_dfm_st_3_S ;
  logic IsNaN_6U_10U_land_lpi_1_dfm_st_3_t_flag ;
  logic IsNaN_6U_10U_land_lpi_1_dfm_st_3_r_flag ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_st_3_S = 488 ;
  logic IsNaN_6U_10U_nor_tmp;
  logic IsNaN_6U_10U_nor_tmp_T ;
  logic IsNaN_6U_10U_nor_tmp_R ;
  logic IsNaN_6U_10U_nor_tmp_C ;
  logic IsNaN_6U_10U_nor_tmp_X ;
  logic [13:0] IsNaN_6U_10U_nor_tmp_S ;
  logic and_40_rgt;
  logic and_40_rgt_T ;
  logic and_40_rgt_R ;
  logic and_40_rgt_C ;
  logic and_40_rgt_X ;
  logic [13:0] and_40_rgt_S ;
  logic and_45_rgt;
  logic and_45_rgt_T ;
  logic and_45_rgt_R ;
  logic and_45_rgt_C ;
  logic and_45_rgt_X ;
  logic [13:0] and_45_rgt_S ;
  logic and_52_rgt;
  logic and_52_rgt_T ;
  logic and_52_rgt_R ;
  logic and_52_rgt_C ;
  logic and_52_rgt_X ;
  logic [13:0] and_52_rgt_S ;
  logic and_60_rgt;
  logic and_60_rgt_T ;
  logic and_60_rgt_R ;
  logic and_60_rgt_C ;
  logic and_60_rgt_X ;
  logic [13:0] and_60_rgt_S ;
  logic and_61_rgt;
  logic and_61_rgt_T ;
  logic and_61_rgt_R ;
  logic and_61_rgt_C ;
  logic and_61_rgt_X ;
  logic [13:0] and_61_rgt_S ;
  logic and_62_nl;
  logic and_62_nl_T ;
  logic and_62_nl_R ;
  logic and_62_nl_C ;
  logic and_62_nl_X ;
  logic [13:0] and_62_nl_S ;
  logic and_91_nl;
  logic and_91_nl_T ;
  logic and_91_nl_R ;
  logic and_91_nl_C ;
  logic and_91_nl_X ;
  logic [13:0] and_91_nl_S ;
  logic and_93_nl;
  logic and_93_nl_T ;
  logic and_93_nl_R ;
  logic and_93_nl_C ;
  logic and_93_nl_X ;
  logic [13:0] and_93_nl_S ;
  logic and_94_nl;
  logic and_94_nl_T ;
  logic and_94_nl_R ;
  logic and_94_nl_C ;
  logic and_94_nl_X ;
  logic [13:0] and_94_nl_S ;
  logic and_97_nl;
  logic and_97_nl_T ;
  logic and_97_nl_R ;
  logic and_97_nl_C ;
  logic and_97_nl_X ;
  logic [13:0] and_97_nl_S ;
  logic and_dcpl_13;
  logic and_dcpl_13_T ;
  logic and_dcpl_13_R ;
  logic and_dcpl_13_C ;
  logic and_dcpl_13_X ;
  logic [13:0] and_dcpl_13_S ;
  logic and_dcpl_14;
  logic and_dcpl_14_T ;
  logic and_dcpl_14_R ;
  logic and_dcpl_14_C ;
  logic and_dcpl_14_X ;
  logic [13:0] and_dcpl_14_S ;
  logic and_dcpl_15;
  logic and_dcpl_15_T ;
  logic and_dcpl_15_R ;
  logic and_dcpl_15_C ;
  logic and_dcpl_15_X ;
  logic [13:0] and_dcpl_15_S ;
  logic and_dcpl_28;
  logic and_dcpl_28_T ;
  logic and_dcpl_28_R ;
  logic and_dcpl_28_C ;
  logic and_dcpl_28_X ;
  logic [13:0] and_dcpl_28_S ;
  logic and_dcpl_7;
  logic and_dcpl_7_T ;
  logic and_dcpl_7_R ;
  logic and_dcpl_7_C ;
  logic and_dcpl_7_X ;
  logic [13:0] and_dcpl_7_S ;
  output chn_a_rsc_lz;
  logic chn_a_rsc_lz ;
  output chn_a_rsc_lz_T ;
  logic chn_a_rsc_lz_T ;
  logic chn_a_rsc_lz_R ;
  logic chn_a_rsc_lz_C ;
  logic chn_a_rsc_lz_X ;
  logic [13:0] chn_a_rsc_lz_S ;
  input chn_a_rsc_lz_R0 ;
  input chn_a_rsc_lz_C0 ;
  input chn_a_rsc_lz_X0 ;
  output [13:0] chn_a_rsc_lz_S ;
  input chn_a_rsc_vz;
  input chn_a_rsc_vz_T ;
  input [13:0] chn_a_rsc_vz_S ;
  output chn_a_rsc_vz_R ;
  output chn_a_rsc_vz_X ;
  output chn_a_rsc_vz_C ;
  input [16:0] chn_a_rsc_z;
  input [16:0] chn_a_rsc_z_T ;
  input [13:0] chn_a_rsc_z_S ;
  output [16:0] chn_a_rsc_z_R ;
  output [16:0] chn_a_rsc_z_X ;
  output [16:0] chn_a_rsc_z_C ;
  logic chn_a_rsci_bawt;
  logic chn_a_rsci_bawt_T ;
  logic chn_a_rsci_bawt_R ;
  logic chn_a_rsci_bawt_C ;
  logic chn_a_rsci_bawt_X ;
  logic [13:0] chn_a_rsci_bawt_S ;
  logic [16:0] chn_a_rsci_d_mxwt;
  logic [16:0] chn_a_rsci_d_mxwt_T ;
  logic [16:0] chn_a_rsci_d_mxwt_R ;
  logic [16:0] chn_a_rsci_d_mxwt_C ;
  logic [16:0] chn_a_rsci_d_mxwt_X ;
  logic [13:0] chn_a_rsci_d_mxwt_S ;
  input chn_a_rsci_oswt;
  input chn_a_rsci_oswt_T ;
  input [13:0] chn_a_rsci_oswt_S ;
  output chn_a_rsci_oswt_R ;
  output chn_a_rsci_oswt_X ;
  output chn_a_rsci_oswt_C ;
  output chn_a_rsci_oswt_unreg_pff;
  logic chn_a_rsci_oswt_unreg_pff ;
  output chn_a_rsci_oswt_unreg_pff_T ;
  logic chn_a_rsci_oswt_unreg_pff_T ;
  logic chn_a_rsci_oswt_unreg_pff_R ;
  logic chn_a_rsci_oswt_unreg_pff_C ;
  logic chn_a_rsci_oswt_unreg_pff_X ;
  logic [13:0] chn_a_rsci_oswt_unreg_pff_S ;
  input chn_a_rsci_oswt_unreg_pff_R0 ;
  input chn_a_rsci_oswt_unreg_pff_C0 ;
  input chn_a_rsci_oswt_unreg_pff_X0 ;
  output [13:0] chn_a_rsci_oswt_unreg_pff_S ;
  logic chn_a_rsci_wen_comp;
  logic chn_a_rsci_wen_comp_T ;
  logic chn_a_rsci_wen_comp_R ;
  logic chn_a_rsci_wen_comp_C ;
  logic chn_a_rsci_wen_comp_X ;
  logic [13:0] chn_a_rsci_wen_comp_S ;
  output chn_b_rsc_lz;
  logic chn_b_rsc_lz ;
  output chn_b_rsc_lz_T ;
  logic chn_b_rsc_lz_T ;
  logic chn_b_rsc_lz_R ;
  logic chn_b_rsc_lz_C ;
  logic chn_b_rsc_lz_X ;
  logic [13:0] chn_b_rsc_lz_S ;
  input chn_b_rsc_lz_R0 ;
  input chn_b_rsc_lz_C0 ;
  input chn_b_rsc_lz_X0 ;
  output [13:0] chn_b_rsc_lz_S ;
  input chn_b_rsc_vz;
  input chn_b_rsc_vz_T ;
  input [13:0] chn_b_rsc_vz_S ;
  output chn_b_rsc_vz_R ;
  output chn_b_rsc_vz_X ;
  output chn_b_rsc_vz_C ;
  input [16:0] chn_b_rsc_z;
  input [16:0] chn_b_rsc_z_T ;
  input [13:0] chn_b_rsc_z_S ;
  output [16:0] chn_b_rsc_z_R ;
  output [16:0] chn_b_rsc_z_X ;
  output [16:0] chn_b_rsc_z_C ;
  logic chn_b_rsci_bawt;
  logic chn_b_rsci_bawt_T ;
  logic chn_b_rsci_bawt_R ;
  logic chn_b_rsci_bawt_C ;
  logic chn_b_rsci_bawt_X ;
  logic [13:0] chn_b_rsci_bawt_S ;
  logic [16:0] chn_b_rsci_d_mxwt;
  logic [16:0] chn_b_rsci_d_mxwt_T ;
  logic [16:0] chn_b_rsci_d_mxwt_R ;
  logic [16:0] chn_b_rsci_d_mxwt_C ;
  logic [16:0] chn_b_rsci_d_mxwt_X ;
  logic [13:0] chn_b_rsci_d_mxwt_S ;
  input chn_b_rsci_oswt;
  input chn_b_rsci_oswt_T ;
  input [13:0] chn_b_rsci_oswt_S ;
  output chn_b_rsci_oswt_R ;
  output chn_b_rsci_oswt_X ;
  output chn_b_rsci_oswt_C ;
  logic chn_b_rsci_wen_comp;
  logic chn_b_rsci_wen_comp_T ;
  logic chn_b_rsci_wen_comp_R ;
  logic chn_b_rsci_wen_comp_C ;
  logic chn_b_rsci_wen_comp_X ;
  logic [13:0] chn_b_rsci_wen_comp_S ;
  logic chn_o_and_cse;
  logic chn_o_and_cse_T ;
  logic chn_o_and_cse_R ;
  logic chn_o_and_cse_C ;
  logic chn_o_and_cse_X ;
  logic [13:0] chn_o_and_cse_S ;
  output chn_o_rsc_lz;
  logic chn_o_rsc_lz ;
  output chn_o_rsc_lz_T ;
  logic chn_o_rsc_lz_T ;
  logic chn_o_rsc_lz_R ;
  logic chn_o_rsc_lz_C ;
  logic chn_o_rsc_lz_X ;
  logic [13:0] chn_o_rsc_lz_S ;
  input chn_o_rsc_lz_R0 ;
  input chn_o_rsc_lz_C0 ;
  input chn_o_rsc_lz_X0 ;
  output [13:0] chn_o_rsc_lz_S ;
  input chn_o_rsc_vz;
  input chn_o_rsc_vz_T ;
  input [13:0] chn_o_rsc_vz_S ;
  output chn_o_rsc_vz_R ;
  output chn_o_rsc_vz_X ;
  output chn_o_rsc_vz_C ;
  output [16:0] chn_o_rsc_z;
  logic [16:0] chn_o_rsc_z ;
  output [16:0] chn_o_rsc_z_T ;
  logic [16:0] chn_o_rsc_z_T ;
  logic [16:0] chn_o_rsc_z_R ;
  logic [16:0] chn_o_rsc_z_C ;
  logic [16:0] chn_o_rsc_z_X ;
  logic [13:0] chn_o_rsc_z_S ;
  input [16:0] chn_o_rsc_z_R0 ;
  input [16:0] chn_o_rsc_z_C0 ;
  input [16:0] chn_o_rsc_z_X0 ;
  output [13:0] chn_o_rsc_z_S ;
  logic chn_o_rsci_bawt;
  logic chn_o_rsci_bawt_T ;
  logic chn_o_rsci_bawt_R ;
  logic chn_o_rsci_bawt_C ;
  logic chn_o_rsci_bawt_X ;
  logic [13:0] chn_o_rsci_bawt_S ;
  logic [5:0] chn_o_rsci_d_15_10;
  logic [5:0]  chn_o_rsci_d_15_10_T ;
  logic [5:0]  chn_o_rsci_d_15_10_PREV_VAL1 ;
  logic [5:0]  chn_o_rsci_d_15_10_PREV_VAL2 ;
  logic [5:0]  chn_o_rsci_d_15_10_R ;
  logic [5:0]  chn_o_rsci_d_15_10_X ;
  logic [5:0]  chn_o_rsci_d_15_10_C ;
  logic [13:0] chn_o_rsci_d_15_10_S ;
  logic chn_o_rsci_d_15_10_t_flag ;
  logic chn_o_rsci_d_15_10_r_flag ;
  assign chn_o_rsci_d_15_10_S = 489 ;
  logic chn_o_rsci_d_15_10_mx0c1;
  logic chn_o_rsci_d_15_10_mx0c1_T ;
  logic chn_o_rsci_d_15_10_mx0c1_R ;
  logic chn_o_rsci_d_15_10_mx0c1_C ;
  logic chn_o_rsci_d_15_10_mx0c1_X ;
  logic [13:0] chn_o_rsci_d_15_10_mx0c1_S ;
  logic chn_o_rsci_d_16;
  logic  chn_o_rsci_d_16_T ;
  logic  chn_o_rsci_d_16_PREV_VAL1 ;
  logic  chn_o_rsci_d_16_PREV_VAL2 ;
  logic  chn_o_rsci_d_16_R ;
  logic  chn_o_rsci_d_16_X ;
  logic  chn_o_rsci_d_16_C ;
  logic [13:0] chn_o_rsci_d_16_S ;
  logic chn_o_rsci_d_16_t_flag ;
  logic chn_o_rsci_d_16_r_flag ;
  assign chn_o_rsci_d_16_S = 490 ;
  logic [9:0] chn_o_rsci_d_9_0;
  logic [9:0]  chn_o_rsci_d_9_0_T ;
  logic [9:0]  chn_o_rsci_d_9_0_PREV_VAL1 ;
  logic [9:0]  chn_o_rsci_d_9_0_PREV_VAL2 ;
  logic [9:0]  chn_o_rsci_d_9_0_R ;
  logic [9:0]  chn_o_rsci_d_9_0_X ;
  logic [9:0]  chn_o_rsci_d_9_0_C ;
  logic [13:0] chn_o_rsci_d_9_0_S ;
  logic chn_o_rsci_d_9_0_t_flag ;
  logic chn_o_rsci_d_9_0_r_flag ;
  assign chn_o_rsci_d_9_0_S = 491 ;
  logic chn_o_rsci_iswt0;
  logic  chn_o_rsci_iswt0_T ;
  logic  chn_o_rsci_iswt0_PREV_VAL1 ;
  logic  chn_o_rsci_iswt0_PREV_VAL2 ;
  logic  chn_o_rsci_iswt0_R ;
  logic  chn_o_rsci_iswt0_X ;
  logic  chn_o_rsci_iswt0_C ;
  logic [13:0] chn_o_rsci_iswt0_S ;
  logic chn_o_rsci_iswt0_t_flag ;
  logic chn_o_rsci_iswt0_r_flag ;
  assign chn_o_rsci_iswt0_S = 492 ;
  input chn_o_rsci_oswt;
  input chn_o_rsci_oswt_T ;
  input [13:0] chn_o_rsci_oswt_S ;
  output chn_o_rsci_oswt_R ;
  output chn_o_rsci_oswt_X ;
  output chn_o_rsci_oswt_C ;
  output chn_o_rsci_oswt_unreg;
  logic chn_o_rsci_oswt_unreg ;
  output chn_o_rsci_oswt_unreg_T ;
  logic chn_o_rsci_oswt_unreg_T ;
  logic chn_o_rsci_oswt_unreg_R ;
  logic chn_o_rsci_oswt_unreg_C ;
  logic chn_o_rsci_oswt_unreg_X ;
  logic [13:0] chn_o_rsci_oswt_unreg_S ;
  input chn_o_rsci_oswt_unreg_R0 ;
  input chn_o_rsci_oswt_unreg_C0 ;
  input chn_o_rsci_oswt_unreg_X0 ;
  output [13:0] chn_o_rsci_oswt_unreg_S ;
  logic chn_o_rsci_wen_comp;
  logic chn_o_rsci_wen_comp_T ;
  logic chn_o_rsci_wen_comp_R ;
  logic chn_o_rsci_wen_comp_C ;
  logic chn_o_rsci_wen_comp_X ;
  logic [13:0] chn_o_rsci_wen_comp_S ;
  logic core_wen;
  logic core_wen_T ;
  logic core_wen_R ;
  logic core_wen_C ;
  logic core_wen_X ;
  logic [13:0] core_wen_S ;
  logic core_wten;
  logic core_wten_T ;
  logic core_wten_R ;
  logic core_wten_C ;
  logic core_wten_X ;
  logic [13:0] core_wten_S ;
  logic [1:0] fsm_output;
  logic [1:0] fsm_output_T ;
  logic [1:0] fsm_output_R ;
  logic [1:0] fsm_output_C ;
  logic [1:0] fsm_output_X ;
  logic [13:0] fsm_output_S ;
  logic main_stage_en_1;
  logic main_stage_en_1_T ;
  logic main_stage_en_1_R ;
  logic main_stage_en_1_C ;
  logic main_stage_en_1_X ;
  logic [13:0] main_stage_en_1_S ;
  logic main_stage_v_1;
  logic  main_stage_v_1_T ;
  logic  main_stage_v_1_PREV_VAL1 ;
  logic  main_stage_v_1_PREV_VAL2 ;
  logic  main_stage_v_1_R ;
  logic  main_stage_v_1_X ;
  logic  main_stage_v_1_C ;
  logic [13:0] main_stage_v_1_S ;
  logic main_stage_v_1_t_flag ;
  logic main_stage_v_1_r_flag ;
  assign main_stage_v_1_S = 493 ;
  logic main_stage_v_1_mx0c1;
  logic main_stage_v_1_mx0c1_T ;
  logic main_stage_v_1_mx0c1_R ;
  logic main_stage_v_1_mx0c1_C ;
  logic main_stage_v_1_mx0c1_X ;
  logic [13:0] main_stage_v_1_mx0c1_S ;
  logic main_stage_v_2;
  logic  main_stage_v_2_T ;
  logic  main_stage_v_2_PREV_VAL1 ;
  logic  main_stage_v_2_PREV_VAL2 ;
  logic  main_stage_v_2_R ;
  logic  main_stage_v_2_X ;
  logic  main_stage_v_2_C ;
  logic [13:0] main_stage_v_2_S ;
  logic main_stage_v_2_t_flag ;
  logic main_stage_v_2_r_flag ;
  assign main_stage_v_2_S = 494 ;
  logic main_stage_v_2_mx0c1;
  logic main_stage_v_2_mx0c1_T ;
  logic main_stage_v_2_mx0c1_R ;
  logic main_stage_v_2_mx0c1_C ;
  logic main_stage_v_2_mx0c1_X ;
  logic [13:0] main_stage_v_2_mx0c1_S ;
  logic mux_10_nl;
  logic mux_10_nl_T ;
  logic mux_10_nl_R ;
  logic mux_10_nl_C ;
  logic mux_10_nl_X ;
  logic [13:0] mux_10_nl_S ;
  logic mux_11_nl;
  logic mux_11_nl_T ;
  logic mux_11_nl_R ;
  logic mux_11_nl_C ;
  logic mux_11_nl_X ;
  logic [13:0] mux_11_nl_S ;
  logic mux_12_nl;
  logic mux_12_nl_T ;
  logic mux_12_nl_R ;
  logic mux_12_nl_C ;
  logic mux_12_nl_X ;
  logic [13:0] mux_12_nl_S ;
  logic mux_13_nl;
  logic mux_13_nl_T ;
  logic mux_13_nl_R ;
  logic mux_13_nl_C ;
  logic mux_13_nl_X ;
  logic [13:0] mux_13_nl_S ;
  logic mux_16_nl;
  logic mux_16_nl_T ;
  logic mux_16_nl_R ;
  logic mux_16_nl_C ;
  logic mux_16_nl_X ;
  logic [13:0] mux_16_nl_S ;
  logic mux_17_nl;
  logic mux_17_nl_T ;
  logic mux_17_nl_R ;
  logic mux_17_nl_C ;
  logic mux_17_nl_X ;
  logic [13:0] mux_17_nl_S ;
  logic mux_18_nl;
  logic mux_18_nl_T ;
  logic mux_18_nl_R ;
  logic mux_18_nl_C ;
  logic mux_18_nl_X ;
  logic [13:0] mux_18_nl_S ;
  logic mux_19_nl;
  logic mux_19_nl_T ;
  logic mux_19_nl_R ;
  logic mux_19_nl_C ;
  logic mux_19_nl_X ;
  logic [13:0] mux_19_nl_S ;
  logic mux_1_nl;
  logic mux_1_nl_T ;
  logic mux_1_nl_R ;
  logic mux_1_nl_C ;
  logic mux_1_nl_X ;
  logic [13:0] mux_1_nl_S ;
  logic mux_20_nl;
  logic mux_20_nl_T ;
  logic mux_20_nl_R ;
  logic mux_20_nl_C ;
  logic mux_20_nl_X ;
  logic [13:0] mux_20_nl_S ;
  logic mux_22_nl;
  logic mux_22_nl_T ;
  logic mux_22_nl_R ;
  logic mux_22_nl_C ;
  logic mux_22_nl_X ;
  logic [13:0] mux_22_nl_S ;
  logic mux_25_nl;
  logic mux_25_nl_T ;
  logic mux_25_nl_R ;
  logic mux_25_nl_C ;
  logic mux_25_nl_X ;
  logic [13:0] mux_25_nl_S ;
  logic mux_26_nl;
  logic mux_26_nl_T ;
  logic mux_26_nl_R ;
  logic mux_26_nl_C ;
  logic mux_26_nl_X ;
  logic [13:0] mux_26_nl_S ;
  logic mux_27_nl;
  logic mux_27_nl_T ;
  logic mux_27_nl_R ;
  logic mux_27_nl_C ;
  logic mux_27_nl_X ;
  logic [13:0] mux_27_nl_S ;
  logic mux_28_nl;
  logic mux_28_nl_T ;
  logic mux_28_nl_R ;
  logic mux_28_nl_C ;
  logic mux_28_nl_X ;
  logic [13:0] mux_28_nl_S ;
  logic mux_29_nl;
  logic mux_29_nl_T ;
  logic mux_29_nl_R ;
  logic mux_29_nl_C ;
  logic mux_29_nl_X ;
  logic [13:0] mux_29_nl_S ;
  logic mux_2_nl;
  logic mux_2_nl_T ;
  logic mux_2_nl_R ;
  logic mux_2_nl_C ;
  logic mux_2_nl_X ;
  logic [13:0] mux_2_nl_S ;
  logic mux_30_nl;
  logic mux_30_nl_T ;
  logic mux_30_nl_R ;
  logic mux_30_nl_C ;
  logic mux_30_nl_X ;
  logic [13:0] mux_30_nl_S ;
  logic mux_31_nl;
  logic mux_31_nl_T ;
  logic mux_31_nl_R ;
  logic mux_31_nl_C ;
  logic mux_31_nl_X ;
  logic [13:0] mux_31_nl_S ;
  logic mux_32_nl;
  logic mux_32_nl_T ;
  logic mux_32_nl_R ;
  logic mux_32_nl_C ;
  logic mux_32_nl_X ;
  logic [13:0] mux_32_nl_S ;
  logic mux_33_nl;
  logic mux_33_nl_T ;
  logic mux_33_nl_R ;
  logic mux_33_nl_C ;
  logic mux_33_nl_X ;
  logic [13:0] mux_33_nl_S ;
  logic mux_35_nl;
  logic mux_35_nl_T ;
  logic mux_35_nl_R ;
  logic mux_35_nl_C ;
  logic mux_35_nl_X ;
  logic [13:0] mux_35_nl_S ;
  logic mux_36_nl;
  logic mux_36_nl_T ;
  logic mux_36_nl_R ;
  logic mux_36_nl_C ;
  logic mux_36_nl_X ;
  logic [13:0] mux_36_nl_S ;
  logic [9:0] mux_37_nl;
  logic [9:0] mux_37_nl_T ;
  logic [9:0] mux_37_nl_R ;
  logic [9:0] mux_37_nl_C ;
  logic [9:0] mux_37_nl_X ;
  logic [13:0] mux_37_nl_S ;
  logic mux_4_nl;
  logic mux_4_nl_T ;
  logic mux_4_nl_R ;
  logic mux_4_nl_C ;
  logic mux_4_nl_X ;
  logic [13:0] mux_4_nl_S ;
  logic mux_5_nl;
  logic mux_5_nl_T ;
  logic mux_5_nl_R ;
  logic mux_5_nl_C ;
  logic mux_5_nl_X ;
  logic [13:0] mux_5_nl_S ;
  logic mux_8_nl;
  logic mux_8_nl_T ;
  logic mux_8_nl_R ;
  logic mux_8_nl_C ;
  logic mux_8_nl_X ;
  logic [13:0] mux_8_nl_S ;
  logic mux_9_nl;
  logic mux_9_nl_T ;
  logic mux_9_nl_R ;
  logic mux_9_nl_C ;
  logic mux_9_nl_X ;
  logic [13:0] mux_9_nl_S ;
  logic mux_nl;
  logic mux_nl_T ;
  logic mux_nl_R ;
  logic mux_nl_C ;
  logic mux_nl_X ;
  logic [13:0] mux_nl_S ;
  logic mux_tmp_21;
  logic mux_tmp_21_T ;
  logic mux_tmp_21_R ;
  logic mux_tmp_21_C ;
  logic mux_tmp_21_X ;
  logic [13:0] mux_tmp_21_S ;
  logic mux_tmp_23;
  logic mux_tmp_23_T ;
  logic mux_tmp_23_R ;
  logic mux_tmp_23_C ;
  logic mux_tmp_23_X ;
  logic [13:0] mux_tmp_23_S ;
  logic mux_tmp_3;
  logic mux_tmp_3_T ;
  logic mux_tmp_3_R ;
  logic mux_tmp_3_C ;
  logic mux_tmp_3_X ;
  logic [13:0] mux_tmp_3_S ;
  logic mux_tmp_6;
  logic mux_tmp_6_T ;
  logic mux_tmp_6_R ;
  logic mux_tmp_6_C ;
  logic mux_tmp_6_X ;
  logic [13:0] mux_tmp_6_S ;
  logic mux_tmp_7;
  logic mux_tmp_7_T ;
  logic mux_tmp_7_R ;
  logic mux_tmp_7_C ;
  logic mux_tmp_7_X ;
  logic [13:0] mux_tmp_7_S ;
  logic nand_6_cse;
  logic nand_6_cse_T ;
  logic nand_6_cse_R ;
  logic nand_6_cse_C ;
  logic nand_6_cse_X ;
  logic [13:0] nand_6_cse_S ;
  logic nand_7_cse;
  logic nand_7_cse_T ;
  logic nand_7_cse_R ;
  logic nand_7_cse_C ;
  logic nand_7_cse_X ;
  logic [13:0] nand_7_cse_S ;
  logic nand_cse;
  logic nand_cse_T ;
  logic nand_cse_R ;
  logic nand_cse_C ;
  logic nand_cse_X ;
  logic [13:0] nand_cse_S ;
  logic [10:0] nl_FpMantRNE_22U_11U_else_acc_nl;
  logic [10:0] nl_FpMantRNE_22U_11U_else_acc_nl_T ;
  logic [10:0] nl_FpMantRNE_22U_11U_else_acc_nl_R ;
  logic [10:0] nl_FpMantRNE_22U_11U_else_acc_nl_C ;
  logic [10:0] nl_FpMantRNE_22U_11U_else_acc_nl_X ;
  logic [13:0] nl_FpMantRNE_22U_11U_else_acc_nl_S ;
  logic [6:0] nl_FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1;
  logic [6:0] nl_FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_T ;
  logic [6:0] nl_FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_R ;
  logic [6:0] nl_FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_C ;
  logic [6:0] nl_FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_X ;
  logic [13:0] nl_FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_S ;
  logic [7:0] nl_FpMul_6U_10U_else_2_acc_1_nl;
  logic [7:0] nl_FpMul_6U_10U_else_2_acc_1_nl_T ;
  logic [7:0] nl_FpMul_6U_10U_else_2_acc_1_nl_R ;
  logic [7:0] nl_FpMul_6U_10U_else_2_acc_1_nl_C ;
  logic [7:0] nl_FpMul_6U_10U_else_2_acc_1_nl_X ;
  logic [13:0] nl_FpMul_6U_10U_else_2_acc_1_nl_S ;
  logic [6:0] nl_FpMul_6U_10U_else_2_else_acc_2_nl;
  logic [6:0] nl_FpMul_6U_10U_else_2_else_acc_2_nl_T ;
  logic [6:0] nl_FpMul_6U_10U_else_2_else_acc_2_nl_R ;
  logic [6:0] nl_FpMul_6U_10U_else_2_else_acc_2_nl_C ;
  logic [6:0] nl_FpMul_6U_10U_else_2_else_acc_2_nl_X ;
  logic [13:0] nl_FpMul_6U_10U_else_2_else_acc_2_nl_S ;
  logic [6:0] nl_FpMul_6U_10U_else_2_else_if_if_acc_1_nl;
  logic [6:0] nl_FpMul_6U_10U_else_2_else_if_if_acc_1_nl_T ;
  logic [6:0] nl_FpMul_6U_10U_else_2_else_if_if_acc_1_nl_R ;
  logic [6:0] nl_FpMul_6U_10U_else_2_else_if_if_acc_1_nl_C ;
  logic [6:0] nl_FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X ;
  logic [13:0] nl_FpMul_6U_10U_else_2_else_if_if_acc_1_nl_S ;
  logic [6:0] nl_FpMul_6U_10U_else_2_else_if_if_acc_nl;
  logic [6:0] nl_FpMul_6U_10U_else_2_else_if_if_acc_nl_T ;
  logic [6:0] nl_FpMul_6U_10U_else_2_else_if_if_acc_nl_R ;
  logic [6:0] nl_FpMul_6U_10U_else_2_else_if_if_acc_nl_C ;
  logic [6:0] nl_FpMul_6U_10U_else_2_else_if_if_acc_nl_X ;
  logic [13:0] nl_FpMul_6U_10U_else_2_else_if_if_acc_nl_S ;
  logic [7:0] nl_FpMul_6U_10U_else_2_if_acc_nl;
  logic [7:0] nl_FpMul_6U_10U_else_2_if_acc_nl_T ;
  logic [7:0] nl_FpMul_6U_10U_else_2_if_acc_nl_R ;
  logic [7:0] nl_FpMul_6U_10U_else_2_if_acc_nl_C ;
  logic [7:0] nl_FpMul_6U_10U_else_2_if_acc_nl_X ;
  logic [13:0] nl_FpMul_6U_10U_else_2_if_acc_nl_S ;
  logic [7:0] nl_FpMul_6U_10U_oelse_1_acc_1_nl;
  logic [7:0] nl_FpMul_6U_10U_oelse_1_acc_1_nl_T ;
  logic [7:0] nl_FpMul_6U_10U_oelse_1_acc_1_nl_R ;
  logic [7:0] nl_FpMul_6U_10U_oelse_1_acc_1_nl_C ;
  logic [7:0] nl_FpMul_6U_10U_oelse_1_acc_1_nl_X ;
  logic [13:0] nl_FpMul_6U_10U_oelse_1_acc_1_nl_S ;
  logic [8:0] nl_FpMul_6U_10U_oelse_1_acc_nl;
  logic [8:0] nl_FpMul_6U_10U_oelse_1_acc_nl_T ;
  logic [8:0] nl_FpMul_6U_10U_oelse_1_acc_nl_R ;
  logic [8:0] nl_FpMul_6U_10U_oelse_1_acc_nl_C ;
  logic [8:0] nl_FpMul_6U_10U_oelse_1_acc_nl_X ;
  logic [13:0] nl_FpMul_6U_10U_oelse_1_acc_nl_S ;
  logic [5:0] nl_FpMul_6U_10U_p_expo_sva_5;
  logic [5:0] nl_FpMul_6U_10U_p_expo_sva_5_T ;
  logic [5:0] nl_FpMul_6U_10U_p_expo_sva_5_R ;
  logic [5:0] nl_FpMul_6U_10U_p_expo_sva_5_C ;
  logic [5:0] nl_FpMul_6U_10U_p_expo_sva_5_X ;
  logic [13:0] nl_FpMul_6U_10U_p_expo_sva_5_S ;
  logic [16:0] nl_HLS_fp17_mul_core_chn_o_rsci_inst_chn_o_rsci_d;
  logic [16:0] nl_HLS_fp17_mul_core_chn_o_rsci_inst_chn_o_rsci_d_T ;
  logic [16:0] nl_HLS_fp17_mul_core_chn_o_rsci_inst_chn_o_rsci_d_R ;
  logic [16:0] nl_HLS_fp17_mul_core_chn_o_rsci_inst_chn_o_rsci_d_C ;
  logic [16:0] nl_HLS_fp17_mul_core_chn_o_rsci_inst_chn_o_rsci_d_X ;
  logic [13:0] nl_HLS_fp17_mul_core_chn_o_rsci_inst_chn_o_rsci_d_S ;
  logic nor_33_nl;
  logic nor_33_nl_T ;
  logic nor_33_nl_R ;
  logic nor_33_nl_C ;
  logic nor_33_nl_X ;
  logic [13:0] nor_33_nl_S ;
  logic nor_34_nl;
  logic nor_34_nl_T ;
  logic nor_34_nl_R ;
  logic nor_34_nl_C ;
  logic nor_34_nl_X ;
  logic [13:0] nor_34_nl_S ;
  logic nor_35_nl;
  logic nor_35_nl_T ;
  logic nor_35_nl_R ;
  logic nor_35_nl_C ;
  logic nor_35_nl_X ;
  logic [13:0] nor_35_nl_S ;
  logic nor_37_nl;
  logic nor_37_nl_T ;
  logic nor_37_nl_R ;
  logic nor_37_nl_C ;
  logic nor_37_nl_X ;
  logic [13:0] nor_37_nl_S ;
  logic nor_38_nl;
  logic nor_38_nl_T ;
  logic nor_38_nl_R ;
  logic nor_38_nl_C ;
  logic nor_38_nl_X ;
  logic [13:0] nor_38_nl_S ;
  logic nor_39_nl;
  logic nor_39_nl_T ;
  logic nor_39_nl_R ;
  logic nor_39_nl_C ;
  logic nor_39_nl_X ;
  logic [13:0] nor_39_nl_S ;
  logic nor_40_nl;
  logic nor_40_nl_T ;
  logic nor_40_nl_R ;
  logic nor_40_nl_C ;
  logic nor_40_nl_X ;
  logic [13:0] nor_40_nl_S ;
  logic nor_41_nl;
  logic nor_41_nl_T ;
  logic nor_41_nl_R ;
  logic nor_41_nl_C ;
  logic nor_41_nl_X ;
  logic [13:0] nor_41_nl_S ;
  logic nor_42_cse;
  logic nor_42_cse_T ;
  logic nor_42_cse_R ;
  logic nor_42_cse_C ;
  logic nor_42_cse_X ;
  logic [13:0] nor_42_cse_S ;
  logic nor_43_nl;
  logic nor_43_nl_T ;
  logic nor_43_nl_R ;
  logic nor_43_nl_C ;
  logic nor_43_nl_X ;
  logic [13:0] nor_43_nl_S ;
  logic nor_cse;
  logic nor_cse_T ;
  logic nor_cse_R ;
  logic nor_cse_C ;
  logic nor_cse_X ;
  logic [13:0] nor_cse_S ;
  logic nor_tmp_1;
  logic nor_tmp_1_T ;
  logic nor_tmp_1_R ;
  logic nor_tmp_1_C ;
  logic nor_tmp_1_X ;
  logic [13:0] nor_tmp_1_S ;
  logic nor_tmp_11;
  logic nor_tmp_11_T ;
  logic nor_tmp_11_R ;
  logic nor_tmp_11_C ;
  logic nor_tmp_11_X ;
  logic [13:0] nor_tmp_11_S ;
  input nvdla_core_clk;
  input nvdla_core_clk_T ;
  input [13:0] nvdla_core_clk_S ;
  output nvdla_core_clk_R ;
  output nvdla_core_clk_X ;
  output nvdla_core_clk_C ;
  input nvdla_core_rstn;
  input nvdla_core_rstn_T ;
  input [13:0] nvdla_core_rstn_S ;
  output nvdla_core_rstn_R ;
  output nvdla_core_rstn_X ;
  output nvdla_core_rstn_C ;
  logic or_25_nl;
  logic or_25_nl_T ;
  logic or_25_nl_R ;
  logic or_25_nl_C ;
  logic or_25_nl_X ;
  logic [13:0] or_25_nl_S ;
  logic or_2_nl;
  logic or_2_nl_T ;
  logic or_2_nl_R ;
  logic or_2_nl_C ;
  logic or_2_nl_X ;
  logic [13:0] or_2_nl_S ;
  logic or_35_nl;
  logic or_35_nl_T ;
  logic or_35_nl_R ;
  logic or_35_nl_C ;
  logic or_35_nl_X ;
  logic [13:0] or_35_nl_S ;
  logic or_38_nl;
  logic or_38_nl_T ;
  logic or_38_nl_R ;
  logic or_38_nl_C ;
  logic or_38_nl_X ;
  logic [13:0] or_38_nl_S ;
  logic or_5_cse;
  logic or_5_cse_T ;
  logic or_5_cse_R ;
  logic or_5_cse_C ;
  logic or_5_cse_X ;
  logic [13:0] or_5_cse_S ;
  logic or_65_cse;
  logic or_65_cse_T ;
  logic or_65_cse_R ;
  logic or_65_cse_C ;
  logic or_65_cse_X ;
  logic [13:0] or_65_cse_S ;
  logic or_68_cse;
  logic or_68_cse_T ;
  logic or_68_cse_R ;
  logic or_68_cse_C ;
  logic or_68_cse_X ;
  logic [13:0] or_68_cse_S ;
  logic or_nl;
  logic or_nl_T ;
  logic or_nl_R ;
  logic or_nl_C ;
  logic or_nl_X ;
  logic [13:0] or_nl_S ;
  logic or_tmp_16;
  logic or_tmp_16_T ;
  logic or_tmp_16_R ;
  logic or_tmp_16_C ;
  logic or_tmp_16_X ;
  logic [13:0] or_tmp_16_S ;
  logic or_tmp_32;
  logic or_tmp_32_T ;
  logic or_tmp_32_R ;
  logic or_tmp_32_C ;
  logic or_tmp_32_X ;
  logic [13:0] or_tmp_32_S ;
  logic or_tmp_4;
  logic or_tmp_4_T ;
  logic or_tmp_4_R ;
  logic or_tmp_4_C ;
  logic or_tmp_4_X ;
  logic [13:0] or_tmp_4_S ;
  logic or_tmp_40;
  logic or_tmp_40_T ;
  logic or_tmp_40_R ;
  logic or_tmp_40_C ;
  logic or_tmp_40_X ;
  logic [13:0] or_tmp_40_S ;
  logic or_tmp_48;
  logic or_tmp_48_T ;
  logic or_tmp_48_R ;
  logic or_tmp_48_C ;
  logic or_tmp_48_X ;
  logic [13:0] or_tmp_48_S ;
  logic or_tmp_49;
  logic or_tmp_49_T ;
  logic or_tmp_49_R ;
  logic or_tmp_49_C ;
  logic or_tmp_49_X ;
  logic [13:0] or_tmp_49_S ;
  logic or_tmp_52;
  logic or_tmp_52_T ;
  logic or_tmp_52_R ;
  logic or_tmp_52_C ;
  logic or_tmp_52_X ;
  logic [13:0] or_tmp_52_S ;
  logic or_tmp_56;
  logic or_tmp_56_T ;
  logic or_tmp_56_R ;
  logic or_tmp_56_C ;
  logic or_tmp_56_X ;
  logic [13:0] or_tmp_56_S ;
  logic or_tmp_62;
  logic or_tmp_62_T ;
  logic or_tmp_62_R ;
  logic or_tmp_62_C ;
  logic or_tmp_62_X ;
  logic [13:0] or_tmp_62_S ;
  logic or_tmp_68;
  logic or_tmp_68_T ;
  logic or_tmp_68_R ;
  logic or_tmp_68_C ;
  logic or_tmp_68_X ;
  logic [13:0] or_tmp_68_S ;
  logic or_tmp_7;
  logic or_tmp_7_T ;
  logic or_tmp_7_R ;
  logic or_tmp_7_C ;
  logic or_tmp_7_X ;
  logic [13:0] or_tmp_7_S ;
  logic reg_chn_b_rsci_iswt0_cse;
  logic  reg_chn_b_rsci_iswt0_cse_T ;
  logic  reg_chn_b_rsci_iswt0_cse_PREV_VAL1 ;
  logic  reg_chn_b_rsci_iswt0_cse_PREV_VAL2 ;
  logic  reg_chn_b_rsci_iswt0_cse_R ;
  logic  reg_chn_b_rsci_iswt0_cse_X ;
  logic  reg_chn_b_rsci_iswt0_cse_C ;
  logic [13:0] reg_chn_b_rsci_iswt0_cse_S ;
  logic reg_chn_b_rsci_iswt0_cse_t_flag ;
  logic reg_chn_b_rsci_iswt0_cse_r_flag ;
  assign reg_chn_b_rsci_iswt0_cse_S = 495 ;
  logic reg_chn_b_rsci_ld_core_psct_cse;
  logic  reg_chn_b_rsci_ld_core_psct_cse_T ;
  logic  reg_chn_b_rsci_ld_core_psct_cse_PREV_VAL1 ;
  logic  reg_chn_b_rsci_ld_core_psct_cse_PREV_VAL2 ;
  logic  reg_chn_b_rsci_ld_core_psct_cse_R ;
  logic  reg_chn_b_rsci_ld_core_psct_cse_X ;
  logic  reg_chn_b_rsci_ld_core_psct_cse_C ;
  logic [13:0] reg_chn_b_rsci_ld_core_psct_cse_S ;
  logic reg_chn_b_rsci_ld_core_psct_cse_t_flag ;
  logic reg_chn_b_rsci_ld_core_psct_cse_r_flag ;
  assign reg_chn_b_rsci_ld_core_psct_cse_S = 496 ;
  logic reg_chn_o_rsci_ld_core_psct_cse;
  logic  reg_chn_o_rsci_ld_core_psct_cse_T ;
  logic  reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL1 ;
  logic  reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL2 ;
  logic  reg_chn_o_rsci_ld_core_psct_cse_R ;
  logic  reg_chn_o_rsci_ld_core_psct_cse_X ;
  logic  reg_chn_o_rsci_ld_core_psct_cse_C ;
  logic [13:0] reg_chn_o_rsci_ld_core_psct_cse_S ;
  logic reg_chn_o_rsci_ld_core_psct_cse_t_flag ;
  logic reg_chn_o_rsci_ld_core_psct_cse_r_flag ;
  assign reg_chn_o_rsci_ld_core_psct_cse_S = 497 ;
  assign FpMantRNE_22U_11U_else_acc_nl = FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0[19:10] + FpMantRNE_22U_11U_else_carry_sva;
  assign FpMantRNE_22U_11U_else_acc_nl_S = 0 ;
  logic [19:0] FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C0 ;
  logic [19:0] FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R0 ;
  logic [19:0] FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X0 ;
  logic [0:0] FpMantRNE_22U_11U_else_carry_sva_C0 ;
  logic [0:0] FpMantRNE_22U_11U_else_carry_sva_R0 ;
  logic [0:0] FpMantRNE_22U_11U_else_carry_sva_X0 ;
  assign FpMantRNE_22U_11U_else_acc_nl_T = FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_T [19:10] | FpMantRNE_22U_11U_else_carry_sva_T ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C0 [19:10] = FpMantRNE_22U_11U_else_acc_nl_C ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X0 [19:10] = FpMantRNE_22U_11U_else_acc_nl_X ;
  assign FpMantRNE_22U_11U_else_carry_sva_C0 = FpMantRNE_22U_11U_else_acc_nl_C ;
  assign FpMantRNE_22U_11U_else_carry_sva_X0 = FpMantRNE_22U_11U_else_acc_nl_X ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R0 [19:10] = FpMantRNE_22U_11U_else_acc_nl_R | ( FpMantRNE_22U_11U_else_acc_nl_C & FpMantRNE_22U_11U_else_carry_sva_T );
  assign FpMantRNE_22U_11U_else_carry_sva_R0 = FpMantRNE_22U_11U_else_acc_nl_R | ( FpMantRNE_22U_11U_else_acc_nl_C & FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_T [19:10] );
  assign FpMul_6U_10U_else_2_else_acc_2_nl = FpMul_6U_10U_ub_sva_1_15_0_1[15:10] + 6'b100001;
  assign FpMul_6U_10U_else_2_else_acc_2_nl_S = 0 ;
  logic [15:0] FpMul_6U_10U_ub_sva_1_15_0_1_C0 ;
  logic [15:0] FpMul_6U_10U_ub_sva_1_15_0_1_R0 ;
  logic [15:0] FpMul_6U_10U_ub_sva_1_15_0_1_X0 ;
  assign FpMul_6U_10U_else_2_else_acc_2_nl_T = FpMul_6U_10U_ub_sva_1_15_0_1_T [15:10] ;
  assign FpMul_6U_10U_ub_sva_1_15_0_1_C0 [15:10] = FpMul_6U_10U_else_2_else_acc_2_nl_C ;
  assign FpMul_6U_10U_ub_sva_1_15_0_1_R0 [15:10] = FpMul_6U_10U_else_2_else_acc_2_nl_R ;
  assign FpMul_6U_10U_ub_sva_1_15_0_1_X0 [15:10] = FpMul_6U_10U_else_2_else_acc_2_nl_X ;
  assign nl_FpMul_6U_10U_p_expo_sva_5 = FpMul_6U_10U_else_2_else_acc_2_nl + FpMul_6U_10U_ua_sva_1_15_0_1[15:10];
  assign nl_FpMul_6U_10U_p_expo_sva_5_S = 0 ;
  logic [5:0] FpMul_6U_10U_else_2_else_acc_2_nl_C0 ;
  logic [5:0] FpMul_6U_10U_else_2_else_acc_2_nl_R0 ;
  logic [5:0] FpMul_6U_10U_else_2_else_acc_2_nl_X0 ;
  logic [15:0] FpMul_6U_10U_ua_sva_1_15_0_1_C0 ;
  logic [15:0] FpMul_6U_10U_ua_sva_1_15_0_1_R0 ;
  logic [15:0] FpMul_6U_10U_ua_sva_1_15_0_1_X0 ;
  assign nl_FpMul_6U_10U_p_expo_sva_5_T = FpMul_6U_10U_else_2_else_acc_2_nl_T | FpMul_6U_10U_ua_sva_1_15_0_1_T [15:10] ;
  assign FpMul_6U_10U_else_2_else_acc_2_nl_C0 = nl_FpMul_6U_10U_p_expo_sva_5_C ;
  assign FpMul_6U_10U_else_2_else_acc_2_nl_X0 = nl_FpMul_6U_10U_p_expo_sva_5_X ;
  assign FpMul_6U_10U_ua_sva_1_15_0_1_C0 [15:10] = nl_FpMul_6U_10U_p_expo_sva_5_C ;
  assign FpMul_6U_10U_ua_sva_1_15_0_1_X0 [15:10] = nl_FpMul_6U_10U_p_expo_sva_5_X ;
  assign FpMul_6U_10U_else_2_else_acc_2_nl_R0 = nl_FpMul_6U_10U_p_expo_sva_5_R | ( nl_FpMul_6U_10U_p_expo_sva_5_C & FpMul_6U_10U_ua_sva_1_15_0_1_T [15:10] );
  assign FpMul_6U_10U_ua_sva_1_15_0_1_R0 [15:10] = nl_FpMul_6U_10U_p_expo_sva_5_R | ( nl_FpMul_6U_10U_p_expo_sva_5_C & FpMul_6U_10U_else_2_else_acc_2_nl_T );
  assign FpMul_6U_10U_else_2_acc_1_nl = chn_a_rsci_d_mxwt[15:10] + chn_b_rsci_d_mxwt[15:10];
  assign FpMul_6U_10U_else_2_acc_1_nl_S = 0 ;
  logic [16:0] chn_a_rsci_d_mxwt_C0 ;
  logic [16:0] chn_a_rsci_d_mxwt_R0 ;
  logic [16:0] chn_a_rsci_d_mxwt_X0 ;
  logic [16:0] chn_b_rsci_d_mxwt_C0 ;
  logic [16:0] chn_b_rsci_d_mxwt_R0 ;
  logic [16:0] chn_b_rsci_d_mxwt_X0 ;
  assign FpMul_6U_10U_else_2_acc_1_nl_T = chn_a_rsci_d_mxwt_T [15:10] | chn_b_rsci_d_mxwt_T [15:10] ;
  assign chn_a_rsci_d_mxwt_C0 [15:10] = FpMul_6U_10U_else_2_acc_1_nl_C ;
  assign chn_a_rsci_d_mxwt_X0 [15:10] = FpMul_6U_10U_else_2_acc_1_nl_X ;
  assign chn_b_rsci_d_mxwt_C0 [15:10] = FpMul_6U_10U_else_2_acc_1_nl_C ;
  assign chn_b_rsci_d_mxwt_X0 [15:10] = FpMul_6U_10U_else_2_acc_1_nl_X ;
  assign chn_a_rsci_d_mxwt_R0 [15:10] = FpMul_6U_10U_else_2_acc_1_nl_R | ( FpMul_6U_10U_else_2_acc_1_nl_C & chn_b_rsci_d_mxwt_T [15:10] );
  assign chn_b_rsci_d_mxwt_R0 [15:10] = FpMul_6U_10U_else_2_acc_1_nl_R | ( FpMul_6U_10U_else_2_acc_1_nl_C & chn_a_rsci_d_mxwt_T [15:10] );
  assign FpMul_6U_10U_else_2_if_acc_nl = FpMul_6U_10U_else_2_acc_1_nl[6:1] + 7'b1010001;
  assign FpMul_6U_10U_else_2_if_acc_nl_S = 0 ;
  logic [6:0] FpMul_6U_10U_else_2_acc_1_nl_C0 ;
  logic [6:0] FpMul_6U_10U_else_2_acc_1_nl_R0 ;
  logic [6:0] FpMul_6U_10U_else_2_acc_1_nl_X0 ;
  assign FpMul_6U_10U_else_2_if_acc_nl_T = FpMul_6U_10U_else_2_acc_1_nl_T [6:1] ;
  assign FpMul_6U_10U_else_2_acc_1_nl_C0 [6:1] = FpMul_6U_10U_else_2_if_acc_nl_C ;
  assign FpMul_6U_10U_else_2_acc_1_nl_R0 [6:1] = FpMul_6U_10U_else_2_if_acc_nl_R ;
  assign FpMul_6U_10U_else_2_acc_1_nl_X0 [6:1] = FpMul_6U_10U_else_2_if_acc_nl_X ;
  assign FpMul_6U_10U_oelse_1_acc_1_nl = chn_b_rsci_d_mxwt[15:10] + 7'b1100001;
  assign FpMul_6U_10U_oelse_1_acc_1_nl_S = 0 ;
  assign { chn_b_rsci_d_mxwt_R0 [0], chn_b_rsci_d_mxwt_R0 [1], chn_b_rsci_d_mxwt_R0 [2], chn_b_rsci_d_mxwt_R0 [3], chn_b_rsci_d_mxwt_R0 [4], chn_b_rsci_d_mxwt_R0 [5], chn_b_rsci_d_mxwt_R0 [6], chn_b_rsci_d_mxwt_R0 [7], chn_b_rsci_d_mxwt_R0 [8], chn_b_rsci_d_mxwt_R0 [9], chn_b_rsci_d_mxwt_R0 [16:16] } = 0;
  assign { chn_b_rsci_d_mxwt_X0 [0], chn_b_rsci_d_mxwt_X0 [1], chn_b_rsci_d_mxwt_X0 [2], chn_b_rsci_d_mxwt_X0 [3], chn_b_rsci_d_mxwt_X0 [4], chn_b_rsci_d_mxwt_X0 [5], chn_b_rsci_d_mxwt_X0 [6], chn_b_rsci_d_mxwt_X0 [7], chn_b_rsci_d_mxwt_X0 [8], chn_b_rsci_d_mxwt_X0 [9], chn_b_rsci_d_mxwt_X0 [16:16] } = 0;
  assign { chn_b_rsci_d_mxwt_C0 [0], chn_b_rsci_d_mxwt_C0 [1], chn_b_rsci_d_mxwt_C0 [2], chn_b_rsci_d_mxwt_C0 [3], chn_b_rsci_d_mxwt_C0 [4], chn_b_rsci_d_mxwt_C0 [5], chn_b_rsci_d_mxwt_C0 [6], chn_b_rsci_d_mxwt_C0 [7], chn_b_rsci_d_mxwt_C0 [8], chn_b_rsci_d_mxwt_C0 [9], chn_b_rsci_d_mxwt_C0 [16:16] } = 0;
  logic [16:0] chn_b_rsci_d_mxwt_C1 ;
  logic [16:0] chn_b_rsci_d_mxwt_R1 ;
  logic [16:0] chn_b_rsci_d_mxwt_X1 ;
  assign FpMul_6U_10U_oelse_1_acc_1_nl_T = chn_b_rsci_d_mxwt_T [15:10] ;
  assign chn_b_rsci_d_mxwt_C1 [15:10] = FpMul_6U_10U_oelse_1_acc_1_nl_C ;
  assign chn_b_rsci_d_mxwt_R1 [15:10] = FpMul_6U_10U_oelse_1_acc_1_nl_R ;
  assign chn_b_rsci_d_mxwt_X1 [15:10] = FpMul_6U_10U_oelse_1_acc_1_nl_X ;
  logic [7:0] fangyuan0;
  logic [7:0] fangyuan0_T ;
  logic [7:0] fangyuan0_R ;
  logic [7:0] fangyuan0_C ;
  logic [7:0] fangyuan0_X ;
  assign fangyuan0 = { FpMul_6U_10U_oelse_1_acc_1_nl[6], FpMul_6U_10U_oelse_1_acc_1_nl };
  assign fangyuan0_T = {  FpMul_6U_10U_oelse_1_acc_1_nl_T [6] , FpMul_6U_10U_oelse_1_acc_1_nl_T  };
  logic [13:0] fangyuan0_S ;
  assign fangyuan0_S = 0 ;
  logic [6:0] FpMul_6U_10U_oelse_1_acc_1_nl_R0 ;
  logic [6:0] FpMul_6U_10U_oelse_1_acc_1_nl_X0 ;
  logic [6:0] FpMul_6U_10U_oelse_1_acc_1_nl_C0 ;
  assign FpMul_6U_10U_oelse_1_acc_1_nl_R0 [6:6] = fangyuan0_R [7:7] ;
  assign FpMul_6U_10U_oelse_1_acc_1_nl_X0 [6:6] = fangyuan0_X [7:7] ;
  assign FpMul_6U_10U_oelse_1_acc_1_nl_C0 [6:6] = fangyuan0_C [7:7] ;
  assign { FpMul_6U_10U_oelse_1_acc_1_nl_R0 [0], FpMul_6U_10U_oelse_1_acc_1_nl_R0 [1], FpMul_6U_10U_oelse_1_acc_1_nl_R0 [2], FpMul_6U_10U_oelse_1_acc_1_nl_R0 [3], FpMul_6U_10U_oelse_1_acc_1_nl_R0 [4], FpMul_6U_10U_oelse_1_acc_1_nl_R0 [5] } = 0;
  assign { FpMul_6U_10U_oelse_1_acc_1_nl_X0 [0], FpMul_6U_10U_oelse_1_acc_1_nl_X0 [1], FpMul_6U_10U_oelse_1_acc_1_nl_X0 [2], FpMul_6U_10U_oelse_1_acc_1_nl_X0 [3], FpMul_6U_10U_oelse_1_acc_1_nl_X0 [4], FpMul_6U_10U_oelse_1_acc_1_nl_X0 [5] } = 0;
  assign { FpMul_6U_10U_oelse_1_acc_1_nl_C0 [0], FpMul_6U_10U_oelse_1_acc_1_nl_C0 [1], FpMul_6U_10U_oelse_1_acc_1_nl_C0 [2], FpMul_6U_10U_oelse_1_acc_1_nl_C0 [3], FpMul_6U_10U_oelse_1_acc_1_nl_C0 [4], FpMul_6U_10U_oelse_1_acc_1_nl_C0 [5] } = 0;
  logic [6:0] FpMul_6U_10U_oelse_1_acc_1_nl_R1 ;
  logic [6:0] FpMul_6U_10U_oelse_1_acc_1_nl_X1 ;
  logic [6:0] FpMul_6U_10U_oelse_1_acc_1_nl_C1 ;
  assign FpMul_6U_10U_oelse_1_acc_1_nl_R1 = fangyuan0_R [6:0] ;
  assign FpMul_6U_10U_oelse_1_acc_1_nl_X1 = fangyuan0_X [6:0] ;
  assign FpMul_6U_10U_oelse_1_acc_1_nl_C1 = fangyuan0_C [6:0] ;

  assign FpMul_6U_10U_oelse_1_acc_nl = fangyuan0 + chn_a_rsci_d_mxwt[15:10];
  assign FpMul_6U_10U_oelse_1_acc_nl_S = 0 ;
  assign { chn_a_rsci_d_mxwt_R0 [0], chn_a_rsci_d_mxwt_R0 [1], chn_a_rsci_d_mxwt_R0 [2], chn_a_rsci_d_mxwt_R0 [3], chn_a_rsci_d_mxwt_R0 [4], chn_a_rsci_d_mxwt_R0 [5], chn_a_rsci_d_mxwt_R0 [6], chn_a_rsci_d_mxwt_R0 [7], chn_a_rsci_d_mxwt_R0 [8], chn_a_rsci_d_mxwt_R0 [9], chn_a_rsci_d_mxwt_R0 [16:16] } = 0;
  assign { chn_a_rsci_d_mxwt_X0 [0], chn_a_rsci_d_mxwt_X0 [1], chn_a_rsci_d_mxwt_X0 [2], chn_a_rsci_d_mxwt_X0 [3], chn_a_rsci_d_mxwt_X0 [4], chn_a_rsci_d_mxwt_X0 [5], chn_a_rsci_d_mxwt_X0 [6], chn_a_rsci_d_mxwt_X0 [7], chn_a_rsci_d_mxwt_X0 [8], chn_a_rsci_d_mxwt_X0 [9], chn_a_rsci_d_mxwt_X0 [16:16] } = 0;
  assign { chn_a_rsci_d_mxwt_C0 [0], chn_a_rsci_d_mxwt_C0 [1], chn_a_rsci_d_mxwt_C0 [2], chn_a_rsci_d_mxwt_C0 [3], chn_a_rsci_d_mxwt_C0 [4], chn_a_rsci_d_mxwt_C0 [5], chn_a_rsci_d_mxwt_C0 [6], chn_a_rsci_d_mxwt_C0 [7], chn_a_rsci_d_mxwt_C0 [8], chn_a_rsci_d_mxwt_C0 [9], chn_a_rsci_d_mxwt_C0 [16:16] } = 0;
  logic [7:0] fangyuan0_C0 ;
  logic [7:0] fangyuan0_R0 ;
  logic [7:0] fangyuan0_X0 ;
  logic [16:0] chn_a_rsci_d_mxwt_C1 ;
  logic [16:0] chn_a_rsci_d_mxwt_R1 ;
  logic [16:0] chn_a_rsci_d_mxwt_X1 ;
  assign FpMul_6U_10U_oelse_1_acc_nl_T = fangyuan0_T | chn_a_rsci_d_mxwt_T [15:10] ;
  assign fangyuan0_C0 = FpMul_6U_10U_oelse_1_acc_nl_C ;
  assign fangyuan0_X0 = FpMul_6U_10U_oelse_1_acc_nl_X ;
  assign chn_a_rsci_d_mxwt_C1 [15:10] = FpMul_6U_10U_oelse_1_acc_nl_C ;
  assign chn_a_rsci_d_mxwt_X1 [15:10] = FpMul_6U_10U_oelse_1_acc_nl_X ;
  assign fangyuan0_R0 = FpMul_6U_10U_oelse_1_acc_nl_R | ( FpMul_6U_10U_oelse_1_acc_nl_C & chn_a_rsci_d_mxwt_T [15:10] );
  assign chn_a_rsci_d_mxwt_R1 [15:10] = FpMul_6U_10U_oelse_1_acc_nl_R | ( FpMul_6U_10U_oelse_1_acc_nl_C & fangyuan0_T );
  logic [5:0] fangyuan1;
  logic [5:0] fangyuan1_T ;
  logic [5:0] fangyuan1_R ;
  logic [5:0] fangyuan1_C ;
  logic [5:0] fangyuan1_X ;
  assign fangyuan1 = { 1'b1, FpMul_6U_10U_p_expo_sva_5[5:1] };
  assign fangyuan1_T = {  1'h0 , FpMul_6U_10U_p_expo_sva_5_T [5:1]  };
  logic [13:0] fangyuan1_S ;
  assign fangyuan1_S = 0 ;
  logic [5:0] FpMul_6U_10U_p_expo_sva_5_R0 ;
  logic [5:0] FpMul_6U_10U_p_expo_sva_5_X0 ;
  logic [5:0] FpMul_6U_10U_p_expo_sva_5_C0 ;
  assign FpMul_6U_10U_p_expo_sva_5_R0 [5:1] = fangyuan1_R [4:0] ;
  assign FpMul_6U_10U_p_expo_sva_5_X0 [5:1] = fangyuan1_X [4:0] ;
  assign FpMul_6U_10U_p_expo_sva_5_C0 [5:1] = fangyuan1_C [4:0] ;

  assign FpMul_6U_10U_else_2_else_if_if_acc_1_nl = fangyuan1 + 1'b1;
  assign FpMul_6U_10U_else_2_else_if_if_acc_1_nl_S = 0 ;
  logic [5:0] fangyuan1_C0 ;
  logic [5:0] fangyuan1_R0 ;
  logic [5:0] fangyuan1_X0 ;
  assign FpMul_6U_10U_else_2_else_if_if_acc_1_nl_T = fangyuan1_T ;
  assign fangyuan1_C0 = FpMul_6U_10U_else_2_else_if_if_acc_1_nl_C ;
  assign fangyuan1_R0 = FpMul_6U_10U_else_2_else_if_if_acc_1_nl_R ;
  assign fangyuan1_X0 = FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X ;
  assign FpMul_6U_10U_else_2_else_if_if_acc_nl = FpMul_6U_10U_p_expo_sva_5 + 1'b1;
  assign FpMul_6U_10U_else_2_else_if_if_acc_nl_S = 0 ;
  assign { FpMul_6U_10U_p_expo_sva_5_R0 [0] } = 0;
  assign { FpMul_6U_10U_p_expo_sva_5_X0 [0] } = 0;
  assign { FpMul_6U_10U_p_expo_sva_5_C0 [0] } = 0;
  logic [5:0] FpMul_6U_10U_p_expo_sva_5_C1 ;
  logic [5:0] FpMul_6U_10U_p_expo_sva_5_R1 ;
  logic [5:0] FpMul_6U_10U_p_expo_sva_5_X1 ;
  assign FpMul_6U_10U_else_2_else_if_if_acc_nl_T = FpMul_6U_10U_p_expo_sva_5_T ;
  assign FpMul_6U_10U_p_expo_sva_5_C1 = FpMul_6U_10U_else_2_else_if_if_acc_nl_C ;
  assign FpMul_6U_10U_p_expo_sva_5_R1 = FpMul_6U_10U_else_2_else_if_if_acc_nl_R ;
  assign FpMul_6U_10U_p_expo_sva_5_X1 = FpMul_6U_10U_else_2_else_if_if_acc_nl_X ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1 = FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0 + 1'b1;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_S = 0 ;
  logic [5:0] FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_C0 ;
  logic [5:0] FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_R0 ;
  logic [5:0] FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_X0 ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_T = FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_T ;
  assign FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_C0 = FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_C ;
  assign FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_R0 = FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_R ;
  assign FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_X0 = FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_X ;
  assign and_dcpl_7 = reg_chn_o_rsci_ld_core_psct_cse & _104_;
  assign and_dcpl_7_S = 0 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C0 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R0 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X0 ;
  logic [0:0] _104__C0 ;
  logic [0:0] _104__R0 ;
  logic [0:0] _104__X0 ;
  assign and_dcpl_7_T = reg_chn_o_rsci_ld_core_psct_cse_T | _104__T ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C0 = and_dcpl_7_C ;
  assign reg_chn_o_rsci_ld_core_psct_cse_X0 = and_dcpl_7_X ;
  assign _104__C0 = and_dcpl_7_C ;
  assign _104__X0 = and_dcpl_7_X ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R0 = ( and_dcpl_7_R | and_dcpl_7_C & _104__T ) & { 1{ _104_ != 0 }} ;
  assign _104__R0 = ( and_dcpl_7_R | and_dcpl_7_C & reg_chn_o_rsci_ld_core_psct_cse_T ) & { 1{ reg_chn_o_rsci_ld_core_psct_cse != 0 }} ;
  assign and_dcpl_13 = or_5_cse & main_stage_v_2;
  assign and_dcpl_13_S = 0 ;
  logic [0:0] or_5_cse_C0 ;
  logic [0:0] or_5_cse_R0 ;
  logic [0:0] or_5_cse_X0 ;
  logic [0:0] main_stage_v_2_C0 ;
  logic [0:0] main_stage_v_2_R0 ;
  logic [0:0] main_stage_v_2_X0 ;
  assign and_dcpl_13_T = or_5_cse_T | main_stage_v_2_T ;
  assign or_5_cse_C0 = and_dcpl_13_C ;
  assign or_5_cse_X0 = and_dcpl_13_X ;
  assign main_stage_v_2_C0 = and_dcpl_13_C ;
  assign main_stage_v_2_X0 = and_dcpl_13_X ;
  assign or_5_cse_R0 = ( and_dcpl_13_R | and_dcpl_13_C & main_stage_v_2_T ) & { 1{ main_stage_v_2 != 0 }} ;
  assign main_stage_v_2_R0 = ( and_dcpl_13_R | and_dcpl_13_C & or_5_cse_T ) & { 1{ or_5_cse != 0 }} ;
  assign and_dcpl_14 = reg_chn_o_rsci_ld_core_psct_cse & chn_o_rsci_bawt;
  assign and_dcpl_14_S = 0 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C1 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R1 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X1 ;
  logic [0:0] chn_o_rsci_bawt_C0 ;
  logic [0:0] chn_o_rsci_bawt_R0 ;
  logic [0:0] chn_o_rsci_bawt_X0 ;
  assign and_dcpl_14_T = reg_chn_o_rsci_ld_core_psct_cse_T | chn_o_rsci_bawt_T ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C1 = and_dcpl_14_C ;
  assign reg_chn_o_rsci_ld_core_psct_cse_X1 = and_dcpl_14_X ;
  assign chn_o_rsci_bawt_C0 = and_dcpl_14_C ;
  assign chn_o_rsci_bawt_X0 = and_dcpl_14_X ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R1 = ( and_dcpl_14_R | and_dcpl_14_C & chn_o_rsci_bawt_T ) & { 1{ chn_o_rsci_bawt != 0 }} ;
  assign chn_o_rsci_bawt_R0 = ( and_dcpl_14_R | and_dcpl_14_C & reg_chn_o_rsci_ld_core_psct_cse_T ) & { 1{ reg_chn_o_rsci_ld_core_psct_cse != 0 }} ;
  assign and_dcpl_15 = and_dcpl_14 & _105_;
  assign and_dcpl_15_S = 0 ;
  logic [0:0] and_dcpl_14_C0 ;
  logic [0:0] and_dcpl_14_R0 ;
  logic [0:0] and_dcpl_14_X0 ;
  logic [0:0] _105__C0 ;
  logic [0:0] _105__R0 ;
  logic [0:0] _105__X0 ;
  assign and_dcpl_15_T = and_dcpl_14_T | _105__T ;
  assign and_dcpl_14_C0 = and_dcpl_15_C ;
  assign and_dcpl_14_X0 = and_dcpl_15_X ;
  assign _105__C0 = and_dcpl_15_C ;
  assign _105__X0 = and_dcpl_15_X ;
  assign and_dcpl_14_R0 = ( and_dcpl_15_R | and_dcpl_15_C & _105__T ) & { 1{ _105_ != 0 }} ;
  assign _105__R0 = ( and_dcpl_15_R | and_dcpl_15_C & and_dcpl_14_T ) & { 1{ and_dcpl_14 != 0 }} ;
  assign and_dcpl_28 = or_5_cse & IsNaN_6U_10U_land_lpi_1_dfm_st_3;
  assign and_dcpl_28_S = 0 ;
  logic [0:0] or_5_cse_C1 ;
  logic [0:0] or_5_cse_R1 ;
  logic [0:0] or_5_cse_X1 ;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_st_3_C0 ;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_st_3_R0 ;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_st_3_X0 ;
  assign and_dcpl_28_T = or_5_cse_T | IsNaN_6U_10U_land_lpi_1_dfm_st_3_T ;
  assign or_5_cse_C1 = and_dcpl_28_C ;
  assign or_5_cse_X1 = and_dcpl_28_X ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_st_3_C0 = and_dcpl_28_C ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_st_3_X0 = and_dcpl_28_X ;
  assign or_5_cse_R1 = ( and_dcpl_28_R | and_dcpl_28_C & IsNaN_6U_10U_land_lpi_1_dfm_st_3_T ) & { 1{ IsNaN_6U_10U_land_lpi_1_dfm_st_3 != 0 }} ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_st_3_R0 = ( and_dcpl_28_R | and_dcpl_28_C & or_5_cse_T ) & { 1{ or_5_cse != 0 }} ;
  assign nor_tmp_1 = chn_b_rsci_bawt & chn_a_rsci_bawt;
  assign nor_tmp_1_S = 0 ;
  logic [0:0] chn_b_rsci_bawt_C0 ;
  logic [0:0] chn_b_rsci_bawt_R0 ;
  logic [0:0] chn_b_rsci_bawt_X0 ;
  logic [0:0] chn_a_rsci_bawt_C0 ;
  logic [0:0] chn_a_rsci_bawt_R0 ;
  logic [0:0] chn_a_rsci_bawt_X0 ;
  assign nor_tmp_1_T = chn_b_rsci_bawt_T | chn_a_rsci_bawt_T ;
  assign chn_b_rsci_bawt_C0 = nor_tmp_1_C ;
  assign chn_b_rsci_bawt_X0 = nor_tmp_1_X ;
  assign chn_a_rsci_bawt_C0 = nor_tmp_1_C ;
  assign chn_a_rsci_bawt_X0 = nor_tmp_1_X ;
  assign chn_b_rsci_bawt_R0 = ( nor_tmp_1_R | nor_tmp_1_C & chn_a_rsci_bawt_T ) & { 1{ chn_a_rsci_bawt != 0 }} ;
  assign chn_a_rsci_bawt_R0 = ( nor_tmp_1_R | nor_tmp_1_C & chn_b_rsci_bawt_T ) & { 1{ chn_b_rsci_bawt != 0 }} ;
  assign main_stage_en_1 = nor_tmp_1 & or_5_cse;
  assign main_stage_en_1_S = 0 ;
  logic [0:0] nor_tmp_1_C0 ;
  logic [0:0] nor_tmp_1_R0 ;
  logic [0:0] nor_tmp_1_X0 ;
  logic [0:0] or_5_cse_C2 ;
  logic [0:0] or_5_cse_R2 ;
  logic [0:0] or_5_cse_X2 ;
  assign main_stage_en_1_T = nor_tmp_1_T | or_5_cse_T ;
  assign nor_tmp_1_C0 = main_stage_en_1_C ;
  assign nor_tmp_1_X0 = main_stage_en_1_X ;
  assign or_5_cse_C2 = main_stage_en_1_C ;
  assign or_5_cse_X2 = main_stage_en_1_X ;
  assign nor_tmp_1_R0 = ( main_stage_en_1_R | main_stage_en_1_C & or_5_cse_T ) & { 1{ or_5_cse != 0 }} ;
  assign or_5_cse_R2 = ( main_stage_en_1_R | main_stage_en_1_C & nor_tmp_1_T ) & { 1{ nor_tmp_1 != 0 }} ;
  assign or_tmp_68 = main_stage_en_1 & fsm_output[1];
  assign or_tmp_68_S = 0 ;
  logic [0:0] main_stage_en_1_C0 ;
  logic [0:0] main_stage_en_1_R0 ;
  logic [0:0] main_stage_en_1_X0 ;
  logic [1:0] fsm_output_C0 ;
  logic [1:0] fsm_output_R0 ;
  logic [1:0] fsm_output_X0 ;
  assign or_tmp_68_T = main_stage_en_1_T | fsm_output_T [1] ;
  assign main_stage_en_1_C0 = or_tmp_68_C ;
  assign main_stage_en_1_X0 = or_tmp_68_X ;
  assign fsm_output_C0 [1] = or_tmp_68_C ;
  assign fsm_output_X0 [1] = or_tmp_68_X ;
  assign main_stage_en_1_R0 = ( or_tmp_68_R | or_tmp_68_C & fsm_output_T [1] ) & { 1{ fsm_output[1] != 0 }} ;
  assign fsm_output_R0 [1] = ( or_tmp_68_R | or_tmp_68_C & main_stage_en_1_T ) & { 1{ main_stage_en_1 != 0 }} ;
  assign chn_o_rsci_d_15_10_mx0c1 = and_dcpl_13 & _106_;
  assign chn_o_rsci_d_15_10_mx0c1_S = 0 ;
  logic [0:0] and_dcpl_13_C0 ;
  logic [0:0] and_dcpl_13_R0 ;
  logic [0:0] and_dcpl_13_X0 ;
  logic [0:0] _106__C0 ;
  logic [0:0] _106__R0 ;
  logic [0:0] _106__X0 ;
  assign chn_o_rsci_d_15_10_mx0c1_T = and_dcpl_13_T | _106__T ;
  assign and_dcpl_13_C0 = chn_o_rsci_d_15_10_mx0c1_C ;
  assign and_dcpl_13_X0 = chn_o_rsci_d_15_10_mx0c1_X ;
  assign _106__C0 = chn_o_rsci_d_15_10_mx0c1_C ;
  assign _106__X0 = chn_o_rsci_d_15_10_mx0c1_X ;
  assign and_dcpl_13_R0 = ( chn_o_rsci_d_15_10_mx0c1_R | chn_o_rsci_d_15_10_mx0c1_C & _106__T ) & { 1{ _106_ != 0 }} ;
  assign _106__R0 = ( chn_o_rsci_d_15_10_mx0c1_R | chn_o_rsci_d_15_10_mx0c1_C & and_dcpl_13_T ) & { 1{ and_dcpl_13 != 0 }} ;
  assign _044_ = nand_6_cse & main_stage_v_1;
  assign _044__S = 0 ;
  logic [0:0] nand_6_cse_C0 ;
  logic [0:0] nand_6_cse_R0 ;
  logic [0:0] nand_6_cse_X0 ;
  logic [0:0] main_stage_v_1_C0 ;
  logic [0:0] main_stage_v_1_R0 ;
  logic [0:0] main_stage_v_1_X0 ;
  assign _044__T = nand_6_cse_T | main_stage_v_1_T ;
  assign nand_6_cse_C0 = _044__C ;
  assign nand_6_cse_X0 = _044__X ;
  assign main_stage_v_1_C0 = _044__C ;
  assign main_stage_v_1_X0 = _044__X ;
  assign nand_6_cse_R0 = ( _044__R | _044__C & main_stage_v_1_T ) & { 1{ main_stage_v_1 != 0 }} ;
  assign main_stage_v_1_R0 = ( _044__R | _044__C & nand_6_cse_T ) & { 1{ nand_6_cse != 0 }} ;
  assign main_stage_v_1_mx0c1 = _044_ & or_5_cse;
  assign main_stage_v_1_mx0c1_S = 0 ;
  logic [0:0] _044__C0 ;
  logic [0:0] _044__R0 ;
  logic [0:0] _044__X0 ;
  logic [0:0] or_5_cse_C3 ;
  logic [0:0] or_5_cse_R3 ;
  logic [0:0] or_5_cse_X3 ;
  assign main_stage_v_1_mx0c1_T = _044__T | or_5_cse_T ;
  assign _044__C0 = main_stage_v_1_mx0c1_C ;
  assign _044__X0 = main_stage_v_1_mx0c1_X ;
  assign or_5_cse_C3 = main_stage_v_1_mx0c1_C ;
  assign or_5_cse_X3 = main_stage_v_1_mx0c1_X ;
  assign _044__R0 = ( main_stage_v_1_mx0c1_R | main_stage_v_1_mx0c1_C & or_5_cse_T ) & { 1{ or_5_cse != 0 }} ;
  assign or_5_cse_R3 = ( main_stage_v_1_mx0c1_R | main_stage_v_1_mx0c1_C & _044__T ) & { 1{ _044_ != 0 }} ;
  assign _045_ = or_5_cse & _000_;
  assign _045__S = 0 ;
  logic [0:0] or_5_cse_C4 ;
  logic [0:0] or_5_cse_R4 ;
  logic [0:0] or_5_cse_X4 ;
  logic [0:0] _000__C0 ;
  logic [0:0] _000__R0 ;
  logic [0:0] _000__X0 ;
  assign _045__T = or_5_cse_T | _000__T ;
  assign or_5_cse_C4 = _045__C ;
  assign or_5_cse_X4 = _045__X ;
  assign _000__C0 = _045__C ;
  assign _000__X0 = _045__X ;
  assign or_5_cse_R4 = ( _045__R | _045__C & _000__T ) & { 1{ _000_ != 0 }} ;
  assign _000__R0 = ( _045__R | _045__C & or_5_cse_T ) & { 1{ or_5_cse != 0 }} ;
  assign main_stage_v_2_mx0c1 = _045_ & main_stage_v_2;
  assign main_stage_v_2_mx0c1_S = 0 ;
  logic [0:0] _045__C0 ;
  logic [0:0] _045__R0 ;
  logic [0:0] _045__X0 ;
  logic [0:0] main_stage_v_2_C1 ;
  logic [0:0] main_stage_v_2_R1 ;
  logic [0:0] main_stage_v_2_X1 ;
  assign main_stage_v_2_mx0c1_T = _045__T | main_stage_v_2_T ;
  assign _045__C0 = main_stage_v_2_mx0c1_C ;
  assign _045__X0 = main_stage_v_2_mx0c1_X ;
  assign main_stage_v_2_C1 = main_stage_v_2_mx0c1_C ;
  assign main_stage_v_2_X1 = main_stage_v_2_mx0c1_X ;
  assign _045__R0 = ( main_stage_v_2_mx0c1_R | main_stage_v_2_mx0c1_C & main_stage_v_2_T ) & { 1{ main_stage_v_2 != 0 }} ;
  assign main_stage_v_2_R1 = ( main_stage_v_2_mx0c1_R | main_stage_v_2_mx0c1_C & _045__T ) & { 1{ _045_ != 0 }} ;
  assign _046_ = _107_ & fsm_output[1];
  assign _046__S = 0 ;
  assign { fsm_output_R0 [0] } = 0;
  assign { fsm_output_X0 [0] } = 0;
  assign { fsm_output_C0 [0] } = 0;
  logic [0:0] _107__C0 ;
  logic [0:0] _107__R0 ;
  logic [0:0] _107__X0 ;
  logic [1:0] fsm_output_C1 ;
  logic [1:0] fsm_output_R1 ;
  logic [1:0] fsm_output_X1 ;
  assign _046__T = _107__T | fsm_output_T [1] ;
  assign _107__C0 = _046__C ;
  assign _107__X0 = _046__X ;
  assign fsm_output_C1 [1] = _046__C ;
  assign fsm_output_X1 [1] = _046__X ;
  assign _107__R0 = ( _046__R | _046__C & fsm_output_T [1] ) & { 1{ fsm_output[1] != 0 }} ;
  assign fsm_output_R1 [1] = ( _046__R | _046__C & _107__T ) & { 1{ _107_ != 0 }} ;
  assign _047_ = core_wen & or_tmp_62;
  assign _047__S = 0 ;
  logic [0:0] core_wen_C0 ;
  logic [0:0] core_wen_R0 ;
  logic [0:0] core_wen_X0 ;
  logic [0:0] or_tmp_62_C0 ;
  logic [0:0] or_tmp_62_R0 ;
  logic [0:0] or_tmp_62_X0 ;
  assign _047__T = core_wen_T | or_tmp_62_T ;
  assign core_wen_C0 = _047__C ;
  assign core_wen_X0 = _047__X ;
  assign or_tmp_62_C0 = _047__C ;
  assign or_tmp_62_X0 = _047__X ;
  assign core_wen_R0 = ( _047__R | _047__C & or_tmp_62_T ) & { 1{ or_tmp_62 != 0 }} ;
  assign or_tmp_62_R0 = ( _047__R | _047__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _048_ = and_dcpl_13 & IsNaN_6U_10U_land_lpi_1_dfm_4;
  assign _048__S = 0 ;
  logic [0:0] and_dcpl_13_C1 ;
  logic [0:0] and_dcpl_13_R1 ;
  logic [0:0] and_dcpl_13_X1 ;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_4_C0 ;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_4_R0 ;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_4_X0 ;
  assign _048__T = and_dcpl_13_T | IsNaN_6U_10U_land_lpi_1_dfm_4_T ;
  assign and_dcpl_13_C1 = _048__C ;
  assign and_dcpl_13_X1 = _048__X ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_4_C0 = _048__C ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_4_X0 = _048__X ;
  assign and_dcpl_13_R1 = ( _048__R | _048__C & IsNaN_6U_10U_land_lpi_1_dfm_4_T ) & { 1{ IsNaN_6U_10U_land_lpi_1_dfm_4 != 0 }} ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_4_R0 = ( _048__R | _048__C & and_dcpl_13_T ) & { 1{ and_dcpl_13 != 0 }} ;
  assign _049_ = core_wen & _142_;
  assign _049__S = 0 ;
  logic [0:0] core_wen_C1 ;
  logic [0:0] core_wen_R1 ;
  logic [0:0] core_wen_X1 ;
  logic [0:0] _142__C0 ;
  logic [0:0] _142__R0 ;
  logic [0:0] _142__X0 ;
  assign _049__T = core_wen_T | _142__T ;
  assign core_wen_C1 = _049__C ;
  assign core_wen_X1 = _049__X ;
  assign _142__C0 = _049__C ;
  assign _142__X0 = _049__X ;
  assign core_wen_R1 = ( _049__R | _049__C & _142__T ) & { 1{ _142_ != 0 }} ;
  assign _142__R0 = ( _049__R | _049__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _050_ = core_wen & _143_;
  assign _050__S = 0 ;
  logic [0:0] core_wen_C2 ;
  logic [0:0] core_wen_R2 ;
  logic [0:0] core_wen_X2 ;
  logic [0:0] _143__C0 ;
  logic [0:0] _143__R0 ;
  logic [0:0] _143__X0 ;
  assign _050__T = core_wen_T | _143__T ;
  assign core_wen_C2 = _050__C ;
  assign core_wen_X2 = _050__X ;
  assign _143__C0 = _050__C ;
  assign _143__X0 = _050__X ;
  assign core_wen_R2 = ( _050__R | _050__C & _143__T ) & { 1{ _143_ != 0 }} ;
  assign _143__R0 = ( _050__R | _050__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _051_ = core_wen & _144_;
  assign _051__S = 0 ;
  logic [0:0] core_wen_C3 ;
  logic [0:0] core_wen_R3 ;
  logic [0:0] core_wen_X3 ;
  logic [0:0] _144__C0 ;
  logic [0:0] _144__R0 ;
  logic [0:0] _144__X0 ;
  assign _051__T = core_wen_T | _144__T ;
  assign core_wen_C3 = _051__C ;
  assign core_wen_X3 = _051__X ;
  assign _144__C0 = _051__C ;
  assign _144__X0 = _051__X ;
  assign core_wen_R3 = ( _051__R | _051__C & _144__T ) & { 1{ _144_ != 0 }} ;
  assign _144__R0 = ( _051__R | _051__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _053_ = _052_ & _112_;
  assign _053__S = 0 ;
  logic [0:0] _052__C0 ;
  logic [0:0] _052__R0 ;
  logic [0:0] _052__X0 ;
  logic [0:0] _112__C0 ;
  logic [0:0] _112__R0 ;
  logic [0:0] _112__X0 ;
  assign _053__T = _052__T | _112__T ;
  assign _052__C0 = _053__C ;
  assign _052__X0 = _053__X ;
  assign _112__C0 = _053__C ;
  assign _112__X0 = _053__X ;
  assign _052__R0 = ( _053__R | _053__C & _112__T ) & { 1{ _112_ != 0 }} ;
  assign _112__R0 = ( _053__R | _053__C & _052__T ) & { 1{ _052_ != 0 }} ;
  assign _054_ = or_5_cse & main_stage_v_1;
  assign _054__S = 0 ;
  logic [0:0] or_5_cse_C5 ;
  logic [0:0] or_5_cse_R5 ;
  logic [0:0] or_5_cse_X5 ;
  logic [0:0] main_stage_v_1_C1 ;
  logic [0:0] main_stage_v_1_R1 ;
  logic [0:0] main_stage_v_1_X1 ;
  assign _054__T = or_5_cse_T | main_stage_v_1_T ;
  assign or_5_cse_C5 = _054__C ;
  assign or_5_cse_X5 = _054__X ;
  assign main_stage_v_1_C1 = _054__C ;
  assign main_stage_v_1_X1 = _054__X ;
  assign or_5_cse_R5 = ( _054__R | _054__C & main_stage_v_1_T ) & { 1{ main_stage_v_1 != 0 }} ;
  assign main_stage_v_1_R1 = ( _054__R | _054__C & or_5_cse_T ) & { 1{ or_5_cse != 0 }} ;
  assign _055_ = core_wen & _146_;
  assign _055__S = 0 ;
  logic [0:0] core_wen_C4 ;
  logic [0:0] core_wen_R4 ;
  logic [0:0] core_wen_X4 ;
  logic [0:0] _146__C0 ;
  logic [0:0] _146__R0 ;
  logic [0:0] _146__X0 ;
  assign _055__T = core_wen_T | _146__T ;
  assign core_wen_C4 = _055__C ;
  assign core_wen_X4 = _055__X ;
  assign _146__C0 = _055__C ;
  assign _146__X0 = _055__X ;
  assign core_wen_R4 = ( _055__R | _055__C & _146__T ) & { 1{ _146_ != 0 }} ;
  assign _146__R0 = ( _055__R | _055__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _056_ = _052_ & mux_5_nl;
  assign _056__S = 0 ;
  logic [0:0] _052__C1 ;
  logic [0:0] _052__R1 ;
  logic [0:0] _052__X1 ;
  logic [0:0] mux_5_nl_C0 ;
  logic [0:0] mux_5_nl_R0 ;
  logic [0:0] mux_5_nl_X0 ;
  assign _056__T = _052__T | mux_5_nl_T ;
  assign _052__C1 = _056__C ;
  assign _052__X1 = _056__X ;
  assign mux_5_nl_C0 = _056__C ;
  assign mux_5_nl_X0 = _056__X ;
  assign _052__R1 = ( _056__R | _056__C & mux_5_nl_T ) & { 1{ mux_5_nl != 0 }} ;
  assign mux_5_nl_R0 = ( _056__R | _056__C & _052__T ) & { 1{ _052_ != 0 }} ;
  assign _057_ = or_5_cse & _116_;
  assign _057__S = 0 ;
  logic [0:0] or_5_cse_C6 ;
  logic [0:0] or_5_cse_R6 ;
  logic [0:0] or_5_cse_X6 ;
  logic [0:0] _116__C0 ;
  logic [0:0] _116__R0 ;
  logic [0:0] _116__X0 ;
  assign _057__T = or_5_cse_T | _116__T ;
  assign or_5_cse_C6 = _057__C ;
  assign or_5_cse_X6 = _057__X ;
  assign _116__C0 = _057__C ;
  assign _116__X0 = _057__X ;
  assign or_5_cse_R6 = ( _057__R | _057__C & _116__T ) & { 1{ _116_ != 0 }} ;
  assign _116__R0 = ( _057__R | _057__C & or_5_cse_T ) & { 1{ or_5_cse != 0 }} ;
  assign _058_ = _057_ & FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3;
  assign _058__S = 0 ;
  logic [0:0] _057__C0 ;
  logic [0:0] _057__R0 ;
  logic [0:0] _057__X0 ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_C0 ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_R0 ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_X0 ;
  assign _058__T = _057__T | FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_T ;
  assign _057__C0 = _058__C ;
  assign _057__X0 = _058__X ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_C0 = _058__C ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_X0 = _058__X ;
  assign _057__R0 = ( _058__R | _058__C & FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_T ) & { 1{ FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3 != 0 }} ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_R0 = ( _058__R | _058__C & _057__T ) & { 1{ _057_ != 0 }} ;
  assign _059_ = core_wen & _147_;
  assign _059__S = 0 ;
  logic [0:0] core_wen_C5 ;
  logic [0:0] core_wen_R5 ;
  logic [0:0] core_wen_X5 ;
  logic [0:0] _147__C0 ;
  logic [0:0] _147__R0 ;
  logic [0:0] _147__X0 ;
  assign _059__T = core_wen_T | _147__T ;
  assign core_wen_C5 = _059__C ;
  assign core_wen_X5 = _059__X ;
  assign _147__C0 = _059__C ;
  assign _147__X0 = _059__X ;
  assign core_wen_R5 = ( _059__R | _059__C & _147__T ) & { 1{ _147_ != 0 }} ;
  assign _147__R0 = ( _059__R | _059__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _060_ = _059_ & mux_tmp_7;
  assign _060__S = 0 ;
  logic [0:0] _059__C0 ;
  logic [0:0] _059__R0 ;
  logic [0:0] _059__X0 ;
  logic [0:0] mux_tmp_7_C0 ;
  logic [0:0] mux_tmp_7_R0 ;
  logic [0:0] mux_tmp_7_X0 ;
  assign _060__T = _059__T | mux_tmp_7_T ;
  assign _059__C0 = _060__C ;
  assign _059__X0 = _060__X ;
  assign mux_tmp_7_C0 = _060__C ;
  assign mux_tmp_7_X0 = _060__X ;
  assign _059__R0 = ( _060__R | _060__C & mux_tmp_7_T ) & { 1{ mux_tmp_7 != 0 }} ;
  assign mux_tmp_7_R0 = ( _060__R | _060__C & _059__T ) & { 1{ _059_ != 0 }} ;
  assign _061_ = _052_ & mux_9_nl;
  assign _061__S = 0 ;
  logic [0:0] _052__C2 ;
  logic [0:0] _052__R2 ;
  logic [0:0] _052__X2 ;
  logic [0:0] mux_9_nl_C0 ;
  logic [0:0] mux_9_nl_R0 ;
  logic [0:0] mux_9_nl_X0 ;
  assign _061__T = _052__T | mux_9_nl_T ;
  assign _052__C2 = _061__C ;
  assign _052__X2 = _061__X ;
  assign mux_9_nl_C0 = _061__C ;
  assign mux_9_nl_X0 = _061__X ;
  assign _052__R2 = ( _061__R | _061__C & mux_9_nl_T ) & { 1{ mux_9_nl != 0 }} ;
  assign mux_9_nl_R0 = ( _061__R | _061__C & _052__T ) & { 1{ _052_ != 0 }} ;
  assign _062_ = _052_ & mux_11_nl;
  assign _062__S = 0 ;
  logic [0:0] _052__C3 ;
  logic [0:0] _052__R3 ;
  logic [0:0] _052__X3 ;
  logic [0:0] mux_11_nl_C0 ;
  logic [0:0] mux_11_nl_R0 ;
  logic [0:0] mux_11_nl_X0 ;
  assign _062__T = _052__T | mux_11_nl_T ;
  assign _052__C3 = _062__C ;
  assign _052__X3 = _062__X ;
  assign mux_11_nl_C0 = _062__C ;
  assign mux_11_nl_X0 = _062__X ;
  assign _052__R3 = ( _062__R | _062__C & mux_11_nl_T ) & { 1{ mux_11_nl != 0 }} ;
  assign mux_11_nl_R0 = ( _062__R | _062__C & _052__T ) & { 1{ _052_ != 0 }} ;
  assign _063_ = core_wen & _117_;
  assign _063__S = 0 ;
  logic [0:0] core_wen_C6 ;
  logic [0:0] core_wen_R6 ;
  logic [0:0] core_wen_X6 ;
  logic [0:0] _117__C0 ;
  logic [0:0] _117__R0 ;
  logic [0:0] _117__X0 ;
  assign _063__T = core_wen_T | _117__T ;
  assign core_wen_C6 = _063__C ;
  assign core_wen_X6 = _063__X ;
  assign _117__C0 = _063__C ;
  assign _117__X0 = _063__X ;
  assign core_wen_R6 = ( _063__R | _063__C & _117__T ) & { 1{ _117_ != 0 }} ;
  assign _117__R0 = ( _063__R | _063__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _064_ = _063_ & _119_;
  assign _064__S = 0 ;
  logic [0:0] _063__C0 ;
  logic [0:0] _063__R0 ;
  logic [0:0] _063__X0 ;
  logic [0:0] _119__C0 ;
  logic [0:0] _119__R0 ;
  logic [0:0] _119__X0 ;
  assign _064__T = _063__T | _119__T ;
  assign _063__C0 = _064__C ;
  assign _063__X0 = _064__X ;
  assign _119__C0 = _064__C ;
  assign _119__X0 = _064__X ;
  assign _063__R0 = ( _064__R | _064__C & _119__T ) & { 1{ _119_ != 0 }} ;
  assign _119__R0 = ( _064__R | _064__C & _063__T ) & { 1{ _063_ != 0 }} ;
  assign _065_ = _064_ & mux_20_nl;
  assign _065__S = 0 ;
  logic [0:0] _064__C0 ;
  logic [0:0] _064__R0 ;
  logic [0:0] _064__X0 ;
  logic [0:0] mux_20_nl_C0 ;
  logic [0:0] mux_20_nl_R0 ;
  logic [0:0] mux_20_nl_X0 ;
  assign _065__T = _064__T | mux_20_nl_T ;
  assign _064__C0 = _065__C ;
  assign _064__X0 = _065__X ;
  assign mux_20_nl_C0 = _065__C ;
  assign mux_20_nl_X0 = _065__X ;
  assign _064__R0 = ( _065__R | _065__C & mux_20_nl_T ) & { 1{ mux_20_nl != 0 }} ;
  assign mux_20_nl_R0 = ( _065__R | _065__C & _064__T ) & { 1{ _064_ != 0 }} ;
  assign _066_ = _052_ & mux_tmp_23;
  assign _066__S = 0 ;
  logic [0:0] _052__C4 ;
  logic [0:0] _052__R4 ;
  logic [0:0] _052__X4 ;
  logic [0:0] mux_tmp_23_C0 ;
  logic [0:0] mux_tmp_23_R0 ;
  logic [0:0] mux_tmp_23_X0 ;
  assign _066__T = _052__T | mux_tmp_23_T ;
  assign _052__C4 = _066__C ;
  assign _052__X4 = _066__X ;
  assign mux_tmp_23_C0 = _066__C ;
  assign mux_tmp_23_X0 = _066__X ;
  assign _052__R4 = ( _066__R | _066__C & mux_tmp_23_T ) & { 1{ mux_tmp_23 != 0 }} ;
  assign mux_tmp_23_R0 = ( _066__R | _066__C & _052__T ) & { 1{ _052_ != 0 }} ;
  assign _067_ = _120_ & or_5_cse;
  assign _067__S = 0 ;
  logic [0:0] _120__C0 ;
  logic [0:0] _120__R0 ;
  logic [0:0] _120__X0 ;
  logic [0:0] or_5_cse_C7 ;
  logic [0:0] or_5_cse_R7 ;
  logic [0:0] or_5_cse_X7 ;
  assign _067__T = _120__T | or_5_cse_T ;
  assign _120__C0 = _067__C ;
  assign _120__X0 = _067__X ;
  assign or_5_cse_C7 = _067__C ;
  assign or_5_cse_X7 = _067__X ;
  assign _120__R0 = ( _067__R | _067__C & or_5_cse_T ) & { 1{ or_5_cse != 0 }} ;
  assign or_5_cse_R7 = ( _067__R | _067__C & _120__T ) & { 1{ _120_ != 0 }} ;
  assign _068_ = core_wen & _150_;
  assign _068__S = 0 ;
  logic [0:0] core_wen_C7 ;
  logic [0:0] core_wen_R7 ;
  logic [0:0] core_wen_X7 ;
  logic [0:0] _150__C0 ;
  logic [0:0] _150__R0 ;
  logic [0:0] _150__X0 ;
  assign _068__T = core_wen_T | _150__T ;
  assign core_wen_C7 = _068__C ;
  assign core_wen_X7 = _068__X ;
  assign _150__C0 = _068__C ;
  assign _150__X0 = _068__X ;
  assign core_wen_R7 = ( _068__R | _068__C & _150__T ) & { 1{ _150_ != 0 }} ;
  assign _150__R0 = ( _068__R | _068__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _069_ = _068_ & mux_tmp_23;
  assign _069__S = 0 ;
  logic [0:0] _068__C0 ;
  logic [0:0] _068__R0 ;
  logic [0:0] _068__X0 ;
  logic [0:0] mux_tmp_23_C1 ;
  logic [0:0] mux_tmp_23_R1 ;
  logic [0:0] mux_tmp_23_X1 ;
  assign _069__T = _068__T | mux_tmp_23_T ;
  assign _068__C0 = _069__C ;
  assign _068__X0 = _069__X ;
  assign mux_tmp_23_C1 = _069__C ;
  assign mux_tmp_23_X1 = _069__X ;
  assign _068__R0 = ( _069__R | _069__C & mux_tmp_23_T ) & { 1{ mux_tmp_23 != 0 }} ;
  assign mux_tmp_23_R1 = ( _069__R | _069__C & _068__T ) & { 1{ _068_ != 0 }} ;
  assign _070_ = core_wen & _152_;
  assign _070__S = 0 ;
  logic [0:0] core_wen_C8 ;
  logic [0:0] core_wen_R8 ;
  logic [0:0] core_wen_X8 ;
  logic [0:0] _152__C0 ;
  logic [0:0] _152__R0 ;
  logic [0:0] _152__X0 ;
  assign _070__T = core_wen_T | _152__T ;
  assign core_wen_C8 = _070__C ;
  assign core_wen_X8 = _070__X ;
  assign _152__C0 = _070__C ;
  assign _152__X0 = _070__X ;
  assign core_wen_R8 = ( _070__R | _070__C & _152__T ) & { 1{ _152_ != 0 }} ;
  assign _152__R0 = ( _070__R | _070__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _071_ = _070_ & mux_tmp_3;
  assign _071__S = 0 ;
  logic [0:0] _070__C0 ;
  logic [0:0] _070__R0 ;
  logic [0:0] _070__X0 ;
  logic [0:0] mux_tmp_3_C0 ;
  logic [0:0] mux_tmp_3_R0 ;
  logic [0:0] mux_tmp_3_X0 ;
  assign _071__T = _070__T | mux_tmp_3_T ;
  assign _070__C0 = _071__C ;
  assign _070__X0 = _071__X ;
  assign mux_tmp_3_C0 = _071__C ;
  assign mux_tmp_3_X0 = _071__X ;
  assign _070__R0 = ( _071__R | _071__C & mux_tmp_3_T ) & { 1{ mux_tmp_3 != 0 }} ;
  assign mux_tmp_3_R0 = ( _071__R | _071__C & _070__T ) & { 1{ _070_ != 0 }} ;
  assign _072_ = _052_ & _121_;
  assign _072__S = 0 ;
  logic [0:0] _052__C5 ;
  logic [0:0] _052__R5 ;
  logic [0:0] _052__X5 ;
  logic [0:0] _121__C0 ;
  logic [0:0] _121__R0 ;
  logic [0:0] _121__X0 ;
  assign _072__T = _052__T | _121__T ;
  assign _052__C5 = _072__C ;
  assign _052__X5 = _072__X ;
  assign _121__C0 = _072__C ;
  assign _121__X0 = _072__X ;
  assign _052__R5 = ( _072__R | _072__C & _121__T ) & { 1{ _121_ != 0 }} ;
  assign _121__R0 = ( _072__R | _072__C & _052__T ) & { 1{ _052_ != 0 }} ;
  assign _052_ = core_wen & _111_;
  assign _052__S = 0 ;
  logic [0:0] core_wen_C9 ;
  logic [0:0] core_wen_R9 ;
  logic [0:0] core_wen_X9 ;
  logic [0:0] _111__C0 ;
  logic [0:0] _111__R0 ;
  logic [0:0] _111__X0 ;
  assign _052__T = core_wen_T | _111__T ;
  assign core_wen_C9 = _052__C ;
  assign core_wen_X9 = _052__X ;
  assign _111__C0 = _052__C ;
  assign _111__X0 = _052__X ;
  assign core_wen_R9 = ( _052__R | _052__C & _111__T ) & { 1{ _111_ != 0 }} ;
  assign _111__R0 = ( _052__R | _052__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _073_ = _052_ & mux_33_nl;
  assign _073__S = 0 ;
  logic [0:0] _052__C6 ;
  logic [0:0] _052__R6 ;
  logic [0:0] _052__X6 ;
  logic [0:0] mux_33_nl_C0 ;
  logic [0:0] mux_33_nl_R0 ;
  logic [0:0] mux_33_nl_X0 ;
  assign _073__T = _052__T | mux_33_nl_T ;
  assign _052__C6 = _073__C ;
  assign _052__X6 = _073__X ;
  assign mux_33_nl_C0 = _073__C ;
  assign mux_33_nl_X0 = _073__X ;
  assign _052__R6 = ( _073__R | _073__C & mux_33_nl_T ) & { 1{ mux_33_nl != 0 }} ;
  assign mux_33_nl_R0 = ( _073__R | _073__C & _052__T ) & { 1{ _052_ != 0 }} ;
  assign _074_ = core_wen & _122_;
  assign _074__S = 0 ;
  logic [0:0] core_wen_C10 ;
  logic [0:0] core_wen_R10 ;
  logic [0:0] core_wen_X10 ;
  logic [0:0] _122__C0 ;
  logic [0:0] _122__R0 ;
  logic [0:0] _122__X0 ;
  assign _074__T = core_wen_T | _122__T ;
  assign core_wen_C10 = _074__C ;
  assign core_wen_X10 = _074__X ;
  assign _122__C0 = _074__C ;
  assign _122__X0 = _074__X ;
  assign core_wen_R10 = ( _074__R | _074__C & _122__T ) & { 1{ _122_ != 0 }} ;
  assign _122__R0 = ( _074__R | _074__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign FpBitsToFloat_6U_10U_1_and_nl = _124_ & chn_o_rsci_d_15_10_mx0c1;
  assign FpBitsToFloat_6U_10U_1_and_nl_S = 0 ;
  logic [0:0] _124__C0 ;
  logic [0:0] _124__R0 ;
  logic [0:0] _124__X0 ;
  logic [0:0] chn_o_rsci_d_15_10_mx0c1_C0 ;
  logic [0:0] chn_o_rsci_d_15_10_mx0c1_R0 ;
  logic [0:0] chn_o_rsci_d_15_10_mx0c1_X0 ;
  assign FpBitsToFloat_6U_10U_1_and_nl_T = _124__T | chn_o_rsci_d_15_10_mx0c1_T ;
  assign _124__C0 = FpBitsToFloat_6U_10U_1_and_nl_C ;
  assign _124__X0 = FpBitsToFloat_6U_10U_1_and_nl_X ;
  assign chn_o_rsci_d_15_10_mx0c1_C0 = FpBitsToFloat_6U_10U_1_and_nl_C ;
  assign chn_o_rsci_d_15_10_mx0c1_X0 = FpBitsToFloat_6U_10U_1_and_nl_X ;
  assign _124__R0 = ( FpBitsToFloat_6U_10U_1_and_nl_R | FpBitsToFloat_6U_10U_1_and_nl_C & chn_o_rsci_d_15_10_mx0c1_T ) & { 1{ chn_o_rsci_d_15_10_mx0c1 != 0 }} ;
  assign chn_o_rsci_d_15_10_mx0c1_R0 = ( FpBitsToFloat_6U_10U_1_and_nl_R | FpBitsToFloat_6U_10U_1_and_nl_C & _124__T ) & { 1{ _124_ != 0 }} ;
  assign _075_ = FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3 & _159_;
  assign _075__S = 0 ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_C1 ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_R1 ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_X1 ;
  logic [0:0] _159__C0 ;
  logic [0:0] _159__R0 ;
  logic [0:0] _159__X0 ;
  assign _075__T = FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_T | _159__T ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_C1 = _075__C ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_X1 = _075__X ;
  assign _159__C0 = _075__C ;
  assign _159__X0 = _075__X ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_R1 = ( _075__R | _075__C & _159__T ) & { 1{ _159_ != 0 }} ;
  assign _159__R0 = ( _075__R | _075__C & FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_T ) & { 1{ FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3 != 0 }} ;
  assign _076_ = FpMul_6U_10U_xor_1_nl & and_61_rgt;
  assign _076__S = 0 ;
  logic [0:0] FpMul_6U_10U_xor_1_nl_C0 ;
  logic [0:0] FpMul_6U_10U_xor_1_nl_R0 ;
  logic [0:0] FpMul_6U_10U_xor_1_nl_X0 ;
  logic [0:0] and_61_rgt_C0 ;
  logic [0:0] and_61_rgt_R0 ;
  logic [0:0] and_61_rgt_X0 ;
  assign _076__T = FpMul_6U_10U_xor_1_nl_T | and_61_rgt_T ;
  assign FpMul_6U_10U_xor_1_nl_C0 = _076__C ;
  assign FpMul_6U_10U_xor_1_nl_X0 = _076__X ;
  assign and_61_rgt_C0 = _076__C ;
  assign and_61_rgt_X0 = _076__X ;
  assign FpMul_6U_10U_xor_1_nl_R0 = ( _076__R | _076__C & and_61_rgt_T ) & { 1{ and_61_rgt != 0 }} ;
  assign and_61_rgt_R0 = ( _076__R | _076__C & FpMul_6U_10U_xor_1_nl_T ) & { 1{ FpMul_6U_10U_xor_1_nl != 0 }} ;
  assign _077_ = chn_b_rsci_d_mxwt[16] & and_60_rgt;
  assign _077__S = 0 ;
  logic [0:0] and_60_rgt_C0 ;
  logic [0:0] and_60_rgt_R0 ;
  logic [0:0] and_60_rgt_X0 ;
  assign _077__T = chn_b_rsci_d_mxwt_T [16] | and_60_rgt_T ;
  assign chn_b_rsci_d_mxwt_C1 [16] = _077__C ;
  assign chn_b_rsci_d_mxwt_X1 [16] = _077__X ;
  assign and_60_rgt_C0 = _077__C ;
  assign and_60_rgt_X0 = _077__X ;
  assign chn_b_rsci_d_mxwt_R1 [16] = ( _077__R | _077__C & and_60_rgt_T ) & { 1{ and_60_rgt != 0 }} ;
  assign and_60_rgt_R0 = ( _077__R | _077__C & chn_b_rsci_d_mxwt_T [16] ) & { 1{ chn_b_rsci_d_mxwt[16] != 0 }} ;
  assign _078_ = chn_a_rsci_d_mxwt[16] & and_52_rgt;
  assign _078__S = 0 ;
  logic [0:0] and_52_rgt_C0 ;
  logic [0:0] and_52_rgt_R0 ;
  logic [0:0] and_52_rgt_X0 ;
  assign _078__T = chn_a_rsci_d_mxwt_T [16] | and_52_rgt_T ;
  assign chn_a_rsci_d_mxwt_C1 [16] = _078__C ;
  assign chn_a_rsci_d_mxwt_X1 [16] = _078__X ;
  assign and_52_rgt_C0 = _078__C ;
  assign and_52_rgt_X0 = _078__X ;
  assign chn_a_rsci_d_mxwt_R1 [16] = ( _078__R | _078__C & and_52_rgt_T ) & { 1{ and_52_rgt != 0 }} ;
  assign and_52_rgt_R0 = ( _078__R | _078__C & chn_a_rsci_d_mxwt_T [16] ) & { 1{ chn_a_rsci_d_mxwt[16] != 0 }} ;
  logic [5:0] fangyuan2;
  logic [5:0] fangyuan2_T ;
  logic [5:0] fangyuan2_R ;
  logic [5:0] fangyuan2_C ;
  logic [5:0] fangyuan2_X ;
  assign fangyuan2 = { FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl, FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl, FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl, FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl, FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl, FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl };
  assign fangyuan2_T = {  FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_T , FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_T , FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_T , FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_T , FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_T , FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_T  };
  logic [13:0] fangyuan2_S ;
  assign fangyuan2_S = 0 ;
  logic [0:0] FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_R0 ;
  logic [0:0] FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_X0 ;
  logic [0:0] FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_C0 ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_R0 = fangyuan2_R [5:5] ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_X0 = fangyuan2_X [5:5] ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_C0 = fangyuan2_C [5:5] ;
  logic [0:0] FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_R1 ;
  logic [0:0] FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_X1 ;
  logic [0:0] FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_C1 ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_R1 = fangyuan2_R [4:4] ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_X1 = fangyuan2_X [4:4] ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_C1 = fangyuan2_C [4:4] ;
  logic [0:0] FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_R2 ;
  logic [0:0] FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_X2 ;
  logic [0:0] FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_C2 ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_R2 = fangyuan2_R [3:3] ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_X2 = fangyuan2_X [3:3] ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_C2 = fangyuan2_C [3:3] ;
  logic [0:0] FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_R3 ;
  logic [0:0] FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_X3 ;
  logic [0:0] FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_C3 ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_R3 = fangyuan2_R [2:2] ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_X3 = fangyuan2_X [2:2] ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_C3 = fangyuan2_C [2:2] ;
  logic [0:0] FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_R4 ;
  logic [0:0] FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_X4 ;
  logic [0:0] FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_C4 ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_R4 = fangyuan2_R [1:1] ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_X4 = fangyuan2_X [1:1] ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_C4 = fangyuan2_C [1:1] ;
  logic [0:0] FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_R5 ;
  logic [0:0] FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_X5 ;
  logic [0:0] FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_C5 ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_R5 = fangyuan2_R [0:0] ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_X5 = fangyuan2_X [0:0] ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_C5 = fangyuan2_C [0:0] ;

  assign _079_ = FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1 & fangyuan2;
  assign _079__S = 0 ;
  logic [5:0] FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_C0 ;
  logic [5:0] FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_R0 ;
  logic [5:0] FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_X0 ;
  logic [5:0] fangyuan2_C0 ;
  logic [5:0] fangyuan2_R0 ;
  logic [5:0] fangyuan2_X0 ;
  assign _079__T = FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_T | fangyuan2_T ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_C0 = _079__C ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_X0 = _079__X ;
  assign fangyuan2_C0 = _079__C ;
  assign fangyuan2_X0 = _079__X ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_R0 = ( _079__R | _079__C & fangyuan2_T ) & { 6{ fangyuan2 != 0 }} ;
  assign fangyuan2_R0 = ( _079__R | _079__C & FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_T ) & { 6{ FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1 != 0 }} ;
  logic [5:0] fangyuan3;
  logic [5:0] fangyuan3_T ;
  logic [5:0] fangyuan3_R ;
  logic [5:0] fangyuan3_C ;
  logic [5:0] fangyuan3_X ;
  assign fangyuan3 = { FpMul_6U_10U_or_1_nl, FpMul_6U_10U_or_1_nl, FpMul_6U_10U_or_1_nl, FpMul_6U_10U_or_1_nl, FpMul_6U_10U_or_1_nl, FpMul_6U_10U_or_1_nl };
  assign fangyuan3_T = {  FpMul_6U_10U_or_1_nl_T , FpMul_6U_10U_or_1_nl_T , FpMul_6U_10U_or_1_nl_T , FpMul_6U_10U_or_1_nl_T , FpMul_6U_10U_or_1_nl_T , FpMul_6U_10U_or_1_nl_T  };
  logic [13:0] fangyuan3_S ;
  assign fangyuan3_S = 0 ;
  logic [0:0] FpMul_6U_10U_or_1_nl_R0 ;
  logic [0:0] FpMul_6U_10U_or_1_nl_X0 ;
  logic [0:0] FpMul_6U_10U_or_1_nl_C0 ;
  assign FpMul_6U_10U_or_1_nl_R0 = fangyuan3_R [5:5] ;
  assign FpMul_6U_10U_or_1_nl_X0 = fangyuan3_X [5:5] ;
  assign FpMul_6U_10U_or_1_nl_C0 = fangyuan3_C [5:5] ;
  logic [0:0] FpMul_6U_10U_or_1_nl_R1 ;
  logic [0:0] FpMul_6U_10U_or_1_nl_X1 ;
  logic [0:0] FpMul_6U_10U_or_1_nl_C1 ;
  assign FpMul_6U_10U_or_1_nl_R1 = fangyuan3_R [4:4] ;
  assign FpMul_6U_10U_or_1_nl_X1 = fangyuan3_X [4:4] ;
  assign FpMul_6U_10U_or_1_nl_C1 = fangyuan3_C [4:4] ;
  logic [0:0] FpMul_6U_10U_or_1_nl_R2 ;
  logic [0:0] FpMul_6U_10U_or_1_nl_X2 ;
  logic [0:0] FpMul_6U_10U_or_1_nl_C2 ;
  assign FpMul_6U_10U_or_1_nl_R2 = fangyuan3_R [3:3] ;
  assign FpMul_6U_10U_or_1_nl_X2 = fangyuan3_X [3:3] ;
  assign FpMul_6U_10U_or_1_nl_C2 = fangyuan3_C [3:3] ;
  logic [0:0] FpMul_6U_10U_or_1_nl_R3 ;
  logic [0:0] FpMul_6U_10U_or_1_nl_X3 ;
  logic [0:0] FpMul_6U_10U_or_1_nl_C3 ;
  assign FpMul_6U_10U_or_1_nl_R3 = fangyuan3_R [2:2] ;
  assign FpMul_6U_10U_or_1_nl_X3 = fangyuan3_X [2:2] ;
  assign FpMul_6U_10U_or_1_nl_C3 = fangyuan3_C [2:2] ;
  logic [0:0] FpMul_6U_10U_or_1_nl_R4 ;
  logic [0:0] FpMul_6U_10U_or_1_nl_X4 ;
  logic [0:0] FpMul_6U_10U_or_1_nl_C4 ;
  assign FpMul_6U_10U_or_1_nl_R4 = fangyuan3_R [1:1] ;
  assign FpMul_6U_10U_or_1_nl_X4 = fangyuan3_X [1:1] ;
  assign FpMul_6U_10U_or_1_nl_C4 = fangyuan3_C [1:1] ;
  logic [0:0] FpMul_6U_10U_or_1_nl_R5 ;
  logic [0:0] FpMul_6U_10U_or_1_nl_X5 ;
  logic [0:0] FpMul_6U_10U_or_1_nl_C5 ;
  assign FpMul_6U_10U_or_1_nl_R5 = fangyuan3_R [0:0] ;
  assign FpMul_6U_10U_or_1_nl_X5 = fangyuan3_X [0:0] ;
  assign FpMul_6U_10U_or_1_nl_C5 = fangyuan3_C [0:0] ;

  assign _080_ = 6'b111110 & fangyuan3;
  assign _080__S = 0 ;
  logic [5:0] fangyuan3_C0 ;
  logic [5:0] fangyuan3_R0 ;
  logic [5:0] fangyuan3_X0 ;
  assign _080__T = fangyuan3_T ;
  assign fangyuan3_C0 = _080__C ;
  assign fangyuan3_R0 = _080__R ;
  assign fangyuan3_X0 = _080__X ;
  logic [5:0] fangyuan4;
  logic [5:0] fangyuan4_T ;
  logic [5:0] fangyuan4_R ;
  logic [5:0] fangyuan4_C ;
  logic [5:0] fangyuan4_X ;
  assign fangyuan4 = { FpMul_6U_10U_FpMul_6U_10U_nor_1_nl, FpMul_6U_10U_FpMul_6U_10U_nor_1_nl, FpMul_6U_10U_FpMul_6U_10U_nor_1_nl, FpMul_6U_10U_FpMul_6U_10U_nor_1_nl, FpMul_6U_10U_FpMul_6U_10U_nor_1_nl, FpMul_6U_10U_FpMul_6U_10U_nor_1_nl };
  assign fangyuan4_T = {  FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_T , FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_T , FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_T , FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_T , FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_T , FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_T  };
  logic [13:0] fangyuan4_S ;
  assign fangyuan4_S = 0 ;
  logic [0:0] FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_R0 ;
  logic [0:0] FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_X0 ;
  logic [0:0] FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_C0 ;
  assign FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_R0 = fangyuan4_R [5:5] ;
  assign FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_X0 = fangyuan4_X [5:5] ;
  assign FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_C0 = fangyuan4_C [5:5] ;
  logic [0:0] FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_R1 ;
  logic [0:0] FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_X1 ;
  logic [0:0] FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_C1 ;
  assign FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_R1 = fangyuan4_R [4:4] ;
  assign FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_X1 = fangyuan4_X [4:4] ;
  assign FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_C1 = fangyuan4_C [4:4] ;
  logic [0:0] FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_R2 ;
  logic [0:0] FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_X2 ;
  logic [0:0] FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_C2 ;
  assign FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_R2 = fangyuan4_R [3:3] ;
  assign FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_X2 = fangyuan4_X [3:3] ;
  assign FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_C2 = fangyuan4_C [3:3] ;
  logic [0:0] FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_R3 ;
  logic [0:0] FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_X3 ;
  logic [0:0] FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_C3 ;
  assign FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_R3 = fangyuan4_R [2:2] ;
  assign FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_X3 = fangyuan4_X [2:2] ;
  assign FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_C3 = fangyuan4_C [2:2] ;
  logic [0:0] FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_R4 ;
  logic [0:0] FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_X4 ;
  logic [0:0] FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_C4 ;
  assign FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_R4 = fangyuan4_R [1:1] ;
  assign FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_X4 = fangyuan4_X [1:1] ;
  assign FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_C4 = fangyuan4_C [1:1] ;
  logic [0:0] FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_R5 ;
  logic [0:0] FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_X5 ;
  logic [0:0] FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_C5 ;
  assign FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_R5 = fangyuan4_R [0:0] ;
  assign FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_X5 = fangyuan4_X [0:0] ;
  assign FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_C5 = fangyuan4_C [0:0] ;

  assign _081_ = FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0 & fangyuan4;
  assign _081__S = 0 ;
  logic [5:0] FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_C1 ;
  logic [5:0] FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_R1 ;
  logic [5:0] FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_X1 ;
  logic [5:0] fangyuan4_C0 ;
  logic [5:0] fangyuan4_R0 ;
  logic [5:0] fangyuan4_X0 ;
  assign _081__T = FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_T | fangyuan4_T ;
  assign FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_C1 = _081__C ;
  assign FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_X1 = _081__X ;
  assign fangyuan4_C0 = _081__C ;
  assign fangyuan4_X0 = _081__X ;
  assign FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_R1 = ( _081__R | _081__C & fangyuan4_T ) & { 6{ fangyuan4 != 0 }} ;
  assign fangyuan4_R0 = ( _081__R | _081__C & FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_T ) & { 6{ FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0 != 0 }} ;
  assign chn_o_and_cse = core_wen & _130_;
  assign chn_o_and_cse_S = 0 ;
  logic [0:0] core_wen_C11 ;
  logic [0:0] core_wen_R11 ;
  logic [0:0] core_wen_X11 ;
  logic [0:0] _130__C0 ;
  logic [0:0] _130__R0 ;
  logic [0:0] _130__X0 ;
  assign chn_o_and_cse_T = core_wen_T | _130__T ;
  assign core_wen_C11 = chn_o_and_cse_C ;
  assign core_wen_X11 = chn_o_and_cse_X ;
  assign _130__C0 = chn_o_and_cse_C ;
  assign _130__X0 = chn_o_and_cse_X ;
  assign core_wen_R11 = ( chn_o_and_cse_R | chn_o_and_cse_C & _130__T ) & { 1{ _130_ != 0 }} ;
  assign _130__R0 = ( chn_o_and_cse_R | chn_o_and_cse_C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign IsNaN_6U_10U_aelse_and_cse = _052_ & mux_tmp_3;
  assign IsNaN_6U_10U_aelse_and_cse_S = 0 ;
  logic [0:0] _052__C7 ;
  logic [0:0] _052__R7 ;
  logic [0:0] _052__X7 ;
  logic [0:0] mux_tmp_3_C1 ;
  logic [0:0] mux_tmp_3_R1 ;
  logic [0:0] mux_tmp_3_X1 ;
  assign IsNaN_6U_10U_aelse_and_cse_T = _052__T | mux_tmp_3_T ;
  assign _052__C7 = IsNaN_6U_10U_aelse_and_cse_C ;
  assign _052__X7 = IsNaN_6U_10U_aelse_and_cse_X ;
  assign mux_tmp_3_C1 = IsNaN_6U_10U_aelse_and_cse_C ;
  assign mux_tmp_3_X1 = IsNaN_6U_10U_aelse_and_cse_X ;
  assign _052__R7 = ( IsNaN_6U_10U_aelse_and_cse_R | IsNaN_6U_10U_aelse_and_cse_C & mux_tmp_3_T ) & { 1{ mux_tmp_3 != 0 }} ;
  assign mux_tmp_3_R1 = ( IsNaN_6U_10U_aelse_and_cse_R | IsNaN_6U_10U_aelse_and_cse_C & _052__T ) & { 1{ _052_ != 0 }} ;
  assign and_40_rgt = or_5_cse & or_65_cse;
  assign and_40_rgt_S = 0 ;
  logic [0:0] or_5_cse_C8 ;
  logic [0:0] or_5_cse_R8 ;
  logic [0:0] or_5_cse_X8 ;
  logic [0:0] or_65_cse_C0 ;
  logic [0:0] or_65_cse_R0 ;
  logic [0:0] or_65_cse_X0 ;
  assign and_40_rgt_T = or_5_cse_T | or_65_cse_T ;
  assign or_5_cse_C8 = and_40_rgt_C ;
  assign or_5_cse_X8 = and_40_rgt_X ;
  assign or_65_cse_C0 = and_40_rgt_C ;
  assign or_65_cse_X0 = and_40_rgt_X ;
  assign or_5_cse_R8 = ( and_40_rgt_R | and_40_rgt_C & or_65_cse_T ) & { 1{ or_65_cse != 0 }} ;
  assign or_65_cse_R0 = ( and_40_rgt_R | and_40_rgt_C & or_5_cse_T ) & { 1{ or_5_cse != 0 }} ;
  assign and_97_nl = FpMul_6U_10U_or_2_cse & main_stage_v_2;
  assign and_97_nl_S = 0 ;
  logic [0:0] FpMul_6U_10U_or_2_cse_C0 ;
  logic [0:0] FpMul_6U_10U_or_2_cse_R0 ;
  logic [0:0] FpMul_6U_10U_or_2_cse_X0 ;
  logic [0:0] main_stage_v_2_C2 ;
  logic [0:0] main_stage_v_2_R2 ;
  logic [0:0] main_stage_v_2_X2 ;
  assign and_97_nl_T = FpMul_6U_10U_or_2_cse_T | main_stage_v_2_T ;
  assign FpMul_6U_10U_or_2_cse_C0 = and_97_nl_C ;
  assign FpMul_6U_10U_or_2_cse_X0 = and_97_nl_X ;
  assign main_stage_v_2_C2 = and_97_nl_C ;
  assign main_stage_v_2_X2 = and_97_nl_X ;
  assign FpMul_6U_10U_or_2_cse_R0 = ( and_97_nl_R | and_97_nl_C & main_stage_v_2_T ) & { 1{ main_stage_v_2 != 0 }} ;
  assign main_stage_v_2_R2 = ( and_97_nl_R | and_97_nl_C & FpMul_6U_10U_or_2_cse_T ) & { 1{ FpMul_6U_10U_or_2_cse != 0 }} ;
  assign _082_ = or_5_cse & _132_;
  assign _082__S = 0 ;
  logic [0:0] or_5_cse_C9 ;
  logic [0:0] or_5_cse_R9 ;
  logic [0:0] or_5_cse_X9 ;
  logic [0:0] _132__C0 ;
  logic [0:0] _132__R0 ;
  logic [0:0] _132__X0 ;
  assign _082__T = or_5_cse_T | _132__T ;
  assign or_5_cse_C9 = _082__C ;
  assign or_5_cse_X9 = _082__X ;
  assign _132__C0 = _082__C ;
  assign _132__X0 = _082__X ;
  assign or_5_cse_R9 = ( _082__R | _082__C & _132__T ) & { 1{ _132_ != 0 }} ;
  assign _132__R0 = ( _082__R | _082__C & or_5_cse_T ) & { 1{ or_5_cse != 0 }} ;
  assign _083_ = core_wen & _181_;
  assign _083__S = 0 ;
  logic [0:0] core_wen_C12 ;
  logic [0:0] core_wen_R12 ;
  logic [0:0] core_wen_X12 ;
  logic [0:0] _181__C0 ;
  logic [0:0] _181__R0 ;
  logic [0:0] _181__X0 ;
  assign _083__T = core_wen_T | _181__T ;
  assign core_wen_C12 = _083__C ;
  assign core_wen_X12 = _083__X ;
  assign _181__C0 = _083__C ;
  assign _181__X0 = _083__X ;
  assign core_wen_R12 = ( _083__R | _083__C & _181__T ) & { 1{ _181_ != 0 }} ;
  assign _181__R0 = ( _083__R | _083__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign FpBitsToFloat_6U_10U_1_and_1_cse = _083_ & mux_13_nl;
  assign FpBitsToFloat_6U_10U_1_and_1_cse_S = 0 ;
  logic [0:0] _083__C0 ;
  logic [0:0] _083__R0 ;
  logic [0:0] _083__X0 ;
  logic [0:0] mux_13_nl_C0 ;
  logic [0:0] mux_13_nl_R0 ;
  logic [0:0] mux_13_nl_X0 ;
  assign FpBitsToFloat_6U_10U_1_and_1_cse_T = _083__T | mux_13_nl_T ;
  assign _083__C0 = FpBitsToFloat_6U_10U_1_and_1_cse_C ;
  assign _083__X0 = FpBitsToFloat_6U_10U_1_and_1_cse_X ;
  assign mux_13_nl_C0 = FpBitsToFloat_6U_10U_1_and_1_cse_C ;
  assign mux_13_nl_X0 = FpBitsToFloat_6U_10U_1_and_1_cse_X ;
  assign _083__R0 = ( FpBitsToFloat_6U_10U_1_and_1_cse_R | FpBitsToFloat_6U_10U_1_and_1_cse_C & mux_13_nl_T ) & { 1{ mux_13_nl != 0 }} ;
  assign mux_13_nl_R0 = ( FpBitsToFloat_6U_10U_1_and_1_cse_R | FpBitsToFloat_6U_10U_1_and_1_cse_C & _083__T ) & { 1{ _083_ != 0 }} ;
  assign IsNaN_6U_10U_1_aelse_and_cse = _052_ & mux_tmp_7;
  assign IsNaN_6U_10U_1_aelse_and_cse_S = 0 ;
  logic [0:0] _052__C8 ;
  logic [0:0] _052__R8 ;
  logic [0:0] _052__X8 ;
  logic [0:0] mux_tmp_7_C1 ;
  logic [0:0] mux_tmp_7_R1 ;
  logic [0:0] mux_tmp_7_X1 ;
  assign IsNaN_6U_10U_1_aelse_and_cse_T = _052__T | mux_tmp_7_T ;
  assign _052__C8 = IsNaN_6U_10U_1_aelse_and_cse_C ;
  assign _052__X8 = IsNaN_6U_10U_1_aelse_and_cse_X ;
  assign mux_tmp_7_C1 = IsNaN_6U_10U_1_aelse_and_cse_C ;
  assign mux_tmp_7_X1 = IsNaN_6U_10U_1_aelse_and_cse_X ;
  assign _052__R8 = ( IsNaN_6U_10U_1_aelse_and_cse_R | IsNaN_6U_10U_1_aelse_and_cse_C & mux_tmp_7_T ) & { 1{ mux_tmp_7 != 0 }} ;
  assign mux_tmp_7_R1 = ( IsNaN_6U_10U_1_aelse_and_cse_R | IsNaN_6U_10U_1_aelse_and_cse_C & _052__T ) & { 1{ _052_ != 0 }} ;
  assign FpMul_6U_10U_oelse_1_and_1_cse = _052_ & _134_;
  assign FpMul_6U_10U_oelse_1_and_1_cse_S = 0 ;
  logic [0:0] _052__C9 ;
  logic [0:0] _052__R9 ;
  logic [0:0] _052__X9 ;
  logic [0:0] _134__C0 ;
  logic [0:0] _134__R0 ;
  logic [0:0] _134__X0 ;
  assign FpMul_6U_10U_oelse_1_and_1_cse_T = _052__T | _134__T ;
  assign _052__C9 = FpMul_6U_10U_oelse_1_and_1_cse_C ;
  assign _052__X9 = FpMul_6U_10U_oelse_1_and_1_cse_X ;
  assign _134__C0 = FpMul_6U_10U_oelse_1_and_1_cse_C ;
  assign _134__X0 = FpMul_6U_10U_oelse_1_and_1_cse_X ;
  assign _052__R9 = ( FpMul_6U_10U_oelse_1_and_1_cse_R | FpMul_6U_10U_oelse_1_and_1_cse_C & _134__T ) & { 1{ _134_ != 0 }} ;
  assign _134__R0 = ( FpMul_6U_10U_oelse_1_and_1_cse_R | FpMul_6U_10U_oelse_1_and_1_cse_C & _052__T ) & { 1{ _052_ != 0 }} ;
  assign and_45_rgt = or_68_cse & or_5_cse;
  assign and_45_rgt_S = 0 ;
  logic [0:0] or_68_cse_C0 ;
  logic [0:0] or_68_cse_R0 ;
  logic [0:0] or_68_cse_X0 ;
  logic [0:0] or_5_cse_C10 ;
  logic [0:0] or_5_cse_R10 ;
  logic [0:0] or_5_cse_X10 ;
  assign and_45_rgt_T = or_68_cse_T | or_5_cse_T ;
  assign or_68_cse_C0 = and_45_rgt_C ;
  assign or_68_cse_X0 = and_45_rgt_X ;
  assign or_5_cse_C10 = and_45_rgt_C ;
  assign or_5_cse_X10 = and_45_rgt_X ;
  assign or_68_cse_R0 = ( and_45_rgt_R | and_45_rgt_C & or_5_cse_T ) & { 1{ or_5_cse != 0 }} ;
  assign or_5_cse_R10 = ( and_45_rgt_R | and_45_rgt_C & or_68_cse_T ) & { 1{ or_68_cse != 0 }} ;
  assign _084_ = or_5_cse & _096_;
  assign _084__S = 0 ;
  logic [0:0] or_5_cse_C11 ;
  logic [0:0] or_5_cse_R11 ;
  logic [0:0] or_5_cse_X11 ;
  logic [0:0] _096__C0 ;
  logic [0:0] _096__R0 ;
  logic [0:0] _096__X0 ;
  assign _084__T = or_5_cse_T | _096__T ;
  assign or_5_cse_C11 = _084__C ;
  assign or_5_cse_X11 = _084__X ;
  assign _096__C0 = _084__C ;
  assign _096__X0 = _084__X ;
  assign or_5_cse_R11 = ( _084__R | _084__C & _096__T ) & { 1{ _096_ != 0 }} ;
  assign _096__R0 = ( _084__R | _084__C & or_5_cse_T ) & { 1{ or_5_cse != 0 }} ;
  assign and_52_rgt = _084_ & _099_;
  assign and_52_rgt_S = 0 ;
  logic [0:0] _084__C0 ;
  logic [0:0] _084__R0 ;
  logic [0:0] _084__X0 ;
  logic [0:0] _099__C0 ;
  logic [0:0] _099__R0 ;
  logic [0:0] _099__X0 ;
  assign and_52_rgt_T = _084__T | _099__T ;
  assign _084__C0 = and_52_rgt_C ;
  assign _084__X0 = and_52_rgt_X ;
  assign _099__C0 = and_52_rgt_C ;
  assign _099__X0 = and_52_rgt_X ;
  assign _084__R0 = ( and_52_rgt_R | and_52_rgt_C & _099__T ) & { 1{ _099_ != 0 }} ;
  assign _099__R0 = ( and_52_rgt_R | and_52_rgt_C & _084__T ) & { 1{ _084_ != 0 }} ;
  assign _085_ = _186_ & _095_;
  assign _085__S = 0 ;
  logic [0:0] _186__C0 ;
  logic [0:0] _186__R0 ;
  logic [0:0] _186__X0 ;
  logic [0:0] _095__C0 ;
  logic [0:0] _095__R0 ;
  logic [0:0] _095__X0 ;
  assign _085__T = _186__T | _095__T ;
  assign _186__C0 = _085__C ;
  assign _186__X0 = _085__X ;
  assign _095__C0 = _085__C ;
  assign _095__X0 = _085__X ;
  assign _186__R0 = ( _085__R | _085__C & _095__T ) & { 1{ _095_ != 0 }} ;
  assign _095__R0 = ( _085__R | _085__C & _186__T ) & { 1{ _186_ != 0 }} ;
  assign _086_ = _085_ & _100_;
  assign _086__S = 0 ;
  logic [0:0] _085__C0 ;
  logic [0:0] _085__R0 ;
  logic [0:0] _085__X0 ;
  logic [0:0] _100__C0 ;
  logic [0:0] _100__R0 ;
  logic [0:0] _100__X0 ;
  assign _086__T = _085__T | _100__T ;
  assign _085__C0 = _086__C ;
  assign _085__X0 = _086__X ;
  assign _100__C0 = _086__C ;
  assign _100__X0 = _086__X ;
  assign _085__R0 = ( _086__R | _086__C & _100__T ) & { 1{ _100_ != 0 }} ;
  assign _100__R0 = ( _086__R | _086__C & _085__T ) & { 1{ _085_ != 0 }} ;
  assign and_60_rgt = _086_ & or_5_cse;
  assign and_60_rgt_S = 0 ;
  logic [0:0] _086__C0 ;
  logic [0:0] _086__R0 ;
  logic [0:0] _086__X0 ;
  logic [0:0] or_5_cse_C12 ;
  logic [0:0] or_5_cse_R12 ;
  logic [0:0] or_5_cse_X12 ;
  assign and_60_rgt_T = _086__T | or_5_cse_T ;
  assign _086__C0 = and_60_rgt_C ;
  assign _086__X0 = and_60_rgt_X ;
  assign or_5_cse_C12 = and_60_rgt_C ;
  assign or_5_cse_X12 = and_60_rgt_X ;
  assign _086__R0 = ( and_60_rgt_R | and_60_rgt_C & or_5_cse_T ) & { 1{ or_5_cse != 0 }} ;
  assign or_5_cse_R12 = ( and_60_rgt_R | and_60_rgt_C & _086__T ) & { 1{ _086_ != 0 }} ;
  assign and_91_nl = nand_cse & or_tmp_56;
  assign and_91_nl_S = 0 ;
  logic [0:0] nand_cse_C0 ;
  logic [0:0] nand_cse_R0 ;
  logic [0:0] nand_cse_X0 ;
  logic [0:0] or_tmp_56_C0 ;
  logic [0:0] or_tmp_56_R0 ;
  logic [0:0] or_tmp_56_X0 ;
  assign and_91_nl_T = nand_cse_T | or_tmp_56_T ;
  assign nand_cse_C0 = and_91_nl_C ;
  assign nand_cse_X0 = and_91_nl_X ;
  assign or_tmp_56_C0 = and_91_nl_C ;
  assign or_tmp_56_X0 = and_91_nl_X ;
  assign nand_cse_R0 = ( and_91_nl_R | and_91_nl_C & or_tmp_56_T ) & { 1{ or_tmp_56 != 0 }} ;
  assign or_tmp_56_R0 = ( and_91_nl_R | and_91_nl_C & nand_cse_T ) & { 1{ nand_cse != 0 }} ;
  assign and_61_rgt = mux_35_nl & or_5_cse;
  assign and_61_rgt_S = 0 ;
  logic [0:0] mux_35_nl_C0 ;
  logic [0:0] mux_35_nl_R0 ;
  logic [0:0] mux_35_nl_X0 ;
  logic [0:0] or_5_cse_C13 ;
  logic [0:0] or_5_cse_R13 ;
  logic [0:0] or_5_cse_X13 ;
  assign and_61_rgt_T = mux_35_nl_T | or_5_cse_T ;
  assign mux_35_nl_C0 = and_61_rgt_C ;
  assign mux_35_nl_X0 = and_61_rgt_X ;
  assign or_5_cse_C13 = and_61_rgt_C ;
  assign or_5_cse_X13 = and_61_rgt_X ;
  assign mux_35_nl_R0 = ( and_61_rgt_R | and_61_rgt_C & or_5_cse_T ) & { 1{ or_5_cse != 0 }} ;
  assign or_5_cse_R13 = ( and_61_rgt_R | and_61_rgt_C & mux_35_nl_T ) & { 1{ mux_35_nl != 0 }} ;
  assign _087_ = FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3 & main_stage_v_1;
  assign _087__S = 0 ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_C2 ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_R2 ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_X2 ;
  logic [0:0] main_stage_v_1_C2 ;
  logic [0:0] main_stage_v_1_R2 ;
  logic [0:0] main_stage_v_1_X2 ;
  assign _087__T = FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_T | main_stage_v_1_T ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_C2 = _087__C ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_X2 = _087__X ;
  assign main_stage_v_1_C2 = _087__C ;
  assign main_stage_v_1_X2 = _087__X ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_R2 = ( _087__R | _087__C & main_stage_v_1_T ) & { 1{ main_stage_v_1 != 0 }} ;
  assign main_stage_v_1_R2 = ( _087__R | _087__C & FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_T ) & { 1{ FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3 != 0 }} ;
  assign and_62_nl = mux_36_nl & FpMul_6U_10U_p_mant_p1_sva_2[21];
  assign and_62_nl_S = 0 ;
  logic [0:0] mux_36_nl_C0 ;
  logic [0:0] mux_36_nl_R0 ;
  logic [0:0] mux_36_nl_X0 ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_sva_2_C0 ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_sva_2_R0 ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_sva_2_X0 ;
  assign and_62_nl_T = mux_36_nl_T | FpMul_6U_10U_p_mant_p1_sva_2_T [21] ;
  assign mux_36_nl_C0 = and_62_nl_C ;
  assign mux_36_nl_X0 = and_62_nl_X ;
  assign FpMul_6U_10U_p_mant_p1_sva_2_C0 [21] = and_62_nl_C ;
  assign FpMul_6U_10U_p_mant_p1_sva_2_X0 [21] = and_62_nl_X ;
  assign mux_36_nl_R0 = ( and_62_nl_R | and_62_nl_C & FpMul_6U_10U_p_mant_p1_sva_2_T [21] ) & { 1{ FpMul_6U_10U_p_mant_p1_sva_2[21] != 0 }} ;
  assign FpMul_6U_10U_p_mant_p1_sva_2_R0 [21] = ( and_62_nl_R | and_62_nl_C & mux_36_nl_T ) & { 1{ mux_36_nl != 0 }} ;
  assign FpMantRNE_22U_11U_else_and_svs = FpMantRNE_22U_11U_else_carry_sva & _097_;
  assign FpMantRNE_22U_11U_else_and_svs_S = 0 ;
  logic [0:0] FpMantRNE_22U_11U_else_carry_sva_C1 ;
  logic [0:0] FpMantRNE_22U_11U_else_carry_sva_R1 ;
  logic [0:0] FpMantRNE_22U_11U_else_carry_sva_X1 ;
  logic [0:0] _097__C0 ;
  logic [0:0] _097__R0 ;
  logic [0:0] _097__X0 ;
  assign FpMantRNE_22U_11U_else_and_svs_T = FpMantRNE_22U_11U_else_carry_sva_T | _097__T ;
  assign FpMantRNE_22U_11U_else_carry_sva_C1 = FpMantRNE_22U_11U_else_and_svs_C ;
  assign FpMantRNE_22U_11U_else_carry_sva_X1 = FpMantRNE_22U_11U_else_and_svs_X ;
  assign _097__C0 = FpMantRNE_22U_11U_else_and_svs_C ;
  assign _097__X0 = FpMantRNE_22U_11U_else_and_svs_X ;
  assign FpMantRNE_22U_11U_else_carry_sva_R1 = ( FpMantRNE_22U_11U_else_and_svs_R | FpMantRNE_22U_11U_else_and_svs_C & _097__T ) & { 1{ _097_ != 0 }} ;
  assign _097__R0 = ( FpMantRNE_22U_11U_else_and_svs_R | FpMantRNE_22U_11U_else_and_svs_C & FpMantRNE_22U_11U_else_carry_sva_T ) & { 1{ FpMantRNE_22U_11U_else_carry_sva != 0 }} ;
  assign _088_ = FpMul_6U_10U_p_mant_p1_sva_2[0] & FpMul_6U_10U_p_mant_p1_sva_2[21];
  assign _088__S = 0 ;
  assign { FpMul_6U_10U_p_mant_p1_sva_2_R0 [1], FpMul_6U_10U_p_mant_p1_sva_2_R0 [2], FpMul_6U_10U_p_mant_p1_sva_2_R0 [3], FpMul_6U_10U_p_mant_p1_sva_2_R0 [4], FpMul_6U_10U_p_mant_p1_sva_2_R0 [5], FpMul_6U_10U_p_mant_p1_sva_2_R0 [6], FpMul_6U_10U_p_mant_p1_sva_2_R0 [7], FpMul_6U_10U_p_mant_p1_sva_2_R0 [8], FpMul_6U_10U_p_mant_p1_sva_2_R0 [9], FpMul_6U_10U_p_mant_p1_sva_2_R0 [10], FpMul_6U_10U_p_mant_p1_sva_2_R0 [11], FpMul_6U_10U_p_mant_p1_sva_2_R0 [12], FpMul_6U_10U_p_mant_p1_sva_2_R0 [13], FpMul_6U_10U_p_mant_p1_sva_2_R0 [14], FpMul_6U_10U_p_mant_p1_sva_2_R0 [15], FpMul_6U_10U_p_mant_p1_sva_2_R0 [16], FpMul_6U_10U_p_mant_p1_sva_2_R0 [17], FpMul_6U_10U_p_mant_p1_sva_2_R0 [18], FpMul_6U_10U_p_mant_p1_sva_2_R0 [19], FpMul_6U_10U_p_mant_p1_sva_2_R0 [20] } = 0;
  assign { FpMul_6U_10U_p_mant_p1_sva_2_X0 [1], FpMul_6U_10U_p_mant_p1_sva_2_X0 [2], FpMul_6U_10U_p_mant_p1_sva_2_X0 [3], FpMul_6U_10U_p_mant_p1_sva_2_X0 [4], FpMul_6U_10U_p_mant_p1_sva_2_X0 [5], FpMul_6U_10U_p_mant_p1_sva_2_X0 [6], FpMul_6U_10U_p_mant_p1_sva_2_X0 [7], FpMul_6U_10U_p_mant_p1_sva_2_X0 [8], FpMul_6U_10U_p_mant_p1_sva_2_X0 [9], FpMul_6U_10U_p_mant_p1_sva_2_X0 [10], FpMul_6U_10U_p_mant_p1_sva_2_X0 [11], FpMul_6U_10U_p_mant_p1_sva_2_X0 [12], FpMul_6U_10U_p_mant_p1_sva_2_X0 [13], FpMul_6U_10U_p_mant_p1_sva_2_X0 [14], FpMul_6U_10U_p_mant_p1_sva_2_X0 [15], FpMul_6U_10U_p_mant_p1_sva_2_X0 [16], FpMul_6U_10U_p_mant_p1_sva_2_X0 [17], FpMul_6U_10U_p_mant_p1_sva_2_X0 [18], FpMul_6U_10U_p_mant_p1_sva_2_X0 [19], FpMul_6U_10U_p_mant_p1_sva_2_X0 [20] } = 0;
  assign { FpMul_6U_10U_p_mant_p1_sva_2_C0 [1], FpMul_6U_10U_p_mant_p1_sva_2_C0 [2], FpMul_6U_10U_p_mant_p1_sva_2_C0 [3], FpMul_6U_10U_p_mant_p1_sva_2_C0 [4], FpMul_6U_10U_p_mant_p1_sva_2_C0 [5], FpMul_6U_10U_p_mant_p1_sva_2_C0 [6], FpMul_6U_10U_p_mant_p1_sva_2_C0 [7], FpMul_6U_10U_p_mant_p1_sva_2_C0 [8], FpMul_6U_10U_p_mant_p1_sva_2_C0 [9], FpMul_6U_10U_p_mant_p1_sva_2_C0 [10], FpMul_6U_10U_p_mant_p1_sva_2_C0 [11], FpMul_6U_10U_p_mant_p1_sva_2_C0 [12], FpMul_6U_10U_p_mant_p1_sva_2_C0 [13], FpMul_6U_10U_p_mant_p1_sva_2_C0 [14], FpMul_6U_10U_p_mant_p1_sva_2_C0 [15], FpMul_6U_10U_p_mant_p1_sva_2_C0 [16], FpMul_6U_10U_p_mant_p1_sva_2_C0 [17], FpMul_6U_10U_p_mant_p1_sva_2_C0 [18], FpMul_6U_10U_p_mant_p1_sva_2_C0 [19], FpMul_6U_10U_p_mant_p1_sva_2_C0 [20] } = 0;
  logic [21:0] FpMul_6U_10U_p_mant_p1_sva_2_C1 ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_sva_2_R1 ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_sva_2_X1 ;
  assign _088__T = FpMul_6U_10U_p_mant_p1_sva_2_T [0] | FpMul_6U_10U_p_mant_p1_sva_2_T [21] ;
  assign FpMul_6U_10U_p_mant_p1_sva_2_C0 [0] = _088__C ;
  assign FpMul_6U_10U_p_mant_p1_sva_2_X0 [0] = _088__X ;
  assign FpMul_6U_10U_p_mant_p1_sva_2_C1 [21] = _088__C ;
  assign FpMul_6U_10U_p_mant_p1_sva_2_X1 [21] = _088__X ;
  assign FpMul_6U_10U_p_mant_p1_sva_2_R0 [0] = ( _088__R | _088__C & FpMul_6U_10U_p_mant_p1_sva_2_T [21] ) & { 1{ FpMul_6U_10U_p_mant_p1_sva_2[21] != 0 }} ;
  assign FpMul_6U_10U_p_mant_p1_sva_2_R1 [21] = ( _088__R | _088__C & FpMul_6U_10U_p_mant_p1_sva_2_T [0] ) & { 1{ FpMul_6U_10U_p_mant_p1_sva_2[0] != 0 }} ;
  assign FpMantRNE_22U_11U_else_carry_sva = FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0[9] & _196_;
  assign FpMantRNE_22U_11U_else_carry_sva_S = 0 ;
  logic [0:0] _196__C0 ;
  logic [0:0] _196__R0 ;
  logic [0:0] _196__X0 ;
  assign FpMantRNE_22U_11U_else_carry_sva_T = FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_T [9] | _196__T ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C0 [9] = FpMantRNE_22U_11U_else_carry_sva_C ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X0 [9] = FpMantRNE_22U_11U_else_carry_sva_X ;
  assign _196__C0 = FpMantRNE_22U_11U_else_carry_sva_C ;
  assign _196__X0 = FpMantRNE_22U_11U_else_carry_sva_X ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R0 [9] = ( FpMantRNE_22U_11U_else_carry_sva_R | FpMantRNE_22U_11U_else_carry_sva_C & _196__T ) & { 1{ _196_ != 0 }} ;
  assign _196__R0 = ( FpMantRNE_22U_11U_else_carry_sva_R | FpMantRNE_22U_11U_else_carry_sva_C & FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_T [9] ) & { 1{ FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0[9] != 0 }} ;
  assign _089_ = _003_[9] & FpMantRNE_22U_11U_else_and_svs;
  assign _089__S = 0 ;
  logic [9:0] _003__C0 ;
  logic [9:0] _003__R0 ;
  logic [9:0] _003__X0 ;
  logic [0:0] FpMantRNE_22U_11U_else_and_svs_C0 ;
  logic [0:0] FpMantRNE_22U_11U_else_and_svs_R0 ;
  logic [0:0] FpMantRNE_22U_11U_else_and_svs_X0 ;
  assign _089__T = _003__T [9] | FpMantRNE_22U_11U_else_and_svs_T ;
  assign _003__C0 [9] = _089__C ;
  assign _003__X0 [9] = _089__X ;
  assign FpMantRNE_22U_11U_else_and_svs_C0 = _089__C ;
  assign FpMantRNE_22U_11U_else_and_svs_X0 = _089__X ;
  assign _003__R0 [9] = ( _089__R | _089__C & FpMantRNE_22U_11U_else_and_svs_T ) & { 1{ FpMantRNE_22U_11U_else_and_svs != 0 }} ;
  assign FpMantRNE_22U_11U_else_and_svs_R0 = ( _089__R | _089__C & _003__T [9] ) & { 1{ _003_[9] != 0 }} ;
  assign _090_ = FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp & FpMantRNE_22U_11U_else_and_svs;
  assign _090__S = 0 ;
  logic [0:0] FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_C0 ;
  logic [0:0] FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_R0 ;
  logic [0:0] FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_X0 ;
  logic [0:0] FpMantRNE_22U_11U_else_and_svs_C1 ;
  logic [0:0] FpMantRNE_22U_11U_else_and_svs_R1 ;
  logic [0:0] FpMantRNE_22U_11U_else_and_svs_X1 ;
  assign _090__T = FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_T | FpMantRNE_22U_11U_else_and_svs_T ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_C0 = _090__C ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_X0 = _090__X ;
  assign FpMantRNE_22U_11U_else_and_svs_C1 = _090__C ;
  assign FpMantRNE_22U_11U_else_and_svs_X1 = _090__X ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_R0 = ( _090__R | _090__C & FpMantRNE_22U_11U_else_and_svs_T ) & { 1{ FpMantRNE_22U_11U_else_and_svs != 0 }} ;
  assign FpMantRNE_22U_11U_else_and_svs_R1 = ( _090__R | _090__C & FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_T ) & { 1{ FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp != 0 }} ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl = _090_ & _137_;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_S = 0 ;
  logic [0:0] _090__C0 ;
  logic [0:0] _090__R0 ;
  logic [0:0] _090__X0 ;
  logic [0:0] _137__C0 ;
  logic [0:0] _137__R0 ;
  logic [0:0] _137__X0 ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_T = _090__T | _137__T ;
  assign _090__C0 = FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_C ;
  assign _090__X0 = FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_X ;
  assign _137__C0 = FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_C ;
  assign _137__X0 = FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_X ;
  assign _090__R0 = ( FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_R | FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_C & _137__T ) & { 1{ _137_ != 0 }} ;
  assign _137__R0 = ( FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_R | FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_C & _090__T ) & { 1{ _090_ != 0 }} ;
  assign _091_ = _198_ & FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4;
  assign _091__S = 0 ;
  logic [0:0] _198__C0 ;
  logic [0:0] _198__R0 ;
  logic [0:0] _198__X0 ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_C0 ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_R0 ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_X0 ;
  assign _091__T = _198__T | FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_T ;
  assign _198__C0 = _091__C ;
  assign _198__X0 = _091__X ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_C0 = _091__C ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_X0 = _091__X ;
  assign _198__R0 = ( _091__R | _091__C & FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_T ) & { 1{ FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4 != 0 }} ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_R0 = ( _091__R | _091__C & _198__T ) & { 1{ _198_ != 0 }} ;
  assign nor_tmp_11 = or_tmp_7 & main_stage_v_1;
  assign nor_tmp_11_S = 0 ;
  logic [0:0] or_tmp_7_C0 ;
  logic [0:0] or_tmp_7_R0 ;
  logic [0:0] or_tmp_7_X0 ;
  logic [0:0] main_stage_v_1_C3 ;
  logic [0:0] main_stage_v_1_R3 ;
  logic [0:0] main_stage_v_1_X3 ;
  assign nor_tmp_11_T = or_tmp_7_T | main_stage_v_1_T ;
  assign or_tmp_7_C0 = nor_tmp_11_C ;
  assign or_tmp_7_X0 = nor_tmp_11_X ;
  assign main_stage_v_1_C3 = nor_tmp_11_C ;
  assign main_stage_v_1_X3 = nor_tmp_11_X ;
  assign or_tmp_7_R0 = ( nor_tmp_11_R | nor_tmp_11_C & main_stage_v_1_T ) & { 1{ main_stage_v_1 != 0 }} ;
  assign main_stage_v_1_R3 = ( nor_tmp_11_R | nor_tmp_11_C & or_tmp_7_T ) & { 1{ or_tmp_7 != 0 }} ;
  assign and_93_nl = nand_cse & nor_tmp_1;
  assign and_93_nl_S = 0 ;
  logic [0:0] nand_cse_C1 ;
  logic [0:0] nand_cse_R1 ;
  logic [0:0] nand_cse_X1 ;
  logic [0:0] nor_tmp_1_C1 ;
  logic [0:0] nor_tmp_1_R1 ;
  logic [0:0] nor_tmp_1_X1 ;
  assign and_93_nl_T = nand_cse_T | nor_tmp_1_T ;
  assign nand_cse_C1 = and_93_nl_C ;
  assign nand_cse_X1 = and_93_nl_X ;
  assign nor_tmp_1_C1 = and_93_nl_C ;
  assign nor_tmp_1_X1 = and_93_nl_X ;
  assign nand_cse_R1 = ( and_93_nl_R | and_93_nl_C & nor_tmp_1_T ) & { 1{ nor_tmp_1 != 0 }} ;
  assign nor_tmp_1_R1 = ( and_93_nl_R | and_93_nl_C & nand_cse_T ) & { 1{ nand_cse != 0 }} ;
  assign and_94_nl = IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse & mux_tmp_21;
  assign and_94_nl_S = 0 ;
  logic [0:0] IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_C0 ;
  logic [0:0] IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_R0 ;
  logic [0:0] IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_X0 ;
  logic [0:0] mux_tmp_21_C0 ;
  logic [0:0] mux_tmp_21_R0 ;
  logic [0:0] mux_tmp_21_X0 ;
  assign and_94_nl_T = IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_T | mux_tmp_21_T ;
  assign IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_C0 = and_94_nl_C ;
  assign IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_X0 = and_94_nl_X ;
  assign mux_tmp_21_C0 = and_94_nl_C ;
  assign mux_tmp_21_X0 = and_94_nl_X ;
  assign IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_R0 = ( and_94_nl_R | and_94_nl_C & mux_tmp_21_T ) & { 1{ mux_tmp_21 != 0 }} ;
  assign mux_tmp_21_R0 = ( and_94_nl_R | and_94_nl_C & IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_T ) & { 1{ IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse != 0 }} ;
  assign _092_ = _095_ & mux_tmp_21;
  assign _092__S = 0 ;
  logic [0:0] _095__C1 ;
  logic [0:0] _095__R1 ;
  logic [0:0] _095__X1 ;
  logic [0:0] mux_tmp_21_C1 ;
  logic [0:0] mux_tmp_21_R1 ;
  logic [0:0] mux_tmp_21_X1 ;
  assign _092__T = _095__T | mux_tmp_21_T ;
  assign _095__C1 = _092__C ;
  assign _095__X1 = _092__X ;
  assign mux_tmp_21_C1 = _092__C ;
  assign mux_tmp_21_X1 = _092__X ;
  assign _095__R1 = ( _092__R | _092__C & mux_tmp_21_T ) & { 1{ mux_tmp_21 != 0 }} ;
  assign mux_tmp_21_R1 = ( _092__R | _092__C & _095__T ) & { 1{ _095_ != 0 }} ;
  assign _093_ = _096_ & chn_a_rsci_bawt;
  assign _093__S = 0 ;
  logic [0:0] _096__C1 ;
  logic [0:0] _096__R1 ;
  logic [0:0] _096__X1 ;
  logic [0:0] chn_a_rsci_bawt_C1 ;
  logic [0:0] chn_a_rsci_bawt_R1 ;
  logic [0:0] chn_a_rsci_bawt_X1 ;
  assign _093__T = _096__T | chn_a_rsci_bawt_T ;
  assign _096__C1 = _093__C ;
  assign _096__X1 = _093__X ;
  assign chn_a_rsci_bawt_C1 = _093__C ;
  assign chn_a_rsci_bawt_X1 = _093__X ;
  assign _096__R1 = ( _093__R | _093__C & chn_a_rsci_bawt_T ) & { 1{ chn_a_rsci_bawt != 0 }} ;
  assign chn_a_rsci_bawt_R1 = ( _093__R | _093__C & _096__T ) & { 1{ _096_ != 0 }} ;
  assign _094_ = _093_ & chn_b_rsci_bawt;
  assign _094__S = 0 ;
  logic [0:0] _093__C0 ;
  logic [0:0] _093__R0 ;
  logic [0:0] _093__X0 ;
  logic [0:0] chn_b_rsci_bawt_C1 ;
  logic [0:0] chn_b_rsci_bawt_R1 ;
  logic [0:0] chn_b_rsci_bawt_X1 ;
  assign _094__T = _093__T | chn_b_rsci_bawt_T ;
  assign _093__C0 = _094__C ;
  assign _093__X0 = _094__X ;
  assign chn_b_rsci_bawt_C1 = _094__C ;
  assign chn_b_rsci_bawt_X1 = _094__X ;
  assign _093__R0 = ( _094__R | _094__C & chn_b_rsci_bawt_T ) & { 1{ chn_b_rsci_bawt != 0 }} ;
  assign chn_b_rsci_bawt_R1 = ( _094__R | _094__C & _093__T ) & { 1{ _093_ != 0 }} ;
  assign _095_ = chn_b_rsci_d_mxwt[15:10] == 6'b111111;
  assign _095__S = 0 ;
  assign { chn_b_rsci_d_mxwt_R1 [0], chn_b_rsci_d_mxwt_R1 [1], chn_b_rsci_d_mxwt_R1 [2], chn_b_rsci_d_mxwt_R1 [3], chn_b_rsci_d_mxwt_R1 [4], chn_b_rsci_d_mxwt_R1 [5], chn_b_rsci_d_mxwt_R1 [6], chn_b_rsci_d_mxwt_R1 [7], chn_b_rsci_d_mxwt_R1 [8], chn_b_rsci_d_mxwt_R1 [9] } = 0;
  assign { chn_b_rsci_d_mxwt_X1 [0], chn_b_rsci_d_mxwt_X1 [1], chn_b_rsci_d_mxwt_X1 [2], chn_b_rsci_d_mxwt_X1 [3], chn_b_rsci_d_mxwt_X1 [4], chn_b_rsci_d_mxwt_X1 [5], chn_b_rsci_d_mxwt_X1 [6], chn_b_rsci_d_mxwt_X1 [7], chn_b_rsci_d_mxwt_X1 [8], chn_b_rsci_d_mxwt_X1 [9] } = 0;
  assign { chn_b_rsci_d_mxwt_C1 [0], chn_b_rsci_d_mxwt_C1 [1], chn_b_rsci_d_mxwt_C1 [2], chn_b_rsci_d_mxwt_C1 [3], chn_b_rsci_d_mxwt_C1 [4], chn_b_rsci_d_mxwt_C1 [5], chn_b_rsci_d_mxwt_C1 [6], chn_b_rsci_d_mxwt_C1 [7], chn_b_rsci_d_mxwt_C1 [8], chn_b_rsci_d_mxwt_C1 [9] } = 0;
  logic [16:0] chn_b_rsci_d_mxwt_C2 ;
  logic [16:0] chn_b_rsci_d_mxwt_R2 ;
  logic [16:0] chn_b_rsci_d_mxwt_X2 ;
  assign _095__T = | chn_b_rsci_d_mxwt_T [15:10] ;
  assign chn_b_rsci_d_mxwt_C2 [15:10] = { 6{ _095__C }} ;
  assign chn_b_rsci_d_mxwt_R2 [15:10] = { 6{ _095__R }} ;
  assign chn_b_rsci_d_mxwt_X2 [15:10] = { 6{ _095__X }} ;
  assign _096_ = chn_a_rsci_d_mxwt[15:10] == 6'b111111;
  assign _096__S = 0 ;
  assign { chn_a_rsci_d_mxwt_R1 [0], chn_a_rsci_d_mxwt_R1 [1], chn_a_rsci_d_mxwt_R1 [2], chn_a_rsci_d_mxwt_R1 [3], chn_a_rsci_d_mxwt_R1 [4], chn_a_rsci_d_mxwt_R1 [5], chn_a_rsci_d_mxwt_R1 [6], chn_a_rsci_d_mxwt_R1 [7], chn_a_rsci_d_mxwt_R1 [8], chn_a_rsci_d_mxwt_R1 [9] } = 0;
  assign { chn_a_rsci_d_mxwt_X1 [0], chn_a_rsci_d_mxwt_X1 [1], chn_a_rsci_d_mxwt_X1 [2], chn_a_rsci_d_mxwt_X1 [3], chn_a_rsci_d_mxwt_X1 [4], chn_a_rsci_d_mxwt_X1 [5], chn_a_rsci_d_mxwt_X1 [6], chn_a_rsci_d_mxwt_X1 [7], chn_a_rsci_d_mxwt_X1 [8], chn_a_rsci_d_mxwt_X1 [9] } = 0;
  assign { chn_a_rsci_d_mxwt_C1 [0], chn_a_rsci_d_mxwt_C1 [1], chn_a_rsci_d_mxwt_C1 [2], chn_a_rsci_d_mxwt_C1 [3], chn_a_rsci_d_mxwt_C1 [4], chn_a_rsci_d_mxwt_C1 [5], chn_a_rsci_d_mxwt_C1 [6], chn_a_rsci_d_mxwt_C1 [7], chn_a_rsci_d_mxwt_C1 [8], chn_a_rsci_d_mxwt_C1 [9] } = 0;
  logic [16:0] chn_a_rsci_d_mxwt_C2 ;
  logic [16:0] chn_a_rsci_d_mxwt_R2 ;
  logic [16:0] chn_a_rsci_d_mxwt_X2 ;
  assign _096__T = | chn_a_rsci_d_mxwt_T [15:10] ;
  assign chn_a_rsci_d_mxwt_C2 [15:10] = { 6{ _096__C }} ;
  assign chn_a_rsci_d_mxwt_R2 [15:10] = { 6{ _096__R }} ;
  assign chn_a_rsci_d_mxwt_X2 [15:10] = { 6{ _096__X }} ;
  assign _003_[9] = FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1 == 6'b111111;
  assign _003__S = 0 ;
  logic [5:0] FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_C1 ;
  logic [5:0] FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_R1 ;
  logic [5:0] FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_X1 ;
  assign _003__T [9] = | FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_T ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_C1 = { 6{ _003__C [9] }} ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_R1 = { 6{ _003__R [9] }} ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_X1 = { 6{ _003__X [9] }} ;
  assign _097_ = FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0[19:10] == 10'b1111111111;
  assign _097__S = 0 ;
  assign { FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R0 [0], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R0 [1], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R0 [2], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R0 [3], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R0 [4], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R0 [5], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R0 [6], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R0 [7], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R0 [8] } = 0;
  assign { FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X0 [0], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X0 [1], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X0 [2], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X0 [3], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X0 [4], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X0 [5], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X0 [6], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X0 [7], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X0 [8] } = 0;
  assign { FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C0 [0], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C0 [1], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C0 [2], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C0 [3], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C0 [4], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C0 [5], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C0 [6], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C0 [7], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C0 [8] } = 0;
  logic [19:0] FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C1 ;
  logic [19:0] FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R1 ;
  logic [19:0] FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X1 ;
  assign _097__T = | FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_T [19:10] ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C1 [19:10] = { 10{ _097__C }} ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R1 [19:10] = { 10{ _097__R }} ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X1 [19:10] = { 10{ _097__X }} ;
  logic [10:0] fangyuan5;
  logic [10:0] fangyuan5_T ;
  logic [10:0] fangyuan5_R ;
  logic [10:0] fangyuan5_C ;
  logic [10:0] fangyuan5_X ;
  assign fangyuan5 = { 1'b1, FpMul_6U_10U_ua_sva_1_15_0_1[9:0] };
  assign fangyuan5_T = {  1'h0 , FpMul_6U_10U_ua_sva_1_15_0_1_T [9:0]  };
  logic [13:0] fangyuan5_S ;
  assign fangyuan5_S = 0 ;
  assign FpMul_6U_10U_ua_sva_1_15_0_1_R0 [9:0] = fangyuan5_R [9:0] ;
  assign FpMul_6U_10U_ua_sva_1_15_0_1_X0 [9:0] = fangyuan5_X [9:0] ;
  assign FpMul_6U_10U_ua_sva_1_15_0_1_C0 [9:0] = fangyuan5_C [9:0] ;
  logic [10:0] fangyuan6;
  logic [10:0] fangyuan6_T ;
  logic [10:0] fangyuan6_R ;
  logic [10:0] fangyuan6_C ;
  logic [10:0] fangyuan6_X ;
  assign fangyuan6 = { 1'b1, FpMul_6U_10U_ub_sva_1_15_0_1[9:0] };
  assign fangyuan6_T = {  1'h0 , FpMul_6U_10U_ub_sva_1_15_0_1_T [9:0]  };
  logic [13:0] fangyuan6_S ;
  assign fangyuan6_S = 0 ;
  assign FpMul_6U_10U_ub_sva_1_15_0_1_R0 [9:0] = fangyuan6_R [9:0] ;
  assign FpMul_6U_10U_ub_sva_1_15_0_1_X0 [9:0] = fangyuan6_X [9:0] ;
  assign FpMul_6U_10U_ub_sva_1_15_0_1_C0 [9:0] = fangyuan6_C [9:0] ;

  assign FpMul_6U_10U_p_mant_p1_mul_tmp = fangyuan5 * fangyuan6;
  assign FpMul_6U_10U_p_mant_p1_mul_tmp_S = 0 ;
  logic [10:0] fangyuan5_C0 ;
  logic [10:0] fangyuan5_R0 ;
  logic [10:0] fangyuan5_X0 ;
  logic [10:0] fangyuan6_C0 ;
  logic [10:0] fangyuan6_R0 ;
  logic [10:0] fangyuan6_X0 ;
  assign FpMul_6U_10U_p_mant_p1_mul_tmp_T = fangyuan5_T | fangyuan6_T ;
  assign fangyuan5_C0 = FpMul_6U_10U_p_mant_p1_mul_tmp_C ;
  assign fangyuan5_X0 = FpMul_6U_10U_p_mant_p1_mul_tmp_X ;
  assign fangyuan6_C0 = FpMul_6U_10U_p_mant_p1_mul_tmp_C ;
  assign fangyuan6_X0 = FpMul_6U_10U_p_mant_p1_mul_tmp_X ;
  assign fangyuan5_R0 = FpMul_6U_10U_p_mant_p1_mul_tmp_R | ( FpMul_6U_10U_p_mant_p1_mul_tmp_C & fangyuan6_T );
  assign fangyuan6_R0 = FpMul_6U_10U_p_mant_p1_mul_tmp_R | ( FpMul_6U_10U_p_mant_p1_mul_tmp_C & fangyuan5_T );
  assign _098_ = chn_a_rsci_d_mxwt[15:10] != 6'b111111;
  assign _098__S = 0 ;
  assign { chn_a_rsci_d_mxwt_R2 [0], chn_a_rsci_d_mxwt_R2 [1], chn_a_rsci_d_mxwt_R2 [2], chn_a_rsci_d_mxwt_R2 [3], chn_a_rsci_d_mxwt_R2 [4], chn_a_rsci_d_mxwt_R2 [5], chn_a_rsci_d_mxwt_R2 [6], chn_a_rsci_d_mxwt_R2 [7], chn_a_rsci_d_mxwt_R2 [8], chn_a_rsci_d_mxwt_R2 [9], chn_a_rsci_d_mxwt_R2 [16:16] } = 0;
  assign { chn_a_rsci_d_mxwt_X2 [0], chn_a_rsci_d_mxwt_X2 [1], chn_a_rsci_d_mxwt_X2 [2], chn_a_rsci_d_mxwt_X2 [3], chn_a_rsci_d_mxwt_X2 [4], chn_a_rsci_d_mxwt_X2 [5], chn_a_rsci_d_mxwt_X2 [6], chn_a_rsci_d_mxwt_X2 [7], chn_a_rsci_d_mxwt_X2 [8], chn_a_rsci_d_mxwt_X2 [9], chn_a_rsci_d_mxwt_X2 [16:16] } = 0;
  assign { chn_a_rsci_d_mxwt_C2 [0], chn_a_rsci_d_mxwt_C2 [1], chn_a_rsci_d_mxwt_C2 [2], chn_a_rsci_d_mxwt_C2 [3], chn_a_rsci_d_mxwt_C2 [4], chn_a_rsci_d_mxwt_C2 [5], chn_a_rsci_d_mxwt_C2 [6], chn_a_rsci_d_mxwt_C2 [7], chn_a_rsci_d_mxwt_C2 [8], chn_a_rsci_d_mxwt_C2 [9], chn_a_rsci_d_mxwt_C2 [16:16] } = 0;
  logic [16:0] chn_a_rsci_d_mxwt_C3 ;
  logic [16:0] chn_a_rsci_d_mxwt_R3 ;
  logic [16:0] chn_a_rsci_d_mxwt_X3 ;
  assign _098__T = | chn_a_rsci_d_mxwt_T [15:10] ;
  assign chn_a_rsci_d_mxwt_C3 [15:10] = { 6{ _098__C }} ;
  assign chn_a_rsci_d_mxwt_R3 [15:10] = { 6{ _098__R }} ;
  assign chn_a_rsci_d_mxwt_X3 [15:10] = { 6{ _098__X }} ;
  assign _099_ = | chn_a_rsci_d_mxwt[9:0];
  assign _099__T = | chn_a_rsci_d_mxwt_T [9:0] ;
  assign chn_a_rsci_d_mxwt_C3 [9:0] = { 10{ _099__C }} ;
  assign chn_a_rsci_d_mxwt_X3 [9:0] = { 10{ _099__X }} ;
  assign chn_a_rsci_d_mxwt_R3 [9:0] = { 10{ _099__R }} & chn_a_rsci_d_mxwt[9:0] ;
  assign _099__S = 0 ;
  assign _100_ = | chn_b_rsci_d_mxwt[9:0];
  assign _100__T = | chn_b_rsci_d_mxwt_T [9:0] ;
  assign chn_b_rsci_d_mxwt_C2 [9:0] = { 10{ _100__C }} ;
  assign chn_b_rsci_d_mxwt_X2 [9:0] = { 10{ _100__X }} ;
  assign chn_b_rsci_d_mxwt_R2 [9:0] = { 10{ _100__R }} & chn_b_rsci_d_mxwt[9:0] ;
  assign _100__S = 0 ;
  assign _101_ = | chn_b_rsci_d_mxwt[15:0];
  assign { chn_b_rsci_d_mxwt_R2 [16:16] } = 0;
  assign { chn_b_rsci_d_mxwt_X2 [16:16] } = 0;
  assign { chn_b_rsci_d_mxwt_C2 [16:16] } = 0;
  logic [16:0] chn_b_rsci_d_mxwt_C3 ;
  logic [16:0] chn_b_rsci_d_mxwt_R3 ;
  logic [16:0] chn_b_rsci_d_mxwt_X3 ;
  assign _101__T = | chn_b_rsci_d_mxwt_T [15:0] ;
  assign chn_b_rsci_d_mxwt_C3 [15:0] = { 16{ _101__C }} ;
  assign chn_b_rsci_d_mxwt_X3 [15:0] = { 16{ _101__X }} ;
  assign chn_b_rsci_d_mxwt_R3 [15:0] = { 16{ _101__R }} & chn_b_rsci_d_mxwt[15:0] ;
  assign _101__S = 0 ;
  assign _102_ = | chn_a_rsci_d_mxwt[15:0];
  assign { chn_a_rsci_d_mxwt_R3 [16:16] } = 0;
  assign { chn_a_rsci_d_mxwt_X3 [16:16] } = 0;
  assign { chn_a_rsci_d_mxwt_C3 [16:16] } = 0;
  logic [16:0] chn_a_rsci_d_mxwt_C4 ;
  logic [16:0] chn_a_rsci_d_mxwt_R4 ;
  logic [16:0] chn_a_rsci_d_mxwt_X4 ;
  assign _102__T = | chn_a_rsci_d_mxwt_T [15:0] ;
  assign chn_a_rsci_d_mxwt_C4 [15:0] = { 16{ _102__C }} ;
  assign chn_a_rsci_d_mxwt_X4 [15:0] = { 16{ _102__X }} ;
  assign chn_a_rsci_d_mxwt_R4 [15:0] = { 16{ _102__R }} & chn_a_rsci_d_mxwt[15:0] ;
  assign _102__S = 0 ;
  assign _103_ = | FpMul_6U_10U_o_expo_lpi_1_dfm;
  logic [5:0] FpMul_6U_10U_o_expo_lpi_1_dfm_C0 ;
  logic [5:0] FpMul_6U_10U_o_expo_lpi_1_dfm_R0 ;
  logic [5:0] FpMul_6U_10U_o_expo_lpi_1_dfm_X0 ;
  assign _103__T = | FpMul_6U_10U_o_expo_lpi_1_dfm_T ;
  assign FpMul_6U_10U_o_expo_lpi_1_dfm_C0 = { 6{ _103__C }} ;
  assign FpMul_6U_10U_o_expo_lpi_1_dfm_X0 = { 6{ _103__X }} ;
  assign FpMul_6U_10U_o_expo_lpi_1_dfm_R0 = { 6{ _103__R }} & FpMul_6U_10U_o_expo_lpi_1_dfm ;
  assign _103__S = 0 ;
  assign _104_ = ~ chn_o_rsci_bawt;
  logic [0:0] chn_o_rsci_bawt_C1 ;
  logic [0:0] chn_o_rsci_bawt_R1 ;
  logic [0:0] chn_o_rsci_bawt_X1 ;
  assign _104__T = chn_o_rsci_bawt_T ;
  assign chn_o_rsci_bawt_C1 = _104__C ;
  assign chn_o_rsci_bawt_R1 = _104__R ;
  assign chn_o_rsci_bawt_X1 = _104__X ;
  assign _104__S = 0 ;
  assign _105_ = ~ main_stage_v_2;
  logic [0:0] main_stage_v_2_C3 ;
  logic [0:0] main_stage_v_2_R3 ;
  logic [0:0] main_stage_v_2_X3 ;
  assign _105__T = main_stage_v_2_T ;
  assign main_stage_v_2_C3 = _105__C ;
  assign main_stage_v_2_R3 = _105__R ;
  assign main_stage_v_2_X3 = _105__X ;
  assign _105__S = 0 ;
  assign _106_ = ~ IsNaN_6U_10U_land_lpi_1_dfm_4;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_4_C1 ;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_4_R1 ;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_4_X1 ;
  assign _106__T = IsNaN_6U_10U_land_lpi_1_dfm_4_T ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_4_C1 = _106__C ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_4_R1 = _106__R ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_4_X1 = _106__X ;
  assign _106__S = 0 ;
  assign _000_ = ~ main_stage_v_1;
  logic [0:0] main_stage_v_1_C4 ;
  logic [0:0] main_stage_v_1_R4 ;
  logic [0:0] main_stage_v_1_X4 ;
  assign _000__T = main_stage_v_1_T ;
  assign main_stage_v_1_C4 = _000__C ;
  assign main_stage_v_1_R4 = _000__R ;
  assign main_stage_v_1_X4 = _000__X ;
  assign _000__S = 0 ;
  assign _107_ = ~ main_stage_en_1;
  logic [0:0] main_stage_en_1_C1 ;
  logic [0:0] main_stage_en_1_R1 ;
  logic [0:0] main_stage_en_1_X1 ;
  assign _107__T = main_stage_en_1_T ;
  assign main_stage_en_1_C1 = _107__C ;
  assign main_stage_en_1_R1 = _107__R ;
  assign main_stage_en_1_X1 = _107__X ;
  assign _107__S = 0 ;
  assign _108_ = ~ _046_;
  logic [0:0] _046__C0 ;
  logic [0:0] _046__R0 ;
  logic [0:0] _046__X0 ;
  assign _108__T = _046__T ;
  assign _046__C0 = _108__C ;
  assign _046__R0 = _108__R ;
  assign _046__X0 = _108__X ;
  assign _108__S = 0 ;
  assign _109_ = ~ and_dcpl_15;
  logic [0:0] and_dcpl_15_C0 ;
  logic [0:0] and_dcpl_15_R0 ;
  logic [0:0] and_dcpl_15_X0 ;
  assign _109__T = and_dcpl_15_T ;
  assign and_dcpl_15_C0 = _109__C ;
  assign and_dcpl_15_R0 = _109__R ;
  assign and_dcpl_15_X0 = _109__X ;
  assign _109__S = 0 ;
  assign _110_ = ~ main_stage_v_1_mx0c1;
  logic [0:0] main_stage_v_1_mx0c1_C0 ;
  logic [0:0] main_stage_v_1_mx0c1_R0 ;
  logic [0:0] main_stage_v_1_mx0c1_X0 ;
  assign _110__T = main_stage_v_1_mx0c1_T ;
  assign main_stage_v_1_mx0c1_C0 = _110__C ;
  assign main_stage_v_1_mx0c1_R0 = _110__R ;
  assign main_stage_v_1_mx0c1_X0 = _110__X ;
  assign _110__S = 0 ;
  assign _111_ = ~ and_dcpl_7;
  logic [0:0] and_dcpl_7_C0 ;
  logic [0:0] and_dcpl_7_R0 ;
  logic [0:0] and_dcpl_7_X0 ;
  assign _111__T = and_dcpl_7_T ;
  assign and_dcpl_7_C0 = _111__C ;
  assign and_dcpl_7_R0 = _111__R ;
  assign and_dcpl_7_X0 = _111__X ;
  assign _111__S = 0 ;
  assign _112_ = ~ mux_2_nl;
  logic [0:0] mux_2_nl_C0 ;
  logic [0:0] mux_2_nl_R0 ;
  logic [0:0] mux_2_nl_X0 ;
  assign _112__T = mux_2_nl_T ;
  assign mux_2_nl_C0 = _112__C ;
  assign mux_2_nl_R0 = _112__R ;
  assign mux_2_nl_X0 = _112__X ;
  assign _112__S = 0 ;
  assign _113_ = ~ _145_;
  logic [0:0] _145__C0 ;
  logic [0:0] _145__R0 ;
  logic [0:0] _145__X0 ;
  assign _113__T = _145__T ;
  assign _145__C0 = _113__C ;
  assign _145__R0 = _113__R ;
  assign _145__X0 = _113__X ;
  assign _113__S = 0 ;
  assign _114_ = ~ or_tmp_56;
  logic [0:0] or_tmp_56_C1 ;
  logic [0:0] or_tmp_56_R1 ;
  logic [0:0] or_tmp_56_X1 ;
  assign _114__T = or_tmp_56_T ;
  assign or_tmp_56_C1 = _114__C ;
  assign or_tmp_56_R1 = _114__R ;
  assign or_tmp_56_X1 = _114__X ;
  assign _114__S = 0 ;
  assign _115_ = ~ main_stage_v_2_mx0c1;
  logic [0:0] main_stage_v_2_mx0c1_C0 ;
  logic [0:0] main_stage_v_2_mx0c1_R0 ;
  logic [0:0] main_stage_v_2_mx0c1_X0 ;
  assign _115__T = main_stage_v_2_mx0c1_T ;
  assign main_stage_v_2_mx0c1_C0 = _115__C ;
  assign main_stage_v_2_mx0c1_R0 = _115__R ;
  assign main_stage_v_2_mx0c1_X0 = _115__X ;
  assign _115__S = 0 ;
  assign _116_ = ~ FpMul_6U_10U_lor_1_lpi_1_dfm_st_3;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_C0 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_R0 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_X0 ;
  assign _116__T = FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_T ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_C0 = _116__C ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_R0 = _116__R ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_X0 = _116__X ;
  assign _116__S = 0 ;
  assign _117_ = ~ fsm_output[0];
  assign _117__T = fsm_output_T [0] ;
  assign fsm_output_C1 [0] = _117__C ;
  assign fsm_output_R1 [0] = _117__R ;
  assign fsm_output_X1 [0] = _117__X ;
  assign _117__S = 0 ;
  assign _118_ = ~ FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_C3 ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_R3 ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_X3 ;
  assign _118__T = FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_T ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_C3 = _118__C ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_R3 = _118__R ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_X3 = _118__X ;
  assign _118__S = 0 ;
  assign _119_ = ~ _149_;
  logic [0:0] _149__C0 ;
  logic [0:0] _149__R0 ;
  logic [0:0] _149__X0 ;
  assign _119__T = _149__T ;
  assign _149__C0 = _119__C ;
  assign _149__R0 = _119__R ;
  assign _149__X0 = _119__X ;
  assign _119__S = 0 ;
  assign _120_ = ~ or_68_cse;
  logic [0:0] or_68_cse_C1 ;
  logic [0:0] or_68_cse_R1 ;
  logic [0:0] or_68_cse_X1 ;
  assign _120__T = or_68_cse_T ;
  assign or_68_cse_C1 = _120__C ;
  assign or_68_cse_R1 = _120__R ;
  assign or_68_cse_X1 = _120__X ;
  assign _120__S = 0 ;
  assign _121_ = ~ mux_29_nl;
  logic [0:0] mux_29_nl_C0 ;
  logic [0:0] mux_29_nl_R0 ;
  logic [0:0] mux_29_nl_X0 ;
  assign _121__T = mux_29_nl_T ;
  assign mux_29_nl_C0 = _121__C ;
  assign mux_29_nl_R0 = _121__R ;
  assign mux_29_nl_X0 = _121__X ;
  assign _121__S = 0 ;
  assign _122_ = ~ _156_;
  logic [0:0] _156__C0 ;
  logic [0:0] _156__R0 ;
  logic [0:0] _156__X0 ;
  assign _122__T = _156__T ;
  assign _156__C0 = _122__C ;
  assign _156__R0 = _122__R ;
  assign _156__X0 = _122__X ;
  assign _122__S = 0 ;
  assign _123_ = ~ FpMantRNE_22U_11U_else_and_svs;
  logic [0:0] FpMantRNE_22U_11U_else_and_svs_C2 ;
  logic [0:0] FpMantRNE_22U_11U_else_and_svs_R2 ;
  logic [0:0] FpMantRNE_22U_11U_else_and_svs_X2 ;
  assign _123__T = FpMantRNE_22U_11U_else_and_svs_T ;
  assign FpMantRNE_22U_11U_else_and_svs_C2 = _123__C ;
  assign FpMantRNE_22U_11U_else_and_svs_R2 = _123__R ;
  assign FpMantRNE_22U_11U_else_and_svs_X2 = _123__X ;
  assign _123__S = 0 ;
  assign FpMul_6U_10U_nor_nl = ~ _004_;
  logic [9:0] _004__C0 ;
  logic [9:0] _004__R0 ;
  logic [9:0] _004__X0 ;
  assign FpMul_6U_10U_nor_nl_T = _004__T ;
  assign _004__C0 = FpMul_6U_10U_nor_nl_C ;
  assign _004__R0 = FpMul_6U_10U_nor_nl_R ;
  assign _004__X0 = FpMul_6U_10U_nor_nl_X ;
  assign FpMul_6U_10U_nor_nl_S = 0 ;
  assign FpMul_6U_10U_FpMul_6U_10U_FpMul_6U_10U_nor_1_nl = ~ _005_;
  logic [9:0] _005__C0 ;
  logic [9:0] _005__R0 ;
  logic [9:0] _005__X0 ;
  assign FpMul_6U_10U_FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_T = _005__T ;
  assign _005__C0 = FpMul_6U_10U_FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_C ;
  assign _005__R0 = FpMul_6U_10U_FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_R ;
  assign _005__X0 = FpMul_6U_10U_FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_X ;
  assign FpMul_6U_10U_FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_S = 0 ;
  assign _124_ = ~ IsNaN_6U_10U_1_land_lpi_1_dfm_4;
  logic [0:0] IsNaN_6U_10U_1_land_lpi_1_dfm_4_C0 ;
  logic [0:0] IsNaN_6U_10U_1_land_lpi_1_dfm_4_R0 ;
  logic [0:0] IsNaN_6U_10U_1_land_lpi_1_dfm_4_X0 ;
  assign _124__T = IsNaN_6U_10U_1_land_lpi_1_dfm_4_T ;
  assign IsNaN_6U_10U_1_land_lpi_1_dfm_4_C0 = _124__C ;
  assign IsNaN_6U_10U_1_land_lpi_1_dfm_4_R0 = _124__R ;
  assign IsNaN_6U_10U_1_land_lpi_1_dfm_4_X0 = _124__X ;
  assign _124__S = 0 ;
  assign nand_6_cse = ~ nor_tmp_1;
  logic [0:0] nor_tmp_1_C2 ;
  logic [0:0] nor_tmp_1_R2 ;
  logic [0:0] nor_tmp_1_X2 ;
  assign nand_6_cse_T = nor_tmp_1_T ;
  assign nor_tmp_1_C2 = nand_6_cse_C ;
  assign nor_tmp_1_R2 = nand_6_cse_R ;
  assign nor_tmp_1_X2 = nand_6_cse_X ;
  assign nand_6_cse_S = 0 ;
  assign _125_ = ~ or_tmp_7;
  logic [0:0] or_tmp_7_C1 ;
  logic [0:0] or_tmp_7_R1 ;
  logic [0:0] or_tmp_7_X1 ;
  assign _125__T = or_tmp_7_T ;
  assign or_tmp_7_C1 = _125__C ;
  assign or_tmp_7_R1 = _125__R ;
  assign or_tmp_7_X1 = _125__X ;
  assign _125__S = 0 ;
  assign _126_ = ~ _075_;
  logic [0:0] _075__C0 ;
  logic [0:0] _075__R0 ;
  logic [0:0] _075__X0 ;
  assign _126__T = _075__T ;
  assign _075__C0 = _126__C ;
  assign _075__R0 = _126__R ;
  assign _075__X0 = _126__X ;
  assign _126__S = 0 ;
  assign nor_41_nl = ~ _160_;
  logic [0:0] _160__C0 ;
  logic [0:0] _160__R0 ;
  logic [0:0] _160__X0 ;
  assign nor_41_nl_T = _160__T ;
  assign _160__C0 = nor_41_nl_C ;
  assign _160__R0 = nor_41_nl_R ;
  assign _160__X0 = nor_41_nl_X ;
  assign nor_41_nl_S = 0 ;
  assign _127_ = ~ FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_C0 ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_R0 ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_X0 ;
  assign _127__T = FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_T ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_C0 = _127__C ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_R0 = _127__R ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_X0 = _127__X ;
  assign _127__S = 0 ;
  assign nor_43_nl = ~ _164_;
  logic [0:0] _164__C0 ;
  logic [0:0] _164__R0 ;
  logic [0:0] _164__X0 ;
  assign nor_43_nl_T = _164__T ;
  assign _164__C0 = nor_43_nl_C ;
  assign _164__R0 = nor_43_nl_R ;
  assign _164__X0 = nor_43_nl_X ;
  assign nor_43_nl_S = 0 ;
  assign _128_ = ~ reg_chn_o_rsci_ld_core_psct_cse;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C2 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R2 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X2 ;
  assign _128__T = reg_chn_o_rsci_ld_core_psct_cse_T ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C2 = _128__C ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R2 = _128__R ;
  assign reg_chn_o_rsci_ld_core_psct_cse_X2 = _128__X ;
  assign _128__S = 0 ;
  assign nor_39_nl = ~ _168_;
  logic [0:0] _168__C0 ;
  logic [0:0] _168__R0 ;
  logic [0:0] _168__X0 ;
  assign nor_39_nl_T = _168__T ;
  assign _168__C0 = nor_39_nl_C ;
  assign _168__R0 = nor_39_nl_R ;
  assign _168__X0 = nor_39_nl_X ;
  assign nor_39_nl_S = 0 ;
  assign nor_38_nl = ~ _171_;
  logic [0:0] _171__C0 ;
  logic [0:0] _171__R0 ;
  logic [0:0] _171__X0 ;
  assign nor_38_nl_T = _171__T ;
  assign _171__C0 = nor_38_nl_C ;
  assign _171__R0 = nor_38_nl_R ;
  assign _171__X0 = nor_38_nl_X ;
  assign nor_38_nl_S = 0 ;
  assign _129_ = ~ FpMul_6U_10U_else_2_if_acc_nl[6];
  logic [6:0] FpMul_6U_10U_else_2_if_acc_nl_C0 ;
  logic [6:0] FpMul_6U_10U_else_2_if_acc_nl_R0 ;
  logic [6:0] FpMul_6U_10U_else_2_if_acc_nl_X0 ;
  assign _129__T = FpMul_6U_10U_else_2_if_acc_nl_T [6] ;
  assign FpMul_6U_10U_else_2_if_acc_nl_C0 [6] = _129__C ;
  assign FpMul_6U_10U_else_2_if_acc_nl_R0 [6] = _129__R ;
  assign FpMul_6U_10U_else_2_if_acc_nl_X0 [6] = _129__X ;
  assign _129__S = 0 ;
  assign nor_33_nl = ~ or_tmp_49;
  logic [0:0] or_tmp_49_C0 ;
  logic [0:0] or_tmp_49_R0 ;
  logic [0:0] or_tmp_49_X0 ;
  assign nor_33_nl_T = or_tmp_49_T ;
  assign or_tmp_49_C0 = nor_33_nl_C ;
  assign or_tmp_49_R0 = nor_33_nl_R ;
  assign or_tmp_49_X0 = nor_33_nl_X ;
  assign nor_33_nl_S = 0 ;
  assign _001_ = ~ mux_31_nl;
  logic [0:0] mux_31_nl_C0 ;
  logic [0:0] mux_31_nl_R0 ;
  logic [0:0] mux_31_nl_X0 ;
  assign _001__T = mux_31_nl_T ;
  assign mux_31_nl_C0 = _001__C ;
  assign mux_31_nl_R0 = _001__R ;
  assign mux_31_nl_X0 = _001__X ;
  assign _001__S = 0 ;
  assign _130_ = ~ _178_;
  logic [0:0] _178__C0 ;
  logic [0:0] _178__R0 ;
  logic [0:0] _178__X0 ;
  assign _130__T = _178__T ;
  assign _178__C0 = _130__C ;
  assign _178__R0 = _130__R ;
  assign _178__X0 = _130__X ;
  assign _130__S = 0 ;
  assign nor_cse = ~ or_5_cse;
  logic [0:0] or_5_cse_C14 ;
  logic [0:0] or_5_cse_R14 ;
  logic [0:0] or_5_cse_X14 ;
  assign nor_cse_T = or_5_cse_T ;
  assign or_5_cse_C14 = nor_cse_C ;
  assign or_5_cse_R14 = nor_cse_R ;
  assign or_5_cse_X14 = nor_cse_X ;
  assign nor_cse_S = 0 ;
  assign nor_42_cse = ~ _179_;
  logic [0:0] _179__C0 ;
  logic [0:0] _179__R0 ;
  logic [0:0] _179__X0 ;
  assign nor_42_cse_T = _179__T ;
  assign _179__C0 = nor_42_cse_C ;
  assign _179__R0 = nor_42_cse_R ;
  assign _179__X0 = nor_42_cse_X ;
  assign nor_42_cse_S = 0 ;
  assign _131_ = ~ nor_tmp_11;
  logic [0:0] nor_tmp_11_C0 ;
  logic [0:0] nor_tmp_11_R0 ;
  logic [0:0] nor_tmp_11_X0 ;
  assign _131__T = nor_tmp_11_T ;
  assign nor_tmp_11_C0 = _131__C ;
  assign nor_tmp_11_R0 = _131__R ;
  assign nor_tmp_11_X0 = _131__X ;
  assign _131__S = 0 ;
  assign nor_37_nl = ~ _180_;
  logic [0:0] _180__C0 ;
  logic [0:0] _180__R0 ;
  logic [0:0] _180__X0 ;
  assign nor_37_nl_T = _180__T ;
  assign _180__C0 = nor_37_nl_C ;
  assign _180__R0 = nor_37_nl_R ;
  assign _180__X0 = nor_37_nl_X ;
  assign nor_37_nl_S = 0 ;
  assign _132_ = ~ IsNaN_6U_10U_land_lpi_1_dfm_st_3;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_st_3_C1 ;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_st_3_R1 ;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_st_3_X1 ;
  assign _132__T = IsNaN_6U_10U_land_lpi_1_dfm_st_3_T ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_st_3_C1 = _132__C ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_st_3_R1 = _132__R ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_st_3_X1 = _132__X ;
  assign _132__S = 0 ;
  assign _133_ = ~ or_tmp_32;
  logic [0:0] or_tmp_32_C0 ;
  logic [0:0] or_tmp_32_R0 ;
  logic [0:0] or_tmp_32_X0 ;
  assign _133__T = or_tmp_32_T ;
  assign or_tmp_32_C0 = _133__C ;
  assign or_tmp_32_R0 = _133__R ;
  assign or_tmp_32_X0 = _133__X ;
  assign _133__S = 0 ;
  assign nor_35_nl = ~ _182_;
  logic [0:0] _182__C0 ;
  logic [0:0] _182__R0 ;
  logic [0:0] _182__X0 ;
  assign nor_35_nl_T = _182__T ;
  assign _182__C0 = nor_35_nl_C ;
  assign _182__R0 = nor_35_nl_R ;
  assign _182__X0 = nor_35_nl_X ;
  assign nor_35_nl_S = 0 ;
  assign _134_ = ~ mux_17_nl;
  logic [0:0] mux_17_nl_C0 ;
  logic [0:0] mux_17_nl_R0 ;
  logic [0:0] mux_17_nl_X0 ;
  assign _134__T = mux_17_nl_T ;
  assign mux_17_nl_C0 = _134__C ;
  assign mux_17_nl_R0 = _134__R ;
  assign mux_17_nl_X0 = _134__X ;
  assign _134__S = 0 ;
  assign IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse = ~ _095_;
  logic [0:0] _095__C2 ;
  logic [0:0] _095__R2 ;
  logic [0:0] _095__X2 ;
  assign IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_T = _095__T ;
  assign _095__C2 = IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_C ;
  assign _095__R2 = IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_R ;
  assign _095__X2 = IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_X ;
  assign IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_S = 0 ;
  assign nand_cse = ~ _096_;
  logic [0:0] _096__C2 ;
  logic [0:0] _096__R2 ;
  logic [0:0] _096__X2 ;
  assign nand_cse_T = _096__T ;
  assign _096__C2 = nand_cse_C ;
  assign _096__R2 = nand_cse_R ;
  assign _096__X2 = nand_cse_X ;
  assign nand_cse_S = 0 ;
  assign nand_7_cse = ~ _087_;
  logic [0:0] _087__C0 ;
  logic [0:0] _087__R0 ;
  logic [0:0] _087__X0 ;
  assign nand_7_cse_T = _087__T ;
  assign _087__C0 = nand_7_cse_C ;
  assign _087__R0 = nand_7_cse_R ;
  assign _087__X0 = nand_7_cse_X ;
  assign nand_7_cse_S = 0 ;
  assign IsNaN_6U_10U_nor_tmp = ~ _099_;
  logic [0:0] _099__C1 ;
  logic [0:0] _099__R1 ;
  logic [0:0] _099__X1 ;
  assign IsNaN_6U_10U_nor_tmp_T = _099__T ;
  assign _099__C1 = IsNaN_6U_10U_nor_tmp_C ;
  assign _099__R1 = IsNaN_6U_10U_nor_tmp_R ;
  assign _099__X1 = IsNaN_6U_10U_nor_tmp_X ;
  assign IsNaN_6U_10U_nor_tmp_S = 0 ;
  assign IsNaN_6U_10U_1_nor_tmp = ~ _100_;
  logic [0:0] _100__C1 ;
  logic [0:0] _100__R1 ;
  logic [0:0] _100__X1 ;
  assign IsNaN_6U_10U_1_nor_tmp_T = _100__T ;
  assign _100__C1 = IsNaN_6U_10U_1_nor_tmp_C ;
  assign _100__R1 = IsNaN_6U_10U_1_nor_tmp_R ;
  assign _100__X1 = IsNaN_6U_10U_1_nor_tmp_X ;
  assign IsNaN_6U_10U_1_nor_tmp_S = 0 ;
  assign _135_ = ~ _101_;
  logic [0:0] _101__C0 ;
  logic [0:0] _101__R0 ;
  logic [0:0] _101__X0 ;
  assign _135__T = _101__T ;
  assign _101__C0 = _135__C ;
  assign _101__R0 = _135__R ;
  assign _101__X0 = _135__X ;
  assign _135__S = 0 ;
  assign _136_ = ~ _102_;
  logic [0:0] _102__C0 ;
  logic [0:0] _102__R0 ;
  logic [0:0] _102__X0 ;
  assign _136__T = _102__T ;
  assign _102__C0 = _136__C ;
  assign _102__R0 = _136__R ;
  assign _102__X0 = _136__X ;
  assign _136__S = 0 ;
  assign _002_ = ~ FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2;
  logic [0:0] FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_C0 ;
  logic [0:0] FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_R0 ;
  logic [0:0] FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_X0 ;
  assign _002__T = FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_T ;
  assign FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_C0 = _002__C ;
  assign FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_R0 = _002__R ;
  assign FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_X0 = _002__X ;
  assign _002__S = 0 ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp = ~ _003_[9];
  assign { _003__R0 [0], _003__R0 [1], _003__R0 [2], _003__R0 [3], _003__R0 [4], _003__R0 [5], _003__R0 [6], _003__R0 [7], _003__R0 [8] } = 0;
  assign { _003__X0 [0], _003__X0 [1], _003__X0 [2], _003__X0 [3], _003__X0 [4], _003__X0 [5], _003__X0 [6], _003__X0 [7], _003__X0 [8] } = 0;
  assign { _003__C0 [0], _003__C0 [1], _003__C0 [2], _003__C0 [3], _003__C0 [4], _003__C0 [5], _003__C0 [6], _003__C0 [7], _003__C0 [8] } = 0;
  logic [9:0] _003__C1 ;
  logic [9:0] _003__R1 ;
  logic [9:0] _003__X1 ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_T = _003__T [9] ;
  assign _003__C1 [9] = FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_C ;
  assign _003__R1 [9] = FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_R ;
  assign _003__X1 [9] = FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_X ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_S = 0 ;
  assign FpMul_6U_10U_FpMul_6U_10U_nor_1_nl = ~ _197_;
  logic [0:0] _197__C0 ;
  logic [0:0] _197__R0 ;
  logic [0:0] _197__X0 ;
  assign FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_T = _197__T ;
  assign _197__C0 = FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_C ;
  assign _197__R0 = FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_R ;
  assign _197__X0 = FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_X ;
  assign FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_S = 0 ;
  assign _138_ = ~ _103_;
  logic [0:0] _103__C0 ;
  logic [0:0] _103__R0 ;
  logic [0:0] _103__X0 ;
  assign _138__T = _103__T ;
  assign _103__C0 = _138__C ;
  assign _103__R0 = _138__R ;
  assign _103__X0 = _138__X ;
  assign _138__S = 0 ;
  assign _139_ = ~ FpMul_6U_10U_p_mant_p1_sva_2[21];
  assign { FpMul_6U_10U_p_mant_p1_sva_2_R1 [0], FpMul_6U_10U_p_mant_p1_sva_2_R1 [1], FpMul_6U_10U_p_mant_p1_sva_2_R1 [2], FpMul_6U_10U_p_mant_p1_sva_2_R1 [3], FpMul_6U_10U_p_mant_p1_sva_2_R1 [4], FpMul_6U_10U_p_mant_p1_sva_2_R1 [5], FpMul_6U_10U_p_mant_p1_sva_2_R1 [6], FpMul_6U_10U_p_mant_p1_sva_2_R1 [7], FpMul_6U_10U_p_mant_p1_sva_2_R1 [8], FpMul_6U_10U_p_mant_p1_sva_2_R1 [9], FpMul_6U_10U_p_mant_p1_sva_2_R1 [10], FpMul_6U_10U_p_mant_p1_sva_2_R1 [11], FpMul_6U_10U_p_mant_p1_sva_2_R1 [12], FpMul_6U_10U_p_mant_p1_sva_2_R1 [13], FpMul_6U_10U_p_mant_p1_sva_2_R1 [14], FpMul_6U_10U_p_mant_p1_sva_2_R1 [15], FpMul_6U_10U_p_mant_p1_sva_2_R1 [16], FpMul_6U_10U_p_mant_p1_sva_2_R1 [17], FpMul_6U_10U_p_mant_p1_sva_2_R1 [18], FpMul_6U_10U_p_mant_p1_sva_2_R1 [19], FpMul_6U_10U_p_mant_p1_sva_2_R1 [20] } = 0;
  assign { FpMul_6U_10U_p_mant_p1_sva_2_X1 [0], FpMul_6U_10U_p_mant_p1_sva_2_X1 [1], FpMul_6U_10U_p_mant_p1_sva_2_X1 [2], FpMul_6U_10U_p_mant_p1_sva_2_X1 [3], FpMul_6U_10U_p_mant_p1_sva_2_X1 [4], FpMul_6U_10U_p_mant_p1_sva_2_X1 [5], FpMul_6U_10U_p_mant_p1_sva_2_X1 [6], FpMul_6U_10U_p_mant_p1_sva_2_X1 [7], FpMul_6U_10U_p_mant_p1_sva_2_X1 [8], FpMul_6U_10U_p_mant_p1_sva_2_X1 [9], FpMul_6U_10U_p_mant_p1_sva_2_X1 [10], FpMul_6U_10U_p_mant_p1_sva_2_X1 [11], FpMul_6U_10U_p_mant_p1_sva_2_X1 [12], FpMul_6U_10U_p_mant_p1_sva_2_X1 [13], FpMul_6U_10U_p_mant_p1_sva_2_X1 [14], FpMul_6U_10U_p_mant_p1_sva_2_X1 [15], FpMul_6U_10U_p_mant_p1_sva_2_X1 [16], FpMul_6U_10U_p_mant_p1_sva_2_X1 [17], FpMul_6U_10U_p_mant_p1_sva_2_X1 [18], FpMul_6U_10U_p_mant_p1_sva_2_X1 [19], FpMul_6U_10U_p_mant_p1_sva_2_X1 [20] } = 0;
  assign { FpMul_6U_10U_p_mant_p1_sva_2_C1 [0], FpMul_6U_10U_p_mant_p1_sva_2_C1 [1], FpMul_6U_10U_p_mant_p1_sva_2_C1 [2], FpMul_6U_10U_p_mant_p1_sva_2_C1 [3], FpMul_6U_10U_p_mant_p1_sva_2_C1 [4], FpMul_6U_10U_p_mant_p1_sva_2_C1 [5], FpMul_6U_10U_p_mant_p1_sva_2_C1 [6], FpMul_6U_10U_p_mant_p1_sva_2_C1 [7], FpMul_6U_10U_p_mant_p1_sva_2_C1 [8], FpMul_6U_10U_p_mant_p1_sva_2_C1 [9], FpMul_6U_10U_p_mant_p1_sva_2_C1 [10], FpMul_6U_10U_p_mant_p1_sva_2_C1 [11], FpMul_6U_10U_p_mant_p1_sva_2_C1 [12], FpMul_6U_10U_p_mant_p1_sva_2_C1 [13], FpMul_6U_10U_p_mant_p1_sva_2_C1 [14], FpMul_6U_10U_p_mant_p1_sva_2_C1 [15], FpMul_6U_10U_p_mant_p1_sva_2_C1 [16], FpMul_6U_10U_p_mant_p1_sva_2_C1 [17], FpMul_6U_10U_p_mant_p1_sva_2_C1 [18], FpMul_6U_10U_p_mant_p1_sva_2_C1 [19], FpMul_6U_10U_p_mant_p1_sva_2_C1 [20] } = 0;
  logic [21:0] FpMul_6U_10U_p_mant_p1_sva_2_C2 ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_sva_2_R2 ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_sva_2_X2 ;
  assign _139__T = FpMul_6U_10U_p_mant_p1_sva_2_T [21] ;
  assign FpMul_6U_10U_p_mant_p1_sva_2_C2 [21] = _139__C ;
  assign FpMul_6U_10U_p_mant_p1_sva_2_R2 [21] = _139__R ;
  assign FpMul_6U_10U_p_mant_p1_sva_2_X2 [21] = _139__X ;
  assign _139__S = 0 ;
  assign FpMul_6U_10U_is_inf_lpi_1_dfm_2 = ~ _137_;
  logic [0:0] _137__C1 ;
  logic [0:0] _137__R1 ;
  logic [0:0] _137__X1 ;
  assign FpMul_6U_10U_is_inf_lpi_1_dfm_2_T = _137__T ;
  assign _137__C1 = FpMul_6U_10U_is_inf_lpi_1_dfm_2_C ;
  assign _137__R1 = FpMul_6U_10U_is_inf_lpi_1_dfm_2_R ;
  assign _137__X1 = FpMul_6U_10U_is_inf_lpi_1_dfm_2_X ;
  assign FpMul_6U_10U_is_inf_lpi_1_dfm_2_S = 0 ;
  assign nor_40_nl = ~ _199_;
  logic [0:0] _199__C0 ;
  logic [0:0] _199__R0 ;
  logic [0:0] _199__X0 ;
  assign nor_40_nl_T = _199__T ;
  assign _199__C0 = nor_40_nl_C ;
  assign _199__R0 = nor_40_nl_R ;
  assign _199__X0 = nor_40_nl_X ;
  assign nor_40_nl_S = 0 ;
  assign nor_34_nl = ~ _203_;
  logic [0:0] _203__C0 ;
  logic [0:0] _203__R0 ;
  logic [0:0] _203__X0 ;
  assign nor_34_nl_T = _203__T ;
  assign _203__C0 = nor_34_nl_C ;
  assign _203__R0 = nor_34_nl_R ;
  assign _203__X0 = nor_34_nl_X ;
  assign nor_34_nl_S = 0 ;
  assign _140_ = ~ _092_;
  logic [0:0] _092__C0 ;
  logic [0:0] _092__R0 ;
  logic [0:0] _092__X0 ;
  assign _140__T = _092__T ;
  assign _092__C0 = _140__C ;
  assign _092__R0 = _140__R ;
  assign _092__X0 = _140__X ;
  assign _140__S = 0 ;
  assign _141_ = ~ _094_;
  logic [0:0] _094__C0 ;
  logic [0:0] _094__R0 ;
  logic [0:0] _094__X0 ;
  assign _141__T = _094__T ;
  assign _094__C0 = _141__C ;
  assign _094__R0 = _141__R ;
  assign _094__X0 = _141__X ;
  assign _141__S = 0 ;
  assign or_tmp_56 = IsNaN_6U_10U_1_nor_tmp | IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse;
  assign or_tmp_56_S = 0 ;
  logic [0:0] IsNaN_6U_10U_1_nor_tmp_C0 ;
  logic [0:0] IsNaN_6U_10U_1_nor_tmp_R0 ;
  logic [0:0] IsNaN_6U_10U_1_nor_tmp_X0 ;
  logic [0:0] IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_C1 ;
  logic [0:0] IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_R1 ;
  logic [0:0] IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_X1 ;
  assign or_tmp_56_T = IsNaN_6U_10U_1_nor_tmp_T | IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_T ;
  assign IsNaN_6U_10U_1_nor_tmp_C0 = or_tmp_56_C ;
  assign IsNaN_6U_10U_1_nor_tmp_X0 = or_tmp_56_X ;
  assign IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_C1 = or_tmp_56_C ;
  assign IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_X1 = or_tmp_56_X ;
  assign IsNaN_6U_10U_1_nor_tmp_R0 = ( or_tmp_56_R | or_tmp_56_C & IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_T ) & { 1{ IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse != 1'b1 }} ;
  assign IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_R1 = ( or_tmp_56_R | or_tmp_56_C & IsNaN_6U_10U_1_nor_tmp_T ) & { 1{ IsNaN_6U_10U_1_nor_tmp != 1'b1 }} ;
  assign or_tmp_62 = main_stage_en_1 | fsm_output[0];
  assign or_tmp_62_S = 0 ;
  logic [0:0] main_stage_en_1_C2 ;
  logic [0:0] main_stage_en_1_R2 ;
  logic [0:0] main_stage_en_1_X2 ;
  logic [1:0] fsm_output_C2 ;
  logic [1:0] fsm_output_R2 ;
  logic [1:0] fsm_output_X2 ;
  assign or_tmp_62_T = main_stage_en_1_T | fsm_output_T [0] ;
  assign main_stage_en_1_C2 = or_tmp_62_C ;
  assign main_stage_en_1_X2 = or_tmp_62_X ;
  assign fsm_output_C2 [0] = or_tmp_62_C ;
  assign fsm_output_X2 [0] = or_tmp_62_X ;
  assign main_stage_en_1_R2 = ( or_tmp_62_R | or_tmp_62_C & fsm_output_T [0] ) & { 1{ fsm_output[0] != 1'b1 }} ;
  assign fsm_output_R2 [0] = ( or_tmp_62_R | or_tmp_62_C & main_stage_en_1_T ) & { 1{ main_stage_en_1 != 1'b1 }} ;
  assign _142_ = _048_ | chn_o_rsci_d_15_10_mx0c1;
  assign _142__S = 0 ;
  logic [0:0] _048__C0 ;
  logic [0:0] _048__R0 ;
  logic [0:0] _048__X0 ;
  logic [0:0] chn_o_rsci_d_15_10_mx0c1_C1 ;
  logic [0:0] chn_o_rsci_d_15_10_mx0c1_R1 ;
  logic [0:0] chn_o_rsci_d_15_10_mx0c1_X1 ;
  assign _142__T = _048__T | chn_o_rsci_d_15_10_mx0c1_T ;
  assign _048__C0 = _142__C ;
  assign _048__X0 = _142__X ;
  assign chn_o_rsci_d_15_10_mx0c1_C1 = _142__C ;
  assign chn_o_rsci_d_15_10_mx0c1_X1 = _142__X ;
  assign _048__R0 = ( _142__R | _142__C & chn_o_rsci_d_15_10_mx0c1_T ) & { 1{ chn_o_rsci_d_15_10_mx0c1 != 1'b1 }} ;
  assign chn_o_rsci_d_15_10_mx0c1_R1 = ( _142__R | _142__C & _048__T ) & { 1{ _048_ != 1'b1 }} ;
  assign _143_ = and_dcpl_13 | and_dcpl_15;
  assign _143__S = 0 ;
  logic [0:0] and_dcpl_13_C2 ;
  logic [0:0] and_dcpl_13_R2 ;
  logic [0:0] and_dcpl_13_X2 ;
  logic [0:0] and_dcpl_15_C1 ;
  logic [0:0] and_dcpl_15_R1 ;
  logic [0:0] and_dcpl_15_X1 ;
  assign _143__T = and_dcpl_13_T | and_dcpl_15_T ;
  assign and_dcpl_13_C2 = _143__C ;
  assign and_dcpl_13_X2 = _143__X ;
  assign and_dcpl_15_C1 = _143__C ;
  assign and_dcpl_15_X1 = _143__X ;
  assign and_dcpl_13_R2 = ( _143__R | _143__C & and_dcpl_15_T ) & { 1{ and_dcpl_15 != 1'b1 }} ;
  assign and_dcpl_15_R1 = ( _143__R | _143__C & and_dcpl_13_T ) & { 1{ and_dcpl_13 != 1'b1 }} ;
  assign _144_ = or_tmp_68 | main_stage_v_1_mx0c1;
  assign _144__S = 0 ;
  logic [0:0] or_tmp_68_C0 ;
  logic [0:0] or_tmp_68_R0 ;
  logic [0:0] or_tmp_68_X0 ;
  logic [0:0] main_stage_v_1_mx0c1_C1 ;
  logic [0:0] main_stage_v_1_mx0c1_R1 ;
  logic [0:0] main_stage_v_1_mx0c1_X1 ;
  assign _144__T = or_tmp_68_T | main_stage_v_1_mx0c1_T ;
  assign or_tmp_68_C0 = _144__C ;
  assign or_tmp_68_X0 = _144__X ;
  assign main_stage_v_1_mx0c1_C1 = _144__C ;
  assign main_stage_v_1_mx0c1_X1 = _144__X ;
  assign or_tmp_68_R0 = ( _144__R | _144__C & main_stage_v_1_mx0c1_T ) & { 1{ main_stage_v_1_mx0c1 != 1'b1 }} ;
  assign main_stage_v_1_mx0c1_R1 = ( _144__R | _144__C & or_tmp_68_T ) & { 1{ or_tmp_68 != 1'b1 }} ;
  assign _145_ = IsNaN_6U_10U_nor_tmp | nand_cse;
  assign _145__S = 0 ;
  logic [0:0] IsNaN_6U_10U_nor_tmp_C0 ;
  logic [0:0] IsNaN_6U_10U_nor_tmp_R0 ;
  logic [0:0] IsNaN_6U_10U_nor_tmp_X0 ;
  logic [0:0] nand_cse_C2 ;
  logic [0:0] nand_cse_R2 ;
  logic [0:0] nand_cse_X2 ;
  assign _145__T = IsNaN_6U_10U_nor_tmp_T | nand_cse_T ;
  assign IsNaN_6U_10U_nor_tmp_C0 = _145__C ;
  assign IsNaN_6U_10U_nor_tmp_X0 = _145__X ;
  assign nand_cse_C2 = _145__C ;
  assign nand_cse_X2 = _145__X ;
  assign IsNaN_6U_10U_nor_tmp_R0 = ( _145__R | _145__C & nand_cse_T ) & { 1{ nand_cse != 1'b1 }} ;
  assign nand_cse_R2 = ( _145__R | _145__C & IsNaN_6U_10U_nor_tmp_T ) & { 1{ IsNaN_6U_10U_nor_tmp != 1'b1 }} ;
  assign _146_ = _054_ | main_stage_v_2_mx0c1;
  assign _146__S = 0 ;
  logic [0:0] _054__C0 ;
  logic [0:0] _054__R0 ;
  logic [0:0] _054__X0 ;
  logic [0:0] main_stage_v_2_mx0c1_C1 ;
  logic [0:0] main_stage_v_2_mx0c1_R1 ;
  logic [0:0] main_stage_v_2_mx0c1_X1 ;
  assign _146__T = _054__T | main_stage_v_2_mx0c1_T ;
  assign _054__C0 = _146__C ;
  assign _054__X0 = _146__X ;
  assign main_stage_v_2_mx0c1_C1 = _146__C ;
  assign main_stage_v_2_mx0c1_X1 = _146__X ;
  assign _054__R0 = ( _146__R | _146__C & main_stage_v_2_mx0c1_T ) & { 1{ main_stage_v_2_mx0c1 != 1'b1 }} ;
  assign main_stage_v_2_mx0c1_R1 = ( _146__R | _146__C & _054__T ) & { 1{ _054_ != 1'b1 }} ;
  assign _147_ = _058_ | and_40_rgt;
  assign _147__S = 0 ;
  logic [0:0] _058__C0 ;
  logic [0:0] _058__R0 ;
  logic [0:0] _058__X0 ;
  logic [0:0] and_40_rgt_C0 ;
  logic [0:0] and_40_rgt_R0 ;
  logic [0:0] and_40_rgt_X0 ;
  assign _147__T = _058__T | and_40_rgt_T ;
  assign _058__C0 = _147__C ;
  assign _058__X0 = _147__X ;
  assign and_40_rgt_C0 = _147__C ;
  assign and_40_rgt_X0 = _147__X ;
  assign _058__R0 = ( _147__R | _147__C & and_40_rgt_T ) & { 1{ and_40_rgt != 1'b1 }} ;
  assign and_40_rgt_R0 = ( _147__R | _147__C & _058__T ) & { 1{ _058_ != 1'b1 }} ;
  assign _148_ = _000_ | FpMul_6U_10U_lor_1_lpi_1_dfm_st_3;
  assign _148__S = 0 ;
  logic [0:0] _000__C1 ;
  logic [0:0] _000__R1 ;
  logic [0:0] _000__X1 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_C1 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_R1 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_X1 ;
  assign _148__T = _000__T | FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_T ;
  assign _000__C1 = _148__C ;
  assign _000__X1 = _148__X ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_C1 = _148__C ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_X1 = _148__X ;
  assign _000__R1 = ( _148__R | _148__C & FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_T ) & { 1{ FpMul_6U_10U_lor_1_lpi_1_dfm_st_3 != 1'b1 }} ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_R1 = ( _148__R | _148__C & _000__T ) & { 1{ _000_ != 1'b1 }} ;
  assign _149_ = _148_ | _118_;
  assign _149__S = 0 ;
  logic [0:0] _148__C0 ;
  logic [0:0] _148__R0 ;
  logic [0:0] _148__X0 ;
  logic [0:0] _118__C0 ;
  logic [0:0] _118__R0 ;
  logic [0:0] _118__X0 ;
  assign _149__T = _148__T | _118__T ;
  assign _148__C0 = _149__C ;
  assign _148__X0 = _149__X ;
  assign _118__C0 = _149__C ;
  assign _118__X0 = _149__X ;
  assign _148__R0 = ( _149__R | _149__C & _118__T ) & { 1{ _118_ != 1'b1 }} ;
  assign _118__R0 = ( _149__R | _149__C & _148__T ) & { 1{ _148_ != 1'b1 }} ;
  assign or_68_cse = FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp | FpMul_6U_10U_oelse_1_acc_nl[7];
  assign or_68_cse_S = 0 ;
  logic [0:0] FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_C0 ;
  logic [0:0] FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_R0 ;
  logic [0:0] FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_X0 ;
  logic [7:0] FpMul_6U_10U_oelse_1_acc_nl_C0 ;
  logic [7:0] FpMul_6U_10U_oelse_1_acc_nl_R0 ;
  logic [7:0] FpMul_6U_10U_oelse_1_acc_nl_X0 ;
  assign or_68_cse_T = FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_T | FpMul_6U_10U_oelse_1_acc_nl_T [7] ;
  assign FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_C0 = or_68_cse_C ;
  assign FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_X0 = or_68_cse_X ;
  assign FpMul_6U_10U_oelse_1_acc_nl_C0 [7] = or_68_cse_C ;
  assign FpMul_6U_10U_oelse_1_acc_nl_X0 [7] = or_68_cse_X ;
  assign FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_R0 = ( or_68_cse_R | or_68_cse_C & FpMul_6U_10U_oelse_1_acc_nl_T [7] ) & { 1{ FpMul_6U_10U_oelse_1_acc_nl[7] != 1'b1 }} ;
  assign FpMul_6U_10U_oelse_1_acc_nl_R0 [7] = ( or_68_cse_R | or_68_cse_C & FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_T ) & { 1{ FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp != 1'b1 }} ;
  assign _150_ = _067_ | and_45_rgt;
  assign _150__S = 0 ;
  logic [0:0] _067__C0 ;
  logic [0:0] _067__R0 ;
  logic [0:0] _067__X0 ;
  logic [0:0] and_45_rgt_C0 ;
  logic [0:0] and_45_rgt_R0 ;
  logic [0:0] and_45_rgt_X0 ;
  assign _150__T = _067__T | and_45_rgt_T ;
  assign _067__C0 = _150__C ;
  assign _067__X0 = _150__X ;
  assign and_45_rgt_C0 = _150__C ;
  assign and_45_rgt_X0 = _150__X ;
  assign _067__R0 = ( _150__R | _150__C & and_45_rgt_T ) & { 1{ and_45_rgt != 1'b1 }} ;
  assign and_45_rgt_R0 = ( _150__R | _150__C & _067__T ) & { 1{ _067_ != 1'b1 }} ;
  assign _151_ = and_52_rgt | and_60_rgt;
  assign _151__S = 0 ;
  logic [0:0] and_52_rgt_C1 ;
  logic [0:0] and_52_rgt_R1 ;
  logic [0:0] and_52_rgt_X1 ;
  logic [0:0] and_60_rgt_C1 ;
  logic [0:0] and_60_rgt_R1 ;
  logic [0:0] and_60_rgt_X1 ;
  assign _151__T = and_52_rgt_T | and_60_rgt_T ;
  assign and_52_rgt_C1 = _151__C ;
  assign and_52_rgt_X1 = _151__X ;
  assign and_60_rgt_C1 = _151__C ;
  assign and_60_rgt_X1 = _151__X ;
  assign and_52_rgt_R1 = ( _151__R | _151__C & and_60_rgt_T ) & { 1{ and_60_rgt != 1'b1 }} ;
  assign and_60_rgt_R1 = ( _151__R | _151__C & and_52_rgt_T ) & { 1{ and_52_rgt != 1'b1 }} ;
  assign _152_ = _151_ | and_61_rgt;
  assign _152__S = 0 ;
  logic [0:0] _151__C0 ;
  logic [0:0] _151__R0 ;
  logic [0:0] _151__X0 ;
  logic [0:0] and_61_rgt_C1 ;
  logic [0:0] and_61_rgt_R1 ;
  logic [0:0] and_61_rgt_X1 ;
  assign _152__T = _151__T | and_61_rgt_T ;
  assign _151__C0 = _152__C ;
  assign _151__X0 = _152__X ;
  assign and_61_rgt_C1 = _152__C ;
  assign and_61_rgt_X1 = _152__X ;
  assign _151__R0 = ( _152__R | _152__C & and_61_rgt_T ) & { 1{ and_61_rgt != 1'b1 }} ;
  assign and_61_rgt_R1 = ( _152__R | _152__C & _151__T ) & { 1{ _151_ != 1'b1 }} ;
  assign _153_ = nand_6_cse | FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp;
  assign _153__S = 0 ;
  logic [0:0] nand_6_cse_C1 ;
  logic [0:0] nand_6_cse_R1 ;
  logic [0:0] nand_6_cse_X1 ;
  logic [0:0] FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_C1 ;
  logic [0:0] FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_R1 ;
  logic [0:0] FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_X1 ;
  assign _153__T = nand_6_cse_T | FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_T ;
  assign nand_6_cse_C1 = _153__C ;
  assign nand_6_cse_X1 = _153__X ;
  assign FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_C1 = _153__C ;
  assign FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_X1 = _153__X ;
  assign nand_6_cse_R1 = ( _153__R | _153__C & FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_T ) & { 1{ FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp != 1'b1 }} ;
  assign FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_R1 = ( _153__R | _153__C & nand_6_cse_T ) & { 1{ nand_6_cse != 1'b1 }} ;
  assign _154_ = _153_ | and_dcpl_7;
  assign _154__S = 0 ;
  logic [0:0] _153__C0 ;
  logic [0:0] _153__R0 ;
  logic [0:0] _153__X0 ;
  logic [0:0] and_dcpl_7_C1 ;
  logic [0:0] and_dcpl_7_R1 ;
  logic [0:0] and_dcpl_7_X1 ;
  assign _154__T = _153__T | and_dcpl_7_T ;
  assign _153__C0 = _154__C ;
  assign _153__X0 = _154__X ;
  assign and_dcpl_7_C1 = _154__C ;
  assign and_dcpl_7_X1 = _154__X ;
  assign _153__R0 = ( _154__R | _154__C & and_dcpl_7_T ) & { 1{ and_dcpl_7 != 1'b1 }} ;
  assign and_dcpl_7_R1 = ( _154__R | _154__C & _153__T ) & { 1{ _153_ != 1'b1 }} ;
  assign _155_ = _154_ | FpMul_6U_10U_oelse_1_acc_nl[7];
  assign _155__S = 0 ;
  assign { FpMul_6U_10U_oelse_1_acc_nl_R0 [0], FpMul_6U_10U_oelse_1_acc_nl_R0 [1], FpMul_6U_10U_oelse_1_acc_nl_R0 [2], FpMul_6U_10U_oelse_1_acc_nl_R0 [3], FpMul_6U_10U_oelse_1_acc_nl_R0 [4], FpMul_6U_10U_oelse_1_acc_nl_R0 [5], FpMul_6U_10U_oelse_1_acc_nl_R0 [6] } = 0;
  assign { FpMul_6U_10U_oelse_1_acc_nl_X0 [0], FpMul_6U_10U_oelse_1_acc_nl_X0 [1], FpMul_6U_10U_oelse_1_acc_nl_X0 [2], FpMul_6U_10U_oelse_1_acc_nl_X0 [3], FpMul_6U_10U_oelse_1_acc_nl_X0 [4], FpMul_6U_10U_oelse_1_acc_nl_X0 [5], FpMul_6U_10U_oelse_1_acc_nl_X0 [6] } = 0;
  assign { FpMul_6U_10U_oelse_1_acc_nl_C0 [0], FpMul_6U_10U_oelse_1_acc_nl_C0 [1], FpMul_6U_10U_oelse_1_acc_nl_C0 [2], FpMul_6U_10U_oelse_1_acc_nl_C0 [3], FpMul_6U_10U_oelse_1_acc_nl_C0 [4], FpMul_6U_10U_oelse_1_acc_nl_C0 [5], FpMul_6U_10U_oelse_1_acc_nl_C0 [6] } = 0;
  logic [0:0] _154__C0 ;
  logic [0:0] _154__R0 ;
  logic [0:0] _154__X0 ;
  logic [7:0] FpMul_6U_10U_oelse_1_acc_nl_C1 ;
  logic [7:0] FpMul_6U_10U_oelse_1_acc_nl_R1 ;
  logic [7:0] FpMul_6U_10U_oelse_1_acc_nl_X1 ;
  assign _155__T = _154__T | FpMul_6U_10U_oelse_1_acc_nl_T [7] ;
  assign _154__C0 = _155__C ;
  assign _154__X0 = _155__X ;
  assign FpMul_6U_10U_oelse_1_acc_nl_C1 [7] = _155__C ;
  assign FpMul_6U_10U_oelse_1_acc_nl_X1 [7] = _155__X ;
  assign _154__R0 = ( _155__R | _155__C & FpMul_6U_10U_oelse_1_acc_nl_T [7] ) & { 1{ FpMul_6U_10U_oelse_1_acc_nl[7] != 1'b1 }} ;
  assign FpMul_6U_10U_oelse_1_acc_nl_R1 [7] = ( _155__R | _155__C & _154__T ) & { 1{ _154_ != 1'b1 }} ;
  assign _156_ = _155_ | fsm_output[0];
  assign _156__S = 0 ;
  assign { fsm_output_R2 [1:1] } = 0;
  assign { fsm_output_X2 [1:1] } = 0;
  assign { fsm_output_C2 [1:1] } = 0;
  logic [0:0] _155__C0 ;
  logic [0:0] _155__R0 ;
  logic [0:0] _155__X0 ;
  logic [1:0] fsm_output_C3 ;
  logic [1:0] fsm_output_R3 ;
  logic [1:0] fsm_output_X3 ;
  assign _156__T = _155__T | fsm_output_T [0] ;
  assign _155__C0 = _156__C ;
  assign _155__X0 = _156__X ;
  assign fsm_output_C3 [0] = _156__C ;
  assign fsm_output_X3 [0] = _156__X ;
  assign _155__R0 = ( _156__R | _156__C & fsm_output_T [0] ) & { 1{ fsm_output[0] != 1'b1 }} ;
  assign fsm_output_R3 [0] = ( _156__R | _156__C & _155__T ) & { 1{ _155_ != 1'b1 }} ;
  assign or_nl = FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp | _123_;
  assign or_nl_S = 0 ;
  logic [0:0] FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_C1 ;
  logic [0:0] FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_R1 ;
  logic [0:0] FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_X1 ;
  logic [0:0] _123__C0 ;
  logic [0:0] _123__R0 ;
  logic [0:0] _123__X0 ;
  assign or_nl_T = FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_T | _123__T ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_C1 = or_nl_C ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_X1 = or_nl_X ;
  assign _123__C0 = or_nl_C ;
  assign _123__X0 = or_nl_X ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_R1 = ( or_nl_R | or_nl_C & _123__T ) & { 1{ _123_ != 1'b1 }} ;
  assign _123__R0 = ( or_nl_R | or_nl_C & FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_T ) & { 1{ FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp != 1'b1 }} ;
  assign _157_ = nor_cse | FpMul_6U_10U_oelse_1_acc_nl[7];
  assign _157__S = 0 ;
  assign { FpMul_6U_10U_oelse_1_acc_nl_R1 [0], FpMul_6U_10U_oelse_1_acc_nl_R1 [1], FpMul_6U_10U_oelse_1_acc_nl_R1 [2], FpMul_6U_10U_oelse_1_acc_nl_R1 [3], FpMul_6U_10U_oelse_1_acc_nl_R1 [4], FpMul_6U_10U_oelse_1_acc_nl_R1 [5], FpMul_6U_10U_oelse_1_acc_nl_R1 [6] } = 0;
  assign { FpMul_6U_10U_oelse_1_acc_nl_X1 [0], FpMul_6U_10U_oelse_1_acc_nl_X1 [1], FpMul_6U_10U_oelse_1_acc_nl_X1 [2], FpMul_6U_10U_oelse_1_acc_nl_X1 [3], FpMul_6U_10U_oelse_1_acc_nl_X1 [4], FpMul_6U_10U_oelse_1_acc_nl_X1 [5], FpMul_6U_10U_oelse_1_acc_nl_X1 [6] } = 0;
  assign { FpMul_6U_10U_oelse_1_acc_nl_C1 [0], FpMul_6U_10U_oelse_1_acc_nl_C1 [1], FpMul_6U_10U_oelse_1_acc_nl_C1 [2], FpMul_6U_10U_oelse_1_acc_nl_C1 [3], FpMul_6U_10U_oelse_1_acc_nl_C1 [4], FpMul_6U_10U_oelse_1_acc_nl_C1 [5], FpMul_6U_10U_oelse_1_acc_nl_C1 [6] } = 0;
  logic [0:0] nor_cse_C0 ;
  logic [0:0] nor_cse_R0 ;
  logic [0:0] nor_cse_X0 ;
  logic [7:0] FpMul_6U_10U_oelse_1_acc_nl_C2 ;
  logic [7:0] FpMul_6U_10U_oelse_1_acc_nl_R2 ;
  logic [7:0] FpMul_6U_10U_oelse_1_acc_nl_X2 ;
  assign _157__T = nor_cse_T | FpMul_6U_10U_oelse_1_acc_nl_T [7] ;
  assign nor_cse_C0 = _157__C ;
  assign nor_cse_X0 = _157__X ;
  assign FpMul_6U_10U_oelse_1_acc_nl_C2 [7] = _157__C ;
  assign FpMul_6U_10U_oelse_1_acc_nl_X2 [7] = _157__X ;
  assign nor_cse_R0 = ( _157__R | _157__C & FpMul_6U_10U_oelse_1_acc_nl_T [7] ) & { 1{ FpMul_6U_10U_oelse_1_acc_nl[7] != 1'b1 }} ;
  assign FpMul_6U_10U_oelse_1_acc_nl_R2 [7] = ( _157__R | _157__C & nor_cse_T ) & { 1{ nor_cse != 1'b1 }} ;
  assign _158_ = _157_ | FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp;
  assign _158__S = 0 ;
  logic [0:0] _157__C0 ;
  logic [0:0] _157__R0 ;
  logic [0:0] _157__X0 ;
  logic [0:0] FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_C2 ;
  logic [0:0] FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_R2 ;
  logic [0:0] FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_X2 ;
  assign _158__T = _157__T | FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_T ;
  assign _157__C0 = _158__C ;
  assign _157__X0 = _158__X ;
  assign FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_C2 = _158__C ;
  assign FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_X2 = _158__X ;
  assign _157__R0 = ( _158__R | _158__C & FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_T ) & { 1{ FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp != 1'b1 }} ;
  assign FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_R2 = ( _158__R | _158__C & _157__T ) & { 1{ _157_ != 1'b1 }} ;
  assign or_2_nl = _158_ | nand_6_cse;
  assign or_2_nl_S = 0 ;
  logic [0:0] _158__C0 ;
  logic [0:0] _158__R0 ;
  logic [0:0] _158__X0 ;
  logic [0:0] nand_6_cse_C2 ;
  logic [0:0] nand_6_cse_R2 ;
  logic [0:0] nand_6_cse_X2 ;
  assign or_2_nl_T = _158__T | nand_6_cse_T ;
  assign _158__C0 = or_2_nl_C ;
  assign _158__X0 = or_2_nl_X ;
  assign nand_6_cse_C2 = or_2_nl_C ;
  assign nand_6_cse_X2 = or_2_nl_X ;
  assign _158__R0 = ( or_2_nl_R | or_2_nl_C & nand_6_cse_T ) & { 1{ nand_6_cse != 1'b1 }} ;
  assign nand_6_cse_R2 = ( or_2_nl_R | or_2_nl_C & _158__T ) & { 1{ _158_ != 1'b1 }} ;
  assign _159_ = FpMul_6U_10U_p_mant_p1_mul_tmp[21] | _125_;
  assign _159__S = 0 ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_mul_tmp_C0 ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_mul_tmp_R0 ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_mul_tmp_X0 ;
  logic [0:0] _125__C0 ;
  logic [0:0] _125__R0 ;
  logic [0:0] _125__X0 ;
  assign _159__T = FpMul_6U_10U_p_mant_p1_mul_tmp_T [21] | _125__T ;
  assign FpMul_6U_10U_p_mant_p1_mul_tmp_C0 [21] = _159__C ;
  assign FpMul_6U_10U_p_mant_p1_mul_tmp_X0 [21] = _159__X ;
  assign _125__C0 = _159__C ;
  assign _125__X0 = _159__X ;
  assign FpMul_6U_10U_p_mant_p1_mul_tmp_R0 [21] = ( _159__R | _159__C & _125__T ) & { 1{ _125_ != 1'b1 }} ;
  assign _125__R0 = ( _159__R | _159__C & FpMul_6U_10U_p_mant_p1_mul_tmp_T [21] ) & { 1{ FpMul_6U_10U_p_mant_p1_mul_tmp[21] != 1'b1 }} ;
  assign _160_ = _148_ | _126_;
  assign _160__S = 0 ;
  logic [0:0] _148__C1 ;
  logic [0:0] _148__R1 ;
  logic [0:0] _148__X1 ;
  logic [0:0] _126__C0 ;
  logic [0:0] _126__R0 ;
  logic [0:0] _126__X0 ;
  assign _160__T = _148__T | _126__T ;
  assign _148__C1 = _160__C ;
  assign _148__X1 = _160__X ;
  assign _126__C0 = _160__C ;
  assign _126__X0 = _160__X ;
  assign _148__R1 = ( _160__R | _160__C & _126__T ) & { 1{ _126_ != 1'b1 }} ;
  assign _126__R0 = ( _160__R | _160__C & _148__T ) & { 1{ _148_ != 1'b1 }} ;
  assign _161_ = FpMul_6U_10U_or_2_cse | FpMul_6U_10U_p_mant_p1_sva_2[21];
  assign _161__S = 0 ;
  assign { FpMul_6U_10U_p_mant_p1_sva_2_R2 [0], FpMul_6U_10U_p_mant_p1_sva_2_R2 [1], FpMul_6U_10U_p_mant_p1_sva_2_R2 [2], FpMul_6U_10U_p_mant_p1_sva_2_R2 [3], FpMul_6U_10U_p_mant_p1_sva_2_R2 [4], FpMul_6U_10U_p_mant_p1_sva_2_R2 [5], FpMul_6U_10U_p_mant_p1_sva_2_R2 [6], FpMul_6U_10U_p_mant_p1_sva_2_R2 [7], FpMul_6U_10U_p_mant_p1_sva_2_R2 [8], FpMul_6U_10U_p_mant_p1_sva_2_R2 [9], FpMul_6U_10U_p_mant_p1_sva_2_R2 [10], FpMul_6U_10U_p_mant_p1_sva_2_R2 [11], FpMul_6U_10U_p_mant_p1_sva_2_R2 [12], FpMul_6U_10U_p_mant_p1_sva_2_R2 [13], FpMul_6U_10U_p_mant_p1_sva_2_R2 [14], FpMul_6U_10U_p_mant_p1_sva_2_R2 [15], FpMul_6U_10U_p_mant_p1_sva_2_R2 [16], FpMul_6U_10U_p_mant_p1_sva_2_R2 [17], FpMul_6U_10U_p_mant_p1_sva_2_R2 [18], FpMul_6U_10U_p_mant_p1_sva_2_R2 [19], FpMul_6U_10U_p_mant_p1_sva_2_R2 [20] } = 0;
  assign { FpMul_6U_10U_p_mant_p1_sva_2_X2 [0], FpMul_6U_10U_p_mant_p1_sva_2_X2 [1], FpMul_6U_10U_p_mant_p1_sva_2_X2 [2], FpMul_6U_10U_p_mant_p1_sva_2_X2 [3], FpMul_6U_10U_p_mant_p1_sva_2_X2 [4], FpMul_6U_10U_p_mant_p1_sva_2_X2 [5], FpMul_6U_10U_p_mant_p1_sva_2_X2 [6], FpMul_6U_10U_p_mant_p1_sva_2_X2 [7], FpMul_6U_10U_p_mant_p1_sva_2_X2 [8], FpMul_6U_10U_p_mant_p1_sva_2_X2 [9], FpMul_6U_10U_p_mant_p1_sva_2_X2 [10], FpMul_6U_10U_p_mant_p1_sva_2_X2 [11], FpMul_6U_10U_p_mant_p1_sva_2_X2 [12], FpMul_6U_10U_p_mant_p1_sva_2_X2 [13], FpMul_6U_10U_p_mant_p1_sva_2_X2 [14], FpMul_6U_10U_p_mant_p1_sva_2_X2 [15], FpMul_6U_10U_p_mant_p1_sva_2_X2 [16], FpMul_6U_10U_p_mant_p1_sva_2_X2 [17], FpMul_6U_10U_p_mant_p1_sva_2_X2 [18], FpMul_6U_10U_p_mant_p1_sva_2_X2 [19], FpMul_6U_10U_p_mant_p1_sva_2_X2 [20] } = 0;
  assign { FpMul_6U_10U_p_mant_p1_sva_2_C2 [0], FpMul_6U_10U_p_mant_p1_sva_2_C2 [1], FpMul_6U_10U_p_mant_p1_sva_2_C2 [2], FpMul_6U_10U_p_mant_p1_sva_2_C2 [3], FpMul_6U_10U_p_mant_p1_sva_2_C2 [4], FpMul_6U_10U_p_mant_p1_sva_2_C2 [5], FpMul_6U_10U_p_mant_p1_sva_2_C2 [6], FpMul_6U_10U_p_mant_p1_sva_2_C2 [7], FpMul_6U_10U_p_mant_p1_sva_2_C2 [8], FpMul_6U_10U_p_mant_p1_sva_2_C2 [9], FpMul_6U_10U_p_mant_p1_sva_2_C2 [10], FpMul_6U_10U_p_mant_p1_sva_2_C2 [11], FpMul_6U_10U_p_mant_p1_sva_2_C2 [12], FpMul_6U_10U_p_mant_p1_sva_2_C2 [13], FpMul_6U_10U_p_mant_p1_sva_2_C2 [14], FpMul_6U_10U_p_mant_p1_sva_2_C2 [15], FpMul_6U_10U_p_mant_p1_sva_2_C2 [16], FpMul_6U_10U_p_mant_p1_sva_2_C2 [17], FpMul_6U_10U_p_mant_p1_sva_2_C2 [18], FpMul_6U_10U_p_mant_p1_sva_2_C2 [19], FpMul_6U_10U_p_mant_p1_sva_2_C2 [20] } = 0;
  logic [0:0] FpMul_6U_10U_or_2_cse_C1 ;
  logic [0:0] FpMul_6U_10U_or_2_cse_R1 ;
  logic [0:0] FpMul_6U_10U_or_2_cse_X1 ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_sva_2_C3 ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_sva_2_R3 ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_sva_2_X3 ;
  assign _161__T = FpMul_6U_10U_or_2_cse_T | FpMul_6U_10U_p_mant_p1_sva_2_T [21] ;
  assign FpMul_6U_10U_or_2_cse_C1 = _161__C ;
  assign FpMul_6U_10U_or_2_cse_X1 = _161__X ;
  assign FpMul_6U_10U_p_mant_p1_sva_2_C3 [21] = _161__C ;
  assign FpMul_6U_10U_p_mant_p1_sva_2_X3 [21] = _161__X ;
  assign FpMul_6U_10U_or_2_cse_R1 = ( _161__R | _161__C & FpMul_6U_10U_p_mant_p1_sva_2_T [21] ) & { 1{ FpMul_6U_10U_p_mant_p1_sva_2[21] != 1'b1 }} ;
  assign FpMul_6U_10U_p_mant_p1_sva_2_R3 [21] = ( _161__R | _161__C & FpMul_6U_10U_or_2_cse_T ) & { 1{ FpMul_6U_10U_or_2_cse != 1'b1 }} ;
  assign _162_ = _161_ | _105_;
  assign _162__S = 0 ;
  logic [0:0] _161__C0 ;
  logic [0:0] _161__R0 ;
  logic [0:0] _161__X0 ;
  logic [0:0] _105__C1 ;
  logic [0:0] _105__R1 ;
  logic [0:0] _105__X1 ;
  assign _162__T = _161__T | _105__T ;
  assign _161__C0 = _162__C ;
  assign _161__X0 = _162__X ;
  assign _105__C1 = _162__C ;
  assign _105__X1 = _162__X ;
  assign _161__R0 = ( _162__R | _162__C & _105__T ) & { 1{ _105_ != 1'b1 }} ;
  assign _105__R1 = ( _162__R | _162__C & _161__T ) & { 1{ _161_ != 1'b1 }} ;
  assign _163_ = _162_ | FpMul_6U_10U_lor_1_lpi_1_dfm_st_4;
  assign _163__S = 0 ;
  logic [0:0] _162__C0 ;
  logic [0:0] _162__R0 ;
  logic [0:0] _162__X0 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_C0 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_R0 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_X0 ;
  assign _163__T = _162__T | FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_T ;
  assign _162__C0 = _163__C ;
  assign _162__X0 = _163__X ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_C0 = _163__C ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_X0 = _163__X ;
  assign _162__R0 = ( _163__R | _163__C & FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_T ) & { 1{ FpMul_6U_10U_lor_1_lpi_1_dfm_st_4 != 1'b1 }} ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_R0 = ( _163__R | _163__C & _162__T ) & { 1{ _162_ != 1'b1 }} ;
  assign _164_ = _163_ | _127_;
  assign _164__S = 0 ;
  logic [0:0] _163__C0 ;
  logic [0:0] _163__R0 ;
  logic [0:0] _163__X0 ;
  logic [0:0] _127__C0 ;
  logic [0:0] _127__R0 ;
  logic [0:0] _127__X0 ;
  assign _164__T = _163__T | _127__T ;
  assign _163__C0 = _164__C ;
  assign _163__X0 = _164__X ;
  assign _127__C0 = _164__C ;
  assign _127__X0 = _164__X ;
  assign _163__R0 = ( _164__R | _164__C & _127__T ) & { 1{ _127_ != 1'b1 }} ;
  assign _127__R0 = ( _164__R | _164__C & _163__T ) & { 1{ _163_ != 1'b1 }} ;
  assign _165_ = _127_ | FpMul_6U_10U_lor_1_lpi_1_dfm_st_4;
  assign _165__S = 0 ;
  logic [0:0] _127__C1 ;
  logic [0:0] _127__R1 ;
  logic [0:0] _127__X1 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_C1 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_R1 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_X1 ;
  assign _165__T = _127__T | FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_T ;
  assign _127__C1 = _165__C ;
  assign _127__X1 = _165__X ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_C1 = _165__C ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_X1 = _165__X ;
  assign _127__R1 = ( _165__R | _165__C & FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_T ) & { 1{ FpMul_6U_10U_lor_1_lpi_1_dfm_st_4 != 1'b1 }} ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_R1 = ( _165__R | _165__C & _127__T ) & { 1{ _127_ != 1'b1 }} ;
  assign _166_ = _165_ | _105_;
  assign _166__S = 0 ;
  logic [0:0] _165__C0 ;
  logic [0:0] _165__R0 ;
  logic [0:0] _165__X0 ;
  logic [0:0] _105__C2 ;
  logic [0:0] _105__R2 ;
  logic [0:0] _105__X2 ;
  assign _166__T = _165__T | _105__T ;
  assign _165__C0 = _166__C ;
  assign _165__X0 = _166__X ;
  assign _105__C2 = _166__C ;
  assign _105__X2 = _166__X ;
  assign _165__R0 = ( _166__R | _166__C & _105__T ) & { 1{ _105_ != 1'b1 }} ;
  assign _105__R2 = ( _166__R | _166__C & _165__T ) & { 1{ _165_ != 1'b1 }} ;
  assign _167_ = _166_ | chn_o_rsci_bawt;
  assign _167__S = 0 ;
  logic [0:0] _166__C0 ;
  logic [0:0] _166__R0 ;
  logic [0:0] _166__X0 ;
  logic [0:0] chn_o_rsci_bawt_C2 ;
  logic [0:0] chn_o_rsci_bawt_R2 ;
  logic [0:0] chn_o_rsci_bawt_X2 ;
  assign _167__T = _166__T | chn_o_rsci_bawt_T ;
  assign _166__C0 = _167__C ;
  assign _166__X0 = _167__X ;
  assign chn_o_rsci_bawt_C2 = _167__C ;
  assign chn_o_rsci_bawt_X2 = _167__X ;
  assign _166__R0 = ( _167__R | _167__C & chn_o_rsci_bawt_T ) & { 1{ chn_o_rsci_bawt != 1'b1 }} ;
  assign chn_o_rsci_bawt_R2 = ( _167__R | _167__C & _166__T ) & { 1{ _166_ != 1'b1 }} ;
  assign _168_ = _167_ | _128_;
  assign _168__S = 0 ;
  logic [0:0] _167__C0 ;
  logic [0:0] _167__R0 ;
  logic [0:0] _167__X0 ;
  logic [0:0] _128__C0 ;
  logic [0:0] _128__R0 ;
  logic [0:0] _128__X0 ;
  assign _168__T = _167__T | _128__T ;
  assign _167__C0 = _168__C ;
  assign _167__X0 = _168__X ;
  assign _128__C0 = _168__C ;
  assign _128__X0 = _168__X ;
  assign _167__R0 = ( _168__R | _168__C & _128__T ) & { 1{ _128_ != 1'b1 }} ;
  assign _128__R0 = ( _168__R | _168__C & _167__T ) & { 1{ _167_ != 1'b1 }} ;
  assign _169_ = FpMul_6U_10U_lor_1_lpi_1_dfm_st_4 | _105_;
  assign _169__S = 0 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_C2 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_R2 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_X2 ;
  logic [0:0] _105__C3 ;
  logic [0:0] _105__R3 ;
  logic [0:0] _105__X3 ;
  assign _169__T = FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_T | _105__T ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_C2 = _169__C ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_X2 = _169__X ;
  assign _105__C3 = _169__C ;
  assign _105__X3 = _169__X ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_R2 = ( _169__R | _169__C & _105__T ) & { 1{ _105_ != 1'b1 }} ;
  assign _105__R3 = ( _169__R | _169__C & FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_T ) & { 1{ FpMul_6U_10U_lor_1_lpi_1_dfm_st_4 != 1'b1 }} ;
  assign _170_ = _169_ | chn_o_rsci_bawt;
  assign _170__S = 0 ;
  logic [0:0] _169__C0 ;
  logic [0:0] _169__R0 ;
  logic [0:0] _169__X0 ;
  logic [0:0] chn_o_rsci_bawt_C3 ;
  logic [0:0] chn_o_rsci_bawt_R3 ;
  logic [0:0] chn_o_rsci_bawt_X3 ;
  assign _170__T = _169__T | chn_o_rsci_bawt_T ;
  assign _169__C0 = _170__C ;
  assign _169__X0 = _170__X ;
  assign chn_o_rsci_bawt_C3 = _170__C ;
  assign chn_o_rsci_bawt_X3 = _170__X ;
  assign _169__R0 = ( _170__R | _170__C & chn_o_rsci_bawt_T ) & { 1{ chn_o_rsci_bawt != 1'b1 }} ;
  assign chn_o_rsci_bawt_R3 = ( _170__R | _170__C & _169__T ) & { 1{ _169_ != 1'b1 }} ;
  assign _171_ = _170_ | _128_;
  assign _171__S = 0 ;
  logic [0:0] _170__C0 ;
  logic [0:0] _170__R0 ;
  logic [0:0] _170__X0 ;
  logic [0:0] _128__C1 ;
  logic [0:0] _128__R1 ;
  logic [0:0] _128__X1 ;
  assign _171__T = _170__T | _128__T ;
  assign _170__C0 = _171__C ;
  assign _170__X0 = _171__X ;
  assign _128__C1 = _171__C ;
  assign _128__X1 = _171__X ;
  assign _170__R0 = ( _171__R | _171__C & _128__T ) & { 1{ _128_ != 1'b1 }} ;
  assign _128__R1 = ( _171__R | _171__C & _170__T ) & { 1{ _170_ != 1'b1 }} ;
  assign _172_ = nor_cse | _129_;
  assign _172__S = 0 ;
  logic [0:0] nor_cse_C1 ;
  logic [0:0] nor_cse_R1 ;
  logic [0:0] nor_cse_X1 ;
  logic [0:0] _129__C0 ;
  logic [0:0] _129__R0 ;
  logic [0:0] _129__X0 ;
  assign _172__T = nor_cse_T | _129__T ;
  assign nor_cse_C1 = _172__C ;
  assign nor_cse_X1 = _172__X ;
  assign _129__C0 = _172__C ;
  assign _129__X0 = _172__X ;
  assign nor_cse_R1 = ( _172__R | _172__C & _129__T ) & { 1{ _129_ != 1'b1 }} ;
  assign _129__R0 = ( _172__R | _172__C & nor_cse_T ) & { 1{ nor_cse != 1'b1 }} ;
  assign _173_ = _172_ | FpMul_6U_10U_oelse_1_acc_nl[7];
  assign _173__S = 0 ;
  assign { FpMul_6U_10U_oelse_1_acc_nl_R2 [0], FpMul_6U_10U_oelse_1_acc_nl_R2 [1], FpMul_6U_10U_oelse_1_acc_nl_R2 [2], FpMul_6U_10U_oelse_1_acc_nl_R2 [3], FpMul_6U_10U_oelse_1_acc_nl_R2 [4], FpMul_6U_10U_oelse_1_acc_nl_R2 [5], FpMul_6U_10U_oelse_1_acc_nl_R2 [6] } = 0;
  assign { FpMul_6U_10U_oelse_1_acc_nl_X2 [0], FpMul_6U_10U_oelse_1_acc_nl_X2 [1], FpMul_6U_10U_oelse_1_acc_nl_X2 [2], FpMul_6U_10U_oelse_1_acc_nl_X2 [3], FpMul_6U_10U_oelse_1_acc_nl_X2 [4], FpMul_6U_10U_oelse_1_acc_nl_X2 [5], FpMul_6U_10U_oelse_1_acc_nl_X2 [6] } = 0;
  assign { FpMul_6U_10U_oelse_1_acc_nl_C2 [0], FpMul_6U_10U_oelse_1_acc_nl_C2 [1], FpMul_6U_10U_oelse_1_acc_nl_C2 [2], FpMul_6U_10U_oelse_1_acc_nl_C2 [3], FpMul_6U_10U_oelse_1_acc_nl_C2 [4], FpMul_6U_10U_oelse_1_acc_nl_C2 [5], FpMul_6U_10U_oelse_1_acc_nl_C2 [6] } = 0;
  logic [0:0] _172__C0 ;
  logic [0:0] _172__R0 ;
  logic [0:0] _172__X0 ;
  logic [7:0] FpMul_6U_10U_oelse_1_acc_nl_C3 ;
  logic [7:0] FpMul_6U_10U_oelse_1_acc_nl_R3 ;
  logic [7:0] FpMul_6U_10U_oelse_1_acc_nl_X3 ;
  assign _173__T = _172__T | FpMul_6U_10U_oelse_1_acc_nl_T [7] ;
  assign _172__C0 = _173__C ;
  assign _172__X0 = _173__X ;
  assign FpMul_6U_10U_oelse_1_acc_nl_C3 [7] = _173__C ;
  assign FpMul_6U_10U_oelse_1_acc_nl_X3 [7] = _173__X ;
  assign _172__R0 = ( _173__R | _173__C & FpMul_6U_10U_oelse_1_acc_nl_T [7] ) & { 1{ FpMul_6U_10U_oelse_1_acc_nl[7] != 1'b1 }} ;
  assign FpMul_6U_10U_oelse_1_acc_nl_R3 [7] = ( _173__R | _173__C & _172__T ) & { 1{ _172_ != 1'b1 }} ;
  assign _174_ = _173_ | FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp;
  assign _174__S = 0 ;
  logic [0:0] _173__C0 ;
  logic [0:0] _173__R0 ;
  logic [0:0] _173__X0 ;
  logic [0:0] FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_C3 ;
  logic [0:0] FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_R3 ;
  logic [0:0] FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_X3 ;
  assign _174__T = _173__T | FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_T ;
  assign _173__C0 = _174__C ;
  assign _173__X0 = _174__X ;
  assign FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_C3 = _174__C ;
  assign FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_X3 = _174__X ;
  assign _173__R0 = ( _174__R | _174__C & FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_T ) & { 1{ FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp != 1'b1 }} ;
  assign FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_R3 = ( _174__R | _174__C & _173__T ) & { 1{ _173_ != 1'b1 }} ;
  assign or_38_nl = _174_ | nand_6_cse;
  assign or_38_nl_S = 0 ;
  logic [0:0] _174__C0 ;
  logic [0:0] _174__R0 ;
  logic [0:0] _174__X0 ;
  logic [0:0] nand_6_cse_C3 ;
  logic [0:0] nand_6_cse_R3 ;
  logic [0:0] nand_6_cse_X3 ;
  assign or_38_nl_T = _174__T | nand_6_cse_T ;
  assign _174__C0 = or_38_nl_C ;
  assign _174__X0 = or_38_nl_X ;
  assign nand_6_cse_C3 = or_38_nl_C ;
  assign nand_6_cse_X3 = or_38_nl_X ;
  assign _174__R0 = ( or_38_nl_R | or_38_nl_C & nand_6_cse_T ) & { 1{ nand_6_cse != 1'b1 }} ;
  assign nand_6_cse_R3 = ( or_38_nl_R | or_38_nl_C & _174__T ) & { 1{ _174_ != 1'b1 }} ;
  assign or_tmp_49 = FpMul_6U_10U_lor_1_lpi_1_dfm_st_3 | nand_7_cse;
  assign or_tmp_49_S = 0 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_C2 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_R2 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_X2 ;
  logic [0:0] nand_7_cse_C0 ;
  logic [0:0] nand_7_cse_R0 ;
  logic [0:0] nand_7_cse_X0 ;
  assign or_tmp_49_T = FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_T | nand_7_cse_T ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_C2 = or_tmp_49_C ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_X2 = or_tmp_49_X ;
  assign nand_7_cse_C0 = or_tmp_49_C ;
  assign nand_7_cse_X0 = or_tmp_49_X ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_R2 = ( or_tmp_49_R | or_tmp_49_C & nand_7_cse_T ) & { 1{ nand_7_cse != 1'b1 }} ;
  assign nand_7_cse_R0 = ( or_tmp_49_R | or_tmp_49_C & FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_T ) & { 1{ FpMul_6U_10U_lor_1_lpi_1_dfm_st_3 != 1'b1 }} ;
  assign _175_ = _076_ | _077_;
  assign _175__S = 0 ;
  logic [0:0] _076__C0 ;
  logic [0:0] _076__R0 ;
  logic [0:0] _076__X0 ;
  logic [0:0] _077__C0 ;
  logic [0:0] _077__R0 ;
  logic [0:0] _077__X0 ;
  assign _175__T = _076__T | _077__T ;
  assign _076__C0 = _175__C ;
  assign _076__X0 = _175__X ;
  assign _077__C0 = _175__C ;
  assign _077__X0 = _175__X ;
  assign _076__R0 = ( _175__R | _175__C & _077__T ) & { 1{ _077_ != 1'b1 }} ;
  assign _077__R0 = ( _175__R | _175__C & _076__T ) & { 1{ _076_ != 1'b1 }} ;
  assign _176_ = _175_ | _078_;
  assign _176__S = 0 ;
  logic [0:0] _175__C0 ;
  logic [0:0] _175__R0 ;
  logic [0:0] _175__X0 ;
  logic [0:0] _078__C0 ;
  logic [0:0] _078__R0 ;
  logic [0:0] _078__X0 ;
  assign _176__T = _175__T | _078__T ;
  assign _175__C0 = _176__C ;
  assign _175__X0 = _176__X ;
  assign _078__C0 = _176__C ;
  assign _078__X0 = _176__X ;
  assign _175__R0 = ( _176__R | _176__C & _078__T ) & { 1{ _078_ != 1'b1 }} ;
  assign _078__R0 = ( _176__R | _176__C & _175__T ) & { 1{ _175_ != 1'b1 }} ;
  assign _177_ = _079_ | _080_;
  assign _177__S = 0 ;
  logic [5:0] _079__C0 ;
  logic [5:0] _079__R0 ;
  logic [5:0] _079__X0 ;
  logic [5:0] _080__C0 ;
  logic [5:0] _080__R0 ;
  logic [5:0] _080__X0 ;
  assign _177__T = _079__T | _080__T ;
  assign _079__C0 = _177__C ;
  assign _079__X0 = _177__X ;
  assign _080__C0 = _177__C ;
  assign _080__X0 = _177__X ;
  assign _079__R0 = ( _177__R | _177__C & _080__T ) & { 6{ _080_ != 6'b111111 }} ;
  assign _080__R0 = ( _177__R | _177__C & _079__T ) & { 6{ _079_ != 6'b111111 }} ;
  assign FpMul_6U_10U_o_expo_lpi_1_dfm = _177_ | _081_;
  assign FpMul_6U_10U_o_expo_lpi_1_dfm_S = 0 ;
  logic [5:0] _177__C0 ;
  logic [5:0] _177__R0 ;
  logic [5:0] _177__X0 ;
  logic [5:0] _081__C0 ;
  logic [5:0] _081__R0 ;
  logic [5:0] _081__X0 ;
  assign FpMul_6U_10U_o_expo_lpi_1_dfm_T = _177__T | _081__T ;
  assign _177__C0 = FpMul_6U_10U_o_expo_lpi_1_dfm_C ;
  assign _177__X0 = FpMul_6U_10U_o_expo_lpi_1_dfm_X ;
  assign _081__C0 = FpMul_6U_10U_o_expo_lpi_1_dfm_C ;
  assign _081__X0 = FpMul_6U_10U_o_expo_lpi_1_dfm_X ;
  assign _177__R0 = ( FpMul_6U_10U_o_expo_lpi_1_dfm_R | FpMul_6U_10U_o_expo_lpi_1_dfm_C & _081__T ) & { 6{ _081_ != 6'b111111 }} ;
  assign _081__R0 = ( FpMul_6U_10U_o_expo_lpi_1_dfm_R | FpMul_6U_10U_o_expo_lpi_1_dfm_C & _177__T ) & { 6{ _177_ != 6'b111111 }} ;
  assign _178_ = and_dcpl_7 | _105_;
  assign _178__S = 0 ;
  logic [0:0] and_dcpl_7_C2 ;
  logic [0:0] and_dcpl_7_R2 ;
  logic [0:0] and_dcpl_7_X2 ;
  logic [0:0] _105__C4 ;
  logic [0:0] _105__R4 ;
  logic [0:0] _105__X4 ;
  assign _178__T = and_dcpl_7_T | _105__T ;
  assign and_dcpl_7_C2 = _178__C ;
  assign and_dcpl_7_X2 = _178__X ;
  assign _105__C4 = _178__C ;
  assign _105__X4 = _178__X ;
  assign and_dcpl_7_R2 = ( _178__R | _178__C & _105__T ) & { 1{ _105_ != 1'b1 }} ;
  assign _105__R4 = ( _178__R | _178__C & and_dcpl_7_T ) & { 1{ and_dcpl_7 != 1'b1 }} ;
  assign FpMul_6U_10U_or_2_cse = IsNaN_6U_10U_1_land_lpi_1_dfm_4 | IsNaN_6U_10U_land_lpi_1_dfm_4;
  assign FpMul_6U_10U_or_2_cse_S = 0 ;
  logic [0:0] IsNaN_6U_10U_1_land_lpi_1_dfm_4_C1 ;
  logic [0:0] IsNaN_6U_10U_1_land_lpi_1_dfm_4_R1 ;
  logic [0:0] IsNaN_6U_10U_1_land_lpi_1_dfm_4_X1 ;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_4_C2 ;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_4_R2 ;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_4_X2 ;
  assign FpMul_6U_10U_or_2_cse_T = IsNaN_6U_10U_1_land_lpi_1_dfm_4_T | IsNaN_6U_10U_land_lpi_1_dfm_4_T ;
  assign IsNaN_6U_10U_1_land_lpi_1_dfm_4_C1 = FpMul_6U_10U_or_2_cse_C ;
  assign IsNaN_6U_10U_1_land_lpi_1_dfm_4_X1 = FpMul_6U_10U_or_2_cse_X ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_4_C2 = FpMul_6U_10U_or_2_cse_C ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_4_X2 = FpMul_6U_10U_or_2_cse_X ;
  assign IsNaN_6U_10U_1_land_lpi_1_dfm_4_R1 = ( FpMul_6U_10U_or_2_cse_R | FpMul_6U_10U_or_2_cse_C & IsNaN_6U_10U_land_lpi_1_dfm_4_T ) & { 1{ IsNaN_6U_10U_land_lpi_1_dfm_4 != 1'b1 }} ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_4_R2 = ( FpMul_6U_10U_or_2_cse_R | FpMul_6U_10U_or_2_cse_C & IsNaN_6U_10U_1_land_lpi_1_dfm_4_T ) & { 1{ IsNaN_6U_10U_1_land_lpi_1_dfm_4 != 1'b1 }} ;
  assign or_5_cse = chn_o_rsci_bawt | _128_;
  assign or_5_cse_S = 0 ;
  logic [0:0] chn_o_rsci_bawt_C4 ;
  logic [0:0] chn_o_rsci_bawt_R4 ;
  logic [0:0] chn_o_rsci_bawt_X4 ;
  logic [0:0] _128__C2 ;
  logic [0:0] _128__R2 ;
  logic [0:0] _128__X2 ;
  assign or_5_cse_T = chn_o_rsci_bawt_T | _128__T ;
  assign chn_o_rsci_bawt_C4 = or_5_cse_C ;
  assign chn_o_rsci_bawt_X4 = or_5_cse_X ;
  assign _128__C2 = or_5_cse_C ;
  assign _128__X2 = or_5_cse_X ;
  assign chn_o_rsci_bawt_R4 = ( or_5_cse_R | or_5_cse_C & _128__T ) & { 1{ _128_ != 1'b1 }} ;
  assign _128__R2 = ( or_5_cse_R | or_5_cse_C & chn_o_rsci_bawt_T ) & { 1{ chn_o_rsci_bawt != 1'b1 }} ;
  assign _179_ = _169_ | _127_;
  assign _179__S = 0 ;
  logic [0:0] _169__C1 ;
  logic [0:0] _169__R1 ;
  logic [0:0] _169__X1 ;
  logic [0:0] _127__C2 ;
  logic [0:0] _127__R2 ;
  logic [0:0] _127__X2 ;
  assign _179__T = _169__T | _127__T ;
  assign _169__C1 = _179__C ;
  assign _169__X1 = _179__X ;
  assign _127__C2 = _179__C ;
  assign _127__X2 = _179__X ;
  assign _169__R1 = ( _179__R | _179__C & _127__T ) & { 1{ _127_ != 1'b1 }} ;
  assign _127__R2 = ( _179__R | _179__C & _169__T ) & { 1{ _169_ != 1'b1 }} ;
  assign or_65_cse = FpMul_6U_10U_lor_1_lpi_1_dfm_st_3 | _118_;
  assign or_65_cse_S = 0 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_C3 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_R3 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_X3 ;
  logic [0:0] _118__C1 ;
  logic [0:0] _118__R1 ;
  logic [0:0] _118__X1 ;
  assign or_65_cse_T = FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_T | _118__T ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_C3 = or_65_cse_C ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_X3 = or_65_cse_X ;
  assign _118__C1 = or_65_cse_C ;
  assign _118__X1 = or_65_cse_X ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_R3 = ( or_65_cse_R | or_65_cse_C & _118__T ) & { 1{ _118_ != 1'b1 }} ;
  assign _118__R1 = ( or_65_cse_R | or_65_cse_C & FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_T ) & { 1{ FpMul_6U_10U_lor_1_lpi_1_dfm_st_3 != 1'b1 }} ;
  assign or_25_nl = nor_cse | nor_tmp_11;
  assign or_25_nl_S = 0 ;
  logic [0:0] nor_cse_C2 ;
  logic [0:0] nor_cse_R2 ;
  logic [0:0] nor_cse_X2 ;
  logic [0:0] nor_tmp_11_C1 ;
  logic [0:0] nor_tmp_11_R1 ;
  logic [0:0] nor_tmp_11_X1 ;
  assign or_25_nl_T = nor_cse_T | nor_tmp_11_T ;
  assign nor_cse_C2 = or_25_nl_C ;
  assign nor_cse_X2 = or_25_nl_X ;
  assign nor_tmp_11_C1 = or_25_nl_C ;
  assign nor_tmp_11_X1 = or_25_nl_X ;
  assign nor_cse_R2 = ( or_25_nl_R | or_25_nl_C & nor_tmp_11_T ) & { 1{ nor_tmp_11 != 1'b1 }} ;
  assign nor_tmp_11_R1 = ( or_25_nl_R | or_25_nl_C & nor_cse_T ) & { 1{ nor_cse != 1'b1 }} ;
  assign _180_ = reg_chn_o_rsci_ld_core_psct_cse | _131_;
  assign _180__S = 0 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C3 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R3 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X3 ;
  logic [0:0] _131__C0 ;
  logic [0:0] _131__R0 ;
  logic [0:0] _131__X0 ;
  assign _180__T = reg_chn_o_rsci_ld_core_psct_cse_T | _131__T ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C3 = _180__C ;
  assign reg_chn_o_rsci_ld_core_psct_cse_X3 = _180__X ;
  assign _131__C0 = _180__C ;
  assign _131__X0 = _180__X ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R3 = ( _180__R | _180__C & _131__T ) & { 1{ _131_ != 1'b1 }} ;
  assign _131__R0 = ( _180__R | _180__C & reg_chn_o_rsci_ld_core_psct_cse_T ) & { 1{ reg_chn_o_rsci_ld_core_psct_cse != 1'b1 }} ;
  assign _181_ = _082_ | and_dcpl_28;
  assign _181__S = 0 ;
  logic [0:0] _082__C0 ;
  logic [0:0] _082__R0 ;
  logic [0:0] _082__X0 ;
  logic [0:0] and_dcpl_28_C0 ;
  logic [0:0] and_dcpl_28_R0 ;
  logic [0:0] and_dcpl_28_X0 ;
  assign _181__T = _082__T | and_dcpl_28_T ;
  assign _082__C0 = _181__C ;
  assign _082__X0 = _181__X ;
  assign and_dcpl_28_C0 = _181__C ;
  assign and_dcpl_28_X0 = _181__X ;
  assign _082__R0 = ( _181__R | _181__C & and_dcpl_28_T ) & { 1{ and_dcpl_28 != 1'b1 }} ;
  assign and_dcpl_28_R0 = ( _181__R | _181__C & _082__T ) & { 1{ _082_ != 1'b1 }} ;
  assign _182_ = reg_chn_o_rsci_ld_core_psct_cse | _133_;
  assign _182__S = 0 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C4 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R4 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X4 ;
  logic [0:0] _133__C0 ;
  logic [0:0] _133__R0 ;
  logic [0:0] _133__X0 ;
  assign _182__T = reg_chn_o_rsci_ld_core_psct_cse_T | _133__T ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C4 = _182__C ;
  assign reg_chn_o_rsci_ld_core_psct_cse_X4 = _182__X ;
  assign _133__C0 = _182__C ;
  assign _133__X0 = _182__X ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R4 = ( _182__R | _182__C & _133__T ) & { 1{ _133_ != 1'b1 }} ;
  assign _133__R0 = ( _182__R | _182__C & reg_chn_o_rsci_ld_core_psct_cse_T ) & { 1{ reg_chn_o_rsci_ld_core_psct_cse != 1'b1 }} ;
  assign _183_ = nor_cse | IsNaN_6U_10U_1_land_lpi_1_dfm_3;
  assign _183__S = 0 ;
  logic [0:0] nor_cse_C3 ;
  logic [0:0] nor_cse_R3 ;
  logic [0:0] nor_cse_X3 ;
  logic [0:0] IsNaN_6U_10U_1_land_lpi_1_dfm_3_C0 ;
  logic [0:0] IsNaN_6U_10U_1_land_lpi_1_dfm_3_R0 ;
  logic [0:0] IsNaN_6U_10U_1_land_lpi_1_dfm_3_X0 ;
  assign _183__T = nor_cse_T | IsNaN_6U_10U_1_land_lpi_1_dfm_3_T ;
  assign nor_cse_C3 = _183__C ;
  assign nor_cse_X3 = _183__X ;
  assign IsNaN_6U_10U_1_land_lpi_1_dfm_3_C0 = _183__C ;
  assign IsNaN_6U_10U_1_land_lpi_1_dfm_3_X0 = _183__X ;
  assign nor_cse_R3 = ( _183__R | _183__C & IsNaN_6U_10U_1_land_lpi_1_dfm_3_T ) & { 1{ IsNaN_6U_10U_1_land_lpi_1_dfm_3 != 1'b1 }} ;
  assign IsNaN_6U_10U_1_land_lpi_1_dfm_3_R0 = ( _183__R | _183__C & nor_cse_T ) & { 1{ nor_cse != 1'b1 }} ;
  assign _184_ = _183_ | IsNaN_6U_10U_land_lpi_1_dfm_st_3;
  assign _184__S = 0 ;
  logic [0:0] _183__C0 ;
  logic [0:0] _183__R0 ;
  logic [0:0] _183__X0 ;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_st_3_C2 ;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_st_3_R2 ;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_st_3_X2 ;
  assign _184__T = _183__T | IsNaN_6U_10U_land_lpi_1_dfm_st_3_T ;
  assign _183__C0 = _184__C ;
  assign _183__X0 = _184__X ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_st_3_C2 = _184__C ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_st_3_X2 = _184__X ;
  assign _183__R0 = ( _184__R | _184__C & IsNaN_6U_10U_land_lpi_1_dfm_st_3_T ) & { 1{ IsNaN_6U_10U_land_lpi_1_dfm_st_3 != 1'b1 }} ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_st_3_R2 = ( _184__R | _184__C & _183__T ) & { 1{ _183_ != 1'b1 }} ;
  assign or_35_nl = _184_ | _000_;
  assign or_35_nl_S = 0 ;
  logic [0:0] _184__C0 ;
  logic [0:0] _184__R0 ;
  logic [0:0] _184__X0 ;
  logic [0:0] _000__C2 ;
  logic [0:0] _000__R2 ;
  logic [0:0] _000__X2 ;
  assign or_35_nl_T = _184__T | _000__T ;
  assign _184__C0 = or_35_nl_C ;
  assign _184__X0 = or_35_nl_X ;
  assign _000__C2 = or_35_nl_C ;
  assign _000__X2 = or_35_nl_X ;
  assign _184__R0 = ( or_35_nl_R | or_35_nl_C & _000__T ) & { 1{ _000_ != 1'b1 }} ;
  assign _000__R2 = ( or_35_nl_R | or_35_nl_C & _184__T ) & { 1{ _184_ != 1'b1 }} ;
  assign _185_ = FpMul_6U_10U_or_2_cse | _105_;
  assign _185__S = 0 ;
  logic [0:0] FpMul_6U_10U_or_2_cse_C2 ;
  logic [0:0] FpMul_6U_10U_or_2_cse_R2 ;
  logic [0:0] FpMul_6U_10U_or_2_cse_X2 ;
  logic [0:0] _105__C5 ;
  logic [0:0] _105__R5 ;
  logic [0:0] _105__X5 ;
  assign _185__T = FpMul_6U_10U_or_2_cse_T | _105__T ;
  assign FpMul_6U_10U_or_2_cse_C2 = _185__C ;
  assign FpMul_6U_10U_or_2_cse_X2 = _185__X ;
  assign _105__C5 = _185__C ;
  assign _105__X5 = _185__X ;
  assign FpMul_6U_10U_or_2_cse_R2 = ( _185__R | _185__C & _105__T ) & { 1{ _105_ != 1'b1 }} ;
  assign _105__R5 = ( _185__R | _185__C & FpMul_6U_10U_or_2_cse_T ) & { 1{ FpMul_6U_10U_or_2_cse != 1'b1 }} ;
  assign _186_ = _098_ | IsNaN_6U_10U_nor_tmp;
  assign _186__S = 0 ;
  logic [0:0] _098__C0 ;
  logic [0:0] _098__R0 ;
  logic [0:0] _098__X0 ;
  logic [0:0] IsNaN_6U_10U_nor_tmp_C1 ;
  logic [0:0] IsNaN_6U_10U_nor_tmp_R1 ;
  logic [0:0] IsNaN_6U_10U_nor_tmp_X1 ;
  assign _186__T = _098__T | IsNaN_6U_10U_nor_tmp_T ;
  assign _098__C0 = _186__C ;
  assign _098__X0 = _186__X ;
  assign IsNaN_6U_10U_nor_tmp_C1 = _186__C ;
  assign IsNaN_6U_10U_nor_tmp_X1 = _186__X ;
  assign _098__R0 = ( _186__R | _186__C & IsNaN_6U_10U_nor_tmp_T ) & { 1{ IsNaN_6U_10U_nor_tmp != 1'b1 }} ;
  assign IsNaN_6U_10U_nor_tmp_R1 = ( _186__R | _186__C & _098__T ) & { 1{ _098_ != 1'b1 }} ;
  assign FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp = _135_ | _136_;
  assign FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_S = 0 ;
  logic [0:0] _135__C0 ;
  logic [0:0] _135__R0 ;
  logic [0:0] _135__X0 ;
  logic [0:0] _136__C0 ;
  logic [0:0] _136__R0 ;
  logic [0:0] _136__X0 ;
  assign FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_T = _135__T | _136__T ;
  assign _135__C0 = FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_C ;
  assign _135__X0 = FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_X ;
  assign _136__C0 = FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_C ;
  assign _136__X0 = FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_X ;
  assign _135__R0 = ( FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_R | FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_C & _136__T ) & { 1{ _136_ != 1'b1 }} ;
  assign _136__R0 = ( FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_R | FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_C & _135__T ) & { 1{ _135_ != 1'b1 }} ;
  assign _187_ = _088_ | FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0[0];
  assign _187__S = 0 ;
  logic [0:0] _088__C0 ;
  logic [0:0] _088__R0 ;
  logic [0:0] _088__X0 ;
  assign _187__T = _088__T | FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_T [0] ;
  assign _088__C0 = _187__C ;
  assign _088__X0 = _187__X ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C1 [0] = _187__C ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X1 [0] = _187__X ;
  assign _088__R0 = ( _187__R | _187__C & FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_T [0] ) & { 1{ FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0[0] != 1'b1 }} ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R1 [0] = ( _187__R | _187__C & _088__T ) & { 1{ _088_ != 1'b1 }} ;
  assign _188_ = _187_ | FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0[1];
  assign _188__S = 0 ;
  logic [0:0] _187__C0 ;
  logic [0:0] _187__R0 ;
  logic [0:0] _187__X0 ;
  assign _188__T = _187__T | FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_T [1] ;
  assign _187__C0 = _188__C ;
  assign _187__X0 = _188__X ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C1 [1] = _188__C ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X1 [1] = _188__X ;
  assign _187__R0 = ( _188__R | _188__C & FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_T [1] ) & { 1{ FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0[1] != 1'b1 }} ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R1 [1] = ( _188__R | _188__C & _187__T ) & { 1{ _187_ != 1'b1 }} ;
  assign _189_ = _188_ | FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0[2];
  assign _189__S = 0 ;
  logic [0:0] _188__C0 ;
  logic [0:0] _188__R0 ;
  logic [0:0] _188__X0 ;
  assign _189__T = _188__T | FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_T [2] ;
  assign _188__C0 = _189__C ;
  assign _188__X0 = _189__X ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C1 [2] = _189__C ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X1 [2] = _189__X ;
  assign _188__R0 = ( _189__R | _189__C & FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_T [2] ) & { 1{ FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0[2] != 1'b1 }} ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R1 [2] = ( _189__R | _189__C & _188__T ) & { 1{ _188_ != 1'b1 }} ;
  assign _190_ = _189_ | FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0[3];
  assign _190__S = 0 ;
  logic [0:0] _189__C0 ;
  logic [0:0] _189__R0 ;
  logic [0:0] _189__X0 ;
  assign _190__T = _189__T | FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_T [3] ;
  assign _189__C0 = _190__C ;
  assign _189__X0 = _190__X ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C1 [3] = _190__C ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X1 [3] = _190__X ;
  assign _189__R0 = ( _190__R | _190__C & FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_T [3] ) & { 1{ FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0[3] != 1'b1 }} ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R1 [3] = ( _190__R | _190__C & _189__T ) & { 1{ _189_ != 1'b1 }} ;
  assign _191_ = _190_ | FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0[4];
  assign _191__S = 0 ;
  logic [0:0] _190__C0 ;
  logic [0:0] _190__R0 ;
  logic [0:0] _190__X0 ;
  assign _191__T = _190__T | FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_T [4] ;
  assign _190__C0 = _191__C ;
  assign _190__X0 = _191__X ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C1 [4] = _191__C ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X1 [4] = _191__X ;
  assign _190__R0 = ( _191__R | _191__C & FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_T [4] ) & { 1{ FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0[4] != 1'b1 }} ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R1 [4] = ( _191__R | _191__C & _190__T ) & { 1{ _190_ != 1'b1 }} ;
  assign _192_ = _191_ | FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0[5];
  assign _192__S = 0 ;
  logic [0:0] _191__C0 ;
  logic [0:0] _191__R0 ;
  logic [0:0] _191__X0 ;
  assign _192__T = _191__T | FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_T [5] ;
  assign _191__C0 = _192__C ;
  assign _191__X0 = _192__X ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C1 [5] = _192__C ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X1 [5] = _192__X ;
  assign _191__R0 = ( _192__R | _192__C & FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_T [5] ) & { 1{ FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0[5] != 1'b1 }} ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R1 [5] = ( _192__R | _192__C & _191__T ) & { 1{ _191_ != 1'b1 }} ;
  assign _193_ = _192_ | FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0[6];
  assign _193__S = 0 ;
  logic [0:0] _192__C0 ;
  logic [0:0] _192__R0 ;
  logic [0:0] _192__X0 ;
  assign _193__T = _192__T | FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_T [6] ;
  assign _192__C0 = _193__C ;
  assign _192__X0 = _193__X ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C1 [6] = _193__C ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X1 [6] = _193__X ;
  assign _192__R0 = ( _193__R | _193__C & FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_T [6] ) & { 1{ FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0[6] != 1'b1 }} ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R1 [6] = ( _193__R | _193__C & _192__T ) & { 1{ _192_ != 1'b1 }} ;
  assign _194_ = _193_ | FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0[7];
  assign _194__S = 0 ;
  logic [0:0] _193__C0 ;
  logic [0:0] _193__R0 ;
  logic [0:0] _193__X0 ;
  assign _194__T = _193__T | FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_T [7] ;
  assign _193__C0 = _194__C ;
  assign _193__X0 = _194__X ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C1 [7] = _194__C ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X1 [7] = _194__X ;
  assign _193__R0 = ( _194__R | _194__C & FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_T [7] ) & { 1{ FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0[7] != 1'b1 }} ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R1 [7] = ( _194__R | _194__C & _193__T ) & { 1{ _193_ != 1'b1 }} ;
  assign _195_ = _194_ | FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0[8];
  assign _195__S = 0 ;
  logic [0:0] _194__C0 ;
  logic [0:0] _194__R0 ;
  logic [0:0] _194__X0 ;
  assign _195__T = _194__T | FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_T [8] ;
  assign _194__C0 = _195__C ;
  assign _194__X0 = _195__X ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C1 [8] = _195__C ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X1 [8] = _195__X ;
  assign _194__R0 = ( _195__R | _195__C & FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_T [8] ) & { 1{ FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0[8] != 1'b1 }} ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R1 [8] = ( _195__R | _195__C & _194__T ) & { 1{ _194_ != 1'b1 }} ;
  assign _196_ = _195_ | FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0[10];
  assign _196__S = 0 ;
  assign { FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R1 [9] } = 0;
  assign { FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X1 [9] } = 0;
  assign { FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C1 [9] } = 0;
  logic [0:0] _195__C0 ;
  logic [0:0] _195__R0 ;
  logic [0:0] _195__X0 ;
  logic [19:0] FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C2 ;
  logic [19:0] FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R2 ;
  logic [19:0] FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X2 ;
  assign _196__T = _195__T | FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_T [10] ;
  assign _195__C0 = _196__C ;
  assign _195__X0 = _196__X ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C2 [10] = _196__C ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X2 [10] = _196__X ;
  assign _195__R0 = ( _196__R | _196__C & FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_T [10] ) & { 1{ FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0[10] != 1'b1 }} ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R2 [10] = ( _196__R | _196__C & _195__T ) & { 1{ _195_ != 1'b1 }} ;
  assign _197_ = FpMantRNE_22U_11U_else_and_svs | FpMul_6U_10U_is_inf_lpi_1_dfm_2;
  assign _197__S = 0 ;
  logic [0:0] FpMantRNE_22U_11U_else_and_svs_C3 ;
  logic [0:0] FpMantRNE_22U_11U_else_and_svs_R3 ;
  logic [0:0] FpMantRNE_22U_11U_else_and_svs_X3 ;
  logic [0:0] FpMul_6U_10U_is_inf_lpi_1_dfm_2_C0 ;
  logic [0:0] FpMul_6U_10U_is_inf_lpi_1_dfm_2_R0 ;
  logic [0:0] FpMul_6U_10U_is_inf_lpi_1_dfm_2_X0 ;
  assign _197__T = FpMantRNE_22U_11U_else_and_svs_T | FpMul_6U_10U_is_inf_lpi_1_dfm_2_T ;
  assign FpMantRNE_22U_11U_else_and_svs_C3 = _197__C ;
  assign FpMantRNE_22U_11U_else_and_svs_X3 = _197__X ;
  assign FpMul_6U_10U_is_inf_lpi_1_dfm_2_C0 = _197__C ;
  assign FpMul_6U_10U_is_inf_lpi_1_dfm_2_X0 = _197__X ;
  assign FpMantRNE_22U_11U_else_and_svs_R3 = ( _197__R | _197__C & FpMul_6U_10U_is_inf_lpi_1_dfm_2_T ) & { 1{ FpMul_6U_10U_is_inf_lpi_1_dfm_2 != 1'b1 }} ;
  assign FpMul_6U_10U_is_inf_lpi_1_dfm_2_R0 = ( _197__R | _197__C & FpMantRNE_22U_11U_else_and_svs_T ) & { 1{ FpMantRNE_22U_11U_else_and_svs != 1'b1 }} ;
  assign FpMul_6U_10U_or_1_nl = _089_ | FpMul_6U_10U_is_inf_lpi_1_dfm_2;
  assign FpMul_6U_10U_or_1_nl_S = 0 ;
  logic [0:0] _089__C0 ;
  logic [0:0] _089__R0 ;
  logic [0:0] _089__X0 ;
  logic [0:0] FpMul_6U_10U_is_inf_lpi_1_dfm_2_C1 ;
  logic [0:0] FpMul_6U_10U_is_inf_lpi_1_dfm_2_R1 ;
  logic [0:0] FpMul_6U_10U_is_inf_lpi_1_dfm_2_X1 ;
  assign FpMul_6U_10U_or_1_nl_T = _089__T | FpMul_6U_10U_is_inf_lpi_1_dfm_2_T ;
  assign _089__C0 = FpMul_6U_10U_or_1_nl_C ;
  assign _089__X0 = FpMul_6U_10U_or_1_nl_X ;
  assign FpMul_6U_10U_is_inf_lpi_1_dfm_2_C1 = FpMul_6U_10U_or_1_nl_C ;
  assign FpMul_6U_10U_is_inf_lpi_1_dfm_2_X1 = FpMul_6U_10U_or_1_nl_X ;
  assign _089__R0 = ( FpMul_6U_10U_or_1_nl_R | FpMul_6U_10U_or_1_nl_C & FpMul_6U_10U_is_inf_lpi_1_dfm_2_T ) & { 1{ FpMul_6U_10U_is_inf_lpi_1_dfm_2 != 1'b1 }} ;
  assign FpMul_6U_10U_is_inf_lpi_1_dfm_2_R1 = ( FpMul_6U_10U_or_1_nl_R | FpMul_6U_10U_or_1_nl_C & _089__T ) & { 1{ _089_ != 1'b1 }} ;
  assign FpMul_6U_10U_lor_2_lpi_1_dfm = _138_ | FpMul_6U_10U_lor_1_lpi_1_dfm_4;
  assign FpMul_6U_10U_lor_2_lpi_1_dfm_S = 0 ;
  logic [0:0] _138__C0 ;
  logic [0:0] _138__R0 ;
  logic [0:0] _138__X0 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_4_C0 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_4_R0 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_4_X0 ;
  assign FpMul_6U_10U_lor_2_lpi_1_dfm_T = _138__T | FpMul_6U_10U_lor_1_lpi_1_dfm_4_T ;
  assign _138__C0 = FpMul_6U_10U_lor_2_lpi_1_dfm_C ;
  assign _138__X0 = FpMul_6U_10U_lor_2_lpi_1_dfm_X ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_4_C0 = FpMul_6U_10U_lor_2_lpi_1_dfm_C ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_4_X0 = FpMul_6U_10U_lor_2_lpi_1_dfm_X ;
  assign _138__R0 = ( FpMul_6U_10U_lor_2_lpi_1_dfm_R | FpMul_6U_10U_lor_2_lpi_1_dfm_C & FpMul_6U_10U_lor_1_lpi_1_dfm_4_T ) & { 1{ FpMul_6U_10U_lor_1_lpi_1_dfm_4 != 1'b1 }} ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_4_R0 = ( FpMul_6U_10U_lor_2_lpi_1_dfm_R | FpMul_6U_10U_lor_2_lpi_1_dfm_C & _138__T ) & { 1{ _138_ != 1'b1 }} ;
  assign _198_ = FpMul_6U_10U_else_2_else_if_if_acc_1_nl[5] | _139_;
  assign _198__S = 0 ;
  logic [5:0] FpMul_6U_10U_else_2_else_if_if_acc_1_nl_C0 ;
  logic [5:0] FpMul_6U_10U_else_2_else_if_if_acc_1_nl_R0 ;
  logic [5:0] FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X0 ;
  logic [0:0] _139__C0 ;
  logic [0:0] _139__R0 ;
  logic [0:0] _139__X0 ;
  assign _198__T = FpMul_6U_10U_else_2_else_if_if_acc_1_nl_T [5] | _139__T ;
  assign FpMul_6U_10U_else_2_else_if_if_acc_1_nl_C0 [5] = _198__C ;
  assign FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X0 [5] = _198__X ;
  assign _139__C0 = _198__C ;
  assign _139__X0 = _198__X ;
  assign FpMul_6U_10U_else_2_else_if_if_acc_1_nl_R0 [5] = ( _198__R | _198__C & _139__T ) & { 1{ _139_ != 1'b1 }} ;
  assign _139__R0 = ( _198__R | _198__C & FpMul_6U_10U_else_2_else_if_if_acc_1_nl_T [5] ) & { 1{ FpMul_6U_10U_else_2_else_if_if_acc_1_nl[5] != 1'b1 }} ;
  assign _137_ = _091_ | FpMul_6U_10U_lor_1_lpi_1_dfm_4;
  assign _137__S = 0 ;
  logic [0:0] _091__C0 ;
  logic [0:0] _091__R0 ;
  logic [0:0] _091__X0 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_4_C1 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_4_R1 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_4_X1 ;
  assign _137__T = _091__T | FpMul_6U_10U_lor_1_lpi_1_dfm_4_T ;
  assign _091__C0 = _137__C ;
  assign _091__X0 = _137__X ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_4_C1 = _137__C ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_4_X1 = _137__X ;
  assign _091__R0 = ( _137__R | _137__C & FpMul_6U_10U_lor_1_lpi_1_dfm_4_T ) & { 1{ FpMul_6U_10U_lor_1_lpi_1_dfm_4 != 1'b1 }} ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_4_R1 = ( _137__R | _137__C & _091__T ) & { 1{ _091_ != 1'b1 }} ;
  assign or_tmp_4 = or_68_cse | nand_6_cse;
  assign or_tmp_4_S = 0 ;
  logic [0:0] or_68_cse_C2 ;
  logic [0:0] or_68_cse_R2 ;
  logic [0:0] or_68_cse_X2 ;
  logic [0:0] nand_6_cse_C4 ;
  logic [0:0] nand_6_cse_R4 ;
  logic [0:0] nand_6_cse_X4 ;
  assign or_tmp_4_T = or_68_cse_T | nand_6_cse_T ;
  assign or_68_cse_C2 = or_tmp_4_C ;
  assign or_68_cse_X2 = or_tmp_4_X ;
  assign nand_6_cse_C4 = or_tmp_4_C ;
  assign nand_6_cse_X4 = or_tmp_4_X ;
  assign or_68_cse_R2 = ( or_tmp_4_R | or_tmp_4_C & nand_6_cse_T ) & { 1{ nand_6_cse != 1'b1 }} ;
  assign nand_6_cse_R4 = ( or_tmp_4_R | or_tmp_4_C & or_68_cse_T ) & { 1{ or_68_cse != 1'b1 }} ;
  assign or_tmp_7 = IsNaN_6U_10U_land_lpi_1_dfm_st_3 | IsNaN_6U_10U_1_land_lpi_1_dfm_3;
  assign or_tmp_7_S = 0 ;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_st_3_C3 ;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_st_3_R3 ;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_st_3_X3 ;
  logic [0:0] IsNaN_6U_10U_1_land_lpi_1_dfm_3_C1 ;
  logic [0:0] IsNaN_6U_10U_1_land_lpi_1_dfm_3_R1 ;
  logic [0:0] IsNaN_6U_10U_1_land_lpi_1_dfm_3_X1 ;
  assign or_tmp_7_T = IsNaN_6U_10U_land_lpi_1_dfm_st_3_T | IsNaN_6U_10U_1_land_lpi_1_dfm_3_T ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_st_3_C3 = or_tmp_7_C ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_st_3_X3 = or_tmp_7_X ;
  assign IsNaN_6U_10U_1_land_lpi_1_dfm_3_C1 = or_tmp_7_C ;
  assign IsNaN_6U_10U_1_land_lpi_1_dfm_3_X1 = or_tmp_7_X ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_st_3_R3 = ( or_tmp_7_R | or_tmp_7_C & IsNaN_6U_10U_1_land_lpi_1_dfm_3_T ) & { 1{ IsNaN_6U_10U_1_land_lpi_1_dfm_3 != 1'b1 }} ;
  assign IsNaN_6U_10U_1_land_lpi_1_dfm_3_R1 = ( or_tmp_7_R | or_tmp_7_C & IsNaN_6U_10U_land_lpi_1_dfm_st_3_T ) & { 1{ IsNaN_6U_10U_land_lpi_1_dfm_st_3 != 1'b1 }} ;
  assign or_tmp_16 = nor_cse | main_stage_v_1;
  assign or_tmp_16_S = 0 ;
  logic [0:0] nor_cse_C4 ;
  logic [0:0] nor_cse_R4 ;
  logic [0:0] nor_cse_X4 ;
  logic [0:0] main_stage_v_1_C5 ;
  logic [0:0] main_stage_v_1_R5 ;
  logic [0:0] main_stage_v_1_X5 ;
  assign or_tmp_16_T = nor_cse_T | main_stage_v_1_T ;
  assign nor_cse_C4 = or_tmp_16_C ;
  assign nor_cse_X4 = or_tmp_16_X ;
  assign main_stage_v_1_C5 = or_tmp_16_C ;
  assign main_stage_v_1_X5 = or_tmp_16_X ;
  assign nor_cse_R4 = ( or_tmp_16_R | or_tmp_16_C & main_stage_v_1_T ) & { 1{ main_stage_v_1 != 1'b1 }} ;
  assign main_stage_v_1_R5 = ( or_tmp_16_R | or_tmp_16_C & nor_cse_T ) & { 1{ nor_cse != 1'b1 }} ;
  assign _199_ = reg_chn_o_rsci_ld_core_psct_cse | _000_;
  assign _199__S = 0 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C5 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R5 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X5 ;
  logic [0:0] _000__C3 ;
  logic [0:0] _000__R3 ;
  logic [0:0] _000__X3 ;
  assign _199__T = reg_chn_o_rsci_ld_core_psct_cse_T | _000__T ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C5 = _199__C ;
  assign reg_chn_o_rsci_ld_core_psct_cse_X5 = _199__X ;
  assign _000__C3 = _199__C ;
  assign _000__X3 = _199__X ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R5 = ( _199__R | _199__C & _000__T ) & { 1{ _000_ != 1'b1 }} ;
  assign _000__R3 = ( _199__R | _199__C & reg_chn_o_rsci_ld_core_psct_cse_T ) & { 1{ reg_chn_o_rsci_ld_core_psct_cse != 1'b1 }} ;
  assign or_tmp_32 = or_tmp_7 | _000_;
  assign or_tmp_32_S = 0 ;
  logic [0:0] or_tmp_7_C2 ;
  logic [0:0] or_tmp_7_R2 ;
  logic [0:0] or_tmp_7_X2 ;
  logic [0:0] _000__C4 ;
  logic [0:0] _000__R4 ;
  logic [0:0] _000__X4 ;
  assign or_tmp_32_T = or_tmp_7_T | _000__T ;
  assign or_tmp_7_C2 = or_tmp_32_C ;
  assign or_tmp_7_X2 = or_tmp_32_X ;
  assign _000__C4 = or_tmp_32_C ;
  assign _000__X4 = or_tmp_32_X ;
  assign or_tmp_7_R2 = ( or_tmp_32_R | or_tmp_32_C & _000__T ) & { 1{ _000_ != 1'b1 }} ;
  assign _000__R4 = ( or_tmp_32_R | or_tmp_32_C & or_tmp_7_T ) & { 1{ or_tmp_7 != 1'b1 }} ;
  assign _200_ = _129_ | FpMul_6U_10U_oelse_1_acc_nl[7];
  assign _200__S = 0 ;
  assign { FpMul_6U_10U_oelse_1_acc_nl_R3 [0], FpMul_6U_10U_oelse_1_acc_nl_R3 [1], FpMul_6U_10U_oelse_1_acc_nl_R3 [2], FpMul_6U_10U_oelse_1_acc_nl_R3 [3], FpMul_6U_10U_oelse_1_acc_nl_R3 [4], FpMul_6U_10U_oelse_1_acc_nl_R3 [5], FpMul_6U_10U_oelse_1_acc_nl_R3 [6] } = 0;
  assign { FpMul_6U_10U_oelse_1_acc_nl_X3 [0], FpMul_6U_10U_oelse_1_acc_nl_X3 [1], FpMul_6U_10U_oelse_1_acc_nl_X3 [2], FpMul_6U_10U_oelse_1_acc_nl_X3 [3], FpMul_6U_10U_oelse_1_acc_nl_X3 [4], FpMul_6U_10U_oelse_1_acc_nl_X3 [5], FpMul_6U_10U_oelse_1_acc_nl_X3 [6] } = 0;
  assign { FpMul_6U_10U_oelse_1_acc_nl_C3 [0], FpMul_6U_10U_oelse_1_acc_nl_C3 [1], FpMul_6U_10U_oelse_1_acc_nl_C3 [2], FpMul_6U_10U_oelse_1_acc_nl_C3 [3], FpMul_6U_10U_oelse_1_acc_nl_C3 [4], FpMul_6U_10U_oelse_1_acc_nl_C3 [5], FpMul_6U_10U_oelse_1_acc_nl_C3 [6] } = 0;
  logic [0:0] _129__C1 ;
  logic [0:0] _129__R1 ;
  logic [0:0] _129__X1 ;
  logic [7:0] FpMul_6U_10U_oelse_1_acc_nl_C4 ;
  logic [7:0] FpMul_6U_10U_oelse_1_acc_nl_R4 ;
  logic [7:0] FpMul_6U_10U_oelse_1_acc_nl_X4 ;
  assign _200__T = _129__T | FpMul_6U_10U_oelse_1_acc_nl_T [7] ;
  assign _129__C1 = _200__C ;
  assign _129__X1 = _200__X ;
  assign FpMul_6U_10U_oelse_1_acc_nl_C4 [7] = _200__C ;
  assign FpMul_6U_10U_oelse_1_acc_nl_X4 [7] = _200__X ;
  assign _129__R1 = ( _200__R | _200__C & FpMul_6U_10U_oelse_1_acc_nl_T [7] ) & { 1{ FpMul_6U_10U_oelse_1_acc_nl[7] != 1'b1 }} ;
  assign FpMul_6U_10U_oelse_1_acc_nl_R4 [7] = ( _200__R | _200__C & _129__T ) & { 1{ _129_ != 1'b1 }} ;
  assign _201_ = _200_ | FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp;
  assign _201__S = 0 ;
  logic [0:0] _200__C0 ;
  logic [0:0] _200__R0 ;
  logic [0:0] _200__X0 ;
  logic [0:0] FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_C4 ;
  logic [0:0] FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_R4 ;
  logic [0:0] FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_X4 ;
  assign _201__T = _200__T | FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_T ;
  assign _200__C0 = _201__C ;
  assign _200__X0 = _201__X ;
  assign FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_C4 = _201__C ;
  assign FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_X4 = _201__X ;
  assign _200__R0 = ( _201__R | _201__C & FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_T ) & { 1{ FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp != 1'b1 }} ;
  assign FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_R4 = ( _201__R | _201__C & _200__T ) & { 1{ _200_ != 1'b1 }} ;
  assign or_tmp_40 = _201_ | nand_6_cse;
  assign or_tmp_40_S = 0 ;
  logic [0:0] _201__C0 ;
  logic [0:0] _201__R0 ;
  logic [0:0] _201__X0 ;
  logic [0:0] nand_6_cse_C5 ;
  logic [0:0] nand_6_cse_R5 ;
  logic [0:0] nand_6_cse_X5 ;
  assign or_tmp_40_T = _201__T | nand_6_cse_T ;
  assign _201__C0 = or_tmp_40_C ;
  assign _201__X0 = or_tmp_40_X ;
  assign nand_6_cse_C5 = or_tmp_40_C ;
  assign nand_6_cse_X5 = or_tmp_40_X ;
  assign _201__R0 = ( or_tmp_40_R | or_tmp_40_C & nand_6_cse_T ) & { 1{ nand_6_cse != 1'b1 }} ;
  assign nand_6_cse_R5 = ( or_tmp_40_R | or_tmp_40_C & _201__T ) & { 1{ _201_ != 1'b1 }} ;
  assign _202_ = _000_ | IsNaN_6U_10U_land_lpi_1_dfm_st_3;
  assign _202__S = 0 ;
  logic [0:0] _000__C5 ;
  logic [0:0] _000__R5 ;
  logic [0:0] _000__X5 ;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_st_3_C4 ;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_st_3_R4 ;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_st_3_X4 ;
  assign _202__T = _000__T | IsNaN_6U_10U_land_lpi_1_dfm_st_3_T ;
  assign _000__C5 = _202__C ;
  assign _000__X5 = _202__X ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_st_3_C4 = _202__C ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_st_3_X4 = _202__X ;
  assign _000__R5 = ( _202__R | _202__C & IsNaN_6U_10U_land_lpi_1_dfm_st_3_T ) & { 1{ IsNaN_6U_10U_land_lpi_1_dfm_st_3 != 1'b1 }} ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_st_3_R4 = ( _202__R | _202__C & _000__T ) & { 1{ _000_ != 1'b1 }} ;
  assign _203_ = _202_ | IsNaN_6U_10U_1_land_lpi_1_dfm_3;
  assign _203__S = 0 ;
  logic [0:0] _202__C0 ;
  logic [0:0] _202__R0 ;
  logic [0:0] _202__X0 ;
  logic [0:0] IsNaN_6U_10U_1_land_lpi_1_dfm_3_C2 ;
  logic [0:0] IsNaN_6U_10U_1_land_lpi_1_dfm_3_R2 ;
  logic [0:0] IsNaN_6U_10U_1_land_lpi_1_dfm_3_X2 ;
  assign _203__T = _202__T | IsNaN_6U_10U_1_land_lpi_1_dfm_3_T ;
  assign _202__C0 = _203__C ;
  assign _202__X0 = _203__X ;
  assign IsNaN_6U_10U_1_land_lpi_1_dfm_3_C2 = _203__C ;
  assign IsNaN_6U_10U_1_land_lpi_1_dfm_3_X2 = _203__X ;
  assign _202__R0 = ( _203__R | _203__C & IsNaN_6U_10U_1_land_lpi_1_dfm_3_T ) & { 1{ IsNaN_6U_10U_1_land_lpi_1_dfm_3 != 1'b1 }} ;
  assign IsNaN_6U_10U_1_land_lpi_1_dfm_3_R2 = ( _203__R | _203__C & _202__T ) & { 1{ _202_ != 1'b1 }} ;
  assign or_tmp_48 = IsNaN_6U_10U_1_nor_tmp | _140_;
  assign or_tmp_48_S = 0 ;
  logic [0:0] IsNaN_6U_10U_1_nor_tmp_C1 ;
  logic [0:0] IsNaN_6U_10U_1_nor_tmp_R1 ;
  logic [0:0] IsNaN_6U_10U_1_nor_tmp_X1 ;
  logic [0:0] _140__C0 ;
  logic [0:0] _140__R0 ;
  logic [0:0] _140__X0 ;
  assign or_tmp_48_T = IsNaN_6U_10U_1_nor_tmp_T | _140__T ;
  assign IsNaN_6U_10U_1_nor_tmp_C1 = or_tmp_48_C ;
  assign IsNaN_6U_10U_1_nor_tmp_X1 = or_tmp_48_X ;
  assign _140__C0 = or_tmp_48_C ;
  assign _140__X0 = or_tmp_48_X ;
  assign IsNaN_6U_10U_1_nor_tmp_R1 = ( or_tmp_48_R | or_tmp_48_C & _140__T ) & { 1{ _140_ != 1'b1 }} ;
  assign _140__R0 = ( or_tmp_48_R | or_tmp_48_C & IsNaN_6U_10U_1_nor_tmp_T ) & { 1{ IsNaN_6U_10U_1_nor_tmp != 1'b1 }} ;
  assign or_tmp_52 = IsNaN_6U_10U_nor_tmp | _141_;
  assign or_tmp_52_S = 0 ;
  logic [0:0] IsNaN_6U_10U_nor_tmp_C2 ;
  logic [0:0] IsNaN_6U_10U_nor_tmp_R2 ;
  logic [0:0] IsNaN_6U_10U_nor_tmp_X2 ;
  logic [0:0] _141__C0 ;
  logic [0:0] _141__R0 ;
  logic [0:0] _141__X0 ;
  assign or_tmp_52_T = IsNaN_6U_10U_nor_tmp_T | _141__T ;
  assign IsNaN_6U_10U_nor_tmp_C2 = or_tmp_52_C ;
  assign IsNaN_6U_10U_nor_tmp_X2 = or_tmp_52_X ;
  assign _141__C0 = or_tmp_52_C ;
  assign _141__X0 = or_tmp_52_X ;
  assign IsNaN_6U_10U_nor_tmp_R2 = ( or_tmp_52_R | or_tmp_52_C & _141__T ) & { 1{ _141_ != 1'b1 }} ;
  assign _141__R0 = ( or_tmp_52_R | or_tmp_52_C & IsNaN_6U_10U_nor_tmp_T ) & { 1{ IsNaN_6U_10U_nor_tmp != 1'b1 }} ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs <= 1'b0;
    else
      FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs <= _009_;
  logic [0:0] _009__X0 ;
  logic [0:0] _009__R0 ;
  logic [0:0] _009__C0 ;
  assign _009__X0 = { 1{ FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_S != _009__S }} ;
  assign _009__R0 = 0 ;
  assign _009__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_T 		<= !nvdla_core_rstn ? 0 : ( _009__T & _009__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_t_flag 	<= !nvdla_core_rstn ? 0 : FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_t_flag ? 1 : | _009__T & ( | _009__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_r_flag 	<= !nvdla_core_rstn ? 0 : FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_r_flag ? 1 : FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_t_flag ? 0 : ( | FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMul_6U_10U_ua_sva_1_15_0_1 <= 16'b0000000000000000;
    else
      FpMul_6U_10U_ua_sva_1_15_0_1 <= _023_;
  logic [15:0] _023__X0 ;
  logic [15:0] _023__R0 ;
  logic [15:0] _023__C0 ;
  assign _023__X0 = { 16{ FpMul_6U_10U_ua_sva_1_15_0_1_S != _023__S }} ;
  assign _023__R0 = 0 ;
  assign _023__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_ua_sva_1_15_0_1_T 		<= !nvdla_core_rstn ? 0 : ( _023__T & _023__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_ua_sva_1_15_0_1_t_flag 	<= !nvdla_core_rstn ? 0 : FpMul_6U_10U_ua_sva_1_15_0_1_t_flag ? 1 : | _023__T & ( | _023__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_ua_sva_1_15_0_1_r_flag 	<= !nvdla_core_rstn ? 0 : FpMul_6U_10U_ua_sva_1_15_0_1_r_flag ? 1 : FpMul_6U_10U_ua_sva_1_15_0_1_t_flag ? 0 : ( | FpMul_6U_10U_ua_sva_1_15_0_1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMul_6U_10U_ub_sva_1_15_0_1 <= 16'b0000000000000000;
    else
      FpMul_6U_10U_ub_sva_1_15_0_1 <= _024_;
  logic [15:0] _024__X0 ;
  logic [15:0] _024__R0 ;
  logic [15:0] _024__C0 ;
  assign _024__X0 = { 16{ FpMul_6U_10U_ub_sva_1_15_0_1_S != _024__S }} ;
  assign _024__R0 = 0 ;
  assign _024__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_ub_sva_1_15_0_1_T 		<= !nvdla_core_rstn ? 0 : ( _024__T & _024__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_ub_sva_1_15_0_1_t_flag 	<= !nvdla_core_rstn ? 0 : FpMul_6U_10U_ub_sva_1_15_0_1_t_flag ? 1 : | _024__T & ( | _024__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_ub_sva_1_15_0_1_r_flag 	<= !nvdla_core_rstn ? 0 : FpMul_6U_10U_ub_sva_1_15_0_1_r_flag ? 1 : FpMul_6U_10U_ub_sva_1_15_0_1_t_flag ? 0 : ( | FpMul_6U_10U_ub_sva_1_15_0_1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMul_6U_10U_mux_10_itm_3 <= 1'b0;
    else
      FpMul_6U_10U_mux_10_itm_3 <= _018_;
  logic [0:0] _018__X0 ;
  logic [0:0] _018__R0 ;
  logic [0:0] _018__C0 ;
  assign _018__X0 = { 1{ FpMul_6U_10U_mux_10_itm_3_S != _018__S }} ;
  assign _018__R0 = 0 ;
  assign _018__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_mux_10_itm_3_T 		<= !nvdla_core_rstn ? 0 : ( _018__T & _018__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_mux_10_itm_3_t_flag 	<= !nvdla_core_rstn ? 0 : FpMul_6U_10U_mux_10_itm_3_t_flag ? 1 : | _018__T & ( | _018__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_mux_10_itm_3_r_flag 	<= !nvdla_core_rstn ? 0 : FpMul_6U_10U_mux_10_itm_3_r_flag ? 1 : FpMul_6U_10U_mux_10_itm_3_t_flag ? 0 : ( | FpMul_6U_10U_mux_10_itm_3_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3 <= 1'b0;
    else
      FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3 <= _010_;
  logic [0:0] _010__X0 ;
  logic [0:0] _010__R0 ;
  logic [0:0] _010__C0 ;
  assign _010__X0 = { 1{ FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_S != _010__S }} ;
  assign _010__R0 = 0 ;
  assign _010__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_T 		<= !nvdla_core_rstn ? 0 : ( _010__T & _010__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_t_flag 	<= !nvdla_core_rstn ? 0 : FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_t_flag ? 1 : | _010__T & ( | _010__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_r_flag 	<= !nvdla_core_rstn ? 0 : FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_r_flag ? 1 : FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_t_flag ? 0 : ( | FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMul_6U_10U_lor_1_lpi_1_dfm_3 <= 1'b0;
    else
      FpMul_6U_10U_lor_1_lpi_1_dfm_3 <= _014_;
  logic [0:0] _014__X0 ;
  logic [0:0] _014__R0 ;
  logic [0:0] _014__C0 ;
  assign _014__X0 = { 1{ FpMul_6U_10U_lor_1_lpi_1_dfm_3_S != _014__S }} ;
  assign _014__R0 = 0 ;
  assign _014__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_lor_1_lpi_1_dfm_3_T 		<= !nvdla_core_rstn ? 0 : ( _014__T & _014__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_lor_1_lpi_1_dfm_3_t_flag 	<= !nvdla_core_rstn ? 0 : FpMul_6U_10U_lor_1_lpi_1_dfm_3_t_flag ? 1 : | _014__T & ( | _014__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_lor_1_lpi_1_dfm_3_r_flag 	<= !nvdla_core_rstn ? 0 : FpMul_6U_10U_lor_1_lpi_1_dfm_3_r_flag ? 1 : FpMul_6U_10U_lor_1_lpi_1_dfm_3_t_flag ? 0 : ( | FpMul_6U_10U_lor_1_lpi_1_dfm_3_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMul_6U_10U_p_mant_p1_sva <= 22'b0000000000000000000000;
    else
      FpMul_6U_10U_p_mant_p1_sva <= _021_;
  logic [21:0] _021__X0 ;
  logic [21:0] _021__R0 ;
  logic [21:0] _021__C0 ;
  assign _021__X0 = { 22{ FpMul_6U_10U_p_mant_p1_sva_S != _021__S }} ;
  assign _021__R0 = 0 ;
  assign _021__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_p_mant_p1_sva_T 		<= !nvdla_core_rstn ? 0 : ( _021__T & _021__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_p_mant_p1_sva_t_flag 	<= !nvdla_core_rstn ? 0 : FpMul_6U_10U_p_mant_p1_sva_t_flag ? 1 : | _021__T & ( | _021__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_p_mant_p1_sva_r_flag 	<= !nvdla_core_rstn ? 0 : FpMul_6U_10U_p_mant_p1_sva_r_flag ? 1 : FpMul_6U_10U_p_mant_p1_sva_t_flag ? 0 : ( | FpMul_6U_10U_p_mant_p1_sva_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMul_6U_10U_lor_1_lpi_1_dfm_4 <= 1'b0;
    else
      FpMul_6U_10U_lor_1_lpi_1_dfm_4 <= _015_;
  logic [0:0] _015__X0 ;
  logic [0:0] _015__R0 ;
  logic [0:0] _015__C0 ;
  assign _015__X0 = { 1{ FpMul_6U_10U_lor_1_lpi_1_dfm_4_S != _015__S }} ;
  assign _015__R0 = 0 ;
  assign _015__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_lor_1_lpi_1_dfm_4_T 		<= !nvdla_core_rstn ? 0 : ( _015__T & _015__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_lor_1_lpi_1_dfm_4_t_flag 	<= !nvdla_core_rstn ? 0 : FpMul_6U_10U_lor_1_lpi_1_dfm_4_t_flag ? 1 : | _015__T & ( | _015__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_lor_1_lpi_1_dfm_4_r_flag 	<= !nvdla_core_rstn ? 0 : FpMul_6U_10U_lor_1_lpi_1_dfm_4_r_flag ? 1 : FpMul_6U_10U_lor_1_lpi_1_dfm_4_t_flag ? 0 : ( | FpMul_6U_10U_lor_1_lpi_1_dfm_4_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4 <= 1'b0;
    else
      FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4 <= _011_;
  logic [0:0] _011__X0 ;
  logic [0:0] _011__R0 ;
  logic [0:0] _011__C0 ;
  assign _011__X0 = { 1{ FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_S != _011__S }} ;
  assign _011__R0 = 0 ;
  assign _011__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_T 		<= !nvdla_core_rstn ? 0 : ( _011__T & _011__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_t_flag 	<= !nvdla_core_rstn ? 0 : FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_t_flag ? 1 : | _011__T & ( | _011__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_r_flag 	<= !nvdla_core_rstn ? 0 : FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_r_flag ? 1 : FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_t_flag ? 0 : ( | FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      IsNaN_6U_10U_1_land_lpi_1_dfm_4 <= 1'b0;
    else
      IsNaN_6U_10U_1_land_lpi_1_dfm_4 <= _026_;
  logic [0:0] _026__X0 ;
  logic [0:0] _026__R0 ;
  logic [0:0] _026__C0 ;
  assign _026__X0 = { 1{ IsNaN_6U_10U_1_land_lpi_1_dfm_4_S != _026__S }} ;
  assign _026__R0 = 0 ;
  assign _026__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      IsNaN_6U_10U_1_land_lpi_1_dfm_4_T 		<= !nvdla_core_rstn ? 0 : ( _026__T & _026__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_6U_10U_1_land_lpi_1_dfm_4_t_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_6U_10U_1_land_lpi_1_dfm_4_t_flag ? 1 : | _026__T & ( | _026__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_6U_10U_1_land_lpi_1_dfm_4_r_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_6U_10U_1_land_lpi_1_dfm_4_r_flag ? 1 : IsNaN_6U_10U_1_land_lpi_1_dfm_4_t_flag ? 0 : ( | IsNaN_6U_10U_1_land_lpi_1_dfm_4_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      IsNaN_6U_10U_land_lpi_1_dfm_4 <= 1'b0;
    else
      IsNaN_6U_10U_land_lpi_1_dfm_4 <= _027_;
  logic [0:0] _027__X0 ;
  logic [0:0] _027__R0 ;
  logic [0:0] _027__C0 ;
  assign _027__X0 = { 1{ IsNaN_6U_10U_land_lpi_1_dfm_4_S != _027__S }} ;
  assign _027__R0 = 0 ;
  assign _027__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      IsNaN_6U_10U_land_lpi_1_dfm_4_T 		<= !nvdla_core_rstn ? 0 : ( _027__T & _027__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_6U_10U_land_lpi_1_dfm_4_t_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_6U_10U_land_lpi_1_dfm_4_t_flag ? 1 : | _027__T & ( | _027__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_6U_10U_land_lpi_1_dfm_4_r_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_6U_10U_land_lpi_1_dfm_4_r_flag ? 1 : IsNaN_6U_10U_land_lpi_1_dfm_4_t_flag ? 0 : ( | IsNaN_6U_10U_land_lpi_1_dfm_4_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMul_6U_10U_mux_10_itm_4 <= 1'b0;
    else
      FpMul_6U_10U_mux_10_itm_4 <= _019_;
  logic [0:0] _019__X0 ;
  logic [0:0] _019__R0 ;
  logic [0:0] _019__C0 ;
  assign _019__X0 = { 1{ FpMul_6U_10U_mux_10_itm_4_S != _019__S }} ;
  assign _019__R0 = 0 ;
  assign _019__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_mux_10_itm_4_T 		<= !nvdla_core_rstn ? 0 : ( _019__T & _019__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_mux_10_itm_4_t_flag 	<= !nvdla_core_rstn ? 0 : FpMul_6U_10U_mux_10_itm_4_t_flag ? 1 : | _019__T & ( | _019__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_mux_10_itm_4_r_flag 	<= !nvdla_core_rstn ? 0 : FpMul_6U_10U_mux_10_itm_4_r_flag ? 1 : FpMul_6U_10U_mux_10_itm_4_t_flag ? 0 : ( | FpMul_6U_10U_mux_10_itm_4_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMul_6U_10U_lor_1_lpi_1_dfm_st_4 <= 1'b0;
    else
      FpMul_6U_10U_lor_1_lpi_1_dfm_st_4 <= _017_;
  logic [0:0] _017__X0 ;
  logic [0:0] _017__R0 ;
  logic [0:0] _017__C0 ;
  assign _017__X0 = { 1{ FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_S != _017__S }} ;
  assign _017__R0 = 0 ;
  assign _017__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_T 		<= !nvdla_core_rstn ? 0 : ( _017__T & _017__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_t_flag 	<= !nvdla_core_rstn ? 0 : FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_t_flag ? 1 : | _017__T & ( | _017__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_r_flag 	<= !nvdla_core_rstn ? 0 : FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_r_flag ? 1 : FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_t_flag ? 0 : ( | FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2 <= 6'b000000;
    else
      FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2 <= _006_;
  logic [5:0] _006__X0 ;
  logic [5:0] _006__R0 ;
  logic [5:0] _006__C0 ;
  assign _006__X0 = { 6{ FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_S != _006__S }} ;
  assign _006__R0 = 0 ;
  assign _006__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_T 		<= !nvdla_core_rstn ? 0 : ( _006__T & _006__X0 );
  always @( posedge nvdla_core_clk )
      FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_t_flag 	<= !nvdla_core_rstn ? 0 : FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_t_flag ? 1 : | _006__T & ( | _006__X0 );
  always @( posedge nvdla_core_clk )
      FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_r_flag 	<= !nvdla_core_rstn ? 0 : FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_r_flag ? 1 : FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_t_flag ? 0 : ( | FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2 <= 10'b0000000000;
    else
      FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2 <= _007_;
  logic [9:0] _007__X0 ;
  logic [9:0] _007__R0 ;
  logic [9:0] _007__C0 ;
  assign _007__X0 = { 10{ FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_S != _007__S }} ;
  assign _007__R0 = 0 ;
  assign _007__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_T 		<= !nvdla_core_rstn ? 0 : ( _007__T & _007__X0 );
  always @( posedge nvdla_core_clk )
      FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_t_flag 	<= !nvdla_core_rstn ? 0 : FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_t_flag ? 1 : | _007__T & ( | _007__X0 );
  always @( posedge nvdla_core_clk )
      FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_r_flag 	<= !nvdla_core_rstn ? 0 : FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_r_flag ? 1 : FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_t_flag ? 0 : ( | FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4 <= 1'b0;
    else
      FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4 <= _013_;
  logic [0:0] _013__X0 ;
  logic [0:0] _013__R0 ;
  logic [0:0] _013__C0 ;
  assign _013__X0 = { 1{ FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_S != _013__S }} ;
  assign _013__R0 = 0 ;
  assign _013__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_T 		<= !nvdla_core_rstn ? 0 : ( _013__T & _013__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_t_flag 	<= !nvdla_core_rstn ? 0 : FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_t_flag ? 1 : | _013__T & ( | _013__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_r_flag 	<= !nvdla_core_rstn ? 0 : FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_r_flag ? 1 : FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_t_flag ? 0 : ( | FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2 <= 1'b0;
    else
      FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2 <= _008_;
  logic [0:0] _008__X0 ;
  logic [0:0] _008__R0 ;
  logic [0:0] _008__C0 ;
  assign _008__X0 = { 1{ FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_S != _008__S }} ;
  assign _008__R0 = 0 ;
  assign _008__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_T 		<= !nvdla_core_rstn ? 0 : ( _008__T & _008__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_t_flag 	<= !nvdla_core_rstn ? 0 : FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_t_flag ? 1 : | _008__T & ( | _008__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_r_flag 	<= !nvdla_core_rstn ? 0 : FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_r_flag ? 1 : FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_t_flag ? 0 : ( | FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMul_6U_10U_p_mant_p1_sva_2 <= 22'b0000000000000000000000;
    else
      FpMul_6U_10U_p_mant_p1_sva_2 <= _022_;
  logic [21:0] _022__X0 ;
  logic [21:0] _022__R0 ;
  logic [21:0] _022__C0 ;
  assign _022__X0 = { 22{ FpMul_6U_10U_p_mant_p1_sva_2_S != _022__S }} ;
  assign _022__R0 = 0 ;
  assign _022__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_p_mant_p1_sva_2_T 		<= !nvdla_core_rstn ? 0 : ( _022__T & _022__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_p_mant_p1_sva_2_t_flag 	<= !nvdla_core_rstn ? 0 : FpMul_6U_10U_p_mant_p1_sva_2_t_flag ? 1 : | _022__T & ( | _022__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_p_mant_p1_sva_2_r_flag 	<= !nvdla_core_rstn ? 0 : FpMul_6U_10U_p_mant_p1_sva_2_r_flag ? 1 : FpMul_6U_10U_p_mant_p1_sva_2_t_flag ? 0 : ( | FpMul_6U_10U_p_mant_p1_sva_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMul_6U_10U_p_expo_sva_5 <= 6'b000000;
    else
      FpMul_6U_10U_p_expo_sva_5 <= _020_;
  logic [5:0] _020__X0 ;
  logic [5:0] _020__R0 ;
  logic [5:0] _020__C0 ;
  assign _020__X0 = { 6{ FpMul_6U_10U_p_expo_sva_5_S != _020__S }} ;
  assign _020__R0 = 0 ;
  assign _020__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_p_expo_sva_5_T 		<= !nvdla_core_rstn ? 0 : ( _020__T & _020__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_p_expo_sva_5_t_flag 	<= !nvdla_core_rstn ? 0 : FpMul_6U_10U_p_expo_sva_5_t_flag ? 1 : | _020__T & ( | _020__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_p_expo_sva_5_r_flag 	<= !nvdla_core_rstn ? 0 : FpMul_6U_10U_p_expo_sva_5_r_flag ? 1 : FpMul_6U_10U_p_expo_sva_5_t_flag ? 0 : ( | FpMul_6U_10U_p_expo_sva_5_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      main_stage_v_2 <= 1'b0;
    else
      main_stage_v_2 <= _034_;
  logic [0:0] _034__X0 ;
  logic [0:0] _034__R0 ;
  logic [0:0] _034__C0 ;
  assign _034__X0 = { 1{ main_stage_v_2_S != _034__S }} ;
  assign _034__R0 = 0 ;
  assign _034__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      main_stage_v_2_T 		<= !nvdla_core_rstn ? 0 : ( _034__T & _034__X0 );
  always @( posedge nvdla_core_clk )
      main_stage_v_2_t_flag 	<= !nvdla_core_rstn ? 0 : main_stage_v_2_t_flag ? 1 : | _034__T & ( | _034__X0 );
  always @( posedge nvdla_core_clk )
      main_stage_v_2_r_flag 	<= !nvdla_core_rstn ? 0 : main_stage_v_2_r_flag ? 1 : main_stage_v_2_t_flag ? 0 : ( | main_stage_v_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      IsNaN_6U_10U_1_land_lpi_1_dfm_3 <= 1'b0;
    else
      IsNaN_6U_10U_1_land_lpi_1_dfm_3 <= _025_;
  logic [0:0] _025__X0 ;
  logic [0:0] _025__R0 ;
  logic [0:0] _025__C0 ;
  assign _025__X0 = { 1{ IsNaN_6U_10U_1_land_lpi_1_dfm_3_S != _025__S }} ;
  assign _025__R0 = 0 ;
  assign _025__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      IsNaN_6U_10U_1_land_lpi_1_dfm_3_T 		<= !nvdla_core_rstn ? 0 : ( _025__T & _025__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_6U_10U_1_land_lpi_1_dfm_3_t_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_6U_10U_1_land_lpi_1_dfm_3_t_flag ? 1 : | _025__T & ( | _025__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_6U_10U_1_land_lpi_1_dfm_3_r_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_6U_10U_1_land_lpi_1_dfm_3_r_flag ? 1 : IsNaN_6U_10U_1_land_lpi_1_dfm_3_t_flag ? 0 : ( | IsNaN_6U_10U_1_land_lpi_1_dfm_3_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMul_6U_10U_lor_1_lpi_1_dfm_st_3 <= 1'b0;
    else
      FpMul_6U_10U_lor_1_lpi_1_dfm_st_3 <= _016_;
  logic [0:0] _016__X0 ;
  logic [0:0] _016__R0 ;
  logic [0:0] _016__C0 ;
  assign _016__X0 = { 1{ FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_S != _016__S }} ;
  assign _016__R0 = 0 ;
  assign _016__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_T 		<= !nvdla_core_rstn ? 0 : ( _016__T & _016__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_t_flag 	<= !nvdla_core_rstn ? 0 : FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_t_flag ? 1 : | _016__T & ( | _016__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_r_flag 	<= !nvdla_core_rstn ? 0 : FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_r_flag ? 1 : FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_t_flag ? 0 : ( | FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      IsNaN_6U_10U_land_lpi_1_dfm_st_3 <= 1'b0;
    else
      IsNaN_6U_10U_land_lpi_1_dfm_st_3 <= _028_;
  logic [0:0] _028__X0 ;
  logic [0:0] _028__R0 ;
  logic [0:0] _028__C0 ;
  assign _028__X0 = { 1{ IsNaN_6U_10U_land_lpi_1_dfm_st_3_S != _028__S }} ;
  assign _028__R0 = 0 ;
  assign _028__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      IsNaN_6U_10U_land_lpi_1_dfm_st_3_T 		<= !nvdla_core_rstn ? 0 : ( _028__T & _028__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_6U_10U_land_lpi_1_dfm_st_3_t_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_6U_10U_land_lpi_1_dfm_st_3_t_flag ? 1 : | _028__T & ( | _028__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_6U_10U_land_lpi_1_dfm_st_3_r_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_6U_10U_land_lpi_1_dfm_st_3_r_flag ? 1 : IsNaN_6U_10U_land_lpi_1_dfm_st_3_t_flag ? 0 : ( | IsNaN_6U_10U_land_lpi_1_dfm_st_3_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3 <= 1'b0;
    else
      FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3 <= _012_;
  logic [0:0] _012__X0 ;
  logic [0:0] _012__R0 ;
  logic [0:0] _012__C0 ;
  assign _012__X0 = { 1{ FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_S != _012__S }} ;
  assign _012__R0 = 0 ;
  assign _012__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_T 		<= !nvdla_core_rstn ? 0 : ( _012__T & _012__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_t_flag 	<= !nvdla_core_rstn ? 0 : FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_t_flag ? 1 : | _012__T & ( | _012__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_r_flag 	<= !nvdla_core_rstn ? 0 : FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_r_flag ? 1 : FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_t_flag ? 0 : ( | FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      main_stage_v_1 <= 1'b0;
    else
      main_stage_v_1 <= _033_;
  logic [0:0] _033__X0 ;
  logic [0:0] _033__R0 ;
  logic [0:0] _033__C0 ;
  assign _033__X0 = { 1{ main_stage_v_1_S != _033__S }} ;
  assign _033__R0 = 0 ;
  assign _033__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      main_stage_v_1_T 		<= !nvdla_core_rstn ? 0 : ( _033__T & _033__X0 );
  always @( posedge nvdla_core_clk )
      main_stage_v_1_t_flag 	<= !nvdla_core_rstn ? 0 : main_stage_v_1_t_flag ? 1 : | _033__T & ( | _033__X0 );
  always @( posedge nvdla_core_clk )
      main_stage_v_1_r_flag 	<= !nvdla_core_rstn ? 0 : main_stage_v_1_r_flag ? 1 : main_stage_v_1_t_flag ? 0 : ( | main_stage_v_1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      reg_chn_o_rsci_ld_core_psct_cse <= 1'b0;
    else
      reg_chn_o_rsci_ld_core_psct_cse <= _037_;
  logic [0:0] _037__X0 ;
  logic [0:0] _037__R0 ;
  logic [0:0] _037__C0 ;
  assign _037__X0 = { 1{ reg_chn_o_rsci_ld_core_psct_cse_S != _037__S }} ;
  assign _037__R0 = 0 ;
  assign _037__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      reg_chn_o_rsci_ld_core_psct_cse_T 		<= !nvdla_core_rstn ? 0 : ( _037__T & _037__X0 );
  always @( posedge nvdla_core_clk )
      reg_chn_o_rsci_ld_core_psct_cse_t_flag 	<= !nvdla_core_rstn ? 0 : reg_chn_o_rsci_ld_core_psct_cse_t_flag ? 1 : | _037__T & ( | _037__X0 );
  always @( posedge nvdla_core_clk )
      reg_chn_o_rsci_ld_core_psct_cse_r_flag 	<= !nvdla_core_rstn ? 0 : reg_chn_o_rsci_ld_core_psct_cse_r_flag ? 1 : reg_chn_o_rsci_ld_core_psct_cse_t_flag ? 0 : ( | reg_chn_o_rsci_ld_core_psct_cse_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_o_rsci_d_15_10 <= 6'b000000;
    else
      chn_o_rsci_d_15_10 <= _029_;
  logic [5:0] _029__X0 ;
  logic [5:0] _029__R0 ;
  logic [5:0] _029__C0 ;
  assign _029__X0 = { 6{ chn_o_rsci_d_15_10_S != _029__S }} ;
  assign _029__R0 = 0 ;
  assign _029__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_15_10_T 		<= !nvdla_core_rstn ? 0 : ( _029__T & _029__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_15_10_t_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_15_10_t_flag ? 1 : | _029__T & ( | _029__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_15_10_r_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_15_10_r_flag ? 1 : chn_o_rsci_d_15_10_t_flag ? 0 : ( | chn_o_rsci_d_15_10_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_o_rsci_d_16 <= 1'b0;
    else
      chn_o_rsci_d_16 <= _030_;
  logic [0:0] _030__X0 ;
  logic [0:0] _030__R0 ;
  logic [0:0] _030__C0 ;
  assign _030__X0 = { 1{ chn_o_rsci_d_16_S != _030__S }} ;
  assign _030__R0 = 0 ;
  assign _030__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_16_T 		<= !nvdla_core_rstn ? 0 : ( _030__T & _030__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_16_t_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_16_t_flag ? 1 : | _030__T & ( | _030__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_16_r_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_16_r_flag ? 1 : chn_o_rsci_d_16_t_flag ? 0 : ( | chn_o_rsci_d_16_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_o_rsci_d_9_0 <= 10'b0000000000;
    else
      chn_o_rsci_d_9_0 <= _031_;
  logic [9:0] _031__X0 ;
  logic [9:0] _031__R0 ;
  logic [9:0] _031__C0 ;
  assign _031__X0 = { 10{ chn_o_rsci_d_9_0_S != _031__S }} ;
  assign _031__R0 = 0 ;
  assign _031__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_9_0_T 		<= !nvdla_core_rstn ? 0 : ( _031__T & _031__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_9_0_t_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_9_0_t_flag ? 1 : | _031__T & ( | _031__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_9_0_r_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_9_0_r_flag ? 1 : chn_o_rsci_d_9_0_t_flag ? 0 : ( | chn_o_rsci_d_9_0_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      reg_chn_b_rsci_ld_core_psct_cse <= 1'b0;
    else
      reg_chn_b_rsci_ld_core_psct_cse <= _036_;
  logic [0:0] _036__X0 ;
  logic [0:0] _036__R0 ;
  logic [0:0] _036__C0 ;
  assign _036__X0 = { 1{ reg_chn_b_rsci_ld_core_psct_cse_S != _036__S }} ;
  assign _036__R0 = 0 ;
  assign _036__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      reg_chn_b_rsci_ld_core_psct_cse_T 		<= !nvdla_core_rstn ? 0 : ( _036__T & _036__X0 );
  always @( posedge nvdla_core_clk )
      reg_chn_b_rsci_ld_core_psct_cse_t_flag 	<= !nvdla_core_rstn ? 0 : reg_chn_b_rsci_ld_core_psct_cse_t_flag ? 1 : | _036__T & ( | _036__X0 );
  always @( posedge nvdla_core_clk )
      reg_chn_b_rsci_ld_core_psct_cse_r_flag 	<= !nvdla_core_rstn ? 0 : reg_chn_b_rsci_ld_core_psct_cse_r_flag ? 1 : reg_chn_b_rsci_ld_core_psct_cse_t_flag ? 0 : ( | reg_chn_b_rsci_ld_core_psct_cse_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_o_rsci_iswt0 <= 1'b0;
    else
      chn_o_rsci_iswt0 <= _032_;
  logic [0:0] _032__X0 ;
  logic [0:0] _032__R0 ;
  logic [0:0] _032__C0 ;
  assign _032__X0 = { 1{ chn_o_rsci_iswt0_S != _032__S }} ;
  assign _032__R0 = 0 ;
  assign _032__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_o_rsci_iswt0_T 		<= !nvdla_core_rstn ? 0 : ( _032__T & _032__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_iswt0_t_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_iswt0_t_flag ? 1 : | _032__T & ( | _032__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_iswt0_r_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_iswt0_r_flag ? 1 : chn_o_rsci_iswt0_t_flag ? 0 : ( | chn_o_rsci_iswt0_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      reg_chn_b_rsci_iswt0_cse <= 1'b0;
    else
      reg_chn_b_rsci_iswt0_cse <= _035_;
  logic [0:0] _035__X0 ;
  logic [0:0] _035__R0 ;
  logic [0:0] _035__C0 ;
  assign _035__X0 = { 1{ reg_chn_b_rsci_iswt0_cse_S != _035__S }} ;
  assign _035__R0 = 0 ;
  assign _035__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      reg_chn_b_rsci_iswt0_cse_T 		<= !nvdla_core_rstn ? 0 : ( _035__T & _035__X0 );
  always @( posedge nvdla_core_clk )
      reg_chn_b_rsci_iswt0_cse_t_flag 	<= !nvdla_core_rstn ? 0 : reg_chn_b_rsci_iswt0_cse_t_flag ? 1 : | _035__T & ( | _035__X0 );
  always @( posedge nvdla_core_clk )
      reg_chn_b_rsci_iswt0_cse_r_flag 	<= !nvdla_core_rstn ? 0 : reg_chn_b_rsci_iswt0_cse_r_flag ? 1 : reg_chn_b_rsci_iswt0_cse_t_flag ? 0 : ( | reg_chn_b_rsci_iswt0_cse_R ) ;
  assign mux_33_nl = or_5_cse ? _001_ : mux_32_nl;
  logic [0:0] or_5_cse_C15 ;
  logic [0:0] or_5_cse_R15 ;
  logic [0:0] or_5_cse_X15 ;
  assign or_5_cse_C15 = | mux_33_nl_C ;
  assign or_5_cse_X15 = | mux_33_nl_X ;
  assign mux_33_nl_T = or_5_cse ? ( { 1{ or_5_cse_T  }} | _001__T ) : ( { 1{ or_5_cse_T  }} | mux_32_nl_T );
  assign mux_33_nl_S = or_5_cse ? _001__S : mux_32_nl_S ;
  assign or_5_cse_R15 = ( | (mux_33_nl_R | ( mux_33_nl_C & ( { 1{ or_5_cse }} & _001__T | { 1{ !or_5_cse }} & mux_32_nl_T )))) && _001_ != mux_32_nl ;
  logic [0:0] _001__C0 ;
  logic [0:0] _001__R0 ;
  logic [0:0] _001__X0 ;
  assign _001__C0 = { 1{ or_5_cse }} ;
  assign _001__R0 = { 1{ or_5_cse }} & ( mux_33_nl_R | ( { 1{ or_5_cse_T  }} & mux_33_nl_C ));
  assign _001__X0 = { 1{ or_5_cse }} & mux_33_nl_X ;
  logic [0:0] mux_32_nl_C0 ;
  logic [0:0] mux_32_nl_R0 ;
  logic [0:0] mux_32_nl_X0 ;
  assign mux_32_nl_C0 = { 1{ !or_5_cse }} ;
  assign mux_32_nl_R0 = { 1{ !or_5_cse }} & ( mux_33_nl_R | ( { 1{ or_5_cse_T  }} & mux_33_nl_C ));
  assign mux_32_nl_X0 = { 1{ !or_5_cse }} & mux_33_nl_X ;
  assign mux_32_nl = IsNaN_6U_10U_land_lpi_1_dfm_st_3 ? main_stage_v_1 : nor_33_nl;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_st_3_C5 ;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_st_3_R5 ;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_st_3_X5 ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_st_3_C5 = | mux_32_nl_C ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_st_3_X5 = | mux_32_nl_X ;
  assign mux_32_nl_T = IsNaN_6U_10U_land_lpi_1_dfm_st_3 ? ( { 1{ IsNaN_6U_10U_land_lpi_1_dfm_st_3_T  }} | main_stage_v_1_T ) : ( { 1{ IsNaN_6U_10U_land_lpi_1_dfm_st_3_T  }} | nor_33_nl_T );
  assign mux_32_nl_S = IsNaN_6U_10U_land_lpi_1_dfm_st_3 ? main_stage_v_1_S : nor_33_nl_S ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_st_3_R5 = ( | (mux_32_nl_R | ( mux_32_nl_C & ( { 1{ IsNaN_6U_10U_land_lpi_1_dfm_st_3 }} & main_stage_v_1_T | { 1{ !IsNaN_6U_10U_land_lpi_1_dfm_st_3 }} & nor_33_nl_T )))) && main_stage_v_1 != nor_33_nl ;
  logic [0:0] main_stage_v_1_C6 ;
  logic [0:0] main_stage_v_1_R6 ;
  logic [0:0] main_stage_v_1_X6 ;
  assign main_stage_v_1_C6 = { 1{ IsNaN_6U_10U_land_lpi_1_dfm_st_3 }} ;
  assign main_stage_v_1_R6 = { 1{ IsNaN_6U_10U_land_lpi_1_dfm_st_3 }} & ( mux_32_nl_R | ( { 1{ IsNaN_6U_10U_land_lpi_1_dfm_st_3_T  }} & mux_32_nl_C ));
  assign main_stage_v_1_X6 = { 1{ IsNaN_6U_10U_land_lpi_1_dfm_st_3 }} & mux_32_nl_X ;
  logic [0:0] nor_33_nl_C0 ;
  logic [0:0] nor_33_nl_R0 ;
  logic [0:0] nor_33_nl_X0 ;
  assign nor_33_nl_C0 = { 1{ !IsNaN_6U_10U_land_lpi_1_dfm_st_3 }} ;
  assign nor_33_nl_R0 = { 1{ !IsNaN_6U_10U_land_lpi_1_dfm_st_3 }} & ( mux_32_nl_R | ( { 1{ IsNaN_6U_10U_land_lpi_1_dfm_st_3_T  }} & mux_32_nl_C ));
  assign nor_33_nl_X0 = { 1{ !IsNaN_6U_10U_land_lpi_1_dfm_st_3 }} & mux_32_nl_X ;
  assign mux_31_nl = or_68_cse ? or_tmp_52 : mux_30_nl;
  logic [0:0] or_68_cse_C3 ;
  logic [0:0] or_68_cse_R3 ;
  logic [0:0] or_68_cse_X3 ;
  assign or_68_cse_C3 = | mux_31_nl_C ;
  assign or_68_cse_X3 = | mux_31_nl_X ;
  assign mux_31_nl_T = or_68_cse ? ( { 1{ or_68_cse_T  }} | or_tmp_52_T ) : ( { 1{ or_68_cse_T  }} | mux_30_nl_T );
  assign mux_31_nl_S = or_68_cse ? or_tmp_52_S : mux_30_nl_S ;
  assign or_68_cse_R3 = ( | (mux_31_nl_R | ( mux_31_nl_C & ( { 1{ or_68_cse }} & or_tmp_52_T | { 1{ !or_68_cse }} & mux_30_nl_T )))) && or_tmp_52 != mux_30_nl ;
  logic [0:0] or_tmp_52_C0 ;
  logic [0:0] or_tmp_52_R0 ;
  logic [0:0] or_tmp_52_X0 ;
  assign or_tmp_52_C0 = { 1{ or_68_cse }} ;
  assign or_tmp_52_R0 = { 1{ or_68_cse }} & ( mux_31_nl_R | ( { 1{ or_68_cse_T  }} & mux_31_nl_C ));
  assign or_tmp_52_X0 = { 1{ or_68_cse }} & mux_31_nl_X ;
  logic [0:0] mux_30_nl_C0 ;
  logic [0:0] mux_30_nl_R0 ;
  logic [0:0] mux_30_nl_X0 ;
  assign mux_30_nl_C0 = { 1{ !or_68_cse }} ;
  assign mux_30_nl_R0 = { 1{ !or_68_cse }} & ( mux_31_nl_R | ( { 1{ or_68_cse_T  }} & mux_31_nl_C ));
  assign mux_30_nl_X0 = { 1{ !or_68_cse }} & mux_31_nl_X ;
  assign mux_30_nl = FpMul_6U_10U_else_2_if_acc_nl[6] ? nand_6_cse : or_tmp_52;
  assign { FpMul_6U_10U_else_2_if_acc_nl_R0 [0], FpMul_6U_10U_else_2_if_acc_nl_R0 [1], FpMul_6U_10U_else_2_if_acc_nl_R0 [2], FpMul_6U_10U_else_2_if_acc_nl_R0 [3], FpMul_6U_10U_else_2_if_acc_nl_R0 [4], FpMul_6U_10U_else_2_if_acc_nl_R0 [5] } = 0;
  assign { FpMul_6U_10U_else_2_if_acc_nl_X0 [0], FpMul_6U_10U_else_2_if_acc_nl_X0 [1], FpMul_6U_10U_else_2_if_acc_nl_X0 [2], FpMul_6U_10U_else_2_if_acc_nl_X0 [3], FpMul_6U_10U_else_2_if_acc_nl_X0 [4], FpMul_6U_10U_else_2_if_acc_nl_X0 [5] } = 0;
  assign { FpMul_6U_10U_else_2_if_acc_nl_C0 [0], FpMul_6U_10U_else_2_if_acc_nl_C0 [1], FpMul_6U_10U_else_2_if_acc_nl_C0 [2], FpMul_6U_10U_else_2_if_acc_nl_C0 [3], FpMul_6U_10U_else_2_if_acc_nl_C0 [4], FpMul_6U_10U_else_2_if_acc_nl_C0 [5] } = 0;
  logic [6:0] FpMul_6U_10U_else_2_if_acc_nl_C1 ;
  logic [6:0] FpMul_6U_10U_else_2_if_acc_nl_R1 ;
  logic [6:0] FpMul_6U_10U_else_2_if_acc_nl_X1 ;
  assign FpMul_6U_10U_else_2_if_acc_nl_C1 [6] = | mux_30_nl_C ;
  assign FpMul_6U_10U_else_2_if_acc_nl_X1 [6] = | mux_30_nl_X ;
  assign mux_30_nl_T = FpMul_6U_10U_else_2_if_acc_nl[6] ? ( { 1{ FpMul_6U_10U_else_2_if_acc_nl_T  [6] }} | nand_6_cse_T ) : ( { 1{ FpMul_6U_10U_else_2_if_acc_nl_T  [6] }} | or_tmp_52_T );
  assign mux_30_nl_S = FpMul_6U_10U_else_2_if_acc_nl[6] ? nand_6_cse_S : or_tmp_52_S ;
  assign FpMul_6U_10U_else_2_if_acc_nl_R1 [6] = ( | (mux_30_nl_R | ( mux_30_nl_C & ( { 1{ FpMul_6U_10U_else_2_if_acc_nl[6] }} & nand_6_cse_T | { 1{ !FpMul_6U_10U_else_2_if_acc_nl[6] }} & or_tmp_52_T )))) && nand_6_cse != or_tmp_52 ;
  logic [0:0] nand_6_cse_C6 ;
  logic [0:0] nand_6_cse_R6 ;
  logic [0:0] nand_6_cse_X6 ;
  assign nand_6_cse_C6 = { 1{ FpMul_6U_10U_else_2_if_acc_nl[6] }} ;
  assign nand_6_cse_R6 = { 1{ FpMul_6U_10U_else_2_if_acc_nl[6] }} & ( mux_30_nl_R | ( { 1{ FpMul_6U_10U_else_2_if_acc_nl_T  [6] }} & mux_30_nl_C ));
  assign nand_6_cse_X6 = { 1{ FpMul_6U_10U_else_2_if_acc_nl[6] }} & mux_30_nl_X ;
  logic [0:0] or_tmp_52_C1 ;
  logic [0:0] or_tmp_52_R1 ;
  logic [0:0] or_tmp_52_X1 ;
  assign or_tmp_52_C1 = { 1{ !FpMul_6U_10U_else_2_if_acc_nl[6] }} ;
  assign or_tmp_52_R1 = { 1{ !FpMul_6U_10U_else_2_if_acc_nl[6] }} & ( mux_30_nl_R | ( { 1{ FpMul_6U_10U_else_2_if_acc_nl_T  [6] }} & mux_30_nl_C ));
  assign or_tmp_52_X1 = { 1{ !FpMul_6U_10U_else_2_if_acc_nl[6] }} & mux_30_nl_X ;
  assign mux_29_nl = or_5_cse ? mux_26_nl : mux_28_nl;
  logic [0:0] or_5_cse_C16 ;
  logic [0:0] or_5_cse_R16 ;
  logic [0:0] or_5_cse_X16 ;
  assign or_5_cse_C16 = | mux_29_nl_C ;
  assign or_5_cse_X16 = | mux_29_nl_X ;
  assign mux_29_nl_T = or_5_cse ? ( { 1{ or_5_cse_T  }} | mux_26_nl_T ) : ( { 1{ or_5_cse_T  }} | mux_28_nl_T );
  assign mux_29_nl_S = or_5_cse ? mux_26_nl_S : mux_28_nl_S ;
  assign or_5_cse_R16 = ( | (mux_29_nl_R | ( mux_29_nl_C & ( { 1{ or_5_cse }} & mux_26_nl_T | { 1{ !or_5_cse }} & mux_28_nl_T )))) && mux_26_nl != mux_28_nl ;
  logic [0:0] mux_26_nl_C0 ;
  logic [0:0] mux_26_nl_R0 ;
  logic [0:0] mux_26_nl_X0 ;
  assign mux_26_nl_C0 = { 1{ or_5_cse }} ;
  assign mux_26_nl_R0 = { 1{ or_5_cse }} & ( mux_29_nl_R | ( { 1{ or_5_cse_T  }} & mux_29_nl_C ));
  assign mux_26_nl_X0 = { 1{ or_5_cse }} & mux_29_nl_X ;
  logic [0:0] mux_28_nl_C0 ;
  logic [0:0] mux_28_nl_R0 ;
  logic [0:0] mux_28_nl_X0 ;
  assign mux_28_nl_C0 = { 1{ !or_5_cse }} ;
  assign mux_28_nl_R0 = { 1{ !or_5_cse }} & ( mux_29_nl_R | ( { 1{ or_5_cse_T  }} & mux_29_nl_C ));
  assign mux_28_nl_X0 = { 1{ !or_5_cse }} & mux_29_nl_X ;
  assign mux_28_nl = IsNaN_6U_10U_land_lpi_1_dfm_st_3 ? or_tmp_49 : mux_27_nl;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_st_3_C6 ;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_st_3_R6 ;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_st_3_X6 ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_st_3_C6 = | mux_28_nl_C ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_st_3_X6 = | mux_28_nl_X ;
  assign mux_28_nl_T = IsNaN_6U_10U_land_lpi_1_dfm_st_3 ? ( { 1{ IsNaN_6U_10U_land_lpi_1_dfm_st_3_T  }} | or_tmp_49_T ) : ( { 1{ IsNaN_6U_10U_land_lpi_1_dfm_st_3_T  }} | mux_27_nl_T );
  assign mux_28_nl_S = IsNaN_6U_10U_land_lpi_1_dfm_st_3 ? or_tmp_49_S : mux_27_nl_S ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_st_3_R6 = ( | (mux_28_nl_R | ( mux_28_nl_C & ( { 1{ IsNaN_6U_10U_land_lpi_1_dfm_st_3 }} & or_tmp_49_T | { 1{ !IsNaN_6U_10U_land_lpi_1_dfm_st_3 }} & mux_27_nl_T )))) && or_tmp_49 != mux_27_nl ;
  logic [0:0] or_tmp_49_C1 ;
  logic [0:0] or_tmp_49_R1 ;
  logic [0:0] or_tmp_49_X1 ;
  assign or_tmp_49_C1 = { 1{ IsNaN_6U_10U_land_lpi_1_dfm_st_3 }} ;
  assign or_tmp_49_R1 = { 1{ IsNaN_6U_10U_land_lpi_1_dfm_st_3 }} & ( mux_28_nl_R | ( { 1{ IsNaN_6U_10U_land_lpi_1_dfm_st_3_T  }} & mux_28_nl_C ));
  assign or_tmp_49_X1 = { 1{ IsNaN_6U_10U_land_lpi_1_dfm_st_3 }} & mux_28_nl_X ;
  logic [0:0] mux_27_nl_C0 ;
  logic [0:0] mux_27_nl_R0 ;
  logic [0:0] mux_27_nl_X0 ;
  assign mux_27_nl_C0 = { 1{ !IsNaN_6U_10U_land_lpi_1_dfm_st_3 }} ;
  assign mux_27_nl_R0 = { 1{ !IsNaN_6U_10U_land_lpi_1_dfm_st_3 }} & ( mux_28_nl_R | ( { 1{ IsNaN_6U_10U_land_lpi_1_dfm_st_3_T  }} & mux_28_nl_C ));
  assign mux_27_nl_X0 = { 1{ !IsNaN_6U_10U_land_lpi_1_dfm_st_3 }} & mux_28_nl_X ;
  assign mux_27_nl = IsNaN_6U_10U_1_land_lpi_1_dfm_3 ? _000_ : or_tmp_49;
  logic [0:0] IsNaN_6U_10U_1_land_lpi_1_dfm_3_C3 ;
  logic [0:0] IsNaN_6U_10U_1_land_lpi_1_dfm_3_R3 ;
  logic [0:0] IsNaN_6U_10U_1_land_lpi_1_dfm_3_X3 ;
  assign IsNaN_6U_10U_1_land_lpi_1_dfm_3_C3 = | mux_27_nl_C ;
  assign IsNaN_6U_10U_1_land_lpi_1_dfm_3_X3 = | mux_27_nl_X ;
  assign mux_27_nl_T = IsNaN_6U_10U_1_land_lpi_1_dfm_3 ? ( { 1{ IsNaN_6U_10U_1_land_lpi_1_dfm_3_T  }} | _000__T ) : ( { 1{ IsNaN_6U_10U_1_land_lpi_1_dfm_3_T  }} | or_tmp_49_T );
  assign mux_27_nl_S = IsNaN_6U_10U_1_land_lpi_1_dfm_3 ? _000__S : or_tmp_49_S ;
  assign IsNaN_6U_10U_1_land_lpi_1_dfm_3_R3 = ( | (mux_27_nl_R | ( mux_27_nl_C & ( { 1{ IsNaN_6U_10U_1_land_lpi_1_dfm_3 }} & _000__T | { 1{ !IsNaN_6U_10U_1_land_lpi_1_dfm_3 }} & or_tmp_49_T )))) && _000_ != or_tmp_49 ;
  logic [0:0] _000__C6 ;
  logic [0:0] _000__R6 ;
  logic [0:0] _000__X6 ;
  assign _000__C6 = { 1{ IsNaN_6U_10U_1_land_lpi_1_dfm_3 }} ;
  assign _000__R6 = { 1{ IsNaN_6U_10U_1_land_lpi_1_dfm_3 }} & ( mux_27_nl_R | ( { 1{ IsNaN_6U_10U_1_land_lpi_1_dfm_3_T  }} & mux_27_nl_C ));
  assign _000__X6 = { 1{ IsNaN_6U_10U_1_land_lpi_1_dfm_3 }} & mux_27_nl_X ;
  logic [0:0] or_tmp_49_C2 ;
  logic [0:0] or_tmp_49_R2 ;
  logic [0:0] or_tmp_49_X2 ;
  assign or_tmp_49_C2 = { 1{ !IsNaN_6U_10U_1_land_lpi_1_dfm_3 }} ;
  assign or_tmp_49_R2 = { 1{ !IsNaN_6U_10U_1_land_lpi_1_dfm_3 }} & ( mux_27_nl_R | ( { 1{ IsNaN_6U_10U_1_land_lpi_1_dfm_3_T  }} & mux_27_nl_C ));
  assign or_tmp_49_X2 = { 1{ !IsNaN_6U_10U_1_land_lpi_1_dfm_3 }} & mux_27_nl_X ;
  assign mux_26_nl = or_68_cse ? or_tmp_48 : mux_25_nl;
  logic [0:0] or_68_cse_C4 ;
  logic [0:0] or_68_cse_R4 ;
  logic [0:0] or_68_cse_X4 ;
  assign or_68_cse_C4 = | mux_26_nl_C ;
  assign or_68_cse_X4 = | mux_26_nl_X ;
  assign mux_26_nl_T = or_68_cse ? ( { 1{ or_68_cse_T  }} | or_tmp_48_T ) : ( { 1{ or_68_cse_T  }} | mux_25_nl_T );
  assign mux_26_nl_S = or_68_cse ? or_tmp_48_S : mux_25_nl_S ;
  assign or_68_cse_R4 = ( | (mux_26_nl_R | ( mux_26_nl_C & ( { 1{ or_68_cse }} & or_tmp_48_T | { 1{ !or_68_cse }} & mux_25_nl_T )))) && or_tmp_48 != mux_25_nl ;
  logic [0:0] or_tmp_48_C0 ;
  logic [0:0] or_tmp_48_R0 ;
  logic [0:0] or_tmp_48_X0 ;
  assign or_tmp_48_C0 = { 1{ or_68_cse }} ;
  assign or_tmp_48_R0 = { 1{ or_68_cse }} & ( mux_26_nl_R | ( { 1{ or_68_cse_T  }} & mux_26_nl_C ));
  assign or_tmp_48_X0 = { 1{ or_68_cse }} & mux_26_nl_X ;
  logic [0:0] mux_25_nl_C0 ;
  logic [0:0] mux_25_nl_R0 ;
  logic [0:0] mux_25_nl_X0 ;
  assign mux_25_nl_C0 = { 1{ !or_68_cse }} ;
  assign mux_25_nl_R0 = { 1{ !or_68_cse }} & ( mux_26_nl_R | ( { 1{ or_68_cse_T  }} & mux_26_nl_C ));
  assign mux_25_nl_X0 = { 1{ !or_68_cse }} & mux_26_nl_X ;
  assign mux_25_nl = FpMul_6U_10U_else_2_if_acc_nl[6] ? nand_6_cse : or_tmp_48;
  assign { FpMul_6U_10U_else_2_if_acc_nl_R1 [0], FpMul_6U_10U_else_2_if_acc_nl_R1 [1], FpMul_6U_10U_else_2_if_acc_nl_R1 [2], FpMul_6U_10U_else_2_if_acc_nl_R1 [3], FpMul_6U_10U_else_2_if_acc_nl_R1 [4], FpMul_6U_10U_else_2_if_acc_nl_R1 [5] } = 0;
  assign { FpMul_6U_10U_else_2_if_acc_nl_X1 [0], FpMul_6U_10U_else_2_if_acc_nl_X1 [1], FpMul_6U_10U_else_2_if_acc_nl_X1 [2], FpMul_6U_10U_else_2_if_acc_nl_X1 [3], FpMul_6U_10U_else_2_if_acc_nl_X1 [4], FpMul_6U_10U_else_2_if_acc_nl_X1 [5] } = 0;
  assign { FpMul_6U_10U_else_2_if_acc_nl_C1 [0], FpMul_6U_10U_else_2_if_acc_nl_C1 [1], FpMul_6U_10U_else_2_if_acc_nl_C1 [2], FpMul_6U_10U_else_2_if_acc_nl_C1 [3], FpMul_6U_10U_else_2_if_acc_nl_C1 [4], FpMul_6U_10U_else_2_if_acc_nl_C1 [5] } = 0;
  logic [6:0] FpMul_6U_10U_else_2_if_acc_nl_C2 ;
  logic [6:0] FpMul_6U_10U_else_2_if_acc_nl_R2 ;
  logic [6:0] FpMul_6U_10U_else_2_if_acc_nl_X2 ;
  assign FpMul_6U_10U_else_2_if_acc_nl_C2 [6] = | mux_25_nl_C ;
  assign FpMul_6U_10U_else_2_if_acc_nl_X2 [6] = | mux_25_nl_X ;
  assign mux_25_nl_T = FpMul_6U_10U_else_2_if_acc_nl[6] ? ( { 1{ FpMul_6U_10U_else_2_if_acc_nl_T  [6] }} | nand_6_cse_T ) : ( { 1{ FpMul_6U_10U_else_2_if_acc_nl_T  [6] }} | or_tmp_48_T );
  assign mux_25_nl_S = FpMul_6U_10U_else_2_if_acc_nl[6] ? nand_6_cse_S : or_tmp_48_S ;
  assign FpMul_6U_10U_else_2_if_acc_nl_R2 [6] = ( | (mux_25_nl_R | ( mux_25_nl_C & ( { 1{ FpMul_6U_10U_else_2_if_acc_nl[6] }} & nand_6_cse_T | { 1{ !FpMul_6U_10U_else_2_if_acc_nl[6] }} & or_tmp_48_T )))) && nand_6_cse != or_tmp_48 ;
  logic [0:0] nand_6_cse_C7 ;
  logic [0:0] nand_6_cse_R7 ;
  logic [0:0] nand_6_cse_X7 ;
  assign nand_6_cse_C7 = { 1{ FpMul_6U_10U_else_2_if_acc_nl[6] }} ;
  assign nand_6_cse_R7 = { 1{ FpMul_6U_10U_else_2_if_acc_nl[6] }} & ( mux_25_nl_R | ( { 1{ FpMul_6U_10U_else_2_if_acc_nl_T  [6] }} & mux_25_nl_C ));
  assign nand_6_cse_X7 = { 1{ FpMul_6U_10U_else_2_if_acc_nl[6] }} & mux_25_nl_X ;
  logic [0:0] or_tmp_48_C1 ;
  logic [0:0] or_tmp_48_R1 ;
  logic [0:0] or_tmp_48_X1 ;
  assign or_tmp_48_C1 = { 1{ !FpMul_6U_10U_else_2_if_acc_nl[6] }} ;
  assign or_tmp_48_R1 = { 1{ !FpMul_6U_10U_else_2_if_acc_nl[6] }} & ( mux_25_nl_R | ( { 1{ FpMul_6U_10U_else_2_if_acc_nl_T  [6] }} & mux_25_nl_C ));
  assign or_tmp_48_X1 = { 1{ !FpMul_6U_10U_else_2_if_acc_nl[6] }} & mux_25_nl_X ;
  assign mux_20_nl = or_65_cse ? or_38_nl : mux_19_nl;
  logic [0:0] or_65_cse_C1 ;
  logic [0:0] or_65_cse_R1 ;
  logic [0:0] or_65_cse_X1 ;
  assign or_65_cse_C1 = | mux_20_nl_C ;
  assign or_65_cse_X1 = | mux_20_nl_X ;
  assign mux_20_nl_T = or_65_cse ? ( { 1{ or_65_cse_T  }} | or_38_nl_T ) : ( { 1{ or_65_cse_T  }} | mux_19_nl_T );
  assign mux_20_nl_S = or_65_cse ? or_38_nl_S : mux_19_nl_S ;
  assign or_65_cse_R1 = ( | (mux_20_nl_R | ( mux_20_nl_C & ( { 1{ or_65_cse }} & or_38_nl_T | { 1{ !or_65_cse }} & mux_19_nl_T )))) && or_38_nl != mux_19_nl ;
  logic [0:0] or_38_nl_C0 ;
  logic [0:0] or_38_nl_R0 ;
  logic [0:0] or_38_nl_X0 ;
  assign or_38_nl_C0 = { 1{ or_65_cse }} ;
  assign or_38_nl_R0 = { 1{ or_65_cse }} & ( mux_20_nl_R | ( { 1{ or_65_cse_T  }} & mux_20_nl_C ));
  assign or_38_nl_X0 = { 1{ or_65_cse }} & mux_20_nl_X ;
  logic [0:0] mux_19_nl_C0 ;
  logic [0:0] mux_19_nl_R0 ;
  logic [0:0] mux_19_nl_X0 ;
  assign mux_19_nl_C0 = { 1{ !or_65_cse }} ;
  assign mux_19_nl_R0 = { 1{ !or_65_cse }} & ( mux_20_nl_R | ( { 1{ or_65_cse_T  }} & mux_20_nl_C ));
  assign mux_19_nl_X0 = { 1{ !or_65_cse }} & mux_20_nl_X ;
  assign mux_19_nl = chn_o_rsci_bawt ? or_tmp_40 : mux_18_nl;
  logic [0:0] chn_o_rsci_bawt_C5 ;
  logic [0:0] chn_o_rsci_bawt_R5 ;
  logic [0:0] chn_o_rsci_bawt_X5 ;
  assign chn_o_rsci_bawt_C5 = | mux_19_nl_C ;
  assign chn_o_rsci_bawt_X5 = | mux_19_nl_X ;
  assign mux_19_nl_T = chn_o_rsci_bawt ? ( { 1{ chn_o_rsci_bawt_T  }} | or_tmp_40_T ) : ( { 1{ chn_o_rsci_bawt_T  }} | mux_18_nl_T );
  assign mux_19_nl_S = chn_o_rsci_bawt ? or_tmp_40_S : mux_18_nl_S ;
  assign chn_o_rsci_bawt_R5 = ( | (mux_19_nl_R | ( mux_19_nl_C & ( { 1{ chn_o_rsci_bawt }} & or_tmp_40_T | { 1{ !chn_o_rsci_bawt }} & mux_18_nl_T )))) && or_tmp_40 != mux_18_nl ;
  logic [0:0] or_tmp_40_C0 ;
  logic [0:0] or_tmp_40_R0 ;
  logic [0:0] or_tmp_40_X0 ;
  assign or_tmp_40_C0 = { 1{ chn_o_rsci_bawt }} ;
  assign or_tmp_40_R0 = { 1{ chn_o_rsci_bawt }} & ( mux_19_nl_R | ( { 1{ chn_o_rsci_bawt_T  }} & mux_19_nl_C ));
  assign or_tmp_40_X0 = { 1{ chn_o_rsci_bawt }} & mux_19_nl_X ;
  logic [0:0] mux_18_nl_C0 ;
  logic [0:0] mux_18_nl_R0 ;
  logic [0:0] mux_18_nl_X0 ;
  assign mux_18_nl_C0 = { 1{ !chn_o_rsci_bawt }} ;
  assign mux_18_nl_R0 = { 1{ !chn_o_rsci_bawt }} & ( mux_19_nl_R | ( { 1{ chn_o_rsci_bawt_T  }} & mux_19_nl_C ));
  assign mux_18_nl_X0 = { 1{ !chn_o_rsci_bawt }} & mux_19_nl_X ;
  assign mux_18_nl = reg_chn_o_rsci_ld_core_psct_cse ? _000_ : or_tmp_40;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C6 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R6 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X6 ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C6 = | mux_18_nl_C ;
  assign reg_chn_o_rsci_ld_core_psct_cse_X6 = | mux_18_nl_X ;
  assign mux_18_nl_T = reg_chn_o_rsci_ld_core_psct_cse ? ( { 1{ reg_chn_o_rsci_ld_core_psct_cse_T  }} | _000__T ) : ( { 1{ reg_chn_o_rsci_ld_core_psct_cse_T  }} | or_tmp_40_T );
  assign mux_18_nl_S = reg_chn_o_rsci_ld_core_psct_cse ? _000__S : or_tmp_40_S ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R6 = ( | (mux_18_nl_R | ( mux_18_nl_C & ( { 1{ reg_chn_o_rsci_ld_core_psct_cse }} & _000__T | { 1{ !reg_chn_o_rsci_ld_core_psct_cse }} & or_tmp_40_T )))) && _000_ != or_tmp_40 ;
  logic [0:0] _000__C7 ;
  logic [0:0] _000__R7 ;
  logic [0:0] _000__X7 ;
  assign _000__C7 = { 1{ reg_chn_o_rsci_ld_core_psct_cse }} ;
  assign _000__R7 = { 1{ reg_chn_o_rsci_ld_core_psct_cse }} & ( mux_18_nl_R | ( { 1{ reg_chn_o_rsci_ld_core_psct_cse_T  }} & mux_18_nl_C ));
  assign _000__X7 = { 1{ reg_chn_o_rsci_ld_core_psct_cse }} & mux_18_nl_X ;
  logic [0:0] or_tmp_40_C1 ;
  logic [0:0] or_tmp_40_R1 ;
  logic [0:0] or_tmp_40_X1 ;
  assign or_tmp_40_C1 = { 1{ !reg_chn_o_rsci_ld_core_psct_cse }} ;
  assign or_tmp_40_R1 = { 1{ !reg_chn_o_rsci_ld_core_psct_cse }} & ( mux_18_nl_R | ( { 1{ reg_chn_o_rsci_ld_core_psct_cse_T  }} & mux_18_nl_C ));
  assign or_tmp_40_X1 = { 1{ !reg_chn_o_rsci_ld_core_psct_cse }} & mux_18_nl_X ;
  assign mux_11_nl = FpMul_6U_10U_lor_1_lpi_1_dfm_st_3 ? nor_38_nl : mux_10_nl;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_C4 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_R4 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_X4 ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_C4 = | mux_11_nl_C ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_X4 = | mux_11_nl_X ;
  assign mux_11_nl_T = FpMul_6U_10U_lor_1_lpi_1_dfm_st_3 ? ( { 1{ FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_T  }} | nor_38_nl_T ) : ( { 1{ FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_T  }} | mux_10_nl_T );
  assign mux_11_nl_S = FpMul_6U_10U_lor_1_lpi_1_dfm_st_3 ? nor_38_nl_S : mux_10_nl_S ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_R4 = ( | (mux_11_nl_R | ( mux_11_nl_C & ( { 1{ FpMul_6U_10U_lor_1_lpi_1_dfm_st_3 }} & nor_38_nl_T | { 1{ !FpMul_6U_10U_lor_1_lpi_1_dfm_st_3 }} & mux_10_nl_T )))) && nor_38_nl != mux_10_nl ;
  logic [0:0] nor_38_nl_C0 ;
  logic [0:0] nor_38_nl_R0 ;
  logic [0:0] nor_38_nl_X0 ;
  assign nor_38_nl_C0 = { 1{ FpMul_6U_10U_lor_1_lpi_1_dfm_st_3 }} ;
  assign nor_38_nl_R0 = { 1{ FpMul_6U_10U_lor_1_lpi_1_dfm_st_3 }} & ( mux_11_nl_R | ( { 1{ FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_T  }} & mux_11_nl_C ));
  assign nor_38_nl_X0 = { 1{ FpMul_6U_10U_lor_1_lpi_1_dfm_st_3 }} & mux_11_nl_X ;
  logic [0:0] mux_10_nl_C0 ;
  logic [0:0] mux_10_nl_R0 ;
  logic [0:0] mux_10_nl_X0 ;
  assign mux_10_nl_C0 = { 1{ !FpMul_6U_10U_lor_1_lpi_1_dfm_st_3 }} ;
  assign mux_10_nl_R0 = { 1{ !FpMul_6U_10U_lor_1_lpi_1_dfm_st_3 }} & ( mux_11_nl_R | ( { 1{ FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_T  }} & mux_11_nl_C ));
  assign mux_10_nl_X0 = { 1{ !FpMul_6U_10U_lor_1_lpi_1_dfm_st_3 }} & mux_11_nl_X ;
  assign mux_10_nl = _169_ ? mux_tmp_6 : or_tmp_16;
  logic [0:0] _169__C2 ;
  logic [0:0] _169__R2 ;
  logic [0:0] _169__X2 ;
  assign _169__C2 = | mux_10_nl_C ;
  assign _169__X2 = | mux_10_nl_X ;
  assign mux_10_nl_T = _169_ ? ( { 1{ _169__T  }} | mux_tmp_6_T ) : ( { 1{ _169__T  }} | or_tmp_16_T );
  assign mux_10_nl_S = _169_ ? mux_tmp_6_S : or_tmp_16_S ;
  assign _169__R2 = ( | (mux_10_nl_R | ( mux_10_nl_C & ( { 1{ _169_ }} & mux_tmp_6_T | { 1{ !_169_ }} & or_tmp_16_T )))) && mux_tmp_6 != or_tmp_16 ;
  logic [0:0] mux_tmp_6_C0 ;
  logic [0:0] mux_tmp_6_R0 ;
  logic [0:0] mux_tmp_6_X0 ;
  assign mux_tmp_6_C0 = { 1{ _169_ }} ;
  assign mux_tmp_6_R0 = { 1{ _169_ }} & ( mux_10_nl_R | ( { 1{ _169__T  }} & mux_10_nl_C ));
  assign mux_tmp_6_X0 = { 1{ _169_ }} & mux_10_nl_X ;
  logic [0:0] or_tmp_16_C0 ;
  logic [0:0] or_tmp_16_R0 ;
  logic [0:0] or_tmp_16_X0 ;
  assign or_tmp_16_C0 = { 1{ !_169_ }} ;
  assign or_tmp_16_R0 = { 1{ !_169_ }} & ( mux_10_nl_R | ( { 1{ _169__T  }} & mux_10_nl_C ));
  assign or_tmp_16_X0 = { 1{ !_169_ }} & mux_10_nl_X ;
  assign mux_9_nl = or_65_cse ? nor_39_nl : mux_8_nl;
  logic [0:0] or_65_cse_C2 ;
  logic [0:0] or_65_cse_R2 ;
  logic [0:0] or_65_cse_X2 ;
  assign or_65_cse_C2 = | mux_9_nl_C ;
  assign or_65_cse_X2 = | mux_9_nl_X ;
  assign mux_9_nl_T = or_65_cse ? ( { 1{ or_65_cse_T  }} | nor_39_nl_T ) : ( { 1{ or_65_cse_T  }} | mux_8_nl_T );
  assign mux_9_nl_S = or_65_cse ? nor_39_nl_S : mux_8_nl_S ;
  assign or_65_cse_R2 = ( | (mux_9_nl_R | ( mux_9_nl_C & ( { 1{ or_65_cse }} & nor_39_nl_T | { 1{ !or_65_cse }} & mux_8_nl_T )))) && nor_39_nl != mux_8_nl ;
  logic [0:0] nor_39_nl_C0 ;
  logic [0:0] nor_39_nl_R0 ;
  logic [0:0] nor_39_nl_X0 ;
  assign nor_39_nl_C0 = { 1{ or_65_cse }} ;
  assign nor_39_nl_R0 = { 1{ or_65_cse }} & ( mux_9_nl_R | ( { 1{ or_65_cse_T  }} & mux_9_nl_C ));
  assign nor_39_nl_X0 = { 1{ or_65_cse }} & mux_9_nl_X ;
  logic [0:0] mux_8_nl_C0 ;
  logic [0:0] mux_8_nl_R0 ;
  logic [0:0] mux_8_nl_X0 ;
  assign mux_8_nl_C0 = { 1{ !or_65_cse }} ;
  assign mux_8_nl_R0 = { 1{ !or_65_cse }} & ( mux_9_nl_R | ( { 1{ or_65_cse_T  }} & mux_9_nl_C ));
  assign mux_8_nl_X0 = { 1{ !or_65_cse }} & mux_9_nl_X ;
  assign mux_8_nl = _179_ ? mux_tmp_6 : or_tmp_16;
  logic [0:0] _179__C1 ;
  logic [0:0] _179__R1 ;
  logic [0:0] _179__X1 ;
  assign _179__C1 = | mux_8_nl_C ;
  assign _179__X1 = | mux_8_nl_X ;
  assign mux_8_nl_T = _179_ ? ( { 1{ _179__T  }} | mux_tmp_6_T ) : ( { 1{ _179__T  }} | or_tmp_16_T );
  assign mux_8_nl_S = _179_ ? mux_tmp_6_S : or_tmp_16_S ;
  assign _179__R1 = ( | (mux_8_nl_R | ( mux_8_nl_C & ( { 1{ _179_ }} & mux_tmp_6_T | { 1{ !_179_ }} & or_tmp_16_T )))) && mux_tmp_6 != or_tmp_16 ;
  logic [0:0] mux_tmp_6_C1 ;
  logic [0:0] mux_tmp_6_R1 ;
  logic [0:0] mux_tmp_6_X1 ;
  assign mux_tmp_6_C1 = { 1{ _179_ }} ;
  assign mux_tmp_6_R1 = { 1{ _179_ }} & ( mux_8_nl_R | ( { 1{ _179__T  }} & mux_8_nl_C ));
  assign mux_tmp_6_X1 = { 1{ _179_ }} & mux_8_nl_X ;
  logic [0:0] or_tmp_16_C1 ;
  logic [0:0] or_tmp_16_R1 ;
  logic [0:0] or_tmp_16_X1 ;
  assign or_tmp_16_C1 = { 1{ !_179_ }} ;
  assign or_tmp_16_R1 = { 1{ !_179_ }} & ( mux_8_nl_R | ( { 1{ _179__T  }} & mux_8_nl_C ));
  assign or_tmp_16_X1 = { 1{ !_179_ }} & mux_8_nl_X ;
  assign mux_5_nl = or_5_cse ? nor_41_nl : mux_4_nl;
  logic [0:0] or_5_cse_C17 ;
  logic [0:0] or_5_cse_R17 ;
  logic [0:0] or_5_cse_X17 ;
  assign or_5_cse_C17 = | mux_5_nl_C ;
  assign or_5_cse_X17 = | mux_5_nl_X ;
  assign mux_5_nl_T = or_5_cse ? ( { 1{ or_5_cse_T  }} | nor_41_nl_T ) : ( { 1{ or_5_cse_T  }} | mux_4_nl_T );
  assign mux_5_nl_S = or_5_cse ? nor_41_nl_S : mux_4_nl_S ;
  assign or_5_cse_R17 = ( | (mux_5_nl_R | ( mux_5_nl_C & ( { 1{ or_5_cse }} & nor_41_nl_T | { 1{ !or_5_cse }} & mux_4_nl_T )))) && nor_41_nl != mux_4_nl ;
  logic [0:0] nor_41_nl_C0 ;
  logic [0:0] nor_41_nl_R0 ;
  logic [0:0] nor_41_nl_X0 ;
  assign nor_41_nl_C0 = { 1{ or_5_cse }} ;
  assign nor_41_nl_R0 = { 1{ or_5_cse }} & ( mux_5_nl_R | ( { 1{ or_5_cse_T  }} & mux_5_nl_C ));
  assign nor_41_nl_X0 = { 1{ or_5_cse }} & mux_5_nl_X ;
  logic [0:0] mux_4_nl_C0 ;
  logic [0:0] mux_4_nl_R0 ;
  logic [0:0] mux_4_nl_X0 ;
  assign mux_4_nl_C0 = { 1{ !or_5_cse }} ;
  assign mux_4_nl_R0 = { 1{ !or_5_cse }} & ( mux_5_nl_R | ( { 1{ or_5_cse_T  }} & mux_5_nl_C ));
  assign mux_4_nl_X0 = { 1{ !or_5_cse }} & mux_5_nl_X ;
  assign mux_4_nl = FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2 ? nor_42_cse : nor_43_nl;
  logic [0:0] FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_C1 ;
  logic [0:0] FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_R1 ;
  logic [0:0] FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_X1 ;
  assign FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_C1 = | mux_4_nl_C ;
  assign FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_X1 = | mux_4_nl_X ;
  assign mux_4_nl_T = FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2 ? ( { 1{ FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_T  }} | nor_42_cse_T ) : ( { 1{ FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_T  }} | nor_43_nl_T );
  assign mux_4_nl_S = FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2 ? nor_42_cse_S : nor_43_nl_S ;
  assign FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_R1 = ( | (mux_4_nl_R | ( mux_4_nl_C & ( { 1{ FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2 }} & nor_42_cse_T | { 1{ !FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2 }} & nor_43_nl_T )))) && nor_42_cse != nor_43_nl ;
  logic [0:0] nor_42_cse_C0 ;
  logic [0:0] nor_42_cse_R0 ;
  logic [0:0] nor_42_cse_X0 ;
  assign nor_42_cse_C0 = { 1{ FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2 }} ;
  assign nor_42_cse_R0 = { 1{ FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2 }} & ( mux_4_nl_R | ( { 1{ FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_T  }} & mux_4_nl_C ));
  assign nor_42_cse_X0 = { 1{ FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2 }} & mux_4_nl_X ;
  logic [0:0] nor_43_nl_C0 ;
  logic [0:0] nor_43_nl_R0 ;
  logic [0:0] nor_43_nl_X0 ;
  assign nor_43_nl_C0 = { 1{ !FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2 }} ;
  assign nor_43_nl_R0 = { 1{ !FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2 }} & ( mux_4_nl_R | ( { 1{ FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_T  }} & mux_4_nl_C ));
  assign nor_43_nl_X0 = { 1{ !FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2 }} & mux_4_nl_X ;
  assign mux_2_nl = FpMul_6U_10U_lor_1_lpi_1_dfm_st_3 ? or_2_nl : mux_1_nl;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_C5 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_R5 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_X5 ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_C5 = | mux_2_nl_C ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_X5 = | mux_2_nl_X ;
  assign mux_2_nl_T = FpMul_6U_10U_lor_1_lpi_1_dfm_st_3 ? ( { 1{ FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_T  }} | or_2_nl_T ) : ( { 1{ FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_T  }} | mux_1_nl_T );
  assign mux_2_nl_S = FpMul_6U_10U_lor_1_lpi_1_dfm_st_3 ? or_2_nl_S : mux_1_nl_S ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_R5 = ( | (mux_2_nl_R | ( mux_2_nl_C & ( { 1{ FpMul_6U_10U_lor_1_lpi_1_dfm_st_3 }} & or_2_nl_T | { 1{ !FpMul_6U_10U_lor_1_lpi_1_dfm_st_3 }} & mux_1_nl_T )))) && or_2_nl != mux_1_nl ;
  logic [0:0] or_2_nl_C0 ;
  logic [0:0] or_2_nl_R0 ;
  logic [0:0] or_2_nl_X0 ;
  assign or_2_nl_C0 = { 1{ FpMul_6U_10U_lor_1_lpi_1_dfm_st_3 }} ;
  assign or_2_nl_R0 = { 1{ FpMul_6U_10U_lor_1_lpi_1_dfm_st_3 }} & ( mux_2_nl_R | ( { 1{ FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_T  }} & mux_2_nl_C ));
  assign or_2_nl_X0 = { 1{ FpMul_6U_10U_lor_1_lpi_1_dfm_st_3 }} & mux_2_nl_X ;
  logic [0:0] mux_1_nl_C0 ;
  logic [0:0] mux_1_nl_R0 ;
  logic [0:0] mux_1_nl_X0 ;
  assign mux_1_nl_C0 = { 1{ !FpMul_6U_10U_lor_1_lpi_1_dfm_st_3 }} ;
  assign mux_1_nl_R0 = { 1{ !FpMul_6U_10U_lor_1_lpi_1_dfm_st_3 }} & ( mux_2_nl_R | ( { 1{ FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_T  }} & mux_2_nl_C ));
  assign mux_1_nl_X0 = { 1{ !FpMul_6U_10U_lor_1_lpi_1_dfm_st_3 }} & mux_2_nl_X ;
  assign mux_1_nl = chn_o_rsci_bawt ? or_tmp_4 : mux_nl;
  logic [0:0] chn_o_rsci_bawt_C6 ;
  logic [0:0] chn_o_rsci_bawt_R6 ;
  logic [0:0] chn_o_rsci_bawt_X6 ;
  assign chn_o_rsci_bawt_C6 = | mux_1_nl_C ;
  assign chn_o_rsci_bawt_X6 = | mux_1_nl_X ;
  assign mux_1_nl_T = chn_o_rsci_bawt ? ( { 1{ chn_o_rsci_bawt_T  }} | or_tmp_4_T ) : ( { 1{ chn_o_rsci_bawt_T  }} | mux_nl_T );
  assign mux_1_nl_S = chn_o_rsci_bawt ? or_tmp_4_S : mux_nl_S ;
  assign chn_o_rsci_bawt_R6 = ( | (mux_1_nl_R | ( mux_1_nl_C & ( { 1{ chn_o_rsci_bawt }} & or_tmp_4_T | { 1{ !chn_o_rsci_bawt }} & mux_nl_T )))) && or_tmp_4 != mux_nl ;
  logic [0:0] or_tmp_4_C0 ;
  logic [0:0] or_tmp_4_R0 ;
  logic [0:0] or_tmp_4_X0 ;
  assign or_tmp_4_C0 = { 1{ chn_o_rsci_bawt }} ;
  assign or_tmp_4_R0 = { 1{ chn_o_rsci_bawt }} & ( mux_1_nl_R | ( { 1{ chn_o_rsci_bawt_T  }} & mux_1_nl_C ));
  assign or_tmp_4_X0 = { 1{ chn_o_rsci_bawt }} & mux_1_nl_X ;
  logic [0:0] mux_nl_C0 ;
  logic [0:0] mux_nl_R0 ;
  logic [0:0] mux_nl_X0 ;
  assign mux_nl_C0 = { 1{ !chn_o_rsci_bawt }} ;
  assign mux_nl_R0 = { 1{ !chn_o_rsci_bawt }} & ( mux_1_nl_R | ( { 1{ chn_o_rsci_bawt_T  }} & mux_1_nl_C ));
  assign mux_nl_X0 = { 1{ !chn_o_rsci_bawt }} & mux_1_nl_X ;
  assign mux_nl = reg_chn_o_rsci_ld_core_psct_cse ? _000_ : or_tmp_4;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C7 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R7 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X7 ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C7 = | mux_nl_C ;
  assign reg_chn_o_rsci_ld_core_psct_cse_X7 = | mux_nl_X ;
  assign mux_nl_T = reg_chn_o_rsci_ld_core_psct_cse ? ( { 1{ reg_chn_o_rsci_ld_core_psct_cse_T  }} | _000__T ) : ( { 1{ reg_chn_o_rsci_ld_core_psct_cse_T  }} | or_tmp_4_T );
  assign mux_nl_S = reg_chn_o_rsci_ld_core_psct_cse ? _000__S : or_tmp_4_S ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R7 = ( | (mux_nl_R | ( mux_nl_C & ( { 1{ reg_chn_o_rsci_ld_core_psct_cse }} & _000__T | { 1{ !reg_chn_o_rsci_ld_core_psct_cse }} & or_tmp_4_T )))) && _000_ != or_tmp_4 ;
  logic [0:0] _000__C8 ;
  logic [0:0] _000__R8 ;
  logic [0:0] _000__X8 ;
  assign _000__C8 = { 1{ reg_chn_o_rsci_ld_core_psct_cse }} ;
  assign _000__R8 = { 1{ reg_chn_o_rsci_ld_core_psct_cse }} & ( mux_nl_R | ( { 1{ reg_chn_o_rsci_ld_core_psct_cse_T  }} & mux_nl_C ));
  assign _000__X8 = { 1{ reg_chn_o_rsci_ld_core_psct_cse }} & mux_nl_X ;
  logic [0:0] or_tmp_4_C1 ;
  logic [0:0] or_tmp_4_R1 ;
  logic [0:0] or_tmp_4_X1 ;
  assign or_tmp_4_C1 = { 1{ !reg_chn_o_rsci_ld_core_psct_cse }} ;
  assign or_tmp_4_R1 = { 1{ !reg_chn_o_rsci_ld_core_psct_cse }} & ( mux_nl_R | ( { 1{ reg_chn_o_rsci_ld_core_psct_cse_T  }} & mux_nl_C ));
  assign or_tmp_4_X1 = { 1{ !reg_chn_o_rsci_ld_core_psct_cse }} & mux_nl_X ;
  assign FpMul_6U_10U_FpMul_6U_10U_and_2_nl = FpMul_6U_10U_lor_2_lpi_1_dfm ? 6'b000000 : FpMul_6U_10U_o_expo_lpi_1_dfm;
  logic [0:0] FpMul_6U_10U_lor_2_lpi_1_dfm_C0 ;
  logic [0:0] FpMul_6U_10U_lor_2_lpi_1_dfm_R0 ;
  logic [0:0] FpMul_6U_10U_lor_2_lpi_1_dfm_X0 ;
  assign FpMul_6U_10U_lor_2_lpi_1_dfm_C0 = | FpMul_6U_10U_FpMul_6U_10U_and_2_nl_C ;
  assign FpMul_6U_10U_lor_2_lpi_1_dfm_X0 = | FpMul_6U_10U_FpMul_6U_10U_and_2_nl_X ;
  logic [5:0] FpMul_6U_10U_o_expo_lpi_1_dfm_C1 ;
  logic [5:0] FpMul_6U_10U_o_expo_lpi_1_dfm_R1 ;
  logic [5:0] FpMul_6U_10U_o_expo_lpi_1_dfm_X1 ;
  assign FpMul_6U_10U_o_expo_lpi_1_dfm_C1 = { 6{ !FpMul_6U_10U_lor_2_lpi_1_dfm }};
  assign FpMul_6U_10U_o_expo_lpi_1_dfm_R1 = { 6{ !FpMul_6U_10U_lor_2_lpi_1_dfm }} & ( FpMul_6U_10U_FpMul_6U_10U_and_2_nl_R | ( { 6{ FpMul_6U_10U_lor_2_lpi_1_dfm_T  }} & FpMul_6U_10U_FpMul_6U_10U_and_2_nl_C ));
  assign FpMul_6U_10U_o_expo_lpi_1_dfm_X1 = { 6{ !FpMul_6U_10U_lor_2_lpi_1_dfm }} & FpMul_6U_10U_FpMul_6U_10U_and_2_nl_X ;
  assign FpMul_6U_10U_FpMul_6U_10U_and_2_nl_T = FpMul_6U_10U_lor_2_lpi_1_dfm ? { 6{ | FpMul_6U_10U_lor_2_lpi_1_dfm_T  }} : ( { 6{ | FpMul_6U_10U_lor_2_lpi_1_dfm_T  }} | FpMul_6U_10U_o_expo_lpi_1_dfm_T );
  assign FpMul_6U_10U_FpMul_6U_10U_and_2_nl_S = FpMul_6U_10U_lor_2_lpi_1_dfm ? FpMul_6U_10U_lor_2_lpi_1_dfm_S : FpMul_6U_10U_o_expo_lpi_1_dfm_S ;
  assign FpMul_6U_10U_lor_2_lpi_1_dfm_R0 = ( | (FpMul_6U_10U_FpMul_6U_10U_and_2_nl_R | ( { 6{ !FpMul_6U_10U_lor_2_lpi_1_dfm }} & FpMul_6U_10U_o_expo_lpi_1_dfm_T & FpMul_6U_10U_FpMul_6U_10U_and_2_nl_C ))) && 6'b000000 != FpMul_6U_10U_o_expo_lpi_1_dfm ;
  assign _005_ = FpMul_6U_10U_lor_2_lpi_1_dfm ? 10'b1111111111 : FpMul_6U_10U_nor_nl;
  logic [0:0] FpMul_6U_10U_lor_2_lpi_1_dfm_C1 ;
  logic [0:0] FpMul_6U_10U_lor_2_lpi_1_dfm_R1 ;
  logic [0:0] FpMul_6U_10U_lor_2_lpi_1_dfm_X1 ;
  assign FpMul_6U_10U_lor_2_lpi_1_dfm_C1 = | _005__C ;
  assign FpMul_6U_10U_lor_2_lpi_1_dfm_X1 = | _005__X ;
  logic [9:0] FpMul_6U_10U_nor_nl_C0 ;
  logic [9:0] FpMul_6U_10U_nor_nl_R0 ;
  logic [9:0] FpMul_6U_10U_nor_nl_X0 ;
  assign FpMul_6U_10U_nor_nl_C0 = { 10{ !FpMul_6U_10U_lor_2_lpi_1_dfm }};
  assign FpMul_6U_10U_nor_nl_R0 = { 10{ !FpMul_6U_10U_lor_2_lpi_1_dfm }} & ( _005__R | ( { 10{ FpMul_6U_10U_lor_2_lpi_1_dfm_T  }} & _005__C ));
  assign FpMul_6U_10U_nor_nl_X0 = { 10{ !FpMul_6U_10U_lor_2_lpi_1_dfm }} & _005__X ;
  assign _005__T = FpMul_6U_10U_lor_2_lpi_1_dfm ? { 10{ | FpMul_6U_10U_lor_2_lpi_1_dfm_T  }} : ( { 10{ | FpMul_6U_10U_lor_2_lpi_1_dfm_T  }} | FpMul_6U_10U_nor_nl_T );
  assign _005__S = FpMul_6U_10U_lor_2_lpi_1_dfm ? FpMul_6U_10U_lor_2_lpi_1_dfm_S : FpMul_6U_10U_nor_nl_S ;
  assign FpMul_6U_10U_lor_2_lpi_1_dfm_R1 = ( | (_005__R | ( { 10{ !FpMul_6U_10U_lor_2_lpi_1_dfm }} & FpMul_6U_10U_nor_nl_T & _005__C ))) && 10'b1111111111 != FpMul_6U_10U_nor_nl ;
  assign _004_ = _137_ ? mux_37_nl : 10'b1111111111;
  logic [0:0] _137__C2 ;
  logic [0:0] _137__R2 ;
  logic [0:0] _137__X2 ;
  assign _137__C2 = | _004__C ;
  assign _137__X2 = | _004__X ;
  logic [9:0] mux_37_nl_C0 ;
  logic [9:0] mux_37_nl_R0 ;
  logic [9:0] mux_37_nl_X0 ;
  assign mux_37_nl_C0 = { 10{ _137_ }} ;
  assign mux_37_nl_R0 = { 10{ _137_ }} & ( _004__R | ( { 10{ _137__T  }} & _004__C ));
  assign mux_37_nl_X0 = { 10{ _137_ }} & _004__X ;
  assign _004__T = _137_ ? ( { 10{ | _137__T  }} | mux_37_nl_T ) : { 10{ | _137__T  }};
  assign _004__S = _137_ ? mux_37_nl_S : _137__S ;
  assign _137__R2 = ( | (_004__R | ( { 10{ _137_ }} & mux_37_nl_T & _004__C ))) && mux_37_nl != 10'b1111111111 ;
  logic [9:0] fangyuan7;
  logic [9:0] fangyuan7_T ;
  logic [9:0] fangyuan7_R ;
  logic [9:0] fangyuan7_C ;
  logic [9:0] fangyuan7_X ;
  assign fangyuan7 = { _003_[9], _003_[9], _003_[9], _003_[9], _003_[9], _003_[9], _003_[9], _003_[9], _003_[9], _003_[9] };
  assign fangyuan7_T = {  _003__T [9] , _003__T [9] , _003__T [9] , _003__T [9] , _003__T [9] , _003__T [9] , _003__T [9] , _003__T [9] , _003__T [9] , _003__T [9]  };
  logic [13:0] fangyuan7_S ;
  assign fangyuan7_S = 0 ;
  assign { _003__R1 [0], _003__R1 [1], _003__R1 [2], _003__R1 [3], _003__R1 [4], _003__R1 [5], _003__R1 [6], _003__R1 [7], _003__R1 [8] } = 0;
  assign { _003__X1 [0], _003__X1 [1], _003__X1 [2], _003__X1 [3], _003__X1 [4], _003__X1 [5], _003__X1 [6], _003__X1 [7], _003__X1 [8] } = 0;
  assign { _003__C1 [0], _003__C1 [1], _003__C1 [2], _003__C1 [3], _003__C1 [4], _003__C1 [5], _003__C1 [6], _003__C1 [7], _003__C1 [8] } = 0;
  logic [9:0] _003__R2 ;
  logic [9:0] _003__X2 ;
  logic [9:0] _003__C2 ;
  assign _003__R2 [9:9] = fangyuan7_R [9:9] ;
  assign _003__X2 [9:9] = fangyuan7_X [9:9] ;
  assign _003__C2 [9:9] = fangyuan7_C [9:9] ;
  assign { _003__R2 [0], _003__R2 [1], _003__R2 [2], _003__R2 [3], _003__R2 [4], _003__R2 [5], _003__R2 [6], _003__R2 [7], _003__R2 [8] } = 0;
  assign { _003__X2 [0], _003__X2 [1], _003__X2 [2], _003__X2 [3], _003__X2 [4], _003__X2 [5], _003__X2 [6], _003__X2 [7], _003__X2 [8] } = 0;
  assign { _003__C2 [0], _003__C2 [1], _003__C2 [2], _003__C2 [3], _003__C2 [4], _003__C2 [5], _003__C2 [6], _003__C2 [7], _003__C2 [8] } = 0;
  logic [9:0] _003__R3 ;
  logic [9:0] _003__X3 ;
  logic [9:0] _003__C3 ;
  assign _003__R3 [9:9] = fangyuan7_R [8:8] ;
  assign _003__X3 [9:9] = fangyuan7_X [8:8] ;
  assign _003__C3 [9:9] = fangyuan7_C [8:8] ;
  assign { _003__R3 [0], _003__R3 [1], _003__R3 [2], _003__R3 [3], _003__R3 [4], _003__R3 [5], _003__R3 [6], _003__R3 [7], _003__R3 [8] } = 0;
  assign { _003__X3 [0], _003__X3 [1], _003__X3 [2], _003__X3 [3], _003__X3 [4], _003__X3 [5], _003__X3 [6], _003__X3 [7], _003__X3 [8] } = 0;
  assign { _003__C3 [0], _003__C3 [1], _003__C3 [2], _003__C3 [3], _003__C3 [4], _003__C3 [5], _003__C3 [6], _003__C3 [7], _003__C3 [8] } = 0;
  logic [9:0] _003__R4 ;
  logic [9:0] _003__X4 ;
  logic [9:0] _003__C4 ;
  assign _003__R4 [9:9] = fangyuan7_R [7:7] ;
  assign _003__X4 [9:9] = fangyuan7_X [7:7] ;
  assign _003__C4 [9:9] = fangyuan7_C [7:7] ;
  assign { _003__R4 [0], _003__R4 [1], _003__R4 [2], _003__R4 [3], _003__R4 [4], _003__R4 [5], _003__R4 [6], _003__R4 [7], _003__R4 [8] } = 0;
  assign { _003__X4 [0], _003__X4 [1], _003__X4 [2], _003__X4 [3], _003__X4 [4], _003__X4 [5], _003__X4 [6], _003__X4 [7], _003__X4 [8] } = 0;
  assign { _003__C4 [0], _003__C4 [1], _003__C4 [2], _003__C4 [3], _003__C4 [4], _003__C4 [5], _003__C4 [6], _003__C4 [7], _003__C4 [8] } = 0;
  logic [9:0] _003__R5 ;
  logic [9:0] _003__X5 ;
  logic [9:0] _003__C5 ;
  assign _003__R5 [9:9] = fangyuan7_R [6:6] ;
  assign _003__X5 [9:9] = fangyuan7_X [6:6] ;
  assign _003__C5 [9:9] = fangyuan7_C [6:6] ;
  assign { _003__R5 [0], _003__R5 [1], _003__R5 [2], _003__R5 [3], _003__R5 [4], _003__R5 [5], _003__R5 [6], _003__R5 [7], _003__R5 [8] } = 0;
  assign { _003__X5 [0], _003__X5 [1], _003__X5 [2], _003__X5 [3], _003__X5 [4], _003__X5 [5], _003__X5 [6], _003__X5 [7], _003__X5 [8] } = 0;
  assign { _003__C5 [0], _003__C5 [1], _003__C5 [2], _003__C5 [3], _003__C5 [4], _003__C5 [5], _003__C5 [6], _003__C5 [7], _003__C5 [8] } = 0;
  logic [9:0] _003__R6 ;
  logic [9:0] _003__X6 ;
  logic [9:0] _003__C6 ;
  assign _003__R6 [9:9] = fangyuan7_R [5:5] ;
  assign _003__X6 [9:9] = fangyuan7_X [5:5] ;
  assign _003__C6 [9:9] = fangyuan7_C [5:5] ;
  assign { _003__R6 [0], _003__R6 [1], _003__R6 [2], _003__R6 [3], _003__R6 [4], _003__R6 [5], _003__R6 [6], _003__R6 [7], _003__R6 [8] } = 0;
  assign { _003__X6 [0], _003__X6 [1], _003__X6 [2], _003__X6 [3], _003__X6 [4], _003__X6 [5], _003__X6 [6], _003__X6 [7], _003__X6 [8] } = 0;
  assign { _003__C6 [0], _003__C6 [1], _003__C6 [2], _003__C6 [3], _003__C6 [4], _003__C6 [5], _003__C6 [6], _003__C6 [7], _003__C6 [8] } = 0;
  logic [9:0] _003__R7 ;
  logic [9:0] _003__X7 ;
  logic [9:0] _003__C7 ;
  assign _003__R7 [9:9] = fangyuan7_R [4:4] ;
  assign _003__X7 [9:9] = fangyuan7_X [4:4] ;
  assign _003__C7 [9:9] = fangyuan7_C [4:4] ;
  assign { _003__R7 [0], _003__R7 [1], _003__R7 [2], _003__R7 [3], _003__R7 [4], _003__R7 [5], _003__R7 [6], _003__R7 [7], _003__R7 [8] } = 0;
  assign { _003__X7 [0], _003__X7 [1], _003__X7 [2], _003__X7 [3], _003__X7 [4], _003__X7 [5], _003__X7 [6], _003__X7 [7], _003__X7 [8] } = 0;
  assign { _003__C7 [0], _003__C7 [1], _003__C7 [2], _003__C7 [3], _003__C7 [4], _003__C7 [5], _003__C7 [6], _003__C7 [7], _003__C7 [8] } = 0;
  logic [9:0] _003__R8 ;
  logic [9:0] _003__X8 ;
  logic [9:0] _003__C8 ;
  assign _003__R8 [9:9] = fangyuan7_R [3:3] ;
  assign _003__X8 [9:9] = fangyuan7_X [3:3] ;
  assign _003__C8 [9:9] = fangyuan7_C [3:3] ;
  assign { _003__R8 [0], _003__R8 [1], _003__R8 [2], _003__R8 [3], _003__R8 [4], _003__R8 [5], _003__R8 [6], _003__R8 [7], _003__R8 [8] } = 0;
  assign { _003__X8 [0], _003__X8 [1], _003__X8 [2], _003__X8 [3], _003__X8 [4], _003__X8 [5], _003__X8 [6], _003__X8 [7], _003__X8 [8] } = 0;
  assign { _003__C8 [0], _003__C8 [1], _003__C8 [2], _003__C8 [3], _003__C8 [4], _003__C8 [5], _003__C8 [6], _003__C8 [7], _003__C8 [8] } = 0;
  logic [9:0] _003__R9 ;
  logic [9:0] _003__X9 ;
  logic [9:0] _003__C9 ;
  assign _003__R9 [9:9] = fangyuan7_R [2:2] ;
  assign _003__X9 [9:9] = fangyuan7_X [2:2] ;
  assign _003__C9 [9:9] = fangyuan7_C [2:2] ;
  assign { _003__R9 [0], _003__R9 [1], _003__R9 [2], _003__R9 [3], _003__R9 [4], _003__R9 [5], _003__R9 [6], _003__R9 [7], _003__R9 [8] } = 0;
  assign { _003__X9 [0], _003__X9 [1], _003__X9 [2], _003__X9 [3], _003__X9 [4], _003__X9 [5], _003__X9 [6], _003__X9 [7], _003__X9 [8] } = 0;
  assign { _003__C9 [0], _003__C9 [1], _003__C9 [2], _003__C9 [3], _003__C9 [4], _003__C9 [5], _003__C9 [6], _003__C9 [7], _003__C9 [8] } = 0;
  logic [9:0] _003__R10 ;
  logic [9:0] _003__X10 ;
  logic [9:0] _003__C10 ;
  assign _003__R10 [9:9] = fangyuan7_R [1:1] ;
  assign _003__X10 [9:9] = fangyuan7_X [1:1] ;
  assign _003__C10 [9:9] = fangyuan7_C [1:1] ;
  assign { _003__R10 [0], _003__R10 [1], _003__R10 [2], _003__R10 [3], _003__R10 [4], _003__R10 [5], _003__R10 [6], _003__R10 [7], _003__R10 [8] } = 0;
  assign { _003__X10 [0], _003__X10 [1], _003__X10 [2], _003__X10 [3], _003__X10 [4], _003__X10 [5], _003__X10 [6], _003__X10 [7], _003__X10 [8] } = 0;
  assign { _003__C10 [0], _003__C10 [1], _003__C10 [2], _003__C10 [3], _003__C10 [4], _003__C10 [5], _003__C10 [6], _003__C10 [7], _003__C10 [8] } = 0;
  logic [9:0] _003__R11 ;
  logic [9:0] _003__X11 ;
  logic [9:0] _003__C11 ;
  assign _003__R11 [9:9] = fangyuan7_R [0:0] ;
  assign _003__X11 [9:9] = fangyuan7_X [0:0] ;
  assign _003__C11 [9:9] = fangyuan7_C [0:0] ;

  assign mux_37_nl = or_nl ? FpMantRNE_22U_11U_else_acc_nl : fangyuan7;
  logic [0:0] or_nl_C0 ;
  logic [0:0] or_nl_R0 ;
  logic [0:0] or_nl_X0 ;
  assign or_nl_C0 = | mux_37_nl_C ;
  assign or_nl_X0 = | mux_37_nl_X ;
  assign mux_37_nl_T = or_nl ? ( { 10{ or_nl_T  }} | FpMantRNE_22U_11U_else_acc_nl_T ) : ( { 10{ or_nl_T  }} | fangyuan7_T );
  assign mux_37_nl_S = or_nl ? FpMantRNE_22U_11U_else_acc_nl_S : fangyuan7_S ;
  assign or_nl_R0 = ( | (mux_37_nl_R | ( mux_37_nl_C & ( { 10{ or_nl }} & FpMantRNE_22U_11U_else_acc_nl_T | { 10{ !or_nl }} & fangyuan7_T )))) && FpMantRNE_22U_11U_else_acc_nl != fangyuan7 ;
  logic [9:0] FpMantRNE_22U_11U_else_acc_nl_C0 ;
  logic [9:0] FpMantRNE_22U_11U_else_acc_nl_R0 ;
  logic [9:0] FpMantRNE_22U_11U_else_acc_nl_X0 ;
  assign FpMantRNE_22U_11U_else_acc_nl_C0 = { 10{ or_nl }} ;
  assign FpMantRNE_22U_11U_else_acc_nl_R0 = { 10{ or_nl }} & ( mux_37_nl_R | ( { 10{ or_nl_T  }} & mux_37_nl_C ));
  assign FpMantRNE_22U_11U_else_acc_nl_X0 = { 10{ or_nl }} & mux_37_nl_X ;
  logic [9:0] fangyuan7_C0 ;
  logic [9:0] fangyuan7_R0 ;
  logic [9:0] fangyuan7_X0 ;
  assign fangyuan7_C0 = { 10{ !or_nl }} ;
  assign fangyuan7_R0 = { 10{ !or_nl }} & ( mux_37_nl_R | ( { 10{ or_nl_T  }} & mux_37_nl_C ));
  assign fangyuan7_X0 = { 10{ !or_nl }} & mux_37_nl_X ;
  assign mux_tmp_23 = or_5_cse ? mux_22_nl : nor_34_nl;
  logic [0:0] or_5_cse_C18 ;
  logic [0:0] or_5_cse_R18 ;
  logic [0:0] or_5_cse_X18 ;
  assign or_5_cse_C18 = | mux_tmp_23_C ;
  assign or_5_cse_X18 = | mux_tmp_23_X ;
  assign mux_tmp_23_T = or_5_cse ? ( { 1{ or_5_cse_T  }} | mux_22_nl_T ) : ( { 1{ or_5_cse_T  }} | nor_34_nl_T );
  assign mux_tmp_23_S = or_5_cse ? mux_22_nl_S : nor_34_nl_S ;
  assign or_5_cse_R18 = ( | (mux_tmp_23_R | ( mux_tmp_23_C & ( { 1{ or_5_cse }} & mux_22_nl_T | { 1{ !or_5_cse }} & nor_34_nl_T )))) && mux_22_nl != nor_34_nl ;
  logic [0:0] mux_22_nl_C0 ;
  logic [0:0] mux_22_nl_R0 ;
  logic [0:0] mux_22_nl_X0 ;
  assign mux_22_nl_C0 = { 1{ or_5_cse }} ;
  assign mux_22_nl_R0 = { 1{ or_5_cse }} & ( mux_tmp_23_R | ( { 1{ or_5_cse_T  }} & mux_tmp_23_C ));
  assign mux_22_nl_X0 = { 1{ or_5_cse }} & mux_tmp_23_X ;
  logic [0:0] nor_34_nl_C0 ;
  logic [0:0] nor_34_nl_R0 ;
  logic [0:0] nor_34_nl_X0 ;
  assign nor_34_nl_C0 = { 1{ !or_5_cse }} ;
  assign nor_34_nl_R0 = { 1{ !or_5_cse }} & ( mux_tmp_23_R | ( { 1{ or_5_cse_T  }} & mux_tmp_23_C ));
  assign nor_34_nl_X0 = { 1{ !or_5_cse }} & mux_tmp_23_X ;
  assign mux_22_nl = _100_ ? and_94_nl : mux_tmp_21;
  logic [0:0] _100__C2 ;
  logic [0:0] _100__R2 ;
  logic [0:0] _100__X2 ;
  assign _100__C2 = | mux_22_nl_C ;
  assign _100__X2 = | mux_22_nl_X ;
  assign mux_22_nl_T = _100_ ? ( { 1{ _100__T  }} | and_94_nl_T ) : ( { 1{ _100__T  }} | mux_tmp_21_T );
  assign mux_22_nl_S = _100_ ? and_94_nl_S : mux_tmp_21_S ;
  assign _100__R2 = ( | (mux_22_nl_R | ( mux_22_nl_C & ( { 1{ _100_ }} & and_94_nl_T | { 1{ !_100_ }} & mux_tmp_21_T )))) && and_94_nl != mux_tmp_21 ;
  logic [0:0] and_94_nl_C0 ;
  logic [0:0] and_94_nl_R0 ;
  logic [0:0] and_94_nl_X0 ;
  assign and_94_nl_C0 = { 1{ _100_ }} ;
  assign and_94_nl_R0 = { 1{ _100_ }} & ( mux_22_nl_R | ( { 1{ _100__T  }} & mux_22_nl_C ));
  assign and_94_nl_X0 = { 1{ _100_ }} & mux_22_nl_X ;
  logic [0:0] mux_tmp_21_C2 ;
  logic [0:0] mux_tmp_21_R2 ;
  logic [0:0] mux_tmp_21_X2 ;
  assign mux_tmp_21_C2 = { 1{ !_100_ }} ;
  assign mux_tmp_21_R2 = { 1{ !_100_ }} & ( mux_22_nl_R | ( { 1{ _100__T  }} & mux_22_nl_C ));
  assign mux_tmp_21_X2 = { 1{ !_100_ }} & mux_22_nl_X ;
  assign mux_tmp_21 = _099_ ? and_93_nl : nor_tmp_1;
  logic [0:0] _099__C2 ;
  logic [0:0] _099__R2 ;
  logic [0:0] _099__X2 ;
  assign _099__C2 = | mux_tmp_21_C ;
  assign _099__X2 = | mux_tmp_21_X ;
  assign mux_tmp_21_T = _099_ ? ( { 1{ _099__T  }} | and_93_nl_T ) : ( { 1{ _099__T  }} | nor_tmp_1_T );
  assign mux_tmp_21_S = _099_ ? and_93_nl_S : nor_tmp_1_S ;
  assign _099__R2 = ( | (mux_tmp_21_R | ( mux_tmp_21_C & ( { 1{ _099_ }} & and_93_nl_T | { 1{ !_099_ }} & nor_tmp_1_T )))) && and_93_nl != nor_tmp_1 ;
  logic [0:0] and_93_nl_C0 ;
  logic [0:0] and_93_nl_R0 ;
  logic [0:0] and_93_nl_X0 ;
  assign and_93_nl_C0 = { 1{ _099_ }} ;
  assign and_93_nl_R0 = { 1{ _099_ }} & ( mux_tmp_21_R | ( { 1{ _099__T  }} & mux_tmp_21_C ));
  assign and_93_nl_X0 = { 1{ _099_ }} & mux_tmp_21_X ;
  logic [0:0] nor_tmp_1_C3 ;
  logic [0:0] nor_tmp_1_R3 ;
  logic [0:0] nor_tmp_1_X3 ;
  assign nor_tmp_1_C3 = { 1{ !_099_ }} ;
  assign nor_tmp_1_R3 = { 1{ !_099_ }} & ( mux_tmp_21_R | ( { 1{ _099__T  }} & mux_tmp_21_C ));
  assign nor_tmp_1_X3 = { 1{ !_099_ }} & mux_tmp_21_X ;
  assign mux_tmp_7 = main_stage_v_2 ? or_tmp_16 : mux_tmp_6;
  logic [0:0] main_stage_v_2_C4 ;
  logic [0:0] main_stage_v_2_R4 ;
  logic [0:0] main_stage_v_2_X4 ;
  assign main_stage_v_2_C4 = | mux_tmp_7_C ;
  assign main_stage_v_2_X4 = | mux_tmp_7_X ;
  assign mux_tmp_7_T = main_stage_v_2 ? ( { 1{ main_stage_v_2_T  }} | or_tmp_16_T ) : ( { 1{ main_stage_v_2_T  }} | mux_tmp_6_T );
  assign mux_tmp_7_S = main_stage_v_2 ? or_tmp_16_S : mux_tmp_6_S ;
  assign main_stage_v_2_R4 = ( | (mux_tmp_7_R | ( mux_tmp_7_C & ( { 1{ main_stage_v_2 }} & or_tmp_16_T | { 1{ !main_stage_v_2 }} & mux_tmp_6_T )))) && or_tmp_16 != mux_tmp_6 ;
  logic [0:0] or_tmp_16_C2 ;
  logic [0:0] or_tmp_16_R2 ;
  logic [0:0] or_tmp_16_X2 ;
  assign or_tmp_16_C2 = { 1{ main_stage_v_2 }} ;
  assign or_tmp_16_R2 = { 1{ main_stage_v_2 }} & ( mux_tmp_7_R | ( { 1{ main_stage_v_2_T  }} & mux_tmp_7_C ));
  assign or_tmp_16_X2 = { 1{ main_stage_v_2 }} & mux_tmp_7_X ;
  logic [0:0] mux_tmp_6_C2 ;
  logic [0:0] mux_tmp_6_R2 ;
  logic [0:0] mux_tmp_6_X2 ;
  assign mux_tmp_6_C2 = { 1{ !main_stage_v_2 }} ;
  assign mux_tmp_6_R2 = { 1{ !main_stage_v_2 }} & ( mux_tmp_7_R | ( { 1{ main_stage_v_2_T  }} & mux_tmp_7_C ));
  assign mux_tmp_6_X2 = { 1{ !main_stage_v_2 }} & mux_tmp_7_X ;
  assign mux_tmp_6 = chn_o_rsci_bawt ? main_stage_v_1 : nor_40_nl;
  logic [0:0] chn_o_rsci_bawt_C7 ;
  logic [0:0] chn_o_rsci_bawt_R7 ;
  logic [0:0] chn_o_rsci_bawt_X7 ;
  assign chn_o_rsci_bawt_C7 = | mux_tmp_6_C ;
  assign chn_o_rsci_bawt_X7 = | mux_tmp_6_X ;
  assign mux_tmp_6_T = chn_o_rsci_bawt ? ( { 1{ chn_o_rsci_bawt_T  }} | main_stage_v_1_T ) : ( { 1{ chn_o_rsci_bawt_T  }} | nor_40_nl_T );
  assign mux_tmp_6_S = chn_o_rsci_bawt ? main_stage_v_1_S : nor_40_nl_S ;
  assign chn_o_rsci_bawt_R7 = ( | (mux_tmp_6_R | ( mux_tmp_6_C & ( { 1{ chn_o_rsci_bawt }} & main_stage_v_1_T | { 1{ !chn_o_rsci_bawt }} & nor_40_nl_T )))) && main_stage_v_1 != nor_40_nl ;
  logic [0:0] main_stage_v_1_C7 ;
  logic [0:0] main_stage_v_1_R7 ;
  logic [0:0] main_stage_v_1_X7 ;
  assign main_stage_v_1_C7 = { 1{ chn_o_rsci_bawt }} ;
  assign main_stage_v_1_R7 = { 1{ chn_o_rsci_bawt }} & ( mux_tmp_6_R | ( { 1{ chn_o_rsci_bawt_T  }} & mux_tmp_6_C ));
  assign main_stage_v_1_X7 = { 1{ chn_o_rsci_bawt }} & mux_tmp_6_X ;
  logic [0:0] nor_40_nl_C0 ;
  logic [0:0] nor_40_nl_R0 ;
  logic [0:0] nor_40_nl_X0 ;
  assign nor_40_nl_C0 = { 1{ !chn_o_rsci_bawt }} ;
  assign nor_40_nl_R0 = { 1{ !chn_o_rsci_bawt }} & ( mux_tmp_6_R | ( { 1{ chn_o_rsci_bawt_T  }} & mux_tmp_6_C ));
  assign nor_40_nl_X0 = { 1{ !chn_o_rsci_bawt }} & mux_tmp_6_X ;
  assign mux_tmp_3 = or_5_cse ? nor_tmp_1 : main_stage_v_1;
  logic [0:0] or_5_cse_C19 ;
  logic [0:0] or_5_cse_R19 ;
  logic [0:0] or_5_cse_X19 ;
  assign or_5_cse_C19 = | mux_tmp_3_C ;
  assign or_5_cse_X19 = | mux_tmp_3_X ;
  assign mux_tmp_3_T = or_5_cse ? ( { 1{ or_5_cse_T  }} | nor_tmp_1_T ) : ( { 1{ or_5_cse_T  }} | main_stage_v_1_T );
  assign mux_tmp_3_S = or_5_cse ? nor_tmp_1_S : main_stage_v_1_S ;
  assign or_5_cse_R19 = ( | (mux_tmp_3_R | ( mux_tmp_3_C & ( { 1{ or_5_cse }} & nor_tmp_1_T | { 1{ !or_5_cse }} & main_stage_v_1_T )))) && nor_tmp_1 != main_stage_v_1 ;
  logic [0:0] nor_tmp_1_C4 ;
  logic [0:0] nor_tmp_1_R4 ;
  logic [0:0] nor_tmp_1_X4 ;
  assign nor_tmp_1_C4 = { 1{ or_5_cse }} ;
  assign nor_tmp_1_R4 = { 1{ or_5_cse }} & ( mux_tmp_3_R | ( { 1{ or_5_cse_T  }} & mux_tmp_3_C ));
  assign nor_tmp_1_X4 = { 1{ or_5_cse }} & mux_tmp_3_X ;
  logic [0:0] main_stage_v_1_C8 ;
  logic [0:0] main_stage_v_1_R8 ;
  logic [0:0] main_stage_v_1_X8 ;
  assign main_stage_v_1_C8 = { 1{ !or_5_cse }} ;
  assign main_stage_v_1_R8 = { 1{ !or_5_cse }} & ( mux_tmp_3_R | ( { 1{ or_5_cse_T  }} & mux_tmp_3_C ));
  assign main_stage_v_1_X8 = { 1{ !or_5_cse }} & mux_tmp_3_X ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0 = FpMul_6U_10U_p_mant_p1_sva_2[21] ? FpMul_6U_10U_p_mant_p1_sva_2[20:1] : FpMul_6U_10U_p_mant_p1_sva_2[19:0];
  assign { FpMul_6U_10U_p_mant_p1_sva_2_R3 [0], FpMul_6U_10U_p_mant_p1_sva_2_R3 [1], FpMul_6U_10U_p_mant_p1_sva_2_R3 [2], FpMul_6U_10U_p_mant_p1_sva_2_R3 [3], FpMul_6U_10U_p_mant_p1_sva_2_R3 [4], FpMul_6U_10U_p_mant_p1_sva_2_R3 [5], FpMul_6U_10U_p_mant_p1_sva_2_R3 [6], FpMul_6U_10U_p_mant_p1_sva_2_R3 [7], FpMul_6U_10U_p_mant_p1_sva_2_R3 [8], FpMul_6U_10U_p_mant_p1_sva_2_R3 [9], FpMul_6U_10U_p_mant_p1_sva_2_R3 [10], FpMul_6U_10U_p_mant_p1_sva_2_R3 [11], FpMul_6U_10U_p_mant_p1_sva_2_R3 [12], FpMul_6U_10U_p_mant_p1_sva_2_R3 [13], FpMul_6U_10U_p_mant_p1_sva_2_R3 [14], FpMul_6U_10U_p_mant_p1_sva_2_R3 [15], FpMul_6U_10U_p_mant_p1_sva_2_R3 [16], FpMul_6U_10U_p_mant_p1_sva_2_R3 [17], FpMul_6U_10U_p_mant_p1_sva_2_R3 [18], FpMul_6U_10U_p_mant_p1_sva_2_R3 [19], FpMul_6U_10U_p_mant_p1_sva_2_R3 [20] } = 0;
  assign { FpMul_6U_10U_p_mant_p1_sva_2_X3 [0], FpMul_6U_10U_p_mant_p1_sva_2_X3 [1], FpMul_6U_10U_p_mant_p1_sva_2_X3 [2], FpMul_6U_10U_p_mant_p1_sva_2_X3 [3], FpMul_6U_10U_p_mant_p1_sva_2_X3 [4], FpMul_6U_10U_p_mant_p1_sva_2_X3 [5], FpMul_6U_10U_p_mant_p1_sva_2_X3 [6], FpMul_6U_10U_p_mant_p1_sva_2_X3 [7], FpMul_6U_10U_p_mant_p1_sva_2_X3 [8], FpMul_6U_10U_p_mant_p1_sva_2_X3 [9], FpMul_6U_10U_p_mant_p1_sva_2_X3 [10], FpMul_6U_10U_p_mant_p1_sva_2_X3 [11], FpMul_6U_10U_p_mant_p1_sva_2_X3 [12], FpMul_6U_10U_p_mant_p1_sva_2_X3 [13], FpMul_6U_10U_p_mant_p1_sva_2_X3 [14], FpMul_6U_10U_p_mant_p1_sva_2_X3 [15], FpMul_6U_10U_p_mant_p1_sva_2_X3 [16], FpMul_6U_10U_p_mant_p1_sva_2_X3 [17], FpMul_6U_10U_p_mant_p1_sva_2_X3 [18], FpMul_6U_10U_p_mant_p1_sva_2_X3 [19], FpMul_6U_10U_p_mant_p1_sva_2_X3 [20] } = 0;
  assign { FpMul_6U_10U_p_mant_p1_sva_2_C3 [0], FpMul_6U_10U_p_mant_p1_sva_2_C3 [1], FpMul_6U_10U_p_mant_p1_sva_2_C3 [2], FpMul_6U_10U_p_mant_p1_sva_2_C3 [3], FpMul_6U_10U_p_mant_p1_sva_2_C3 [4], FpMul_6U_10U_p_mant_p1_sva_2_C3 [5], FpMul_6U_10U_p_mant_p1_sva_2_C3 [6], FpMul_6U_10U_p_mant_p1_sva_2_C3 [7], FpMul_6U_10U_p_mant_p1_sva_2_C3 [8], FpMul_6U_10U_p_mant_p1_sva_2_C3 [9], FpMul_6U_10U_p_mant_p1_sva_2_C3 [10], FpMul_6U_10U_p_mant_p1_sva_2_C3 [11], FpMul_6U_10U_p_mant_p1_sva_2_C3 [12], FpMul_6U_10U_p_mant_p1_sva_2_C3 [13], FpMul_6U_10U_p_mant_p1_sva_2_C3 [14], FpMul_6U_10U_p_mant_p1_sva_2_C3 [15], FpMul_6U_10U_p_mant_p1_sva_2_C3 [16], FpMul_6U_10U_p_mant_p1_sva_2_C3 [17], FpMul_6U_10U_p_mant_p1_sva_2_C3 [18], FpMul_6U_10U_p_mant_p1_sva_2_C3 [19], FpMul_6U_10U_p_mant_p1_sva_2_C3 [20] } = 0;
  logic [21:0] FpMul_6U_10U_p_mant_p1_sva_2_C4 ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_sva_2_R4 ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_sva_2_X4 ;
  assign FpMul_6U_10U_p_mant_p1_sva_2_C4 [21] = | FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C ;
  assign FpMul_6U_10U_p_mant_p1_sva_2_X4 [21] = | FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X ;
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_T = FpMul_6U_10U_p_mant_p1_sva_2[21] ? ( { 20{ FpMul_6U_10U_p_mant_p1_sva_2_T  [21] }} | FpMul_6U_10U_p_mant_p1_sva_2_T [20:1] ) : ( { 20{ FpMul_6U_10U_p_mant_p1_sva_2_T  [21] }} | FpMul_6U_10U_p_mant_p1_sva_2_T [19:0] );
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_S = FpMul_6U_10U_p_mant_p1_sva_2[21] ? FpMul_6U_10U_p_mant_p1_sva_2_S : FpMul_6U_10U_p_mant_p1_sva_2_S ;
  assign FpMul_6U_10U_p_mant_p1_sva_2_R4 [21] = ( | (FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R | ( FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C & ( { 20{ FpMul_6U_10U_p_mant_p1_sva_2[21] }} & FpMul_6U_10U_p_mant_p1_sva_2_T [20:1] | { 20{ !FpMul_6U_10U_p_mant_p1_sva_2[21] }} & FpMul_6U_10U_p_mant_p1_sva_2_T [19:0] )))) && FpMul_6U_10U_p_mant_p1_sva_2[20:1] != FpMul_6U_10U_p_mant_p1_sva_2[19:0] ;
  assign { FpMul_6U_10U_p_mant_p1_sva_2_R4 [0] } = 0;
  assign { FpMul_6U_10U_p_mant_p1_sva_2_X4 [0] } = 0;
  assign { FpMul_6U_10U_p_mant_p1_sva_2_C4 [0] } = 0;
  assign FpMul_6U_10U_p_mant_p1_sva_2_C4 [20:1] = { 20{ FpMul_6U_10U_p_mant_p1_sva_2[21] }} ;
  assign FpMul_6U_10U_p_mant_p1_sva_2_R4 [20:1] = { 20{ FpMul_6U_10U_p_mant_p1_sva_2[21] }} & ( FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R | ( { 20{ FpMul_6U_10U_p_mant_p1_sva_2_T  [21] }} & FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C ));
  assign FpMul_6U_10U_p_mant_p1_sva_2_X4 [20:1] = { 20{ FpMul_6U_10U_p_mant_p1_sva_2[21] }} & FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_sva_2_C5 ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_sva_2_R5 ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_sva_2_X5 ;
  assign FpMul_6U_10U_p_mant_p1_sva_2_C5 [19:0] = { 20{ !FpMul_6U_10U_p_mant_p1_sva_2[21] }} ;
  assign FpMul_6U_10U_p_mant_p1_sva_2_R5 [19:0] = { 20{ !FpMul_6U_10U_p_mant_p1_sva_2[21] }} & ( FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R | ( { 20{ FpMul_6U_10U_p_mant_p1_sva_2_T  [21] }} & FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C ));
  assign FpMul_6U_10U_p_mant_p1_sva_2_X5 [19:0] = { 20{ !FpMul_6U_10U_p_mant_p1_sva_2[21] }} & FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X ;
  assign FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0 = and_62_nl ? FpMul_6U_10U_else_2_else_if_if_acc_nl : FpMul_6U_10U_p_expo_sva_5;
  logic [0:0] and_62_nl_C0 ;
  logic [0:0] and_62_nl_R0 ;
  logic [0:0] and_62_nl_X0 ;
  assign and_62_nl_C0 = | FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_C ;
  assign and_62_nl_X0 = | FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_X ;
  assign FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_T = and_62_nl ? ( { 6{ and_62_nl_T  }} | FpMul_6U_10U_else_2_else_if_if_acc_nl_T ) : ( { 6{ and_62_nl_T  }} | FpMul_6U_10U_p_expo_sva_5_T );
  assign FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_S = and_62_nl ? FpMul_6U_10U_else_2_else_if_if_acc_nl_S : FpMul_6U_10U_p_expo_sva_5_S ;
  assign and_62_nl_R0 = ( | (FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_R | ( FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_C & ( { 6{ and_62_nl }} & FpMul_6U_10U_else_2_else_if_if_acc_nl_T | { 6{ !and_62_nl }} & FpMul_6U_10U_p_expo_sva_5_T )))) && FpMul_6U_10U_else_2_else_if_if_acc_nl != FpMul_6U_10U_p_expo_sva_5 ;
  logic [5:0] FpMul_6U_10U_else_2_else_if_if_acc_nl_C0 ;
  logic [5:0] FpMul_6U_10U_else_2_else_if_if_acc_nl_R0 ;
  logic [5:0] FpMul_6U_10U_else_2_else_if_if_acc_nl_X0 ;
  assign FpMul_6U_10U_else_2_else_if_if_acc_nl_C0 = { 6{ and_62_nl }} ;
  assign FpMul_6U_10U_else_2_else_if_if_acc_nl_R0 = { 6{ and_62_nl }} & ( FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_R | ( { 6{ and_62_nl_T  }} & FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_C ));
  assign FpMul_6U_10U_else_2_else_if_if_acc_nl_X0 = { 6{ and_62_nl }} & FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_X ;
  logic [5:0] FpMul_6U_10U_p_expo_sva_5_C2 ;
  logic [5:0] FpMul_6U_10U_p_expo_sva_5_R2 ;
  logic [5:0] FpMul_6U_10U_p_expo_sva_5_X2 ;
  assign FpMul_6U_10U_p_expo_sva_5_C2 = { 6{ !and_62_nl }} ;
  assign FpMul_6U_10U_p_expo_sva_5_R2 = { 6{ !and_62_nl }} & ( FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_R | ( { 6{ and_62_nl_T  }} & FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_C ));
  assign FpMul_6U_10U_p_expo_sva_5_X2 = { 6{ !and_62_nl }} & FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_X ;
  assign mux_36_nl = FpMul_6U_10U_else_2_else_if_if_acc_1_nl[5] ? FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2 : _002_;
  assign { FpMul_6U_10U_else_2_else_if_if_acc_1_nl_R0 [0], FpMul_6U_10U_else_2_else_if_if_acc_1_nl_R0 [1], FpMul_6U_10U_else_2_else_if_if_acc_1_nl_R0 [2], FpMul_6U_10U_else_2_else_if_if_acc_1_nl_R0 [3], FpMul_6U_10U_else_2_else_if_if_acc_1_nl_R0 [4] } = 0;
  assign { FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X0 [0], FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X0 [1], FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X0 [2], FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X0 [3], FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X0 [4] } = 0;
  assign { FpMul_6U_10U_else_2_else_if_if_acc_1_nl_C0 [0], FpMul_6U_10U_else_2_else_if_if_acc_1_nl_C0 [1], FpMul_6U_10U_else_2_else_if_if_acc_1_nl_C0 [2], FpMul_6U_10U_else_2_else_if_if_acc_1_nl_C0 [3], FpMul_6U_10U_else_2_else_if_if_acc_1_nl_C0 [4] } = 0;
  logic [5:0] FpMul_6U_10U_else_2_else_if_if_acc_1_nl_C1 ;
  logic [5:0] FpMul_6U_10U_else_2_else_if_if_acc_1_nl_R1 ;
  logic [5:0] FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X1 ;
  assign FpMul_6U_10U_else_2_else_if_if_acc_1_nl_C1 [5] = | mux_36_nl_C ;
  assign FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X1 [5] = | mux_36_nl_X ;
  assign mux_36_nl_T = FpMul_6U_10U_else_2_else_if_if_acc_1_nl[5] ? ( { 1{ FpMul_6U_10U_else_2_else_if_if_acc_1_nl_T  [5] }} | FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_T ) : ( { 1{ FpMul_6U_10U_else_2_else_if_if_acc_1_nl_T  [5] }} | _002__T );
  assign mux_36_nl_S = FpMul_6U_10U_else_2_else_if_if_acc_1_nl[5] ? FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_S : _002__S ;
  assign FpMul_6U_10U_else_2_else_if_if_acc_1_nl_R1 [5] = ( | (mux_36_nl_R | ( mux_36_nl_C & ( { 1{ FpMul_6U_10U_else_2_else_if_if_acc_1_nl[5] }} & FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_T | { 1{ !FpMul_6U_10U_else_2_else_if_if_acc_1_nl[5] }} & _002__T )))) && FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2 != _002_ ;
  logic [0:0] FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_C2 ;
  logic [0:0] FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_R2 ;
  logic [0:0] FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_X2 ;
  assign FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_C2 = { 1{ FpMul_6U_10U_else_2_else_if_if_acc_1_nl[5] }} ;
  assign FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_R2 = { 1{ FpMul_6U_10U_else_2_else_if_if_acc_1_nl[5] }} & ( mux_36_nl_R | ( { 1{ FpMul_6U_10U_else_2_else_if_if_acc_1_nl_T  [5] }} & mux_36_nl_C ));
  assign FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_X2 = { 1{ FpMul_6U_10U_else_2_else_if_if_acc_1_nl[5] }} & mux_36_nl_X ;
  logic [0:0] _002__C0 ;
  logic [0:0] _002__R0 ;
  logic [0:0] _002__X0 ;
  assign _002__C0 = { 1{ !FpMul_6U_10U_else_2_else_if_if_acc_1_nl[5] }} ;
  assign _002__R0 = { 1{ !FpMul_6U_10U_else_2_else_if_if_acc_1_nl[5] }} & ( mux_36_nl_R | ( { 1{ FpMul_6U_10U_else_2_else_if_if_acc_1_nl_T  [5] }} & mux_36_nl_C ));
  assign _002__X0 = { 1{ !FpMul_6U_10U_else_2_else_if_if_acc_1_nl[5] }} & mux_36_nl_X ;
  assign mux_35_nl = _099_ ? and_91_nl : or_tmp_56;
  logic [0:0] _099__C3 ;
  logic [0:0] _099__R3 ;
  logic [0:0] _099__X3 ;
  assign _099__C3 = | mux_35_nl_C ;
  assign _099__X3 = | mux_35_nl_X ;
  assign mux_35_nl_T = _099_ ? ( { 1{ _099__T  }} | and_91_nl_T ) : ( { 1{ _099__T  }} | or_tmp_56_T );
  assign mux_35_nl_S = _099_ ? and_91_nl_S : or_tmp_56_S ;
  assign _099__R3 = ( | (mux_35_nl_R | ( mux_35_nl_C & ( { 1{ _099_ }} & and_91_nl_T | { 1{ !_099_ }} & or_tmp_56_T )))) && and_91_nl != or_tmp_56 ;
  logic [0:0] and_91_nl_C0 ;
  logic [0:0] and_91_nl_R0 ;
  logic [0:0] and_91_nl_X0 ;
  assign and_91_nl_C0 = { 1{ _099_ }} ;
  assign and_91_nl_R0 = { 1{ _099_ }} & ( mux_35_nl_R | ( { 1{ _099__T  }} & mux_35_nl_C ));
  assign and_91_nl_X0 = { 1{ _099_ }} & mux_35_nl_X ;
  logic [0:0] or_tmp_56_C2 ;
  logic [0:0] or_tmp_56_R2 ;
  logic [0:0] or_tmp_56_X2 ;
  assign or_tmp_56_C2 = { 1{ !_099_ }} ;
  assign or_tmp_56_R2 = { 1{ !_099_ }} & ( mux_35_nl_R | ( { 1{ _099__T  }} & mux_35_nl_C ));
  assign or_tmp_56_X2 = { 1{ !_099_ }} & mux_35_nl_X ;
  assign mux_17_nl = _185_ ? or_35_nl : mux_16_nl;
  logic [0:0] _185__C0 ;
  logic [0:0] _185__R0 ;
  logic [0:0] _185__X0 ;
  assign _185__C0 = | mux_17_nl_C ;
  assign _185__X0 = | mux_17_nl_X ;
  assign mux_17_nl_T = _185_ ? ( { 1{ _185__T  }} | or_35_nl_T ) : ( { 1{ _185__T  }} | mux_16_nl_T );
  assign mux_17_nl_S = _185_ ? or_35_nl_S : mux_16_nl_S ;
  assign _185__R0 = ( | (mux_17_nl_R | ( mux_17_nl_C & ( { 1{ _185_ }} & or_35_nl_T | { 1{ !_185_ }} & mux_16_nl_T )))) && or_35_nl != mux_16_nl ;
  logic [0:0] or_35_nl_C0 ;
  logic [0:0] or_35_nl_R0 ;
  logic [0:0] or_35_nl_X0 ;
  assign or_35_nl_C0 = { 1{ _185_ }} ;
  assign or_35_nl_R0 = { 1{ _185_ }} & ( mux_17_nl_R | ( { 1{ _185__T  }} & mux_17_nl_C ));
  assign or_35_nl_X0 = { 1{ _185_ }} & mux_17_nl_X ;
  logic [0:0] mux_16_nl_C0 ;
  logic [0:0] mux_16_nl_R0 ;
  logic [0:0] mux_16_nl_X0 ;
  assign mux_16_nl_C0 = { 1{ !_185_ }} ;
  assign mux_16_nl_R0 = { 1{ !_185_ }} & ( mux_17_nl_R | ( { 1{ _185__T  }} & mux_17_nl_C ));
  assign mux_16_nl_X0 = { 1{ !_185_ }} & mux_17_nl_X ;
  assign mux_16_nl = chn_o_rsci_bawt ? or_tmp_32 : nor_35_nl;
  logic [0:0] chn_o_rsci_bawt_C8 ;
  logic [0:0] chn_o_rsci_bawt_R8 ;
  logic [0:0] chn_o_rsci_bawt_X8 ;
  assign chn_o_rsci_bawt_C8 = | mux_16_nl_C ;
  assign chn_o_rsci_bawt_X8 = | mux_16_nl_X ;
  assign mux_16_nl_T = chn_o_rsci_bawt ? ( { 1{ chn_o_rsci_bawt_T  }} | or_tmp_32_T ) : ( { 1{ chn_o_rsci_bawt_T  }} | nor_35_nl_T );
  assign mux_16_nl_S = chn_o_rsci_bawt ? or_tmp_32_S : nor_35_nl_S ;
  assign chn_o_rsci_bawt_R8 = ( | (mux_16_nl_R | ( mux_16_nl_C & ( { 1{ chn_o_rsci_bawt }} & or_tmp_32_T | { 1{ !chn_o_rsci_bawt }} & nor_35_nl_T )))) && or_tmp_32 != nor_35_nl ;
  logic [0:0] or_tmp_32_C1 ;
  logic [0:0] or_tmp_32_R1 ;
  logic [0:0] or_tmp_32_X1 ;
  assign or_tmp_32_C1 = { 1{ chn_o_rsci_bawt }} ;
  assign or_tmp_32_R1 = { 1{ chn_o_rsci_bawt }} & ( mux_16_nl_R | ( { 1{ chn_o_rsci_bawt_T  }} & mux_16_nl_C ));
  assign or_tmp_32_X1 = { 1{ chn_o_rsci_bawt }} & mux_16_nl_X ;
  logic [0:0] nor_35_nl_C0 ;
  logic [0:0] nor_35_nl_R0 ;
  logic [0:0] nor_35_nl_X0 ;
  assign nor_35_nl_C0 = { 1{ !chn_o_rsci_bawt }} ;
  assign nor_35_nl_R0 = { 1{ !chn_o_rsci_bawt }} & ( mux_16_nl_R | ( { 1{ chn_o_rsci_bawt_T  }} & mux_16_nl_C ));
  assign nor_35_nl_X0 = { 1{ !chn_o_rsci_bawt }} & mux_16_nl_X ;
  assign mux_13_nl = and_97_nl ? or_25_nl : mux_12_nl;
  logic [0:0] and_97_nl_C0 ;
  logic [0:0] and_97_nl_R0 ;
  logic [0:0] and_97_nl_X0 ;
  assign and_97_nl_C0 = | mux_13_nl_C ;
  assign and_97_nl_X0 = | mux_13_nl_X ;
  assign mux_13_nl_T = and_97_nl ? ( { 1{ and_97_nl_T  }} | or_25_nl_T ) : ( { 1{ and_97_nl_T  }} | mux_12_nl_T );
  assign mux_13_nl_S = and_97_nl ? or_25_nl_S : mux_12_nl_S ;
  assign and_97_nl_R0 = ( | (mux_13_nl_R | ( mux_13_nl_C & ( { 1{ and_97_nl }} & or_25_nl_T | { 1{ !and_97_nl }} & mux_12_nl_T )))) && or_25_nl != mux_12_nl ;
  logic [0:0] or_25_nl_C0 ;
  logic [0:0] or_25_nl_R0 ;
  logic [0:0] or_25_nl_X0 ;
  assign or_25_nl_C0 = { 1{ and_97_nl }} ;
  assign or_25_nl_R0 = { 1{ and_97_nl }} & ( mux_13_nl_R | ( { 1{ and_97_nl_T  }} & mux_13_nl_C ));
  assign or_25_nl_X0 = { 1{ and_97_nl }} & mux_13_nl_X ;
  logic [0:0] mux_12_nl_C0 ;
  logic [0:0] mux_12_nl_R0 ;
  logic [0:0] mux_12_nl_X0 ;
  assign mux_12_nl_C0 = { 1{ !and_97_nl }} ;
  assign mux_12_nl_R0 = { 1{ !and_97_nl }} & ( mux_13_nl_R | ( { 1{ and_97_nl_T  }} & mux_13_nl_C ));
  assign mux_12_nl_X0 = { 1{ !and_97_nl }} & mux_13_nl_X ;
  assign mux_12_nl = chn_o_rsci_bawt ? nor_tmp_11 : nor_37_nl;
  logic [0:0] chn_o_rsci_bawt_C9 ;
  logic [0:0] chn_o_rsci_bawt_R9 ;
  logic [0:0] chn_o_rsci_bawt_X9 ;
  assign chn_o_rsci_bawt_C9 = | mux_12_nl_C ;
  assign chn_o_rsci_bawt_X9 = | mux_12_nl_X ;
  assign mux_12_nl_T = chn_o_rsci_bawt ? ( { 1{ chn_o_rsci_bawt_T  }} | nor_tmp_11_T ) : ( { 1{ chn_o_rsci_bawt_T  }} | nor_37_nl_T );
  assign mux_12_nl_S = chn_o_rsci_bawt ? nor_tmp_11_S : nor_37_nl_S ;
  assign chn_o_rsci_bawt_R9 = ( | (mux_12_nl_R | ( mux_12_nl_C & ( { 1{ chn_o_rsci_bawt }} & nor_tmp_11_T | { 1{ !chn_o_rsci_bawt }} & nor_37_nl_T )))) && nor_tmp_11 != nor_37_nl ;
  logic [0:0] nor_tmp_11_C2 ;
  logic [0:0] nor_tmp_11_R2 ;
  logic [0:0] nor_tmp_11_X2 ;
  assign nor_tmp_11_C2 = { 1{ chn_o_rsci_bawt }} ;
  assign nor_tmp_11_R2 = { 1{ chn_o_rsci_bawt }} & ( mux_12_nl_R | ( { 1{ chn_o_rsci_bawt_T  }} & mux_12_nl_C ));
  assign nor_tmp_11_X2 = { 1{ chn_o_rsci_bawt }} & mux_12_nl_X ;
  logic [0:0] nor_37_nl_C0 ;
  logic [0:0] nor_37_nl_R0 ;
  logic [0:0] nor_37_nl_X0 ;
  assign nor_37_nl_C0 = { 1{ !chn_o_rsci_bawt }} ;
  assign nor_37_nl_R0 = { 1{ !chn_o_rsci_bawt }} & ( mux_12_nl_R | ( { 1{ chn_o_rsci_bawt_T  }} & mux_12_nl_C ));
  assign nor_37_nl_X0 = { 1{ !chn_o_rsci_bawt }} & mux_12_nl_X ;
  assign _009_ = _074_ ? FpMul_6U_10U_else_2_if_acc_nl[6] : FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs;
  logic [0:0] _074__C0 ;
  logic [0:0] _074__R0 ;
  logic [0:0] _074__X0 ;
  assign _074__C0 = | _009__C ;
  assign _074__X0 = | _009__X ;
  assign _009__T = _074_ ? ( { 1{ _074__T  }} | FpMul_6U_10U_else_2_if_acc_nl_T [6] ) : ( { 1{ _074__T  }} | FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_T );
  assign _009__S = _074_ ? FpMul_6U_10U_else_2_if_acc_nl_S : FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_S ;
  assign _074__R0 = ( | (_009__R | ( _009__C & ( { 1{ _074_ }} & FpMul_6U_10U_else_2_if_acc_nl_T [6] | { 1{ !_074_ }} & FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_T )))) && FpMul_6U_10U_else_2_if_acc_nl[6] != FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs ;
  assign { FpMul_6U_10U_else_2_if_acc_nl_R2 [0], FpMul_6U_10U_else_2_if_acc_nl_R2 [1], FpMul_6U_10U_else_2_if_acc_nl_R2 [2], FpMul_6U_10U_else_2_if_acc_nl_R2 [3], FpMul_6U_10U_else_2_if_acc_nl_R2 [4], FpMul_6U_10U_else_2_if_acc_nl_R2 [5] } = 0;
  assign { FpMul_6U_10U_else_2_if_acc_nl_X2 [0], FpMul_6U_10U_else_2_if_acc_nl_X2 [1], FpMul_6U_10U_else_2_if_acc_nl_X2 [2], FpMul_6U_10U_else_2_if_acc_nl_X2 [3], FpMul_6U_10U_else_2_if_acc_nl_X2 [4], FpMul_6U_10U_else_2_if_acc_nl_X2 [5] } = 0;
  assign { FpMul_6U_10U_else_2_if_acc_nl_C2 [0], FpMul_6U_10U_else_2_if_acc_nl_C2 [1], FpMul_6U_10U_else_2_if_acc_nl_C2 [2], FpMul_6U_10U_else_2_if_acc_nl_C2 [3], FpMul_6U_10U_else_2_if_acc_nl_C2 [4], FpMul_6U_10U_else_2_if_acc_nl_C2 [5] } = 0;
  logic [6:0] FpMul_6U_10U_else_2_if_acc_nl_C3 ;
  logic [6:0] FpMul_6U_10U_else_2_if_acc_nl_R3 ;
  logic [6:0] FpMul_6U_10U_else_2_if_acc_nl_X3 ;
  assign FpMul_6U_10U_else_2_if_acc_nl_C3 [6] = { 1{ _074_ }} ;
  assign FpMul_6U_10U_else_2_if_acc_nl_R3 [6] = { 1{ _074_ }} & ( _009__R | ( { 1{ _074__T  }} & _009__C ));
  assign FpMul_6U_10U_else_2_if_acc_nl_X3 [6] = { 1{ _074_ }} & _009__X ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_C0 ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_R0 ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_X0 ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_C0 = { 1{ !_074_ }} ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_R0 = { 1{ !_074_ }} & ( _009__R | ( { 1{ _074__T  }} & _009__C ));
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_X0 = { 1{ !_074_ }} & _009__X ;
  assign _023_ = _073_ ? chn_a_rsci_d_mxwt[15:0] : FpMul_6U_10U_ua_sva_1_15_0_1;
  logic [0:0] _073__C0 ;
  logic [0:0] _073__R0 ;
  logic [0:0] _073__X0 ;
  assign _073__C0 = | _023__C ;
  assign _073__X0 = | _023__X ;
  assign _023__T = _073_ ? ( { 16{ _073__T  }} | chn_a_rsci_d_mxwt_T [15:0] ) : ( { 16{ _073__T  }} | FpMul_6U_10U_ua_sva_1_15_0_1_T );
  assign _023__S = _073_ ? chn_a_rsci_d_mxwt_S : FpMul_6U_10U_ua_sva_1_15_0_1_S ;
  assign _073__R0 = ( | (_023__R | ( _023__C & ( { 16{ _073_ }} & chn_a_rsci_d_mxwt_T [15:0] | { 16{ !_073_ }} & FpMul_6U_10U_ua_sva_1_15_0_1_T )))) && chn_a_rsci_d_mxwt[15:0] != FpMul_6U_10U_ua_sva_1_15_0_1 ;
  assign { chn_a_rsci_d_mxwt_R4 [16:16] } = 0;
  assign { chn_a_rsci_d_mxwt_X4 [16:16] } = 0;
  assign { chn_a_rsci_d_mxwt_C4 [16:16] } = 0;
  logic [16:0] chn_a_rsci_d_mxwt_C5 ;
  logic [16:0] chn_a_rsci_d_mxwt_R5 ;
  logic [16:0] chn_a_rsci_d_mxwt_X5 ;
  assign chn_a_rsci_d_mxwt_C5 [15:0] = { 16{ _073_ }} ;
  assign chn_a_rsci_d_mxwt_R5 [15:0] = { 16{ _073_ }} & ( _023__R | ( { 16{ _073__T  }} & _023__C ));
  assign chn_a_rsci_d_mxwt_X5 [15:0] = { 16{ _073_ }} & _023__X ;
  logic [15:0] FpMul_6U_10U_ua_sva_1_15_0_1_C1 ;
  logic [15:0] FpMul_6U_10U_ua_sva_1_15_0_1_R1 ;
  logic [15:0] FpMul_6U_10U_ua_sva_1_15_0_1_X1 ;
  assign FpMul_6U_10U_ua_sva_1_15_0_1_C1 = { 16{ !_073_ }} ;
  assign FpMul_6U_10U_ua_sva_1_15_0_1_R1 = { 16{ !_073_ }} & ( _023__R | ( { 16{ _073__T  }} & _023__C ));
  assign FpMul_6U_10U_ua_sva_1_15_0_1_X1 = { 16{ !_073_ }} & _023__X ;
  assign _024_ = _072_ ? chn_b_rsci_d_mxwt[15:0] : FpMul_6U_10U_ub_sva_1_15_0_1;
  logic [0:0] _072__C0 ;
  logic [0:0] _072__R0 ;
  logic [0:0] _072__X0 ;
  assign _072__C0 = | _024__C ;
  assign _072__X0 = | _024__X ;
  assign _024__T = _072_ ? ( { 16{ _072__T  }} | chn_b_rsci_d_mxwt_T [15:0] ) : ( { 16{ _072__T  }} | FpMul_6U_10U_ub_sva_1_15_0_1_T );
  assign _024__S = _072_ ? chn_b_rsci_d_mxwt_S : FpMul_6U_10U_ub_sva_1_15_0_1_S ;
  assign _072__R0 = ( | (_024__R | ( _024__C & ( { 16{ _072_ }} & chn_b_rsci_d_mxwt_T [15:0] | { 16{ !_072_ }} & FpMul_6U_10U_ub_sva_1_15_0_1_T )))) && chn_b_rsci_d_mxwt[15:0] != FpMul_6U_10U_ub_sva_1_15_0_1 ;
  assign { chn_b_rsci_d_mxwt_R3 [16:16] } = 0;
  assign { chn_b_rsci_d_mxwt_X3 [16:16] } = 0;
  assign { chn_b_rsci_d_mxwt_C3 [16:16] } = 0;
  logic [16:0] chn_b_rsci_d_mxwt_C4 ;
  logic [16:0] chn_b_rsci_d_mxwt_R4 ;
  logic [16:0] chn_b_rsci_d_mxwt_X4 ;
  assign chn_b_rsci_d_mxwt_C4 [15:0] = { 16{ _072_ }} ;
  assign chn_b_rsci_d_mxwt_R4 [15:0] = { 16{ _072_ }} & ( _024__R | ( { 16{ _072__T  }} & _024__C ));
  assign chn_b_rsci_d_mxwt_X4 [15:0] = { 16{ _072_ }} & _024__X ;
  logic [15:0] FpMul_6U_10U_ub_sva_1_15_0_1_C1 ;
  logic [15:0] FpMul_6U_10U_ub_sva_1_15_0_1_R1 ;
  logic [15:0] FpMul_6U_10U_ub_sva_1_15_0_1_X1 ;
  assign FpMul_6U_10U_ub_sva_1_15_0_1_C1 = { 16{ !_072_ }} ;
  assign FpMul_6U_10U_ub_sva_1_15_0_1_R1 = { 16{ !_072_ }} & ( _024__R | ( { 16{ _072__T  }} & _024__C ));
  assign FpMul_6U_10U_ub_sva_1_15_0_1_X1 = { 16{ !_072_ }} & _024__X ;
  assign _018_ = _071_ ? _176_ : FpMul_6U_10U_mux_10_itm_3;
  logic [0:0] _071__C0 ;
  logic [0:0] _071__R0 ;
  logic [0:0] _071__X0 ;
  assign _071__C0 = | _018__C ;
  assign _071__X0 = | _018__X ;
  assign _018__T = _071_ ? ( { 1{ _071__T  }} | _176__T ) : ( { 1{ _071__T  }} | FpMul_6U_10U_mux_10_itm_3_T );
  assign _018__S = _071_ ? _176__S : FpMul_6U_10U_mux_10_itm_3_S ;
  assign _071__R0 = ( | (_018__R | ( _018__C & ( { 1{ _071_ }} & _176__T | { 1{ !_071_ }} & FpMul_6U_10U_mux_10_itm_3_T )))) && _176_ != FpMul_6U_10U_mux_10_itm_3 ;
  logic [0:0] _176__C0 ;
  logic [0:0] _176__R0 ;
  logic [0:0] _176__X0 ;
  assign _176__C0 = { 1{ _071_ }} ;
  assign _176__R0 = { 1{ _071_ }} & ( _018__R | ( { 1{ _071__T  }} & _018__C ));
  assign _176__X0 = { 1{ _071_ }} & _018__X ;
  logic [0:0] FpMul_6U_10U_mux_10_itm_3_C0 ;
  logic [0:0] FpMul_6U_10U_mux_10_itm_3_R0 ;
  logic [0:0] FpMul_6U_10U_mux_10_itm_3_X0 ;
  assign FpMul_6U_10U_mux_10_itm_3_C0 = { 1{ !_071_ }} ;
  assign FpMul_6U_10U_mux_10_itm_3_R0 = { 1{ !_071_ }} & ( _018__R | ( { 1{ _071__T  }} & _018__C ));
  assign FpMul_6U_10U_mux_10_itm_3_X0 = { 1{ !_071_ }} & _018__X ;
  assign _038_ = and_45_rgt ? FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs : FpMul_6U_10U_else_2_if_acc_nl[6];
  logic [0:0] and_45_rgt_C1 ;
  logic [0:0] and_45_rgt_R1 ;
  logic [0:0] and_45_rgt_X1 ;
  assign and_45_rgt_C1 = | _038__C ;
  assign and_45_rgt_X1 = | _038__X ;
  assign _038__T = and_45_rgt ? ( { 1{ and_45_rgt_T  }} | FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_T ) : ( { 1{ and_45_rgt_T  }} | FpMul_6U_10U_else_2_if_acc_nl_T [6] );
  assign _038__S = and_45_rgt ? FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_S : FpMul_6U_10U_else_2_if_acc_nl_S ;
  assign and_45_rgt_R1 = ( | (_038__R | ( _038__C & ( { 1{ and_45_rgt }} & FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_T | { 1{ !and_45_rgt }} & FpMul_6U_10U_else_2_if_acc_nl_T [6] )))) && FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs != FpMul_6U_10U_else_2_if_acc_nl[6] ;
  assign { FpMul_6U_10U_else_2_if_acc_nl_R3 [0], FpMul_6U_10U_else_2_if_acc_nl_R3 [1], FpMul_6U_10U_else_2_if_acc_nl_R3 [2], FpMul_6U_10U_else_2_if_acc_nl_R3 [3], FpMul_6U_10U_else_2_if_acc_nl_R3 [4], FpMul_6U_10U_else_2_if_acc_nl_R3 [5] } = 0;
  assign { FpMul_6U_10U_else_2_if_acc_nl_X3 [0], FpMul_6U_10U_else_2_if_acc_nl_X3 [1], FpMul_6U_10U_else_2_if_acc_nl_X3 [2], FpMul_6U_10U_else_2_if_acc_nl_X3 [3], FpMul_6U_10U_else_2_if_acc_nl_X3 [4], FpMul_6U_10U_else_2_if_acc_nl_X3 [5] } = 0;
  assign { FpMul_6U_10U_else_2_if_acc_nl_C3 [0], FpMul_6U_10U_else_2_if_acc_nl_C3 [1], FpMul_6U_10U_else_2_if_acc_nl_C3 [2], FpMul_6U_10U_else_2_if_acc_nl_C3 [3], FpMul_6U_10U_else_2_if_acc_nl_C3 [4], FpMul_6U_10U_else_2_if_acc_nl_C3 [5] } = 0;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_C1 ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_R1 ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_X1 ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_C1 = { 1{ and_45_rgt }} ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_R1 = { 1{ and_45_rgt }} & ( _038__R | ( { 1{ and_45_rgt_T  }} & _038__C ));
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_X1 = { 1{ and_45_rgt }} & _038__X ;
  logic [6:0] FpMul_6U_10U_else_2_if_acc_nl_C4 ;
  logic [6:0] FpMul_6U_10U_else_2_if_acc_nl_R4 ;
  logic [6:0] FpMul_6U_10U_else_2_if_acc_nl_X4 ;
  assign FpMul_6U_10U_else_2_if_acc_nl_C4 [6] = { 1{ !and_45_rgt }} ;
  assign FpMul_6U_10U_else_2_if_acc_nl_R4 [6] = { 1{ !and_45_rgt }} & ( _038__R | ( { 1{ and_45_rgt_T  }} & _038__C ));
  assign FpMul_6U_10U_else_2_if_acc_nl_X4 [6] = { 1{ !and_45_rgt }} & _038__X ;
  assign _010_ = _069_ ? _038_ : FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3;
  logic [0:0] _069__C0 ;
  logic [0:0] _069__R0 ;
  logic [0:0] _069__X0 ;
  assign _069__C0 = | _010__C ;
  assign _069__X0 = | _010__X ;
  assign _010__T = _069_ ? ( { 1{ _069__T  }} | _038__T ) : ( { 1{ _069__T  }} | FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_T );
  assign _010__S = _069_ ? _038__S : FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_S ;
  assign _069__R0 = ( | (_010__R | ( _010__C & ( { 1{ _069_ }} & _038__T | { 1{ !_069_ }} & FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_T )))) && _038_ != FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3 ;
  logic [0:0] _038__C0 ;
  logic [0:0] _038__R0 ;
  logic [0:0] _038__X0 ;
  assign _038__C0 = { 1{ _069_ }} ;
  assign _038__R0 = { 1{ _069_ }} & ( _010__R | ( { 1{ _069__T  }} & _010__C ));
  assign _038__X0 = { 1{ _069_ }} & _010__X ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_C0 ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_R0 ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_X0 ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_C0 = { 1{ !_069_ }} ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_R0 = { 1{ !_069_ }} & ( _010__R | ( { 1{ _069__T  }} & _010__C ));
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_X0 = { 1{ !_069_ }} & _010__X ;
  assign _014_ = _066_ ? or_68_cse : FpMul_6U_10U_lor_1_lpi_1_dfm_3;
  logic [0:0] _066__C0 ;
  logic [0:0] _066__R0 ;
  logic [0:0] _066__X0 ;
  assign _066__C0 = | _014__C ;
  assign _066__X0 = | _014__X ;
  assign _014__T = _066_ ? ( { 1{ _066__T  }} | or_68_cse_T ) : ( { 1{ _066__T  }} | FpMul_6U_10U_lor_1_lpi_1_dfm_3_T );
  assign _014__S = _066_ ? or_68_cse_S : FpMul_6U_10U_lor_1_lpi_1_dfm_3_S ;
  assign _066__R0 = ( | (_014__R | ( _014__C & ( { 1{ _066_ }} & or_68_cse_T | { 1{ !_066_ }} & FpMul_6U_10U_lor_1_lpi_1_dfm_3_T )))) && or_68_cse != FpMul_6U_10U_lor_1_lpi_1_dfm_3 ;
  logic [0:0] or_68_cse_C5 ;
  logic [0:0] or_68_cse_R5 ;
  logic [0:0] or_68_cse_X5 ;
  assign or_68_cse_C5 = { 1{ _066_ }} ;
  assign or_68_cse_R5 = { 1{ _066_ }} & ( _014__R | ( { 1{ _066__T  }} & _014__C ));
  assign or_68_cse_X5 = { 1{ _066_ }} & _014__X ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_3_C0 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_3_R0 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_3_X0 ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_3_C0 = { 1{ !_066_ }} ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_3_R0 = { 1{ !_066_ }} & ( _014__R | ( { 1{ _066__T  }} & _014__C ));
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_3_X0 = { 1{ !_066_ }} & _014__X ;
  assign _021_ = _065_ ? FpMul_6U_10U_p_mant_p1_mul_tmp : FpMul_6U_10U_p_mant_p1_sva;
  logic [0:0] _065__C0 ;
  logic [0:0] _065__R0 ;
  logic [0:0] _065__X0 ;
  assign _065__C0 = | _021__C ;
  assign _065__X0 = | _021__X ;
  assign _021__T = _065_ ? ( { 22{ _065__T  }} | FpMul_6U_10U_p_mant_p1_mul_tmp_T ) : ( { 22{ _065__T  }} | FpMul_6U_10U_p_mant_p1_sva_T );
  assign _021__S = _065_ ? FpMul_6U_10U_p_mant_p1_mul_tmp_S : FpMul_6U_10U_p_mant_p1_sva_S ;
  assign _065__R0 = ( | (_021__R | ( _021__C & ( { 22{ _065_ }} & FpMul_6U_10U_p_mant_p1_mul_tmp_T | { 22{ !_065_ }} & FpMul_6U_10U_p_mant_p1_sva_T )))) && FpMul_6U_10U_p_mant_p1_mul_tmp != FpMul_6U_10U_p_mant_p1_sva ;
  assign { FpMul_6U_10U_p_mant_p1_mul_tmp_R0 [0], FpMul_6U_10U_p_mant_p1_mul_tmp_R0 [1], FpMul_6U_10U_p_mant_p1_mul_tmp_R0 [2], FpMul_6U_10U_p_mant_p1_mul_tmp_R0 [3], FpMul_6U_10U_p_mant_p1_mul_tmp_R0 [4], FpMul_6U_10U_p_mant_p1_mul_tmp_R0 [5], FpMul_6U_10U_p_mant_p1_mul_tmp_R0 [6], FpMul_6U_10U_p_mant_p1_mul_tmp_R0 [7], FpMul_6U_10U_p_mant_p1_mul_tmp_R0 [8], FpMul_6U_10U_p_mant_p1_mul_tmp_R0 [9], FpMul_6U_10U_p_mant_p1_mul_tmp_R0 [10], FpMul_6U_10U_p_mant_p1_mul_tmp_R0 [11], FpMul_6U_10U_p_mant_p1_mul_tmp_R0 [12], FpMul_6U_10U_p_mant_p1_mul_tmp_R0 [13], FpMul_6U_10U_p_mant_p1_mul_tmp_R0 [14], FpMul_6U_10U_p_mant_p1_mul_tmp_R0 [15], FpMul_6U_10U_p_mant_p1_mul_tmp_R0 [16], FpMul_6U_10U_p_mant_p1_mul_tmp_R0 [17], FpMul_6U_10U_p_mant_p1_mul_tmp_R0 [18], FpMul_6U_10U_p_mant_p1_mul_tmp_R0 [19], FpMul_6U_10U_p_mant_p1_mul_tmp_R0 [20] } = 0;
  assign { FpMul_6U_10U_p_mant_p1_mul_tmp_X0 [0], FpMul_6U_10U_p_mant_p1_mul_tmp_X0 [1], FpMul_6U_10U_p_mant_p1_mul_tmp_X0 [2], FpMul_6U_10U_p_mant_p1_mul_tmp_X0 [3], FpMul_6U_10U_p_mant_p1_mul_tmp_X0 [4], FpMul_6U_10U_p_mant_p1_mul_tmp_X0 [5], FpMul_6U_10U_p_mant_p1_mul_tmp_X0 [6], FpMul_6U_10U_p_mant_p1_mul_tmp_X0 [7], FpMul_6U_10U_p_mant_p1_mul_tmp_X0 [8], FpMul_6U_10U_p_mant_p1_mul_tmp_X0 [9], FpMul_6U_10U_p_mant_p1_mul_tmp_X0 [10], FpMul_6U_10U_p_mant_p1_mul_tmp_X0 [11], FpMul_6U_10U_p_mant_p1_mul_tmp_X0 [12], FpMul_6U_10U_p_mant_p1_mul_tmp_X0 [13], FpMul_6U_10U_p_mant_p1_mul_tmp_X0 [14], FpMul_6U_10U_p_mant_p1_mul_tmp_X0 [15], FpMul_6U_10U_p_mant_p1_mul_tmp_X0 [16], FpMul_6U_10U_p_mant_p1_mul_tmp_X0 [17], FpMul_6U_10U_p_mant_p1_mul_tmp_X0 [18], FpMul_6U_10U_p_mant_p1_mul_tmp_X0 [19], FpMul_6U_10U_p_mant_p1_mul_tmp_X0 [20] } = 0;
  assign { FpMul_6U_10U_p_mant_p1_mul_tmp_C0 [0], FpMul_6U_10U_p_mant_p1_mul_tmp_C0 [1], FpMul_6U_10U_p_mant_p1_mul_tmp_C0 [2], FpMul_6U_10U_p_mant_p1_mul_tmp_C0 [3], FpMul_6U_10U_p_mant_p1_mul_tmp_C0 [4], FpMul_6U_10U_p_mant_p1_mul_tmp_C0 [5], FpMul_6U_10U_p_mant_p1_mul_tmp_C0 [6], FpMul_6U_10U_p_mant_p1_mul_tmp_C0 [7], FpMul_6U_10U_p_mant_p1_mul_tmp_C0 [8], FpMul_6U_10U_p_mant_p1_mul_tmp_C0 [9], FpMul_6U_10U_p_mant_p1_mul_tmp_C0 [10], FpMul_6U_10U_p_mant_p1_mul_tmp_C0 [11], FpMul_6U_10U_p_mant_p1_mul_tmp_C0 [12], FpMul_6U_10U_p_mant_p1_mul_tmp_C0 [13], FpMul_6U_10U_p_mant_p1_mul_tmp_C0 [14], FpMul_6U_10U_p_mant_p1_mul_tmp_C0 [15], FpMul_6U_10U_p_mant_p1_mul_tmp_C0 [16], FpMul_6U_10U_p_mant_p1_mul_tmp_C0 [17], FpMul_6U_10U_p_mant_p1_mul_tmp_C0 [18], FpMul_6U_10U_p_mant_p1_mul_tmp_C0 [19], FpMul_6U_10U_p_mant_p1_mul_tmp_C0 [20] } = 0;
  logic [21:0] FpMul_6U_10U_p_mant_p1_mul_tmp_C1 ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_mul_tmp_R1 ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_mul_tmp_X1 ;
  assign FpMul_6U_10U_p_mant_p1_mul_tmp_C1 = { 22{ _065_ }} ;
  assign FpMul_6U_10U_p_mant_p1_mul_tmp_R1 = { 22{ _065_ }} & ( _021__R | ( { 22{ _065__T  }} & _021__C ));
  assign FpMul_6U_10U_p_mant_p1_mul_tmp_X1 = { 22{ _065_ }} & _021__X ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_sva_C0 ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_sva_R0 ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_sva_X0 ;
  assign FpMul_6U_10U_p_mant_p1_sva_C0 = { 22{ !_065_ }} ;
  assign FpMul_6U_10U_p_mant_p1_sva_R0 = { 22{ !_065_ }} & ( _021__R | ( { 22{ _065__T  }} & _021__C ));
  assign FpMul_6U_10U_p_mant_p1_sva_X0 = { 22{ !_065_ }} & _021__X ;
  assign _011_ = FpMul_6U_10U_oelse_1_and_1_cse ? FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3 : FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4;
  logic [0:0] FpMul_6U_10U_oelse_1_and_1_cse_C0 ;
  logic [0:0] FpMul_6U_10U_oelse_1_and_1_cse_R0 ;
  logic [0:0] FpMul_6U_10U_oelse_1_and_1_cse_X0 ;
  assign FpMul_6U_10U_oelse_1_and_1_cse_C0 = | _011__C ;
  assign FpMul_6U_10U_oelse_1_and_1_cse_X0 = | _011__X ;
  assign _011__T = FpMul_6U_10U_oelse_1_and_1_cse ? ( { 1{ FpMul_6U_10U_oelse_1_and_1_cse_T  }} | FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_T ) : ( { 1{ FpMul_6U_10U_oelse_1_and_1_cse_T  }} | FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_T );
  assign _011__S = FpMul_6U_10U_oelse_1_and_1_cse ? FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_S : FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_S ;
  assign FpMul_6U_10U_oelse_1_and_1_cse_R0 = ( | (_011__R | ( _011__C & ( { 1{ FpMul_6U_10U_oelse_1_and_1_cse }} & FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_T | { 1{ !FpMul_6U_10U_oelse_1_and_1_cse }} & FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_T )))) && FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3 != FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4 ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_C1 ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_R1 ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_X1 ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_C1 = { 1{ FpMul_6U_10U_oelse_1_and_1_cse }} ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_R1 = { 1{ FpMul_6U_10U_oelse_1_and_1_cse }} & ( _011__R | ( { 1{ FpMul_6U_10U_oelse_1_and_1_cse_T  }} & _011__C ));
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_X1 = { 1{ FpMul_6U_10U_oelse_1_and_1_cse }} & _011__X ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_C1 ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_R1 ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_X1 ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_C1 = { 1{ !FpMul_6U_10U_oelse_1_and_1_cse }} ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_R1 = { 1{ !FpMul_6U_10U_oelse_1_and_1_cse }} & ( _011__R | ( { 1{ FpMul_6U_10U_oelse_1_and_1_cse_T  }} & _011__C ));
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_X1 = { 1{ !FpMul_6U_10U_oelse_1_and_1_cse }} & _011__X ;
  assign _015_ = FpMul_6U_10U_oelse_1_and_1_cse ? FpMul_6U_10U_lor_1_lpi_1_dfm_3 : FpMul_6U_10U_lor_1_lpi_1_dfm_4;
  logic [0:0] FpMul_6U_10U_oelse_1_and_1_cse_C1 ;
  logic [0:0] FpMul_6U_10U_oelse_1_and_1_cse_R1 ;
  logic [0:0] FpMul_6U_10U_oelse_1_and_1_cse_X1 ;
  assign FpMul_6U_10U_oelse_1_and_1_cse_C1 = | _015__C ;
  assign FpMul_6U_10U_oelse_1_and_1_cse_X1 = | _015__X ;
  assign _015__T = FpMul_6U_10U_oelse_1_and_1_cse ? ( { 1{ FpMul_6U_10U_oelse_1_and_1_cse_T  }} | FpMul_6U_10U_lor_1_lpi_1_dfm_3_T ) : ( { 1{ FpMul_6U_10U_oelse_1_and_1_cse_T  }} | FpMul_6U_10U_lor_1_lpi_1_dfm_4_T );
  assign _015__S = FpMul_6U_10U_oelse_1_and_1_cse ? FpMul_6U_10U_lor_1_lpi_1_dfm_3_S : FpMul_6U_10U_lor_1_lpi_1_dfm_4_S ;
  assign FpMul_6U_10U_oelse_1_and_1_cse_R1 = ( | (_015__R | ( _015__C & ( { 1{ FpMul_6U_10U_oelse_1_and_1_cse }} & FpMul_6U_10U_lor_1_lpi_1_dfm_3_T | { 1{ !FpMul_6U_10U_oelse_1_and_1_cse }} & FpMul_6U_10U_lor_1_lpi_1_dfm_4_T )))) && FpMul_6U_10U_lor_1_lpi_1_dfm_3 != FpMul_6U_10U_lor_1_lpi_1_dfm_4 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_3_C1 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_3_R1 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_3_X1 ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_3_C1 = { 1{ FpMul_6U_10U_oelse_1_and_1_cse }} ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_3_R1 = { 1{ FpMul_6U_10U_oelse_1_and_1_cse }} & ( _015__R | ( { 1{ FpMul_6U_10U_oelse_1_and_1_cse_T  }} & _015__C ));
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_3_X1 = { 1{ FpMul_6U_10U_oelse_1_and_1_cse }} & _015__X ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_4_C2 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_4_R2 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_4_X2 ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_4_C2 = { 1{ !FpMul_6U_10U_oelse_1_and_1_cse }} ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_4_R2 = { 1{ !FpMul_6U_10U_oelse_1_and_1_cse }} & ( _015__R | ( { 1{ FpMul_6U_10U_oelse_1_and_1_cse_T  }} & _015__C ));
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_4_X2 = { 1{ !FpMul_6U_10U_oelse_1_and_1_cse }} & _015__X ;
  assign _017_ = IsNaN_6U_10U_1_aelse_and_cse ? FpMul_6U_10U_lor_1_lpi_1_dfm_st_3 : FpMul_6U_10U_lor_1_lpi_1_dfm_st_4;
  logic [0:0] IsNaN_6U_10U_1_aelse_and_cse_C0 ;
  logic [0:0] IsNaN_6U_10U_1_aelse_and_cse_R0 ;
  logic [0:0] IsNaN_6U_10U_1_aelse_and_cse_X0 ;
  assign IsNaN_6U_10U_1_aelse_and_cse_C0 = | _017__C ;
  assign IsNaN_6U_10U_1_aelse_and_cse_X0 = | _017__X ;
  assign _017__T = IsNaN_6U_10U_1_aelse_and_cse ? ( { 1{ IsNaN_6U_10U_1_aelse_and_cse_T  }} | FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_T ) : ( { 1{ IsNaN_6U_10U_1_aelse_and_cse_T  }} | FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_T );
  assign _017__S = IsNaN_6U_10U_1_aelse_and_cse ? FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_S : FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_S ;
  assign IsNaN_6U_10U_1_aelse_and_cse_R0 = ( | (_017__R | ( _017__C & ( { 1{ IsNaN_6U_10U_1_aelse_and_cse }} & FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_T | { 1{ !IsNaN_6U_10U_1_aelse_and_cse }} & FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_T )))) && FpMul_6U_10U_lor_1_lpi_1_dfm_st_3 != FpMul_6U_10U_lor_1_lpi_1_dfm_st_4 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_C6 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_R6 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_X6 ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_C6 = { 1{ IsNaN_6U_10U_1_aelse_and_cse }} ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_R6 = { 1{ IsNaN_6U_10U_1_aelse_and_cse }} & ( _017__R | ( { 1{ IsNaN_6U_10U_1_aelse_and_cse_T  }} & _017__C ));
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_X6 = { 1{ IsNaN_6U_10U_1_aelse_and_cse }} & _017__X ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_C3 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_R3 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_X3 ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_C3 = { 1{ !IsNaN_6U_10U_1_aelse_and_cse }} ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_R3 = { 1{ !IsNaN_6U_10U_1_aelse_and_cse }} & ( _017__R | ( { 1{ IsNaN_6U_10U_1_aelse_and_cse_T  }} & _017__C ));
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_X3 = { 1{ !IsNaN_6U_10U_1_aelse_and_cse }} & _017__X ;
  assign _019_ = IsNaN_6U_10U_1_aelse_and_cse ? FpMul_6U_10U_mux_10_itm_3 : FpMul_6U_10U_mux_10_itm_4;
  logic [0:0] IsNaN_6U_10U_1_aelse_and_cse_C1 ;
  logic [0:0] IsNaN_6U_10U_1_aelse_and_cse_R1 ;
  logic [0:0] IsNaN_6U_10U_1_aelse_and_cse_X1 ;
  assign IsNaN_6U_10U_1_aelse_and_cse_C1 = | _019__C ;
  assign IsNaN_6U_10U_1_aelse_and_cse_X1 = | _019__X ;
  assign _019__T = IsNaN_6U_10U_1_aelse_and_cse ? ( { 1{ IsNaN_6U_10U_1_aelse_and_cse_T  }} | FpMul_6U_10U_mux_10_itm_3_T ) : ( { 1{ IsNaN_6U_10U_1_aelse_and_cse_T  }} | FpMul_6U_10U_mux_10_itm_4_T );
  assign _019__S = IsNaN_6U_10U_1_aelse_and_cse ? FpMul_6U_10U_mux_10_itm_3_S : FpMul_6U_10U_mux_10_itm_4_S ;
  assign IsNaN_6U_10U_1_aelse_and_cse_R1 = ( | (_019__R | ( _019__C & ( { 1{ IsNaN_6U_10U_1_aelse_and_cse }} & FpMul_6U_10U_mux_10_itm_3_T | { 1{ !IsNaN_6U_10U_1_aelse_and_cse }} & FpMul_6U_10U_mux_10_itm_4_T )))) && FpMul_6U_10U_mux_10_itm_3 != FpMul_6U_10U_mux_10_itm_4 ;
  logic [0:0] FpMul_6U_10U_mux_10_itm_3_C1 ;
  logic [0:0] FpMul_6U_10U_mux_10_itm_3_R1 ;
  logic [0:0] FpMul_6U_10U_mux_10_itm_3_X1 ;
  assign FpMul_6U_10U_mux_10_itm_3_C1 = { 1{ IsNaN_6U_10U_1_aelse_and_cse }} ;
  assign FpMul_6U_10U_mux_10_itm_3_R1 = { 1{ IsNaN_6U_10U_1_aelse_and_cse }} & ( _019__R | ( { 1{ IsNaN_6U_10U_1_aelse_and_cse_T  }} & _019__C ));
  assign FpMul_6U_10U_mux_10_itm_3_X1 = { 1{ IsNaN_6U_10U_1_aelse_and_cse }} & _019__X ;
  logic [0:0] FpMul_6U_10U_mux_10_itm_4_C0 ;
  logic [0:0] FpMul_6U_10U_mux_10_itm_4_R0 ;
  logic [0:0] FpMul_6U_10U_mux_10_itm_4_X0 ;
  assign FpMul_6U_10U_mux_10_itm_4_C0 = { 1{ !IsNaN_6U_10U_1_aelse_and_cse }} ;
  assign FpMul_6U_10U_mux_10_itm_4_R0 = { 1{ !IsNaN_6U_10U_1_aelse_and_cse }} & ( _019__R | ( { 1{ IsNaN_6U_10U_1_aelse_and_cse_T  }} & _019__C ));
  assign FpMul_6U_10U_mux_10_itm_4_X0 = { 1{ !IsNaN_6U_10U_1_aelse_and_cse }} & _019__X ;
  assign _027_ = IsNaN_6U_10U_1_aelse_and_cse ? IsNaN_6U_10U_land_lpi_1_dfm_st_3 : IsNaN_6U_10U_land_lpi_1_dfm_4;
  logic [0:0] IsNaN_6U_10U_1_aelse_and_cse_C2 ;
  logic [0:0] IsNaN_6U_10U_1_aelse_and_cse_R2 ;
  logic [0:0] IsNaN_6U_10U_1_aelse_and_cse_X2 ;
  assign IsNaN_6U_10U_1_aelse_and_cse_C2 = | _027__C ;
  assign IsNaN_6U_10U_1_aelse_and_cse_X2 = | _027__X ;
  assign _027__T = IsNaN_6U_10U_1_aelse_and_cse ? ( { 1{ IsNaN_6U_10U_1_aelse_and_cse_T  }} | IsNaN_6U_10U_land_lpi_1_dfm_st_3_T ) : ( { 1{ IsNaN_6U_10U_1_aelse_and_cse_T  }} | IsNaN_6U_10U_land_lpi_1_dfm_4_T );
  assign _027__S = IsNaN_6U_10U_1_aelse_and_cse ? IsNaN_6U_10U_land_lpi_1_dfm_st_3_S : IsNaN_6U_10U_land_lpi_1_dfm_4_S ;
  assign IsNaN_6U_10U_1_aelse_and_cse_R2 = ( | (_027__R | ( _027__C & ( { 1{ IsNaN_6U_10U_1_aelse_and_cse }} & IsNaN_6U_10U_land_lpi_1_dfm_st_3_T | { 1{ !IsNaN_6U_10U_1_aelse_and_cse }} & IsNaN_6U_10U_land_lpi_1_dfm_4_T )))) && IsNaN_6U_10U_land_lpi_1_dfm_st_3 != IsNaN_6U_10U_land_lpi_1_dfm_4 ;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_st_3_C7 ;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_st_3_R7 ;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_st_3_X7 ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_st_3_C7 = { 1{ IsNaN_6U_10U_1_aelse_and_cse }} ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_st_3_R7 = { 1{ IsNaN_6U_10U_1_aelse_and_cse }} & ( _027__R | ( { 1{ IsNaN_6U_10U_1_aelse_and_cse_T  }} & _027__C ));
  assign IsNaN_6U_10U_land_lpi_1_dfm_st_3_X7 = { 1{ IsNaN_6U_10U_1_aelse_and_cse }} & _027__X ;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_4_C3 ;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_4_R3 ;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_4_X3 ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_4_C3 = { 1{ !IsNaN_6U_10U_1_aelse_and_cse }} ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_4_R3 = { 1{ !IsNaN_6U_10U_1_aelse_and_cse }} & ( _027__R | ( { 1{ IsNaN_6U_10U_1_aelse_and_cse_T  }} & _027__C ));
  assign IsNaN_6U_10U_land_lpi_1_dfm_4_X3 = { 1{ !IsNaN_6U_10U_1_aelse_and_cse }} & _027__X ;
  assign _026_ = IsNaN_6U_10U_1_aelse_and_cse ? IsNaN_6U_10U_1_land_lpi_1_dfm_3 : IsNaN_6U_10U_1_land_lpi_1_dfm_4;
  logic [0:0] IsNaN_6U_10U_1_aelse_and_cse_C3 ;
  logic [0:0] IsNaN_6U_10U_1_aelse_and_cse_R3 ;
  logic [0:0] IsNaN_6U_10U_1_aelse_and_cse_X3 ;
  assign IsNaN_6U_10U_1_aelse_and_cse_C3 = | _026__C ;
  assign IsNaN_6U_10U_1_aelse_and_cse_X3 = | _026__X ;
  assign _026__T = IsNaN_6U_10U_1_aelse_and_cse ? ( { 1{ IsNaN_6U_10U_1_aelse_and_cse_T  }} | IsNaN_6U_10U_1_land_lpi_1_dfm_3_T ) : ( { 1{ IsNaN_6U_10U_1_aelse_and_cse_T  }} | IsNaN_6U_10U_1_land_lpi_1_dfm_4_T );
  assign _026__S = IsNaN_6U_10U_1_aelse_and_cse ? IsNaN_6U_10U_1_land_lpi_1_dfm_3_S : IsNaN_6U_10U_1_land_lpi_1_dfm_4_S ;
  assign IsNaN_6U_10U_1_aelse_and_cse_R3 = ( | (_026__R | ( _026__C & ( { 1{ IsNaN_6U_10U_1_aelse_and_cse }} & IsNaN_6U_10U_1_land_lpi_1_dfm_3_T | { 1{ !IsNaN_6U_10U_1_aelse_and_cse }} & IsNaN_6U_10U_1_land_lpi_1_dfm_4_T )))) && IsNaN_6U_10U_1_land_lpi_1_dfm_3 != IsNaN_6U_10U_1_land_lpi_1_dfm_4 ;
  logic [0:0] IsNaN_6U_10U_1_land_lpi_1_dfm_3_C4 ;
  logic [0:0] IsNaN_6U_10U_1_land_lpi_1_dfm_3_R4 ;
  logic [0:0] IsNaN_6U_10U_1_land_lpi_1_dfm_3_X4 ;
  assign IsNaN_6U_10U_1_land_lpi_1_dfm_3_C4 = { 1{ IsNaN_6U_10U_1_aelse_and_cse }} ;
  assign IsNaN_6U_10U_1_land_lpi_1_dfm_3_R4 = { 1{ IsNaN_6U_10U_1_aelse_and_cse }} & ( _026__R | ( { 1{ IsNaN_6U_10U_1_aelse_and_cse_T  }} & _026__C ));
  assign IsNaN_6U_10U_1_land_lpi_1_dfm_3_X4 = { 1{ IsNaN_6U_10U_1_aelse_and_cse }} & _026__X ;
  logic [0:0] IsNaN_6U_10U_1_land_lpi_1_dfm_4_C2 ;
  logic [0:0] IsNaN_6U_10U_1_land_lpi_1_dfm_4_R2 ;
  logic [0:0] IsNaN_6U_10U_1_land_lpi_1_dfm_4_X2 ;
  assign IsNaN_6U_10U_1_land_lpi_1_dfm_4_C2 = { 1{ !IsNaN_6U_10U_1_aelse_and_cse }} ;
  assign IsNaN_6U_10U_1_land_lpi_1_dfm_4_R2 = { 1{ !IsNaN_6U_10U_1_aelse_and_cse }} & ( _026__R | ( { 1{ IsNaN_6U_10U_1_aelse_and_cse_T  }} & _026__C ));
  assign IsNaN_6U_10U_1_land_lpi_1_dfm_4_X2 = { 1{ !IsNaN_6U_10U_1_aelse_and_cse }} & _026__X ;
  assign _040_ = and_dcpl_28 ? FpMul_6U_10U_ua_sva_1_15_0_1[9:0] : FpMul_6U_10U_ub_sva_1_15_0_1[9:0];
  logic [0:0] and_dcpl_28_C1 ;
  logic [0:0] and_dcpl_28_R1 ;
  logic [0:0] and_dcpl_28_X1 ;
  assign and_dcpl_28_C1 = | _040__C ;
  assign and_dcpl_28_X1 = | _040__X ;
  assign _040__T = and_dcpl_28 ? ( { 10{ and_dcpl_28_T  }} | FpMul_6U_10U_ua_sva_1_15_0_1_T [9:0] ) : ( { 10{ and_dcpl_28_T  }} | FpMul_6U_10U_ub_sva_1_15_0_1_T [9:0] );
  assign _040__S = and_dcpl_28 ? FpMul_6U_10U_ua_sva_1_15_0_1_S : FpMul_6U_10U_ub_sva_1_15_0_1_S ;
  assign and_dcpl_28_R1 = ( | (_040__R | ( _040__C & ( { 10{ and_dcpl_28 }} & FpMul_6U_10U_ua_sva_1_15_0_1_T [9:0] | { 10{ !and_dcpl_28 }} & FpMul_6U_10U_ub_sva_1_15_0_1_T [9:0] )))) && FpMul_6U_10U_ua_sva_1_15_0_1[9:0] != FpMul_6U_10U_ub_sva_1_15_0_1[9:0] ;
  logic [15:0] FpMul_6U_10U_ua_sva_1_15_0_1_C2 ;
  logic [15:0] FpMul_6U_10U_ua_sva_1_15_0_1_R2 ;
  logic [15:0] FpMul_6U_10U_ua_sva_1_15_0_1_X2 ;
  assign FpMul_6U_10U_ua_sva_1_15_0_1_C2 [9:0] = { 10{ and_dcpl_28 }} ;
  assign FpMul_6U_10U_ua_sva_1_15_0_1_R2 [9:0] = { 10{ and_dcpl_28 }} & ( _040__R | ( { 10{ and_dcpl_28_T  }} & _040__C ));
  assign FpMul_6U_10U_ua_sva_1_15_0_1_X2 [9:0] = { 10{ and_dcpl_28 }} & _040__X ;
  logic [15:0] FpMul_6U_10U_ub_sva_1_15_0_1_C2 ;
  logic [15:0] FpMul_6U_10U_ub_sva_1_15_0_1_R2 ;
  logic [15:0] FpMul_6U_10U_ub_sva_1_15_0_1_X2 ;
  assign FpMul_6U_10U_ub_sva_1_15_0_1_C2 [9:0] = { 10{ !and_dcpl_28 }} ;
  assign FpMul_6U_10U_ub_sva_1_15_0_1_R2 [9:0] = { 10{ !and_dcpl_28 }} & ( _040__R | ( { 10{ and_dcpl_28_T  }} & _040__C ));
  assign FpMul_6U_10U_ub_sva_1_15_0_1_X2 [9:0] = { 10{ !and_dcpl_28 }} & _040__X ;
  assign _043_ = and_dcpl_28 ? FpMul_6U_10U_ua_sva_1_15_0_1[15:10] : FpMul_6U_10U_ub_sva_1_15_0_1[15:10];
  logic [0:0] and_dcpl_28_C2 ;
  logic [0:0] and_dcpl_28_R2 ;
  logic [0:0] and_dcpl_28_X2 ;
  assign and_dcpl_28_C2 = | _043__C ;
  assign and_dcpl_28_X2 = | _043__X ;
  assign _043__T = and_dcpl_28 ? ( { 6{ and_dcpl_28_T  }} | FpMul_6U_10U_ua_sva_1_15_0_1_T [15:10] ) : ( { 6{ and_dcpl_28_T  }} | FpMul_6U_10U_ub_sva_1_15_0_1_T [15:10] );
  assign _043__S = and_dcpl_28 ? FpMul_6U_10U_ua_sva_1_15_0_1_S : FpMul_6U_10U_ub_sva_1_15_0_1_S ;
  assign and_dcpl_28_R2 = ( | (_043__R | ( _043__C & ( { 6{ and_dcpl_28 }} & FpMul_6U_10U_ua_sva_1_15_0_1_T [15:10] | { 6{ !and_dcpl_28 }} & FpMul_6U_10U_ub_sva_1_15_0_1_T [15:10] )))) && FpMul_6U_10U_ua_sva_1_15_0_1[15:10] != FpMul_6U_10U_ub_sva_1_15_0_1[15:10] ;
  assign FpMul_6U_10U_ua_sva_1_15_0_1_C2 [15:10] = { 6{ and_dcpl_28 }} ;
  assign FpMul_6U_10U_ua_sva_1_15_0_1_R2 [15:10] = { 6{ and_dcpl_28 }} & ( _043__R | ( { 6{ and_dcpl_28_T  }} & _043__C ));
  assign FpMul_6U_10U_ua_sva_1_15_0_1_X2 [15:10] = { 6{ and_dcpl_28 }} & _043__X ;
  assign FpMul_6U_10U_ub_sva_1_15_0_1_C2 [15:10] = { 6{ !and_dcpl_28 }} ;
  assign FpMul_6U_10U_ub_sva_1_15_0_1_R2 [15:10] = { 6{ !and_dcpl_28 }} & ( _043__R | ( { 6{ and_dcpl_28_T  }} & _043__C ));
  assign FpMul_6U_10U_ub_sva_1_15_0_1_X2 [15:10] = { 6{ !and_dcpl_28 }} & _043__X ;
  assign _007_ = FpBitsToFloat_6U_10U_1_and_1_cse ? _040_ : FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2;
  logic [0:0] FpBitsToFloat_6U_10U_1_and_1_cse_C0 ;
  logic [0:0] FpBitsToFloat_6U_10U_1_and_1_cse_R0 ;
  logic [0:0] FpBitsToFloat_6U_10U_1_and_1_cse_X0 ;
  assign FpBitsToFloat_6U_10U_1_and_1_cse_C0 = | _007__C ;
  assign FpBitsToFloat_6U_10U_1_and_1_cse_X0 = | _007__X ;
  assign _007__T = FpBitsToFloat_6U_10U_1_and_1_cse ? ( { 10{ FpBitsToFloat_6U_10U_1_and_1_cse_T  }} | _040__T ) : ( { 10{ FpBitsToFloat_6U_10U_1_and_1_cse_T  }} | FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_T );
  assign _007__S = FpBitsToFloat_6U_10U_1_and_1_cse ? _040__S : FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_S ;
  assign FpBitsToFloat_6U_10U_1_and_1_cse_R0 = ( | (_007__R | ( _007__C & ( { 10{ FpBitsToFloat_6U_10U_1_and_1_cse }} & _040__T | { 10{ !FpBitsToFloat_6U_10U_1_and_1_cse }} & FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_T )))) && _040_ != FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2 ;
  logic [9:0] _040__C0 ;
  logic [9:0] _040__R0 ;
  logic [9:0] _040__X0 ;
  assign _040__C0 = { 10{ FpBitsToFloat_6U_10U_1_and_1_cse }} ;
  assign _040__R0 = { 10{ FpBitsToFloat_6U_10U_1_and_1_cse }} & ( _007__R | ( { 10{ FpBitsToFloat_6U_10U_1_and_1_cse_T  }} & _007__C ));
  assign _040__X0 = { 10{ FpBitsToFloat_6U_10U_1_and_1_cse }} & _007__X ;
  logic [9:0] FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_C0 ;
  logic [9:0] FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_R0 ;
  logic [9:0] FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_X0 ;
  assign FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_C0 = { 10{ !FpBitsToFloat_6U_10U_1_and_1_cse }} ;
  assign FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_R0 = { 10{ !FpBitsToFloat_6U_10U_1_and_1_cse }} & ( _007__R | ( { 10{ FpBitsToFloat_6U_10U_1_and_1_cse_T  }} & _007__C ));
  assign FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_X0 = { 10{ !FpBitsToFloat_6U_10U_1_and_1_cse }} & _007__X ;
  assign _006_ = FpBitsToFloat_6U_10U_1_and_1_cse ? _043_ : FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2;
  logic [0:0] FpBitsToFloat_6U_10U_1_and_1_cse_C1 ;
  logic [0:0] FpBitsToFloat_6U_10U_1_and_1_cse_R1 ;
  logic [0:0] FpBitsToFloat_6U_10U_1_and_1_cse_X1 ;
  assign FpBitsToFloat_6U_10U_1_and_1_cse_C1 = | _006__C ;
  assign FpBitsToFloat_6U_10U_1_and_1_cse_X1 = | _006__X ;
  assign _006__T = FpBitsToFloat_6U_10U_1_and_1_cse ? ( { 6{ FpBitsToFloat_6U_10U_1_and_1_cse_T  }} | _043__T ) : ( { 6{ FpBitsToFloat_6U_10U_1_and_1_cse_T  }} | FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_T );
  assign _006__S = FpBitsToFloat_6U_10U_1_and_1_cse ? _043__S : FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_S ;
  assign FpBitsToFloat_6U_10U_1_and_1_cse_R1 = ( | (_006__R | ( _006__C & ( { 6{ FpBitsToFloat_6U_10U_1_and_1_cse }} & _043__T | { 6{ !FpBitsToFloat_6U_10U_1_and_1_cse }} & FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_T )))) && _043_ != FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2 ;
  logic [5:0] _043__C0 ;
  logic [5:0] _043__R0 ;
  logic [5:0] _043__X0 ;
  assign _043__C0 = { 6{ FpBitsToFloat_6U_10U_1_and_1_cse }} ;
  assign _043__R0 = { 6{ FpBitsToFloat_6U_10U_1_and_1_cse }} & ( _006__R | ( { 6{ FpBitsToFloat_6U_10U_1_and_1_cse_T  }} & _006__C ));
  assign _043__X0 = { 6{ FpBitsToFloat_6U_10U_1_and_1_cse }} & _006__X ;
  logic [5:0] FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_C0 ;
  logic [5:0] FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_R0 ;
  logic [5:0] FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_X0 ;
  assign FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_C0 = { 6{ !FpBitsToFloat_6U_10U_1_and_1_cse }} ;
  assign FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_R0 = { 6{ !FpBitsToFloat_6U_10U_1_and_1_cse }} & ( _006__R | ( { 6{ FpBitsToFloat_6U_10U_1_and_1_cse_T  }} & _006__C ));
  assign FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_X0 = { 6{ !FpBitsToFloat_6U_10U_1_and_1_cse }} & _006__X ;
  assign _013_ = _062_ ? FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3 : FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4;
  logic [0:0] _062__C0 ;
  logic [0:0] _062__R0 ;
  logic [0:0] _062__X0 ;
  assign _062__C0 = | _013__C ;
  assign _062__X0 = | _013__X ;
  assign _013__T = _062_ ? ( { 1{ _062__T  }} | FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_T ) : ( { 1{ _062__T  }} | FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_T );
  assign _013__S = _062_ ? FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_S : FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_S ;
  assign _062__R0 = ( | (_013__R | ( _013__C & ( { 1{ _062_ }} & FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_T | { 1{ !_062_ }} & FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_T )))) && FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3 != FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4 ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_C4 ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_R4 ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_X4 ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_C4 = { 1{ _062_ }} ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_R4 = { 1{ _062_ }} & ( _013__R | ( { 1{ _062__T  }} & _013__C ));
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_X4 = { 1{ _062_ }} & _013__X ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_C1 ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_R1 ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_X1 ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_C1 = { 1{ !_062_ }} ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_R1 = { 1{ !_062_ }} & ( _013__R | ( { 1{ _062__T  }} & _013__C ));
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_X1 = { 1{ !_062_ }} & _013__X ;
  assign _008_ = _061_ ? FpMul_6U_10U_p_mant_p1_mul_tmp[21] : FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2;
  logic [0:0] _061__C0 ;
  logic [0:0] _061__R0 ;
  logic [0:0] _061__X0 ;
  assign _061__C0 = | _008__C ;
  assign _061__X0 = | _008__X ;
  assign _008__T = _061_ ? ( { 1{ _061__T  }} | FpMul_6U_10U_p_mant_p1_mul_tmp_T [21] ) : ( { 1{ _061__T  }} | FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_T );
  assign _008__S = _061_ ? FpMul_6U_10U_p_mant_p1_mul_tmp_S : FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_S ;
  assign _061__R0 = ( | (_008__R | ( _008__C & ( { 1{ _061_ }} & FpMul_6U_10U_p_mant_p1_mul_tmp_T [21] | { 1{ !_061_ }} & FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_T )))) && FpMul_6U_10U_p_mant_p1_mul_tmp[21] != FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2 ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_mul_tmp_C2 ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_mul_tmp_R2 ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_mul_tmp_X2 ;
  assign FpMul_6U_10U_p_mant_p1_mul_tmp_C2 [21] = { 1{ _061_ }} ;
  assign FpMul_6U_10U_p_mant_p1_mul_tmp_R2 [21] = { 1{ _061_ }} & ( _008__R | ( { 1{ _061__T  }} & _008__C ));
  assign FpMul_6U_10U_p_mant_p1_mul_tmp_X2 [21] = { 1{ _061_ }} & _008__X ;
  logic [0:0] FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_C3 ;
  logic [0:0] FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_R3 ;
  logic [0:0] FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_X3 ;
  assign FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_C3 = { 1{ !_061_ }} ;
  assign FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_R3 = { 1{ !_061_ }} & ( _008__R | ( { 1{ _061__T  }} & _008__C ));
  assign FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_X3 = { 1{ !_061_ }} & _008__X ;
  assign _041_ = and_40_rgt ? FpMul_6U_10U_p_mant_p1_sva : FpMul_6U_10U_p_mant_p1_mul_tmp;
  logic [0:0] and_40_rgt_C1 ;
  logic [0:0] and_40_rgt_R1 ;
  logic [0:0] and_40_rgt_X1 ;
  assign and_40_rgt_C1 = | _041__C ;
  assign and_40_rgt_X1 = | _041__X ;
  assign _041__T = and_40_rgt ? ( { 22{ and_40_rgt_T  }} | FpMul_6U_10U_p_mant_p1_sva_T ) : ( { 22{ and_40_rgt_T  }} | FpMul_6U_10U_p_mant_p1_mul_tmp_T );
  assign _041__S = and_40_rgt ? FpMul_6U_10U_p_mant_p1_sva_S : FpMul_6U_10U_p_mant_p1_mul_tmp_S ;
  assign and_40_rgt_R1 = ( | (_041__R | ( _041__C & ( { 22{ and_40_rgt }} & FpMul_6U_10U_p_mant_p1_sva_T | { 22{ !and_40_rgt }} & FpMul_6U_10U_p_mant_p1_mul_tmp_T )))) && FpMul_6U_10U_p_mant_p1_sva != FpMul_6U_10U_p_mant_p1_mul_tmp ;
  assign { FpMul_6U_10U_p_mant_p1_mul_tmp_R2 [0], FpMul_6U_10U_p_mant_p1_mul_tmp_R2 [1], FpMul_6U_10U_p_mant_p1_mul_tmp_R2 [2], FpMul_6U_10U_p_mant_p1_mul_tmp_R2 [3], FpMul_6U_10U_p_mant_p1_mul_tmp_R2 [4], FpMul_6U_10U_p_mant_p1_mul_tmp_R2 [5], FpMul_6U_10U_p_mant_p1_mul_tmp_R2 [6], FpMul_6U_10U_p_mant_p1_mul_tmp_R2 [7], FpMul_6U_10U_p_mant_p1_mul_tmp_R2 [8], FpMul_6U_10U_p_mant_p1_mul_tmp_R2 [9], FpMul_6U_10U_p_mant_p1_mul_tmp_R2 [10], FpMul_6U_10U_p_mant_p1_mul_tmp_R2 [11], FpMul_6U_10U_p_mant_p1_mul_tmp_R2 [12], FpMul_6U_10U_p_mant_p1_mul_tmp_R2 [13], FpMul_6U_10U_p_mant_p1_mul_tmp_R2 [14], FpMul_6U_10U_p_mant_p1_mul_tmp_R2 [15], FpMul_6U_10U_p_mant_p1_mul_tmp_R2 [16], FpMul_6U_10U_p_mant_p1_mul_tmp_R2 [17], FpMul_6U_10U_p_mant_p1_mul_tmp_R2 [18], FpMul_6U_10U_p_mant_p1_mul_tmp_R2 [19], FpMul_6U_10U_p_mant_p1_mul_tmp_R2 [20] } = 0;
  assign { FpMul_6U_10U_p_mant_p1_mul_tmp_X2 [0], FpMul_6U_10U_p_mant_p1_mul_tmp_X2 [1], FpMul_6U_10U_p_mant_p1_mul_tmp_X2 [2], FpMul_6U_10U_p_mant_p1_mul_tmp_X2 [3], FpMul_6U_10U_p_mant_p1_mul_tmp_X2 [4], FpMul_6U_10U_p_mant_p1_mul_tmp_X2 [5], FpMul_6U_10U_p_mant_p1_mul_tmp_X2 [6], FpMul_6U_10U_p_mant_p1_mul_tmp_X2 [7], FpMul_6U_10U_p_mant_p1_mul_tmp_X2 [8], FpMul_6U_10U_p_mant_p1_mul_tmp_X2 [9], FpMul_6U_10U_p_mant_p1_mul_tmp_X2 [10], FpMul_6U_10U_p_mant_p1_mul_tmp_X2 [11], FpMul_6U_10U_p_mant_p1_mul_tmp_X2 [12], FpMul_6U_10U_p_mant_p1_mul_tmp_X2 [13], FpMul_6U_10U_p_mant_p1_mul_tmp_X2 [14], FpMul_6U_10U_p_mant_p1_mul_tmp_X2 [15], FpMul_6U_10U_p_mant_p1_mul_tmp_X2 [16], FpMul_6U_10U_p_mant_p1_mul_tmp_X2 [17], FpMul_6U_10U_p_mant_p1_mul_tmp_X2 [18], FpMul_6U_10U_p_mant_p1_mul_tmp_X2 [19], FpMul_6U_10U_p_mant_p1_mul_tmp_X2 [20] } = 0;
  assign { FpMul_6U_10U_p_mant_p1_mul_tmp_C2 [0], FpMul_6U_10U_p_mant_p1_mul_tmp_C2 [1], FpMul_6U_10U_p_mant_p1_mul_tmp_C2 [2], FpMul_6U_10U_p_mant_p1_mul_tmp_C2 [3], FpMul_6U_10U_p_mant_p1_mul_tmp_C2 [4], FpMul_6U_10U_p_mant_p1_mul_tmp_C2 [5], FpMul_6U_10U_p_mant_p1_mul_tmp_C2 [6], FpMul_6U_10U_p_mant_p1_mul_tmp_C2 [7], FpMul_6U_10U_p_mant_p1_mul_tmp_C2 [8], FpMul_6U_10U_p_mant_p1_mul_tmp_C2 [9], FpMul_6U_10U_p_mant_p1_mul_tmp_C2 [10], FpMul_6U_10U_p_mant_p1_mul_tmp_C2 [11], FpMul_6U_10U_p_mant_p1_mul_tmp_C2 [12], FpMul_6U_10U_p_mant_p1_mul_tmp_C2 [13], FpMul_6U_10U_p_mant_p1_mul_tmp_C2 [14], FpMul_6U_10U_p_mant_p1_mul_tmp_C2 [15], FpMul_6U_10U_p_mant_p1_mul_tmp_C2 [16], FpMul_6U_10U_p_mant_p1_mul_tmp_C2 [17], FpMul_6U_10U_p_mant_p1_mul_tmp_C2 [18], FpMul_6U_10U_p_mant_p1_mul_tmp_C2 [19], FpMul_6U_10U_p_mant_p1_mul_tmp_C2 [20] } = 0;
  logic [21:0] FpMul_6U_10U_p_mant_p1_sva_C1 ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_sva_R1 ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_sva_X1 ;
  assign FpMul_6U_10U_p_mant_p1_sva_C1 = { 22{ and_40_rgt }} ;
  assign FpMul_6U_10U_p_mant_p1_sva_R1 = { 22{ and_40_rgt }} & ( _041__R | ( { 22{ and_40_rgt_T  }} & _041__C ));
  assign FpMul_6U_10U_p_mant_p1_sva_X1 = { 22{ and_40_rgt }} & _041__X ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_mul_tmp_C3 ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_mul_tmp_R3 ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_mul_tmp_X3 ;
  assign FpMul_6U_10U_p_mant_p1_mul_tmp_C3 = { 22{ !and_40_rgt }} ;
  assign FpMul_6U_10U_p_mant_p1_mul_tmp_R3 = { 22{ !and_40_rgt }} & ( _041__R | ( { 22{ and_40_rgt_T  }} & _041__C ));
  assign FpMul_6U_10U_p_mant_p1_mul_tmp_X3 = { 22{ !and_40_rgt }} & _041__X ;
  assign _022_ = _060_ ? _041_ : FpMul_6U_10U_p_mant_p1_sva_2;
  logic [0:0] _060__C0 ;
  logic [0:0] _060__R0 ;
  logic [0:0] _060__X0 ;
  assign _060__C0 = | _022__C ;
  assign _060__X0 = | _022__X ;
  assign _022__T = _060_ ? ( { 22{ _060__T  }} | _041__T ) : ( { 22{ _060__T  }} | FpMul_6U_10U_p_mant_p1_sva_2_T );
  assign _022__S = _060_ ? _041__S : FpMul_6U_10U_p_mant_p1_sva_2_S ;
  assign _060__R0 = ( | (_022__R | ( _022__C & ( { 22{ _060_ }} & _041__T | { 22{ !_060_ }} & FpMul_6U_10U_p_mant_p1_sva_2_T )))) && _041_ != FpMul_6U_10U_p_mant_p1_sva_2 ;
  assign { FpMul_6U_10U_p_mant_p1_sva_2_R5 [21:20] } = 0;
  assign { FpMul_6U_10U_p_mant_p1_sva_2_X5 [21:20] } = 0;
  assign { FpMul_6U_10U_p_mant_p1_sva_2_C5 [21:20] } = 0;
  logic [21:0] _041__C0 ;
  logic [21:0] _041__R0 ;
  logic [21:0] _041__X0 ;
  assign _041__C0 = { 22{ _060_ }} ;
  assign _041__R0 = { 22{ _060_ }} & ( _022__R | ( { 22{ _060__T  }} & _022__C ));
  assign _041__X0 = { 22{ _060_ }} & _022__X ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_sva_2_C6 ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_sva_2_R6 ;
  logic [21:0] FpMul_6U_10U_p_mant_p1_sva_2_X6 ;
  assign FpMul_6U_10U_p_mant_p1_sva_2_C6 = { 22{ !_060_ }} ;
  assign FpMul_6U_10U_p_mant_p1_sva_2_R6 = { 22{ !_060_ }} & ( _022__R | ( { 22{ _060__T  }} & _022__C ));
  assign FpMul_6U_10U_p_mant_p1_sva_2_X6 = { 22{ !_060_ }} & _022__X ;
  assign _020_ = _056_ ? nl_FpMul_6U_10U_p_expo_sva_5 : FpMul_6U_10U_p_expo_sva_5;
  logic [0:0] _056__C0 ;
  logic [0:0] _056__R0 ;
  logic [0:0] _056__X0 ;
  assign _056__C0 = | _020__C ;
  assign _056__X0 = | _020__X ;
  assign _020__T = _056_ ? ( { 6{ _056__T  }} | nl_FpMul_6U_10U_p_expo_sva_5_T ) : ( { 6{ _056__T  }} | FpMul_6U_10U_p_expo_sva_5_T );
  assign _020__S = _056_ ? nl_FpMul_6U_10U_p_expo_sva_5_S : FpMul_6U_10U_p_expo_sva_5_S ;
  assign _056__R0 = ( | (_020__R | ( _020__C & ( { 6{ _056_ }} & nl_FpMul_6U_10U_p_expo_sva_5_T | { 6{ !_056_ }} & FpMul_6U_10U_p_expo_sva_5_T )))) && nl_FpMul_6U_10U_p_expo_sva_5 != FpMul_6U_10U_p_expo_sva_5 ;
  logic [5:0] nl_FpMul_6U_10U_p_expo_sva_5_C0 ;
  logic [5:0] nl_FpMul_6U_10U_p_expo_sva_5_R0 ;
  logic [5:0] nl_FpMul_6U_10U_p_expo_sva_5_X0 ;
  assign nl_FpMul_6U_10U_p_expo_sva_5_C0 = { 6{ _056_ }} ;
  assign nl_FpMul_6U_10U_p_expo_sva_5_R0 = { 6{ _056_ }} & ( _020__R | ( { 6{ _056__T  }} & _020__C ));
  assign nl_FpMul_6U_10U_p_expo_sva_5_X0 = { 6{ _056_ }} & _020__X ;
  logic [5:0] FpMul_6U_10U_p_expo_sva_5_C3 ;
  logic [5:0] FpMul_6U_10U_p_expo_sva_5_R3 ;
  logic [5:0] FpMul_6U_10U_p_expo_sva_5_X3 ;
  assign FpMul_6U_10U_p_expo_sva_5_C3 = { 6{ !_056_ }} ;
  assign FpMul_6U_10U_p_expo_sva_5_R3 = { 6{ !_056_ }} & ( _020__R | ( { 6{ _056__T  }} & _020__C ));
  assign FpMul_6U_10U_p_expo_sva_5_X3 = { 6{ !_056_ }} & _020__X ;
  assign _034_ = _055_ ? _115_ : main_stage_v_2;
  logic [0:0] _055__C0 ;
  logic [0:0] _055__R0 ;
  logic [0:0] _055__X0 ;
  assign _055__C0 = | _034__C ;
  assign _055__X0 = | _034__X ;
  assign _034__T = _055_ ? ( { 1{ _055__T  }} | _115__T ) : ( { 1{ _055__T  }} | main_stage_v_2_T );
  assign _034__S = _055_ ? _115__S : main_stage_v_2_S ;
  assign _055__R0 = ( | (_034__R | ( _034__C & ( { 1{ _055_ }} & _115__T | { 1{ !_055_ }} & main_stage_v_2_T )))) && _115_ != main_stage_v_2 ;
  logic [0:0] _115__C0 ;
  logic [0:0] _115__R0 ;
  logic [0:0] _115__X0 ;
  assign _115__C0 = { 1{ _055_ }} ;
  assign _115__R0 = { 1{ _055_ }} & ( _034__R | ( { 1{ _055__T  }} & _034__C ));
  assign _115__X0 = { 1{ _055_ }} & _034__X ;
  logic [0:0] main_stage_v_2_C5 ;
  logic [0:0] main_stage_v_2_R5 ;
  logic [0:0] main_stage_v_2_X5 ;
  assign main_stage_v_2_C5 = { 1{ !_055_ }} ;
  assign main_stage_v_2_R5 = { 1{ !_055_ }} & ( _034__R | ( { 1{ _055__T  }} & _034__C ));
  assign main_stage_v_2_X5 = { 1{ !_055_ }} & _034__X ;
  assign _028_ = IsNaN_6U_10U_aelse_and_cse ? _113_ : IsNaN_6U_10U_land_lpi_1_dfm_st_3;
  logic [0:0] IsNaN_6U_10U_aelse_and_cse_C0 ;
  logic [0:0] IsNaN_6U_10U_aelse_and_cse_R0 ;
  logic [0:0] IsNaN_6U_10U_aelse_and_cse_X0 ;
  assign IsNaN_6U_10U_aelse_and_cse_C0 = | _028__C ;
  assign IsNaN_6U_10U_aelse_and_cse_X0 = | _028__X ;
  assign _028__T = IsNaN_6U_10U_aelse_and_cse ? ( { 1{ IsNaN_6U_10U_aelse_and_cse_T  }} | _113__T ) : ( { 1{ IsNaN_6U_10U_aelse_and_cse_T  }} | IsNaN_6U_10U_land_lpi_1_dfm_st_3_T );
  assign _028__S = IsNaN_6U_10U_aelse_and_cse ? _113__S : IsNaN_6U_10U_land_lpi_1_dfm_st_3_S ;
  assign IsNaN_6U_10U_aelse_and_cse_R0 = ( | (_028__R | ( _028__C & ( { 1{ IsNaN_6U_10U_aelse_and_cse }} & _113__T | { 1{ !IsNaN_6U_10U_aelse_and_cse }} & IsNaN_6U_10U_land_lpi_1_dfm_st_3_T )))) && _113_ != IsNaN_6U_10U_land_lpi_1_dfm_st_3 ;
  logic [0:0] _113__C0 ;
  logic [0:0] _113__R0 ;
  logic [0:0] _113__X0 ;
  assign _113__C0 = { 1{ IsNaN_6U_10U_aelse_and_cse }} ;
  assign _113__R0 = { 1{ IsNaN_6U_10U_aelse_and_cse }} & ( _028__R | ( { 1{ IsNaN_6U_10U_aelse_and_cse_T  }} & _028__C ));
  assign _113__X0 = { 1{ IsNaN_6U_10U_aelse_and_cse }} & _028__X ;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_st_3_C8 ;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_st_3_R8 ;
  logic [0:0] IsNaN_6U_10U_land_lpi_1_dfm_st_3_X8 ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_st_3_C8 = { 1{ !IsNaN_6U_10U_aelse_and_cse }} ;
  assign IsNaN_6U_10U_land_lpi_1_dfm_st_3_R8 = { 1{ !IsNaN_6U_10U_aelse_and_cse }} & ( _028__R | ( { 1{ IsNaN_6U_10U_aelse_and_cse_T  }} & _028__C ));
  assign IsNaN_6U_10U_land_lpi_1_dfm_st_3_X8 = { 1{ !IsNaN_6U_10U_aelse_and_cse }} & _028__X ;
  assign _016_ = IsNaN_6U_10U_aelse_and_cse ? or_68_cse : FpMul_6U_10U_lor_1_lpi_1_dfm_st_3;
  logic [0:0] IsNaN_6U_10U_aelse_and_cse_C1 ;
  logic [0:0] IsNaN_6U_10U_aelse_and_cse_R1 ;
  logic [0:0] IsNaN_6U_10U_aelse_and_cse_X1 ;
  assign IsNaN_6U_10U_aelse_and_cse_C1 = | _016__C ;
  assign IsNaN_6U_10U_aelse_and_cse_X1 = | _016__X ;
  assign _016__T = IsNaN_6U_10U_aelse_and_cse ? ( { 1{ IsNaN_6U_10U_aelse_and_cse_T  }} | or_68_cse_T ) : ( { 1{ IsNaN_6U_10U_aelse_and_cse_T  }} | FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_T );
  assign _016__S = IsNaN_6U_10U_aelse_and_cse ? or_68_cse_S : FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_S ;
  assign IsNaN_6U_10U_aelse_and_cse_R1 = ( | (_016__R | ( _016__C & ( { 1{ IsNaN_6U_10U_aelse_and_cse }} & or_68_cse_T | { 1{ !IsNaN_6U_10U_aelse_and_cse }} & FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_T )))) && or_68_cse != FpMul_6U_10U_lor_1_lpi_1_dfm_st_3 ;
  logic [0:0] or_68_cse_C6 ;
  logic [0:0] or_68_cse_R6 ;
  logic [0:0] or_68_cse_X6 ;
  assign or_68_cse_C6 = { 1{ IsNaN_6U_10U_aelse_and_cse }} ;
  assign or_68_cse_R6 = { 1{ IsNaN_6U_10U_aelse_and_cse }} & ( _016__R | ( { 1{ IsNaN_6U_10U_aelse_and_cse_T  }} & _016__C ));
  assign or_68_cse_X6 = { 1{ IsNaN_6U_10U_aelse_and_cse }} & _016__X ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_C7 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_R7 ;
  logic [0:0] FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_X7 ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_C7 = { 1{ !IsNaN_6U_10U_aelse_and_cse }} ;
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_R7 = { 1{ !IsNaN_6U_10U_aelse_and_cse }} & ( _016__R | ( { 1{ IsNaN_6U_10U_aelse_and_cse_T  }} & _016__C ));
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_X7 = { 1{ !IsNaN_6U_10U_aelse_and_cse }} & _016__X ;
  assign _025_ = IsNaN_6U_10U_aelse_and_cse ? _114_ : IsNaN_6U_10U_1_land_lpi_1_dfm_3;
  logic [0:0] IsNaN_6U_10U_aelse_and_cse_C2 ;
  logic [0:0] IsNaN_6U_10U_aelse_and_cse_R2 ;
  logic [0:0] IsNaN_6U_10U_aelse_and_cse_X2 ;
  assign IsNaN_6U_10U_aelse_and_cse_C2 = | _025__C ;
  assign IsNaN_6U_10U_aelse_and_cse_X2 = | _025__X ;
  assign _025__T = IsNaN_6U_10U_aelse_and_cse ? ( { 1{ IsNaN_6U_10U_aelse_and_cse_T  }} | _114__T ) : ( { 1{ IsNaN_6U_10U_aelse_and_cse_T  }} | IsNaN_6U_10U_1_land_lpi_1_dfm_3_T );
  assign _025__S = IsNaN_6U_10U_aelse_and_cse ? _114__S : IsNaN_6U_10U_1_land_lpi_1_dfm_3_S ;
  assign IsNaN_6U_10U_aelse_and_cse_R2 = ( | (_025__R | ( _025__C & ( { 1{ IsNaN_6U_10U_aelse_and_cse }} & _114__T | { 1{ !IsNaN_6U_10U_aelse_and_cse }} & IsNaN_6U_10U_1_land_lpi_1_dfm_3_T )))) && _114_ != IsNaN_6U_10U_1_land_lpi_1_dfm_3 ;
  logic [0:0] _114__C0 ;
  logic [0:0] _114__R0 ;
  logic [0:0] _114__X0 ;
  assign _114__C0 = { 1{ IsNaN_6U_10U_aelse_and_cse }} ;
  assign _114__R0 = { 1{ IsNaN_6U_10U_aelse_and_cse }} & ( _025__R | ( { 1{ IsNaN_6U_10U_aelse_and_cse_T  }} & _025__C ));
  assign _114__X0 = { 1{ IsNaN_6U_10U_aelse_and_cse }} & _025__X ;
  logic [0:0] IsNaN_6U_10U_1_land_lpi_1_dfm_3_C5 ;
  logic [0:0] IsNaN_6U_10U_1_land_lpi_1_dfm_3_R5 ;
  logic [0:0] IsNaN_6U_10U_1_land_lpi_1_dfm_3_X5 ;
  assign IsNaN_6U_10U_1_land_lpi_1_dfm_3_C5 = { 1{ !IsNaN_6U_10U_aelse_and_cse }} ;
  assign IsNaN_6U_10U_1_land_lpi_1_dfm_3_R5 = { 1{ !IsNaN_6U_10U_aelse_and_cse }} & ( _025__R | ( { 1{ IsNaN_6U_10U_aelse_and_cse_T  }} & _025__C ));
  assign IsNaN_6U_10U_1_land_lpi_1_dfm_3_X5 = { 1{ !IsNaN_6U_10U_aelse_and_cse }} & _025__X ;
  assign _012_ = _053_ ? FpMul_6U_10U_else_2_if_acc_nl[6] : FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3;
  logic [0:0] _053__C0 ;
  logic [0:0] _053__R0 ;
  logic [0:0] _053__X0 ;
  assign _053__C0 = | _012__C ;
  assign _053__X0 = | _012__X ;
  assign _012__T = _053_ ? ( { 1{ _053__T  }} | FpMul_6U_10U_else_2_if_acc_nl_T [6] ) : ( { 1{ _053__T  }} | FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_T );
  assign _012__S = _053_ ? FpMul_6U_10U_else_2_if_acc_nl_S : FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_S ;
  assign _053__R0 = ( | (_012__R | ( _012__C & ( { 1{ _053_ }} & FpMul_6U_10U_else_2_if_acc_nl_T [6] | { 1{ !_053_ }} & FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_T )))) && FpMul_6U_10U_else_2_if_acc_nl[6] != FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3 ;
  assign { FpMul_6U_10U_else_2_if_acc_nl_R4 [0], FpMul_6U_10U_else_2_if_acc_nl_R4 [1], FpMul_6U_10U_else_2_if_acc_nl_R4 [2], FpMul_6U_10U_else_2_if_acc_nl_R4 [3], FpMul_6U_10U_else_2_if_acc_nl_R4 [4], FpMul_6U_10U_else_2_if_acc_nl_R4 [5] } = 0;
  assign { FpMul_6U_10U_else_2_if_acc_nl_X4 [0], FpMul_6U_10U_else_2_if_acc_nl_X4 [1], FpMul_6U_10U_else_2_if_acc_nl_X4 [2], FpMul_6U_10U_else_2_if_acc_nl_X4 [3], FpMul_6U_10U_else_2_if_acc_nl_X4 [4], FpMul_6U_10U_else_2_if_acc_nl_X4 [5] } = 0;
  assign { FpMul_6U_10U_else_2_if_acc_nl_C4 [0], FpMul_6U_10U_else_2_if_acc_nl_C4 [1], FpMul_6U_10U_else_2_if_acc_nl_C4 [2], FpMul_6U_10U_else_2_if_acc_nl_C4 [3], FpMul_6U_10U_else_2_if_acc_nl_C4 [4], FpMul_6U_10U_else_2_if_acc_nl_C4 [5] } = 0;
  logic [6:0] FpMul_6U_10U_else_2_if_acc_nl_C5 ;
  logic [6:0] FpMul_6U_10U_else_2_if_acc_nl_R5 ;
  logic [6:0] FpMul_6U_10U_else_2_if_acc_nl_X5 ;
  assign FpMul_6U_10U_else_2_if_acc_nl_C5 [6] = { 1{ _053_ }} ;
  assign FpMul_6U_10U_else_2_if_acc_nl_R5 [6] = { 1{ _053_ }} & ( _012__R | ( { 1{ _053__T  }} & _012__C ));
  assign FpMul_6U_10U_else_2_if_acc_nl_X5 [6] = { 1{ _053_ }} & _012__X ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_C5 ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_R5 ;
  logic [0:0] FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_X5 ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_C5 = { 1{ !_053_ }} ;
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_R5 = { 1{ !_053_ }} & ( _012__R | ( { 1{ _053__T  }} & _012__C ));
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_X5 = { 1{ !_053_ }} & _012__X ;
  assign _033_ = _051_ ? _110_ : main_stage_v_1;
  logic [0:0] _051__C0 ;
  logic [0:0] _051__R0 ;
  logic [0:0] _051__X0 ;
  assign _051__C0 = | _033__C ;
  assign _051__X0 = | _033__X ;
  assign _033__T = _051_ ? ( { 1{ _051__T  }} | _110__T ) : ( { 1{ _051__T  }} | main_stage_v_1_T );
  assign _033__S = _051_ ? _110__S : main_stage_v_1_S ;
  assign _051__R0 = ( | (_033__R | ( _033__C & ( { 1{ _051_ }} & _110__T | { 1{ !_051_ }} & main_stage_v_1_T )))) && _110_ != main_stage_v_1 ;
  logic [0:0] _110__C0 ;
  logic [0:0] _110__R0 ;
  logic [0:0] _110__X0 ;
  assign _110__C0 = { 1{ _051_ }} ;
  assign _110__R0 = { 1{ _051_ }} & ( _033__R | ( { 1{ _051__T  }} & _033__C ));
  assign _110__X0 = { 1{ _051_ }} & _033__X ;
  logic [0:0] main_stage_v_1_C9 ;
  logic [0:0] main_stage_v_1_R9 ;
  logic [0:0] main_stage_v_1_X9 ;
  assign main_stage_v_1_C9 = { 1{ !_051_ }} ;
  assign main_stage_v_1_R9 = { 1{ !_051_ }} & ( _033__R | ( { 1{ _051__T  }} & _033__C ));
  assign main_stage_v_1_X9 = { 1{ !_051_ }} & _033__X ;
  assign _037_ = _050_ ? _109_ : reg_chn_o_rsci_ld_core_psct_cse;
  logic [0:0] _050__C0 ;
  logic [0:0] _050__R0 ;
  logic [0:0] _050__X0 ;
  assign _050__C0 = | _037__C ;
  assign _050__X0 = | _037__X ;
  assign _037__T = _050_ ? ( { 1{ _050__T  }} | _109__T ) : ( { 1{ _050__T  }} | reg_chn_o_rsci_ld_core_psct_cse_T );
  assign _037__S = _050_ ? _109__S : reg_chn_o_rsci_ld_core_psct_cse_S ;
  assign _050__R0 = ( | (_037__R | ( _037__C & ( { 1{ _050_ }} & _109__T | { 1{ !_050_ }} & reg_chn_o_rsci_ld_core_psct_cse_T )))) && _109_ != reg_chn_o_rsci_ld_core_psct_cse ;
  logic [0:0] _109__C0 ;
  logic [0:0] _109__R0 ;
  logic [0:0] _109__X0 ;
  assign _109__C0 = { 1{ _050_ }} ;
  assign _109__R0 = { 1{ _050_ }} & ( _037__R | ( { 1{ _050__T  }} & _037__C ));
  assign _109__X0 = { 1{ _050_ }} & _037__X ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C8 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R8 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X8 ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C8 = { 1{ !_050_ }} ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R8 = { 1{ !_050_ }} & ( _037__R | ( { 1{ _050__T  }} & _037__C ));
  assign reg_chn_o_rsci_ld_core_psct_cse_X8 = { 1{ !_050_ }} & _037__X ;
  assign _042_ = FpBitsToFloat_6U_10U_1_and_nl ? FpMul_6U_10U_FpMul_6U_10U_and_2_nl : FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2;
  logic [0:0] FpBitsToFloat_6U_10U_1_and_nl_C0 ;
  logic [0:0] FpBitsToFloat_6U_10U_1_and_nl_R0 ;
  logic [0:0] FpBitsToFloat_6U_10U_1_and_nl_X0 ;
  assign FpBitsToFloat_6U_10U_1_and_nl_C0 = | _042__C ;
  assign FpBitsToFloat_6U_10U_1_and_nl_X0 = | _042__X ;
  assign _042__T = FpBitsToFloat_6U_10U_1_and_nl ? ( { 6{ FpBitsToFloat_6U_10U_1_and_nl_T  }} | FpMul_6U_10U_FpMul_6U_10U_and_2_nl_T ) : ( { 6{ FpBitsToFloat_6U_10U_1_and_nl_T  }} | FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_T );
  assign _042__S = FpBitsToFloat_6U_10U_1_and_nl ? FpMul_6U_10U_FpMul_6U_10U_and_2_nl_S : FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_S ;
  assign FpBitsToFloat_6U_10U_1_and_nl_R0 = ( | (_042__R | ( _042__C & ( { 6{ FpBitsToFloat_6U_10U_1_and_nl }} & FpMul_6U_10U_FpMul_6U_10U_and_2_nl_T | { 6{ !FpBitsToFloat_6U_10U_1_and_nl }} & FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_T )))) && FpMul_6U_10U_FpMul_6U_10U_and_2_nl != FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2 ;
  logic [5:0] FpMul_6U_10U_FpMul_6U_10U_and_2_nl_C0 ;
  logic [5:0] FpMul_6U_10U_FpMul_6U_10U_and_2_nl_R0 ;
  logic [5:0] FpMul_6U_10U_FpMul_6U_10U_and_2_nl_X0 ;
  assign FpMul_6U_10U_FpMul_6U_10U_and_2_nl_C0 = { 6{ FpBitsToFloat_6U_10U_1_and_nl }} ;
  assign FpMul_6U_10U_FpMul_6U_10U_and_2_nl_R0 = { 6{ FpBitsToFloat_6U_10U_1_and_nl }} & ( _042__R | ( { 6{ FpBitsToFloat_6U_10U_1_and_nl_T  }} & _042__C ));
  assign FpMul_6U_10U_FpMul_6U_10U_and_2_nl_X0 = { 6{ FpBitsToFloat_6U_10U_1_and_nl }} & _042__X ;
  logic [5:0] FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_C1 ;
  logic [5:0] FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_R1 ;
  logic [5:0] FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_X1 ;
  assign FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_C1 = { 6{ !FpBitsToFloat_6U_10U_1_and_nl }} ;
  assign FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_R1 = { 6{ !FpBitsToFloat_6U_10U_1_and_nl }} & ( _042__R | ( { 6{ FpBitsToFloat_6U_10U_1_and_nl_T  }} & _042__C ));
  assign FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_X1 = { 6{ !FpBitsToFloat_6U_10U_1_and_nl }} & _042__X ;
  assign _029_ = _049_ ? _042_ : chn_o_rsci_d_15_10;
  logic [0:0] _049__C0 ;
  logic [0:0] _049__R0 ;
  logic [0:0] _049__X0 ;
  assign _049__C0 = | _029__C ;
  assign _049__X0 = | _029__X ;
  assign _029__T = _049_ ? ( { 6{ _049__T  }} | _042__T ) : ( { 6{ _049__T  }} | chn_o_rsci_d_15_10_T );
  assign _029__S = _049_ ? _042__S : chn_o_rsci_d_15_10_S ;
  assign _049__R0 = ( | (_029__R | ( _029__C & ( { 6{ _049_ }} & _042__T | { 6{ !_049_ }} & chn_o_rsci_d_15_10_T )))) && _042_ != chn_o_rsci_d_15_10 ;
  logic [5:0] _042__C0 ;
  logic [5:0] _042__R0 ;
  logic [5:0] _042__X0 ;
  assign _042__C0 = { 6{ _049_ }} ;
  assign _042__R0 = { 6{ _049_ }} & ( _029__R | ( { 6{ _049__T  }} & _029__C ));
  assign _042__X0 = { 6{ _049_ }} & _029__X ;
  logic [5:0] chn_o_rsci_d_15_10_C0 ;
  logic [5:0] chn_o_rsci_d_15_10_R0 ;
  logic [5:0] chn_o_rsci_d_15_10_X0 ;
  assign chn_o_rsci_d_15_10_C0 = { 6{ !_049_ }} ;
  assign chn_o_rsci_d_15_10_R0 = { 6{ !_049_ }} & ( _029__R | ( { 6{ _049__T  }} & _029__C ));
  assign chn_o_rsci_d_15_10_X0 = { 6{ !_049_ }} & _029__X ;
  assign _039_ = FpMul_6U_10U_or_2_cse ? FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2 : FpMul_6U_10U_FpMul_6U_10U_FpMul_6U_10U_nor_1_nl;
  logic [0:0] FpMul_6U_10U_or_2_cse_C3 ;
  logic [0:0] FpMul_6U_10U_or_2_cse_R3 ;
  logic [0:0] FpMul_6U_10U_or_2_cse_X3 ;
  assign FpMul_6U_10U_or_2_cse_C3 = | _039__C ;
  assign FpMul_6U_10U_or_2_cse_X3 = | _039__X ;
  assign _039__T = FpMul_6U_10U_or_2_cse ? ( { 10{ FpMul_6U_10U_or_2_cse_T  }} | FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_T ) : ( { 10{ FpMul_6U_10U_or_2_cse_T  }} | FpMul_6U_10U_FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_T );
  assign _039__S = FpMul_6U_10U_or_2_cse ? FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_S : FpMul_6U_10U_FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_S ;
  assign FpMul_6U_10U_or_2_cse_R3 = ( | (_039__R | ( _039__C & ( { 10{ FpMul_6U_10U_or_2_cse }} & FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_T | { 10{ !FpMul_6U_10U_or_2_cse }} & FpMul_6U_10U_FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_T )))) && FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2 != FpMul_6U_10U_FpMul_6U_10U_FpMul_6U_10U_nor_1_nl ;
  logic [9:0] FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_C1 ;
  logic [9:0] FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_R1 ;
  logic [9:0] FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_X1 ;
  assign FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_C1 = { 10{ FpMul_6U_10U_or_2_cse }} ;
  assign FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_R1 = { 10{ FpMul_6U_10U_or_2_cse }} & ( _039__R | ( { 10{ FpMul_6U_10U_or_2_cse_T  }} & _039__C ));
  assign FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_X1 = { 10{ FpMul_6U_10U_or_2_cse }} & _039__X ;
  logic [9:0] FpMul_6U_10U_FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_C0 ;
  logic [9:0] FpMul_6U_10U_FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_R0 ;
  logic [9:0] FpMul_6U_10U_FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_X0 ;
  assign FpMul_6U_10U_FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_C0 = { 10{ !FpMul_6U_10U_or_2_cse }} ;
  assign FpMul_6U_10U_FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_R0 = { 10{ !FpMul_6U_10U_or_2_cse }} & ( _039__R | ( { 10{ FpMul_6U_10U_or_2_cse_T  }} & _039__C ));
  assign FpMul_6U_10U_FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_X0 = { 10{ !FpMul_6U_10U_or_2_cse }} & _039__X ;
  assign _031_ = chn_o_and_cse ? _039_ : chn_o_rsci_d_9_0;
  logic [0:0] chn_o_and_cse_C0 ;
  logic [0:0] chn_o_and_cse_R0 ;
  logic [0:0] chn_o_and_cse_X0 ;
  assign chn_o_and_cse_C0 = | _031__C ;
  assign chn_o_and_cse_X0 = | _031__X ;
  assign _031__T = chn_o_and_cse ? ( { 10{ chn_o_and_cse_T  }} | _039__T ) : ( { 10{ chn_o_and_cse_T  }} | chn_o_rsci_d_9_0_T );
  assign _031__S = chn_o_and_cse ? _039__S : chn_o_rsci_d_9_0_S ;
  assign chn_o_and_cse_R0 = ( | (_031__R | ( _031__C & ( { 10{ chn_o_and_cse }} & _039__T | { 10{ !chn_o_and_cse }} & chn_o_rsci_d_9_0_T )))) && _039_ != chn_o_rsci_d_9_0 ;
  logic [9:0] _039__C0 ;
  logic [9:0] _039__R0 ;
  logic [9:0] _039__X0 ;
  assign _039__C0 = { 10{ chn_o_and_cse }} ;
  assign _039__R0 = { 10{ chn_o_and_cse }} & ( _031__R | ( { 10{ chn_o_and_cse_T  }} & _031__C ));
  assign _039__X0 = { 10{ chn_o_and_cse }} & _031__X ;
  logic [9:0] chn_o_rsci_d_9_0_C0 ;
  logic [9:0] chn_o_rsci_d_9_0_R0 ;
  logic [9:0] chn_o_rsci_d_9_0_X0 ;
  assign chn_o_rsci_d_9_0_C0 = { 10{ !chn_o_and_cse }} ;
  assign chn_o_rsci_d_9_0_R0 = { 10{ !chn_o_and_cse }} & ( _031__R | ( { 10{ chn_o_and_cse_T  }} & _031__C ));
  assign chn_o_rsci_d_9_0_X0 = { 10{ !chn_o_and_cse }} & _031__X ;
  assign _030_ = chn_o_and_cse ? FpMul_6U_10U_mux_10_itm_4 : chn_o_rsci_d_16;
  logic [0:0] chn_o_and_cse_C1 ;
  logic [0:0] chn_o_and_cse_R1 ;
  logic [0:0] chn_o_and_cse_X1 ;
  assign chn_o_and_cse_C1 = | _030__C ;
  assign chn_o_and_cse_X1 = | _030__X ;
  assign _030__T = chn_o_and_cse ? ( { 1{ chn_o_and_cse_T  }} | FpMul_6U_10U_mux_10_itm_4_T ) : ( { 1{ chn_o_and_cse_T  }} | chn_o_rsci_d_16_T );
  assign _030__S = chn_o_and_cse ? FpMul_6U_10U_mux_10_itm_4_S : chn_o_rsci_d_16_S ;
  assign chn_o_and_cse_R1 = ( | (_030__R | ( _030__C & ( { 1{ chn_o_and_cse }} & FpMul_6U_10U_mux_10_itm_4_T | { 1{ !chn_o_and_cse }} & chn_o_rsci_d_16_T )))) && FpMul_6U_10U_mux_10_itm_4 != chn_o_rsci_d_16 ;
  logic [0:0] FpMul_6U_10U_mux_10_itm_4_C1 ;
  logic [0:0] FpMul_6U_10U_mux_10_itm_4_R1 ;
  logic [0:0] FpMul_6U_10U_mux_10_itm_4_X1 ;
  assign FpMul_6U_10U_mux_10_itm_4_C1 = { 1{ chn_o_and_cse }} ;
  assign FpMul_6U_10U_mux_10_itm_4_R1 = { 1{ chn_o_and_cse }} & ( _030__R | ( { 1{ chn_o_and_cse_T  }} & _030__C ));
  assign FpMul_6U_10U_mux_10_itm_4_X1 = { 1{ chn_o_and_cse }} & _030__X ;
  logic [0:0] chn_o_rsci_d_16_C0 ;
  logic [0:0] chn_o_rsci_d_16_R0 ;
  logic [0:0] chn_o_rsci_d_16_X0 ;
  assign chn_o_rsci_d_16_C0 = { 1{ !chn_o_and_cse }} ;
  assign chn_o_rsci_d_16_R0 = { 1{ !chn_o_and_cse }} & ( _030__R | ( { 1{ chn_o_and_cse_T  }} & _030__C ));
  assign chn_o_rsci_d_16_X0 = { 1{ !chn_o_and_cse }} & _030__X ;
  assign _036_ = _047_ ? or_tmp_62 : reg_chn_b_rsci_ld_core_psct_cse;
  logic [0:0] _047__C0 ;
  logic [0:0] _047__R0 ;
  logic [0:0] _047__X0 ;
  assign _047__C0 = | _036__C ;
  assign _047__X0 = | _036__X ;
  assign _036__T = _047_ ? ( { 1{ _047__T  }} | or_tmp_62_T ) : ( { 1{ _047__T  }} | reg_chn_b_rsci_ld_core_psct_cse_T );
  assign _036__S = _047_ ? or_tmp_62_S : reg_chn_b_rsci_ld_core_psct_cse_S ;
  assign _047__R0 = ( | (_036__R | ( _036__C & ( { 1{ _047_ }} & or_tmp_62_T | { 1{ !_047_ }} & reg_chn_b_rsci_ld_core_psct_cse_T )))) && or_tmp_62 != reg_chn_b_rsci_ld_core_psct_cse ;
  logic [0:0] or_tmp_62_C1 ;
  logic [0:0] or_tmp_62_R1 ;
  logic [0:0] or_tmp_62_X1 ;
  assign or_tmp_62_C1 = { 1{ _047_ }} ;
  assign or_tmp_62_R1 = { 1{ _047_ }} & ( _036__R | ( { 1{ _047__T  }} & _036__C ));
  assign or_tmp_62_X1 = { 1{ _047_ }} & _036__X ;
  logic [0:0] reg_chn_b_rsci_ld_core_psct_cse_C0 ;
  logic [0:0] reg_chn_b_rsci_ld_core_psct_cse_R0 ;
  logic [0:0] reg_chn_b_rsci_ld_core_psct_cse_X0 ;
  assign reg_chn_b_rsci_ld_core_psct_cse_C0 = { 1{ !_047_ }} ;
  assign reg_chn_b_rsci_ld_core_psct_cse_R0 = { 1{ !_047_ }} & ( _036__R | ( { 1{ _047__T  }} & _036__C ));
  assign reg_chn_b_rsci_ld_core_psct_cse_X0 = { 1{ !_047_ }} & _036__X ;
  assign _035_ = core_wen ? _108_ : reg_chn_b_rsci_iswt0_cse;
  logic [0:0] core_wen_C13 ;
  logic [0:0] core_wen_R13 ;
  logic [0:0] core_wen_X13 ;
  assign core_wen_C13 = | _035__C ;
  assign core_wen_X13 = | _035__X ;
  assign _035__T = core_wen ? ( { 1{ core_wen_T  }} | _108__T ) : ( { 1{ core_wen_T  }} | reg_chn_b_rsci_iswt0_cse_T );
  assign _035__S = core_wen ? _108__S : reg_chn_b_rsci_iswt0_cse_S ;
  assign core_wen_R13 = ( | (_035__R | ( _035__C & ( { 1{ core_wen }} & _108__T | { 1{ !core_wen }} & reg_chn_b_rsci_iswt0_cse_T )))) && _108_ != reg_chn_b_rsci_iswt0_cse ;
  logic [0:0] _108__C0 ;
  logic [0:0] _108__R0 ;
  logic [0:0] _108__X0 ;
  assign _108__C0 = { 1{ core_wen }} ;
  assign _108__R0 = { 1{ core_wen }} & ( _035__R | ( { 1{ core_wen_T  }} & _035__C ));
  assign _108__X0 = { 1{ core_wen }} & _035__X ;
  logic [0:0] reg_chn_b_rsci_iswt0_cse_C0 ;
  logic [0:0] reg_chn_b_rsci_iswt0_cse_R0 ;
  logic [0:0] reg_chn_b_rsci_iswt0_cse_X0 ;
  assign reg_chn_b_rsci_iswt0_cse_C0 = { 1{ !core_wen }} ;
  assign reg_chn_b_rsci_iswt0_cse_R0 = { 1{ !core_wen }} & ( _035__R | ( { 1{ core_wen_T  }} & _035__C ));
  assign reg_chn_b_rsci_iswt0_cse_X0 = { 1{ !core_wen }} & _035__X ;
  assign _032_ = core_wen ? and_dcpl_13 : chn_o_rsci_iswt0;
  logic [0:0] core_wen_C14 ;
  logic [0:0] core_wen_R14 ;
  logic [0:0] core_wen_X14 ;
  assign core_wen_C14 = | _032__C ;
  assign core_wen_X14 = | _032__X ;
  assign _032__T = core_wen ? ( { 1{ core_wen_T  }} | and_dcpl_13_T ) : ( { 1{ core_wen_T  }} | chn_o_rsci_iswt0_T );
  assign _032__S = core_wen ? and_dcpl_13_S : chn_o_rsci_iswt0_S ;
  assign core_wen_R14 = ( | (_032__R | ( _032__C & ( { 1{ core_wen }} & and_dcpl_13_T | { 1{ !core_wen }} & chn_o_rsci_iswt0_T )))) && and_dcpl_13 != chn_o_rsci_iswt0 ;
  logic [0:0] and_dcpl_13_C3 ;
  logic [0:0] and_dcpl_13_R3 ;
  logic [0:0] and_dcpl_13_X3 ;
  assign and_dcpl_13_C3 = { 1{ core_wen }} ;
  assign and_dcpl_13_R3 = { 1{ core_wen }} & ( _032__R | ( { 1{ core_wen_T  }} & _032__C ));
  assign and_dcpl_13_X3 = { 1{ core_wen }} & _032__X ;
  logic [0:0] chn_o_rsci_iswt0_C0 ;
  logic [0:0] chn_o_rsci_iswt0_R0 ;
  logic [0:0] chn_o_rsci_iswt0_X0 ;
  assign chn_o_rsci_iswt0_C0 = { 1{ !core_wen }} ;
  assign chn_o_rsci_iswt0_R0 = { 1{ !core_wen }} & ( _032__R | ( { 1{ core_wen_T  }} & _032__C ));
  assign chn_o_rsci_iswt0_X0 = { 1{ !core_wen }} & _032__X ;
  assign FpMul_6U_10U_xor_1_nl = chn_a_rsci_d_mxwt[16] ^ chn_b_rsci_d_mxwt[16];
  assign FpMul_6U_10U_xor_1_nl_S = 0 ;
  assign FpMul_6U_10U_xor_1_nl_T = chn_a_rsci_d_mxwt_T [16] | chn_b_rsci_d_mxwt_T [16] ;
  assign chn_a_rsci_d_mxwt_C5 [16] = FpMul_6U_10U_xor_1_nl_C ;
  assign chn_a_rsci_d_mxwt_X5 [16] = FpMul_6U_10U_xor_1_nl_X ;
  assign chn_b_rsci_d_mxwt_C4 [16] = FpMul_6U_10U_xor_1_nl_C ;
  assign chn_b_rsci_d_mxwt_X4 [16] = FpMul_6U_10U_xor_1_nl_X ;
  assign chn_a_rsci_d_mxwt_R5 [16] = FpMul_6U_10U_xor_1_nl_R | ( FpMul_6U_10U_xor_1_nl_C & chn_b_rsci_d_mxwt_T [16] );
  assign chn_b_rsci_d_mxwt_R4 [16] = FpMul_6U_10U_xor_1_nl_R | ( FpMul_6U_10U_xor_1_nl_C & chn_a_rsci_d_mxwt_T [16] );
  logic [0:0] chn_a_rsc_vz_R0 ;
  logic [0:0] chn_a_rsc_vz_X0 ;
  logic [0:0] chn_a_rsc_vz_C0 ;
  logic [16:0] chn_a_rsc_z_R0 ;
  logic [16:0] chn_a_rsc_z_X0 ;
  logic [16:0] chn_a_rsc_z_C0 ;
  logic [0:0] reg_chn_b_rsci_iswt0_cse_R1 ;
  logic [0:0] reg_chn_b_rsci_iswt0_cse_X1 ;
  logic [0:0] reg_chn_b_rsci_iswt0_cse_C1 ;
  logic [0:0] reg_chn_b_rsci_ld_core_psct_cse_R1 ;
  logic [0:0] reg_chn_b_rsci_ld_core_psct_cse_X1 ;
  logic [0:0] reg_chn_b_rsci_ld_core_psct_cse_C1 ;
  logic [0:0] chn_a_rsci_oswt_R0 ;
  logic [0:0] chn_a_rsci_oswt_X0 ;
  logic [0:0] chn_a_rsci_oswt_C0 ;
  logic [0:0] core_wen_R15 ;
  logic [0:0] core_wen_X15 ;
  logic [0:0] core_wen_C15 ;
  logic [0:0] core_wten_R0 ;
  logic [0:0] core_wten_X0 ;
  logic [0:0] core_wten_C0 ;
  logic [0:0] nvdla_core_rstn_R0 ;
  logic [0:0] nvdla_core_rstn_X0 ;
  logic [0:0] nvdla_core_rstn_C0 ;
// module: HLS_fp17_mul_core_chn_a_rsci
  HLS_fp17_mul_core_chn_a_rsci HLS_fp17_mul_core_chn_a_rsci_inst (
    .chn_a_rsc_vz_T (  chn_a_rsc_vz_T  ),
    .chn_a_rsc_vz_R (  chn_a_rsc_vz_R0  ),
    .chn_a_rsc_vz_X (  chn_a_rsc_vz_X0  ),
    .chn_a_rsc_vz_C (  chn_a_rsc_vz_C0  ),
    .chn_a_rsc_vz_S (  chn_a_rsc_vz_S  ),
    .chn_a_rsc_z_T (  chn_a_rsc_z_T  ),
    .chn_a_rsc_z_R (  chn_a_rsc_z_R0  ),
    .chn_a_rsc_z_X (  chn_a_rsc_z_X0  ),
    .chn_a_rsc_z_C (  chn_a_rsc_z_C0  ),
    .chn_a_rsc_z_S (  chn_a_rsc_z_S  ),
    .chn_a_rsci_iswt0_T (  reg_chn_b_rsci_iswt0_cse_T  ),
    .chn_a_rsci_iswt0_R (  reg_chn_b_rsci_iswt0_cse_R1  ),
    .chn_a_rsci_iswt0_X (  reg_chn_b_rsci_iswt0_cse_X1  ),
    .chn_a_rsci_iswt0_C (  reg_chn_b_rsci_iswt0_cse_C1  ),
    .chn_a_rsci_iswt0_S (  reg_chn_b_rsci_iswt0_cse_S  ),
    .chn_a_rsci_ld_core_psct_T (  reg_chn_b_rsci_ld_core_psct_cse_T  ),
    .chn_a_rsci_ld_core_psct_R (  reg_chn_b_rsci_ld_core_psct_cse_R1  ),
    .chn_a_rsci_ld_core_psct_X (  reg_chn_b_rsci_ld_core_psct_cse_X1  ),
    .chn_a_rsci_ld_core_psct_C (  reg_chn_b_rsci_ld_core_psct_cse_C1  ),
    .chn_a_rsci_ld_core_psct_S (  reg_chn_b_rsci_ld_core_psct_cse_S  ),
    .chn_a_rsci_oswt_T (  chn_a_rsci_oswt_T  ),
    .chn_a_rsci_oswt_R (  chn_a_rsci_oswt_R0  ),
    .chn_a_rsci_oswt_X (  chn_a_rsci_oswt_X0  ),
    .chn_a_rsci_oswt_C (  chn_a_rsci_oswt_C0  ),
    .chn_a_rsci_oswt_S (  chn_a_rsci_oswt_S  ),
    .core_wen_T (  core_wen_T  ),
    .core_wen_R (  core_wen_R15  ),
    .core_wen_X (  core_wen_X15  ),
    .core_wen_C (  core_wen_C15  ),
    .core_wen_S (  core_wen_S  ),
    .core_wten_T (  core_wten_T  ),
    .core_wten_R (  core_wten_R0  ),
    .core_wten_X (  core_wten_X0  ),
    .core_wten_C (  core_wten_C0  ),
    .core_wten_S (  core_wten_S  ),
    .nvdla_core_rstn_T (  nvdla_core_rstn_T  ),
    .nvdla_core_rstn_R (  nvdla_core_rstn_R0  ),
    .nvdla_core_rstn_X (  nvdla_core_rstn_X0  ),
    .nvdla_core_rstn_C (  nvdla_core_rstn_C0  ),
    .nvdla_core_rstn_S (  nvdla_core_rstn_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .chn_a_rsc_lz_T (  chn_a_rsc_lz_T  ),
    .chn_a_rsc_lz_R0 (  chn_a_rsc_lz_R  ),
    .chn_a_rsc_lz_X0 (  chn_a_rsc_lz_X  ),
    .chn_a_rsc_lz_C0 (  chn_a_rsc_lz_C  ),
    .chn_a_rsc_lz_S ( chn_a_rsc_lz_S ),
    .chn_a_rsci_bawt_T (  chn_a_rsci_bawt_T  ),
    .chn_a_rsci_bawt_R0 (  chn_a_rsci_bawt_R  ),
    .chn_a_rsci_bawt_X0 (  chn_a_rsci_bawt_X  ),
    .chn_a_rsci_bawt_C0 (  chn_a_rsci_bawt_C  ),
    .chn_a_rsci_bawt_S ( chn_a_rsci_bawt_S ),
    .chn_a_rsci_d_mxwt_T (  chn_a_rsci_d_mxwt_T  ),
    .chn_a_rsci_d_mxwt_R0 (  chn_a_rsci_d_mxwt_R  ),
    .chn_a_rsci_d_mxwt_X0 (  chn_a_rsci_d_mxwt_X  ),
    .chn_a_rsci_d_mxwt_C0 (  chn_a_rsci_d_mxwt_C  ),
    .chn_a_rsci_d_mxwt_S ( chn_a_rsci_d_mxwt_S ),
    .chn_a_rsci_wen_comp_T (  chn_a_rsci_wen_comp_T  ),
    .chn_a_rsci_wen_comp_R0 (  chn_a_rsci_wen_comp_R  ),
    .chn_a_rsci_wen_comp_X0 (  chn_a_rsci_wen_comp_X  ),
    .chn_a_rsci_wen_comp_C0 (  chn_a_rsci_wen_comp_C  ),
    .chn_a_rsci_wen_comp_S ( chn_a_rsci_wen_comp_S ),
    .nvdla_core_clk ( nvdla_core_clk ),
    .chn_a_rsci_d_mxwt ( chn_a_rsci_d_mxwt ),
    .core_wten ( core_wten ),
    .chn_a_rsci_bawt ( chn_a_rsci_bawt ),
    .chn_a_rsc_z ( chn_a_rsc_z ),
    .chn_a_rsc_lz ( chn_a_rsc_lz ),
    .chn_a_rsc_vz ( chn_a_rsc_vz ),
    .chn_a_rsci_ld_core_psct ( reg_chn_b_rsci_ld_core_psct_cse ),
    .chn_a_rsci_oswt ( chn_a_rsci_oswt ),
    .nvdla_core_rstn ( nvdla_core_rstn ),
    .chn_a_rsci_wen_comp ( chn_a_rsci_wen_comp ),
    .chn_a_rsci_iswt0 ( reg_chn_b_rsci_iswt0_cse ),
    .core_wen ( core_wen )
  );
  logic [0:0] chn_b_rsc_vz_R0 ;
  logic [0:0] chn_b_rsc_vz_X0 ;
  logic [0:0] chn_b_rsc_vz_C0 ;
  logic [16:0] chn_b_rsc_z_R0 ;
  logic [16:0] chn_b_rsc_z_X0 ;
  logic [16:0] chn_b_rsc_z_C0 ;
  logic [0:0] reg_chn_b_rsci_iswt0_cse_R2 ;
  logic [0:0] reg_chn_b_rsci_iswt0_cse_X2 ;
  logic [0:0] reg_chn_b_rsci_iswt0_cse_C2 ;
  logic [0:0] reg_chn_b_rsci_ld_core_psct_cse_R2 ;
  logic [0:0] reg_chn_b_rsci_ld_core_psct_cse_X2 ;
  logic [0:0] reg_chn_b_rsci_ld_core_psct_cse_C2 ;
  logic [0:0] chn_b_rsci_oswt_R0 ;
  logic [0:0] chn_b_rsci_oswt_X0 ;
  logic [0:0] chn_b_rsci_oswt_C0 ;
  logic [0:0] core_wen_R16 ;
  logic [0:0] core_wen_X16 ;
  logic [0:0] core_wen_C16 ;
  logic [0:0] core_wten_R1 ;
  logic [0:0] core_wten_X1 ;
  logic [0:0] core_wten_C1 ;
  logic [0:0] nvdla_core_rstn_R1 ;
  logic [0:0] nvdla_core_rstn_X1 ;
  logic [0:0] nvdla_core_rstn_C1 ;
// module: HLS_fp17_mul_core_chn_b_rsci
  HLS_fp17_mul_core_chn_b_rsci HLS_fp17_mul_core_chn_b_rsci_inst (
    .chn_b_rsc_vz_T (  chn_b_rsc_vz_T  ),
    .chn_b_rsc_vz_R (  chn_b_rsc_vz_R0  ),
    .chn_b_rsc_vz_X (  chn_b_rsc_vz_X0  ),
    .chn_b_rsc_vz_C (  chn_b_rsc_vz_C0  ),
    .chn_b_rsc_vz_S (  chn_b_rsc_vz_S  ),
    .chn_b_rsc_z_T (  chn_b_rsc_z_T  ),
    .chn_b_rsc_z_R (  chn_b_rsc_z_R0  ),
    .chn_b_rsc_z_X (  chn_b_rsc_z_X0  ),
    .chn_b_rsc_z_C (  chn_b_rsc_z_C0  ),
    .chn_b_rsc_z_S (  chn_b_rsc_z_S  ),
    .chn_b_rsci_iswt0_T (  reg_chn_b_rsci_iswt0_cse_T  ),
    .chn_b_rsci_iswt0_R (  reg_chn_b_rsci_iswt0_cse_R2  ),
    .chn_b_rsci_iswt0_X (  reg_chn_b_rsci_iswt0_cse_X2  ),
    .chn_b_rsci_iswt0_C (  reg_chn_b_rsci_iswt0_cse_C2  ),
    .chn_b_rsci_iswt0_S (  reg_chn_b_rsci_iswt0_cse_S  ),
    .chn_b_rsci_ld_core_psct_T (  reg_chn_b_rsci_ld_core_psct_cse_T  ),
    .chn_b_rsci_ld_core_psct_R (  reg_chn_b_rsci_ld_core_psct_cse_R2  ),
    .chn_b_rsci_ld_core_psct_X (  reg_chn_b_rsci_ld_core_psct_cse_X2  ),
    .chn_b_rsci_ld_core_psct_C (  reg_chn_b_rsci_ld_core_psct_cse_C2  ),
    .chn_b_rsci_ld_core_psct_S (  reg_chn_b_rsci_ld_core_psct_cse_S  ),
    .chn_b_rsci_oswt_T (  chn_b_rsci_oswt_T  ),
    .chn_b_rsci_oswt_R (  chn_b_rsci_oswt_R0  ),
    .chn_b_rsci_oswt_X (  chn_b_rsci_oswt_X0  ),
    .chn_b_rsci_oswt_C (  chn_b_rsci_oswt_C0  ),
    .chn_b_rsci_oswt_S (  chn_b_rsci_oswt_S  ),
    .core_wen_T (  core_wen_T  ),
    .core_wen_R (  core_wen_R16  ),
    .core_wen_X (  core_wen_X16  ),
    .core_wen_C (  core_wen_C16  ),
    .core_wen_S (  core_wen_S  ),
    .core_wten_T (  core_wten_T  ),
    .core_wten_R (  core_wten_R1  ),
    .core_wten_X (  core_wten_X1  ),
    .core_wten_C (  core_wten_C1  ),
    .core_wten_S (  core_wten_S  ),
    .nvdla_core_rstn_T (  nvdla_core_rstn_T  ),
    .nvdla_core_rstn_R (  nvdla_core_rstn_R1  ),
    .nvdla_core_rstn_X (  nvdla_core_rstn_X1  ),
    .nvdla_core_rstn_C (  nvdla_core_rstn_C1  ),
    .nvdla_core_rstn_S (  nvdla_core_rstn_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .chn_b_rsc_lz_T (  chn_b_rsc_lz_T  ),
    .chn_b_rsc_lz_R0 (  chn_b_rsc_lz_R  ),
    .chn_b_rsc_lz_X0 (  chn_b_rsc_lz_X  ),
    .chn_b_rsc_lz_C0 (  chn_b_rsc_lz_C  ),
    .chn_b_rsc_lz_S ( chn_b_rsc_lz_S ),
    .chn_b_rsci_bawt_T (  chn_b_rsci_bawt_T  ),
    .chn_b_rsci_bawt_R0 (  chn_b_rsci_bawt_R  ),
    .chn_b_rsci_bawt_X0 (  chn_b_rsci_bawt_X  ),
    .chn_b_rsci_bawt_C0 (  chn_b_rsci_bawt_C  ),
    .chn_b_rsci_bawt_S ( chn_b_rsci_bawt_S ),
    .chn_b_rsci_d_mxwt_T (  chn_b_rsci_d_mxwt_T  ),
    .chn_b_rsci_d_mxwt_R0 (  chn_b_rsci_d_mxwt_R  ),
    .chn_b_rsci_d_mxwt_X0 (  chn_b_rsci_d_mxwt_X  ),
    .chn_b_rsci_d_mxwt_C0 (  chn_b_rsci_d_mxwt_C  ),
    .chn_b_rsci_d_mxwt_S ( chn_b_rsci_d_mxwt_S ),
    .chn_b_rsci_wen_comp_T (  chn_b_rsci_wen_comp_T  ),
    .chn_b_rsci_wen_comp_R0 (  chn_b_rsci_wen_comp_R  ),
    .chn_b_rsci_wen_comp_X0 (  chn_b_rsci_wen_comp_X  ),
    .chn_b_rsci_wen_comp_C0 (  chn_b_rsci_wen_comp_C  ),
    .chn_b_rsci_wen_comp_S ( chn_b_rsci_wen_comp_S ),
    .nvdla_core_rstn ( nvdla_core_rstn ),
    .chn_b_rsc_z ( chn_b_rsc_z ),
    .chn_b_rsci_d_mxwt ( chn_b_rsci_d_mxwt ),
    .nvdla_core_clk ( nvdla_core_clk ),
    .chn_b_rsci_iswt0 ( reg_chn_b_rsci_iswt0_cse ),
    .chn_b_rsc_lz ( chn_b_rsc_lz ),
    .chn_b_rsci_bawt ( chn_b_rsci_bawt ),
    .chn_b_rsc_vz ( chn_b_rsc_vz ),
    .chn_b_rsci_wen_comp ( chn_b_rsci_wen_comp ),
    .chn_b_rsci_ld_core_psct ( reg_chn_b_rsci_ld_core_psct_cse ),
    .chn_b_rsci_oswt ( chn_b_rsci_oswt ),
    .core_wen ( core_wen ),
    .core_wten ( core_wten )
  );
  logic [0:0] chn_o_rsc_vz_R0 ;
  logic [0:0] chn_o_rsc_vz_X0 ;
  logic [0:0] chn_o_rsc_vz_C0 ;
  logic [0:0] chn_o_rsci_d_16_R1 ;
  logic [0:0] chn_o_rsci_d_16_X1 ;
  logic [0:0] chn_o_rsci_d_16_C1 ;
  logic [5:0] chn_o_rsci_d_15_10_R1 ;
  logic [5:0] chn_o_rsci_d_15_10_X1 ;
  logic [5:0] chn_o_rsci_d_15_10_C1 ;
  logic [9:0] chn_o_rsci_d_9_0_R1 ;
  logic [9:0] chn_o_rsci_d_9_0_X1 ;
  logic [9:0] chn_o_rsci_d_9_0_C1 ;
  logic [0:0] chn_o_rsci_iswt0_R1 ;
  logic [0:0] chn_o_rsci_iswt0_X1 ;
  logic [0:0] chn_o_rsci_iswt0_C1 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R9 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X9 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C9 ;
  logic [0:0] chn_o_rsci_oswt_R0 ;
  logic [0:0] chn_o_rsci_oswt_X0 ;
  logic [0:0] chn_o_rsci_oswt_C0 ;
  logic [0:0] core_wen_R17 ;
  logic [0:0] core_wen_X17 ;
  logic [0:0] core_wen_C17 ;
  logic [0:0] core_wten_R2 ;
  logic [0:0] core_wten_X2 ;
  logic [0:0] core_wten_C2 ;
  logic [0:0] nvdla_core_rstn_R2 ;
  logic [0:0] nvdla_core_rstn_X2 ;
  logic [0:0] nvdla_core_rstn_C2 ;
// module: HLS_fp17_mul_core_chn_o_rsci
  HLS_fp17_mul_core_chn_o_rsci HLS_fp17_mul_core_chn_o_rsci_inst (
    .chn_o_rsc_vz_T (  chn_o_rsc_vz_T  ),
    .chn_o_rsc_vz_R (  chn_o_rsc_vz_R0  ),
    .chn_o_rsc_vz_X (  chn_o_rsc_vz_X0  ),
    .chn_o_rsc_vz_C (  chn_o_rsc_vz_C0  ),
    .chn_o_rsc_vz_S (  chn_o_rsc_vz_S  ),
    .chn_o_rsci_d_T ( {  chn_o_rsci_d_16_T , chn_o_rsci_d_15_10_T , chn_o_rsci_d_9_0_T  } ),
    .chn_o_rsci_d_R ( {  chn_o_rsci_d_16_R1 , chn_o_rsci_d_15_10_R1 , chn_o_rsci_d_9_0_R1  } ),
    .chn_o_rsci_d_X ( {  chn_o_rsci_d_16_X1 , chn_o_rsci_d_15_10_X1 , chn_o_rsci_d_9_0_X1  } ),
    .chn_o_rsci_d_C ( {  chn_o_rsci_d_16_C1 , chn_o_rsci_d_15_10_C1 , chn_o_rsci_d_9_0_C1  } ),
    .chn_o_rsci_d_S ( {  chn_o_rsci_d_16_S , chn_o_rsci_d_15_10_S , chn_o_rsci_d_9_0_S  } ),
    .chn_o_rsci_iswt0_T (  chn_o_rsci_iswt0_T  ),
    .chn_o_rsci_iswt0_R (  chn_o_rsci_iswt0_R1  ),
    .chn_o_rsci_iswt0_X (  chn_o_rsci_iswt0_X1  ),
    .chn_o_rsci_iswt0_C (  chn_o_rsci_iswt0_C1  ),
    .chn_o_rsci_iswt0_S (  chn_o_rsci_iswt0_S  ),
    .chn_o_rsci_ld_core_psct_T (  reg_chn_o_rsci_ld_core_psct_cse_T  ),
    .chn_o_rsci_ld_core_psct_R (  reg_chn_o_rsci_ld_core_psct_cse_R9  ),
    .chn_o_rsci_ld_core_psct_X (  reg_chn_o_rsci_ld_core_psct_cse_X9  ),
    .chn_o_rsci_ld_core_psct_C (  reg_chn_o_rsci_ld_core_psct_cse_C9  ),
    .chn_o_rsci_ld_core_psct_S (  reg_chn_o_rsci_ld_core_psct_cse_S  ),
    .chn_o_rsci_oswt_T (  chn_o_rsci_oswt_T  ),
    .chn_o_rsci_oswt_R (  chn_o_rsci_oswt_R0  ),
    .chn_o_rsci_oswt_X (  chn_o_rsci_oswt_X0  ),
    .chn_o_rsci_oswt_C (  chn_o_rsci_oswt_C0  ),
    .chn_o_rsci_oswt_S (  chn_o_rsci_oswt_S  ),
    .core_wen_T (  core_wen_T  ),
    .core_wen_R (  core_wen_R17  ),
    .core_wen_X (  core_wen_X17  ),
    .core_wen_C (  core_wen_C17  ),
    .core_wen_S (  core_wen_S  ),
    .core_wten_T (  core_wten_T  ),
    .core_wten_R (  core_wten_R2  ),
    .core_wten_X (  core_wten_X2  ),
    .core_wten_C (  core_wten_C2  ),
    .core_wten_S (  core_wten_S  ),
    .nvdla_core_rstn_T (  nvdla_core_rstn_T  ),
    .nvdla_core_rstn_R (  nvdla_core_rstn_R2  ),
    .nvdla_core_rstn_X (  nvdla_core_rstn_X2  ),
    .nvdla_core_rstn_C (  nvdla_core_rstn_C2  ),
    .nvdla_core_rstn_S (  nvdla_core_rstn_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .chn_o_rsc_lz_T (  chn_o_rsc_lz_T  ),
    .chn_o_rsc_lz_R0 (  chn_o_rsc_lz_R  ),
    .chn_o_rsc_lz_X0 (  chn_o_rsc_lz_X  ),
    .chn_o_rsc_lz_C0 (  chn_o_rsc_lz_C  ),
    .chn_o_rsc_lz_S ( chn_o_rsc_lz_S ),
    .chn_o_rsc_z_T (  chn_o_rsc_z_T  ),
    .chn_o_rsc_z_R0 (  chn_o_rsc_z_R  ),
    .chn_o_rsc_z_X0 (  chn_o_rsc_z_X  ),
    .chn_o_rsc_z_C0 (  chn_o_rsc_z_C  ),
    .chn_o_rsc_z_S ( chn_o_rsc_z_S ),
    .chn_o_rsci_bawt_T (  chn_o_rsci_bawt_T  ),
    .chn_o_rsci_bawt_R0 (  chn_o_rsci_bawt_R  ),
    .chn_o_rsci_bawt_X0 (  chn_o_rsci_bawt_X  ),
    .chn_o_rsci_bawt_C0 (  chn_o_rsci_bawt_C  ),
    .chn_o_rsci_bawt_S ( chn_o_rsci_bawt_S ),
    .chn_o_rsci_wen_comp_T (  chn_o_rsci_wen_comp_T  ),
    .chn_o_rsci_wen_comp_R0 (  chn_o_rsci_wen_comp_R  ),
    .chn_o_rsci_wen_comp_X0 (  chn_o_rsci_wen_comp_X  ),
    .chn_o_rsci_wen_comp_C0 (  chn_o_rsci_wen_comp_C  ),
    .chn_o_rsci_wen_comp_S ( chn_o_rsci_wen_comp_S ),
    .nvdla_core_rstn ( nvdla_core_rstn ),
    .nvdla_core_clk ( nvdla_core_clk ),
    .chn_o_rsci_d ( { chn_o_rsci_d_16, chn_o_rsci_d_15_10, chn_o_rsci_d_9_0 } ),
    .core_wten ( core_wten ),
    .chn_o_rsc_z ( chn_o_rsc_z ),
    .core_wen ( core_wen ),
    .chn_o_rsc_lz ( chn_o_rsc_lz ),
    .chn_o_rsci_ld_core_psct ( reg_chn_o_rsci_ld_core_psct_cse ),
    .chn_o_rsci_bawt ( chn_o_rsci_bawt ),
    .chn_o_rsc_vz ( chn_o_rsc_vz ),
    .chn_o_rsci_wen_comp ( chn_o_rsci_wen_comp ),
    .chn_o_rsci_iswt0 ( chn_o_rsci_iswt0 ),
    .chn_o_rsci_oswt ( chn_o_rsci_oswt )
  );
  logic [0:0] core_wen_R18 ;
  logic [0:0] core_wen_X18 ;
  logic [0:0] core_wen_C18 ;
  logic [0:0] nvdla_core_rstn_R3 ;
  logic [0:0] nvdla_core_rstn_X3 ;
  logic [0:0] nvdla_core_rstn_C3 ;
// module: HLS_fp17_mul_core_core_fsm
  HLS_fp17_mul_core_core_fsm HLS_fp17_mul_core_core_fsm_inst (
    .core_wen_T (  core_wen_T  ),
    .core_wen_R (  core_wen_R18  ),
    .core_wen_X (  core_wen_X18  ),
    .core_wen_C (  core_wen_C18  ),
    .core_wen_S (  core_wen_S  ),
    .nvdla_core_rstn_T (  nvdla_core_rstn_T  ),
    .nvdla_core_rstn_R (  nvdla_core_rstn_R3  ),
    .nvdla_core_rstn_X (  nvdla_core_rstn_X3  ),
    .nvdla_core_rstn_C (  nvdla_core_rstn_C3  ),
    .nvdla_core_rstn_S (  nvdla_core_rstn_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .fsm_output_T (  fsm_output_T  ),
    .fsm_output_R0 (  fsm_output_R  ),
    .fsm_output_X0 (  fsm_output_X  ),
    .fsm_output_C0 (  fsm_output_C  ),
    .fsm_output_S ( fsm_output_S ),
    .nvdla_core_clk ( nvdla_core_clk ),
    .nvdla_core_rstn ( nvdla_core_rstn ),
    .core_wen ( core_wen ),
    .fsm_output ( fsm_output )
  );
  logic [0:0] chn_a_rsci_wen_comp_R0 ;
  logic [0:0] chn_a_rsci_wen_comp_X0 ;
  logic [0:0] chn_a_rsci_wen_comp_C0 ;
  logic [0:0] chn_b_rsci_wen_comp_R0 ;
  logic [0:0] chn_b_rsci_wen_comp_X0 ;
  logic [0:0] chn_b_rsci_wen_comp_C0 ;
  logic [0:0] chn_o_rsci_wen_comp_R0 ;
  logic [0:0] chn_o_rsci_wen_comp_X0 ;
  logic [0:0] chn_o_rsci_wen_comp_C0 ;
  logic [0:0] nvdla_core_rstn_R4 ;
  logic [0:0] nvdla_core_rstn_X4 ;
  logic [0:0] nvdla_core_rstn_C4 ;
// module: HLS_fp17_mul_core_staller
  HLS_fp17_mul_core_staller HLS_fp17_mul_core_staller_inst (
    .chn_a_rsci_wen_comp_T (  chn_a_rsci_wen_comp_T  ),
    .chn_a_rsci_wen_comp_R (  chn_a_rsci_wen_comp_R0  ),
    .chn_a_rsci_wen_comp_X (  chn_a_rsci_wen_comp_X0  ),
    .chn_a_rsci_wen_comp_C (  chn_a_rsci_wen_comp_C0  ),
    .chn_a_rsci_wen_comp_S (  chn_a_rsci_wen_comp_S  ),
    .chn_b_rsci_wen_comp_T (  chn_b_rsci_wen_comp_T  ),
    .chn_b_rsci_wen_comp_R (  chn_b_rsci_wen_comp_R0  ),
    .chn_b_rsci_wen_comp_X (  chn_b_rsci_wen_comp_X0  ),
    .chn_b_rsci_wen_comp_C (  chn_b_rsci_wen_comp_C0  ),
    .chn_b_rsci_wen_comp_S (  chn_b_rsci_wen_comp_S  ),
    .chn_o_rsci_wen_comp_T (  chn_o_rsci_wen_comp_T  ),
    .chn_o_rsci_wen_comp_R (  chn_o_rsci_wen_comp_R0  ),
    .chn_o_rsci_wen_comp_X (  chn_o_rsci_wen_comp_X0  ),
    .chn_o_rsci_wen_comp_C (  chn_o_rsci_wen_comp_C0  ),
    .chn_o_rsci_wen_comp_S (  chn_o_rsci_wen_comp_S  ),
    .nvdla_core_rstn_T (  nvdla_core_rstn_T  ),
    .nvdla_core_rstn_R (  nvdla_core_rstn_R4  ),
    .nvdla_core_rstn_X (  nvdla_core_rstn_X4  ),
    .nvdla_core_rstn_C (  nvdla_core_rstn_C4  ),
    .nvdla_core_rstn_S (  nvdla_core_rstn_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .core_wen_T (  core_wen_T  ),
    .core_wen_R0 (  core_wen_R  ),
    .core_wen_X0 (  core_wen_X  ),
    .core_wen_C0 (  core_wen_C  ),
    .core_wen_S ( core_wen_S ),
    .core_wten_T (  core_wten_T  ),
    .core_wten_R0 (  core_wten_R  ),
    .core_wten_X0 (  core_wten_X  ),
    .core_wten_C0 (  core_wten_C  ),
    .core_wten_S ( core_wten_S ),
    .nvdla_core_clk ( nvdla_core_clk ),
    .chn_b_rsci_wen_comp ( chn_b_rsci_wen_comp ),
    .core_wten ( core_wten ),
    .nvdla_core_rstn ( nvdla_core_rstn ),
    .chn_a_rsci_wen_comp ( chn_a_rsci_wen_comp ),
    .chn_o_rsci_wen_comp ( chn_o_rsci_wen_comp ),
    .core_wen ( core_wen )
  );
  assign _003_[8:0] = { _003_[9], _003_[9], _003_[9], _003_[9], _003_[9], _003_[9], _003_[9], _003_[9], _003_[9] };
  assign _003__T [8:0] = {  _003__T [9] , _003__T [9] , _003__T [9] , _003__T [9] , _003__T [9] , _003__T [9] , _003__T [9] , _003__T [9] , _003__T [9]  };
  logic [13:0] _003__S ;
  assign _003__S = 0 ;
  assign { _003__R11 [0], _003__R11 [1], _003__R11 [2], _003__R11 [3], _003__R11 [4], _003__R11 [5], _003__R11 [6], _003__R11 [7], _003__R11 [8] } = 0;
  assign { _003__X11 [0], _003__X11 [1], _003__X11 [2], _003__X11 [3], _003__X11 [4], _003__X11 [5], _003__X11 [6], _003__X11 [7], _003__X11 [8] } = 0;
  assign { _003__C11 [0], _003__C11 [1], _003__C11 [2], _003__C11 [3], _003__C11 [4], _003__C11 [5], _003__C11 [6], _003__C11 [7], _003__C11 [8] } = 0;
  logic [9:0] _003__R12 ;
  logic [9:0] _003__X12 ;
  logic [9:0] _003__C12 ;
  assign _003__R12 [9:9] = _003__R [8:8] ;
  assign _003__X12 [9:9] = _003__X [8:8] ;
  assign _003__C12 [9:9] = _003__C [8:8] ;
  assign { _003__R12 [0], _003__R12 [1], _003__R12 [2], _003__R12 [3], _003__R12 [4], _003__R12 [5], _003__R12 [6], _003__R12 [7], _003__R12 [8] } = 0;
  assign { _003__X12 [0], _003__X12 [1], _003__X12 [2], _003__X12 [3], _003__X12 [4], _003__X12 [5], _003__X12 [6], _003__X12 [7], _003__X12 [8] } = 0;
  assign { _003__C12 [0], _003__C12 [1], _003__C12 [2], _003__C12 [3], _003__C12 [4], _003__C12 [5], _003__C12 [6], _003__C12 [7], _003__C12 [8] } = 0;
  logic [9:0] _003__R13 ;
  logic [9:0] _003__X13 ;
  logic [9:0] _003__C13 ;
  assign _003__R13 [9:9] = _003__R [7:7] ;
  assign _003__X13 [9:9] = _003__X [7:7] ;
  assign _003__C13 [9:9] = _003__C [7:7] ;
  assign { _003__R13 [0], _003__R13 [1], _003__R13 [2], _003__R13 [3], _003__R13 [4], _003__R13 [5], _003__R13 [6], _003__R13 [7], _003__R13 [8] } = 0;
  assign { _003__X13 [0], _003__X13 [1], _003__X13 [2], _003__X13 [3], _003__X13 [4], _003__X13 [5], _003__X13 [6], _003__X13 [7], _003__X13 [8] } = 0;
  assign { _003__C13 [0], _003__C13 [1], _003__C13 [2], _003__C13 [3], _003__C13 [4], _003__C13 [5], _003__C13 [6], _003__C13 [7], _003__C13 [8] } = 0;
  logic [9:0] _003__R14 ;
  logic [9:0] _003__X14 ;
  logic [9:0] _003__C14 ;
  assign _003__R14 [9:9] = _003__R [6:6] ;
  assign _003__X14 [9:9] = _003__X [6:6] ;
  assign _003__C14 [9:9] = _003__C [6:6] ;
  assign { _003__R14 [0], _003__R14 [1], _003__R14 [2], _003__R14 [3], _003__R14 [4], _003__R14 [5], _003__R14 [6], _003__R14 [7], _003__R14 [8] } = 0;
  assign { _003__X14 [0], _003__X14 [1], _003__X14 [2], _003__X14 [3], _003__X14 [4], _003__X14 [5], _003__X14 [6], _003__X14 [7], _003__X14 [8] } = 0;
  assign { _003__C14 [0], _003__C14 [1], _003__C14 [2], _003__C14 [3], _003__C14 [4], _003__C14 [5], _003__C14 [6], _003__C14 [7], _003__C14 [8] } = 0;
  logic [9:0] _003__R15 ;
  logic [9:0] _003__X15 ;
  logic [9:0] _003__C15 ;
  assign _003__R15 [9:9] = _003__R [5:5] ;
  assign _003__X15 [9:9] = _003__X [5:5] ;
  assign _003__C15 [9:9] = _003__C [5:5] ;
  assign { _003__R15 [0], _003__R15 [1], _003__R15 [2], _003__R15 [3], _003__R15 [4], _003__R15 [5], _003__R15 [6], _003__R15 [7], _003__R15 [8] } = 0;
  assign { _003__X15 [0], _003__X15 [1], _003__X15 [2], _003__X15 [3], _003__X15 [4], _003__X15 [5], _003__X15 [6], _003__X15 [7], _003__X15 [8] } = 0;
  assign { _003__C15 [0], _003__C15 [1], _003__C15 [2], _003__C15 [3], _003__C15 [4], _003__C15 [5], _003__C15 [6], _003__C15 [7], _003__C15 [8] } = 0;
  logic [9:0] _003__R16 ;
  logic [9:0] _003__X16 ;
  logic [9:0] _003__C16 ;
  assign _003__R16 [9:9] = _003__R [4:4] ;
  assign _003__X16 [9:9] = _003__X [4:4] ;
  assign _003__C16 [9:9] = _003__C [4:4] ;
  assign { _003__R16 [0], _003__R16 [1], _003__R16 [2], _003__R16 [3], _003__R16 [4], _003__R16 [5], _003__R16 [6], _003__R16 [7], _003__R16 [8] } = 0;
  assign { _003__X16 [0], _003__X16 [1], _003__X16 [2], _003__X16 [3], _003__X16 [4], _003__X16 [5], _003__X16 [6], _003__X16 [7], _003__X16 [8] } = 0;
  assign { _003__C16 [0], _003__C16 [1], _003__C16 [2], _003__C16 [3], _003__C16 [4], _003__C16 [5], _003__C16 [6], _003__C16 [7], _003__C16 [8] } = 0;
  logic [9:0] _003__R17 ;
  logic [9:0] _003__X17 ;
  logic [9:0] _003__C17 ;
  assign _003__R17 [9:9] = _003__R [3:3] ;
  assign _003__X17 [9:9] = _003__X [3:3] ;
  assign _003__C17 [9:9] = _003__C [3:3] ;
  assign { _003__R17 [0], _003__R17 [1], _003__R17 [2], _003__R17 [3], _003__R17 [4], _003__R17 [5], _003__R17 [6], _003__R17 [7], _003__R17 [8] } = 0;
  assign { _003__X17 [0], _003__X17 [1], _003__X17 [2], _003__X17 [3], _003__X17 [4], _003__X17 [5], _003__X17 [6], _003__X17 [7], _003__X17 [8] } = 0;
  assign { _003__C17 [0], _003__C17 [1], _003__C17 [2], _003__C17 [3], _003__C17 [4], _003__C17 [5], _003__C17 [6], _003__C17 [7], _003__C17 [8] } = 0;
  logic [9:0] _003__R18 ;
  logic [9:0] _003__X18 ;
  logic [9:0] _003__C18 ;
  assign _003__R18 [9:9] = _003__R [2:2] ;
  assign _003__X18 [9:9] = _003__X [2:2] ;
  assign _003__C18 [9:9] = _003__C [2:2] ;
  assign { _003__R18 [0], _003__R18 [1], _003__R18 [2], _003__R18 [3], _003__R18 [4], _003__R18 [5], _003__R18 [6], _003__R18 [7], _003__R18 [8] } = 0;
  assign { _003__X18 [0], _003__X18 [1], _003__X18 [2], _003__X18 [3], _003__X18 [4], _003__X18 [5], _003__X18 [6], _003__X18 [7], _003__X18 [8] } = 0;
  assign { _003__C18 [0], _003__C18 [1], _003__C18 [2], _003__C18 [3], _003__C18 [4], _003__C18 [5], _003__C18 [6], _003__C18 [7], _003__C18 [8] } = 0;
  logic [9:0] _003__R19 ;
  logic [9:0] _003__X19 ;
  logic [9:0] _003__C19 ;
  assign _003__R19 [9:9] = _003__R [1:1] ;
  assign _003__X19 [9:9] = _003__X [1:1] ;
  assign _003__C19 [9:9] = _003__C [1:1] ;
  assign { _003__R19 [0], _003__R19 [1], _003__R19 [2], _003__R19 [3], _003__R19 [4], _003__R19 [5], _003__R19 [6], _003__R19 [7], _003__R19 [8] } = 0;
  assign { _003__X19 [0], _003__X19 [1], _003__X19 [2], _003__X19 [3], _003__X19 [4], _003__X19 [5], _003__X19 [6], _003__X19 [7], _003__X19 [8] } = 0;
  assign { _003__C19 [0], _003__C19 [1], _003__C19 [2], _003__C19 [3], _003__C19 [4], _003__C19 [5], _003__C19 [6], _003__C19 [7], _003__C19 [8] } = 0;
  logic [9:0] _003__R20 ;
  logic [9:0] _003__X20 ;
  logic [9:0] _003__C20 ;
  assign _003__R20 [9:9] = _003__R [0:0] ;
  assign _003__X20 [9:9] = _003__X [0:0] ;
  assign _003__C20 [9:9] = _003__C [0:0] ;
  assign FpMul_6U_10U_else_2_else_if_if_acc_1_itm_5_1 = FpMul_6U_10U_else_2_else_if_if_acc_1_nl[5];
  assign { FpMul_6U_10U_else_2_else_if_if_acc_1_nl_R1 [0], FpMul_6U_10U_else_2_else_if_if_acc_1_nl_R1 [1], FpMul_6U_10U_else_2_else_if_if_acc_1_nl_R1 [2], FpMul_6U_10U_else_2_else_if_if_acc_1_nl_R1 [3], FpMul_6U_10U_else_2_else_if_if_acc_1_nl_R1 [4] } = 0;
  assign { FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X1 [0], FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X1 [1], FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X1 [2], FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X1 [3], FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X1 [4] } = 0;
  assign { FpMul_6U_10U_else_2_else_if_if_acc_1_nl_C1 [0], FpMul_6U_10U_else_2_else_if_if_acc_1_nl_C1 [1], FpMul_6U_10U_else_2_else_if_if_acc_1_nl_C1 [2], FpMul_6U_10U_else_2_else_if_if_acc_1_nl_C1 [3], FpMul_6U_10U_else_2_else_if_if_acc_1_nl_C1 [4] } = 0;
  logic [5:0] FpMul_6U_10U_else_2_else_if_if_acc_1_nl_C2 ;
  logic [5:0] FpMul_6U_10U_else_2_else_if_if_acc_1_nl_R2 ;
  logic [5:0] FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X2 ;
  assign FpMul_6U_10U_else_2_else_if_if_acc_1_itm_5_1_T = FpMul_6U_10U_else_2_else_if_if_acc_1_nl_T [5] ;
  assign FpMul_6U_10U_else_2_else_if_if_acc_1_nl_C2 [5] = FpMul_6U_10U_else_2_else_if_if_acc_1_itm_5_1_C ;
  assign FpMul_6U_10U_else_2_else_if_if_acc_1_nl_R2 [5] = FpMul_6U_10U_else_2_else_if_if_acc_1_itm_5_1_R ;
  assign FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X2 [5] = FpMul_6U_10U_else_2_else_if_if_acc_1_itm_5_1_X ;
  assign FpMul_6U_10U_else_2_else_if_if_acc_1_itm_5_1_S = FpMul_6U_10U_else_2_else_if_if_acc_1_nl_S ;
  assign FpMul_6U_10U_else_2_if_acc_itm_6_1 = FpMul_6U_10U_else_2_if_acc_nl[6];
  assign { FpMul_6U_10U_else_2_if_acc_nl_R5 [0], FpMul_6U_10U_else_2_if_acc_nl_R5 [1], FpMul_6U_10U_else_2_if_acc_nl_R5 [2], FpMul_6U_10U_else_2_if_acc_nl_R5 [3], FpMul_6U_10U_else_2_if_acc_nl_R5 [4], FpMul_6U_10U_else_2_if_acc_nl_R5 [5] } = 0;
  assign { FpMul_6U_10U_else_2_if_acc_nl_X5 [0], FpMul_6U_10U_else_2_if_acc_nl_X5 [1], FpMul_6U_10U_else_2_if_acc_nl_X5 [2], FpMul_6U_10U_else_2_if_acc_nl_X5 [3], FpMul_6U_10U_else_2_if_acc_nl_X5 [4], FpMul_6U_10U_else_2_if_acc_nl_X5 [5] } = 0;
  assign { FpMul_6U_10U_else_2_if_acc_nl_C5 [0], FpMul_6U_10U_else_2_if_acc_nl_C5 [1], FpMul_6U_10U_else_2_if_acc_nl_C5 [2], FpMul_6U_10U_else_2_if_acc_nl_C5 [3], FpMul_6U_10U_else_2_if_acc_nl_C5 [4], FpMul_6U_10U_else_2_if_acc_nl_C5 [5] } = 0;
  logic [6:0] FpMul_6U_10U_else_2_if_acc_nl_C6 ;
  logic [6:0] FpMul_6U_10U_else_2_if_acc_nl_R6 ;
  logic [6:0] FpMul_6U_10U_else_2_if_acc_nl_X6 ;
  assign FpMul_6U_10U_else_2_if_acc_itm_6_1_T = FpMul_6U_10U_else_2_if_acc_nl_T [6] ;
  assign FpMul_6U_10U_else_2_if_acc_nl_C6 [6] = FpMul_6U_10U_else_2_if_acc_itm_6_1_C ;
  assign FpMul_6U_10U_else_2_if_acc_nl_R6 [6] = FpMul_6U_10U_else_2_if_acc_itm_6_1_R ;
  assign FpMul_6U_10U_else_2_if_acc_nl_X6 [6] = FpMul_6U_10U_else_2_if_acc_itm_6_1_X ;
  assign FpMul_6U_10U_else_2_if_acc_itm_6_1_S = FpMul_6U_10U_else_2_if_acc_nl_S ;
  assign FpMul_6U_10U_oelse_1_acc_itm_7_1 = FpMul_6U_10U_oelse_1_acc_nl[7];
  assign { FpMul_6U_10U_oelse_1_acc_nl_R4 [0], FpMul_6U_10U_oelse_1_acc_nl_R4 [1], FpMul_6U_10U_oelse_1_acc_nl_R4 [2], FpMul_6U_10U_oelse_1_acc_nl_R4 [3], FpMul_6U_10U_oelse_1_acc_nl_R4 [4], FpMul_6U_10U_oelse_1_acc_nl_R4 [5], FpMul_6U_10U_oelse_1_acc_nl_R4 [6] } = 0;
  assign { FpMul_6U_10U_oelse_1_acc_nl_X4 [0], FpMul_6U_10U_oelse_1_acc_nl_X4 [1], FpMul_6U_10U_oelse_1_acc_nl_X4 [2], FpMul_6U_10U_oelse_1_acc_nl_X4 [3], FpMul_6U_10U_oelse_1_acc_nl_X4 [4], FpMul_6U_10U_oelse_1_acc_nl_X4 [5], FpMul_6U_10U_oelse_1_acc_nl_X4 [6] } = 0;
  assign { FpMul_6U_10U_oelse_1_acc_nl_C4 [0], FpMul_6U_10U_oelse_1_acc_nl_C4 [1], FpMul_6U_10U_oelse_1_acc_nl_C4 [2], FpMul_6U_10U_oelse_1_acc_nl_C4 [3], FpMul_6U_10U_oelse_1_acc_nl_C4 [4], FpMul_6U_10U_oelse_1_acc_nl_C4 [5], FpMul_6U_10U_oelse_1_acc_nl_C4 [6] } = 0;
  logic [7:0] FpMul_6U_10U_oelse_1_acc_nl_C5 ;
  logic [7:0] FpMul_6U_10U_oelse_1_acc_nl_R5 ;
  logic [7:0] FpMul_6U_10U_oelse_1_acc_nl_X5 ;
  assign FpMul_6U_10U_oelse_1_acc_itm_7_1_T = FpMul_6U_10U_oelse_1_acc_nl_T [7] ;
  assign FpMul_6U_10U_oelse_1_acc_nl_C5 [7] = FpMul_6U_10U_oelse_1_acc_itm_7_1_C ;
  assign FpMul_6U_10U_oelse_1_acc_nl_R5 [7] = FpMul_6U_10U_oelse_1_acc_itm_7_1_R ;
  assign FpMul_6U_10U_oelse_1_acc_nl_X5 [7] = FpMul_6U_10U_oelse_1_acc_itm_7_1_X ;
  assign FpMul_6U_10U_oelse_1_acc_itm_7_1_S = FpMul_6U_10U_oelse_1_acc_nl_S ;
  assign chn_a_rsci_oswt_unreg_pff = or_tmp_68;
  logic [0:0] or_tmp_68_C1 ;
  logic [0:0] or_tmp_68_R1 ;
  logic [0:0] or_tmp_68_X1 ;
  assign chn_a_rsci_oswt_unreg_pff_T = or_tmp_68_T ;
  assign or_tmp_68_C1 = chn_a_rsci_oswt_unreg_pff_C ;
  assign or_tmp_68_R1 = chn_a_rsci_oswt_unreg_pff_R ;
  assign or_tmp_68_X1 = chn_a_rsci_oswt_unreg_pff_X ;
  assign chn_a_rsci_oswt_unreg_pff_S = or_tmp_68_S ;
  assign chn_o_rsci_oswt_unreg = and_dcpl_14;
  logic [0:0] and_dcpl_14_C1 ;
  logic [0:0] and_dcpl_14_R1 ;
  logic [0:0] and_dcpl_14_X1 ;
  assign chn_o_rsci_oswt_unreg_T = and_dcpl_14_T ;
  assign and_dcpl_14_C1 = chn_o_rsci_oswt_unreg_C ;
  assign and_dcpl_14_R1 = chn_o_rsci_oswt_unreg_R ;
  assign and_dcpl_14_X1 = chn_o_rsci_oswt_unreg_X ;
  assign chn_o_rsci_oswt_unreg_S = and_dcpl_14_S ;
  assign nl_FpMantRNE_22U_11U_else_acc_nl[9:0] = FpMantRNE_22U_11U_else_acc_nl;
  logic [9:0] FpMantRNE_22U_11U_else_acc_nl_C1 ;
  logic [9:0] FpMantRNE_22U_11U_else_acc_nl_R1 ;
  logic [9:0] FpMantRNE_22U_11U_else_acc_nl_X1 ;
  assign nl_FpMantRNE_22U_11U_else_acc_nl_T [9:0] = FpMantRNE_22U_11U_else_acc_nl_T ;
  assign FpMantRNE_22U_11U_else_acc_nl_C1 = nl_FpMantRNE_22U_11U_else_acc_nl_C [9:0] ;
  assign FpMantRNE_22U_11U_else_acc_nl_R1 = nl_FpMantRNE_22U_11U_else_acc_nl_R [9:0] ;
  assign FpMantRNE_22U_11U_else_acc_nl_X1 = nl_FpMantRNE_22U_11U_else_acc_nl_X [9:0] ;
  assign nl_FpMantRNE_22U_11U_else_acc_nl_S = FpMantRNE_22U_11U_else_acc_nl_S ;
  assign nl_FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1[5:0] = FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1;
  logic [5:0] FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_C2 ;
  logic [5:0] FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_R2 ;
  logic [5:0] FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_X2 ;
  assign nl_FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_T [5:0] = FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_T ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_C2 = nl_FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_C [5:0] ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_R2 = nl_FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_R [5:0] ;
  assign FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_X2 = nl_FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_X [5:0] ;
  assign nl_FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_S = FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_S ;
  assign nl_FpMul_6U_10U_else_2_acc_1_nl[6:0] = FpMul_6U_10U_else_2_acc_1_nl;
  assign { FpMul_6U_10U_else_2_acc_1_nl_R0 [0] } = 0;
  assign { FpMul_6U_10U_else_2_acc_1_nl_X0 [0] } = 0;
  assign { FpMul_6U_10U_else_2_acc_1_nl_C0 [0] } = 0;
  logic [6:0] FpMul_6U_10U_else_2_acc_1_nl_C1 ;
  logic [6:0] FpMul_6U_10U_else_2_acc_1_nl_R1 ;
  logic [6:0] FpMul_6U_10U_else_2_acc_1_nl_X1 ;
  assign nl_FpMul_6U_10U_else_2_acc_1_nl_T [6:0] = FpMul_6U_10U_else_2_acc_1_nl_T ;
  assign FpMul_6U_10U_else_2_acc_1_nl_C1 = nl_FpMul_6U_10U_else_2_acc_1_nl_C [6:0] ;
  assign FpMul_6U_10U_else_2_acc_1_nl_R1 = nl_FpMul_6U_10U_else_2_acc_1_nl_R [6:0] ;
  assign FpMul_6U_10U_else_2_acc_1_nl_X1 = nl_FpMul_6U_10U_else_2_acc_1_nl_X [6:0] ;
  assign nl_FpMul_6U_10U_else_2_acc_1_nl_S = FpMul_6U_10U_else_2_acc_1_nl_S ;
  assign nl_FpMul_6U_10U_else_2_else_acc_2_nl[5:0] = FpMul_6U_10U_else_2_else_acc_2_nl;
  logic [5:0] FpMul_6U_10U_else_2_else_acc_2_nl_C1 ;
  logic [5:0] FpMul_6U_10U_else_2_else_acc_2_nl_R1 ;
  logic [5:0] FpMul_6U_10U_else_2_else_acc_2_nl_X1 ;
  assign nl_FpMul_6U_10U_else_2_else_acc_2_nl_T [5:0] = FpMul_6U_10U_else_2_else_acc_2_nl_T ;
  assign FpMul_6U_10U_else_2_else_acc_2_nl_C1 = nl_FpMul_6U_10U_else_2_else_acc_2_nl_C [5:0] ;
  assign FpMul_6U_10U_else_2_else_acc_2_nl_R1 = nl_FpMul_6U_10U_else_2_else_acc_2_nl_R [5:0] ;
  assign FpMul_6U_10U_else_2_else_acc_2_nl_X1 = nl_FpMul_6U_10U_else_2_else_acc_2_nl_X [5:0] ;
  assign nl_FpMul_6U_10U_else_2_else_acc_2_nl_S = FpMul_6U_10U_else_2_else_acc_2_nl_S ;
  assign nl_FpMul_6U_10U_else_2_else_if_if_acc_1_nl[5:0] = FpMul_6U_10U_else_2_else_if_if_acc_1_nl;
  assign { FpMul_6U_10U_else_2_else_if_if_acc_1_nl_R2 [0], FpMul_6U_10U_else_2_else_if_if_acc_1_nl_R2 [1], FpMul_6U_10U_else_2_else_if_if_acc_1_nl_R2 [2], FpMul_6U_10U_else_2_else_if_if_acc_1_nl_R2 [3], FpMul_6U_10U_else_2_else_if_if_acc_1_nl_R2 [4] } = 0;
  assign { FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X2 [0], FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X2 [1], FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X2 [2], FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X2 [3], FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X2 [4] } = 0;
  assign { FpMul_6U_10U_else_2_else_if_if_acc_1_nl_C2 [0], FpMul_6U_10U_else_2_else_if_if_acc_1_nl_C2 [1], FpMul_6U_10U_else_2_else_if_if_acc_1_nl_C2 [2], FpMul_6U_10U_else_2_else_if_if_acc_1_nl_C2 [3], FpMul_6U_10U_else_2_else_if_if_acc_1_nl_C2 [4] } = 0;
  logic [5:0] FpMul_6U_10U_else_2_else_if_if_acc_1_nl_C3 ;
  logic [5:0] FpMul_6U_10U_else_2_else_if_if_acc_1_nl_R3 ;
  logic [5:0] FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X3 ;
  assign nl_FpMul_6U_10U_else_2_else_if_if_acc_1_nl_T [5:0] = FpMul_6U_10U_else_2_else_if_if_acc_1_nl_T ;
  assign FpMul_6U_10U_else_2_else_if_if_acc_1_nl_C3 = nl_FpMul_6U_10U_else_2_else_if_if_acc_1_nl_C [5:0] ;
  assign FpMul_6U_10U_else_2_else_if_if_acc_1_nl_R3 = nl_FpMul_6U_10U_else_2_else_if_if_acc_1_nl_R [5:0] ;
  assign FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X3 = nl_FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X [5:0] ;
  assign nl_FpMul_6U_10U_else_2_else_if_if_acc_1_nl_S = FpMul_6U_10U_else_2_else_if_if_acc_1_nl_S ;
  assign nl_FpMul_6U_10U_else_2_else_if_if_acc_nl[5:0] = FpMul_6U_10U_else_2_else_if_if_acc_nl;
  logic [5:0] FpMul_6U_10U_else_2_else_if_if_acc_nl_C1 ;
  logic [5:0] FpMul_6U_10U_else_2_else_if_if_acc_nl_R1 ;
  logic [5:0] FpMul_6U_10U_else_2_else_if_if_acc_nl_X1 ;
  assign nl_FpMul_6U_10U_else_2_else_if_if_acc_nl_T [5:0] = FpMul_6U_10U_else_2_else_if_if_acc_nl_T ;
  assign FpMul_6U_10U_else_2_else_if_if_acc_nl_C1 = nl_FpMul_6U_10U_else_2_else_if_if_acc_nl_C [5:0] ;
  assign FpMul_6U_10U_else_2_else_if_if_acc_nl_R1 = nl_FpMul_6U_10U_else_2_else_if_if_acc_nl_R [5:0] ;
  assign FpMul_6U_10U_else_2_else_if_if_acc_nl_X1 = nl_FpMul_6U_10U_else_2_else_if_if_acc_nl_X [5:0] ;
  assign nl_FpMul_6U_10U_else_2_else_if_if_acc_nl_S = FpMul_6U_10U_else_2_else_if_if_acc_nl_S ;
  assign nl_FpMul_6U_10U_else_2_if_acc_nl[6:0] = FpMul_6U_10U_else_2_if_acc_nl;
  assign { FpMul_6U_10U_else_2_if_acc_nl_R6 [0], FpMul_6U_10U_else_2_if_acc_nl_R6 [1], FpMul_6U_10U_else_2_if_acc_nl_R6 [2], FpMul_6U_10U_else_2_if_acc_nl_R6 [3], FpMul_6U_10U_else_2_if_acc_nl_R6 [4], FpMul_6U_10U_else_2_if_acc_nl_R6 [5] } = 0;
  assign { FpMul_6U_10U_else_2_if_acc_nl_X6 [0], FpMul_6U_10U_else_2_if_acc_nl_X6 [1], FpMul_6U_10U_else_2_if_acc_nl_X6 [2], FpMul_6U_10U_else_2_if_acc_nl_X6 [3], FpMul_6U_10U_else_2_if_acc_nl_X6 [4], FpMul_6U_10U_else_2_if_acc_nl_X6 [5] } = 0;
  assign { FpMul_6U_10U_else_2_if_acc_nl_C6 [0], FpMul_6U_10U_else_2_if_acc_nl_C6 [1], FpMul_6U_10U_else_2_if_acc_nl_C6 [2], FpMul_6U_10U_else_2_if_acc_nl_C6 [3], FpMul_6U_10U_else_2_if_acc_nl_C6 [4], FpMul_6U_10U_else_2_if_acc_nl_C6 [5] } = 0;
  logic [6:0] FpMul_6U_10U_else_2_if_acc_nl_C7 ;
  logic [6:0] FpMul_6U_10U_else_2_if_acc_nl_R7 ;
  logic [6:0] FpMul_6U_10U_else_2_if_acc_nl_X7 ;
  assign nl_FpMul_6U_10U_else_2_if_acc_nl_T [6:0] = FpMul_6U_10U_else_2_if_acc_nl_T ;
  assign FpMul_6U_10U_else_2_if_acc_nl_C7 = nl_FpMul_6U_10U_else_2_if_acc_nl_C [6:0] ;
  assign FpMul_6U_10U_else_2_if_acc_nl_R7 = nl_FpMul_6U_10U_else_2_if_acc_nl_R [6:0] ;
  assign FpMul_6U_10U_else_2_if_acc_nl_X7 = nl_FpMul_6U_10U_else_2_if_acc_nl_X [6:0] ;
  assign nl_FpMul_6U_10U_else_2_if_acc_nl_S = FpMul_6U_10U_else_2_if_acc_nl_S ;
  assign nl_FpMul_6U_10U_oelse_1_acc_1_nl[6:0] = FpMul_6U_10U_oelse_1_acc_1_nl;
  logic [6:0] FpMul_6U_10U_oelse_1_acc_1_nl_C2 ;
  logic [6:0] FpMul_6U_10U_oelse_1_acc_1_nl_R2 ;
  logic [6:0] FpMul_6U_10U_oelse_1_acc_1_nl_X2 ;
  assign nl_FpMul_6U_10U_oelse_1_acc_1_nl_T [6:0] = FpMul_6U_10U_oelse_1_acc_1_nl_T ;
  assign FpMul_6U_10U_oelse_1_acc_1_nl_C2 = nl_FpMul_6U_10U_oelse_1_acc_1_nl_C [6:0] ;
  assign FpMul_6U_10U_oelse_1_acc_1_nl_R2 = nl_FpMul_6U_10U_oelse_1_acc_1_nl_R [6:0] ;
  assign FpMul_6U_10U_oelse_1_acc_1_nl_X2 = nl_FpMul_6U_10U_oelse_1_acc_1_nl_X [6:0] ;
  assign nl_FpMul_6U_10U_oelse_1_acc_1_nl_S = FpMul_6U_10U_oelse_1_acc_1_nl_S ;
  assign nl_FpMul_6U_10U_oelse_1_acc_nl[7:0] = FpMul_6U_10U_oelse_1_acc_nl;
  assign { FpMul_6U_10U_oelse_1_acc_nl_R5 [0], FpMul_6U_10U_oelse_1_acc_nl_R5 [1], FpMul_6U_10U_oelse_1_acc_nl_R5 [2], FpMul_6U_10U_oelse_1_acc_nl_R5 [3], FpMul_6U_10U_oelse_1_acc_nl_R5 [4], FpMul_6U_10U_oelse_1_acc_nl_R5 [5], FpMul_6U_10U_oelse_1_acc_nl_R5 [6] } = 0;
  assign { FpMul_6U_10U_oelse_1_acc_nl_X5 [0], FpMul_6U_10U_oelse_1_acc_nl_X5 [1], FpMul_6U_10U_oelse_1_acc_nl_X5 [2], FpMul_6U_10U_oelse_1_acc_nl_X5 [3], FpMul_6U_10U_oelse_1_acc_nl_X5 [4], FpMul_6U_10U_oelse_1_acc_nl_X5 [5], FpMul_6U_10U_oelse_1_acc_nl_X5 [6] } = 0;
  assign { FpMul_6U_10U_oelse_1_acc_nl_C5 [0], FpMul_6U_10U_oelse_1_acc_nl_C5 [1], FpMul_6U_10U_oelse_1_acc_nl_C5 [2], FpMul_6U_10U_oelse_1_acc_nl_C5 [3], FpMul_6U_10U_oelse_1_acc_nl_C5 [4], FpMul_6U_10U_oelse_1_acc_nl_C5 [5], FpMul_6U_10U_oelse_1_acc_nl_C5 [6] } = 0;
  logic [7:0] FpMul_6U_10U_oelse_1_acc_nl_C6 ;
  logic [7:0] FpMul_6U_10U_oelse_1_acc_nl_R6 ;
  logic [7:0] FpMul_6U_10U_oelse_1_acc_nl_X6 ;
  assign nl_FpMul_6U_10U_oelse_1_acc_nl_T [7:0] = FpMul_6U_10U_oelse_1_acc_nl_T ;
  assign FpMul_6U_10U_oelse_1_acc_nl_C6 = nl_FpMul_6U_10U_oelse_1_acc_nl_C [7:0] ;
  assign FpMul_6U_10U_oelse_1_acc_nl_R6 = nl_FpMul_6U_10U_oelse_1_acc_nl_R [7:0] ;
  assign FpMul_6U_10U_oelse_1_acc_nl_X6 = nl_FpMul_6U_10U_oelse_1_acc_nl_X [7:0] ;
  assign nl_FpMul_6U_10U_oelse_1_acc_nl_S = FpMul_6U_10U_oelse_1_acc_nl_S ;
  assign nl_HLS_fp17_mul_core_chn_o_rsci_inst_chn_o_rsci_d = { chn_o_rsci_d_16, chn_o_rsci_d_15_10, chn_o_rsci_d_9_0 };
  assign nl_HLS_fp17_mul_core_chn_o_rsci_inst_chn_o_rsci_d_T = {  chn_o_rsci_d_16_T , chn_o_rsci_d_15_10_T , chn_o_rsci_d_9_0_T  };
  logic [13:0] nl_HLS_fp17_mul_core_chn_o_rsci_inst_chn_o_rsci_d_S ;
  assign nl_HLS_fp17_mul_core_chn_o_rsci_inst_chn_o_rsci_d_S = 0 ;
  logic [0:0] chn_o_rsci_d_16_R2 ;
  logic [0:0] chn_o_rsci_d_16_X2 ;
  logic [0:0] chn_o_rsci_d_16_C2 ;
  assign chn_o_rsci_d_16_R2 = nl_HLS_fp17_mul_core_chn_o_rsci_inst_chn_o_rsci_d_R [16:16] ;
  assign chn_o_rsci_d_16_X2 = nl_HLS_fp17_mul_core_chn_o_rsci_inst_chn_o_rsci_d_X [16:16] ;
  assign chn_o_rsci_d_16_C2 = nl_HLS_fp17_mul_core_chn_o_rsci_inst_chn_o_rsci_d_C [16:16] ;
  logic [5:0] chn_o_rsci_d_15_10_R2 ;
  logic [5:0] chn_o_rsci_d_15_10_X2 ;
  logic [5:0] chn_o_rsci_d_15_10_C2 ;
  assign chn_o_rsci_d_15_10_R2 = nl_HLS_fp17_mul_core_chn_o_rsci_inst_chn_o_rsci_d_R [15:10] ;
  assign chn_o_rsci_d_15_10_X2 = nl_HLS_fp17_mul_core_chn_o_rsci_inst_chn_o_rsci_d_X [15:10] ;
  assign chn_o_rsci_d_15_10_C2 = nl_HLS_fp17_mul_core_chn_o_rsci_inst_chn_o_rsci_d_C [15:10] ;
  logic [9:0] chn_o_rsci_d_9_0_R2 ;
  logic [9:0] chn_o_rsci_d_9_0_X2 ;
  logic [9:0] chn_o_rsci_d_9_0_C2 ;
  assign chn_o_rsci_d_9_0_R2 = nl_HLS_fp17_mul_core_chn_o_rsci_inst_chn_o_rsci_d_R [9:0] ;
  assign chn_o_rsci_d_9_0_X2 = nl_HLS_fp17_mul_core_chn_o_rsci_inst_chn_o_rsci_d_X [9:0] ;
  assign chn_o_rsci_d_9_0_C2 = nl_HLS_fp17_mul_core_chn_o_rsci_inst_chn_o_rsci_d_C [9:0] ;
  assign chn_o_rsci_wen_comp_C = ( chn_o_rsci_wen_comp_C0 );
  assign chn_b_rsci_wen_comp_C = ( chn_b_rsci_wen_comp_C0 );
  assign chn_a_rsci_wen_comp_C = ( chn_a_rsci_wen_comp_C0 );
  assign chn_o_rsci_oswt_C = ( chn_o_rsci_oswt_C0 );
  assign chn_o_rsc_vz_C = ( chn_o_rsc_vz_C0 );
  assign chn_b_rsci_oswt_C = ( chn_b_rsci_oswt_C0 );
  assign chn_b_rsc_z_C = ( chn_b_rsc_z_C0 );
  assign chn_b_rsc_vz_C = ( chn_b_rsc_vz_C0 );
  assign nvdla_core_rstn_C = ( nvdla_core_rstn_C0 ) | ( nvdla_core_rstn_C1 ) | ( nvdla_core_rstn_C2 ) | ( nvdla_core_rstn_C3 ) | ( nvdla_core_rstn_C4 );
  assign core_wten_C = ( core_wten_C0 ) | ( core_wten_C1 ) | ( core_wten_C2 );
  assign chn_a_rsci_oswt_C = ( chn_a_rsci_oswt_C0 );
  assign chn_a_rsc_z_C = ( chn_a_rsc_z_C0 );
  assign chn_a_rsc_vz_C = ( chn_a_rsc_vz_C0 );
  assign chn_o_rsci_iswt0_C = ( chn_o_rsci_iswt0_C0 ) | ( chn_o_rsci_iswt0_C1 );
  assign reg_chn_b_rsci_iswt0_cse_C = ( reg_chn_b_rsci_iswt0_cse_C0 ) | ( reg_chn_b_rsci_iswt0_cse_C1 ) | ( reg_chn_b_rsci_iswt0_cse_C2 );
  assign _108__C = ( _108__C0 );
  assign reg_chn_b_rsci_ld_core_psct_cse_C = ( reg_chn_b_rsci_ld_core_psct_cse_C0 ) | ( reg_chn_b_rsci_ld_core_psct_cse_C1 ) | ( reg_chn_b_rsci_ld_core_psct_cse_C2 );
  assign _047__C = ( _047__C0 );
  assign chn_o_rsci_d_16_C = ( chn_o_rsci_d_16_C0 ) | ( chn_o_rsci_d_16_C1 ) | ( chn_o_rsci_d_16_C2 );
  assign chn_o_rsci_d_9_0_C = ( chn_o_rsci_d_9_0_C0 ) | ( chn_o_rsci_d_9_0_C1 ) | ( chn_o_rsci_d_9_0_C2 );
  assign _039__C = ( _039__C0 );
  assign chn_o_and_cse_C = ( chn_o_and_cse_C0 ) | ( chn_o_and_cse_C1 );
  assign FpMul_6U_10U_FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_C = ( FpMul_6U_10U_FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_C0 );
  assign chn_o_rsci_d_15_10_C = ( chn_o_rsci_d_15_10_C0 ) | ( chn_o_rsci_d_15_10_C1 ) | ( chn_o_rsci_d_15_10_C2 );
  assign _042__C = ( _042__C0 );
  assign _049__C = ( _049__C0 );
  assign FpMul_6U_10U_FpMul_6U_10U_and_2_nl_C = ( FpMul_6U_10U_FpMul_6U_10U_and_2_nl_C0 );
  assign FpBitsToFloat_6U_10U_1_and_nl_C = ( FpBitsToFloat_6U_10U_1_and_nl_C0 );
  assign _109__C = ( _109__C0 );
  assign _050__C = ( _050__C0 );
  assign _110__C = ( _110__C0 );
  assign _051__C = ( _051__C0 );
  assign _053__C = ( _053__C0 );
  assign _114__C = ( _114__C0 );
  assign _113__C = ( _113__C0 );
  assign IsNaN_6U_10U_aelse_and_cse_C = ( IsNaN_6U_10U_aelse_and_cse_C0 ) | ( IsNaN_6U_10U_aelse_and_cse_C1 ) | ( IsNaN_6U_10U_aelse_and_cse_C2 );
  assign _115__C = ( _115__C0 );
  assign _055__C = ( _055__C0 );
  assign nl_FpMul_6U_10U_p_expo_sva_5_C = ( nl_FpMul_6U_10U_p_expo_sva_5_C0 );
  assign _056__C = ( _056__C0 );
  assign _041__C = ( _041__C0 );
  assign _060__C = ( _060__C0 );
  assign _061__C = ( _061__C0 );
  assign _062__C = ( _062__C0 );
  assign FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_C = ( FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_C0 ) | ( FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_C1 );
  assign _043__C = ( _043__C0 );
  assign FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_C = ( FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_C0 ) | ( FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_C1 );
  assign _040__C = ( _040__C0 );
  assign FpBitsToFloat_6U_10U_1_and_1_cse_C = ( FpBitsToFloat_6U_10U_1_and_1_cse_C0 ) | ( FpBitsToFloat_6U_10U_1_and_1_cse_C1 );
  assign FpMul_6U_10U_mux_10_itm_4_C = ( FpMul_6U_10U_mux_10_itm_4_C0 ) | ( FpMul_6U_10U_mux_10_itm_4_C1 );
  assign IsNaN_6U_10U_1_aelse_and_cse_C = ( IsNaN_6U_10U_1_aelse_and_cse_C0 ) | ( IsNaN_6U_10U_1_aelse_and_cse_C1 ) | ( IsNaN_6U_10U_1_aelse_and_cse_C2 ) | ( IsNaN_6U_10U_1_aelse_and_cse_C3 );
  assign FpMul_6U_10U_oelse_1_and_1_cse_C = ( FpMul_6U_10U_oelse_1_and_1_cse_C0 ) | ( FpMul_6U_10U_oelse_1_and_1_cse_C1 );
  assign FpMul_6U_10U_p_mant_p1_sva_C = ( FpMul_6U_10U_p_mant_p1_sva_C0 ) | ( FpMul_6U_10U_p_mant_p1_sva_C1 );
  assign _065__C = ( _065__C0 );
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_3_C = ( FpMul_6U_10U_lor_1_lpi_1_dfm_3_C0 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_3_C1 );
  assign _066__C = ( _066__C0 );
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_C = ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_C0 ) | ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_C1 );
  assign _038__C = ( _038__C0 );
  assign _069__C = ( _069__C0 );
  assign FpMul_6U_10U_mux_10_itm_3_C = ( FpMul_6U_10U_mux_10_itm_3_C0 ) | ( FpMul_6U_10U_mux_10_itm_3_C1 );
  assign _176__C = ( _176__C0 );
  assign _071__C = ( _071__C0 );
  assign _072__C = ( _072__C0 );
  assign _073__C = ( _073__C0 );
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_C = ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_C0 ) | ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_C1 );
  assign _074__C = ( _074__C0 );
  assign nor_37_nl_C = ( nor_37_nl_C0 );
  assign mux_12_nl_C = ( mux_12_nl_C0 );
  assign or_25_nl_C = ( or_25_nl_C0 );
  assign and_97_nl_C = ( and_97_nl_C0 );
  assign nor_35_nl_C = ( nor_35_nl_C0 );
  assign mux_16_nl_C = ( mux_16_nl_C0 );
  assign or_35_nl_C = ( or_35_nl_C0 );
  assign _185__C = ( _185__C0 );
  assign and_91_nl_C = ( and_91_nl_C0 );
  assign _002__C = ( _002__C0 );
  assign FpMul_6U_10U_else_2_else_if_if_acc_nl_C = ( FpMul_6U_10U_else_2_else_if_if_acc_nl_C0 ) | ( FpMul_6U_10U_else_2_else_if_if_acc_nl_C1 );
  assign and_62_nl_C = ( and_62_nl_C0 );
  assign nor_40_nl_C = ( nor_40_nl_C0 );
  assign and_93_nl_C = ( and_93_nl_C0 );
  assign and_94_nl_C = ( and_94_nl_C0 );
  assign nor_34_nl_C = ( nor_34_nl_C0 );
  assign mux_22_nl_C = ( mux_22_nl_C0 );
  assign fangyuan7_C = ( fangyuan7_C0 );
  assign FpMantRNE_22U_11U_else_acc_nl_C = ( FpMantRNE_22U_11U_else_acc_nl_C0 ) | ( FpMantRNE_22U_11U_else_acc_nl_C1 );
  assign or_nl_C = ( or_nl_C0 );
  assign mux_37_nl_C = ( mux_37_nl_C0 );
  assign FpMul_6U_10U_nor_nl_C = ( FpMul_6U_10U_nor_nl_C0 );
  assign FpMul_6U_10U_lor_2_lpi_1_dfm_C = ( FpMul_6U_10U_lor_2_lpi_1_dfm_C0 ) | ( FpMul_6U_10U_lor_2_lpi_1_dfm_C1 );
  assign mux_nl_C = ( mux_nl_C0 );
  assign or_tmp_4_C = ( or_tmp_4_C0 ) | ( or_tmp_4_C1 );
  assign mux_1_nl_C = ( mux_1_nl_C0 );
  assign or_2_nl_C = ( or_2_nl_C0 );
  assign nor_43_nl_C = ( nor_43_nl_C0 );
  assign nor_42_cse_C = ( nor_42_cse_C0 );
  assign mux_4_nl_C = ( mux_4_nl_C0 );
  assign nor_41_nl_C = ( nor_41_nl_C0 );
  assign mux_8_nl_C = ( mux_8_nl_C0 );
  assign nor_39_nl_C = ( nor_39_nl_C0 );
  assign or_tmp_16_C = ( or_tmp_16_C0 ) | ( or_tmp_16_C1 ) | ( or_tmp_16_C2 );
  assign mux_tmp_6_C = ( mux_tmp_6_C0 ) | ( mux_tmp_6_C1 ) | ( mux_tmp_6_C2 );
  assign mux_10_nl_C = ( mux_10_nl_C0 );
  assign nor_38_nl_C = ( nor_38_nl_C0 );
  assign mux_18_nl_C = ( mux_18_nl_C0 );
  assign or_tmp_40_C = ( or_tmp_40_C0 ) | ( or_tmp_40_C1 );
  assign mux_19_nl_C = ( mux_19_nl_C0 );
  assign or_38_nl_C = ( or_38_nl_C0 );
  assign mux_25_nl_C = ( mux_25_nl_C0 );
  assign or_tmp_48_C = ( or_tmp_48_C0 ) | ( or_tmp_48_C1 );
  assign mux_27_nl_C = ( mux_27_nl_C0 );
  assign mux_28_nl_C = ( mux_28_nl_C0 );
  assign mux_26_nl_C = ( mux_26_nl_C0 );
  assign mux_30_nl_C = ( mux_30_nl_C0 );
  assign or_tmp_52_C = ( or_tmp_52_C0 ) | ( or_tmp_52_C1 );
  assign nor_33_nl_C = ( nor_33_nl_C0 );
  assign mux_32_nl_C = ( mux_32_nl_C0 );
  assign _001__C = ( _001__C0 );
  assign _035__C = ( _035__C0 );
  assign _032__C = ( _032__C0 );
  assign _036__C = ( _036__C0 );
  assign _031__C = ( _031__C0 );
  assign _030__C = ( _030__C0 );
  assign _029__C = ( _029__C0 );
  assign _037__C = ( _037__C0 );
  assign _033__C = ( _033__C0 );
  assign _012__C = ( _012__C0 );
  assign _028__C = ( _028__C0 );
  assign _016__C = ( _016__C0 );
  assign _025__C = ( _025__C0 );
  assign _034__C = ( _034__C0 );
  assign _020__C = ( _020__C0 );
  assign _022__C = ( _022__C0 );
  assign _008__C = ( _008__C0 );
  assign _013__C = ( _013__C0 );
  assign _007__C = ( _007__C0 );
  assign _006__C = ( _006__C0 );
  assign _017__C = ( _017__C0 );
  assign _019__C = ( _019__C0 );
  assign _027__C = ( _027__C0 );
  assign _026__C = ( _026__C0 );
  assign _011__C = ( _011__C0 );
  assign _015__C = ( _015__C0 );
  assign _021__C = ( _021__C0 );
  assign _014__C = ( _014__C0 );
  assign _010__C = ( _010__C0 );
  assign _018__C = ( _018__C0 );
  assign _024__C = ( _024__C0 );
  assign _023__C = ( _023__C0 );
  assign _009__C = ( _009__C0 );
  assign _141__C = ( _141__C0 );
  assign _140__C = ( _140__C0 );
  assign _202__C = ( _202__C0 );
  assign _201__C = ( _201__C0 );
  assign _200__C = ( _200__C0 );
  assign _091__C = ( _091__C0 );
  assign _139__C = ( _139__C0 );
  assign FpMul_6U_10U_else_2_else_if_if_acc_1_nl_C = ( FpMul_6U_10U_else_2_else_if_if_acc_1_nl_C0 ) | ( FpMul_6U_10U_else_2_else_if_if_acc_1_nl_C1 ) | ( FpMul_6U_10U_else_2_else_if_if_acc_1_nl_C2 ) | ( FpMul_6U_10U_else_2_else_if_if_acc_1_nl_C3 );
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_4_C = ( FpMul_6U_10U_lor_1_lpi_1_dfm_4_C0 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_4_C1 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_4_C2 );
  assign _138__C = ( _138__C0 );
  assign _089__C = ( _089__C0 );
  assign FpMul_6U_10U_is_inf_lpi_1_dfm_2_C = ( FpMul_6U_10U_is_inf_lpi_1_dfm_2_C0 ) | ( FpMul_6U_10U_is_inf_lpi_1_dfm_2_C1 );
  assign _195__C = ( _195__C0 );
  assign _194__C = ( _194__C0 );
  assign _193__C = ( _193__C0 );
  assign _191__C = ( _191__C0 );
  assign _190__C = ( _190__C0 );
  assign _189__C = ( _189__C0 );
  assign _188__C = ( _188__C0 );
  assign _187__C = ( _187__C0 );
  assign _088__C = ( _088__C0 );
  assign _136__C = ( _136__C0 );
  assign _135__C = ( _135__C0 );
  assign _098__C = ( _098__C0 );
  assign _184__C = ( _184__C0 );
  assign _183__C = ( _183__C0 );
  assign IsNaN_6U_10U_1_land_lpi_1_dfm_3_C = ( IsNaN_6U_10U_1_land_lpi_1_dfm_3_C0 ) | ( IsNaN_6U_10U_1_land_lpi_1_dfm_3_C1 ) | ( IsNaN_6U_10U_1_land_lpi_1_dfm_3_C2 ) | ( IsNaN_6U_10U_1_land_lpi_1_dfm_3_C3 ) | ( IsNaN_6U_10U_1_land_lpi_1_dfm_3_C4 ) | ( IsNaN_6U_10U_1_land_lpi_1_dfm_3_C5 );
  assign _133__C = ( _133__C0 );
  assign and_dcpl_28_C = ( and_dcpl_28_C0 ) | ( and_dcpl_28_C1 ) | ( and_dcpl_28_C2 );
  assign _082__C = ( _082__C0 );
  assign _131__C = ( _131__C0 );
  assign _081__C = ( _081__C0 );
  assign _177__C = ( _177__C0 );
  assign _192__C = ( _192__C0 );
  assign _080__C = ( _080__C0 );
  assign _079__C = ( _079__C0 );
  assign _078__C = ( _078__C0 );
  assign _175__C = ( _175__C0 );
  assign _077__C = ( _077__C0 );
  assign _076__C = ( _076__C0 );
  assign nand_7_cse_C = ( nand_7_cse_C0 );
  assign _174__C = ( _174__C0 );
  assign _173__C = ( _173__C0 );
  assign _172__C = ( _172__C0 );
  assign _129__C = ( _129__C0 ) | ( _129__C1 );
  assign _170__C = ( _170__C0 );
  assign _169__C = ( _169__C0 ) | ( _169__C1 ) | ( _169__C2 );
  assign _128__C = ( _128__C0 ) | ( _128__C1 ) | ( _128__C2 );
  assign _167__C = ( _167__C0 );
  assign _166__C = ( _166__C0 );
  assign _165__C = ( _165__C0 );
  assign _127__C = ( _127__C0 ) | ( _127__C1 ) | ( _127__C2 );
  assign _163__C = ( _163__C0 );
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_C = ( FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_C0 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_C1 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_C2 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_C3 );
  assign _162__C = ( _162__C0 );
  assign _161__C = ( _161__C0 );
  assign _126__C = ( _126__C0 );
  assign _125__C = ( _125__C0 );
  assign FpMul_6U_10U_p_mant_p1_mul_tmp_C = ( FpMul_6U_10U_p_mant_p1_mul_tmp_C0 ) | ( FpMul_6U_10U_p_mant_p1_mul_tmp_C1 ) | ( FpMul_6U_10U_p_mant_p1_mul_tmp_C2 ) | ( FpMul_6U_10U_p_mant_p1_mul_tmp_C3 );
  assign _158__C = ( _158__C0 );
  assign _157__C = ( _157__C0 );
  assign nor_cse_C = ( nor_cse_C0 ) | ( nor_cse_C1 ) | ( nor_cse_C2 ) | ( nor_cse_C3 ) | ( nor_cse_C4 );
  assign _123__C = ( _123__C0 );
  assign _155__C = ( _155__C0 );
  assign _154__C = ( _154__C0 );
  assign _153__C = ( _153__C0 );
  assign _151__C = ( _151__C0 );
  assign and_45_rgt_C = ( and_45_rgt_C0 ) | ( and_45_rgt_C1 );
  assign _067__C = ( _067__C0 );
  assign FpMul_6U_10U_oelse_1_acc_nl_C = ( FpMul_6U_10U_oelse_1_acc_nl_C0 ) | ( FpMul_6U_10U_oelse_1_acc_nl_C1 ) | ( FpMul_6U_10U_oelse_1_acc_nl_C2 ) | ( FpMul_6U_10U_oelse_1_acc_nl_C3 ) | ( FpMul_6U_10U_oelse_1_acc_nl_C4 ) | ( FpMul_6U_10U_oelse_1_acc_nl_C5 ) | ( FpMul_6U_10U_oelse_1_acc_nl_C6 );
  assign FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_C = ( FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_C0 ) | ( FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_C1 ) | ( FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_C2 ) | ( FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_C3 ) | ( FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_C4 );
  assign _118__C = ( _118__C0 ) | ( _118__C1 );
  assign _148__C = ( _148__C0 ) | ( _148__C1 );
  assign and_40_rgt_C = ( and_40_rgt_C0 ) | ( and_40_rgt_C1 );
  assign _058__C = ( _058__C0 );
  assign _054__C = ( _054__C0 );
  assign IsNaN_6U_10U_nor_tmp_C = ( IsNaN_6U_10U_nor_tmp_C0 ) | ( IsNaN_6U_10U_nor_tmp_C1 ) | ( IsNaN_6U_10U_nor_tmp_C2 );
  assign or_tmp_68_C = ( or_tmp_68_C0 ) | ( or_tmp_68_C1 );
  assign _048__C = ( _048__C0 );
  assign IsNaN_6U_10U_1_nor_tmp_C = ( IsNaN_6U_10U_1_nor_tmp_C0 ) | ( IsNaN_6U_10U_1_nor_tmp_C1 );
  assign _094__C = ( _094__C0 );
  assign _092__C = ( _092__C0 );
  assign _203__C = ( _203__C0 );
  assign _199__C = ( _199__C0 );
  assign _103__C = ( _103__C0 );
  assign _197__C = ( _197__C0 );
  assign FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_C = ( FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_C0 ) | ( FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_C1 ) | ( FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_C2 ) | ( FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_C3 );
  assign _102__C = ( _102__C0 );
  assign _101__C = ( _101__C0 );
  assign _087__C = ( _087__C0 );
  assign mux_17_nl_C = ( mux_17_nl_C0 );
  assign _182__C = ( _182__C0 );
  assign or_tmp_32_C = ( or_tmp_32_C0 ) | ( or_tmp_32_C1 );
  assign _180__C = ( _180__C0 );
  assign nor_tmp_11_C = ( nor_tmp_11_C0 ) | ( nor_tmp_11_C1 ) | ( nor_tmp_11_C2 );
  assign _179__C = ( _179__C0 ) | ( _179__C1 );
  assign _178__C = ( _178__C0 );
  assign mux_31_nl_C = ( mux_31_nl_C0 );
  assign or_tmp_49_C = ( or_tmp_49_C0 ) | ( or_tmp_49_C1 ) | ( or_tmp_49_C2 );
  assign FpMul_6U_10U_else_2_if_acc_nl_C = ( FpMul_6U_10U_else_2_if_acc_nl_C0 ) | ( FpMul_6U_10U_else_2_if_acc_nl_C1 ) | ( FpMul_6U_10U_else_2_if_acc_nl_C2 ) | ( FpMul_6U_10U_else_2_if_acc_nl_C3 ) | ( FpMul_6U_10U_else_2_if_acc_nl_C4 ) | ( FpMul_6U_10U_else_2_if_acc_nl_C5 ) | ( FpMul_6U_10U_else_2_if_acc_nl_C6 ) | ( FpMul_6U_10U_else_2_if_acc_nl_C7 );
  assign _171__C = ( _171__C0 );
  assign _168__C = ( _168__C0 );
  assign _164__C = ( _164__C0 );
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_C = ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_C0 ) | ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_C1 );
  assign _160__C = ( _160__C0 );
  assign _075__C = ( _075__C0 );
  assign IsNaN_6U_10U_1_land_lpi_1_dfm_4_C = ( IsNaN_6U_10U_1_land_lpi_1_dfm_4_C0 ) | ( IsNaN_6U_10U_1_land_lpi_1_dfm_4_C1 ) | ( IsNaN_6U_10U_1_land_lpi_1_dfm_4_C2 );
  assign _005__C = ( _005__C0 );
  assign _004__C = ( _004__C0 );
  assign _156__C = ( _156__C0 );
  assign mux_29_nl_C = ( mux_29_nl_C0 );
  assign _149__C = ( _149__C0 );
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_C = ( FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_C0 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_C1 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_C2 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_C3 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_C4 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_C5 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_C6 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_C7 );
  assign main_stage_v_2_mx0c1_C = ( main_stage_v_2_mx0c1_C0 ) | ( main_stage_v_2_mx0c1_C1 );
  assign _145__C = ( _145__C0 );
  assign mux_2_nl_C = ( mux_2_nl_C0 );
  assign and_dcpl_7_C = ( and_dcpl_7_C0 ) | ( and_dcpl_7_C1 ) | ( and_dcpl_7_C2 );
  assign main_stage_v_1_mx0c1_C = ( main_stage_v_1_mx0c1_C0 ) | ( main_stage_v_1_mx0c1_C1 );
  assign and_dcpl_15_C = ( and_dcpl_15_C0 ) | ( and_dcpl_15_C1 );
  assign _046__C = ( _046__C0 );
  assign FpMul_6U_10U_o_expo_lpi_1_dfm_C = ( FpMul_6U_10U_o_expo_lpi_1_dfm_C0 ) | ( FpMul_6U_10U_o_expo_lpi_1_dfm_C1 );
  assign fangyuan6_C = ( fangyuan6_C0 );
  assign fangyuan5_C = ( fangyuan5_C0 );
  assign _093__C = ( _093__C0 );
  assign mux_tmp_21_C = ( mux_tmp_21_C0 ) | ( mux_tmp_21_C1 ) | ( mux_tmp_21_C2 );
  assign IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_C = ( IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_C0 ) | ( IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_C1 );
  assign or_tmp_7_C = ( or_tmp_7_C0 ) | ( or_tmp_7_C1 ) | ( or_tmp_7_C2 );
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_C = ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_C0 ) | ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_C1 );
  assign _198__C = ( _198__C0 );
  assign _137__C = ( _137__C0 ) | ( _137__C1 ) | ( _137__C2 );
  assign _090__C = ( _090__C0 );
  assign FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_C = ( FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_C0 ) | ( FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_C1 );
  assign FpMantRNE_22U_11U_else_and_svs_C = ( FpMantRNE_22U_11U_else_and_svs_C0 ) | ( FpMantRNE_22U_11U_else_and_svs_C1 ) | ( FpMantRNE_22U_11U_else_and_svs_C2 ) | ( FpMantRNE_22U_11U_else_and_svs_C3 );
  assign _003__C = ( _003__C0 ) | ( _003__C1 ) | ( _003__C2 ) | ( _003__C3 ) | ( _003__C4 ) | ( _003__C5 ) | ( _003__C6 ) | ( _003__C7 ) | ( _003__C8 ) | ( _003__C9 ) | ( _003__C10 ) | ( _003__C11 ) | ( _003__C12 ) | ( _003__C13 ) | ( _003__C14 ) | ( _003__C15 ) | ( _003__C16 ) | ( _003__C17 ) | ( _003__C18 ) | ( _003__C19 ) | ( _003__C20 );
  assign _196__C = ( _196__C0 );
  assign _097__C = ( _097__C0 );
  assign FpMul_6U_10U_p_mant_p1_sva_2_C = ( FpMul_6U_10U_p_mant_p1_sva_2_C0 ) | ( FpMul_6U_10U_p_mant_p1_sva_2_C1 ) | ( FpMul_6U_10U_p_mant_p1_sva_2_C2 ) | ( FpMul_6U_10U_p_mant_p1_sva_2_C3 ) | ( FpMul_6U_10U_p_mant_p1_sva_2_C4 ) | ( FpMul_6U_10U_p_mant_p1_sva_2_C5 ) | ( FpMul_6U_10U_p_mant_p1_sva_2_C6 );
  assign mux_36_nl_C = ( mux_36_nl_C0 );
  assign mux_35_nl_C = ( mux_35_nl_C0 );
  assign or_tmp_56_C = ( or_tmp_56_C0 ) | ( or_tmp_56_C1 ) | ( or_tmp_56_C2 );
  assign nand_cse_C = ( nand_cse_C0 ) | ( nand_cse_C1 ) | ( nand_cse_C2 );
  assign _086__C = ( _086__C0 );
  assign _100__C = ( _100__C0 ) | ( _100__C1 ) | ( _100__C2 );
  assign _085__C = ( _085__C0 );
  assign _095__C = ( _095__C0 ) | ( _095__C1 ) | ( _095__C2 );
  assign _186__C = ( _186__C0 );
  assign _099__C = ( _099__C0 ) | ( _099__C1 ) | ( _099__C2 ) | ( _099__C3 );
  assign _084__C = ( _084__C0 );
  assign _096__C = ( _096__C0 ) | ( _096__C1 ) | ( _096__C2 );
  assign or_68_cse_C = ( or_68_cse_C0 ) | ( or_68_cse_C1 ) | ( or_68_cse_C2 ) | ( or_68_cse_C3 ) | ( or_68_cse_C4 ) | ( or_68_cse_C5 ) | ( or_68_cse_C6 );
  assign _134__C = ( _134__C0 );
  assign mux_13_nl_C = ( mux_13_nl_C0 );
  assign _083__C = ( _083__C0 );
  assign _181__C = ( _181__C0 );
  assign _132__C = ( _132__C0 );
  assign FpMul_6U_10U_or_2_cse_C = ( FpMul_6U_10U_or_2_cse_C0 ) | ( FpMul_6U_10U_or_2_cse_C1 ) | ( FpMul_6U_10U_or_2_cse_C2 ) | ( FpMul_6U_10U_or_2_cse_C3 );
  assign or_65_cse_C = ( or_65_cse_C0 ) | ( or_65_cse_C1 ) | ( or_65_cse_C2 );
  assign _130__C = ( _130__C0 );
  assign fangyuan4_C = ( fangyuan4_C0 );
  assign FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_C = ( FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_C0 ) | ( FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_C1 ) | ( FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_C2 ) | ( FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_C3 ) | ( FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_C4 ) | ( FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_C5 );
  assign fangyuan3_C = ( fangyuan3_C0 );
  assign FpMul_6U_10U_or_1_nl_C = ( FpMul_6U_10U_or_1_nl_C0 ) | ( FpMul_6U_10U_or_1_nl_C1 ) | ( FpMul_6U_10U_or_1_nl_C2 ) | ( FpMul_6U_10U_or_1_nl_C3 ) | ( FpMul_6U_10U_or_1_nl_C4 ) | ( FpMul_6U_10U_or_1_nl_C5 );
  assign fangyuan2_C = ( fangyuan2_C0 );
  assign FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_C = ( FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_C0 ) | ( FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_C1 ) | ( FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_C2 );
  assign FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_C = ( FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_C0 ) | ( FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_C1 ) | ( FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_C2 ) | ( FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_C3 ) | ( FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_C4 ) | ( FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_C5 );
  assign and_52_rgt_C = ( and_52_rgt_C0 ) | ( and_52_rgt_C1 );
  assign and_60_rgt_C = ( and_60_rgt_C0 ) | ( and_60_rgt_C1 );
  assign and_61_rgt_C = ( and_61_rgt_C0 ) | ( and_61_rgt_C1 );
  assign FpMul_6U_10U_xor_1_nl_C = ( FpMul_6U_10U_xor_1_nl_C0 );
  assign _159__C = ( _159__C0 );
  assign chn_o_rsci_d_15_10_mx0c1_C = ( chn_o_rsci_d_15_10_mx0c1_C0 ) | ( chn_o_rsci_d_15_10_mx0c1_C1 );
  assign _124__C = ( _124__C0 );
  assign _122__C = ( _122__C0 );
  assign mux_33_nl_C = ( mux_33_nl_C0 );
  assign _111__C = ( _111__C0 );
  assign _121__C = ( _121__C0 );
  assign mux_tmp_3_C = ( mux_tmp_3_C0 ) | ( mux_tmp_3_C1 );
  assign _070__C = ( _070__C0 );
  assign _152__C = ( _152__C0 );
  assign _068__C = ( _068__C0 );
  assign _150__C = ( _150__C0 );
  assign _120__C = ( _120__C0 );
  assign mux_tmp_23_C = ( mux_tmp_23_C0 ) | ( mux_tmp_23_C1 );
  assign mux_20_nl_C = ( mux_20_nl_C0 );
  assign _064__C = ( _064__C0 );
  assign _119__C = ( _119__C0 );
  assign _063__C = ( _063__C0 );
  assign _117__C = ( _117__C0 );
  assign mux_11_nl_C = ( mux_11_nl_C0 );
  assign mux_9_nl_C = ( mux_9_nl_C0 );
  assign mux_tmp_7_C = ( mux_tmp_7_C0 ) | ( mux_tmp_7_C1 );
  assign _059__C = ( _059__C0 );
  assign _147__C = ( _147__C0 );
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_C = ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_C0 ) | ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_C1 ) | ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_C2 ) | ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_C3 ) | ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_C4 ) | ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_C5 );
  assign _057__C = ( _057__C0 );
  assign _116__C = ( _116__C0 );
  assign mux_5_nl_C = ( mux_5_nl_C0 );
  assign _146__C = ( _146__C0 );
  assign _112__C = ( _112__C0 );
  assign _052__C = ( _052__C0 ) | ( _052__C1 ) | ( _052__C2 ) | ( _052__C3 ) | ( _052__C4 ) | ( _052__C5 ) | ( _052__C6 ) | ( _052__C7 ) | ( _052__C8 ) | ( _052__C9 );
  assign _144__C = ( _144__C0 );
  assign _143__C = ( _143__C0 );
  assign _142__C = ( _142__C0 );
  assign IsNaN_6U_10U_land_lpi_1_dfm_4_C = ( IsNaN_6U_10U_land_lpi_1_dfm_4_C0 ) | ( IsNaN_6U_10U_land_lpi_1_dfm_4_C1 ) | ( IsNaN_6U_10U_land_lpi_1_dfm_4_C2 ) | ( IsNaN_6U_10U_land_lpi_1_dfm_4_C3 );
  assign or_tmp_62_C = ( or_tmp_62_C0 ) | ( or_tmp_62_C1 );
  assign core_wen_C = ( core_wen_C0 ) | ( core_wen_C1 ) | ( core_wen_C2 ) | ( core_wen_C3 ) | ( core_wen_C4 ) | ( core_wen_C5 ) | ( core_wen_C6 ) | ( core_wen_C7 ) | ( core_wen_C8 ) | ( core_wen_C9 ) | ( core_wen_C10 ) | ( core_wen_C11 ) | ( core_wen_C12 ) | ( core_wen_C13 ) | ( core_wen_C14 ) | ( core_wen_C15 ) | ( core_wen_C16 ) | ( core_wen_C17 ) | ( core_wen_C18 );
  assign _107__C = ( _107__C0 );
  assign _045__C = ( _045__C0 );
  assign _000__C = ( _000__C0 ) | ( _000__C1 ) | ( _000__C2 ) | ( _000__C3 ) | ( _000__C4 ) | ( _000__C5 ) | ( _000__C6 ) | ( _000__C7 ) | ( _000__C8 );
  assign _044__C = ( _044__C0 );
  assign main_stage_v_1_C = ( main_stage_v_1_C0 ) | ( main_stage_v_1_C1 ) | ( main_stage_v_1_C2 ) | ( main_stage_v_1_C3 ) | ( main_stage_v_1_C4 ) | ( main_stage_v_1_C5 ) | ( main_stage_v_1_C6 ) | ( main_stage_v_1_C7 ) | ( main_stage_v_1_C8 ) | ( main_stage_v_1_C9 );
  assign nand_6_cse_C = ( nand_6_cse_C0 ) | ( nand_6_cse_C1 ) | ( nand_6_cse_C2 ) | ( nand_6_cse_C3 ) | ( nand_6_cse_C4 ) | ( nand_6_cse_C5 ) | ( nand_6_cse_C6 ) | ( nand_6_cse_C7 );
  assign _106__C = ( _106__C0 );
  assign and_dcpl_13_C = ( and_dcpl_13_C0 ) | ( and_dcpl_13_C1 ) | ( and_dcpl_13_C2 ) | ( and_dcpl_13_C3 );
  assign fsm_output_C = ( fsm_output_C0 ) | ( fsm_output_C1 ) | ( fsm_output_C2 ) | ( fsm_output_C3 );
  assign main_stage_en_1_C = ( main_stage_en_1_C0 ) | ( main_stage_en_1_C1 ) | ( main_stage_en_1_C2 );
  assign nor_tmp_1_C = ( nor_tmp_1_C0 ) | ( nor_tmp_1_C1 ) | ( nor_tmp_1_C2 ) | ( nor_tmp_1_C3 ) | ( nor_tmp_1_C4 );
  assign chn_a_rsci_bawt_C = ( chn_a_rsci_bawt_C0 ) | ( chn_a_rsci_bawt_C1 );
  assign chn_b_rsci_bawt_C = ( chn_b_rsci_bawt_C0 ) | ( chn_b_rsci_bawt_C1 );
  assign IsNaN_6U_10U_land_lpi_1_dfm_st_3_C = ( IsNaN_6U_10U_land_lpi_1_dfm_st_3_C0 ) | ( IsNaN_6U_10U_land_lpi_1_dfm_st_3_C1 ) | ( IsNaN_6U_10U_land_lpi_1_dfm_st_3_C2 ) | ( IsNaN_6U_10U_land_lpi_1_dfm_st_3_C3 ) | ( IsNaN_6U_10U_land_lpi_1_dfm_st_3_C4 ) | ( IsNaN_6U_10U_land_lpi_1_dfm_st_3_C5 ) | ( IsNaN_6U_10U_land_lpi_1_dfm_st_3_C6 ) | ( IsNaN_6U_10U_land_lpi_1_dfm_st_3_C7 ) | ( IsNaN_6U_10U_land_lpi_1_dfm_st_3_C8 );
  assign _105__C = ( _105__C0 ) | ( _105__C1 ) | ( _105__C2 ) | ( _105__C3 ) | ( _105__C4 ) | ( _105__C5 );
  assign and_dcpl_14_C = ( and_dcpl_14_C0 ) | ( and_dcpl_14_C1 );
  assign chn_o_rsci_bawt_C = ( chn_o_rsci_bawt_C0 ) | ( chn_o_rsci_bawt_C1 ) | ( chn_o_rsci_bawt_C2 ) | ( chn_o_rsci_bawt_C3 ) | ( chn_o_rsci_bawt_C4 ) | ( chn_o_rsci_bawt_C5 ) | ( chn_o_rsci_bawt_C6 ) | ( chn_o_rsci_bawt_C7 ) | ( chn_o_rsci_bawt_C8 ) | ( chn_o_rsci_bawt_C9 );
  assign main_stage_v_2_C = ( main_stage_v_2_C0 ) | ( main_stage_v_2_C1 ) | ( main_stage_v_2_C2 ) | ( main_stage_v_2_C3 ) | ( main_stage_v_2_C4 ) | ( main_stage_v_2_C5 );
  assign or_5_cse_C = ( or_5_cse_C0 ) | ( or_5_cse_C1 ) | ( or_5_cse_C2 ) | ( or_5_cse_C3 ) | ( or_5_cse_C4 ) | ( or_5_cse_C5 ) | ( or_5_cse_C6 ) | ( or_5_cse_C7 ) | ( or_5_cse_C8 ) | ( or_5_cse_C9 ) | ( or_5_cse_C10 ) | ( or_5_cse_C11 ) | ( or_5_cse_C12 ) | ( or_5_cse_C13 ) | ( or_5_cse_C14 ) | ( or_5_cse_C15 ) | ( or_5_cse_C16 ) | ( or_5_cse_C17 ) | ( or_5_cse_C18 ) | ( or_5_cse_C19 );
  assign _104__C = ( _104__C0 );
  assign reg_chn_o_rsci_ld_core_psct_cse_C = ( reg_chn_o_rsci_ld_core_psct_cse_C0 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C1 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C2 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C3 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C4 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C5 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C6 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C7 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C8 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C9 );
  assign FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_C = ( FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_C0 ) | ( FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_C1 );
  assign fangyuan1_C = ( fangyuan1_C0 );
  assign FpMul_6U_10U_p_expo_sva_5_C = ( FpMul_6U_10U_p_expo_sva_5_C0 ) | ( FpMul_6U_10U_p_expo_sva_5_C1 ) | ( FpMul_6U_10U_p_expo_sva_5_C2 ) | ( FpMul_6U_10U_p_expo_sva_5_C3 );
  assign fangyuan0_C = ( fangyuan0_C0 );
  assign FpMul_6U_10U_oelse_1_acc_1_nl_C = ( FpMul_6U_10U_oelse_1_acc_1_nl_C0 ) | ( FpMul_6U_10U_oelse_1_acc_1_nl_C1 ) | ( FpMul_6U_10U_oelse_1_acc_1_nl_C2 );
  assign FpMul_6U_10U_else_2_acc_1_nl_C = ( FpMul_6U_10U_else_2_acc_1_nl_C0 ) | ( FpMul_6U_10U_else_2_acc_1_nl_C1 );
  assign chn_b_rsci_d_mxwt_C = ( chn_b_rsci_d_mxwt_C0 ) | ( chn_b_rsci_d_mxwt_C1 ) | ( chn_b_rsci_d_mxwt_C2 ) | ( chn_b_rsci_d_mxwt_C3 ) | ( chn_b_rsci_d_mxwt_C4 );
  assign chn_a_rsci_d_mxwt_C = ( chn_a_rsci_d_mxwt_C0 ) | ( chn_a_rsci_d_mxwt_C1 ) | ( chn_a_rsci_d_mxwt_C2 ) | ( chn_a_rsci_d_mxwt_C3 ) | ( chn_a_rsci_d_mxwt_C4 ) | ( chn_a_rsci_d_mxwt_C5 );
  assign FpMul_6U_10U_ua_sva_1_15_0_1_C = ( FpMul_6U_10U_ua_sva_1_15_0_1_C0 ) | ( FpMul_6U_10U_ua_sva_1_15_0_1_C1 ) | ( FpMul_6U_10U_ua_sva_1_15_0_1_C2 );
  assign FpMul_6U_10U_else_2_else_acc_2_nl_C = ( FpMul_6U_10U_else_2_else_acc_2_nl_C0 ) | ( FpMul_6U_10U_else_2_else_acc_2_nl_C1 );
  assign FpMul_6U_10U_ub_sva_1_15_0_1_C = ( FpMul_6U_10U_ub_sva_1_15_0_1_C0 ) | ( FpMul_6U_10U_ub_sva_1_15_0_1_C1 ) | ( FpMul_6U_10U_ub_sva_1_15_0_1_C2 );
  assign FpMantRNE_22U_11U_else_carry_sva_C = ( FpMantRNE_22U_11U_else_carry_sva_C0 ) | ( FpMantRNE_22U_11U_else_carry_sva_C1 );
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C = ( FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C0 ) | ( FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C1 ) | ( FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C2 );
  assign chn_o_rsci_oswt_unreg_C = ( chn_o_rsci_oswt_unreg_C0 );
  assign chn_o_rsc_z_C = ( chn_o_rsc_z_C0 );
  assign chn_o_rsc_lz_C = ( chn_o_rsc_lz_C0 );
  assign chn_b_rsc_lz_C = ( chn_b_rsc_lz_C0 );
  assign chn_a_rsci_oswt_unreg_pff_C = ( chn_a_rsci_oswt_unreg_pff_C0 );
  assign chn_a_rsc_lz_C = ( chn_a_rsc_lz_C0 );
  assign chn_o_rsci_wen_comp_X = ( chn_o_rsci_wen_comp_X0 );
  assign chn_b_rsci_wen_comp_X = ( chn_b_rsci_wen_comp_X0 );
  assign chn_a_rsci_wen_comp_X = ( chn_a_rsci_wen_comp_X0 );
  assign chn_o_rsci_oswt_X = ( chn_o_rsci_oswt_X0 );
  assign chn_o_rsc_vz_X = ( chn_o_rsc_vz_X0 );
  assign chn_b_rsci_oswt_X = ( chn_b_rsci_oswt_X0 );
  assign chn_b_rsc_z_X = ( chn_b_rsc_z_X0 );
  assign chn_b_rsc_vz_X = ( chn_b_rsc_vz_X0 );
  assign nvdla_core_rstn_X = ( nvdla_core_rstn_X0 ) | ( nvdla_core_rstn_X1 ) | ( nvdla_core_rstn_X2 ) | ( nvdla_core_rstn_X3 ) | ( nvdla_core_rstn_X4 );
  assign core_wten_X = ( core_wten_X0 ) | ( core_wten_X1 ) | ( core_wten_X2 );
  assign chn_a_rsci_oswt_X = ( chn_a_rsci_oswt_X0 );
  assign chn_a_rsc_z_X = ( chn_a_rsc_z_X0 );
  assign chn_a_rsc_vz_X = ( chn_a_rsc_vz_X0 );
  assign chn_o_rsci_iswt0_X = ( chn_o_rsci_iswt0_X0 ) | ( chn_o_rsci_iswt0_X1 );
  assign reg_chn_b_rsci_iswt0_cse_X = ( reg_chn_b_rsci_iswt0_cse_X0 ) | ( reg_chn_b_rsci_iswt0_cse_X1 ) | ( reg_chn_b_rsci_iswt0_cse_X2 );
  assign _108__X = ( _108__X0 );
  assign reg_chn_b_rsci_ld_core_psct_cse_X = ( reg_chn_b_rsci_ld_core_psct_cse_X0 ) | ( reg_chn_b_rsci_ld_core_psct_cse_X1 ) | ( reg_chn_b_rsci_ld_core_psct_cse_X2 );
  assign _047__X = ( _047__X0 );
  assign chn_o_rsci_d_16_X = ( chn_o_rsci_d_16_X0 ) | ( chn_o_rsci_d_16_X1 ) | ( chn_o_rsci_d_16_X2 );
  assign chn_o_rsci_d_9_0_X = ( chn_o_rsci_d_9_0_X0 ) | ( chn_o_rsci_d_9_0_X1 ) | ( chn_o_rsci_d_9_0_X2 );
  assign _039__X = ( _039__X0 );
  assign chn_o_and_cse_X = ( chn_o_and_cse_X0 ) | ( chn_o_and_cse_X1 );
  assign FpMul_6U_10U_FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_X = ( FpMul_6U_10U_FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_X0 );
  assign chn_o_rsci_d_15_10_X = ( chn_o_rsci_d_15_10_X0 ) | ( chn_o_rsci_d_15_10_X1 ) | ( chn_o_rsci_d_15_10_X2 );
  assign _042__X = ( _042__X0 );
  assign _049__X = ( _049__X0 );
  assign FpMul_6U_10U_FpMul_6U_10U_and_2_nl_X = ( FpMul_6U_10U_FpMul_6U_10U_and_2_nl_X0 );
  assign FpBitsToFloat_6U_10U_1_and_nl_X = ( FpBitsToFloat_6U_10U_1_and_nl_X0 );
  assign _109__X = ( _109__X0 );
  assign _050__X = ( _050__X0 );
  assign _110__X = ( _110__X0 );
  assign _051__X = ( _051__X0 );
  assign _053__X = ( _053__X0 );
  assign _114__X = ( _114__X0 );
  assign _113__X = ( _113__X0 );
  assign IsNaN_6U_10U_aelse_and_cse_X = ( IsNaN_6U_10U_aelse_and_cse_X0 ) | ( IsNaN_6U_10U_aelse_and_cse_X1 ) | ( IsNaN_6U_10U_aelse_and_cse_X2 );
  assign _115__X = ( _115__X0 );
  assign _055__X = ( _055__X0 );
  assign nl_FpMul_6U_10U_p_expo_sva_5_X = ( nl_FpMul_6U_10U_p_expo_sva_5_X0 );
  assign _056__X = ( _056__X0 );
  assign _041__X = ( _041__X0 );
  assign _060__X = ( _060__X0 );
  assign _061__X = ( _061__X0 );
  assign _062__X = ( _062__X0 );
  assign FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_X = ( FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_X0 ) | ( FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_X1 );
  assign _043__X = ( _043__X0 );
  assign FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_X = ( FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_X0 ) | ( FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_X1 );
  assign _040__X = ( _040__X0 );
  assign FpBitsToFloat_6U_10U_1_and_1_cse_X = ( FpBitsToFloat_6U_10U_1_and_1_cse_X0 ) | ( FpBitsToFloat_6U_10U_1_and_1_cse_X1 );
  assign FpMul_6U_10U_mux_10_itm_4_X = ( FpMul_6U_10U_mux_10_itm_4_X0 ) | ( FpMul_6U_10U_mux_10_itm_4_X1 );
  assign IsNaN_6U_10U_1_aelse_and_cse_X = ( IsNaN_6U_10U_1_aelse_and_cse_X0 ) | ( IsNaN_6U_10U_1_aelse_and_cse_X1 ) | ( IsNaN_6U_10U_1_aelse_and_cse_X2 ) | ( IsNaN_6U_10U_1_aelse_and_cse_X3 );
  assign FpMul_6U_10U_oelse_1_and_1_cse_X = ( FpMul_6U_10U_oelse_1_and_1_cse_X0 ) | ( FpMul_6U_10U_oelse_1_and_1_cse_X1 );
  assign FpMul_6U_10U_p_mant_p1_sva_X = ( FpMul_6U_10U_p_mant_p1_sva_X0 ) | ( FpMul_6U_10U_p_mant_p1_sva_X1 );
  assign _065__X = ( _065__X0 );
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_3_X = ( FpMul_6U_10U_lor_1_lpi_1_dfm_3_X0 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_3_X1 );
  assign _066__X = ( _066__X0 );
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_X = ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_X0 ) | ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_X1 );
  assign _038__X = ( _038__X0 );
  assign _069__X = ( _069__X0 );
  assign FpMul_6U_10U_mux_10_itm_3_X = ( FpMul_6U_10U_mux_10_itm_3_X0 ) | ( FpMul_6U_10U_mux_10_itm_3_X1 );
  assign _176__X = ( _176__X0 );
  assign _071__X = ( _071__X0 );
  assign _072__X = ( _072__X0 );
  assign _073__X = ( _073__X0 );
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_X = ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_X0 ) | ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_X1 );
  assign _074__X = ( _074__X0 );
  assign nor_37_nl_X = ( nor_37_nl_X0 );
  assign mux_12_nl_X = ( mux_12_nl_X0 );
  assign or_25_nl_X = ( or_25_nl_X0 );
  assign and_97_nl_X = ( and_97_nl_X0 );
  assign nor_35_nl_X = ( nor_35_nl_X0 );
  assign mux_16_nl_X = ( mux_16_nl_X0 );
  assign or_35_nl_X = ( or_35_nl_X0 );
  assign _185__X = ( _185__X0 );
  assign and_91_nl_X = ( and_91_nl_X0 );
  assign _002__X = ( _002__X0 );
  assign FpMul_6U_10U_else_2_else_if_if_acc_nl_X = ( FpMul_6U_10U_else_2_else_if_if_acc_nl_X0 ) | ( FpMul_6U_10U_else_2_else_if_if_acc_nl_X1 );
  assign and_62_nl_X = ( and_62_nl_X0 );
  assign nor_40_nl_X = ( nor_40_nl_X0 );
  assign and_93_nl_X = ( and_93_nl_X0 );
  assign and_94_nl_X = ( and_94_nl_X0 );
  assign nor_34_nl_X = ( nor_34_nl_X0 );
  assign mux_22_nl_X = ( mux_22_nl_X0 );
  assign fangyuan7_X = ( fangyuan7_X0 );
  assign FpMantRNE_22U_11U_else_acc_nl_X = ( FpMantRNE_22U_11U_else_acc_nl_X0 ) | ( FpMantRNE_22U_11U_else_acc_nl_X1 );
  assign or_nl_X = ( or_nl_X0 );
  assign mux_37_nl_X = ( mux_37_nl_X0 );
  assign FpMul_6U_10U_nor_nl_X = ( FpMul_6U_10U_nor_nl_X0 );
  assign FpMul_6U_10U_lor_2_lpi_1_dfm_X = ( FpMul_6U_10U_lor_2_lpi_1_dfm_X0 ) | ( FpMul_6U_10U_lor_2_lpi_1_dfm_X1 );
  assign mux_nl_X = ( mux_nl_X0 );
  assign or_tmp_4_X = ( or_tmp_4_X0 ) | ( or_tmp_4_X1 );
  assign mux_1_nl_X = ( mux_1_nl_X0 );
  assign or_2_nl_X = ( or_2_nl_X0 );
  assign nor_43_nl_X = ( nor_43_nl_X0 );
  assign nor_42_cse_X = ( nor_42_cse_X0 );
  assign mux_4_nl_X = ( mux_4_nl_X0 );
  assign nor_41_nl_X = ( nor_41_nl_X0 );
  assign mux_8_nl_X = ( mux_8_nl_X0 );
  assign nor_39_nl_X = ( nor_39_nl_X0 );
  assign or_tmp_16_X = ( or_tmp_16_X0 ) | ( or_tmp_16_X1 ) | ( or_tmp_16_X2 );
  assign mux_tmp_6_X = ( mux_tmp_6_X0 ) | ( mux_tmp_6_X1 ) | ( mux_tmp_6_X2 );
  assign mux_10_nl_X = ( mux_10_nl_X0 );
  assign nor_38_nl_X = ( nor_38_nl_X0 );
  assign mux_18_nl_X = ( mux_18_nl_X0 );
  assign or_tmp_40_X = ( or_tmp_40_X0 ) | ( or_tmp_40_X1 );
  assign mux_19_nl_X = ( mux_19_nl_X0 );
  assign or_38_nl_X = ( or_38_nl_X0 );
  assign mux_25_nl_X = ( mux_25_nl_X0 );
  assign or_tmp_48_X = ( or_tmp_48_X0 ) | ( or_tmp_48_X1 );
  assign mux_27_nl_X = ( mux_27_nl_X0 );
  assign mux_28_nl_X = ( mux_28_nl_X0 );
  assign mux_26_nl_X = ( mux_26_nl_X0 );
  assign mux_30_nl_X = ( mux_30_nl_X0 );
  assign or_tmp_52_X = ( or_tmp_52_X0 ) | ( or_tmp_52_X1 );
  assign nor_33_nl_X = ( nor_33_nl_X0 );
  assign mux_32_nl_X = ( mux_32_nl_X0 );
  assign _001__X = ( _001__X0 );
  assign _035__X = ( _035__X0 );
  assign _032__X = ( _032__X0 );
  assign _036__X = ( _036__X0 );
  assign _031__X = ( _031__X0 );
  assign _030__X = ( _030__X0 );
  assign _029__X = ( _029__X0 );
  assign _037__X = ( _037__X0 );
  assign _033__X = ( _033__X0 );
  assign _012__X = ( _012__X0 );
  assign _028__X = ( _028__X0 );
  assign _016__X = ( _016__X0 );
  assign _025__X = ( _025__X0 );
  assign _034__X = ( _034__X0 );
  assign _020__X = ( _020__X0 );
  assign _022__X = ( _022__X0 );
  assign _008__X = ( _008__X0 );
  assign _013__X = ( _013__X0 );
  assign _007__X = ( _007__X0 );
  assign _006__X = ( _006__X0 );
  assign _017__X = ( _017__X0 );
  assign _019__X = ( _019__X0 );
  assign _027__X = ( _027__X0 );
  assign _026__X = ( _026__X0 );
  assign _011__X = ( _011__X0 );
  assign _015__X = ( _015__X0 );
  assign _021__X = ( _021__X0 );
  assign _014__X = ( _014__X0 );
  assign _010__X = ( _010__X0 );
  assign _018__X = ( _018__X0 );
  assign _024__X = ( _024__X0 );
  assign _023__X = ( _023__X0 );
  assign _009__X = ( _009__X0 );
  assign _141__X = ( _141__X0 );
  assign _140__X = ( _140__X0 );
  assign _202__X = ( _202__X0 );
  assign _201__X = ( _201__X0 );
  assign _200__X = ( _200__X0 );
  assign _091__X = ( _091__X0 );
  assign _139__X = ( _139__X0 );
  assign FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X = ( FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X0 ) | ( FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X1 ) | ( FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X2 ) | ( FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X3 );
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_4_X = ( FpMul_6U_10U_lor_1_lpi_1_dfm_4_X0 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_4_X1 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_4_X2 );
  assign _138__X = ( _138__X0 );
  assign _089__X = ( _089__X0 );
  assign FpMul_6U_10U_is_inf_lpi_1_dfm_2_X = ( FpMul_6U_10U_is_inf_lpi_1_dfm_2_X0 ) | ( FpMul_6U_10U_is_inf_lpi_1_dfm_2_X1 );
  assign _195__X = ( _195__X0 );
  assign _194__X = ( _194__X0 );
  assign _193__X = ( _193__X0 );
  assign _191__X = ( _191__X0 );
  assign _190__X = ( _190__X0 );
  assign _189__X = ( _189__X0 );
  assign _188__X = ( _188__X0 );
  assign _187__X = ( _187__X0 );
  assign _088__X = ( _088__X0 );
  assign _136__X = ( _136__X0 );
  assign _135__X = ( _135__X0 );
  assign _098__X = ( _098__X0 );
  assign _184__X = ( _184__X0 );
  assign _183__X = ( _183__X0 );
  assign IsNaN_6U_10U_1_land_lpi_1_dfm_3_X = ( IsNaN_6U_10U_1_land_lpi_1_dfm_3_X0 ) | ( IsNaN_6U_10U_1_land_lpi_1_dfm_3_X1 ) | ( IsNaN_6U_10U_1_land_lpi_1_dfm_3_X2 ) | ( IsNaN_6U_10U_1_land_lpi_1_dfm_3_X3 ) | ( IsNaN_6U_10U_1_land_lpi_1_dfm_3_X4 ) | ( IsNaN_6U_10U_1_land_lpi_1_dfm_3_X5 );
  assign _133__X = ( _133__X0 );
  assign and_dcpl_28_X = ( and_dcpl_28_X0 ) | ( and_dcpl_28_X1 ) | ( and_dcpl_28_X2 );
  assign _082__X = ( _082__X0 );
  assign _131__X = ( _131__X0 );
  assign _081__X = ( _081__X0 );
  assign _177__X = ( _177__X0 );
  assign _192__X = ( _192__X0 );
  assign _080__X = ( _080__X0 );
  assign _079__X = ( _079__X0 );
  assign _078__X = ( _078__X0 );
  assign _175__X = ( _175__X0 );
  assign _077__X = ( _077__X0 );
  assign _076__X = ( _076__X0 );
  assign nand_7_cse_X = ( nand_7_cse_X0 );
  assign _174__X = ( _174__X0 );
  assign _173__X = ( _173__X0 );
  assign _172__X = ( _172__X0 );
  assign _129__X = ( _129__X0 ) | ( _129__X1 );
  assign _170__X = ( _170__X0 );
  assign _169__X = ( _169__X0 ) | ( _169__X1 ) | ( _169__X2 );
  assign _128__X = ( _128__X0 ) | ( _128__X1 ) | ( _128__X2 );
  assign _167__X = ( _167__X0 );
  assign _166__X = ( _166__X0 );
  assign _165__X = ( _165__X0 );
  assign _127__X = ( _127__X0 ) | ( _127__X1 ) | ( _127__X2 );
  assign _163__X = ( _163__X0 );
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_X = ( FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_X0 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_X1 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_X2 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_X3 );
  assign _162__X = ( _162__X0 );
  assign _161__X = ( _161__X0 );
  assign _126__X = ( _126__X0 );
  assign _125__X = ( _125__X0 );
  assign FpMul_6U_10U_p_mant_p1_mul_tmp_X = ( FpMul_6U_10U_p_mant_p1_mul_tmp_X0 ) | ( FpMul_6U_10U_p_mant_p1_mul_tmp_X1 ) | ( FpMul_6U_10U_p_mant_p1_mul_tmp_X2 ) | ( FpMul_6U_10U_p_mant_p1_mul_tmp_X3 );
  assign _158__X = ( _158__X0 );
  assign _157__X = ( _157__X0 );
  assign nor_cse_X = ( nor_cse_X0 ) | ( nor_cse_X1 ) | ( nor_cse_X2 ) | ( nor_cse_X3 ) | ( nor_cse_X4 );
  assign _123__X = ( _123__X0 );
  assign _155__X = ( _155__X0 );
  assign _154__X = ( _154__X0 );
  assign _153__X = ( _153__X0 );
  assign _151__X = ( _151__X0 );
  assign and_45_rgt_X = ( and_45_rgt_X0 ) | ( and_45_rgt_X1 );
  assign _067__X = ( _067__X0 );
  assign FpMul_6U_10U_oelse_1_acc_nl_X = ( FpMul_6U_10U_oelse_1_acc_nl_X0 ) | ( FpMul_6U_10U_oelse_1_acc_nl_X1 ) | ( FpMul_6U_10U_oelse_1_acc_nl_X2 ) | ( FpMul_6U_10U_oelse_1_acc_nl_X3 ) | ( FpMul_6U_10U_oelse_1_acc_nl_X4 ) | ( FpMul_6U_10U_oelse_1_acc_nl_X5 ) | ( FpMul_6U_10U_oelse_1_acc_nl_X6 );
  assign FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_X = ( FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_X0 ) | ( FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_X1 ) | ( FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_X2 ) | ( FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_X3 ) | ( FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_X4 );
  assign _118__X = ( _118__X0 ) | ( _118__X1 );
  assign _148__X = ( _148__X0 ) | ( _148__X1 );
  assign and_40_rgt_X = ( and_40_rgt_X0 ) | ( and_40_rgt_X1 );
  assign _058__X = ( _058__X0 );
  assign _054__X = ( _054__X0 );
  assign IsNaN_6U_10U_nor_tmp_X = ( IsNaN_6U_10U_nor_tmp_X0 ) | ( IsNaN_6U_10U_nor_tmp_X1 ) | ( IsNaN_6U_10U_nor_tmp_X2 );
  assign or_tmp_68_X = ( or_tmp_68_X0 ) | ( or_tmp_68_X1 );
  assign _048__X = ( _048__X0 );
  assign IsNaN_6U_10U_1_nor_tmp_X = ( IsNaN_6U_10U_1_nor_tmp_X0 ) | ( IsNaN_6U_10U_1_nor_tmp_X1 );
  assign _094__X = ( _094__X0 );
  assign _092__X = ( _092__X0 );
  assign _203__X = ( _203__X0 );
  assign _199__X = ( _199__X0 );
  assign _103__X = ( _103__X0 );
  assign _197__X = ( _197__X0 );
  assign FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_X = ( FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_X0 ) | ( FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_X1 ) | ( FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_X2 ) | ( FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_X3 );
  assign _102__X = ( _102__X0 );
  assign _101__X = ( _101__X0 );
  assign _087__X = ( _087__X0 );
  assign mux_17_nl_X = ( mux_17_nl_X0 );
  assign _182__X = ( _182__X0 );
  assign or_tmp_32_X = ( or_tmp_32_X0 ) | ( or_tmp_32_X1 );
  assign _180__X = ( _180__X0 );
  assign nor_tmp_11_X = ( nor_tmp_11_X0 ) | ( nor_tmp_11_X1 ) | ( nor_tmp_11_X2 );
  assign _179__X = ( _179__X0 ) | ( _179__X1 );
  assign _178__X = ( _178__X0 );
  assign mux_31_nl_X = ( mux_31_nl_X0 );
  assign or_tmp_49_X = ( or_tmp_49_X0 ) | ( or_tmp_49_X1 ) | ( or_tmp_49_X2 );
  assign FpMul_6U_10U_else_2_if_acc_nl_X = ( FpMul_6U_10U_else_2_if_acc_nl_X0 ) | ( FpMul_6U_10U_else_2_if_acc_nl_X1 ) | ( FpMul_6U_10U_else_2_if_acc_nl_X2 ) | ( FpMul_6U_10U_else_2_if_acc_nl_X3 ) | ( FpMul_6U_10U_else_2_if_acc_nl_X4 ) | ( FpMul_6U_10U_else_2_if_acc_nl_X5 ) | ( FpMul_6U_10U_else_2_if_acc_nl_X6 ) | ( FpMul_6U_10U_else_2_if_acc_nl_X7 );
  assign _171__X = ( _171__X0 );
  assign _168__X = ( _168__X0 );
  assign _164__X = ( _164__X0 );
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_X = ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_X0 ) | ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_X1 );
  assign _160__X = ( _160__X0 );
  assign _075__X = ( _075__X0 );
  assign IsNaN_6U_10U_1_land_lpi_1_dfm_4_X = ( IsNaN_6U_10U_1_land_lpi_1_dfm_4_X0 ) | ( IsNaN_6U_10U_1_land_lpi_1_dfm_4_X1 ) | ( IsNaN_6U_10U_1_land_lpi_1_dfm_4_X2 );
  assign _005__X = ( _005__X0 );
  assign _004__X = ( _004__X0 );
  assign _156__X = ( _156__X0 );
  assign mux_29_nl_X = ( mux_29_nl_X0 );
  assign _149__X = ( _149__X0 );
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_X = ( FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_X0 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_X1 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_X2 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_X3 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_X4 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_X5 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_X6 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_X7 );
  assign main_stage_v_2_mx0c1_X = ( main_stage_v_2_mx0c1_X0 ) | ( main_stage_v_2_mx0c1_X1 );
  assign _145__X = ( _145__X0 );
  assign mux_2_nl_X = ( mux_2_nl_X0 );
  assign and_dcpl_7_X = ( and_dcpl_7_X0 ) | ( and_dcpl_7_X1 ) | ( and_dcpl_7_X2 );
  assign main_stage_v_1_mx0c1_X = ( main_stage_v_1_mx0c1_X0 ) | ( main_stage_v_1_mx0c1_X1 );
  assign and_dcpl_15_X = ( and_dcpl_15_X0 ) | ( and_dcpl_15_X1 );
  assign _046__X = ( _046__X0 );
  assign FpMul_6U_10U_o_expo_lpi_1_dfm_X = ( FpMul_6U_10U_o_expo_lpi_1_dfm_X0 ) | ( FpMul_6U_10U_o_expo_lpi_1_dfm_X1 );
  assign fangyuan6_X = ( fangyuan6_X0 );
  assign fangyuan5_X = ( fangyuan5_X0 );
  assign _093__X = ( _093__X0 );
  assign mux_tmp_21_X = ( mux_tmp_21_X0 ) | ( mux_tmp_21_X1 ) | ( mux_tmp_21_X2 );
  assign IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_X = ( IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_X0 ) | ( IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_X1 );
  assign or_tmp_7_X = ( or_tmp_7_X0 ) | ( or_tmp_7_X1 ) | ( or_tmp_7_X2 );
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_X = ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_X0 ) | ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_X1 );
  assign _198__X = ( _198__X0 );
  assign _137__X = ( _137__X0 ) | ( _137__X1 ) | ( _137__X2 );
  assign _090__X = ( _090__X0 );
  assign FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_X = ( FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_X0 ) | ( FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_X1 );
  assign FpMantRNE_22U_11U_else_and_svs_X = ( FpMantRNE_22U_11U_else_and_svs_X0 ) | ( FpMantRNE_22U_11U_else_and_svs_X1 ) | ( FpMantRNE_22U_11U_else_and_svs_X2 ) | ( FpMantRNE_22U_11U_else_and_svs_X3 );
  assign _003__X = ( _003__X0 ) | ( _003__X1 ) | ( _003__X2 ) | ( _003__X3 ) | ( _003__X4 ) | ( _003__X5 ) | ( _003__X6 ) | ( _003__X7 ) | ( _003__X8 ) | ( _003__X9 ) | ( _003__X10 ) | ( _003__X11 ) | ( _003__X12 ) | ( _003__X13 ) | ( _003__X14 ) | ( _003__X15 ) | ( _003__X16 ) | ( _003__X17 ) | ( _003__X18 ) | ( _003__X19 ) | ( _003__X20 );
  assign _196__X = ( _196__X0 );
  assign _097__X = ( _097__X0 );
  assign FpMul_6U_10U_p_mant_p1_sva_2_X = ( FpMul_6U_10U_p_mant_p1_sva_2_X0 ) | ( FpMul_6U_10U_p_mant_p1_sva_2_X1 ) | ( FpMul_6U_10U_p_mant_p1_sva_2_X2 ) | ( FpMul_6U_10U_p_mant_p1_sva_2_X3 ) | ( FpMul_6U_10U_p_mant_p1_sva_2_X4 ) | ( FpMul_6U_10U_p_mant_p1_sva_2_X5 ) | ( FpMul_6U_10U_p_mant_p1_sva_2_X6 );
  assign mux_36_nl_X = ( mux_36_nl_X0 );
  assign mux_35_nl_X = ( mux_35_nl_X0 );
  assign or_tmp_56_X = ( or_tmp_56_X0 ) | ( or_tmp_56_X1 ) | ( or_tmp_56_X2 );
  assign nand_cse_X = ( nand_cse_X0 ) | ( nand_cse_X1 ) | ( nand_cse_X2 );
  assign _086__X = ( _086__X0 );
  assign _100__X = ( _100__X0 ) | ( _100__X1 ) | ( _100__X2 );
  assign _085__X = ( _085__X0 );
  assign _095__X = ( _095__X0 ) | ( _095__X1 ) | ( _095__X2 );
  assign _186__X = ( _186__X0 );
  assign _099__X = ( _099__X0 ) | ( _099__X1 ) | ( _099__X2 ) | ( _099__X3 );
  assign _084__X = ( _084__X0 );
  assign _096__X = ( _096__X0 ) | ( _096__X1 ) | ( _096__X2 );
  assign or_68_cse_X = ( or_68_cse_X0 ) | ( or_68_cse_X1 ) | ( or_68_cse_X2 ) | ( or_68_cse_X3 ) | ( or_68_cse_X4 ) | ( or_68_cse_X5 ) | ( or_68_cse_X6 );
  assign _134__X = ( _134__X0 );
  assign mux_13_nl_X = ( mux_13_nl_X0 );
  assign _083__X = ( _083__X0 );
  assign _181__X = ( _181__X0 );
  assign _132__X = ( _132__X0 );
  assign FpMul_6U_10U_or_2_cse_X = ( FpMul_6U_10U_or_2_cse_X0 ) | ( FpMul_6U_10U_or_2_cse_X1 ) | ( FpMul_6U_10U_or_2_cse_X2 ) | ( FpMul_6U_10U_or_2_cse_X3 );
  assign or_65_cse_X = ( or_65_cse_X0 ) | ( or_65_cse_X1 ) | ( or_65_cse_X2 );
  assign _130__X = ( _130__X0 );
  assign fangyuan4_X = ( fangyuan4_X0 );
  assign FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_X = ( FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_X0 ) | ( FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_X1 ) | ( FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_X2 ) | ( FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_X3 ) | ( FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_X4 ) | ( FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_X5 );
  assign fangyuan3_X = ( fangyuan3_X0 );
  assign FpMul_6U_10U_or_1_nl_X = ( FpMul_6U_10U_or_1_nl_X0 ) | ( FpMul_6U_10U_or_1_nl_X1 ) | ( FpMul_6U_10U_or_1_nl_X2 ) | ( FpMul_6U_10U_or_1_nl_X3 ) | ( FpMul_6U_10U_or_1_nl_X4 ) | ( FpMul_6U_10U_or_1_nl_X5 );
  assign fangyuan2_X = ( fangyuan2_X0 );
  assign FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_X = ( FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_X0 ) | ( FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_X1 ) | ( FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_X2 );
  assign FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_X = ( FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_X0 ) | ( FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_X1 ) | ( FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_X2 ) | ( FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_X3 ) | ( FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_X4 ) | ( FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_X5 );
  assign and_52_rgt_X = ( and_52_rgt_X0 ) | ( and_52_rgt_X1 );
  assign and_60_rgt_X = ( and_60_rgt_X0 ) | ( and_60_rgt_X1 );
  assign and_61_rgt_X = ( and_61_rgt_X0 ) | ( and_61_rgt_X1 );
  assign FpMul_6U_10U_xor_1_nl_X = ( FpMul_6U_10U_xor_1_nl_X0 );
  assign _159__X = ( _159__X0 );
  assign chn_o_rsci_d_15_10_mx0c1_X = ( chn_o_rsci_d_15_10_mx0c1_X0 ) | ( chn_o_rsci_d_15_10_mx0c1_X1 );
  assign _124__X = ( _124__X0 );
  assign _122__X = ( _122__X0 );
  assign mux_33_nl_X = ( mux_33_nl_X0 );
  assign _111__X = ( _111__X0 );
  assign _121__X = ( _121__X0 );
  assign mux_tmp_3_X = ( mux_tmp_3_X0 ) | ( mux_tmp_3_X1 );
  assign _070__X = ( _070__X0 );
  assign _152__X = ( _152__X0 );
  assign _068__X = ( _068__X0 );
  assign _150__X = ( _150__X0 );
  assign _120__X = ( _120__X0 );
  assign mux_tmp_23_X = ( mux_tmp_23_X0 ) | ( mux_tmp_23_X1 );
  assign mux_20_nl_X = ( mux_20_nl_X0 );
  assign _064__X = ( _064__X0 );
  assign _119__X = ( _119__X0 );
  assign _063__X = ( _063__X0 );
  assign _117__X = ( _117__X0 );
  assign mux_11_nl_X = ( mux_11_nl_X0 );
  assign mux_9_nl_X = ( mux_9_nl_X0 );
  assign mux_tmp_7_X = ( mux_tmp_7_X0 ) | ( mux_tmp_7_X1 );
  assign _059__X = ( _059__X0 );
  assign _147__X = ( _147__X0 );
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_X = ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_X0 ) | ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_X1 ) | ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_X2 ) | ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_X3 ) | ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_X4 ) | ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_X5 );
  assign _057__X = ( _057__X0 );
  assign _116__X = ( _116__X0 );
  assign mux_5_nl_X = ( mux_5_nl_X0 );
  assign _146__X = ( _146__X0 );
  assign _112__X = ( _112__X0 );
  assign _052__X = ( _052__X0 ) | ( _052__X1 ) | ( _052__X2 ) | ( _052__X3 ) | ( _052__X4 ) | ( _052__X5 ) | ( _052__X6 ) | ( _052__X7 ) | ( _052__X8 ) | ( _052__X9 );
  assign _144__X = ( _144__X0 );
  assign _143__X = ( _143__X0 );
  assign _142__X = ( _142__X0 );
  assign IsNaN_6U_10U_land_lpi_1_dfm_4_X = ( IsNaN_6U_10U_land_lpi_1_dfm_4_X0 ) | ( IsNaN_6U_10U_land_lpi_1_dfm_4_X1 ) | ( IsNaN_6U_10U_land_lpi_1_dfm_4_X2 ) | ( IsNaN_6U_10U_land_lpi_1_dfm_4_X3 );
  assign or_tmp_62_X = ( or_tmp_62_X0 ) | ( or_tmp_62_X1 );
  assign core_wen_X = ( core_wen_X0 ) | ( core_wen_X1 ) | ( core_wen_X2 ) | ( core_wen_X3 ) | ( core_wen_X4 ) | ( core_wen_X5 ) | ( core_wen_X6 ) | ( core_wen_X7 ) | ( core_wen_X8 ) | ( core_wen_X9 ) | ( core_wen_X10 ) | ( core_wen_X11 ) | ( core_wen_X12 ) | ( core_wen_X13 ) | ( core_wen_X14 ) | ( core_wen_X15 ) | ( core_wen_X16 ) | ( core_wen_X17 ) | ( core_wen_X18 );
  assign _107__X = ( _107__X0 );
  assign _045__X = ( _045__X0 );
  assign _000__X = ( _000__X0 ) | ( _000__X1 ) | ( _000__X2 ) | ( _000__X3 ) | ( _000__X4 ) | ( _000__X5 ) | ( _000__X6 ) | ( _000__X7 ) | ( _000__X8 );
  assign _044__X = ( _044__X0 );
  assign main_stage_v_1_X = ( main_stage_v_1_X0 ) | ( main_stage_v_1_X1 ) | ( main_stage_v_1_X2 ) | ( main_stage_v_1_X3 ) | ( main_stage_v_1_X4 ) | ( main_stage_v_1_X5 ) | ( main_stage_v_1_X6 ) | ( main_stage_v_1_X7 ) | ( main_stage_v_1_X8 ) | ( main_stage_v_1_X9 );
  assign nand_6_cse_X = ( nand_6_cse_X0 ) | ( nand_6_cse_X1 ) | ( nand_6_cse_X2 ) | ( nand_6_cse_X3 ) | ( nand_6_cse_X4 ) | ( nand_6_cse_X5 ) | ( nand_6_cse_X6 ) | ( nand_6_cse_X7 );
  assign _106__X = ( _106__X0 );
  assign and_dcpl_13_X = ( and_dcpl_13_X0 ) | ( and_dcpl_13_X1 ) | ( and_dcpl_13_X2 ) | ( and_dcpl_13_X3 );
  assign fsm_output_X = ( fsm_output_X0 ) | ( fsm_output_X1 ) | ( fsm_output_X2 ) | ( fsm_output_X3 );
  assign main_stage_en_1_X = ( main_stage_en_1_X0 ) | ( main_stage_en_1_X1 ) | ( main_stage_en_1_X2 );
  assign nor_tmp_1_X = ( nor_tmp_1_X0 ) | ( nor_tmp_1_X1 ) | ( nor_tmp_1_X2 ) | ( nor_tmp_1_X3 ) | ( nor_tmp_1_X4 );
  assign chn_a_rsci_bawt_X = ( chn_a_rsci_bawt_X0 ) | ( chn_a_rsci_bawt_X1 );
  assign chn_b_rsci_bawt_X = ( chn_b_rsci_bawt_X0 ) | ( chn_b_rsci_bawt_X1 );
  assign IsNaN_6U_10U_land_lpi_1_dfm_st_3_X = ( IsNaN_6U_10U_land_lpi_1_dfm_st_3_X0 ) | ( IsNaN_6U_10U_land_lpi_1_dfm_st_3_X1 ) | ( IsNaN_6U_10U_land_lpi_1_dfm_st_3_X2 ) | ( IsNaN_6U_10U_land_lpi_1_dfm_st_3_X3 ) | ( IsNaN_6U_10U_land_lpi_1_dfm_st_3_X4 ) | ( IsNaN_6U_10U_land_lpi_1_dfm_st_3_X5 ) | ( IsNaN_6U_10U_land_lpi_1_dfm_st_3_X6 ) | ( IsNaN_6U_10U_land_lpi_1_dfm_st_3_X7 ) | ( IsNaN_6U_10U_land_lpi_1_dfm_st_3_X8 );
  assign _105__X = ( _105__X0 ) | ( _105__X1 ) | ( _105__X2 ) | ( _105__X3 ) | ( _105__X4 ) | ( _105__X5 );
  assign and_dcpl_14_X = ( and_dcpl_14_X0 ) | ( and_dcpl_14_X1 );
  assign chn_o_rsci_bawt_X = ( chn_o_rsci_bawt_X0 ) | ( chn_o_rsci_bawt_X1 ) | ( chn_o_rsci_bawt_X2 ) | ( chn_o_rsci_bawt_X3 ) | ( chn_o_rsci_bawt_X4 ) | ( chn_o_rsci_bawt_X5 ) | ( chn_o_rsci_bawt_X6 ) | ( chn_o_rsci_bawt_X7 ) | ( chn_o_rsci_bawt_X8 ) | ( chn_o_rsci_bawt_X9 );
  assign main_stage_v_2_X = ( main_stage_v_2_X0 ) | ( main_stage_v_2_X1 ) | ( main_stage_v_2_X2 ) | ( main_stage_v_2_X3 ) | ( main_stage_v_2_X4 ) | ( main_stage_v_2_X5 );
  assign or_5_cse_X = ( or_5_cse_X0 ) | ( or_5_cse_X1 ) | ( or_5_cse_X2 ) | ( or_5_cse_X3 ) | ( or_5_cse_X4 ) | ( or_5_cse_X5 ) | ( or_5_cse_X6 ) | ( or_5_cse_X7 ) | ( or_5_cse_X8 ) | ( or_5_cse_X9 ) | ( or_5_cse_X10 ) | ( or_5_cse_X11 ) | ( or_5_cse_X12 ) | ( or_5_cse_X13 ) | ( or_5_cse_X14 ) | ( or_5_cse_X15 ) | ( or_5_cse_X16 ) | ( or_5_cse_X17 ) | ( or_5_cse_X18 ) | ( or_5_cse_X19 );
  assign _104__X = ( _104__X0 );
  assign reg_chn_o_rsci_ld_core_psct_cse_X = ( reg_chn_o_rsci_ld_core_psct_cse_X0 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X1 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X2 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X3 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X4 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X5 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X6 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X7 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X8 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X9 );
  assign FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_X = ( FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_X0 ) | ( FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_X1 );
  assign fangyuan1_X = ( fangyuan1_X0 );
  assign FpMul_6U_10U_p_expo_sva_5_X = ( FpMul_6U_10U_p_expo_sva_5_X0 ) | ( FpMul_6U_10U_p_expo_sva_5_X1 ) | ( FpMul_6U_10U_p_expo_sva_5_X2 ) | ( FpMul_6U_10U_p_expo_sva_5_X3 );
  assign fangyuan0_X = ( fangyuan0_X0 );
  assign FpMul_6U_10U_oelse_1_acc_1_nl_X = ( FpMul_6U_10U_oelse_1_acc_1_nl_X0 ) | ( FpMul_6U_10U_oelse_1_acc_1_nl_X1 ) | ( FpMul_6U_10U_oelse_1_acc_1_nl_X2 );
  assign FpMul_6U_10U_else_2_acc_1_nl_X = ( FpMul_6U_10U_else_2_acc_1_nl_X0 ) | ( FpMul_6U_10U_else_2_acc_1_nl_X1 );
  assign chn_b_rsci_d_mxwt_X = ( chn_b_rsci_d_mxwt_X0 ) | ( chn_b_rsci_d_mxwt_X1 ) | ( chn_b_rsci_d_mxwt_X2 ) | ( chn_b_rsci_d_mxwt_X3 ) | ( chn_b_rsci_d_mxwt_X4 );
  assign chn_a_rsci_d_mxwt_X = ( chn_a_rsci_d_mxwt_X0 ) | ( chn_a_rsci_d_mxwt_X1 ) | ( chn_a_rsci_d_mxwt_X2 ) | ( chn_a_rsci_d_mxwt_X3 ) | ( chn_a_rsci_d_mxwt_X4 ) | ( chn_a_rsci_d_mxwt_X5 );
  assign FpMul_6U_10U_ua_sva_1_15_0_1_X = ( FpMul_6U_10U_ua_sva_1_15_0_1_X0 ) | ( FpMul_6U_10U_ua_sva_1_15_0_1_X1 ) | ( FpMul_6U_10U_ua_sva_1_15_0_1_X2 );
  assign FpMul_6U_10U_else_2_else_acc_2_nl_X = ( FpMul_6U_10U_else_2_else_acc_2_nl_X0 ) | ( FpMul_6U_10U_else_2_else_acc_2_nl_X1 );
  assign FpMul_6U_10U_ub_sva_1_15_0_1_X = ( FpMul_6U_10U_ub_sva_1_15_0_1_X0 ) | ( FpMul_6U_10U_ub_sva_1_15_0_1_X1 ) | ( FpMul_6U_10U_ub_sva_1_15_0_1_X2 );
  assign FpMantRNE_22U_11U_else_carry_sva_X = ( FpMantRNE_22U_11U_else_carry_sva_X0 ) | ( FpMantRNE_22U_11U_else_carry_sva_X1 );
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X = ( FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X0 ) | ( FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X1 ) | ( FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X2 );
  assign chn_o_rsci_oswt_unreg_X = ( chn_o_rsci_oswt_unreg_X0 );
  assign chn_o_rsc_z_X = ( chn_o_rsc_z_X0 );
  assign chn_o_rsc_lz_X = ( chn_o_rsc_lz_X0 );
  assign chn_b_rsc_lz_X = ( chn_b_rsc_lz_X0 );
  assign chn_a_rsci_oswt_unreg_pff_X = ( chn_a_rsci_oswt_unreg_pff_X0 );
  assign chn_a_rsc_lz_X = ( chn_a_rsc_lz_X0 );
  assign chn_o_rsci_wen_comp_R = ( chn_o_rsci_wen_comp_X0 & chn_o_rsci_wen_comp_R0 );
  assign chn_b_rsci_wen_comp_R = ( chn_b_rsci_wen_comp_X0 & chn_b_rsci_wen_comp_R0 );
  assign chn_a_rsci_wen_comp_R = ( chn_a_rsci_wen_comp_X0 & chn_a_rsci_wen_comp_R0 );
  assign chn_o_rsci_oswt_R = ( chn_o_rsci_oswt_X0 & chn_o_rsci_oswt_R0 );
  assign chn_o_rsc_vz_R = ( chn_o_rsc_vz_X0 & chn_o_rsc_vz_R0 );
  assign chn_b_rsci_oswt_R = ( chn_b_rsci_oswt_X0 & chn_b_rsci_oswt_R0 );
  assign chn_b_rsc_z_R = ( chn_b_rsc_z_X0 & chn_b_rsc_z_R0 );
  assign chn_b_rsc_vz_R = ( chn_b_rsc_vz_X0 & chn_b_rsc_vz_R0 );
  assign nvdla_core_rstn_R = ( nvdla_core_rstn_X0 & nvdla_core_rstn_R0 ) | ( nvdla_core_rstn_X1 & nvdla_core_rstn_R1 ) | ( nvdla_core_rstn_X2 & nvdla_core_rstn_R2 ) | ( nvdla_core_rstn_X3 & nvdla_core_rstn_R3 ) | ( nvdla_core_rstn_X4 & nvdla_core_rstn_R4 );
  assign core_wten_R = ( core_wten_X0 & core_wten_R0 ) | ( core_wten_X1 & core_wten_R1 ) | ( core_wten_X2 & core_wten_R2 );
  assign chn_a_rsci_oswt_R = ( chn_a_rsci_oswt_X0 & chn_a_rsci_oswt_R0 );
  assign chn_a_rsc_z_R = ( chn_a_rsc_z_X0 & chn_a_rsc_z_R0 );
  assign chn_a_rsc_vz_R = ( chn_a_rsc_vz_X0 & chn_a_rsc_vz_R0 );
  assign chn_o_rsci_iswt0_R = ( chn_o_rsci_iswt0_X0 & chn_o_rsci_iswt0_R0 ) | ( chn_o_rsci_iswt0_X1 & chn_o_rsci_iswt0_R1 );
  assign reg_chn_b_rsci_iswt0_cse_R = ( reg_chn_b_rsci_iswt0_cse_X0 & reg_chn_b_rsci_iswt0_cse_R0 ) | ( reg_chn_b_rsci_iswt0_cse_X1 & reg_chn_b_rsci_iswt0_cse_R1 ) | ( reg_chn_b_rsci_iswt0_cse_X2 & reg_chn_b_rsci_iswt0_cse_R2 );
  assign _108__R = ( _108__X0 & _108__R0 );
  assign reg_chn_b_rsci_ld_core_psct_cse_R = ( reg_chn_b_rsci_ld_core_psct_cse_X0 & reg_chn_b_rsci_ld_core_psct_cse_R0 ) | ( reg_chn_b_rsci_ld_core_psct_cse_X1 & reg_chn_b_rsci_ld_core_psct_cse_R1 ) | ( reg_chn_b_rsci_ld_core_psct_cse_X2 & reg_chn_b_rsci_ld_core_psct_cse_R2 );
  assign _047__R = ( _047__X0 & _047__R0 );
  assign chn_o_rsci_d_16_R = ( chn_o_rsci_d_16_X0 & chn_o_rsci_d_16_R0 ) | ( chn_o_rsci_d_16_X1 & chn_o_rsci_d_16_R1 ) | ( chn_o_rsci_d_16_X2 & chn_o_rsci_d_16_R2 );
  assign chn_o_rsci_d_9_0_R = ( chn_o_rsci_d_9_0_X0 & chn_o_rsci_d_9_0_R0 ) | ( chn_o_rsci_d_9_0_X1 & chn_o_rsci_d_9_0_R1 ) | ( chn_o_rsci_d_9_0_X2 & chn_o_rsci_d_9_0_R2 );
  assign _039__R = ( _039__X0 & _039__R0 );
  assign chn_o_and_cse_R = ( chn_o_and_cse_X0 & chn_o_and_cse_R0 ) | ( chn_o_and_cse_X1 & chn_o_and_cse_R1 );
  assign FpMul_6U_10U_FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_R = ( FpMul_6U_10U_FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_X0 & FpMul_6U_10U_FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_R0 );
  assign chn_o_rsci_d_15_10_R = ( chn_o_rsci_d_15_10_X0 & chn_o_rsci_d_15_10_R0 ) | ( chn_o_rsci_d_15_10_X1 & chn_o_rsci_d_15_10_R1 ) | ( chn_o_rsci_d_15_10_X2 & chn_o_rsci_d_15_10_R2 );
  assign _042__R = ( _042__X0 & _042__R0 );
  assign _049__R = ( _049__X0 & _049__R0 );
  assign FpMul_6U_10U_FpMul_6U_10U_and_2_nl_R = ( FpMul_6U_10U_FpMul_6U_10U_and_2_nl_X0 & FpMul_6U_10U_FpMul_6U_10U_and_2_nl_R0 );
  assign FpBitsToFloat_6U_10U_1_and_nl_R = ( FpBitsToFloat_6U_10U_1_and_nl_X0 & FpBitsToFloat_6U_10U_1_and_nl_R0 );
  assign _109__R = ( _109__X0 & _109__R0 );
  assign _050__R = ( _050__X0 & _050__R0 );
  assign _110__R = ( _110__X0 & _110__R0 );
  assign _051__R = ( _051__X0 & _051__R0 );
  assign _053__R = ( _053__X0 & _053__R0 );
  assign _114__R = ( _114__X0 & _114__R0 );
  assign _113__R = ( _113__X0 & _113__R0 );
  assign IsNaN_6U_10U_aelse_and_cse_R = ( IsNaN_6U_10U_aelse_and_cse_X0 & IsNaN_6U_10U_aelse_and_cse_R0 ) | ( IsNaN_6U_10U_aelse_and_cse_X1 & IsNaN_6U_10U_aelse_and_cse_R1 ) | ( IsNaN_6U_10U_aelse_and_cse_X2 & IsNaN_6U_10U_aelse_and_cse_R2 );
  assign _115__R = ( _115__X0 & _115__R0 );
  assign _055__R = ( _055__X0 & _055__R0 );
  assign nl_FpMul_6U_10U_p_expo_sva_5_R = ( nl_FpMul_6U_10U_p_expo_sva_5_X0 & nl_FpMul_6U_10U_p_expo_sva_5_R0 );
  assign _056__R = ( _056__X0 & _056__R0 );
  assign _041__R = ( _041__X0 & _041__R0 );
  assign _060__R = ( _060__X0 & _060__R0 );
  assign _061__R = ( _061__X0 & _061__R0 );
  assign _062__R = ( _062__X0 & _062__R0 );
  assign FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_R = ( FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_X0 & FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_R0 ) | ( FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_X1 & FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_R1 );
  assign _043__R = ( _043__X0 & _043__R0 );
  assign FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_R = ( FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_X0 & FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_R0 ) | ( FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_X1 & FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_R1 );
  assign _040__R = ( _040__X0 & _040__R0 );
  assign FpBitsToFloat_6U_10U_1_and_1_cse_R = ( FpBitsToFloat_6U_10U_1_and_1_cse_X0 & FpBitsToFloat_6U_10U_1_and_1_cse_R0 ) | ( FpBitsToFloat_6U_10U_1_and_1_cse_X1 & FpBitsToFloat_6U_10U_1_and_1_cse_R1 );
  assign FpMul_6U_10U_mux_10_itm_4_R = ( FpMul_6U_10U_mux_10_itm_4_X0 & FpMul_6U_10U_mux_10_itm_4_R0 ) | ( FpMul_6U_10U_mux_10_itm_4_X1 & FpMul_6U_10U_mux_10_itm_4_R1 );
  assign IsNaN_6U_10U_1_aelse_and_cse_R = ( IsNaN_6U_10U_1_aelse_and_cse_X0 & IsNaN_6U_10U_1_aelse_and_cse_R0 ) | ( IsNaN_6U_10U_1_aelse_and_cse_X1 & IsNaN_6U_10U_1_aelse_and_cse_R1 ) | ( IsNaN_6U_10U_1_aelse_and_cse_X2 & IsNaN_6U_10U_1_aelse_and_cse_R2 ) | ( IsNaN_6U_10U_1_aelse_and_cse_X3 & IsNaN_6U_10U_1_aelse_and_cse_R3 );
  assign FpMul_6U_10U_oelse_1_and_1_cse_R = ( FpMul_6U_10U_oelse_1_and_1_cse_X0 & FpMul_6U_10U_oelse_1_and_1_cse_R0 ) | ( FpMul_6U_10U_oelse_1_and_1_cse_X1 & FpMul_6U_10U_oelse_1_and_1_cse_R1 );
  assign FpMul_6U_10U_p_mant_p1_sva_R = ( FpMul_6U_10U_p_mant_p1_sva_X0 & FpMul_6U_10U_p_mant_p1_sva_R0 ) | ( FpMul_6U_10U_p_mant_p1_sva_X1 & FpMul_6U_10U_p_mant_p1_sva_R1 );
  assign _065__R = ( _065__X0 & _065__R0 );
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_3_R = ( FpMul_6U_10U_lor_1_lpi_1_dfm_3_X0 & FpMul_6U_10U_lor_1_lpi_1_dfm_3_R0 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_3_X1 & FpMul_6U_10U_lor_1_lpi_1_dfm_3_R1 );
  assign _066__R = ( _066__X0 & _066__R0 );
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_R = ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_X0 & FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_R0 ) | ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_X1 & FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_R1 );
  assign _038__R = ( _038__X0 & _038__R0 );
  assign _069__R = ( _069__X0 & _069__R0 );
  assign FpMul_6U_10U_mux_10_itm_3_R = ( FpMul_6U_10U_mux_10_itm_3_X0 & FpMul_6U_10U_mux_10_itm_3_R0 ) | ( FpMul_6U_10U_mux_10_itm_3_X1 & FpMul_6U_10U_mux_10_itm_3_R1 );
  assign _176__R = ( _176__X0 & _176__R0 );
  assign _071__R = ( _071__X0 & _071__R0 );
  assign _072__R = ( _072__X0 & _072__R0 );
  assign _073__R = ( _073__X0 & _073__R0 );
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_R = ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_X0 & FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_R0 ) | ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_X1 & FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_R1 );
  assign _074__R = ( _074__X0 & _074__R0 );
  assign nor_37_nl_R = ( nor_37_nl_X0 & nor_37_nl_R0 );
  assign mux_12_nl_R = ( mux_12_nl_X0 & mux_12_nl_R0 );
  assign or_25_nl_R = ( or_25_nl_X0 & or_25_nl_R0 );
  assign and_97_nl_R = ( and_97_nl_X0 & and_97_nl_R0 );
  assign nor_35_nl_R = ( nor_35_nl_X0 & nor_35_nl_R0 );
  assign mux_16_nl_R = ( mux_16_nl_X0 & mux_16_nl_R0 );
  assign or_35_nl_R = ( or_35_nl_X0 & or_35_nl_R0 );
  assign _185__R = ( _185__X0 & _185__R0 );
  assign and_91_nl_R = ( and_91_nl_X0 & and_91_nl_R0 );
  assign _002__R = ( _002__X0 & _002__R0 );
  assign FpMul_6U_10U_else_2_else_if_if_acc_nl_R = ( FpMul_6U_10U_else_2_else_if_if_acc_nl_X0 & FpMul_6U_10U_else_2_else_if_if_acc_nl_R0 ) | ( FpMul_6U_10U_else_2_else_if_if_acc_nl_X1 & FpMul_6U_10U_else_2_else_if_if_acc_nl_R1 );
  assign and_62_nl_R = ( and_62_nl_X0 & and_62_nl_R0 );
  assign nor_40_nl_R = ( nor_40_nl_X0 & nor_40_nl_R0 );
  assign and_93_nl_R = ( and_93_nl_X0 & and_93_nl_R0 );
  assign and_94_nl_R = ( and_94_nl_X0 & and_94_nl_R0 );
  assign nor_34_nl_R = ( nor_34_nl_X0 & nor_34_nl_R0 );
  assign mux_22_nl_R = ( mux_22_nl_X0 & mux_22_nl_R0 );
  assign fangyuan7_R = ( fangyuan7_X0 & fangyuan7_R0 );
  assign FpMantRNE_22U_11U_else_acc_nl_R = ( FpMantRNE_22U_11U_else_acc_nl_X0 & FpMantRNE_22U_11U_else_acc_nl_R0 ) | ( FpMantRNE_22U_11U_else_acc_nl_X1 & FpMantRNE_22U_11U_else_acc_nl_R1 );
  assign or_nl_R = ( or_nl_X0 & or_nl_R0 );
  assign mux_37_nl_R = ( mux_37_nl_X0 & mux_37_nl_R0 );
  assign FpMul_6U_10U_nor_nl_R = ( FpMul_6U_10U_nor_nl_X0 & FpMul_6U_10U_nor_nl_R0 );
  assign FpMul_6U_10U_lor_2_lpi_1_dfm_R = ( FpMul_6U_10U_lor_2_lpi_1_dfm_X0 & FpMul_6U_10U_lor_2_lpi_1_dfm_R0 ) | ( FpMul_6U_10U_lor_2_lpi_1_dfm_X1 & FpMul_6U_10U_lor_2_lpi_1_dfm_R1 );
  assign mux_nl_R = ( mux_nl_X0 & mux_nl_R0 );
  assign or_tmp_4_R = ( or_tmp_4_X0 & or_tmp_4_R0 ) | ( or_tmp_4_X1 & or_tmp_4_R1 );
  assign mux_1_nl_R = ( mux_1_nl_X0 & mux_1_nl_R0 );
  assign or_2_nl_R = ( or_2_nl_X0 & or_2_nl_R0 );
  assign nor_43_nl_R = ( nor_43_nl_X0 & nor_43_nl_R0 );
  assign nor_42_cse_R = ( nor_42_cse_X0 & nor_42_cse_R0 );
  assign mux_4_nl_R = ( mux_4_nl_X0 & mux_4_nl_R0 );
  assign nor_41_nl_R = ( nor_41_nl_X0 & nor_41_nl_R0 );
  assign mux_8_nl_R = ( mux_8_nl_X0 & mux_8_nl_R0 );
  assign nor_39_nl_R = ( nor_39_nl_X0 & nor_39_nl_R0 );
  assign or_tmp_16_R = ( or_tmp_16_X0 & or_tmp_16_R0 ) | ( or_tmp_16_X1 & or_tmp_16_R1 ) | ( or_tmp_16_X2 & or_tmp_16_R2 );
  assign mux_tmp_6_R = ( mux_tmp_6_X0 & mux_tmp_6_R0 ) | ( mux_tmp_6_X1 & mux_tmp_6_R1 ) | ( mux_tmp_6_X2 & mux_tmp_6_R2 );
  assign mux_10_nl_R = ( mux_10_nl_X0 & mux_10_nl_R0 );
  assign nor_38_nl_R = ( nor_38_nl_X0 & nor_38_nl_R0 );
  assign mux_18_nl_R = ( mux_18_nl_X0 & mux_18_nl_R0 );
  assign or_tmp_40_R = ( or_tmp_40_X0 & or_tmp_40_R0 ) | ( or_tmp_40_X1 & or_tmp_40_R1 );
  assign mux_19_nl_R = ( mux_19_nl_X0 & mux_19_nl_R0 );
  assign or_38_nl_R = ( or_38_nl_X0 & or_38_nl_R0 );
  assign mux_25_nl_R = ( mux_25_nl_X0 & mux_25_nl_R0 );
  assign or_tmp_48_R = ( or_tmp_48_X0 & or_tmp_48_R0 ) | ( or_tmp_48_X1 & or_tmp_48_R1 );
  assign mux_27_nl_R = ( mux_27_nl_X0 & mux_27_nl_R0 );
  assign mux_28_nl_R = ( mux_28_nl_X0 & mux_28_nl_R0 );
  assign mux_26_nl_R = ( mux_26_nl_X0 & mux_26_nl_R0 );
  assign mux_30_nl_R = ( mux_30_nl_X0 & mux_30_nl_R0 );
  assign or_tmp_52_R = ( or_tmp_52_X0 & or_tmp_52_R0 ) | ( or_tmp_52_X1 & or_tmp_52_R1 );
  assign nor_33_nl_R = ( nor_33_nl_X0 & nor_33_nl_R0 );
  assign mux_32_nl_R = ( mux_32_nl_X0 & mux_32_nl_R0 );
  assign _001__R = ( _001__X0 & _001__R0 );
  assign _035__R = ( _035__X0 & _035__R0 );
  assign _032__R = ( _032__X0 & _032__R0 );
  assign _036__R = ( _036__X0 & _036__R0 );
  assign _031__R = ( _031__X0 & _031__R0 );
  assign _030__R = ( _030__X0 & _030__R0 );
  assign _029__R = ( _029__X0 & _029__R0 );
  assign _037__R = ( _037__X0 & _037__R0 );
  assign _033__R = ( _033__X0 & _033__R0 );
  assign _012__R = ( _012__X0 & _012__R0 );
  assign _028__R = ( _028__X0 & _028__R0 );
  assign _016__R = ( _016__X0 & _016__R0 );
  assign _025__R = ( _025__X0 & _025__R0 );
  assign _034__R = ( _034__X0 & _034__R0 );
  assign _020__R = ( _020__X0 & _020__R0 );
  assign _022__R = ( _022__X0 & _022__R0 );
  assign _008__R = ( _008__X0 & _008__R0 );
  assign _013__R = ( _013__X0 & _013__R0 );
  assign _007__R = ( _007__X0 & _007__R0 );
  assign _006__R = ( _006__X0 & _006__R0 );
  assign _017__R = ( _017__X0 & _017__R0 );
  assign _019__R = ( _019__X0 & _019__R0 );
  assign _027__R = ( _027__X0 & _027__R0 );
  assign _026__R = ( _026__X0 & _026__R0 );
  assign _011__R = ( _011__X0 & _011__R0 );
  assign _015__R = ( _015__X0 & _015__R0 );
  assign _021__R = ( _021__X0 & _021__R0 );
  assign _014__R = ( _014__X0 & _014__R0 );
  assign _010__R = ( _010__X0 & _010__R0 );
  assign _018__R = ( _018__X0 & _018__R0 );
  assign _024__R = ( _024__X0 & _024__R0 );
  assign _023__R = ( _023__X0 & _023__R0 );
  assign _009__R = ( _009__X0 & _009__R0 );
  assign _141__R = ( _141__X0 & _141__R0 );
  assign _140__R = ( _140__X0 & _140__R0 );
  assign _202__R = ( _202__X0 & _202__R0 );
  assign _201__R = ( _201__X0 & _201__R0 );
  assign _200__R = ( _200__X0 & _200__R0 );
  assign _091__R = ( _091__X0 & _091__R0 );
  assign _139__R = ( _139__X0 & _139__R0 );
  assign FpMul_6U_10U_else_2_else_if_if_acc_1_nl_R = ( FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X0 & FpMul_6U_10U_else_2_else_if_if_acc_1_nl_R0 ) | ( FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X1 & FpMul_6U_10U_else_2_else_if_if_acc_1_nl_R1 ) | ( FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X2 & FpMul_6U_10U_else_2_else_if_if_acc_1_nl_R2 ) | ( FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X3 & FpMul_6U_10U_else_2_else_if_if_acc_1_nl_R3 );
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_4_R = ( FpMul_6U_10U_lor_1_lpi_1_dfm_4_X0 & FpMul_6U_10U_lor_1_lpi_1_dfm_4_R0 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_4_X1 & FpMul_6U_10U_lor_1_lpi_1_dfm_4_R1 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_4_X2 & FpMul_6U_10U_lor_1_lpi_1_dfm_4_R2 );
  assign _138__R = ( _138__X0 & _138__R0 );
  assign _089__R = ( _089__X0 & _089__R0 );
  assign FpMul_6U_10U_is_inf_lpi_1_dfm_2_R = ( FpMul_6U_10U_is_inf_lpi_1_dfm_2_X0 & FpMul_6U_10U_is_inf_lpi_1_dfm_2_R0 ) | ( FpMul_6U_10U_is_inf_lpi_1_dfm_2_X1 & FpMul_6U_10U_is_inf_lpi_1_dfm_2_R1 );
  assign _195__R = ( _195__X0 & _195__R0 );
  assign _194__R = ( _194__X0 & _194__R0 );
  assign _193__R = ( _193__X0 & _193__R0 );
  assign _191__R = ( _191__X0 & _191__R0 );
  assign _190__R = ( _190__X0 & _190__R0 );
  assign _189__R = ( _189__X0 & _189__R0 );
  assign _188__R = ( _188__X0 & _188__R0 );
  assign _187__R = ( _187__X0 & _187__R0 );
  assign _088__R = ( _088__X0 & _088__R0 );
  assign _136__R = ( _136__X0 & _136__R0 );
  assign _135__R = ( _135__X0 & _135__R0 );
  assign _098__R = ( _098__X0 & _098__R0 );
  assign _184__R = ( _184__X0 & _184__R0 );
  assign _183__R = ( _183__X0 & _183__R0 );
  assign IsNaN_6U_10U_1_land_lpi_1_dfm_3_R = ( IsNaN_6U_10U_1_land_lpi_1_dfm_3_X0 & IsNaN_6U_10U_1_land_lpi_1_dfm_3_R0 ) | ( IsNaN_6U_10U_1_land_lpi_1_dfm_3_X1 & IsNaN_6U_10U_1_land_lpi_1_dfm_3_R1 ) | ( IsNaN_6U_10U_1_land_lpi_1_dfm_3_X2 & IsNaN_6U_10U_1_land_lpi_1_dfm_3_R2 ) | ( IsNaN_6U_10U_1_land_lpi_1_dfm_3_X3 & IsNaN_6U_10U_1_land_lpi_1_dfm_3_R3 ) | ( IsNaN_6U_10U_1_land_lpi_1_dfm_3_X4 & IsNaN_6U_10U_1_land_lpi_1_dfm_3_R4 ) | ( IsNaN_6U_10U_1_land_lpi_1_dfm_3_X5 & IsNaN_6U_10U_1_land_lpi_1_dfm_3_R5 );
  assign _133__R = ( _133__X0 & _133__R0 );
  assign and_dcpl_28_R = ( and_dcpl_28_X0 & and_dcpl_28_R0 ) | ( and_dcpl_28_X1 & and_dcpl_28_R1 ) | ( and_dcpl_28_X2 & and_dcpl_28_R2 );
  assign _082__R = ( _082__X0 & _082__R0 );
  assign _131__R = ( _131__X0 & _131__R0 );
  assign _081__R = ( _081__X0 & _081__R0 );
  assign _177__R = ( _177__X0 & _177__R0 );
  assign _192__R = ( _192__X0 & _192__R0 );
  assign _080__R = ( _080__X0 & _080__R0 );
  assign _079__R = ( _079__X0 & _079__R0 );
  assign _078__R = ( _078__X0 & _078__R0 );
  assign _175__R = ( _175__X0 & _175__R0 );
  assign _077__R = ( _077__X0 & _077__R0 );
  assign _076__R = ( _076__X0 & _076__R0 );
  assign nand_7_cse_R = ( nand_7_cse_X0 & nand_7_cse_R0 );
  assign _174__R = ( _174__X0 & _174__R0 );
  assign _173__R = ( _173__X0 & _173__R0 );
  assign _172__R = ( _172__X0 & _172__R0 );
  assign _129__R = ( _129__X0 & _129__R0 ) | ( _129__X1 & _129__R1 );
  assign _170__R = ( _170__X0 & _170__R0 );
  assign _169__R = ( _169__X0 & _169__R0 ) | ( _169__X1 & _169__R1 ) | ( _169__X2 & _169__R2 );
  assign _128__R = ( _128__X0 & _128__R0 ) | ( _128__X1 & _128__R1 ) | ( _128__X2 & _128__R2 );
  assign _167__R = ( _167__X0 & _167__R0 );
  assign _166__R = ( _166__X0 & _166__R0 );
  assign _165__R = ( _165__X0 & _165__R0 );
  assign _127__R = ( _127__X0 & _127__R0 ) | ( _127__X1 & _127__R1 ) | ( _127__X2 & _127__R2 );
  assign _163__R = ( _163__X0 & _163__R0 );
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_R = ( FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_X0 & FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_R0 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_X1 & FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_R1 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_X2 & FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_R2 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_X3 & FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_R3 );
  assign _162__R = ( _162__X0 & _162__R0 );
  assign _161__R = ( _161__X0 & _161__R0 );
  assign _126__R = ( _126__X0 & _126__R0 );
  assign _125__R = ( _125__X0 & _125__R0 );
  assign FpMul_6U_10U_p_mant_p1_mul_tmp_R = ( FpMul_6U_10U_p_mant_p1_mul_tmp_X0 & FpMul_6U_10U_p_mant_p1_mul_tmp_R0 ) | ( FpMul_6U_10U_p_mant_p1_mul_tmp_X1 & FpMul_6U_10U_p_mant_p1_mul_tmp_R1 ) | ( FpMul_6U_10U_p_mant_p1_mul_tmp_X2 & FpMul_6U_10U_p_mant_p1_mul_tmp_R2 ) | ( FpMul_6U_10U_p_mant_p1_mul_tmp_X3 & FpMul_6U_10U_p_mant_p1_mul_tmp_R3 );
  assign _158__R = ( _158__X0 & _158__R0 );
  assign _157__R = ( _157__X0 & _157__R0 );
  assign nor_cse_R = ( nor_cse_X0 & nor_cse_R0 ) | ( nor_cse_X1 & nor_cse_R1 ) | ( nor_cse_X2 & nor_cse_R2 ) | ( nor_cse_X3 & nor_cse_R3 ) | ( nor_cse_X4 & nor_cse_R4 );
  assign _123__R = ( _123__X0 & _123__R0 );
  assign _155__R = ( _155__X0 & _155__R0 );
  assign _154__R = ( _154__X0 & _154__R0 );
  assign _153__R = ( _153__X0 & _153__R0 );
  assign _151__R = ( _151__X0 & _151__R0 );
  assign and_45_rgt_R = ( and_45_rgt_X0 & and_45_rgt_R0 ) | ( and_45_rgt_X1 & and_45_rgt_R1 );
  assign _067__R = ( _067__X0 & _067__R0 );
  assign FpMul_6U_10U_oelse_1_acc_nl_R = ( FpMul_6U_10U_oelse_1_acc_nl_X0 & FpMul_6U_10U_oelse_1_acc_nl_R0 ) | ( FpMul_6U_10U_oelse_1_acc_nl_X1 & FpMul_6U_10U_oelse_1_acc_nl_R1 ) | ( FpMul_6U_10U_oelse_1_acc_nl_X2 & FpMul_6U_10U_oelse_1_acc_nl_R2 ) | ( FpMul_6U_10U_oelse_1_acc_nl_X3 & FpMul_6U_10U_oelse_1_acc_nl_R3 ) | ( FpMul_6U_10U_oelse_1_acc_nl_X4 & FpMul_6U_10U_oelse_1_acc_nl_R4 ) | ( FpMul_6U_10U_oelse_1_acc_nl_X5 & FpMul_6U_10U_oelse_1_acc_nl_R5 ) | ( FpMul_6U_10U_oelse_1_acc_nl_X6 & FpMul_6U_10U_oelse_1_acc_nl_R6 );
  assign FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_R = ( FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_X0 & FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_R0 ) | ( FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_X1 & FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_R1 ) | ( FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_X2 & FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_R2 ) | ( FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_X3 & FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_R3 ) | ( FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_X4 & FpMul_6U_10U_if_2_FpMul_6U_10U_if_2_or_tmp_R4 );
  assign _118__R = ( _118__X0 & _118__R0 ) | ( _118__X1 & _118__R1 );
  assign _148__R = ( _148__X0 & _148__R0 ) | ( _148__X1 & _148__R1 );
  assign and_40_rgt_R = ( and_40_rgt_X0 & and_40_rgt_R0 ) | ( and_40_rgt_X1 & and_40_rgt_R1 );
  assign _058__R = ( _058__X0 & _058__R0 );
  assign _054__R = ( _054__X0 & _054__R0 );
  assign IsNaN_6U_10U_nor_tmp_R = ( IsNaN_6U_10U_nor_tmp_X0 & IsNaN_6U_10U_nor_tmp_R0 ) | ( IsNaN_6U_10U_nor_tmp_X1 & IsNaN_6U_10U_nor_tmp_R1 ) | ( IsNaN_6U_10U_nor_tmp_X2 & IsNaN_6U_10U_nor_tmp_R2 );
  assign or_tmp_68_R = ( or_tmp_68_X0 & or_tmp_68_R0 ) | ( or_tmp_68_X1 & or_tmp_68_R1 );
  assign _048__R = ( _048__X0 & _048__R0 );
  assign IsNaN_6U_10U_1_nor_tmp_R = ( IsNaN_6U_10U_1_nor_tmp_X0 & IsNaN_6U_10U_1_nor_tmp_R0 ) | ( IsNaN_6U_10U_1_nor_tmp_X1 & IsNaN_6U_10U_1_nor_tmp_R1 );
  assign _094__R = ( _094__X0 & _094__R0 );
  assign _092__R = ( _092__X0 & _092__R0 );
  assign _203__R = ( _203__X0 & _203__R0 );
  assign _199__R = ( _199__X0 & _199__R0 );
  assign _103__R = ( _103__X0 & _103__R0 );
  assign _197__R = ( _197__X0 & _197__R0 );
  assign FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_R = ( FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_X0 & FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_R0 ) | ( FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_X1 & FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_R1 ) | ( FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_X2 & FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_R2 ) | ( FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_X3 & FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_R3 );
  assign _102__R = ( _102__X0 & _102__R0 );
  assign _101__R = ( _101__X0 & _101__R0 );
  assign _087__R = ( _087__X0 & _087__R0 );
  assign mux_17_nl_R = ( mux_17_nl_X0 & mux_17_nl_R0 );
  assign _182__R = ( _182__X0 & _182__R0 );
  assign or_tmp_32_R = ( or_tmp_32_X0 & or_tmp_32_R0 ) | ( or_tmp_32_X1 & or_tmp_32_R1 );
  assign _180__R = ( _180__X0 & _180__R0 );
  assign nor_tmp_11_R = ( nor_tmp_11_X0 & nor_tmp_11_R0 ) | ( nor_tmp_11_X1 & nor_tmp_11_R1 ) | ( nor_tmp_11_X2 & nor_tmp_11_R2 );
  assign _179__R = ( _179__X0 & _179__R0 ) | ( _179__X1 & _179__R1 );
  assign _178__R = ( _178__X0 & _178__R0 );
  assign mux_31_nl_R = ( mux_31_nl_X0 & mux_31_nl_R0 );
  assign or_tmp_49_R = ( or_tmp_49_X0 & or_tmp_49_R0 ) | ( or_tmp_49_X1 & or_tmp_49_R1 ) | ( or_tmp_49_X2 & or_tmp_49_R2 );
  assign FpMul_6U_10U_else_2_if_acc_nl_R = ( FpMul_6U_10U_else_2_if_acc_nl_X0 & FpMul_6U_10U_else_2_if_acc_nl_R0 ) | ( FpMul_6U_10U_else_2_if_acc_nl_X1 & FpMul_6U_10U_else_2_if_acc_nl_R1 ) | ( FpMul_6U_10U_else_2_if_acc_nl_X2 & FpMul_6U_10U_else_2_if_acc_nl_R2 ) | ( FpMul_6U_10U_else_2_if_acc_nl_X3 & FpMul_6U_10U_else_2_if_acc_nl_R3 ) | ( FpMul_6U_10U_else_2_if_acc_nl_X4 & FpMul_6U_10U_else_2_if_acc_nl_R4 ) | ( FpMul_6U_10U_else_2_if_acc_nl_X5 & FpMul_6U_10U_else_2_if_acc_nl_R5 ) | ( FpMul_6U_10U_else_2_if_acc_nl_X6 & FpMul_6U_10U_else_2_if_acc_nl_R6 ) | ( FpMul_6U_10U_else_2_if_acc_nl_X7 & FpMul_6U_10U_else_2_if_acc_nl_R7 );
  assign _171__R = ( _171__X0 & _171__R0 );
  assign _168__R = ( _168__X0 & _168__R0 );
  assign _164__R = ( _164__X0 & _164__R0 );
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_R = ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_X0 & FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_R0 ) | ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_X1 & FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_R1 );
  assign _160__R = ( _160__X0 & _160__R0 );
  assign _075__R = ( _075__X0 & _075__R0 );
  assign IsNaN_6U_10U_1_land_lpi_1_dfm_4_R = ( IsNaN_6U_10U_1_land_lpi_1_dfm_4_X0 & IsNaN_6U_10U_1_land_lpi_1_dfm_4_R0 ) | ( IsNaN_6U_10U_1_land_lpi_1_dfm_4_X1 & IsNaN_6U_10U_1_land_lpi_1_dfm_4_R1 ) | ( IsNaN_6U_10U_1_land_lpi_1_dfm_4_X2 & IsNaN_6U_10U_1_land_lpi_1_dfm_4_R2 );
  assign _005__R = ( _005__X0 & _005__R0 );
  assign _004__R = ( _004__X0 & _004__R0 );
  assign _156__R = ( _156__X0 & _156__R0 );
  assign mux_29_nl_R = ( mux_29_nl_X0 & mux_29_nl_R0 );
  assign _149__R = ( _149__X0 & _149__R0 );
  assign FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_R = ( FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_X0 & FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_R0 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_X1 & FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_R1 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_X2 & FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_R2 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_X3 & FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_R3 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_X4 & FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_R4 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_X5 & FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_R5 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_X6 & FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_R6 ) | ( FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_X7 & FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_R7 );
  assign main_stage_v_2_mx0c1_R = ( main_stage_v_2_mx0c1_X0 & main_stage_v_2_mx0c1_R0 ) | ( main_stage_v_2_mx0c1_X1 & main_stage_v_2_mx0c1_R1 );
  assign _145__R = ( _145__X0 & _145__R0 );
  assign mux_2_nl_R = ( mux_2_nl_X0 & mux_2_nl_R0 );
  assign and_dcpl_7_R = ( and_dcpl_7_X0 & and_dcpl_7_R0 ) | ( and_dcpl_7_X1 & and_dcpl_7_R1 ) | ( and_dcpl_7_X2 & and_dcpl_7_R2 );
  assign main_stage_v_1_mx0c1_R = ( main_stage_v_1_mx0c1_X0 & main_stage_v_1_mx0c1_R0 ) | ( main_stage_v_1_mx0c1_X1 & main_stage_v_1_mx0c1_R1 );
  assign and_dcpl_15_R = ( and_dcpl_15_X0 & and_dcpl_15_R0 ) | ( and_dcpl_15_X1 & and_dcpl_15_R1 );
  assign _046__R = ( _046__X0 & _046__R0 );
  assign FpMul_6U_10U_o_expo_lpi_1_dfm_R = ( FpMul_6U_10U_o_expo_lpi_1_dfm_X0 & FpMul_6U_10U_o_expo_lpi_1_dfm_R0 ) | ( FpMul_6U_10U_o_expo_lpi_1_dfm_X1 & FpMul_6U_10U_o_expo_lpi_1_dfm_R1 );
  assign fangyuan6_R = ( fangyuan6_X0 & fangyuan6_R0 );
  assign fangyuan5_R = ( fangyuan5_X0 & fangyuan5_R0 );
  assign _093__R = ( _093__X0 & _093__R0 );
  assign mux_tmp_21_R = ( mux_tmp_21_X0 & mux_tmp_21_R0 ) | ( mux_tmp_21_X1 & mux_tmp_21_R1 ) | ( mux_tmp_21_X2 & mux_tmp_21_R2 );
  assign IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_R = ( IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_X0 & IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_R0 ) | ( IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_X1 & IsNaN_6U_10U_1_IsNaN_6U_10U_1_nand_cse_R1 );
  assign or_tmp_7_R = ( or_tmp_7_X0 & or_tmp_7_R0 ) | ( or_tmp_7_X1 & or_tmp_7_R1 ) | ( or_tmp_7_X2 & or_tmp_7_R2 );
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_R = ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_X0 & FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_R0 ) | ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_X1 & FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_R1 );
  assign _198__R = ( _198__X0 & _198__R0 );
  assign _137__R = ( _137__X0 & _137__R0 ) | ( _137__X1 & _137__R1 ) | ( _137__X2 & _137__R2 );
  assign _090__R = ( _090__X0 & _090__R0 );
  assign FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_R = ( FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_X0 & FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_R0 ) | ( FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_X1 & FpMantWidthDec_6U_21U_10U_0U_0U_if_1_unequal_tmp_R1 );
  assign FpMantRNE_22U_11U_else_and_svs_R = ( FpMantRNE_22U_11U_else_and_svs_X0 & FpMantRNE_22U_11U_else_and_svs_R0 ) | ( FpMantRNE_22U_11U_else_and_svs_X1 & FpMantRNE_22U_11U_else_and_svs_R1 ) | ( FpMantRNE_22U_11U_else_and_svs_X2 & FpMantRNE_22U_11U_else_and_svs_R2 ) | ( FpMantRNE_22U_11U_else_and_svs_X3 & FpMantRNE_22U_11U_else_and_svs_R3 );
  assign _003__R = ( _003__X0 & _003__R0 ) | ( _003__X1 & _003__R1 ) | ( _003__X2 & _003__R2 ) | ( _003__X3 & _003__R3 ) | ( _003__X4 & _003__R4 ) | ( _003__X5 & _003__R5 ) | ( _003__X6 & _003__R6 ) | ( _003__X7 & _003__R7 ) | ( _003__X8 & _003__R8 ) | ( _003__X9 & _003__R9 ) | ( _003__X10 & _003__R10 ) | ( _003__X11 & _003__R11 ) | ( _003__X12 & _003__R12 ) | ( _003__X13 & _003__R13 ) | ( _003__X14 & _003__R14 ) | ( _003__X15 & _003__R15 ) | ( _003__X16 & _003__R16 ) | ( _003__X17 & _003__R17 ) | ( _003__X18 & _003__R18 ) | ( _003__X19 & _003__R19 ) | ( _003__X20 & _003__R20 );
  assign _196__R = ( _196__X0 & _196__R0 );
  assign _097__R = ( _097__X0 & _097__R0 );
  assign FpMul_6U_10U_p_mant_p1_sva_2_R = ( FpMul_6U_10U_p_mant_p1_sva_2_X0 & FpMul_6U_10U_p_mant_p1_sva_2_R0 ) | ( FpMul_6U_10U_p_mant_p1_sva_2_X1 & FpMul_6U_10U_p_mant_p1_sva_2_R1 ) | ( FpMul_6U_10U_p_mant_p1_sva_2_X2 & FpMul_6U_10U_p_mant_p1_sva_2_R2 ) | ( FpMul_6U_10U_p_mant_p1_sva_2_X3 & FpMul_6U_10U_p_mant_p1_sva_2_R3 ) | ( FpMul_6U_10U_p_mant_p1_sva_2_X4 & FpMul_6U_10U_p_mant_p1_sva_2_R4 ) | ( FpMul_6U_10U_p_mant_p1_sva_2_X5 & FpMul_6U_10U_p_mant_p1_sva_2_R5 ) | ( FpMul_6U_10U_p_mant_p1_sva_2_X6 & FpMul_6U_10U_p_mant_p1_sva_2_R6 );
  assign mux_36_nl_R = ( mux_36_nl_X0 & mux_36_nl_R0 );
  assign mux_35_nl_R = ( mux_35_nl_X0 & mux_35_nl_R0 );
  assign or_tmp_56_R = ( or_tmp_56_X0 & or_tmp_56_R0 ) | ( or_tmp_56_X1 & or_tmp_56_R1 ) | ( or_tmp_56_X2 & or_tmp_56_R2 );
  assign nand_cse_R = ( nand_cse_X0 & nand_cse_R0 ) | ( nand_cse_X1 & nand_cse_R1 ) | ( nand_cse_X2 & nand_cse_R2 );
  assign _086__R = ( _086__X0 & _086__R0 );
  assign _100__R = ( _100__X0 & _100__R0 ) | ( _100__X1 & _100__R1 ) | ( _100__X2 & _100__R2 );
  assign _085__R = ( _085__X0 & _085__R0 );
  assign _095__R = ( _095__X0 & _095__R0 ) | ( _095__X1 & _095__R1 ) | ( _095__X2 & _095__R2 );
  assign _186__R = ( _186__X0 & _186__R0 );
  assign _099__R = ( _099__X0 & _099__R0 ) | ( _099__X1 & _099__R1 ) | ( _099__X2 & _099__R2 ) | ( _099__X3 & _099__R3 );
  assign _084__R = ( _084__X0 & _084__R0 );
  assign _096__R = ( _096__X0 & _096__R0 ) | ( _096__X1 & _096__R1 ) | ( _096__X2 & _096__R2 );
  assign or_68_cse_R = ( or_68_cse_X0 & or_68_cse_R0 ) | ( or_68_cse_X1 & or_68_cse_R1 ) | ( or_68_cse_X2 & or_68_cse_R2 ) | ( or_68_cse_X3 & or_68_cse_R3 ) | ( or_68_cse_X4 & or_68_cse_R4 ) | ( or_68_cse_X5 & or_68_cse_R5 ) | ( or_68_cse_X6 & or_68_cse_R6 );
  assign _134__R = ( _134__X0 & _134__R0 );
  assign mux_13_nl_R = ( mux_13_nl_X0 & mux_13_nl_R0 );
  assign _083__R = ( _083__X0 & _083__R0 );
  assign _181__R = ( _181__X0 & _181__R0 );
  assign _132__R = ( _132__X0 & _132__R0 );
  assign FpMul_6U_10U_or_2_cse_R = ( FpMul_6U_10U_or_2_cse_X0 & FpMul_6U_10U_or_2_cse_R0 ) | ( FpMul_6U_10U_or_2_cse_X1 & FpMul_6U_10U_or_2_cse_R1 ) | ( FpMul_6U_10U_or_2_cse_X2 & FpMul_6U_10U_or_2_cse_R2 ) | ( FpMul_6U_10U_or_2_cse_X3 & FpMul_6U_10U_or_2_cse_R3 );
  assign or_65_cse_R = ( or_65_cse_X0 & or_65_cse_R0 ) | ( or_65_cse_X1 & or_65_cse_R1 ) | ( or_65_cse_X2 & or_65_cse_R2 );
  assign _130__R = ( _130__X0 & _130__R0 );
  assign fangyuan4_R = ( fangyuan4_X0 & fangyuan4_R0 );
  assign FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_R = ( FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_X0 & FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_R0 ) | ( FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_X1 & FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_R1 ) | ( FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_X2 & FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_R2 ) | ( FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_X3 & FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_R3 ) | ( FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_X4 & FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_R4 ) | ( FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_X5 & FpMul_6U_10U_FpMul_6U_10U_nor_1_nl_R5 );
  assign fangyuan3_R = ( fangyuan3_X0 & fangyuan3_R0 );
  assign FpMul_6U_10U_or_1_nl_R = ( FpMul_6U_10U_or_1_nl_X0 & FpMul_6U_10U_or_1_nl_R0 ) | ( FpMul_6U_10U_or_1_nl_X1 & FpMul_6U_10U_or_1_nl_R1 ) | ( FpMul_6U_10U_or_1_nl_X2 & FpMul_6U_10U_or_1_nl_R2 ) | ( FpMul_6U_10U_or_1_nl_X3 & FpMul_6U_10U_or_1_nl_R3 ) | ( FpMul_6U_10U_or_1_nl_X4 & FpMul_6U_10U_or_1_nl_R4 ) | ( FpMul_6U_10U_or_1_nl_X5 & FpMul_6U_10U_or_1_nl_R5 );
  assign fangyuan2_R = ( fangyuan2_X0 & fangyuan2_R0 );
  assign FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_R = ( FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_X0 & FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_R0 ) | ( FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_X1 & FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_R1 ) | ( FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_X2 & FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_R2 );
  assign FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_R = ( FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_X0 & FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_R0 ) | ( FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_X1 & FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_R1 ) | ( FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_X2 & FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_R2 ) | ( FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_X3 & FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_R3 ) | ( FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_X4 & FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_R4 ) | ( FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_X5 & FpMantWidthDec_6U_21U_10U_0U_0U_and_1_nl_R5 );
  assign and_52_rgt_R = ( and_52_rgt_X0 & and_52_rgt_R0 ) | ( and_52_rgt_X1 & and_52_rgt_R1 );
  assign and_60_rgt_R = ( and_60_rgt_X0 & and_60_rgt_R0 ) | ( and_60_rgt_X1 & and_60_rgt_R1 );
  assign and_61_rgt_R = ( and_61_rgt_X0 & and_61_rgt_R0 ) | ( and_61_rgt_X1 & and_61_rgt_R1 );
  assign FpMul_6U_10U_xor_1_nl_R = ( FpMul_6U_10U_xor_1_nl_X0 & FpMul_6U_10U_xor_1_nl_R0 );
  assign _159__R = ( _159__X0 & _159__R0 );
  assign chn_o_rsci_d_15_10_mx0c1_R = ( chn_o_rsci_d_15_10_mx0c1_X0 & chn_o_rsci_d_15_10_mx0c1_R0 ) | ( chn_o_rsci_d_15_10_mx0c1_X1 & chn_o_rsci_d_15_10_mx0c1_R1 );
  assign _124__R = ( _124__X0 & _124__R0 );
  assign _122__R = ( _122__X0 & _122__R0 );
  assign mux_33_nl_R = ( mux_33_nl_X0 & mux_33_nl_R0 );
  assign _111__R = ( _111__X0 & _111__R0 );
  assign _121__R = ( _121__X0 & _121__R0 );
  assign mux_tmp_3_R = ( mux_tmp_3_X0 & mux_tmp_3_R0 ) | ( mux_tmp_3_X1 & mux_tmp_3_R1 );
  assign _070__R = ( _070__X0 & _070__R0 );
  assign _152__R = ( _152__X0 & _152__R0 );
  assign _068__R = ( _068__X0 & _068__R0 );
  assign _150__R = ( _150__X0 & _150__R0 );
  assign _120__R = ( _120__X0 & _120__R0 );
  assign mux_tmp_23_R = ( mux_tmp_23_X0 & mux_tmp_23_R0 ) | ( mux_tmp_23_X1 & mux_tmp_23_R1 );
  assign mux_20_nl_R = ( mux_20_nl_X0 & mux_20_nl_R0 );
  assign _064__R = ( _064__X0 & _064__R0 );
  assign _119__R = ( _119__X0 & _119__R0 );
  assign _063__R = ( _063__X0 & _063__R0 );
  assign _117__R = ( _117__X0 & _117__R0 );
  assign mux_11_nl_R = ( mux_11_nl_X0 & mux_11_nl_R0 );
  assign mux_9_nl_R = ( mux_9_nl_X0 & mux_9_nl_R0 );
  assign mux_tmp_7_R = ( mux_tmp_7_X0 & mux_tmp_7_R0 ) | ( mux_tmp_7_X1 & mux_tmp_7_R1 );
  assign _059__R = ( _059__X0 & _059__R0 );
  assign _147__R = ( _147__X0 & _147__R0 );
  assign FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_R = ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_X0 & FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_R0 ) | ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_X1 & FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_R1 ) | ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_X2 & FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_R2 ) | ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_X3 & FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_R3 ) | ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_X4 & FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_R4 ) | ( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_X5 & FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_R5 );
  assign _057__R = ( _057__X0 & _057__R0 );
  assign _116__R = ( _116__X0 & _116__R0 );
  assign mux_5_nl_R = ( mux_5_nl_X0 & mux_5_nl_R0 );
  assign _146__R = ( _146__X0 & _146__R0 );
  assign _112__R = ( _112__X0 & _112__R0 );
  assign _052__R = ( _052__X0 & _052__R0 ) | ( _052__X1 & _052__R1 ) | ( _052__X2 & _052__R2 ) | ( _052__X3 & _052__R3 ) | ( _052__X4 & _052__R4 ) | ( _052__X5 & _052__R5 ) | ( _052__X6 & _052__R6 ) | ( _052__X7 & _052__R7 ) | ( _052__X8 & _052__R8 ) | ( _052__X9 & _052__R9 );
  assign _144__R = ( _144__X0 & _144__R0 );
  assign _143__R = ( _143__X0 & _143__R0 );
  assign _142__R = ( _142__X0 & _142__R0 );
  assign IsNaN_6U_10U_land_lpi_1_dfm_4_R = ( IsNaN_6U_10U_land_lpi_1_dfm_4_X0 & IsNaN_6U_10U_land_lpi_1_dfm_4_R0 ) | ( IsNaN_6U_10U_land_lpi_1_dfm_4_X1 & IsNaN_6U_10U_land_lpi_1_dfm_4_R1 ) | ( IsNaN_6U_10U_land_lpi_1_dfm_4_X2 & IsNaN_6U_10U_land_lpi_1_dfm_4_R2 ) | ( IsNaN_6U_10U_land_lpi_1_dfm_4_X3 & IsNaN_6U_10U_land_lpi_1_dfm_4_R3 );
  assign or_tmp_62_R = ( or_tmp_62_X0 & or_tmp_62_R0 ) | ( or_tmp_62_X1 & or_tmp_62_R1 );
  assign core_wen_R = ( core_wen_X0 & core_wen_R0 ) | ( core_wen_X1 & core_wen_R1 ) | ( core_wen_X2 & core_wen_R2 ) | ( core_wen_X3 & core_wen_R3 ) | ( core_wen_X4 & core_wen_R4 ) | ( core_wen_X5 & core_wen_R5 ) | ( core_wen_X6 & core_wen_R6 ) | ( core_wen_X7 & core_wen_R7 ) | ( core_wen_X8 & core_wen_R8 ) | ( core_wen_X9 & core_wen_R9 ) | ( core_wen_X10 & core_wen_R10 ) | ( core_wen_X11 & core_wen_R11 ) | ( core_wen_X12 & core_wen_R12 ) | ( core_wen_X13 & core_wen_R13 ) | ( core_wen_X14 & core_wen_R14 ) | ( core_wen_X15 & core_wen_R15 ) | ( core_wen_X16 & core_wen_R16 ) | ( core_wen_X17 & core_wen_R17 ) | ( core_wen_X18 & core_wen_R18 );
  assign _107__R = ( _107__X0 & _107__R0 );
  assign _045__R = ( _045__X0 & _045__R0 );
  assign _000__R = ( _000__X0 & _000__R0 ) | ( _000__X1 & _000__R1 ) | ( _000__X2 & _000__R2 ) | ( _000__X3 & _000__R3 ) | ( _000__X4 & _000__R4 ) | ( _000__X5 & _000__R5 ) | ( _000__X6 & _000__R6 ) | ( _000__X7 & _000__R7 ) | ( _000__X8 & _000__R8 );
  assign _044__R = ( _044__X0 & _044__R0 );
  assign main_stage_v_1_R = ( main_stage_v_1_X0 & main_stage_v_1_R0 ) | ( main_stage_v_1_X1 & main_stage_v_1_R1 ) | ( main_stage_v_1_X2 & main_stage_v_1_R2 ) | ( main_stage_v_1_X3 & main_stage_v_1_R3 ) | ( main_stage_v_1_X4 & main_stage_v_1_R4 ) | ( main_stage_v_1_X5 & main_stage_v_1_R5 ) | ( main_stage_v_1_X6 & main_stage_v_1_R6 ) | ( main_stage_v_1_X7 & main_stage_v_1_R7 ) | ( main_stage_v_1_X8 & main_stage_v_1_R8 ) | ( main_stage_v_1_X9 & main_stage_v_1_R9 );
  assign nand_6_cse_R = ( nand_6_cse_X0 & nand_6_cse_R0 ) | ( nand_6_cse_X1 & nand_6_cse_R1 ) | ( nand_6_cse_X2 & nand_6_cse_R2 ) | ( nand_6_cse_X3 & nand_6_cse_R3 ) | ( nand_6_cse_X4 & nand_6_cse_R4 ) | ( nand_6_cse_X5 & nand_6_cse_R5 ) | ( nand_6_cse_X6 & nand_6_cse_R6 ) | ( nand_6_cse_X7 & nand_6_cse_R7 );
  assign _106__R = ( _106__X0 & _106__R0 );
  assign and_dcpl_13_R = ( and_dcpl_13_X0 & and_dcpl_13_R0 ) | ( and_dcpl_13_X1 & and_dcpl_13_R1 ) | ( and_dcpl_13_X2 & and_dcpl_13_R2 ) | ( and_dcpl_13_X3 & and_dcpl_13_R3 );
  assign fsm_output_R = ( fsm_output_X0 & fsm_output_R0 ) | ( fsm_output_X1 & fsm_output_R1 ) | ( fsm_output_X2 & fsm_output_R2 ) | ( fsm_output_X3 & fsm_output_R3 );
  assign main_stage_en_1_R = ( main_stage_en_1_X0 & main_stage_en_1_R0 ) | ( main_stage_en_1_X1 & main_stage_en_1_R1 ) | ( main_stage_en_1_X2 & main_stage_en_1_R2 );
  assign nor_tmp_1_R = ( nor_tmp_1_X0 & nor_tmp_1_R0 ) | ( nor_tmp_1_X1 & nor_tmp_1_R1 ) | ( nor_tmp_1_X2 & nor_tmp_1_R2 ) | ( nor_tmp_1_X3 & nor_tmp_1_R3 ) | ( nor_tmp_1_X4 & nor_tmp_1_R4 );
  assign chn_a_rsci_bawt_R = ( chn_a_rsci_bawt_X0 & chn_a_rsci_bawt_R0 ) | ( chn_a_rsci_bawt_X1 & chn_a_rsci_bawt_R1 );
  assign chn_b_rsci_bawt_R = ( chn_b_rsci_bawt_X0 & chn_b_rsci_bawt_R0 ) | ( chn_b_rsci_bawt_X1 & chn_b_rsci_bawt_R1 );
  assign IsNaN_6U_10U_land_lpi_1_dfm_st_3_R = ( IsNaN_6U_10U_land_lpi_1_dfm_st_3_X0 & IsNaN_6U_10U_land_lpi_1_dfm_st_3_R0 ) | ( IsNaN_6U_10U_land_lpi_1_dfm_st_3_X1 & IsNaN_6U_10U_land_lpi_1_dfm_st_3_R1 ) | ( IsNaN_6U_10U_land_lpi_1_dfm_st_3_X2 & IsNaN_6U_10U_land_lpi_1_dfm_st_3_R2 ) | ( IsNaN_6U_10U_land_lpi_1_dfm_st_3_X3 & IsNaN_6U_10U_land_lpi_1_dfm_st_3_R3 ) | ( IsNaN_6U_10U_land_lpi_1_dfm_st_3_X4 & IsNaN_6U_10U_land_lpi_1_dfm_st_3_R4 ) | ( IsNaN_6U_10U_land_lpi_1_dfm_st_3_X5 & IsNaN_6U_10U_land_lpi_1_dfm_st_3_R5 ) | ( IsNaN_6U_10U_land_lpi_1_dfm_st_3_X6 & IsNaN_6U_10U_land_lpi_1_dfm_st_3_R6 ) | ( IsNaN_6U_10U_land_lpi_1_dfm_st_3_X7 & IsNaN_6U_10U_land_lpi_1_dfm_st_3_R7 ) | ( IsNaN_6U_10U_land_lpi_1_dfm_st_3_X8 & IsNaN_6U_10U_land_lpi_1_dfm_st_3_R8 );
  assign _105__R = ( _105__X0 & _105__R0 ) | ( _105__X1 & _105__R1 ) | ( _105__X2 & _105__R2 ) | ( _105__X3 & _105__R3 ) | ( _105__X4 & _105__R4 ) | ( _105__X5 & _105__R5 );
  assign and_dcpl_14_R = ( and_dcpl_14_X0 & and_dcpl_14_R0 ) | ( and_dcpl_14_X1 & and_dcpl_14_R1 );
  assign chn_o_rsci_bawt_R = ( chn_o_rsci_bawt_X0 & chn_o_rsci_bawt_R0 ) | ( chn_o_rsci_bawt_X1 & chn_o_rsci_bawt_R1 ) | ( chn_o_rsci_bawt_X2 & chn_o_rsci_bawt_R2 ) | ( chn_o_rsci_bawt_X3 & chn_o_rsci_bawt_R3 ) | ( chn_o_rsci_bawt_X4 & chn_o_rsci_bawt_R4 ) | ( chn_o_rsci_bawt_X5 & chn_o_rsci_bawt_R5 ) | ( chn_o_rsci_bawt_X6 & chn_o_rsci_bawt_R6 ) | ( chn_o_rsci_bawt_X7 & chn_o_rsci_bawt_R7 ) | ( chn_o_rsci_bawt_X8 & chn_o_rsci_bawt_R8 ) | ( chn_o_rsci_bawt_X9 & chn_o_rsci_bawt_R9 );
  assign main_stage_v_2_R = ( main_stage_v_2_X0 & main_stage_v_2_R0 ) | ( main_stage_v_2_X1 & main_stage_v_2_R1 ) | ( main_stage_v_2_X2 & main_stage_v_2_R2 ) | ( main_stage_v_2_X3 & main_stage_v_2_R3 ) | ( main_stage_v_2_X4 & main_stage_v_2_R4 ) | ( main_stage_v_2_X5 & main_stage_v_2_R5 );
  assign or_5_cse_R = ( or_5_cse_X0 & or_5_cse_R0 ) | ( or_5_cse_X1 & or_5_cse_R1 ) | ( or_5_cse_X2 & or_5_cse_R2 ) | ( or_5_cse_X3 & or_5_cse_R3 ) | ( or_5_cse_X4 & or_5_cse_R4 ) | ( or_5_cse_X5 & or_5_cse_R5 ) | ( or_5_cse_X6 & or_5_cse_R6 ) | ( or_5_cse_X7 & or_5_cse_R7 ) | ( or_5_cse_X8 & or_5_cse_R8 ) | ( or_5_cse_X9 & or_5_cse_R9 ) | ( or_5_cse_X10 & or_5_cse_R10 ) | ( or_5_cse_X11 & or_5_cse_R11 ) | ( or_5_cse_X12 & or_5_cse_R12 ) | ( or_5_cse_X13 & or_5_cse_R13 ) | ( or_5_cse_X14 & or_5_cse_R14 ) | ( or_5_cse_X15 & or_5_cse_R15 ) | ( or_5_cse_X16 & or_5_cse_R16 ) | ( or_5_cse_X17 & or_5_cse_R17 ) | ( or_5_cse_X18 & or_5_cse_R18 ) | ( or_5_cse_X19 & or_5_cse_R19 );
  assign _104__R = ( _104__X0 & _104__R0 );
  assign reg_chn_o_rsci_ld_core_psct_cse_R = ( reg_chn_o_rsci_ld_core_psct_cse_X0 & reg_chn_o_rsci_ld_core_psct_cse_R0 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X1 & reg_chn_o_rsci_ld_core_psct_cse_R1 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X2 & reg_chn_o_rsci_ld_core_psct_cse_R2 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X3 & reg_chn_o_rsci_ld_core_psct_cse_R3 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X4 & reg_chn_o_rsci_ld_core_psct_cse_R4 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X5 & reg_chn_o_rsci_ld_core_psct_cse_R5 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X6 & reg_chn_o_rsci_ld_core_psct_cse_R6 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X7 & reg_chn_o_rsci_ld_core_psct_cse_R7 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X8 & reg_chn_o_rsci_ld_core_psct_cse_R8 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X9 & reg_chn_o_rsci_ld_core_psct_cse_R9 );
  assign FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_R = ( FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_X0 & FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_R0 ) | ( FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_X1 & FpMul_6U_10U_p_expo_lpi_1_dfm_1_mx0_R1 );
  assign fangyuan1_R = ( fangyuan1_X0 & fangyuan1_R0 );
  assign FpMul_6U_10U_p_expo_sva_5_R = ( FpMul_6U_10U_p_expo_sva_5_X0 & FpMul_6U_10U_p_expo_sva_5_R0 ) | ( FpMul_6U_10U_p_expo_sva_5_X1 & FpMul_6U_10U_p_expo_sva_5_R1 ) | ( FpMul_6U_10U_p_expo_sva_5_X2 & FpMul_6U_10U_p_expo_sva_5_R2 ) | ( FpMul_6U_10U_p_expo_sva_5_X3 & FpMul_6U_10U_p_expo_sva_5_R3 );
  assign fangyuan0_R = ( fangyuan0_X0 & fangyuan0_R0 );
  assign FpMul_6U_10U_oelse_1_acc_1_nl_R = ( FpMul_6U_10U_oelse_1_acc_1_nl_X0 & FpMul_6U_10U_oelse_1_acc_1_nl_R0 ) | ( FpMul_6U_10U_oelse_1_acc_1_nl_X1 & FpMul_6U_10U_oelse_1_acc_1_nl_R1 ) | ( FpMul_6U_10U_oelse_1_acc_1_nl_X2 & FpMul_6U_10U_oelse_1_acc_1_nl_R2 );
  assign FpMul_6U_10U_else_2_acc_1_nl_R = ( FpMul_6U_10U_else_2_acc_1_nl_X0 & FpMul_6U_10U_else_2_acc_1_nl_R0 ) | ( FpMul_6U_10U_else_2_acc_1_nl_X1 & FpMul_6U_10U_else_2_acc_1_nl_R1 );
  assign chn_b_rsci_d_mxwt_R = ( chn_b_rsci_d_mxwt_X0 & chn_b_rsci_d_mxwt_R0 ) | ( chn_b_rsci_d_mxwt_X1 & chn_b_rsci_d_mxwt_R1 ) | ( chn_b_rsci_d_mxwt_X2 & chn_b_rsci_d_mxwt_R2 ) | ( chn_b_rsci_d_mxwt_X3 & chn_b_rsci_d_mxwt_R3 ) | ( chn_b_rsci_d_mxwt_X4 & chn_b_rsci_d_mxwt_R4 );
  assign chn_a_rsci_d_mxwt_R = ( chn_a_rsci_d_mxwt_X0 & chn_a_rsci_d_mxwt_R0 ) | ( chn_a_rsci_d_mxwt_X1 & chn_a_rsci_d_mxwt_R1 ) | ( chn_a_rsci_d_mxwt_X2 & chn_a_rsci_d_mxwt_R2 ) | ( chn_a_rsci_d_mxwt_X3 & chn_a_rsci_d_mxwt_R3 ) | ( chn_a_rsci_d_mxwt_X4 & chn_a_rsci_d_mxwt_R4 ) | ( chn_a_rsci_d_mxwt_X5 & chn_a_rsci_d_mxwt_R5 );
  assign FpMul_6U_10U_ua_sva_1_15_0_1_R = ( FpMul_6U_10U_ua_sva_1_15_0_1_X0 & FpMul_6U_10U_ua_sva_1_15_0_1_R0 ) | ( FpMul_6U_10U_ua_sva_1_15_0_1_X1 & FpMul_6U_10U_ua_sva_1_15_0_1_R1 ) | ( FpMul_6U_10U_ua_sva_1_15_0_1_X2 & FpMul_6U_10U_ua_sva_1_15_0_1_R2 );
  assign FpMul_6U_10U_else_2_else_acc_2_nl_R = ( FpMul_6U_10U_else_2_else_acc_2_nl_X0 & FpMul_6U_10U_else_2_else_acc_2_nl_R0 ) | ( FpMul_6U_10U_else_2_else_acc_2_nl_X1 & FpMul_6U_10U_else_2_else_acc_2_nl_R1 );
  assign FpMul_6U_10U_ub_sva_1_15_0_1_R = ( FpMul_6U_10U_ub_sva_1_15_0_1_X0 & FpMul_6U_10U_ub_sva_1_15_0_1_R0 ) | ( FpMul_6U_10U_ub_sva_1_15_0_1_X1 & FpMul_6U_10U_ub_sva_1_15_0_1_R1 ) | ( FpMul_6U_10U_ub_sva_1_15_0_1_X2 & FpMul_6U_10U_ub_sva_1_15_0_1_R2 );
  assign FpMantRNE_22U_11U_else_carry_sva_R = ( FpMantRNE_22U_11U_else_carry_sva_X0 & FpMantRNE_22U_11U_else_carry_sva_R0 ) | ( FpMantRNE_22U_11U_else_carry_sva_X1 & FpMantRNE_22U_11U_else_carry_sva_R1 );
  assign FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R = ( FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X0 & FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R0 ) | ( FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X1 & FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R1 ) | ( FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X2 & FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R2 );
  assign chn_o_rsci_oswt_unreg_R = ( chn_o_rsci_oswt_unreg_X0 & chn_o_rsci_oswt_unreg_R0 );
  assign chn_o_rsc_z_R = ( chn_o_rsc_z_X0 & chn_o_rsc_z_R0 );
  assign chn_o_rsc_lz_R = ( chn_o_rsc_lz_X0 & chn_o_rsc_lz_R0 );
  assign chn_b_rsc_lz_R = ( chn_b_rsc_lz_X0 & chn_b_rsc_lz_R0 );
  assign chn_a_rsci_oswt_unreg_pff_R = ( chn_a_rsci_oswt_unreg_pff_X0 & chn_a_rsci_oswt_unreg_pff_R0 );
  assign chn_a_rsc_lz_R = ( chn_a_rsc_lz_X0 & chn_a_rsc_lz_R0 );
 // ground taints for floating regs
 // ground taints for unused wires
  assign { FpMul_6U_10U_else_2_else_if_if_acc_1_itm_5_1_R , FpMul_6U_10U_else_2_else_if_if_acc_1_itm_5_1_C , FpMul_6U_10U_else_2_else_if_if_acc_1_itm_5_1_X , FpMul_6U_10U_else_2_if_acc_itm_6_1_R , FpMul_6U_10U_else_2_if_acc_itm_6_1_C , FpMul_6U_10U_else_2_if_acc_itm_6_1_X , FpMul_6U_10U_oelse_1_acc_itm_7_1_R , FpMul_6U_10U_oelse_1_acc_itm_7_1_C , FpMul_6U_10U_oelse_1_acc_itm_7_1_X , nl_FpMantRNE_22U_11U_else_acc_nl_R , nl_FpMantRNE_22U_11U_else_acc_nl_C , nl_FpMantRNE_22U_11U_else_acc_nl_X , nl_FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_R , nl_FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_C , nl_FpMantWidthDec_6U_21U_10U_0U_0U_o_expo_sva_1_X , nl_FpMul_6U_10U_else_2_acc_1_nl_R , nl_FpMul_6U_10U_else_2_acc_1_nl_C , nl_FpMul_6U_10U_else_2_acc_1_nl_X , nl_FpMul_6U_10U_else_2_else_acc_2_nl_R , nl_FpMul_6U_10U_else_2_else_acc_2_nl_C , nl_FpMul_6U_10U_else_2_else_acc_2_nl_X , nl_FpMul_6U_10U_else_2_else_if_if_acc_1_nl_R , nl_FpMul_6U_10U_else_2_else_if_if_acc_1_nl_C , nl_FpMul_6U_10U_else_2_else_if_if_acc_1_nl_X , nl_FpMul_6U_10U_else_2_else_if_if_acc_nl_R , nl_FpMul_6U_10U_else_2_else_if_if_acc_nl_C , nl_FpMul_6U_10U_else_2_else_if_if_acc_nl_X , nl_FpMul_6U_10U_else_2_if_acc_nl_R , nl_FpMul_6U_10U_else_2_if_acc_nl_C , nl_FpMul_6U_10U_else_2_if_acc_nl_X , nl_FpMul_6U_10U_oelse_1_acc_1_nl_R , nl_FpMul_6U_10U_oelse_1_acc_1_nl_C , nl_FpMul_6U_10U_oelse_1_acc_1_nl_X , nl_FpMul_6U_10U_oelse_1_acc_nl_R , nl_FpMul_6U_10U_oelse_1_acc_nl_C , nl_FpMul_6U_10U_oelse_1_acc_nl_X , nl_HLS_fp17_mul_core_chn_o_rsci_inst_chn_o_rsci_d_R , nl_HLS_fp17_mul_core_chn_o_rsci_inst_chn_o_rsci_d_C , nl_HLS_fp17_mul_core_chn_o_rsci_inst_chn_o_rsci_d_X  } = 0;
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_PREV_VAL1 <= FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs ;
    if( INSTR_IN_ZY ) FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_PREV_VAL2 <= FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMul_6U_10U_ua_sva_1_15_0_1_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMul_6U_10U_ua_sva_1_15_0_1_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMul_6U_10U_ua_sva_1_15_0_1_PREV_VAL1 <= FpMul_6U_10U_ua_sva_1_15_0_1 ;
    if( INSTR_IN_ZY ) FpMul_6U_10U_ua_sva_1_15_0_1_PREV_VAL2 <= FpMul_6U_10U_ua_sva_1_15_0_1_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMul_6U_10U_ub_sva_1_15_0_1_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMul_6U_10U_ub_sva_1_15_0_1_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMul_6U_10U_ub_sva_1_15_0_1_PREV_VAL1 <= FpMul_6U_10U_ub_sva_1_15_0_1 ;
    if( INSTR_IN_ZY ) FpMul_6U_10U_ub_sva_1_15_0_1_PREV_VAL2 <= FpMul_6U_10U_ub_sva_1_15_0_1_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMul_6U_10U_mux_10_itm_3_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMul_6U_10U_mux_10_itm_3_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMul_6U_10U_mux_10_itm_3_PREV_VAL1 <= FpMul_6U_10U_mux_10_itm_3 ;
    if( INSTR_IN_ZY ) FpMul_6U_10U_mux_10_itm_3_PREV_VAL2 <= FpMul_6U_10U_mux_10_itm_3_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_PREV_VAL1 <= FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3 ;
    if( INSTR_IN_ZY ) FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_PREV_VAL2 <= FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMul_6U_10U_lor_1_lpi_1_dfm_3_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMul_6U_10U_lor_1_lpi_1_dfm_3_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMul_6U_10U_lor_1_lpi_1_dfm_3_PREV_VAL1 <= FpMul_6U_10U_lor_1_lpi_1_dfm_3 ;
    if( INSTR_IN_ZY ) FpMul_6U_10U_lor_1_lpi_1_dfm_3_PREV_VAL2 <= FpMul_6U_10U_lor_1_lpi_1_dfm_3_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMul_6U_10U_p_mant_p1_sva_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMul_6U_10U_p_mant_p1_sva_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMul_6U_10U_p_mant_p1_sva_PREV_VAL1 <= FpMul_6U_10U_p_mant_p1_sva ;
    if( INSTR_IN_ZY ) FpMul_6U_10U_p_mant_p1_sva_PREV_VAL2 <= FpMul_6U_10U_p_mant_p1_sva_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMul_6U_10U_lor_1_lpi_1_dfm_4_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMul_6U_10U_lor_1_lpi_1_dfm_4_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMul_6U_10U_lor_1_lpi_1_dfm_4_PREV_VAL1 <= FpMul_6U_10U_lor_1_lpi_1_dfm_4 ;
    if( INSTR_IN_ZY ) FpMul_6U_10U_lor_1_lpi_1_dfm_4_PREV_VAL2 <= FpMul_6U_10U_lor_1_lpi_1_dfm_4_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_PREV_VAL1 <= FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4 ;
    if( INSTR_IN_ZY ) FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_PREV_VAL2 <= FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) IsNaN_6U_10U_1_land_lpi_1_dfm_4_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) IsNaN_6U_10U_1_land_lpi_1_dfm_4_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) IsNaN_6U_10U_1_land_lpi_1_dfm_4_PREV_VAL1 <= IsNaN_6U_10U_1_land_lpi_1_dfm_4 ;
    if( INSTR_IN_ZY ) IsNaN_6U_10U_1_land_lpi_1_dfm_4_PREV_VAL2 <= IsNaN_6U_10U_1_land_lpi_1_dfm_4_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) IsNaN_6U_10U_land_lpi_1_dfm_4_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) IsNaN_6U_10U_land_lpi_1_dfm_4_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) IsNaN_6U_10U_land_lpi_1_dfm_4_PREV_VAL1 <= IsNaN_6U_10U_land_lpi_1_dfm_4 ;
    if( INSTR_IN_ZY ) IsNaN_6U_10U_land_lpi_1_dfm_4_PREV_VAL2 <= IsNaN_6U_10U_land_lpi_1_dfm_4_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMul_6U_10U_mux_10_itm_4_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMul_6U_10U_mux_10_itm_4_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMul_6U_10U_mux_10_itm_4_PREV_VAL1 <= FpMul_6U_10U_mux_10_itm_4 ;
    if( INSTR_IN_ZY ) FpMul_6U_10U_mux_10_itm_4_PREV_VAL2 <= FpMul_6U_10U_mux_10_itm_4_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_PREV_VAL1 <= FpMul_6U_10U_lor_1_lpi_1_dfm_st_4 ;
    if( INSTR_IN_ZY ) FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_PREV_VAL2 <= FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_PREV_VAL1 <= FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2 ;
    if( INSTR_IN_ZY ) FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_PREV_VAL2 <= FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_PREV_VAL1 <= FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2 ;
    if( INSTR_IN_ZY ) FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_PREV_VAL2 <= FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_PREV_VAL1 <= FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4 ;
    if( INSTR_IN_ZY ) FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_PREV_VAL2 <= FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_PREV_VAL1 <= FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2 ;
    if( INSTR_IN_ZY ) FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_PREV_VAL2 <= FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMul_6U_10U_p_mant_p1_sva_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMul_6U_10U_p_mant_p1_sva_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMul_6U_10U_p_mant_p1_sva_2_PREV_VAL1 <= FpMul_6U_10U_p_mant_p1_sva_2 ;
    if( INSTR_IN_ZY ) FpMul_6U_10U_p_mant_p1_sva_2_PREV_VAL2 <= FpMul_6U_10U_p_mant_p1_sva_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMul_6U_10U_p_expo_sva_5_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMul_6U_10U_p_expo_sva_5_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMul_6U_10U_p_expo_sva_5_PREV_VAL1 <= FpMul_6U_10U_p_expo_sva_5 ;
    if( INSTR_IN_ZY ) FpMul_6U_10U_p_expo_sva_5_PREV_VAL2 <= FpMul_6U_10U_p_expo_sva_5_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) main_stage_v_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) main_stage_v_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) main_stage_v_2_PREV_VAL1 <= main_stage_v_2 ;
    if( INSTR_IN_ZY ) main_stage_v_2_PREV_VAL2 <= main_stage_v_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) IsNaN_6U_10U_1_land_lpi_1_dfm_3_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) IsNaN_6U_10U_1_land_lpi_1_dfm_3_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) IsNaN_6U_10U_1_land_lpi_1_dfm_3_PREV_VAL1 <= IsNaN_6U_10U_1_land_lpi_1_dfm_3 ;
    if( INSTR_IN_ZY ) IsNaN_6U_10U_1_land_lpi_1_dfm_3_PREV_VAL2 <= IsNaN_6U_10U_1_land_lpi_1_dfm_3_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_PREV_VAL1 <= FpMul_6U_10U_lor_1_lpi_1_dfm_st_3 ;
    if( INSTR_IN_ZY ) FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_PREV_VAL2 <= FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) IsNaN_6U_10U_land_lpi_1_dfm_st_3_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) IsNaN_6U_10U_land_lpi_1_dfm_st_3_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) IsNaN_6U_10U_land_lpi_1_dfm_st_3_PREV_VAL1 <= IsNaN_6U_10U_land_lpi_1_dfm_st_3 ;
    if( INSTR_IN_ZY ) IsNaN_6U_10U_land_lpi_1_dfm_st_3_PREV_VAL2 <= IsNaN_6U_10U_land_lpi_1_dfm_st_3_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_PREV_VAL1 <= FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3 ;
    if( INSTR_IN_ZY ) FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_PREV_VAL2 <= FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) main_stage_v_1_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) main_stage_v_1_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) main_stage_v_1_PREV_VAL1 <= main_stage_v_1 ;
    if( INSTR_IN_ZY ) main_stage_v_1_PREV_VAL2 <= main_stage_v_1_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL1 <= reg_chn_o_rsci_ld_core_psct_cse ;
    if( INSTR_IN_ZY ) reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL2 <= reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_o_rsci_d_15_10_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_o_rsci_d_15_10_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_15_10_PREV_VAL1 <= chn_o_rsci_d_15_10 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_15_10_PREV_VAL2 <= chn_o_rsci_d_15_10_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_o_rsci_d_16_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_o_rsci_d_16_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_16_PREV_VAL1 <= chn_o_rsci_d_16 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_16_PREV_VAL2 <= chn_o_rsci_d_16_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_o_rsci_d_9_0_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_o_rsci_d_9_0_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_9_0_PREV_VAL1 <= chn_o_rsci_d_9_0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_9_0_PREV_VAL2 <= chn_o_rsci_d_9_0_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) reg_chn_b_rsci_ld_core_psct_cse_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) reg_chn_b_rsci_ld_core_psct_cse_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) reg_chn_b_rsci_ld_core_psct_cse_PREV_VAL1 <= reg_chn_b_rsci_ld_core_psct_cse ;
    if( INSTR_IN_ZY ) reg_chn_b_rsci_ld_core_psct_cse_PREV_VAL2 <= reg_chn_b_rsci_ld_core_psct_cse_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_o_rsci_iswt0_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_o_rsci_iswt0_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_iswt0_PREV_VAL1 <= chn_o_rsci_iswt0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_iswt0_PREV_VAL2 <= chn_o_rsci_iswt0_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) reg_chn_b_rsci_iswt0_cse_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) reg_chn_b_rsci_iswt0_cse_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) reg_chn_b_rsci_iswt0_cse_PREV_VAL1 <= reg_chn_b_rsci_iswt0_cse ;
    if( INSTR_IN_ZY ) reg_chn_b_rsci_iswt0_cse_PREV_VAL2 <= reg_chn_b_rsci_iswt0_cse_PREV_VAL1 ;
  end
 // ground taints for unused wire slices
  assign { _003__R20 [0], _003__R20 [1], _003__R20 [2], _003__R20 [3], _003__R20 [4], _003__R20 [5], _003__R20 [6], _003__R20 [7], _003__R20 [8] } = 0;
  assign { _003__X20 [0], _003__X20 [1], _003__X20 [2], _003__X20 [3], _003__X20 [4], _003__X20 [5], _003__X20 [6], _003__X20 [7], _003__X20 [8] } = 0;
  assign { _003__C20 [0], _003__C20 [1], _003__C20 [2], _003__C20 [3], _003__C20 [4], _003__C20 [5], _003__C20 [6], _003__C20 [7], _003__C20 [8] } = 0;
  assign { fsm_output_R3 [1:1] } = 0;
  assign { fsm_output_X3 [1:1] } = 0;
  assign { fsm_output_C3 [1:1] } = 0;
  assign { FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R2 [0], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R2 [1], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R2 [2], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R2 [3], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R2 [4], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R2 [5], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R2 [6], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R2 [7], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R2 [8], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R2 [9], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_R2 [19:11] } = 0;
  assign { FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X2 [0], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X2 [1], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X2 [2], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X2 [3], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X2 [4], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X2 [5], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X2 [6], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X2 [7], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X2 [8], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X2 [9], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_X2 [19:11] } = 0;
  assign { FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C2 [0], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C2 [1], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C2 [2], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C2 [3], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C2 [4], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C2 [5], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C2 [6], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C2 [7], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C2 [8], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C2 [9], FpMul_6U_10U_p_mant_20_1_lpi_1_dfm_3_mx0_C2 [19:11] } = 0;
  assert property( FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_r_flag == 0 || FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_PREV_VAL1 == FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_15_10_itm_2_PREV_VAL2 );
  assert property( FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_r_flag == 0 || FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_PREV_VAL1 == FpBitsToFloat_6U_10U_1_slc_FpBitsToFloat_6U_10U_ubits_1_9_0_itm_2_PREV_VAL2 );
  assert property( FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_r_flag == 0 || FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_PREV_VAL1 == FpMul_6U_10U_else_2_else_slc_FpMul_6U_10U_p_mant_p1_21_itm_2_PREV_VAL2 );
  assert property( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_r_flag == 0 || FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_PREV_VAL1 == FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_PREV_VAL2 );
  assert property( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_r_flag == 0 || FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_PREV_VAL1 == FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_3_PREV_VAL2 );
  assert property( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_r_flag == 0 || FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_PREV_VAL1 == FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_4_PREV_VAL2 );
  assert property( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_r_flag == 0 || FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_PREV_VAL1 == FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_3_PREV_VAL2 );
  assert property( FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_r_flag == 0 || FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_PREV_VAL1 == FpMul_6U_10U_else_2_if_slc_FpMul_6U_10U_else_2_if_acc_6_svs_st_4_PREV_VAL2 );
  assert property( FpMul_6U_10U_lor_1_lpi_1_dfm_3_r_flag == 0 || FpMul_6U_10U_lor_1_lpi_1_dfm_3_PREV_VAL1 == FpMul_6U_10U_lor_1_lpi_1_dfm_3_PREV_VAL2 );
  assert property( FpMul_6U_10U_lor_1_lpi_1_dfm_4_r_flag == 0 || FpMul_6U_10U_lor_1_lpi_1_dfm_4_PREV_VAL1 == FpMul_6U_10U_lor_1_lpi_1_dfm_4_PREV_VAL2 );
  assert property( FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_r_flag == 0 || FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_PREV_VAL1 == FpMul_6U_10U_lor_1_lpi_1_dfm_st_3_PREV_VAL2 );
  assert property( FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_r_flag == 0 || FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_PREV_VAL1 == FpMul_6U_10U_lor_1_lpi_1_dfm_st_4_PREV_VAL2 );
  assert property( FpMul_6U_10U_mux_10_itm_3_r_flag == 0 || FpMul_6U_10U_mux_10_itm_3_PREV_VAL1 == FpMul_6U_10U_mux_10_itm_3_PREV_VAL2 );
  assert property( FpMul_6U_10U_mux_10_itm_4_r_flag == 0 || FpMul_6U_10U_mux_10_itm_4_PREV_VAL1 == FpMul_6U_10U_mux_10_itm_4_PREV_VAL2 );
  assert property( FpMul_6U_10U_p_expo_sva_5_r_flag == 0 || FpMul_6U_10U_p_expo_sva_5_PREV_VAL1 == FpMul_6U_10U_p_expo_sva_5_PREV_VAL2 );
  assert property( FpMul_6U_10U_p_mant_p1_sva_r_flag == 0 || FpMul_6U_10U_p_mant_p1_sva_PREV_VAL1 == FpMul_6U_10U_p_mant_p1_sva_PREV_VAL2 );
  assert property( FpMul_6U_10U_p_mant_p1_sva_2_r_flag == 0 || FpMul_6U_10U_p_mant_p1_sva_2_PREV_VAL1 == FpMul_6U_10U_p_mant_p1_sva_2_PREV_VAL2 );
  assert property( FpMul_6U_10U_ua_sva_1_15_0_1_r_flag == 0 || FpMul_6U_10U_ua_sva_1_15_0_1_PREV_VAL1 == FpMul_6U_10U_ua_sva_1_15_0_1_PREV_VAL2 );
  assert property( FpMul_6U_10U_ub_sva_1_15_0_1_r_flag == 0 || FpMul_6U_10U_ub_sva_1_15_0_1_PREV_VAL1 == FpMul_6U_10U_ub_sva_1_15_0_1_PREV_VAL2 );
  assert property( IsNaN_6U_10U_1_land_lpi_1_dfm_3_r_flag == 0 || IsNaN_6U_10U_1_land_lpi_1_dfm_3_PREV_VAL1 == IsNaN_6U_10U_1_land_lpi_1_dfm_3_PREV_VAL2 );
  assert property( IsNaN_6U_10U_1_land_lpi_1_dfm_4_r_flag == 0 || IsNaN_6U_10U_1_land_lpi_1_dfm_4_PREV_VAL1 == IsNaN_6U_10U_1_land_lpi_1_dfm_4_PREV_VAL2 );
  assert property( IsNaN_6U_10U_land_lpi_1_dfm_4_r_flag == 0 || IsNaN_6U_10U_land_lpi_1_dfm_4_PREV_VAL1 == IsNaN_6U_10U_land_lpi_1_dfm_4_PREV_VAL2 );
  assert property( IsNaN_6U_10U_land_lpi_1_dfm_st_3_r_flag == 0 || IsNaN_6U_10U_land_lpi_1_dfm_st_3_PREV_VAL1 == IsNaN_6U_10U_land_lpi_1_dfm_st_3_PREV_VAL2 );
  assert property( chn_o_rsci_d_15_10_r_flag == 0 || chn_o_rsci_d_15_10_PREV_VAL1 == chn_o_rsci_d_15_10_PREV_VAL2 );
  assert property( chn_o_rsci_d_16_r_flag == 0 || chn_o_rsci_d_16_PREV_VAL1 == chn_o_rsci_d_16_PREV_VAL2 );
  assert property( chn_o_rsci_d_9_0_r_flag == 0 || chn_o_rsci_d_9_0_PREV_VAL1 == chn_o_rsci_d_9_0_PREV_VAL2 );
  assert property( chn_o_rsci_iswt0_r_flag == 0 || chn_o_rsci_iswt0_PREV_VAL1 == chn_o_rsci_iswt0_PREV_VAL2 );
  assert property( main_stage_v_1_r_flag == 0 || main_stage_v_1_PREV_VAL1 == main_stage_v_1_PREV_VAL2 );
  assert property( main_stage_v_2_r_flag == 0 || main_stage_v_2_PREV_VAL1 == main_stage_v_2_PREV_VAL2 );
  assert property( reg_chn_b_rsci_iswt0_cse_r_flag == 0 || reg_chn_b_rsci_iswt0_cse_PREV_VAL1 == reg_chn_b_rsci_iswt0_cse_PREV_VAL2 );
  assert property( reg_chn_b_rsci_ld_core_psct_cse_r_flag == 0 || reg_chn_b_rsci_ld_core_psct_cse_PREV_VAL1 == reg_chn_b_rsci_ld_core_psct_cse_PREV_VAL2 );
  assert property( reg_chn_o_rsci_ld_core_psct_cse_r_flag == 0 || reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL1 == reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL2 );
  assign rst_zy = !nvdla_core_rstn ;
endmodule
