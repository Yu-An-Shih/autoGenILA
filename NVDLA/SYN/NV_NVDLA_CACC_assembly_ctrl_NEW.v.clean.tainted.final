module NV_NVDLA_CACC_assembly_ctrl ( dp2reg_done , mac_a2accu_pd , mac_a2accu_pvld , mac_b2accu_pd , mac_b2accu_pvld , nvdla_core_clk , nvdla_core_rstn , reg2dp_clip_truncate , reg2dp_conv_mode , reg2dp_op_en , reg2dp_proc_precision , INSTR_IN_ZY , abuf_rd_addr_R0 , abuf_rd_addr_C0 , abuf_rd_addr_X0 , abuf_rd_en_R0 , abuf_rd_en_C0 , abuf_rd_en_X0 , accu_ctrl_pd_R0 , accu_ctrl_pd_C0 , accu_ctrl_pd_X0 , accu_ctrl_ram_valid_R0 , accu_ctrl_ram_valid_C0 , accu_ctrl_ram_valid_X0 , accu_ctrl_valid_R0 , accu_ctrl_valid_C0 , accu_ctrl_valid_X0 , cfg_in_en_mask_R0 , cfg_in_en_mask_C0 , cfg_in_en_mask_X0 , cfg_is_fp_R0 , cfg_is_fp_C0 , cfg_is_fp_X0 , cfg_is_int_R0 , cfg_is_int_C0 , cfg_is_int_X0 , cfg_is_int8_R0 , cfg_is_int8_C0 , cfg_is_int8_X0 , cfg_is_wg_R0 , cfg_is_wg_C0 , cfg_is_wg_X0 , cfg_truncate_R0 , cfg_truncate_C0 , cfg_truncate_X0 , dp2reg_done_T , dp2reg_done_S , mac_a2accu_pd_T , mac_a2accu_pd_S , mac_a2accu_pvld_T , mac_a2accu_pvld_S , mac_b2accu_pd_T , mac_b2accu_pd_S , mac_b2accu_pvld_T , mac_b2accu_pvld_S , nvdla_core_clk_T , nvdla_core_clk_S , nvdla_core_rstn_T , nvdla_core_rstn_S , reg2dp_clip_truncate_T , reg2dp_clip_truncate_S , reg2dp_conv_mode_T , reg2dp_conv_mode_S , reg2dp_op_en_T , reg2dp_op_en_S , reg2dp_proc_precision_T , reg2dp_proc_precision_S , slcg_cell_en_R0 , slcg_cell_en_C0 , slcg_cell_en_X0 , wait_for_op_en_R0 , wait_for_op_en_C0 , wait_for_op_en_X0 , abuf_rd_addr , abuf_rd_en , accu_ctrl_pd , accu_ctrl_ram_valid , accu_ctrl_valid , cfg_in_en_mask , cfg_is_fp , cfg_is_int , cfg_is_int8 , cfg_is_wg , cfg_truncate , slcg_cell_en , wait_for_op_en , abuf_rd_addr_T , abuf_rd_addr_S , abuf_rd_en_T , abuf_rd_en_S , accu_ctrl_pd_T , accu_ctrl_pd_S , accu_ctrl_ram_valid_T , accu_ctrl_ram_valid_S , accu_ctrl_valid_T , accu_ctrl_valid_S , cfg_in_en_mask_T , cfg_in_en_mask_S , cfg_is_fp_T , cfg_is_fp_S , cfg_is_int_T , cfg_is_int_S , cfg_is_int8_T , cfg_is_int8_S , cfg_is_wg_T , cfg_is_wg_S , cfg_truncate_T , cfg_truncate_S , dp2reg_done_R , dp2reg_done_X , dp2reg_done_C , mac_a2accu_pd_R , mac_a2accu_pd_X , mac_a2accu_pd_C , mac_a2accu_pvld_R , mac_a2accu_pvld_X , mac_a2accu_pvld_C , mac_b2accu_pd_R , mac_b2accu_pd_X , mac_b2accu_pd_C , mac_b2accu_pvld_R , mac_b2accu_pvld_X , mac_b2accu_pvld_C , nvdla_core_clk_R , nvdla_core_clk_X , nvdla_core_clk_C , nvdla_core_rstn_R , nvdla_core_rstn_X , nvdla_core_rstn_C , reg2dp_clip_truncate_R , reg2dp_clip_truncate_X , reg2dp_clip_truncate_C , reg2dp_conv_mode_R , reg2dp_conv_mode_X , reg2dp_conv_mode_C , reg2dp_op_en_R , reg2dp_op_en_X , reg2dp_op_en_C , reg2dp_proc_precision_R , reg2dp_proc_precision_X , reg2dp_proc_precision_C , slcg_cell_en_T , slcg_cell_en_S , wait_for_op_en_T , wait_for_op_en_S );
  logic rst_zy;
  integer i;
  input INSTR_IN_ZY;
  logic [4:0] _000_;
  logic [4:0] _000__T ;
  logic [4:0] _000__R ;
  logic [4:0] _000__C ;
  logic [4:0] _000__X ;
  logic [13:0] _000__S ;
  logic [4:0] _001_;
  logic [4:0] _001__T ;
  logic [4:0] _001__R ;
  logic [4:0] _001__C ;
  logic [4:0] _001__X ;
  logic [13:0] _001__S ;
  logic _002_;
  logic _002__T ;
  logic _002__R ;
  logic _002__C ;
  logic _002__X ;
  logic [13:0] _002__S ;
  logic _003_;
  logic _003__T ;
  logic _003__R ;
  logic _003__C ;
  logic _003__X ;
  logic [13:0] _003__S ;
  logic [8:0] _004_;
  logic [8:0] _004__T ;
  logic [8:0] _004__R ;
  logic [8:0] _004__C ;
  logic [8:0] _004__X ;
  logic [13:0] _004__S ;
  logic [6:0] _005_;
  logic [6:0] _005__T ;
  logic [6:0] _005__R ;
  logic [6:0] _005__C ;
  logic [6:0] _005__X ;
  logic [13:0] _005__S ;
  logic [4:0] _006_;
  logic [4:0] _006__T ;
  logic [4:0] _006__R ;
  logic [4:0] _006__C ;
  logic [4:0] _006__X ;
  logic [13:0] _006__S ;
  logic _007_;
  logic _007__T ;
  logic _007__R ;
  logic _007__C ;
  logic _007__X ;
  logic [13:0] _007__S ;
  logic [191:0] _008_;
  logic [191:0] _008__T ;
  logic [191:0] _008__R ;
  logic [191:0] _008__C ;
  logic [191:0] _008__X ;
  logic [13:0] _008__S ;
  logic _009_;
  logic _009__T ;
  logic _009__R ;
  logic _009__C ;
  logic _009__X ;
  logic [13:0] _009__S ;
  logic [3:0] _010_;
  logic [3:0] _010__T ;
  logic [3:0] _010__R ;
  logic [3:0] _010__C ;
  logic [3:0] _010__X ;
  logic [13:0] _010__S ;
  logic [15:0] _011_;
  logic [15:0] _011__T ;
  logic [15:0] _011__R ;
  logic [15:0] _011__C ;
  logic [15:0] _011__X ;
  logic [13:0] _011__S ;
  logic [15:0] _012_;
  logic [15:0] _012__T ;
  logic [15:0] _012__R ;
  logic [15:0] _012__C ;
  logic [15:0] _012__X ;
  logic [13:0] _012__S ;
  logic [15:0] _013_;
  logic [15:0] _013__T ;
  logic [15:0] _013__R ;
  logic [15:0] _013__C ;
  logic [15:0] _013__X ;
  logic [13:0] _013__S ;
  logic [15:0] _014_;
  logic [15:0] _014__T ;
  logic [15:0] _014__R ;
  logic [15:0] _014__C ;
  logic [15:0] _014__X ;
  logic [13:0] _014__S ;
  logic [15:0] _015_;
  logic [15:0] _015__T ;
  logic [15:0] _015__R ;
  logic [15:0] _015__C ;
  logic [15:0] _015__X ;
  logic [13:0] _015__S ;
  logic [15:0] _016_;
  logic [15:0] _016__T ;
  logic [15:0] _016__R ;
  logic [15:0] _016__C ;
  logic [15:0] _016__X ;
  logic [13:0] _016__S ;
  logic [15:0] _017_;
  logic [15:0] _017__T ;
  logic [15:0] _017__R ;
  logic [15:0] _017__C ;
  logic [15:0] _017__X ;
  logic [13:0] _017__S ;
  logic [15:0] _018_;
  logic [15:0] _018__T ;
  logic [15:0] _018__R ;
  logic [15:0] _018__C ;
  logic [15:0] _018__X ;
  logic [13:0] _018__S ;
  logic [7:0] _019_;
  logic [7:0] _019__T ;
  logic [7:0] _019__R ;
  logic [7:0] _019__C ;
  logic [7:0] _019__X ;
  logic [13:0] _019__S ;
  logic _020_;
  logic _020__T ;
  logic _020__R ;
  logic _020__C ;
  logic _020__X ;
  logic [13:0] _020__S ;
  logic _021_;
  logic _021__T ;
  logic _021__R ;
  logic _021__C ;
  logic _021__X ;
  logic [13:0] _021__S ;
  logic _022_;
  logic _022__T ;
  logic _022__R ;
  logic _022__C ;
  logic _022__X ;
  logic [13:0] _022__S ;
  logic [3:0] _023_;
  logic [3:0] _023__T ;
  logic [3:0] _023__R ;
  logic [3:0] _023__C ;
  logic [3:0] _023__X ;
  logic [13:0] _023__S ;
  logic [3:0] _024_;
  logic [3:0] _024__T ;
  logic [3:0] _024__R ;
  logic [3:0] _024__C ;
  logic [3:0] _024__X ;
  logic [13:0] _024__S ;
  logic [3:0] _025_;
  logic [3:0] _025__T ;
  logic [3:0] _025__R ;
  logic [3:0] _025__C ;
  logic [3:0] _025__X ;
  logic [13:0] _025__S ;
  logic [8:0] _026_;
  logic [8:0] _026__T ;
  logic [8:0] _026__R ;
  logic [8:0] _026__C ;
  logic [8:0] _026__X ;
  logic [13:0] _026__S ;
  logic _027_;
  logic _027__T ;
  logic _027__R ;
  logic _027__C ;
  logic _027__X ;
  logic [13:0] _027__S ;
  logic _028_;
  logic _028__T ;
  logic _028__R ;
  logic _028__C ;
  logic _028__X ;
  logic [13:0] _028__S ;
  logic _029_;
  logic _029__T ;
  logic _029__R ;
  logic _029__C ;
  logic _029__X ;
  logic [13:0] _029__S ;
  logic _030_;
  logic _030__T ;
  logic _030__R ;
  logic _030__C ;
  logic _030__X ;
  logic [13:0] _030__S ;
  logic _031_;
  logic _031__T ;
  logic _031__R ;
  logic _031__C ;
  logic _031__X ;
  logic [13:0] _031__S ;
  logic _032_;
  logic _032__T ;
  logic _032__R ;
  logic _032__C ;
  logic _032__X ;
  logic [13:0] _032__S ;
  logic _033_;
  logic _033__T ;
  logic _033__R ;
  logic _033__C ;
  logic _033__X ;
  logic [13:0] _033__S ;
  logic _034_;
  logic _034__T ;
  logic _034__R ;
  logic _034__C ;
  logic _034__X ;
  logic [13:0] _034__S ;
  logic _035_;
  logic _035__T ;
  logic _035__R ;
  logic _035__C ;
  logic _035__X ;
  logic [13:0] _035__S ;
  logic _036_;
  logic _036__T ;
  logic _036__R ;
  logic _036__C ;
  logic _036__X ;
  logic [13:0] _036__S ;
  logic _037_;
  logic _037__T ;
  logic _037__R ;
  logic _037__C ;
  logic _037__X ;
  logic [13:0] _037__S ;
  logic _038_;
  logic _038__T ;
  logic _038__R ;
  logic _038__C ;
  logic _038__X ;
  logic [13:0] _038__S ;
  logic _039_;
  logic _039__T ;
  logic _039__R ;
  logic _039__C ;
  logic _039__X ;
  logic [13:0] _039__S ;
  logic _040_;
  logic _040__T ;
  logic _040__R ;
  logic _040__C ;
  logic _040__X ;
  logic [13:0] _040__S ;
  logic _041_;
  logic _041__T ;
  logic _041__R ;
  logic _041__C ;
  logic _041__X ;
  logic [13:0] _041__S ;
  logic _042_;
  logic _042__T ;
  logic _042__R ;
  logic _042__C ;
  logic _042__X ;
  logic [13:0] _042__S ;
  logic _043_;
  logic _043__T ;
  logic _043__R ;
  logic _043__C ;
  logic _043__X ;
  logic [13:0] _043__S ;
  logic _044_;
  logic _044__T ;
  logic _044__R ;
  logic _044__C ;
  logic _044__X ;
  logic [13:0] _044__S ;
  logic _045_;
  logic _045__T ;
  logic _045__R ;
  logic _045__C ;
  logic _045__X ;
  logic [13:0] _045__S ;
  logic _046_;
  logic _046__T ;
  logic _046__R ;
  logic _046__C ;
  logic _046__X ;
  logic [13:0] _046__S ;
  logic _047_;
  logic _047__T ;
  logic _047__R ;
  logic _047__C ;
  logic _047__X ;
  logic [13:0] _047__S ;
  logic _048_;
  logic _048__T ;
  logic _048__R ;
  logic _048__C ;
  logic _048__X ;
  logic [13:0] _048__S ;
  logic _049_;
  logic _049__T ;
  logic _049__R ;
  logic _049__C ;
  logic _049__X ;
  logic [13:0] _049__S ;
  logic _050_;
  logic _050__T ;
  logic _050__R ;
  logic _050__C ;
  logic _050__X ;
  logic [13:0] _050__S ;
  logic [7:0] _051_;
  logic [7:0] _051__T ;
  logic [7:0] _051__R ;
  logic [7:0] _051__C ;
  logic [7:0] _051__X ;
  logic [13:0] _051__S ;
  logic [7:0] _052_;
  logic [7:0] _052__T ;
  logic [7:0] _052__R ;
  logic [7:0] _052__C ;
  logic [7:0] _052__X ;
  logic [13:0] _052__S ;
  logic [7:0] _053_;
  logic [7:0] _053__T ;
  logic [7:0] _053__R ;
  logic [7:0] _053__C ;
  logic [7:0] _053__X ;
  logic [13:0] _053__S ;
  logic _054_;
  logic _054__T ;
  logic _054__R ;
  logic _054__C ;
  logic _054__X ;
  logic [13:0] _054__S ;
  logic _055_;
  logic _055__T ;
  logic _055__R ;
  logic _055__C ;
  logic _055__X ;
  logic [13:0] _055__S ;
  logic [191:0] _056_;
  logic [191:0] _056__T ;
  logic [191:0] _056__R ;
  logic [191:0] _056__C ;
  logic [191:0] _056__X ;
  logic [13:0] _056__S ;
  logic [24:0] _057_;
  logic [24:0] _057__T ;
  logic [24:0] _057__R ;
  logic [24:0] _057__C ;
  logic [24:0] _057__X ;
  logic [13:0] _057__S ;
  logic [126:0] _058_;
  logic [126:0] _058__T ;
  logic [126:0] _058__R ;
  logic [126:0] _058__C ;
  logic [126:0] _058__X ;
  logic [13:0] _058__S ;
  logic [24:0] _059_;
  logic [24:0] _059__T ;
  logic [24:0] _059__R ;
  logic [24:0] _059__C ;
  logic [24:0] _059__X ;
  logic [13:0] _059__S ;
  logic [95:0] _060_;
  logic [95:0] _060__T ;
  logic [95:0] _060__R ;
  logic [95:0] _060__C ;
  logic [95:0] _060__X ;
  logic [13:0] _060__S ;
  logic [639:0] _061_;
  logic [639:0] _061__T ;
  logic [639:0] _061__R ;
  logic [639:0] _061__C ;
  logic [639:0] _061__X ;
  logic [13:0] _061__S ;
  logic _062_;
  logic _062__T ;
  logic _062__R ;
  logic _062__C ;
  logic _062__X ;
  logic [13:0] _062__S ;
  logic _063_;
  logic _063__T ;
  logic _063__R ;
  logic _063__C ;
  logic _063__X ;
  logic [13:0] _063__S ;
  logic _064_;
  logic _064__T ;
  logic _064__R ;
  logic _064__C ;
  logic _064__X ;
  logic [13:0] _064__S ;
  logic [7:0] _065_;
  logic [7:0] _065__T ;
  logic [7:0] _065__R ;
  logic [7:0] _065__C ;
  logic [7:0] _065__X ;
  logic [13:0] _065__S ;
  logic [127:0] _066_;
  logic [127:0] _066__T ;
  logic [127:0] _066__R ;
  logic [127:0] _066__C ;
  logic [127:0] _066__X ;
  logic [13:0] _066__S ;
  logic [127:0] _067_;
  logic [127:0] _067__T ;
  logic [127:0] _067__R ;
  logic [127:0] _067__C ;
  logic [127:0] _067__X ;
  logic [13:0] _067__S ;
  logic _068_;
  logic _068__T ;
  logic _068__R ;
  logic _068__C ;
  logic _068__X ;
  logic [13:0] _068__S ;
  logic _069_;
  logic _069__T ;
  logic _069__R ;
  logic _069__C ;
  logic _069__X ;
  logic [13:0] _069__S ;
  logic _070_;
  logic _070__T ;
  logic _070__R ;
  logic _070__C ;
  logic _070__X ;
  logic [13:0] _070__S ;
  logic _071_;
  logic _071__T ;
  logic _071__R ;
  logic _071__C ;
  logic _071__X ;
  logic [13:0] _071__S ;
  logic [7:0] _072_;
  logic [7:0] _072__T ;
  logic [7:0] _072__R ;
  logic [7:0] _072__C ;
  logic [7:0] _072__X ;
  logic [13:0] _072__S ;
  logic _073_;
  logic _073__T ;
  logic _073__R ;
  logic _073__C ;
  logic _073__X ;
  logic [13:0] _073__S ;
  logic _074_;
  logic _074__T ;
  logic _074__R ;
  logic _074__C ;
  logic _074__X ;
  logic [13:0] _074__S ;
  logic _075_;
  logic _075__T ;
  logic _075__R ;
  logic _075__C ;
  logic _075__X ;
  logic [13:0] _075__S ;
  logic _076_;
  logic _076__T ;
  logic _076__R ;
  logic _076__C ;
  logic _076__X ;
  logic [13:0] _076__S ;
  logic [7:0] _077_;
  logic [7:0] _077__T ;
  logic [7:0] _077__R ;
  logic [7:0] _077__C ;
  logic [7:0] _077__X ;
  logic [13:0] _077__S ;
  logic [7:0] _078_;
  logic [7:0] _078__T ;
  logic [7:0] _078__R ;
  logic [7:0] _078__C ;
  logic [7:0] _078__X ;
  logic [13:0] _078__S ;
  logic _079_;
  logic _079__T ;
  logic _079__R ;
  logic _079__C ;
  logic _079__X ;
  logic [13:0] _079__S ;
  logic [127:0] _080_;
  logic [127:0] _080__T ;
  logic [127:0] _080__R ;
  logic [127:0] _080__C ;
  logic [127:0] _080__X ;
  logic [13:0] _080__S ;
  logic [63:0] _081_;
  logic [63:0] _081__T ;
  logic [63:0] _081__R ;
  logic [63:0] _081__C ;
  logic [63:0] _081__X ;
  logic [13:0] _081__S ;
  output [4:0] abuf_rd_addr;
  logic [4:0] abuf_rd_addr ;
  output [4:0] abuf_rd_addr_T ;
  logic [4:0] abuf_rd_addr_T ;
  logic [4:0] abuf_rd_addr_R ;
  logic [4:0] abuf_rd_addr_C ;
  logic [4:0] abuf_rd_addr_X ;
  logic [13:0] abuf_rd_addr_S ;
  input [4:0] abuf_rd_addr_R0 ;
  input [4:0] abuf_rd_addr_C0 ;
  input [4:0] abuf_rd_addr_X0 ;
  output [13:0] abuf_rd_addr_S ;
  output [7:0] abuf_rd_en;
  logic [7:0] abuf_rd_en ;
  output [7:0] abuf_rd_en_T ;
  logic [7:0] abuf_rd_en_T ;
  logic [7:0] abuf_rd_en_R ;
  logic [7:0] abuf_rd_en_C ;
  logic [7:0] abuf_rd_en_X ;
  logic [13:0] abuf_rd_en_S ;
  input [7:0] abuf_rd_en_R0 ;
  input [7:0] abuf_rd_en_C0 ;
  input [7:0] abuf_rd_en_X0 ;
  output [13:0] abuf_rd_en_S ;
  logic [4:0] accu_addr;
  logic [4:0] accu_addr_T ;
  logic [4:0] accu_addr_R ;
  logic [4:0] accu_addr_C ;
  logic [4:0] accu_addr_X ;
  logic [13:0] accu_addr_S ;
  logic [4:0] accu_addr_d0;
  logic [4:0] accu_addr_d0_T ;
  logic [4:0] accu_addr_d0_R ;
  logic [4:0] accu_addr_d0_C ;
  logic [4:0] accu_addr_d0_X ;
  logic [13:0] accu_addr_d0_S ;
  logic [4:0] accu_addr_d1;
  logic [4:0]  accu_addr_d1_T ;
  logic [4:0]  accu_addr_d1_PREV_VAL1 ;
  logic [4:0]  accu_addr_d1_PREV_VAL2 ;
  logic [4:0]  accu_addr_d1_R ;
  logic [4:0]  accu_addr_d1_X ;
  logic [4:0]  accu_addr_d1_C ;
  logic [13:0] accu_addr_d1_S ;
  logic accu_addr_d1_t_flag ;
  logic accu_addr_d1_r_flag ;
  assign accu_addr_d1_S = 974 ;
  logic [4:0] accu_addr_d2;
  logic [4:0]  accu_addr_d2_T ;
  logic [4:0]  accu_addr_d2_PREV_VAL1 ;
  logic [4:0]  accu_addr_d2_PREV_VAL2 ;
  logic [4:0]  accu_addr_d2_R ;
  logic [4:0]  accu_addr_d2_X ;
  logic [4:0]  accu_addr_d2_C ;
  logic [13:0] accu_addr_d2_S ;
  logic accu_addr_d2_t_flag ;
  logic accu_addr_d2_r_flag ;
  assign accu_addr_d2_S = 975 ;
  logic [4:0] accu_batch_index;
  logic [4:0] accu_batch_index_T ;
  logic [4:0] accu_batch_index_R ;
  logic [4:0] accu_batch_index_C ;
  logic [4:0] accu_batch_index_X ;
  logic [13:0] accu_batch_index_S ;
  logic accu_channel_end;
  logic accu_channel_end_T ;
  logic accu_channel_end_R ;
  logic accu_channel_end_C ;
  logic accu_channel_end_X ;
  logic [13:0] accu_channel_end_S ;
  logic accu_channel_end_d0;
  logic accu_channel_end_d0_T ;
  logic accu_channel_end_d0_R ;
  logic accu_channel_end_d0_C ;
  logic accu_channel_end_d0_X ;
  logic [13:0] accu_channel_end_d0_S ;
  logic accu_channel_end_d1;
  logic  accu_channel_end_d1_T ;
  logic  accu_channel_end_d1_PREV_VAL1 ;
  logic  accu_channel_end_d1_PREV_VAL2 ;
  logic  accu_channel_end_d1_R ;
  logic  accu_channel_end_d1_X ;
  logic  accu_channel_end_d1_C ;
  logic [13:0] accu_channel_end_d1_S ;
  logic accu_channel_end_d1_t_flag ;
  logic accu_channel_end_d1_r_flag ;
  assign accu_channel_end_d1_S = 976 ;
  logic accu_channel_end_d2;
  logic  accu_channel_end_d2_T ;
  logic  accu_channel_end_d2_PREV_VAL1 ;
  logic  accu_channel_end_d2_PREV_VAL2 ;
  logic  accu_channel_end_d2_R ;
  logic  accu_channel_end_d2_X ;
  logic  accu_channel_end_d2_C ;
  logic [13:0] accu_channel_end_d2_S ;
  logic accu_channel_end_d2_t_flag ;
  logic accu_channel_end_d2_r_flag ;
  assign accu_channel_end_d2_S = 977 ;
  logic [8:0] accu_channel_st;
  logic [8:0]  accu_channel_st_T ;
  logic [8:0]  accu_channel_st_PREV_VAL1 ;
  logic [8:0]  accu_channel_st_PREV_VAL2 ;
  logic [8:0]  accu_channel_st_R ;
  logic [8:0]  accu_channel_st_X ;
  logic [8:0]  accu_channel_st_C ;
  logic [13:0] accu_channel_st_S ;
  logic accu_channel_st_t_flag ;
  logic accu_channel_st_r_flag ;
  assign accu_channel_st_S = 978 ;
  logic accu_channel_st_w;
  logic accu_channel_st_w_T ;
  logic accu_channel_st_w_R ;
  logic accu_channel_st_w_C ;
  logic accu_channel_st_w_X ;
  logic [13:0] accu_channel_st_w_S ;
  logic [6:0] accu_cnt;
  logic [6:0]  accu_cnt_T ;
  logic [6:0]  accu_cnt_PREV_VAL1 ;
  logic [6:0]  accu_cnt_PREV_VAL2 ;
  logic [6:0]  accu_cnt_R ;
  logic [6:0]  accu_cnt_X ;
  logic [6:0]  accu_cnt_C ;
  logic [13:0] accu_cnt_S ;
  logic accu_cnt_t_flag ;
  logic accu_cnt_r_flag ;
  assign accu_cnt_S = 979 ;
  logic [6:0] accu_cnt_inc;
  logic [6:0] accu_cnt_inc_T ;
  logic [6:0] accu_cnt_inc_R ;
  logic [6:0] accu_cnt_inc_C ;
  logic [6:0] accu_cnt_inc_X ;
  logic [13:0] accu_cnt_inc_S ;
  logic [6:0] accu_cnt_w;
  logic [6:0] accu_cnt_w_T ;
  logic [6:0] accu_cnt_w_R ;
  logic [6:0] accu_cnt_w_C ;
  logic [6:0] accu_cnt_w_X ;
  logic [13:0] accu_cnt_w_S ;
  logic [4:0] accu_ctrl_addr;
  logic [4:0]  accu_ctrl_addr_T ;
  logic [4:0]  accu_ctrl_addr_PREV_VAL1 ;
  logic [4:0]  accu_ctrl_addr_PREV_VAL2 ;
  logic [4:0]  accu_ctrl_addr_R ;
  logic [4:0]  accu_ctrl_addr_X ;
  logic [4:0]  accu_ctrl_addr_C ;
  logic [13:0] accu_ctrl_addr_S ;
  logic accu_ctrl_addr_t_flag ;
  logic accu_ctrl_addr_r_flag ;
  assign accu_ctrl_addr_S = 980 ;
  logic accu_ctrl_channel_end;
  logic  accu_ctrl_channel_end_T ;
  logic  accu_ctrl_channel_end_PREV_VAL1 ;
  logic  accu_ctrl_channel_end_PREV_VAL2 ;
  logic  accu_ctrl_channel_end_R ;
  logic  accu_ctrl_channel_end_X ;
  logic  accu_ctrl_channel_end_C ;
  logic [13:0] accu_ctrl_channel_end_S ;
  logic accu_ctrl_channel_end_t_flag ;
  logic accu_ctrl_channel_end_r_flag ;
  assign accu_ctrl_channel_end_S = 981 ;
  logic [191:0] accu_ctrl_dlv_elem_mask;
  logic [191:0]  accu_ctrl_dlv_elem_mask_T ;
  logic [191:0]  accu_ctrl_dlv_elem_mask_PREV_VAL1 ;
  logic [191:0]  accu_ctrl_dlv_elem_mask_PREV_VAL2 ;
  logic [191:0]  accu_ctrl_dlv_elem_mask_R ;
  logic [191:0]  accu_ctrl_dlv_elem_mask_X ;
  logic [191:0]  accu_ctrl_dlv_elem_mask_C ;
  logic [13:0] accu_ctrl_dlv_elem_mask_S ;
  logic accu_ctrl_dlv_elem_mask_t_flag ;
  logic accu_ctrl_dlv_elem_mask_r_flag ;
  assign accu_ctrl_dlv_elem_mask_S = 982 ;
  logic accu_ctrl_layer_end;
  logic  accu_ctrl_layer_end_T ;
  logic  accu_ctrl_layer_end_PREV_VAL1 ;
  logic  accu_ctrl_layer_end_PREV_VAL2 ;
  logic  accu_ctrl_layer_end_R ;
  logic  accu_ctrl_layer_end_X ;
  logic  accu_ctrl_layer_end_C ;
  logic [13:0] accu_ctrl_layer_end_S ;
  logic accu_ctrl_layer_end_t_flag ;
  logic accu_ctrl_layer_end_r_flag ;
  assign accu_ctrl_layer_end_S = 983 ;
  logic [3:0] accu_ctrl_mode;
  logic [3:0]  accu_ctrl_mode_T ;
  logic [3:0]  accu_ctrl_mode_PREV_VAL1 ;
  logic [3:0]  accu_ctrl_mode_PREV_VAL2 ;
  logic [3:0]  accu_ctrl_mode_R ;
  logic [3:0]  accu_ctrl_mode_X ;
  logic [3:0]  accu_ctrl_mode_C ;
  logic [13:0] accu_ctrl_mode_S ;
  logic accu_ctrl_mode_t_flag ;
  logic accu_ctrl_mode_r_flag ;
  assign accu_ctrl_mode_S = 984 ;
  output [339:0] accu_ctrl_pd;
  logic [339:0] accu_ctrl_pd ;
  output [339:0] accu_ctrl_pd_T ;
  logic [339:0] accu_ctrl_pd_T ;
  logic [339:0] accu_ctrl_pd_R ;
  logic [339:0] accu_ctrl_pd_C ;
  logic [339:0] accu_ctrl_pd_X ;
  logic [13:0] accu_ctrl_pd_S ;
  input [339:0] accu_ctrl_pd_R0 ;
  input [339:0] accu_ctrl_pd_C0 ;
  input [339:0] accu_ctrl_pd_X0 ;
  output [13:0] accu_ctrl_pd_S ;
  logic [15:0] accu_ctrl_ram_sel_0;
  logic [15:0]  accu_ctrl_ram_sel_0_T ;
  logic [15:0]  accu_ctrl_ram_sel_0_PREV_VAL1 ;
  logic [15:0]  accu_ctrl_ram_sel_0_PREV_VAL2 ;
  logic [15:0]  accu_ctrl_ram_sel_0_R ;
  logic [15:0]  accu_ctrl_ram_sel_0_X ;
  logic [15:0]  accu_ctrl_ram_sel_0_C ;
  logic [13:0] accu_ctrl_ram_sel_0_S ;
  logic accu_ctrl_ram_sel_0_t_flag ;
  logic accu_ctrl_ram_sel_0_r_flag ;
  assign accu_ctrl_ram_sel_0_S = 985 ;
  logic [15:0] accu_ctrl_ram_sel_1;
  logic [15:0]  accu_ctrl_ram_sel_1_T ;
  logic [15:0]  accu_ctrl_ram_sel_1_PREV_VAL1 ;
  logic [15:0]  accu_ctrl_ram_sel_1_PREV_VAL2 ;
  logic [15:0]  accu_ctrl_ram_sel_1_R ;
  logic [15:0]  accu_ctrl_ram_sel_1_X ;
  logic [15:0]  accu_ctrl_ram_sel_1_C ;
  logic [13:0] accu_ctrl_ram_sel_1_S ;
  logic accu_ctrl_ram_sel_1_t_flag ;
  logic accu_ctrl_ram_sel_1_r_flag ;
  assign accu_ctrl_ram_sel_1_S = 986 ;
  logic [15:0] accu_ctrl_ram_sel_2;
  logic [15:0]  accu_ctrl_ram_sel_2_T ;
  logic [15:0]  accu_ctrl_ram_sel_2_PREV_VAL1 ;
  logic [15:0]  accu_ctrl_ram_sel_2_PREV_VAL2 ;
  logic [15:0]  accu_ctrl_ram_sel_2_R ;
  logic [15:0]  accu_ctrl_ram_sel_2_X ;
  logic [15:0]  accu_ctrl_ram_sel_2_C ;
  logic [13:0] accu_ctrl_ram_sel_2_S ;
  logic accu_ctrl_ram_sel_2_t_flag ;
  logic accu_ctrl_ram_sel_2_r_flag ;
  assign accu_ctrl_ram_sel_2_S = 987 ;
  logic [15:0] accu_ctrl_ram_sel_3;
  logic [15:0]  accu_ctrl_ram_sel_3_T ;
  logic [15:0]  accu_ctrl_ram_sel_3_PREV_VAL1 ;
  logic [15:0]  accu_ctrl_ram_sel_3_PREV_VAL2 ;
  logic [15:0]  accu_ctrl_ram_sel_3_R ;
  logic [15:0]  accu_ctrl_ram_sel_3_X ;
  logic [15:0]  accu_ctrl_ram_sel_3_C ;
  logic [13:0] accu_ctrl_ram_sel_3_S ;
  logic accu_ctrl_ram_sel_3_t_flag ;
  logic accu_ctrl_ram_sel_3_r_flag ;
  assign accu_ctrl_ram_sel_3_S = 988 ;
  logic [15:0] accu_ctrl_ram_sel_4;
  logic [15:0]  accu_ctrl_ram_sel_4_T ;
  logic [15:0]  accu_ctrl_ram_sel_4_PREV_VAL1 ;
  logic [15:0]  accu_ctrl_ram_sel_4_PREV_VAL2 ;
  logic [15:0]  accu_ctrl_ram_sel_4_R ;
  logic [15:0]  accu_ctrl_ram_sel_4_X ;
  logic [15:0]  accu_ctrl_ram_sel_4_C ;
  logic [13:0] accu_ctrl_ram_sel_4_S ;
  logic accu_ctrl_ram_sel_4_t_flag ;
  logic accu_ctrl_ram_sel_4_r_flag ;
  assign accu_ctrl_ram_sel_4_S = 989 ;
  logic [15:0] accu_ctrl_ram_sel_5;
  logic [15:0]  accu_ctrl_ram_sel_5_T ;
  logic [15:0]  accu_ctrl_ram_sel_5_PREV_VAL1 ;
  logic [15:0]  accu_ctrl_ram_sel_5_PREV_VAL2 ;
  logic [15:0]  accu_ctrl_ram_sel_5_R ;
  logic [15:0]  accu_ctrl_ram_sel_5_X ;
  logic [15:0]  accu_ctrl_ram_sel_5_C ;
  logic [13:0] accu_ctrl_ram_sel_5_S ;
  logic accu_ctrl_ram_sel_5_t_flag ;
  logic accu_ctrl_ram_sel_5_r_flag ;
  assign accu_ctrl_ram_sel_5_S = 990 ;
  logic [15:0] accu_ctrl_ram_sel_6;
  logic [15:0]  accu_ctrl_ram_sel_6_T ;
  logic [15:0]  accu_ctrl_ram_sel_6_PREV_VAL1 ;
  logic [15:0]  accu_ctrl_ram_sel_6_PREV_VAL2 ;
  logic [15:0]  accu_ctrl_ram_sel_6_R ;
  logic [15:0]  accu_ctrl_ram_sel_6_X ;
  logic [15:0]  accu_ctrl_ram_sel_6_C ;
  logic [13:0] accu_ctrl_ram_sel_6_S ;
  logic accu_ctrl_ram_sel_6_t_flag ;
  logic accu_ctrl_ram_sel_6_r_flag ;
  assign accu_ctrl_ram_sel_6_S = 991 ;
  logic [15:0] accu_ctrl_ram_sel_7;
  logic [15:0]  accu_ctrl_ram_sel_7_T ;
  logic [15:0]  accu_ctrl_ram_sel_7_PREV_VAL1 ;
  logic [15:0]  accu_ctrl_ram_sel_7_PREV_VAL2 ;
  logic [15:0]  accu_ctrl_ram_sel_7_R ;
  logic [15:0]  accu_ctrl_ram_sel_7_X ;
  logic [15:0]  accu_ctrl_ram_sel_7_C ;
  logic [13:0] accu_ctrl_ram_sel_7_S ;
  logic accu_ctrl_ram_sel_7_t_flag ;
  logic accu_ctrl_ram_sel_7_r_flag ;
  assign accu_ctrl_ram_sel_7_S = 992 ;
  output [191:0] accu_ctrl_ram_valid;
  logic [191:0] accu_ctrl_ram_valid ;
  output [191:0] accu_ctrl_ram_valid_T ;
  logic [191:0] accu_ctrl_ram_valid_T ;
  logic [191:0] accu_ctrl_ram_valid_R ;
  logic [191:0] accu_ctrl_ram_valid_C ;
  logic [191:0] accu_ctrl_ram_valid_X ;
  logic [13:0] accu_ctrl_ram_valid_S ;
  input [191:0] accu_ctrl_ram_valid_R0 ;
  input [191:0] accu_ctrl_ram_valid_C0 ;
  input [191:0] accu_ctrl_ram_valid_X0 ;
  output [13:0] accu_ctrl_ram_valid_S ;
  logic [7:0] accu_ctrl_rd_mask;
  logic [7:0]  accu_ctrl_rd_mask_T ;
  logic [7:0]  accu_ctrl_rd_mask_PREV_VAL1 ;
  logic [7:0]  accu_ctrl_rd_mask_PREV_VAL2 ;
  logic [7:0]  accu_ctrl_rd_mask_R ;
  logic [7:0]  accu_ctrl_rd_mask_X ;
  logic [7:0]  accu_ctrl_rd_mask_C ;
  logic [13:0] accu_ctrl_rd_mask_S ;
  logic accu_ctrl_rd_mask_t_flag ;
  logic accu_ctrl_rd_mask_r_flag ;
  assign accu_ctrl_rd_mask_S = 993 ;
  logic accu_ctrl_stripe_end;
  logic  accu_ctrl_stripe_end_T ;
  logic  accu_ctrl_stripe_end_PREV_VAL1 ;
  logic  accu_ctrl_stripe_end_PREV_VAL2 ;
  logic  accu_ctrl_stripe_end_R ;
  logic  accu_ctrl_stripe_end_X ;
  logic  accu_ctrl_stripe_end_C ;
  logic [13:0] accu_ctrl_stripe_end_S ;
  logic accu_ctrl_stripe_end_t_flag ;
  logic accu_ctrl_stripe_end_r_flag ;
  assign accu_ctrl_stripe_end_S = 994 ;
  output accu_ctrl_valid;
  logic accu_ctrl_valid ;
  output accu_ctrl_valid_T ;
  logic accu_ctrl_valid_T ;
  logic accu_ctrl_valid_R ;
  logic accu_ctrl_valid_C ;
  logic accu_ctrl_valid_X ;
  logic [13:0] accu_ctrl_valid_S ;
  input accu_ctrl_valid_R0 ;
  input accu_ctrl_valid_C0 ;
  input accu_ctrl_valid_X0 ;
  output [13:0] accu_ctrl_valid_S ;
  logic accu_ctrl_valid;
  logic  accu_ctrl_valid_T ;
  logic  accu_ctrl_valid_PREV_VAL1 ;
  logic  accu_ctrl_valid_PREV_VAL2 ;
  logic accu_ctrl_valid_t_flag ;
  logic accu_ctrl_valid_r_flag ;
  assign accu_ctrl_valid_S = 995 ;
  logic accu_ctrl_valid_d0;
  logic accu_ctrl_valid_d0_T ;
  logic accu_ctrl_valid_d0_R ;
  logic accu_ctrl_valid_d0_C ;
  logic accu_ctrl_valid_d0_X ;
  logic [13:0] accu_ctrl_valid_d0_S ;
  logic accu_ctrl_valid_d1;
  logic  accu_ctrl_valid_d1_T ;
  logic  accu_ctrl_valid_d1_PREV_VAL1 ;
  logic  accu_ctrl_valid_d1_PREV_VAL2 ;
  logic  accu_ctrl_valid_d1_R ;
  logic  accu_ctrl_valid_d1_X ;
  logic  accu_ctrl_valid_d1_C ;
  logic [13:0] accu_ctrl_valid_d1_S ;
  logic accu_ctrl_valid_d1_t_flag ;
  logic accu_ctrl_valid_d1_r_flag ;
  assign accu_ctrl_valid_d1_S = 996 ;
  logic accu_ctrl_valid_d2;
  logic  accu_ctrl_valid_d2_T ;
  logic  accu_ctrl_valid_d2_PREV_VAL1 ;
  logic  accu_ctrl_valid_d2_PREV_VAL2 ;
  logic  accu_ctrl_valid_d2_R ;
  logic  accu_ctrl_valid_d2_X ;
  logic  accu_ctrl_valid_d2_C ;
  logic [13:0] accu_ctrl_valid_d2_S ;
  logic accu_ctrl_valid_d2_t_flag ;
  logic accu_ctrl_valid_d2_r_flag ;
  assign accu_ctrl_valid_d2_S = 997 ;
  logic accu_layer_end;
  logic accu_layer_end_T ;
  logic accu_layer_end_R ;
  logic accu_layer_end_C ;
  logic accu_layer_end_X ;
  logic [13:0] accu_layer_end_S ;
  logic accu_layer_end_d0;
  logic accu_layer_end_d0_T ;
  logic accu_layer_end_d0_R ;
  logic accu_layer_end_d0_C ;
  logic accu_layer_end_d0_X ;
  logic [13:0] accu_layer_end_d0_S ;
  logic accu_layer_end_d1;
  logic  accu_layer_end_d1_T ;
  logic  accu_layer_end_d1_PREV_VAL1 ;
  logic  accu_layer_end_d1_PREV_VAL2 ;
  logic  accu_layer_end_d1_R ;
  logic  accu_layer_end_d1_X ;
  logic  accu_layer_end_d1_C ;
  logic [13:0] accu_layer_end_d1_S ;
  logic accu_layer_end_d1_t_flag ;
  logic accu_layer_end_d1_r_flag ;
  assign accu_layer_end_d1_S = 998 ;
  logic accu_layer_end_d2;
  logic  accu_layer_end_d2_T ;
  logic  accu_layer_end_d2_PREV_VAL1 ;
  logic  accu_layer_end_d2_PREV_VAL2 ;
  logic  accu_layer_end_d2_R ;
  logic  accu_layer_end_d2_X ;
  logic  accu_layer_end_d2_C ;
  logic [13:0] accu_layer_end_d2_S ;
  logic accu_layer_end_d2_t_flag ;
  logic accu_layer_end_d2_r_flag ;
  assign accu_layer_end_d2_S = 999 ;
  logic [3:0] accu_mode_d0;
  logic [3:0]  accu_mode_d0_T ;
  logic [3:0]  accu_mode_d0_PREV_VAL1 ;
  logic [3:0]  accu_mode_d0_PREV_VAL2 ;
  logic [3:0]  accu_mode_d0_R ;
  logic [3:0]  accu_mode_d0_X ;
  logic [3:0]  accu_mode_d0_C ;
  logic [13:0] accu_mode_d0_S ;
  logic accu_mode_d0_t_flag ;
  logic accu_mode_d0_r_flag ;
  assign accu_mode_d0_S = 1000 ;
  logic [3:0] accu_mode_d1;
  logic [3:0]  accu_mode_d1_T ;
  logic [3:0]  accu_mode_d1_PREV_VAL1 ;
  logic [3:0]  accu_mode_d1_PREV_VAL2 ;
  logic [3:0]  accu_mode_d1_R ;
  logic [3:0]  accu_mode_d1_X ;
  logic [3:0]  accu_mode_d1_C ;
  logic [13:0] accu_mode_d1_S ;
  logic accu_mode_d1_t_flag ;
  logic accu_mode_d1_r_flag ;
  assign accu_mode_d1_S = 1001 ;
  logic [3:0] accu_mode_d2;
  logic [3:0]  accu_mode_d2_T ;
  logic [3:0]  accu_mode_d2_PREV_VAL1 ;
  logic [3:0]  accu_mode_d2_PREV_VAL2 ;
  logic [3:0]  accu_mode_d2_R ;
  logic [3:0]  accu_mode_d2_X ;
  logic [3:0]  accu_mode_d2_C ;
  logic [13:0] accu_mode_d2_S ;
  logic accu_mode_d2_t_flag ;
  logic accu_mode_d2_r_flag ;
  assign accu_mode_d2_S = 1002 ;
  logic [8:0] accu_pd;
  logic [8:0]  accu_pd_T ;
  logic [8:0]  accu_pd_PREV_VAL1 ;
  logic [8:0]  accu_pd_PREV_VAL2 ;
  logic [8:0]  accu_pd_R ;
  logic [8:0]  accu_pd_X ;
  logic [8:0]  accu_pd_C ;
  logic [13:0] accu_pd_S ;
  logic accu_pd_t_flag ;
  logic accu_pd_r_flag ;
  assign accu_pd_S = 1003 ;
  logic accu_ram_sel_0_d0;
  logic  accu_ram_sel_0_d0_T ;
  logic  accu_ram_sel_0_d0_PREV_VAL1 ;
  logic  accu_ram_sel_0_d0_PREV_VAL2 ;
  logic  accu_ram_sel_0_d0_R ;
  logic  accu_ram_sel_0_d0_X ;
  logic  accu_ram_sel_0_d0_C ;
  logic [13:0] accu_ram_sel_0_d0_S ;
  logic accu_ram_sel_0_d0_t_flag ;
  logic accu_ram_sel_0_d0_r_flag ;
  assign accu_ram_sel_0_d0_S = 1004 ;
  logic accu_ram_sel_0_d1;
  logic  accu_ram_sel_0_d1_T ;
  logic  accu_ram_sel_0_d1_PREV_VAL1 ;
  logic  accu_ram_sel_0_d1_PREV_VAL2 ;
  logic  accu_ram_sel_0_d1_R ;
  logic  accu_ram_sel_0_d1_X ;
  logic  accu_ram_sel_0_d1_C ;
  logic [13:0] accu_ram_sel_0_d1_S ;
  logic accu_ram_sel_0_d1_t_flag ;
  logic accu_ram_sel_0_d1_r_flag ;
  assign accu_ram_sel_0_d1_S = 1005 ;
  logic accu_ram_sel_0_d2;
  logic  accu_ram_sel_0_d2_T ;
  logic  accu_ram_sel_0_d2_PREV_VAL1 ;
  logic  accu_ram_sel_0_d2_PREV_VAL2 ;
  logic  accu_ram_sel_0_d2_R ;
  logic  accu_ram_sel_0_d2_X ;
  logic  accu_ram_sel_0_d2_C ;
  logic [13:0] accu_ram_sel_0_d2_S ;
  logic accu_ram_sel_0_d2_t_flag ;
  logic accu_ram_sel_0_d2_r_flag ;
  assign accu_ram_sel_0_d2_S = 1006 ;
  logic accu_ram_sel_0_w;
  logic accu_ram_sel_0_w_T ;
  logic accu_ram_sel_0_w_R ;
  logic accu_ram_sel_0_w_C ;
  logic accu_ram_sel_0_w_X ;
  logic [13:0] accu_ram_sel_0_w_S ;
  logic accu_ram_sel_1_d0;
  logic  accu_ram_sel_1_d0_T ;
  logic  accu_ram_sel_1_d0_PREV_VAL1 ;
  logic  accu_ram_sel_1_d0_PREV_VAL2 ;
  logic  accu_ram_sel_1_d0_R ;
  logic  accu_ram_sel_1_d0_X ;
  logic  accu_ram_sel_1_d0_C ;
  logic [13:0] accu_ram_sel_1_d0_S ;
  logic accu_ram_sel_1_d0_t_flag ;
  logic accu_ram_sel_1_d0_r_flag ;
  assign accu_ram_sel_1_d0_S = 1007 ;
  logic accu_ram_sel_1_d1;
  logic  accu_ram_sel_1_d1_T ;
  logic  accu_ram_sel_1_d1_PREV_VAL1 ;
  logic  accu_ram_sel_1_d1_PREV_VAL2 ;
  logic  accu_ram_sel_1_d1_R ;
  logic  accu_ram_sel_1_d1_X ;
  logic  accu_ram_sel_1_d1_C ;
  logic [13:0] accu_ram_sel_1_d1_S ;
  logic accu_ram_sel_1_d1_t_flag ;
  logic accu_ram_sel_1_d1_r_flag ;
  assign accu_ram_sel_1_d1_S = 1008 ;
  logic accu_ram_sel_1_d2;
  logic  accu_ram_sel_1_d2_T ;
  logic  accu_ram_sel_1_d2_PREV_VAL1 ;
  logic  accu_ram_sel_1_d2_PREV_VAL2 ;
  logic  accu_ram_sel_1_d2_R ;
  logic  accu_ram_sel_1_d2_X ;
  logic  accu_ram_sel_1_d2_C ;
  logic [13:0] accu_ram_sel_1_d2_S ;
  logic accu_ram_sel_1_d2_t_flag ;
  logic accu_ram_sel_1_d2_r_flag ;
  assign accu_ram_sel_1_d2_S = 1009 ;
  logic accu_ram_sel_1_w;
  logic accu_ram_sel_1_w_T ;
  logic accu_ram_sel_1_w_R ;
  logic accu_ram_sel_1_w_C ;
  logic accu_ram_sel_1_w_X ;
  logic [13:0] accu_ram_sel_1_w_S ;
  logic accu_ram_sel_2_d0;
  logic  accu_ram_sel_2_d0_T ;
  logic  accu_ram_sel_2_d0_PREV_VAL1 ;
  logic  accu_ram_sel_2_d0_PREV_VAL2 ;
  logic  accu_ram_sel_2_d0_R ;
  logic  accu_ram_sel_2_d0_X ;
  logic  accu_ram_sel_2_d0_C ;
  logic [13:0] accu_ram_sel_2_d0_S ;
  logic accu_ram_sel_2_d0_t_flag ;
  logic accu_ram_sel_2_d0_r_flag ;
  assign accu_ram_sel_2_d0_S = 1010 ;
  logic accu_ram_sel_2_d1;
  logic  accu_ram_sel_2_d1_T ;
  logic  accu_ram_sel_2_d1_PREV_VAL1 ;
  logic  accu_ram_sel_2_d1_PREV_VAL2 ;
  logic  accu_ram_sel_2_d1_R ;
  logic  accu_ram_sel_2_d1_X ;
  logic  accu_ram_sel_2_d1_C ;
  logic [13:0] accu_ram_sel_2_d1_S ;
  logic accu_ram_sel_2_d1_t_flag ;
  logic accu_ram_sel_2_d1_r_flag ;
  assign accu_ram_sel_2_d1_S = 1011 ;
  logic accu_ram_sel_2_d2;
  logic  accu_ram_sel_2_d2_T ;
  logic  accu_ram_sel_2_d2_PREV_VAL1 ;
  logic  accu_ram_sel_2_d2_PREV_VAL2 ;
  logic  accu_ram_sel_2_d2_R ;
  logic  accu_ram_sel_2_d2_X ;
  logic  accu_ram_sel_2_d2_C ;
  logic [13:0] accu_ram_sel_2_d2_S ;
  logic accu_ram_sel_2_d2_t_flag ;
  logic accu_ram_sel_2_d2_r_flag ;
  assign accu_ram_sel_2_d2_S = 1012 ;
  logic accu_ram_sel_2_w;
  logic accu_ram_sel_2_w_T ;
  logic accu_ram_sel_2_w_R ;
  logic accu_ram_sel_2_w_C ;
  logic accu_ram_sel_2_w_X ;
  logic [13:0] accu_ram_sel_2_w_S ;
  logic accu_ram_sel_3_d0;
  logic  accu_ram_sel_3_d0_T ;
  logic  accu_ram_sel_3_d0_PREV_VAL1 ;
  logic  accu_ram_sel_3_d0_PREV_VAL2 ;
  logic  accu_ram_sel_3_d0_R ;
  logic  accu_ram_sel_3_d0_X ;
  logic  accu_ram_sel_3_d0_C ;
  logic [13:0] accu_ram_sel_3_d0_S ;
  logic accu_ram_sel_3_d0_t_flag ;
  logic accu_ram_sel_3_d0_r_flag ;
  assign accu_ram_sel_3_d0_S = 1013 ;
  logic accu_ram_sel_3_d1;
  logic  accu_ram_sel_3_d1_T ;
  logic  accu_ram_sel_3_d1_PREV_VAL1 ;
  logic  accu_ram_sel_3_d1_PREV_VAL2 ;
  logic  accu_ram_sel_3_d1_R ;
  logic  accu_ram_sel_3_d1_X ;
  logic  accu_ram_sel_3_d1_C ;
  logic [13:0] accu_ram_sel_3_d1_S ;
  logic accu_ram_sel_3_d1_t_flag ;
  logic accu_ram_sel_3_d1_r_flag ;
  assign accu_ram_sel_3_d1_S = 1014 ;
  logic accu_ram_sel_3_d2;
  logic  accu_ram_sel_3_d2_T ;
  logic  accu_ram_sel_3_d2_PREV_VAL1 ;
  logic  accu_ram_sel_3_d2_PREV_VAL2 ;
  logic  accu_ram_sel_3_d2_R ;
  logic  accu_ram_sel_3_d2_X ;
  logic  accu_ram_sel_3_d2_C ;
  logic [13:0] accu_ram_sel_3_d2_S ;
  logic accu_ram_sel_3_d2_t_flag ;
  logic accu_ram_sel_3_d2_r_flag ;
  assign accu_ram_sel_3_d2_S = 1015 ;
  logic accu_ram_sel_3_w;
  logic accu_ram_sel_3_w_T ;
  logic accu_ram_sel_3_w_R ;
  logic accu_ram_sel_3_w_C ;
  logic accu_ram_sel_3_w_X ;
  logic [13:0] accu_ram_sel_3_w_S ;
  logic accu_ram_sel_4_d0;
  logic  accu_ram_sel_4_d0_T ;
  logic  accu_ram_sel_4_d0_PREV_VAL1 ;
  logic  accu_ram_sel_4_d0_PREV_VAL2 ;
  logic  accu_ram_sel_4_d0_R ;
  logic  accu_ram_sel_4_d0_X ;
  logic  accu_ram_sel_4_d0_C ;
  logic [13:0] accu_ram_sel_4_d0_S ;
  logic accu_ram_sel_4_d0_t_flag ;
  logic accu_ram_sel_4_d0_r_flag ;
  assign accu_ram_sel_4_d0_S = 1016 ;
  logic accu_ram_sel_4_d1;
  logic  accu_ram_sel_4_d1_T ;
  logic  accu_ram_sel_4_d1_PREV_VAL1 ;
  logic  accu_ram_sel_4_d1_PREV_VAL2 ;
  logic  accu_ram_sel_4_d1_R ;
  logic  accu_ram_sel_4_d1_X ;
  logic  accu_ram_sel_4_d1_C ;
  logic [13:0] accu_ram_sel_4_d1_S ;
  logic accu_ram_sel_4_d1_t_flag ;
  logic accu_ram_sel_4_d1_r_flag ;
  assign accu_ram_sel_4_d1_S = 1017 ;
  logic accu_ram_sel_4_d2;
  logic  accu_ram_sel_4_d2_T ;
  logic  accu_ram_sel_4_d2_PREV_VAL1 ;
  logic  accu_ram_sel_4_d2_PREV_VAL2 ;
  logic  accu_ram_sel_4_d2_R ;
  logic  accu_ram_sel_4_d2_X ;
  logic  accu_ram_sel_4_d2_C ;
  logic [13:0] accu_ram_sel_4_d2_S ;
  logic accu_ram_sel_4_d2_t_flag ;
  logic accu_ram_sel_4_d2_r_flag ;
  assign accu_ram_sel_4_d2_S = 1018 ;
  logic accu_ram_sel_4_w;
  logic accu_ram_sel_4_w_T ;
  logic accu_ram_sel_4_w_R ;
  logic accu_ram_sel_4_w_C ;
  logic accu_ram_sel_4_w_X ;
  logic [13:0] accu_ram_sel_4_w_S ;
  logic accu_ram_sel_5_d0;
  logic  accu_ram_sel_5_d0_T ;
  logic  accu_ram_sel_5_d0_PREV_VAL1 ;
  logic  accu_ram_sel_5_d0_PREV_VAL2 ;
  logic  accu_ram_sel_5_d0_R ;
  logic  accu_ram_sel_5_d0_X ;
  logic  accu_ram_sel_5_d0_C ;
  logic [13:0] accu_ram_sel_5_d0_S ;
  logic accu_ram_sel_5_d0_t_flag ;
  logic accu_ram_sel_5_d0_r_flag ;
  assign accu_ram_sel_5_d0_S = 1019 ;
  logic accu_ram_sel_5_d1;
  logic  accu_ram_sel_5_d1_T ;
  logic  accu_ram_sel_5_d1_PREV_VAL1 ;
  logic  accu_ram_sel_5_d1_PREV_VAL2 ;
  logic  accu_ram_sel_5_d1_R ;
  logic  accu_ram_sel_5_d1_X ;
  logic  accu_ram_sel_5_d1_C ;
  logic [13:0] accu_ram_sel_5_d1_S ;
  logic accu_ram_sel_5_d1_t_flag ;
  logic accu_ram_sel_5_d1_r_flag ;
  assign accu_ram_sel_5_d1_S = 1020 ;
  logic accu_ram_sel_5_d2;
  logic  accu_ram_sel_5_d2_T ;
  logic  accu_ram_sel_5_d2_PREV_VAL1 ;
  logic  accu_ram_sel_5_d2_PREV_VAL2 ;
  logic  accu_ram_sel_5_d2_R ;
  logic  accu_ram_sel_5_d2_X ;
  logic  accu_ram_sel_5_d2_C ;
  logic [13:0] accu_ram_sel_5_d2_S ;
  logic accu_ram_sel_5_d2_t_flag ;
  logic accu_ram_sel_5_d2_r_flag ;
  assign accu_ram_sel_5_d2_S = 1021 ;
  logic accu_ram_sel_5_w;
  logic accu_ram_sel_5_w_T ;
  logic accu_ram_sel_5_w_R ;
  logic accu_ram_sel_5_w_C ;
  logic accu_ram_sel_5_w_X ;
  logic [13:0] accu_ram_sel_5_w_S ;
  logic accu_ram_sel_6_d0;
  logic  accu_ram_sel_6_d0_T ;
  logic  accu_ram_sel_6_d0_PREV_VAL1 ;
  logic  accu_ram_sel_6_d0_PREV_VAL2 ;
  logic  accu_ram_sel_6_d0_R ;
  logic  accu_ram_sel_6_d0_X ;
  logic  accu_ram_sel_6_d0_C ;
  logic [13:0] accu_ram_sel_6_d0_S ;
  logic accu_ram_sel_6_d0_t_flag ;
  logic accu_ram_sel_6_d0_r_flag ;
  assign accu_ram_sel_6_d0_S = 1022 ;
  logic accu_ram_sel_6_d1;
  logic  accu_ram_sel_6_d1_T ;
  logic  accu_ram_sel_6_d1_PREV_VAL1 ;
  logic  accu_ram_sel_6_d1_PREV_VAL2 ;
  logic  accu_ram_sel_6_d1_R ;
  logic  accu_ram_sel_6_d1_X ;
  logic  accu_ram_sel_6_d1_C ;
  logic [13:0] accu_ram_sel_6_d1_S ;
  logic accu_ram_sel_6_d1_t_flag ;
  logic accu_ram_sel_6_d1_r_flag ;
  assign accu_ram_sel_6_d1_S = 1023 ;
  logic accu_ram_sel_6_d2;
  logic  accu_ram_sel_6_d2_T ;
  logic  accu_ram_sel_6_d2_PREV_VAL1 ;
  logic  accu_ram_sel_6_d2_PREV_VAL2 ;
  logic  accu_ram_sel_6_d2_R ;
  logic  accu_ram_sel_6_d2_X ;
  logic  accu_ram_sel_6_d2_C ;
  logic [13:0] accu_ram_sel_6_d2_S ;
  logic accu_ram_sel_6_d2_t_flag ;
  logic accu_ram_sel_6_d2_r_flag ;
  assign accu_ram_sel_6_d2_S = 1024 ;
  logic accu_ram_sel_6_w;
  logic accu_ram_sel_6_w_T ;
  logic accu_ram_sel_6_w_R ;
  logic accu_ram_sel_6_w_C ;
  logic accu_ram_sel_6_w_X ;
  logic [13:0] accu_ram_sel_6_w_S ;
  logic accu_ram_sel_7_d0;
  logic  accu_ram_sel_7_d0_T ;
  logic  accu_ram_sel_7_d0_PREV_VAL1 ;
  logic  accu_ram_sel_7_d0_PREV_VAL2 ;
  logic  accu_ram_sel_7_d0_R ;
  logic  accu_ram_sel_7_d0_X ;
  logic  accu_ram_sel_7_d0_C ;
  logic [13:0] accu_ram_sel_7_d0_S ;
  logic accu_ram_sel_7_d0_t_flag ;
  logic accu_ram_sel_7_d0_r_flag ;
  assign accu_ram_sel_7_d0_S = 1025 ;
  logic accu_ram_sel_7_d1;
  logic  accu_ram_sel_7_d1_T ;
  logic  accu_ram_sel_7_d1_PREV_VAL1 ;
  logic  accu_ram_sel_7_d1_PREV_VAL2 ;
  logic  accu_ram_sel_7_d1_R ;
  logic  accu_ram_sel_7_d1_X ;
  logic  accu_ram_sel_7_d1_C ;
  logic [13:0] accu_ram_sel_7_d1_S ;
  logic accu_ram_sel_7_d1_t_flag ;
  logic accu_ram_sel_7_d1_r_flag ;
  assign accu_ram_sel_7_d1_S = 1026 ;
  logic accu_ram_sel_7_d2;
  logic  accu_ram_sel_7_d2_T ;
  logic  accu_ram_sel_7_d2_PREV_VAL1 ;
  logic  accu_ram_sel_7_d2_PREV_VAL2 ;
  logic  accu_ram_sel_7_d2_R ;
  logic  accu_ram_sel_7_d2_X ;
  logic  accu_ram_sel_7_d2_C ;
  logic [13:0] accu_ram_sel_7_d2_S ;
  logic accu_ram_sel_7_d2_t_flag ;
  logic accu_ram_sel_7_d2_r_flag ;
  assign accu_ram_sel_7_d2_S = 1027 ;
  logic accu_ram_sel_7_w;
  logic accu_ram_sel_7_w_T ;
  logic accu_ram_sel_7_w_R ;
  logic accu_ram_sel_7_w_C ;
  logic accu_ram_sel_7_w_X ;
  logic [13:0] accu_ram_sel_7_w_S ;
  logic accu_ram_valid;
  logic accu_ram_valid_T ;
  logic accu_ram_valid_R ;
  logic accu_ram_valid_C ;
  logic accu_ram_valid_X ;
  logic [13:0] accu_ram_valid_S ;
  logic accu_ram_valid_d0;
  logic accu_ram_valid_d0_T ;
  logic accu_ram_valid_d0_R ;
  logic accu_ram_valid_d0_C ;
  logic accu_ram_valid_d0_X ;
  logic [13:0] accu_ram_valid_d0_S ;
  logic accu_ram_valid_d1;
  logic  accu_ram_valid_d1_T ;
  logic  accu_ram_valid_d1_PREV_VAL1 ;
  logic  accu_ram_valid_d1_PREV_VAL2 ;
  logic  accu_ram_valid_d1_R ;
  logic  accu_ram_valid_d1_X ;
  logic  accu_ram_valid_d1_C ;
  logic [13:0] accu_ram_valid_d1_S ;
  logic accu_ram_valid_d1_t_flag ;
  logic accu_ram_valid_d1_r_flag ;
  assign accu_ram_valid_d1_S = 1028 ;
  logic accu_ram_valid_d2;
  logic  accu_ram_valid_d2_T ;
  logic  accu_ram_valid_d2_PREV_VAL1 ;
  logic  accu_ram_valid_d2_PREV_VAL2 ;
  logic  accu_ram_valid_d2_R ;
  logic  accu_ram_valid_d2_X ;
  logic  accu_ram_valid_d2_C ;
  logic [13:0] accu_ram_valid_d2_S ;
  logic accu_ram_valid_d2_t_flag ;
  logic accu_ram_valid_d2_r_flag ;
  assign accu_ram_valid_d2_S = 1029 ;
  logic [7:0] accu_rd_en;
  logic [7:0] accu_rd_en_T ;
  logic [7:0] accu_rd_en_R ;
  logic [7:0] accu_rd_en_C ;
  logic [7:0] accu_rd_en_X ;
  logic [13:0] accu_rd_en_S ;
  logic [7:0] accu_rd_mask;
  logic [7:0]  accu_rd_mask_T ;
  logic [7:0]  accu_rd_mask_PREV_VAL1 ;
  logic [7:0]  accu_rd_mask_PREV_VAL2 ;
  logic [7:0]  accu_rd_mask_R ;
  logic [7:0]  accu_rd_mask_X ;
  logic [7:0]  accu_rd_mask_C ;
  logic [13:0] accu_rd_mask_S ;
  logic accu_rd_mask_t_flag ;
  logic accu_rd_mask_r_flag ;
  assign accu_rd_mask_S = 1030 ;
  logic [7:0] accu_rd_mask_d0;
  logic [7:0] accu_rd_mask_d0_T ;
  logic [7:0] accu_rd_mask_d0_R ;
  logic [7:0] accu_rd_mask_d0_C ;
  logic [7:0] accu_rd_mask_d0_X ;
  logic [13:0] accu_rd_mask_d0_S ;
  logic [7:0] accu_rd_mask_d1;
  logic [7:0]  accu_rd_mask_d1_T ;
  logic [7:0]  accu_rd_mask_d1_PREV_VAL1 ;
  logic [7:0]  accu_rd_mask_d1_PREV_VAL2 ;
  logic [7:0]  accu_rd_mask_d1_R ;
  logic [7:0]  accu_rd_mask_d1_X ;
  logic [7:0]  accu_rd_mask_d1_C ;
  logic [13:0] accu_rd_mask_d1_S ;
  logic accu_rd_mask_d1_t_flag ;
  logic accu_rd_mask_d1_r_flag ;
  assign accu_rd_mask_d1_S = 1031 ;
  logic [7:0] accu_rd_mask_d2;
  logic [7:0]  accu_rd_mask_d2_T ;
  logic [7:0]  accu_rd_mask_d2_PREV_VAL1 ;
  logic [7:0]  accu_rd_mask_d2_PREV_VAL2 ;
  logic [7:0]  accu_rd_mask_d2_R ;
  logic [7:0]  accu_rd_mask_d2_X ;
  logic [7:0]  accu_rd_mask_d2_C ;
  logic [13:0] accu_rd_mask_d2_S ;
  logic accu_rd_mask_d2_t_flag ;
  logic accu_rd_mask_d2_r_flag ;
  assign accu_rd_mask_d2_S = 1032 ;
  logic [7:0] accu_rd_mask_w;
  logic [7:0] accu_rd_mask_w_T ;
  logic [7:0] accu_rd_mask_w_R ;
  logic [7:0] accu_rd_mask_w_C ;
  logic [7:0] accu_rd_mask_w_X ;
  logic [13:0] accu_rd_mask_w_S ;
  logic [3:0] accu_rd_sel_w;
  logic [3:0] accu_rd_sel_w_T ;
  logic [3:0] accu_rd_sel_w_R ;
  logic [3:0] accu_rd_sel_w_C ;
  logic [3:0] accu_rd_sel_w_X ;
  logic [13:0] accu_rd_sel_w_S ;
  logic accu_stripe_end;
  logic accu_stripe_end_T ;
  logic accu_stripe_end_R ;
  logic accu_stripe_end_C ;
  logic accu_stripe_end_X ;
  logic [13:0] accu_stripe_end_S ;
  logic accu_stripe_end_d0;
  logic accu_stripe_end_d0_T ;
  logic accu_stripe_end_d0_R ;
  logic accu_stripe_end_d0_C ;
  logic accu_stripe_end_d0_X ;
  logic [13:0] accu_stripe_end_d0_S ;
  logic accu_stripe_end_d1;
  logic  accu_stripe_end_d1_T ;
  logic  accu_stripe_end_d1_PREV_VAL1 ;
  logic  accu_stripe_end_d1_PREV_VAL2 ;
  logic  accu_stripe_end_d1_R ;
  logic  accu_stripe_end_d1_X ;
  logic  accu_stripe_end_d1_C ;
  logic [13:0] accu_stripe_end_d1_S ;
  logic accu_stripe_end_d1_t_flag ;
  logic accu_stripe_end_d1_r_flag ;
  assign accu_stripe_end_d1_S = 1033 ;
  logic accu_stripe_end_d2;
  logic  accu_stripe_end_d2_T ;
  logic  accu_stripe_end_d2_PREV_VAL1 ;
  logic  accu_stripe_end_d2_PREV_VAL2 ;
  logic  accu_stripe_end_d2_R ;
  logic  accu_stripe_end_d2_X ;
  logic  accu_stripe_end_d2_C ;
  logic [13:0] accu_stripe_end_d2_S ;
  logic accu_stripe_end_d2_t_flag ;
  logic accu_stripe_end_d2_r_flag ;
  assign accu_stripe_end_d2_S = 1034 ;
  logic accu_stripe_st;
  logic accu_stripe_st_T ;
  logic accu_stripe_st_R ;
  logic accu_stripe_st_C ;
  logic accu_stripe_st_X ;
  logic [13:0] accu_stripe_st_S ;
  logic [8:0] accu_valid;
  logic [8:0] accu_valid_T ;
  logic [8:0] accu_valid_R ;
  logic [8:0] accu_valid_C ;
  logic [8:0] accu_valid_X ;
  logic [13:0] accu_valid_S ;
  output [191:0] cfg_in_en_mask;
  logic [191:0] cfg_in_en_mask ;
  output [191:0] cfg_in_en_mask_T ;
  logic [191:0] cfg_in_en_mask_T ;
  logic [191:0] cfg_in_en_mask_R ;
  logic [191:0] cfg_in_en_mask_C ;
  logic [191:0] cfg_in_en_mask_X ;
  logic [13:0] cfg_in_en_mask_S ;
  input [191:0] cfg_in_en_mask_R0 ;
  input [191:0] cfg_in_en_mask_C0 ;
  input [191:0] cfg_in_en_mask_X0 ;
  output [13:0] cfg_in_en_mask_S ;
  logic [191:0] cfg_in_en_mask;
  logic [191:0]  cfg_in_en_mask_T ;
  logic [191:0]  cfg_in_en_mask_PREV_VAL1 ;
  logic [191:0]  cfg_in_en_mask_PREV_VAL2 ;
  logic cfg_in_en_mask_t_flag ;
  logic cfg_in_en_mask_r_flag ;
  assign cfg_in_en_mask_S = 1035 ;
  logic [191:0] cfg_in_en_mask_w;
  logic [191:0] cfg_in_en_mask_w_T ;
  logic [191:0] cfg_in_en_mask_w_R ;
  logic [191:0] cfg_in_en_mask_w_C ;
  logic [191:0] cfg_in_en_mask_w_X ;
  logic [13:0] cfg_in_en_mask_w_S ;
  output [24:0] cfg_is_fp;
  logic [24:0] cfg_is_fp ;
  output [24:0] cfg_is_fp_T ;
  logic [24:0] cfg_is_fp_T ;
  logic [24:0] cfg_is_fp_R ;
  logic [24:0] cfg_is_fp_C ;
  logic [24:0] cfg_is_fp_X ;
  logic [13:0] cfg_is_fp_S ;
  input [24:0] cfg_is_fp_R0 ;
  input [24:0] cfg_is_fp_C0 ;
  input [24:0] cfg_is_fp_X0 ;
  output [13:0] cfg_is_fp_S ;
  logic [24:0] cfg_is_fp;
  logic [24:0]  cfg_is_fp_T ;
  logic [24:0]  cfg_is_fp_PREV_VAL1 ;
  logic [24:0]  cfg_is_fp_PREV_VAL2 ;
  logic cfg_is_fp_t_flag ;
  logic cfg_is_fp_r_flag ;
  assign cfg_is_fp_S = 1036 ;
  output [24:0] cfg_is_int;
  logic [24:0] cfg_is_int ;
  output [24:0] cfg_is_int_T ;
  logic [24:0] cfg_is_int_T ;
  logic [24:0] cfg_is_int_R ;
  logic [24:0] cfg_is_int_C ;
  logic [24:0] cfg_is_int_X ;
  logic [13:0] cfg_is_int_S ;
  input [24:0] cfg_is_int_R0 ;
  input [24:0] cfg_is_int_C0 ;
  input [24:0] cfg_is_int_X0 ;
  output [13:0] cfg_is_int_S ;
  logic [24:0] cfg_is_int;
  logic [24:0]  cfg_is_int_T ;
  logic [24:0]  cfg_is_int_PREV_VAL1 ;
  logic [24:0]  cfg_is_int_PREV_VAL2 ;
  logic cfg_is_int_t_flag ;
  logic cfg_is_int_r_flag ;
  assign cfg_is_int_S = 1037 ;
  output [126:0] cfg_is_int8;
  logic [126:0] cfg_is_int8 ;
  output [126:0] cfg_is_int8_T ;
  logic [126:0] cfg_is_int8_T ;
  logic [126:0] cfg_is_int8_R ;
  logic [126:0] cfg_is_int8_C ;
  logic [126:0] cfg_is_int8_X ;
  logic [13:0] cfg_is_int8_S ;
  input [126:0] cfg_is_int8_R0 ;
  input [126:0] cfg_is_int8_C0 ;
  input [126:0] cfg_is_int8_X0 ;
  output [13:0] cfg_is_int8_S ;
  logic [126:0] cfg_is_int8;
  logic [126:0]  cfg_is_int8_T ;
  logic [126:0]  cfg_is_int8_PREV_VAL1 ;
  logic [126:0]  cfg_is_int8_PREV_VAL2 ;
  logic cfg_is_int8_t_flag ;
  logic cfg_is_int8_r_flag ;
  assign cfg_is_int8_S = 1038 ;
  output [95:0] cfg_is_wg;
  logic [95:0] cfg_is_wg ;
  output [95:0] cfg_is_wg_T ;
  logic [95:0] cfg_is_wg_T ;
  logic [95:0] cfg_is_wg_R ;
  logic [95:0] cfg_is_wg_C ;
  logic [95:0] cfg_is_wg_X ;
  logic [13:0] cfg_is_wg_S ;
  input [95:0] cfg_is_wg_R0 ;
  input [95:0] cfg_is_wg_C0 ;
  input [95:0] cfg_is_wg_X0 ;
  output [13:0] cfg_is_wg_S ;
  logic [95:0] cfg_is_wg;
  logic [95:0]  cfg_is_wg_T ;
  logic [95:0]  cfg_is_wg_PREV_VAL1 ;
  logic [95:0]  cfg_is_wg_PREV_VAL2 ;
  logic cfg_is_wg_t_flag ;
  logic cfg_is_wg_r_flag ;
  assign cfg_is_wg_S = 1039 ;
  output [639:0] cfg_truncate;
  logic [639:0] cfg_truncate ;
  output [639:0] cfg_truncate_T ;
  logic [639:0] cfg_truncate_T ;
  logic [639:0] cfg_truncate_R ;
  logic [639:0] cfg_truncate_C ;
  logic [639:0] cfg_truncate_X ;
  logic [13:0] cfg_truncate_S ;
  input [639:0] cfg_truncate_R0 ;
  input [639:0] cfg_truncate_C0 ;
  input [639:0] cfg_truncate_X0 ;
  output [13:0] cfg_truncate_S ;
  logic [639:0] cfg_truncate;
  logic [639:0]  cfg_truncate_T ;
  logic [639:0]  cfg_truncate_PREV_VAL1 ;
  logic [639:0]  cfg_truncate_PREV_VAL2 ;
  logic cfg_truncate_t_flag ;
  logic cfg_truncate_r_flag ;
  assign cfg_truncate_S = 1040 ;
  logic cfg_winograd;
  logic  cfg_winograd_T ;
  logic  cfg_winograd_PREV_VAL1 ;
  logic  cfg_winograd_PREV_VAL2 ;
  logic  cfg_winograd_R ;
  logic  cfg_winograd_X ;
  logic  cfg_winograd_C ;
  logic [13:0] cfg_winograd_S ;
  logic cfg_winograd_t_flag ;
  logic cfg_winograd_r_flag ;
  assign cfg_winograd_S = 1041 ;
  input dp2reg_done;
  input dp2reg_done_T ;
  input [13:0] dp2reg_done_S ;
  output dp2reg_done_R ;
  output dp2reg_done_X ;
  output dp2reg_done_C ;
  logic is_fp16;
  logic is_fp16_T ;
  logic is_fp16_R ;
  logic is_fp16_C ;
  logic is_fp16_X ;
  logic [13:0] is_fp16_S ;
  logic is_int8;
  logic is_int8_T ;
  logic is_int8_R ;
  logic is_int8_C ;
  logic is_int8_X ;
  logic [13:0] is_int8_S ;
  logic is_winograd;
  logic is_winograd_T ;
  logic is_winograd_R ;
  logic is_winograd_C ;
  logic is_winograd_X ;
  logic [13:0] is_winograd_S ;
  logic is_x1;
  logic is_x1_T ;
  logic is_x1_R ;
  logic is_x1_C ;
  logic is_x1_X ;
  logic [13:0] is_x1_S ;
  logic is_x2;
  logic is_x2_T ;
  logic is_x2_R ;
  logic is_x2_C ;
  logic is_x2_X ;
  logic [13:0] is_x2_S ;
  logic is_x4;
  logic is_x4_T ;
  logic is_x4_R ;
  logic is_x4_C ;
  logic is_x4_X ;
  logic [13:0] is_x4_S ;
  logic is_x8;
  logic is_x8_T ;
  logic is_x8_R ;
  logic is_x8_C ;
  logic is_x8_X ;
  logic [13:0] is_x8_S ;
  logic layer_st;
  logic layer_st_T ;
  logic layer_st_R ;
  logic layer_st_C ;
  logic layer_st_X ;
  logic [13:0] layer_st_S ;
  input [8:0] mac_a2accu_pd;
  input [8:0] mac_a2accu_pd_T ;
  input [13:0] mac_a2accu_pd_S ;
  output [8:0] mac_a2accu_pd_R ;
  output [8:0] mac_a2accu_pd_X ;
  output [8:0] mac_a2accu_pd_C ;
  input mac_a2accu_pvld;
  input mac_a2accu_pvld_T ;
  input [13:0] mac_a2accu_pvld_S ;
  output mac_a2accu_pvld_R ;
  output mac_a2accu_pvld_X ;
  output mac_a2accu_pvld_C ;
  input [8:0] mac_b2accu_pd;
  input [8:0] mac_b2accu_pd_T ;
  input [13:0] mac_b2accu_pd_S ;
  output [8:0] mac_b2accu_pd_R ;
  output [8:0] mac_b2accu_pd_X ;
  output [8:0] mac_b2accu_pd_C ;
  input mac_b2accu_pvld;
  input mac_b2accu_pvld_T ;
  input [13:0] mac_b2accu_pvld_S ;
  output mac_b2accu_pvld_R ;
  output mac_b2accu_pvld_X ;
  output mac_b2accu_pvld_C ;
  input nvdla_core_clk;
  input nvdla_core_clk_T ;
  input [13:0] nvdla_core_clk_S ;
  output nvdla_core_clk_R ;
  output nvdla_core_clk_X ;
  output nvdla_core_clk_C ;
  input nvdla_core_rstn;
  input nvdla_core_rstn_T ;
  input [13:0] nvdla_core_rstn_S ;
  output nvdla_core_rstn_R ;
  output nvdla_core_rstn_X ;
  output nvdla_core_rstn_C ;
  logic [4:0] pre_accu_addr;
  logic [4:0] pre_accu_addr_T ;
  logic [4:0] pre_accu_addr_R ;
  logic [4:0] pre_accu_addr_C ;
  logic [4:0] pre_accu_addr_X ;
  logic [13:0] pre_accu_addr_S ;
  logic pre_accu_channel_end;
  logic pre_accu_channel_end_T ;
  logic pre_accu_channel_end_R ;
  logic pre_accu_channel_end_C ;
  logic pre_accu_channel_end_X ;
  logic [13:0] pre_accu_channel_end_S ;
  logic pre_accu_ctrl_valid;
  logic pre_accu_ctrl_valid_T ;
  logic pre_accu_ctrl_valid_R ;
  logic pre_accu_ctrl_valid_C ;
  logic pre_accu_ctrl_valid_X ;
  logic [13:0] pre_accu_ctrl_valid_S ;
  logic pre_accu_layer_end;
  logic pre_accu_layer_end_T ;
  logic pre_accu_layer_end_R ;
  logic pre_accu_layer_end_C ;
  logic pre_accu_layer_end_X ;
  logic [13:0] pre_accu_layer_end_S ;
  logic [3:0] pre_accu_mode;
  logic [3:0] pre_accu_mode_T ;
  logic [3:0] pre_accu_mode_R ;
  logic [3:0] pre_accu_mode_C ;
  logic [3:0] pre_accu_mode_X ;
  logic [13:0] pre_accu_mode_S ;
  logic pre_accu_ram_sel_0;
  logic pre_accu_ram_sel_0_T ;
  logic pre_accu_ram_sel_0_R ;
  logic pre_accu_ram_sel_0_C ;
  logic pre_accu_ram_sel_0_X ;
  logic [13:0] pre_accu_ram_sel_0_S ;
  logic pre_accu_ram_sel_1;
  logic pre_accu_ram_sel_1_T ;
  logic pre_accu_ram_sel_1_R ;
  logic pre_accu_ram_sel_1_C ;
  logic pre_accu_ram_sel_1_X ;
  logic [13:0] pre_accu_ram_sel_1_S ;
  logic pre_accu_ram_sel_2;
  logic pre_accu_ram_sel_2_T ;
  logic pre_accu_ram_sel_2_R ;
  logic pre_accu_ram_sel_2_C ;
  logic pre_accu_ram_sel_2_X ;
  logic [13:0] pre_accu_ram_sel_2_S ;
  logic pre_accu_ram_sel_3;
  logic pre_accu_ram_sel_3_T ;
  logic pre_accu_ram_sel_3_R ;
  logic pre_accu_ram_sel_3_C ;
  logic pre_accu_ram_sel_3_X ;
  logic [13:0] pre_accu_ram_sel_3_S ;
  logic pre_accu_ram_sel_4;
  logic pre_accu_ram_sel_4_T ;
  logic pre_accu_ram_sel_4_R ;
  logic pre_accu_ram_sel_4_C ;
  logic pre_accu_ram_sel_4_X ;
  logic [13:0] pre_accu_ram_sel_4_S ;
  logic pre_accu_ram_sel_5;
  logic pre_accu_ram_sel_5_T ;
  logic pre_accu_ram_sel_5_R ;
  logic pre_accu_ram_sel_5_C ;
  logic pre_accu_ram_sel_5_X ;
  logic [13:0] pre_accu_ram_sel_5_S ;
  logic pre_accu_ram_sel_6;
  logic pre_accu_ram_sel_6_T ;
  logic pre_accu_ram_sel_6_R ;
  logic pre_accu_ram_sel_6_C ;
  logic pre_accu_ram_sel_6_X ;
  logic [13:0] pre_accu_ram_sel_6_S ;
  logic pre_accu_ram_sel_7;
  logic pre_accu_ram_sel_7_T ;
  logic pre_accu_ram_sel_7_R ;
  logic pre_accu_ram_sel_7_C ;
  logic pre_accu_ram_sel_7_X ;
  logic [13:0] pre_accu_ram_sel_7_S ;
  logic pre_accu_ram_valid;
  logic pre_accu_ram_valid_T ;
  logic pre_accu_ram_valid_R ;
  logic pre_accu_ram_valid_C ;
  logic pre_accu_ram_valid_X ;
  logic [13:0] pre_accu_ram_valid_S ;
  logic [7:0] pre_accu_rd_mask;
  logic [7:0] pre_accu_rd_mask_T ;
  logic [7:0] pre_accu_rd_mask_R ;
  logic [7:0] pre_accu_rd_mask_C ;
  logic [7:0] pre_accu_rd_mask_X ;
  logic [13:0] pre_accu_rd_mask_S ;
  logic pre_accu_stripe_end;
  logic pre_accu_stripe_end_T ;
  logic pre_accu_stripe_end_R ;
  logic pre_accu_stripe_end_C ;
  logic pre_accu_stripe_end_X ;
  logic [13:0] pre_accu_stripe_end_S ;
  input [4:0] reg2dp_clip_truncate;
  input [4:0] reg2dp_clip_truncate_T ;
  input [13:0] reg2dp_clip_truncate_S ;
  output [4:0] reg2dp_clip_truncate_R ;
  output [4:0] reg2dp_clip_truncate_X ;
  output [4:0] reg2dp_clip_truncate_C ;
  input reg2dp_conv_mode;
  input reg2dp_conv_mode_T ;
  input [13:0] reg2dp_conv_mode_S ;
  output reg2dp_conv_mode_R ;
  output reg2dp_conv_mode_X ;
  output reg2dp_conv_mode_C ;
  input reg2dp_op_en;
  input reg2dp_op_en_T ;
  input [13:0] reg2dp_op_en_S ;
  output reg2dp_op_en_R ;
  output reg2dp_op_en_X ;
  output reg2dp_op_en_C ;
  input [1:0] reg2dp_proc_precision;
  input [1:0] reg2dp_proc_precision_T ;
  input [13:0] reg2dp_proc_precision_S ;
  output [1:0] reg2dp_proc_precision_R ;
  output [1:0] reg2dp_proc_precision_X ;
  output [1:0] reg2dp_proc_precision_C ;
  output [3:0] slcg_cell_en;
  logic [3:0] slcg_cell_en ;
  output [3:0] slcg_cell_en_T ;
  logic [3:0] slcg_cell_en_T ;
  logic [3:0] slcg_cell_en_R ;
  logic [3:0] slcg_cell_en_C ;
  logic [3:0] slcg_cell_en_X ;
  logic [13:0] slcg_cell_en_S ;
  input [3:0] slcg_cell_en_R0 ;
  input [3:0] slcg_cell_en_C0 ;
  input [3:0] slcg_cell_en_X0 ;
  output [13:0] slcg_cell_en_S ;
  logic [3:0] slcg_cell_en_d1;
  logic [3:0]  slcg_cell_en_d1_T ;
  logic [3:0]  slcg_cell_en_d1_PREV_VAL1 ;
  logic [3:0]  slcg_cell_en_d1_PREV_VAL2 ;
  logic [3:0]  slcg_cell_en_d1_R ;
  logic [3:0]  slcg_cell_en_d1_X ;
  logic [3:0]  slcg_cell_en_d1_C ;
  logic [13:0] slcg_cell_en_d1_S ;
  logic slcg_cell_en_d1_t_flag ;
  logic slcg_cell_en_d1_r_flag ;
  assign slcg_cell_en_d1_S = 1042 ;
  logic [3:0] slcg_cell_en_d2;
  logic [3:0]  slcg_cell_en_d2_T ;
  logic [3:0]  slcg_cell_en_d2_PREV_VAL1 ;
  logic [3:0]  slcg_cell_en_d2_PREV_VAL2 ;
  logic [3:0]  slcg_cell_en_d2_R ;
  logic [3:0]  slcg_cell_en_d2_X ;
  logic [3:0]  slcg_cell_en_d2_C ;
  logic [13:0] slcg_cell_en_d2_S ;
  logic slcg_cell_en_d2_t_flag ;
  logic slcg_cell_en_d2_r_flag ;
  assign slcg_cell_en_d2_S = 1043 ;
  logic [3:0] slcg_cell_en_d3;
  logic [3:0]  slcg_cell_en_d3_T ;
  logic [3:0]  slcg_cell_en_d3_PREV_VAL1 ;
  logic [3:0]  slcg_cell_en_d3_PREV_VAL2 ;
  logic [3:0]  slcg_cell_en_d3_R ;
  logic [3:0]  slcg_cell_en_d3_X ;
  logic [3:0]  slcg_cell_en_d3_C ;
  logic [13:0] slcg_cell_en_d3_S ;
  logic slcg_cell_en_d3_t_flag ;
  logic slcg_cell_en_d3_r_flag ;
  assign slcg_cell_en_d3_S = 1044 ;
  logic [3:0] slcg_cell_en_w;
  logic [3:0] slcg_cell_en_w_T ;
  logic [3:0] slcg_cell_en_w_R ;
  logic [3:0] slcg_cell_en_w_C ;
  logic [3:0] slcg_cell_en_w_X ;
  logic [13:0] slcg_cell_en_w_S ;
  output wait_for_op_en;
  logic wait_for_op_en ;
  output wait_for_op_en_T ;
  logic wait_for_op_en_T ;
  logic wait_for_op_en_R ;
  logic wait_for_op_en_C ;
  logic wait_for_op_en_X ;
  logic [13:0] wait_for_op_en_S ;
  input wait_for_op_en_R0 ;
  input wait_for_op_en_C0 ;
  input wait_for_op_en_X0 ;
  output [13:0] wait_for_op_en_S ;
  logic wait_for_op_en;
  logic  wait_for_op_en_T ;
  logic  wait_for_op_en_PREV_VAL1 ;
  logic  wait_for_op_en_PREV_VAL2 ;
  logic wait_for_op_en_t_flag ;
  logic wait_for_op_en_r_flag ;
  assign wait_for_op_en_S = 1045 ;
  logic wait_for_op_en_w;
  logic wait_for_op_en_w_T ;
  logic wait_for_op_en_w_R ;
  logic wait_for_op_en_w_C ;
  logic wait_for_op_en_w_X ;
  logic [13:0] wait_for_op_en_w_S ;
  assign accu_cnt_inc = accu_cnt + 1'b1;
  assign accu_cnt_inc_S = 0 ;
  logic [6:0] accu_cnt_C0 ;
  logic [6:0] accu_cnt_R0 ;
  logic [6:0] accu_cnt_X0 ;
  assign accu_cnt_inc_T = accu_cnt_T ;
  assign accu_cnt_C0 = accu_cnt_inc_C ;
  assign accu_cnt_R0 = accu_cnt_inc_R ;
  assign accu_cnt_X0 = accu_cnt_inc_X ;
  assign is_x1 = _070_ & _071_;
  assign is_x1_S = 0 ;
  logic [0:0] _070__C0 ;
  logic [0:0] _070__R0 ;
  logic [0:0] _070__X0 ;
  logic [0:0] _071__C0 ;
  logic [0:0] _071__R0 ;
  logic [0:0] _071__X0 ;
  assign is_x1_T = _070__T | _071__T ;
  assign _070__C0 = is_x1_C ;
  assign _070__X0 = is_x1_X ;
  assign _071__C0 = is_x1_C ;
  assign _071__X0 = is_x1_X ;
  assign _070__R0 = ( is_x1_R | is_x1_C & _071__T ) & { 1{ _071_ != 0 }} ;
  assign _071__R0 = ( is_x1_R | is_x1_C & _070__T ) & { 1{ _070_ != 0 }} ;
  assign is_x2 = is_int8 & _071_;
  assign is_x2_S = 0 ;
  logic [0:0] is_int8_C0 ;
  logic [0:0] is_int8_R0 ;
  logic [0:0] is_int8_X0 ;
  logic [0:0] _071__C1 ;
  logic [0:0] _071__R1 ;
  logic [0:0] _071__X1 ;
  assign is_x2_T = is_int8_T | _071__T ;
  assign is_int8_C0 = is_x2_C ;
  assign is_int8_X0 = is_x2_X ;
  assign _071__C1 = is_x2_C ;
  assign _071__X1 = is_x2_X ;
  assign is_int8_R0 = ( is_x2_R | is_x2_C & _071__T ) & { 1{ _071_ != 0 }} ;
  assign _071__R1 = ( is_x2_R | is_x2_C & is_int8_T ) & { 1{ is_int8 != 0 }} ;
  assign is_x4 = _070_ & reg2dp_conv_mode;
  assign is_x4_S = 0 ;
  logic [0:0] _070__C1 ;
  logic [0:0] _070__R1 ;
  logic [0:0] _070__X1 ;
  logic [0:0] reg2dp_conv_mode_C0 ;
  logic [0:0] reg2dp_conv_mode_R0 ;
  logic [0:0] reg2dp_conv_mode_X0 ;
  assign is_x4_T = _070__T | reg2dp_conv_mode_T ;
  assign _070__C1 = is_x4_C ;
  assign _070__X1 = is_x4_X ;
  assign reg2dp_conv_mode_C0 = is_x4_C ;
  assign reg2dp_conv_mode_X0 = is_x4_X ;
  assign _070__R1 = ( is_x4_R | is_x4_C & reg2dp_conv_mode_T ) & { 1{ reg2dp_conv_mode != 0 }} ;
  assign reg2dp_conv_mode_R0 = ( is_x4_R | is_x4_C & _070__T ) & { 1{ _070_ != 0 }} ;
  assign is_x8 = is_int8 & reg2dp_conv_mode;
  assign is_x8_S = 0 ;
  logic [0:0] is_int8_C1 ;
  logic [0:0] is_int8_R1 ;
  logic [0:0] is_int8_X1 ;
  logic [0:0] reg2dp_conv_mode_C1 ;
  logic [0:0] reg2dp_conv_mode_R1 ;
  logic [0:0] reg2dp_conv_mode_X1 ;
  assign is_x8_T = is_int8_T | reg2dp_conv_mode_T ;
  assign is_int8_C1 = is_x8_C ;
  assign is_int8_X1 = is_x8_X ;
  assign reg2dp_conv_mode_C1 = is_x8_C ;
  assign reg2dp_conv_mode_X1 = is_x8_X ;
  assign is_int8_R1 = ( is_x8_R | is_x8_C & reg2dp_conv_mode_T ) & { 1{ reg2dp_conv_mode != 0 }} ;
  assign reg2dp_conv_mode_R1 = ( is_x8_R | is_x8_C & is_int8_T ) & { 1{ is_int8 != 0 }} ;
  assign slcg_cell_en_w[0] = reg2dp_op_en & _069_;
  assign slcg_cell_en_w_S = 0 ;
  logic [0:0] reg2dp_op_en_C0 ;
  logic [0:0] reg2dp_op_en_R0 ;
  logic [0:0] reg2dp_op_en_X0 ;
  logic [0:0] _069__C0 ;
  logic [0:0] _069__R0 ;
  logic [0:0] _069__X0 ;
  assign slcg_cell_en_w_T [0] = reg2dp_op_en_T | _069__T ;
  assign reg2dp_op_en_C0 = slcg_cell_en_w_C [0] ;
  assign reg2dp_op_en_X0 = slcg_cell_en_w_X [0] ;
  assign _069__C0 = slcg_cell_en_w_C [0] ;
  assign _069__X0 = slcg_cell_en_w_X [0] ;
  assign reg2dp_op_en_R0 = ( slcg_cell_en_w_R [0] | slcg_cell_en_w_C [0] & _069__T ) & { 1{ _069_ != 0 }} ;
  assign _069__R0 = ( slcg_cell_en_w_R [0] | slcg_cell_en_w_C [0] & reg2dp_op_en_T ) & { 1{ reg2dp_op_en != 0 }} ;
  assign _063_ = reg2dp_op_en & reg2dp_conv_mode;
  assign _063__S = 0 ;
  logic [0:0] reg2dp_op_en_C1 ;
  logic [0:0] reg2dp_op_en_R1 ;
  logic [0:0] reg2dp_op_en_X1 ;
  logic [0:0] reg2dp_conv_mode_C2 ;
  logic [0:0] reg2dp_conv_mode_R2 ;
  logic [0:0] reg2dp_conv_mode_X2 ;
  assign _063__T = reg2dp_op_en_T | reg2dp_conv_mode_T ;
  assign reg2dp_op_en_C1 = _063__C ;
  assign reg2dp_op_en_X1 = _063__X ;
  assign reg2dp_conv_mode_C2 = _063__C ;
  assign reg2dp_conv_mode_X2 = _063__X ;
  assign reg2dp_op_en_R1 = ( _063__R | _063__C & reg2dp_conv_mode_T ) & { 1{ reg2dp_conv_mode != 0 }} ;
  assign reg2dp_conv_mode_R2 = ( _063__R | _063__C & reg2dp_op_en_T ) & { 1{ reg2dp_op_en != 0 }} ;
  assign slcg_cell_en_w[1] = _063_ & _069_;
  assign slcg_cell_en_w_S = 0 ;
  logic [0:0] _063__C0 ;
  logic [0:0] _063__R0 ;
  logic [0:0] _063__X0 ;
  logic [0:0] _069__C1 ;
  logic [0:0] _069__R1 ;
  logic [0:0] _069__X1 ;
  assign slcg_cell_en_w_T [1] = _063__T | _069__T ;
  assign _063__C0 = slcg_cell_en_w_C [1] ;
  assign _063__X0 = slcg_cell_en_w_X [1] ;
  assign _069__C1 = slcg_cell_en_w_C [1] ;
  assign _069__X1 = slcg_cell_en_w_X [1] ;
  assign _063__R0 = ( slcg_cell_en_w_R [1] | slcg_cell_en_w_C [1] & _069__T ) & { 1{ _069_ != 0 }} ;
  assign _069__R1 = ( slcg_cell_en_w_R [1] | slcg_cell_en_w_C [1] & _063__T ) & { 1{ _063_ != 0 }} ;
  assign slcg_cell_en_w[2] = reg2dp_op_en & is_fp16;
  assign slcg_cell_en_w_S = 0 ;
  logic [0:0] reg2dp_op_en_C2 ;
  logic [0:0] reg2dp_op_en_R2 ;
  logic [0:0] reg2dp_op_en_X2 ;
  logic [0:0] is_fp16_C0 ;
  logic [0:0] is_fp16_R0 ;
  logic [0:0] is_fp16_X0 ;
  assign slcg_cell_en_w_T [2] = reg2dp_op_en_T | is_fp16_T ;
  assign reg2dp_op_en_C2 = slcg_cell_en_w_C [2] ;
  assign reg2dp_op_en_X2 = slcg_cell_en_w_X [2] ;
  assign is_fp16_C0 = slcg_cell_en_w_C [2] ;
  assign is_fp16_X0 = slcg_cell_en_w_X [2] ;
  assign reg2dp_op_en_R2 = ( slcg_cell_en_w_R [2] | slcg_cell_en_w_C [2] & is_fp16_T ) & { 1{ is_fp16 != 0 }} ;
  assign is_fp16_R0 = ( slcg_cell_en_w_R [2] | slcg_cell_en_w_C [2] & reg2dp_op_en_T ) & { 1{ reg2dp_op_en != 0 }} ;
  assign slcg_cell_en_w[3] = _063_ & is_fp16;
  assign slcg_cell_en_w_S = 0 ;
  logic [0:0] _063__C1 ;
  logic [0:0] _063__R1 ;
  logic [0:0] _063__X1 ;
  logic [0:0] is_fp16_C1 ;
  logic [0:0] is_fp16_R1 ;
  logic [0:0] is_fp16_X1 ;
  assign slcg_cell_en_w_T [3] = _063__T | is_fp16_T ;
  assign _063__C1 = slcg_cell_en_w_C [3] ;
  assign _063__X1 = slcg_cell_en_w_X [3] ;
  assign is_fp16_C1 = slcg_cell_en_w_C [3] ;
  assign is_fp16_X1 = slcg_cell_en_w_X [3] ;
  assign _063__R1 = ( slcg_cell_en_w_R [3] | slcg_cell_en_w_C [3] & is_fp16_T ) & { 1{ is_fp16 != 0 }} ;
  assign is_fp16_R1 = ( slcg_cell_en_w_R [3] | slcg_cell_en_w_C [3] & _063__T ) & { 1{ _063_ != 0 }} ;
  assign layer_st = wait_for_op_en & reg2dp_op_en;
  assign layer_st_S = 0 ;
  logic [0:0] wait_for_op_en_C1 ;
  logic [0:0] wait_for_op_en_R1 ;
  logic [0:0] wait_for_op_en_X1 ;
  logic [0:0] reg2dp_op_en_C3 ;
  logic [0:0] reg2dp_op_en_R3 ;
  logic [0:0] reg2dp_op_en_X3 ;
  assign layer_st_T = wait_for_op_en_T | reg2dp_op_en_T ;
  assign wait_for_op_en_C1 = layer_st_C ;
  assign wait_for_op_en_X1 = layer_st_X ;
  assign reg2dp_op_en_C3 = layer_st_C ;
  assign reg2dp_op_en_X3 = layer_st_X ;
  assign wait_for_op_en_R1 = ( layer_st_R | layer_st_C & reg2dp_op_en_T ) & { 1{ reg2dp_op_en != 0 }} ;
  assign reg2dp_op_en_R3 = ( layer_st_R | layer_st_C & wait_for_op_en_T ) & { 1{ wait_for_op_en != 0 }} ;
  assign _064_ = accu_valid[0] & accu_pd[6];
  assign _064__S = 0 ;
  logic [8:0] accu_valid_C0 ;
  logic [8:0] accu_valid_R0 ;
  logic [8:0] accu_valid_X0 ;
  logic [8:0] accu_pd_C0 ;
  logic [8:0] accu_pd_R0 ;
  logic [8:0] accu_pd_X0 ;
  assign _064__T = accu_valid_T [0] | accu_pd_T [6] ;
  assign accu_valid_C0 [0] = _064__C ;
  assign accu_valid_X0 [0] = _064__X ;
  assign accu_pd_C0 [6] = _064__C ;
  assign accu_pd_X0 [6] = _064__X ;
  assign accu_valid_R0 [0] = ( _064__R | _064__C & accu_pd_T [6] ) & { 1{ accu_pd[6] != 0 }} ;
  assign accu_pd_R0 [6] = ( _064__R | _064__C & accu_valid_T [0] ) & { 1{ accu_valid[0] != 0 }} ;
  assign accu_ram_sel_1_w = accu_rd_mask_w[1] & _075_;
  assign accu_ram_sel_1_w_S = 0 ;
  logic [7:0] accu_rd_mask_w_C0 ;
  logic [7:0] accu_rd_mask_w_R0 ;
  logic [7:0] accu_rd_mask_w_X0 ;
  logic [0:0] _075__C0 ;
  logic [0:0] _075__R0 ;
  logic [0:0] _075__X0 ;
  assign accu_ram_sel_1_w_T = accu_rd_mask_w_T [1] | _075__T ;
  assign accu_rd_mask_w_C0 [1] = accu_ram_sel_1_w_C ;
  assign accu_rd_mask_w_X0 [1] = accu_ram_sel_1_w_X ;
  assign _075__C0 = accu_ram_sel_1_w_C ;
  assign _075__X0 = accu_ram_sel_1_w_X ;
  assign accu_rd_mask_w_R0 [1] = ( accu_ram_sel_1_w_R | accu_ram_sel_1_w_C & _075__T ) & { 1{ _075_ != 0 }} ;
  assign _075__R0 = ( accu_ram_sel_1_w_R | accu_ram_sel_1_w_C & accu_rd_mask_w_T [1] ) & { 1{ accu_rd_mask_w[1] != 0 }} ;
  assign accu_ram_sel_2_w = accu_rd_mask_w[2] & _075_;
  assign accu_ram_sel_2_w_S = 0 ;
  logic [0:0] _075__C1 ;
  logic [0:0] _075__R1 ;
  logic [0:0] _075__X1 ;
  assign accu_ram_sel_2_w_T = accu_rd_mask_w_T [2] | _075__T ;
  assign accu_rd_mask_w_C0 [2] = accu_ram_sel_2_w_C ;
  assign accu_rd_mask_w_X0 [2] = accu_ram_sel_2_w_X ;
  assign _075__C1 = accu_ram_sel_2_w_C ;
  assign _075__X1 = accu_ram_sel_2_w_X ;
  assign accu_rd_mask_w_R0 [2] = ( accu_ram_sel_2_w_R | accu_ram_sel_2_w_C & _075__T ) & { 1{ _075_ != 0 }} ;
  assign _075__R1 = ( accu_ram_sel_2_w_R | accu_ram_sel_2_w_C & accu_rd_mask_w_T [2] ) & { 1{ accu_rd_mask_w[2] != 0 }} ;
  assign accu_ram_sel_3_w = accu_rd_mask_w[3] & _075_;
  assign accu_ram_sel_3_w_S = 0 ;
  logic [0:0] _075__C2 ;
  logic [0:0] _075__R2 ;
  logic [0:0] _075__X2 ;
  assign accu_ram_sel_3_w_T = accu_rd_mask_w_T [3] | _075__T ;
  assign accu_rd_mask_w_C0 [3] = accu_ram_sel_3_w_C ;
  assign accu_rd_mask_w_X0 [3] = accu_ram_sel_3_w_X ;
  assign _075__C2 = accu_ram_sel_3_w_C ;
  assign _075__X2 = accu_ram_sel_3_w_X ;
  assign accu_rd_mask_w_R0 [3] = ( accu_ram_sel_3_w_R | accu_ram_sel_3_w_C & _075__T ) & { 1{ _075_ != 0 }} ;
  assign _075__R2 = ( accu_ram_sel_3_w_R | accu_ram_sel_3_w_C & accu_rd_mask_w_T [3] ) & { 1{ accu_rd_mask_w[3] != 0 }} ;
  assign accu_ram_sel_5_w = accu_rd_mask_w[5] & is_x2;
  assign accu_ram_sel_5_w_S = 0 ;
  logic [0:0] is_x2_C0 ;
  logic [0:0] is_x2_R0 ;
  logic [0:0] is_x2_X0 ;
  assign accu_ram_sel_5_w_T = accu_rd_mask_w_T [5] | is_x2_T ;
  assign accu_rd_mask_w_C0 [5] = accu_ram_sel_5_w_C ;
  assign accu_rd_mask_w_X0 [5] = accu_ram_sel_5_w_X ;
  assign is_x2_C0 = accu_ram_sel_5_w_C ;
  assign is_x2_X0 = accu_ram_sel_5_w_X ;
  assign accu_rd_mask_w_R0 [5] = ( accu_ram_sel_5_w_R | accu_ram_sel_5_w_C & is_x2_T ) & { 1{ is_x2 != 0 }} ;
  assign is_x2_R0 = ( accu_ram_sel_5_w_R | accu_ram_sel_5_w_C & accu_rd_mask_w_T [5] ) & { 1{ accu_rd_mask_w[5] != 0 }} ;
  assign accu_ram_sel_6_w = accu_rd_mask_w[6] & is_x2;
  assign accu_ram_sel_6_w_S = 0 ;
  logic [0:0] is_x2_C1 ;
  logic [0:0] is_x2_R1 ;
  logic [0:0] is_x2_X1 ;
  assign accu_ram_sel_6_w_T = accu_rd_mask_w_T [6] | is_x2_T ;
  assign accu_rd_mask_w_C0 [6] = accu_ram_sel_6_w_C ;
  assign accu_rd_mask_w_X0 [6] = accu_ram_sel_6_w_X ;
  assign is_x2_C1 = accu_ram_sel_6_w_C ;
  assign is_x2_X1 = accu_ram_sel_6_w_X ;
  assign accu_rd_mask_w_R0 [6] = ( accu_ram_sel_6_w_R | accu_ram_sel_6_w_C & is_x2_T ) & { 1{ is_x2 != 0 }} ;
  assign is_x2_R1 = ( accu_ram_sel_6_w_R | accu_ram_sel_6_w_C & accu_rd_mask_w_T [6] ) & { 1{ accu_rd_mask_w[6] != 0 }} ;
  assign accu_ram_sel_7_w = accu_rd_mask_w[7] & is_x2;
  assign accu_ram_sel_7_w_S = 0 ;
  logic [0:0] is_x2_C2 ;
  logic [0:0] is_x2_R2 ;
  logic [0:0] is_x2_X2 ;
  assign accu_ram_sel_7_w_T = accu_rd_mask_w_T [7] | is_x2_T ;
  assign accu_rd_mask_w_C0 [7] = accu_ram_sel_7_w_C ;
  assign accu_rd_mask_w_X0 [7] = accu_ram_sel_7_w_X ;
  assign is_x2_C2 = accu_ram_sel_7_w_C ;
  assign is_x2_X2 = accu_ram_sel_7_w_X ;
  assign accu_rd_mask_w_R0 [7] = ( accu_ram_sel_7_w_R | accu_ram_sel_7_w_C & is_x2_T ) & { 1{ is_x2 != 0 }} ;
  assign is_x2_R2 = ( accu_ram_sel_7_w_R | accu_ram_sel_7_w_C & accu_rd_mask_w_T [7] ) & { 1{ accu_rd_mask_w[7] != 0 }} ;
  logic [7:0] fangyuan0;
  logic [7:0] fangyuan0_T ;
  logic [7:0] fangyuan0_R ;
  logic [7:0] fangyuan0_C ;
  logic [7:0] fangyuan0_X ;
  assign fangyuan0 = { accu_valid[0], accu_valid[0], accu_valid[0], accu_valid[0], accu_valid[0], accu_valid[0], accu_valid[0], accu_valid[0] };
  assign fangyuan0_T = {  accu_valid_T [0] , accu_valid_T [0] , accu_valid_T [0] , accu_valid_T [0] , accu_valid_T [0] , accu_valid_T [0] , accu_valid_T [0] , accu_valid_T [0]  };
  logic [13:0] fangyuan0_S ;
  assign fangyuan0_S = 0 ;
  assign { accu_valid_R0 [8:1] } = 0;
  assign { accu_valid_X0 [8:1] } = 0;
  assign { accu_valid_C0 [8:1] } = 0;
  logic [8:0] accu_valid_R1 ;
  logic [8:0] accu_valid_X1 ;
  logic [8:0] accu_valid_C1 ;
  assign accu_valid_R1 [0:0] = fangyuan0_R [7:7] ;
  assign accu_valid_X1 [0:0] = fangyuan0_X [7:7] ;
  assign accu_valid_C1 [0:0] = fangyuan0_C [7:7] ;
  assign { accu_valid_R1 [8:1] } = 0;
  assign { accu_valid_X1 [8:1] } = 0;
  assign { accu_valid_C1 [8:1] } = 0;
  logic [8:0] accu_valid_R2 ;
  logic [8:0] accu_valid_X2 ;
  logic [8:0] accu_valid_C2 ;
  assign accu_valid_R2 [0:0] = fangyuan0_R [6:6] ;
  assign accu_valid_X2 [0:0] = fangyuan0_X [6:6] ;
  assign accu_valid_C2 [0:0] = fangyuan0_C [6:6] ;
  assign { accu_valid_R2 [8:1] } = 0;
  assign { accu_valid_X2 [8:1] } = 0;
  assign { accu_valid_C2 [8:1] } = 0;
  logic [8:0] accu_valid_R3 ;
  logic [8:0] accu_valid_X3 ;
  logic [8:0] accu_valid_C3 ;
  assign accu_valid_R3 [0:0] = fangyuan0_R [5:5] ;
  assign accu_valid_X3 [0:0] = fangyuan0_X [5:5] ;
  assign accu_valid_C3 [0:0] = fangyuan0_C [5:5] ;
  assign { accu_valid_R3 [8:1] } = 0;
  assign { accu_valid_X3 [8:1] } = 0;
  assign { accu_valid_C3 [8:1] } = 0;
  logic [8:0] accu_valid_R4 ;
  logic [8:0] accu_valid_X4 ;
  logic [8:0] accu_valid_C4 ;
  assign accu_valid_R4 [0:0] = fangyuan0_R [4:4] ;
  assign accu_valid_X4 [0:0] = fangyuan0_X [4:4] ;
  assign accu_valid_C4 [0:0] = fangyuan0_C [4:4] ;
  assign { accu_valid_R4 [8:1] } = 0;
  assign { accu_valid_X4 [8:1] } = 0;
  assign { accu_valid_C4 [8:1] } = 0;
  logic [8:0] accu_valid_R5 ;
  logic [8:0] accu_valid_X5 ;
  logic [8:0] accu_valid_C5 ;
  assign accu_valid_R5 [0:0] = fangyuan0_R [3:3] ;
  assign accu_valid_X5 [0:0] = fangyuan0_X [3:3] ;
  assign accu_valid_C5 [0:0] = fangyuan0_C [3:3] ;
  assign { accu_valid_R5 [8:1] } = 0;
  assign { accu_valid_X5 [8:1] } = 0;
  assign { accu_valid_C5 [8:1] } = 0;
  logic [8:0] accu_valid_R6 ;
  logic [8:0] accu_valid_X6 ;
  logic [8:0] accu_valid_C6 ;
  assign accu_valid_R6 [0:0] = fangyuan0_R [2:2] ;
  assign accu_valid_X6 [0:0] = fangyuan0_X [2:2] ;
  assign accu_valid_C6 [0:0] = fangyuan0_C [2:2] ;
  assign { accu_valid_R6 [8:1] } = 0;
  assign { accu_valid_X6 [8:1] } = 0;
  assign { accu_valid_C6 [8:1] } = 0;
  logic [8:0] accu_valid_R7 ;
  logic [8:0] accu_valid_X7 ;
  logic [8:0] accu_valid_C7 ;
  assign accu_valid_R7 [0:0] = fangyuan0_R [1:1] ;
  assign accu_valid_X7 [0:0] = fangyuan0_X [1:1] ;
  assign accu_valid_C7 [0:0] = fangyuan0_C [1:1] ;
  assign { accu_valid_R7 [8:1] } = 0;
  assign { accu_valid_X7 [8:1] } = 0;
  assign { accu_valid_C7 [8:1] } = 0;
  logic [8:0] accu_valid_R8 ;
  logic [8:0] accu_valid_X8 ;
  logic [8:0] accu_valid_C8 ;
  assign accu_valid_R8 [0:0] = fangyuan0_R [0:0] ;
  assign accu_valid_X8 [0:0] = fangyuan0_X [0:0] ;
  assign accu_valid_C8 [0:0] = fangyuan0_C [0:0] ;

  assign _065_ = fangyuan0 & _072_;
  assign _065__S = 0 ;
  logic [7:0] fangyuan0_C0 ;
  logic [7:0] fangyuan0_R0 ;
  logic [7:0] fangyuan0_X0 ;
  logic [7:0] _072__C0 ;
  logic [7:0] _072__R0 ;
  logic [7:0] _072__X0 ;
  assign _065__T = fangyuan0_T | _072__T ;
  assign fangyuan0_C0 = _065__C ;
  assign fangyuan0_X0 = _065__X ;
  assign _072__C0 = _065__C ;
  assign _072__X0 = _065__X ;
  assign fangyuan0_R0 = ( _065__R | _065__C & _072__T ) & { 8{ _072_ != 0 }} ;
  assign _072__R0 = ( _065__R | _065__C & fangyuan0_T ) & { 8{ fangyuan0 != 0 }} ;
  assign abuf_rd_en = _065_ & accu_rd_mask;
  assign abuf_rd_en_S = 0 ;
  logic [7:0] _065__C0 ;
  logic [7:0] _065__R0 ;
  logic [7:0] _065__X0 ;
  logic [7:0] accu_rd_mask_C0 ;
  logic [7:0] accu_rd_mask_R0 ;
  logic [7:0] accu_rd_mask_X0 ;
  assign abuf_rd_en_T = _065__T | accu_rd_mask_T ;
  assign _065__C0 = abuf_rd_en_C ;
  assign _065__X0 = abuf_rd_en_X ;
  assign accu_rd_mask_C0 = abuf_rd_en_C ;
  assign accu_rd_mask_X0 = abuf_rd_en_X ;
  assign _065__R0 = ( abuf_rd_en_R | abuf_rd_en_C & accu_rd_mask_T ) & { 8{ accu_rd_mask != 0 }} ;
  assign accu_rd_mask_R0 = ( abuf_rd_en_R | abuf_rd_en_C & _065__T ) & { 8{ _065_ != 0 }} ;
  assign accu_ram_valid = accu_valid[0] & _073_;
  assign accu_ram_valid_S = 0 ;
  assign { accu_valid_R8 [8:1] } = 0;
  assign { accu_valid_X8 [8:1] } = 0;
  assign { accu_valid_C8 [8:1] } = 0;
  logic [8:0] accu_valid_C9 ;
  logic [8:0] accu_valid_R9 ;
  logic [8:0] accu_valid_X9 ;
  logic [0:0] _073__C0 ;
  logic [0:0] _073__R0 ;
  logic [0:0] _073__X0 ;
  assign accu_ram_valid_T = accu_valid_T [0] | _073__T ;
  assign accu_valid_C9 [0] = accu_ram_valid_C ;
  assign accu_valid_X9 [0] = accu_ram_valid_X ;
  assign _073__C0 = accu_ram_valid_C ;
  assign _073__X0 = accu_ram_valid_X ;
  assign accu_valid_R9 [0] = ( accu_ram_valid_R | accu_ram_valid_C & _073__T ) & { 1{ _073_ != 0 }} ;
  assign _073__R0 = ( accu_ram_valid_R | accu_ram_valid_C & accu_valid_T [0] ) & { 1{ accu_valid[0] != 0 }} ;
  assign is_int8 = ! reg2dp_proc_precision;
  logic [1:0] reg2dp_proc_precision_C0 ;
  logic [1:0] reg2dp_proc_precision_R0 ;
  logic [1:0] reg2dp_proc_precision_X0 ;
  assign is_int8_T = | reg2dp_proc_precision_T ;
  assign reg2dp_proc_precision_C0 = { 2{ is_int8_C }} ;
  assign reg2dp_proc_precision_X0 = { 2{ is_int8_X }} ;
  assign reg2dp_proc_precision_R0 = { 2{ is_int8_R }} ;
  assign is_int8_S = 0 ;
  assign is_fp16 = reg2dp_proc_precision == 2'b10;
  assign is_fp16_S = 0 ;
  logic [1:0] reg2dp_proc_precision_C1 ;
  logic [1:0] reg2dp_proc_precision_R1 ;
  logic [1:0] reg2dp_proc_precision_X1 ;
  assign is_fp16_T = | reg2dp_proc_precision_T ;
  assign reg2dp_proc_precision_C1 = { 2{ is_fp16_C }} ;
  assign reg2dp_proc_precision_R1 = { 2{ is_fp16_R }} ;
  assign reg2dp_proc_precision_X1 = { 2{ is_fp16_X }} ;
  assign _069_ = ~ is_fp16;
  logic [0:0] is_fp16_C2 ;
  logic [0:0] is_fp16_R2 ;
  logic [0:0] is_fp16_X2 ;
  assign _069__T = is_fp16_T ;
  assign is_fp16_C2 = _069__C ;
  assign is_fp16_R2 = _069__R ;
  assign is_fp16_X2 = _069__X ;
  assign _069__S = 0 ;
  assign _070_ = ~ is_int8;
  logic [0:0] is_int8_C2 ;
  logic [0:0] is_int8_R2 ;
  logic [0:0] is_int8_X2 ;
  assign _070__T = is_int8_T ;
  assign is_int8_C2 = _070__C ;
  assign is_int8_R2 = _070__R ;
  assign is_int8_X2 = _070__X ;
  assign _070__S = 0 ;
  assign _071_ = ~ reg2dp_conv_mode;
  logic [0:0] reg2dp_conv_mode_C3 ;
  logic [0:0] reg2dp_conv_mode_R3 ;
  logic [0:0] reg2dp_conv_mode_X3 ;
  assign _071__T = reg2dp_conv_mode_T ;
  assign reg2dp_conv_mode_C3 = _071__C ;
  assign reg2dp_conv_mode_R3 = _071__R ;
  assign reg2dp_conv_mode_X3 = _071__X ;
  assign _071__S = 0 ;
  assign _072_ = ~ accu_channel_st[7:0];
  logic [8:0] accu_channel_st_C0 ;
  logic [8:0] accu_channel_st_R0 ;
  logic [8:0] accu_channel_st_X0 ;
  assign _072__T = accu_channel_st_T [7:0] ;
  assign accu_channel_st_C0 [7:0] = _072__C ;
  assign accu_channel_st_R0 [7:0] = _072__R ;
  assign accu_channel_st_X0 [7:0] = _072__X ;
  assign _072__S = 0 ;
  assign _073_ = ~ accu_channel_st[8];
  assign _073__T = accu_channel_st_T [8] ;
  assign accu_channel_st_C0 [8] = _073__C ;
  assign accu_channel_st_R0 [8] = _073__R ;
  assign accu_channel_st_X0 [8] = _073__X ;
  assign _073__S = 0 ;
  assign _068_ = layer_st | accu_valid[0];
  assign _068__S = 0 ;
  assign { accu_valid_R9 [8:1] } = 0;
  assign { accu_valid_X9 [8:1] } = 0;
  assign { accu_valid_C9 [8:1] } = 0;
  logic [0:0] layer_st_C0 ;
  logic [0:0] layer_st_R0 ;
  logic [0:0] layer_st_X0 ;
  logic [8:0] accu_valid_C10 ;
  logic [8:0] accu_valid_R10 ;
  logic [8:0] accu_valid_X10 ;
  assign _068__T = layer_st_T | accu_valid_T [0] ;
  assign layer_st_C0 = _068__C ;
  assign layer_st_X0 = _068__X ;
  assign accu_valid_C10 [0] = _068__C ;
  assign accu_valid_X10 [0] = _068__X ;
  assign layer_st_R0 = ( _068__R | _068__C & accu_valid_T [0] ) & { 1{ accu_valid[0] != 1'b1 }} ;
  assign accu_valid_R10 [0] = ( _068__R | _068__C & layer_st_T ) & { 1{ layer_st != 1'b1 }} ;
  assign _074_ = layer_st | accu_pd[6];
  assign _074__S = 0 ;
  assign { accu_pd_R0 [0], accu_pd_R0 [1], accu_pd_R0 [2], accu_pd_R0 [3], accu_pd_R0 [4], accu_pd_R0 [5], accu_pd_R0 [8:7] } = 0;
  assign { accu_pd_X0 [0], accu_pd_X0 [1], accu_pd_X0 [2], accu_pd_X0 [3], accu_pd_X0 [4], accu_pd_X0 [5], accu_pd_X0 [8:7] } = 0;
  assign { accu_pd_C0 [0], accu_pd_C0 [1], accu_pd_C0 [2], accu_pd_C0 [3], accu_pd_C0 [4], accu_pd_C0 [5], accu_pd_C0 [8:7] } = 0;
  logic [0:0] layer_st_C1 ;
  logic [0:0] layer_st_R1 ;
  logic [0:0] layer_st_X1 ;
  logic [8:0] accu_pd_C1 ;
  logic [8:0] accu_pd_R1 ;
  logic [8:0] accu_pd_X1 ;
  assign _074__T = layer_st_T | accu_pd_T [6] ;
  assign layer_st_C1 = _074__C ;
  assign layer_st_X1 = _074__X ;
  assign accu_pd_C1 [6] = _074__C ;
  assign accu_pd_X1 [6] = _074__X ;
  assign layer_st_R1 = ( _074__R | _074__C & accu_pd_T [6] ) & { 1{ accu_pd[6] != 1'b1 }} ;
  assign accu_pd_R1 [6] = ( _074__R | _074__C & layer_st_T ) & { 1{ layer_st != 1'b1 }} ;
  assign _075_ = is_x1 | is_x2;
  assign _075__S = 0 ;
  logic [0:0] is_x1_C0 ;
  logic [0:0] is_x1_R0 ;
  logic [0:0] is_x1_X0 ;
  logic [0:0] is_x2_C3 ;
  logic [0:0] is_x2_R3 ;
  logic [0:0] is_x2_X3 ;
  assign _075__T = is_x1_T | is_x2_T ;
  assign is_x1_C0 = _075__C ;
  assign is_x1_X0 = _075__X ;
  assign is_x2_C3 = _075__C ;
  assign is_x2_X3 = _075__X ;
  assign is_x1_R0 = ( _075__R | _075__C & is_x2_T ) & { 1{ is_x2 != 1'b1 }} ;
  assign is_x2_R3 = ( _075__R | _075__C & is_x1_T ) & { 1{ is_x1 != 1'b1 }} ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ctrl_dlv_elem_mask <= 192'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    else
      accu_ctrl_dlv_elem_mask <= _008_;
  logic [191:0] _008__X0 ;
  logic [191:0] _008__R0 ;
  logic [191:0] _008__C0 ;
  assign _008__X0 = { 192{ accu_ctrl_dlv_elem_mask_S != _008__S }} ;
  assign _008__R0 = 0 ;
  assign _008__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ctrl_dlv_elem_mask_T 		<= !nvdla_core_rstn ? 0 : ( _008__T & _008__X0 );
  always @( posedge nvdla_core_clk )
      accu_ctrl_dlv_elem_mask_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ctrl_dlv_elem_mask_t_flag ? 1 : | _008__T & ( | _008__X0 );
  always @( posedge nvdla_core_clk )
      accu_ctrl_dlv_elem_mask_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ctrl_dlv_elem_mask_r_flag ? 1 : accu_ctrl_dlv_elem_mask_t_flag ? 0 : ( | accu_ctrl_dlv_elem_mask_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ctrl_ram_sel_7 <= 16'b0000000000000000;
    else
      accu_ctrl_ram_sel_7 <= _018_;
  logic [15:0] _018__X0 ;
  logic [15:0] _018__R0 ;
  logic [15:0] _018__C0 ;
  assign _018__X0 = { 16{ accu_ctrl_ram_sel_7_S != _018__S }} ;
  assign _018__R0 = 0 ;
  assign _018__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ctrl_ram_sel_7_T 		<= !nvdla_core_rstn ? 0 : ( _018__T & _018__X0 );
  always @( posedge nvdla_core_clk )
      accu_ctrl_ram_sel_7_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ctrl_ram_sel_7_t_flag ? 1 : | _018__T & ( | _018__X0 );
  always @( posedge nvdla_core_clk )
      accu_ctrl_ram_sel_7_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ctrl_ram_sel_7_r_flag ? 1 : accu_ctrl_ram_sel_7_t_flag ? 0 : ( | accu_ctrl_ram_sel_7_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ctrl_ram_sel_6 <= 16'b0000000000000000;
    else
      accu_ctrl_ram_sel_6 <= _017_;
  logic [15:0] _017__X0 ;
  logic [15:0] _017__R0 ;
  logic [15:0] _017__C0 ;
  assign _017__X0 = { 16{ accu_ctrl_ram_sel_6_S != _017__S }} ;
  assign _017__R0 = 0 ;
  assign _017__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ctrl_ram_sel_6_T 		<= !nvdla_core_rstn ? 0 : ( _017__T & _017__X0 );
  always @( posedge nvdla_core_clk )
      accu_ctrl_ram_sel_6_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ctrl_ram_sel_6_t_flag ? 1 : | _017__T & ( | _017__X0 );
  always @( posedge nvdla_core_clk )
      accu_ctrl_ram_sel_6_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ctrl_ram_sel_6_r_flag ? 1 : accu_ctrl_ram_sel_6_t_flag ? 0 : ( | accu_ctrl_ram_sel_6_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ctrl_ram_sel_5 <= 16'b0000000000000000;
    else
      accu_ctrl_ram_sel_5 <= _016_;
  logic [15:0] _016__X0 ;
  logic [15:0] _016__R0 ;
  logic [15:0] _016__C0 ;
  assign _016__X0 = { 16{ accu_ctrl_ram_sel_5_S != _016__S }} ;
  assign _016__R0 = 0 ;
  assign _016__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ctrl_ram_sel_5_T 		<= !nvdla_core_rstn ? 0 : ( _016__T & _016__X0 );
  always @( posedge nvdla_core_clk )
      accu_ctrl_ram_sel_5_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ctrl_ram_sel_5_t_flag ? 1 : | _016__T & ( | _016__X0 );
  always @( posedge nvdla_core_clk )
      accu_ctrl_ram_sel_5_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ctrl_ram_sel_5_r_flag ? 1 : accu_ctrl_ram_sel_5_t_flag ? 0 : ( | accu_ctrl_ram_sel_5_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ctrl_ram_sel_4 <= 16'b0000000000000000;
    else
      accu_ctrl_ram_sel_4 <= _015_;
  logic [15:0] _015__X0 ;
  logic [15:0] _015__R0 ;
  logic [15:0] _015__C0 ;
  assign _015__X0 = { 16{ accu_ctrl_ram_sel_4_S != _015__S }} ;
  assign _015__R0 = 0 ;
  assign _015__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ctrl_ram_sel_4_T 		<= !nvdla_core_rstn ? 0 : ( _015__T & _015__X0 );
  always @( posedge nvdla_core_clk )
      accu_ctrl_ram_sel_4_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ctrl_ram_sel_4_t_flag ? 1 : | _015__T & ( | _015__X0 );
  always @( posedge nvdla_core_clk )
      accu_ctrl_ram_sel_4_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ctrl_ram_sel_4_r_flag ? 1 : accu_ctrl_ram_sel_4_t_flag ? 0 : ( | accu_ctrl_ram_sel_4_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ctrl_ram_sel_3 <= 16'b0000000000000000;
    else
      accu_ctrl_ram_sel_3 <= _014_;
  logic [15:0] _014__X0 ;
  logic [15:0] _014__R0 ;
  logic [15:0] _014__C0 ;
  assign _014__X0 = { 16{ accu_ctrl_ram_sel_3_S != _014__S }} ;
  assign _014__R0 = 0 ;
  assign _014__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ctrl_ram_sel_3_T 		<= !nvdla_core_rstn ? 0 : ( _014__T & _014__X0 );
  always @( posedge nvdla_core_clk )
      accu_ctrl_ram_sel_3_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ctrl_ram_sel_3_t_flag ? 1 : | _014__T & ( | _014__X0 );
  always @( posedge nvdla_core_clk )
      accu_ctrl_ram_sel_3_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ctrl_ram_sel_3_r_flag ? 1 : accu_ctrl_ram_sel_3_t_flag ? 0 : ( | accu_ctrl_ram_sel_3_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ctrl_ram_sel_2 <= 16'b0000000000000000;
    else
      accu_ctrl_ram_sel_2 <= _013_;
  logic [15:0] _013__X0 ;
  logic [15:0] _013__R0 ;
  logic [15:0] _013__C0 ;
  assign _013__X0 = { 16{ accu_ctrl_ram_sel_2_S != _013__S }} ;
  assign _013__R0 = 0 ;
  assign _013__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ctrl_ram_sel_2_T 		<= !nvdla_core_rstn ? 0 : ( _013__T & _013__X0 );
  always @( posedge nvdla_core_clk )
      accu_ctrl_ram_sel_2_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ctrl_ram_sel_2_t_flag ? 1 : | _013__T & ( | _013__X0 );
  always @( posedge nvdla_core_clk )
      accu_ctrl_ram_sel_2_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ctrl_ram_sel_2_r_flag ? 1 : accu_ctrl_ram_sel_2_t_flag ? 0 : ( | accu_ctrl_ram_sel_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ctrl_ram_sel_1 <= 16'b0000000000000000;
    else
      accu_ctrl_ram_sel_1 <= _012_;
  logic [15:0] _012__X0 ;
  logic [15:0] _012__R0 ;
  logic [15:0] _012__C0 ;
  assign _012__X0 = { 16{ accu_ctrl_ram_sel_1_S != _012__S }} ;
  assign _012__R0 = 0 ;
  assign _012__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ctrl_ram_sel_1_T 		<= !nvdla_core_rstn ? 0 : ( _012__T & _012__X0 );
  always @( posedge nvdla_core_clk )
      accu_ctrl_ram_sel_1_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ctrl_ram_sel_1_t_flag ? 1 : | _012__T & ( | _012__X0 );
  always @( posedge nvdla_core_clk )
      accu_ctrl_ram_sel_1_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ctrl_ram_sel_1_r_flag ? 1 : accu_ctrl_ram_sel_1_t_flag ? 0 : ( | accu_ctrl_ram_sel_1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ctrl_ram_sel_0 <= 16'b0000000000000000;
    else
      accu_ctrl_ram_sel_0 <= _011_;
  logic [15:0] _011__X0 ;
  logic [15:0] _011__R0 ;
  logic [15:0] _011__C0 ;
  assign _011__X0 = { 16{ accu_ctrl_ram_sel_0_S != _011__S }} ;
  assign _011__R0 = 0 ;
  assign _011__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ctrl_ram_sel_0_T 		<= !nvdla_core_rstn ? 0 : ( _011__T & _011__X0 );
  always @( posedge nvdla_core_clk )
      accu_ctrl_ram_sel_0_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ctrl_ram_sel_0_t_flag ? 1 : | _011__T & ( | _011__X0 );
  always @( posedge nvdla_core_clk )
      accu_ctrl_ram_sel_0_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ctrl_ram_sel_0_r_flag ? 1 : accu_ctrl_ram_sel_0_t_flag ? 0 : ( | accu_ctrl_ram_sel_0_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ctrl_layer_end <= 1'b0;
    else
      accu_ctrl_layer_end <= _009_;
  logic [0:0] _009__X0 ;
  logic [0:0] _009__R0 ;
  logic [0:0] _009__C0 ;
  assign _009__X0 = { 1{ accu_ctrl_layer_end_S != _009__S }} ;
  assign _009__R0 = 0 ;
  assign _009__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ctrl_layer_end_T 		<= !nvdla_core_rstn ? 0 : ( _009__T & _009__X0 );
  always @( posedge nvdla_core_clk )
      accu_ctrl_layer_end_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ctrl_layer_end_t_flag ? 1 : | _009__T & ( | _009__X0 );
  always @( posedge nvdla_core_clk )
      accu_ctrl_layer_end_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ctrl_layer_end_r_flag ? 1 : accu_ctrl_layer_end_t_flag ? 0 : ( | accu_ctrl_layer_end_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ctrl_channel_end <= 1'b0;
    else
      accu_ctrl_channel_end <= _007_;
  logic [0:0] _007__X0 ;
  logic [0:0] _007__R0 ;
  logic [0:0] _007__C0 ;
  assign _007__X0 = { 1{ accu_ctrl_channel_end_S != _007__S }} ;
  assign _007__R0 = 0 ;
  assign _007__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ctrl_channel_end_T 		<= !nvdla_core_rstn ? 0 : ( _007__T & _007__X0 );
  always @( posedge nvdla_core_clk )
      accu_ctrl_channel_end_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ctrl_channel_end_t_flag ? 1 : | _007__T & ( | _007__X0 );
  always @( posedge nvdla_core_clk )
      accu_ctrl_channel_end_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ctrl_channel_end_r_flag ? 1 : accu_ctrl_channel_end_t_flag ? 0 : ( | accu_ctrl_channel_end_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ctrl_stripe_end <= 1'b0;
    else
      accu_ctrl_stripe_end <= _020_;
  logic [0:0] _020__X0 ;
  logic [0:0] _020__R0 ;
  logic [0:0] _020__C0 ;
  assign _020__X0 = { 1{ accu_ctrl_stripe_end_S != _020__S }} ;
  assign _020__R0 = 0 ;
  assign _020__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ctrl_stripe_end_T 		<= !nvdla_core_rstn ? 0 : ( _020__T & _020__X0 );
  always @( posedge nvdla_core_clk )
      accu_ctrl_stripe_end_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ctrl_stripe_end_t_flag ? 1 : | _020__T & ( | _020__X0 );
  always @( posedge nvdla_core_clk )
      accu_ctrl_stripe_end_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ctrl_stripe_end_r_flag ? 1 : accu_ctrl_stripe_end_t_flag ? 0 : ( | accu_ctrl_stripe_end_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ctrl_rd_mask <= 8'b00000000;
    else
      accu_ctrl_rd_mask <= _019_;
  logic [7:0] _019__X0 ;
  logic [7:0] _019__R0 ;
  logic [7:0] _019__C0 ;
  assign _019__X0 = { 8{ accu_ctrl_rd_mask_S != _019__S }} ;
  assign _019__R0 = 0 ;
  assign _019__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ctrl_rd_mask_T 		<= !nvdla_core_rstn ? 0 : ( _019__T & _019__X0 );
  always @( posedge nvdla_core_clk )
      accu_ctrl_rd_mask_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ctrl_rd_mask_t_flag ? 1 : | _019__T & ( | _019__X0 );
  always @( posedge nvdla_core_clk )
      accu_ctrl_rd_mask_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ctrl_rd_mask_r_flag ? 1 : accu_ctrl_rd_mask_t_flag ? 0 : ( | accu_ctrl_rd_mask_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ctrl_mode <= 4'b0000;
    else
      accu_ctrl_mode <= _010_;
  logic [3:0] _010__X0 ;
  logic [3:0] _010__R0 ;
  logic [3:0] _010__C0 ;
  assign _010__X0 = { 4{ accu_ctrl_mode_S != _010__S }} ;
  assign _010__R0 = 0 ;
  assign _010__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ctrl_mode_T 		<= !nvdla_core_rstn ? 0 : ( _010__T & _010__X0 );
  always @( posedge nvdla_core_clk )
      accu_ctrl_mode_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ctrl_mode_t_flag ? 1 : | _010__T & ( | _010__X0 );
  always @( posedge nvdla_core_clk )
      accu_ctrl_mode_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ctrl_mode_r_flag ? 1 : accu_ctrl_mode_t_flag ? 0 : ( | accu_ctrl_mode_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ctrl_addr <= 5'b00000;
    else
      accu_ctrl_addr <= _006_;
  logic [4:0] _006__X0 ;
  logic [4:0] _006__R0 ;
  logic [4:0] _006__C0 ;
  assign _006__X0 = { 5{ accu_ctrl_addr_S != _006__S }} ;
  assign _006__R0 = 0 ;
  assign _006__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ctrl_addr_T 		<= !nvdla_core_rstn ? 0 : ( _006__T & _006__X0 );
  always @( posedge nvdla_core_clk )
      accu_ctrl_addr_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ctrl_addr_t_flag ? 1 : | _006__T & ( | _006__X0 );
  always @( posedge nvdla_core_clk )
      accu_ctrl_addr_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ctrl_addr_r_flag ? 1 : accu_ctrl_addr_t_flag ? 0 : ( | accu_ctrl_addr_R ) ;
  logic [0:0] \accu_ctrl_ram_valid_reg[0] ;
  logic [0:0]  \accu_ctrl_ram_valid_reg[0]_T ;
  logic [0:0]  \accu_ctrl_ram_valid_reg[0]_PREV_VAL1 ;
  logic [0:0]  \accu_ctrl_ram_valid_reg[0]_PREV_VAL2 ;
  logic [0:0]  \accu_ctrl_ram_valid_reg[0]_R ;
  logic [0:0]  \accu_ctrl_ram_valid_reg[0]_X ;
  logic [0:0]  \accu_ctrl_ram_valid_reg[0]_C ;
  logic [13:0] \accu_ctrl_ram_valid_reg[0]_S ;
  logic \accu_ctrl_ram_valid_reg[0]_t_flag ;
  logic \accu_ctrl_ram_valid_reg[0]_r_flag ;
  assign \accu_ctrl_ram_valid_reg[0]_S = 1046 ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      \accu_ctrl_ram_valid_reg[0] <= 1'b0;
    else
      \accu_ctrl_ram_valid_reg[0] <= accu_ram_valid_d2;
  logic [0:0] accu_ram_valid_d2_X0 ;
  logic [0:0] accu_ram_valid_d2_R0 ;
  logic [0:0] accu_ram_valid_d2_C0 ;
  assign accu_ram_valid_d2_X0 = { 1{ \accu_ctrl_ram_valid_reg[0]_S != accu_ram_valid_d2_S }} ;
  assign accu_ram_valid_d2_R0 = 0 ;
  assign accu_ram_valid_d2_C0 = 0 ;
  always @( posedge nvdla_core_clk )
      \accu_ctrl_ram_valid_reg[0]_T 		<= !nvdla_core_rstn ? 0 : ( accu_ram_valid_d2_T & accu_ram_valid_d2_X0 );
  always @( posedge nvdla_core_clk )
      \accu_ctrl_ram_valid_reg[0]_t_flag 	<= !nvdla_core_rstn ? 0 : \accu_ctrl_ram_valid_reg[0]_t_flag ? 1 : | accu_ram_valid_d2_T & ( | accu_ram_valid_d2_X0 );
  always @( posedge nvdla_core_clk )
      \accu_ctrl_ram_valid_reg[0]_r_flag 	<= !nvdla_core_rstn ? 0 : \accu_ctrl_ram_valid_reg[0]_r_flag ? 1 : \accu_ctrl_ram_valid_reg[0]_t_flag ? 0 : ( | \accu_ctrl_ram_valid_reg[0]_R ) ;
  assign accu_ctrl_ram_valid[0] = \accu_ctrl_ram_valid_reg[0] ;
  logic [0:0] \accu_ctrl_ram_valid_reg[0]_C0 ;
  logic [0:0] \accu_ctrl_ram_valid_reg[0]_R0 ;
  logic [0:0] \accu_ctrl_ram_valid_reg[0]_X0 ;
  assign accu_ctrl_ram_valid_T [0] = \accu_ctrl_ram_valid_reg[0]_T ;
  assign \accu_ctrl_ram_valid_reg[0]_C0 = accu_ctrl_ram_valid_C [0] ;
  assign \accu_ctrl_ram_valid_reg[0]_R0 = accu_ctrl_ram_valid_R [0] ;
  assign \accu_ctrl_ram_valid_reg[0]_X0 = accu_ctrl_ram_valid_X [0] ;
  assign accu_ctrl_ram_valid_S = \accu_ctrl_ram_valid_reg[0]_S ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ctrl_valid <= 1'b0;
    else
      accu_ctrl_valid <= accu_ctrl_valid_d2;
  logic [0:0] accu_ctrl_valid_d2_X0 ;
  logic [0:0] accu_ctrl_valid_d2_R0 ;
  logic [0:0] accu_ctrl_valid_d2_C0 ;
  assign accu_ctrl_valid_d2_X0 = { 1{ accu_ctrl_valid_S != accu_ctrl_valid_d2_S }} ;
  assign accu_ctrl_valid_d2_R0 = 0 ;
  assign accu_ctrl_valid_d2_C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ctrl_valid_T 		<= !nvdla_core_rstn ? 0 : ( accu_ctrl_valid_d2_T & accu_ctrl_valid_d2_X0 );
  always @( posedge nvdla_core_clk )
      accu_ctrl_valid_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ctrl_valid_t_flag ? 1 : | accu_ctrl_valid_d2_T & ( | accu_ctrl_valid_d2_X0 );
  always @( posedge nvdla_core_clk )
      accu_ctrl_valid_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ctrl_valid_r_flag ? 1 : accu_ctrl_valid_t_flag ? 0 : ( | accu_ctrl_valid_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ram_sel_7_d2 <= 1'b0;
    else
      accu_ram_sel_7_d2 <= _050_;
  logic [0:0] _050__X0 ;
  logic [0:0] _050__R0 ;
  logic [0:0] _050__C0 ;
  assign _050__X0 = { 1{ accu_ram_sel_7_d2_S != _050__S }} ;
  assign _050__R0 = 0 ;
  assign _050__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ram_sel_7_d2_T 		<= !nvdla_core_rstn ? 0 : ( _050__T & _050__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_7_d2_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_7_d2_t_flag ? 1 : | _050__T & ( | _050__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_7_d2_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_7_d2_r_flag ? 1 : accu_ram_sel_7_d2_t_flag ? 0 : ( | accu_ram_sel_7_d2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ram_sel_6_d2 <= 1'b0;
    else
      accu_ram_sel_6_d2 <= _047_;
  logic [0:0] _047__X0 ;
  logic [0:0] _047__R0 ;
  logic [0:0] _047__C0 ;
  assign _047__X0 = { 1{ accu_ram_sel_6_d2_S != _047__S }} ;
  assign _047__R0 = 0 ;
  assign _047__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ram_sel_6_d2_T 		<= !nvdla_core_rstn ? 0 : ( _047__T & _047__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_6_d2_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_6_d2_t_flag ? 1 : | _047__T & ( | _047__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_6_d2_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_6_d2_r_flag ? 1 : accu_ram_sel_6_d2_t_flag ? 0 : ( | accu_ram_sel_6_d2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ram_sel_5_d2 <= 1'b0;
    else
      accu_ram_sel_5_d2 <= _044_;
  logic [0:0] _044__X0 ;
  logic [0:0] _044__R0 ;
  logic [0:0] _044__C0 ;
  assign _044__X0 = { 1{ accu_ram_sel_5_d2_S != _044__S }} ;
  assign _044__R0 = 0 ;
  assign _044__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ram_sel_5_d2_T 		<= !nvdla_core_rstn ? 0 : ( _044__T & _044__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_5_d2_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_5_d2_t_flag ? 1 : | _044__T & ( | _044__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_5_d2_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_5_d2_r_flag ? 1 : accu_ram_sel_5_d2_t_flag ? 0 : ( | accu_ram_sel_5_d2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ram_sel_4_d2 <= 1'b0;
    else
      accu_ram_sel_4_d2 <= _041_;
  logic [0:0] _041__X0 ;
  logic [0:0] _041__R0 ;
  logic [0:0] _041__C0 ;
  assign _041__X0 = { 1{ accu_ram_sel_4_d2_S != _041__S }} ;
  assign _041__R0 = 0 ;
  assign _041__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ram_sel_4_d2_T 		<= !nvdla_core_rstn ? 0 : ( _041__T & _041__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_4_d2_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_4_d2_t_flag ? 1 : | _041__T & ( | _041__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_4_d2_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_4_d2_r_flag ? 1 : accu_ram_sel_4_d2_t_flag ? 0 : ( | accu_ram_sel_4_d2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ram_sel_3_d2 <= 1'b0;
    else
      accu_ram_sel_3_d2 <= _038_;
  logic [0:0] _038__X0 ;
  logic [0:0] _038__R0 ;
  logic [0:0] _038__C0 ;
  assign _038__X0 = { 1{ accu_ram_sel_3_d2_S != _038__S }} ;
  assign _038__R0 = 0 ;
  assign _038__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ram_sel_3_d2_T 		<= !nvdla_core_rstn ? 0 : ( _038__T & _038__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_3_d2_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_3_d2_t_flag ? 1 : | _038__T & ( | _038__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_3_d2_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_3_d2_r_flag ? 1 : accu_ram_sel_3_d2_t_flag ? 0 : ( | accu_ram_sel_3_d2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ram_sel_2_d2 <= 1'b0;
    else
      accu_ram_sel_2_d2 <= _035_;
  logic [0:0] _035__X0 ;
  logic [0:0] _035__R0 ;
  logic [0:0] _035__C0 ;
  assign _035__X0 = { 1{ accu_ram_sel_2_d2_S != _035__S }} ;
  assign _035__R0 = 0 ;
  assign _035__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ram_sel_2_d2_T 		<= !nvdla_core_rstn ? 0 : ( _035__T & _035__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_2_d2_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_2_d2_t_flag ? 1 : | _035__T & ( | _035__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_2_d2_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_2_d2_r_flag ? 1 : accu_ram_sel_2_d2_t_flag ? 0 : ( | accu_ram_sel_2_d2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ram_sel_1_d2 <= 1'b0;
    else
      accu_ram_sel_1_d2 <= _032_;
  logic [0:0] _032__X0 ;
  logic [0:0] _032__R0 ;
  logic [0:0] _032__C0 ;
  assign _032__X0 = { 1{ accu_ram_sel_1_d2_S != _032__S }} ;
  assign _032__R0 = 0 ;
  assign _032__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ram_sel_1_d2_T 		<= !nvdla_core_rstn ? 0 : ( _032__T & _032__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_1_d2_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_1_d2_t_flag ? 1 : | _032__T & ( | _032__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_1_d2_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_1_d2_r_flag ? 1 : accu_ram_sel_1_d2_t_flag ? 0 : ( | accu_ram_sel_1_d2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ram_sel_0_d2 <= 1'b0;
    else
      accu_ram_sel_0_d2 <= _029_;
  logic [0:0] _029__X0 ;
  logic [0:0] _029__R0 ;
  logic [0:0] _029__C0 ;
  assign _029__X0 = { 1{ accu_ram_sel_0_d2_S != _029__S }} ;
  assign _029__R0 = 0 ;
  assign _029__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ram_sel_0_d2_T 		<= !nvdla_core_rstn ? 0 : ( _029__T & _029__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_0_d2_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_0_d2_t_flag ? 1 : | _029__T & ( | _029__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_0_d2_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_0_d2_r_flag ? 1 : accu_ram_sel_0_d2_t_flag ? 0 : ( | accu_ram_sel_0_d2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_layer_end_d2 <= 1'b0;
    else
      accu_layer_end_d2 <= _022_;
  logic [0:0] _022__X0 ;
  logic [0:0] _022__R0 ;
  logic [0:0] _022__C0 ;
  assign _022__X0 = { 1{ accu_layer_end_d2_S != _022__S }} ;
  assign _022__R0 = 0 ;
  assign _022__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_layer_end_d2_T 		<= !nvdla_core_rstn ? 0 : ( _022__T & _022__X0 );
  always @( posedge nvdla_core_clk )
      accu_layer_end_d2_t_flag 	<= !nvdla_core_rstn ? 0 : accu_layer_end_d2_t_flag ? 1 : | _022__T & ( | _022__X0 );
  always @( posedge nvdla_core_clk )
      accu_layer_end_d2_r_flag 	<= !nvdla_core_rstn ? 0 : accu_layer_end_d2_r_flag ? 1 : accu_layer_end_d2_t_flag ? 0 : ( | accu_layer_end_d2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_channel_end_d2 <= 1'b0;
    else
      accu_channel_end_d2 <= _003_;
  logic [0:0] _003__X0 ;
  logic [0:0] _003__R0 ;
  logic [0:0] _003__C0 ;
  assign _003__X0 = { 1{ accu_channel_end_d2_S != _003__S }} ;
  assign _003__R0 = 0 ;
  assign _003__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_channel_end_d2_T 		<= !nvdla_core_rstn ? 0 : ( _003__T & _003__X0 );
  always @( posedge nvdla_core_clk )
      accu_channel_end_d2_t_flag 	<= !nvdla_core_rstn ? 0 : accu_channel_end_d2_t_flag ? 1 : | _003__T & ( | _003__X0 );
  always @( posedge nvdla_core_clk )
      accu_channel_end_d2_r_flag 	<= !nvdla_core_rstn ? 0 : accu_channel_end_d2_r_flag ? 1 : accu_channel_end_d2_t_flag ? 0 : ( | accu_channel_end_d2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_stripe_end_d2 <= 1'b0;
    else
      accu_stripe_end_d2 <= _055_;
  logic [0:0] _055__X0 ;
  logic [0:0] _055__R0 ;
  logic [0:0] _055__C0 ;
  assign _055__X0 = { 1{ accu_stripe_end_d2_S != _055__S }} ;
  assign _055__R0 = 0 ;
  assign _055__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_stripe_end_d2_T 		<= !nvdla_core_rstn ? 0 : ( _055__T & _055__X0 );
  always @( posedge nvdla_core_clk )
      accu_stripe_end_d2_t_flag 	<= !nvdla_core_rstn ? 0 : accu_stripe_end_d2_t_flag ? 1 : | _055__T & ( | _055__X0 );
  always @( posedge nvdla_core_clk )
      accu_stripe_end_d2_r_flag 	<= !nvdla_core_rstn ? 0 : accu_stripe_end_d2_r_flag ? 1 : accu_stripe_end_d2_t_flag ? 0 : ( | accu_stripe_end_d2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_rd_mask_d2 <= 8'b00000000;
    else
      accu_rd_mask_d2 <= _053_;
  logic [7:0] _053__X0 ;
  logic [7:0] _053__R0 ;
  logic [7:0] _053__C0 ;
  assign _053__X0 = { 8{ accu_rd_mask_d2_S != _053__S }} ;
  assign _053__R0 = 0 ;
  assign _053__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_rd_mask_d2_T 		<= !nvdla_core_rstn ? 0 : ( _053__T & _053__X0 );
  always @( posedge nvdla_core_clk )
      accu_rd_mask_d2_t_flag 	<= !nvdla_core_rstn ? 0 : accu_rd_mask_d2_t_flag ? 1 : | _053__T & ( | _053__X0 );
  always @( posedge nvdla_core_clk )
      accu_rd_mask_d2_r_flag 	<= !nvdla_core_rstn ? 0 : accu_rd_mask_d2_r_flag ? 1 : accu_rd_mask_d2_t_flag ? 0 : ( | accu_rd_mask_d2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_mode_d2 <= 4'b0000;
    else
      accu_mode_d2 <= _025_;
  logic [3:0] _025__X0 ;
  logic [3:0] _025__R0 ;
  logic [3:0] _025__C0 ;
  assign _025__X0 = { 4{ accu_mode_d2_S != _025__S }} ;
  assign _025__R0 = 0 ;
  assign _025__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_mode_d2_T 		<= !nvdla_core_rstn ? 0 : ( _025__T & _025__X0 );
  always @( posedge nvdla_core_clk )
      accu_mode_d2_t_flag 	<= !nvdla_core_rstn ? 0 : accu_mode_d2_t_flag ? 1 : | _025__T & ( | _025__X0 );
  always @( posedge nvdla_core_clk )
      accu_mode_d2_r_flag 	<= !nvdla_core_rstn ? 0 : accu_mode_d2_r_flag ? 1 : accu_mode_d2_t_flag ? 0 : ( | accu_mode_d2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_addr_d2 <= 5'b00000;
    else
      accu_addr_d2 <= _001_;
  logic [4:0] _001__X0 ;
  logic [4:0] _001__R0 ;
  logic [4:0] _001__C0 ;
  assign _001__X0 = { 5{ accu_addr_d2_S != _001__S }} ;
  assign _001__R0 = 0 ;
  assign _001__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_addr_d2_T 		<= !nvdla_core_rstn ? 0 : ( _001__T & _001__X0 );
  always @( posedge nvdla_core_clk )
      accu_addr_d2_t_flag 	<= !nvdla_core_rstn ? 0 : accu_addr_d2_t_flag ? 1 : | _001__T & ( | _001__X0 );
  always @( posedge nvdla_core_clk )
      accu_addr_d2_r_flag 	<= !nvdla_core_rstn ? 0 : accu_addr_d2_r_flag ? 1 : accu_addr_d2_t_flag ? 0 : ( | accu_addr_d2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ram_valid_d2 <= 1'b0;
    else
      accu_ram_valid_d2 <= accu_ram_valid_d1;
  logic [0:0] accu_ram_valid_d1_X0 ;
  logic [0:0] accu_ram_valid_d1_R0 ;
  logic [0:0] accu_ram_valid_d1_C0 ;
  assign accu_ram_valid_d1_X0 = { 1{ accu_ram_valid_d2_S != accu_ram_valid_d1_S }} ;
  assign accu_ram_valid_d1_R0 = 0 ;
  assign accu_ram_valid_d1_C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ram_valid_d2_T 		<= !nvdla_core_rstn ? 0 : ( accu_ram_valid_d1_T & accu_ram_valid_d1_X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_valid_d2_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_valid_d2_t_flag ? 1 : | accu_ram_valid_d1_T & ( | accu_ram_valid_d1_X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_valid_d2_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_valid_d2_r_flag ? 1 : accu_ram_valid_d2_t_flag ? 0 : ( | accu_ram_valid_d2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ctrl_valid_d2 <= 1'b0;
    else
      accu_ctrl_valid_d2 <= accu_ctrl_valid_d1;
  logic [0:0] accu_ctrl_valid_d1_X0 ;
  logic [0:0] accu_ctrl_valid_d1_R0 ;
  logic [0:0] accu_ctrl_valid_d1_C0 ;
  assign accu_ctrl_valid_d1_X0 = { 1{ accu_ctrl_valid_d2_S != accu_ctrl_valid_d1_S }} ;
  assign accu_ctrl_valid_d1_R0 = 0 ;
  assign accu_ctrl_valid_d1_C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ctrl_valid_d2_T 		<= !nvdla_core_rstn ? 0 : ( accu_ctrl_valid_d1_T & accu_ctrl_valid_d1_X0 );
  always @( posedge nvdla_core_clk )
      accu_ctrl_valid_d2_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ctrl_valid_d2_t_flag ? 1 : | accu_ctrl_valid_d1_T & ( | accu_ctrl_valid_d1_X0 );
  always @( posedge nvdla_core_clk )
      accu_ctrl_valid_d2_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ctrl_valid_d2_r_flag ? 1 : accu_ctrl_valid_d2_t_flag ? 0 : ( | accu_ctrl_valid_d2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ram_sel_7_d1 <= 1'b0;
    else
      accu_ram_sel_7_d1 <= _049_;
  logic [0:0] _049__X0 ;
  logic [0:0] _049__R0 ;
  logic [0:0] _049__C0 ;
  assign _049__X0 = { 1{ accu_ram_sel_7_d1_S != _049__S }} ;
  assign _049__R0 = 0 ;
  assign _049__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ram_sel_7_d1_T 		<= !nvdla_core_rstn ? 0 : ( _049__T & _049__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_7_d1_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_7_d1_t_flag ? 1 : | _049__T & ( | _049__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_7_d1_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_7_d1_r_flag ? 1 : accu_ram_sel_7_d1_t_flag ? 0 : ( | accu_ram_sel_7_d1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ram_sel_6_d1 <= 1'b0;
    else
      accu_ram_sel_6_d1 <= _046_;
  logic [0:0] _046__X0 ;
  logic [0:0] _046__R0 ;
  logic [0:0] _046__C0 ;
  assign _046__X0 = { 1{ accu_ram_sel_6_d1_S != _046__S }} ;
  assign _046__R0 = 0 ;
  assign _046__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ram_sel_6_d1_T 		<= !nvdla_core_rstn ? 0 : ( _046__T & _046__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_6_d1_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_6_d1_t_flag ? 1 : | _046__T & ( | _046__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_6_d1_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_6_d1_r_flag ? 1 : accu_ram_sel_6_d1_t_flag ? 0 : ( | accu_ram_sel_6_d1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ram_sel_5_d1 <= 1'b0;
    else
      accu_ram_sel_5_d1 <= _043_;
  logic [0:0] _043__X0 ;
  logic [0:0] _043__R0 ;
  logic [0:0] _043__C0 ;
  assign _043__X0 = { 1{ accu_ram_sel_5_d1_S != _043__S }} ;
  assign _043__R0 = 0 ;
  assign _043__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ram_sel_5_d1_T 		<= !nvdla_core_rstn ? 0 : ( _043__T & _043__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_5_d1_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_5_d1_t_flag ? 1 : | _043__T & ( | _043__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_5_d1_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_5_d1_r_flag ? 1 : accu_ram_sel_5_d1_t_flag ? 0 : ( | accu_ram_sel_5_d1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ram_sel_4_d1 <= 1'b0;
    else
      accu_ram_sel_4_d1 <= _040_;
  logic [0:0] _040__X0 ;
  logic [0:0] _040__R0 ;
  logic [0:0] _040__C0 ;
  assign _040__X0 = { 1{ accu_ram_sel_4_d1_S != _040__S }} ;
  assign _040__R0 = 0 ;
  assign _040__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ram_sel_4_d1_T 		<= !nvdla_core_rstn ? 0 : ( _040__T & _040__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_4_d1_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_4_d1_t_flag ? 1 : | _040__T & ( | _040__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_4_d1_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_4_d1_r_flag ? 1 : accu_ram_sel_4_d1_t_flag ? 0 : ( | accu_ram_sel_4_d1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ram_sel_3_d1 <= 1'b0;
    else
      accu_ram_sel_3_d1 <= _037_;
  logic [0:0] _037__X0 ;
  logic [0:0] _037__R0 ;
  logic [0:0] _037__C0 ;
  assign _037__X0 = { 1{ accu_ram_sel_3_d1_S != _037__S }} ;
  assign _037__R0 = 0 ;
  assign _037__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ram_sel_3_d1_T 		<= !nvdla_core_rstn ? 0 : ( _037__T & _037__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_3_d1_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_3_d1_t_flag ? 1 : | _037__T & ( | _037__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_3_d1_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_3_d1_r_flag ? 1 : accu_ram_sel_3_d1_t_flag ? 0 : ( | accu_ram_sel_3_d1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ram_sel_2_d1 <= 1'b0;
    else
      accu_ram_sel_2_d1 <= _034_;
  logic [0:0] _034__X0 ;
  logic [0:0] _034__R0 ;
  logic [0:0] _034__C0 ;
  assign _034__X0 = { 1{ accu_ram_sel_2_d1_S != _034__S }} ;
  assign _034__R0 = 0 ;
  assign _034__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ram_sel_2_d1_T 		<= !nvdla_core_rstn ? 0 : ( _034__T & _034__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_2_d1_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_2_d1_t_flag ? 1 : | _034__T & ( | _034__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_2_d1_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_2_d1_r_flag ? 1 : accu_ram_sel_2_d1_t_flag ? 0 : ( | accu_ram_sel_2_d1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ram_sel_1_d1 <= 1'b0;
    else
      accu_ram_sel_1_d1 <= _031_;
  logic [0:0] _031__X0 ;
  logic [0:0] _031__R0 ;
  logic [0:0] _031__C0 ;
  assign _031__X0 = { 1{ accu_ram_sel_1_d1_S != _031__S }} ;
  assign _031__R0 = 0 ;
  assign _031__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ram_sel_1_d1_T 		<= !nvdla_core_rstn ? 0 : ( _031__T & _031__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_1_d1_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_1_d1_t_flag ? 1 : | _031__T & ( | _031__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_1_d1_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_1_d1_r_flag ? 1 : accu_ram_sel_1_d1_t_flag ? 0 : ( | accu_ram_sel_1_d1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ram_sel_0_d1 <= 1'b0;
    else
      accu_ram_sel_0_d1 <= _028_;
  logic [0:0] _028__X0 ;
  logic [0:0] _028__R0 ;
  logic [0:0] _028__C0 ;
  assign _028__X0 = { 1{ accu_ram_sel_0_d1_S != _028__S }} ;
  assign _028__R0 = 0 ;
  assign _028__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ram_sel_0_d1_T 		<= !nvdla_core_rstn ? 0 : ( _028__T & _028__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_0_d1_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_0_d1_t_flag ? 1 : | _028__T & ( | _028__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_0_d1_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_0_d1_r_flag ? 1 : accu_ram_sel_0_d1_t_flag ? 0 : ( | accu_ram_sel_0_d1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_layer_end_d1 <= 1'b0;
    else
      accu_layer_end_d1 <= _021_;
  logic [0:0] _021__X0 ;
  logic [0:0] _021__R0 ;
  logic [0:0] _021__C0 ;
  assign _021__X0 = { 1{ accu_layer_end_d1_S != _021__S }} ;
  assign _021__R0 = 0 ;
  assign _021__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_layer_end_d1_T 		<= !nvdla_core_rstn ? 0 : ( _021__T & _021__X0 );
  always @( posedge nvdla_core_clk )
      accu_layer_end_d1_t_flag 	<= !nvdla_core_rstn ? 0 : accu_layer_end_d1_t_flag ? 1 : | _021__T & ( | _021__X0 );
  always @( posedge nvdla_core_clk )
      accu_layer_end_d1_r_flag 	<= !nvdla_core_rstn ? 0 : accu_layer_end_d1_r_flag ? 1 : accu_layer_end_d1_t_flag ? 0 : ( | accu_layer_end_d1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_channel_end_d1 <= 1'b0;
    else
      accu_channel_end_d1 <= _002_;
  logic [0:0] _002__X0 ;
  logic [0:0] _002__R0 ;
  logic [0:0] _002__C0 ;
  assign _002__X0 = { 1{ accu_channel_end_d1_S != _002__S }} ;
  assign _002__R0 = 0 ;
  assign _002__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_channel_end_d1_T 		<= !nvdla_core_rstn ? 0 : ( _002__T & _002__X0 );
  always @( posedge nvdla_core_clk )
      accu_channel_end_d1_t_flag 	<= !nvdla_core_rstn ? 0 : accu_channel_end_d1_t_flag ? 1 : | _002__T & ( | _002__X0 );
  always @( posedge nvdla_core_clk )
      accu_channel_end_d1_r_flag 	<= !nvdla_core_rstn ? 0 : accu_channel_end_d1_r_flag ? 1 : accu_channel_end_d1_t_flag ? 0 : ( | accu_channel_end_d1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_stripe_end_d1 <= 1'b0;
    else
      accu_stripe_end_d1 <= _054_;
  logic [0:0] _054__X0 ;
  logic [0:0] _054__R0 ;
  logic [0:0] _054__C0 ;
  assign _054__X0 = { 1{ accu_stripe_end_d1_S != _054__S }} ;
  assign _054__R0 = 0 ;
  assign _054__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_stripe_end_d1_T 		<= !nvdla_core_rstn ? 0 : ( _054__T & _054__X0 );
  always @( posedge nvdla_core_clk )
      accu_stripe_end_d1_t_flag 	<= !nvdla_core_rstn ? 0 : accu_stripe_end_d1_t_flag ? 1 : | _054__T & ( | _054__X0 );
  always @( posedge nvdla_core_clk )
      accu_stripe_end_d1_r_flag 	<= !nvdla_core_rstn ? 0 : accu_stripe_end_d1_r_flag ? 1 : accu_stripe_end_d1_t_flag ? 0 : ( | accu_stripe_end_d1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_rd_mask_d1 <= 8'b00000000;
    else
      accu_rd_mask_d1 <= _052_;
  logic [7:0] _052__X0 ;
  logic [7:0] _052__R0 ;
  logic [7:0] _052__C0 ;
  assign _052__X0 = { 8{ accu_rd_mask_d1_S != _052__S }} ;
  assign _052__R0 = 0 ;
  assign _052__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_rd_mask_d1_T 		<= !nvdla_core_rstn ? 0 : ( _052__T & _052__X0 );
  always @( posedge nvdla_core_clk )
      accu_rd_mask_d1_t_flag 	<= !nvdla_core_rstn ? 0 : accu_rd_mask_d1_t_flag ? 1 : | _052__T & ( | _052__X0 );
  always @( posedge nvdla_core_clk )
      accu_rd_mask_d1_r_flag 	<= !nvdla_core_rstn ? 0 : accu_rd_mask_d1_r_flag ? 1 : accu_rd_mask_d1_t_flag ? 0 : ( | accu_rd_mask_d1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_mode_d1 <= 4'b0000;
    else
      accu_mode_d1 <= _024_;
  logic [3:0] _024__X0 ;
  logic [3:0] _024__R0 ;
  logic [3:0] _024__C0 ;
  assign _024__X0 = { 4{ accu_mode_d1_S != _024__S }} ;
  assign _024__R0 = 0 ;
  assign _024__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_mode_d1_T 		<= !nvdla_core_rstn ? 0 : ( _024__T & _024__X0 );
  always @( posedge nvdla_core_clk )
      accu_mode_d1_t_flag 	<= !nvdla_core_rstn ? 0 : accu_mode_d1_t_flag ? 1 : | _024__T & ( | _024__X0 );
  always @( posedge nvdla_core_clk )
      accu_mode_d1_r_flag 	<= !nvdla_core_rstn ? 0 : accu_mode_d1_r_flag ? 1 : accu_mode_d1_t_flag ? 0 : ( | accu_mode_d1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_addr_d1 <= 5'b00000;
    else
      accu_addr_d1 <= _000_;
  logic [4:0] _000__X0 ;
  logic [4:0] _000__R0 ;
  logic [4:0] _000__C0 ;
  assign _000__X0 = { 5{ accu_addr_d1_S != _000__S }} ;
  assign _000__R0 = 0 ;
  assign _000__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_addr_d1_T 		<= !nvdla_core_rstn ? 0 : ( _000__T & _000__X0 );
  always @( posedge nvdla_core_clk )
      accu_addr_d1_t_flag 	<= !nvdla_core_rstn ? 0 : accu_addr_d1_t_flag ? 1 : | _000__T & ( | _000__X0 );
  always @( posedge nvdla_core_clk )
      accu_addr_d1_r_flag 	<= !nvdla_core_rstn ? 0 : accu_addr_d1_r_flag ? 1 : accu_addr_d1_t_flag ? 0 : ( | accu_addr_d1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ram_valid_d1 <= 1'b0;
    else
      accu_ram_valid_d1 <= accu_ram_valid;
  logic [0:0] accu_ram_valid_X0 ;
  logic [0:0] accu_ram_valid_R0 ;
  logic [0:0] accu_ram_valid_C0 ;
  assign accu_ram_valid_X0 = { 1{ accu_ram_valid_d1_S != accu_ram_valid_S }} ;
  assign accu_ram_valid_R0 = 0 ;
  assign accu_ram_valid_C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ram_valid_d1_T 		<= !nvdla_core_rstn ? 0 : ( accu_ram_valid_T & accu_ram_valid_X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_valid_d1_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_valid_d1_t_flag ? 1 : | accu_ram_valid_T & ( | accu_ram_valid_X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_valid_d1_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_valid_d1_r_flag ? 1 : accu_ram_valid_d1_t_flag ? 0 : ( | accu_ram_valid_d1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ctrl_valid_d1 <= 1'b0;
    else
      accu_ctrl_valid_d1 <= accu_valid[0];
  assign { accu_valid_R10 [8:1] } = 0;
  assign { accu_valid_X10 [8:1] } = 0;
  assign { accu_valid_C10 [8:1] } = 0;
  logic [8:0] accu_valid_X11 ;
  logic [8:0] accu_valid_R11 ;
  logic [8:0] accu_valid_C11 ;
  assign accu_valid_X11 [0] = { 1{ accu_ctrl_valid_d1_S != accu_valid_S }} ;
  assign accu_valid_R11 [0] = 0 ;
  assign accu_valid_C11 [0] = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ctrl_valid_d1_T 		<= !nvdla_core_rstn ? 0 : ( accu_valid_T [0] & accu_valid_X11 [0] );
  always @( posedge nvdla_core_clk )
      accu_ctrl_valid_d1_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ctrl_valid_d1_t_flag ? 1 : | accu_valid_T & ( | accu_valid_X11 [0] );
  always @( posedge nvdla_core_clk )
      accu_ctrl_valid_d1_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ctrl_valid_d1_r_flag ? 1 : accu_ctrl_valid_d1_t_flag ? 0 : ( | accu_ctrl_valid_d1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      cfg_in_en_mask <= 192'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    else
      cfg_in_en_mask <= _056_;
  logic [191:0] _056__X0 ;
  logic [191:0] _056__R0 ;
  logic [191:0] _056__C0 ;
  assign _056__X0 = { 192{ cfg_in_en_mask_S != _056__S }} ;
  assign _056__R0 = 0 ;
  assign _056__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      cfg_in_en_mask_T 		<= !nvdla_core_rstn ? 0 : ( _056__T & _056__X0 );
  always @( posedge nvdla_core_clk )
      cfg_in_en_mask_t_flag 	<= !nvdla_core_rstn ? 0 : cfg_in_en_mask_t_flag ? 1 : | _056__T & ( | _056__X0 );
  always @( posedge nvdla_core_clk )
      cfg_in_en_mask_r_flag 	<= !nvdla_core_rstn ? 0 : cfg_in_en_mask_r_flag ? 1 : cfg_in_en_mask_t_flag ? 0 : ( | cfg_in_en_mask_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      cfg_is_int8 <= 127'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    else
      cfg_is_int8 <= _058_;
  logic [126:0] _058__X0 ;
  logic [126:0] _058__R0 ;
  logic [126:0] _058__C0 ;
  assign _058__X0 = { 127{ cfg_is_int8_S != _058__S }} ;
  assign _058__R0 = 0 ;
  assign _058__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      cfg_is_int8_T 		<= !nvdla_core_rstn ? 0 : ( _058__T & _058__X0 );
  always @( posedge nvdla_core_clk )
      cfg_is_int8_t_flag 	<= !nvdla_core_rstn ? 0 : cfg_is_int8_t_flag ? 1 : | _058__T & ( | _058__X0 );
  always @( posedge nvdla_core_clk )
      cfg_is_int8_r_flag 	<= !nvdla_core_rstn ? 0 : cfg_is_int8_r_flag ? 1 : cfg_is_int8_t_flag ? 0 : ( | cfg_is_int8_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      cfg_is_wg <= 96'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    else
      cfg_is_wg <= _060_;
  logic [95:0] _060__X0 ;
  logic [95:0] _060__R0 ;
  logic [95:0] _060__C0 ;
  assign _060__X0 = { 96{ cfg_is_wg_S != _060__S }} ;
  assign _060__R0 = 0 ;
  assign _060__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      cfg_is_wg_T 		<= !nvdla_core_rstn ? 0 : ( _060__T & _060__X0 );
  always @( posedge nvdla_core_clk )
      cfg_is_wg_t_flag 	<= !nvdla_core_rstn ? 0 : cfg_is_wg_t_flag ? 1 : | _060__T & ( | _060__X0 );
  always @( posedge nvdla_core_clk )
      cfg_is_wg_r_flag 	<= !nvdla_core_rstn ? 0 : cfg_is_wg_r_flag ? 1 : cfg_is_wg_t_flag ? 0 : ( | cfg_is_wg_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      cfg_is_int <= 25'b1111111111111111111111111;
    else
      cfg_is_int <= _059_;
  logic [24:0] _059__X0 ;
  logic [24:0] _059__R0 ;
  logic [24:0] _059__C0 ;
  assign _059__X0 = { 25{ cfg_is_int_S != _059__S }} ;
  assign _059__R0 = 0 ;
  assign _059__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      cfg_is_int_T 		<= !nvdla_core_rstn ? 0 : ( _059__T & _059__X0 );
  always @( posedge nvdla_core_clk )
      cfg_is_int_t_flag 	<= !nvdla_core_rstn ? 0 : cfg_is_int_t_flag ? 1 : | _059__T & ( | _059__X0 );
  always @( posedge nvdla_core_clk )
      cfg_is_int_r_flag 	<= !nvdla_core_rstn ? 0 : cfg_is_int_r_flag ? 1 : cfg_is_int_t_flag ? 0 : ( | cfg_is_int_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      cfg_is_fp <= 25'b0000000000000000000000000;
    else
      cfg_is_fp <= _057_;
  logic [24:0] _057__X0 ;
  logic [24:0] _057__R0 ;
  logic [24:0] _057__C0 ;
  assign _057__X0 = { 25{ cfg_is_fp_S != _057__S }} ;
  assign _057__R0 = 0 ;
  assign _057__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      cfg_is_fp_T 		<= !nvdla_core_rstn ? 0 : ( _057__T & _057__X0 );
  always @( posedge nvdla_core_clk )
      cfg_is_fp_t_flag 	<= !nvdla_core_rstn ? 0 : cfg_is_fp_t_flag ? 1 : | _057__T & ( | _057__X0 );
  always @( posedge nvdla_core_clk )
      cfg_is_fp_r_flag 	<= !nvdla_core_rstn ? 0 : cfg_is_fp_r_flag ? 1 : cfg_is_fp_t_flag ? 0 : ( | cfg_is_fp_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      cfg_truncate <= 640'b
    else
      cfg_truncate <= _061_;
  logic [639:0] _061__X0 ;
  logic [639:0] _061__R0 ;
  logic [639:0] _061__C0 ;
  assign _061__X0 = { 640{ cfg_truncate_S != _061__S }} ;
  assign _061__R0 = 0 ;
  assign _061__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      cfg_truncate_T 		<= !nvdla_core_rstn ? 0 : ( _061__T & _061__X0 );
  always @( posedge nvdla_core_clk )
      cfg_truncate_t_flag 	<= !nvdla_core_rstn ? 0 : cfg_truncate_t_flag ? 1 : | _061__T & ( | _061__X0 );
  always @( posedge nvdla_core_clk )
      cfg_truncate_r_flag 	<= !nvdla_core_rstn ? 0 : cfg_truncate_r_flag ? 1 : cfg_truncate_t_flag ? 0 : ( | cfg_truncate_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      cfg_winograd <= 1'b0;
    else
      cfg_winograd <= _062_;
  logic [0:0] _062__X0 ;
  logic [0:0] _062__R0 ;
  logic [0:0] _062__C0 ;
  assign _062__X0 = { 1{ cfg_winograd_S != _062__S }} ;
  assign _062__R0 = 0 ;
  assign _062__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      cfg_winograd_T 		<= !nvdla_core_rstn ? 0 : ( _062__T & _062__X0 );
  always @( posedge nvdla_core_clk )
      cfg_winograd_t_flag 	<= !nvdla_core_rstn ? 0 : cfg_winograd_t_flag ? 1 : | _062__T & ( | _062__X0 );
  always @( posedge nvdla_core_clk )
      cfg_winograd_r_flag 	<= !nvdla_core_rstn ? 0 : cfg_winograd_r_flag ? 1 : cfg_winograd_t_flag ? 0 : ( | cfg_winograd_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ram_sel_7_d0 <= 1'b0;
    else
      accu_ram_sel_7_d0 <= _048_;
  logic [0:0] _048__X0 ;
  logic [0:0] _048__R0 ;
  logic [0:0] _048__C0 ;
  assign _048__X0 = { 1{ accu_ram_sel_7_d0_S != _048__S }} ;
  assign _048__R0 = 0 ;
  assign _048__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ram_sel_7_d0_T 		<= !nvdla_core_rstn ? 0 : ( _048__T & _048__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_7_d0_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_7_d0_t_flag ? 1 : | _048__T & ( | _048__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_7_d0_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_7_d0_r_flag ? 1 : accu_ram_sel_7_d0_t_flag ? 0 : ( | accu_ram_sel_7_d0_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ram_sel_6_d0 <= 1'b0;
    else
      accu_ram_sel_6_d0 <= _045_;
  logic [0:0] _045__X0 ;
  logic [0:0] _045__R0 ;
  logic [0:0] _045__C0 ;
  assign _045__X0 = { 1{ accu_ram_sel_6_d0_S != _045__S }} ;
  assign _045__R0 = 0 ;
  assign _045__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ram_sel_6_d0_T 		<= !nvdla_core_rstn ? 0 : ( _045__T & _045__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_6_d0_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_6_d0_t_flag ? 1 : | _045__T & ( | _045__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_6_d0_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_6_d0_r_flag ? 1 : accu_ram_sel_6_d0_t_flag ? 0 : ( | accu_ram_sel_6_d0_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ram_sel_5_d0 <= 1'b0;
    else
      accu_ram_sel_5_d0 <= _042_;
  logic [0:0] _042__X0 ;
  logic [0:0] _042__R0 ;
  logic [0:0] _042__C0 ;
  assign _042__X0 = { 1{ accu_ram_sel_5_d0_S != _042__S }} ;
  assign _042__R0 = 0 ;
  assign _042__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ram_sel_5_d0_T 		<= !nvdla_core_rstn ? 0 : ( _042__T & _042__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_5_d0_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_5_d0_t_flag ? 1 : | _042__T & ( | _042__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_5_d0_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_5_d0_r_flag ? 1 : accu_ram_sel_5_d0_t_flag ? 0 : ( | accu_ram_sel_5_d0_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ram_sel_4_d0 <= 1'b0;
    else
      accu_ram_sel_4_d0 <= _039_;
  logic [0:0] _039__X0 ;
  logic [0:0] _039__R0 ;
  logic [0:0] _039__C0 ;
  assign _039__X0 = { 1{ accu_ram_sel_4_d0_S != _039__S }} ;
  assign _039__R0 = 0 ;
  assign _039__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ram_sel_4_d0_T 		<= !nvdla_core_rstn ? 0 : ( _039__T & _039__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_4_d0_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_4_d0_t_flag ? 1 : | _039__T & ( | _039__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_4_d0_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_4_d0_r_flag ? 1 : accu_ram_sel_4_d0_t_flag ? 0 : ( | accu_ram_sel_4_d0_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ram_sel_3_d0 <= 1'b0;
    else
      accu_ram_sel_3_d0 <= _036_;
  logic [0:0] _036__X0 ;
  logic [0:0] _036__R0 ;
  logic [0:0] _036__C0 ;
  assign _036__X0 = { 1{ accu_ram_sel_3_d0_S != _036__S }} ;
  assign _036__R0 = 0 ;
  assign _036__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ram_sel_3_d0_T 		<= !nvdla_core_rstn ? 0 : ( _036__T & _036__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_3_d0_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_3_d0_t_flag ? 1 : | _036__T & ( | _036__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_3_d0_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_3_d0_r_flag ? 1 : accu_ram_sel_3_d0_t_flag ? 0 : ( | accu_ram_sel_3_d0_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ram_sel_2_d0 <= 1'b0;
    else
      accu_ram_sel_2_d0 <= _033_;
  logic [0:0] _033__X0 ;
  logic [0:0] _033__R0 ;
  logic [0:0] _033__C0 ;
  assign _033__X0 = { 1{ accu_ram_sel_2_d0_S != _033__S }} ;
  assign _033__R0 = 0 ;
  assign _033__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ram_sel_2_d0_T 		<= !nvdla_core_rstn ? 0 : ( _033__T & _033__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_2_d0_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_2_d0_t_flag ? 1 : | _033__T & ( | _033__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_2_d0_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_2_d0_r_flag ? 1 : accu_ram_sel_2_d0_t_flag ? 0 : ( | accu_ram_sel_2_d0_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ram_sel_1_d0 <= 1'b0;
    else
      accu_ram_sel_1_d0 <= _030_;
  logic [0:0] _030__X0 ;
  logic [0:0] _030__R0 ;
  logic [0:0] _030__C0 ;
  assign _030__X0 = { 1{ accu_ram_sel_1_d0_S != _030__S }} ;
  assign _030__R0 = 0 ;
  assign _030__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ram_sel_1_d0_T 		<= !nvdla_core_rstn ? 0 : ( _030__T & _030__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_1_d0_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_1_d0_t_flag ? 1 : | _030__T & ( | _030__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_1_d0_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_1_d0_r_flag ? 1 : accu_ram_sel_1_d0_t_flag ? 0 : ( | accu_ram_sel_1_d0_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_ram_sel_0_d0 <= 1'b0;
    else
      accu_ram_sel_0_d0 <= _027_;
  logic [0:0] _027__X0 ;
  logic [0:0] _027__R0 ;
  logic [0:0] _027__C0 ;
  assign _027__X0 = { 1{ accu_ram_sel_0_d0_S != _027__S }} ;
  assign _027__R0 = 0 ;
  assign _027__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_ram_sel_0_d0_T 		<= !nvdla_core_rstn ? 0 : ( _027__T & _027__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_0_d0_t_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_0_d0_t_flag ? 1 : | _027__T & ( | _027__X0 );
  always @( posedge nvdla_core_clk )
      accu_ram_sel_0_d0_r_flag 	<= !nvdla_core_rstn ? 0 : accu_ram_sel_0_d0_r_flag ? 1 : accu_ram_sel_0_d0_t_flag ? 0 : ( | accu_ram_sel_0_d0_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_mode_d0 <= 4'b0001;
    else
      accu_mode_d0 <= _023_;
  logic [3:0] _023__X0 ;
  logic [3:0] _023__R0 ;
  logic [3:0] _023__C0 ;
  assign _023__X0 = { 4{ accu_mode_d0_S != _023__S }} ;
  assign _023__R0 = 0 ;
  assign _023__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_mode_d0_T 		<= !nvdla_core_rstn ? 0 : ( _023__T & _023__X0 );
  always @( posedge nvdla_core_clk )
      accu_mode_d0_t_flag 	<= !nvdla_core_rstn ? 0 : accu_mode_d0_t_flag ? 1 : | _023__T & ( | _023__X0 );
  always @( posedge nvdla_core_clk )
      accu_mode_d0_r_flag 	<= !nvdla_core_rstn ? 0 : accu_mode_d0_r_flag ? 1 : accu_mode_d0_t_flag ? 0 : ( | accu_mode_d0_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_rd_mask <= 8'b00000000;
    else
      accu_rd_mask <= _051_;
  logic [7:0] _051__X0 ;
  logic [7:0] _051__R0 ;
  logic [7:0] _051__C0 ;
  assign _051__X0 = { 8{ accu_rd_mask_S != _051__S }} ;
  assign _051__R0 = 0 ;
  assign _051__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_rd_mask_T 		<= !nvdla_core_rstn ? 0 : ( _051__T & _051__X0 );
  always @( posedge nvdla_core_clk )
      accu_rd_mask_t_flag 	<= !nvdla_core_rstn ? 0 : accu_rd_mask_t_flag ? 1 : | _051__T & ( | _051__X0 );
  always @( posedge nvdla_core_clk )
      accu_rd_mask_r_flag 	<= !nvdla_core_rstn ? 0 : accu_rd_mask_r_flag ? 1 : accu_rd_mask_t_flag ? 0 : ( | accu_rd_mask_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_channel_st <= 9'b111111111;
    else
      accu_channel_st <= _004_;
  logic [8:0] _004__X0 ;
  logic [8:0] _004__R0 ;
  logic [8:0] _004__C0 ;
  assign _004__X0 = { 9{ accu_channel_st_S != _004__S }} ;
  assign _004__R0 = 0 ;
  assign _004__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_channel_st_T 		<= !nvdla_core_rstn ? 0 : ( _004__T & _004__X0 );
  always @( posedge nvdla_core_clk )
      accu_channel_st_t_flag 	<= !nvdla_core_rstn ? 0 : accu_channel_st_t_flag ? 1 : | _004__T & ( | _004__X0 );
  always @( posedge nvdla_core_clk )
      accu_channel_st_r_flag 	<= !nvdla_core_rstn ? 0 : accu_channel_st_r_flag ? 1 : accu_channel_st_t_flag ? 0 : ( | accu_channel_st_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_cnt <= 7'b0000000;
    else
      accu_cnt <= _005_;
  logic [6:0] _005__X0 ;
  logic [6:0] _005__R0 ;
  logic [6:0] _005__C0 ;
  assign _005__X0 = { 7{ accu_cnt_S != _005__S }} ;
  assign _005__R0 = 0 ;
  assign _005__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_cnt_T 		<= !nvdla_core_rstn ? 0 : ( _005__T & _005__X0 );
  always @( posedge nvdla_core_clk )
      accu_cnt_t_flag 	<= !nvdla_core_rstn ? 0 : accu_cnt_t_flag ? 1 : | _005__T & ( | _005__X0 );
  always @( posedge nvdla_core_clk )
      accu_cnt_r_flag 	<= !nvdla_core_rstn ? 0 : accu_cnt_r_flag ? 1 : accu_cnt_t_flag ? 0 : ( | accu_cnt_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      wait_for_op_en <= 1'b1;
    else
      wait_for_op_en <= wait_for_op_en_w;
  logic [0:0] wait_for_op_en_w_X0 ;
  logic [0:0] wait_for_op_en_w_R0 ;
  logic [0:0] wait_for_op_en_w_C0 ;
  assign wait_for_op_en_w_X0 = { 1{ wait_for_op_en_S != wait_for_op_en_w_S }} ;
  assign wait_for_op_en_w_R0 = 0 ;
  assign wait_for_op_en_w_C0 = 0 ;
  always @( posedge nvdla_core_clk )
      wait_for_op_en_T 		<= !nvdla_core_rstn ? 0 : ( wait_for_op_en_w_T & wait_for_op_en_w_X0 );
  always @( posedge nvdla_core_clk )
      wait_for_op_en_t_flag 	<= !nvdla_core_rstn ? 0 : wait_for_op_en_t_flag ? 1 : | wait_for_op_en_w_T & ( | wait_for_op_en_w_X0 );
  always @( posedge nvdla_core_clk )
      wait_for_op_en_r_flag 	<= !nvdla_core_rstn ? 0 : wait_for_op_en_r_flag ? 1 : wait_for_op_en_t_flag ? 0 : ( | wait_for_op_en_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      slcg_cell_en_d3 <= 4'b0000;
    else
      slcg_cell_en_d3 <= slcg_cell_en_d2;
  logic [3:0] slcg_cell_en_d2_X0 ;
  logic [3:0] slcg_cell_en_d2_R0 ;
  logic [3:0] slcg_cell_en_d2_C0 ;
  assign slcg_cell_en_d2_X0 = { 4{ slcg_cell_en_d3_S != slcg_cell_en_d2_S }} ;
  assign slcg_cell_en_d2_R0 = 0 ;
  assign slcg_cell_en_d2_C0 = 0 ;
  always @( posedge nvdla_core_clk )
      slcg_cell_en_d3_T 		<= !nvdla_core_rstn ? 0 : ( slcg_cell_en_d2_T & slcg_cell_en_d2_X0 );
  always @( posedge nvdla_core_clk )
      slcg_cell_en_d3_t_flag 	<= !nvdla_core_rstn ? 0 : slcg_cell_en_d3_t_flag ? 1 : | slcg_cell_en_d2_T & ( | slcg_cell_en_d2_X0 );
  always @( posedge nvdla_core_clk )
      slcg_cell_en_d3_r_flag 	<= !nvdla_core_rstn ? 0 : slcg_cell_en_d3_r_flag ? 1 : slcg_cell_en_d3_t_flag ? 0 : ( | slcg_cell_en_d3_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      slcg_cell_en_d2 <= 4'b0000;
    else
      slcg_cell_en_d2 <= slcg_cell_en_d1;
  logic [3:0] slcg_cell_en_d1_X0 ;
  logic [3:0] slcg_cell_en_d1_R0 ;
  logic [3:0] slcg_cell_en_d1_C0 ;
  assign slcg_cell_en_d1_X0 = { 4{ slcg_cell_en_d2_S != slcg_cell_en_d1_S }} ;
  assign slcg_cell_en_d1_R0 = 0 ;
  assign slcg_cell_en_d1_C0 = 0 ;
  always @( posedge nvdla_core_clk )
      slcg_cell_en_d2_T 		<= !nvdla_core_rstn ? 0 : ( slcg_cell_en_d1_T & slcg_cell_en_d1_X0 );
  always @( posedge nvdla_core_clk )
      slcg_cell_en_d2_t_flag 	<= !nvdla_core_rstn ? 0 : slcg_cell_en_d2_t_flag ? 1 : | slcg_cell_en_d1_T & ( | slcg_cell_en_d1_X0 );
  always @( posedge nvdla_core_clk )
      slcg_cell_en_d2_r_flag 	<= !nvdla_core_rstn ? 0 : slcg_cell_en_d2_r_flag ? 1 : slcg_cell_en_d2_t_flag ? 0 : ( | slcg_cell_en_d2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      slcg_cell_en_d1 <= 4'b0000;
    else
      slcg_cell_en_d1 <= slcg_cell_en_w;
  logic [3:0] slcg_cell_en_w_X0 ;
  logic [3:0] slcg_cell_en_w_R0 ;
  logic [3:0] slcg_cell_en_w_C0 ;
  assign slcg_cell_en_w_X0 = { 4{ slcg_cell_en_d1_S != slcg_cell_en_w_S }} ;
  assign slcg_cell_en_w_R0 = 0 ;
  assign slcg_cell_en_w_C0 = 0 ;
  always @( posedge nvdla_core_clk )
      slcg_cell_en_d1_T 		<= !nvdla_core_rstn ? 0 : ( slcg_cell_en_w_T & slcg_cell_en_w_X0 );
  always @( posedge nvdla_core_clk )
      slcg_cell_en_d1_t_flag 	<= !nvdla_core_rstn ? 0 : slcg_cell_en_d1_t_flag ? 1 : | slcg_cell_en_w_T & ( | slcg_cell_en_w_X0 );
  always @( posedge nvdla_core_clk )
      slcg_cell_en_d1_r_flag 	<= !nvdla_core_rstn ? 0 : slcg_cell_en_d1_r_flag ? 1 : slcg_cell_en_d1_t_flag ? 0 : ( | slcg_cell_en_d1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      accu_pd <= 9'b000000000;
    else
      accu_pd <= _026_;
  logic [8:0] _026__X0 ;
  logic [8:0] _026__R0 ;
  logic [8:0] _026__C0 ;
  assign _026__X0 = { 9{ accu_pd_S != _026__S }} ;
  assign _026__R0 = 0 ;
  assign _026__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      accu_pd_T 		<= !nvdla_core_rstn ? 0 : ( _026__T & _026__X0 );
  always @( posedge nvdla_core_clk )
      accu_pd_t_flag 	<= !nvdla_core_rstn ? 0 : accu_pd_t_flag ? 1 : | _026__T & ( | _026__X0 );
  always @( posedge nvdla_core_clk )
      accu_pd_r_flag 	<= !nvdla_core_rstn ? 0 : accu_pd_r_flag ? 1 : accu_pd_t_flag ? 0 : ( | accu_pd_R ) ;
  logic [0:0] \accu_valid_reg[0] ;
  logic [0:0]  \accu_valid_reg[0]_T ;
  logic [0:0]  \accu_valid_reg[0]_PREV_VAL1 ;
  logic [0:0]  \accu_valid_reg[0]_PREV_VAL2 ;
  logic [0:0]  \accu_valid_reg[0]_R ;
  logic [0:0]  \accu_valid_reg[0]_X ;
  logic [0:0]  \accu_valid_reg[0]_C ;
  logic [13:0] \accu_valid_reg[0]_S ;
  logic \accu_valid_reg[0]_t_flag ;
  logic \accu_valid_reg[0]_r_flag ;
  assign \accu_valid_reg[0]_S = 1047 ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      \accu_valid_reg[0] <= 1'b0;
    else
      \accu_valid_reg[0] <= mac_a2accu_pvld;
  logic [0:0] mac_a2accu_pvld_X0 ;
  logic [0:0] mac_a2accu_pvld_R0 ;
  logic [0:0] mac_a2accu_pvld_C0 ;
  assign mac_a2accu_pvld_X0 = { 1{ \accu_valid_reg[0]_S != mac_a2accu_pvld_S }} ;
  assign mac_a2accu_pvld_R0 = 0 ;
  assign mac_a2accu_pvld_C0 = 0 ;
  always @( posedge nvdla_core_clk )
      \accu_valid_reg[0]_T 		<= !nvdla_core_rstn ? 0 : ( mac_a2accu_pvld_T & mac_a2accu_pvld_X0 );
  always @( posedge nvdla_core_clk )
      \accu_valid_reg[0]_t_flag 	<= !nvdla_core_rstn ? 0 : \accu_valid_reg[0]_t_flag ? 1 : | mac_a2accu_pvld_T & ( | mac_a2accu_pvld_X0 );
  always @( posedge nvdla_core_clk )
      \accu_valid_reg[0]_r_flag 	<= !nvdla_core_rstn ? 0 : \accu_valid_reg[0]_r_flag ? 1 : \accu_valid_reg[0]_t_flag ? 0 : ( | \accu_valid_reg[0]_R ) ;
  assign accu_valid[0] = \accu_valid_reg[0] ;
  logic [0:0] \accu_valid_reg[0]_C0 ;
  logic [0:0] \accu_valid_reg[0]_R0 ;
  logic [0:0] \accu_valid_reg[0]_X0 ;
  assign accu_valid_T [0] = \accu_valid_reg[0]_T ;
  assign \accu_valid_reg[0]_C0 = accu_valid_C [0] ;
  assign \accu_valid_reg[0]_R0 = accu_valid_R [0] ;
  assign \accu_valid_reg[0]_X0 = accu_valid_X [0] ;
  assign accu_valid_S = \accu_valid_reg[0]_S ;
  logic [191:0] fangyuan1;
  logic [191:0] fangyuan1_T ;
  logic [191:0] fangyuan1_R ;
  logic [191:0] fangyuan1_C ;
  logic [191:0] fangyuan1_X ;
  assign fangyuan1 = { accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2, accu_channel_end_d2 };
  assign fangyuan1_T = {  accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T , accu_channel_end_d2_T  };
  logic [13:0] fangyuan1_S ;
  assign fangyuan1_S = 0 ;
  logic [0:0] accu_channel_end_d2_R0 ;
  logic [0:0] accu_channel_end_d2_X0 ;
  logic [0:0] accu_channel_end_d2_C0 ;
  assign accu_channel_end_d2_R0 = fangyuan1_R [191:191] ;
  assign accu_channel_end_d2_X0 = fangyuan1_X [191:191] ;
  assign accu_channel_end_d2_C0 = fangyuan1_C [191:191] ;
  logic [0:0] accu_channel_end_d2_R1 ;
  logic [0:0] accu_channel_end_d2_X1 ;
  logic [0:0] accu_channel_end_d2_C1 ;
  assign accu_channel_end_d2_R1 = fangyuan1_R [190:190] ;
  assign accu_channel_end_d2_X1 = fangyuan1_X [190:190] ;
  assign accu_channel_end_d2_C1 = fangyuan1_C [190:190] ;
  logic [0:0] accu_channel_end_d2_R2 ;
  logic [0:0] accu_channel_end_d2_X2 ;
  logic [0:0] accu_channel_end_d2_C2 ;
  assign accu_channel_end_d2_R2 = fangyuan1_R [189:189] ;
  assign accu_channel_end_d2_X2 = fangyuan1_X [189:189] ;
  assign accu_channel_end_d2_C2 = fangyuan1_C [189:189] ;
  logic [0:0] accu_channel_end_d2_R3 ;
  logic [0:0] accu_channel_end_d2_X3 ;
  logic [0:0] accu_channel_end_d2_C3 ;
  assign accu_channel_end_d2_R3 = fangyuan1_R [188:188] ;
  assign accu_channel_end_d2_X3 = fangyuan1_X [188:188] ;
  assign accu_channel_end_d2_C3 = fangyuan1_C [188:188] ;
  logic [0:0] accu_channel_end_d2_R4 ;
  logic [0:0] accu_channel_end_d2_X4 ;
  logic [0:0] accu_channel_end_d2_C4 ;
  assign accu_channel_end_d2_R4 = fangyuan1_R [187:187] ;
  assign accu_channel_end_d2_X4 = fangyuan1_X [187:187] ;
  assign accu_channel_end_d2_C4 = fangyuan1_C [187:187] ;
  logic [0:0] accu_channel_end_d2_R5 ;
  logic [0:0] accu_channel_end_d2_X5 ;
  logic [0:0] accu_channel_end_d2_C5 ;
  assign accu_channel_end_d2_R5 = fangyuan1_R [186:186] ;
  assign accu_channel_end_d2_X5 = fangyuan1_X [186:186] ;
  assign accu_channel_end_d2_C5 = fangyuan1_C [186:186] ;
  logic [0:0] accu_channel_end_d2_R6 ;
  logic [0:0] accu_channel_end_d2_X6 ;
  logic [0:0] accu_channel_end_d2_C6 ;
  assign accu_channel_end_d2_R6 = fangyuan1_R [185:185] ;
  assign accu_channel_end_d2_X6 = fangyuan1_X [185:185] ;
  assign accu_channel_end_d2_C6 = fangyuan1_C [185:185] ;
  logic [0:0] accu_channel_end_d2_R7 ;
  logic [0:0] accu_channel_end_d2_X7 ;
  logic [0:0] accu_channel_end_d2_C7 ;
  assign accu_channel_end_d2_R7 = fangyuan1_R [184:184] ;
  assign accu_channel_end_d2_X7 = fangyuan1_X [184:184] ;
  assign accu_channel_end_d2_C7 = fangyuan1_C [184:184] ;
  logic [0:0] accu_channel_end_d2_R8 ;
  logic [0:0] accu_channel_end_d2_X8 ;
  logic [0:0] accu_channel_end_d2_C8 ;
  assign accu_channel_end_d2_R8 = fangyuan1_R [183:183] ;
  assign accu_channel_end_d2_X8 = fangyuan1_X [183:183] ;
  assign accu_channel_end_d2_C8 = fangyuan1_C [183:183] ;
  logic [0:0] accu_channel_end_d2_R9 ;
  logic [0:0] accu_channel_end_d2_X9 ;
  logic [0:0] accu_channel_end_d2_C9 ;
  assign accu_channel_end_d2_R9 = fangyuan1_R [182:182] ;
  assign accu_channel_end_d2_X9 = fangyuan1_X [182:182] ;
  assign accu_channel_end_d2_C9 = fangyuan1_C [182:182] ;
  logic [0:0] accu_channel_end_d2_R10 ;
  logic [0:0] accu_channel_end_d2_X10 ;
  logic [0:0] accu_channel_end_d2_C10 ;
  assign accu_channel_end_d2_R10 = fangyuan1_R [181:181] ;
  assign accu_channel_end_d2_X10 = fangyuan1_X [181:181] ;
  assign accu_channel_end_d2_C10 = fangyuan1_C [181:181] ;
  logic [0:0] accu_channel_end_d2_R11 ;
  logic [0:0] accu_channel_end_d2_X11 ;
  logic [0:0] accu_channel_end_d2_C11 ;
  assign accu_channel_end_d2_R11 = fangyuan1_R [180:180] ;
  assign accu_channel_end_d2_X11 = fangyuan1_X [180:180] ;
  assign accu_channel_end_d2_C11 = fangyuan1_C [180:180] ;
  logic [0:0] accu_channel_end_d2_R12 ;
  logic [0:0] accu_channel_end_d2_X12 ;
  logic [0:0] accu_channel_end_d2_C12 ;
  assign accu_channel_end_d2_R12 = fangyuan1_R [179:179] ;
  assign accu_channel_end_d2_X12 = fangyuan1_X [179:179] ;
  assign accu_channel_end_d2_C12 = fangyuan1_C [179:179] ;
  logic [0:0] accu_channel_end_d2_R13 ;
  logic [0:0] accu_channel_end_d2_X13 ;
  logic [0:0] accu_channel_end_d2_C13 ;
  assign accu_channel_end_d2_R13 = fangyuan1_R [178:178] ;
  assign accu_channel_end_d2_X13 = fangyuan1_X [178:178] ;
  assign accu_channel_end_d2_C13 = fangyuan1_C [178:178] ;
  logic [0:0] accu_channel_end_d2_R14 ;
  logic [0:0] accu_channel_end_d2_X14 ;
  logic [0:0] accu_channel_end_d2_C14 ;
  assign accu_channel_end_d2_R14 = fangyuan1_R [177:177] ;
  assign accu_channel_end_d2_X14 = fangyuan1_X [177:177] ;
  assign accu_channel_end_d2_C14 = fangyuan1_C [177:177] ;
  logic [0:0] accu_channel_end_d2_R15 ;
  logic [0:0] accu_channel_end_d2_X15 ;
  logic [0:0] accu_channel_end_d2_C15 ;
  assign accu_channel_end_d2_R15 = fangyuan1_R [176:176] ;
  assign accu_channel_end_d2_X15 = fangyuan1_X [176:176] ;
  assign accu_channel_end_d2_C15 = fangyuan1_C [176:176] ;
  logic [0:0] accu_channel_end_d2_R16 ;
  logic [0:0] accu_channel_end_d2_X16 ;
  logic [0:0] accu_channel_end_d2_C16 ;
  assign accu_channel_end_d2_R16 = fangyuan1_R [175:175] ;
  assign accu_channel_end_d2_X16 = fangyuan1_X [175:175] ;
  assign accu_channel_end_d2_C16 = fangyuan1_C [175:175] ;
  logic [0:0] accu_channel_end_d2_R17 ;
  logic [0:0] accu_channel_end_d2_X17 ;
  logic [0:0] accu_channel_end_d2_C17 ;
  assign accu_channel_end_d2_R17 = fangyuan1_R [174:174] ;
  assign accu_channel_end_d2_X17 = fangyuan1_X [174:174] ;
  assign accu_channel_end_d2_C17 = fangyuan1_C [174:174] ;
  logic [0:0] accu_channel_end_d2_R18 ;
  logic [0:0] accu_channel_end_d2_X18 ;
  logic [0:0] accu_channel_end_d2_C18 ;
  assign accu_channel_end_d2_R18 = fangyuan1_R [173:173] ;
  assign accu_channel_end_d2_X18 = fangyuan1_X [173:173] ;
  assign accu_channel_end_d2_C18 = fangyuan1_C [173:173] ;
  logic [0:0] accu_channel_end_d2_R19 ;
  logic [0:0] accu_channel_end_d2_X19 ;
  logic [0:0] accu_channel_end_d2_C19 ;
  assign accu_channel_end_d2_R19 = fangyuan1_R [172:172] ;
  assign accu_channel_end_d2_X19 = fangyuan1_X [172:172] ;
  assign accu_channel_end_d2_C19 = fangyuan1_C [172:172] ;
  logic [0:0] accu_channel_end_d2_R20 ;
  logic [0:0] accu_channel_end_d2_X20 ;
  logic [0:0] accu_channel_end_d2_C20 ;
  assign accu_channel_end_d2_R20 = fangyuan1_R [171:171] ;
  assign accu_channel_end_d2_X20 = fangyuan1_X [171:171] ;
  assign accu_channel_end_d2_C20 = fangyuan1_C [171:171] ;
  logic [0:0] accu_channel_end_d2_R21 ;
  logic [0:0] accu_channel_end_d2_X21 ;
  logic [0:0] accu_channel_end_d2_C21 ;
  assign accu_channel_end_d2_R21 = fangyuan1_R [170:170] ;
  assign accu_channel_end_d2_X21 = fangyuan1_X [170:170] ;
  assign accu_channel_end_d2_C21 = fangyuan1_C [170:170] ;
  logic [0:0] accu_channel_end_d2_R22 ;
  logic [0:0] accu_channel_end_d2_X22 ;
  logic [0:0] accu_channel_end_d2_C22 ;
  assign accu_channel_end_d2_R22 = fangyuan1_R [169:169] ;
  assign accu_channel_end_d2_X22 = fangyuan1_X [169:169] ;
  assign accu_channel_end_d2_C22 = fangyuan1_C [169:169] ;
  logic [0:0] accu_channel_end_d2_R23 ;
  logic [0:0] accu_channel_end_d2_X23 ;
  logic [0:0] accu_channel_end_d2_C23 ;
  assign accu_channel_end_d2_R23 = fangyuan1_R [168:168] ;
  assign accu_channel_end_d2_X23 = fangyuan1_X [168:168] ;
  assign accu_channel_end_d2_C23 = fangyuan1_C [168:168] ;
  logic [0:0] accu_channel_end_d2_R24 ;
  logic [0:0] accu_channel_end_d2_X24 ;
  logic [0:0] accu_channel_end_d2_C24 ;
  assign accu_channel_end_d2_R24 = fangyuan1_R [167:167] ;
  assign accu_channel_end_d2_X24 = fangyuan1_X [167:167] ;
  assign accu_channel_end_d2_C24 = fangyuan1_C [167:167] ;
  logic [0:0] accu_channel_end_d2_R25 ;
  logic [0:0] accu_channel_end_d2_X25 ;
  logic [0:0] accu_channel_end_d2_C25 ;
  assign accu_channel_end_d2_R25 = fangyuan1_R [166:166] ;
  assign accu_channel_end_d2_X25 = fangyuan1_X [166:166] ;
  assign accu_channel_end_d2_C25 = fangyuan1_C [166:166] ;
  logic [0:0] accu_channel_end_d2_R26 ;
  logic [0:0] accu_channel_end_d2_X26 ;
  logic [0:0] accu_channel_end_d2_C26 ;
  assign accu_channel_end_d2_R26 = fangyuan1_R [165:165] ;
  assign accu_channel_end_d2_X26 = fangyuan1_X [165:165] ;
  assign accu_channel_end_d2_C26 = fangyuan1_C [165:165] ;
  logic [0:0] accu_channel_end_d2_R27 ;
  logic [0:0] accu_channel_end_d2_X27 ;
  logic [0:0] accu_channel_end_d2_C27 ;
  assign accu_channel_end_d2_R27 = fangyuan1_R [164:164] ;
  assign accu_channel_end_d2_X27 = fangyuan1_X [164:164] ;
  assign accu_channel_end_d2_C27 = fangyuan1_C [164:164] ;
  logic [0:0] accu_channel_end_d2_R28 ;
  logic [0:0] accu_channel_end_d2_X28 ;
  logic [0:0] accu_channel_end_d2_C28 ;
  assign accu_channel_end_d2_R28 = fangyuan1_R [163:163] ;
  assign accu_channel_end_d2_X28 = fangyuan1_X [163:163] ;
  assign accu_channel_end_d2_C28 = fangyuan1_C [163:163] ;
  logic [0:0] accu_channel_end_d2_R29 ;
  logic [0:0] accu_channel_end_d2_X29 ;
  logic [0:0] accu_channel_end_d2_C29 ;
  assign accu_channel_end_d2_R29 = fangyuan1_R [162:162] ;
  assign accu_channel_end_d2_X29 = fangyuan1_X [162:162] ;
  assign accu_channel_end_d2_C29 = fangyuan1_C [162:162] ;
  logic [0:0] accu_channel_end_d2_R30 ;
  logic [0:0] accu_channel_end_d2_X30 ;
  logic [0:0] accu_channel_end_d2_C30 ;
  assign accu_channel_end_d2_R30 = fangyuan1_R [161:161] ;
  assign accu_channel_end_d2_X30 = fangyuan1_X [161:161] ;
  assign accu_channel_end_d2_C30 = fangyuan1_C [161:161] ;
  logic [0:0] accu_channel_end_d2_R31 ;
  logic [0:0] accu_channel_end_d2_X31 ;
  logic [0:0] accu_channel_end_d2_C31 ;
  assign accu_channel_end_d2_R31 = fangyuan1_R [160:160] ;
  assign accu_channel_end_d2_X31 = fangyuan1_X [160:160] ;
  assign accu_channel_end_d2_C31 = fangyuan1_C [160:160] ;
  logic [0:0] accu_channel_end_d2_R32 ;
  logic [0:0] accu_channel_end_d2_X32 ;
  logic [0:0] accu_channel_end_d2_C32 ;
  assign accu_channel_end_d2_R32 = fangyuan1_R [159:159] ;
  assign accu_channel_end_d2_X32 = fangyuan1_X [159:159] ;
  assign accu_channel_end_d2_C32 = fangyuan1_C [159:159] ;
  logic [0:0] accu_channel_end_d2_R33 ;
  logic [0:0] accu_channel_end_d2_X33 ;
  logic [0:0] accu_channel_end_d2_C33 ;
  assign accu_channel_end_d2_R33 = fangyuan1_R [158:158] ;
  assign accu_channel_end_d2_X33 = fangyuan1_X [158:158] ;
  assign accu_channel_end_d2_C33 = fangyuan1_C [158:158] ;
  logic [0:0] accu_channel_end_d2_R34 ;
  logic [0:0] accu_channel_end_d2_X34 ;
  logic [0:0] accu_channel_end_d2_C34 ;
  assign accu_channel_end_d2_R34 = fangyuan1_R [157:157] ;
  assign accu_channel_end_d2_X34 = fangyuan1_X [157:157] ;
  assign accu_channel_end_d2_C34 = fangyuan1_C [157:157] ;
  logic [0:0] accu_channel_end_d2_R35 ;
  logic [0:0] accu_channel_end_d2_X35 ;
  logic [0:0] accu_channel_end_d2_C35 ;
  assign accu_channel_end_d2_R35 = fangyuan1_R [156:156] ;
  assign accu_channel_end_d2_X35 = fangyuan1_X [156:156] ;
  assign accu_channel_end_d2_C35 = fangyuan1_C [156:156] ;
  logic [0:0] accu_channel_end_d2_R36 ;
  logic [0:0] accu_channel_end_d2_X36 ;
  logic [0:0] accu_channel_end_d2_C36 ;
  assign accu_channel_end_d2_R36 = fangyuan1_R [155:155] ;
  assign accu_channel_end_d2_X36 = fangyuan1_X [155:155] ;
  assign accu_channel_end_d2_C36 = fangyuan1_C [155:155] ;
  logic [0:0] accu_channel_end_d2_R37 ;
  logic [0:0] accu_channel_end_d2_X37 ;
  logic [0:0] accu_channel_end_d2_C37 ;
  assign accu_channel_end_d2_R37 = fangyuan1_R [154:154] ;
  assign accu_channel_end_d2_X37 = fangyuan1_X [154:154] ;
  assign accu_channel_end_d2_C37 = fangyuan1_C [154:154] ;
  logic [0:0] accu_channel_end_d2_R38 ;
  logic [0:0] accu_channel_end_d2_X38 ;
  logic [0:0] accu_channel_end_d2_C38 ;
  assign accu_channel_end_d2_R38 = fangyuan1_R [153:153] ;
  assign accu_channel_end_d2_X38 = fangyuan1_X [153:153] ;
  assign accu_channel_end_d2_C38 = fangyuan1_C [153:153] ;
  logic [0:0] accu_channel_end_d2_R39 ;
  logic [0:0] accu_channel_end_d2_X39 ;
  logic [0:0] accu_channel_end_d2_C39 ;
  assign accu_channel_end_d2_R39 = fangyuan1_R [152:152] ;
  assign accu_channel_end_d2_X39 = fangyuan1_X [152:152] ;
  assign accu_channel_end_d2_C39 = fangyuan1_C [152:152] ;
  logic [0:0] accu_channel_end_d2_R40 ;
  logic [0:0] accu_channel_end_d2_X40 ;
  logic [0:0] accu_channel_end_d2_C40 ;
  assign accu_channel_end_d2_R40 = fangyuan1_R [151:151] ;
  assign accu_channel_end_d2_X40 = fangyuan1_X [151:151] ;
  assign accu_channel_end_d2_C40 = fangyuan1_C [151:151] ;
  logic [0:0] accu_channel_end_d2_R41 ;
  logic [0:0] accu_channel_end_d2_X41 ;
  logic [0:0] accu_channel_end_d2_C41 ;
  assign accu_channel_end_d2_R41 = fangyuan1_R [150:150] ;
  assign accu_channel_end_d2_X41 = fangyuan1_X [150:150] ;
  assign accu_channel_end_d2_C41 = fangyuan1_C [150:150] ;
  logic [0:0] accu_channel_end_d2_R42 ;
  logic [0:0] accu_channel_end_d2_X42 ;
  logic [0:0] accu_channel_end_d2_C42 ;
  assign accu_channel_end_d2_R42 = fangyuan1_R [149:149] ;
  assign accu_channel_end_d2_X42 = fangyuan1_X [149:149] ;
  assign accu_channel_end_d2_C42 = fangyuan1_C [149:149] ;
  logic [0:0] accu_channel_end_d2_R43 ;
  logic [0:0] accu_channel_end_d2_X43 ;
  logic [0:0] accu_channel_end_d2_C43 ;
  assign accu_channel_end_d2_R43 = fangyuan1_R [148:148] ;
  assign accu_channel_end_d2_X43 = fangyuan1_X [148:148] ;
  assign accu_channel_end_d2_C43 = fangyuan1_C [148:148] ;
  logic [0:0] accu_channel_end_d2_R44 ;
  logic [0:0] accu_channel_end_d2_X44 ;
  logic [0:0] accu_channel_end_d2_C44 ;
  assign accu_channel_end_d2_R44 = fangyuan1_R [147:147] ;
  assign accu_channel_end_d2_X44 = fangyuan1_X [147:147] ;
  assign accu_channel_end_d2_C44 = fangyuan1_C [147:147] ;
  logic [0:0] accu_channel_end_d2_R45 ;
  logic [0:0] accu_channel_end_d2_X45 ;
  logic [0:0] accu_channel_end_d2_C45 ;
  assign accu_channel_end_d2_R45 = fangyuan1_R [146:146] ;
  assign accu_channel_end_d2_X45 = fangyuan1_X [146:146] ;
  assign accu_channel_end_d2_C45 = fangyuan1_C [146:146] ;
  logic [0:0] accu_channel_end_d2_R46 ;
  logic [0:0] accu_channel_end_d2_X46 ;
  logic [0:0] accu_channel_end_d2_C46 ;
  assign accu_channel_end_d2_R46 = fangyuan1_R [145:145] ;
  assign accu_channel_end_d2_X46 = fangyuan1_X [145:145] ;
  assign accu_channel_end_d2_C46 = fangyuan1_C [145:145] ;
  logic [0:0] accu_channel_end_d2_R47 ;
  logic [0:0] accu_channel_end_d2_X47 ;
  logic [0:0] accu_channel_end_d2_C47 ;
  assign accu_channel_end_d2_R47 = fangyuan1_R [144:144] ;
  assign accu_channel_end_d2_X47 = fangyuan1_X [144:144] ;
  assign accu_channel_end_d2_C47 = fangyuan1_C [144:144] ;
  logic [0:0] accu_channel_end_d2_R48 ;
  logic [0:0] accu_channel_end_d2_X48 ;
  logic [0:0] accu_channel_end_d2_C48 ;
  assign accu_channel_end_d2_R48 = fangyuan1_R [143:143] ;
  assign accu_channel_end_d2_X48 = fangyuan1_X [143:143] ;
  assign accu_channel_end_d2_C48 = fangyuan1_C [143:143] ;
  logic [0:0] accu_channel_end_d2_R49 ;
  logic [0:0] accu_channel_end_d2_X49 ;
  logic [0:0] accu_channel_end_d2_C49 ;
  assign accu_channel_end_d2_R49 = fangyuan1_R [142:142] ;
  assign accu_channel_end_d2_X49 = fangyuan1_X [142:142] ;
  assign accu_channel_end_d2_C49 = fangyuan1_C [142:142] ;
  logic [0:0] accu_channel_end_d2_R50 ;
  logic [0:0] accu_channel_end_d2_X50 ;
  logic [0:0] accu_channel_end_d2_C50 ;
  assign accu_channel_end_d2_R50 = fangyuan1_R [141:141] ;
  assign accu_channel_end_d2_X50 = fangyuan1_X [141:141] ;
  assign accu_channel_end_d2_C50 = fangyuan1_C [141:141] ;
  logic [0:0] accu_channel_end_d2_R51 ;
  logic [0:0] accu_channel_end_d2_X51 ;
  logic [0:0] accu_channel_end_d2_C51 ;
  assign accu_channel_end_d2_R51 = fangyuan1_R [140:140] ;
  assign accu_channel_end_d2_X51 = fangyuan1_X [140:140] ;
  assign accu_channel_end_d2_C51 = fangyuan1_C [140:140] ;
  logic [0:0] accu_channel_end_d2_R52 ;
  logic [0:0] accu_channel_end_d2_X52 ;
  logic [0:0] accu_channel_end_d2_C52 ;
  assign accu_channel_end_d2_R52 = fangyuan1_R [139:139] ;
  assign accu_channel_end_d2_X52 = fangyuan1_X [139:139] ;
  assign accu_channel_end_d2_C52 = fangyuan1_C [139:139] ;
  logic [0:0] accu_channel_end_d2_R53 ;
  logic [0:0] accu_channel_end_d2_X53 ;
  logic [0:0] accu_channel_end_d2_C53 ;
  assign accu_channel_end_d2_R53 = fangyuan1_R [138:138] ;
  assign accu_channel_end_d2_X53 = fangyuan1_X [138:138] ;
  assign accu_channel_end_d2_C53 = fangyuan1_C [138:138] ;
  logic [0:0] accu_channel_end_d2_R54 ;
  logic [0:0] accu_channel_end_d2_X54 ;
  logic [0:0] accu_channel_end_d2_C54 ;
  assign accu_channel_end_d2_R54 = fangyuan1_R [137:137] ;
  assign accu_channel_end_d2_X54 = fangyuan1_X [137:137] ;
  assign accu_channel_end_d2_C54 = fangyuan1_C [137:137] ;
  logic [0:0] accu_channel_end_d2_R55 ;
  logic [0:0] accu_channel_end_d2_X55 ;
  logic [0:0] accu_channel_end_d2_C55 ;
  assign accu_channel_end_d2_R55 = fangyuan1_R [136:136] ;
  assign accu_channel_end_d2_X55 = fangyuan1_X [136:136] ;
  assign accu_channel_end_d2_C55 = fangyuan1_C [136:136] ;
  logic [0:0] accu_channel_end_d2_R56 ;
  logic [0:0] accu_channel_end_d2_X56 ;
  logic [0:0] accu_channel_end_d2_C56 ;
  assign accu_channel_end_d2_R56 = fangyuan1_R [135:135] ;
  assign accu_channel_end_d2_X56 = fangyuan1_X [135:135] ;
  assign accu_channel_end_d2_C56 = fangyuan1_C [135:135] ;
  logic [0:0] accu_channel_end_d2_R57 ;
  logic [0:0] accu_channel_end_d2_X57 ;
  logic [0:0] accu_channel_end_d2_C57 ;
  assign accu_channel_end_d2_R57 = fangyuan1_R [134:134] ;
  assign accu_channel_end_d2_X57 = fangyuan1_X [134:134] ;
  assign accu_channel_end_d2_C57 = fangyuan1_C [134:134] ;
  logic [0:0] accu_channel_end_d2_R58 ;
  logic [0:0] accu_channel_end_d2_X58 ;
  logic [0:0] accu_channel_end_d2_C58 ;
  assign accu_channel_end_d2_R58 = fangyuan1_R [133:133] ;
  assign accu_channel_end_d2_X58 = fangyuan1_X [133:133] ;
  assign accu_channel_end_d2_C58 = fangyuan1_C [133:133] ;
  logic [0:0] accu_channel_end_d2_R59 ;
  logic [0:0] accu_channel_end_d2_X59 ;
  logic [0:0] accu_channel_end_d2_C59 ;
  assign accu_channel_end_d2_R59 = fangyuan1_R [132:132] ;
  assign accu_channel_end_d2_X59 = fangyuan1_X [132:132] ;
  assign accu_channel_end_d2_C59 = fangyuan1_C [132:132] ;
  logic [0:0] accu_channel_end_d2_R60 ;
  logic [0:0] accu_channel_end_d2_X60 ;
  logic [0:0] accu_channel_end_d2_C60 ;
  assign accu_channel_end_d2_R60 = fangyuan1_R [131:131] ;
  assign accu_channel_end_d2_X60 = fangyuan1_X [131:131] ;
  assign accu_channel_end_d2_C60 = fangyuan1_C [131:131] ;
  logic [0:0] accu_channel_end_d2_R61 ;
  logic [0:0] accu_channel_end_d2_X61 ;
  logic [0:0] accu_channel_end_d2_C61 ;
  assign accu_channel_end_d2_R61 = fangyuan1_R [130:130] ;
  assign accu_channel_end_d2_X61 = fangyuan1_X [130:130] ;
  assign accu_channel_end_d2_C61 = fangyuan1_C [130:130] ;
  logic [0:0] accu_channel_end_d2_R62 ;
  logic [0:0] accu_channel_end_d2_X62 ;
  logic [0:0] accu_channel_end_d2_C62 ;
  assign accu_channel_end_d2_R62 = fangyuan1_R [129:129] ;
  assign accu_channel_end_d2_X62 = fangyuan1_X [129:129] ;
  assign accu_channel_end_d2_C62 = fangyuan1_C [129:129] ;
  logic [0:0] accu_channel_end_d2_R63 ;
  logic [0:0] accu_channel_end_d2_X63 ;
  logic [0:0] accu_channel_end_d2_C63 ;
  assign accu_channel_end_d2_R63 = fangyuan1_R [128:128] ;
  assign accu_channel_end_d2_X63 = fangyuan1_X [128:128] ;
  assign accu_channel_end_d2_C63 = fangyuan1_C [128:128] ;
  logic [0:0] accu_channel_end_d2_R64 ;
  logic [0:0] accu_channel_end_d2_X64 ;
  logic [0:0] accu_channel_end_d2_C64 ;
  assign accu_channel_end_d2_R64 = fangyuan1_R [127:127] ;
  assign accu_channel_end_d2_X64 = fangyuan1_X [127:127] ;
  assign accu_channel_end_d2_C64 = fangyuan1_C [127:127] ;
  logic [0:0] accu_channel_end_d2_R65 ;
  logic [0:0] accu_channel_end_d2_X65 ;
  logic [0:0] accu_channel_end_d2_C65 ;
  assign accu_channel_end_d2_R65 = fangyuan1_R [126:126] ;
  assign accu_channel_end_d2_X65 = fangyuan1_X [126:126] ;
  assign accu_channel_end_d2_C65 = fangyuan1_C [126:126] ;
  logic [0:0] accu_channel_end_d2_R66 ;
  logic [0:0] accu_channel_end_d2_X66 ;
  logic [0:0] accu_channel_end_d2_C66 ;
  assign accu_channel_end_d2_R66 = fangyuan1_R [125:125] ;
  assign accu_channel_end_d2_X66 = fangyuan1_X [125:125] ;
  assign accu_channel_end_d2_C66 = fangyuan1_C [125:125] ;
  logic [0:0] accu_channel_end_d2_R67 ;
  logic [0:0] accu_channel_end_d2_X67 ;
  logic [0:0] accu_channel_end_d2_C67 ;
  assign accu_channel_end_d2_R67 = fangyuan1_R [124:124] ;
  assign accu_channel_end_d2_X67 = fangyuan1_X [124:124] ;
  assign accu_channel_end_d2_C67 = fangyuan1_C [124:124] ;
  logic [0:0] accu_channel_end_d2_R68 ;
  logic [0:0] accu_channel_end_d2_X68 ;
  logic [0:0] accu_channel_end_d2_C68 ;
  assign accu_channel_end_d2_R68 = fangyuan1_R [123:123] ;
  assign accu_channel_end_d2_X68 = fangyuan1_X [123:123] ;
  assign accu_channel_end_d2_C68 = fangyuan1_C [123:123] ;
  logic [0:0] accu_channel_end_d2_R69 ;
  logic [0:0] accu_channel_end_d2_X69 ;
  logic [0:0] accu_channel_end_d2_C69 ;
  assign accu_channel_end_d2_R69 = fangyuan1_R [122:122] ;
  assign accu_channel_end_d2_X69 = fangyuan1_X [122:122] ;
  assign accu_channel_end_d2_C69 = fangyuan1_C [122:122] ;
  logic [0:0] accu_channel_end_d2_R70 ;
  logic [0:0] accu_channel_end_d2_X70 ;
  logic [0:0] accu_channel_end_d2_C70 ;
  assign accu_channel_end_d2_R70 = fangyuan1_R [121:121] ;
  assign accu_channel_end_d2_X70 = fangyuan1_X [121:121] ;
  assign accu_channel_end_d2_C70 = fangyuan1_C [121:121] ;
  logic [0:0] accu_channel_end_d2_R71 ;
  logic [0:0] accu_channel_end_d2_X71 ;
  logic [0:0] accu_channel_end_d2_C71 ;
  assign accu_channel_end_d2_R71 = fangyuan1_R [120:120] ;
  assign accu_channel_end_d2_X71 = fangyuan1_X [120:120] ;
  assign accu_channel_end_d2_C71 = fangyuan1_C [120:120] ;
  logic [0:0] accu_channel_end_d2_R72 ;
  logic [0:0] accu_channel_end_d2_X72 ;
  logic [0:0] accu_channel_end_d2_C72 ;
  assign accu_channel_end_d2_R72 = fangyuan1_R [119:119] ;
  assign accu_channel_end_d2_X72 = fangyuan1_X [119:119] ;
  assign accu_channel_end_d2_C72 = fangyuan1_C [119:119] ;
  logic [0:0] accu_channel_end_d2_R73 ;
  logic [0:0] accu_channel_end_d2_X73 ;
  logic [0:0] accu_channel_end_d2_C73 ;
  assign accu_channel_end_d2_R73 = fangyuan1_R [118:118] ;
  assign accu_channel_end_d2_X73 = fangyuan1_X [118:118] ;
  assign accu_channel_end_d2_C73 = fangyuan1_C [118:118] ;
  logic [0:0] accu_channel_end_d2_R74 ;
  logic [0:0] accu_channel_end_d2_X74 ;
  logic [0:0] accu_channel_end_d2_C74 ;
  assign accu_channel_end_d2_R74 = fangyuan1_R [117:117] ;
  assign accu_channel_end_d2_X74 = fangyuan1_X [117:117] ;
  assign accu_channel_end_d2_C74 = fangyuan1_C [117:117] ;
  logic [0:0] accu_channel_end_d2_R75 ;
  logic [0:0] accu_channel_end_d2_X75 ;
  logic [0:0] accu_channel_end_d2_C75 ;
  assign accu_channel_end_d2_R75 = fangyuan1_R [116:116] ;
  assign accu_channel_end_d2_X75 = fangyuan1_X [116:116] ;
  assign accu_channel_end_d2_C75 = fangyuan1_C [116:116] ;
  logic [0:0] accu_channel_end_d2_R76 ;
  logic [0:0] accu_channel_end_d2_X76 ;
  logic [0:0] accu_channel_end_d2_C76 ;
  assign accu_channel_end_d2_R76 = fangyuan1_R [115:115] ;
  assign accu_channel_end_d2_X76 = fangyuan1_X [115:115] ;
  assign accu_channel_end_d2_C76 = fangyuan1_C [115:115] ;
  logic [0:0] accu_channel_end_d2_R77 ;
  logic [0:0] accu_channel_end_d2_X77 ;
  logic [0:0] accu_channel_end_d2_C77 ;
  assign accu_channel_end_d2_R77 = fangyuan1_R [114:114] ;
  assign accu_channel_end_d2_X77 = fangyuan1_X [114:114] ;
  assign accu_channel_end_d2_C77 = fangyuan1_C [114:114] ;
  logic [0:0] accu_channel_end_d2_R78 ;
  logic [0:0] accu_channel_end_d2_X78 ;
  logic [0:0] accu_channel_end_d2_C78 ;
  assign accu_channel_end_d2_R78 = fangyuan1_R [113:113] ;
  assign accu_channel_end_d2_X78 = fangyuan1_X [113:113] ;
  assign accu_channel_end_d2_C78 = fangyuan1_C [113:113] ;
  logic [0:0] accu_channel_end_d2_R79 ;
  logic [0:0] accu_channel_end_d2_X79 ;
  logic [0:0] accu_channel_end_d2_C79 ;
  assign accu_channel_end_d2_R79 = fangyuan1_R [112:112] ;
  assign accu_channel_end_d2_X79 = fangyuan1_X [112:112] ;
  assign accu_channel_end_d2_C79 = fangyuan1_C [112:112] ;
  logic [0:0] accu_channel_end_d2_R80 ;
  logic [0:0] accu_channel_end_d2_X80 ;
  logic [0:0] accu_channel_end_d2_C80 ;
  assign accu_channel_end_d2_R80 = fangyuan1_R [111:111] ;
  assign accu_channel_end_d2_X80 = fangyuan1_X [111:111] ;
  assign accu_channel_end_d2_C80 = fangyuan1_C [111:111] ;
  logic [0:0] accu_channel_end_d2_R81 ;
  logic [0:0] accu_channel_end_d2_X81 ;
  logic [0:0] accu_channel_end_d2_C81 ;
  assign accu_channel_end_d2_R81 = fangyuan1_R [110:110] ;
  assign accu_channel_end_d2_X81 = fangyuan1_X [110:110] ;
  assign accu_channel_end_d2_C81 = fangyuan1_C [110:110] ;
  logic [0:0] accu_channel_end_d2_R82 ;
  logic [0:0] accu_channel_end_d2_X82 ;
  logic [0:0] accu_channel_end_d2_C82 ;
  assign accu_channel_end_d2_R82 = fangyuan1_R [109:109] ;
  assign accu_channel_end_d2_X82 = fangyuan1_X [109:109] ;
  assign accu_channel_end_d2_C82 = fangyuan1_C [109:109] ;
  logic [0:0] accu_channel_end_d2_R83 ;
  logic [0:0] accu_channel_end_d2_X83 ;
  logic [0:0] accu_channel_end_d2_C83 ;
  assign accu_channel_end_d2_R83 = fangyuan1_R [108:108] ;
  assign accu_channel_end_d2_X83 = fangyuan1_X [108:108] ;
  assign accu_channel_end_d2_C83 = fangyuan1_C [108:108] ;
  logic [0:0] accu_channel_end_d2_R84 ;
  logic [0:0] accu_channel_end_d2_X84 ;
  logic [0:0] accu_channel_end_d2_C84 ;
  assign accu_channel_end_d2_R84 = fangyuan1_R [107:107] ;
  assign accu_channel_end_d2_X84 = fangyuan1_X [107:107] ;
  assign accu_channel_end_d2_C84 = fangyuan1_C [107:107] ;
  logic [0:0] accu_channel_end_d2_R85 ;
  logic [0:0] accu_channel_end_d2_X85 ;
  logic [0:0] accu_channel_end_d2_C85 ;
  assign accu_channel_end_d2_R85 = fangyuan1_R [106:106] ;
  assign accu_channel_end_d2_X85 = fangyuan1_X [106:106] ;
  assign accu_channel_end_d2_C85 = fangyuan1_C [106:106] ;
  logic [0:0] accu_channel_end_d2_R86 ;
  logic [0:0] accu_channel_end_d2_X86 ;
  logic [0:0] accu_channel_end_d2_C86 ;
  assign accu_channel_end_d2_R86 = fangyuan1_R [105:105] ;
  assign accu_channel_end_d2_X86 = fangyuan1_X [105:105] ;
  assign accu_channel_end_d2_C86 = fangyuan1_C [105:105] ;
  logic [0:0] accu_channel_end_d2_R87 ;
  logic [0:0] accu_channel_end_d2_X87 ;
  logic [0:0] accu_channel_end_d2_C87 ;
  assign accu_channel_end_d2_R87 = fangyuan1_R [104:104] ;
  assign accu_channel_end_d2_X87 = fangyuan1_X [104:104] ;
  assign accu_channel_end_d2_C87 = fangyuan1_C [104:104] ;
  logic [0:0] accu_channel_end_d2_R88 ;
  logic [0:0] accu_channel_end_d2_X88 ;
  logic [0:0] accu_channel_end_d2_C88 ;
  assign accu_channel_end_d2_R88 = fangyuan1_R [103:103] ;
  assign accu_channel_end_d2_X88 = fangyuan1_X [103:103] ;
  assign accu_channel_end_d2_C88 = fangyuan1_C [103:103] ;
  logic [0:0] accu_channel_end_d2_R89 ;
  logic [0:0] accu_channel_end_d2_X89 ;
  logic [0:0] accu_channel_end_d2_C89 ;
  assign accu_channel_end_d2_R89 = fangyuan1_R [102:102] ;
  assign accu_channel_end_d2_X89 = fangyuan1_X [102:102] ;
  assign accu_channel_end_d2_C89 = fangyuan1_C [102:102] ;
  logic [0:0] accu_channel_end_d2_R90 ;
  logic [0:0] accu_channel_end_d2_X90 ;
  logic [0:0] accu_channel_end_d2_C90 ;
  assign accu_channel_end_d2_R90 = fangyuan1_R [101:101] ;
  assign accu_channel_end_d2_X90 = fangyuan1_X [101:101] ;
  assign accu_channel_end_d2_C90 = fangyuan1_C [101:101] ;
  logic [0:0] accu_channel_end_d2_R91 ;
  logic [0:0] accu_channel_end_d2_X91 ;
  logic [0:0] accu_channel_end_d2_C91 ;
  assign accu_channel_end_d2_R91 = fangyuan1_R [100:100] ;
  assign accu_channel_end_d2_X91 = fangyuan1_X [100:100] ;
  assign accu_channel_end_d2_C91 = fangyuan1_C [100:100] ;
  logic [0:0] accu_channel_end_d2_R92 ;
  logic [0:0] accu_channel_end_d2_X92 ;
  logic [0:0] accu_channel_end_d2_C92 ;
  assign accu_channel_end_d2_R92 = fangyuan1_R [99:99] ;
  assign accu_channel_end_d2_X92 = fangyuan1_X [99:99] ;
  assign accu_channel_end_d2_C92 = fangyuan1_C [99:99] ;
  logic [0:0] accu_channel_end_d2_R93 ;
  logic [0:0] accu_channel_end_d2_X93 ;
  logic [0:0] accu_channel_end_d2_C93 ;
  assign accu_channel_end_d2_R93 = fangyuan1_R [98:98] ;
  assign accu_channel_end_d2_X93 = fangyuan1_X [98:98] ;
  assign accu_channel_end_d2_C93 = fangyuan1_C [98:98] ;
  logic [0:0] accu_channel_end_d2_R94 ;
  logic [0:0] accu_channel_end_d2_X94 ;
  logic [0:0] accu_channel_end_d2_C94 ;
  assign accu_channel_end_d2_R94 = fangyuan1_R [97:97] ;
  assign accu_channel_end_d2_X94 = fangyuan1_X [97:97] ;
  assign accu_channel_end_d2_C94 = fangyuan1_C [97:97] ;
  logic [0:0] accu_channel_end_d2_R95 ;
  logic [0:0] accu_channel_end_d2_X95 ;
  logic [0:0] accu_channel_end_d2_C95 ;
  assign accu_channel_end_d2_R95 = fangyuan1_R [96:96] ;
  assign accu_channel_end_d2_X95 = fangyuan1_X [96:96] ;
  assign accu_channel_end_d2_C95 = fangyuan1_C [96:96] ;
  logic [0:0] accu_channel_end_d2_R96 ;
  logic [0:0] accu_channel_end_d2_X96 ;
  logic [0:0] accu_channel_end_d2_C96 ;
  assign accu_channel_end_d2_R96 = fangyuan1_R [95:95] ;
  assign accu_channel_end_d2_X96 = fangyuan1_X [95:95] ;
  assign accu_channel_end_d2_C96 = fangyuan1_C [95:95] ;
  logic [0:0] accu_channel_end_d2_R97 ;
  logic [0:0] accu_channel_end_d2_X97 ;
  logic [0:0] accu_channel_end_d2_C97 ;
  assign accu_channel_end_d2_R97 = fangyuan1_R [94:94] ;
  assign accu_channel_end_d2_X97 = fangyuan1_X [94:94] ;
  assign accu_channel_end_d2_C97 = fangyuan1_C [94:94] ;
  logic [0:0] accu_channel_end_d2_R98 ;
  logic [0:0] accu_channel_end_d2_X98 ;
  logic [0:0] accu_channel_end_d2_C98 ;
  assign accu_channel_end_d2_R98 = fangyuan1_R [93:93] ;
  assign accu_channel_end_d2_X98 = fangyuan1_X [93:93] ;
  assign accu_channel_end_d2_C98 = fangyuan1_C [93:93] ;
  logic [0:0] accu_channel_end_d2_R99 ;
  logic [0:0] accu_channel_end_d2_X99 ;
  logic [0:0] accu_channel_end_d2_C99 ;
  assign accu_channel_end_d2_R99 = fangyuan1_R [92:92] ;
  assign accu_channel_end_d2_X99 = fangyuan1_X [92:92] ;
  assign accu_channel_end_d2_C99 = fangyuan1_C [92:92] ;
  logic [0:0] accu_channel_end_d2_R100 ;
  logic [0:0] accu_channel_end_d2_X100 ;
  logic [0:0] accu_channel_end_d2_C100 ;
  assign accu_channel_end_d2_R100 = fangyuan1_R [91:91] ;
  assign accu_channel_end_d2_X100 = fangyuan1_X [91:91] ;
  assign accu_channel_end_d2_C100 = fangyuan1_C [91:91] ;
  logic [0:0] accu_channel_end_d2_R101 ;
  logic [0:0] accu_channel_end_d2_X101 ;
  logic [0:0] accu_channel_end_d2_C101 ;
  assign accu_channel_end_d2_R101 = fangyuan1_R [90:90] ;
  assign accu_channel_end_d2_X101 = fangyuan1_X [90:90] ;
  assign accu_channel_end_d2_C101 = fangyuan1_C [90:90] ;
  logic [0:0] accu_channel_end_d2_R102 ;
  logic [0:0] accu_channel_end_d2_X102 ;
  logic [0:0] accu_channel_end_d2_C102 ;
  assign accu_channel_end_d2_R102 = fangyuan1_R [89:89] ;
  assign accu_channel_end_d2_X102 = fangyuan1_X [89:89] ;
  assign accu_channel_end_d2_C102 = fangyuan1_C [89:89] ;
  logic [0:0] accu_channel_end_d2_R103 ;
  logic [0:0] accu_channel_end_d2_X103 ;
  logic [0:0] accu_channel_end_d2_C103 ;
  assign accu_channel_end_d2_R103 = fangyuan1_R [88:88] ;
  assign accu_channel_end_d2_X103 = fangyuan1_X [88:88] ;
  assign accu_channel_end_d2_C103 = fangyuan1_C [88:88] ;
  logic [0:0] accu_channel_end_d2_R104 ;
  logic [0:0] accu_channel_end_d2_X104 ;
  logic [0:0] accu_channel_end_d2_C104 ;
  assign accu_channel_end_d2_R104 = fangyuan1_R [87:87] ;
  assign accu_channel_end_d2_X104 = fangyuan1_X [87:87] ;
  assign accu_channel_end_d2_C104 = fangyuan1_C [87:87] ;
  logic [0:0] accu_channel_end_d2_R105 ;
  logic [0:0] accu_channel_end_d2_X105 ;
  logic [0:0] accu_channel_end_d2_C105 ;
  assign accu_channel_end_d2_R105 = fangyuan1_R [86:86] ;
  assign accu_channel_end_d2_X105 = fangyuan1_X [86:86] ;
  assign accu_channel_end_d2_C105 = fangyuan1_C [86:86] ;
  logic [0:0] accu_channel_end_d2_R106 ;
  logic [0:0] accu_channel_end_d2_X106 ;
  logic [0:0] accu_channel_end_d2_C106 ;
  assign accu_channel_end_d2_R106 = fangyuan1_R [85:85] ;
  assign accu_channel_end_d2_X106 = fangyuan1_X [85:85] ;
  assign accu_channel_end_d2_C106 = fangyuan1_C [85:85] ;
  logic [0:0] accu_channel_end_d2_R107 ;
  logic [0:0] accu_channel_end_d2_X107 ;
  logic [0:0] accu_channel_end_d2_C107 ;
  assign accu_channel_end_d2_R107 = fangyuan1_R [84:84] ;
  assign accu_channel_end_d2_X107 = fangyuan1_X [84:84] ;
  assign accu_channel_end_d2_C107 = fangyuan1_C [84:84] ;
  logic [0:0] accu_channel_end_d2_R108 ;
  logic [0:0] accu_channel_end_d2_X108 ;
  logic [0:0] accu_channel_end_d2_C108 ;
  assign accu_channel_end_d2_R108 = fangyuan1_R [83:83] ;
  assign accu_channel_end_d2_X108 = fangyuan1_X [83:83] ;
  assign accu_channel_end_d2_C108 = fangyuan1_C [83:83] ;
  logic [0:0] accu_channel_end_d2_R109 ;
  logic [0:0] accu_channel_end_d2_X109 ;
  logic [0:0] accu_channel_end_d2_C109 ;
  assign accu_channel_end_d2_R109 = fangyuan1_R [82:82] ;
  assign accu_channel_end_d2_X109 = fangyuan1_X [82:82] ;
  assign accu_channel_end_d2_C109 = fangyuan1_C [82:82] ;
  logic [0:0] accu_channel_end_d2_R110 ;
  logic [0:0] accu_channel_end_d2_X110 ;
  logic [0:0] accu_channel_end_d2_C110 ;
  assign accu_channel_end_d2_R110 = fangyuan1_R [81:81] ;
  assign accu_channel_end_d2_X110 = fangyuan1_X [81:81] ;
  assign accu_channel_end_d2_C110 = fangyuan1_C [81:81] ;
  logic [0:0] accu_channel_end_d2_R111 ;
  logic [0:0] accu_channel_end_d2_X111 ;
  logic [0:0] accu_channel_end_d2_C111 ;
  assign accu_channel_end_d2_R111 = fangyuan1_R [80:80] ;
  assign accu_channel_end_d2_X111 = fangyuan1_X [80:80] ;
  assign accu_channel_end_d2_C111 = fangyuan1_C [80:80] ;
  logic [0:0] accu_channel_end_d2_R112 ;
  logic [0:0] accu_channel_end_d2_X112 ;
  logic [0:0] accu_channel_end_d2_C112 ;
  assign accu_channel_end_d2_R112 = fangyuan1_R [79:79] ;
  assign accu_channel_end_d2_X112 = fangyuan1_X [79:79] ;
  assign accu_channel_end_d2_C112 = fangyuan1_C [79:79] ;
  logic [0:0] accu_channel_end_d2_R113 ;
  logic [0:0] accu_channel_end_d2_X113 ;
  logic [0:0] accu_channel_end_d2_C113 ;
  assign accu_channel_end_d2_R113 = fangyuan1_R [78:78] ;
  assign accu_channel_end_d2_X113 = fangyuan1_X [78:78] ;
  assign accu_channel_end_d2_C113 = fangyuan1_C [78:78] ;
  logic [0:0] accu_channel_end_d2_R114 ;
  logic [0:0] accu_channel_end_d2_X114 ;
  logic [0:0] accu_channel_end_d2_C114 ;
  assign accu_channel_end_d2_R114 = fangyuan1_R [77:77] ;
  assign accu_channel_end_d2_X114 = fangyuan1_X [77:77] ;
  assign accu_channel_end_d2_C114 = fangyuan1_C [77:77] ;
  logic [0:0] accu_channel_end_d2_R115 ;
  logic [0:0] accu_channel_end_d2_X115 ;
  logic [0:0] accu_channel_end_d2_C115 ;
  assign accu_channel_end_d2_R115 = fangyuan1_R [76:76] ;
  assign accu_channel_end_d2_X115 = fangyuan1_X [76:76] ;
  assign accu_channel_end_d2_C115 = fangyuan1_C [76:76] ;
  logic [0:0] accu_channel_end_d2_R116 ;
  logic [0:0] accu_channel_end_d2_X116 ;
  logic [0:0] accu_channel_end_d2_C116 ;
  assign accu_channel_end_d2_R116 = fangyuan1_R [75:75] ;
  assign accu_channel_end_d2_X116 = fangyuan1_X [75:75] ;
  assign accu_channel_end_d2_C116 = fangyuan1_C [75:75] ;
  logic [0:0] accu_channel_end_d2_R117 ;
  logic [0:0] accu_channel_end_d2_X117 ;
  logic [0:0] accu_channel_end_d2_C117 ;
  assign accu_channel_end_d2_R117 = fangyuan1_R [74:74] ;
  assign accu_channel_end_d2_X117 = fangyuan1_X [74:74] ;
  assign accu_channel_end_d2_C117 = fangyuan1_C [74:74] ;
  logic [0:0] accu_channel_end_d2_R118 ;
  logic [0:0] accu_channel_end_d2_X118 ;
  logic [0:0] accu_channel_end_d2_C118 ;
  assign accu_channel_end_d2_R118 = fangyuan1_R [73:73] ;
  assign accu_channel_end_d2_X118 = fangyuan1_X [73:73] ;
  assign accu_channel_end_d2_C118 = fangyuan1_C [73:73] ;
  logic [0:0] accu_channel_end_d2_R119 ;
  logic [0:0] accu_channel_end_d2_X119 ;
  logic [0:0] accu_channel_end_d2_C119 ;
  assign accu_channel_end_d2_R119 = fangyuan1_R [72:72] ;
  assign accu_channel_end_d2_X119 = fangyuan1_X [72:72] ;
  assign accu_channel_end_d2_C119 = fangyuan1_C [72:72] ;
  logic [0:0] accu_channel_end_d2_R120 ;
  logic [0:0] accu_channel_end_d2_X120 ;
  logic [0:0] accu_channel_end_d2_C120 ;
  assign accu_channel_end_d2_R120 = fangyuan1_R [71:71] ;
  assign accu_channel_end_d2_X120 = fangyuan1_X [71:71] ;
  assign accu_channel_end_d2_C120 = fangyuan1_C [71:71] ;
  logic [0:0] accu_channel_end_d2_R121 ;
  logic [0:0] accu_channel_end_d2_X121 ;
  logic [0:0] accu_channel_end_d2_C121 ;
  assign accu_channel_end_d2_R121 = fangyuan1_R [70:70] ;
  assign accu_channel_end_d2_X121 = fangyuan1_X [70:70] ;
  assign accu_channel_end_d2_C121 = fangyuan1_C [70:70] ;
  logic [0:0] accu_channel_end_d2_R122 ;
  logic [0:0] accu_channel_end_d2_X122 ;
  logic [0:0] accu_channel_end_d2_C122 ;
  assign accu_channel_end_d2_R122 = fangyuan1_R [69:69] ;
  assign accu_channel_end_d2_X122 = fangyuan1_X [69:69] ;
  assign accu_channel_end_d2_C122 = fangyuan1_C [69:69] ;
  logic [0:0] accu_channel_end_d2_R123 ;
  logic [0:0] accu_channel_end_d2_X123 ;
  logic [0:0] accu_channel_end_d2_C123 ;
  assign accu_channel_end_d2_R123 = fangyuan1_R [68:68] ;
  assign accu_channel_end_d2_X123 = fangyuan1_X [68:68] ;
  assign accu_channel_end_d2_C123 = fangyuan1_C [68:68] ;
  logic [0:0] accu_channel_end_d2_R124 ;
  logic [0:0] accu_channel_end_d2_X124 ;
  logic [0:0] accu_channel_end_d2_C124 ;
  assign accu_channel_end_d2_R124 = fangyuan1_R [67:67] ;
  assign accu_channel_end_d2_X124 = fangyuan1_X [67:67] ;
  assign accu_channel_end_d2_C124 = fangyuan1_C [67:67] ;
  logic [0:0] accu_channel_end_d2_R125 ;
  logic [0:0] accu_channel_end_d2_X125 ;
  logic [0:0] accu_channel_end_d2_C125 ;
  assign accu_channel_end_d2_R125 = fangyuan1_R [66:66] ;
  assign accu_channel_end_d2_X125 = fangyuan1_X [66:66] ;
  assign accu_channel_end_d2_C125 = fangyuan1_C [66:66] ;
  logic [0:0] accu_channel_end_d2_R126 ;
  logic [0:0] accu_channel_end_d2_X126 ;
  logic [0:0] accu_channel_end_d2_C126 ;
  assign accu_channel_end_d2_R126 = fangyuan1_R [65:65] ;
  assign accu_channel_end_d2_X126 = fangyuan1_X [65:65] ;
  assign accu_channel_end_d2_C126 = fangyuan1_C [65:65] ;
  logic [0:0] accu_channel_end_d2_R127 ;
  logic [0:0] accu_channel_end_d2_X127 ;
  logic [0:0] accu_channel_end_d2_C127 ;
  assign accu_channel_end_d2_R127 = fangyuan1_R [64:64] ;
  assign accu_channel_end_d2_X127 = fangyuan1_X [64:64] ;
  assign accu_channel_end_d2_C127 = fangyuan1_C [64:64] ;
  logic [0:0] accu_channel_end_d2_R128 ;
  logic [0:0] accu_channel_end_d2_X128 ;
  logic [0:0] accu_channel_end_d2_C128 ;
  assign accu_channel_end_d2_R128 = fangyuan1_R [63:63] ;
  assign accu_channel_end_d2_X128 = fangyuan1_X [63:63] ;
  assign accu_channel_end_d2_C128 = fangyuan1_C [63:63] ;
  logic [0:0] accu_channel_end_d2_R129 ;
  logic [0:0] accu_channel_end_d2_X129 ;
  logic [0:0] accu_channel_end_d2_C129 ;
  assign accu_channel_end_d2_R129 = fangyuan1_R [62:62] ;
  assign accu_channel_end_d2_X129 = fangyuan1_X [62:62] ;
  assign accu_channel_end_d2_C129 = fangyuan1_C [62:62] ;
  logic [0:0] accu_channel_end_d2_R130 ;
  logic [0:0] accu_channel_end_d2_X130 ;
  logic [0:0] accu_channel_end_d2_C130 ;
  assign accu_channel_end_d2_R130 = fangyuan1_R [61:61] ;
  assign accu_channel_end_d2_X130 = fangyuan1_X [61:61] ;
  assign accu_channel_end_d2_C130 = fangyuan1_C [61:61] ;
  logic [0:0] accu_channel_end_d2_R131 ;
  logic [0:0] accu_channel_end_d2_X131 ;
  logic [0:0] accu_channel_end_d2_C131 ;
  assign accu_channel_end_d2_R131 = fangyuan1_R [60:60] ;
  assign accu_channel_end_d2_X131 = fangyuan1_X [60:60] ;
  assign accu_channel_end_d2_C131 = fangyuan1_C [60:60] ;
  logic [0:0] accu_channel_end_d2_R132 ;
  logic [0:0] accu_channel_end_d2_X132 ;
  logic [0:0] accu_channel_end_d2_C132 ;
  assign accu_channel_end_d2_R132 = fangyuan1_R [59:59] ;
  assign accu_channel_end_d2_X132 = fangyuan1_X [59:59] ;
  assign accu_channel_end_d2_C132 = fangyuan1_C [59:59] ;
  logic [0:0] accu_channel_end_d2_R133 ;
  logic [0:0] accu_channel_end_d2_X133 ;
  logic [0:0] accu_channel_end_d2_C133 ;
  assign accu_channel_end_d2_R133 = fangyuan1_R [58:58] ;
  assign accu_channel_end_d2_X133 = fangyuan1_X [58:58] ;
  assign accu_channel_end_d2_C133 = fangyuan1_C [58:58] ;
  logic [0:0] accu_channel_end_d2_R134 ;
  logic [0:0] accu_channel_end_d2_X134 ;
  logic [0:0] accu_channel_end_d2_C134 ;
  assign accu_channel_end_d2_R134 = fangyuan1_R [57:57] ;
  assign accu_channel_end_d2_X134 = fangyuan1_X [57:57] ;
  assign accu_channel_end_d2_C134 = fangyuan1_C [57:57] ;
  logic [0:0] accu_channel_end_d2_R135 ;
  logic [0:0] accu_channel_end_d2_X135 ;
  logic [0:0] accu_channel_end_d2_C135 ;
  assign accu_channel_end_d2_R135 = fangyuan1_R [56:56] ;
  assign accu_channel_end_d2_X135 = fangyuan1_X [56:56] ;
  assign accu_channel_end_d2_C135 = fangyuan1_C [56:56] ;
  logic [0:0] accu_channel_end_d2_R136 ;
  logic [0:0] accu_channel_end_d2_X136 ;
  logic [0:0] accu_channel_end_d2_C136 ;
  assign accu_channel_end_d2_R136 = fangyuan1_R [55:55] ;
  assign accu_channel_end_d2_X136 = fangyuan1_X [55:55] ;
  assign accu_channel_end_d2_C136 = fangyuan1_C [55:55] ;
  logic [0:0] accu_channel_end_d2_R137 ;
  logic [0:0] accu_channel_end_d2_X137 ;
  logic [0:0] accu_channel_end_d2_C137 ;
  assign accu_channel_end_d2_R137 = fangyuan1_R [54:54] ;
  assign accu_channel_end_d2_X137 = fangyuan1_X [54:54] ;
  assign accu_channel_end_d2_C137 = fangyuan1_C [54:54] ;
  logic [0:0] accu_channel_end_d2_R138 ;
  logic [0:0] accu_channel_end_d2_X138 ;
  logic [0:0] accu_channel_end_d2_C138 ;
  assign accu_channel_end_d2_R138 = fangyuan1_R [53:53] ;
  assign accu_channel_end_d2_X138 = fangyuan1_X [53:53] ;
  assign accu_channel_end_d2_C138 = fangyuan1_C [53:53] ;
  logic [0:0] accu_channel_end_d2_R139 ;
  logic [0:0] accu_channel_end_d2_X139 ;
  logic [0:0] accu_channel_end_d2_C139 ;
  assign accu_channel_end_d2_R139 = fangyuan1_R [52:52] ;
  assign accu_channel_end_d2_X139 = fangyuan1_X [52:52] ;
  assign accu_channel_end_d2_C139 = fangyuan1_C [52:52] ;
  logic [0:0] accu_channel_end_d2_R140 ;
  logic [0:0] accu_channel_end_d2_X140 ;
  logic [0:0] accu_channel_end_d2_C140 ;
  assign accu_channel_end_d2_R140 = fangyuan1_R [51:51] ;
  assign accu_channel_end_d2_X140 = fangyuan1_X [51:51] ;
  assign accu_channel_end_d2_C140 = fangyuan1_C [51:51] ;
  logic [0:0] accu_channel_end_d2_R141 ;
  logic [0:0] accu_channel_end_d2_X141 ;
  logic [0:0] accu_channel_end_d2_C141 ;
  assign accu_channel_end_d2_R141 = fangyuan1_R [50:50] ;
  assign accu_channel_end_d2_X141 = fangyuan1_X [50:50] ;
  assign accu_channel_end_d2_C141 = fangyuan1_C [50:50] ;
  logic [0:0] accu_channel_end_d2_R142 ;
  logic [0:0] accu_channel_end_d2_X142 ;
  logic [0:0] accu_channel_end_d2_C142 ;
  assign accu_channel_end_d2_R142 = fangyuan1_R [49:49] ;
  assign accu_channel_end_d2_X142 = fangyuan1_X [49:49] ;
  assign accu_channel_end_d2_C142 = fangyuan1_C [49:49] ;
  logic [0:0] accu_channel_end_d2_R143 ;
  logic [0:0] accu_channel_end_d2_X143 ;
  logic [0:0] accu_channel_end_d2_C143 ;
  assign accu_channel_end_d2_R143 = fangyuan1_R [48:48] ;
  assign accu_channel_end_d2_X143 = fangyuan1_X [48:48] ;
  assign accu_channel_end_d2_C143 = fangyuan1_C [48:48] ;
  logic [0:0] accu_channel_end_d2_R144 ;
  logic [0:0] accu_channel_end_d2_X144 ;
  logic [0:0] accu_channel_end_d2_C144 ;
  assign accu_channel_end_d2_R144 = fangyuan1_R [47:47] ;
  assign accu_channel_end_d2_X144 = fangyuan1_X [47:47] ;
  assign accu_channel_end_d2_C144 = fangyuan1_C [47:47] ;
  logic [0:0] accu_channel_end_d2_R145 ;
  logic [0:0] accu_channel_end_d2_X145 ;
  logic [0:0] accu_channel_end_d2_C145 ;
  assign accu_channel_end_d2_R145 = fangyuan1_R [46:46] ;
  assign accu_channel_end_d2_X145 = fangyuan1_X [46:46] ;
  assign accu_channel_end_d2_C145 = fangyuan1_C [46:46] ;
  logic [0:0] accu_channel_end_d2_R146 ;
  logic [0:0] accu_channel_end_d2_X146 ;
  logic [0:0] accu_channel_end_d2_C146 ;
  assign accu_channel_end_d2_R146 = fangyuan1_R [45:45] ;
  assign accu_channel_end_d2_X146 = fangyuan1_X [45:45] ;
  assign accu_channel_end_d2_C146 = fangyuan1_C [45:45] ;
  logic [0:0] accu_channel_end_d2_R147 ;
  logic [0:0] accu_channel_end_d2_X147 ;
  logic [0:0] accu_channel_end_d2_C147 ;
  assign accu_channel_end_d2_R147 = fangyuan1_R [44:44] ;
  assign accu_channel_end_d2_X147 = fangyuan1_X [44:44] ;
  assign accu_channel_end_d2_C147 = fangyuan1_C [44:44] ;
  logic [0:0] accu_channel_end_d2_R148 ;
  logic [0:0] accu_channel_end_d2_X148 ;
  logic [0:0] accu_channel_end_d2_C148 ;
  assign accu_channel_end_d2_R148 = fangyuan1_R [43:43] ;
  assign accu_channel_end_d2_X148 = fangyuan1_X [43:43] ;
  assign accu_channel_end_d2_C148 = fangyuan1_C [43:43] ;
  logic [0:0] accu_channel_end_d2_R149 ;
  logic [0:0] accu_channel_end_d2_X149 ;
  logic [0:0] accu_channel_end_d2_C149 ;
  assign accu_channel_end_d2_R149 = fangyuan1_R [42:42] ;
  assign accu_channel_end_d2_X149 = fangyuan1_X [42:42] ;
  assign accu_channel_end_d2_C149 = fangyuan1_C [42:42] ;
  logic [0:0] accu_channel_end_d2_R150 ;
  logic [0:0] accu_channel_end_d2_X150 ;
  logic [0:0] accu_channel_end_d2_C150 ;
  assign accu_channel_end_d2_R150 = fangyuan1_R [41:41] ;
  assign accu_channel_end_d2_X150 = fangyuan1_X [41:41] ;
  assign accu_channel_end_d2_C150 = fangyuan1_C [41:41] ;
  logic [0:0] accu_channel_end_d2_R151 ;
  logic [0:0] accu_channel_end_d2_X151 ;
  logic [0:0] accu_channel_end_d2_C151 ;
  assign accu_channel_end_d2_R151 = fangyuan1_R [40:40] ;
  assign accu_channel_end_d2_X151 = fangyuan1_X [40:40] ;
  assign accu_channel_end_d2_C151 = fangyuan1_C [40:40] ;
  logic [0:0] accu_channel_end_d2_R152 ;
  logic [0:0] accu_channel_end_d2_X152 ;
  logic [0:0] accu_channel_end_d2_C152 ;
  assign accu_channel_end_d2_R152 = fangyuan1_R [39:39] ;
  assign accu_channel_end_d2_X152 = fangyuan1_X [39:39] ;
  assign accu_channel_end_d2_C152 = fangyuan1_C [39:39] ;
  logic [0:0] accu_channel_end_d2_R153 ;
  logic [0:0] accu_channel_end_d2_X153 ;
  logic [0:0] accu_channel_end_d2_C153 ;
  assign accu_channel_end_d2_R153 = fangyuan1_R [38:38] ;
  assign accu_channel_end_d2_X153 = fangyuan1_X [38:38] ;
  assign accu_channel_end_d2_C153 = fangyuan1_C [38:38] ;
  logic [0:0] accu_channel_end_d2_R154 ;
  logic [0:0] accu_channel_end_d2_X154 ;
  logic [0:0] accu_channel_end_d2_C154 ;
  assign accu_channel_end_d2_R154 = fangyuan1_R [37:37] ;
  assign accu_channel_end_d2_X154 = fangyuan1_X [37:37] ;
  assign accu_channel_end_d2_C154 = fangyuan1_C [37:37] ;
  logic [0:0] accu_channel_end_d2_R155 ;
  logic [0:0] accu_channel_end_d2_X155 ;
  logic [0:0] accu_channel_end_d2_C155 ;
  assign accu_channel_end_d2_R155 = fangyuan1_R [36:36] ;
  assign accu_channel_end_d2_X155 = fangyuan1_X [36:36] ;
  assign accu_channel_end_d2_C155 = fangyuan1_C [36:36] ;
  logic [0:0] accu_channel_end_d2_R156 ;
  logic [0:0] accu_channel_end_d2_X156 ;
  logic [0:0] accu_channel_end_d2_C156 ;
  assign accu_channel_end_d2_R156 = fangyuan1_R [35:35] ;
  assign accu_channel_end_d2_X156 = fangyuan1_X [35:35] ;
  assign accu_channel_end_d2_C156 = fangyuan1_C [35:35] ;
  logic [0:0] accu_channel_end_d2_R157 ;
  logic [0:0] accu_channel_end_d2_X157 ;
  logic [0:0] accu_channel_end_d2_C157 ;
  assign accu_channel_end_d2_R157 = fangyuan1_R [34:34] ;
  assign accu_channel_end_d2_X157 = fangyuan1_X [34:34] ;
  assign accu_channel_end_d2_C157 = fangyuan1_C [34:34] ;
  logic [0:0] accu_channel_end_d2_R158 ;
  logic [0:0] accu_channel_end_d2_X158 ;
  logic [0:0] accu_channel_end_d2_C158 ;
  assign accu_channel_end_d2_R158 = fangyuan1_R [33:33] ;
  assign accu_channel_end_d2_X158 = fangyuan1_X [33:33] ;
  assign accu_channel_end_d2_C158 = fangyuan1_C [33:33] ;
  logic [0:0] accu_channel_end_d2_R159 ;
  logic [0:0] accu_channel_end_d2_X159 ;
  logic [0:0] accu_channel_end_d2_C159 ;
  assign accu_channel_end_d2_R159 = fangyuan1_R [32:32] ;
  assign accu_channel_end_d2_X159 = fangyuan1_X [32:32] ;
  assign accu_channel_end_d2_C159 = fangyuan1_C [32:32] ;
  logic [0:0] accu_channel_end_d2_R160 ;
  logic [0:0] accu_channel_end_d2_X160 ;
  logic [0:0] accu_channel_end_d2_C160 ;
  assign accu_channel_end_d2_R160 = fangyuan1_R [31:31] ;
  assign accu_channel_end_d2_X160 = fangyuan1_X [31:31] ;
  assign accu_channel_end_d2_C160 = fangyuan1_C [31:31] ;
  logic [0:0] accu_channel_end_d2_R161 ;
  logic [0:0] accu_channel_end_d2_X161 ;
  logic [0:0] accu_channel_end_d2_C161 ;
  assign accu_channel_end_d2_R161 = fangyuan1_R [30:30] ;
  assign accu_channel_end_d2_X161 = fangyuan1_X [30:30] ;
  assign accu_channel_end_d2_C161 = fangyuan1_C [30:30] ;
  logic [0:0] accu_channel_end_d2_R162 ;
  logic [0:0] accu_channel_end_d2_X162 ;
  logic [0:0] accu_channel_end_d2_C162 ;
  assign accu_channel_end_d2_R162 = fangyuan1_R [29:29] ;
  assign accu_channel_end_d2_X162 = fangyuan1_X [29:29] ;
  assign accu_channel_end_d2_C162 = fangyuan1_C [29:29] ;
  logic [0:0] accu_channel_end_d2_R163 ;
  logic [0:0] accu_channel_end_d2_X163 ;
  logic [0:0] accu_channel_end_d2_C163 ;
  assign accu_channel_end_d2_R163 = fangyuan1_R [28:28] ;
  assign accu_channel_end_d2_X163 = fangyuan1_X [28:28] ;
  assign accu_channel_end_d2_C163 = fangyuan1_C [28:28] ;
  logic [0:0] accu_channel_end_d2_R164 ;
  logic [0:0] accu_channel_end_d2_X164 ;
  logic [0:0] accu_channel_end_d2_C164 ;
  assign accu_channel_end_d2_R164 = fangyuan1_R [27:27] ;
  assign accu_channel_end_d2_X164 = fangyuan1_X [27:27] ;
  assign accu_channel_end_d2_C164 = fangyuan1_C [27:27] ;
  logic [0:0] accu_channel_end_d2_R165 ;
  logic [0:0] accu_channel_end_d2_X165 ;
  logic [0:0] accu_channel_end_d2_C165 ;
  assign accu_channel_end_d2_R165 = fangyuan1_R [26:26] ;
  assign accu_channel_end_d2_X165 = fangyuan1_X [26:26] ;
  assign accu_channel_end_d2_C165 = fangyuan1_C [26:26] ;
  logic [0:0] accu_channel_end_d2_R166 ;
  logic [0:0] accu_channel_end_d2_X166 ;
  logic [0:0] accu_channel_end_d2_C166 ;
  assign accu_channel_end_d2_R166 = fangyuan1_R [25:25] ;
  assign accu_channel_end_d2_X166 = fangyuan1_X [25:25] ;
  assign accu_channel_end_d2_C166 = fangyuan1_C [25:25] ;
  logic [0:0] accu_channel_end_d2_R167 ;
  logic [0:0] accu_channel_end_d2_X167 ;
  logic [0:0] accu_channel_end_d2_C167 ;
  assign accu_channel_end_d2_R167 = fangyuan1_R [24:24] ;
  assign accu_channel_end_d2_X167 = fangyuan1_X [24:24] ;
  assign accu_channel_end_d2_C167 = fangyuan1_C [24:24] ;
  logic [0:0] accu_channel_end_d2_R168 ;
  logic [0:0] accu_channel_end_d2_X168 ;
  logic [0:0] accu_channel_end_d2_C168 ;
  assign accu_channel_end_d2_R168 = fangyuan1_R [23:23] ;
  assign accu_channel_end_d2_X168 = fangyuan1_X [23:23] ;
  assign accu_channel_end_d2_C168 = fangyuan1_C [23:23] ;
  logic [0:0] accu_channel_end_d2_R169 ;
  logic [0:0] accu_channel_end_d2_X169 ;
  logic [0:0] accu_channel_end_d2_C169 ;
  assign accu_channel_end_d2_R169 = fangyuan1_R [22:22] ;
  assign accu_channel_end_d2_X169 = fangyuan1_X [22:22] ;
  assign accu_channel_end_d2_C169 = fangyuan1_C [22:22] ;
  logic [0:0] accu_channel_end_d2_R170 ;
  logic [0:0] accu_channel_end_d2_X170 ;
  logic [0:0] accu_channel_end_d2_C170 ;
  assign accu_channel_end_d2_R170 = fangyuan1_R [21:21] ;
  assign accu_channel_end_d2_X170 = fangyuan1_X [21:21] ;
  assign accu_channel_end_d2_C170 = fangyuan1_C [21:21] ;
  logic [0:0] accu_channel_end_d2_R171 ;
  logic [0:0] accu_channel_end_d2_X171 ;
  logic [0:0] accu_channel_end_d2_C171 ;
  assign accu_channel_end_d2_R171 = fangyuan1_R [20:20] ;
  assign accu_channel_end_d2_X171 = fangyuan1_X [20:20] ;
  assign accu_channel_end_d2_C171 = fangyuan1_C [20:20] ;
  logic [0:0] accu_channel_end_d2_R172 ;
  logic [0:0] accu_channel_end_d2_X172 ;
  logic [0:0] accu_channel_end_d2_C172 ;
  assign accu_channel_end_d2_R172 = fangyuan1_R [19:19] ;
  assign accu_channel_end_d2_X172 = fangyuan1_X [19:19] ;
  assign accu_channel_end_d2_C172 = fangyuan1_C [19:19] ;
  logic [0:0] accu_channel_end_d2_R173 ;
  logic [0:0] accu_channel_end_d2_X173 ;
  logic [0:0] accu_channel_end_d2_C173 ;
  assign accu_channel_end_d2_R173 = fangyuan1_R [18:18] ;
  assign accu_channel_end_d2_X173 = fangyuan1_X [18:18] ;
  assign accu_channel_end_d2_C173 = fangyuan1_C [18:18] ;
  logic [0:0] accu_channel_end_d2_R174 ;
  logic [0:0] accu_channel_end_d2_X174 ;
  logic [0:0] accu_channel_end_d2_C174 ;
  assign accu_channel_end_d2_R174 = fangyuan1_R [17:17] ;
  assign accu_channel_end_d2_X174 = fangyuan1_X [17:17] ;
  assign accu_channel_end_d2_C174 = fangyuan1_C [17:17] ;
  logic [0:0] accu_channel_end_d2_R175 ;
  logic [0:0] accu_channel_end_d2_X175 ;
  logic [0:0] accu_channel_end_d2_C175 ;
  assign accu_channel_end_d2_R175 = fangyuan1_R [16:16] ;
  assign accu_channel_end_d2_X175 = fangyuan1_X [16:16] ;
  assign accu_channel_end_d2_C175 = fangyuan1_C [16:16] ;
  logic [0:0] accu_channel_end_d2_R176 ;
  logic [0:0] accu_channel_end_d2_X176 ;
  logic [0:0] accu_channel_end_d2_C176 ;
  assign accu_channel_end_d2_R176 = fangyuan1_R [15:15] ;
  assign accu_channel_end_d2_X176 = fangyuan1_X [15:15] ;
  assign accu_channel_end_d2_C176 = fangyuan1_C [15:15] ;
  logic [0:0] accu_channel_end_d2_R177 ;
  logic [0:0] accu_channel_end_d2_X177 ;
  logic [0:0] accu_channel_end_d2_C177 ;
  assign accu_channel_end_d2_R177 = fangyuan1_R [14:14] ;
  assign accu_channel_end_d2_X177 = fangyuan1_X [14:14] ;
  assign accu_channel_end_d2_C177 = fangyuan1_C [14:14] ;
  logic [0:0] accu_channel_end_d2_R178 ;
  logic [0:0] accu_channel_end_d2_X178 ;
  logic [0:0] accu_channel_end_d2_C178 ;
  assign accu_channel_end_d2_R178 = fangyuan1_R [13:13] ;
  assign accu_channel_end_d2_X178 = fangyuan1_X [13:13] ;
  assign accu_channel_end_d2_C178 = fangyuan1_C [13:13] ;
  logic [0:0] accu_channel_end_d2_R179 ;
  logic [0:0] accu_channel_end_d2_X179 ;
  logic [0:0] accu_channel_end_d2_C179 ;
  assign accu_channel_end_d2_R179 = fangyuan1_R [12:12] ;
  assign accu_channel_end_d2_X179 = fangyuan1_X [12:12] ;
  assign accu_channel_end_d2_C179 = fangyuan1_C [12:12] ;
  logic [0:0] accu_channel_end_d2_R180 ;
  logic [0:0] accu_channel_end_d2_X180 ;
  logic [0:0] accu_channel_end_d2_C180 ;
  assign accu_channel_end_d2_R180 = fangyuan1_R [11:11] ;
  assign accu_channel_end_d2_X180 = fangyuan1_X [11:11] ;
  assign accu_channel_end_d2_C180 = fangyuan1_C [11:11] ;
  logic [0:0] accu_channel_end_d2_R181 ;
  logic [0:0] accu_channel_end_d2_X181 ;
  logic [0:0] accu_channel_end_d2_C181 ;
  assign accu_channel_end_d2_R181 = fangyuan1_R [10:10] ;
  assign accu_channel_end_d2_X181 = fangyuan1_X [10:10] ;
  assign accu_channel_end_d2_C181 = fangyuan1_C [10:10] ;
  logic [0:0] accu_channel_end_d2_R182 ;
  logic [0:0] accu_channel_end_d2_X182 ;
  logic [0:0] accu_channel_end_d2_C182 ;
  assign accu_channel_end_d2_R182 = fangyuan1_R [9:9] ;
  assign accu_channel_end_d2_X182 = fangyuan1_X [9:9] ;
  assign accu_channel_end_d2_C182 = fangyuan1_C [9:9] ;
  logic [0:0] accu_channel_end_d2_R183 ;
  logic [0:0] accu_channel_end_d2_X183 ;
  logic [0:0] accu_channel_end_d2_C183 ;
  assign accu_channel_end_d2_R183 = fangyuan1_R [8:8] ;
  assign accu_channel_end_d2_X183 = fangyuan1_X [8:8] ;
  assign accu_channel_end_d2_C183 = fangyuan1_C [8:8] ;
  logic [0:0] accu_channel_end_d2_R184 ;
  logic [0:0] accu_channel_end_d2_X184 ;
  logic [0:0] accu_channel_end_d2_C184 ;
  assign accu_channel_end_d2_R184 = fangyuan1_R [7:7] ;
  assign accu_channel_end_d2_X184 = fangyuan1_X [7:7] ;
  assign accu_channel_end_d2_C184 = fangyuan1_C [7:7] ;
  logic [0:0] accu_channel_end_d2_R185 ;
  logic [0:0] accu_channel_end_d2_X185 ;
  logic [0:0] accu_channel_end_d2_C185 ;
  assign accu_channel_end_d2_R185 = fangyuan1_R [6:6] ;
  assign accu_channel_end_d2_X185 = fangyuan1_X [6:6] ;
  assign accu_channel_end_d2_C185 = fangyuan1_C [6:6] ;
  logic [0:0] accu_channel_end_d2_R186 ;
  logic [0:0] accu_channel_end_d2_X186 ;
  logic [0:0] accu_channel_end_d2_C186 ;
  assign accu_channel_end_d2_R186 = fangyuan1_R [5:5] ;
  assign accu_channel_end_d2_X186 = fangyuan1_X [5:5] ;
  assign accu_channel_end_d2_C186 = fangyuan1_C [5:5] ;
  logic [0:0] accu_channel_end_d2_R187 ;
  logic [0:0] accu_channel_end_d2_X187 ;
  logic [0:0] accu_channel_end_d2_C187 ;
  assign accu_channel_end_d2_R187 = fangyuan1_R [4:4] ;
  assign accu_channel_end_d2_X187 = fangyuan1_X [4:4] ;
  assign accu_channel_end_d2_C187 = fangyuan1_C [4:4] ;
  logic [0:0] accu_channel_end_d2_R188 ;
  logic [0:0] accu_channel_end_d2_X188 ;
  logic [0:0] accu_channel_end_d2_C188 ;
  assign accu_channel_end_d2_R188 = fangyuan1_R [3:3] ;
  assign accu_channel_end_d2_X188 = fangyuan1_X [3:3] ;
  assign accu_channel_end_d2_C188 = fangyuan1_C [3:3] ;
  logic [0:0] accu_channel_end_d2_R189 ;
  logic [0:0] accu_channel_end_d2_X189 ;
  logic [0:0] accu_channel_end_d2_C189 ;
  assign accu_channel_end_d2_R189 = fangyuan1_R [2:2] ;
  assign accu_channel_end_d2_X189 = fangyuan1_X [2:2] ;
  assign accu_channel_end_d2_C189 = fangyuan1_C [2:2] ;
  logic [0:0] accu_channel_end_d2_R190 ;
  logic [0:0] accu_channel_end_d2_X190 ;
  logic [0:0] accu_channel_end_d2_C190 ;
  assign accu_channel_end_d2_R190 = fangyuan1_R [1:1] ;
  assign accu_channel_end_d2_X190 = fangyuan1_X [1:1] ;
  assign accu_channel_end_d2_C190 = fangyuan1_C [1:1] ;
  logic [0:0] accu_channel_end_d2_R191 ;
  logic [0:0] accu_channel_end_d2_X191 ;
  logic [0:0] accu_channel_end_d2_C191 ;
  assign accu_channel_end_d2_R191 = fangyuan1_R [0:0] ;
  assign accu_channel_end_d2_X191 = fangyuan1_X [0:0] ;
  assign accu_channel_end_d2_C191 = fangyuan1_C [0:0] ;

  assign _008_ = accu_ctrl_valid_d2 ? fangyuan1 : accu_ctrl_dlv_elem_mask;
  logic [0:0] accu_ctrl_valid_d2_C1 ;
  logic [0:0] accu_ctrl_valid_d2_R1 ;
  logic [0:0] accu_ctrl_valid_d2_X1 ;
  assign accu_ctrl_valid_d2_C1 = | _008__C ;
  assign accu_ctrl_valid_d2_X1 = | _008__X ;
  assign _008__T = accu_ctrl_valid_d2 ? ( { 192{ accu_ctrl_valid_d2_T  }} | fangyuan1_T ) : ( { 192{ accu_ctrl_valid_d2_T  }} | accu_ctrl_dlv_elem_mask_T );
  assign _008__S = accu_ctrl_valid_d2 ? fangyuan1_S : accu_ctrl_dlv_elem_mask_S ;
  assign accu_ctrl_valid_d2_R1 = ( | (_008__R | ( _008__C & ( { 192{ accu_ctrl_valid_d2 }} & fangyuan1_T | { 192{ !accu_ctrl_valid_d2 }} & accu_ctrl_dlv_elem_mask_T )))) && fangyuan1 != accu_ctrl_dlv_elem_mask ;
  logic [191:0] fangyuan1_C0 ;
  logic [191:0] fangyuan1_R0 ;
  logic [191:0] fangyuan1_X0 ;
  assign fangyuan1_C0 = { 192{ accu_ctrl_valid_d2 }} ;
  assign fangyuan1_R0 = { 192{ accu_ctrl_valid_d2 }} & ( _008__R | ( { 192{ accu_ctrl_valid_d2_T  }} & _008__C ));
  assign fangyuan1_X0 = { 192{ accu_ctrl_valid_d2 }} & _008__X ;
  logic [191:0] accu_ctrl_dlv_elem_mask_C0 ;
  logic [191:0] accu_ctrl_dlv_elem_mask_R0 ;
  logic [191:0] accu_ctrl_dlv_elem_mask_X0 ;
  assign accu_ctrl_dlv_elem_mask_C0 = { 192{ !accu_ctrl_valid_d2 }} ;
  assign accu_ctrl_dlv_elem_mask_R0 = { 192{ !accu_ctrl_valid_d2 }} & ( _008__R | ( { 192{ accu_ctrl_valid_d2_T  }} & _008__C ));
  assign accu_ctrl_dlv_elem_mask_X0 = { 192{ !accu_ctrl_valid_d2 }} & _008__X ;
  logic [15:0] fangyuan2;
  logic [15:0] fangyuan2_T ;
  logic [15:0] fangyuan2_R ;
  logic [15:0] fangyuan2_C ;
  logic [15:0] fangyuan2_X ;
  assign fangyuan2 = { accu_ram_sel_7_d2, accu_ram_sel_7_d2, accu_ram_sel_7_d2, accu_ram_sel_7_d2, accu_ram_sel_7_d2, accu_ram_sel_7_d2, accu_ram_sel_7_d2, accu_ram_sel_7_d2, accu_ram_sel_7_d2, accu_ram_sel_7_d2, accu_ram_sel_7_d2, accu_ram_sel_7_d2, accu_ram_sel_7_d2, accu_ram_sel_7_d2, accu_ram_sel_7_d2, accu_ram_sel_7_d2 };
  assign fangyuan2_T = {  accu_ram_sel_7_d2_T , accu_ram_sel_7_d2_T , accu_ram_sel_7_d2_T , accu_ram_sel_7_d2_T , accu_ram_sel_7_d2_T , accu_ram_sel_7_d2_T , accu_ram_sel_7_d2_T , accu_ram_sel_7_d2_T , accu_ram_sel_7_d2_T , accu_ram_sel_7_d2_T , accu_ram_sel_7_d2_T , accu_ram_sel_7_d2_T , accu_ram_sel_7_d2_T , accu_ram_sel_7_d2_T , accu_ram_sel_7_d2_T , accu_ram_sel_7_d2_T  };
  logic [13:0] fangyuan2_S ;
  assign fangyuan2_S = 0 ;
  logic [0:0] accu_ram_sel_7_d2_R0 ;
  logic [0:0] accu_ram_sel_7_d2_X0 ;
  logic [0:0] accu_ram_sel_7_d2_C0 ;
  assign accu_ram_sel_7_d2_R0 = fangyuan2_R [15:15] ;
  assign accu_ram_sel_7_d2_X0 = fangyuan2_X [15:15] ;
  assign accu_ram_sel_7_d2_C0 = fangyuan2_C [15:15] ;
  logic [0:0] accu_ram_sel_7_d2_R1 ;
  logic [0:0] accu_ram_sel_7_d2_X1 ;
  logic [0:0] accu_ram_sel_7_d2_C1 ;
  assign accu_ram_sel_7_d2_R1 = fangyuan2_R [14:14] ;
  assign accu_ram_sel_7_d2_X1 = fangyuan2_X [14:14] ;
  assign accu_ram_sel_7_d2_C1 = fangyuan2_C [14:14] ;
  logic [0:0] accu_ram_sel_7_d2_R2 ;
  logic [0:0] accu_ram_sel_7_d2_X2 ;
  logic [0:0] accu_ram_sel_7_d2_C2 ;
  assign accu_ram_sel_7_d2_R2 = fangyuan2_R [13:13] ;
  assign accu_ram_sel_7_d2_X2 = fangyuan2_X [13:13] ;
  assign accu_ram_sel_7_d2_C2 = fangyuan2_C [13:13] ;
  logic [0:0] accu_ram_sel_7_d2_R3 ;
  logic [0:0] accu_ram_sel_7_d2_X3 ;
  logic [0:0] accu_ram_sel_7_d2_C3 ;
  assign accu_ram_sel_7_d2_R3 = fangyuan2_R [12:12] ;
  assign accu_ram_sel_7_d2_X3 = fangyuan2_X [12:12] ;
  assign accu_ram_sel_7_d2_C3 = fangyuan2_C [12:12] ;
  logic [0:0] accu_ram_sel_7_d2_R4 ;
  logic [0:0] accu_ram_sel_7_d2_X4 ;
  logic [0:0] accu_ram_sel_7_d2_C4 ;
  assign accu_ram_sel_7_d2_R4 = fangyuan2_R [11:11] ;
  assign accu_ram_sel_7_d2_X4 = fangyuan2_X [11:11] ;
  assign accu_ram_sel_7_d2_C4 = fangyuan2_C [11:11] ;
  logic [0:0] accu_ram_sel_7_d2_R5 ;
  logic [0:0] accu_ram_sel_7_d2_X5 ;
  logic [0:0] accu_ram_sel_7_d2_C5 ;
  assign accu_ram_sel_7_d2_R5 = fangyuan2_R [10:10] ;
  assign accu_ram_sel_7_d2_X5 = fangyuan2_X [10:10] ;
  assign accu_ram_sel_7_d2_C5 = fangyuan2_C [10:10] ;
  logic [0:0] accu_ram_sel_7_d2_R6 ;
  logic [0:0] accu_ram_sel_7_d2_X6 ;
  logic [0:0] accu_ram_sel_7_d2_C6 ;
  assign accu_ram_sel_7_d2_R6 = fangyuan2_R [9:9] ;
  assign accu_ram_sel_7_d2_X6 = fangyuan2_X [9:9] ;
  assign accu_ram_sel_7_d2_C6 = fangyuan2_C [9:9] ;
  logic [0:0] accu_ram_sel_7_d2_R7 ;
  logic [0:0] accu_ram_sel_7_d2_X7 ;
  logic [0:0] accu_ram_sel_7_d2_C7 ;
  assign accu_ram_sel_7_d2_R7 = fangyuan2_R [8:8] ;
  assign accu_ram_sel_7_d2_X7 = fangyuan2_X [8:8] ;
  assign accu_ram_sel_7_d2_C7 = fangyuan2_C [8:8] ;
  logic [0:0] accu_ram_sel_7_d2_R8 ;
  logic [0:0] accu_ram_sel_7_d2_X8 ;
  logic [0:0] accu_ram_sel_7_d2_C8 ;
  assign accu_ram_sel_7_d2_R8 = fangyuan2_R [7:7] ;
  assign accu_ram_sel_7_d2_X8 = fangyuan2_X [7:7] ;
  assign accu_ram_sel_7_d2_C8 = fangyuan2_C [7:7] ;
  logic [0:0] accu_ram_sel_7_d2_R9 ;
  logic [0:0] accu_ram_sel_7_d2_X9 ;
  logic [0:0] accu_ram_sel_7_d2_C9 ;
  assign accu_ram_sel_7_d2_R9 = fangyuan2_R [6:6] ;
  assign accu_ram_sel_7_d2_X9 = fangyuan2_X [6:6] ;
  assign accu_ram_sel_7_d2_C9 = fangyuan2_C [6:6] ;
  logic [0:0] accu_ram_sel_7_d2_R10 ;
  logic [0:0] accu_ram_sel_7_d2_X10 ;
  logic [0:0] accu_ram_sel_7_d2_C10 ;
  assign accu_ram_sel_7_d2_R10 = fangyuan2_R [5:5] ;
  assign accu_ram_sel_7_d2_X10 = fangyuan2_X [5:5] ;
  assign accu_ram_sel_7_d2_C10 = fangyuan2_C [5:5] ;
  logic [0:0] accu_ram_sel_7_d2_R11 ;
  logic [0:0] accu_ram_sel_7_d2_X11 ;
  logic [0:0] accu_ram_sel_7_d2_C11 ;
  assign accu_ram_sel_7_d2_R11 = fangyuan2_R [4:4] ;
  assign accu_ram_sel_7_d2_X11 = fangyuan2_X [4:4] ;
  assign accu_ram_sel_7_d2_C11 = fangyuan2_C [4:4] ;
  logic [0:0] accu_ram_sel_7_d2_R12 ;
  logic [0:0] accu_ram_sel_7_d2_X12 ;
  logic [0:0] accu_ram_sel_7_d2_C12 ;
  assign accu_ram_sel_7_d2_R12 = fangyuan2_R [3:3] ;
  assign accu_ram_sel_7_d2_X12 = fangyuan2_X [3:3] ;
  assign accu_ram_sel_7_d2_C12 = fangyuan2_C [3:3] ;
  logic [0:0] accu_ram_sel_7_d2_R13 ;
  logic [0:0] accu_ram_sel_7_d2_X13 ;
  logic [0:0] accu_ram_sel_7_d2_C13 ;
  assign accu_ram_sel_7_d2_R13 = fangyuan2_R [2:2] ;
  assign accu_ram_sel_7_d2_X13 = fangyuan2_X [2:2] ;
  assign accu_ram_sel_7_d2_C13 = fangyuan2_C [2:2] ;
  logic [0:0] accu_ram_sel_7_d2_R14 ;
  logic [0:0] accu_ram_sel_7_d2_X14 ;
  logic [0:0] accu_ram_sel_7_d2_C14 ;
  assign accu_ram_sel_7_d2_R14 = fangyuan2_R [1:1] ;
  assign accu_ram_sel_7_d2_X14 = fangyuan2_X [1:1] ;
  assign accu_ram_sel_7_d2_C14 = fangyuan2_C [1:1] ;
  logic [0:0] accu_ram_sel_7_d2_R15 ;
  logic [0:0] accu_ram_sel_7_d2_X15 ;
  logic [0:0] accu_ram_sel_7_d2_C15 ;
  assign accu_ram_sel_7_d2_R15 = fangyuan2_R [0:0] ;
  assign accu_ram_sel_7_d2_X15 = fangyuan2_X [0:0] ;
  assign accu_ram_sel_7_d2_C15 = fangyuan2_C [0:0] ;

  assign _018_ = accu_ctrl_valid_d2 ? fangyuan2 : accu_ctrl_ram_sel_7;
  logic [0:0] accu_ctrl_valid_d2_C2 ;
  logic [0:0] accu_ctrl_valid_d2_R2 ;
  logic [0:0] accu_ctrl_valid_d2_X2 ;
  assign accu_ctrl_valid_d2_C2 = | _018__C ;
  assign accu_ctrl_valid_d2_X2 = | _018__X ;
  assign _018__T = accu_ctrl_valid_d2 ? ( { 16{ accu_ctrl_valid_d2_T  }} | fangyuan2_T ) : ( { 16{ accu_ctrl_valid_d2_T  }} | accu_ctrl_ram_sel_7_T );
  assign _018__S = accu_ctrl_valid_d2 ? fangyuan2_S : accu_ctrl_ram_sel_7_S ;
  assign accu_ctrl_valid_d2_R2 = ( | (_018__R | ( _018__C & ( { 16{ accu_ctrl_valid_d2 }} & fangyuan2_T | { 16{ !accu_ctrl_valid_d2 }} & accu_ctrl_ram_sel_7_T )))) && fangyuan2 != accu_ctrl_ram_sel_7 ;
  logic [15:0] fangyuan2_C0 ;
  logic [15:0] fangyuan2_R0 ;
  logic [15:0] fangyuan2_X0 ;
  assign fangyuan2_C0 = { 16{ accu_ctrl_valid_d2 }} ;
  assign fangyuan2_R0 = { 16{ accu_ctrl_valid_d2 }} & ( _018__R | ( { 16{ accu_ctrl_valid_d2_T  }} & _018__C ));
  assign fangyuan2_X0 = { 16{ accu_ctrl_valid_d2 }} & _018__X ;
  logic [15:0] accu_ctrl_ram_sel_7_C0 ;
  logic [15:0] accu_ctrl_ram_sel_7_R0 ;
  logic [15:0] accu_ctrl_ram_sel_7_X0 ;
  assign accu_ctrl_ram_sel_7_C0 = { 16{ !accu_ctrl_valid_d2 }} ;
  assign accu_ctrl_ram_sel_7_R0 = { 16{ !accu_ctrl_valid_d2 }} & ( _018__R | ( { 16{ accu_ctrl_valid_d2_T  }} & _018__C ));
  assign accu_ctrl_ram_sel_7_X0 = { 16{ !accu_ctrl_valid_d2 }} & _018__X ;
  logic [15:0] fangyuan3;
  logic [15:0] fangyuan3_T ;
  logic [15:0] fangyuan3_R ;
  logic [15:0] fangyuan3_C ;
  logic [15:0] fangyuan3_X ;
  assign fangyuan3 = { accu_ram_sel_6_d2, accu_ram_sel_6_d2, accu_ram_sel_6_d2, accu_ram_sel_6_d2, accu_ram_sel_6_d2, accu_ram_sel_6_d2, accu_ram_sel_6_d2, accu_ram_sel_6_d2, accu_ram_sel_6_d2, accu_ram_sel_6_d2, accu_ram_sel_6_d2, accu_ram_sel_6_d2, accu_ram_sel_6_d2, accu_ram_sel_6_d2, accu_ram_sel_6_d2, accu_ram_sel_6_d2 };
  assign fangyuan3_T = {  accu_ram_sel_6_d2_T , accu_ram_sel_6_d2_T , accu_ram_sel_6_d2_T , accu_ram_sel_6_d2_T , accu_ram_sel_6_d2_T , accu_ram_sel_6_d2_T , accu_ram_sel_6_d2_T , accu_ram_sel_6_d2_T , accu_ram_sel_6_d2_T , accu_ram_sel_6_d2_T , accu_ram_sel_6_d2_T , accu_ram_sel_6_d2_T , accu_ram_sel_6_d2_T , accu_ram_sel_6_d2_T , accu_ram_sel_6_d2_T , accu_ram_sel_6_d2_T  };
  logic [13:0] fangyuan3_S ;
  assign fangyuan3_S = 0 ;
  logic [0:0] accu_ram_sel_6_d2_R0 ;
  logic [0:0] accu_ram_sel_6_d2_X0 ;
  logic [0:0] accu_ram_sel_6_d2_C0 ;
  assign accu_ram_sel_6_d2_R0 = fangyuan3_R [15:15] ;
  assign accu_ram_sel_6_d2_X0 = fangyuan3_X [15:15] ;
  assign accu_ram_sel_6_d2_C0 = fangyuan3_C [15:15] ;
  logic [0:0] accu_ram_sel_6_d2_R1 ;
  logic [0:0] accu_ram_sel_6_d2_X1 ;
  logic [0:0] accu_ram_sel_6_d2_C1 ;
  assign accu_ram_sel_6_d2_R1 = fangyuan3_R [14:14] ;
  assign accu_ram_sel_6_d2_X1 = fangyuan3_X [14:14] ;
  assign accu_ram_sel_6_d2_C1 = fangyuan3_C [14:14] ;
  logic [0:0] accu_ram_sel_6_d2_R2 ;
  logic [0:0] accu_ram_sel_6_d2_X2 ;
  logic [0:0] accu_ram_sel_6_d2_C2 ;
  assign accu_ram_sel_6_d2_R2 = fangyuan3_R [13:13] ;
  assign accu_ram_sel_6_d2_X2 = fangyuan3_X [13:13] ;
  assign accu_ram_sel_6_d2_C2 = fangyuan3_C [13:13] ;
  logic [0:0] accu_ram_sel_6_d2_R3 ;
  logic [0:0] accu_ram_sel_6_d2_X3 ;
  logic [0:0] accu_ram_sel_6_d2_C3 ;
  assign accu_ram_sel_6_d2_R3 = fangyuan3_R [12:12] ;
  assign accu_ram_sel_6_d2_X3 = fangyuan3_X [12:12] ;
  assign accu_ram_sel_6_d2_C3 = fangyuan3_C [12:12] ;
  logic [0:0] accu_ram_sel_6_d2_R4 ;
  logic [0:0] accu_ram_sel_6_d2_X4 ;
  logic [0:0] accu_ram_sel_6_d2_C4 ;
  assign accu_ram_sel_6_d2_R4 = fangyuan3_R [11:11] ;
  assign accu_ram_sel_6_d2_X4 = fangyuan3_X [11:11] ;
  assign accu_ram_sel_6_d2_C4 = fangyuan3_C [11:11] ;
  logic [0:0] accu_ram_sel_6_d2_R5 ;
  logic [0:0] accu_ram_sel_6_d2_X5 ;
  logic [0:0] accu_ram_sel_6_d2_C5 ;
  assign accu_ram_sel_6_d2_R5 = fangyuan3_R [10:10] ;
  assign accu_ram_sel_6_d2_X5 = fangyuan3_X [10:10] ;
  assign accu_ram_sel_6_d2_C5 = fangyuan3_C [10:10] ;
  logic [0:0] accu_ram_sel_6_d2_R6 ;
  logic [0:0] accu_ram_sel_6_d2_X6 ;
  logic [0:0] accu_ram_sel_6_d2_C6 ;
  assign accu_ram_sel_6_d2_R6 = fangyuan3_R [9:9] ;
  assign accu_ram_sel_6_d2_X6 = fangyuan3_X [9:9] ;
  assign accu_ram_sel_6_d2_C6 = fangyuan3_C [9:9] ;
  logic [0:0] accu_ram_sel_6_d2_R7 ;
  logic [0:0] accu_ram_sel_6_d2_X7 ;
  logic [0:0] accu_ram_sel_6_d2_C7 ;
  assign accu_ram_sel_6_d2_R7 = fangyuan3_R [8:8] ;
  assign accu_ram_sel_6_d2_X7 = fangyuan3_X [8:8] ;
  assign accu_ram_sel_6_d2_C7 = fangyuan3_C [8:8] ;
  logic [0:0] accu_ram_sel_6_d2_R8 ;
  logic [0:0] accu_ram_sel_6_d2_X8 ;
  logic [0:0] accu_ram_sel_6_d2_C8 ;
  assign accu_ram_sel_6_d2_R8 = fangyuan3_R [7:7] ;
  assign accu_ram_sel_6_d2_X8 = fangyuan3_X [7:7] ;
  assign accu_ram_sel_6_d2_C8 = fangyuan3_C [7:7] ;
  logic [0:0] accu_ram_sel_6_d2_R9 ;
  logic [0:0] accu_ram_sel_6_d2_X9 ;
  logic [0:0] accu_ram_sel_6_d2_C9 ;
  assign accu_ram_sel_6_d2_R9 = fangyuan3_R [6:6] ;
  assign accu_ram_sel_6_d2_X9 = fangyuan3_X [6:6] ;
  assign accu_ram_sel_6_d2_C9 = fangyuan3_C [6:6] ;
  logic [0:0] accu_ram_sel_6_d2_R10 ;
  logic [0:0] accu_ram_sel_6_d2_X10 ;
  logic [0:0] accu_ram_sel_6_d2_C10 ;
  assign accu_ram_sel_6_d2_R10 = fangyuan3_R [5:5] ;
  assign accu_ram_sel_6_d2_X10 = fangyuan3_X [5:5] ;
  assign accu_ram_sel_6_d2_C10 = fangyuan3_C [5:5] ;
  logic [0:0] accu_ram_sel_6_d2_R11 ;
  logic [0:0] accu_ram_sel_6_d2_X11 ;
  logic [0:0] accu_ram_sel_6_d2_C11 ;
  assign accu_ram_sel_6_d2_R11 = fangyuan3_R [4:4] ;
  assign accu_ram_sel_6_d2_X11 = fangyuan3_X [4:4] ;
  assign accu_ram_sel_6_d2_C11 = fangyuan3_C [4:4] ;
  logic [0:0] accu_ram_sel_6_d2_R12 ;
  logic [0:0] accu_ram_sel_6_d2_X12 ;
  logic [0:0] accu_ram_sel_6_d2_C12 ;
  assign accu_ram_sel_6_d2_R12 = fangyuan3_R [3:3] ;
  assign accu_ram_sel_6_d2_X12 = fangyuan3_X [3:3] ;
  assign accu_ram_sel_6_d2_C12 = fangyuan3_C [3:3] ;
  logic [0:0] accu_ram_sel_6_d2_R13 ;
  logic [0:0] accu_ram_sel_6_d2_X13 ;
  logic [0:0] accu_ram_sel_6_d2_C13 ;
  assign accu_ram_sel_6_d2_R13 = fangyuan3_R [2:2] ;
  assign accu_ram_sel_6_d2_X13 = fangyuan3_X [2:2] ;
  assign accu_ram_sel_6_d2_C13 = fangyuan3_C [2:2] ;
  logic [0:0] accu_ram_sel_6_d2_R14 ;
  logic [0:0] accu_ram_sel_6_d2_X14 ;
  logic [0:0] accu_ram_sel_6_d2_C14 ;
  assign accu_ram_sel_6_d2_R14 = fangyuan3_R [1:1] ;
  assign accu_ram_sel_6_d2_X14 = fangyuan3_X [1:1] ;
  assign accu_ram_sel_6_d2_C14 = fangyuan3_C [1:1] ;
  logic [0:0] accu_ram_sel_6_d2_R15 ;
  logic [0:0] accu_ram_sel_6_d2_X15 ;
  logic [0:0] accu_ram_sel_6_d2_C15 ;
  assign accu_ram_sel_6_d2_R15 = fangyuan3_R [0:0] ;
  assign accu_ram_sel_6_d2_X15 = fangyuan3_X [0:0] ;
  assign accu_ram_sel_6_d2_C15 = fangyuan3_C [0:0] ;

  assign _017_ = accu_ctrl_valid_d2 ? fangyuan3 : accu_ctrl_ram_sel_6;
  logic [0:0] accu_ctrl_valid_d2_C3 ;
  logic [0:0] accu_ctrl_valid_d2_R3 ;
  logic [0:0] accu_ctrl_valid_d2_X3 ;
  assign accu_ctrl_valid_d2_C3 = | _017__C ;
  assign accu_ctrl_valid_d2_X3 = | _017__X ;
  assign _017__T = accu_ctrl_valid_d2 ? ( { 16{ accu_ctrl_valid_d2_T  }} | fangyuan3_T ) : ( { 16{ accu_ctrl_valid_d2_T  }} | accu_ctrl_ram_sel_6_T );
  assign _017__S = accu_ctrl_valid_d2 ? fangyuan3_S : accu_ctrl_ram_sel_6_S ;
  assign accu_ctrl_valid_d2_R3 = ( | (_017__R | ( _017__C & ( { 16{ accu_ctrl_valid_d2 }} & fangyuan3_T | { 16{ !accu_ctrl_valid_d2 }} & accu_ctrl_ram_sel_6_T )))) && fangyuan3 != accu_ctrl_ram_sel_6 ;
  logic [15:0] fangyuan3_C0 ;
  logic [15:0] fangyuan3_R0 ;
  logic [15:0] fangyuan3_X0 ;
  assign fangyuan3_C0 = { 16{ accu_ctrl_valid_d2 }} ;
  assign fangyuan3_R0 = { 16{ accu_ctrl_valid_d2 }} & ( _017__R | ( { 16{ accu_ctrl_valid_d2_T  }} & _017__C ));
  assign fangyuan3_X0 = { 16{ accu_ctrl_valid_d2 }} & _017__X ;
  logic [15:0] accu_ctrl_ram_sel_6_C0 ;
  logic [15:0] accu_ctrl_ram_sel_6_R0 ;
  logic [15:0] accu_ctrl_ram_sel_6_X0 ;
  assign accu_ctrl_ram_sel_6_C0 = { 16{ !accu_ctrl_valid_d2 }} ;
  assign accu_ctrl_ram_sel_6_R0 = { 16{ !accu_ctrl_valid_d2 }} & ( _017__R | ( { 16{ accu_ctrl_valid_d2_T  }} & _017__C ));
  assign accu_ctrl_ram_sel_6_X0 = { 16{ !accu_ctrl_valid_d2 }} & _017__X ;
  logic [15:0] fangyuan4;
  logic [15:0] fangyuan4_T ;
  logic [15:0] fangyuan4_R ;
  logic [15:0] fangyuan4_C ;
  logic [15:0] fangyuan4_X ;
  assign fangyuan4 = { accu_ram_sel_5_d2, accu_ram_sel_5_d2, accu_ram_sel_5_d2, accu_ram_sel_5_d2, accu_ram_sel_5_d2, accu_ram_sel_5_d2, accu_ram_sel_5_d2, accu_ram_sel_5_d2, accu_ram_sel_5_d2, accu_ram_sel_5_d2, accu_ram_sel_5_d2, accu_ram_sel_5_d2, accu_ram_sel_5_d2, accu_ram_sel_5_d2, accu_ram_sel_5_d2, accu_ram_sel_5_d2 };
  assign fangyuan4_T = {  accu_ram_sel_5_d2_T , accu_ram_sel_5_d2_T , accu_ram_sel_5_d2_T , accu_ram_sel_5_d2_T , accu_ram_sel_5_d2_T , accu_ram_sel_5_d2_T , accu_ram_sel_5_d2_T , accu_ram_sel_5_d2_T , accu_ram_sel_5_d2_T , accu_ram_sel_5_d2_T , accu_ram_sel_5_d2_T , accu_ram_sel_5_d2_T , accu_ram_sel_5_d2_T , accu_ram_sel_5_d2_T , accu_ram_sel_5_d2_T , accu_ram_sel_5_d2_T  };
  logic [13:0] fangyuan4_S ;
  assign fangyuan4_S = 0 ;
  logic [0:0] accu_ram_sel_5_d2_R0 ;
  logic [0:0] accu_ram_sel_5_d2_X0 ;
  logic [0:0] accu_ram_sel_5_d2_C0 ;
  assign accu_ram_sel_5_d2_R0 = fangyuan4_R [15:15] ;
  assign accu_ram_sel_5_d2_X0 = fangyuan4_X [15:15] ;
  assign accu_ram_sel_5_d2_C0 = fangyuan4_C [15:15] ;
  logic [0:0] accu_ram_sel_5_d2_R1 ;
  logic [0:0] accu_ram_sel_5_d2_X1 ;
  logic [0:0] accu_ram_sel_5_d2_C1 ;
  assign accu_ram_sel_5_d2_R1 = fangyuan4_R [14:14] ;
  assign accu_ram_sel_5_d2_X1 = fangyuan4_X [14:14] ;
  assign accu_ram_sel_5_d2_C1 = fangyuan4_C [14:14] ;
  logic [0:0] accu_ram_sel_5_d2_R2 ;
  logic [0:0] accu_ram_sel_5_d2_X2 ;
  logic [0:0] accu_ram_sel_5_d2_C2 ;
  assign accu_ram_sel_5_d2_R2 = fangyuan4_R [13:13] ;
  assign accu_ram_sel_5_d2_X2 = fangyuan4_X [13:13] ;
  assign accu_ram_sel_5_d2_C2 = fangyuan4_C [13:13] ;
  logic [0:0] accu_ram_sel_5_d2_R3 ;
  logic [0:0] accu_ram_sel_5_d2_X3 ;
  logic [0:0] accu_ram_sel_5_d2_C3 ;
  assign accu_ram_sel_5_d2_R3 = fangyuan4_R [12:12] ;
  assign accu_ram_sel_5_d2_X3 = fangyuan4_X [12:12] ;
  assign accu_ram_sel_5_d2_C3 = fangyuan4_C [12:12] ;
  logic [0:0] accu_ram_sel_5_d2_R4 ;
  logic [0:0] accu_ram_sel_5_d2_X4 ;
  logic [0:0] accu_ram_sel_5_d2_C4 ;
  assign accu_ram_sel_5_d2_R4 = fangyuan4_R [11:11] ;
  assign accu_ram_sel_5_d2_X4 = fangyuan4_X [11:11] ;
  assign accu_ram_sel_5_d2_C4 = fangyuan4_C [11:11] ;
  logic [0:0] accu_ram_sel_5_d2_R5 ;
  logic [0:0] accu_ram_sel_5_d2_X5 ;
  logic [0:0] accu_ram_sel_5_d2_C5 ;
  assign accu_ram_sel_5_d2_R5 = fangyuan4_R [10:10] ;
  assign accu_ram_sel_5_d2_X5 = fangyuan4_X [10:10] ;
  assign accu_ram_sel_5_d2_C5 = fangyuan4_C [10:10] ;
  logic [0:0] accu_ram_sel_5_d2_R6 ;
  logic [0:0] accu_ram_sel_5_d2_X6 ;
  logic [0:0] accu_ram_sel_5_d2_C6 ;
  assign accu_ram_sel_5_d2_R6 = fangyuan4_R [9:9] ;
  assign accu_ram_sel_5_d2_X6 = fangyuan4_X [9:9] ;
  assign accu_ram_sel_5_d2_C6 = fangyuan4_C [9:9] ;
  logic [0:0] accu_ram_sel_5_d2_R7 ;
  logic [0:0] accu_ram_sel_5_d2_X7 ;
  logic [0:0] accu_ram_sel_5_d2_C7 ;
  assign accu_ram_sel_5_d2_R7 = fangyuan4_R [8:8] ;
  assign accu_ram_sel_5_d2_X7 = fangyuan4_X [8:8] ;
  assign accu_ram_sel_5_d2_C7 = fangyuan4_C [8:8] ;
  logic [0:0] accu_ram_sel_5_d2_R8 ;
  logic [0:0] accu_ram_sel_5_d2_X8 ;
  logic [0:0] accu_ram_sel_5_d2_C8 ;
  assign accu_ram_sel_5_d2_R8 = fangyuan4_R [7:7] ;
  assign accu_ram_sel_5_d2_X8 = fangyuan4_X [7:7] ;
  assign accu_ram_sel_5_d2_C8 = fangyuan4_C [7:7] ;
  logic [0:0] accu_ram_sel_5_d2_R9 ;
  logic [0:0] accu_ram_sel_5_d2_X9 ;
  logic [0:0] accu_ram_sel_5_d2_C9 ;
  assign accu_ram_sel_5_d2_R9 = fangyuan4_R [6:6] ;
  assign accu_ram_sel_5_d2_X9 = fangyuan4_X [6:6] ;
  assign accu_ram_sel_5_d2_C9 = fangyuan4_C [6:6] ;
  logic [0:0] accu_ram_sel_5_d2_R10 ;
  logic [0:0] accu_ram_sel_5_d2_X10 ;
  logic [0:0] accu_ram_sel_5_d2_C10 ;
  assign accu_ram_sel_5_d2_R10 = fangyuan4_R [5:5] ;
  assign accu_ram_sel_5_d2_X10 = fangyuan4_X [5:5] ;
  assign accu_ram_sel_5_d2_C10 = fangyuan4_C [5:5] ;
  logic [0:0] accu_ram_sel_5_d2_R11 ;
  logic [0:0] accu_ram_sel_5_d2_X11 ;
  logic [0:0] accu_ram_sel_5_d2_C11 ;
  assign accu_ram_sel_5_d2_R11 = fangyuan4_R [4:4] ;
  assign accu_ram_sel_5_d2_X11 = fangyuan4_X [4:4] ;
  assign accu_ram_sel_5_d2_C11 = fangyuan4_C [4:4] ;
  logic [0:0] accu_ram_sel_5_d2_R12 ;
  logic [0:0] accu_ram_sel_5_d2_X12 ;
  logic [0:0] accu_ram_sel_5_d2_C12 ;
  assign accu_ram_sel_5_d2_R12 = fangyuan4_R [3:3] ;
  assign accu_ram_sel_5_d2_X12 = fangyuan4_X [3:3] ;
  assign accu_ram_sel_5_d2_C12 = fangyuan4_C [3:3] ;
  logic [0:0] accu_ram_sel_5_d2_R13 ;
  logic [0:0] accu_ram_sel_5_d2_X13 ;
  logic [0:0] accu_ram_sel_5_d2_C13 ;
  assign accu_ram_sel_5_d2_R13 = fangyuan4_R [2:2] ;
  assign accu_ram_sel_5_d2_X13 = fangyuan4_X [2:2] ;
  assign accu_ram_sel_5_d2_C13 = fangyuan4_C [2:2] ;
  logic [0:0] accu_ram_sel_5_d2_R14 ;
  logic [0:0] accu_ram_sel_5_d2_X14 ;
  logic [0:0] accu_ram_sel_5_d2_C14 ;
  assign accu_ram_sel_5_d2_R14 = fangyuan4_R [1:1] ;
  assign accu_ram_sel_5_d2_X14 = fangyuan4_X [1:1] ;
  assign accu_ram_sel_5_d2_C14 = fangyuan4_C [1:1] ;
  logic [0:0] accu_ram_sel_5_d2_R15 ;
  logic [0:0] accu_ram_sel_5_d2_X15 ;
  logic [0:0] accu_ram_sel_5_d2_C15 ;
  assign accu_ram_sel_5_d2_R15 = fangyuan4_R [0:0] ;
  assign accu_ram_sel_5_d2_X15 = fangyuan4_X [0:0] ;
  assign accu_ram_sel_5_d2_C15 = fangyuan4_C [0:0] ;

  assign _016_ = accu_ctrl_valid_d2 ? fangyuan4 : accu_ctrl_ram_sel_5;
  logic [0:0] accu_ctrl_valid_d2_C4 ;
  logic [0:0] accu_ctrl_valid_d2_R4 ;
  logic [0:0] accu_ctrl_valid_d2_X4 ;
  assign accu_ctrl_valid_d2_C4 = | _016__C ;
  assign accu_ctrl_valid_d2_X4 = | _016__X ;
  assign _016__T = accu_ctrl_valid_d2 ? ( { 16{ accu_ctrl_valid_d2_T  }} | fangyuan4_T ) : ( { 16{ accu_ctrl_valid_d2_T  }} | accu_ctrl_ram_sel_5_T );
  assign _016__S = accu_ctrl_valid_d2 ? fangyuan4_S : accu_ctrl_ram_sel_5_S ;
  assign accu_ctrl_valid_d2_R4 = ( | (_016__R | ( _016__C & ( { 16{ accu_ctrl_valid_d2 }} & fangyuan4_T | { 16{ !accu_ctrl_valid_d2 }} & accu_ctrl_ram_sel_5_T )))) && fangyuan4 != accu_ctrl_ram_sel_5 ;
  logic [15:0] fangyuan4_C0 ;
  logic [15:0] fangyuan4_R0 ;
  logic [15:0] fangyuan4_X0 ;
  assign fangyuan4_C0 = { 16{ accu_ctrl_valid_d2 }} ;
  assign fangyuan4_R0 = { 16{ accu_ctrl_valid_d2 }} & ( _016__R | ( { 16{ accu_ctrl_valid_d2_T  }} & _016__C ));
  assign fangyuan4_X0 = { 16{ accu_ctrl_valid_d2 }} & _016__X ;
  logic [15:0] accu_ctrl_ram_sel_5_C0 ;
  logic [15:0] accu_ctrl_ram_sel_5_R0 ;
  logic [15:0] accu_ctrl_ram_sel_5_X0 ;
  assign accu_ctrl_ram_sel_5_C0 = { 16{ !accu_ctrl_valid_d2 }} ;
  assign accu_ctrl_ram_sel_5_R0 = { 16{ !accu_ctrl_valid_d2 }} & ( _016__R | ( { 16{ accu_ctrl_valid_d2_T  }} & _016__C ));
  assign accu_ctrl_ram_sel_5_X0 = { 16{ !accu_ctrl_valid_d2 }} & _016__X ;
  logic [15:0] fangyuan5;
  logic [15:0] fangyuan5_T ;
  logic [15:0] fangyuan5_R ;
  logic [15:0] fangyuan5_C ;
  logic [15:0] fangyuan5_X ;
  assign fangyuan5 = { accu_ram_sel_4_d2, accu_ram_sel_4_d2, accu_ram_sel_4_d2, accu_ram_sel_4_d2, accu_ram_sel_4_d2, accu_ram_sel_4_d2, accu_ram_sel_4_d2, accu_ram_sel_4_d2, accu_ram_sel_4_d2, accu_ram_sel_4_d2, accu_ram_sel_4_d2, accu_ram_sel_4_d2, accu_ram_sel_4_d2, accu_ram_sel_4_d2, accu_ram_sel_4_d2, accu_ram_sel_4_d2 };
  assign fangyuan5_T = {  accu_ram_sel_4_d2_T , accu_ram_sel_4_d2_T , accu_ram_sel_4_d2_T , accu_ram_sel_4_d2_T , accu_ram_sel_4_d2_T , accu_ram_sel_4_d2_T , accu_ram_sel_4_d2_T , accu_ram_sel_4_d2_T , accu_ram_sel_4_d2_T , accu_ram_sel_4_d2_T , accu_ram_sel_4_d2_T , accu_ram_sel_4_d2_T , accu_ram_sel_4_d2_T , accu_ram_sel_4_d2_T , accu_ram_sel_4_d2_T , accu_ram_sel_4_d2_T  };
  logic [13:0] fangyuan5_S ;
  assign fangyuan5_S = 0 ;
  logic [0:0] accu_ram_sel_4_d2_R0 ;
  logic [0:0] accu_ram_sel_4_d2_X0 ;
  logic [0:0] accu_ram_sel_4_d2_C0 ;
  assign accu_ram_sel_4_d2_R0 = fangyuan5_R [15:15] ;
  assign accu_ram_sel_4_d2_X0 = fangyuan5_X [15:15] ;
  assign accu_ram_sel_4_d2_C0 = fangyuan5_C [15:15] ;
  logic [0:0] accu_ram_sel_4_d2_R1 ;
  logic [0:0] accu_ram_sel_4_d2_X1 ;
  logic [0:0] accu_ram_sel_4_d2_C1 ;
  assign accu_ram_sel_4_d2_R1 = fangyuan5_R [14:14] ;
  assign accu_ram_sel_4_d2_X1 = fangyuan5_X [14:14] ;
  assign accu_ram_sel_4_d2_C1 = fangyuan5_C [14:14] ;
  logic [0:0] accu_ram_sel_4_d2_R2 ;
  logic [0:0] accu_ram_sel_4_d2_X2 ;
  logic [0:0] accu_ram_sel_4_d2_C2 ;
  assign accu_ram_sel_4_d2_R2 = fangyuan5_R [13:13] ;
  assign accu_ram_sel_4_d2_X2 = fangyuan5_X [13:13] ;
  assign accu_ram_sel_4_d2_C2 = fangyuan5_C [13:13] ;
  logic [0:0] accu_ram_sel_4_d2_R3 ;
  logic [0:0] accu_ram_sel_4_d2_X3 ;
  logic [0:0] accu_ram_sel_4_d2_C3 ;
  assign accu_ram_sel_4_d2_R3 = fangyuan5_R [12:12] ;
  assign accu_ram_sel_4_d2_X3 = fangyuan5_X [12:12] ;
  assign accu_ram_sel_4_d2_C3 = fangyuan5_C [12:12] ;
  logic [0:0] accu_ram_sel_4_d2_R4 ;
  logic [0:0] accu_ram_sel_4_d2_X4 ;
  logic [0:0] accu_ram_sel_4_d2_C4 ;
  assign accu_ram_sel_4_d2_R4 = fangyuan5_R [11:11] ;
  assign accu_ram_sel_4_d2_X4 = fangyuan5_X [11:11] ;
  assign accu_ram_sel_4_d2_C4 = fangyuan5_C [11:11] ;
  logic [0:0] accu_ram_sel_4_d2_R5 ;
  logic [0:0] accu_ram_sel_4_d2_X5 ;
  logic [0:0] accu_ram_sel_4_d2_C5 ;
  assign accu_ram_sel_4_d2_R5 = fangyuan5_R [10:10] ;
  assign accu_ram_sel_4_d2_X5 = fangyuan5_X [10:10] ;
  assign accu_ram_sel_4_d2_C5 = fangyuan5_C [10:10] ;
  logic [0:0] accu_ram_sel_4_d2_R6 ;
  logic [0:0] accu_ram_sel_4_d2_X6 ;
  logic [0:0] accu_ram_sel_4_d2_C6 ;
  assign accu_ram_sel_4_d2_R6 = fangyuan5_R [9:9] ;
  assign accu_ram_sel_4_d2_X6 = fangyuan5_X [9:9] ;
  assign accu_ram_sel_4_d2_C6 = fangyuan5_C [9:9] ;
  logic [0:0] accu_ram_sel_4_d2_R7 ;
  logic [0:0] accu_ram_sel_4_d2_X7 ;
  logic [0:0] accu_ram_sel_4_d2_C7 ;
  assign accu_ram_sel_4_d2_R7 = fangyuan5_R [8:8] ;
  assign accu_ram_sel_4_d2_X7 = fangyuan5_X [8:8] ;
  assign accu_ram_sel_4_d2_C7 = fangyuan5_C [8:8] ;
  logic [0:0] accu_ram_sel_4_d2_R8 ;
  logic [0:0] accu_ram_sel_4_d2_X8 ;
  logic [0:0] accu_ram_sel_4_d2_C8 ;
  assign accu_ram_sel_4_d2_R8 = fangyuan5_R [7:7] ;
  assign accu_ram_sel_4_d2_X8 = fangyuan5_X [7:7] ;
  assign accu_ram_sel_4_d2_C8 = fangyuan5_C [7:7] ;
  logic [0:0] accu_ram_sel_4_d2_R9 ;
  logic [0:0] accu_ram_sel_4_d2_X9 ;
  logic [0:0] accu_ram_sel_4_d2_C9 ;
  assign accu_ram_sel_4_d2_R9 = fangyuan5_R [6:6] ;
  assign accu_ram_sel_4_d2_X9 = fangyuan5_X [6:6] ;
  assign accu_ram_sel_4_d2_C9 = fangyuan5_C [6:6] ;
  logic [0:0] accu_ram_sel_4_d2_R10 ;
  logic [0:0] accu_ram_sel_4_d2_X10 ;
  logic [0:0] accu_ram_sel_4_d2_C10 ;
  assign accu_ram_sel_4_d2_R10 = fangyuan5_R [5:5] ;
  assign accu_ram_sel_4_d2_X10 = fangyuan5_X [5:5] ;
  assign accu_ram_sel_4_d2_C10 = fangyuan5_C [5:5] ;
  logic [0:0] accu_ram_sel_4_d2_R11 ;
  logic [0:0] accu_ram_sel_4_d2_X11 ;
  logic [0:0] accu_ram_sel_4_d2_C11 ;
  assign accu_ram_sel_4_d2_R11 = fangyuan5_R [4:4] ;
  assign accu_ram_sel_4_d2_X11 = fangyuan5_X [4:4] ;
  assign accu_ram_sel_4_d2_C11 = fangyuan5_C [4:4] ;
  logic [0:0] accu_ram_sel_4_d2_R12 ;
  logic [0:0] accu_ram_sel_4_d2_X12 ;
  logic [0:0] accu_ram_sel_4_d2_C12 ;
  assign accu_ram_sel_4_d2_R12 = fangyuan5_R [3:3] ;
  assign accu_ram_sel_4_d2_X12 = fangyuan5_X [3:3] ;
  assign accu_ram_sel_4_d2_C12 = fangyuan5_C [3:3] ;
  logic [0:0] accu_ram_sel_4_d2_R13 ;
  logic [0:0] accu_ram_sel_4_d2_X13 ;
  logic [0:0] accu_ram_sel_4_d2_C13 ;
  assign accu_ram_sel_4_d2_R13 = fangyuan5_R [2:2] ;
  assign accu_ram_sel_4_d2_X13 = fangyuan5_X [2:2] ;
  assign accu_ram_sel_4_d2_C13 = fangyuan5_C [2:2] ;
  logic [0:0] accu_ram_sel_4_d2_R14 ;
  logic [0:0] accu_ram_sel_4_d2_X14 ;
  logic [0:0] accu_ram_sel_4_d2_C14 ;
  assign accu_ram_sel_4_d2_R14 = fangyuan5_R [1:1] ;
  assign accu_ram_sel_4_d2_X14 = fangyuan5_X [1:1] ;
  assign accu_ram_sel_4_d2_C14 = fangyuan5_C [1:1] ;
  logic [0:0] accu_ram_sel_4_d2_R15 ;
  logic [0:0] accu_ram_sel_4_d2_X15 ;
  logic [0:0] accu_ram_sel_4_d2_C15 ;
  assign accu_ram_sel_4_d2_R15 = fangyuan5_R [0:0] ;
  assign accu_ram_sel_4_d2_X15 = fangyuan5_X [0:0] ;
  assign accu_ram_sel_4_d2_C15 = fangyuan5_C [0:0] ;

  assign _015_ = accu_ctrl_valid_d2 ? fangyuan5 : accu_ctrl_ram_sel_4;
  logic [0:0] accu_ctrl_valid_d2_C5 ;
  logic [0:0] accu_ctrl_valid_d2_R5 ;
  logic [0:0] accu_ctrl_valid_d2_X5 ;
  assign accu_ctrl_valid_d2_C5 = | _015__C ;
  assign accu_ctrl_valid_d2_X5 = | _015__X ;
  assign _015__T = accu_ctrl_valid_d2 ? ( { 16{ accu_ctrl_valid_d2_T  }} | fangyuan5_T ) : ( { 16{ accu_ctrl_valid_d2_T  }} | accu_ctrl_ram_sel_4_T );
  assign _015__S = accu_ctrl_valid_d2 ? fangyuan5_S : accu_ctrl_ram_sel_4_S ;
  assign accu_ctrl_valid_d2_R5 = ( | (_015__R | ( _015__C & ( { 16{ accu_ctrl_valid_d2 }} & fangyuan5_T | { 16{ !accu_ctrl_valid_d2 }} & accu_ctrl_ram_sel_4_T )))) && fangyuan5 != accu_ctrl_ram_sel_4 ;
  logic [15:0] fangyuan5_C0 ;
  logic [15:0] fangyuan5_R0 ;
  logic [15:0] fangyuan5_X0 ;
  assign fangyuan5_C0 = { 16{ accu_ctrl_valid_d2 }} ;
  assign fangyuan5_R0 = { 16{ accu_ctrl_valid_d2 }} & ( _015__R | ( { 16{ accu_ctrl_valid_d2_T  }} & _015__C ));
  assign fangyuan5_X0 = { 16{ accu_ctrl_valid_d2 }} & _015__X ;
  logic [15:0] accu_ctrl_ram_sel_4_C0 ;
  logic [15:0] accu_ctrl_ram_sel_4_R0 ;
  logic [15:0] accu_ctrl_ram_sel_4_X0 ;
  assign accu_ctrl_ram_sel_4_C0 = { 16{ !accu_ctrl_valid_d2 }} ;
  assign accu_ctrl_ram_sel_4_R0 = { 16{ !accu_ctrl_valid_d2 }} & ( _015__R | ( { 16{ accu_ctrl_valid_d2_T  }} & _015__C ));
  assign accu_ctrl_ram_sel_4_X0 = { 16{ !accu_ctrl_valid_d2 }} & _015__X ;
  logic [15:0] fangyuan6;
  logic [15:0] fangyuan6_T ;
  logic [15:0] fangyuan6_R ;
  logic [15:0] fangyuan6_C ;
  logic [15:0] fangyuan6_X ;
  assign fangyuan6 = { accu_ram_sel_3_d2, accu_ram_sel_3_d2, accu_ram_sel_3_d2, accu_ram_sel_3_d2, accu_ram_sel_3_d2, accu_ram_sel_3_d2, accu_ram_sel_3_d2, accu_ram_sel_3_d2, accu_ram_sel_3_d2, accu_ram_sel_3_d2, accu_ram_sel_3_d2, accu_ram_sel_3_d2, accu_ram_sel_3_d2, accu_ram_sel_3_d2, accu_ram_sel_3_d2, accu_ram_sel_3_d2 };
  assign fangyuan6_T = {  accu_ram_sel_3_d2_T , accu_ram_sel_3_d2_T , accu_ram_sel_3_d2_T , accu_ram_sel_3_d2_T , accu_ram_sel_3_d2_T , accu_ram_sel_3_d2_T , accu_ram_sel_3_d2_T , accu_ram_sel_3_d2_T , accu_ram_sel_3_d2_T , accu_ram_sel_3_d2_T , accu_ram_sel_3_d2_T , accu_ram_sel_3_d2_T , accu_ram_sel_3_d2_T , accu_ram_sel_3_d2_T , accu_ram_sel_3_d2_T , accu_ram_sel_3_d2_T  };
  logic [13:0] fangyuan6_S ;
  assign fangyuan6_S = 0 ;
  logic [0:0] accu_ram_sel_3_d2_R0 ;
  logic [0:0] accu_ram_sel_3_d2_X0 ;
  logic [0:0] accu_ram_sel_3_d2_C0 ;
  assign accu_ram_sel_3_d2_R0 = fangyuan6_R [15:15] ;
  assign accu_ram_sel_3_d2_X0 = fangyuan6_X [15:15] ;
  assign accu_ram_sel_3_d2_C0 = fangyuan6_C [15:15] ;
  logic [0:0] accu_ram_sel_3_d2_R1 ;
  logic [0:0] accu_ram_sel_3_d2_X1 ;
  logic [0:0] accu_ram_sel_3_d2_C1 ;
  assign accu_ram_sel_3_d2_R1 = fangyuan6_R [14:14] ;
  assign accu_ram_sel_3_d2_X1 = fangyuan6_X [14:14] ;
  assign accu_ram_sel_3_d2_C1 = fangyuan6_C [14:14] ;
  logic [0:0] accu_ram_sel_3_d2_R2 ;
  logic [0:0] accu_ram_sel_3_d2_X2 ;
  logic [0:0] accu_ram_sel_3_d2_C2 ;
  assign accu_ram_sel_3_d2_R2 = fangyuan6_R [13:13] ;
  assign accu_ram_sel_3_d2_X2 = fangyuan6_X [13:13] ;
  assign accu_ram_sel_3_d2_C2 = fangyuan6_C [13:13] ;
  logic [0:0] accu_ram_sel_3_d2_R3 ;
  logic [0:0] accu_ram_sel_3_d2_X3 ;
  logic [0:0] accu_ram_sel_3_d2_C3 ;
  assign accu_ram_sel_3_d2_R3 = fangyuan6_R [12:12] ;
  assign accu_ram_sel_3_d2_X3 = fangyuan6_X [12:12] ;
  assign accu_ram_sel_3_d2_C3 = fangyuan6_C [12:12] ;
  logic [0:0] accu_ram_sel_3_d2_R4 ;
  logic [0:0] accu_ram_sel_3_d2_X4 ;
  logic [0:0] accu_ram_sel_3_d2_C4 ;
  assign accu_ram_sel_3_d2_R4 = fangyuan6_R [11:11] ;
  assign accu_ram_sel_3_d2_X4 = fangyuan6_X [11:11] ;
  assign accu_ram_sel_3_d2_C4 = fangyuan6_C [11:11] ;
  logic [0:0] accu_ram_sel_3_d2_R5 ;
  logic [0:0] accu_ram_sel_3_d2_X5 ;
  logic [0:0] accu_ram_sel_3_d2_C5 ;
  assign accu_ram_sel_3_d2_R5 = fangyuan6_R [10:10] ;
  assign accu_ram_sel_3_d2_X5 = fangyuan6_X [10:10] ;
  assign accu_ram_sel_3_d2_C5 = fangyuan6_C [10:10] ;
  logic [0:0] accu_ram_sel_3_d2_R6 ;
  logic [0:0] accu_ram_sel_3_d2_X6 ;
  logic [0:0] accu_ram_sel_3_d2_C6 ;
  assign accu_ram_sel_3_d2_R6 = fangyuan6_R [9:9] ;
  assign accu_ram_sel_3_d2_X6 = fangyuan6_X [9:9] ;
  assign accu_ram_sel_3_d2_C6 = fangyuan6_C [9:9] ;
  logic [0:0] accu_ram_sel_3_d2_R7 ;
  logic [0:0] accu_ram_sel_3_d2_X7 ;
  logic [0:0] accu_ram_sel_3_d2_C7 ;
  assign accu_ram_sel_3_d2_R7 = fangyuan6_R [8:8] ;
  assign accu_ram_sel_3_d2_X7 = fangyuan6_X [8:8] ;
  assign accu_ram_sel_3_d2_C7 = fangyuan6_C [8:8] ;
  logic [0:0] accu_ram_sel_3_d2_R8 ;
  logic [0:0] accu_ram_sel_3_d2_X8 ;
  logic [0:0] accu_ram_sel_3_d2_C8 ;
  assign accu_ram_sel_3_d2_R8 = fangyuan6_R [7:7] ;
  assign accu_ram_sel_3_d2_X8 = fangyuan6_X [7:7] ;
  assign accu_ram_sel_3_d2_C8 = fangyuan6_C [7:7] ;
  logic [0:0] accu_ram_sel_3_d2_R9 ;
  logic [0:0] accu_ram_sel_3_d2_X9 ;
  logic [0:0] accu_ram_sel_3_d2_C9 ;
  assign accu_ram_sel_3_d2_R9 = fangyuan6_R [6:6] ;
  assign accu_ram_sel_3_d2_X9 = fangyuan6_X [6:6] ;
  assign accu_ram_sel_3_d2_C9 = fangyuan6_C [6:6] ;
  logic [0:0] accu_ram_sel_3_d2_R10 ;
  logic [0:0] accu_ram_sel_3_d2_X10 ;
  logic [0:0] accu_ram_sel_3_d2_C10 ;
  assign accu_ram_sel_3_d2_R10 = fangyuan6_R [5:5] ;
  assign accu_ram_sel_3_d2_X10 = fangyuan6_X [5:5] ;
  assign accu_ram_sel_3_d2_C10 = fangyuan6_C [5:5] ;
  logic [0:0] accu_ram_sel_3_d2_R11 ;
  logic [0:0] accu_ram_sel_3_d2_X11 ;
  logic [0:0] accu_ram_sel_3_d2_C11 ;
  assign accu_ram_sel_3_d2_R11 = fangyuan6_R [4:4] ;
  assign accu_ram_sel_3_d2_X11 = fangyuan6_X [4:4] ;
  assign accu_ram_sel_3_d2_C11 = fangyuan6_C [4:4] ;
  logic [0:0] accu_ram_sel_3_d2_R12 ;
  logic [0:0] accu_ram_sel_3_d2_X12 ;
  logic [0:0] accu_ram_sel_3_d2_C12 ;
  assign accu_ram_sel_3_d2_R12 = fangyuan6_R [3:3] ;
  assign accu_ram_sel_3_d2_X12 = fangyuan6_X [3:3] ;
  assign accu_ram_sel_3_d2_C12 = fangyuan6_C [3:3] ;
  logic [0:0] accu_ram_sel_3_d2_R13 ;
  logic [0:0] accu_ram_sel_3_d2_X13 ;
  logic [0:0] accu_ram_sel_3_d2_C13 ;
  assign accu_ram_sel_3_d2_R13 = fangyuan6_R [2:2] ;
  assign accu_ram_sel_3_d2_X13 = fangyuan6_X [2:2] ;
  assign accu_ram_sel_3_d2_C13 = fangyuan6_C [2:2] ;
  logic [0:0] accu_ram_sel_3_d2_R14 ;
  logic [0:0] accu_ram_sel_3_d2_X14 ;
  logic [0:0] accu_ram_sel_3_d2_C14 ;
  assign accu_ram_sel_3_d2_R14 = fangyuan6_R [1:1] ;
  assign accu_ram_sel_3_d2_X14 = fangyuan6_X [1:1] ;
  assign accu_ram_sel_3_d2_C14 = fangyuan6_C [1:1] ;
  logic [0:0] accu_ram_sel_3_d2_R15 ;
  logic [0:0] accu_ram_sel_3_d2_X15 ;
  logic [0:0] accu_ram_sel_3_d2_C15 ;
  assign accu_ram_sel_3_d2_R15 = fangyuan6_R [0:0] ;
  assign accu_ram_sel_3_d2_X15 = fangyuan6_X [0:0] ;
  assign accu_ram_sel_3_d2_C15 = fangyuan6_C [0:0] ;

  assign _014_ = accu_ctrl_valid_d2 ? fangyuan6 : accu_ctrl_ram_sel_3;
  logic [0:0] accu_ctrl_valid_d2_C6 ;
  logic [0:0] accu_ctrl_valid_d2_R6 ;
  logic [0:0] accu_ctrl_valid_d2_X6 ;
  assign accu_ctrl_valid_d2_C6 = | _014__C ;
  assign accu_ctrl_valid_d2_X6 = | _014__X ;
  assign _014__T = accu_ctrl_valid_d2 ? ( { 16{ accu_ctrl_valid_d2_T  }} | fangyuan6_T ) : ( { 16{ accu_ctrl_valid_d2_T  }} | accu_ctrl_ram_sel_3_T );
  assign _014__S = accu_ctrl_valid_d2 ? fangyuan6_S : accu_ctrl_ram_sel_3_S ;
  assign accu_ctrl_valid_d2_R6 = ( | (_014__R | ( _014__C & ( { 16{ accu_ctrl_valid_d2 }} & fangyuan6_T | { 16{ !accu_ctrl_valid_d2 }} & accu_ctrl_ram_sel_3_T )))) && fangyuan6 != accu_ctrl_ram_sel_3 ;
  logic [15:0] fangyuan6_C0 ;
  logic [15:0] fangyuan6_R0 ;
  logic [15:0] fangyuan6_X0 ;
  assign fangyuan6_C0 = { 16{ accu_ctrl_valid_d2 }} ;
  assign fangyuan6_R0 = { 16{ accu_ctrl_valid_d2 }} & ( _014__R | ( { 16{ accu_ctrl_valid_d2_T  }} & _014__C ));
  assign fangyuan6_X0 = { 16{ accu_ctrl_valid_d2 }} & _014__X ;
  logic [15:0] accu_ctrl_ram_sel_3_C0 ;
  logic [15:0] accu_ctrl_ram_sel_3_R0 ;
  logic [15:0] accu_ctrl_ram_sel_3_X0 ;
  assign accu_ctrl_ram_sel_3_C0 = { 16{ !accu_ctrl_valid_d2 }} ;
  assign accu_ctrl_ram_sel_3_R0 = { 16{ !accu_ctrl_valid_d2 }} & ( _014__R | ( { 16{ accu_ctrl_valid_d2_T  }} & _014__C ));
  assign accu_ctrl_ram_sel_3_X0 = { 16{ !accu_ctrl_valid_d2 }} & _014__X ;
  logic [15:0] fangyuan7;
  logic [15:0] fangyuan7_T ;
  logic [15:0] fangyuan7_R ;
  logic [15:0] fangyuan7_C ;
  logic [15:0] fangyuan7_X ;
  assign fangyuan7 = { accu_ram_sel_2_d2, accu_ram_sel_2_d2, accu_ram_sel_2_d2, accu_ram_sel_2_d2, accu_ram_sel_2_d2, accu_ram_sel_2_d2, accu_ram_sel_2_d2, accu_ram_sel_2_d2, accu_ram_sel_2_d2, accu_ram_sel_2_d2, accu_ram_sel_2_d2, accu_ram_sel_2_d2, accu_ram_sel_2_d2, accu_ram_sel_2_d2, accu_ram_sel_2_d2, accu_ram_sel_2_d2 };
  assign fangyuan7_T = {  accu_ram_sel_2_d2_T , accu_ram_sel_2_d2_T , accu_ram_sel_2_d2_T , accu_ram_sel_2_d2_T , accu_ram_sel_2_d2_T , accu_ram_sel_2_d2_T , accu_ram_sel_2_d2_T , accu_ram_sel_2_d2_T , accu_ram_sel_2_d2_T , accu_ram_sel_2_d2_T , accu_ram_sel_2_d2_T , accu_ram_sel_2_d2_T , accu_ram_sel_2_d2_T , accu_ram_sel_2_d2_T , accu_ram_sel_2_d2_T , accu_ram_sel_2_d2_T  };
  logic [13:0] fangyuan7_S ;
  assign fangyuan7_S = 0 ;
  logic [0:0] accu_ram_sel_2_d2_R0 ;
  logic [0:0] accu_ram_sel_2_d2_X0 ;
  logic [0:0] accu_ram_sel_2_d2_C0 ;
  assign accu_ram_sel_2_d2_R0 = fangyuan7_R [15:15] ;
  assign accu_ram_sel_2_d2_X0 = fangyuan7_X [15:15] ;
  assign accu_ram_sel_2_d2_C0 = fangyuan7_C [15:15] ;
  logic [0:0] accu_ram_sel_2_d2_R1 ;
  logic [0:0] accu_ram_sel_2_d2_X1 ;
  logic [0:0] accu_ram_sel_2_d2_C1 ;
  assign accu_ram_sel_2_d2_R1 = fangyuan7_R [14:14] ;
  assign accu_ram_sel_2_d2_X1 = fangyuan7_X [14:14] ;
  assign accu_ram_sel_2_d2_C1 = fangyuan7_C [14:14] ;
  logic [0:0] accu_ram_sel_2_d2_R2 ;
  logic [0:0] accu_ram_sel_2_d2_X2 ;
  logic [0:0] accu_ram_sel_2_d2_C2 ;
  assign accu_ram_sel_2_d2_R2 = fangyuan7_R [13:13] ;
  assign accu_ram_sel_2_d2_X2 = fangyuan7_X [13:13] ;
  assign accu_ram_sel_2_d2_C2 = fangyuan7_C [13:13] ;
  logic [0:0] accu_ram_sel_2_d2_R3 ;
  logic [0:0] accu_ram_sel_2_d2_X3 ;
  logic [0:0] accu_ram_sel_2_d2_C3 ;
  assign accu_ram_sel_2_d2_R3 = fangyuan7_R [12:12] ;
  assign accu_ram_sel_2_d2_X3 = fangyuan7_X [12:12] ;
  assign accu_ram_sel_2_d2_C3 = fangyuan7_C [12:12] ;
  logic [0:0] accu_ram_sel_2_d2_R4 ;
  logic [0:0] accu_ram_sel_2_d2_X4 ;
  logic [0:0] accu_ram_sel_2_d2_C4 ;
  assign accu_ram_sel_2_d2_R4 = fangyuan7_R [11:11] ;
  assign accu_ram_sel_2_d2_X4 = fangyuan7_X [11:11] ;
  assign accu_ram_sel_2_d2_C4 = fangyuan7_C [11:11] ;
  logic [0:0] accu_ram_sel_2_d2_R5 ;
  logic [0:0] accu_ram_sel_2_d2_X5 ;
  logic [0:0] accu_ram_sel_2_d2_C5 ;
  assign accu_ram_sel_2_d2_R5 = fangyuan7_R [10:10] ;
  assign accu_ram_sel_2_d2_X5 = fangyuan7_X [10:10] ;
  assign accu_ram_sel_2_d2_C5 = fangyuan7_C [10:10] ;
  logic [0:0] accu_ram_sel_2_d2_R6 ;
  logic [0:0] accu_ram_sel_2_d2_X6 ;
  logic [0:0] accu_ram_sel_2_d2_C6 ;
  assign accu_ram_sel_2_d2_R6 = fangyuan7_R [9:9] ;
  assign accu_ram_sel_2_d2_X6 = fangyuan7_X [9:9] ;
  assign accu_ram_sel_2_d2_C6 = fangyuan7_C [9:9] ;
  logic [0:0] accu_ram_sel_2_d2_R7 ;
  logic [0:0] accu_ram_sel_2_d2_X7 ;
  logic [0:0] accu_ram_sel_2_d2_C7 ;
  assign accu_ram_sel_2_d2_R7 = fangyuan7_R [8:8] ;
  assign accu_ram_sel_2_d2_X7 = fangyuan7_X [8:8] ;
  assign accu_ram_sel_2_d2_C7 = fangyuan7_C [8:8] ;
  logic [0:0] accu_ram_sel_2_d2_R8 ;
  logic [0:0] accu_ram_sel_2_d2_X8 ;
  logic [0:0] accu_ram_sel_2_d2_C8 ;
  assign accu_ram_sel_2_d2_R8 = fangyuan7_R [7:7] ;
  assign accu_ram_sel_2_d2_X8 = fangyuan7_X [7:7] ;
  assign accu_ram_sel_2_d2_C8 = fangyuan7_C [7:7] ;
  logic [0:0] accu_ram_sel_2_d2_R9 ;
  logic [0:0] accu_ram_sel_2_d2_X9 ;
  logic [0:0] accu_ram_sel_2_d2_C9 ;
  assign accu_ram_sel_2_d2_R9 = fangyuan7_R [6:6] ;
  assign accu_ram_sel_2_d2_X9 = fangyuan7_X [6:6] ;
  assign accu_ram_sel_2_d2_C9 = fangyuan7_C [6:6] ;
  logic [0:0] accu_ram_sel_2_d2_R10 ;
  logic [0:0] accu_ram_sel_2_d2_X10 ;
  logic [0:0] accu_ram_sel_2_d2_C10 ;
  assign accu_ram_sel_2_d2_R10 = fangyuan7_R [5:5] ;
  assign accu_ram_sel_2_d2_X10 = fangyuan7_X [5:5] ;
  assign accu_ram_sel_2_d2_C10 = fangyuan7_C [5:5] ;
  logic [0:0] accu_ram_sel_2_d2_R11 ;
  logic [0:0] accu_ram_sel_2_d2_X11 ;
  logic [0:0] accu_ram_sel_2_d2_C11 ;
  assign accu_ram_sel_2_d2_R11 = fangyuan7_R [4:4] ;
  assign accu_ram_sel_2_d2_X11 = fangyuan7_X [4:4] ;
  assign accu_ram_sel_2_d2_C11 = fangyuan7_C [4:4] ;
  logic [0:0] accu_ram_sel_2_d2_R12 ;
  logic [0:0] accu_ram_sel_2_d2_X12 ;
  logic [0:0] accu_ram_sel_2_d2_C12 ;
  assign accu_ram_sel_2_d2_R12 = fangyuan7_R [3:3] ;
  assign accu_ram_sel_2_d2_X12 = fangyuan7_X [3:3] ;
  assign accu_ram_sel_2_d2_C12 = fangyuan7_C [3:3] ;
  logic [0:0] accu_ram_sel_2_d2_R13 ;
  logic [0:0] accu_ram_sel_2_d2_X13 ;
  logic [0:0] accu_ram_sel_2_d2_C13 ;
  assign accu_ram_sel_2_d2_R13 = fangyuan7_R [2:2] ;
  assign accu_ram_sel_2_d2_X13 = fangyuan7_X [2:2] ;
  assign accu_ram_sel_2_d2_C13 = fangyuan7_C [2:2] ;
  logic [0:0] accu_ram_sel_2_d2_R14 ;
  logic [0:0] accu_ram_sel_2_d2_X14 ;
  logic [0:0] accu_ram_sel_2_d2_C14 ;
  assign accu_ram_sel_2_d2_R14 = fangyuan7_R [1:1] ;
  assign accu_ram_sel_2_d2_X14 = fangyuan7_X [1:1] ;
  assign accu_ram_sel_2_d2_C14 = fangyuan7_C [1:1] ;
  logic [0:0] accu_ram_sel_2_d2_R15 ;
  logic [0:0] accu_ram_sel_2_d2_X15 ;
  logic [0:0] accu_ram_sel_2_d2_C15 ;
  assign accu_ram_sel_2_d2_R15 = fangyuan7_R [0:0] ;
  assign accu_ram_sel_2_d2_X15 = fangyuan7_X [0:0] ;
  assign accu_ram_sel_2_d2_C15 = fangyuan7_C [0:0] ;

  assign _013_ = accu_ctrl_valid_d2 ? fangyuan7 : accu_ctrl_ram_sel_2;
  logic [0:0] accu_ctrl_valid_d2_C7 ;
  logic [0:0] accu_ctrl_valid_d2_R7 ;
  logic [0:0] accu_ctrl_valid_d2_X7 ;
  assign accu_ctrl_valid_d2_C7 = | _013__C ;
  assign accu_ctrl_valid_d2_X7 = | _013__X ;
  assign _013__T = accu_ctrl_valid_d2 ? ( { 16{ accu_ctrl_valid_d2_T  }} | fangyuan7_T ) : ( { 16{ accu_ctrl_valid_d2_T  }} | accu_ctrl_ram_sel_2_T );
  assign _013__S = accu_ctrl_valid_d2 ? fangyuan7_S : accu_ctrl_ram_sel_2_S ;
  assign accu_ctrl_valid_d2_R7 = ( | (_013__R | ( _013__C & ( { 16{ accu_ctrl_valid_d2 }} & fangyuan7_T | { 16{ !accu_ctrl_valid_d2 }} & accu_ctrl_ram_sel_2_T )))) && fangyuan7 != accu_ctrl_ram_sel_2 ;
  logic [15:0] fangyuan7_C0 ;
  logic [15:0] fangyuan7_R0 ;
  logic [15:0] fangyuan7_X0 ;
  assign fangyuan7_C0 = { 16{ accu_ctrl_valid_d2 }} ;
  assign fangyuan7_R0 = { 16{ accu_ctrl_valid_d2 }} & ( _013__R | ( { 16{ accu_ctrl_valid_d2_T  }} & _013__C ));
  assign fangyuan7_X0 = { 16{ accu_ctrl_valid_d2 }} & _013__X ;
  logic [15:0] accu_ctrl_ram_sel_2_C0 ;
  logic [15:0] accu_ctrl_ram_sel_2_R0 ;
  logic [15:0] accu_ctrl_ram_sel_2_X0 ;
  assign accu_ctrl_ram_sel_2_C0 = { 16{ !accu_ctrl_valid_d2 }} ;
  assign accu_ctrl_ram_sel_2_R0 = { 16{ !accu_ctrl_valid_d2 }} & ( _013__R | ( { 16{ accu_ctrl_valid_d2_T  }} & _013__C ));
  assign accu_ctrl_ram_sel_2_X0 = { 16{ !accu_ctrl_valid_d2 }} & _013__X ;
  logic [15:0] fangyuan8;
  logic [15:0] fangyuan8_T ;
  logic [15:0] fangyuan8_R ;
  logic [15:0] fangyuan8_C ;
  logic [15:0] fangyuan8_X ;
  assign fangyuan8 = { accu_ram_sel_1_d2, accu_ram_sel_1_d2, accu_ram_sel_1_d2, accu_ram_sel_1_d2, accu_ram_sel_1_d2, accu_ram_sel_1_d2, accu_ram_sel_1_d2, accu_ram_sel_1_d2, accu_ram_sel_1_d2, accu_ram_sel_1_d2, accu_ram_sel_1_d2, accu_ram_sel_1_d2, accu_ram_sel_1_d2, accu_ram_sel_1_d2, accu_ram_sel_1_d2, accu_ram_sel_1_d2 };
  assign fangyuan8_T = {  accu_ram_sel_1_d2_T , accu_ram_sel_1_d2_T , accu_ram_sel_1_d2_T , accu_ram_sel_1_d2_T , accu_ram_sel_1_d2_T , accu_ram_sel_1_d2_T , accu_ram_sel_1_d2_T , accu_ram_sel_1_d2_T , accu_ram_sel_1_d2_T , accu_ram_sel_1_d2_T , accu_ram_sel_1_d2_T , accu_ram_sel_1_d2_T , accu_ram_sel_1_d2_T , accu_ram_sel_1_d2_T , accu_ram_sel_1_d2_T , accu_ram_sel_1_d2_T  };
  logic [13:0] fangyuan8_S ;
  assign fangyuan8_S = 0 ;
  logic [0:0] accu_ram_sel_1_d2_R0 ;
  logic [0:0] accu_ram_sel_1_d2_X0 ;
  logic [0:0] accu_ram_sel_1_d2_C0 ;
  assign accu_ram_sel_1_d2_R0 = fangyuan8_R [15:15] ;
  assign accu_ram_sel_1_d2_X0 = fangyuan8_X [15:15] ;
  assign accu_ram_sel_1_d2_C0 = fangyuan8_C [15:15] ;
  logic [0:0] accu_ram_sel_1_d2_R1 ;
  logic [0:0] accu_ram_sel_1_d2_X1 ;
  logic [0:0] accu_ram_sel_1_d2_C1 ;
  assign accu_ram_sel_1_d2_R1 = fangyuan8_R [14:14] ;
  assign accu_ram_sel_1_d2_X1 = fangyuan8_X [14:14] ;
  assign accu_ram_sel_1_d2_C1 = fangyuan8_C [14:14] ;
  logic [0:0] accu_ram_sel_1_d2_R2 ;
  logic [0:0] accu_ram_sel_1_d2_X2 ;
  logic [0:0] accu_ram_sel_1_d2_C2 ;
  assign accu_ram_sel_1_d2_R2 = fangyuan8_R [13:13] ;
  assign accu_ram_sel_1_d2_X2 = fangyuan8_X [13:13] ;
  assign accu_ram_sel_1_d2_C2 = fangyuan8_C [13:13] ;
  logic [0:0] accu_ram_sel_1_d2_R3 ;
  logic [0:0] accu_ram_sel_1_d2_X3 ;
  logic [0:0] accu_ram_sel_1_d2_C3 ;
  assign accu_ram_sel_1_d2_R3 = fangyuan8_R [12:12] ;
  assign accu_ram_sel_1_d2_X3 = fangyuan8_X [12:12] ;
  assign accu_ram_sel_1_d2_C3 = fangyuan8_C [12:12] ;
  logic [0:0] accu_ram_sel_1_d2_R4 ;
  logic [0:0] accu_ram_sel_1_d2_X4 ;
  logic [0:0] accu_ram_sel_1_d2_C4 ;
  assign accu_ram_sel_1_d2_R4 = fangyuan8_R [11:11] ;
  assign accu_ram_sel_1_d2_X4 = fangyuan8_X [11:11] ;
  assign accu_ram_sel_1_d2_C4 = fangyuan8_C [11:11] ;
  logic [0:0] accu_ram_sel_1_d2_R5 ;
  logic [0:0] accu_ram_sel_1_d2_X5 ;
  logic [0:0] accu_ram_sel_1_d2_C5 ;
  assign accu_ram_sel_1_d2_R5 = fangyuan8_R [10:10] ;
  assign accu_ram_sel_1_d2_X5 = fangyuan8_X [10:10] ;
  assign accu_ram_sel_1_d2_C5 = fangyuan8_C [10:10] ;
  logic [0:0] accu_ram_sel_1_d2_R6 ;
  logic [0:0] accu_ram_sel_1_d2_X6 ;
  logic [0:0] accu_ram_sel_1_d2_C6 ;
  assign accu_ram_sel_1_d2_R6 = fangyuan8_R [9:9] ;
  assign accu_ram_sel_1_d2_X6 = fangyuan8_X [9:9] ;
  assign accu_ram_sel_1_d2_C6 = fangyuan8_C [9:9] ;
  logic [0:0] accu_ram_sel_1_d2_R7 ;
  logic [0:0] accu_ram_sel_1_d2_X7 ;
  logic [0:0] accu_ram_sel_1_d2_C7 ;
  assign accu_ram_sel_1_d2_R7 = fangyuan8_R [8:8] ;
  assign accu_ram_sel_1_d2_X7 = fangyuan8_X [8:8] ;
  assign accu_ram_sel_1_d2_C7 = fangyuan8_C [8:8] ;
  logic [0:0] accu_ram_sel_1_d2_R8 ;
  logic [0:0] accu_ram_sel_1_d2_X8 ;
  logic [0:0] accu_ram_sel_1_d2_C8 ;
  assign accu_ram_sel_1_d2_R8 = fangyuan8_R [7:7] ;
  assign accu_ram_sel_1_d2_X8 = fangyuan8_X [7:7] ;
  assign accu_ram_sel_1_d2_C8 = fangyuan8_C [7:7] ;
  logic [0:0] accu_ram_sel_1_d2_R9 ;
  logic [0:0] accu_ram_sel_1_d2_X9 ;
  logic [0:0] accu_ram_sel_1_d2_C9 ;
  assign accu_ram_sel_1_d2_R9 = fangyuan8_R [6:6] ;
  assign accu_ram_sel_1_d2_X9 = fangyuan8_X [6:6] ;
  assign accu_ram_sel_1_d2_C9 = fangyuan8_C [6:6] ;
  logic [0:0] accu_ram_sel_1_d2_R10 ;
  logic [0:0] accu_ram_sel_1_d2_X10 ;
  logic [0:0] accu_ram_sel_1_d2_C10 ;
  assign accu_ram_sel_1_d2_R10 = fangyuan8_R [5:5] ;
  assign accu_ram_sel_1_d2_X10 = fangyuan8_X [5:5] ;
  assign accu_ram_sel_1_d2_C10 = fangyuan8_C [5:5] ;
  logic [0:0] accu_ram_sel_1_d2_R11 ;
  logic [0:0] accu_ram_sel_1_d2_X11 ;
  logic [0:0] accu_ram_sel_1_d2_C11 ;
  assign accu_ram_sel_1_d2_R11 = fangyuan8_R [4:4] ;
  assign accu_ram_sel_1_d2_X11 = fangyuan8_X [4:4] ;
  assign accu_ram_sel_1_d2_C11 = fangyuan8_C [4:4] ;
  logic [0:0] accu_ram_sel_1_d2_R12 ;
  logic [0:0] accu_ram_sel_1_d2_X12 ;
  logic [0:0] accu_ram_sel_1_d2_C12 ;
  assign accu_ram_sel_1_d2_R12 = fangyuan8_R [3:3] ;
  assign accu_ram_sel_1_d2_X12 = fangyuan8_X [3:3] ;
  assign accu_ram_sel_1_d2_C12 = fangyuan8_C [3:3] ;
  logic [0:0] accu_ram_sel_1_d2_R13 ;
  logic [0:0] accu_ram_sel_1_d2_X13 ;
  logic [0:0] accu_ram_sel_1_d2_C13 ;
  assign accu_ram_sel_1_d2_R13 = fangyuan8_R [2:2] ;
  assign accu_ram_sel_1_d2_X13 = fangyuan8_X [2:2] ;
  assign accu_ram_sel_1_d2_C13 = fangyuan8_C [2:2] ;
  logic [0:0] accu_ram_sel_1_d2_R14 ;
  logic [0:0] accu_ram_sel_1_d2_X14 ;
  logic [0:0] accu_ram_sel_1_d2_C14 ;
  assign accu_ram_sel_1_d2_R14 = fangyuan8_R [1:1] ;
  assign accu_ram_sel_1_d2_X14 = fangyuan8_X [1:1] ;
  assign accu_ram_sel_1_d2_C14 = fangyuan8_C [1:1] ;
  logic [0:0] accu_ram_sel_1_d2_R15 ;
  logic [0:0] accu_ram_sel_1_d2_X15 ;
  logic [0:0] accu_ram_sel_1_d2_C15 ;
  assign accu_ram_sel_1_d2_R15 = fangyuan8_R [0:0] ;
  assign accu_ram_sel_1_d2_X15 = fangyuan8_X [0:0] ;
  assign accu_ram_sel_1_d2_C15 = fangyuan8_C [0:0] ;

  assign _012_ = accu_ctrl_valid_d2 ? fangyuan8 : accu_ctrl_ram_sel_1;
  logic [0:0] accu_ctrl_valid_d2_C8 ;
  logic [0:0] accu_ctrl_valid_d2_R8 ;
  logic [0:0] accu_ctrl_valid_d2_X8 ;
  assign accu_ctrl_valid_d2_C8 = | _012__C ;
  assign accu_ctrl_valid_d2_X8 = | _012__X ;
  assign _012__T = accu_ctrl_valid_d2 ? ( { 16{ accu_ctrl_valid_d2_T  }} | fangyuan8_T ) : ( { 16{ accu_ctrl_valid_d2_T  }} | accu_ctrl_ram_sel_1_T );
  assign _012__S = accu_ctrl_valid_d2 ? fangyuan8_S : accu_ctrl_ram_sel_1_S ;
  assign accu_ctrl_valid_d2_R8 = ( | (_012__R | ( _012__C & ( { 16{ accu_ctrl_valid_d2 }} & fangyuan8_T | { 16{ !accu_ctrl_valid_d2 }} & accu_ctrl_ram_sel_1_T )))) && fangyuan8 != accu_ctrl_ram_sel_1 ;
  logic [15:0] fangyuan8_C0 ;
  logic [15:0] fangyuan8_R0 ;
  logic [15:0] fangyuan8_X0 ;
  assign fangyuan8_C0 = { 16{ accu_ctrl_valid_d2 }} ;
  assign fangyuan8_R0 = { 16{ accu_ctrl_valid_d2 }} & ( _012__R | ( { 16{ accu_ctrl_valid_d2_T  }} & _012__C ));
  assign fangyuan8_X0 = { 16{ accu_ctrl_valid_d2 }} & _012__X ;
  logic [15:0] accu_ctrl_ram_sel_1_C0 ;
  logic [15:0] accu_ctrl_ram_sel_1_R0 ;
  logic [15:0] accu_ctrl_ram_sel_1_X0 ;
  assign accu_ctrl_ram_sel_1_C0 = { 16{ !accu_ctrl_valid_d2 }} ;
  assign accu_ctrl_ram_sel_1_R0 = { 16{ !accu_ctrl_valid_d2 }} & ( _012__R | ( { 16{ accu_ctrl_valid_d2_T  }} & _012__C ));
  assign accu_ctrl_ram_sel_1_X0 = { 16{ !accu_ctrl_valid_d2 }} & _012__X ;
  logic [15:0] fangyuan9;
  logic [15:0] fangyuan9_T ;
  logic [15:0] fangyuan9_R ;
  logic [15:0] fangyuan9_C ;
  logic [15:0] fangyuan9_X ;
  assign fangyuan9 = { accu_ram_sel_0_d2, accu_ram_sel_0_d2, accu_ram_sel_0_d2, accu_ram_sel_0_d2, accu_ram_sel_0_d2, accu_ram_sel_0_d2, accu_ram_sel_0_d2, accu_ram_sel_0_d2, accu_ram_sel_0_d2, accu_ram_sel_0_d2, accu_ram_sel_0_d2, accu_ram_sel_0_d2, accu_ram_sel_0_d2, accu_ram_sel_0_d2, accu_ram_sel_0_d2, accu_ram_sel_0_d2 };
  assign fangyuan9_T = {  accu_ram_sel_0_d2_T , accu_ram_sel_0_d2_T , accu_ram_sel_0_d2_T , accu_ram_sel_0_d2_T , accu_ram_sel_0_d2_T , accu_ram_sel_0_d2_T , accu_ram_sel_0_d2_T , accu_ram_sel_0_d2_T , accu_ram_sel_0_d2_T , accu_ram_sel_0_d2_T , accu_ram_sel_0_d2_T , accu_ram_sel_0_d2_T , accu_ram_sel_0_d2_T , accu_ram_sel_0_d2_T , accu_ram_sel_0_d2_T , accu_ram_sel_0_d2_T  };
  logic [13:0] fangyuan9_S ;
  assign fangyuan9_S = 0 ;
  logic [0:0] accu_ram_sel_0_d2_R0 ;
  logic [0:0] accu_ram_sel_0_d2_X0 ;
  logic [0:0] accu_ram_sel_0_d2_C0 ;
  assign accu_ram_sel_0_d2_R0 = fangyuan9_R [15:15] ;
  assign accu_ram_sel_0_d2_X0 = fangyuan9_X [15:15] ;
  assign accu_ram_sel_0_d2_C0 = fangyuan9_C [15:15] ;
  logic [0:0] accu_ram_sel_0_d2_R1 ;
  logic [0:0] accu_ram_sel_0_d2_X1 ;
  logic [0:0] accu_ram_sel_0_d2_C1 ;
  assign accu_ram_sel_0_d2_R1 = fangyuan9_R [14:14] ;
  assign accu_ram_sel_0_d2_X1 = fangyuan9_X [14:14] ;
  assign accu_ram_sel_0_d2_C1 = fangyuan9_C [14:14] ;
  logic [0:0] accu_ram_sel_0_d2_R2 ;
  logic [0:0] accu_ram_sel_0_d2_X2 ;
  logic [0:0] accu_ram_sel_0_d2_C2 ;
  assign accu_ram_sel_0_d2_R2 = fangyuan9_R [13:13] ;
  assign accu_ram_sel_0_d2_X2 = fangyuan9_X [13:13] ;
  assign accu_ram_sel_0_d2_C2 = fangyuan9_C [13:13] ;
  logic [0:0] accu_ram_sel_0_d2_R3 ;
  logic [0:0] accu_ram_sel_0_d2_X3 ;
  logic [0:0] accu_ram_sel_0_d2_C3 ;
  assign accu_ram_sel_0_d2_R3 = fangyuan9_R [12:12] ;
  assign accu_ram_sel_0_d2_X3 = fangyuan9_X [12:12] ;
  assign accu_ram_sel_0_d2_C3 = fangyuan9_C [12:12] ;
  logic [0:0] accu_ram_sel_0_d2_R4 ;
  logic [0:0] accu_ram_sel_0_d2_X4 ;
  logic [0:0] accu_ram_sel_0_d2_C4 ;
  assign accu_ram_sel_0_d2_R4 = fangyuan9_R [11:11] ;
  assign accu_ram_sel_0_d2_X4 = fangyuan9_X [11:11] ;
  assign accu_ram_sel_0_d2_C4 = fangyuan9_C [11:11] ;
  logic [0:0] accu_ram_sel_0_d2_R5 ;
  logic [0:0] accu_ram_sel_0_d2_X5 ;
  logic [0:0] accu_ram_sel_0_d2_C5 ;
  assign accu_ram_sel_0_d2_R5 = fangyuan9_R [10:10] ;
  assign accu_ram_sel_0_d2_X5 = fangyuan9_X [10:10] ;
  assign accu_ram_sel_0_d2_C5 = fangyuan9_C [10:10] ;
  logic [0:0] accu_ram_sel_0_d2_R6 ;
  logic [0:0] accu_ram_sel_0_d2_X6 ;
  logic [0:0] accu_ram_sel_0_d2_C6 ;
  assign accu_ram_sel_0_d2_R6 = fangyuan9_R [9:9] ;
  assign accu_ram_sel_0_d2_X6 = fangyuan9_X [9:9] ;
  assign accu_ram_sel_0_d2_C6 = fangyuan9_C [9:9] ;
  logic [0:0] accu_ram_sel_0_d2_R7 ;
  logic [0:0] accu_ram_sel_0_d2_X7 ;
  logic [0:0] accu_ram_sel_0_d2_C7 ;
  assign accu_ram_sel_0_d2_R7 = fangyuan9_R [8:8] ;
  assign accu_ram_sel_0_d2_X7 = fangyuan9_X [8:8] ;
  assign accu_ram_sel_0_d2_C7 = fangyuan9_C [8:8] ;
  logic [0:0] accu_ram_sel_0_d2_R8 ;
  logic [0:0] accu_ram_sel_0_d2_X8 ;
  logic [0:0] accu_ram_sel_0_d2_C8 ;
  assign accu_ram_sel_0_d2_R8 = fangyuan9_R [7:7] ;
  assign accu_ram_sel_0_d2_X8 = fangyuan9_X [7:7] ;
  assign accu_ram_sel_0_d2_C8 = fangyuan9_C [7:7] ;
  logic [0:0] accu_ram_sel_0_d2_R9 ;
  logic [0:0] accu_ram_sel_0_d2_X9 ;
  logic [0:0] accu_ram_sel_0_d2_C9 ;
  assign accu_ram_sel_0_d2_R9 = fangyuan9_R [6:6] ;
  assign accu_ram_sel_0_d2_X9 = fangyuan9_X [6:6] ;
  assign accu_ram_sel_0_d2_C9 = fangyuan9_C [6:6] ;
  logic [0:0] accu_ram_sel_0_d2_R10 ;
  logic [0:0] accu_ram_sel_0_d2_X10 ;
  logic [0:0] accu_ram_sel_0_d2_C10 ;
  assign accu_ram_sel_0_d2_R10 = fangyuan9_R [5:5] ;
  assign accu_ram_sel_0_d2_X10 = fangyuan9_X [5:5] ;
  assign accu_ram_sel_0_d2_C10 = fangyuan9_C [5:5] ;
  logic [0:0] accu_ram_sel_0_d2_R11 ;
  logic [0:0] accu_ram_sel_0_d2_X11 ;
  logic [0:0] accu_ram_sel_0_d2_C11 ;
  assign accu_ram_sel_0_d2_R11 = fangyuan9_R [4:4] ;
  assign accu_ram_sel_0_d2_X11 = fangyuan9_X [4:4] ;
  assign accu_ram_sel_0_d2_C11 = fangyuan9_C [4:4] ;
  logic [0:0] accu_ram_sel_0_d2_R12 ;
  logic [0:0] accu_ram_sel_0_d2_X12 ;
  logic [0:0] accu_ram_sel_0_d2_C12 ;
  assign accu_ram_sel_0_d2_R12 = fangyuan9_R [3:3] ;
  assign accu_ram_sel_0_d2_X12 = fangyuan9_X [3:3] ;
  assign accu_ram_sel_0_d2_C12 = fangyuan9_C [3:3] ;
  logic [0:0] accu_ram_sel_0_d2_R13 ;
  logic [0:0] accu_ram_sel_0_d2_X13 ;
  logic [0:0] accu_ram_sel_0_d2_C13 ;
  assign accu_ram_sel_0_d2_R13 = fangyuan9_R [2:2] ;
  assign accu_ram_sel_0_d2_X13 = fangyuan9_X [2:2] ;
  assign accu_ram_sel_0_d2_C13 = fangyuan9_C [2:2] ;
  logic [0:0] accu_ram_sel_0_d2_R14 ;
  logic [0:0] accu_ram_sel_0_d2_X14 ;
  logic [0:0] accu_ram_sel_0_d2_C14 ;
  assign accu_ram_sel_0_d2_R14 = fangyuan9_R [1:1] ;
  assign accu_ram_sel_0_d2_X14 = fangyuan9_X [1:1] ;
  assign accu_ram_sel_0_d2_C14 = fangyuan9_C [1:1] ;
  logic [0:0] accu_ram_sel_0_d2_R15 ;
  logic [0:0] accu_ram_sel_0_d2_X15 ;
  logic [0:0] accu_ram_sel_0_d2_C15 ;
  assign accu_ram_sel_0_d2_R15 = fangyuan9_R [0:0] ;
  assign accu_ram_sel_0_d2_X15 = fangyuan9_X [0:0] ;
  assign accu_ram_sel_0_d2_C15 = fangyuan9_C [0:0] ;

  assign _011_ = accu_ctrl_valid_d2 ? fangyuan9 : accu_ctrl_ram_sel_0;
  logic [0:0] accu_ctrl_valid_d2_C9 ;
  logic [0:0] accu_ctrl_valid_d2_R9 ;
  logic [0:0] accu_ctrl_valid_d2_X9 ;
  assign accu_ctrl_valid_d2_C9 = | _011__C ;
  assign accu_ctrl_valid_d2_X9 = | _011__X ;
  assign _011__T = accu_ctrl_valid_d2 ? ( { 16{ accu_ctrl_valid_d2_T  }} | fangyuan9_T ) : ( { 16{ accu_ctrl_valid_d2_T  }} | accu_ctrl_ram_sel_0_T );
  assign _011__S = accu_ctrl_valid_d2 ? fangyuan9_S : accu_ctrl_ram_sel_0_S ;
  assign accu_ctrl_valid_d2_R9 = ( | (_011__R | ( _011__C & ( { 16{ accu_ctrl_valid_d2 }} & fangyuan9_T | { 16{ !accu_ctrl_valid_d2 }} & accu_ctrl_ram_sel_0_T )))) && fangyuan9 != accu_ctrl_ram_sel_0 ;
  logic [15:0] fangyuan9_C0 ;
  logic [15:0] fangyuan9_R0 ;
  logic [15:0] fangyuan9_X0 ;
  assign fangyuan9_C0 = { 16{ accu_ctrl_valid_d2 }} ;
  assign fangyuan9_R0 = { 16{ accu_ctrl_valid_d2 }} & ( _011__R | ( { 16{ accu_ctrl_valid_d2_T  }} & _011__C ));
  assign fangyuan9_X0 = { 16{ accu_ctrl_valid_d2 }} & _011__X ;
  logic [15:0] accu_ctrl_ram_sel_0_C0 ;
  logic [15:0] accu_ctrl_ram_sel_0_R0 ;
  logic [15:0] accu_ctrl_ram_sel_0_X0 ;
  assign accu_ctrl_ram_sel_0_C0 = { 16{ !accu_ctrl_valid_d2 }} ;
  assign accu_ctrl_ram_sel_0_R0 = { 16{ !accu_ctrl_valid_d2 }} & ( _011__R | ( { 16{ accu_ctrl_valid_d2_T  }} & _011__C ));
  assign accu_ctrl_ram_sel_0_X0 = { 16{ !accu_ctrl_valid_d2 }} & _011__X ;
  assign _009_ = accu_ctrl_valid_d2 ? accu_layer_end_d2 : accu_ctrl_layer_end;
  logic [0:0] accu_ctrl_valid_d2_C10 ;
  logic [0:0] accu_ctrl_valid_d2_R10 ;
  logic [0:0] accu_ctrl_valid_d2_X10 ;
  assign accu_ctrl_valid_d2_C10 = | _009__C ;
  assign accu_ctrl_valid_d2_X10 = | _009__X ;
  assign _009__T = accu_ctrl_valid_d2 ? ( { 1{ accu_ctrl_valid_d2_T  }} | accu_layer_end_d2_T ) : ( { 1{ accu_ctrl_valid_d2_T  }} | accu_ctrl_layer_end_T );
  assign _009__S = accu_ctrl_valid_d2 ? accu_layer_end_d2_S : accu_ctrl_layer_end_S ;
  assign accu_ctrl_valid_d2_R10 = ( | (_009__R | ( _009__C & ( { 1{ accu_ctrl_valid_d2 }} & accu_layer_end_d2_T | { 1{ !accu_ctrl_valid_d2 }} & accu_ctrl_layer_end_T )))) && accu_layer_end_d2 != accu_ctrl_layer_end ;
  logic [0:0] accu_layer_end_d2_C0 ;
  logic [0:0] accu_layer_end_d2_R0 ;
  logic [0:0] accu_layer_end_d2_X0 ;
  assign accu_layer_end_d2_C0 = { 1{ accu_ctrl_valid_d2 }} ;
  assign accu_layer_end_d2_R0 = { 1{ accu_ctrl_valid_d2 }} & ( _009__R | ( { 1{ accu_ctrl_valid_d2_T  }} & _009__C ));
  assign accu_layer_end_d2_X0 = { 1{ accu_ctrl_valid_d2 }} & _009__X ;
  logic [0:0] accu_ctrl_layer_end_C0 ;
  logic [0:0] accu_ctrl_layer_end_R0 ;
  logic [0:0] accu_ctrl_layer_end_X0 ;
  assign accu_ctrl_layer_end_C0 = { 1{ !accu_ctrl_valid_d2 }} ;
  assign accu_ctrl_layer_end_R0 = { 1{ !accu_ctrl_valid_d2 }} & ( _009__R | ( { 1{ accu_ctrl_valid_d2_T  }} & _009__C ));
  assign accu_ctrl_layer_end_X0 = { 1{ !accu_ctrl_valid_d2 }} & _009__X ;
  assign _007_ = accu_ctrl_valid_d2 ? accu_channel_end_d2 : accu_ctrl_channel_end;
  logic [0:0] accu_ctrl_valid_d2_C11 ;
  logic [0:0] accu_ctrl_valid_d2_R11 ;
  logic [0:0] accu_ctrl_valid_d2_X11 ;
  assign accu_ctrl_valid_d2_C11 = | _007__C ;
  assign accu_ctrl_valid_d2_X11 = | _007__X ;
  assign _007__T = accu_ctrl_valid_d2 ? ( { 1{ accu_ctrl_valid_d2_T  }} | accu_channel_end_d2_T ) : ( { 1{ accu_ctrl_valid_d2_T  }} | accu_ctrl_channel_end_T );
  assign _007__S = accu_ctrl_valid_d2 ? accu_channel_end_d2_S : accu_ctrl_channel_end_S ;
  assign accu_ctrl_valid_d2_R11 = ( | (_007__R | ( _007__C & ( { 1{ accu_ctrl_valid_d2 }} & accu_channel_end_d2_T | { 1{ !accu_ctrl_valid_d2 }} & accu_ctrl_channel_end_T )))) && accu_channel_end_d2 != accu_ctrl_channel_end ;
  logic [0:0] accu_channel_end_d2_C192 ;
  logic [0:0] accu_channel_end_d2_R192 ;
  logic [0:0] accu_channel_end_d2_X192 ;
  assign accu_channel_end_d2_C192 = { 1{ accu_ctrl_valid_d2 }} ;
  assign accu_channel_end_d2_R192 = { 1{ accu_ctrl_valid_d2 }} & ( _007__R | ( { 1{ accu_ctrl_valid_d2_T  }} & _007__C ));
  assign accu_channel_end_d2_X192 = { 1{ accu_ctrl_valid_d2 }} & _007__X ;
  logic [0:0] accu_ctrl_channel_end_C0 ;
  logic [0:0] accu_ctrl_channel_end_R0 ;
  logic [0:0] accu_ctrl_channel_end_X0 ;
  assign accu_ctrl_channel_end_C0 = { 1{ !accu_ctrl_valid_d2 }} ;
  assign accu_ctrl_channel_end_R0 = { 1{ !accu_ctrl_valid_d2 }} & ( _007__R | ( { 1{ accu_ctrl_valid_d2_T  }} & _007__C ));
  assign accu_ctrl_channel_end_X0 = { 1{ !accu_ctrl_valid_d2 }} & _007__X ;
  assign _020_ = accu_ctrl_valid_d2 ? accu_stripe_end_d2 : accu_ctrl_stripe_end;
  logic [0:0] accu_ctrl_valid_d2_C12 ;
  logic [0:0] accu_ctrl_valid_d2_R12 ;
  logic [0:0] accu_ctrl_valid_d2_X12 ;
  assign accu_ctrl_valid_d2_C12 = | _020__C ;
  assign accu_ctrl_valid_d2_X12 = | _020__X ;
  assign _020__T = accu_ctrl_valid_d2 ? ( { 1{ accu_ctrl_valid_d2_T  }} | accu_stripe_end_d2_T ) : ( { 1{ accu_ctrl_valid_d2_T  }} | accu_ctrl_stripe_end_T );
  assign _020__S = accu_ctrl_valid_d2 ? accu_stripe_end_d2_S : accu_ctrl_stripe_end_S ;
  assign accu_ctrl_valid_d2_R12 = ( | (_020__R | ( _020__C & ( { 1{ accu_ctrl_valid_d2 }} & accu_stripe_end_d2_T | { 1{ !accu_ctrl_valid_d2 }} & accu_ctrl_stripe_end_T )))) && accu_stripe_end_d2 != accu_ctrl_stripe_end ;
  logic [0:0] accu_stripe_end_d2_C0 ;
  logic [0:0] accu_stripe_end_d2_R0 ;
  logic [0:0] accu_stripe_end_d2_X0 ;
  assign accu_stripe_end_d2_C0 = { 1{ accu_ctrl_valid_d2 }} ;
  assign accu_stripe_end_d2_R0 = { 1{ accu_ctrl_valid_d2 }} & ( _020__R | ( { 1{ accu_ctrl_valid_d2_T  }} & _020__C ));
  assign accu_stripe_end_d2_X0 = { 1{ accu_ctrl_valid_d2 }} & _020__X ;
  logic [0:0] accu_ctrl_stripe_end_C0 ;
  logic [0:0] accu_ctrl_stripe_end_R0 ;
  logic [0:0] accu_ctrl_stripe_end_X0 ;
  assign accu_ctrl_stripe_end_C0 = { 1{ !accu_ctrl_valid_d2 }} ;
  assign accu_ctrl_stripe_end_R0 = { 1{ !accu_ctrl_valid_d2 }} & ( _020__R | ( { 1{ accu_ctrl_valid_d2_T  }} & _020__C ));
  assign accu_ctrl_stripe_end_X0 = { 1{ !accu_ctrl_valid_d2 }} & _020__X ;
  assign _019_ = accu_ctrl_valid_d2 ? accu_rd_mask_d2 : accu_ctrl_rd_mask;
  logic [0:0] accu_ctrl_valid_d2_C13 ;
  logic [0:0] accu_ctrl_valid_d2_R13 ;
  logic [0:0] accu_ctrl_valid_d2_X13 ;
  assign accu_ctrl_valid_d2_C13 = | _019__C ;
  assign accu_ctrl_valid_d2_X13 = | _019__X ;
  assign _019__T = accu_ctrl_valid_d2 ? ( { 8{ accu_ctrl_valid_d2_T  }} | accu_rd_mask_d2_T ) : ( { 8{ accu_ctrl_valid_d2_T  }} | accu_ctrl_rd_mask_T );
  assign _019__S = accu_ctrl_valid_d2 ? accu_rd_mask_d2_S : accu_ctrl_rd_mask_S ;
  assign accu_ctrl_valid_d2_R13 = ( | (_019__R | ( _019__C & ( { 8{ accu_ctrl_valid_d2 }} & accu_rd_mask_d2_T | { 8{ !accu_ctrl_valid_d2 }} & accu_ctrl_rd_mask_T )))) && accu_rd_mask_d2 != accu_ctrl_rd_mask ;
  logic [7:0] accu_rd_mask_d2_C0 ;
  logic [7:0] accu_rd_mask_d2_R0 ;
  logic [7:0] accu_rd_mask_d2_X0 ;
  assign accu_rd_mask_d2_C0 = { 8{ accu_ctrl_valid_d2 }} ;
  assign accu_rd_mask_d2_R0 = { 8{ accu_ctrl_valid_d2 }} & ( _019__R | ( { 8{ accu_ctrl_valid_d2_T  }} & _019__C ));
  assign accu_rd_mask_d2_X0 = { 8{ accu_ctrl_valid_d2 }} & _019__X ;
  logic [7:0] accu_ctrl_rd_mask_C0 ;
  logic [7:0] accu_ctrl_rd_mask_R0 ;
  logic [7:0] accu_ctrl_rd_mask_X0 ;
  assign accu_ctrl_rd_mask_C0 = { 8{ !accu_ctrl_valid_d2 }} ;
  assign accu_ctrl_rd_mask_R0 = { 8{ !accu_ctrl_valid_d2 }} & ( _019__R | ( { 8{ accu_ctrl_valid_d2_T  }} & _019__C ));
  assign accu_ctrl_rd_mask_X0 = { 8{ !accu_ctrl_valid_d2 }} & _019__X ;
  assign _010_ = accu_ctrl_valid_d2 ? accu_mode_d2 : accu_ctrl_mode;
  logic [0:0] accu_ctrl_valid_d2_C14 ;
  logic [0:0] accu_ctrl_valid_d2_R14 ;
  logic [0:0] accu_ctrl_valid_d2_X14 ;
  assign accu_ctrl_valid_d2_C14 = | _010__C ;
  assign accu_ctrl_valid_d2_X14 = | _010__X ;
  assign _010__T = accu_ctrl_valid_d2 ? ( { 4{ accu_ctrl_valid_d2_T  }} | accu_mode_d2_T ) : ( { 4{ accu_ctrl_valid_d2_T  }} | accu_ctrl_mode_T );
  assign _010__S = accu_ctrl_valid_d2 ? accu_mode_d2_S : accu_ctrl_mode_S ;
  assign accu_ctrl_valid_d2_R14 = ( | (_010__R | ( _010__C & ( { 4{ accu_ctrl_valid_d2 }} & accu_mode_d2_T | { 4{ !accu_ctrl_valid_d2 }} & accu_ctrl_mode_T )))) && accu_mode_d2 != accu_ctrl_mode ;
  logic [3:0] accu_mode_d2_C0 ;
  logic [3:0] accu_mode_d2_R0 ;
  logic [3:0] accu_mode_d2_X0 ;
  assign accu_mode_d2_C0 = { 4{ accu_ctrl_valid_d2 }} ;
  assign accu_mode_d2_R0 = { 4{ accu_ctrl_valid_d2 }} & ( _010__R | ( { 4{ accu_ctrl_valid_d2_T  }} & _010__C ));
  assign accu_mode_d2_X0 = { 4{ accu_ctrl_valid_d2 }} & _010__X ;
  logic [3:0] accu_ctrl_mode_C0 ;
  logic [3:0] accu_ctrl_mode_R0 ;
  logic [3:0] accu_ctrl_mode_X0 ;
  assign accu_ctrl_mode_C0 = { 4{ !accu_ctrl_valid_d2 }} ;
  assign accu_ctrl_mode_R0 = { 4{ !accu_ctrl_valid_d2 }} & ( _010__R | ( { 4{ accu_ctrl_valid_d2_T  }} & _010__C ));
  assign accu_ctrl_mode_X0 = { 4{ !accu_ctrl_valid_d2 }} & _010__X ;
  assign _006_ = accu_ctrl_valid_d2 ? accu_addr_d2 : accu_ctrl_addr;
  logic [0:0] accu_ctrl_valid_d2_C15 ;
  logic [0:0] accu_ctrl_valid_d2_R15 ;
  logic [0:0] accu_ctrl_valid_d2_X15 ;
  assign accu_ctrl_valid_d2_C15 = | _006__C ;
  assign accu_ctrl_valid_d2_X15 = | _006__X ;
  assign _006__T = accu_ctrl_valid_d2 ? ( { 5{ accu_ctrl_valid_d2_T  }} | accu_addr_d2_T ) : ( { 5{ accu_ctrl_valid_d2_T  }} | accu_ctrl_addr_T );
  assign _006__S = accu_ctrl_valid_d2 ? accu_addr_d2_S : accu_ctrl_addr_S ;
  assign accu_ctrl_valid_d2_R15 = ( | (_006__R | ( _006__C & ( { 5{ accu_ctrl_valid_d2 }} & accu_addr_d2_T | { 5{ !accu_ctrl_valid_d2 }} & accu_ctrl_addr_T )))) && accu_addr_d2 != accu_ctrl_addr ;
  logic [4:0] accu_addr_d2_C0 ;
  logic [4:0] accu_addr_d2_R0 ;
  logic [4:0] accu_addr_d2_X0 ;
  assign accu_addr_d2_C0 = { 5{ accu_ctrl_valid_d2 }} ;
  assign accu_addr_d2_R0 = { 5{ accu_ctrl_valid_d2 }} & ( _006__R | ( { 5{ accu_ctrl_valid_d2_T  }} & _006__C ));
  assign accu_addr_d2_X0 = { 5{ accu_ctrl_valid_d2 }} & _006__X ;
  logic [4:0] accu_ctrl_addr_C0 ;
  logic [4:0] accu_ctrl_addr_R0 ;
  logic [4:0] accu_ctrl_addr_X0 ;
  assign accu_ctrl_addr_C0 = { 5{ !accu_ctrl_valid_d2 }} ;
  assign accu_ctrl_addr_R0 = { 5{ !accu_ctrl_valid_d2 }} & ( _006__R | ( { 5{ accu_ctrl_valid_d2_T  }} & _006__C ));
  assign accu_ctrl_addr_X0 = { 5{ !accu_ctrl_valid_d2 }} & _006__X ;
  assign _050_ = accu_ctrl_valid_d1 ? accu_ram_sel_7_d1 : accu_ram_sel_7_d2;
  logic [0:0] accu_ctrl_valid_d1_C1 ;
  logic [0:0] accu_ctrl_valid_d1_R1 ;
  logic [0:0] accu_ctrl_valid_d1_X1 ;
  assign accu_ctrl_valid_d1_C1 = | _050__C ;
  assign accu_ctrl_valid_d1_X1 = | _050__X ;
  assign _050__T = accu_ctrl_valid_d1 ? ( { 1{ accu_ctrl_valid_d1_T  }} | accu_ram_sel_7_d1_T ) : ( { 1{ accu_ctrl_valid_d1_T  }} | accu_ram_sel_7_d2_T );
  assign _050__S = accu_ctrl_valid_d1 ? accu_ram_sel_7_d1_S : accu_ram_sel_7_d2_S ;
  assign accu_ctrl_valid_d1_R1 = ( | (_050__R | ( _050__C & ( { 1{ accu_ctrl_valid_d1 }} & accu_ram_sel_7_d1_T | { 1{ !accu_ctrl_valid_d1 }} & accu_ram_sel_7_d2_T )))) && accu_ram_sel_7_d1 != accu_ram_sel_7_d2 ;
  logic [0:0] accu_ram_sel_7_d1_C0 ;
  logic [0:0] accu_ram_sel_7_d1_R0 ;
  logic [0:0] accu_ram_sel_7_d1_X0 ;
  assign accu_ram_sel_7_d1_C0 = { 1{ accu_ctrl_valid_d1 }} ;
  assign accu_ram_sel_7_d1_R0 = { 1{ accu_ctrl_valid_d1 }} & ( _050__R | ( { 1{ accu_ctrl_valid_d1_T  }} & _050__C ));
  assign accu_ram_sel_7_d1_X0 = { 1{ accu_ctrl_valid_d1 }} & _050__X ;
  logic [0:0] accu_ram_sel_7_d2_C16 ;
  logic [0:0] accu_ram_sel_7_d2_R16 ;
  logic [0:0] accu_ram_sel_7_d2_X16 ;
  assign accu_ram_sel_7_d2_C16 = { 1{ !accu_ctrl_valid_d1 }} ;
  assign accu_ram_sel_7_d2_R16 = { 1{ !accu_ctrl_valid_d1 }} & ( _050__R | ( { 1{ accu_ctrl_valid_d1_T  }} & _050__C ));
  assign accu_ram_sel_7_d2_X16 = { 1{ !accu_ctrl_valid_d1 }} & _050__X ;
  assign _047_ = accu_ctrl_valid_d1 ? accu_ram_sel_6_d1 : accu_ram_sel_6_d2;
  logic [0:0] accu_ctrl_valid_d1_C2 ;
  logic [0:0] accu_ctrl_valid_d1_R2 ;
  logic [0:0] accu_ctrl_valid_d1_X2 ;
  assign accu_ctrl_valid_d1_C2 = | _047__C ;
  assign accu_ctrl_valid_d1_X2 = | _047__X ;
  assign _047__T = accu_ctrl_valid_d1 ? ( { 1{ accu_ctrl_valid_d1_T  }} | accu_ram_sel_6_d1_T ) : ( { 1{ accu_ctrl_valid_d1_T  }} | accu_ram_sel_6_d2_T );
  assign _047__S = accu_ctrl_valid_d1 ? accu_ram_sel_6_d1_S : accu_ram_sel_6_d2_S ;
  assign accu_ctrl_valid_d1_R2 = ( | (_047__R | ( _047__C & ( { 1{ accu_ctrl_valid_d1 }} & accu_ram_sel_6_d1_T | { 1{ !accu_ctrl_valid_d1 }} & accu_ram_sel_6_d2_T )))) && accu_ram_sel_6_d1 != accu_ram_sel_6_d2 ;
  logic [0:0] accu_ram_sel_6_d1_C0 ;
  logic [0:0] accu_ram_sel_6_d1_R0 ;
  logic [0:0] accu_ram_sel_6_d1_X0 ;
  assign accu_ram_sel_6_d1_C0 = { 1{ accu_ctrl_valid_d1 }} ;
  assign accu_ram_sel_6_d1_R0 = { 1{ accu_ctrl_valid_d1 }} & ( _047__R | ( { 1{ accu_ctrl_valid_d1_T  }} & _047__C ));
  assign accu_ram_sel_6_d1_X0 = { 1{ accu_ctrl_valid_d1 }} & _047__X ;
  logic [0:0] accu_ram_sel_6_d2_C16 ;
  logic [0:0] accu_ram_sel_6_d2_R16 ;
  logic [0:0] accu_ram_sel_6_d2_X16 ;
  assign accu_ram_sel_6_d2_C16 = { 1{ !accu_ctrl_valid_d1 }} ;
  assign accu_ram_sel_6_d2_R16 = { 1{ !accu_ctrl_valid_d1 }} & ( _047__R | ( { 1{ accu_ctrl_valid_d1_T  }} & _047__C ));
  assign accu_ram_sel_6_d2_X16 = { 1{ !accu_ctrl_valid_d1 }} & _047__X ;
  assign _044_ = accu_ctrl_valid_d1 ? accu_ram_sel_5_d1 : accu_ram_sel_5_d2;
  logic [0:0] accu_ctrl_valid_d1_C3 ;
  logic [0:0] accu_ctrl_valid_d1_R3 ;
  logic [0:0] accu_ctrl_valid_d1_X3 ;
  assign accu_ctrl_valid_d1_C3 = | _044__C ;
  assign accu_ctrl_valid_d1_X3 = | _044__X ;
  assign _044__T = accu_ctrl_valid_d1 ? ( { 1{ accu_ctrl_valid_d1_T  }} | accu_ram_sel_5_d1_T ) : ( { 1{ accu_ctrl_valid_d1_T  }} | accu_ram_sel_5_d2_T );
  assign _044__S = accu_ctrl_valid_d1 ? accu_ram_sel_5_d1_S : accu_ram_sel_5_d2_S ;
  assign accu_ctrl_valid_d1_R3 = ( | (_044__R | ( _044__C & ( { 1{ accu_ctrl_valid_d1 }} & accu_ram_sel_5_d1_T | { 1{ !accu_ctrl_valid_d1 }} & accu_ram_sel_5_d2_T )))) && accu_ram_sel_5_d1 != accu_ram_sel_5_d2 ;
  logic [0:0] accu_ram_sel_5_d1_C0 ;
  logic [0:0] accu_ram_sel_5_d1_R0 ;
  logic [0:0] accu_ram_sel_5_d1_X0 ;
  assign accu_ram_sel_5_d1_C0 = { 1{ accu_ctrl_valid_d1 }} ;
  assign accu_ram_sel_5_d1_R0 = { 1{ accu_ctrl_valid_d1 }} & ( _044__R | ( { 1{ accu_ctrl_valid_d1_T  }} & _044__C ));
  assign accu_ram_sel_5_d1_X0 = { 1{ accu_ctrl_valid_d1 }} & _044__X ;
  logic [0:0] accu_ram_sel_5_d2_C16 ;
  logic [0:0] accu_ram_sel_5_d2_R16 ;
  logic [0:0] accu_ram_sel_5_d2_X16 ;
  assign accu_ram_sel_5_d2_C16 = { 1{ !accu_ctrl_valid_d1 }} ;
  assign accu_ram_sel_5_d2_R16 = { 1{ !accu_ctrl_valid_d1 }} & ( _044__R | ( { 1{ accu_ctrl_valid_d1_T  }} & _044__C ));
  assign accu_ram_sel_5_d2_X16 = { 1{ !accu_ctrl_valid_d1 }} & _044__X ;
  assign _041_ = accu_ctrl_valid_d1 ? accu_ram_sel_4_d1 : accu_ram_sel_4_d2;
  logic [0:0] accu_ctrl_valid_d1_C4 ;
  logic [0:0] accu_ctrl_valid_d1_R4 ;
  logic [0:0] accu_ctrl_valid_d1_X4 ;
  assign accu_ctrl_valid_d1_C4 = | _041__C ;
  assign accu_ctrl_valid_d1_X4 = | _041__X ;
  assign _041__T = accu_ctrl_valid_d1 ? ( { 1{ accu_ctrl_valid_d1_T  }} | accu_ram_sel_4_d1_T ) : ( { 1{ accu_ctrl_valid_d1_T  }} | accu_ram_sel_4_d2_T );
  assign _041__S = accu_ctrl_valid_d1 ? accu_ram_sel_4_d1_S : accu_ram_sel_4_d2_S ;
  assign accu_ctrl_valid_d1_R4 = ( | (_041__R | ( _041__C & ( { 1{ accu_ctrl_valid_d1 }} & accu_ram_sel_4_d1_T | { 1{ !accu_ctrl_valid_d1 }} & accu_ram_sel_4_d2_T )))) && accu_ram_sel_4_d1 != accu_ram_sel_4_d2 ;
  logic [0:0] accu_ram_sel_4_d1_C0 ;
  logic [0:0] accu_ram_sel_4_d1_R0 ;
  logic [0:0] accu_ram_sel_4_d1_X0 ;
  assign accu_ram_sel_4_d1_C0 = { 1{ accu_ctrl_valid_d1 }} ;
  assign accu_ram_sel_4_d1_R0 = { 1{ accu_ctrl_valid_d1 }} & ( _041__R | ( { 1{ accu_ctrl_valid_d1_T  }} & _041__C ));
  assign accu_ram_sel_4_d1_X0 = { 1{ accu_ctrl_valid_d1 }} & _041__X ;
  logic [0:0] accu_ram_sel_4_d2_C16 ;
  logic [0:0] accu_ram_sel_4_d2_R16 ;
  logic [0:0] accu_ram_sel_4_d2_X16 ;
  assign accu_ram_sel_4_d2_C16 = { 1{ !accu_ctrl_valid_d1 }} ;
  assign accu_ram_sel_4_d2_R16 = { 1{ !accu_ctrl_valid_d1 }} & ( _041__R | ( { 1{ accu_ctrl_valid_d1_T  }} & _041__C ));
  assign accu_ram_sel_4_d2_X16 = { 1{ !accu_ctrl_valid_d1 }} & _041__X ;
  assign _038_ = accu_ctrl_valid_d1 ? accu_ram_sel_3_d1 : accu_ram_sel_3_d2;
  logic [0:0] accu_ctrl_valid_d1_C5 ;
  logic [0:0] accu_ctrl_valid_d1_R5 ;
  logic [0:0] accu_ctrl_valid_d1_X5 ;
  assign accu_ctrl_valid_d1_C5 = | _038__C ;
  assign accu_ctrl_valid_d1_X5 = | _038__X ;
  assign _038__T = accu_ctrl_valid_d1 ? ( { 1{ accu_ctrl_valid_d1_T  }} | accu_ram_sel_3_d1_T ) : ( { 1{ accu_ctrl_valid_d1_T  }} | accu_ram_sel_3_d2_T );
  assign _038__S = accu_ctrl_valid_d1 ? accu_ram_sel_3_d1_S : accu_ram_sel_3_d2_S ;
  assign accu_ctrl_valid_d1_R5 = ( | (_038__R | ( _038__C & ( { 1{ accu_ctrl_valid_d1 }} & accu_ram_sel_3_d1_T | { 1{ !accu_ctrl_valid_d1 }} & accu_ram_sel_3_d2_T )))) && accu_ram_sel_3_d1 != accu_ram_sel_3_d2 ;
  logic [0:0] accu_ram_sel_3_d1_C0 ;
  logic [0:0] accu_ram_sel_3_d1_R0 ;
  logic [0:0] accu_ram_sel_3_d1_X0 ;
  assign accu_ram_sel_3_d1_C0 = { 1{ accu_ctrl_valid_d1 }} ;
  assign accu_ram_sel_3_d1_R0 = { 1{ accu_ctrl_valid_d1 }} & ( _038__R | ( { 1{ accu_ctrl_valid_d1_T  }} & _038__C ));
  assign accu_ram_sel_3_d1_X0 = { 1{ accu_ctrl_valid_d1 }} & _038__X ;
  logic [0:0] accu_ram_sel_3_d2_C16 ;
  logic [0:0] accu_ram_sel_3_d2_R16 ;
  logic [0:0] accu_ram_sel_3_d2_X16 ;
  assign accu_ram_sel_3_d2_C16 = { 1{ !accu_ctrl_valid_d1 }} ;
  assign accu_ram_sel_3_d2_R16 = { 1{ !accu_ctrl_valid_d1 }} & ( _038__R | ( { 1{ accu_ctrl_valid_d1_T  }} & _038__C ));
  assign accu_ram_sel_3_d2_X16 = { 1{ !accu_ctrl_valid_d1 }} & _038__X ;
  assign _035_ = accu_ctrl_valid_d1 ? accu_ram_sel_2_d1 : accu_ram_sel_2_d2;
  logic [0:0] accu_ctrl_valid_d1_C6 ;
  logic [0:0] accu_ctrl_valid_d1_R6 ;
  logic [0:0] accu_ctrl_valid_d1_X6 ;
  assign accu_ctrl_valid_d1_C6 = | _035__C ;
  assign accu_ctrl_valid_d1_X6 = | _035__X ;
  assign _035__T = accu_ctrl_valid_d1 ? ( { 1{ accu_ctrl_valid_d1_T  }} | accu_ram_sel_2_d1_T ) : ( { 1{ accu_ctrl_valid_d1_T  }} | accu_ram_sel_2_d2_T );
  assign _035__S = accu_ctrl_valid_d1 ? accu_ram_sel_2_d1_S : accu_ram_sel_2_d2_S ;
  assign accu_ctrl_valid_d1_R6 = ( | (_035__R | ( _035__C & ( { 1{ accu_ctrl_valid_d1 }} & accu_ram_sel_2_d1_T | { 1{ !accu_ctrl_valid_d1 }} & accu_ram_sel_2_d2_T )))) && accu_ram_sel_2_d1 != accu_ram_sel_2_d2 ;
  logic [0:0] accu_ram_sel_2_d1_C0 ;
  logic [0:0] accu_ram_sel_2_d1_R0 ;
  logic [0:0] accu_ram_sel_2_d1_X0 ;
  assign accu_ram_sel_2_d1_C0 = { 1{ accu_ctrl_valid_d1 }} ;
  assign accu_ram_sel_2_d1_R0 = { 1{ accu_ctrl_valid_d1 }} & ( _035__R | ( { 1{ accu_ctrl_valid_d1_T  }} & _035__C ));
  assign accu_ram_sel_2_d1_X0 = { 1{ accu_ctrl_valid_d1 }} & _035__X ;
  logic [0:0] accu_ram_sel_2_d2_C16 ;
  logic [0:0] accu_ram_sel_2_d2_R16 ;
  logic [0:0] accu_ram_sel_2_d2_X16 ;
  assign accu_ram_sel_2_d2_C16 = { 1{ !accu_ctrl_valid_d1 }} ;
  assign accu_ram_sel_2_d2_R16 = { 1{ !accu_ctrl_valid_d1 }} & ( _035__R | ( { 1{ accu_ctrl_valid_d1_T  }} & _035__C ));
  assign accu_ram_sel_2_d2_X16 = { 1{ !accu_ctrl_valid_d1 }} & _035__X ;
  assign _032_ = accu_ctrl_valid_d1 ? accu_ram_sel_1_d1 : accu_ram_sel_1_d2;
  logic [0:0] accu_ctrl_valid_d1_C7 ;
  logic [0:0] accu_ctrl_valid_d1_R7 ;
  logic [0:0] accu_ctrl_valid_d1_X7 ;
  assign accu_ctrl_valid_d1_C7 = | _032__C ;
  assign accu_ctrl_valid_d1_X7 = | _032__X ;
  assign _032__T = accu_ctrl_valid_d1 ? ( { 1{ accu_ctrl_valid_d1_T  }} | accu_ram_sel_1_d1_T ) : ( { 1{ accu_ctrl_valid_d1_T  }} | accu_ram_sel_1_d2_T );
  assign _032__S = accu_ctrl_valid_d1 ? accu_ram_sel_1_d1_S : accu_ram_sel_1_d2_S ;
  assign accu_ctrl_valid_d1_R7 = ( | (_032__R | ( _032__C & ( { 1{ accu_ctrl_valid_d1 }} & accu_ram_sel_1_d1_T | { 1{ !accu_ctrl_valid_d1 }} & accu_ram_sel_1_d2_T )))) && accu_ram_sel_1_d1 != accu_ram_sel_1_d2 ;
  logic [0:0] accu_ram_sel_1_d1_C0 ;
  logic [0:0] accu_ram_sel_1_d1_R0 ;
  logic [0:0] accu_ram_sel_1_d1_X0 ;
  assign accu_ram_sel_1_d1_C0 = { 1{ accu_ctrl_valid_d1 }} ;
  assign accu_ram_sel_1_d1_R0 = { 1{ accu_ctrl_valid_d1 }} & ( _032__R | ( { 1{ accu_ctrl_valid_d1_T  }} & _032__C ));
  assign accu_ram_sel_1_d1_X0 = { 1{ accu_ctrl_valid_d1 }} & _032__X ;
  logic [0:0] accu_ram_sel_1_d2_C16 ;
  logic [0:0] accu_ram_sel_1_d2_R16 ;
  logic [0:0] accu_ram_sel_1_d2_X16 ;
  assign accu_ram_sel_1_d2_C16 = { 1{ !accu_ctrl_valid_d1 }} ;
  assign accu_ram_sel_1_d2_R16 = { 1{ !accu_ctrl_valid_d1 }} & ( _032__R | ( { 1{ accu_ctrl_valid_d1_T  }} & _032__C ));
  assign accu_ram_sel_1_d2_X16 = { 1{ !accu_ctrl_valid_d1 }} & _032__X ;
  assign _029_ = accu_ctrl_valid_d1 ? accu_ram_sel_0_d1 : accu_ram_sel_0_d2;
  logic [0:0] accu_ctrl_valid_d1_C8 ;
  logic [0:0] accu_ctrl_valid_d1_R8 ;
  logic [0:0] accu_ctrl_valid_d1_X8 ;
  assign accu_ctrl_valid_d1_C8 = | _029__C ;
  assign accu_ctrl_valid_d1_X8 = | _029__X ;
  assign _029__T = accu_ctrl_valid_d1 ? ( { 1{ accu_ctrl_valid_d1_T  }} | accu_ram_sel_0_d1_T ) : ( { 1{ accu_ctrl_valid_d1_T  }} | accu_ram_sel_0_d2_T );
  assign _029__S = accu_ctrl_valid_d1 ? accu_ram_sel_0_d1_S : accu_ram_sel_0_d2_S ;
  assign accu_ctrl_valid_d1_R8 = ( | (_029__R | ( _029__C & ( { 1{ accu_ctrl_valid_d1 }} & accu_ram_sel_0_d1_T | { 1{ !accu_ctrl_valid_d1 }} & accu_ram_sel_0_d2_T )))) && accu_ram_sel_0_d1 != accu_ram_sel_0_d2 ;
  logic [0:0] accu_ram_sel_0_d1_C0 ;
  logic [0:0] accu_ram_sel_0_d1_R0 ;
  logic [0:0] accu_ram_sel_0_d1_X0 ;
  assign accu_ram_sel_0_d1_C0 = { 1{ accu_ctrl_valid_d1 }} ;
  assign accu_ram_sel_0_d1_R0 = { 1{ accu_ctrl_valid_d1 }} & ( _029__R | ( { 1{ accu_ctrl_valid_d1_T  }} & _029__C ));
  assign accu_ram_sel_0_d1_X0 = { 1{ accu_ctrl_valid_d1 }} & _029__X ;
  logic [0:0] accu_ram_sel_0_d2_C16 ;
  logic [0:0] accu_ram_sel_0_d2_R16 ;
  logic [0:0] accu_ram_sel_0_d2_X16 ;
  assign accu_ram_sel_0_d2_C16 = { 1{ !accu_ctrl_valid_d1 }} ;
  assign accu_ram_sel_0_d2_R16 = { 1{ !accu_ctrl_valid_d1 }} & ( _029__R | ( { 1{ accu_ctrl_valid_d1_T  }} & _029__C ));
  assign accu_ram_sel_0_d2_X16 = { 1{ !accu_ctrl_valid_d1 }} & _029__X ;
  assign _022_ = accu_ctrl_valid_d1 ? accu_layer_end_d1 : accu_layer_end_d2;
  logic [0:0] accu_ctrl_valid_d1_C9 ;
  logic [0:0] accu_ctrl_valid_d1_R9 ;
  logic [0:0] accu_ctrl_valid_d1_X9 ;
  assign accu_ctrl_valid_d1_C9 = | _022__C ;
  assign accu_ctrl_valid_d1_X9 = | _022__X ;
  assign _022__T = accu_ctrl_valid_d1 ? ( { 1{ accu_ctrl_valid_d1_T  }} | accu_layer_end_d1_T ) : ( { 1{ accu_ctrl_valid_d1_T  }} | accu_layer_end_d2_T );
  assign _022__S = accu_ctrl_valid_d1 ? accu_layer_end_d1_S : accu_layer_end_d2_S ;
  assign accu_ctrl_valid_d1_R9 = ( | (_022__R | ( _022__C & ( { 1{ accu_ctrl_valid_d1 }} & accu_layer_end_d1_T | { 1{ !accu_ctrl_valid_d1 }} & accu_layer_end_d2_T )))) && accu_layer_end_d1 != accu_layer_end_d2 ;
  logic [0:0] accu_layer_end_d1_C0 ;
  logic [0:0] accu_layer_end_d1_R0 ;
  logic [0:0] accu_layer_end_d1_X0 ;
  assign accu_layer_end_d1_C0 = { 1{ accu_ctrl_valid_d1 }} ;
  assign accu_layer_end_d1_R0 = { 1{ accu_ctrl_valid_d1 }} & ( _022__R | ( { 1{ accu_ctrl_valid_d1_T  }} & _022__C ));
  assign accu_layer_end_d1_X0 = { 1{ accu_ctrl_valid_d1 }} & _022__X ;
  logic [0:0] accu_layer_end_d2_C1 ;
  logic [0:0] accu_layer_end_d2_R1 ;
  logic [0:0] accu_layer_end_d2_X1 ;
  assign accu_layer_end_d2_C1 = { 1{ !accu_ctrl_valid_d1 }} ;
  assign accu_layer_end_d2_R1 = { 1{ !accu_ctrl_valid_d1 }} & ( _022__R | ( { 1{ accu_ctrl_valid_d1_T  }} & _022__C ));
  assign accu_layer_end_d2_X1 = { 1{ !accu_ctrl_valid_d1 }} & _022__X ;
  assign _003_ = accu_ctrl_valid_d1 ? accu_channel_end_d1 : accu_channel_end_d2;
  logic [0:0] accu_ctrl_valid_d1_C10 ;
  logic [0:0] accu_ctrl_valid_d1_R10 ;
  logic [0:0] accu_ctrl_valid_d1_X10 ;
  assign accu_ctrl_valid_d1_C10 = | _003__C ;
  assign accu_ctrl_valid_d1_X10 = | _003__X ;
  assign _003__T = accu_ctrl_valid_d1 ? ( { 1{ accu_ctrl_valid_d1_T  }} | accu_channel_end_d1_T ) : ( { 1{ accu_ctrl_valid_d1_T  }} | accu_channel_end_d2_T );
  assign _003__S = accu_ctrl_valid_d1 ? accu_channel_end_d1_S : accu_channel_end_d2_S ;
  assign accu_ctrl_valid_d1_R10 = ( | (_003__R | ( _003__C & ( { 1{ accu_ctrl_valid_d1 }} & accu_channel_end_d1_T | { 1{ !accu_ctrl_valid_d1 }} & accu_channel_end_d2_T )))) && accu_channel_end_d1 != accu_channel_end_d2 ;
  logic [0:0] accu_channel_end_d1_C0 ;
  logic [0:0] accu_channel_end_d1_R0 ;
  logic [0:0] accu_channel_end_d1_X0 ;
  assign accu_channel_end_d1_C0 = { 1{ accu_ctrl_valid_d1 }} ;
  assign accu_channel_end_d1_R0 = { 1{ accu_ctrl_valid_d1 }} & ( _003__R | ( { 1{ accu_ctrl_valid_d1_T  }} & _003__C ));
  assign accu_channel_end_d1_X0 = { 1{ accu_ctrl_valid_d1 }} & _003__X ;
  logic [0:0] accu_channel_end_d2_C193 ;
  logic [0:0] accu_channel_end_d2_R193 ;
  logic [0:0] accu_channel_end_d2_X193 ;
  assign accu_channel_end_d2_C193 = { 1{ !accu_ctrl_valid_d1 }} ;
  assign accu_channel_end_d2_R193 = { 1{ !accu_ctrl_valid_d1 }} & ( _003__R | ( { 1{ accu_ctrl_valid_d1_T  }} & _003__C ));
  assign accu_channel_end_d2_X193 = { 1{ !accu_ctrl_valid_d1 }} & _003__X ;
  assign _055_ = accu_ctrl_valid_d1 ? accu_stripe_end_d1 : accu_stripe_end_d2;
  logic [0:0] accu_ctrl_valid_d1_C11 ;
  logic [0:0] accu_ctrl_valid_d1_R11 ;
  logic [0:0] accu_ctrl_valid_d1_X11 ;
  assign accu_ctrl_valid_d1_C11 = | _055__C ;
  assign accu_ctrl_valid_d1_X11 = | _055__X ;
  assign _055__T = accu_ctrl_valid_d1 ? ( { 1{ accu_ctrl_valid_d1_T  }} | accu_stripe_end_d1_T ) : ( { 1{ accu_ctrl_valid_d1_T  }} | accu_stripe_end_d2_T );
  assign _055__S = accu_ctrl_valid_d1 ? accu_stripe_end_d1_S : accu_stripe_end_d2_S ;
  assign accu_ctrl_valid_d1_R11 = ( | (_055__R | ( _055__C & ( { 1{ accu_ctrl_valid_d1 }} & accu_stripe_end_d1_T | { 1{ !accu_ctrl_valid_d1 }} & accu_stripe_end_d2_T )))) && accu_stripe_end_d1 != accu_stripe_end_d2 ;
  logic [0:0] accu_stripe_end_d1_C0 ;
  logic [0:0] accu_stripe_end_d1_R0 ;
  logic [0:0] accu_stripe_end_d1_X0 ;
  assign accu_stripe_end_d1_C0 = { 1{ accu_ctrl_valid_d1 }} ;
  assign accu_stripe_end_d1_R0 = { 1{ accu_ctrl_valid_d1 }} & ( _055__R | ( { 1{ accu_ctrl_valid_d1_T  }} & _055__C ));
  assign accu_stripe_end_d1_X0 = { 1{ accu_ctrl_valid_d1 }} & _055__X ;
  logic [0:0] accu_stripe_end_d2_C1 ;
  logic [0:0] accu_stripe_end_d2_R1 ;
  logic [0:0] accu_stripe_end_d2_X1 ;
  assign accu_stripe_end_d2_C1 = { 1{ !accu_ctrl_valid_d1 }} ;
  assign accu_stripe_end_d2_R1 = { 1{ !accu_ctrl_valid_d1 }} & ( _055__R | ( { 1{ accu_ctrl_valid_d1_T  }} & _055__C ));
  assign accu_stripe_end_d2_X1 = { 1{ !accu_ctrl_valid_d1 }} & _055__X ;
  assign _053_ = accu_ctrl_valid_d1 ? accu_rd_mask_d1 : accu_rd_mask_d2;
  logic [0:0] accu_ctrl_valid_d1_C12 ;
  logic [0:0] accu_ctrl_valid_d1_R12 ;
  logic [0:0] accu_ctrl_valid_d1_X12 ;
  assign accu_ctrl_valid_d1_C12 = | _053__C ;
  assign accu_ctrl_valid_d1_X12 = | _053__X ;
  assign _053__T = accu_ctrl_valid_d1 ? ( { 8{ accu_ctrl_valid_d1_T  }} | accu_rd_mask_d1_T ) : ( { 8{ accu_ctrl_valid_d1_T  }} | accu_rd_mask_d2_T );
  assign _053__S = accu_ctrl_valid_d1 ? accu_rd_mask_d1_S : accu_rd_mask_d2_S ;
  assign accu_ctrl_valid_d1_R12 = ( | (_053__R | ( _053__C & ( { 8{ accu_ctrl_valid_d1 }} & accu_rd_mask_d1_T | { 8{ !accu_ctrl_valid_d1 }} & accu_rd_mask_d2_T )))) && accu_rd_mask_d1 != accu_rd_mask_d2 ;
  logic [7:0] accu_rd_mask_d1_C0 ;
  logic [7:0] accu_rd_mask_d1_R0 ;
  logic [7:0] accu_rd_mask_d1_X0 ;
  assign accu_rd_mask_d1_C0 = { 8{ accu_ctrl_valid_d1 }} ;
  assign accu_rd_mask_d1_R0 = { 8{ accu_ctrl_valid_d1 }} & ( _053__R | ( { 8{ accu_ctrl_valid_d1_T  }} & _053__C ));
  assign accu_rd_mask_d1_X0 = { 8{ accu_ctrl_valid_d1 }} & _053__X ;
  logic [7:0] accu_rd_mask_d2_C1 ;
  logic [7:0] accu_rd_mask_d2_R1 ;
  logic [7:0] accu_rd_mask_d2_X1 ;
  assign accu_rd_mask_d2_C1 = { 8{ !accu_ctrl_valid_d1 }} ;
  assign accu_rd_mask_d2_R1 = { 8{ !accu_ctrl_valid_d1 }} & ( _053__R | ( { 8{ accu_ctrl_valid_d1_T  }} & _053__C ));
  assign accu_rd_mask_d2_X1 = { 8{ !accu_ctrl_valid_d1 }} & _053__X ;
  assign _025_ = accu_ctrl_valid_d1 ? accu_mode_d1 : accu_mode_d2;
  logic [0:0] accu_ctrl_valid_d1_C13 ;
  logic [0:0] accu_ctrl_valid_d1_R13 ;
  logic [0:0] accu_ctrl_valid_d1_X13 ;
  assign accu_ctrl_valid_d1_C13 = | _025__C ;
  assign accu_ctrl_valid_d1_X13 = | _025__X ;
  assign _025__T = accu_ctrl_valid_d1 ? ( { 4{ accu_ctrl_valid_d1_T  }} | accu_mode_d1_T ) : ( { 4{ accu_ctrl_valid_d1_T  }} | accu_mode_d2_T );
  assign _025__S = accu_ctrl_valid_d1 ? accu_mode_d1_S : accu_mode_d2_S ;
  assign accu_ctrl_valid_d1_R13 = ( | (_025__R | ( _025__C & ( { 4{ accu_ctrl_valid_d1 }} & accu_mode_d1_T | { 4{ !accu_ctrl_valid_d1 }} & accu_mode_d2_T )))) && accu_mode_d1 != accu_mode_d2 ;
  logic [3:0] accu_mode_d1_C0 ;
  logic [3:0] accu_mode_d1_R0 ;
  logic [3:0] accu_mode_d1_X0 ;
  assign accu_mode_d1_C0 = { 4{ accu_ctrl_valid_d1 }} ;
  assign accu_mode_d1_R0 = { 4{ accu_ctrl_valid_d1 }} & ( _025__R | ( { 4{ accu_ctrl_valid_d1_T  }} & _025__C ));
  assign accu_mode_d1_X0 = { 4{ accu_ctrl_valid_d1 }} & _025__X ;
  logic [3:0] accu_mode_d2_C1 ;
  logic [3:0] accu_mode_d2_R1 ;
  logic [3:0] accu_mode_d2_X1 ;
  assign accu_mode_d2_C1 = { 4{ !accu_ctrl_valid_d1 }} ;
  assign accu_mode_d2_R1 = { 4{ !accu_ctrl_valid_d1 }} & ( _025__R | ( { 4{ accu_ctrl_valid_d1_T  }} & _025__C ));
  assign accu_mode_d2_X1 = { 4{ !accu_ctrl_valid_d1 }} & _025__X ;
  assign _001_ = accu_ctrl_valid_d1 ? accu_addr_d1 : accu_addr_d2;
  logic [0:0] accu_ctrl_valid_d1_C14 ;
  logic [0:0] accu_ctrl_valid_d1_R14 ;
  logic [0:0] accu_ctrl_valid_d1_X14 ;
  assign accu_ctrl_valid_d1_C14 = | _001__C ;
  assign accu_ctrl_valid_d1_X14 = | _001__X ;
  assign _001__T = accu_ctrl_valid_d1 ? ( { 5{ accu_ctrl_valid_d1_T  }} | accu_addr_d1_T ) : ( { 5{ accu_ctrl_valid_d1_T  }} | accu_addr_d2_T );
  assign _001__S = accu_ctrl_valid_d1 ? accu_addr_d1_S : accu_addr_d2_S ;
  assign accu_ctrl_valid_d1_R14 = ( | (_001__R | ( _001__C & ( { 5{ accu_ctrl_valid_d1 }} & accu_addr_d1_T | { 5{ !accu_ctrl_valid_d1 }} & accu_addr_d2_T )))) && accu_addr_d1 != accu_addr_d2 ;
  logic [4:0] accu_addr_d1_C0 ;
  logic [4:0] accu_addr_d1_R0 ;
  logic [4:0] accu_addr_d1_X0 ;
  assign accu_addr_d1_C0 = { 5{ accu_ctrl_valid_d1 }} ;
  assign accu_addr_d1_R0 = { 5{ accu_ctrl_valid_d1 }} & ( _001__R | ( { 5{ accu_ctrl_valid_d1_T  }} & _001__C ));
  assign accu_addr_d1_X0 = { 5{ accu_ctrl_valid_d1 }} & _001__X ;
  logic [4:0] accu_addr_d2_C1 ;
  logic [4:0] accu_addr_d2_R1 ;
  logic [4:0] accu_addr_d2_X1 ;
  assign accu_addr_d2_C1 = { 5{ !accu_ctrl_valid_d1 }} ;
  assign accu_addr_d2_R1 = { 5{ !accu_ctrl_valid_d1 }} & ( _001__R | ( { 5{ accu_ctrl_valid_d1_T  }} & _001__C ));
  assign accu_addr_d2_X1 = { 5{ !accu_ctrl_valid_d1 }} & _001__X ;
  assign _049_ = accu_valid[0] ? accu_ram_sel_7_d0 : accu_ram_sel_7_d1;
  assign { accu_valid_R11 [8:1] } = 0;
  assign { accu_valid_X11 [8:1] } = 0;
  assign { accu_valid_C11 [8:1] } = 0;
  logic [8:0] accu_valid_C12 ;
  logic [8:0] accu_valid_R12 ;
  logic [8:0] accu_valid_X12 ;
  assign accu_valid_C12 [0] = | _049__C ;
  assign accu_valid_X12 [0] = | _049__X ;
  assign _049__T = accu_valid[0] ? ( { 1{ accu_valid_T  [0] }} | accu_ram_sel_7_d0_T ) : ( { 1{ accu_valid_T  [0] }} | accu_ram_sel_7_d1_T );
  assign _049__S = accu_valid[0] ? accu_ram_sel_7_d0_S : accu_ram_sel_7_d1_S ;
  assign accu_valid_R12 [0] = ( | (_049__R | ( _049__C & ( { 1{ accu_valid[0] }} & accu_ram_sel_7_d0_T | { 1{ !accu_valid[0] }} & accu_ram_sel_7_d1_T )))) && accu_ram_sel_7_d0 != accu_ram_sel_7_d1 ;
  logic [0:0] accu_ram_sel_7_d0_C0 ;
  logic [0:0] accu_ram_sel_7_d0_R0 ;
  logic [0:0] accu_ram_sel_7_d0_X0 ;
  assign accu_ram_sel_7_d0_C0 = { 1{ accu_valid[0] }} ;
  assign accu_ram_sel_7_d0_R0 = { 1{ accu_valid[0] }} & ( _049__R | ( { 1{ accu_valid_T  [0] }} & _049__C ));
  assign accu_ram_sel_7_d0_X0 = { 1{ accu_valid[0] }} & _049__X ;
  logic [0:0] accu_ram_sel_7_d1_C1 ;
  logic [0:0] accu_ram_sel_7_d1_R1 ;
  logic [0:0] accu_ram_sel_7_d1_X1 ;
  assign accu_ram_sel_7_d1_C1 = { 1{ !accu_valid[0] }} ;
  assign accu_ram_sel_7_d1_R1 = { 1{ !accu_valid[0] }} & ( _049__R | ( { 1{ accu_valid_T  [0] }} & _049__C ));
  assign accu_ram_sel_7_d1_X1 = { 1{ !accu_valid[0] }} & _049__X ;
  assign _046_ = accu_valid[0] ? accu_ram_sel_6_d0 : accu_ram_sel_6_d1;
  assign { accu_valid_R12 [8:1] } = 0;
  assign { accu_valid_X12 [8:1] } = 0;
  assign { accu_valid_C12 [8:1] } = 0;
  logic [8:0] accu_valid_C13 ;
  logic [8:0] accu_valid_R13 ;
  logic [8:0] accu_valid_X13 ;
  assign accu_valid_C13 [0] = | _046__C ;
  assign accu_valid_X13 [0] = | _046__X ;
  assign _046__T = accu_valid[0] ? ( { 1{ accu_valid_T  [0] }} | accu_ram_sel_6_d0_T ) : ( { 1{ accu_valid_T  [0] }} | accu_ram_sel_6_d1_T );
  assign _046__S = accu_valid[0] ? accu_ram_sel_6_d0_S : accu_ram_sel_6_d1_S ;
  assign accu_valid_R13 [0] = ( | (_046__R | ( _046__C & ( { 1{ accu_valid[0] }} & accu_ram_sel_6_d0_T | { 1{ !accu_valid[0] }} & accu_ram_sel_6_d1_T )))) && accu_ram_sel_6_d0 != accu_ram_sel_6_d1 ;
  logic [0:0] accu_ram_sel_6_d0_C0 ;
  logic [0:0] accu_ram_sel_6_d0_R0 ;
  logic [0:0] accu_ram_sel_6_d0_X0 ;
  assign accu_ram_sel_6_d0_C0 = { 1{ accu_valid[0] }} ;
  assign accu_ram_sel_6_d0_R0 = { 1{ accu_valid[0] }} & ( _046__R | ( { 1{ accu_valid_T  [0] }} & _046__C ));
  assign accu_ram_sel_6_d0_X0 = { 1{ accu_valid[0] }} & _046__X ;
  logic [0:0] accu_ram_sel_6_d1_C1 ;
  logic [0:0] accu_ram_sel_6_d1_R1 ;
  logic [0:0] accu_ram_sel_6_d1_X1 ;
  assign accu_ram_sel_6_d1_C1 = { 1{ !accu_valid[0] }} ;
  assign accu_ram_sel_6_d1_R1 = { 1{ !accu_valid[0] }} & ( _046__R | ( { 1{ accu_valid_T  [0] }} & _046__C ));
  assign accu_ram_sel_6_d1_X1 = { 1{ !accu_valid[0] }} & _046__X ;
  assign _043_ = accu_valid[0] ? accu_ram_sel_5_d0 : accu_ram_sel_5_d1;
  assign { accu_valid_R13 [8:1] } = 0;
  assign { accu_valid_X13 [8:1] } = 0;
  assign { accu_valid_C13 [8:1] } = 0;
  logic [8:0] accu_valid_C14 ;
  logic [8:0] accu_valid_R14 ;
  logic [8:0] accu_valid_X14 ;
  assign accu_valid_C14 [0] = | _043__C ;
  assign accu_valid_X14 [0] = | _043__X ;
  assign _043__T = accu_valid[0] ? ( { 1{ accu_valid_T  [0] }} | accu_ram_sel_5_d0_T ) : ( { 1{ accu_valid_T  [0] }} | accu_ram_sel_5_d1_T );
  assign _043__S = accu_valid[0] ? accu_ram_sel_5_d0_S : accu_ram_sel_5_d1_S ;
  assign accu_valid_R14 [0] = ( | (_043__R | ( _043__C & ( { 1{ accu_valid[0] }} & accu_ram_sel_5_d0_T | { 1{ !accu_valid[0] }} & accu_ram_sel_5_d1_T )))) && accu_ram_sel_5_d0 != accu_ram_sel_5_d1 ;
  logic [0:0] accu_ram_sel_5_d0_C0 ;
  logic [0:0] accu_ram_sel_5_d0_R0 ;
  logic [0:0] accu_ram_sel_5_d0_X0 ;
  assign accu_ram_sel_5_d0_C0 = { 1{ accu_valid[0] }} ;
  assign accu_ram_sel_5_d0_R0 = { 1{ accu_valid[0] }} & ( _043__R | ( { 1{ accu_valid_T  [0] }} & _043__C ));
  assign accu_ram_sel_5_d0_X0 = { 1{ accu_valid[0] }} & _043__X ;
  logic [0:0] accu_ram_sel_5_d1_C1 ;
  logic [0:0] accu_ram_sel_5_d1_R1 ;
  logic [0:0] accu_ram_sel_5_d1_X1 ;
  assign accu_ram_sel_5_d1_C1 = { 1{ !accu_valid[0] }} ;
  assign accu_ram_sel_5_d1_R1 = { 1{ !accu_valid[0] }} & ( _043__R | ( { 1{ accu_valid_T  [0] }} & _043__C ));
  assign accu_ram_sel_5_d1_X1 = { 1{ !accu_valid[0] }} & _043__X ;
  assign _040_ = accu_valid[0] ? accu_ram_sel_4_d0 : accu_ram_sel_4_d1;
  assign { accu_valid_R14 [8:1] } = 0;
  assign { accu_valid_X14 [8:1] } = 0;
  assign { accu_valid_C14 [8:1] } = 0;
  logic [8:0] accu_valid_C15 ;
  logic [8:0] accu_valid_R15 ;
  logic [8:0] accu_valid_X15 ;
  assign accu_valid_C15 [0] = | _040__C ;
  assign accu_valid_X15 [0] = | _040__X ;
  assign _040__T = accu_valid[0] ? ( { 1{ accu_valid_T  [0] }} | accu_ram_sel_4_d0_T ) : ( { 1{ accu_valid_T  [0] }} | accu_ram_sel_4_d1_T );
  assign _040__S = accu_valid[0] ? accu_ram_sel_4_d0_S : accu_ram_sel_4_d1_S ;
  assign accu_valid_R15 [0] = ( | (_040__R | ( _040__C & ( { 1{ accu_valid[0] }} & accu_ram_sel_4_d0_T | { 1{ !accu_valid[0] }} & accu_ram_sel_4_d1_T )))) && accu_ram_sel_4_d0 != accu_ram_sel_4_d1 ;
  logic [0:0] accu_ram_sel_4_d0_C0 ;
  logic [0:0] accu_ram_sel_4_d0_R0 ;
  logic [0:0] accu_ram_sel_4_d0_X0 ;
  assign accu_ram_sel_4_d0_C0 = { 1{ accu_valid[0] }} ;
  assign accu_ram_sel_4_d0_R0 = { 1{ accu_valid[0] }} & ( _040__R | ( { 1{ accu_valid_T  [0] }} & _040__C ));
  assign accu_ram_sel_4_d0_X0 = { 1{ accu_valid[0] }} & _040__X ;
  logic [0:0] accu_ram_sel_4_d1_C1 ;
  logic [0:0] accu_ram_sel_4_d1_R1 ;
  logic [0:0] accu_ram_sel_4_d1_X1 ;
  assign accu_ram_sel_4_d1_C1 = { 1{ !accu_valid[0] }} ;
  assign accu_ram_sel_4_d1_R1 = { 1{ !accu_valid[0] }} & ( _040__R | ( { 1{ accu_valid_T  [0] }} & _040__C ));
  assign accu_ram_sel_4_d1_X1 = { 1{ !accu_valid[0] }} & _040__X ;
  assign _037_ = accu_valid[0] ? accu_ram_sel_3_d0 : accu_ram_sel_3_d1;
  assign { accu_valid_R15 [8:1] } = 0;
  assign { accu_valid_X15 [8:1] } = 0;
  assign { accu_valid_C15 [8:1] } = 0;
  logic [8:0] accu_valid_C16 ;
  logic [8:0] accu_valid_R16 ;
  logic [8:0] accu_valid_X16 ;
  assign accu_valid_C16 [0] = | _037__C ;
  assign accu_valid_X16 [0] = | _037__X ;
  assign _037__T = accu_valid[0] ? ( { 1{ accu_valid_T  [0] }} | accu_ram_sel_3_d0_T ) : ( { 1{ accu_valid_T  [0] }} | accu_ram_sel_3_d1_T );
  assign _037__S = accu_valid[0] ? accu_ram_sel_3_d0_S : accu_ram_sel_3_d1_S ;
  assign accu_valid_R16 [0] = ( | (_037__R | ( _037__C & ( { 1{ accu_valid[0] }} & accu_ram_sel_3_d0_T | { 1{ !accu_valid[0] }} & accu_ram_sel_3_d1_T )))) && accu_ram_sel_3_d0 != accu_ram_sel_3_d1 ;
  logic [0:0] accu_ram_sel_3_d0_C0 ;
  logic [0:0] accu_ram_sel_3_d0_R0 ;
  logic [0:0] accu_ram_sel_3_d0_X0 ;
  assign accu_ram_sel_3_d0_C0 = { 1{ accu_valid[0] }} ;
  assign accu_ram_sel_3_d0_R0 = { 1{ accu_valid[0] }} & ( _037__R | ( { 1{ accu_valid_T  [0] }} & _037__C ));
  assign accu_ram_sel_3_d0_X0 = { 1{ accu_valid[0] }} & _037__X ;
  logic [0:0] accu_ram_sel_3_d1_C1 ;
  logic [0:0] accu_ram_sel_3_d1_R1 ;
  logic [0:0] accu_ram_sel_3_d1_X1 ;
  assign accu_ram_sel_3_d1_C1 = { 1{ !accu_valid[0] }} ;
  assign accu_ram_sel_3_d1_R1 = { 1{ !accu_valid[0] }} & ( _037__R | ( { 1{ accu_valid_T  [0] }} & _037__C ));
  assign accu_ram_sel_3_d1_X1 = { 1{ !accu_valid[0] }} & _037__X ;
  assign _034_ = accu_valid[0] ? accu_ram_sel_2_d0 : accu_ram_sel_2_d1;
  assign { accu_valid_R16 [8:1] } = 0;
  assign { accu_valid_X16 [8:1] } = 0;
  assign { accu_valid_C16 [8:1] } = 0;
  logic [8:0] accu_valid_C17 ;
  logic [8:0] accu_valid_R17 ;
  logic [8:0] accu_valid_X17 ;
  assign accu_valid_C17 [0] = | _034__C ;
  assign accu_valid_X17 [0] = | _034__X ;
  assign _034__T = accu_valid[0] ? ( { 1{ accu_valid_T  [0] }} | accu_ram_sel_2_d0_T ) : ( { 1{ accu_valid_T  [0] }} | accu_ram_sel_2_d1_T );
  assign _034__S = accu_valid[0] ? accu_ram_sel_2_d0_S : accu_ram_sel_2_d1_S ;
  assign accu_valid_R17 [0] = ( | (_034__R | ( _034__C & ( { 1{ accu_valid[0] }} & accu_ram_sel_2_d0_T | { 1{ !accu_valid[0] }} & accu_ram_sel_2_d1_T )))) && accu_ram_sel_2_d0 != accu_ram_sel_2_d1 ;
  logic [0:0] accu_ram_sel_2_d0_C0 ;
  logic [0:0] accu_ram_sel_2_d0_R0 ;
  logic [0:0] accu_ram_sel_2_d0_X0 ;
  assign accu_ram_sel_2_d0_C0 = { 1{ accu_valid[0] }} ;
  assign accu_ram_sel_2_d0_R0 = { 1{ accu_valid[0] }} & ( _034__R | ( { 1{ accu_valid_T  [0] }} & _034__C ));
  assign accu_ram_sel_2_d0_X0 = { 1{ accu_valid[0] }} & _034__X ;
  logic [0:0] accu_ram_sel_2_d1_C1 ;
  logic [0:0] accu_ram_sel_2_d1_R1 ;
  logic [0:0] accu_ram_sel_2_d1_X1 ;
  assign accu_ram_sel_2_d1_C1 = { 1{ !accu_valid[0] }} ;
  assign accu_ram_sel_2_d1_R1 = { 1{ !accu_valid[0] }} & ( _034__R | ( { 1{ accu_valid_T  [0] }} & _034__C ));
  assign accu_ram_sel_2_d1_X1 = { 1{ !accu_valid[0] }} & _034__X ;
  assign _031_ = accu_valid[0] ? accu_ram_sel_1_d0 : accu_ram_sel_1_d1;
  assign { accu_valid_R17 [8:1] } = 0;
  assign { accu_valid_X17 [8:1] } = 0;
  assign { accu_valid_C17 [8:1] } = 0;
  logic [8:0] accu_valid_C18 ;
  logic [8:0] accu_valid_R18 ;
  logic [8:0] accu_valid_X18 ;
  assign accu_valid_C18 [0] = | _031__C ;
  assign accu_valid_X18 [0] = | _031__X ;
  assign _031__T = accu_valid[0] ? ( { 1{ accu_valid_T  [0] }} | accu_ram_sel_1_d0_T ) : ( { 1{ accu_valid_T  [0] }} | accu_ram_sel_1_d1_T );
  assign _031__S = accu_valid[0] ? accu_ram_sel_1_d0_S : accu_ram_sel_1_d1_S ;
  assign accu_valid_R18 [0] = ( | (_031__R | ( _031__C & ( { 1{ accu_valid[0] }} & accu_ram_sel_1_d0_T | { 1{ !accu_valid[0] }} & accu_ram_sel_1_d1_T )))) && accu_ram_sel_1_d0 != accu_ram_sel_1_d1 ;
  logic [0:0] accu_ram_sel_1_d0_C0 ;
  logic [0:0] accu_ram_sel_1_d0_R0 ;
  logic [0:0] accu_ram_sel_1_d0_X0 ;
  assign accu_ram_sel_1_d0_C0 = { 1{ accu_valid[0] }} ;
  assign accu_ram_sel_1_d0_R0 = { 1{ accu_valid[0] }} & ( _031__R | ( { 1{ accu_valid_T  [0] }} & _031__C ));
  assign accu_ram_sel_1_d0_X0 = { 1{ accu_valid[0] }} & _031__X ;
  logic [0:0] accu_ram_sel_1_d1_C1 ;
  logic [0:0] accu_ram_sel_1_d1_R1 ;
  logic [0:0] accu_ram_sel_1_d1_X1 ;
  assign accu_ram_sel_1_d1_C1 = { 1{ !accu_valid[0] }} ;
  assign accu_ram_sel_1_d1_R1 = { 1{ !accu_valid[0] }} & ( _031__R | ( { 1{ accu_valid_T  [0] }} & _031__C ));
  assign accu_ram_sel_1_d1_X1 = { 1{ !accu_valid[0] }} & _031__X ;
  assign _028_ = accu_valid[0] ? accu_ram_sel_0_d0 : accu_ram_sel_0_d1;
  assign { accu_valid_R18 [8:1] } = 0;
  assign { accu_valid_X18 [8:1] } = 0;
  assign { accu_valid_C18 [8:1] } = 0;
  logic [8:0] accu_valid_C19 ;
  logic [8:0] accu_valid_R19 ;
  logic [8:0] accu_valid_X19 ;
  assign accu_valid_C19 [0] = | _028__C ;
  assign accu_valid_X19 [0] = | _028__X ;
  assign _028__T = accu_valid[0] ? ( { 1{ accu_valid_T  [0] }} | accu_ram_sel_0_d0_T ) : ( { 1{ accu_valid_T  [0] }} | accu_ram_sel_0_d1_T );
  assign _028__S = accu_valid[0] ? accu_ram_sel_0_d0_S : accu_ram_sel_0_d1_S ;
  assign accu_valid_R19 [0] = ( | (_028__R | ( _028__C & ( { 1{ accu_valid[0] }} & accu_ram_sel_0_d0_T | { 1{ !accu_valid[0] }} & accu_ram_sel_0_d1_T )))) && accu_ram_sel_0_d0 != accu_ram_sel_0_d1 ;
  logic [0:0] accu_ram_sel_0_d0_C0 ;
  logic [0:0] accu_ram_sel_0_d0_R0 ;
  logic [0:0] accu_ram_sel_0_d0_X0 ;
  assign accu_ram_sel_0_d0_C0 = { 1{ accu_valid[0] }} ;
  assign accu_ram_sel_0_d0_R0 = { 1{ accu_valid[0] }} & ( _028__R | ( { 1{ accu_valid_T  [0] }} & _028__C ));
  assign accu_ram_sel_0_d0_X0 = { 1{ accu_valid[0] }} & _028__X ;
  logic [0:0] accu_ram_sel_0_d1_C1 ;
  logic [0:0] accu_ram_sel_0_d1_R1 ;
  logic [0:0] accu_ram_sel_0_d1_X1 ;
  assign accu_ram_sel_0_d1_C1 = { 1{ !accu_valid[0] }} ;
  assign accu_ram_sel_0_d1_R1 = { 1{ !accu_valid[0] }} & ( _028__R | ( { 1{ accu_valid_T  [0] }} & _028__C ));
  assign accu_ram_sel_0_d1_X1 = { 1{ !accu_valid[0] }} & _028__X ;
  assign _021_ = accu_valid[0] ? accu_pd[8] : accu_layer_end_d1;
  assign { accu_valid_R19 [8:1] } = 0;
  assign { accu_valid_X19 [8:1] } = 0;
  assign { accu_valid_C19 [8:1] } = 0;
  logic [8:0] accu_valid_C20 ;
  logic [8:0] accu_valid_R20 ;
  logic [8:0] accu_valid_X20 ;
  assign accu_valid_C20 [0] = | _021__C ;
  assign accu_valid_X20 [0] = | _021__X ;
  assign _021__T = accu_valid[0] ? ( { 1{ accu_valid_T  [0] }} | accu_pd_T [8] ) : ( { 1{ accu_valid_T  [0] }} | accu_layer_end_d1_T );
  assign _021__S = accu_valid[0] ? accu_pd_S : accu_layer_end_d1_S ;
  assign accu_valid_R20 [0] = ( | (_021__R | ( _021__C & ( { 1{ accu_valid[0] }} & accu_pd_T [8] | { 1{ !accu_valid[0] }} & accu_layer_end_d1_T )))) && accu_pd[8] != accu_layer_end_d1 ;
  assign accu_pd_C1 [8] = { 1{ accu_valid[0] }} ;
  assign accu_pd_R1 [8] = { 1{ accu_valid[0] }} & ( _021__R | ( { 1{ accu_valid_T  [0] }} & _021__C ));
  assign accu_pd_X1 [8] = { 1{ accu_valid[0] }} & _021__X ;
  logic [0:0] accu_layer_end_d1_C1 ;
  logic [0:0] accu_layer_end_d1_R1 ;
  logic [0:0] accu_layer_end_d1_X1 ;
  assign accu_layer_end_d1_C1 = { 1{ !accu_valid[0] }} ;
  assign accu_layer_end_d1_R1 = { 1{ !accu_valid[0] }} & ( _021__R | ( { 1{ accu_valid_T  [0] }} & _021__C ));
  assign accu_layer_end_d1_X1 = { 1{ !accu_valid[0] }} & _021__X ;
  assign _002_ = accu_valid[0] ? accu_pd[7] : accu_channel_end_d1;
  assign { accu_valid_R20 [8:1] } = 0;
  assign { accu_valid_X20 [8:1] } = 0;
  assign { accu_valid_C20 [8:1] } = 0;
  logic [8:0] accu_valid_C21 ;
  logic [8:0] accu_valid_R21 ;
  logic [8:0] accu_valid_X21 ;
  assign accu_valid_C21 [0] = | _002__C ;
  assign accu_valid_X21 [0] = | _002__X ;
  assign _002__T = accu_valid[0] ? ( { 1{ accu_valid_T  [0] }} | accu_pd_T [7] ) : ( { 1{ accu_valid_T  [0] }} | accu_channel_end_d1_T );
  assign _002__S = accu_valid[0] ? accu_pd_S : accu_channel_end_d1_S ;
  assign accu_valid_R21 [0] = ( | (_002__R | ( _002__C & ( { 1{ accu_valid[0] }} & accu_pd_T [7] | { 1{ !accu_valid[0] }} & accu_channel_end_d1_T )))) && accu_pd[7] != accu_channel_end_d1 ;
  assign accu_pd_C1 [7] = { 1{ accu_valid[0] }} ;
  assign accu_pd_R1 [7] = { 1{ accu_valid[0] }} & ( _002__R | ( { 1{ accu_valid_T  [0] }} & _002__C ));
  assign accu_pd_X1 [7] = { 1{ accu_valid[0] }} & _002__X ;
  logic [0:0] accu_channel_end_d1_C1 ;
  logic [0:0] accu_channel_end_d1_R1 ;
  logic [0:0] accu_channel_end_d1_X1 ;
  assign accu_channel_end_d1_C1 = { 1{ !accu_valid[0] }} ;
  assign accu_channel_end_d1_R1 = { 1{ !accu_valid[0] }} & ( _002__R | ( { 1{ accu_valid_T  [0] }} & _002__C ));
  assign accu_channel_end_d1_X1 = { 1{ !accu_valid[0] }} & _002__X ;
  assign _054_ = accu_valid[0] ? accu_pd[6] : accu_stripe_end_d1;
  assign { accu_valid_R21 [8:1] } = 0;
  assign { accu_valid_X21 [8:1] } = 0;
  assign { accu_valid_C21 [8:1] } = 0;
  logic [8:0] accu_valid_C22 ;
  logic [8:0] accu_valid_R22 ;
  logic [8:0] accu_valid_X22 ;
  assign accu_valid_C22 [0] = | _054__C ;
  assign accu_valid_X22 [0] = | _054__X ;
  assign _054__T = accu_valid[0] ? ( { 1{ accu_valid_T  [0] }} | accu_pd_T [6] ) : ( { 1{ accu_valid_T  [0] }} | accu_stripe_end_d1_T );
  assign _054__S = accu_valid[0] ? accu_pd_S : accu_stripe_end_d1_S ;
  assign accu_valid_R22 [0] = ( | (_054__R | ( _054__C & ( { 1{ accu_valid[0] }} & accu_pd_T [6] | { 1{ !accu_valid[0] }} & accu_stripe_end_d1_T )))) && accu_pd[6] != accu_stripe_end_d1 ;
  assign { accu_pd_R1 [0], accu_pd_R1 [1], accu_pd_R1 [2], accu_pd_R1 [3], accu_pd_R1 [4], accu_pd_R1 [5] } = 0;
  assign { accu_pd_X1 [0], accu_pd_X1 [1], accu_pd_X1 [2], accu_pd_X1 [3], accu_pd_X1 [4], accu_pd_X1 [5] } = 0;
  assign { accu_pd_C1 [0], accu_pd_C1 [1], accu_pd_C1 [2], accu_pd_C1 [3], accu_pd_C1 [4], accu_pd_C1 [5] } = 0;
  logic [8:0] accu_pd_C2 ;
  logic [8:0] accu_pd_R2 ;
  logic [8:0] accu_pd_X2 ;
  assign accu_pd_C2 [6] = { 1{ accu_valid[0] }} ;
  assign accu_pd_R2 [6] = { 1{ accu_valid[0] }} & ( _054__R | ( { 1{ accu_valid_T  [0] }} & _054__C ));
  assign accu_pd_X2 [6] = { 1{ accu_valid[0] }} & _054__X ;
  logic [0:0] accu_stripe_end_d1_C1 ;
  logic [0:0] accu_stripe_end_d1_R1 ;
  logic [0:0] accu_stripe_end_d1_X1 ;
  assign accu_stripe_end_d1_C1 = { 1{ !accu_valid[0] }} ;
  assign accu_stripe_end_d1_R1 = { 1{ !accu_valid[0] }} & ( _054__R | ( { 1{ accu_valid_T  [0] }} & _054__C ));
  assign accu_stripe_end_d1_X1 = { 1{ !accu_valid[0] }} & _054__X ;
  assign _052_ = accu_valid[0] ? accu_rd_mask : accu_rd_mask_d1;
  assign { accu_valid_R22 [8:1] } = 0;
  assign { accu_valid_X22 [8:1] } = 0;
  assign { accu_valid_C22 [8:1] } = 0;
  logic [8:0] accu_valid_C23 ;
  logic [8:0] accu_valid_R23 ;
  logic [8:0] accu_valid_X23 ;
  assign accu_valid_C23 [0] = | _052__C ;
  assign accu_valid_X23 [0] = | _052__X ;
  assign _052__T = accu_valid[0] ? ( { 8{ accu_valid_T  [0] }} | accu_rd_mask_T ) : ( { 8{ accu_valid_T  [0] }} | accu_rd_mask_d1_T );
  assign _052__S = accu_valid[0] ? accu_rd_mask_S : accu_rd_mask_d1_S ;
  assign accu_valid_R23 [0] = ( | (_052__R | ( _052__C & ( { 8{ accu_valid[0] }} & accu_rd_mask_T | { 8{ !accu_valid[0] }} & accu_rd_mask_d1_T )))) && accu_rd_mask != accu_rd_mask_d1 ;
  logic [7:0] accu_rd_mask_C1 ;
  logic [7:0] accu_rd_mask_R1 ;
  logic [7:0] accu_rd_mask_X1 ;
  assign accu_rd_mask_C1 = { 8{ accu_valid[0] }} ;
  assign accu_rd_mask_R1 = { 8{ accu_valid[0] }} & ( _052__R | ( { 8{ accu_valid_T  [0] }} & _052__C ));
  assign accu_rd_mask_X1 = { 8{ accu_valid[0] }} & _052__X ;
  logic [7:0] accu_rd_mask_d1_C1 ;
  logic [7:0] accu_rd_mask_d1_R1 ;
  logic [7:0] accu_rd_mask_d1_X1 ;
  assign accu_rd_mask_d1_C1 = { 8{ !accu_valid[0] }} ;
  assign accu_rd_mask_d1_R1 = { 8{ !accu_valid[0] }} & ( _052__R | ( { 8{ accu_valid_T  [0] }} & _052__C ));
  assign accu_rd_mask_d1_X1 = { 8{ !accu_valid[0] }} & _052__X ;
  assign _024_ = accu_valid[0] ? accu_mode_d0 : accu_mode_d1;
  assign { accu_valid_R23 [8:1] } = 0;
  assign { accu_valid_X23 [8:1] } = 0;
  assign { accu_valid_C23 [8:1] } = 0;
  logic [8:0] accu_valid_C24 ;
  logic [8:0] accu_valid_R24 ;
  logic [8:0] accu_valid_X24 ;
  assign accu_valid_C24 [0] = | _024__C ;
  assign accu_valid_X24 [0] = | _024__X ;
  assign _024__T = accu_valid[0] ? ( { 4{ accu_valid_T  [0] }} | accu_mode_d0_T ) : ( { 4{ accu_valid_T  [0] }} | accu_mode_d1_T );
  assign _024__S = accu_valid[0] ? accu_mode_d0_S : accu_mode_d1_S ;
  assign accu_valid_R24 [0] = ( | (_024__R | ( _024__C & ( { 4{ accu_valid[0] }} & accu_mode_d0_T | { 4{ !accu_valid[0] }} & accu_mode_d1_T )))) && accu_mode_d0 != accu_mode_d1 ;
  logic [3:0] accu_mode_d0_C0 ;
  logic [3:0] accu_mode_d0_R0 ;
  logic [3:0] accu_mode_d0_X0 ;
  assign accu_mode_d0_C0 = { 4{ accu_valid[0] }} ;
  assign accu_mode_d0_R0 = { 4{ accu_valid[0] }} & ( _024__R | ( { 4{ accu_valid_T  [0] }} & _024__C ));
  assign accu_mode_d0_X0 = { 4{ accu_valid[0] }} & _024__X ;
  logic [3:0] accu_mode_d1_C1 ;
  logic [3:0] accu_mode_d1_R1 ;
  logic [3:0] accu_mode_d1_X1 ;
  assign accu_mode_d1_C1 = { 4{ !accu_valid[0] }} ;
  assign accu_mode_d1_R1 = { 4{ !accu_valid[0] }} & ( _024__R | ( { 4{ accu_valid_T  [0] }} & _024__C ));
  assign accu_mode_d1_X1 = { 4{ !accu_valid[0] }} & _024__X ;
  assign _000_ = accu_valid[0] ? accu_addr_d0 : accu_addr_d1;
  assign { accu_valid_R24 [8:1] } = 0;
  assign { accu_valid_X24 [8:1] } = 0;
  assign { accu_valid_C24 [8:1] } = 0;
  logic [8:0] accu_valid_C25 ;
  logic [8:0] accu_valid_R25 ;
  logic [8:0] accu_valid_X25 ;
  assign accu_valid_C25 [0] = | _000__C ;
  assign accu_valid_X25 [0] = | _000__X ;
  assign _000__T = accu_valid[0] ? ( { 5{ accu_valid_T  [0] }} | accu_addr_d0_T ) : ( { 5{ accu_valid_T  [0] }} | accu_addr_d1_T );
  assign _000__S = accu_valid[0] ? accu_addr_d0_S : accu_addr_d1_S ;
  assign accu_valid_R25 [0] = ( | (_000__R | ( _000__C & ( { 5{ accu_valid[0] }} & accu_addr_d0_T | { 5{ !accu_valid[0] }} & accu_addr_d1_T )))) && accu_addr_d0 != accu_addr_d1 ;
  logic [4:0] accu_addr_d0_C0 ;
  logic [4:0] accu_addr_d0_R0 ;
  logic [4:0] accu_addr_d0_X0 ;
  assign accu_addr_d0_C0 = { 5{ accu_valid[0] }} ;
  assign accu_addr_d0_R0 = { 5{ accu_valid[0] }} & ( _000__R | ( { 5{ accu_valid_T  [0] }} & _000__C ));
  assign accu_addr_d0_X0 = { 5{ accu_valid[0] }} & _000__X ;
  logic [4:0] accu_addr_d1_C1 ;
  logic [4:0] accu_addr_d1_R1 ;
  logic [4:0] accu_addr_d1_X1 ;
  assign accu_addr_d1_C1 = { 5{ !accu_valid[0] }} ;
  assign accu_addr_d1_R1 = { 5{ !accu_valid[0] }} & ( _000__R | ( { 5{ accu_valid_T  [0] }} & _000__C ));
  assign accu_addr_d1_X1 = { 5{ !accu_valid[0] }} & _000__X ;
  assign _056_ = layer_st ? cfg_in_en_mask_w : cfg_in_en_mask;
  logic [0:0] layer_st_C2 ;
  logic [0:0] layer_st_R2 ;
  logic [0:0] layer_st_X2 ;
  assign layer_st_C2 = | _056__C ;
  assign layer_st_X2 = | _056__X ;
  assign _056__T = layer_st ? ( { 192{ layer_st_T  }} | cfg_in_en_mask_w_T ) : ( { 192{ layer_st_T  }} | cfg_in_en_mask_T );
  assign _056__S = layer_st ? cfg_in_en_mask_w_S : cfg_in_en_mask_S ;
  assign layer_st_R2 = ( | (_056__R | ( _056__C & ( { 192{ layer_st }} & cfg_in_en_mask_w_T | { 192{ !layer_st }} & cfg_in_en_mask_T )))) && cfg_in_en_mask_w != cfg_in_en_mask ;
  logic [191:0] cfg_in_en_mask_w_C0 ;
  logic [191:0] cfg_in_en_mask_w_R0 ;
  logic [191:0] cfg_in_en_mask_w_X0 ;
  assign cfg_in_en_mask_w_C0 = { 192{ layer_st }} ;
  assign cfg_in_en_mask_w_R0 = { 192{ layer_st }} & ( _056__R | ( { 192{ layer_st_T  }} & _056__C ));
  assign cfg_in_en_mask_w_X0 = { 192{ layer_st }} & _056__X ;
  logic [191:0] cfg_in_en_mask_C1 ;
  logic [191:0] cfg_in_en_mask_R1 ;
  logic [191:0] cfg_in_en_mask_X1 ;
  assign cfg_in_en_mask_C1 = { 192{ !layer_st }} ;
  assign cfg_in_en_mask_R1 = { 192{ !layer_st }} & ( _056__R | ( { 192{ layer_st_T  }} & _056__C ));
  assign cfg_in_en_mask_X1 = { 192{ !layer_st }} & _056__X ;
  logic [126:0] fangyuan10;
  logic [126:0] fangyuan10_T ;
  logic [126:0] fangyuan10_R ;
  logic [126:0] fangyuan10_C ;
  logic [126:0] fangyuan10_X ;
  assign fangyuan10 = { is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8, is_int8 };
  assign fangyuan10_T = {  is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T , is_int8_T  };
  logic [13:0] fangyuan10_S ;
  assign fangyuan10_S = 0 ;
  logic [0:0] is_int8_R3 ;
  logic [0:0] is_int8_X3 ;
  logic [0:0] is_int8_C3 ;
  assign is_int8_R3 = fangyuan10_R [126:126] ;
  assign is_int8_X3 = fangyuan10_X [126:126] ;
  assign is_int8_C3 = fangyuan10_C [126:126] ;
  logic [0:0] is_int8_R4 ;
  logic [0:0] is_int8_X4 ;
  logic [0:0] is_int8_C4 ;
  assign is_int8_R4 = fangyuan10_R [125:125] ;
  assign is_int8_X4 = fangyuan10_X [125:125] ;
  assign is_int8_C4 = fangyuan10_C [125:125] ;
  logic [0:0] is_int8_R5 ;
  logic [0:0] is_int8_X5 ;
  logic [0:0] is_int8_C5 ;
  assign is_int8_R5 = fangyuan10_R [124:124] ;
  assign is_int8_X5 = fangyuan10_X [124:124] ;
  assign is_int8_C5 = fangyuan10_C [124:124] ;
  logic [0:0] is_int8_R6 ;
  logic [0:0] is_int8_X6 ;
  logic [0:0] is_int8_C6 ;
  assign is_int8_R6 = fangyuan10_R [123:123] ;
  assign is_int8_X6 = fangyuan10_X [123:123] ;
  assign is_int8_C6 = fangyuan10_C [123:123] ;
  logic [0:0] is_int8_R7 ;
  logic [0:0] is_int8_X7 ;
  logic [0:0] is_int8_C7 ;
  assign is_int8_R7 = fangyuan10_R [122:122] ;
  assign is_int8_X7 = fangyuan10_X [122:122] ;
  assign is_int8_C7 = fangyuan10_C [122:122] ;
  logic [0:0] is_int8_R8 ;
  logic [0:0] is_int8_X8 ;
  logic [0:0] is_int8_C8 ;
  assign is_int8_R8 = fangyuan10_R [121:121] ;
  assign is_int8_X8 = fangyuan10_X [121:121] ;
  assign is_int8_C8 = fangyuan10_C [121:121] ;
  logic [0:0] is_int8_R9 ;
  logic [0:0] is_int8_X9 ;
  logic [0:0] is_int8_C9 ;
  assign is_int8_R9 = fangyuan10_R [120:120] ;
  assign is_int8_X9 = fangyuan10_X [120:120] ;
  assign is_int8_C9 = fangyuan10_C [120:120] ;
  logic [0:0] is_int8_R10 ;
  logic [0:0] is_int8_X10 ;
  logic [0:0] is_int8_C10 ;
  assign is_int8_R10 = fangyuan10_R [119:119] ;
  assign is_int8_X10 = fangyuan10_X [119:119] ;
  assign is_int8_C10 = fangyuan10_C [119:119] ;
  logic [0:0] is_int8_R11 ;
  logic [0:0] is_int8_X11 ;
  logic [0:0] is_int8_C11 ;
  assign is_int8_R11 = fangyuan10_R [118:118] ;
  assign is_int8_X11 = fangyuan10_X [118:118] ;
  assign is_int8_C11 = fangyuan10_C [118:118] ;
  logic [0:0] is_int8_R12 ;
  logic [0:0] is_int8_X12 ;
  logic [0:0] is_int8_C12 ;
  assign is_int8_R12 = fangyuan10_R [117:117] ;
  assign is_int8_X12 = fangyuan10_X [117:117] ;
  assign is_int8_C12 = fangyuan10_C [117:117] ;
  logic [0:0] is_int8_R13 ;
  logic [0:0] is_int8_X13 ;
  logic [0:0] is_int8_C13 ;
  assign is_int8_R13 = fangyuan10_R [116:116] ;
  assign is_int8_X13 = fangyuan10_X [116:116] ;
  assign is_int8_C13 = fangyuan10_C [116:116] ;
  logic [0:0] is_int8_R14 ;
  logic [0:0] is_int8_X14 ;
  logic [0:0] is_int8_C14 ;
  assign is_int8_R14 = fangyuan10_R [115:115] ;
  assign is_int8_X14 = fangyuan10_X [115:115] ;
  assign is_int8_C14 = fangyuan10_C [115:115] ;
  logic [0:0] is_int8_R15 ;
  logic [0:0] is_int8_X15 ;
  logic [0:0] is_int8_C15 ;
  assign is_int8_R15 = fangyuan10_R [114:114] ;
  assign is_int8_X15 = fangyuan10_X [114:114] ;
  assign is_int8_C15 = fangyuan10_C [114:114] ;
  logic [0:0] is_int8_R16 ;
  logic [0:0] is_int8_X16 ;
  logic [0:0] is_int8_C16 ;
  assign is_int8_R16 = fangyuan10_R [113:113] ;
  assign is_int8_X16 = fangyuan10_X [113:113] ;
  assign is_int8_C16 = fangyuan10_C [113:113] ;
  logic [0:0] is_int8_R17 ;
  logic [0:0] is_int8_X17 ;
  logic [0:0] is_int8_C17 ;
  assign is_int8_R17 = fangyuan10_R [112:112] ;
  assign is_int8_X17 = fangyuan10_X [112:112] ;
  assign is_int8_C17 = fangyuan10_C [112:112] ;
  logic [0:0] is_int8_R18 ;
  logic [0:0] is_int8_X18 ;
  logic [0:0] is_int8_C18 ;
  assign is_int8_R18 = fangyuan10_R [111:111] ;
  assign is_int8_X18 = fangyuan10_X [111:111] ;
  assign is_int8_C18 = fangyuan10_C [111:111] ;
  logic [0:0] is_int8_R19 ;
  logic [0:0] is_int8_X19 ;
  logic [0:0] is_int8_C19 ;
  assign is_int8_R19 = fangyuan10_R [110:110] ;
  assign is_int8_X19 = fangyuan10_X [110:110] ;
  assign is_int8_C19 = fangyuan10_C [110:110] ;
  logic [0:0] is_int8_R20 ;
  logic [0:0] is_int8_X20 ;
  logic [0:0] is_int8_C20 ;
  assign is_int8_R20 = fangyuan10_R [109:109] ;
  assign is_int8_X20 = fangyuan10_X [109:109] ;
  assign is_int8_C20 = fangyuan10_C [109:109] ;
  logic [0:0] is_int8_R21 ;
  logic [0:0] is_int8_X21 ;
  logic [0:0] is_int8_C21 ;
  assign is_int8_R21 = fangyuan10_R [108:108] ;
  assign is_int8_X21 = fangyuan10_X [108:108] ;
  assign is_int8_C21 = fangyuan10_C [108:108] ;
  logic [0:0] is_int8_R22 ;
  logic [0:0] is_int8_X22 ;
  logic [0:0] is_int8_C22 ;
  assign is_int8_R22 = fangyuan10_R [107:107] ;
  assign is_int8_X22 = fangyuan10_X [107:107] ;
  assign is_int8_C22 = fangyuan10_C [107:107] ;
  logic [0:0] is_int8_R23 ;
  logic [0:0] is_int8_X23 ;
  logic [0:0] is_int8_C23 ;
  assign is_int8_R23 = fangyuan10_R [106:106] ;
  assign is_int8_X23 = fangyuan10_X [106:106] ;
  assign is_int8_C23 = fangyuan10_C [106:106] ;
  logic [0:0] is_int8_R24 ;
  logic [0:0] is_int8_X24 ;
  logic [0:0] is_int8_C24 ;
  assign is_int8_R24 = fangyuan10_R [105:105] ;
  assign is_int8_X24 = fangyuan10_X [105:105] ;
  assign is_int8_C24 = fangyuan10_C [105:105] ;
  logic [0:0] is_int8_R25 ;
  logic [0:0] is_int8_X25 ;
  logic [0:0] is_int8_C25 ;
  assign is_int8_R25 = fangyuan10_R [104:104] ;
  assign is_int8_X25 = fangyuan10_X [104:104] ;
  assign is_int8_C25 = fangyuan10_C [104:104] ;
  logic [0:0] is_int8_R26 ;
  logic [0:0] is_int8_X26 ;
  logic [0:0] is_int8_C26 ;
  assign is_int8_R26 = fangyuan10_R [103:103] ;
  assign is_int8_X26 = fangyuan10_X [103:103] ;
  assign is_int8_C26 = fangyuan10_C [103:103] ;
  logic [0:0] is_int8_R27 ;
  logic [0:0] is_int8_X27 ;
  logic [0:0] is_int8_C27 ;
  assign is_int8_R27 = fangyuan10_R [102:102] ;
  assign is_int8_X27 = fangyuan10_X [102:102] ;
  assign is_int8_C27 = fangyuan10_C [102:102] ;
  logic [0:0] is_int8_R28 ;
  logic [0:0] is_int8_X28 ;
  logic [0:0] is_int8_C28 ;
  assign is_int8_R28 = fangyuan10_R [101:101] ;
  assign is_int8_X28 = fangyuan10_X [101:101] ;
  assign is_int8_C28 = fangyuan10_C [101:101] ;
  logic [0:0] is_int8_R29 ;
  logic [0:0] is_int8_X29 ;
  logic [0:0] is_int8_C29 ;
  assign is_int8_R29 = fangyuan10_R [100:100] ;
  assign is_int8_X29 = fangyuan10_X [100:100] ;
  assign is_int8_C29 = fangyuan10_C [100:100] ;
  logic [0:0] is_int8_R30 ;
  logic [0:0] is_int8_X30 ;
  logic [0:0] is_int8_C30 ;
  assign is_int8_R30 = fangyuan10_R [99:99] ;
  assign is_int8_X30 = fangyuan10_X [99:99] ;
  assign is_int8_C30 = fangyuan10_C [99:99] ;
  logic [0:0] is_int8_R31 ;
  logic [0:0] is_int8_X31 ;
  logic [0:0] is_int8_C31 ;
  assign is_int8_R31 = fangyuan10_R [98:98] ;
  assign is_int8_X31 = fangyuan10_X [98:98] ;
  assign is_int8_C31 = fangyuan10_C [98:98] ;
  logic [0:0] is_int8_R32 ;
  logic [0:0] is_int8_X32 ;
  logic [0:0] is_int8_C32 ;
  assign is_int8_R32 = fangyuan10_R [97:97] ;
  assign is_int8_X32 = fangyuan10_X [97:97] ;
  assign is_int8_C32 = fangyuan10_C [97:97] ;
  logic [0:0] is_int8_R33 ;
  logic [0:0] is_int8_X33 ;
  logic [0:0] is_int8_C33 ;
  assign is_int8_R33 = fangyuan10_R [96:96] ;
  assign is_int8_X33 = fangyuan10_X [96:96] ;
  assign is_int8_C33 = fangyuan10_C [96:96] ;
  logic [0:0] is_int8_R34 ;
  logic [0:0] is_int8_X34 ;
  logic [0:0] is_int8_C34 ;
  assign is_int8_R34 = fangyuan10_R [95:95] ;
  assign is_int8_X34 = fangyuan10_X [95:95] ;
  assign is_int8_C34 = fangyuan10_C [95:95] ;
  logic [0:0] is_int8_R35 ;
  logic [0:0] is_int8_X35 ;
  logic [0:0] is_int8_C35 ;
  assign is_int8_R35 = fangyuan10_R [94:94] ;
  assign is_int8_X35 = fangyuan10_X [94:94] ;
  assign is_int8_C35 = fangyuan10_C [94:94] ;
  logic [0:0] is_int8_R36 ;
  logic [0:0] is_int8_X36 ;
  logic [0:0] is_int8_C36 ;
  assign is_int8_R36 = fangyuan10_R [93:93] ;
  assign is_int8_X36 = fangyuan10_X [93:93] ;
  assign is_int8_C36 = fangyuan10_C [93:93] ;
  logic [0:0] is_int8_R37 ;
  logic [0:0] is_int8_X37 ;
  logic [0:0] is_int8_C37 ;
  assign is_int8_R37 = fangyuan10_R [92:92] ;
  assign is_int8_X37 = fangyuan10_X [92:92] ;
  assign is_int8_C37 = fangyuan10_C [92:92] ;
  logic [0:0] is_int8_R38 ;
  logic [0:0] is_int8_X38 ;
  logic [0:0] is_int8_C38 ;
  assign is_int8_R38 = fangyuan10_R [91:91] ;
  assign is_int8_X38 = fangyuan10_X [91:91] ;
  assign is_int8_C38 = fangyuan10_C [91:91] ;
  logic [0:0] is_int8_R39 ;
  logic [0:0] is_int8_X39 ;
  logic [0:0] is_int8_C39 ;
  assign is_int8_R39 = fangyuan10_R [90:90] ;
  assign is_int8_X39 = fangyuan10_X [90:90] ;
  assign is_int8_C39 = fangyuan10_C [90:90] ;
  logic [0:0] is_int8_R40 ;
  logic [0:0] is_int8_X40 ;
  logic [0:0] is_int8_C40 ;
  assign is_int8_R40 = fangyuan10_R [89:89] ;
  assign is_int8_X40 = fangyuan10_X [89:89] ;
  assign is_int8_C40 = fangyuan10_C [89:89] ;
  logic [0:0] is_int8_R41 ;
  logic [0:0] is_int8_X41 ;
  logic [0:0] is_int8_C41 ;
  assign is_int8_R41 = fangyuan10_R [88:88] ;
  assign is_int8_X41 = fangyuan10_X [88:88] ;
  assign is_int8_C41 = fangyuan10_C [88:88] ;
  logic [0:0] is_int8_R42 ;
  logic [0:0] is_int8_X42 ;
  logic [0:0] is_int8_C42 ;
  assign is_int8_R42 = fangyuan10_R [87:87] ;
  assign is_int8_X42 = fangyuan10_X [87:87] ;
  assign is_int8_C42 = fangyuan10_C [87:87] ;
  logic [0:0] is_int8_R43 ;
  logic [0:0] is_int8_X43 ;
  logic [0:0] is_int8_C43 ;
  assign is_int8_R43 = fangyuan10_R [86:86] ;
  assign is_int8_X43 = fangyuan10_X [86:86] ;
  assign is_int8_C43 = fangyuan10_C [86:86] ;
  logic [0:0] is_int8_R44 ;
  logic [0:0] is_int8_X44 ;
  logic [0:0] is_int8_C44 ;
  assign is_int8_R44 = fangyuan10_R [85:85] ;
  assign is_int8_X44 = fangyuan10_X [85:85] ;
  assign is_int8_C44 = fangyuan10_C [85:85] ;
  logic [0:0] is_int8_R45 ;
  logic [0:0] is_int8_X45 ;
  logic [0:0] is_int8_C45 ;
  assign is_int8_R45 = fangyuan10_R [84:84] ;
  assign is_int8_X45 = fangyuan10_X [84:84] ;
  assign is_int8_C45 = fangyuan10_C [84:84] ;
  logic [0:0] is_int8_R46 ;
  logic [0:0] is_int8_X46 ;
  logic [0:0] is_int8_C46 ;
  assign is_int8_R46 = fangyuan10_R [83:83] ;
  assign is_int8_X46 = fangyuan10_X [83:83] ;
  assign is_int8_C46 = fangyuan10_C [83:83] ;
  logic [0:0] is_int8_R47 ;
  logic [0:0] is_int8_X47 ;
  logic [0:0] is_int8_C47 ;
  assign is_int8_R47 = fangyuan10_R [82:82] ;
  assign is_int8_X47 = fangyuan10_X [82:82] ;
  assign is_int8_C47 = fangyuan10_C [82:82] ;
  logic [0:0] is_int8_R48 ;
  logic [0:0] is_int8_X48 ;
  logic [0:0] is_int8_C48 ;
  assign is_int8_R48 = fangyuan10_R [81:81] ;
  assign is_int8_X48 = fangyuan10_X [81:81] ;
  assign is_int8_C48 = fangyuan10_C [81:81] ;
  logic [0:0] is_int8_R49 ;
  logic [0:0] is_int8_X49 ;
  logic [0:0] is_int8_C49 ;
  assign is_int8_R49 = fangyuan10_R [80:80] ;
  assign is_int8_X49 = fangyuan10_X [80:80] ;
  assign is_int8_C49 = fangyuan10_C [80:80] ;
  logic [0:0] is_int8_R50 ;
  logic [0:0] is_int8_X50 ;
  logic [0:0] is_int8_C50 ;
  assign is_int8_R50 = fangyuan10_R [79:79] ;
  assign is_int8_X50 = fangyuan10_X [79:79] ;
  assign is_int8_C50 = fangyuan10_C [79:79] ;
  logic [0:0] is_int8_R51 ;
  logic [0:0] is_int8_X51 ;
  logic [0:0] is_int8_C51 ;
  assign is_int8_R51 = fangyuan10_R [78:78] ;
  assign is_int8_X51 = fangyuan10_X [78:78] ;
  assign is_int8_C51 = fangyuan10_C [78:78] ;
  logic [0:0] is_int8_R52 ;
  logic [0:0] is_int8_X52 ;
  logic [0:0] is_int8_C52 ;
  assign is_int8_R52 = fangyuan10_R [77:77] ;
  assign is_int8_X52 = fangyuan10_X [77:77] ;
  assign is_int8_C52 = fangyuan10_C [77:77] ;
  logic [0:0] is_int8_R53 ;
  logic [0:0] is_int8_X53 ;
  logic [0:0] is_int8_C53 ;
  assign is_int8_R53 = fangyuan10_R [76:76] ;
  assign is_int8_X53 = fangyuan10_X [76:76] ;
  assign is_int8_C53 = fangyuan10_C [76:76] ;
  logic [0:0] is_int8_R54 ;
  logic [0:0] is_int8_X54 ;
  logic [0:0] is_int8_C54 ;
  assign is_int8_R54 = fangyuan10_R [75:75] ;
  assign is_int8_X54 = fangyuan10_X [75:75] ;
  assign is_int8_C54 = fangyuan10_C [75:75] ;
  logic [0:0] is_int8_R55 ;
  logic [0:0] is_int8_X55 ;
  logic [0:0] is_int8_C55 ;
  assign is_int8_R55 = fangyuan10_R [74:74] ;
  assign is_int8_X55 = fangyuan10_X [74:74] ;
  assign is_int8_C55 = fangyuan10_C [74:74] ;
  logic [0:0] is_int8_R56 ;
  logic [0:0] is_int8_X56 ;
  logic [0:0] is_int8_C56 ;
  assign is_int8_R56 = fangyuan10_R [73:73] ;
  assign is_int8_X56 = fangyuan10_X [73:73] ;
  assign is_int8_C56 = fangyuan10_C [73:73] ;
  logic [0:0] is_int8_R57 ;
  logic [0:0] is_int8_X57 ;
  logic [0:0] is_int8_C57 ;
  assign is_int8_R57 = fangyuan10_R [72:72] ;
  assign is_int8_X57 = fangyuan10_X [72:72] ;
  assign is_int8_C57 = fangyuan10_C [72:72] ;
  logic [0:0] is_int8_R58 ;
  logic [0:0] is_int8_X58 ;
  logic [0:0] is_int8_C58 ;
  assign is_int8_R58 = fangyuan10_R [71:71] ;
  assign is_int8_X58 = fangyuan10_X [71:71] ;
  assign is_int8_C58 = fangyuan10_C [71:71] ;
  logic [0:0] is_int8_R59 ;
  logic [0:0] is_int8_X59 ;
  logic [0:0] is_int8_C59 ;
  assign is_int8_R59 = fangyuan10_R [70:70] ;
  assign is_int8_X59 = fangyuan10_X [70:70] ;
  assign is_int8_C59 = fangyuan10_C [70:70] ;
  logic [0:0] is_int8_R60 ;
  logic [0:0] is_int8_X60 ;
  logic [0:0] is_int8_C60 ;
  assign is_int8_R60 = fangyuan10_R [69:69] ;
  assign is_int8_X60 = fangyuan10_X [69:69] ;
  assign is_int8_C60 = fangyuan10_C [69:69] ;
  logic [0:0] is_int8_R61 ;
  logic [0:0] is_int8_X61 ;
  logic [0:0] is_int8_C61 ;
  assign is_int8_R61 = fangyuan10_R [68:68] ;
  assign is_int8_X61 = fangyuan10_X [68:68] ;
  assign is_int8_C61 = fangyuan10_C [68:68] ;
  logic [0:0] is_int8_R62 ;
  logic [0:0] is_int8_X62 ;
  logic [0:0] is_int8_C62 ;
  assign is_int8_R62 = fangyuan10_R [67:67] ;
  assign is_int8_X62 = fangyuan10_X [67:67] ;
  assign is_int8_C62 = fangyuan10_C [67:67] ;
  logic [0:0] is_int8_R63 ;
  logic [0:0] is_int8_X63 ;
  logic [0:0] is_int8_C63 ;
  assign is_int8_R63 = fangyuan10_R [66:66] ;
  assign is_int8_X63 = fangyuan10_X [66:66] ;
  assign is_int8_C63 = fangyuan10_C [66:66] ;
  logic [0:0] is_int8_R64 ;
  logic [0:0] is_int8_X64 ;
  logic [0:0] is_int8_C64 ;
  assign is_int8_R64 = fangyuan10_R [65:65] ;
  assign is_int8_X64 = fangyuan10_X [65:65] ;
  assign is_int8_C64 = fangyuan10_C [65:65] ;
  logic [0:0] is_int8_R65 ;
  logic [0:0] is_int8_X65 ;
  logic [0:0] is_int8_C65 ;
  assign is_int8_R65 = fangyuan10_R [64:64] ;
  assign is_int8_X65 = fangyuan10_X [64:64] ;
  assign is_int8_C65 = fangyuan10_C [64:64] ;
  logic [0:0] is_int8_R66 ;
  logic [0:0] is_int8_X66 ;
  logic [0:0] is_int8_C66 ;
  assign is_int8_R66 = fangyuan10_R [63:63] ;
  assign is_int8_X66 = fangyuan10_X [63:63] ;
  assign is_int8_C66 = fangyuan10_C [63:63] ;
  logic [0:0] is_int8_R67 ;
  logic [0:0] is_int8_X67 ;
  logic [0:0] is_int8_C67 ;
  assign is_int8_R67 = fangyuan10_R [62:62] ;
  assign is_int8_X67 = fangyuan10_X [62:62] ;
  assign is_int8_C67 = fangyuan10_C [62:62] ;
  logic [0:0] is_int8_R68 ;
  logic [0:0] is_int8_X68 ;
  logic [0:0] is_int8_C68 ;
  assign is_int8_R68 = fangyuan10_R [61:61] ;
  assign is_int8_X68 = fangyuan10_X [61:61] ;
  assign is_int8_C68 = fangyuan10_C [61:61] ;
  logic [0:0] is_int8_R69 ;
  logic [0:0] is_int8_X69 ;
  logic [0:0] is_int8_C69 ;
  assign is_int8_R69 = fangyuan10_R [60:60] ;
  assign is_int8_X69 = fangyuan10_X [60:60] ;
  assign is_int8_C69 = fangyuan10_C [60:60] ;
  logic [0:0] is_int8_R70 ;
  logic [0:0] is_int8_X70 ;
  logic [0:0] is_int8_C70 ;
  assign is_int8_R70 = fangyuan10_R [59:59] ;
  assign is_int8_X70 = fangyuan10_X [59:59] ;
  assign is_int8_C70 = fangyuan10_C [59:59] ;
  logic [0:0] is_int8_R71 ;
  logic [0:0] is_int8_X71 ;
  logic [0:0] is_int8_C71 ;
  assign is_int8_R71 = fangyuan10_R [58:58] ;
  assign is_int8_X71 = fangyuan10_X [58:58] ;
  assign is_int8_C71 = fangyuan10_C [58:58] ;
  logic [0:0] is_int8_R72 ;
  logic [0:0] is_int8_X72 ;
  logic [0:0] is_int8_C72 ;
  assign is_int8_R72 = fangyuan10_R [57:57] ;
  assign is_int8_X72 = fangyuan10_X [57:57] ;
  assign is_int8_C72 = fangyuan10_C [57:57] ;
  logic [0:0] is_int8_R73 ;
  logic [0:0] is_int8_X73 ;
  logic [0:0] is_int8_C73 ;
  assign is_int8_R73 = fangyuan10_R [56:56] ;
  assign is_int8_X73 = fangyuan10_X [56:56] ;
  assign is_int8_C73 = fangyuan10_C [56:56] ;
  logic [0:0] is_int8_R74 ;
  logic [0:0] is_int8_X74 ;
  logic [0:0] is_int8_C74 ;
  assign is_int8_R74 = fangyuan10_R [55:55] ;
  assign is_int8_X74 = fangyuan10_X [55:55] ;
  assign is_int8_C74 = fangyuan10_C [55:55] ;
  logic [0:0] is_int8_R75 ;
  logic [0:0] is_int8_X75 ;
  logic [0:0] is_int8_C75 ;
  assign is_int8_R75 = fangyuan10_R [54:54] ;
  assign is_int8_X75 = fangyuan10_X [54:54] ;
  assign is_int8_C75 = fangyuan10_C [54:54] ;
  logic [0:0] is_int8_R76 ;
  logic [0:0] is_int8_X76 ;
  logic [0:0] is_int8_C76 ;
  assign is_int8_R76 = fangyuan10_R [53:53] ;
  assign is_int8_X76 = fangyuan10_X [53:53] ;
  assign is_int8_C76 = fangyuan10_C [53:53] ;
  logic [0:0] is_int8_R77 ;
  logic [0:0] is_int8_X77 ;
  logic [0:0] is_int8_C77 ;
  assign is_int8_R77 = fangyuan10_R [52:52] ;
  assign is_int8_X77 = fangyuan10_X [52:52] ;
  assign is_int8_C77 = fangyuan10_C [52:52] ;
  logic [0:0] is_int8_R78 ;
  logic [0:0] is_int8_X78 ;
  logic [0:0] is_int8_C78 ;
  assign is_int8_R78 = fangyuan10_R [51:51] ;
  assign is_int8_X78 = fangyuan10_X [51:51] ;
  assign is_int8_C78 = fangyuan10_C [51:51] ;
  logic [0:0] is_int8_R79 ;
  logic [0:0] is_int8_X79 ;
  logic [0:0] is_int8_C79 ;
  assign is_int8_R79 = fangyuan10_R [50:50] ;
  assign is_int8_X79 = fangyuan10_X [50:50] ;
  assign is_int8_C79 = fangyuan10_C [50:50] ;
  logic [0:0] is_int8_R80 ;
  logic [0:0] is_int8_X80 ;
  logic [0:0] is_int8_C80 ;
  assign is_int8_R80 = fangyuan10_R [49:49] ;
  assign is_int8_X80 = fangyuan10_X [49:49] ;
  assign is_int8_C80 = fangyuan10_C [49:49] ;
  logic [0:0] is_int8_R81 ;
  logic [0:0] is_int8_X81 ;
  logic [0:0] is_int8_C81 ;
  assign is_int8_R81 = fangyuan10_R [48:48] ;
  assign is_int8_X81 = fangyuan10_X [48:48] ;
  assign is_int8_C81 = fangyuan10_C [48:48] ;
  logic [0:0] is_int8_R82 ;
  logic [0:0] is_int8_X82 ;
  logic [0:0] is_int8_C82 ;
  assign is_int8_R82 = fangyuan10_R [47:47] ;
  assign is_int8_X82 = fangyuan10_X [47:47] ;
  assign is_int8_C82 = fangyuan10_C [47:47] ;
  logic [0:0] is_int8_R83 ;
  logic [0:0] is_int8_X83 ;
  logic [0:0] is_int8_C83 ;
  assign is_int8_R83 = fangyuan10_R [46:46] ;
  assign is_int8_X83 = fangyuan10_X [46:46] ;
  assign is_int8_C83 = fangyuan10_C [46:46] ;
  logic [0:0] is_int8_R84 ;
  logic [0:0] is_int8_X84 ;
  logic [0:0] is_int8_C84 ;
  assign is_int8_R84 = fangyuan10_R [45:45] ;
  assign is_int8_X84 = fangyuan10_X [45:45] ;
  assign is_int8_C84 = fangyuan10_C [45:45] ;
  logic [0:0] is_int8_R85 ;
  logic [0:0] is_int8_X85 ;
  logic [0:0] is_int8_C85 ;
  assign is_int8_R85 = fangyuan10_R [44:44] ;
  assign is_int8_X85 = fangyuan10_X [44:44] ;
  assign is_int8_C85 = fangyuan10_C [44:44] ;
  logic [0:0] is_int8_R86 ;
  logic [0:0] is_int8_X86 ;
  logic [0:0] is_int8_C86 ;
  assign is_int8_R86 = fangyuan10_R [43:43] ;
  assign is_int8_X86 = fangyuan10_X [43:43] ;
  assign is_int8_C86 = fangyuan10_C [43:43] ;
  logic [0:0] is_int8_R87 ;
  logic [0:0] is_int8_X87 ;
  logic [0:0] is_int8_C87 ;
  assign is_int8_R87 = fangyuan10_R [42:42] ;
  assign is_int8_X87 = fangyuan10_X [42:42] ;
  assign is_int8_C87 = fangyuan10_C [42:42] ;
  logic [0:0] is_int8_R88 ;
  logic [0:0] is_int8_X88 ;
  logic [0:0] is_int8_C88 ;
  assign is_int8_R88 = fangyuan10_R [41:41] ;
  assign is_int8_X88 = fangyuan10_X [41:41] ;
  assign is_int8_C88 = fangyuan10_C [41:41] ;
  logic [0:0] is_int8_R89 ;
  logic [0:0] is_int8_X89 ;
  logic [0:0] is_int8_C89 ;
  assign is_int8_R89 = fangyuan10_R [40:40] ;
  assign is_int8_X89 = fangyuan10_X [40:40] ;
  assign is_int8_C89 = fangyuan10_C [40:40] ;
  logic [0:0] is_int8_R90 ;
  logic [0:0] is_int8_X90 ;
  logic [0:0] is_int8_C90 ;
  assign is_int8_R90 = fangyuan10_R [39:39] ;
  assign is_int8_X90 = fangyuan10_X [39:39] ;
  assign is_int8_C90 = fangyuan10_C [39:39] ;
  logic [0:0] is_int8_R91 ;
  logic [0:0] is_int8_X91 ;
  logic [0:0] is_int8_C91 ;
  assign is_int8_R91 = fangyuan10_R [38:38] ;
  assign is_int8_X91 = fangyuan10_X [38:38] ;
  assign is_int8_C91 = fangyuan10_C [38:38] ;
  logic [0:0] is_int8_R92 ;
  logic [0:0] is_int8_X92 ;
  logic [0:0] is_int8_C92 ;
  assign is_int8_R92 = fangyuan10_R [37:37] ;
  assign is_int8_X92 = fangyuan10_X [37:37] ;
  assign is_int8_C92 = fangyuan10_C [37:37] ;
  logic [0:0] is_int8_R93 ;
  logic [0:0] is_int8_X93 ;
  logic [0:0] is_int8_C93 ;
  assign is_int8_R93 = fangyuan10_R [36:36] ;
  assign is_int8_X93 = fangyuan10_X [36:36] ;
  assign is_int8_C93 = fangyuan10_C [36:36] ;
  logic [0:0] is_int8_R94 ;
  logic [0:0] is_int8_X94 ;
  logic [0:0] is_int8_C94 ;
  assign is_int8_R94 = fangyuan10_R [35:35] ;
  assign is_int8_X94 = fangyuan10_X [35:35] ;
  assign is_int8_C94 = fangyuan10_C [35:35] ;
  logic [0:0] is_int8_R95 ;
  logic [0:0] is_int8_X95 ;
  logic [0:0] is_int8_C95 ;
  assign is_int8_R95 = fangyuan10_R [34:34] ;
  assign is_int8_X95 = fangyuan10_X [34:34] ;
  assign is_int8_C95 = fangyuan10_C [34:34] ;
  logic [0:0] is_int8_R96 ;
  logic [0:0] is_int8_X96 ;
  logic [0:0] is_int8_C96 ;
  assign is_int8_R96 = fangyuan10_R [33:33] ;
  assign is_int8_X96 = fangyuan10_X [33:33] ;
  assign is_int8_C96 = fangyuan10_C [33:33] ;
  logic [0:0] is_int8_R97 ;
  logic [0:0] is_int8_X97 ;
  logic [0:0] is_int8_C97 ;
  assign is_int8_R97 = fangyuan10_R [32:32] ;
  assign is_int8_X97 = fangyuan10_X [32:32] ;
  assign is_int8_C97 = fangyuan10_C [32:32] ;
  logic [0:0] is_int8_R98 ;
  logic [0:0] is_int8_X98 ;
  logic [0:0] is_int8_C98 ;
  assign is_int8_R98 = fangyuan10_R [31:31] ;
  assign is_int8_X98 = fangyuan10_X [31:31] ;
  assign is_int8_C98 = fangyuan10_C [31:31] ;
  logic [0:0] is_int8_R99 ;
  logic [0:0] is_int8_X99 ;
  logic [0:0] is_int8_C99 ;
  assign is_int8_R99 = fangyuan10_R [30:30] ;
  assign is_int8_X99 = fangyuan10_X [30:30] ;
  assign is_int8_C99 = fangyuan10_C [30:30] ;
  logic [0:0] is_int8_R100 ;
  logic [0:0] is_int8_X100 ;
  logic [0:0] is_int8_C100 ;
  assign is_int8_R100 = fangyuan10_R [29:29] ;
  assign is_int8_X100 = fangyuan10_X [29:29] ;
  assign is_int8_C100 = fangyuan10_C [29:29] ;
  logic [0:0] is_int8_R101 ;
  logic [0:0] is_int8_X101 ;
  logic [0:0] is_int8_C101 ;
  assign is_int8_R101 = fangyuan10_R [28:28] ;
  assign is_int8_X101 = fangyuan10_X [28:28] ;
  assign is_int8_C101 = fangyuan10_C [28:28] ;
  logic [0:0] is_int8_R102 ;
  logic [0:0] is_int8_X102 ;
  logic [0:0] is_int8_C102 ;
  assign is_int8_R102 = fangyuan10_R [27:27] ;
  assign is_int8_X102 = fangyuan10_X [27:27] ;
  assign is_int8_C102 = fangyuan10_C [27:27] ;
  logic [0:0] is_int8_R103 ;
  logic [0:0] is_int8_X103 ;
  logic [0:0] is_int8_C103 ;
  assign is_int8_R103 = fangyuan10_R [26:26] ;
  assign is_int8_X103 = fangyuan10_X [26:26] ;
  assign is_int8_C103 = fangyuan10_C [26:26] ;
  logic [0:0] is_int8_R104 ;
  logic [0:0] is_int8_X104 ;
  logic [0:0] is_int8_C104 ;
  assign is_int8_R104 = fangyuan10_R [25:25] ;
  assign is_int8_X104 = fangyuan10_X [25:25] ;
  assign is_int8_C104 = fangyuan10_C [25:25] ;
  logic [0:0] is_int8_R105 ;
  logic [0:0] is_int8_X105 ;
  logic [0:0] is_int8_C105 ;
  assign is_int8_R105 = fangyuan10_R [24:24] ;
  assign is_int8_X105 = fangyuan10_X [24:24] ;
  assign is_int8_C105 = fangyuan10_C [24:24] ;
  logic [0:0] is_int8_R106 ;
  logic [0:0] is_int8_X106 ;
  logic [0:0] is_int8_C106 ;
  assign is_int8_R106 = fangyuan10_R [23:23] ;
  assign is_int8_X106 = fangyuan10_X [23:23] ;
  assign is_int8_C106 = fangyuan10_C [23:23] ;
  logic [0:0] is_int8_R107 ;
  logic [0:0] is_int8_X107 ;
  logic [0:0] is_int8_C107 ;
  assign is_int8_R107 = fangyuan10_R [22:22] ;
  assign is_int8_X107 = fangyuan10_X [22:22] ;
  assign is_int8_C107 = fangyuan10_C [22:22] ;
  logic [0:0] is_int8_R108 ;
  logic [0:0] is_int8_X108 ;
  logic [0:0] is_int8_C108 ;
  assign is_int8_R108 = fangyuan10_R [21:21] ;
  assign is_int8_X108 = fangyuan10_X [21:21] ;
  assign is_int8_C108 = fangyuan10_C [21:21] ;
  logic [0:0] is_int8_R109 ;
  logic [0:0] is_int8_X109 ;
  logic [0:0] is_int8_C109 ;
  assign is_int8_R109 = fangyuan10_R [20:20] ;
  assign is_int8_X109 = fangyuan10_X [20:20] ;
  assign is_int8_C109 = fangyuan10_C [20:20] ;
  logic [0:0] is_int8_R110 ;
  logic [0:0] is_int8_X110 ;
  logic [0:0] is_int8_C110 ;
  assign is_int8_R110 = fangyuan10_R [19:19] ;
  assign is_int8_X110 = fangyuan10_X [19:19] ;
  assign is_int8_C110 = fangyuan10_C [19:19] ;
  logic [0:0] is_int8_R111 ;
  logic [0:0] is_int8_X111 ;
  logic [0:0] is_int8_C111 ;
  assign is_int8_R111 = fangyuan10_R [18:18] ;
  assign is_int8_X111 = fangyuan10_X [18:18] ;
  assign is_int8_C111 = fangyuan10_C [18:18] ;
  logic [0:0] is_int8_R112 ;
  logic [0:0] is_int8_X112 ;
  logic [0:0] is_int8_C112 ;
  assign is_int8_R112 = fangyuan10_R [17:17] ;
  assign is_int8_X112 = fangyuan10_X [17:17] ;
  assign is_int8_C112 = fangyuan10_C [17:17] ;
  logic [0:0] is_int8_R113 ;
  logic [0:0] is_int8_X113 ;
  logic [0:0] is_int8_C113 ;
  assign is_int8_R113 = fangyuan10_R [16:16] ;
  assign is_int8_X113 = fangyuan10_X [16:16] ;
  assign is_int8_C113 = fangyuan10_C [16:16] ;
  logic [0:0] is_int8_R114 ;
  logic [0:0] is_int8_X114 ;
  logic [0:0] is_int8_C114 ;
  assign is_int8_R114 = fangyuan10_R [15:15] ;
  assign is_int8_X114 = fangyuan10_X [15:15] ;
  assign is_int8_C114 = fangyuan10_C [15:15] ;
  logic [0:0] is_int8_R115 ;
  logic [0:0] is_int8_X115 ;
  logic [0:0] is_int8_C115 ;
  assign is_int8_R115 = fangyuan10_R [14:14] ;
  assign is_int8_X115 = fangyuan10_X [14:14] ;
  assign is_int8_C115 = fangyuan10_C [14:14] ;
  logic [0:0] is_int8_R116 ;
  logic [0:0] is_int8_X116 ;
  logic [0:0] is_int8_C116 ;
  assign is_int8_R116 = fangyuan10_R [13:13] ;
  assign is_int8_X116 = fangyuan10_X [13:13] ;
  assign is_int8_C116 = fangyuan10_C [13:13] ;
  logic [0:0] is_int8_R117 ;
  logic [0:0] is_int8_X117 ;
  logic [0:0] is_int8_C117 ;
  assign is_int8_R117 = fangyuan10_R [12:12] ;
  assign is_int8_X117 = fangyuan10_X [12:12] ;
  assign is_int8_C117 = fangyuan10_C [12:12] ;
  logic [0:0] is_int8_R118 ;
  logic [0:0] is_int8_X118 ;
  logic [0:0] is_int8_C118 ;
  assign is_int8_R118 = fangyuan10_R [11:11] ;
  assign is_int8_X118 = fangyuan10_X [11:11] ;
  assign is_int8_C118 = fangyuan10_C [11:11] ;
  logic [0:0] is_int8_R119 ;
  logic [0:0] is_int8_X119 ;
  logic [0:0] is_int8_C119 ;
  assign is_int8_R119 = fangyuan10_R [10:10] ;
  assign is_int8_X119 = fangyuan10_X [10:10] ;
  assign is_int8_C119 = fangyuan10_C [10:10] ;
  logic [0:0] is_int8_R120 ;
  logic [0:0] is_int8_X120 ;
  logic [0:0] is_int8_C120 ;
  assign is_int8_R120 = fangyuan10_R [9:9] ;
  assign is_int8_X120 = fangyuan10_X [9:9] ;
  assign is_int8_C120 = fangyuan10_C [9:9] ;
  logic [0:0] is_int8_R121 ;
  logic [0:0] is_int8_X121 ;
  logic [0:0] is_int8_C121 ;
  assign is_int8_R121 = fangyuan10_R [8:8] ;
  assign is_int8_X121 = fangyuan10_X [8:8] ;
  assign is_int8_C121 = fangyuan10_C [8:8] ;
  logic [0:0] is_int8_R122 ;
  logic [0:0] is_int8_X122 ;
  logic [0:0] is_int8_C122 ;
  assign is_int8_R122 = fangyuan10_R [7:7] ;
  assign is_int8_X122 = fangyuan10_X [7:7] ;
  assign is_int8_C122 = fangyuan10_C [7:7] ;
  logic [0:0] is_int8_R123 ;
  logic [0:0] is_int8_X123 ;
  logic [0:0] is_int8_C123 ;
  assign is_int8_R123 = fangyuan10_R [6:6] ;
  assign is_int8_X123 = fangyuan10_X [6:6] ;
  assign is_int8_C123 = fangyuan10_C [6:6] ;
  logic [0:0] is_int8_R124 ;
  logic [0:0] is_int8_X124 ;
  logic [0:0] is_int8_C124 ;
  assign is_int8_R124 = fangyuan10_R [5:5] ;
  assign is_int8_X124 = fangyuan10_X [5:5] ;
  assign is_int8_C124 = fangyuan10_C [5:5] ;
  logic [0:0] is_int8_R125 ;
  logic [0:0] is_int8_X125 ;
  logic [0:0] is_int8_C125 ;
  assign is_int8_R125 = fangyuan10_R [4:4] ;
  assign is_int8_X125 = fangyuan10_X [4:4] ;
  assign is_int8_C125 = fangyuan10_C [4:4] ;
  logic [0:0] is_int8_R126 ;
  logic [0:0] is_int8_X126 ;
  logic [0:0] is_int8_C126 ;
  assign is_int8_R126 = fangyuan10_R [3:3] ;
  assign is_int8_X126 = fangyuan10_X [3:3] ;
  assign is_int8_C126 = fangyuan10_C [3:3] ;
  logic [0:0] is_int8_R127 ;
  logic [0:0] is_int8_X127 ;
  logic [0:0] is_int8_C127 ;
  assign is_int8_R127 = fangyuan10_R [2:2] ;
  assign is_int8_X127 = fangyuan10_X [2:2] ;
  assign is_int8_C127 = fangyuan10_C [2:2] ;
  logic [0:0] is_int8_R128 ;
  logic [0:0] is_int8_X128 ;
  logic [0:0] is_int8_C128 ;
  assign is_int8_R128 = fangyuan10_R [1:1] ;
  assign is_int8_X128 = fangyuan10_X [1:1] ;
  assign is_int8_C128 = fangyuan10_C [1:1] ;
  logic [0:0] is_int8_R129 ;
  logic [0:0] is_int8_X129 ;
  logic [0:0] is_int8_C129 ;
  assign is_int8_R129 = fangyuan10_R [0:0] ;
  assign is_int8_X129 = fangyuan10_X [0:0] ;
  assign is_int8_C129 = fangyuan10_C [0:0] ;

  assign _058_ = layer_st ? fangyuan10 : cfg_is_int8;
  logic [0:0] layer_st_C3 ;
  logic [0:0] layer_st_R3 ;
  logic [0:0] layer_st_X3 ;
  assign layer_st_C3 = | _058__C ;
  assign layer_st_X3 = | _058__X ;
  assign _058__T = layer_st ? ( { 127{ layer_st_T  }} | fangyuan10_T ) : ( { 127{ layer_st_T  }} | cfg_is_int8_T );
  assign _058__S = layer_st ? fangyuan10_S : cfg_is_int8_S ;
  assign layer_st_R3 = ( | (_058__R | ( _058__C & ( { 127{ layer_st }} & fangyuan10_T | { 127{ !layer_st }} & cfg_is_int8_T )))) && fangyuan10 != cfg_is_int8 ;
  logic [126:0] fangyuan10_C0 ;
  logic [126:0] fangyuan10_R0 ;
  logic [126:0] fangyuan10_X0 ;
  assign fangyuan10_C0 = { 127{ layer_st }} ;
  assign fangyuan10_R0 = { 127{ layer_st }} & ( _058__R | ( { 127{ layer_st_T  }} & _058__C ));
  assign fangyuan10_X0 = { 127{ layer_st }} & _058__X ;
  logic [126:0] cfg_is_int8_C1 ;
  logic [126:0] cfg_is_int8_R1 ;
  logic [126:0] cfg_is_int8_X1 ;
  assign cfg_is_int8_C1 = { 127{ !layer_st }} ;
  assign cfg_is_int8_R1 = { 127{ !layer_st }} & ( _058__R | ( { 127{ layer_st_T  }} & _058__C ));
  assign cfg_is_int8_X1 = { 127{ !layer_st }} & _058__X ;
  logic [95:0] fangyuan11;
  logic [95:0] fangyuan11_T ;
  logic [95:0] fangyuan11_R ;
  logic [95:0] fangyuan11_C ;
  logic [95:0] fangyuan11_X ;
  assign fangyuan11 = { reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode, reg2dp_conv_mode };
  assign fangyuan11_T = {  reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T , reg2dp_conv_mode_T  };
  logic [13:0] fangyuan11_S ;
  assign fangyuan11_S = 0 ;
  logic [0:0] reg2dp_conv_mode_R4 ;
  logic [0:0] reg2dp_conv_mode_X4 ;
  logic [0:0] reg2dp_conv_mode_C4 ;
  assign reg2dp_conv_mode_R4 = fangyuan11_R [95:95] ;
  assign reg2dp_conv_mode_X4 = fangyuan11_X [95:95] ;
  assign reg2dp_conv_mode_C4 = fangyuan11_C [95:95] ;
  logic [0:0] reg2dp_conv_mode_R5 ;
  logic [0:0] reg2dp_conv_mode_X5 ;
  logic [0:0] reg2dp_conv_mode_C5 ;
  assign reg2dp_conv_mode_R5 = fangyuan11_R [94:94] ;
  assign reg2dp_conv_mode_X5 = fangyuan11_X [94:94] ;
  assign reg2dp_conv_mode_C5 = fangyuan11_C [94:94] ;
  logic [0:0] reg2dp_conv_mode_R6 ;
  logic [0:0] reg2dp_conv_mode_X6 ;
  logic [0:0] reg2dp_conv_mode_C6 ;
  assign reg2dp_conv_mode_R6 = fangyuan11_R [93:93] ;
  assign reg2dp_conv_mode_X6 = fangyuan11_X [93:93] ;
  assign reg2dp_conv_mode_C6 = fangyuan11_C [93:93] ;
  logic [0:0] reg2dp_conv_mode_R7 ;
  logic [0:0] reg2dp_conv_mode_X7 ;
  logic [0:0] reg2dp_conv_mode_C7 ;
  assign reg2dp_conv_mode_R7 = fangyuan11_R [92:92] ;
  assign reg2dp_conv_mode_X7 = fangyuan11_X [92:92] ;
  assign reg2dp_conv_mode_C7 = fangyuan11_C [92:92] ;
  logic [0:0] reg2dp_conv_mode_R8 ;
  logic [0:0] reg2dp_conv_mode_X8 ;
  logic [0:0] reg2dp_conv_mode_C8 ;
  assign reg2dp_conv_mode_R8 = fangyuan11_R [91:91] ;
  assign reg2dp_conv_mode_X8 = fangyuan11_X [91:91] ;
  assign reg2dp_conv_mode_C8 = fangyuan11_C [91:91] ;
  logic [0:0] reg2dp_conv_mode_R9 ;
  logic [0:0] reg2dp_conv_mode_X9 ;
  logic [0:0] reg2dp_conv_mode_C9 ;
  assign reg2dp_conv_mode_R9 = fangyuan11_R [90:90] ;
  assign reg2dp_conv_mode_X9 = fangyuan11_X [90:90] ;
  assign reg2dp_conv_mode_C9 = fangyuan11_C [90:90] ;
  logic [0:0] reg2dp_conv_mode_R10 ;
  logic [0:0] reg2dp_conv_mode_X10 ;
  logic [0:0] reg2dp_conv_mode_C10 ;
  assign reg2dp_conv_mode_R10 = fangyuan11_R [89:89] ;
  assign reg2dp_conv_mode_X10 = fangyuan11_X [89:89] ;
  assign reg2dp_conv_mode_C10 = fangyuan11_C [89:89] ;
  logic [0:0] reg2dp_conv_mode_R11 ;
  logic [0:0] reg2dp_conv_mode_X11 ;
  logic [0:0] reg2dp_conv_mode_C11 ;
  assign reg2dp_conv_mode_R11 = fangyuan11_R [88:88] ;
  assign reg2dp_conv_mode_X11 = fangyuan11_X [88:88] ;
  assign reg2dp_conv_mode_C11 = fangyuan11_C [88:88] ;
  logic [0:0] reg2dp_conv_mode_R12 ;
  logic [0:0] reg2dp_conv_mode_X12 ;
  logic [0:0] reg2dp_conv_mode_C12 ;
  assign reg2dp_conv_mode_R12 = fangyuan11_R [87:87] ;
  assign reg2dp_conv_mode_X12 = fangyuan11_X [87:87] ;
  assign reg2dp_conv_mode_C12 = fangyuan11_C [87:87] ;
  logic [0:0] reg2dp_conv_mode_R13 ;
  logic [0:0] reg2dp_conv_mode_X13 ;
  logic [0:0] reg2dp_conv_mode_C13 ;
  assign reg2dp_conv_mode_R13 = fangyuan11_R [86:86] ;
  assign reg2dp_conv_mode_X13 = fangyuan11_X [86:86] ;
  assign reg2dp_conv_mode_C13 = fangyuan11_C [86:86] ;
  logic [0:0] reg2dp_conv_mode_R14 ;
  logic [0:0] reg2dp_conv_mode_X14 ;
  logic [0:0] reg2dp_conv_mode_C14 ;
  assign reg2dp_conv_mode_R14 = fangyuan11_R [85:85] ;
  assign reg2dp_conv_mode_X14 = fangyuan11_X [85:85] ;
  assign reg2dp_conv_mode_C14 = fangyuan11_C [85:85] ;
  logic [0:0] reg2dp_conv_mode_R15 ;
  logic [0:0] reg2dp_conv_mode_X15 ;
  logic [0:0] reg2dp_conv_mode_C15 ;
  assign reg2dp_conv_mode_R15 = fangyuan11_R [84:84] ;
  assign reg2dp_conv_mode_X15 = fangyuan11_X [84:84] ;
  assign reg2dp_conv_mode_C15 = fangyuan11_C [84:84] ;
  logic [0:0] reg2dp_conv_mode_R16 ;
  logic [0:0] reg2dp_conv_mode_X16 ;
  logic [0:0] reg2dp_conv_mode_C16 ;
  assign reg2dp_conv_mode_R16 = fangyuan11_R [83:83] ;
  assign reg2dp_conv_mode_X16 = fangyuan11_X [83:83] ;
  assign reg2dp_conv_mode_C16 = fangyuan11_C [83:83] ;
  logic [0:0] reg2dp_conv_mode_R17 ;
  logic [0:0] reg2dp_conv_mode_X17 ;
  logic [0:0] reg2dp_conv_mode_C17 ;
  assign reg2dp_conv_mode_R17 = fangyuan11_R [82:82] ;
  assign reg2dp_conv_mode_X17 = fangyuan11_X [82:82] ;
  assign reg2dp_conv_mode_C17 = fangyuan11_C [82:82] ;
  logic [0:0] reg2dp_conv_mode_R18 ;
  logic [0:0] reg2dp_conv_mode_X18 ;
  logic [0:0] reg2dp_conv_mode_C18 ;
  assign reg2dp_conv_mode_R18 = fangyuan11_R [81:81] ;
  assign reg2dp_conv_mode_X18 = fangyuan11_X [81:81] ;
  assign reg2dp_conv_mode_C18 = fangyuan11_C [81:81] ;
  logic [0:0] reg2dp_conv_mode_R19 ;
  logic [0:0] reg2dp_conv_mode_X19 ;
  logic [0:0] reg2dp_conv_mode_C19 ;
  assign reg2dp_conv_mode_R19 = fangyuan11_R [80:80] ;
  assign reg2dp_conv_mode_X19 = fangyuan11_X [80:80] ;
  assign reg2dp_conv_mode_C19 = fangyuan11_C [80:80] ;
  logic [0:0] reg2dp_conv_mode_R20 ;
  logic [0:0] reg2dp_conv_mode_X20 ;
  logic [0:0] reg2dp_conv_mode_C20 ;
  assign reg2dp_conv_mode_R20 = fangyuan11_R [79:79] ;
  assign reg2dp_conv_mode_X20 = fangyuan11_X [79:79] ;
  assign reg2dp_conv_mode_C20 = fangyuan11_C [79:79] ;
  logic [0:0] reg2dp_conv_mode_R21 ;
  logic [0:0] reg2dp_conv_mode_X21 ;
  logic [0:0] reg2dp_conv_mode_C21 ;
  assign reg2dp_conv_mode_R21 = fangyuan11_R [78:78] ;
  assign reg2dp_conv_mode_X21 = fangyuan11_X [78:78] ;
  assign reg2dp_conv_mode_C21 = fangyuan11_C [78:78] ;
  logic [0:0] reg2dp_conv_mode_R22 ;
  logic [0:0] reg2dp_conv_mode_X22 ;
  logic [0:0] reg2dp_conv_mode_C22 ;
  assign reg2dp_conv_mode_R22 = fangyuan11_R [77:77] ;
  assign reg2dp_conv_mode_X22 = fangyuan11_X [77:77] ;
  assign reg2dp_conv_mode_C22 = fangyuan11_C [77:77] ;
  logic [0:0] reg2dp_conv_mode_R23 ;
  logic [0:0] reg2dp_conv_mode_X23 ;
  logic [0:0] reg2dp_conv_mode_C23 ;
  assign reg2dp_conv_mode_R23 = fangyuan11_R [76:76] ;
  assign reg2dp_conv_mode_X23 = fangyuan11_X [76:76] ;
  assign reg2dp_conv_mode_C23 = fangyuan11_C [76:76] ;
  logic [0:0] reg2dp_conv_mode_R24 ;
  logic [0:0] reg2dp_conv_mode_X24 ;
  logic [0:0] reg2dp_conv_mode_C24 ;
  assign reg2dp_conv_mode_R24 = fangyuan11_R [75:75] ;
  assign reg2dp_conv_mode_X24 = fangyuan11_X [75:75] ;
  assign reg2dp_conv_mode_C24 = fangyuan11_C [75:75] ;
  logic [0:0] reg2dp_conv_mode_R25 ;
  logic [0:0] reg2dp_conv_mode_X25 ;
  logic [0:0] reg2dp_conv_mode_C25 ;
  assign reg2dp_conv_mode_R25 = fangyuan11_R [74:74] ;
  assign reg2dp_conv_mode_X25 = fangyuan11_X [74:74] ;
  assign reg2dp_conv_mode_C25 = fangyuan11_C [74:74] ;
  logic [0:0] reg2dp_conv_mode_R26 ;
  logic [0:0] reg2dp_conv_mode_X26 ;
  logic [0:0] reg2dp_conv_mode_C26 ;
  assign reg2dp_conv_mode_R26 = fangyuan11_R [73:73] ;
  assign reg2dp_conv_mode_X26 = fangyuan11_X [73:73] ;
  assign reg2dp_conv_mode_C26 = fangyuan11_C [73:73] ;
  logic [0:0] reg2dp_conv_mode_R27 ;
  logic [0:0] reg2dp_conv_mode_X27 ;
  logic [0:0] reg2dp_conv_mode_C27 ;
  assign reg2dp_conv_mode_R27 = fangyuan11_R [72:72] ;
  assign reg2dp_conv_mode_X27 = fangyuan11_X [72:72] ;
  assign reg2dp_conv_mode_C27 = fangyuan11_C [72:72] ;
  logic [0:0] reg2dp_conv_mode_R28 ;
  logic [0:0] reg2dp_conv_mode_X28 ;
  logic [0:0] reg2dp_conv_mode_C28 ;
  assign reg2dp_conv_mode_R28 = fangyuan11_R [71:71] ;
  assign reg2dp_conv_mode_X28 = fangyuan11_X [71:71] ;
  assign reg2dp_conv_mode_C28 = fangyuan11_C [71:71] ;
  logic [0:0] reg2dp_conv_mode_R29 ;
  logic [0:0] reg2dp_conv_mode_X29 ;
  logic [0:0] reg2dp_conv_mode_C29 ;
  assign reg2dp_conv_mode_R29 = fangyuan11_R [70:70] ;
  assign reg2dp_conv_mode_X29 = fangyuan11_X [70:70] ;
  assign reg2dp_conv_mode_C29 = fangyuan11_C [70:70] ;
  logic [0:0] reg2dp_conv_mode_R30 ;
  logic [0:0] reg2dp_conv_mode_X30 ;
  logic [0:0] reg2dp_conv_mode_C30 ;
  assign reg2dp_conv_mode_R30 = fangyuan11_R [69:69] ;
  assign reg2dp_conv_mode_X30 = fangyuan11_X [69:69] ;
  assign reg2dp_conv_mode_C30 = fangyuan11_C [69:69] ;
  logic [0:0] reg2dp_conv_mode_R31 ;
  logic [0:0] reg2dp_conv_mode_X31 ;
  logic [0:0] reg2dp_conv_mode_C31 ;
  assign reg2dp_conv_mode_R31 = fangyuan11_R [68:68] ;
  assign reg2dp_conv_mode_X31 = fangyuan11_X [68:68] ;
  assign reg2dp_conv_mode_C31 = fangyuan11_C [68:68] ;
  logic [0:0] reg2dp_conv_mode_R32 ;
  logic [0:0] reg2dp_conv_mode_X32 ;
  logic [0:0] reg2dp_conv_mode_C32 ;
  assign reg2dp_conv_mode_R32 = fangyuan11_R [67:67] ;
  assign reg2dp_conv_mode_X32 = fangyuan11_X [67:67] ;
  assign reg2dp_conv_mode_C32 = fangyuan11_C [67:67] ;
  logic [0:0] reg2dp_conv_mode_R33 ;
  logic [0:0] reg2dp_conv_mode_X33 ;
  logic [0:0] reg2dp_conv_mode_C33 ;
  assign reg2dp_conv_mode_R33 = fangyuan11_R [66:66] ;
  assign reg2dp_conv_mode_X33 = fangyuan11_X [66:66] ;
  assign reg2dp_conv_mode_C33 = fangyuan11_C [66:66] ;
  logic [0:0] reg2dp_conv_mode_R34 ;
  logic [0:0] reg2dp_conv_mode_X34 ;
  logic [0:0] reg2dp_conv_mode_C34 ;
  assign reg2dp_conv_mode_R34 = fangyuan11_R [65:65] ;
  assign reg2dp_conv_mode_X34 = fangyuan11_X [65:65] ;
  assign reg2dp_conv_mode_C34 = fangyuan11_C [65:65] ;
  logic [0:0] reg2dp_conv_mode_R35 ;
  logic [0:0] reg2dp_conv_mode_X35 ;
  logic [0:0] reg2dp_conv_mode_C35 ;
  assign reg2dp_conv_mode_R35 = fangyuan11_R [64:64] ;
  assign reg2dp_conv_mode_X35 = fangyuan11_X [64:64] ;
  assign reg2dp_conv_mode_C35 = fangyuan11_C [64:64] ;
  logic [0:0] reg2dp_conv_mode_R36 ;
  logic [0:0] reg2dp_conv_mode_X36 ;
  logic [0:0] reg2dp_conv_mode_C36 ;
  assign reg2dp_conv_mode_R36 = fangyuan11_R [63:63] ;
  assign reg2dp_conv_mode_X36 = fangyuan11_X [63:63] ;
  assign reg2dp_conv_mode_C36 = fangyuan11_C [63:63] ;
  logic [0:0] reg2dp_conv_mode_R37 ;
  logic [0:0] reg2dp_conv_mode_X37 ;
  logic [0:0] reg2dp_conv_mode_C37 ;
  assign reg2dp_conv_mode_R37 = fangyuan11_R [62:62] ;
  assign reg2dp_conv_mode_X37 = fangyuan11_X [62:62] ;
  assign reg2dp_conv_mode_C37 = fangyuan11_C [62:62] ;
  logic [0:0] reg2dp_conv_mode_R38 ;
  logic [0:0] reg2dp_conv_mode_X38 ;
  logic [0:0] reg2dp_conv_mode_C38 ;
  assign reg2dp_conv_mode_R38 = fangyuan11_R [61:61] ;
  assign reg2dp_conv_mode_X38 = fangyuan11_X [61:61] ;
  assign reg2dp_conv_mode_C38 = fangyuan11_C [61:61] ;
  logic [0:0] reg2dp_conv_mode_R39 ;
  logic [0:0] reg2dp_conv_mode_X39 ;
  logic [0:0] reg2dp_conv_mode_C39 ;
  assign reg2dp_conv_mode_R39 = fangyuan11_R [60:60] ;
  assign reg2dp_conv_mode_X39 = fangyuan11_X [60:60] ;
  assign reg2dp_conv_mode_C39 = fangyuan11_C [60:60] ;
  logic [0:0] reg2dp_conv_mode_R40 ;
  logic [0:0] reg2dp_conv_mode_X40 ;
  logic [0:0] reg2dp_conv_mode_C40 ;
  assign reg2dp_conv_mode_R40 = fangyuan11_R [59:59] ;
  assign reg2dp_conv_mode_X40 = fangyuan11_X [59:59] ;
  assign reg2dp_conv_mode_C40 = fangyuan11_C [59:59] ;
  logic [0:0] reg2dp_conv_mode_R41 ;
  logic [0:0] reg2dp_conv_mode_X41 ;
  logic [0:0] reg2dp_conv_mode_C41 ;
  assign reg2dp_conv_mode_R41 = fangyuan11_R [58:58] ;
  assign reg2dp_conv_mode_X41 = fangyuan11_X [58:58] ;
  assign reg2dp_conv_mode_C41 = fangyuan11_C [58:58] ;
  logic [0:0] reg2dp_conv_mode_R42 ;
  logic [0:0] reg2dp_conv_mode_X42 ;
  logic [0:0] reg2dp_conv_mode_C42 ;
  assign reg2dp_conv_mode_R42 = fangyuan11_R [57:57] ;
  assign reg2dp_conv_mode_X42 = fangyuan11_X [57:57] ;
  assign reg2dp_conv_mode_C42 = fangyuan11_C [57:57] ;
  logic [0:0] reg2dp_conv_mode_R43 ;
  logic [0:0] reg2dp_conv_mode_X43 ;
  logic [0:0] reg2dp_conv_mode_C43 ;
  assign reg2dp_conv_mode_R43 = fangyuan11_R [56:56] ;
  assign reg2dp_conv_mode_X43 = fangyuan11_X [56:56] ;
  assign reg2dp_conv_mode_C43 = fangyuan11_C [56:56] ;
  logic [0:0] reg2dp_conv_mode_R44 ;
  logic [0:0] reg2dp_conv_mode_X44 ;
  logic [0:0] reg2dp_conv_mode_C44 ;
  assign reg2dp_conv_mode_R44 = fangyuan11_R [55:55] ;
  assign reg2dp_conv_mode_X44 = fangyuan11_X [55:55] ;
  assign reg2dp_conv_mode_C44 = fangyuan11_C [55:55] ;
  logic [0:0] reg2dp_conv_mode_R45 ;
  logic [0:0] reg2dp_conv_mode_X45 ;
  logic [0:0] reg2dp_conv_mode_C45 ;
  assign reg2dp_conv_mode_R45 = fangyuan11_R [54:54] ;
  assign reg2dp_conv_mode_X45 = fangyuan11_X [54:54] ;
  assign reg2dp_conv_mode_C45 = fangyuan11_C [54:54] ;
  logic [0:0] reg2dp_conv_mode_R46 ;
  logic [0:0] reg2dp_conv_mode_X46 ;
  logic [0:0] reg2dp_conv_mode_C46 ;
  assign reg2dp_conv_mode_R46 = fangyuan11_R [53:53] ;
  assign reg2dp_conv_mode_X46 = fangyuan11_X [53:53] ;
  assign reg2dp_conv_mode_C46 = fangyuan11_C [53:53] ;
  logic [0:0] reg2dp_conv_mode_R47 ;
  logic [0:0] reg2dp_conv_mode_X47 ;
  logic [0:0] reg2dp_conv_mode_C47 ;
  assign reg2dp_conv_mode_R47 = fangyuan11_R [52:52] ;
  assign reg2dp_conv_mode_X47 = fangyuan11_X [52:52] ;
  assign reg2dp_conv_mode_C47 = fangyuan11_C [52:52] ;
  logic [0:0] reg2dp_conv_mode_R48 ;
  logic [0:0] reg2dp_conv_mode_X48 ;
  logic [0:0] reg2dp_conv_mode_C48 ;
  assign reg2dp_conv_mode_R48 = fangyuan11_R [51:51] ;
  assign reg2dp_conv_mode_X48 = fangyuan11_X [51:51] ;
  assign reg2dp_conv_mode_C48 = fangyuan11_C [51:51] ;
  logic [0:0] reg2dp_conv_mode_R49 ;
  logic [0:0] reg2dp_conv_mode_X49 ;
  logic [0:0] reg2dp_conv_mode_C49 ;
  assign reg2dp_conv_mode_R49 = fangyuan11_R [50:50] ;
  assign reg2dp_conv_mode_X49 = fangyuan11_X [50:50] ;
  assign reg2dp_conv_mode_C49 = fangyuan11_C [50:50] ;
  logic [0:0] reg2dp_conv_mode_R50 ;
  logic [0:0] reg2dp_conv_mode_X50 ;
  logic [0:0] reg2dp_conv_mode_C50 ;
  assign reg2dp_conv_mode_R50 = fangyuan11_R [49:49] ;
  assign reg2dp_conv_mode_X50 = fangyuan11_X [49:49] ;
  assign reg2dp_conv_mode_C50 = fangyuan11_C [49:49] ;
  logic [0:0] reg2dp_conv_mode_R51 ;
  logic [0:0] reg2dp_conv_mode_X51 ;
  logic [0:0] reg2dp_conv_mode_C51 ;
  assign reg2dp_conv_mode_R51 = fangyuan11_R [48:48] ;
  assign reg2dp_conv_mode_X51 = fangyuan11_X [48:48] ;
  assign reg2dp_conv_mode_C51 = fangyuan11_C [48:48] ;
  logic [0:0] reg2dp_conv_mode_R52 ;
  logic [0:0] reg2dp_conv_mode_X52 ;
  logic [0:0] reg2dp_conv_mode_C52 ;
  assign reg2dp_conv_mode_R52 = fangyuan11_R [47:47] ;
  assign reg2dp_conv_mode_X52 = fangyuan11_X [47:47] ;
  assign reg2dp_conv_mode_C52 = fangyuan11_C [47:47] ;
  logic [0:0] reg2dp_conv_mode_R53 ;
  logic [0:0] reg2dp_conv_mode_X53 ;
  logic [0:0] reg2dp_conv_mode_C53 ;
  assign reg2dp_conv_mode_R53 = fangyuan11_R [46:46] ;
  assign reg2dp_conv_mode_X53 = fangyuan11_X [46:46] ;
  assign reg2dp_conv_mode_C53 = fangyuan11_C [46:46] ;
  logic [0:0] reg2dp_conv_mode_R54 ;
  logic [0:0] reg2dp_conv_mode_X54 ;
  logic [0:0] reg2dp_conv_mode_C54 ;
  assign reg2dp_conv_mode_R54 = fangyuan11_R [45:45] ;
  assign reg2dp_conv_mode_X54 = fangyuan11_X [45:45] ;
  assign reg2dp_conv_mode_C54 = fangyuan11_C [45:45] ;
  logic [0:0] reg2dp_conv_mode_R55 ;
  logic [0:0] reg2dp_conv_mode_X55 ;
  logic [0:0] reg2dp_conv_mode_C55 ;
  assign reg2dp_conv_mode_R55 = fangyuan11_R [44:44] ;
  assign reg2dp_conv_mode_X55 = fangyuan11_X [44:44] ;
  assign reg2dp_conv_mode_C55 = fangyuan11_C [44:44] ;
  logic [0:0] reg2dp_conv_mode_R56 ;
  logic [0:0] reg2dp_conv_mode_X56 ;
  logic [0:0] reg2dp_conv_mode_C56 ;
  assign reg2dp_conv_mode_R56 = fangyuan11_R [43:43] ;
  assign reg2dp_conv_mode_X56 = fangyuan11_X [43:43] ;
  assign reg2dp_conv_mode_C56 = fangyuan11_C [43:43] ;
  logic [0:0] reg2dp_conv_mode_R57 ;
  logic [0:0] reg2dp_conv_mode_X57 ;
  logic [0:0] reg2dp_conv_mode_C57 ;
  assign reg2dp_conv_mode_R57 = fangyuan11_R [42:42] ;
  assign reg2dp_conv_mode_X57 = fangyuan11_X [42:42] ;
  assign reg2dp_conv_mode_C57 = fangyuan11_C [42:42] ;
  logic [0:0] reg2dp_conv_mode_R58 ;
  logic [0:0] reg2dp_conv_mode_X58 ;
  logic [0:0] reg2dp_conv_mode_C58 ;
  assign reg2dp_conv_mode_R58 = fangyuan11_R [41:41] ;
  assign reg2dp_conv_mode_X58 = fangyuan11_X [41:41] ;
  assign reg2dp_conv_mode_C58 = fangyuan11_C [41:41] ;
  logic [0:0] reg2dp_conv_mode_R59 ;
  logic [0:0] reg2dp_conv_mode_X59 ;
  logic [0:0] reg2dp_conv_mode_C59 ;
  assign reg2dp_conv_mode_R59 = fangyuan11_R [40:40] ;
  assign reg2dp_conv_mode_X59 = fangyuan11_X [40:40] ;
  assign reg2dp_conv_mode_C59 = fangyuan11_C [40:40] ;
  logic [0:0] reg2dp_conv_mode_R60 ;
  logic [0:0] reg2dp_conv_mode_X60 ;
  logic [0:0] reg2dp_conv_mode_C60 ;
  assign reg2dp_conv_mode_R60 = fangyuan11_R [39:39] ;
  assign reg2dp_conv_mode_X60 = fangyuan11_X [39:39] ;
  assign reg2dp_conv_mode_C60 = fangyuan11_C [39:39] ;
  logic [0:0] reg2dp_conv_mode_R61 ;
  logic [0:0] reg2dp_conv_mode_X61 ;
  logic [0:0] reg2dp_conv_mode_C61 ;
  assign reg2dp_conv_mode_R61 = fangyuan11_R [38:38] ;
  assign reg2dp_conv_mode_X61 = fangyuan11_X [38:38] ;
  assign reg2dp_conv_mode_C61 = fangyuan11_C [38:38] ;
  logic [0:0] reg2dp_conv_mode_R62 ;
  logic [0:0] reg2dp_conv_mode_X62 ;
  logic [0:0] reg2dp_conv_mode_C62 ;
  assign reg2dp_conv_mode_R62 = fangyuan11_R [37:37] ;
  assign reg2dp_conv_mode_X62 = fangyuan11_X [37:37] ;
  assign reg2dp_conv_mode_C62 = fangyuan11_C [37:37] ;
  logic [0:0] reg2dp_conv_mode_R63 ;
  logic [0:0] reg2dp_conv_mode_X63 ;
  logic [0:0] reg2dp_conv_mode_C63 ;
  assign reg2dp_conv_mode_R63 = fangyuan11_R [36:36] ;
  assign reg2dp_conv_mode_X63 = fangyuan11_X [36:36] ;
  assign reg2dp_conv_mode_C63 = fangyuan11_C [36:36] ;
  logic [0:0] reg2dp_conv_mode_R64 ;
  logic [0:0] reg2dp_conv_mode_X64 ;
  logic [0:0] reg2dp_conv_mode_C64 ;
  assign reg2dp_conv_mode_R64 = fangyuan11_R [35:35] ;
  assign reg2dp_conv_mode_X64 = fangyuan11_X [35:35] ;
  assign reg2dp_conv_mode_C64 = fangyuan11_C [35:35] ;
  logic [0:0] reg2dp_conv_mode_R65 ;
  logic [0:0] reg2dp_conv_mode_X65 ;
  logic [0:0] reg2dp_conv_mode_C65 ;
  assign reg2dp_conv_mode_R65 = fangyuan11_R [34:34] ;
  assign reg2dp_conv_mode_X65 = fangyuan11_X [34:34] ;
  assign reg2dp_conv_mode_C65 = fangyuan11_C [34:34] ;
  logic [0:0] reg2dp_conv_mode_R66 ;
  logic [0:0] reg2dp_conv_mode_X66 ;
  logic [0:0] reg2dp_conv_mode_C66 ;
  assign reg2dp_conv_mode_R66 = fangyuan11_R [33:33] ;
  assign reg2dp_conv_mode_X66 = fangyuan11_X [33:33] ;
  assign reg2dp_conv_mode_C66 = fangyuan11_C [33:33] ;
  logic [0:0] reg2dp_conv_mode_R67 ;
  logic [0:0] reg2dp_conv_mode_X67 ;
  logic [0:0] reg2dp_conv_mode_C67 ;
  assign reg2dp_conv_mode_R67 = fangyuan11_R [32:32] ;
  assign reg2dp_conv_mode_X67 = fangyuan11_X [32:32] ;
  assign reg2dp_conv_mode_C67 = fangyuan11_C [32:32] ;
  logic [0:0] reg2dp_conv_mode_R68 ;
  logic [0:0] reg2dp_conv_mode_X68 ;
  logic [0:0] reg2dp_conv_mode_C68 ;
  assign reg2dp_conv_mode_R68 = fangyuan11_R [31:31] ;
  assign reg2dp_conv_mode_X68 = fangyuan11_X [31:31] ;
  assign reg2dp_conv_mode_C68 = fangyuan11_C [31:31] ;
  logic [0:0] reg2dp_conv_mode_R69 ;
  logic [0:0] reg2dp_conv_mode_X69 ;
  logic [0:0] reg2dp_conv_mode_C69 ;
  assign reg2dp_conv_mode_R69 = fangyuan11_R [30:30] ;
  assign reg2dp_conv_mode_X69 = fangyuan11_X [30:30] ;
  assign reg2dp_conv_mode_C69 = fangyuan11_C [30:30] ;
  logic [0:0] reg2dp_conv_mode_R70 ;
  logic [0:0] reg2dp_conv_mode_X70 ;
  logic [0:0] reg2dp_conv_mode_C70 ;
  assign reg2dp_conv_mode_R70 = fangyuan11_R [29:29] ;
  assign reg2dp_conv_mode_X70 = fangyuan11_X [29:29] ;
  assign reg2dp_conv_mode_C70 = fangyuan11_C [29:29] ;
  logic [0:0] reg2dp_conv_mode_R71 ;
  logic [0:0] reg2dp_conv_mode_X71 ;
  logic [0:0] reg2dp_conv_mode_C71 ;
  assign reg2dp_conv_mode_R71 = fangyuan11_R [28:28] ;
  assign reg2dp_conv_mode_X71 = fangyuan11_X [28:28] ;
  assign reg2dp_conv_mode_C71 = fangyuan11_C [28:28] ;
  logic [0:0] reg2dp_conv_mode_R72 ;
  logic [0:0] reg2dp_conv_mode_X72 ;
  logic [0:0] reg2dp_conv_mode_C72 ;
  assign reg2dp_conv_mode_R72 = fangyuan11_R [27:27] ;
  assign reg2dp_conv_mode_X72 = fangyuan11_X [27:27] ;
  assign reg2dp_conv_mode_C72 = fangyuan11_C [27:27] ;
  logic [0:0] reg2dp_conv_mode_R73 ;
  logic [0:0] reg2dp_conv_mode_X73 ;
  logic [0:0] reg2dp_conv_mode_C73 ;
  assign reg2dp_conv_mode_R73 = fangyuan11_R [26:26] ;
  assign reg2dp_conv_mode_X73 = fangyuan11_X [26:26] ;
  assign reg2dp_conv_mode_C73 = fangyuan11_C [26:26] ;
  logic [0:0] reg2dp_conv_mode_R74 ;
  logic [0:0] reg2dp_conv_mode_X74 ;
  logic [0:0] reg2dp_conv_mode_C74 ;
  assign reg2dp_conv_mode_R74 = fangyuan11_R [25:25] ;
  assign reg2dp_conv_mode_X74 = fangyuan11_X [25:25] ;
  assign reg2dp_conv_mode_C74 = fangyuan11_C [25:25] ;
  logic [0:0] reg2dp_conv_mode_R75 ;
  logic [0:0] reg2dp_conv_mode_X75 ;
  logic [0:0] reg2dp_conv_mode_C75 ;
  assign reg2dp_conv_mode_R75 = fangyuan11_R [24:24] ;
  assign reg2dp_conv_mode_X75 = fangyuan11_X [24:24] ;
  assign reg2dp_conv_mode_C75 = fangyuan11_C [24:24] ;
  logic [0:0] reg2dp_conv_mode_R76 ;
  logic [0:0] reg2dp_conv_mode_X76 ;
  logic [0:0] reg2dp_conv_mode_C76 ;
  assign reg2dp_conv_mode_R76 = fangyuan11_R [23:23] ;
  assign reg2dp_conv_mode_X76 = fangyuan11_X [23:23] ;
  assign reg2dp_conv_mode_C76 = fangyuan11_C [23:23] ;
  logic [0:0] reg2dp_conv_mode_R77 ;
  logic [0:0] reg2dp_conv_mode_X77 ;
  logic [0:0] reg2dp_conv_mode_C77 ;
  assign reg2dp_conv_mode_R77 = fangyuan11_R [22:22] ;
  assign reg2dp_conv_mode_X77 = fangyuan11_X [22:22] ;
  assign reg2dp_conv_mode_C77 = fangyuan11_C [22:22] ;
  logic [0:0] reg2dp_conv_mode_R78 ;
  logic [0:0] reg2dp_conv_mode_X78 ;
  logic [0:0] reg2dp_conv_mode_C78 ;
  assign reg2dp_conv_mode_R78 = fangyuan11_R [21:21] ;
  assign reg2dp_conv_mode_X78 = fangyuan11_X [21:21] ;
  assign reg2dp_conv_mode_C78 = fangyuan11_C [21:21] ;
  logic [0:0] reg2dp_conv_mode_R79 ;
  logic [0:0] reg2dp_conv_mode_X79 ;
  logic [0:0] reg2dp_conv_mode_C79 ;
  assign reg2dp_conv_mode_R79 = fangyuan11_R [20:20] ;
  assign reg2dp_conv_mode_X79 = fangyuan11_X [20:20] ;
  assign reg2dp_conv_mode_C79 = fangyuan11_C [20:20] ;
  logic [0:0] reg2dp_conv_mode_R80 ;
  logic [0:0] reg2dp_conv_mode_X80 ;
  logic [0:0] reg2dp_conv_mode_C80 ;
  assign reg2dp_conv_mode_R80 = fangyuan11_R [19:19] ;
  assign reg2dp_conv_mode_X80 = fangyuan11_X [19:19] ;
  assign reg2dp_conv_mode_C80 = fangyuan11_C [19:19] ;
  logic [0:0] reg2dp_conv_mode_R81 ;
  logic [0:0] reg2dp_conv_mode_X81 ;
  logic [0:0] reg2dp_conv_mode_C81 ;
  assign reg2dp_conv_mode_R81 = fangyuan11_R [18:18] ;
  assign reg2dp_conv_mode_X81 = fangyuan11_X [18:18] ;
  assign reg2dp_conv_mode_C81 = fangyuan11_C [18:18] ;
  logic [0:0] reg2dp_conv_mode_R82 ;
  logic [0:0] reg2dp_conv_mode_X82 ;
  logic [0:0] reg2dp_conv_mode_C82 ;
  assign reg2dp_conv_mode_R82 = fangyuan11_R [17:17] ;
  assign reg2dp_conv_mode_X82 = fangyuan11_X [17:17] ;
  assign reg2dp_conv_mode_C82 = fangyuan11_C [17:17] ;
  logic [0:0] reg2dp_conv_mode_R83 ;
  logic [0:0] reg2dp_conv_mode_X83 ;
  logic [0:0] reg2dp_conv_mode_C83 ;
  assign reg2dp_conv_mode_R83 = fangyuan11_R [16:16] ;
  assign reg2dp_conv_mode_X83 = fangyuan11_X [16:16] ;
  assign reg2dp_conv_mode_C83 = fangyuan11_C [16:16] ;
  logic [0:0] reg2dp_conv_mode_R84 ;
  logic [0:0] reg2dp_conv_mode_X84 ;
  logic [0:0] reg2dp_conv_mode_C84 ;
  assign reg2dp_conv_mode_R84 = fangyuan11_R [15:15] ;
  assign reg2dp_conv_mode_X84 = fangyuan11_X [15:15] ;
  assign reg2dp_conv_mode_C84 = fangyuan11_C [15:15] ;
  logic [0:0] reg2dp_conv_mode_R85 ;
  logic [0:0] reg2dp_conv_mode_X85 ;
  logic [0:0] reg2dp_conv_mode_C85 ;
  assign reg2dp_conv_mode_R85 = fangyuan11_R [14:14] ;
  assign reg2dp_conv_mode_X85 = fangyuan11_X [14:14] ;
  assign reg2dp_conv_mode_C85 = fangyuan11_C [14:14] ;
  logic [0:0] reg2dp_conv_mode_R86 ;
  logic [0:0] reg2dp_conv_mode_X86 ;
  logic [0:0] reg2dp_conv_mode_C86 ;
  assign reg2dp_conv_mode_R86 = fangyuan11_R [13:13] ;
  assign reg2dp_conv_mode_X86 = fangyuan11_X [13:13] ;
  assign reg2dp_conv_mode_C86 = fangyuan11_C [13:13] ;
  logic [0:0] reg2dp_conv_mode_R87 ;
  logic [0:0] reg2dp_conv_mode_X87 ;
  logic [0:0] reg2dp_conv_mode_C87 ;
  assign reg2dp_conv_mode_R87 = fangyuan11_R [12:12] ;
  assign reg2dp_conv_mode_X87 = fangyuan11_X [12:12] ;
  assign reg2dp_conv_mode_C87 = fangyuan11_C [12:12] ;
  logic [0:0] reg2dp_conv_mode_R88 ;
  logic [0:0] reg2dp_conv_mode_X88 ;
  logic [0:0] reg2dp_conv_mode_C88 ;
  assign reg2dp_conv_mode_R88 = fangyuan11_R [11:11] ;
  assign reg2dp_conv_mode_X88 = fangyuan11_X [11:11] ;
  assign reg2dp_conv_mode_C88 = fangyuan11_C [11:11] ;
  logic [0:0] reg2dp_conv_mode_R89 ;
  logic [0:0] reg2dp_conv_mode_X89 ;
  logic [0:0] reg2dp_conv_mode_C89 ;
  assign reg2dp_conv_mode_R89 = fangyuan11_R [10:10] ;
  assign reg2dp_conv_mode_X89 = fangyuan11_X [10:10] ;
  assign reg2dp_conv_mode_C89 = fangyuan11_C [10:10] ;
  logic [0:0] reg2dp_conv_mode_R90 ;
  logic [0:0] reg2dp_conv_mode_X90 ;
  logic [0:0] reg2dp_conv_mode_C90 ;
  assign reg2dp_conv_mode_R90 = fangyuan11_R [9:9] ;
  assign reg2dp_conv_mode_X90 = fangyuan11_X [9:9] ;
  assign reg2dp_conv_mode_C90 = fangyuan11_C [9:9] ;
  logic [0:0] reg2dp_conv_mode_R91 ;
  logic [0:0] reg2dp_conv_mode_X91 ;
  logic [0:0] reg2dp_conv_mode_C91 ;
  assign reg2dp_conv_mode_R91 = fangyuan11_R [8:8] ;
  assign reg2dp_conv_mode_X91 = fangyuan11_X [8:8] ;
  assign reg2dp_conv_mode_C91 = fangyuan11_C [8:8] ;
  logic [0:0] reg2dp_conv_mode_R92 ;
  logic [0:0] reg2dp_conv_mode_X92 ;
  logic [0:0] reg2dp_conv_mode_C92 ;
  assign reg2dp_conv_mode_R92 = fangyuan11_R [7:7] ;
  assign reg2dp_conv_mode_X92 = fangyuan11_X [7:7] ;
  assign reg2dp_conv_mode_C92 = fangyuan11_C [7:7] ;
  logic [0:0] reg2dp_conv_mode_R93 ;
  logic [0:0] reg2dp_conv_mode_X93 ;
  logic [0:0] reg2dp_conv_mode_C93 ;
  assign reg2dp_conv_mode_R93 = fangyuan11_R [6:6] ;
  assign reg2dp_conv_mode_X93 = fangyuan11_X [6:6] ;
  assign reg2dp_conv_mode_C93 = fangyuan11_C [6:6] ;
  logic [0:0] reg2dp_conv_mode_R94 ;
  logic [0:0] reg2dp_conv_mode_X94 ;
  logic [0:0] reg2dp_conv_mode_C94 ;
  assign reg2dp_conv_mode_R94 = fangyuan11_R [5:5] ;
  assign reg2dp_conv_mode_X94 = fangyuan11_X [5:5] ;
  assign reg2dp_conv_mode_C94 = fangyuan11_C [5:5] ;
  logic [0:0] reg2dp_conv_mode_R95 ;
  logic [0:0] reg2dp_conv_mode_X95 ;
  logic [0:0] reg2dp_conv_mode_C95 ;
  assign reg2dp_conv_mode_R95 = fangyuan11_R [4:4] ;
  assign reg2dp_conv_mode_X95 = fangyuan11_X [4:4] ;
  assign reg2dp_conv_mode_C95 = fangyuan11_C [4:4] ;
  logic [0:0] reg2dp_conv_mode_R96 ;
  logic [0:0] reg2dp_conv_mode_X96 ;
  logic [0:0] reg2dp_conv_mode_C96 ;
  assign reg2dp_conv_mode_R96 = fangyuan11_R [3:3] ;
  assign reg2dp_conv_mode_X96 = fangyuan11_X [3:3] ;
  assign reg2dp_conv_mode_C96 = fangyuan11_C [3:3] ;
  logic [0:0] reg2dp_conv_mode_R97 ;
  logic [0:0] reg2dp_conv_mode_X97 ;
  logic [0:0] reg2dp_conv_mode_C97 ;
  assign reg2dp_conv_mode_R97 = fangyuan11_R [2:2] ;
  assign reg2dp_conv_mode_X97 = fangyuan11_X [2:2] ;
  assign reg2dp_conv_mode_C97 = fangyuan11_C [2:2] ;
  logic [0:0] reg2dp_conv_mode_R98 ;
  logic [0:0] reg2dp_conv_mode_X98 ;
  logic [0:0] reg2dp_conv_mode_C98 ;
  assign reg2dp_conv_mode_R98 = fangyuan11_R [1:1] ;
  assign reg2dp_conv_mode_X98 = fangyuan11_X [1:1] ;
  assign reg2dp_conv_mode_C98 = fangyuan11_C [1:1] ;
  logic [0:0] reg2dp_conv_mode_R99 ;
  logic [0:0] reg2dp_conv_mode_X99 ;
  logic [0:0] reg2dp_conv_mode_C99 ;
  assign reg2dp_conv_mode_R99 = fangyuan11_R [0:0] ;
  assign reg2dp_conv_mode_X99 = fangyuan11_X [0:0] ;
  assign reg2dp_conv_mode_C99 = fangyuan11_C [0:0] ;

  assign _060_ = layer_st ? fangyuan11 : cfg_is_wg;
  logic [0:0] layer_st_C4 ;
  logic [0:0] layer_st_R4 ;
  logic [0:0] layer_st_X4 ;
  assign layer_st_C4 = | _060__C ;
  assign layer_st_X4 = | _060__X ;
  assign _060__T = layer_st ? ( { 96{ layer_st_T  }} | fangyuan11_T ) : ( { 96{ layer_st_T  }} | cfg_is_wg_T );
  assign _060__S = layer_st ? fangyuan11_S : cfg_is_wg_S ;
  assign layer_st_R4 = ( | (_060__R | ( _060__C & ( { 96{ layer_st }} & fangyuan11_T | { 96{ !layer_st }} & cfg_is_wg_T )))) && fangyuan11 != cfg_is_wg ;
  logic [95:0] fangyuan11_C0 ;
  logic [95:0] fangyuan11_R0 ;
  logic [95:0] fangyuan11_X0 ;
  assign fangyuan11_C0 = { 96{ layer_st }} ;
  assign fangyuan11_R0 = { 96{ layer_st }} & ( _060__R | ( { 96{ layer_st_T  }} & _060__C ));
  assign fangyuan11_X0 = { 96{ layer_st }} & _060__X ;
  logic [95:0] cfg_is_wg_C1 ;
  logic [95:0] cfg_is_wg_R1 ;
  logic [95:0] cfg_is_wg_X1 ;
  assign cfg_is_wg_C1 = { 96{ !layer_st }} ;
  assign cfg_is_wg_R1 = { 96{ !layer_st }} & ( _060__R | ( { 96{ layer_st_T  }} & _060__C ));
  assign cfg_is_wg_X1 = { 96{ !layer_st }} & _060__X ;
  logic [24:0] fangyuan12;
  logic [24:0] fangyuan12_T ;
  logic [24:0] fangyuan12_R ;
  logic [24:0] fangyuan12_C ;
  logic [24:0] fangyuan12_X ;
  assign fangyuan12 = { _069_, _069_, _069_, _069_, _069_, _069_, _069_, _069_, _069_, _069_, _069_, _069_, _069_, _069_, _069_, _069_, _069_, _069_, _069_, _069_, _069_, _069_, _069_, _069_, _069_ };
  assign fangyuan12_T = {  _069__T , _069__T , _069__T , _069__T , _069__T , _069__T , _069__T , _069__T , _069__T , _069__T , _069__T , _069__T , _069__T , _069__T , _069__T , _069__T , _069__T , _069__T , _069__T , _069__T , _069__T , _069__T , _069__T , _069__T , _069__T  };
  logic [13:0] fangyuan12_S ;
  assign fangyuan12_S = 0 ;
  logic [0:0] _069__R2 ;
  logic [0:0] _069__X2 ;
  logic [0:0] _069__C2 ;
  assign _069__R2 = fangyuan12_R [24:24] ;
  assign _069__X2 = fangyuan12_X [24:24] ;
  assign _069__C2 = fangyuan12_C [24:24] ;
  logic [0:0] _069__R3 ;
  logic [0:0] _069__X3 ;
  logic [0:0] _069__C3 ;
  assign _069__R3 = fangyuan12_R [23:23] ;
  assign _069__X3 = fangyuan12_X [23:23] ;
  assign _069__C3 = fangyuan12_C [23:23] ;
  logic [0:0] _069__R4 ;
  logic [0:0] _069__X4 ;
  logic [0:0] _069__C4 ;
  assign _069__R4 = fangyuan12_R [22:22] ;
  assign _069__X4 = fangyuan12_X [22:22] ;
  assign _069__C4 = fangyuan12_C [22:22] ;
  logic [0:0] _069__R5 ;
  logic [0:0] _069__X5 ;
  logic [0:0] _069__C5 ;
  assign _069__R5 = fangyuan12_R [21:21] ;
  assign _069__X5 = fangyuan12_X [21:21] ;
  assign _069__C5 = fangyuan12_C [21:21] ;
  logic [0:0] _069__R6 ;
  logic [0:0] _069__X6 ;
  logic [0:0] _069__C6 ;
  assign _069__R6 = fangyuan12_R [20:20] ;
  assign _069__X6 = fangyuan12_X [20:20] ;
  assign _069__C6 = fangyuan12_C [20:20] ;
  logic [0:0] _069__R7 ;
  logic [0:0] _069__X7 ;
  logic [0:0] _069__C7 ;
  assign _069__R7 = fangyuan12_R [19:19] ;
  assign _069__X7 = fangyuan12_X [19:19] ;
  assign _069__C7 = fangyuan12_C [19:19] ;
  logic [0:0] _069__R8 ;
  logic [0:0] _069__X8 ;
  logic [0:0] _069__C8 ;
  assign _069__R8 = fangyuan12_R [18:18] ;
  assign _069__X8 = fangyuan12_X [18:18] ;
  assign _069__C8 = fangyuan12_C [18:18] ;
  logic [0:0] _069__R9 ;
  logic [0:0] _069__X9 ;
  logic [0:0] _069__C9 ;
  assign _069__R9 = fangyuan12_R [17:17] ;
  assign _069__X9 = fangyuan12_X [17:17] ;
  assign _069__C9 = fangyuan12_C [17:17] ;
  logic [0:0] _069__R10 ;
  logic [0:0] _069__X10 ;
  logic [0:0] _069__C10 ;
  assign _069__R10 = fangyuan12_R [16:16] ;
  assign _069__X10 = fangyuan12_X [16:16] ;
  assign _069__C10 = fangyuan12_C [16:16] ;
  logic [0:0] _069__R11 ;
  logic [0:0] _069__X11 ;
  logic [0:0] _069__C11 ;
  assign _069__R11 = fangyuan12_R [15:15] ;
  assign _069__X11 = fangyuan12_X [15:15] ;
  assign _069__C11 = fangyuan12_C [15:15] ;
  logic [0:0] _069__R12 ;
  logic [0:0] _069__X12 ;
  logic [0:0] _069__C12 ;
  assign _069__R12 = fangyuan12_R [14:14] ;
  assign _069__X12 = fangyuan12_X [14:14] ;
  assign _069__C12 = fangyuan12_C [14:14] ;
  logic [0:0] _069__R13 ;
  logic [0:0] _069__X13 ;
  logic [0:0] _069__C13 ;
  assign _069__R13 = fangyuan12_R [13:13] ;
  assign _069__X13 = fangyuan12_X [13:13] ;
  assign _069__C13 = fangyuan12_C [13:13] ;
  logic [0:0] _069__R14 ;
  logic [0:0] _069__X14 ;
  logic [0:0] _069__C14 ;
  assign _069__R14 = fangyuan12_R [12:12] ;
  assign _069__X14 = fangyuan12_X [12:12] ;
  assign _069__C14 = fangyuan12_C [12:12] ;
  logic [0:0] _069__R15 ;
  logic [0:0] _069__X15 ;
  logic [0:0] _069__C15 ;
  assign _069__R15 = fangyuan12_R [11:11] ;
  assign _069__X15 = fangyuan12_X [11:11] ;
  assign _069__C15 = fangyuan12_C [11:11] ;
  logic [0:0] _069__R16 ;
  logic [0:0] _069__X16 ;
  logic [0:0] _069__C16 ;
  assign _069__R16 = fangyuan12_R [10:10] ;
  assign _069__X16 = fangyuan12_X [10:10] ;
  assign _069__C16 = fangyuan12_C [10:10] ;
  logic [0:0] _069__R17 ;
  logic [0:0] _069__X17 ;
  logic [0:0] _069__C17 ;
  assign _069__R17 = fangyuan12_R [9:9] ;
  assign _069__X17 = fangyuan12_X [9:9] ;
  assign _069__C17 = fangyuan12_C [9:9] ;
  logic [0:0] _069__R18 ;
  logic [0:0] _069__X18 ;
  logic [0:0] _069__C18 ;
  assign _069__R18 = fangyuan12_R [8:8] ;
  assign _069__X18 = fangyuan12_X [8:8] ;
  assign _069__C18 = fangyuan12_C [8:8] ;
  logic [0:0] _069__R19 ;
  logic [0:0] _069__X19 ;
  logic [0:0] _069__C19 ;
  assign _069__R19 = fangyuan12_R [7:7] ;
  assign _069__X19 = fangyuan12_X [7:7] ;
  assign _069__C19 = fangyuan12_C [7:7] ;
  logic [0:0] _069__R20 ;
  logic [0:0] _069__X20 ;
  logic [0:0] _069__C20 ;
  assign _069__R20 = fangyuan12_R [6:6] ;
  assign _069__X20 = fangyuan12_X [6:6] ;
  assign _069__C20 = fangyuan12_C [6:6] ;
  logic [0:0] _069__R21 ;
  logic [0:0] _069__X21 ;
  logic [0:0] _069__C21 ;
  assign _069__R21 = fangyuan12_R [5:5] ;
  assign _069__X21 = fangyuan12_X [5:5] ;
  assign _069__C21 = fangyuan12_C [5:5] ;
  logic [0:0] _069__R22 ;
  logic [0:0] _069__X22 ;
  logic [0:0] _069__C22 ;
  assign _069__R22 = fangyuan12_R [4:4] ;
  assign _069__X22 = fangyuan12_X [4:4] ;
  assign _069__C22 = fangyuan12_C [4:4] ;
  logic [0:0] _069__R23 ;
  logic [0:0] _069__X23 ;
  logic [0:0] _069__C23 ;
  assign _069__R23 = fangyuan12_R [3:3] ;
  assign _069__X23 = fangyuan12_X [3:3] ;
  assign _069__C23 = fangyuan12_C [3:3] ;
  logic [0:0] _069__R24 ;
  logic [0:0] _069__X24 ;
  logic [0:0] _069__C24 ;
  assign _069__R24 = fangyuan12_R [2:2] ;
  assign _069__X24 = fangyuan12_X [2:2] ;
  assign _069__C24 = fangyuan12_C [2:2] ;
  logic [0:0] _069__R25 ;
  logic [0:0] _069__X25 ;
  logic [0:0] _069__C25 ;
  assign _069__R25 = fangyuan12_R [1:1] ;
  assign _069__X25 = fangyuan12_X [1:1] ;
  assign _069__C25 = fangyuan12_C [1:1] ;
  logic [0:0] _069__R26 ;
  logic [0:0] _069__X26 ;
  logic [0:0] _069__C26 ;
  assign _069__R26 = fangyuan12_R [0:0] ;
  assign _069__X26 = fangyuan12_X [0:0] ;
  assign _069__C26 = fangyuan12_C [0:0] ;

  assign _059_ = layer_st ? fangyuan12 : cfg_is_int;
  logic [0:0] layer_st_C5 ;
  logic [0:0] layer_st_R5 ;
  logic [0:0] layer_st_X5 ;
  assign layer_st_C5 = | _059__C ;
  assign layer_st_X5 = | _059__X ;
  assign _059__T = layer_st ? ( { 25{ layer_st_T  }} | fangyuan12_T ) : ( { 25{ layer_st_T  }} | cfg_is_int_T );
  assign _059__S = layer_st ? fangyuan12_S : cfg_is_int_S ;
  assign layer_st_R5 = ( | (_059__R | ( _059__C & ( { 25{ layer_st }} & fangyuan12_T | { 25{ !layer_st }} & cfg_is_int_T )))) && fangyuan12 != cfg_is_int ;
  logic [24:0] fangyuan12_C0 ;
  logic [24:0] fangyuan12_R0 ;
  logic [24:0] fangyuan12_X0 ;
  assign fangyuan12_C0 = { 25{ layer_st }} ;
  assign fangyuan12_R0 = { 25{ layer_st }} & ( _059__R | ( { 25{ layer_st_T  }} & _059__C ));
  assign fangyuan12_X0 = { 25{ layer_st }} & _059__X ;
  logic [24:0] cfg_is_int_C1 ;
  logic [24:0] cfg_is_int_R1 ;
  logic [24:0] cfg_is_int_X1 ;
  assign cfg_is_int_C1 = { 25{ !layer_st }} ;
  assign cfg_is_int_R1 = { 25{ !layer_st }} & ( _059__R | ( { 25{ layer_st_T  }} & _059__C ));
  assign cfg_is_int_X1 = { 25{ !layer_st }} & _059__X ;
  logic [24:0] fangyuan13;
  logic [24:0] fangyuan13_T ;
  logic [24:0] fangyuan13_R ;
  logic [24:0] fangyuan13_C ;
  logic [24:0] fangyuan13_X ;
  assign fangyuan13 = { is_fp16, is_fp16, is_fp16, is_fp16, is_fp16, is_fp16, is_fp16, is_fp16, is_fp16, is_fp16, is_fp16, is_fp16, is_fp16, is_fp16, is_fp16, is_fp16, is_fp16, is_fp16, is_fp16, is_fp16, is_fp16, is_fp16, is_fp16, is_fp16, is_fp16 };
  assign fangyuan13_T = {  is_fp16_T , is_fp16_T , is_fp16_T , is_fp16_T , is_fp16_T , is_fp16_T , is_fp16_T , is_fp16_T , is_fp16_T , is_fp16_T , is_fp16_T , is_fp16_T , is_fp16_T , is_fp16_T , is_fp16_T , is_fp16_T , is_fp16_T , is_fp16_T , is_fp16_T , is_fp16_T , is_fp16_T , is_fp16_T , is_fp16_T , is_fp16_T , is_fp16_T  };
  logic [13:0] fangyuan13_S ;
  assign fangyuan13_S = 0 ;
  logic [0:0] is_fp16_R3 ;
  logic [0:0] is_fp16_X3 ;
  logic [0:0] is_fp16_C3 ;
  assign is_fp16_R3 = fangyuan13_R [24:24] ;
  assign is_fp16_X3 = fangyuan13_X [24:24] ;
  assign is_fp16_C3 = fangyuan13_C [24:24] ;
  logic [0:0] is_fp16_R4 ;
  logic [0:0] is_fp16_X4 ;
  logic [0:0] is_fp16_C4 ;
  assign is_fp16_R4 = fangyuan13_R [23:23] ;
  assign is_fp16_X4 = fangyuan13_X [23:23] ;
  assign is_fp16_C4 = fangyuan13_C [23:23] ;
  logic [0:0] is_fp16_R5 ;
  logic [0:0] is_fp16_X5 ;
  logic [0:0] is_fp16_C5 ;
  assign is_fp16_R5 = fangyuan13_R [22:22] ;
  assign is_fp16_X5 = fangyuan13_X [22:22] ;
  assign is_fp16_C5 = fangyuan13_C [22:22] ;
  logic [0:0] is_fp16_R6 ;
  logic [0:0] is_fp16_X6 ;
  logic [0:0] is_fp16_C6 ;
  assign is_fp16_R6 = fangyuan13_R [21:21] ;
  assign is_fp16_X6 = fangyuan13_X [21:21] ;
  assign is_fp16_C6 = fangyuan13_C [21:21] ;
  logic [0:0] is_fp16_R7 ;
  logic [0:0] is_fp16_X7 ;
  logic [0:0] is_fp16_C7 ;
  assign is_fp16_R7 = fangyuan13_R [20:20] ;
  assign is_fp16_X7 = fangyuan13_X [20:20] ;
  assign is_fp16_C7 = fangyuan13_C [20:20] ;
  logic [0:0] is_fp16_R8 ;
  logic [0:0] is_fp16_X8 ;
  logic [0:0] is_fp16_C8 ;
  assign is_fp16_R8 = fangyuan13_R [19:19] ;
  assign is_fp16_X8 = fangyuan13_X [19:19] ;
  assign is_fp16_C8 = fangyuan13_C [19:19] ;
  logic [0:0] is_fp16_R9 ;
  logic [0:0] is_fp16_X9 ;
  logic [0:0] is_fp16_C9 ;
  assign is_fp16_R9 = fangyuan13_R [18:18] ;
  assign is_fp16_X9 = fangyuan13_X [18:18] ;
  assign is_fp16_C9 = fangyuan13_C [18:18] ;
  logic [0:0] is_fp16_R10 ;
  logic [0:0] is_fp16_X10 ;
  logic [0:0] is_fp16_C10 ;
  assign is_fp16_R10 = fangyuan13_R [17:17] ;
  assign is_fp16_X10 = fangyuan13_X [17:17] ;
  assign is_fp16_C10 = fangyuan13_C [17:17] ;
  logic [0:0] is_fp16_R11 ;
  logic [0:0] is_fp16_X11 ;
  logic [0:0] is_fp16_C11 ;
  assign is_fp16_R11 = fangyuan13_R [16:16] ;
  assign is_fp16_X11 = fangyuan13_X [16:16] ;
  assign is_fp16_C11 = fangyuan13_C [16:16] ;
  logic [0:0] is_fp16_R12 ;
  logic [0:0] is_fp16_X12 ;
  logic [0:0] is_fp16_C12 ;
  assign is_fp16_R12 = fangyuan13_R [15:15] ;
  assign is_fp16_X12 = fangyuan13_X [15:15] ;
  assign is_fp16_C12 = fangyuan13_C [15:15] ;
  logic [0:0] is_fp16_R13 ;
  logic [0:0] is_fp16_X13 ;
  logic [0:0] is_fp16_C13 ;
  assign is_fp16_R13 = fangyuan13_R [14:14] ;
  assign is_fp16_X13 = fangyuan13_X [14:14] ;
  assign is_fp16_C13 = fangyuan13_C [14:14] ;
  logic [0:0] is_fp16_R14 ;
  logic [0:0] is_fp16_X14 ;
  logic [0:0] is_fp16_C14 ;
  assign is_fp16_R14 = fangyuan13_R [13:13] ;
  assign is_fp16_X14 = fangyuan13_X [13:13] ;
  assign is_fp16_C14 = fangyuan13_C [13:13] ;
  logic [0:0] is_fp16_R15 ;
  logic [0:0] is_fp16_X15 ;
  logic [0:0] is_fp16_C15 ;
  assign is_fp16_R15 = fangyuan13_R [12:12] ;
  assign is_fp16_X15 = fangyuan13_X [12:12] ;
  assign is_fp16_C15 = fangyuan13_C [12:12] ;
  logic [0:0] is_fp16_R16 ;
  logic [0:0] is_fp16_X16 ;
  logic [0:0] is_fp16_C16 ;
  assign is_fp16_R16 = fangyuan13_R [11:11] ;
  assign is_fp16_X16 = fangyuan13_X [11:11] ;
  assign is_fp16_C16 = fangyuan13_C [11:11] ;
  logic [0:0] is_fp16_R17 ;
  logic [0:0] is_fp16_X17 ;
  logic [0:0] is_fp16_C17 ;
  assign is_fp16_R17 = fangyuan13_R [10:10] ;
  assign is_fp16_X17 = fangyuan13_X [10:10] ;
  assign is_fp16_C17 = fangyuan13_C [10:10] ;
  logic [0:0] is_fp16_R18 ;
  logic [0:0] is_fp16_X18 ;
  logic [0:0] is_fp16_C18 ;
  assign is_fp16_R18 = fangyuan13_R [9:9] ;
  assign is_fp16_X18 = fangyuan13_X [9:9] ;
  assign is_fp16_C18 = fangyuan13_C [9:9] ;
  logic [0:0] is_fp16_R19 ;
  logic [0:0] is_fp16_X19 ;
  logic [0:0] is_fp16_C19 ;
  assign is_fp16_R19 = fangyuan13_R [8:8] ;
  assign is_fp16_X19 = fangyuan13_X [8:8] ;
  assign is_fp16_C19 = fangyuan13_C [8:8] ;
  logic [0:0] is_fp16_R20 ;
  logic [0:0] is_fp16_X20 ;
  logic [0:0] is_fp16_C20 ;
  assign is_fp16_R20 = fangyuan13_R [7:7] ;
  assign is_fp16_X20 = fangyuan13_X [7:7] ;
  assign is_fp16_C20 = fangyuan13_C [7:7] ;
  logic [0:0] is_fp16_R21 ;
  logic [0:0] is_fp16_X21 ;
  logic [0:0] is_fp16_C21 ;
  assign is_fp16_R21 = fangyuan13_R [6:6] ;
  assign is_fp16_X21 = fangyuan13_X [6:6] ;
  assign is_fp16_C21 = fangyuan13_C [6:6] ;
  logic [0:0] is_fp16_R22 ;
  logic [0:0] is_fp16_X22 ;
  logic [0:0] is_fp16_C22 ;
  assign is_fp16_R22 = fangyuan13_R [5:5] ;
  assign is_fp16_X22 = fangyuan13_X [5:5] ;
  assign is_fp16_C22 = fangyuan13_C [5:5] ;
  logic [0:0] is_fp16_R23 ;
  logic [0:0] is_fp16_X23 ;
  logic [0:0] is_fp16_C23 ;
  assign is_fp16_R23 = fangyuan13_R [4:4] ;
  assign is_fp16_X23 = fangyuan13_X [4:4] ;
  assign is_fp16_C23 = fangyuan13_C [4:4] ;
  logic [0:0] is_fp16_R24 ;
  logic [0:0] is_fp16_X24 ;
  logic [0:0] is_fp16_C24 ;
  assign is_fp16_R24 = fangyuan13_R [3:3] ;
  assign is_fp16_X24 = fangyuan13_X [3:3] ;
  assign is_fp16_C24 = fangyuan13_C [3:3] ;
  logic [0:0] is_fp16_R25 ;
  logic [0:0] is_fp16_X25 ;
  logic [0:0] is_fp16_C25 ;
  assign is_fp16_R25 = fangyuan13_R [2:2] ;
  assign is_fp16_X25 = fangyuan13_X [2:2] ;
  assign is_fp16_C25 = fangyuan13_C [2:2] ;
  logic [0:0] is_fp16_R26 ;
  logic [0:0] is_fp16_X26 ;
  logic [0:0] is_fp16_C26 ;
  assign is_fp16_R26 = fangyuan13_R [1:1] ;
  assign is_fp16_X26 = fangyuan13_X [1:1] ;
  assign is_fp16_C26 = fangyuan13_C [1:1] ;
  logic [0:0] is_fp16_R27 ;
  logic [0:0] is_fp16_X27 ;
  logic [0:0] is_fp16_C27 ;
  assign is_fp16_R27 = fangyuan13_R [0:0] ;
  assign is_fp16_X27 = fangyuan13_X [0:0] ;
  assign is_fp16_C27 = fangyuan13_C [0:0] ;

  assign _057_ = layer_st ? fangyuan13 : cfg_is_fp;
  logic [0:0] layer_st_C6 ;
  logic [0:0] layer_st_R6 ;
  logic [0:0] layer_st_X6 ;
  assign layer_st_C6 = | _057__C ;
  assign layer_st_X6 = | _057__X ;
  assign _057__T = layer_st ? ( { 25{ layer_st_T  }} | fangyuan13_T ) : ( { 25{ layer_st_T  }} | cfg_is_fp_T );
  assign _057__S = layer_st ? fangyuan13_S : cfg_is_fp_S ;
  assign layer_st_R6 = ( | (_057__R | ( _057__C & ( { 25{ layer_st }} & fangyuan13_T | { 25{ !layer_st }} & cfg_is_fp_T )))) && fangyuan13 != cfg_is_fp ;
  logic [24:0] fangyuan13_C0 ;
  logic [24:0] fangyuan13_R0 ;
  logic [24:0] fangyuan13_X0 ;
  assign fangyuan13_C0 = { 25{ layer_st }} ;
  assign fangyuan13_R0 = { 25{ layer_st }} & ( _057__R | ( { 25{ layer_st_T  }} & _057__C ));
  assign fangyuan13_X0 = { 25{ layer_st }} & _057__X ;
  logic [24:0] cfg_is_fp_C1 ;
  logic [24:0] cfg_is_fp_R1 ;
  logic [24:0] cfg_is_fp_X1 ;
  assign cfg_is_fp_C1 = { 25{ !layer_st }} ;
  assign cfg_is_fp_R1 = { 25{ !layer_st }} & ( _057__R | ( { 25{ layer_st_T  }} & _057__C ));
  assign cfg_is_fp_X1 = { 25{ !layer_st }} & _057__X ;
  logic [639:0] fangyuan14;
  logic [639:0] fangyuan14_T ;
  logic [639:0] fangyuan14_R ;
  logic [639:0] fangyuan14_C ;
  logic [639:0] fangyuan14_X ;
  assign fangyuan14 = { reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate, reg2dp_clip_truncate };
  assign fangyuan14_T = {  reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T , reg2dp_clip_truncate_T  };
  logic [13:0] fangyuan14_S ;
  assign fangyuan14_S = 0 ;
  logic [4:0] reg2dp_clip_truncate_R0 ;
  logic [4:0] reg2dp_clip_truncate_X0 ;
  logic [4:0] reg2dp_clip_truncate_C0 ;
  assign reg2dp_clip_truncate_R0 = fangyuan14_R [639:635] ;
  assign reg2dp_clip_truncate_X0 = fangyuan14_X [639:635] ;
  assign reg2dp_clip_truncate_C0 = fangyuan14_C [639:635] ;
  logic [4:0] reg2dp_clip_truncate_R1 ;
  logic [4:0] reg2dp_clip_truncate_X1 ;
  logic [4:0] reg2dp_clip_truncate_C1 ;
  assign reg2dp_clip_truncate_R1 = fangyuan14_R [634:630] ;
  assign reg2dp_clip_truncate_X1 = fangyuan14_X [634:630] ;
  assign reg2dp_clip_truncate_C1 = fangyuan14_C [634:630] ;
  logic [4:0] reg2dp_clip_truncate_R2 ;
  logic [4:0] reg2dp_clip_truncate_X2 ;
  logic [4:0] reg2dp_clip_truncate_C2 ;
  assign reg2dp_clip_truncate_R2 = fangyuan14_R [629:625] ;
  assign reg2dp_clip_truncate_X2 = fangyuan14_X [629:625] ;
  assign reg2dp_clip_truncate_C2 = fangyuan14_C [629:625] ;
  logic [4:0] reg2dp_clip_truncate_R3 ;
  logic [4:0] reg2dp_clip_truncate_X3 ;
  logic [4:0] reg2dp_clip_truncate_C3 ;
  assign reg2dp_clip_truncate_R3 = fangyuan14_R [624:620] ;
  assign reg2dp_clip_truncate_X3 = fangyuan14_X [624:620] ;
  assign reg2dp_clip_truncate_C3 = fangyuan14_C [624:620] ;
  logic [4:0] reg2dp_clip_truncate_R4 ;
  logic [4:0] reg2dp_clip_truncate_X4 ;
  logic [4:0] reg2dp_clip_truncate_C4 ;
  assign reg2dp_clip_truncate_R4 = fangyuan14_R [619:615] ;
  assign reg2dp_clip_truncate_X4 = fangyuan14_X [619:615] ;
  assign reg2dp_clip_truncate_C4 = fangyuan14_C [619:615] ;
  logic [4:0] reg2dp_clip_truncate_R5 ;
  logic [4:0] reg2dp_clip_truncate_X5 ;
  logic [4:0] reg2dp_clip_truncate_C5 ;
  assign reg2dp_clip_truncate_R5 = fangyuan14_R [614:610] ;
  assign reg2dp_clip_truncate_X5 = fangyuan14_X [614:610] ;
  assign reg2dp_clip_truncate_C5 = fangyuan14_C [614:610] ;
  logic [4:0] reg2dp_clip_truncate_R6 ;
  logic [4:0] reg2dp_clip_truncate_X6 ;
  logic [4:0] reg2dp_clip_truncate_C6 ;
  assign reg2dp_clip_truncate_R6 = fangyuan14_R [609:605] ;
  assign reg2dp_clip_truncate_X6 = fangyuan14_X [609:605] ;
  assign reg2dp_clip_truncate_C6 = fangyuan14_C [609:605] ;
  logic [4:0] reg2dp_clip_truncate_R7 ;
  logic [4:0] reg2dp_clip_truncate_X7 ;
  logic [4:0] reg2dp_clip_truncate_C7 ;
  assign reg2dp_clip_truncate_R7 = fangyuan14_R [604:600] ;
  assign reg2dp_clip_truncate_X7 = fangyuan14_X [604:600] ;
  assign reg2dp_clip_truncate_C7 = fangyuan14_C [604:600] ;
  logic [4:0] reg2dp_clip_truncate_R8 ;
  logic [4:0] reg2dp_clip_truncate_X8 ;
  logic [4:0] reg2dp_clip_truncate_C8 ;
  assign reg2dp_clip_truncate_R8 = fangyuan14_R [599:595] ;
  assign reg2dp_clip_truncate_X8 = fangyuan14_X [599:595] ;
  assign reg2dp_clip_truncate_C8 = fangyuan14_C [599:595] ;
  logic [4:0] reg2dp_clip_truncate_R9 ;
  logic [4:0] reg2dp_clip_truncate_X9 ;
  logic [4:0] reg2dp_clip_truncate_C9 ;
  assign reg2dp_clip_truncate_R9 = fangyuan14_R [594:590] ;
  assign reg2dp_clip_truncate_X9 = fangyuan14_X [594:590] ;
  assign reg2dp_clip_truncate_C9 = fangyuan14_C [594:590] ;
  logic [4:0] reg2dp_clip_truncate_R10 ;
  logic [4:0] reg2dp_clip_truncate_X10 ;
  logic [4:0] reg2dp_clip_truncate_C10 ;
  assign reg2dp_clip_truncate_R10 = fangyuan14_R [589:585] ;
  assign reg2dp_clip_truncate_X10 = fangyuan14_X [589:585] ;
  assign reg2dp_clip_truncate_C10 = fangyuan14_C [589:585] ;
  logic [4:0] reg2dp_clip_truncate_R11 ;
  logic [4:0] reg2dp_clip_truncate_X11 ;
  logic [4:0] reg2dp_clip_truncate_C11 ;
  assign reg2dp_clip_truncate_R11 = fangyuan14_R [584:580] ;
  assign reg2dp_clip_truncate_X11 = fangyuan14_X [584:580] ;
  assign reg2dp_clip_truncate_C11 = fangyuan14_C [584:580] ;
  logic [4:0] reg2dp_clip_truncate_R12 ;
  logic [4:0] reg2dp_clip_truncate_X12 ;
  logic [4:0] reg2dp_clip_truncate_C12 ;
  assign reg2dp_clip_truncate_R12 = fangyuan14_R [579:575] ;
  assign reg2dp_clip_truncate_X12 = fangyuan14_X [579:575] ;
  assign reg2dp_clip_truncate_C12 = fangyuan14_C [579:575] ;
  logic [4:0] reg2dp_clip_truncate_R13 ;
  logic [4:0] reg2dp_clip_truncate_X13 ;
  logic [4:0] reg2dp_clip_truncate_C13 ;
  assign reg2dp_clip_truncate_R13 = fangyuan14_R [574:570] ;
  assign reg2dp_clip_truncate_X13 = fangyuan14_X [574:570] ;
  assign reg2dp_clip_truncate_C13 = fangyuan14_C [574:570] ;
  logic [4:0] reg2dp_clip_truncate_R14 ;
  logic [4:0] reg2dp_clip_truncate_X14 ;
  logic [4:0] reg2dp_clip_truncate_C14 ;
  assign reg2dp_clip_truncate_R14 = fangyuan14_R [569:565] ;
  assign reg2dp_clip_truncate_X14 = fangyuan14_X [569:565] ;
  assign reg2dp_clip_truncate_C14 = fangyuan14_C [569:565] ;
  logic [4:0] reg2dp_clip_truncate_R15 ;
  logic [4:0] reg2dp_clip_truncate_X15 ;
  logic [4:0] reg2dp_clip_truncate_C15 ;
  assign reg2dp_clip_truncate_R15 = fangyuan14_R [564:560] ;
  assign reg2dp_clip_truncate_X15 = fangyuan14_X [564:560] ;
  assign reg2dp_clip_truncate_C15 = fangyuan14_C [564:560] ;
  logic [4:0] reg2dp_clip_truncate_R16 ;
  logic [4:0] reg2dp_clip_truncate_X16 ;
  logic [4:0] reg2dp_clip_truncate_C16 ;
  assign reg2dp_clip_truncate_R16 = fangyuan14_R [559:555] ;
  assign reg2dp_clip_truncate_X16 = fangyuan14_X [559:555] ;
  assign reg2dp_clip_truncate_C16 = fangyuan14_C [559:555] ;
  logic [4:0] reg2dp_clip_truncate_R17 ;
  logic [4:0] reg2dp_clip_truncate_X17 ;
  logic [4:0] reg2dp_clip_truncate_C17 ;
  assign reg2dp_clip_truncate_R17 = fangyuan14_R [554:550] ;
  assign reg2dp_clip_truncate_X17 = fangyuan14_X [554:550] ;
  assign reg2dp_clip_truncate_C17 = fangyuan14_C [554:550] ;
  logic [4:0] reg2dp_clip_truncate_R18 ;
  logic [4:0] reg2dp_clip_truncate_X18 ;
  logic [4:0] reg2dp_clip_truncate_C18 ;
  assign reg2dp_clip_truncate_R18 = fangyuan14_R [549:545] ;
  assign reg2dp_clip_truncate_X18 = fangyuan14_X [549:545] ;
  assign reg2dp_clip_truncate_C18 = fangyuan14_C [549:545] ;
  logic [4:0] reg2dp_clip_truncate_R19 ;
  logic [4:0] reg2dp_clip_truncate_X19 ;
  logic [4:0] reg2dp_clip_truncate_C19 ;
  assign reg2dp_clip_truncate_R19 = fangyuan14_R [544:540] ;
  assign reg2dp_clip_truncate_X19 = fangyuan14_X [544:540] ;
  assign reg2dp_clip_truncate_C19 = fangyuan14_C [544:540] ;
  logic [4:0] reg2dp_clip_truncate_R20 ;
  logic [4:0] reg2dp_clip_truncate_X20 ;
  logic [4:0] reg2dp_clip_truncate_C20 ;
  assign reg2dp_clip_truncate_R20 = fangyuan14_R [539:535] ;
  assign reg2dp_clip_truncate_X20 = fangyuan14_X [539:535] ;
  assign reg2dp_clip_truncate_C20 = fangyuan14_C [539:535] ;
  logic [4:0] reg2dp_clip_truncate_R21 ;
  logic [4:0] reg2dp_clip_truncate_X21 ;
  logic [4:0] reg2dp_clip_truncate_C21 ;
  assign reg2dp_clip_truncate_R21 = fangyuan14_R [534:530] ;
  assign reg2dp_clip_truncate_X21 = fangyuan14_X [534:530] ;
  assign reg2dp_clip_truncate_C21 = fangyuan14_C [534:530] ;
  logic [4:0] reg2dp_clip_truncate_R22 ;
  logic [4:0] reg2dp_clip_truncate_X22 ;
  logic [4:0] reg2dp_clip_truncate_C22 ;
  assign reg2dp_clip_truncate_R22 = fangyuan14_R [529:525] ;
  assign reg2dp_clip_truncate_X22 = fangyuan14_X [529:525] ;
  assign reg2dp_clip_truncate_C22 = fangyuan14_C [529:525] ;
  logic [4:0] reg2dp_clip_truncate_R23 ;
  logic [4:0] reg2dp_clip_truncate_X23 ;
  logic [4:0] reg2dp_clip_truncate_C23 ;
  assign reg2dp_clip_truncate_R23 = fangyuan14_R [524:520] ;
  assign reg2dp_clip_truncate_X23 = fangyuan14_X [524:520] ;
  assign reg2dp_clip_truncate_C23 = fangyuan14_C [524:520] ;
  logic [4:0] reg2dp_clip_truncate_R24 ;
  logic [4:0] reg2dp_clip_truncate_X24 ;
  logic [4:0] reg2dp_clip_truncate_C24 ;
  assign reg2dp_clip_truncate_R24 = fangyuan14_R [519:515] ;
  assign reg2dp_clip_truncate_X24 = fangyuan14_X [519:515] ;
  assign reg2dp_clip_truncate_C24 = fangyuan14_C [519:515] ;
  logic [4:0] reg2dp_clip_truncate_R25 ;
  logic [4:0] reg2dp_clip_truncate_X25 ;
  logic [4:0] reg2dp_clip_truncate_C25 ;
  assign reg2dp_clip_truncate_R25 = fangyuan14_R [514:510] ;
  assign reg2dp_clip_truncate_X25 = fangyuan14_X [514:510] ;
  assign reg2dp_clip_truncate_C25 = fangyuan14_C [514:510] ;
  logic [4:0] reg2dp_clip_truncate_R26 ;
  logic [4:0] reg2dp_clip_truncate_X26 ;
  logic [4:0] reg2dp_clip_truncate_C26 ;
  assign reg2dp_clip_truncate_R26 = fangyuan14_R [509:505] ;
  assign reg2dp_clip_truncate_X26 = fangyuan14_X [509:505] ;
  assign reg2dp_clip_truncate_C26 = fangyuan14_C [509:505] ;
  logic [4:0] reg2dp_clip_truncate_R27 ;
  logic [4:0] reg2dp_clip_truncate_X27 ;
  logic [4:0] reg2dp_clip_truncate_C27 ;
  assign reg2dp_clip_truncate_R27 = fangyuan14_R [504:500] ;
  assign reg2dp_clip_truncate_X27 = fangyuan14_X [504:500] ;
  assign reg2dp_clip_truncate_C27 = fangyuan14_C [504:500] ;
  logic [4:0] reg2dp_clip_truncate_R28 ;
  logic [4:0] reg2dp_clip_truncate_X28 ;
  logic [4:0] reg2dp_clip_truncate_C28 ;
  assign reg2dp_clip_truncate_R28 = fangyuan14_R [499:495] ;
  assign reg2dp_clip_truncate_X28 = fangyuan14_X [499:495] ;
  assign reg2dp_clip_truncate_C28 = fangyuan14_C [499:495] ;
  logic [4:0] reg2dp_clip_truncate_R29 ;
  logic [4:0] reg2dp_clip_truncate_X29 ;
  logic [4:0] reg2dp_clip_truncate_C29 ;
  assign reg2dp_clip_truncate_R29 = fangyuan14_R [494:490] ;
  assign reg2dp_clip_truncate_X29 = fangyuan14_X [494:490] ;
  assign reg2dp_clip_truncate_C29 = fangyuan14_C [494:490] ;
  logic [4:0] reg2dp_clip_truncate_R30 ;
  logic [4:0] reg2dp_clip_truncate_X30 ;
  logic [4:0] reg2dp_clip_truncate_C30 ;
  assign reg2dp_clip_truncate_R30 = fangyuan14_R [489:485] ;
  assign reg2dp_clip_truncate_X30 = fangyuan14_X [489:485] ;
  assign reg2dp_clip_truncate_C30 = fangyuan14_C [489:485] ;
  logic [4:0] reg2dp_clip_truncate_R31 ;
  logic [4:0] reg2dp_clip_truncate_X31 ;
  logic [4:0] reg2dp_clip_truncate_C31 ;
  assign reg2dp_clip_truncate_R31 = fangyuan14_R [484:480] ;
  assign reg2dp_clip_truncate_X31 = fangyuan14_X [484:480] ;
  assign reg2dp_clip_truncate_C31 = fangyuan14_C [484:480] ;
  logic [4:0] reg2dp_clip_truncate_R32 ;
  logic [4:0] reg2dp_clip_truncate_X32 ;
  logic [4:0] reg2dp_clip_truncate_C32 ;
  assign reg2dp_clip_truncate_R32 = fangyuan14_R [479:475] ;
  assign reg2dp_clip_truncate_X32 = fangyuan14_X [479:475] ;
  assign reg2dp_clip_truncate_C32 = fangyuan14_C [479:475] ;
  logic [4:0] reg2dp_clip_truncate_R33 ;
  logic [4:0] reg2dp_clip_truncate_X33 ;
  logic [4:0] reg2dp_clip_truncate_C33 ;
  assign reg2dp_clip_truncate_R33 = fangyuan14_R [474:470] ;
  assign reg2dp_clip_truncate_X33 = fangyuan14_X [474:470] ;
  assign reg2dp_clip_truncate_C33 = fangyuan14_C [474:470] ;
  logic [4:0] reg2dp_clip_truncate_R34 ;
  logic [4:0] reg2dp_clip_truncate_X34 ;
  logic [4:0] reg2dp_clip_truncate_C34 ;
  assign reg2dp_clip_truncate_R34 = fangyuan14_R [469:465] ;
  assign reg2dp_clip_truncate_X34 = fangyuan14_X [469:465] ;
  assign reg2dp_clip_truncate_C34 = fangyuan14_C [469:465] ;
  logic [4:0] reg2dp_clip_truncate_R35 ;
  logic [4:0] reg2dp_clip_truncate_X35 ;
  logic [4:0] reg2dp_clip_truncate_C35 ;
  assign reg2dp_clip_truncate_R35 = fangyuan14_R [464:460] ;
  assign reg2dp_clip_truncate_X35 = fangyuan14_X [464:460] ;
  assign reg2dp_clip_truncate_C35 = fangyuan14_C [464:460] ;
  logic [4:0] reg2dp_clip_truncate_R36 ;
  logic [4:0] reg2dp_clip_truncate_X36 ;
  logic [4:0] reg2dp_clip_truncate_C36 ;
  assign reg2dp_clip_truncate_R36 = fangyuan14_R [459:455] ;
  assign reg2dp_clip_truncate_X36 = fangyuan14_X [459:455] ;
  assign reg2dp_clip_truncate_C36 = fangyuan14_C [459:455] ;
  logic [4:0] reg2dp_clip_truncate_R37 ;
  logic [4:0] reg2dp_clip_truncate_X37 ;
  logic [4:0] reg2dp_clip_truncate_C37 ;
  assign reg2dp_clip_truncate_R37 = fangyuan14_R [454:450] ;
  assign reg2dp_clip_truncate_X37 = fangyuan14_X [454:450] ;
  assign reg2dp_clip_truncate_C37 = fangyuan14_C [454:450] ;
  logic [4:0] reg2dp_clip_truncate_R38 ;
  logic [4:0] reg2dp_clip_truncate_X38 ;
  logic [4:0] reg2dp_clip_truncate_C38 ;
  assign reg2dp_clip_truncate_R38 = fangyuan14_R [449:445] ;
  assign reg2dp_clip_truncate_X38 = fangyuan14_X [449:445] ;
  assign reg2dp_clip_truncate_C38 = fangyuan14_C [449:445] ;
  logic [4:0] reg2dp_clip_truncate_R39 ;
  logic [4:0] reg2dp_clip_truncate_X39 ;
  logic [4:0] reg2dp_clip_truncate_C39 ;
  assign reg2dp_clip_truncate_R39 = fangyuan14_R [444:440] ;
  assign reg2dp_clip_truncate_X39 = fangyuan14_X [444:440] ;
  assign reg2dp_clip_truncate_C39 = fangyuan14_C [444:440] ;
  logic [4:0] reg2dp_clip_truncate_R40 ;
  logic [4:0] reg2dp_clip_truncate_X40 ;
  logic [4:0] reg2dp_clip_truncate_C40 ;
  assign reg2dp_clip_truncate_R40 = fangyuan14_R [439:435] ;
  assign reg2dp_clip_truncate_X40 = fangyuan14_X [439:435] ;
  assign reg2dp_clip_truncate_C40 = fangyuan14_C [439:435] ;
  logic [4:0] reg2dp_clip_truncate_R41 ;
  logic [4:0] reg2dp_clip_truncate_X41 ;
  logic [4:0] reg2dp_clip_truncate_C41 ;
  assign reg2dp_clip_truncate_R41 = fangyuan14_R [434:430] ;
  assign reg2dp_clip_truncate_X41 = fangyuan14_X [434:430] ;
  assign reg2dp_clip_truncate_C41 = fangyuan14_C [434:430] ;
  logic [4:0] reg2dp_clip_truncate_R42 ;
  logic [4:0] reg2dp_clip_truncate_X42 ;
  logic [4:0] reg2dp_clip_truncate_C42 ;
  assign reg2dp_clip_truncate_R42 = fangyuan14_R [429:425] ;
  assign reg2dp_clip_truncate_X42 = fangyuan14_X [429:425] ;
  assign reg2dp_clip_truncate_C42 = fangyuan14_C [429:425] ;
  logic [4:0] reg2dp_clip_truncate_R43 ;
  logic [4:0] reg2dp_clip_truncate_X43 ;
  logic [4:0] reg2dp_clip_truncate_C43 ;
  assign reg2dp_clip_truncate_R43 = fangyuan14_R [424:420] ;
  assign reg2dp_clip_truncate_X43 = fangyuan14_X [424:420] ;
  assign reg2dp_clip_truncate_C43 = fangyuan14_C [424:420] ;
  logic [4:0] reg2dp_clip_truncate_R44 ;
  logic [4:0] reg2dp_clip_truncate_X44 ;
  logic [4:0] reg2dp_clip_truncate_C44 ;
  assign reg2dp_clip_truncate_R44 = fangyuan14_R [419:415] ;
  assign reg2dp_clip_truncate_X44 = fangyuan14_X [419:415] ;
  assign reg2dp_clip_truncate_C44 = fangyuan14_C [419:415] ;
  logic [4:0] reg2dp_clip_truncate_R45 ;
  logic [4:0] reg2dp_clip_truncate_X45 ;
  logic [4:0] reg2dp_clip_truncate_C45 ;
  assign reg2dp_clip_truncate_R45 = fangyuan14_R [414:410] ;
  assign reg2dp_clip_truncate_X45 = fangyuan14_X [414:410] ;
  assign reg2dp_clip_truncate_C45 = fangyuan14_C [414:410] ;
  logic [4:0] reg2dp_clip_truncate_R46 ;
  logic [4:0] reg2dp_clip_truncate_X46 ;
  logic [4:0] reg2dp_clip_truncate_C46 ;
  assign reg2dp_clip_truncate_R46 = fangyuan14_R [409:405] ;
  assign reg2dp_clip_truncate_X46 = fangyuan14_X [409:405] ;
  assign reg2dp_clip_truncate_C46 = fangyuan14_C [409:405] ;
  logic [4:0] reg2dp_clip_truncate_R47 ;
  logic [4:0] reg2dp_clip_truncate_X47 ;
  logic [4:0] reg2dp_clip_truncate_C47 ;
  assign reg2dp_clip_truncate_R47 = fangyuan14_R [404:400] ;
  assign reg2dp_clip_truncate_X47 = fangyuan14_X [404:400] ;
  assign reg2dp_clip_truncate_C47 = fangyuan14_C [404:400] ;
  logic [4:0] reg2dp_clip_truncate_R48 ;
  logic [4:0] reg2dp_clip_truncate_X48 ;
  logic [4:0] reg2dp_clip_truncate_C48 ;
  assign reg2dp_clip_truncate_R48 = fangyuan14_R [399:395] ;
  assign reg2dp_clip_truncate_X48 = fangyuan14_X [399:395] ;
  assign reg2dp_clip_truncate_C48 = fangyuan14_C [399:395] ;
  logic [4:0] reg2dp_clip_truncate_R49 ;
  logic [4:0] reg2dp_clip_truncate_X49 ;
  logic [4:0] reg2dp_clip_truncate_C49 ;
  assign reg2dp_clip_truncate_R49 = fangyuan14_R [394:390] ;
  assign reg2dp_clip_truncate_X49 = fangyuan14_X [394:390] ;
  assign reg2dp_clip_truncate_C49 = fangyuan14_C [394:390] ;
  logic [4:0] reg2dp_clip_truncate_R50 ;
  logic [4:0] reg2dp_clip_truncate_X50 ;
  logic [4:0] reg2dp_clip_truncate_C50 ;
  assign reg2dp_clip_truncate_R50 = fangyuan14_R [389:385] ;
  assign reg2dp_clip_truncate_X50 = fangyuan14_X [389:385] ;
  assign reg2dp_clip_truncate_C50 = fangyuan14_C [389:385] ;
  logic [4:0] reg2dp_clip_truncate_R51 ;
  logic [4:0] reg2dp_clip_truncate_X51 ;
  logic [4:0] reg2dp_clip_truncate_C51 ;
  assign reg2dp_clip_truncate_R51 = fangyuan14_R [384:380] ;
  assign reg2dp_clip_truncate_X51 = fangyuan14_X [384:380] ;
  assign reg2dp_clip_truncate_C51 = fangyuan14_C [384:380] ;
  logic [4:0] reg2dp_clip_truncate_R52 ;
  logic [4:0] reg2dp_clip_truncate_X52 ;
  logic [4:0] reg2dp_clip_truncate_C52 ;
  assign reg2dp_clip_truncate_R52 = fangyuan14_R [379:375] ;
  assign reg2dp_clip_truncate_X52 = fangyuan14_X [379:375] ;
  assign reg2dp_clip_truncate_C52 = fangyuan14_C [379:375] ;
  logic [4:0] reg2dp_clip_truncate_R53 ;
  logic [4:0] reg2dp_clip_truncate_X53 ;
  logic [4:0] reg2dp_clip_truncate_C53 ;
  assign reg2dp_clip_truncate_R53 = fangyuan14_R [374:370] ;
  assign reg2dp_clip_truncate_X53 = fangyuan14_X [374:370] ;
  assign reg2dp_clip_truncate_C53 = fangyuan14_C [374:370] ;
  logic [4:0] reg2dp_clip_truncate_R54 ;
  logic [4:0] reg2dp_clip_truncate_X54 ;
  logic [4:0] reg2dp_clip_truncate_C54 ;
  assign reg2dp_clip_truncate_R54 = fangyuan14_R [369:365] ;
  assign reg2dp_clip_truncate_X54 = fangyuan14_X [369:365] ;
  assign reg2dp_clip_truncate_C54 = fangyuan14_C [369:365] ;
  logic [4:0] reg2dp_clip_truncate_R55 ;
  logic [4:0] reg2dp_clip_truncate_X55 ;
  logic [4:0] reg2dp_clip_truncate_C55 ;
  assign reg2dp_clip_truncate_R55 = fangyuan14_R [364:360] ;
  assign reg2dp_clip_truncate_X55 = fangyuan14_X [364:360] ;
  assign reg2dp_clip_truncate_C55 = fangyuan14_C [364:360] ;
  logic [4:0] reg2dp_clip_truncate_R56 ;
  logic [4:0] reg2dp_clip_truncate_X56 ;
  logic [4:0] reg2dp_clip_truncate_C56 ;
  assign reg2dp_clip_truncate_R56 = fangyuan14_R [359:355] ;
  assign reg2dp_clip_truncate_X56 = fangyuan14_X [359:355] ;
  assign reg2dp_clip_truncate_C56 = fangyuan14_C [359:355] ;
  logic [4:0] reg2dp_clip_truncate_R57 ;
  logic [4:0] reg2dp_clip_truncate_X57 ;
  logic [4:0] reg2dp_clip_truncate_C57 ;
  assign reg2dp_clip_truncate_R57 = fangyuan14_R [354:350] ;
  assign reg2dp_clip_truncate_X57 = fangyuan14_X [354:350] ;
  assign reg2dp_clip_truncate_C57 = fangyuan14_C [354:350] ;
  logic [4:0] reg2dp_clip_truncate_R58 ;
  logic [4:0] reg2dp_clip_truncate_X58 ;
  logic [4:0] reg2dp_clip_truncate_C58 ;
  assign reg2dp_clip_truncate_R58 = fangyuan14_R [349:345] ;
  assign reg2dp_clip_truncate_X58 = fangyuan14_X [349:345] ;
  assign reg2dp_clip_truncate_C58 = fangyuan14_C [349:345] ;
  logic [4:0] reg2dp_clip_truncate_R59 ;
  logic [4:0] reg2dp_clip_truncate_X59 ;
  logic [4:0] reg2dp_clip_truncate_C59 ;
  assign reg2dp_clip_truncate_R59 = fangyuan14_R [344:340] ;
  assign reg2dp_clip_truncate_X59 = fangyuan14_X [344:340] ;
  assign reg2dp_clip_truncate_C59 = fangyuan14_C [344:340] ;
  logic [4:0] reg2dp_clip_truncate_R60 ;
  logic [4:0] reg2dp_clip_truncate_X60 ;
  logic [4:0] reg2dp_clip_truncate_C60 ;
  assign reg2dp_clip_truncate_R60 = fangyuan14_R [339:335] ;
  assign reg2dp_clip_truncate_X60 = fangyuan14_X [339:335] ;
  assign reg2dp_clip_truncate_C60 = fangyuan14_C [339:335] ;
  logic [4:0] reg2dp_clip_truncate_R61 ;
  logic [4:0] reg2dp_clip_truncate_X61 ;
  logic [4:0] reg2dp_clip_truncate_C61 ;
  assign reg2dp_clip_truncate_R61 = fangyuan14_R [334:330] ;
  assign reg2dp_clip_truncate_X61 = fangyuan14_X [334:330] ;
  assign reg2dp_clip_truncate_C61 = fangyuan14_C [334:330] ;
  logic [4:0] reg2dp_clip_truncate_R62 ;
  logic [4:0] reg2dp_clip_truncate_X62 ;
  logic [4:0] reg2dp_clip_truncate_C62 ;
  assign reg2dp_clip_truncate_R62 = fangyuan14_R [329:325] ;
  assign reg2dp_clip_truncate_X62 = fangyuan14_X [329:325] ;
  assign reg2dp_clip_truncate_C62 = fangyuan14_C [329:325] ;
  logic [4:0] reg2dp_clip_truncate_R63 ;
  logic [4:0] reg2dp_clip_truncate_X63 ;
  logic [4:0] reg2dp_clip_truncate_C63 ;
  assign reg2dp_clip_truncate_R63 = fangyuan14_R [324:320] ;
  assign reg2dp_clip_truncate_X63 = fangyuan14_X [324:320] ;
  assign reg2dp_clip_truncate_C63 = fangyuan14_C [324:320] ;
  logic [4:0] reg2dp_clip_truncate_R64 ;
  logic [4:0] reg2dp_clip_truncate_X64 ;
  logic [4:0] reg2dp_clip_truncate_C64 ;
  assign reg2dp_clip_truncate_R64 = fangyuan14_R [319:315] ;
  assign reg2dp_clip_truncate_X64 = fangyuan14_X [319:315] ;
  assign reg2dp_clip_truncate_C64 = fangyuan14_C [319:315] ;
  logic [4:0] reg2dp_clip_truncate_R65 ;
  logic [4:0] reg2dp_clip_truncate_X65 ;
  logic [4:0] reg2dp_clip_truncate_C65 ;
  assign reg2dp_clip_truncate_R65 = fangyuan14_R [314:310] ;
  assign reg2dp_clip_truncate_X65 = fangyuan14_X [314:310] ;
  assign reg2dp_clip_truncate_C65 = fangyuan14_C [314:310] ;
  logic [4:0] reg2dp_clip_truncate_R66 ;
  logic [4:0] reg2dp_clip_truncate_X66 ;
  logic [4:0] reg2dp_clip_truncate_C66 ;
  assign reg2dp_clip_truncate_R66 = fangyuan14_R [309:305] ;
  assign reg2dp_clip_truncate_X66 = fangyuan14_X [309:305] ;
  assign reg2dp_clip_truncate_C66 = fangyuan14_C [309:305] ;
  logic [4:0] reg2dp_clip_truncate_R67 ;
  logic [4:0] reg2dp_clip_truncate_X67 ;
  logic [4:0] reg2dp_clip_truncate_C67 ;
  assign reg2dp_clip_truncate_R67 = fangyuan14_R [304:300] ;
  assign reg2dp_clip_truncate_X67 = fangyuan14_X [304:300] ;
  assign reg2dp_clip_truncate_C67 = fangyuan14_C [304:300] ;
  logic [4:0] reg2dp_clip_truncate_R68 ;
  logic [4:0] reg2dp_clip_truncate_X68 ;
  logic [4:0] reg2dp_clip_truncate_C68 ;
  assign reg2dp_clip_truncate_R68 = fangyuan14_R [299:295] ;
  assign reg2dp_clip_truncate_X68 = fangyuan14_X [299:295] ;
  assign reg2dp_clip_truncate_C68 = fangyuan14_C [299:295] ;
  logic [4:0] reg2dp_clip_truncate_R69 ;
  logic [4:0] reg2dp_clip_truncate_X69 ;
  logic [4:0] reg2dp_clip_truncate_C69 ;
  assign reg2dp_clip_truncate_R69 = fangyuan14_R [294:290] ;
  assign reg2dp_clip_truncate_X69 = fangyuan14_X [294:290] ;
  assign reg2dp_clip_truncate_C69 = fangyuan14_C [294:290] ;
  logic [4:0] reg2dp_clip_truncate_R70 ;
  logic [4:0] reg2dp_clip_truncate_X70 ;
  logic [4:0] reg2dp_clip_truncate_C70 ;
  assign reg2dp_clip_truncate_R70 = fangyuan14_R [289:285] ;
  assign reg2dp_clip_truncate_X70 = fangyuan14_X [289:285] ;
  assign reg2dp_clip_truncate_C70 = fangyuan14_C [289:285] ;
  logic [4:0] reg2dp_clip_truncate_R71 ;
  logic [4:0] reg2dp_clip_truncate_X71 ;
  logic [4:0] reg2dp_clip_truncate_C71 ;
  assign reg2dp_clip_truncate_R71 = fangyuan14_R [284:280] ;
  assign reg2dp_clip_truncate_X71 = fangyuan14_X [284:280] ;
  assign reg2dp_clip_truncate_C71 = fangyuan14_C [284:280] ;
  logic [4:0] reg2dp_clip_truncate_R72 ;
  logic [4:0] reg2dp_clip_truncate_X72 ;
  logic [4:0] reg2dp_clip_truncate_C72 ;
  assign reg2dp_clip_truncate_R72 = fangyuan14_R [279:275] ;
  assign reg2dp_clip_truncate_X72 = fangyuan14_X [279:275] ;
  assign reg2dp_clip_truncate_C72 = fangyuan14_C [279:275] ;
  logic [4:0] reg2dp_clip_truncate_R73 ;
  logic [4:0] reg2dp_clip_truncate_X73 ;
  logic [4:0] reg2dp_clip_truncate_C73 ;
  assign reg2dp_clip_truncate_R73 = fangyuan14_R [274:270] ;
  assign reg2dp_clip_truncate_X73 = fangyuan14_X [274:270] ;
  assign reg2dp_clip_truncate_C73 = fangyuan14_C [274:270] ;
  logic [4:0] reg2dp_clip_truncate_R74 ;
  logic [4:0] reg2dp_clip_truncate_X74 ;
  logic [4:0] reg2dp_clip_truncate_C74 ;
  assign reg2dp_clip_truncate_R74 = fangyuan14_R [269:265] ;
  assign reg2dp_clip_truncate_X74 = fangyuan14_X [269:265] ;
  assign reg2dp_clip_truncate_C74 = fangyuan14_C [269:265] ;
  logic [4:0] reg2dp_clip_truncate_R75 ;
  logic [4:0] reg2dp_clip_truncate_X75 ;
  logic [4:0] reg2dp_clip_truncate_C75 ;
  assign reg2dp_clip_truncate_R75 = fangyuan14_R [264:260] ;
  assign reg2dp_clip_truncate_X75 = fangyuan14_X [264:260] ;
  assign reg2dp_clip_truncate_C75 = fangyuan14_C [264:260] ;
  logic [4:0] reg2dp_clip_truncate_R76 ;
  logic [4:0] reg2dp_clip_truncate_X76 ;
  logic [4:0] reg2dp_clip_truncate_C76 ;
  assign reg2dp_clip_truncate_R76 = fangyuan14_R [259:255] ;
  assign reg2dp_clip_truncate_X76 = fangyuan14_X [259:255] ;
  assign reg2dp_clip_truncate_C76 = fangyuan14_C [259:255] ;
  logic [4:0] reg2dp_clip_truncate_R77 ;
  logic [4:0] reg2dp_clip_truncate_X77 ;
  logic [4:0] reg2dp_clip_truncate_C77 ;
  assign reg2dp_clip_truncate_R77 = fangyuan14_R [254:250] ;
  assign reg2dp_clip_truncate_X77 = fangyuan14_X [254:250] ;
  assign reg2dp_clip_truncate_C77 = fangyuan14_C [254:250] ;
  logic [4:0] reg2dp_clip_truncate_R78 ;
  logic [4:0] reg2dp_clip_truncate_X78 ;
  logic [4:0] reg2dp_clip_truncate_C78 ;
  assign reg2dp_clip_truncate_R78 = fangyuan14_R [249:245] ;
  assign reg2dp_clip_truncate_X78 = fangyuan14_X [249:245] ;
  assign reg2dp_clip_truncate_C78 = fangyuan14_C [249:245] ;
  logic [4:0] reg2dp_clip_truncate_R79 ;
  logic [4:0] reg2dp_clip_truncate_X79 ;
  logic [4:0] reg2dp_clip_truncate_C79 ;
  assign reg2dp_clip_truncate_R79 = fangyuan14_R [244:240] ;
  assign reg2dp_clip_truncate_X79 = fangyuan14_X [244:240] ;
  assign reg2dp_clip_truncate_C79 = fangyuan14_C [244:240] ;
  logic [4:0] reg2dp_clip_truncate_R80 ;
  logic [4:0] reg2dp_clip_truncate_X80 ;
  logic [4:0] reg2dp_clip_truncate_C80 ;
  assign reg2dp_clip_truncate_R80 = fangyuan14_R [239:235] ;
  assign reg2dp_clip_truncate_X80 = fangyuan14_X [239:235] ;
  assign reg2dp_clip_truncate_C80 = fangyuan14_C [239:235] ;
  logic [4:0] reg2dp_clip_truncate_R81 ;
  logic [4:0] reg2dp_clip_truncate_X81 ;
  logic [4:0] reg2dp_clip_truncate_C81 ;
  assign reg2dp_clip_truncate_R81 = fangyuan14_R [234:230] ;
  assign reg2dp_clip_truncate_X81 = fangyuan14_X [234:230] ;
  assign reg2dp_clip_truncate_C81 = fangyuan14_C [234:230] ;
  logic [4:0] reg2dp_clip_truncate_R82 ;
  logic [4:0] reg2dp_clip_truncate_X82 ;
  logic [4:0] reg2dp_clip_truncate_C82 ;
  assign reg2dp_clip_truncate_R82 = fangyuan14_R [229:225] ;
  assign reg2dp_clip_truncate_X82 = fangyuan14_X [229:225] ;
  assign reg2dp_clip_truncate_C82 = fangyuan14_C [229:225] ;
  logic [4:0] reg2dp_clip_truncate_R83 ;
  logic [4:0] reg2dp_clip_truncate_X83 ;
  logic [4:0] reg2dp_clip_truncate_C83 ;
  assign reg2dp_clip_truncate_R83 = fangyuan14_R [224:220] ;
  assign reg2dp_clip_truncate_X83 = fangyuan14_X [224:220] ;
  assign reg2dp_clip_truncate_C83 = fangyuan14_C [224:220] ;
  logic [4:0] reg2dp_clip_truncate_R84 ;
  logic [4:0] reg2dp_clip_truncate_X84 ;
  logic [4:0] reg2dp_clip_truncate_C84 ;
  assign reg2dp_clip_truncate_R84 = fangyuan14_R [219:215] ;
  assign reg2dp_clip_truncate_X84 = fangyuan14_X [219:215] ;
  assign reg2dp_clip_truncate_C84 = fangyuan14_C [219:215] ;
  logic [4:0] reg2dp_clip_truncate_R85 ;
  logic [4:0] reg2dp_clip_truncate_X85 ;
  logic [4:0] reg2dp_clip_truncate_C85 ;
  assign reg2dp_clip_truncate_R85 = fangyuan14_R [214:210] ;
  assign reg2dp_clip_truncate_X85 = fangyuan14_X [214:210] ;
  assign reg2dp_clip_truncate_C85 = fangyuan14_C [214:210] ;
  logic [4:0] reg2dp_clip_truncate_R86 ;
  logic [4:0] reg2dp_clip_truncate_X86 ;
  logic [4:0] reg2dp_clip_truncate_C86 ;
  assign reg2dp_clip_truncate_R86 = fangyuan14_R [209:205] ;
  assign reg2dp_clip_truncate_X86 = fangyuan14_X [209:205] ;
  assign reg2dp_clip_truncate_C86 = fangyuan14_C [209:205] ;
  logic [4:0] reg2dp_clip_truncate_R87 ;
  logic [4:0] reg2dp_clip_truncate_X87 ;
  logic [4:0] reg2dp_clip_truncate_C87 ;
  assign reg2dp_clip_truncate_R87 = fangyuan14_R [204:200] ;
  assign reg2dp_clip_truncate_X87 = fangyuan14_X [204:200] ;
  assign reg2dp_clip_truncate_C87 = fangyuan14_C [204:200] ;
  logic [4:0] reg2dp_clip_truncate_R88 ;
  logic [4:0] reg2dp_clip_truncate_X88 ;
  logic [4:0] reg2dp_clip_truncate_C88 ;
  assign reg2dp_clip_truncate_R88 = fangyuan14_R [199:195] ;
  assign reg2dp_clip_truncate_X88 = fangyuan14_X [199:195] ;
  assign reg2dp_clip_truncate_C88 = fangyuan14_C [199:195] ;
  logic [4:0] reg2dp_clip_truncate_R89 ;
  logic [4:0] reg2dp_clip_truncate_X89 ;
  logic [4:0] reg2dp_clip_truncate_C89 ;
  assign reg2dp_clip_truncate_R89 = fangyuan14_R [194:190] ;
  assign reg2dp_clip_truncate_X89 = fangyuan14_X [194:190] ;
  assign reg2dp_clip_truncate_C89 = fangyuan14_C [194:190] ;
  logic [4:0] reg2dp_clip_truncate_R90 ;
  logic [4:0] reg2dp_clip_truncate_X90 ;
  logic [4:0] reg2dp_clip_truncate_C90 ;
  assign reg2dp_clip_truncate_R90 = fangyuan14_R [189:185] ;
  assign reg2dp_clip_truncate_X90 = fangyuan14_X [189:185] ;
  assign reg2dp_clip_truncate_C90 = fangyuan14_C [189:185] ;
  logic [4:0] reg2dp_clip_truncate_R91 ;
  logic [4:0] reg2dp_clip_truncate_X91 ;
  logic [4:0] reg2dp_clip_truncate_C91 ;
  assign reg2dp_clip_truncate_R91 = fangyuan14_R [184:180] ;
  assign reg2dp_clip_truncate_X91 = fangyuan14_X [184:180] ;
  assign reg2dp_clip_truncate_C91 = fangyuan14_C [184:180] ;
  logic [4:0] reg2dp_clip_truncate_R92 ;
  logic [4:0] reg2dp_clip_truncate_X92 ;
  logic [4:0] reg2dp_clip_truncate_C92 ;
  assign reg2dp_clip_truncate_R92 = fangyuan14_R [179:175] ;
  assign reg2dp_clip_truncate_X92 = fangyuan14_X [179:175] ;
  assign reg2dp_clip_truncate_C92 = fangyuan14_C [179:175] ;
  logic [4:0] reg2dp_clip_truncate_R93 ;
  logic [4:0] reg2dp_clip_truncate_X93 ;
  logic [4:0] reg2dp_clip_truncate_C93 ;
  assign reg2dp_clip_truncate_R93 = fangyuan14_R [174:170] ;
  assign reg2dp_clip_truncate_X93 = fangyuan14_X [174:170] ;
  assign reg2dp_clip_truncate_C93 = fangyuan14_C [174:170] ;
  logic [4:0] reg2dp_clip_truncate_R94 ;
  logic [4:0] reg2dp_clip_truncate_X94 ;
  logic [4:0] reg2dp_clip_truncate_C94 ;
  assign reg2dp_clip_truncate_R94 = fangyuan14_R [169:165] ;
  assign reg2dp_clip_truncate_X94 = fangyuan14_X [169:165] ;
  assign reg2dp_clip_truncate_C94 = fangyuan14_C [169:165] ;
  logic [4:0] reg2dp_clip_truncate_R95 ;
  logic [4:0] reg2dp_clip_truncate_X95 ;
  logic [4:0] reg2dp_clip_truncate_C95 ;
  assign reg2dp_clip_truncate_R95 = fangyuan14_R [164:160] ;
  assign reg2dp_clip_truncate_X95 = fangyuan14_X [164:160] ;
  assign reg2dp_clip_truncate_C95 = fangyuan14_C [164:160] ;
  logic [4:0] reg2dp_clip_truncate_R96 ;
  logic [4:0] reg2dp_clip_truncate_X96 ;
  logic [4:0] reg2dp_clip_truncate_C96 ;
  assign reg2dp_clip_truncate_R96 = fangyuan14_R [159:155] ;
  assign reg2dp_clip_truncate_X96 = fangyuan14_X [159:155] ;
  assign reg2dp_clip_truncate_C96 = fangyuan14_C [159:155] ;
  logic [4:0] reg2dp_clip_truncate_R97 ;
  logic [4:0] reg2dp_clip_truncate_X97 ;
  logic [4:0] reg2dp_clip_truncate_C97 ;
  assign reg2dp_clip_truncate_R97 = fangyuan14_R [154:150] ;
  assign reg2dp_clip_truncate_X97 = fangyuan14_X [154:150] ;
  assign reg2dp_clip_truncate_C97 = fangyuan14_C [154:150] ;
  logic [4:0] reg2dp_clip_truncate_R98 ;
  logic [4:0] reg2dp_clip_truncate_X98 ;
  logic [4:0] reg2dp_clip_truncate_C98 ;
  assign reg2dp_clip_truncate_R98 = fangyuan14_R [149:145] ;
  assign reg2dp_clip_truncate_X98 = fangyuan14_X [149:145] ;
  assign reg2dp_clip_truncate_C98 = fangyuan14_C [149:145] ;
  logic [4:0] reg2dp_clip_truncate_R99 ;
  logic [4:0] reg2dp_clip_truncate_X99 ;
  logic [4:0] reg2dp_clip_truncate_C99 ;
  assign reg2dp_clip_truncate_R99 = fangyuan14_R [144:140] ;
  assign reg2dp_clip_truncate_X99 = fangyuan14_X [144:140] ;
  assign reg2dp_clip_truncate_C99 = fangyuan14_C [144:140] ;
  logic [4:0] reg2dp_clip_truncate_R100 ;
  logic [4:0] reg2dp_clip_truncate_X100 ;
  logic [4:0] reg2dp_clip_truncate_C100 ;
  assign reg2dp_clip_truncate_R100 = fangyuan14_R [139:135] ;
  assign reg2dp_clip_truncate_X100 = fangyuan14_X [139:135] ;
  assign reg2dp_clip_truncate_C100 = fangyuan14_C [139:135] ;
  logic [4:0] reg2dp_clip_truncate_R101 ;
  logic [4:0] reg2dp_clip_truncate_X101 ;
  logic [4:0] reg2dp_clip_truncate_C101 ;
  assign reg2dp_clip_truncate_R101 = fangyuan14_R [134:130] ;
  assign reg2dp_clip_truncate_X101 = fangyuan14_X [134:130] ;
  assign reg2dp_clip_truncate_C101 = fangyuan14_C [134:130] ;
  logic [4:0] reg2dp_clip_truncate_R102 ;
  logic [4:0] reg2dp_clip_truncate_X102 ;
  logic [4:0] reg2dp_clip_truncate_C102 ;
  assign reg2dp_clip_truncate_R102 = fangyuan14_R [129:125] ;
  assign reg2dp_clip_truncate_X102 = fangyuan14_X [129:125] ;
  assign reg2dp_clip_truncate_C102 = fangyuan14_C [129:125] ;
  logic [4:0] reg2dp_clip_truncate_R103 ;
  logic [4:0] reg2dp_clip_truncate_X103 ;
  logic [4:0] reg2dp_clip_truncate_C103 ;
  assign reg2dp_clip_truncate_R103 = fangyuan14_R [124:120] ;
  assign reg2dp_clip_truncate_X103 = fangyuan14_X [124:120] ;
  assign reg2dp_clip_truncate_C103 = fangyuan14_C [124:120] ;
  logic [4:0] reg2dp_clip_truncate_R104 ;
  logic [4:0] reg2dp_clip_truncate_X104 ;
  logic [4:0] reg2dp_clip_truncate_C104 ;
  assign reg2dp_clip_truncate_R104 = fangyuan14_R [119:115] ;
  assign reg2dp_clip_truncate_X104 = fangyuan14_X [119:115] ;
  assign reg2dp_clip_truncate_C104 = fangyuan14_C [119:115] ;
  logic [4:0] reg2dp_clip_truncate_R105 ;
  logic [4:0] reg2dp_clip_truncate_X105 ;
  logic [4:0] reg2dp_clip_truncate_C105 ;
  assign reg2dp_clip_truncate_R105 = fangyuan14_R [114:110] ;
  assign reg2dp_clip_truncate_X105 = fangyuan14_X [114:110] ;
  assign reg2dp_clip_truncate_C105 = fangyuan14_C [114:110] ;
  logic [4:0] reg2dp_clip_truncate_R106 ;
  logic [4:0] reg2dp_clip_truncate_X106 ;
  logic [4:0] reg2dp_clip_truncate_C106 ;
  assign reg2dp_clip_truncate_R106 = fangyuan14_R [109:105] ;
  assign reg2dp_clip_truncate_X106 = fangyuan14_X [109:105] ;
  assign reg2dp_clip_truncate_C106 = fangyuan14_C [109:105] ;
  logic [4:0] reg2dp_clip_truncate_R107 ;
  logic [4:0] reg2dp_clip_truncate_X107 ;
  logic [4:0] reg2dp_clip_truncate_C107 ;
  assign reg2dp_clip_truncate_R107 = fangyuan14_R [104:100] ;
  assign reg2dp_clip_truncate_X107 = fangyuan14_X [104:100] ;
  assign reg2dp_clip_truncate_C107 = fangyuan14_C [104:100] ;
  logic [4:0] reg2dp_clip_truncate_R108 ;
  logic [4:0] reg2dp_clip_truncate_X108 ;
  logic [4:0] reg2dp_clip_truncate_C108 ;
  assign reg2dp_clip_truncate_R108 = fangyuan14_R [99:95] ;
  assign reg2dp_clip_truncate_X108 = fangyuan14_X [99:95] ;
  assign reg2dp_clip_truncate_C108 = fangyuan14_C [99:95] ;
  logic [4:0] reg2dp_clip_truncate_R109 ;
  logic [4:0] reg2dp_clip_truncate_X109 ;
  logic [4:0] reg2dp_clip_truncate_C109 ;
  assign reg2dp_clip_truncate_R109 = fangyuan14_R [94:90] ;
  assign reg2dp_clip_truncate_X109 = fangyuan14_X [94:90] ;
  assign reg2dp_clip_truncate_C109 = fangyuan14_C [94:90] ;
  logic [4:0] reg2dp_clip_truncate_R110 ;
  logic [4:0] reg2dp_clip_truncate_X110 ;
  logic [4:0] reg2dp_clip_truncate_C110 ;
  assign reg2dp_clip_truncate_R110 = fangyuan14_R [89:85] ;
  assign reg2dp_clip_truncate_X110 = fangyuan14_X [89:85] ;
  assign reg2dp_clip_truncate_C110 = fangyuan14_C [89:85] ;
  logic [4:0] reg2dp_clip_truncate_R111 ;
  logic [4:0] reg2dp_clip_truncate_X111 ;
  logic [4:0] reg2dp_clip_truncate_C111 ;
  assign reg2dp_clip_truncate_R111 = fangyuan14_R [84:80] ;
  assign reg2dp_clip_truncate_X111 = fangyuan14_X [84:80] ;
  assign reg2dp_clip_truncate_C111 = fangyuan14_C [84:80] ;
  logic [4:0] reg2dp_clip_truncate_R112 ;
  logic [4:0] reg2dp_clip_truncate_X112 ;
  logic [4:0] reg2dp_clip_truncate_C112 ;
  assign reg2dp_clip_truncate_R112 = fangyuan14_R [79:75] ;
  assign reg2dp_clip_truncate_X112 = fangyuan14_X [79:75] ;
  assign reg2dp_clip_truncate_C112 = fangyuan14_C [79:75] ;
  logic [4:0] reg2dp_clip_truncate_R113 ;
  logic [4:0] reg2dp_clip_truncate_X113 ;
  logic [4:0] reg2dp_clip_truncate_C113 ;
  assign reg2dp_clip_truncate_R113 = fangyuan14_R [74:70] ;
  assign reg2dp_clip_truncate_X113 = fangyuan14_X [74:70] ;
  assign reg2dp_clip_truncate_C113 = fangyuan14_C [74:70] ;
  logic [4:0] reg2dp_clip_truncate_R114 ;
  logic [4:0] reg2dp_clip_truncate_X114 ;
  logic [4:0] reg2dp_clip_truncate_C114 ;
  assign reg2dp_clip_truncate_R114 = fangyuan14_R [69:65] ;
  assign reg2dp_clip_truncate_X114 = fangyuan14_X [69:65] ;
  assign reg2dp_clip_truncate_C114 = fangyuan14_C [69:65] ;
  logic [4:0] reg2dp_clip_truncate_R115 ;
  logic [4:0] reg2dp_clip_truncate_X115 ;
  logic [4:0] reg2dp_clip_truncate_C115 ;
  assign reg2dp_clip_truncate_R115 = fangyuan14_R [64:60] ;
  assign reg2dp_clip_truncate_X115 = fangyuan14_X [64:60] ;
  assign reg2dp_clip_truncate_C115 = fangyuan14_C [64:60] ;
  logic [4:0] reg2dp_clip_truncate_R116 ;
  logic [4:0] reg2dp_clip_truncate_X116 ;
  logic [4:0] reg2dp_clip_truncate_C116 ;
  assign reg2dp_clip_truncate_R116 = fangyuan14_R [59:55] ;
  assign reg2dp_clip_truncate_X116 = fangyuan14_X [59:55] ;
  assign reg2dp_clip_truncate_C116 = fangyuan14_C [59:55] ;
  logic [4:0] reg2dp_clip_truncate_R117 ;
  logic [4:0] reg2dp_clip_truncate_X117 ;
  logic [4:0] reg2dp_clip_truncate_C117 ;
  assign reg2dp_clip_truncate_R117 = fangyuan14_R [54:50] ;
  assign reg2dp_clip_truncate_X117 = fangyuan14_X [54:50] ;
  assign reg2dp_clip_truncate_C117 = fangyuan14_C [54:50] ;
  logic [4:0] reg2dp_clip_truncate_R118 ;
  logic [4:0] reg2dp_clip_truncate_X118 ;
  logic [4:0] reg2dp_clip_truncate_C118 ;
  assign reg2dp_clip_truncate_R118 = fangyuan14_R [49:45] ;
  assign reg2dp_clip_truncate_X118 = fangyuan14_X [49:45] ;
  assign reg2dp_clip_truncate_C118 = fangyuan14_C [49:45] ;
  logic [4:0] reg2dp_clip_truncate_R119 ;
  logic [4:0] reg2dp_clip_truncate_X119 ;
  logic [4:0] reg2dp_clip_truncate_C119 ;
  assign reg2dp_clip_truncate_R119 = fangyuan14_R [44:40] ;
  assign reg2dp_clip_truncate_X119 = fangyuan14_X [44:40] ;
  assign reg2dp_clip_truncate_C119 = fangyuan14_C [44:40] ;
  logic [4:0] reg2dp_clip_truncate_R120 ;
  logic [4:0] reg2dp_clip_truncate_X120 ;
  logic [4:0] reg2dp_clip_truncate_C120 ;
  assign reg2dp_clip_truncate_R120 = fangyuan14_R [39:35] ;
  assign reg2dp_clip_truncate_X120 = fangyuan14_X [39:35] ;
  assign reg2dp_clip_truncate_C120 = fangyuan14_C [39:35] ;
  logic [4:0] reg2dp_clip_truncate_R121 ;
  logic [4:0] reg2dp_clip_truncate_X121 ;
  logic [4:0] reg2dp_clip_truncate_C121 ;
  assign reg2dp_clip_truncate_R121 = fangyuan14_R [34:30] ;
  assign reg2dp_clip_truncate_X121 = fangyuan14_X [34:30] ;
  assign reg2dp_clip_truncate_C121 = fangyuan14_C [34:30] ;
  logic [4:0] reg2dp_clip_truncate_R122 ;
  logic [4:0] reg2dp_clip_truncate_X122 ;
  logic [4:0] reg2dp_clip_truncate_C122 ;
  assign reg2dp_clip_truncate_R122 = fangyuan14_R [29:25] ;
  assign reg2dp_clip_truncate_X122 = fangyuan14_X [29:25] ;
  assign reg2dp_clip_truncate_C122 = fangyuan14_C [29:25] ;
  logic [4:0] reg2dp_clip_truncate_R123 ;
  logic [4:0] reg2dp_clip_truncate_X123 ;
  logic [4:0] reg2dp_clip_truncate_C123 ;
  assign reg2dp_clip_truncate_R123 = fangyuan14_R [24:20] ;
  assign reg2dp_clip_truncate_X123 = fangyuan14_X [24:20] ;
  assign reg2dp_clip_truncate_C123 = fangyuan14_C [24:20] ;
  logic [4:0] reg2dp_clip_truncate_R124 ;
  logic [4:0] reg2dp_clip_truncate_X124 ;
  logic [4:0] reg2dp_clip_truncate_C124 ;
  assign reg2dp_clip_truncate_R124 = fangyuan14_R [19:15] ;
  assign reg2dp_clip_truncate_X124 = fangyuan14_X [19:15] ;
  assign reg2dp_clip_truncate_C124 = fangyuan14_C [19:15] ;
  logic [4:0] reg2dp_clip_truncate_R125 ;
  logic [4:0] reg2dp_clip_truncate_X125 ;
  logic [4:0] reg2dp_clip_truncate_C125 ;
  assign reg2dp_clip_truncate_R125 = fangyuan14_R [14:10] ;
  assign reg2dp_clip_truncate_X125 = fangyuan14_X [14:10] ;
  assign reg2dp_clip_truncate_C125 = fangyuan14_C [14:10] ;
  logic [4:0] reg2dp_clip_truncate_R126 ;
  logic [4:0] reg2dp_clip_truncate_X126 ;
  logic [4:0] reg2dp_clip_truncate_C126 ;
  assign reg2dp_clip_truncate_R126 = fangyuan14_R [9:5] ;
  assign reg2dp_clip_truncate_X126 = fangyuan14_X [9:5] ;
  assign reg2dp_clip_truncate_C126 = fangyuan14_C [9:5] ;
  logic [4:0] reg2dp_clip_truncate_R127 ;
  logic [4:0] reg2dp_clip_truncate_X127 ;
  logic [4:0] reg2dp_clip_truncate_C127 ;
  assign reg2dp_clip_truncate_R127 = fangyuan14_R [4:0] ;
  assign reg2dp_clip_truncate_X127 = fangyuan14_X [4:0] ;
  assign reg2dp_clip_truncate_C127 = fangyuan14_C [4:0] ;

  assign _061_ = layer_st ? fangyuan14 : cfg_truncate;
  logic [0:0] layer_st_C7 ;
  logic [0:0] layer_st_R7 ;
  logic [0:0] layer_st_X7 ;
  assign layer_st_C7 = | _061__C ;
  assign layer_st_X7 = | _061__X ;
  assign _061__T = layer_st ? ( { 640{ layer_st_T  }} | fangyuan14_T ) : ( { 640{ layer_st_T  }} | cfg_truncate_T );
  assign _061__S = layer_st ? fangyuan14_S : cfg_truncate_S ;
  assign layer_st_R7 = ( | (_061__R | ( _061__C & ( { 640{ layer_st }} & fangyuan14_T | { 640{ !layer_st }} & cfg_truncate_T )))) && fangyuan14 != cfg_truncate ;
  logic [639:0] fangyuan14_C0 ;
  logic [639:0] fangyuan14_R0 ;
  logic [639:0] fangyuan14_X0 ;
  assign fangyuan14_C0 = { 640{ layer_st }} ;
  assign fangyuan14_R0 = { 640{ layer_st }} & ( _061__R | ( { 640{ layer_st_T  }} & _061__C ));
  assign fangyuan14_X0 = { 640{ layer_st }} & _061__X ;
  logic [639:0] cfg_truncate_C1 ;
  logic [639:0] cfg_truncate_R1 ;
  logic [639:0] cfg_truncate_X1 ;
  assign cfg_truncate_C1 = { 640{ !layer_st }} ;
  assign cfg_truncate_R1 = { 640{ !layer_st }} & ( _061__R | ( { 640{ layer_st_T  }} & _061__C ));
  assign cfg_truncate_X1 = { 640{ !layer_st }} & _061__X ;
  assign _062_ = layer_st ? reg2dp_conv_mode : cfg_winograd;
  logic [0:0] layer_st_C8 ;
  logic [0:0] layer_st_R8 ;
  logic [0:0] layer_st_X8 ;
  assign layer_st_C8 = | _062__C ;
  assign layer_st_X8 = | _062__X ;
  assign _062__T = layer_st ? ( { 1{ layer_st_T  }} | reg2dp_conv_mode_T ) : ( { 1{ layer_st_T  }} | cfg_winograd_T );
  assign _062__S = layer_st ? reg2dp_conv_mode_S : cfg_winograd_S ;
  assign layer_st_R8 = ( | (_062__R | ( _062__C & ( { 1{ layer_st }} & reg2dp_conv_mode_T | { 1{ !layer_st }} & cfg_winograd_T )))) && reg2dp_conv_mode != cfg_winograd ;
  logic [0:0] reg2dp_conv_mode_C100 ;
  logic [0:0] reg2dp_conv_mode_R100 ;
  logic [0:0] reg2dp_conv_mode_X100 ;
  assign reg2dp_conv_mode_C100 = { 1{ layer_st }} ;
  assign reg2dp_conv_mode_R100 = { 1{ layer_st }} & ( _062__R | ( { 1{ layer_st_T  }} & _062__C ));
  assign reg2dp_conv_mode_X100 = { 1{ layer_st }} & _062__X ;
  logic [0:0] cfg_winograd_C0 ;
  logic [0:0] cfg_winograd_R0 ;
  logic [0:0] cfg_winograd_X0 ;
  assign cfg_winograd_C0 = { 1{ !layer_st }} ;
  assign cfg_winograd_R0 = { 1{ !layer_st }} & ( _062__R | ( { 1{ layer_st_T  }} & _062__C ));
  assign cfg_winograd_X0 = { 1{ !layer_st }} & _062__X ;
  assign _048_ = _068_ ? accu_ram_sel_7_w : accu_ram_sel_7_d0;
  logic [0:0] _068__C0 ;
  logic [0:0] _068__R0 ;
  logic [0:0] _068__X0 ;
  assign _068__C0 = | _048__C ;
  assign _068__X0 = | _048__X ;
  assign _048__T = _068_ ? ( { 1{ _068__T  }} | accu_ram_sel_7_w_T ) : ( { 1{ _068__T  }} | accu_ram_sel_7_d0_T );
  assign _048__S = _068_ ? accu_ram_sel_7_w_S : accu_ram_sel_7_d0_S ;
  assign _068__R0 = ( | (_048__R | ( _048__C & ( { 1{ _068_ }} & accu_ram_sel_7_w_T | { 1{ !_068_ }} & accu_ram_sel_7_d0_T )))) && accu_ram_sel_7_w != accu_ram_sel_7_d0 ;
  logic [0:0] accu_ram_sel_7_w_C0 ;
  logic [0:0] accu_ram_sel_7_w_R0 ;
  logic [0:0] accu_ram_sel_7_w_X0 ;
  assign accu_ram_sel_7_w_C0 = { 1{ _068_ }} ;
  assign accu_ram_sel_7_w_R0 = { 1{ _068_ }} & ( _048__R | ( { 1{ _068__T  }} & _048__C ));
  assign accu_ram_sel_7_w_X0 = { 1{ _068_ }} & _048__X ;
  logic [0:0] accu_ram_sel_7_d0_C1 ;
  logic [0:0] accu_ram_sel_7_d0_R1 ;
  logic [0:0] accu_ram_sel_7_d0_X1 ;
  assign accu_ram_sel_7_d0_C1 = { 1{ !_068_ }} ;
  assign accu_ram_sel_7_d0_R1 = { 1{ !_068_ }} & ( _048__R | ( { 1{ _068__T  }} & _048__C ));
  assign accu_ram_sel_7_d0_X1 = { 1{ !_068_ }} & _048__X ;
  assign _045_ = _068_ ? accu_ram_sel_6_w : accu_ram_sel_6_d0;
  logic [0:0] _068__C1 ;
  logic [0:0] _068__R1 ;
  logic [0:0] _068__X1 ;
  assign _068__C1 = | _045__C ;
  assign _068__X1 = | _045__X ;
  assign _045__T = _068_ ? ( { 1{ _068__T  }} | accu_ram_sel_6_w_T ) : ( { 1{ _068__T  }} | accu_ram_sel_6_d0_T );
  assign _045__S = _068_ ? accu_ram_sel_6_w_S : accu_ram_sel_6_d0_S ;
  assign _068__R1 = ( | (_045__R | ( _045__C & ( { 1{ _068_ }} & accu_ram_sel_6_w_T | { 1{ !_068_ }} & accu_ram_sel_6_d0_T )))) && accu_ram_sel_6_w != accu_ram_sel_6_d0 ;
  logic [0:0] accu_ram_sel_6_w_C0 ;
  logic [0:0] accu_ram_sel_6_w_R0 ;
  logic [0:0] accu_ram_sel_6_w_X0 ;
  assign accu_ram_sel_6_w_C0 = { 1{ _068_ }} ;
  assign accu_ram_sel_6_w_R0 = { 1{ _068_ }} & ( _045__R | ( { 1{ _068__T  }} & _045__C ));
  assign accu_ram_sel_6_w_X0 = { 1{ _068_ }} & _045__X ;
  logic [0:0] accu_ram_sel_6_d0_C1 ;
  logic [0:0] accu_ram_sel_6_d0_R1 ;
  logic [0:0] accu_ram_sel_6_d0_X1 ;
  assign accu_ram_sel_6_d0_C1 = { 1{ !_068_ }} ;
  assign accu_ram_sel_6_d0_R1 = { 1{ !_068_ }} & ( _045__R | ( { 1{ _068__T  }} & _045__C ));
  assign accu_ram_sel_6_d0_X1 = { 1{ !_068_ }} & _045__X ;
  assign _042_ = _068_ ? accu_ram_sel_5_w : accu_ram_sel_5_d0;
  logic [0:0] _068__C2 ;
  logic [0:0] _068__R2 ;
  logic [0:0] _068__X2 ;
  assign _068__C2 = | _042__C ;
  assign _068__X2 = | _042__X ;
  assign _042__T = _068_ ? ( { 1{ _068__T  }} | accu_ram_sel_5_w_T ) : ( { 1{ _068__T  }} | accu_ram_sel_5_d0_T );
  assign _042__S = _068_ ? accu_ram_sel_5_w_S : accu_ram_sel_5_d0_S ;
  assign _068__R2 = ( | (_042__R | ( _042__C & ( { 1{ _068_ }} & accu_ram_sel_5_w_T | { 1{ !_068_ }} & accu_ram_sel_5_d0_T )))) && accu_ram_sel_5_w != accu_ram_sel_5_d0 ;
  logic [0:0] accu_ram_sel_5_w_C0 ;
  logic [0:0] accu_ram_sel_5_w_R0 ;
  logic [0:0] accu_ram_sel_5_w_X0 ;
  assign accu_ram_sel_5_w_C0 = { 1{ _068_ }} ;
  assign accu_ram_sel_5_w_R0 = { 1{ _068_ }} & ( _042__R | ( { 1{ _068__T  }} & _042__C ));
  assign accu_ram_sel_5_w_X0 = { 1{ _068_ }} & _042__X ;
  logic [0:0] accu_ram_sel_5_d0_C1 ;
  logic [0:0] accu_ram_sel_5_d0_R1 ;
  logic [0:0] accu_ram_sel_5_d0_X1 ;
  assign accu_ram_sel_5_d0_C1 = { 1{ !_068_ }} ;
  assign accu_ram_sel_5_d0_R1 = { 1{ !_068_ }} & ( _042__R | ( { 1{ _068__T  }} & _042__C ));
  assign accu_ram_sel_5_d0_X1 = { 1{ !_068_ }} & _042__X ;
  assign _039_ = _068_ ? accu_rd_mask_w[4] : accu_ram_sel_4_d0;
  logic [0:0] _068__C3 ;
  logic [0:0] _068__R3 ;
  logic [0:0] _068__X3 ;
  assign _068__C3 = | _039__C ;
  assign _068__X3 = | _039__X ;
  assign _039__T = _068_ ? ( { 1{ _068__T  }} | accu_rd_mask_w_T [4] ) : ( { 1{ _068__T  }} | accu_ram_sel_4_d0_T );
  assign _039__S = _068_ ? accu_rd_mask_w_S : accu_ram_sel_4_d0_S ;
  assign _068__R3 = ( | (_039__R | ( _039__C & ( { 1{ _068_ }} & accu_rd_mask_w_T [4] | { 1{ !_068_ }} & accu_ram_sel_4_d0_T )))) && accu_rd_mask_w[4] != accu_ram_sel_4_d0 ;
  assign accu_rd_mask_w_C0 [4] = { 1{ _068_ }} ;
  assign accu_rd_mask_w_R0 [4] = { 1{ _068_ }} & ( _039__R | ( { 1{ _068__T  }} & _039__C ));
  assign accu_rd_mask_w_X0 [4] = { 1{ _068_ }} & _039__X ;
  logic [0:0] accu_ram_sel_4_d0_C1 ;
  logic [0:0] accu_ram_sel_4_d0_R1 ;
  logic [0:0] accu_ram_sel_4_d0_X1 ;
  assign accu_ram_sel_4_d0_C1 = { 1{ !_068_ }} ;
  assign accu_ram_sel_4_d0_R1 = { 1{ !_068_ }} & ( _039__R | ( { 1{ _068__T  }} & _039__C ));
  assign accu_ram_sel_4_d0_X1 = { 1{ !_068_ }} & _039__X ;
  assign _036_ = _068_ ? accu_ram_sel_3_w : accu_ram_sel_3_d0;
  logic [0:0] _068__C4 ;
  logic [0:0] _068__R4 ;
  logic [0:0] _068__X4 ;
  assign _068__C4 = | _036__C ;
  assign _068__X4 = | _036__X ;
  assign _036__T = _068_ ? ( { 1{ _068__T  }} | accu_ram_sel_3_w_T ) : ( { 1{ _068__T  }} | accu_ram_sel_3_d0_T );
  assign _036__S = _068_ ? accu_ram_sel_3_w_S : accu_ram_sel_3_d0_S ;
  assign _068__R4 = ( | (_036__R | ( _036__C & ( { 1{ _068_ }} & accu_ram_sel_3_w_T | { 1{ !_068_ }} & accu_ram_sel_3_d0_T )))) && accu_ram_sel_3_w != accu_ram_sel_3_d0 ;
  logic [0:0] accu_ram_sel_3_w_C0 ;
  logic [0:0] accu_ram_sel_3_w_R0 ;
  logic [0:0] accu_ram_sel_3_w_X0 ;
  assign accu_ram_sel_3_w_C0 = { 1{ _068_ }} ;
  assign accu_ram_sel_3_w_R0 = { 1{ _068_ }} & ( _036__R | ( { 1{ _068__T  }} & _036__C ));
  assign accu_ram_sel_3_w_X0 = { 1{ _068_ }} & _036__X ;
  logic [0:0] accu_ram_sel_3_d0_C1 ;
  logic [0:0] accu_ram_sel_3_d0_R1 ;
  logic [0:0] accu_ram_sel_3_d0_X1 ;
  assign accu_ram_sel_3_d0_C1 = { 1{ !_068_ }} ;
  assign accu_ram_sel_3_d0_R1 = { 1{ !_068_ }} & ( _036__R | ( { 1{ _068__T  }} & _036__C ));
  assign accu_ram_sel_3_d0_X1 = { 1{ !_068_ }} & _036__X ;
  assign _033_ = _068_ ? accu_ram_sel_2_w : accu_ram_sel_2_d0;
  logic [0:0] _068__C5 ;
  logic [0:0] _068__R5 ;
  logic [0:0] _068__X5 ;
  assign _068__C5 = | _033__C ;
  assign _068__X5 = | _033__X ;
  assign _033__T = _068_ ? ( { 1{ _068__T  }} | accu_ram_sel_2_w_T ) : ( { 1{ _068__T  }} | accu_ram_sel_2_d0_T );
  assign _033__S = _068_ ? accu_ram_sel_2_w_S : accu_ram_sel_2_d0_S ;
  assign _068__R5 = ( | (_033__R | ( _033__C & ( { 1{ _068_ }} & accu_ram_sel_2_w_T | { 1{ !_068_ }} & accu_ram_sel_2_d0_T )))) && accu_ram_sel_2_w != accu_ram_sel_2_d0 ;
  logic [0:0] accu_ram_sel_2_w_C0 ;
  logic [0:0] accu_ram_sel_2_w_R0 ;
  logic [0:0] accu_ram_sel_2_w_X0 ;
  assign accu_ram_sel_2_w_C0 = { 1{ _068_ }} ;
  assign accu_ram_sel_2_w_R0 = { 1{ _068_ }} & ( _033__R | ( { 1{ _068__T  }} & _033__C ));
  assign accu_ram_sel_2_w_X0 = { 1{ _068_ }} & _033__X ;
  logic [0:0] accu_ram_sel_2_d0_C1 ;
  logic [0:0] accu_ram_sel_2_d0_R1 ;
  logic [0:0] accu_ram_sel_2_d0_X1 ;
  assign accu_ram_sel_2_d0_C1 = { 1{ !_068_ }} ;
  assign accu_ram_sel_2_d0_R1 = { 1{ !_068_ }} & ( _033__R | ( { 1{ _068__T  }} & _033__C ));
  assign accu_ram_sel_2_d0_X1 = { 1{ !_068_ }} & _033__X ;
  assign _030_ = _068_ ? accu_ram_sel_1_w : accu_ram_sel_1_d0;
  logic [0:0] _068__C6 ;
  logic [0:0] _068__R6 ;
  logic [0:0] _068__X6 ;
  assign _068__C6 = | _030__C ;
  assign _068__X6 = | _030__X ;
  assign _030__T = _068_ ? ( { 1{ _068__T  }} | accu_ram_sel_1_w_T ) : ( { 1{ _068__T  }} | accu_ram_sel_1_d0_T );
  assign _030__S = _068_ ? accu_ram_sel_1_w_S : accu_ram_sel_1_d0_S ;
  assign _068__R6 = ( | (_030__R | ( _030__C & ( { 1{ _068_ }} & accu_ram_sel_1_w_T | { 1{ !_068_ }} & accu_ram_sel_1_d0_T )))) && accu_ram_sel_1_w != accu_ram_sel_1_d0 ;
  logic [0:0] accu_ram_sel_1_w_C0 ;
  logic [0:0] accu_ram_sel_1_w_R0 ;
  logic [0:0] accu_ram_sel_1_w_X0 ;
  assign accu_ram_sel_1_w_C0 = { 1{ _068_ }} ;
  assign accu_ram_sel_1_w_R0 = { 1{ _068_ }} & ( _030__R | ( { 1{ _068__T  }} & _030__C ));
  assign accu_ram_sel_1_w_X0 = { 1{ _068_ }} & _030__X ;
  logic [0:0] accu_ram_sel_1_d0_C1 ;
  logic [0:0] accu_ram_sel_1_d0_R1 ;
  logic [0:0] accu_ram_sel_1_d0_X1 ;
  assign accu_ram_sel_1_d0_C1 = { 1{ !_068_ }} ;
  assign accu_ram_sel_1_d0_R1 = { 1{ !_068_ }} & ( _030__R | ( { 1{ _068__T  }} & _030__C ));
  assign accu_ram_sel_1_d0_X1 = { 1{ !_068_ }} & _030__X ;
  assign _027_ = _068_ ? accu_rd_mask_w[0] : accu_ram_sel_0_d0;
  logic [0:0] _068__C7 ;
  logic [0:0] _068__R7 ;
  logic [0:0] _068__X7 ;
  assign _068__C7 = | _027__C ;
  assign _068__X7 = | _027__X ;
  assign _027__T = _068_ ? ( { 1{ _068__T  }} | accu_rd_mask_w_T [0] ) : ( { 1{ _068__T  }} | accu_ram_sel_0_d0_T );
  assign _027__S = _068_ ? accu_rd_mask_w_S : accu_ram_sel_0_d0_S ;
  assign _068__R7 = ( | (_027__R | ( _027__C & ( { 1{ _068_ }} & accu_rd_mask_w_T [0] | { 1{ !_068_ }} & accu_ram_sel_0_d0_T )))) && accu_rd_mask_w[0] != accu_ram_sel_0_d0 ;
  assign accu_rd_mask_w_C0 [0] = { 1{ _068_ }} ;
  assign accu_rd_mask_w_R0 [0] = { 1{ _068_ }} & ( _027__R | ( { 1{ _068__T  }} & _027__C ));
  assign accu_rd_mask_w_X0 [0] = { 1{ _068_ }} & _027__X ;
  logic [0:0] accu_ram_sel_0_d0_C1 ;
  logic [0:0] accu_ram_sel_0_d0_R1 ;
  logic [0:0] accu_ram_sel_0_d0_X1 ;
  assign accu_ram_sel_0_d0_C1 = { 1{ !_068_ }} ;
  assign accu_ram_sel_0_d0_R1 = { 1{ !_068_ }} & ( _027__R | ( { 1{ _068__T  }} & _027__C ));
  assign accu_ram_sel_0_d0_X1 = { 1{ !_068_ }} & _027__X ;
  logic [3:0] fangyuan15;
  logic [3:0] fangyuan15_T ;
  logic [3:0] fangyuan15_R ;
  logic [3:0] fangyuan15_C ;
  logic [3:0] fangyuan15_X ;
  assign fangyuan15 = { is_x8, is_x4, is_x2, is_x1 };
  assign fangyuan15_T = {  is_x8_T , is_x4_T , is_x2_T , is_x1_T  };
  logic [13:0] fangyuan15_S ;
  assign fangyuan15_S = 0 ;
  logic [0:0] is_x8_R0 ;
  logic [0:0] is_x8_X0 ;
  logic [0:0] is_x8_C0 ;
  assign is_x8_R0 = fangyuan15_R [3:3] ;
  assign is_x8_X0 = fangyuan15_X [3:3] ;
  assign is_x8_C0 = fangyuan15_C [3:3] ;
  logic [0:0] is_x4_R0 ;
  logic [0:0] is_x4_X0 ;
  logic [0:0] is_x4_C0 ;
  assign is_x4_R0 = fangyuan15_R [2:2] ;
  assign is_x4_X0 = fangyuan15_X [2:2] ;
  assign is_x4_C0 = fangyuan15_C [2:2] ;
  logic [0:0] is_x2_R4 ;
  logic [0:0] is_x2_X4 ;
  logic [0:0] is_x2_C4 ;
  assign is_x2_R4 = fangyuan15_R [1:1] ;
  assign is_x2_X4 = fangyuan15_X [1:1] ;
  assign is_x2_C4 = fangyuan15_C [1:1] ;
  logic [0:0] is_x1_R1 ;
  logic [0:0] is_x1_X1 ;
  logic [0:0] is_x1_C1 ;
  assign is_x1_R1 = fangyuan15_R [0:0] ;
  assign is_x1_X1 = fangyuan15_X [0:0] ;
  assign is_x1_C1 = fangyuan15_C [0:0] ;

  assign _023_ = layer_st ? fangyuan15 : accu_mode_d0;
  logic [0:0] layer_st_C9 ;
  logic [0:0] layer_st_R9 ;
  logic [0:0] layer_st_X9 ;
  assign layer_st_C9 = | _023__C ;
  assign layer_st_X9 = | _023__X ;
  assign _023__T = layer_st ? ( { 4{ layer_st_T  }} | fangyuan15_T ) : ( { 4{ layer_st_T  }} | accu_mode_d0_T );
  assign _023__S = layer_st ? fangyuan15_S : accu_mode_d0_S ;
  assign layer_st_R9 = ( | (_023__R | ( _023__C & ( { 4{ layer_st }} & fangyuan15_T | { 4{ !layer_st }} & accu_mode_d0_T )))) && fangyuan15 != accu_mode_d0 ;
  logic [3:0] fangyuan15_C0 ;
  logic [3:0] fangyuan15_R0 ;
  logic [3:0] fangyuan15_X0 ;
  assign fangyuan15_C0 = { 4{ layer_st }} ;
  assign fangyuan15_R0 = { 4{ layer_st }} & ( _023__R | ( { 4{ layer_st_T  }} & _023__C ));
  assign fangyuan15_X0 = { 4{ layer_st }} & _023__X ;
  logic [3:0] accu_mode_d0_C1 ;
  logic [3:0] accu_mode_d0_R1 ;
  logic [3:0] accu_mode_d0_X1 ;
  assign accu_mode_d0_C1 = { 4{ !layer_st }} ;
  assign accu_mode_d0_R1 = { 4{ !layer_st }} & ( _023__R | ( { 4{ layer_st_T  }} & _023__C ));
  assign accu_mode_d0_X1 = { 4{ !layer_st }} & _023__X ;
  assign _051_ = _068_ ? accu_rd_mask_w : accu_rd_mask;
  logic [0:0] _068__C8 ;
  logic [0:0] _068__R8 ;
  logic [0:0] _068__X8 ;
  assign _068__C8 = | _051__C ;
  assign _068__X8 = | _051__X ;
  assign _051__T = _068_ ? ( { 8{ _068__T  }} | accu_rd_mask_w_T ) : ( { 8{ _068__T  }} | accu_rd_mask_T );
  assign _051__S = _068_ ? accu_rd_mask_w_S : accu_rd_mask_S ;
  assign _068__R8 = ( | (_051__R | ( _051__C & ( { 8{ _068_ }} & accu_rd_mask_w_T | { 8{ !_068_ }} & accu_rd_mask_T )))) && accu_rd_mask_w != accu_rd_mask ;
  logic [7:0] accu_rd_mask_w_C1 ;
  logic [7:0] accu_rd_mask_w_R1 ;
  logic [7:0] accu_rd_mask_w_X1 ;
  assign accu_rd_mask_w_C1 = { 8{ _068_ }} ;
  assign accu_rd_mask_w_R1 = { 8{ _068_ }} & ( _051__R | ( { 8{ _068__T  }} & _051__C ));
  assign accu_rd_mask_w_X1 = { 8{ _068_ }} & _051__X ;
  logic [7:0] accu_rd_mask_C2 ;
  logic [7:0] accu_rd_mask_R2 ;
  logic [7:0] accu_rd_mask_X2 ;
  assign accu_rd_mask_C2 = { 8{ !_068_ }} ;
  assign accu_rd_mask_R2 = { 8{ !_068_ }} & ( _051__R | ( { 8{ _068__T  }} & _051__C ));
  assign accu_rd_mask_X2 = { 8{ !_068_ }} & _051__X ;
  logic [8:0] fangyuan16;
  logic [8:0] fangyuan16_T ;
  logic [8:0] fangyuan16_R ;
  logic [8:0] fangyuan16_C ;
  logic [8:0] fangyuan16_X ;
  assign fangyuan16 = { accu_channel_st_w, accu_channel_st_w, accu_channel_st_w, accu_channel_st_w, accu_channel_st_w, accu_channel_st_w, accu_channel_st_w, accu_channel_st_w, accu_channel_st_w };
  assign fangyuan16_T = {  accu_channel_st_w_T , accu_channel_st_w_T , accu_channel_st_w_T , accu_channel_st_w_T , accu_channel_st_w_T , accu_channel_st_w_T , accu_channel_st_w_T , accu_channel_st_w_T , accu_channel_st_w_T  };
  logic [13:0] fangyuan16_S ;
  assign fangyuan16_S = 0 ;
  logic [0:0] accu_channel_st_w_R0 ;
  logic [0:0] accu_channel_st_w_X0 ;
  logic [0:0] accu_channel_st_w_C0 ;
  assign accu_channel_st_w_R0 = fangyuan16_R [8:8] ;
  assign accu_channel_st_w_X0 = fangyuan16_X [8:8] ;
  assign accu_channel_st_w_C0 = fangyuan16_C [8:8] ;
  logic [0:0] accu_channel_st_w_R1 ;
  logic [0:0] accu_channel_st_w_X1 ;
  logic [0:0] accu_channel_st_w_C1 ;
  assign accu_channel_st_w_R1 = fangyuan16_R [7:7] ;
  assign accu_channel_st_w_X1 = fangyuan16_X [7:7] ;
  assign accu_channel_st_w_C1 = fangyuan16_C [7:7] ;
  logic [0:0] accu_channel_st_w_R2 ;
  logic [0:0] accu_channel_st_w_X2 ;
  logic [0:0] accu_channel_st_w_C2 ;
  assign accu_channel_st_w_R2 = fangyuan16_R [6:6] ;
  assign accu_channel_st_w_X2 = fangyuan16_X [6:6] ;
  assign accu_channel_st_w_C2 = fangyuan16_C [6:6] ;
  logic [0:0] accu_channel_st_w_R3 ;
  logic [0:0] accu_channel_st_w_X3 ;
  logic [0:0] accu_channel_st_w_C3 ;
  assign accu_channel_st_w_R3 = fangyuan16_R [5:5] ;
  assign accu_channel_st_w_X3 = fangyuan16_X [5:5] ;
  assign accu_channel_st_w_C3 = fangyuan16_C [5:5] ;
  logic [0:0] accu_channel_st_w_R4 ;
  logic [0:0] accu_channel_st_w_X4 ;
  logic [0:0] accu_channel_st_w_C4 ;
  assign accu_channel_st_w_R4 = fangyuan16_R [4:4] ;
  assign accu_channel_st_w_X4 = fangyuan16_X [4:4] ;
  assign accu_channel_st_w_C4 = fangyuan16_C [4:4] ;
  logic [0:0] accu_channel_st_w_R5 ;
  logic [0:0] accu_channel_st_w_X5 ;
  logic [0:0] accu_channel_st_w_C5 ;
  assign accu_channel_st_w_R5 = fangyuan16_R [3:3] ;
  assign accu_channel_st_w_X5 = fangyuan16_X [3:3] ;
  assign accu_channel_st_w_C5 = fangyuan16_C [3:3] ;
  logic [0:0] accu_channel_st_w_R6 ;
  logic [0:0] accu_channel_st_w_X6 ;
  logic [0:0] accu_channel_st_w_C6 ;
  assign accu_channel_st_w_R6 = fangyuan16_R [2:2] ;
  assign accu_channel_st_w_X6 = fangyuan16_X [2:2] ;
  assign accu_channel_st_w_C6 = fangyuan16_C [2:2] ;
  logic [0:0] accu_channel_st_w_R7 ;
  logic [0:0] accu_channel_st_w_X7 ;
  logic [0:0] accu_channel_st_w_C7 ;
  assign accu_channel_st_w_R7 = fangyuan16_R [1:1] ;
  assign accu_channel_st_w_X7 = fangyuan16_X [1:1] ;
  assign accu_channel_st_w_C7 = fangyuan16_C [1:1] ;
  logic [0:0] accu_channel_st_w_R8 ;
  logic [0:0] accu_channel_st_w_X8 ;
  logic [0:0] accu_channel_st_w_C8 ;
  assign accu_channel_st_w_R8 = fangyuan16_R [0:0] ;
  assign accu_channel_st_w_X8 = fangyuan16_X [0:0] ;
  assign accu_channel_st_w_C8 = fangyuan16_C [0:0] ;

  assign _004_ = _068_ ? fangyuan16 : accu_channel_st;
  logic [0:0] _068__C9 ;
  logic [0:0] _068__R9 ;
  logic [0:0] _068__X9 ;
  assign _068__C9 = | _004__C ;
  assign _068__X9 = | _004__X ;
  assign _004__T = _068_ ? ( { 9{ _068__T  }} | fangyuan16_T ) : ( { 9{ _068__T  }} | accu_channel_st_T );
  assign _004__S = _068_ ? fangyuan16_S : accu_channel_st_S ;
  assign _068__R9 = ( | (_004__R | ( _004__C & ( { 9{ _068_ }} & fangyuan16_T | { 9{ !_068_ }} & accu_channel_st_T )))) && fangyuan16 != accu_channel_st ;
  logic [8:0] fangyuan16_C0 ;
  logic [8:0] fangyuan16_R0 ;
  logic [8:0] fangyuan16_X0 ;
  assign fangyuan16_C0 = { 9{ _068_ }} ;
  assign fangyuan16_R0 = { 9{ _068_ }} & ( _004__R | ( { 9{ _068__T  }} & _004__C ));
  assign fangyuan16_X0 = { 9{ _068_ }} & _004__X ;
  logic [8:0] accu_channel_st_C1 ;
  logic [8:0] accu_channel_st_R1 ;
  logic [8:0] accu_channel_st_X1 ;
  assign accu_channel_st_C1 = { 9{ !_068_ }} ;
  assign accu_channel_st_R1 = { 9{ !_068_ }} & ( _004__R | ( { 9{ _068__T  }} & _004__C ));
  assign accu_channel_st_X1 = { 9{ !_068_ }} & _004__X ;
  assign _005_ = _068_ ? accu_cnt_w : accu_cnt;
  logic [0:0] _068__C10 ;
  logic [0:0] _068__R10 ;
  logic [0:0] _068__X10 ;
  assign _068__C10 = | _005__C ;
  assign _068__X10 = | _005__X ;
  assign _005__T = _068_ ? ( { 7{ _068__T  }} | accu_cnt_w_T ) : ( { 7{ _068__T  }} | accu_cnt_T );
  assign _005__S = _068_ ? accu_cnt_w_S : accu_cnt_S ;
  assign _068__R10 = ( | (_005__R | ( _005__C & ( { 7{ _068_ }} & accu_cnt_w_T | { 7{ !_068_ }} & accu_cnt_T )))) && accu_cnt_w != accu_cnt ;
  logic [6:0] accu_cnt_w_C0 ;
  logic [6:0] accu_cnt_w_R0 ;
  logic [6:0] accu_cnt_w_X0 ;
  assign accu_cnt_w_C0 = { 7{ _068_ }} ;
  assign accu_cnt_w_R0 = { 7{ _068_ }} & ( _005__R | ( { 7{ _068__T  }} & _005__C ));
  assign accu_cnt_w_X0 = { 7{ _068_ }} & _005__X ;
  logic [6:0] accu_cnt_C1 ;
  logic [6:0] accu_cnt_R1 ;
  logic [6:0] accu_cnt_X1 ;
  assign accu_cnt_C1 = { 7{ !_068_ }} ;
  assign accu_cnt_R1 = { 7{ !_068_ }} & ( _005__R | ( { 7{ _068__T  }} & _005__C ));
  assign accu_cnt_X1 = { 7{ !_068_ }} & _005__X ;
  assign _026_ = mac_a2accu_pvld ? mac_a2accu_pd : accu_pd;
  logic [0:0] mac_a2accu_pvld_C1 ;
  logic [0:0] mac_a2accu_pvld_R1 ;
  logic [0:0] mac_a2accu_pvld_X1 ;
  assign mac_a2accu_pvld_C1 = | _026__C ;
  assign mac_a2accu_pvld_X1 = | _026__X ;
  assign _026__T = mac_a2accu_pvld ? ( { 9{ mac_a2accu_pvld_T  }} | mac_a2accu_pd_T ) : ( { 9{ mac_a2accu_pvld_T  }} | accu_pd_T );
  assign _026__S = mac_a2accu_pvld ? mac_a2accu_pd_S : accu_pd_S ;
  assign mac_a2accu_pvld_R1 = ( | (_026__R | ( _026__C & ( { 9{ mac_a2accu_pvld }} & mac_a2accu_pd_T | { 9{ !mac_a2accu_pvld }} & accu_pd_T )))) && mac_a2accu_pd != accu_pd ;
  assign { accu_pd_R2 [0], accu_pd_R2 [1], accu_pd_R2 [2], accu_pd_R2 [3], accu_pd_R2 [4], accu_pd_R2 [5], accu_pd_R2 [8:7] } = 0;
  assign { accu_pd_X2 [0], accu_pd_X2 [1], accu_pd_X2 [2], accu_pd_X2 [3], accu_pd_X2 [4], accu_pd_X2 [5], accu_pd_X2 [8:7] } = 0;
  assign { accu_pd_C2 [0], accu_pd_C2 [1], accu_pd_C2 [2], accu_pd_C2 [3], accu_pd_C2 [4], accu_pd_C2 [5], accu_pd_C2 [8:7] } = 0;
  logic [8:0] mac_a2accu_pd_C0 ;
  logic [8:0] mac_a2accu_pd_R0 ;
  logic [8:0] mac_a2accu_pd_X0 ;
  assign mac_a2accu_pd_C0 = { 9{ mac_a2accu_pvld }} ;
  assign mac_a2accu_pd_R0 = { 9{ mac_a2accu_pvld }} & ( _026__R | ( { 9{ mac_a2accu_pvld_T  }} & _026__C ));
  assign mac_a2accu_pd_X0 = { 9{ mac_a2accu_pvld }} & _026__X ;
  logic [8:0] accu_pd_C3 ;
  logic [8:0] accu_pd_R3 ;
  logic [8:0] accu_pd_X3 ;
  assign accu_pd_C3 = { 9{ !mac_a2accu_pvld }} ;
  assign accu_pd_R3 = { 9{ !mac_a2accu_pvld }} & ( _026__R | ( { 9{ mac_a2accu_pvld_T  }} & _026__C ));
  assign accu_pd_X3 = { 9{ !mac_a2accu_pvld }} & _026__X ;
  assign accu_rd_sel_w = 1'b1 << accu_cnt_w[1:0];
  assign accu_rd_sel_w_S = 0 ;
  logic [6:0] accu_cnt_w_C1 ;
  logic [6:0] accu_cnt_w_R1 ;
  logic [6:0] accu_cnt_w_X1 ;
  assign accu_rd_sel_w_T = accu_cnt_w_T [1:0] ;
  assign accu_cnt_w_C1 [1:0] = accu_rd_sel_w_C ;
  assign accu_cnt_w_R1 [1:0] = accu_rd_sel_w_R ;
  assign accu_cnt_w_X1 [1:0] = accu_rd_sel_w_X ;
  assign _076_ = reg2dp_op_en ? 1'b0 : wait_for_op_en;
  logic [0:0] reg2dp_op_en_C4 ;
  logic [0:0] reg2dp_op_en_R4 ;
  logic [0:0] reg2dp_op_en_X4 ;
  assign reg2dp_op_en_C4 = | _076__C ;
  assign reg2dp_op_en_X4 = | _076__X ;
  logic [0:0] wait_for_op_en_C2 ;
  logic [0:0] wait_for_op_en_R2 ;
  logic [0:0] wait_for_op_en_X2 ;
  assign wait_for_op_en_C2 = { 1{ !reg2dp_op_en }};
  assign wait_for_op_en_R2 = { 1{ !reg2dp_op_en }} & ( _076__R | ( { 1{ reg2dp_op_en_T  }} & _076__C ));
  assign wait_for_op_en_X2 = { 1{ !reg2dp_op_en }} & _076__X ;
  assign _076__T = reg2dp_op_en ? { 1{ | reg2dp_op_en_T  }} : ( { 1{ | reg2dp_op_en_T  }} | wait_for_op_en_T );
  assign _076__S = reg2dp_op_en ? reg2dp_op_en_S : wait_for_op_en_S ;
  assign reg2dp_op_en_R4 = ( | (_076__R | ( { 1{ !reg2dp_op_en }} & wait_for_op_en_T & _076__C ))) && 1'b0 != wait_for_op_en ;
  assign wait_for_op_en_w = dp2reg_done ? 1'b1 : _076_;
  logic [0:0] dp2reg_done_C0 ;
  logic [0:0] dp2reg_done_R0 ;
  logic [0:0] dp2reg_done_X0 ;
  assign dp2reg_done_C0 = | wait_for_op_en_w_C ;
  assign dp2reg_done_X0 = | wait_for_op_en_w_X ;
  logic [0:0] _076__C0 ;
  logic [0:0] _076__R0 ;
  logic [0:0] _076__X0 ;
  assign _076__C0 = { 1{ !dp2reg_done }};
  assign _076__R0 = { 1{ !dp2reg_done }} & ( wait_for_op_en_w_R | ( { 1{ dp2reg_done_T  }} & wait_for_op_en_w_C ));
  assign _076__X0 = { 1{ !dp2reg_done }} & wait_for_op_en_w_X ;
  assign wait_for_op_en_w_T = dp2reg_done ? { 1{ | dp2reg_done_T  }} : ( { 1{ | dp2reg_done_T  }} | _076__T );
  assign wait_for_op_en_w_S = dp2reg_done ? dp2reg_done_S : _076__S ;
  assign dp2reg_done_R0 = ( | (wait_for_op_en_w_R | ( { 1{ !dp2reg_done }} & _076__T & wait_for_op_en_w_C ))) && 1'b1 != _076_ ;
  assign accu_cnt_w = _074_ ? 7'b0000000 : accu_cnt_inc;
  logic [0:0] _074__C0 ;
  logic [0:0] _074__R0 ;
  logic [0:0] _074__X0 ;
  assign _074__C0 = | accu_cnt_w_C ;
  assign _074__X0 = | accu_cnt_w_X ;
  logic [6:0] accu_cnt_inc_C0 ;
  logic [6:0] accu_cnt_inc_R0 ;
  logic [6:0] accu_cnt_inc_X0 ;
  assign accu_cnt_inc_C0 = { 7{ !_074_ }};
  assign accu_cnt_inc_R0 = { 7{ !_074_ }} & ( accu_cnt_w_R | ( { 7{ _074__T  }} & accu_cnt_w_C ));
  assign accu_cnt_inc_X0 = { 7{ !_074_ }} & accu_cnt_w_X ;
  assign accu_cnt_w_T = _074_ ? { 7{ | _074__T  }} : ( { 7{ | _074__T  }} | accu_cnt_inc_T );
  assign accu_cnt_w_S = _074_ ? _074__S : accu_cnt_inc_S ;
  assign _074__R0 = ( | (accu_cnt_w_R | ( { 7{ !_074_ }} & accu_cnt_inc_T & accu_cnt_w_C ))) && 7'b0000000 != accu_cnt_inc ;
  assign accu_addr_d0 = cfg_winograd ? accu_cnt[4:0] : accu_cnt[6:2];
  logic [0:0] cfg_winograd_C1 ;
  logic [0:0] cfg_winograd_R1 ;
  logic [0:0] cfg_winograd_X1 ;
  assign cfg_winograd_C1 = | accu_addr_d0_C ;
  assign cfg_winograd_X1 = | accu_addr_d0_X ;
  assign accu_addr_d0_T = cfg_winograd ? ( { 5{ cfg_winograd_T  }} | accu_cnt_T [4:0] ) : ( { 5{ cfg_winograd_T  }} | accu_cnt_T [6:2] );
  assign accu_addr_d0_S = cfg_winograd ? accu_cnt_S : accu_cnt_S ;
  assign cfg_winograd_R1 = ( | (accu_addr_d0_R | ( accu_addr_d0_C & ( { 5{ cfg_winograd }} & accu_cnt_T [4:0] | { 5{ !cfg_winograd }} & accu_cnt_T [6:2] )))) && accu_cnt[4:0] != accu_cnt[6:2] ;
  assign { accu_cnt_R2 [6:5] } = 0;
  assign { accu_cnt_X2 [6:5] } = 0;
  assign { accu_cnt_C2 [6:5] } = 0;
  logic [6:0] accu_cnt_C2 ;
  logic [6:0] accu_cnt_R2 ;
  logic [6:0] accu_cnt_X2 ;
  assign accu_cnt_C2 [4:0] = { 5{ cfg_winograd }} ;
  assign accu_cnt_R2 [4:0] = { 5{ cfg_winograd }} & ( accu_addr_d0_R | ( { 5{ cfg_winograd_T  }} & accu_addr_d0_C ));
  assign accu_cnt_X2 [4:0] = { 5{ cfg_winograd }} & accu_addr_d0_X ;
  logic [6:0] accu_cnt_C3 ;
  logic [6:0] accu_cnt_R3 ;
  logic [6:0] accu_cnt_X3 ;
  assign accu_cnt_C3 [6:2] = { 5{ !cfg_winograd }} ;
  assign accu_cnt_R3 [6:2] = { 5{ !cfg_winograd }} & ( accu_addr_d0_R | ( { 5{ cfg_winograd_T  }} & accu_addr_d0_C ));
  assign accu_cnt_X3 [6:2] = { 5{ !cfg_winograd }} & accu_addr_d0_X ;
  logic [7:0] fangyuan17;
  logic [7:0] fangyuan17_T ;
  logic [7:0] fangyuan17_R ;
  logic [7:0] fangyuan17_C ;
  logic [7:0] fangyuan17_X ;
  assign fangyuan17 = { accu_rd_sel_w, accu_rd_sel_w };
  assign fangyuan17_T = {  accu_rd_sel_w_T , accu_rd_sel_w_T  };
  logic [13:0] fangyuan17_S ;
  assign fangyuan17_S = 0 ;
  logic [3:0] accu_rd_sel_w_R0 ;
  logic [3:0] accu_rd_sel_w_X0 ;
  logic [3:0] accu_rd_sel_w_C0 ;
  assign accu_rd_sel_w_R0 = fangyuan17_R [7:4] ;
  assign accu_rd_sel_w_X0 = fangyuan17_X [7:4] ;
  assign accu_rd_sel_w_C0 = fangyuan17_C [7:4] ;
  logic [3:0] accu_rd_sel_w_R1 ;
  logic [3:0] accu_rd_sel_w_X1 ;
  logic [3:0] accu_rd_sel_w_C1 ;
  assign accu_rd_sel_w_R1 = fangyuan17_R [3:0] ;
  assign accu_rd_sel_w_X1 = fangyuan17_X [3:0] ;
  assign accu_rd_sel_w_C1 = fangyuan17_C [3:0] ;
  logic [7:0] fangyuan18;
  logic [7:0] fangyuan18_T ;
  logic [7:0] fangyuan18_R ;
  logic [7:0] fangyuan18_C ;
  logic [7:0] fangyuan18_X ;
  assign fangyuan18 = { 4'b0000, accu_rd_sel_w };
  assign fangyuan18_T = {  4'h0 , accu_rd_sel_w_T  };
  logic [13:0] fangyuan18_S ;
  assign fangyuan18_S = 0 ;
  logic [3:0] accu_rd_sel_w_R2 ;
  logic [3:0] accu_rd_sel_w_X2 ;
  logic [3:0] accu_rd_sel_w_C2 ;
  assign accu_rd_sel_w_R2 = fangyuan18_R [3:0] ;
  assign accu_rd_sel_w_X2 = fangyuan18_X [3:0] ;
  assign accu_rd_sel_w_C2 = fangyuan18_C [3:0] ;

  assign _077_ = is_x2 ? fangyuan17 : fangyuan18;
  logic [0:0] is_x2_C5 ;
  logic [0:0] is_x2_R5 ;
  logic [0:0] is_x2_X5 ;
  assign is_x2_C5 = | _077__C ;
  assign is_x2_X5 = | _077__X ;
  assign _077__T = is_x2 ? ( { 8{ is_x2_T  }} | fangyuan17_T ) : ( { 8{ is_x2_T  }} | fangyuan18_T );
  assign _077__S = is_x2 ? fangyuan17_S : fangyuan18_S ;
  assign is_x2_R5 = ( | (_077__R | ( _077__C & ( { 8{ is_x2 }} & fangyuan17_T | { 8{ !is_x2 }} & fangyuan18_T )))) && fangyuan17 != fangyuan18 ;
  logic [7:0] fangyuan17_C0 ;
  logic [7:0] fangyuan17_R0 ;
  logic [7:0] fangyuan17_X0 ;
  assign fangyuan17_C0 = { 8{ is_x2 }} ;
  assign fangyuan17_R0 = { 8{ is_x2 }} & ( _077__R | ( { 8{ is_x2_T  }} & _077__C ));
  assign fangyuan17_X0 = { 8{ is_x2 }} & _077__X ;
  logic [7:0] fangyuan18_C0 ;
  logic [7:0] fangyuan18_R0 ;
  logic [7:0] fangyuan18_X0 ;
  assign fangyuan18_C0 = { 8{ !is_x2 }} ;
  assign fangyuan18_R0 = { 8{ !is_x2 }} & ( _077__R | ( { 8{ is_x2_T  }} & _077__C ));
  assign fangyuan18_X0 = { 8{ !is_x2 }} & _077__X ;
  assign _078_ = is_x4 ? 8'b00001111 : _077_;
  logic [0:0] is_x4_C1 ;
  logic [0:0] is_x4_R1 ;
  logic [0:0] is_x4_X1 ;
  assign is_x4_C1 = | _078__C ;
  assign is_x4_X1 = | _078__X ;
  logic [7:0] _077__C0 ;
  logic [7:0] _077__R0 ;
  logic [7:0] _077__X0 ;
  assign _077__C0 = { 8{ !is_x4 }};
  assign _077__R0 = { 8{ !is_x4 }} & ( _078__R | ( { 8{ is_x4_T  }} & _078__C ));
  assign _077__X0 = { 8{ !is_x4 }} & _078__X ;
  assign _078__T = is_x4 ? { 8{ | is_x4_T  }} : ( { 8{ | is_x4_T  }} | _077__T );
  assign _078__S = is_x4 ? is_x4_S : _077__S ;
  assign is_x4_R1 = ( | (_078__R | ( { 8{ !is_x4 }} & _077__T & _078__C ))) && 8'b00001111 != _077_ ;
  assign accu_rd_mask_w = is_x8 ? 8'b11111111 : _078_;
  logic [0:0] is_x8_C1 ;
  logic [0:0] is_x8_R1 ;
  logic [0:0] is_x8_X1 ;
  assign is_x8_C1 = | accu_rd_mask_w_C ;
  assign is_x8_X1 = | accu_rd_mask_w_X ;
  logic [7:0] _078__C0 ;
  logic [7:0] _078__R0 ;
  logic [7:0] _078__X0 ;
  assign _078__C0 = { 8{ !is_x8 }};
  assign _078__R0 = { 8{ !is_x8 }} & ( accu_rd_mask_w_R | ( { 8{ is_x8_T  }} & accu_rd_mask_w_C ));
  assign _078__X0 = { 8{ !is_x8 }} & accu_rd_mask_w_X ;
  assign accu_rd_mask_w_T = is_x8 ? { 8{ | is_x8_T  }} : ( { 8{ | is_x8_T  }} | _078__T );
  assign accu_rd_mask_w_S = is_x8 ? is_x8_S : _078__S ;
  assign is_x8_R1 = ( | (accu_rd_mask_w_R | ( { 8{ !is_x8 }} & _078__T & accu_rd_mask_w_C ))) && 8'b11111111 != _078_ ;
  assign _079_ = _064_ ? accu_pd[7] : accu_channel_st[8];
  logic [0:0] _064__C0 ;
  logic [0:0] _064__R0 ;
  logic [0:0] _064__X0 ;
  assign _064__C0 = | _079__C ;
  assign _064__X0 = | _079__X ;
  assign _079__T = _064_ ? ( { 1{ _064__T  }} | accu_pd_T [7] ) : ( { 1{ _064__T  }} | accu_channel_st_T [8] );
  assign _079__S = _064_ ? accu_pd_S : accu_channel_st_S ;
  assign _064__R0 = ( | (_079__R | ( _079__C & ( { 1{ _064_ }} & accu_pd_T [7] | { 1{ !_064_ }} & accu_channel_st_T [8] )))) && accu_pd[7] != accu_channel_st[8] ;
  logic [8:0] accu_pd_C4 ;
  logic [8:0] accu_pd_R4 ;
  logic [8:0] accu_pd_X4 ;
  assign accu_pd_C4 [7] = { 1{ _064_ }} ;
  assign accu_pd_R4 [7] = { 1{ _064_ }} & ( _079__R | ( { 1{ _064__T  }} & _079__C ));
  assign accu_pd_X4 [7] = { 1{ _064_ }} & _079__X ;
  logic [8:0] accu_channel_st_C2 ;
  logic [8:0] accu_channel_st_R2 ;
  logic [8:0] accu_channel_st_X2 ;
  assign accu_channel_st_C2 [8] = { 1{ !_064_ }} ;
  assign accu_channel_st_R2 [8] = { 1{ !_064_ }} & ( _079__R | ( { 1{ _064__T  }} & _079__C ));
  assign accu_channel_st_X2 [8] = { 1{ !_064_ }} & _079__X ;
  assign accu_channel_st_w = layer_st ? 1'b1 : _079_;
  logic [0:0] layer_st_C10 ;
  logic [0:0] layer_st_R10 ;
  logic [0:0] layer_st_X10 ;
  assign layer_st_C10 = | accu_channel_st_w_C ;
  assign layer_st_X10 = | accu_channel_st_w_X ;
  logic [0:0] _079__C0 ;
  logic [0:0] _079__R0 ;
  logic [0:0] _079__X0 ;
  assign _079__C0 = { 1{ !layer_st }};
  assign _079__R0 = { 1{ !layer_st }} & ( accu_channel_st_w_R | ( { 1{ layer_st_T  }} & accu_channel_st_w_C ));
  assign _079__X0 = { 1{ !layer_st }} & accu_channel_st_w_X ;
  assign accu_channel_st_w_T = layer_st ? { 1{ | layer_st_T  }} : ( { 1{ | layer_st_T  }} | _079__T );
  assign accu_channel_st_w_S = layer_st ? layer_st_S : _079__S ;
  assign layer_st_R10 = ( | (accu_channel_st_w_R | ( { 1{ !layer_st }} & _079__T & accu_channel_st_w_C ))) && 1'b1 != _079_ ;
  assign _066_[79:0] = is_x2 ? 80'b11111111111111110000000000000000000000000000000000000000000000001111111111111111 : 80'b00000000000000000000000000000000000000000000000000000000000000001111111111111111;
  logic [0:0] is_x2_C6 ;
  logic [0:0] is_x2_R6 ;
  logic [0:0] is_x2_X6 ;
  assign is_x2_C6 = | _066__C [79:0] ;
  assign is_x2_X6 = | _066__X [79:0] ;
  assign _066__T = { 80{ is_x2_T  }} ;
  assign _066__S = is_x2_S ;
  assign is_x2_R6 = ( | _066__R [79:0]) && 80'b11111111111111110000000000000000000000000000000000000000000000001111111111111111 != 80'b00000000000000000000000000000000000000000000000000000000000000001111111111111111 ;
  assign _067_[79:0] = is_x4 ? 80'b00000000000000001111111111111111111111111111111111111111111111111111111111111111 : _066_[79:0];
  logic [0:0] is_x4_C2 ;
  logic [0:0] is_x4_R2 ;
  logic [0:0] is_x4_X2 ;
  assign is_x4_C2 = | _067__C [79:0] ;
  assign is_x4_X2 = | _067__X [79:0] ;
  logic [127:0] _066__C0 ;
  logic [127:0] _066__R0 ;
  logic [127:0] _066__X0 ;
  assign _066__C0 [79:0] = { 80{ !is_x4 }};
  assign _066__R0 [79:0] = { 80{ !is_x4 }} & ( _067__R [79:0] | ( { 80{ is_x4_T  }} & _067__C [79:0] ));
  assign _066__X0 [79:0] = { 80{ !is_x4 }} & _067__X [79:0] ;
  assign _067__T [79:0] = is_x4 ? { 80{ | is_x4_T  }} : ( { 80{ | is_x4_T  }} | _066__T [79:0] );
  assign _067__S = is_x4 ? is_x4_S : _066__S ;
  assign is_x4_R2 = ( | (_067__R [79:0] | ( { 80{ !is_x4 }} & _066__T [79:0] & _067__C [79:0] ))) && 80'b00000000000000001111111111111111111111111111111111111111111111111111111111111111 != _066_[79:0] ;
  logic [127:0] fangyuan19;
  logic [127:0] fangyuan19_T ;
  logic [127:0] fangyuan19_R ;
  logic [127:0] fangyuan19_C ;
  logic [127:0] fangyuan19_X ;
  assign fangyuan19 = { 48'b000000000000000000000000000000000000000000000000, _067_[79:0] };
  assign fangyuan19_T = {  48'h0 , _067__T [79:0]  };
  logic [13:0] fangyuan19_S ;
  assign fangyuan19_S = 0 ;
  logic [127:0] _067__R0 ;
  logic [127:0] _067__X0 ;
  logic [127:0] _067__C0 ;
  assign _067__R0 [79:0] = fangyuan19_R [79:0] ;
  assign _067__X0 [79:0] = fangyuan19_X [79:0] ;
  assign _067__C0 [79:0] = fangyuan19_C [79:0] ;

  assign _080_ = is_x8 ? 128'b11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111 : fangyuan19;
  logic [0:0] is_x8_C2 ;
  logic [0:0] is_x8_R2 ;
  logic [0:0] is_x8_X2 ;
  assign is_x8_C2 = | _080__C ;
  assign is_x8_X2 = | _080__X ;
  logic [127:0] fangyuan19_C0 ;
  logic [127:0] fangyuan19_R0 ;
  logic [127:0] fangyuan19_X0 ;
  assign fangyuan19_C0 = { 128{ !is_x8 }};
  assign fangyuan19_R0 = { 128{ !is_x8 }} & ( _080__R | ( { 128{ is_x8_T  }} & _080__C ));
  assign fangyuan19_X0 = { 128{ !is_x8 }} & _080__X ;
  assign _080__T = is_x8 ? { 128{ | is_x8_T  }} : ( { 128{ | is_x8_T  }} | fangyuan19_T );
  assign _080__S = is_x8 ? is_x8_S : fangyuan19_S ;
  assign is_x8_R2 = ( | (_080__R | ( { 128{ !is_x8 }} & fangyuan19_T & _080__C ))) && 128'b11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111 != fangyuan19 ;
  assign cfg_in_en_mask_w[127:0] = is_fp16 ? 128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 : _080_;
  logic [0:0] is_fp16_C28 ;
  logic [0:0] is_fp16_R28 ;
  logic [0:0] is_fp16_X28 ;
  assign is_fp16_C28 = | cfg_in_en_mask_w_C [127:0] ;
  assign is_fp16_X28 = | cfg_in_en_mask_w_X [127:0] ;
  logic [127:0] _080__C0 ;
  logic [127:0] _080__R0 ;
  logic [127:0] _080__X0 ;
  assign _080__C0 = { 128{ !is_fp16 }};
  assign _080__R0 = { 128{ !is_fp16 }} & ( cfg_in_en_mask_w_R [127:0] | ( { 128{ is_fp16_T  }} & cfg_in_en_mask_w_C [127:0] ));
  assign _080__X0 = { 128{ !is_fp16 }} & cfg_in_en_mask_w_X [127:0] ;
  assign cfg_in_en_mask_w_T [127:0] = is_fp16 ? { 128{ | is_fp16_T  }} : ( { 128{ | is_fp16_T  }} | _080__T );
  assign cfg_in_en_mask_w_S = is_fp16 ? is_fp16_S : _080__S ;
  assign is_fp16_R28 = ( | (cfg_in_en_mask_w_R [127:0] | ( { 128{ !is_fp16 }} & _080__T & cfg_in_en_mask_w_C [127:0] ))) && 128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 != _080_ ;
  assign _081_ = is_x1 ? 64'b0000000000000000000000000000000000000000000000001111111111111111 : 64'b1111111111111111111111111111111111111111111111111111111111111111;
  logic [0:0] is_x1_C2 ;
  logic [0:0] is_x1_R2 ;
  logic [0:0] is_x1_X2 ;
  assign is_x1_C2 = | _081__C ;
  assign is_x1_X2 = | _081__X ;
  assign _081__T = { 64{ is_x1_T  }} ;
  assign _081__S = is_x1_S ;
  assign is_x1_R2 = ( | _081__R) && 64'b0000000000000000000000000000000000000000000000001111111111111111 != 64'b1111111111111111111111111111111111111111111111111111111111111111 ;
  assign cfg_in_en_mask_w[191:128] = is_fp16 ? _081_ : 64'b0000000000000000000000000000000000000000000000000000000000000000;
  logic [0:0] is_fp16_C29 ;
  logic [0:0] is_fp16_R29 ;
  logic [0:0] is_fp16_X29 ;
  assign is_fp16_C29 = | cfg_in_en_mask_w_C [191:128] ;
  assign is_fp16_X29 = | cfg_in_en_mask_w_X [191:128] ;
  logic [63:0] _081__C0 ;
  logic [63:0] _081__R0 ;
  logic [63:0] _081__X0 ;
  assign _081__C0 = { 64{ is_fp16 }} ;
  assign _081__R0 = { 64{ is_fp16 }} & ( cfg_in_en_mask_w_R [191:128] | ( { 64{ is_fp16_T  }} & cfg_in_en_mask_w_C [191:128] ));
  assign _081__X0 = { 64{ is_fp16 }} & cfg_in_en_mask_w_X [191:128] ;
  assign cfg_in_en_mask_w_T [191:128] = is_fp16 ? ( { 64{ | is_fp16_T  }} | _081__T ) : { 64{ | is_fp16_T  }};
  assign cfg_in_en_mask_w_S = is_fp16 ? _081__S : is_fp16_S ;
  assign is_fp16_R29 = ( | (cfg_in_en_mask_w_R [191:128] | ( { 64{ is_fp16 }} & _081__T & cfg_in_en_mask_w_C [191:128] ))) && _081_ != 64'b0000000000000000000000000000000000000000000000000000000000000000 ;
  assign _066_[127:80] = 48'b000000000000000000000000000000000000000000000000;
  assign _066__T [127:80] = 0 ;
  assign _066__S = 14'b1 ;
  assign _067_[127:80] = 48'b000000000000000000000000000000000000000000000000;
  assign _067__T [127:80] = 0 ;
  assign _067__S = 14'b1 ;
  assign abuf_rd_addr = accu_addr_d0;
  logic [4:0] accu_addr_d0_C1 ;
  logic [4:0] accu_addr_d0_R1 ;
  logic [4:0] accu_addr_d0_X1 ;
  assign abuf_rd_addr_T = accu_addr_d0_T ;
  assign accu_addr_d0_C1 = abuf_rd_addr_C ;
  assign accu_addr_d0_R1 = abuf_rd_addr_R ;
  assign accu_addr_d0_X1 = abuf_rd_addr_X ;
  assign abuf_rd_addr_S = accu_addr_d0_S ;
  assign accu_addr = accu_addr_d0;
  logic [4:0] accu_addr_d0_C2 ;
  logic [4:0] accu_addr_d0_R2 ;
  logic [4:0] accu_addr_d0_X2 ;
  assign accu_addr_T = accu_addr_d0_T ;
  assign accu_addr_d0_C2 = accu_addr_C ;
  assign accu_addr_d0_R2 = accu_addr_R ;
  assign accu_addr_d0_X2 = accu_addr_X ;
  assign accu_addr_S = accu_addr_d0_S ;
  assign accu_batch_index = accu_pd[4:0];
  assign accu_batch_index_T = accu_pd_T [4:0] ;
  assign accu_pd_C4 [4:0] = accu_batch_index_C ;
  assign accu_pd_R4 [4:0] = accu_batch_index_R ;
  assign accu_pd_X4 [4:0] = accu_batch_index_X ;
  assign accu_batch_index_S = accu_pd_S ;
  assign accu_channel_end = accu_pd[7];
  assign { accu_pd_R4 [5], accu_pd_R4 [6], accu_pd_R4 [8:8] } = 0;
  assign { accu_pd_X4 [5], accu_pd_X4 [6], accu_pd_X4 [8:8] } = 0;
  assign { accu_pd_C4 [5], accu_pd_C4 [6], accu_pd_C4 [8:8] } = 0;
  logic [8:0] accu_pd_C5 ;
  logic [8:0] accu_pd_R5 ;
  logic [8:0] accu_pd_X5 ;
  assign accu_channel_end_T = accu_pd_T [7] ;
  assign accu_pd_C5 [7] = accu_channel_end_C ;
  assign accu_pd_R5 [7] = accu_channel_end_R ;
  assign accu_pd_X5 [7] = accu_channel_end_X ;
  assign accu_channel_end_S = accu_pd_S ;
  assign accu_channel_end_d0 = accu_pd[7];
  assign { accu_pd_R5 [0], accu_pd_R5 [1], accu_pd_R5 [2], accu_pd_R5 [3], accu_pd_R5 [4], accu_pd_R5 [5], accu_pd_R5 [6], accu_pd_R5 [8:8] } = 0;
  assign { accu_pd_X5 [0], accu_pd_X5 [1], accu_pd_X5 [2], accu_pd_X5 [3], accu_pd_X5 [4], accu_pd_X5 [5], accu_pd_X5 [6], accu_pd_X5 [8:8] } = 0;
  assign { accu_pd_C5 [0], accu_pd_C5 [1], accu_pd_C5 [2], accu_pd_C5 [3], accu_pd_C5 [4], accu_pd_C5 [5], accu_pd_C5 [6], accu_pd_C5 [8:8] } = 0;
  logic [8:0] accu_pd_C6 ;
  logic [8:0] accu_pd_R6 ;
  logic [8:0] accu_pd_X6 ;
  assign accu_channel_end_d0_T = accu_pd_T [7] ;
  assign accu_pd_C6 [7] = accu_channel_end_d0_C ;
  assign accu_pd_R6 [7] = accu_channel_end_d0_R ;
  assign accu_pd_X6 [7] = accu_channel_end_d0_X ;
  assign accu_channel_end_d0_S = accu_pd_S ;
  assign accu_ctrl_pd = { accu_ctrl_dlv_elem_mask, accu_ctrl_ram_sel_7, accu_ctrl_ram_sel_6, accu_ctrl_ram_sel_5, accu_ctrl_ram_sel_4, accu_ctrl_ram_sel_3, accu_ctrl_ram_sel_2, accu_ctrl_ram_sel_1, accu_ctrl_ram_sel_0, accu_ctrl_layer_end, accu_ctrl_channel_end, accu_ctrl_stripe_end, accu_ctrl_rd_mask, accu_ctrl_mode, accu_ctrl_addr };
  assign accu_ctrl_pd_T = {  accu_ctrl_dlv_elem_mask_T , accu_ctrl_ram_sel_7_T , accu_ctrl_ram_sel_6_T , accu_ctrl_ram_sel_5_T , accu_ctrl_ram_sel_4_T , accu_ctrl_ram_sel_3_T , accu_ctrl_ram_sel_2_T , accu_ctrl_ram_sel_1_T , accu_ctrl_ram_sel_0_T , accu_ctrl_layer_end_T , accu_ctrl_channel_end_T , accu_ctrl_stripe_end_T , accu_ctrl_rd_mask_T , accu_ctrl_mode_T , accu_ctrl_addr_T  };
  logic [13:0] accu_ctrl_pd_S ;
  assign accu_ctrl_pd_S = 0 ;
  logic [191:0] accu_ctrl_dlv_elem_mask_R1 ;
  logic [191:0] accu_ctrl_dlv_elem_mask_X1 ;
  logic [191:0] accu_ctrl_dlv_elem_mask_C1 ;
  assign accu_ctrl_dlv_elem_mask_R1 = accu_ctrl_pd_R [339:148] ;
  assign accu_ctrl_dlv_elem_mask_X1 = accu_ctrl_pd_X [339:148] ;
  assign accu_ctrl_dlv_elem_mask_C1 = accu_ctrl_pd_C [339:148] ;
  logic [15:0] accu_ctrl_ram_sel_7_R1 ;
  logic [15:0] accu_ctrl_ram_sel_7_X1 ;
  logic [15:0] accu_ctrl_ram_sel_7_C1 ;
  assign accu_ctrl_ram_sel_7_R1 = accu_ctrl_pd_R [147:132] ;
  assign accu_ctrl_ram_sel_7_X1 = accu_ctrl_pd_X [147:132] ;
  assign accu_ctrl_ram_sel_7_C1 = accu_ctrl_pd_C [147:132] ;
  logic [15:0] accu_ctrl_ram_sel_6_R1 ;
  logic [15:0] accu_ctrl_ram_sel_6_X1 ;
  logic [15:0] accu_ctrl_ram_sel_6_C1 ;
  assign accu_ctrl_ram_sel_6_R1 = accu_ctrl_pd_R [131:116] ;
  assign accu_ctrl_ram_sel_6_X1 = accu_ctrl_pd_X [131:116] ;
  assign accu_ctrl_ram_sel_6_C1 = accu_ctrl_pd_C [131:116] ;
  logic [15:0] accu_ctrl_ram_sel_5_R1 ;
  logic [15:0] accu_ctrl_ram_sel_5_X1 ;
  logic [15:0] accu_ctrl_ram_sel_5_C1 ;
  assign accu_ctrl_ram_sel_5_R1 = accu_ctrl_pd_R [115:100] ;
  assign accu_ctrl_ram_sel_5_X1 = accu_ctrl_pd_X [115:100] ;
  assign accu_ctrl_ram_sel_5_C1 = accu_ctrl_pd_C [115:100] ;
  logic [15:0] accu_ctrl_ram_sel_4_R1 ;
  logic [15:0] accu_ctrl_ram_sel_4_X1 ;
  logic [15:0] accu_ctrl_ram_sel_4_C1 ;
  assign accu_ctrl_ram_sel_4_R1 = accu_ctrl_pd_R [99:84] ;
  assign accu_ctrl_ram_sel_4_X1 = accu_ctrl_pd_X [99:84] ;
  assign accu_ctrl_ram_sel_4_C1 = accu_ctrl_pd_C [99:84] ;
  logic [15:0] accu_ctrl_ram_sel_3_R1 ;
  logic [15:0] accu_ctrl_ram_sel_3_X1 ;
  logic [15:0] accu_ctrl_ram_sel_3_C1 ;
  assign accu_ctrl_ram_sel_3_R1 = accu_ctrl_pd_R [83:68] ;
  assign accu_ctrl_ram_sel_3_X1 = accu_ctrl_pd_X [83:68] ;
  assign accu_ctrl_ram_sel_3_C1 = accu_ctrl_pd_C [83:68] ;
  logic [15:0] accu_ctrl_ram_sel_2_R1 ;
  logic [15:0] accu_ctrl_ram_sel_2_X1 ;
  logic [15:0] accu_ctrl_ram_sel_2_C1 ;
  assign accu_ctrl_ram_sel_2_R1 = accu_ctrl_pd_R [67:52] ;
  assign accu_ctrl_ram_sel_2_X1 = accu_ctrl_pd_X [67:52] ;
  assign accu_ctrl_ram_sel_2_C1 = accu_ctrl_pd_C [67:52] ;
  logic [15:0] accu_ctrl_ram_sel_1_R1 ;
  logic [15:0] accu_ctrl_ram_sel_1_X1 ;
  logic [15:0] accu_ctrl_ram_sel_1_C1 ;
  assign accu_ctrl_ram_sel_1_R1 = accu_ctrl_pd_R [51:36] ;
  assign accu_ctrl_ram_sel_1_X1 = accu_ctrl_pd_X [51:36] ;
  assign accu_ctrl_ram_sel_1_C1 = accu_ctrl_pd_C [51:36] ;
  logic [15:0] accu_ctrl_ram_sel_0_R1 ;
  logic [15:0] accu_ctrl_ram_sel_0_X1 ;
  logic [15:0] accu_ctrl_ram_sel_0_C1 ;
  assign accu_ctrl_ram_sel_0_R1 = accu_ctrl_pd_R [35:20] ;
  assign accu_ctrl_ram_sel_0_X1 = accu_ctrl_pd_X [35:20] ;
  assign accu_ctrl_ram_sel_0_C1 = accu_ctrl_pd_C [35:20] ;
  logic [0:0] accu_ctrl_layer_end_R1 ;
  logic [0:0] accu_ctrl_layer_end_X1 ;
  logic [0:0] accu_ctrl_layer_end_C1 ;
  assign accu_ctrl_layer_end_R1 = accu_ctrl_pd_R [19:19] ;
  assign accu_ctrl_layer_end_X1 = accu_ctrl_pd_X [19:19] ;
  assign accu_ctrl_layer_end_C1 = accu_ctrl_pd_C [19:19] ;
  logic [0:0] accu_ctrl_channel_end_R1 ;
  logic [0:0] accu_ctrl_channel_end_X1 ;
  logic [0:0] accu_ctrl_channel_end_C1 ;
  assign accu_ctrl_channel_end_R1 = accu_ctrl_pd_R [18:18] ;
  assign accu_ctrl_channel_end_X1 = accu_ctrl_pd_X [18:18] ;
  assign accu_ctrl_channel_end_C1 = accu_ctrl_pd_C [18:18] ;
  logic [0:0] accu_ctrl_stripe_end_R1 ;
  logic [0:0] accu_ctrl_stripe_end_X1 ;
  logic [0:0] accu_ctrl_stripe_end_C1 ;
  assign accu_ctrl_stripe_end_R1 = accu_ctrl_pd_R [17:17] ;
  assign accu_ctrl_stripe_end_X1 = accu_ctrl_pd_X [17:17] ;
  assign accu_ctrl_stripe_end_C1 = accu_ctrl_pd_C [17:17] ;
  logic [7:0] accu_ctrl_rd_mask_R1 ;
  logic [7:0] accu_ctrl_rd_mask_X1 ;
  logic [7:0] accu_ctrl_rd_mask_C1 ;
  assign accu_ctrl_rd_mask_R1 = accu_ctrl_pd_R [16:9] ;
  assign accu_ctrl_rd_mask_X1 = accu_ctrl_pd_X [16:9] ;
  assign accu_ctrl_rd_mask_C1 = accu_ctrl_pd_C [16:9] ;
  logic [3:0] accu_ctrl_mode_R1 ;
  logic [3:0] accu_ctrl_mode_X1 ;
  logic [3:0] accu_ctrl_mode_C1 ;
  assign accu_ctrl_mode_R1 = accu_ctrl_pd_R [8:5] ;
  assign accu_ctrl_mode_X1 = accu_ctrl_pd_X [8:5] ;
  assign accu_ctrl_mode_C1 = accu_ctrl_pd_C [8:5] ;
  logic [4:0] accu_ctrl_addr_R1 ;
  logic [4:0] accu_ctrl_addr_X1 ;
  logic [4:0] accu_ctrl_addr_C1 ;
  assign accu_ctrl_addr_R1 = accu_ctrl_pd_R [4:0] ;
  assign accu_ctrl_addr_X1 = accu_ctrl_pd_X [4:0] ;
  assign accu_ctrl_addr_C1 = accu_ctrl_pd_C [4:0] ;
  assign accu_ctrl_ram_valid[191:1] = { accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0], accu_ctrl_ram_valid[0] };
  assign accu_ctrl_ram_valid_T [191:1] = {  accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0] , accu_ctrl_ram_valid_T [0]  };
  logic [13:0] accu_ctrl_ram_valid_S ;
  assign accu_ctrl_ram_valid_S = 0 ;
  logic [191:0] accu_ctrl_ram_valid_R1 ;
  logic [191:0] accu_ctrl_ram_valid_X1 ;
  logic [191:0] accu_ctrl_ram_valid_C1 ;
  assign accu_ctrl_ram_valid_R1 [0:0] = accu_ctrl_ram_valid_R [191:191] ;
  assign accu_ctrl_ram_valid_X1 [0:0] = accu_ctrl_ram_valid_X [191:191] ;
  assign accu_ctrl_ram_valid_C1 [0:0] = accu_ctrl_ram_valid_C [191:191] ;
  assign { accu_ctrl_ram_valid_R1 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X1 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C1 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R2 ;
  logic [191:0] accu_ctrl_ram_valid_X2 ;
  logic [191:0] accu_ctrl_ram_valid_C2 ;
  assign accu_ctrl_ram_valid_R2 [0:0] = accu_ctrl_ram_valid_R [190:190] ;
  assign accu_ctrl_ram_valid_X2 [0:0] = accu_ctrl_ram_valid_X [190:190] ;
  assign accu_ctrl_ram_valid_C2 [0:0] = accu_ctrl_ram_valid_C [190:190] ;
  assign { accu_ctrl_ram_valid_R2 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X2 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C2 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R3 ;
  logic [191:0] accu_ctrl_ram_valid_X3 ;
  logic [191:0] accu_ctrl_ram_valid_C3 ;
  assign accu_ctrl_ram_valid_R3 [0:0] = accu_ctrl_ram_valid_R [189:189] ;
  assign accu_ctrl_ram_valid_X3 [0:0] = accu_ctrl_ram_valid_X [189:189] ;
  assign accu_ctrl_ram_valid_C3 [0:0] = accu_ctrl_ram_valid_C [189:189] ;
  assign { accu_ctrl_ram_valid_R3 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X3 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C3 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R4 ;
  logic [191:0] accu_ctrl_ram_valid_X4 ;
  logic [191:0] accu_ctrl_ram_valid_C4 ;
  assign accu_ctrl_ram_valid_R4 [0:0] = accu_ctrl_ram_valid_R [188:188] ;
  assign accu_ctrl_ram_valid_X4 [0:0] = accu_ctrl_ram_valid_X [188:188] ;
  assign accu_ctrl_ram_valid_C4 [0:0] = accu_ctrl_ram_valid_C [188:188] ;
  assign { accu_ctrl_ram_valid_R4 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X4 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C4 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R5 ;
  logic [191:0] accu_ctrl_ram_valid_X5 ;
  logic [191:0] accu_ctrl_ram_valid_C5 ;
  assign accu_ctrl_ram_valid_R5 [0:0] = accu_ctrl_ram_valid_R [187:187] ;
  assign accu_ctrl_ram_valid_X5 [0:0] = accu_ctrl_ram_valid_X [187:187] ;
  assign accu_ctrl_ram_valid_C5 [0:0] = accu_ctrl_ram_valid_C [187:187] ;
  assign { accu_ctrl_ram_valid_R5 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X5 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C5 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R6 ;
  logic [191:0] accu_ctrl_ram_valid_X6 ;
  logic [191:0] accu_ctrl_ram_valid_C6 ;
  assign accu_ctrl_ram_valid_R6 [0:0] = accu_ctrl_ram_valid_R [186:186] ;
  assign accu_ctrl_ram_valid_X6 [0:0] = accu_ctrl_ram_valid_X [186:186] ;
  assign accu_ctrl_ram_valid_C6 [0:0] = accu_ctrl_ram_valid_C [186:186] ;
  assign { accu_ctrl_ram_valid_R6 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X6 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C6 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R7 ;
  logic [191:0] accu_ctrl_ram_valid_X7 ;
  logic [191:0] accu_ctrl_ram_valid_C7 ;
  assign accu_ctrl_ram_valid_R7 [0:0] = accu_ctrl_ram_valid_R [185:185] ;
  assign accu_ctrl_ram_valid_X7 [0:0] = accu_ctrl_ram_valid_X [185:185] ;
  assign accu_ctrl_ram_valid_C7 [0:0] = accu_ctrl_ram_valid_C [185:185] ;
  assign { accu_ctrl_ram_valid_R7 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X7 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C7 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R8 ;
  logic [191:0] accu_ctrl_ram_valid_X8 ;
  logic [191:0] accu_ctrl_ram_valid_C8 ;
  assign accu_ctrl_ram_valid_R8 [0:0] = accu_ctrl_ram_valid_R [184:184] ;
  assign accu_ctrl_ram_valid_X8 [0:0] = accu_ctrl_ram_valid_X [184:184] ;
  assign accu_ctrl_ram_valid_C8 [0:0] = accu_ctrl_ram_valid_C [184:184] ;
  assign { accu_ctrl_ram_valid_R8 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X8 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C8 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R9 ;
  logic [191:0] accu_ctrl_ram_valid_X9 ;
  logic [191:0] accu_ctrl_ram_valid_C9 ;
  assign accu_ctrl_ram_valid_R9 [0:0] = accu_ctrl_ram_valid_R [183:183] ;
  assign accu_ctrl_ram_valid_X9 [0:0] = accu_ctrl_ram_valid_X [183:183] ;
  assign accu_ctrl_ram_valid_C9 [0:0] = accu_ctrl_ram_valid_C [183:183] ;
  assign { accu_ctrl_ram_valid_R9 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X9 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C9 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R10 ;
  logic [191:0] accu_ctrl_ram_valid_X10 ;
  logic [191:0] accu_ctrl_ram_valid_C10 ;
  assign accu_ctrl_ram_valid_R10 [0:0] = accu_ctrl_ram_valid_R [182:182] ;
  assign accu_ctrl_ram_valid_X10 [0:0] = accu_ctrl_ram_valid_X [182:182] ;
  assign accu_ctrl_ram_valid_C10 [0:0] = accu_ctrl_ram_valid_C [182:182] ;
  assign { accu_ctrl_ram_valid_R10 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X10 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C10 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R11 ;
  logic [191:0] accu_ctrl_ram_valid_X11 ;
  logic [191:0] accu_ctrl_ram_valid_C11 ;
  assign accu_ctrl_ram_valid_R11 [0:0] = accu_ctrl_ram_valid_R [181:181] ;
  assign accu_ctrl_ram_valid_X11 [0:0] = accu_ctrl_ram_valid_X [181:181] ;
  assign accu_ctrl_ram_valid_C11 [0:0] = accu_ctrl_ram_valid_C [181:181] ;
  assign { accu_ctrl_ram_valid_R11 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X11 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C11 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R12 ;
  logic [191:0] accu_ctrl_ram_valid_X12 ;
  logic [191:0] accu_ctrl_ram_valid_C12 ;
  assign accu_ctrl_ram_valid_R12 [0:0] = accu_ctrl_ram_valid_R [180:180] ;
  assign accu_ctrl_ram_valid_X12 [0:0] = accu_ctrl_ram_valid_X [180:180] ;
  assign accu_ctrl_ram_valid_C12 [0:0] = accu_ctrl_ram_valid_C [180:180] ;
  assign { accu_ctrl_ram_valid_R12 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X12 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C12 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R13 ;
  logic [191:0] accu_ctrl_ram_valid_X13 ;
  logic [191:0] accu_ctrl_ram_valid_C13 ;
  assign accu_ctrl_ram_valid_R13 [0:0] = accu_ctrl_ram_valid_R [179:179] ;
  assign accu_ctrl_ram_valid_X13 [0:0] = accu_ctrl_ram_valid_X [179:179] ;
  assign accu_ctrl_ram_valid_C13 [0:0] = accu_ctrl_ram_valid_C [179:179] ;
  assign { accu_ctrl_ram_valid_R13 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X13 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C13 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R14 ;
  logic [191:0] accu_ctrl_ram_valid_X14 ;
  logic [191:0] accu_ctrl_ram_valid_C14 ;
  assign accu_ctrl_ram_valid_R14 [0:0] = accu_ctrl_ram_valid_R [178:178] ;
  assign accu_ctrl_ram_valid_X14 [0:0] = accu_ctrl_ram_valid_X [178:178] ;
  assign accu_ctrl_ram_valid_C14 [0:0] = accu_ctrl_ram_valid_C [178:178] ;
  assign { accu_ctrl_ram_valid_R14 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X14 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C14 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R15 ;
  logic [191:0] accu_ctrl_ram_valid_X15 ;
  logic [191:0] accu_ctrl_ram_valid_C15 ;
  assign accu_ctrl_ram_valid_R15 [0:0] = accu_ctrl_ram_valid_R [177:177] ;
  assign accu_ctrl_ram_valid_X15 [0:0] = accu_ctrl_ram_valid_X [177:177] ;
  assign accu_ctrl_ram_valid_C15 [0:0] = accu_ctrl_ram_valid_C [177:177] ;
  assign { accu_ctrl_ram_valid_R15 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X15 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C15 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R16 ;
  logic [191:0] accu_ctrl_ram_valid_X16 ;
  logic [191:0] accu_ctrl_ram_valid_C16 ;
  assign accu_ctrl_ram_valid_R16 [0:0] = accu_ctrl_ram_valid_R [176:176] ;
  assign accu_ctrl_ram_valid_X16 [0:0] = accu_ctrl_ram_valid_X [176:176] ;
  assign accu_ctrl_ram_valid_C16 [0:0] = accu_ctrl_ram_valid_C [176:176] ;
  assign { accu_ctrl_ram_valid_R16 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X16 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C16 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R17 ;
  logic [191:0] accu_ctrl_ram_valid_X17 ;
  logic [191:0] accu_ctrl_ram_valid_C17 ;
  assign accu_ctrl_ram_valid_R17 [0:0] = accu_ctrl_ram_valid_R [175:175] ;
  assign accu_ctrl_ram_valid_X17 [0:0] = accu_ctrl_ram_valid_X [175:175] ;
  assign accu_ctrl_ram_valid_C17 [0:0] = accu_ctrl_ram_valid_C [175:175] ;
  assign { accu_ctrl_ram_valid_R17 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X17 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C17 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R18 ;
  logic [191:0] accu_ctrl_ram_valid_X18 ;
  logic [191:0] accu_ctrl_ram_valid_C18 ;
  assign accu_ctrl_ram_valid_R18 [0:0] = accu_ctrl_ram_valid_R [174:174] ;
  assign accu_ctrl_ram_valid_X18 [0:0] = accu_ctrl_ram_valid_X [174:174] ;
  assign accu_ctrl_ram_valid_C18 [0:0] = accu_ctrl_ram_valid_C [174:174] ;
  assign { accu_ctrl_ram_valid_R18 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X18 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C18 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R19 ;
  logic [191:0] accu_ctrl_ram_valid_X19 ;
  logic [191:0] accu_ctrl_ram_valid_C19 ;
  assign accu_ctrl_ram_valid_R19 [0:0] = accu_ctrl_ram_valid_R [173:173] ;
  assign accu_ctrl_ram_valid_X19 [0:0] = accu_ctrl_ram_valid_X [173:173] ;
  assign accu_ctrl_ram_valid_C19 [0:0] = accu_ctrl_ram_valid_C [173:173] ;
  assign { accu_ctrl_ram_valid_R19 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X19 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C19 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R20 ;
  logic [191:0] accu_ctrl_ram_valid_X20 ;
  logic [191:0] accu_ctrl_ram_valid_C20 ;
  assign accu_ctrl_ram_valid_R20 [0:0] = accu_ctrl_ram_valid_R [172:172] ;
  assign accu_ctrl_ram_valid_X20 [0:0] = accu_ctrl_ram_valid_X [172:172] ;
  assign accu_ctrl_ram_valid_C20 [0:0] = accu_ctrl_ram_valid_C [172:172] ;
  assign { accu_ctrl_ram_valid_R20 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X20 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C20 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R21 ;
  logic [191:0] accu_ctrl_ram_valid_X21 ;
  logic [191:0] accu_ctrl_ram_valid_C21 ;
  assign accu_ctrl_ram_valid_R21 [0:0] = accu_ctrl_ram_valid_R [171:171] ;
  assign accu_ctrl_ram_valid_X21 [0:0] = accu_ctrl_ram_valid_X [171:171] ;
  assign accu_ctrl_ram_valid_C21 [0:0] = accu_ctrl_ram_valid_C [171:171] ;
  assign { accu_ctrl_ram_valid_R21 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X21 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C21 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R22 ;
  logic [191:0] accu_ctrl_ram_valid_X22 ;
  logic [191:0] accu_ctrl_ram_valid_C22 ;
  assign accu_ctrl_ram_valid_R22 [0:0] = accu_ctrl_ram_valid_R [170:170] ;
  assign accu_ctrl_ram_valid_X22 [0:0] = accu_ctrl_ram_valid_X [170:170] ;
  assign accu_ctrl_ram_valid_C22 [0:0] = accu_ctrl_ram_valid_C [170:170] ;
  assign { accu_ctrl_ram_valid_R22 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X22 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C22 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R23 ;
  logic [191:0] accu_ctrl_ram_valid_X23 ;
  logic [191:0] accu_ctrl_ram_valid_C23 ;
  assign accu_ctrl_ram_valid_R23 [0:0] = accu_ctrl_ram_valid_R [169:169] ;
  assign accu_ctrl_ram_valid_X23 [0:0] = accu_ctrl_ram_valid_X [169:169] ;
  assign accu_ctrl_ram_valid_C23 [0:0] = accu_ctrl_ram_valid_C [169:169] ;
  assign { accu_ctrl_ram_valid_R23 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X23 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C23 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R24 ;
  logic [191:0] accu_ctrl_ram_valid_X24 ;
  logic [191:0] accu_ctrl_ram_valid_C24 ;
  assign accu_ctrl_ram_valid_R24 [0:0] = accu_ctrl_ram_valid_R [168:168] ;
  assign accu_ctrl_ram_valid_X24 [0:0] = accu_ctrl_ram_valid_X [168:168] ;
  assign accu_ctrl_ram_valid_C24 [0:0] = accu_ctrl_ram_valid_C [168:168] ;
  assign { accu_ctrl_ram_valid_R24 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X24 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C24 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R25 ;
  logic [191:0] accu_ctrl_ram_valid_X25 ;
  logic [191:0] accu_ctrl_ram_valid_C25 ;
  assign accu_ctrl_ram_valid_R25 [0:0] = accu_ctrl_ram_valid_R [167:167] ;
  assign accu_ctrl_ram_valid_X25 [0:0] = accu_ctrl_ram_valid_X [167:167] ;
  assign accu_ctrl_ram_valid_C25 [0:0] = accu_ctrl_ram_valid_C [167:167] ;
  assign { accu_ctrl_ram_valid_R25 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X25 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C25 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R26 ;
  logic [191:0] accu_ctrl_ram_valid_X26 ;
  logic [191:0] accu_ctrl_ram_valid_C26 ;
  assign accu_ctrl_ram_valid_R26 [0:0] = accu_ctrl_ram_valid_R [166:166] ;
  assign accu_ctrl_ram_valid_X26 [0:0] = accu_ctrl_ram_valid_X [166:166] ;
  assign accu_ctrl_ram_valid_C26 [0:0] = accu_ctrl_ram_valid_C [166:166] ;
  assign { accu_ctrl_ram_valid_R26 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X26 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C26 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R27 ;
  logic [191:0] accu_ctrl_ram_valid_X27 ;
  logic [191:0] accu_ctrl_ram_valid_C27 ;
  assign accu_ctrl_ram_valid_R27 [0:0] = accu_ctrl_ram_valid_R [165:165] ;
  assign accu_ctrl_ram_valid_X27 [0:0] = accu_ctrl_ram_valid_X [165:165] ;
  assign accu_ctrl_ram_valid_C27 [0:0] = accu_ctrl_ram_valid_C [165:165] ;
  assign { accu_ctrl_ram_valid_R27 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X27 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C27 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R28 ;
  logic [191:0] accu_ctrl_ram_valid_X28 ;
  logic [191:0] accu_ctrl_ram_valid_C28 ;
  assign accu_ctrl_ram_valid_R28 [0:0] = accu_ctrl_ram_valid_R [164:164] ;
  assign accu_ctrl_ram_valid_X28 [0:0] = accu_ctrl_ram_valid_X [164:164] ;
  assign accu_ctrl_ram_valid_C28 [0:0] = accu_ctrl_ram_valid_C [164:164] ;
  assign { accu_ctrl_ram_valid_R28 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X28 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C28 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R29 ;
  logic [191:0] accu_ctrl_ram_valid_X29 ;
  logic [191:0] accu_ctrl_ram_valid_C29 ;
  assign accu_ctrl_ram_valid_R29 [0:0] = accu_ctrl_ram_valid_R [163:163] ;
  assign accu_ctrl_ram_valid_X29 [0:0] = accu_ctrl_ram_valid_X [163:163] ;
  assign accu_ctrl_ram_valid_C29 [0:0] = accu_ctrl_ram_valid_C [163:163] ;
  assign { accu_ctrl_ram_valid_R29 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X29 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C29 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R30 ;
  logic [191:0] accu_ctrl_ram_valid_X30 ;
  logic [191:0] accu_ctrl_ram_valid_C30 ;
  assign accu_ctrl_ram_valid_R30 [0:0] = accu_ctrl_ram_valid_R [162:162] ;
  assign accu_ctrl_ram_valid_X30 [0:0] = accu_ctrl_ram_valid_X [162:162] ;
  assign accu_ctrl_ram_valid_C30 [0:0] = accu_ctrl_ram_valid_C [162:162] ;
  assign { accu_ctrl_ram_valid_R30 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X30 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C30 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R31 ;
  logic [191:0] accu_ctrl_ram_valid_X31 ;
  logic [191:0] accu_ctrl_ram_valid_C31 ;
  assign accu_ctrl_ram_valid_R31 [0:0] = accu_ctrl_ram_valid_R [161:161] ;
  assign accu_ctrl_ram_valid_X31 [0:0] = accu_ctrl_ram_valid_X [161:161] ;
  assign accu_ctrl_ram_valid_C31 [0:0] = accu_ctrl_ram_valid_C [161:161] ;
  assign { accu_ctrl_ram_valid_R31 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X31 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C31 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R32 ;
  logic [191:0] accu_ctrl_ram_valid_X32 ;
  logic [191:0] accu_ctrl_ram_valid_C32 ;
  assign accu_ctrl_ram_valid_R32 [0:0] = accu_ctrl_ram_valid_R [160:160] ;
  assign accu_ctrl_ram_valid_X32 [0:0] = accu_ctrl_ram_valid_X [160:160] ;
  assign accu_ctrl_ram_valid_C32 [0:0] = accu_ctrl_ram_valid_C [160:160] ;
  assign { accu_ctrl_ram_valid_R32 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X32 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C32 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R33 ;
  logic [191:0] accu_ctrl_ram_valid_X33 ;
  logic [191:0] accu_ctrl_ram_valid_C33 ;
  assign accu_ctrl_ram_valid_R33 [0:0] = accu_ctrl_ram_valid_R [159:159] ;
  assign accu_ctrl_ram_valid_X33 [0:0] = accu_ctrl_ram_valid_X [159:159] ;
  assign accu_ctrl_ram_valid_C33 [0:0] = accu_ctrl_ram_valid_C [159:159] ;
  assign { accu_ctrl_ram_valid_R33 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X33 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C33 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R34 ;
  logic [191:0] accu_ctrl_ram_valid_X34 ;
  logic [191:0] accu_ctrl_ram_valid_C34 ;
  assign accu_ctrl_ram_valid_R34 [0:0] = accu_ctrl_ram_valid_R [158:158] ;
  assign accu_ctrl_ram_valid_X34 [0:0] = accu_ctrl_ram_valid_X [158:158] ;
  assign accu_ctrl_ram_valid_C34 [0:0] = accu_ctrl_ram_valid_C [158:158] ;
  assign { accu_ctrl_ram_valid_R34 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X34 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C34 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R35 ;
  logic [191:0] accu_ctrl_ram_valid_X35 ;
  logic [191:0] accu_ctrl_ram_valid_C35 ;
  assign accu_ctrl_ram_valid_R35 [0:0] = accu_ctrl_ram_valid_R [157:157] ;
  assign accu_ctrl_ram_valid_X35 [0:0] = accu_ctrl_ram_valid_X [157:157] ;
  assign accu_ctrl_ram_valid_C35 [0:0] = accu_ctrl_ram_valid_C [157:157] ;
  assign { accu_ctrl_ram_valid_R35 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X35 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C35 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R36 ;
  logic [191:0] accu_ctrl_ram_valid_X36 ;
  logic [191:0] accu_ctrl_ram_valid_C36 ;
  assign accu_ctrl_ram_valid_R36 [0:0] = accu_ctrl_ram_valid_R [156:156] ;
  assign accu_ctrl_ram_valid_X36 [0:0] = accu_ctrl_ram_valid_X [156:156] ;
  assign accu_ctrl_ram_valid_C36 [0:0] = accu_ctrl_ram_valid_C [156:156] ;
  assign { accu_ctrl_ram_valid_R36 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X36 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C36 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R37 ;
  logic [191:0] accu_ctrl_ram_valid_X37 ;
  logic [191:0] accu_ctrl_ram_valid_C37 ;
  assign accu_ctrl_ram_valid_R37 [0:0] = accu_ctrl_ram_valid_R [155:155] ;
  assign accu_ctrl_ram_valid_X37 [0:0] = accu_ctrl_ram_valid_X [155:155] ;
  assign accu_ctrl_ram_valid_C37 [0:0] = accu_ctrl_ram_valid_C [155:155] ;
  assign { accu_ctrl_ram_valid_R37 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X37 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C37 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R38 ;
  logic [191:0] accu_ctrl_ram_valid_X38 ;
  logic [191:0] accu_ctrl_ram_valid_C38 ;
  assign accu_ctrl_ram_valid_R38 [0:0] = accu_ctrl_ram_valid_R [154:154] ;
  assign accu_ctrl_ram_valid_X38 [0:0] = accu_ctrl_ram_valid_X [154:154] ;
  assign accu_ctrl_ram_valid_C38 [0:0] = accu_ctrl_ram_valid_C [154:154] ;
  assign { accu_ctrl_ram_valid_R38 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X38 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C38 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R39 ;
  logic [191:0] accu_ctrl_ram_valid_X39 ;
  logic [191:0] accu_ctrl_ram_valid_C39 ;
  assign accu_ctrl_ram_valid_R39 [0:0] = accu_ctrl_ram_valid_R [153:153] ;
  assign accu_ctrl_ram_valid_X39 [0:0] = accu_ctrl_ram_valid_X [153:153] ;
  assign accu_ctrl_ram_valid_C39 [0:0] = accu_ctrl_ram_valid_C [153:153] ;
  assign { accu_ctrl_ram_valid_R39 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X39 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C39 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R40 ;
  logic [191:0] accu_ctrl_ram_valid_X40 ;
  logic [191:0] accu_ctrl_ram_valid_C40 ;
  assign accu_ctrl_ram_valid_R40 [0:0] = accu_ctrl_ram_valid_R [152:152] ;
  assign accu_ctrl_ram_valid_X40 [0:0] = accu_ctrl_ram_valid_X [152:152] ;
  assign accu_ctrl_ram_valid_C40 [0:0] = accu_ctrl_ram_valid_C [152:152] ;
  assign { accu_ctrl_ram_valid_R40 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X40 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C40 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R41 ;
  logic [191:0] accu_ctrl_ram_valid_X41 ;
  logic [191:0] accu_ctrl_ram_valid_C41 ;
  assign accu_ctrl_ram_valid_R41 [0:0] = accu_ctrl_ram_valid_R [151:151] ;
  assign accu_ctrl_ram_valid_X41 [0:0] = accu_ctrl_ram_valid_X [151:151] ;
  assign accu_ctrl_ram_valid_C41 [0:0] = accu_ctrl_ram_valid_C [151:151] ;
  assign { accu_ctrl_ram_valid_R41 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X41 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C41 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R42 ;
  logic [191:0] accu_ctrl_ram_valid_X42 ;
  logic [191:0] accu_ctrl_ram_valid_C42 ;
  assign accu_ctrl_ram_valid_R42 [0:0] = accu_ctrl_ram_valid_R [150:150] ;
  assign accu_ctrl_ram_valid_X42 [0:0] = accu_ctrl_ram_valid_X [150:150] ;
  assign accu_ctrl_ram_valid_C42 [0:0] = accu_ctrl_ram_valid_C [150:150] ;
  assign { accu_ctrl_ram_valid_R42 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X42 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C42 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R43 ;
  logic [191:0] accu_ctrl_ram_valid_X43 ;
  logic [191:0] accu_ctrl_ram_valid_C43 ;
  assign accu_ctrl_ram_valid_R43 [0:0] = accu_ctrl_ram_valid_R [149:149] ;
  assign accu_ctrl_ram_valid_X43 [0:0] = accu_ctrl_ram_valid_X [149:149] ;
  assign accu_ctrl_ram_valid_C43 [0:0] = accu_ctrl_ram_valid_C [149:149] ;
  assign { accu_ctrl_ram_valid_R43 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X43 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C43 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R44 ;
  logic [191:0] accu_ctrl_ram_valid_X44 ;
  logic [191:0] accu_ctrl_ram_valid_C44 ;
  assign accu_ctrl_ram_valid_R44 [0:0] = accu_ctrl_ram_valid_R [148:148] ;
  assign accu_ctrl_ram_valid_X44 [0:0] = accu_ctrl_ram_valid_X [148:148] ;
  assign accu_ctrl_ram_valid_C44 [0:0] = accu_ctrl_ram_valid_C [148:148] ;
  assign { accu_ctrl_ram_valid_R44 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X44 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C44 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R45 ;
  logic [191:0] accu_ctrl_ram_valid_X45 ;
  logic [191:0] accu_ctrl_ram_valid_C45 ;
  assign accu_ctrl_ram_valid_R45 [0:0] = accu_ctrl_ram_valid_R [147:147] ;
  assign accu_ctrl_ram_valid_X45 [0:0] = accu_ctrl_ram_valid_X [147:147] ;
  assign accu_ctrl_ram_valid_C45 [0:0] = accu_ctrl_ram_valid_C [147:147] ;
  assign { accu_ctrl_ram_valid_R45 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X45 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C45 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R46 ;
  logic [191:0] accu_ctrl_ram_valid_X46 ;
  logic [191:0] accu_ctrl_ram_valid_C46 ;
  assign accu_ctrl_ram_valid_R46 [0:0] = accu_ctrl_ram_valid_R [146:146] ;
  assign accu_ctrl_ram_valid_X46 [0:0] = accu_ctrl_ram_valid_X [146:146] ;
  assign accu_ctrl_ram_valid_C46 [0:0] = accu_ctrl_ram_valid_C [146:146] ;
  assign { accu_ctrl_ram_valid_R46 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X46 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C46 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R47 ;
  logic [191:0] accu_ctrl_ram_valid_X47 ;
  logic [191:0] accu_ctrl_ram_valid_C47 ;
  assign accu_ctrl_ram_valid_R47 [0:0] = accu_ctrl_ram_valid_R [145:145] ;
  assign accu_ctrl_ram_valid_X47 [0:0] = accu_ctrl_ram_valid_X [145:145] ;
  assign accu_ctrl_ram_valid_C47 [0:0] = accu_ctrl_ram_valid_C [145:145] ;
  assign { accu_ctrl_ram_valid_R47 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X47 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C47 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R48 ;
  logic [191:0] accu_ctrl_ram_valid_X48 ;
  logic [191:0] accu_ctrl_ram_valid_C48 ;
  assign accu_ctrl_ram_valid_R48 [0:0] = accu_ctrl_ram_valid_R [144:144] ;
  assign accu_ctrl_ram_valid_X48 [0:0] = accu_ctrl_ram_valid_X [144:144] ;
  assign accu_ctrl_ram_valid_C48 [0:0] = accu_ctrl_ram_valid_C [144:144] ;
  assign { accu_ctrl_ram_valid_R48 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X48 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C48 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R49 ;
  logic [191:0] accu_ctrl_ram_valid_X49 ;
  logic [191:0] accu_ctrl_ram_valid_C49 ;
  assign accu_ctrl_ram_valid_R49 [0:0] = accu_ctrl_ram_valid_R [143:143] ;
  assign accu_ctrl_ram_valid_X49 [0:0] = accu_ctrl_ram_valid_X [143:143] ;
  assign accu_ctrl_ram_valid_C49 [0:0] = accu_ctrl_ram_valid_C [143:143] ;
  assign { accu_ctrl_ram_valid_R49 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X49 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C49 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R50 ;
  logic [191:0] accu_ctrl_ram_valid_X50 ;
  logic [191:0] accu_ctrl_ram_valid_C50 ;
  assign accu_ctrl_ram_valid_R50 [0:0] = accu_ctrl_ram_valid_R [142:142] ;
  assign accu_ctrl_ram_valid_X50 [0:0] = accu_ctrl_ram_valid_X [142:142] ;
  assign accu_ctrl_ram_valid_C50 [0:0] = accu_ctrl_ram_valid_C [142:142] ;
  assign { accu_ctrl_ram_valid_R50 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X50 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C50 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R51 ;
  logic [191:0] accu_ctrl_ram_valid_X51 ;
  logic [191:0] accu_ctrl_ram_valid_C51 ;
  assign accu_ctrl_ram_valid_R51 [0:0] = accu_ctrl_ram_valid_R [141:141] ;
  assign accu_ctrl_ram_valid_X51 [0:0] = accu_ctrl_ram_valid_X [141:141] ;
  assign accu_ctrl_ram_valid_C51 [0:0] = accu_ctrl_ram_valid_C [141:141] ;
  assign { accu_ctrl_ram_valid_R51 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X51 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C51 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R52 ;
  logic [191:0] accu_ctrl_ram_valid_X52 ;
  logic [191:0] accu_ctrl_ram_valid_C52 ;
  assign accu_ctrl_ram_valid_R52 [0:0] = accu_ctrl_ram_valid_R [140:140] ;
  assign accu_ctrl_ram_valid_X52 [0:0] = accu_ctrl_ram_valid_X [140:140] ;
  assign accu_ctrl_ram_valid_C52 [0:0] = accu_ctrl_ram_valid_C [140:140] ;
  assign { accu_ctrl_ram_valid_R52 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X52 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C52 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R53 ;
  logic [191:0] accu_ctrl_ram_valid_X53 ;
  logic [191:0] accu_ctrl_ram_valid_C53 ;
  assign accu_ctrl_ram_valid_R53 [0:0] = accu_ctrl_ram_valid_R [139:139] ;
  assign accu_ctrl_ram_valid_X53 [0:0] = accu_ctrl_ram_valid_X [139:139] ;
  assign accu_ctrl_ram_valid_C53 [0:0] = accu_ctrl_ram_valid_C [139:139] ;
  assign { accu_ctrl_ram_valid_R53 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X53 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C53 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R54 ;
  logic [191:0] accu_ctrl_ram_valid_X54 ;
  logic [191:0] accu_ctrl_ram_valid_C54 ;
  assign accu_ctrl_ram_valid_R54 [0:0] = accu_ctrl_ram_valid_R [138:138] ;
  assign accu_ctrl_ram_valid_X54 [0:0] = accu_ctrl_ram_valid_X [138:138] ;
  assign accu_ctrl_ram_valid_C54 [0:0] = accu_ctrl_ram_valid_C [138:138] ;
  assign { accu_ctrl_ram_valid_R54 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X54 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C54 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R55 ;
  logic [191:0] accu_ctrl_ram_valid_X55 ;
  logic [191:0] accu_ctrl_ram_valid_C55 ;
  assign accu_ctrl_ram_valid_R55 [0:0] = accu_ctrl_ram_valid_R [137:137] ;
  assign accu_ctrl_ram_valid_X55 [0:0] = accu_ctrl_ram_valid_X [137:137] ;
  assign accu_ctrl_ram_valid_C55 [0:0] = accu_ctrl_ram_valid_C [137:137] ;
  assign { accu_ctrl_ram_valid_R55 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X55 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C55 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R56 ;
  logic [191:0] accu_ctrl_ram_valid_X56 ;
  logic [191:0] accu_ctrl_ram_valid_C56 ;
  assign accu_ctrl_ram_valid_R56 [0:0] = accu_ctrl_ram_valid_R [136:136] ;
  assign accu_ctrl_ram_valid_X56 [0:0] = accu_ctrl_ram_valid_X [136:136] ;
  assign accu_ctrl_ram_valid_C56 [0:0] = accu_ctrl_ram_valid_C [136:136] ;
  assign { accu_ctrl_ram_valid_R56 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X56 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C56 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R57 ;
  logic [191:0] accu_ctrl_ram_valid_X57 ;
  logic [191:0] accu_ctrl_ram_valid_C57 ;
  assign accu_ctrl_ram_valid_R57 [0:0] = accu_ctrl_ram_valid_R [135:135] ;
  assign accu_ctrl_ram_valid_X57 [0:0] = accu_ctrl_ram_valid_X [135:135] ;
  assign accu_ctrl_ram_valid_C57 [0:0] = accu_ctrl_ram_valid_C [135:135] ;
  assign { accu_ctrl_ram_valid_R57 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X57 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C57 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R58 ;
  logic [191:0] accu_ctrl_ram_valid_X58 ;
  logic [191:0] accu_ctrl_ram_valid_C58 ;
  assign accu_ctrl_ram_valid_R58 [0:0] = accu_ctrl_ram_valid_R [134:134] ;
  assign accu_ctrl_ram_valid_X58 [0:0] = accu_ctrl_ram_valid_X [134:134] ;
  assign accu_ctrl_ram_valid_C58 [0:0] = accu_ctrl_ram_valid_C [134:134] ;
  assign { accu_ctrl_ram_valid_R58 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X58 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C58 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R59 ;
  logic [191:0] accu_ctrl_ram_valid_X59 ;
  logic [191:0] accu_ctrl_ram_valid_C59 ;
  assign accu_ctrl_ram_valid_R59 [0:0] = accu_ctrl_ram_valid_R [133:133] ;
  assign accu_ctrl_ram_valid_X59 [0:0] = accu_ctrl_ram_valid_X [133:133] ;
  assign accu_ctrl_ram_valid_C59 [0:0] = accu_ctrl_ram_valid_C [133:133] ;
  assign { accu_ctrl_ram_valid_R59 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X59 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C59 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R60 ;
  logic [191:0] accu_ctrl_ram_valid_X60 ;
  logic [191:0] accu_ctrl_ram_valid_C60 ;
  assign accu_ctrl_ram_valid_R60 [0:0] = accu_ctrl_ram_valid_R [132:132] ;
  assign accu_ctrl_ram_valid_X60 [0:0] = accu_ctrl_ram_valid_X [132:132] ;
  assign accu_ctrl_ram_valid_C60 [0:0] = accu_ctrl_ram_valid_C [132:132] ;
  assign { accu_ctrl_ram_valid_R60 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X60 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C60 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R61 ;
  logic [191:0] accu_ctrl_ram_valid_X61 ;
  logic [191:0] accu_ctrl_ram_valid_C61 ;
  assign accu_ctrl_ram_valid_R61 [0:0] = accu_ctrl_ram_valid_R [131:131] ;
  assign accu_ctrl_ram_valid_X61 [0:0] = accu_ctrl_ram_valid_X [131:131] ;
  assign accu_ctrl_ram_valid_C61 [0:0] = accu_ctrl_ram_valid_C [131:131] ;
  assign { accu_ctrl_ram_valid_R61 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X61 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C61 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R62 ;
  logic [191:0] accu_ctrl_ram_valid_X62 ;
  logic [191:0] accu_ctrl_ram_valid_C62 ;
  assign accu_ctrl_ram_valid_R62 [0:0] = accu_ctrl_ram_valid_R [130:130] ;
  assign accu_ctrl_ram_valid_X62 [0:0] = accu_ctrl_ram_valid_X [130:130] ;
  assign accu_ctrl_ram_valid_C62 [0:0] = accu_ctrl_ram_valid_C [130:130] ;
  assign { accu_ctrl_ram_valid_R62 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X62 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C62 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R63 ;
  logic [191:0] accu_ctrl_ram_valid_X63 ;
  logic [191:0] accu_ctrl_ram_valid_C63 ;
  assign accu_ctrl_ram_valid_R63 [0:0] = accu_ctrl_ram_valid_R [129:129] ;
  assign accu_ctrl_ram_valid_X63 [0:0] = accu_ctrl_ram_valid_X [129:129] ;
  assign accu_ctrl_ram_valid_C63 [0:0] = accu_ctrl_ram_valid_C [129:129] ;
  assign { accu_ctrl_ram_valid_R63 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X63 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C63 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R64 ;
  logic [191:0] accu_ctrl_ram_valid_X64 ;
  logic [191:0] accu_ctrl_ram_valid_C64 ;
  assign accu_ctrl_ram_valid_R64 [0:0] = accu_ctrl_ram_valid_R [128:128] ;
  assign accu_ctrl_ram_valid_X64 [0:0] = accu_ctrl_ram_valid_X [128:128] ;
  assign accu_ctrl_ram_valid_C64 [0:0] = accu_ctrl_ram_valid_C [128:128] ;
  assign { accu_ctrl_ram_valid_R64 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X64 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C64 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R65 ;
  logic [191:0] accu_ctrl_ram_valid_X65 ;
  logic [191:0] accu_ctrl_ram_valid_C65 ;
  assign accu_ctrl_ram_valid_R65 [0:0] = accu_ctrl_ram_valid_R [127:127] ;
  assign accu_ctrl_ram_valid_X65 [0:0] = accu_ctrl_ram_valid_X [127:127] ;
  assign accu_ctrl_ram_valid_C65 [0:0] = accu_ctrl_ram_valid_C [127:127] ;
  assign { accu_ctrl_ram_valid_R65 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X65 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C65 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R66 ;
  logic [191:0] accu_ctrl_ram_valid_X66 ;
  logic [191:0] accu_ctrl_ram_valid_C66 ;
  assign accu_ctrl_ram_valid_R66 [0:0] = accu_ctrl_ram_valid_R [126:126] ;
  assign accu_ctrl_ram_valid_X66 [0:0] = accu_ctrl_ram_valid_X [126:126] ;
  assign accu_ctrl_ram_valid_C66 [0:0] = accu_ctrl_ram_valid_C [126:126] ;
  assign { accu_ctrl_ram_valid_R66 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X66 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C66 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R67 ;
  logic [191:0] accu_ctrl_ram_valid_X67 ;
  logic [191:0] accu_ctrl_ram_valid_C67 ;
  assign accu_ctrl_ram_valid_R67 [0:0] = accu_ctrl_ram_valid_R [125:125] ;
  assign accu_ctrl_ram_valid_X67 [0:0] = accu_ctrl_ram_valid_X [125:125] ;
  assign accu_ctrl_ram_valid_C67 [0:0] = accu_ctrl_ram_valid_C [125:125] ;
  assign { accu_ctrl_ram_valid_R67 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X67 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C67 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R68 ;
  logic [191:0] accu_ctrl_ram_valid_X68 ;
  logic [191:0] accu_ctrl_ram_valid_C68 ;
  assign accu_ctrl_ram_valid_R68 [0:0] = accu_ctrl_ram_valid_R [124:124] ;
  assign accu_ctrl_ram_valid_X68 [0:0] = accu_ctrl_ram_valid_X [124:124] ;
  assign accu_ctrl_ram_valid_C68 [0:0] = accu_ctrl_ram_valid_C [124:124] ;
  assign { accu_ctrl_ram_valid_R68 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X68 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C68 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R69 ;
  logic [191:0] accu_ctrl_ram_valid_X69 ;
  logic [191:0] accu_ctrl_ram_valid_C69 ;
  assign accu_ctrl_ram_valid_R69 [0:0] = accu_ctrl_ram_valid_R [123:123] ;
  assign accu_ctrl_ram_valid_X69 [0:0] = accu_ctrl_ram_valid_X [123:123] ;
  assign accu_ctrl_ram_valid_C69 [0:0] = accu_ctrl_ram_valid_C [123:123] ;
  assign { accu_ctrl_ram_valid_R69 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X69 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C69 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R70 ;
  logic [191:0] accu_ctrl_ram_valid_X70 ;
  logic [191:0] accu_ctrl_ram_valid_C70 ;
  assign accu_ctrl_ram_valid_R70 [0:0] = accu_ctrl_ram_valid_R [122:122] ;
  assign accu_ctrl_ram_valid_X70 [0:0] = accu_ctrl_ram_valid_X [122:122] ;
  assign accu_ctrl_ram_valid_C70 [0:0] = accu_ctrl_ram_valid_C [122:122] ;
  assign { accu_ctrl_ram_valid_R70 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X70 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C70 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R71 ;
  logic [191:0] accu_ctrl_ram_valid_X71 ;
  logic [191:0] accu_ctrl_ram_valid_C71 ;
  assign accu_ctrl_ram_valid_R71 [0:0] = accu_ctrl_ram_valid_R [121:121] ;
  assign accu_ctrl_ram_valid_X71 [0:0] = accu_ctrl_ram_valid_X [121:121] ;
  assign accu_ctrl_ram_valid_C71 [0:0] = accu_ctrl_ram_valid_C [121:121] ;
  assign { accu_ctrl_ram_valid_R71 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X71 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C71 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R72 ;
  logic [191:0] accu_ctrl_ram_valid_X72 ;
  logic [191:0] accu_ctrl_ram_valid_C72 ;
  assign accu_ctrl_ram_valid_R72 [0:0] = accu_ctrl_ram_valid_R [120:120] ;
  assign accu_ctrl_ram_valid_X72 [0:0] = accu_ctrl_ram_valid_X [120:120] ;
  assign accu_ctrl_ram_valid_C72 [0:0] = accu_ctrl_ram_valid_C [120:120] ;
  assign { accu_ctrl_ram_valid_R72 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X72 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C72 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R73 ;
  logic [191:0] accu_ctrl_ram_valid_X73 ;
  logic [191:0] accu_ctrl_ram_valid_C73 ;
  assign accu_ctrl_ram_valid_R73 [0:0] = accu_ctrl_ram_valid_R [119:119] ;
  assign accu_ctrl_ram_valid_X73 [0:0] = accu_ctrl_ram_valid_X [119:119] ;
  assign accu_ctrl_ram_valid_C73 [0:0] = accu_ctrl_ram_valid_C [119:119] ;
  assign { accu_ctrl_ram_valid_R73 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X73 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C73 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R74 ;
  logic [191:0] accu_ctrl_ram_valid_X74 ;
  logic [191:0] accu_ctrl_ram_valid_C74 ;
  assign accu_ctrl_ram_valid_R74 [0:0] = accu_ctrl_ram_valid_R [118:118] ;
  assign accu_ctrl_ram_valid_X74 [0:0] = accu_ctrl_ram_valid_X [118:118] ;
  assign accu_ctrl_ram_valid_C74 [0:0] = accu_ctrl_ram_valid_C [118:118] ;
  assign { accu_ctrl_ram_valid_R74 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X74 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C74 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R75 ;
  logic [191:0] accu_ctrl_ram_valid_X75 ;
  logic [191:0] accu_ctrl_ram_valid_C75 ;
  assign accu_ctrl_ram_valid_R75 [0:0] = accu_ctrl_ram_valid_R [117:117] ;
  assign accu_ctrl_ram_valid_X75 [0:0] = accu_ctrl_ram_valid_X [117:117] ;
  assign accu_ctrl_ram_valid_C75 [0:0] = accu_ctrl_ram_valid_C [117:117] ;
  assign { accu_ctrl_ram_valid_R75 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X75 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C75 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R76 ;
  logic [191:0] accu_ctrl_ram_valid_X76 ;
  logic [191:0] accu_ctrl_ram_valid_C76 ;
  assign accu_ctrl_ram_valid_R76 [0:0] = accu_ctrl_ram_valid_R [116:116] ;
  assign accu_ctrl_ram_valid_X76 [0:0] = accu_ctrl_ram_valid_X [116:116] ;
  assign accu_ctrl_ram_valid_C76 [0:0] = accu_ctrl_ram_valid_C [116:116] ;
  assign { accu_ctrl_ram_valid_R76 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X76 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C76 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R77 ;
  logic [191:0] accu_ctrl_ram_valid_X77 ;
  logic [191:0] accu_ctrl_ram_valid_C77 ;
  assign accu_ctrl_ram_valid_R77 [0:0] = accu_ctrl_ram_valid_R [115:115] ;
  assign accu_ctrl_ram_valid_X77 [0:0] = accu_ctrl_ram_valid_X [115:115] ;
  assign accu_ctrl_ram_valid_C77 [0:0] = accu_ctrl_ram_valid_C [115:115] ;
  assign { accu_ctrl_ram_valid_R77 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X77 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C77 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R78 ;
  logic [191:0] accu_ctrl_ram_valid_X78 ;
  logic [191:0] accu_ctrl_ram_valid_C78 ;
  assign accu_ctrl_ram_valid_R78 [0:0] = accu_ctrl_ram_valid_R [114:114] ;
  assign accu_ctrl_ram_valid_X78 [0:0] = accu_ctrl_ram_valid_X [114:114] ;
  assign accu_ctrl_ram_valid_C78 [0:0] = accu_ctrl_ram_valid_C [114:114] ;
  assign { accu_ctrl_ram_valid_R78 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X78 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C78 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R79 ;
  logic [191:0] accu_ctrl_ram_valid_X79 ;
  logic [191:0] accu_ctrl_ram_valid_C79 ;
  assign accu_ctrl_ram_valid_R79 [0:0] = accu_ctrl_ram_valid_R [113:113] ;
  assign accu_ctrl_ram_valid_X79 [0:0] = accu_ctrl_ram_valid_X [113:113] ;
  assign accu_ctrl_ram_valid_C79 [0:0] = accu_ctrl_ram_valid_C [113:113] ;
  assign { accu_ctrl_ram_valid_R79 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X79 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C79 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R80 ;
  logic [191:0] accu_ctrl_ram_valid_X80 ;
  logic [191:0] accu_ctrl_ram_valid_C80 ;
  assign accu_ctrl_ram_valid_R80 [0:0] = accu_ctrl_ram_valid_R [112:112] ;
  assign accu_ctrl_ram_valid_X80 [0:0] = accu_ctrl_ram_valid_X [112:112] ;
  assign accu_ctrl_ram_valid_C80 [0:0] = accu_ctrl_ram_valid_C [112:112] ;
  assign { accu_ctrl_ram_valid_R80 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X80 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C80 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R81 ;
  logic [191:0] accu_ctrl_ram_valid_X81 ;
  logic [191:0] accu_ctrl_ram_valid_C81 ;
  assign accu_ctrl_ram_valid_R81 [0:0] = accu_ctrl_ram_valid_R [111:111] ;
  assign accu_ctrl_ram_valid_X81 [0:0] = accu_ctrl_ram_valid_X [111:111] ;
  assign accu_ctrl_ram_valid_C81 [0:0] = accu_ctrl_ram_valid_C [111:111] ;
  assign { accu_ctrl_ram_valid_R81 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X81 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C81 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R82 ;
  logic [191:0] accu_ctrl_ram_valid_X82 ;
  logic [191:0] accu_ctrl_ram_valid_C82 ;
  assign accu_ctrl_ram_valid_R82 [0:0] = accu_ctrl_ram_valid_R [110:110] ;
  assign accu_ctrl_ram_valid_X82 [0:0] = accu_ctrl_ram_valid_X [110:110] ;
  assign accu_ctrl_ram_valid_C82 [0:0] = accu_ctrl_ram_valid_C [110:110] ;
  assign { accu_ctrl_ram_valid_R82 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X82 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C82 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R83 ;
  logic [191:0] accu_ctrl_ram_valid_X83 ;
  logic [191:0] accu_ctrl_ram_valid_C83 ;
  assign accu_ctrl_ram_valid_R83 [0:0] = accu_ctrl_ram_valid_R [109:109] ;
  assign accu_ctrl_ram_valid_X83 [0:0] = accu_ctrl_ram_valid_X [109:109] ;
  assign accu_ctrl_ram_valid_C83 [0:0] = accu_ctrl_ram_valid_C [109:109] ;
  assign { accu_ctrl_ram_valid_R83 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X83 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C83 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R84 ;
  logic [191:0] accu_ctrl_ram_valid_X84 ;
  logic [191:0] accu_ctrl_ram_valid_C84 ;
  assign accu_ctrl_ram_valid_R84 [0:0] = accu_ctrl_ram_valid_R [108:108] ;
  assign accu_ctrl_ram_valid_X84 [0:0] = accu_ctrl_ram_valid_X [108:108] ;
  assign accu_ctrl_ram_valid_C84 [0:0] = accu_ctrl_ram_valid_C [108:108] ;
  assign { accu_ctrl_ram_valid_R84 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X84 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C84 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R85 ;
  logic [191:0] accu_ctrl_ram_valid_X85 ;
  logic [191:0] accu_ctrl_ram_valid_C85 ;
  assign accu_ctrl_ram_valid_R85 [0:0] = accu_ctrl_ram_valid_R [107:107] ;
  assign accu_ctrl_ram_valid_X85 [0:0] = accu_ctrl_ram_valid_X [107:107] ;
  assign accu_ctrl_ram_valid_C85 [0:0] = accu_ctrl_ram_valid_C [107:107] ;
  assign { accu_ctrl_ram_valid_R85 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X85 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C85 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R86 ;
  logic [191:0] accu_ctrl_ram_valid_X86 ;
  logic [191:0] accu_ctrl_ram_valid_C86 ;
  assign accu_ctrl_ram_valid_R86 [0:0] = accu_ctrl_ram_valid_R [106:106] ;
  assign accu_ctrl_ram_valid_X86 [0:0] = accu_ctrl_ram_valid_X [106:106] ;
  assign accu_ctrl_ram_valid_C86 [0:0] = accu_ctrl_ram_valid_C [106:106] ;
  assign { accu_ctrl_ram_valid_R86 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X86 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C86 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R87 ;
  logic [191:0] accu_ctrl_ram_valid_X87 ;
  logic [191:0] accu_ctrl_ram_valid_C87 ;
  assign accu_ctrl_ram_valid_R87 [0:0] = accu_ctrl_ram_valid_R [105:105] ;
  assign accu_ctrl_ram_valid_X87 [0:0] = accu_ctrl_ram_valid_X [105:105] ;
  assign accu_ctrl_ram_valid_C87 [0:0] = accu_ctrl_ram_valid_C [105:105] ;
  assign { accu_ctrl_ram_valid_R87 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X87 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C87 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R88 ;
  logic [191:0] accu_ctrl_ram_valid_X88 ;
  logic [191:0] accu_ctrl_ram_valid_C88 ;
  assign accu_ctrl_ram_valid_R88 [0:0] = accu_ctrl_ram_valid_R [104:104] ;
  assign accu_ctrl_ram_valid_X88 [0:0] = accu_ctrl_ram_valid_X [104:104] ;
  assign accu_ctrl_ram_valid_C88 [0:0] = accu_ctrl_ram_valid_C [104:104] ;
  assign { accu_ctrl_ram_valid_R88 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X88 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C88 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R89 ;
  logic [191:0] accu_ctrl_ram_valid_X89 ;
  logic [191:0] accu_ctrl_ram_valid_C89 ;
  assign accu_ctrl_ram_valid_R89 [0:0] = accu_ctrl_ram_valid_R [103:103] ;
  assign accu_ctrl_ram_valid_X89 [0:0] = accu_ctrl_ram_valid_X [103:103] ;
  assign accu_ctrl_ram_valid_C89 [0:0] = accu_ctrl_ram_valid_C [103:103] ;
  assign { accu_ctrl_ram_valid_R89 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X89 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C89 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R90 ;
  logic [191:0] accu_ctrl_ram_valid_X90 ;
  logic [191:0] accu_ctrl_ram_valid_C90 ;
  assign accu_ctrl_ram_valid_R90 [0:0] = accu_ctrl_ram_valid_R [102:102] ;
  assign accu_ctrl_ram_valid_X90 [0:0] = accu_ctrl_ram_valid_X [102:102] ;
  assign accu_ctrl_ram_valid_C90 [0:0] = accu_ctrl_ram_valid_C [102:102] ;
  assign { accu_ctrl_ram_valid_R90 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X90 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C90 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R91 ;
  logic [191:0] accu_ctrl_ram_valid_X91 ;
  logic [191:0] accu_ctrl_ram_valid_C91 ;
  assign accu_ctrl_ram_valid_R91 [0:0] = accu_ctrl_ram_valid_R [101:101] ;
  assign accu_ctrl_ram_valid_X91 [0:0] = accu_ctrl_ram_valid_X [101:101] ;
  assign accu_ctrl_ram_valid_C91 [0:0] = accu_ctrl_ram_valid_C [101:101] ;
  assign { accu_ctrl_ram_valid_R91 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X91 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C91 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R92 ;
  logic [191:0] accu_ctrl_ram_valid_X92 ;
  logic [191:0] accu_ctrl_ram_valid_C92 ;
  assign accu_ctrl_ram_valid_R92 [0:0] = accu_ctrl_ram_valid_R [100:100] ;
  assign accu_ctrl_ram_valid_X92 [0:0] = accu_ctrl_ram_valid_X [100:100] ;
  assign accu_ctrl_ram_valid_C92 [0:0] = accu_ctrl_ram_valid_C [100:100] ;
  assign { accu_ctrl_ram_valid_R92 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X92 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C92 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R93 ;
  logic [191:0] accu_ctrl_ram_valid_X93 ;
  logic [191:0] accu_ctrl_ram_valid_C93 ;
  assign accu_ctrl_ram_valid_R93 [0:0] = accu_ctrl_ram_valid_R [99:99] ;
  assign accu_ctrl_ram_valid_X93 [0:0] = accu_ctrl_ram_valid_X [99:99] ;
  assign accu_ctrl_ram_valid_C93 [0:0] = accu_ctrl_ram_valid_C [99:99] ;
  assign { accu_ctrl_ram_valid_R93 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X93 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C93 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R94 ;
  logic [191:0] accu_ctrl_ram_valid_X94 ;
  logic [191:0] accu_ctrl_ram_valid_C94 ;
  assign accu_ctrl_ram_valid_R94 [0:0] = accu_ctrl_ram_valid_R [98:98] ;
  assign accu_ctrl_ram_valid_X94 [0:0] = accu_ctrl_ram_valid_X [98:98] ;
  assign accu_ctrl_ram_valid_C94 [0:0] = accu_ctrl_ram_valid_C [98:98] ;
  assign { accu_ctrl_ram_valid_R94 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X94 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C94 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R95 ;
  logic [191:0] accu_ctrl_ram_valid_X95 ;
  logic [191:0] accu_ctrl_ram_valid_C95 ;
  assign accu_ctrl_ram_valid_R95 [0:0] = accu_ctrl_ram_valid_R [97:97] ;
  assign accu_ctrl_ram_valid_X95 [0:0] = accu_ctrl_ram_valid_X [97:97] ;
  assign accu_ctrl_ram_valid_C95 [0:0] = accu_ctrl_ram_valid_C [97:97] ;
  assign { accu_ctrl_ram_valid_R95 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X95 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C95 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R96 ;
  logic [191:0] accu_ctrl_ram_valid_X96 ;
  logic [191:0] accu_ctrl_ram_valid_C96 ;
  assign accu_ctrl_ram_valid_R96 [0:0] = accu_ctrl_ram_valid_R [96:96] ;
  assign accu_ctrl_ram_valid_X96 [0:0] = accu_ctrl_ram_valid_X [96:96] ;
  assign accu_ctrl_ram_valid_C96 [0:0] = accu_ctrl_ram_valid_C [96:96] ;
  assign { accu_ctrl_ram_valid_R96 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X96 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C96 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R97 ;
  logic [191:0] accu_ctrl_ram_valid_X97 ;
  logic [191:0] accu_ctrl_ram_valid_C97 ;
  assign accu_ctrl_ram_valid_R97 [0:0] = accu_ctrl_ram_valid_R [95:95] ;
  assign accu_ctrl_ram_valid_X97 [0:0] = accu_ctrl_ram_valid_X [95:95] ;
  assign accu_ctrl_ram_valid_C97 [0:0] = accu_ctrl_ram_valid_C [95:95] ;
  assign { accu_ctrl_ram_valid_R97 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X97 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C97 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R98 ;
  logic [191:0] accu_ctrl_ram_valid_X98 ;
  logic [191:0] accu_ctrl_ram_valid_C98 ;
  assign accu_ctrl_ram_valid_R98 [0:0] = accu_ctrl_ram_valid_R [94:94] ;
  assign accu_ctrl_ram_valid_X98 [0:0] = accu_ctrl_ram_valid_X [94:94] ;
  assign accu_ctrl_ram_valid_C98 [0:0] = accu_ctrl_ram_valid_C [94:94] ;
  assign { accu_ctrl_ram_valid_R98 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X98 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C98 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R99 ;
  logic [191:0] accu_ctrl_ram_valid_X99 ;
  logic [191:0] accu_ctrl_ram_valid_C99 ;
  assign accu_ctrl_ram_valid_R99 [0:0] = accu_ctrl_ram_valid_R [93:93] ;
  assign accu_ctrl_ram_valid_X99 [0:0] = accu_ctrl_ram_valid_X [93:93] ;
  assign accu_ctrl_ram_valid_C99 [0:0] = accu_ctrl_ram_valid_C [93:93] ;
  assign { accu_ctrl_ram_valid_R99 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X99 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C99 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R100 ;
  logic [191:0] accu_ctrl_ram_valid_X100 ;
  logic [191:0] accu_ctrl_ram_valid_C100 ;
  assign accu_ctrl_ram_valid_R100 [0:0] = accu_ctrl_ram_valid_R [92:92] ;
  assign accu_ctrl_ram_valid_X100 [0:0] = accu_ctrl_ram_valid_X [92:92] ;
  assign accu_ctrl_ram_valid_C100 [0:0] = accu_ctrl_ram_valid_C [92:92] ;
  assign { accu_ctrl_ram_valid_R100 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X100 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C100 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R101 ;
  logic [191:0] accu_ctrl_ram_valid_X101 ;
  logic [191:0] accu_ctrl_ram_valid_C101 ;
  assign accu_ctrl_ram_valid_R101 [0:0] = accu_ctrl_ram_valid_R [91:91] ;
  assign accu_ctrl_ram_valid_X101 [0:0] = accu_ctrl_ram_valid_X [91:91] ;
  assign accu_ctrl_ram_valid_C101 [0:0] = accu_ctrl_ram_valid_C [91:91] ;
  assign { accu_ctrl_ram_valid_R101 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X101 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C101 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R102 ;
  logic [191:0] accu_ctrl_ram_valid_X102 ;
  logic [191:0] accu_ctrl_ram_valid_C102 ;
  assign accu_ctrl_ram_valid_R102 [0:0] = accu_ctrl_ram_valid_R [90:90] ;
  assign accu_ctrl_ram_valid_X102 [0:0] = accu_ctrl_ram_valid_X [90:90] ;
  assign accu_ctrl_ram_valid_C102 [0:0] = accu_ctrl_ram_valid_C [90:90] ;
  assign { accu_ctrl_ram_valid_R102 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X102 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C102 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R103 ;
  logic [191:0] accu_ctrl_ram_valid_X103 ;
  logic [191:0] accu_ctrl_ram_valid_C103 ;
  assign accu_ctrl_ram_valid_R103 [0:0] = accu_ctrl_ram_valid_R [89:89] ;
  assign accu_ctrl_ram_valid_X103 [0:0] = accu_ctrl_ram_valid_X [89:89] ;
  assign accu_ctrl_ram_valid_C103 [0:0] = accu_ctrl_ram_valid_C [89:89] ;
  assign { accu_ctrl_ram_valid_R103 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X103 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C103 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R104 ;
  logic [191:0] accu_ctrl_ram_valid_X104 ;
  logic [191:0] accu_ctrl_ram_valid_C104 ;
  assign accu_ctrl_ram_valid_R104 [0:0] = accu_ctrl_ram_valid_R [88:88] ;
  assign accu_ctrl_ram_valid_X104 [0:0] = accu_ctrl_ram_valid_X [88:88] ;
  assign accu_ctrl_ram_valid_C104 [0:0] = accu_ctrl_ram_valid_C [88:88] ;
  assign { accu_ctrl_ram_valid_R104 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X104 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C104 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R105 ;
  logic [191:0] accu_ctrl_ram_valid_X105 ;
  logic [191:0] accu_ctrl_ram_valid_C105 ;
  assign accu_ctrl_ram_valid_R105 [0:0] = accu_ctrl_ram_valid_R [87:87] ;
  assign accu_ctrl_ram_valid_X105 [0:0] = accu_ctrl_ram_valid_X [87:87] ;
  assign accu_ctrl_ram_valid_C105 [0:0] = accu_ctrl_ram_valid_C [87:87] ;
  assign { accu_ctrl_ram_valid_R105 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X105 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C105 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R106 ;
  logic [191:0] accu_ctrl_ram_valid_X106 ;
  logic [191:0] accu_ctrl_ram_valid_C106 ;
  assign accu_ctrl_ram_valid_R106 [0:0] = accu_ctrl_ram_valid_R [86:86] ;
  assign accu_ctrl_ram_valid_X106 [0:0] = accu_ctrl_ram_valid_X [86:86] ;
  assign accu_ctrl_ram_valid_C106 [0:0] = accu_ctrl_ram_valid_C [86:86] ;
  assign { accu_ctrl_ram_valid_R106 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X106 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C106 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R107 ;
  logic [191:0] accu_ctrl_ram_valid_X107 ;
  logic [191:0] accu_ctrl_ram_valid_C107 ;
  assign accu_ctrl_ram_valid_R107 [0:0] = accu_ctrl_ram_valid_R [85:85] ;
  assign accu_ctrl_ram_valid_X107 [0:0] = accu_ctrl_ram_valid_X [85:85] ;
  assign accu_ctrl_ram_valid_C107 [0:0] = accu_ctrl_ram_valid_C [85:85] ;
  assign { accu_ctrl_ram_valid_R107 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X107 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C107 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R108 ;
  logic [191:0] accu_ctrl_ram_valid_X108 ;
  logic [191:0] accu_ctrl_ram_valid_C108 ;
  assign accu_ctrl_ram_valid_R108 [0:0] = accu_ctrl_ram_valid_R [84:84] ;
  assign accu_ctrl_ram_valid_X108 [0:0] = accu_ctrl_ram_valid_X [84:84] ;
  assign accu_ctrl_ram_valid_C108 [0:0] = accu_ctrl_ram_valid_C [84:84] ;
  assign { accu_ctrl_ram_valid_R108 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X108 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C108 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R109 ;
  logic [191:0] accu_ctrl_ram_valid_X109 ;
  logic [191:0] accu_ctrl_ram_valid_C109 ;
  assign accu_ctrl_ram_valid_R109 [0:0] = accu_ctrl_ram_valid_R [83:83] ;
  assign accu_ctrl_ram_valid_X109 [0:0] = accu_ctrl_ram_valid_X [83:83] ;
  assign accu_ctrl_ram_valid_C109 [0:0] = accu_ctrl_ram_valid_C [83:83] ;
  assign { accu_ctrl_ram_valid_R109 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X109 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C109 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R110 ;
  logic [191:0] accu_ctrl_ram_valid_X110 ;
  logic [191:0] accu_ctrl_ram_valid_C110 ;
  assign accu_ctrl_ram_valid_R110 [0:0] = accu_ctrl_ram_valid_R [82:82] ;
  assign accu_ctrl_ram_valid_X110 [0:0] = accu_ctrl_ram_valid_X [82:82] ;
  assign accu_ctrl_ram_valid_C110 [0:0] = accu_ctrl_ram_valid_C [82:82] ;
  assign { accu_ctrl_ram_valid_R110 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X110 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C110 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R111 ;
  logic [191:0] accu_ctrl_ram_valid_X111 ;
  logic [191:0] accu_ctrl_ram_valid_C111 ;
  assign accu_ctrl_ram_valid_R111 [0:0] = accu_ctrl_ram_valid_R [81:81] ;
  assign accu_ctrl_ram_valid_X111 [0:0] = accu_ctrl_ram_valid_X [81:81] ;
  assign accu_ctrl_ram_valid_C111 [0:0] = accu_ctrl_ram_valid_C [81:81] ;
  assign { accu_ctrl_ram_valid_R111 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X111 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C111 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R112 ;
  logic [191:0] accu_ctrl_ram_valid_X112 ;
  logic [191:0] accu_ctrl_ram_valid_C112 ;
  assign accu_ctrl_ram_valid_R112 [0:0] = accu_ctrl_ram_valid_R [80:80] ;
  assign accu_ctrl_ram_valid_X112 [0:0] = accu_ctrl_ram_valid_X [80:80] ;
  assign accu_ctrl_ram_valid_C112 [0:0] = accu_ctrl_ram_valid_C [80:80] ;
  assign { accu_ctrl_ram_valid_R112 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X112 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C112 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R113 ;
  logic [191:0] accu_ctrl_ram_valid_X113 ;
  logic [191:0] accu_ctrl_ram_valid_C113 ;
  assign accu_ctrl_ram_valid_R113 [0:0] = accu_ctrl_ram_valid_R [79:79] ;
  assign accu_ctrl_ram_valid_X113 [0:0] = accu_ctrl_ram_valid_X [79:79] ;
  assign accu_ctrl_ram_valid_C113 [0:0] = accu_ctrl_ram_valid_C [79:79] ;
  assign { accu_ctrl_ram_valid_R113 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X113 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C113 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R114 ;
  logic [191:0] accu_ctrl_ram_valid_X114 ;
  logic [191:0] accu_ctrl_ram_valid_C114 ;
  assign accu_ctrl_ram_valid_R114 [0:0] = accu_ctrl_ram_valid_R [78:78] ;
  assign accu_ctrl_ram_valid_X114 [0:0] = accu_ctrl_ram_valid_X [78:78] ;
  assign accu_ctrl_ram_valid_C114 [0:0] = accu_ctrl_ram_valid_C [78:78] ;
  assign { accu_ctrl_ram_valid_R114 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X114 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C114 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R115 ;
  logic [191:0] accu_ctrl_ram_valid_X115 ;
  logic [191:0] accu_ctrl_ram_valid_C115 ;
  assign accu_ctrl_ram_valid_R115 [0:0] = accu_ctrl_ram_valid_R [77:77] ;
  assign accu_ctrl_ram_valid_X115 [0:0] = accu_ctrl_ram_valid_X [77:77] ;
  assign accu_ctrl_ram_valid_C115 [0:0] = accu_ctrl_ram_valid_C [77:77] ;
  assign { accu_ctrl_ram_valid_R115 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X115 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C115 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R116 ;
  logic [191:0] accu_ctrl_ram_valid_X116 ;
  logic [191:0] accu_ctrl_ram_valid_C116 ;
  assign accu_ctrl_ram_valid_R116 [0:0] = accu_ctrl_ram_valid_R [76:76] ;
  assign accu_ctrl_ram_valid_X116 [0:0] = accu_ctrl_ram_valid_X [76:76] ;
  assign accu_ctrl_ram_valid_C116 [0:0] = accu_ctrl_ram_valid_C [76:76] ;
  assign { accu_ctrl_ram_valid_R116 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X116 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C116 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R117 ;
  logic [191:0] accu_ctrl_ram_valid_X117 ;
  logic [191:0] accu_ctrl_ram_valid_C117 ;
  assign accu_ctrl_ram_valid_R117 [0:0] = accu_ctrl_ram_valid_R [75:75] ;
  assign accu_ctrl_ram_valid_X117 [0:0] = accu_ctrl_ram_valid_X [75:75] ;
  assign accu_ctrl_ram_valid_C117 [0:0] = accu_ctrl_ram_valid_C [75:75] ;
  assign { accu_ctrl_ram_valid_R117 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X117 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C117 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R118 ;
  logic [191:0] accu_ctrl_ram_valid_X118 ;
  logic [191:0] accu_ctrl_ram_valid_C118 ;
  assign accu_ctrl_ram_valid_R118 [0:0] = accu_ctrl_ram_valid_R [74:74] ;
  assign accu_ctrl_ram_valid_X118 [0:0] = accu_ctrl_ram_valid_X [74:74] ;
  assign accu_ctrl_ram_valid_C118 [0:0] = accu_ctrl_ram_valid_C [74:74] ;
  assign { accu_ctrl_ram_valid_R118 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X118 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C118 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R119 ;
  logic [191:0] accu_ctrl_ram_valid_X119 ;
  logic [191:0] accu_ctrl_ram_valid_C119 ;
  assign accu_ctrl_ram_valid_R119 [0:0] = accu_ctrl_ram_valid_R [73:73] ;
  assign accu_ctrl_ram_valid_X119 [0:0] = accu_ctrl_ram_valid_X [73:73] ;
  assign accu_ctrl_ram_valid_C119 [0:0] = accu_ctrl_ram_valid_C [73:73] ;
  assign { accu_ctrl_ram_valid_R119 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X119 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C119 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R120 ;
  logic [191:0] accu_ctrl_ram_valid_X120 ;
  logic [191:0] accu_ctrl_ram_valid_C120 ;
  assign accu_ctrl_ram_valid_R120 [0:0] = accu_ctrl_ram_valid_R [72:72] ;
  assign accu_ctrl_ram_valid_X120 [0:0] = accu_ctrl_ram_valid_X [72:72] ;
  assign accu_ctrl_ram_valid_C120 [0:0] = accu_ctrl_ram_valid_C [72:72] ;
  assign { accu_ctrl_ram_valid_R120 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X120 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C120 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R121 ;
  logic [191:0] accu_ctrl_ram_valid_X121 ;
  logic [191:0] accu_ctrl_ram_valid_C121 ;
  assign accu_ctrl_ram_valid_R121 [0:0] = accu_ctrl_ram_valid_R [71:71] ;
  assign accu_ctrl_ram_valid_X121 [0:0] = accu_ctrl_ram_valid_X [71:71] ;
  assign accu_ctrl_ram_valid_C121 [0:0] = accu_ctrl_ram_valid_C [71:71] ;
  assign { accu_ctrl_ram_valid_R121 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X121 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C121 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R122 ;
  logic [191:0] accu_ctrl_ram_valid_X122 ;
  logic [191:0] accu_ctrl_ram_valid_C122 ;
  assign accu_ctrl_ram_valid_R122 [0:0] = accu_ctrl_ram_valid_R [70:70] ;
  assign accu_ctrl_ram_valid_X122 [0:0] = accu_ctrl_ram_valid_X [70:70] ;
  assign accu_ctrl_ram_valid_C122 [0:0] = accu_ctrl_ram_valid_C [70:70] ;
  assign { accu_ctrl_ram_valid_R122 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X122 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C122 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R123 ;
  logic [191:0] accu_ctrl_ram_valid_X123 ;
  logic [191:0] accu_ctrl_ram_valid_C123 ;
  assign accu_ctrl_ram_valid_R123 [0:0] = accu_ctrl_ram_valid_R [69:69] ;
  assign accu_ctrl_ram_valid_X123 [0:0] = accu_ctrl_ram_valid_X [69:69] ;
  assign accu_ctrl_ram_valid_C123 [0:0] = accu_ctrl_ram_valid_C [69:69] ;
  assign { accu_ctrl_ram_valid_R123 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X123 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C123 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R124 ;
  logic [191:0] accu_ctrl_ram_valid_X124 ;
  logic [191:0] accu_ctrl_ram_valid_C124 ;
  assign accu_ctrl_ram_valid_R124 [0:0] = accu_ctrl_ram_valid_R [68:68] ;
  assign accu_ctrl_ram_valid_X124 [0:0] = accu_ctrl_ram_valid_X [68:68] ;
  assign accu_ctrl_ram_valid_C124 [0:0] = accu_ctrl_ram_valid_C [68:68] ;
  assign { accu_ctrl_ram_valid_R124 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X124 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C124 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R125 ;
  logic [191:0] accu_ctrl_ram_valid_X125 ;
  logic [191:0] accu_ctrl_ram_valid_C125 ;
  assign accu_ctrl_ram_valid_R125 [0:0] = accu_ctrl_ram_valid_R [67:67] ;
  assign accu_ctrl_ram_valid_X125 [0:0] = accu_ctrl_ram_valid_X [67:67] ;
  assign accu_ctrl_ram_valid_C125 [0:0] = accu_ctrl_ram_valid_C [67:67] ;
  assign { accu_ctrl_ram_valid_R125 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X125 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C125 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R126 ;
  logic [191:0] accu_ctrl_ram_valid_X126 ;
  logic [191:0] accu_ctrl_ram_valid_C126 ;
  assign accu_ctrl_ram_valid_R126 [0:0] = accu_ctrl_ram_valid_R [66:66] ;
  assign accu_ctrl_ram_valid_X126 [0:0] = accu_ctrl_ram_valid_X [66:66] ;
  assign accu_ctrl_ram_valid_C126 [0:0] = accu_ctrl_ram_valid_C [66:66] ;
  assign { accu_ctrl_ram_valid_R126 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X126 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C126 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R127 ;
  logic [191:0] accu_ctrl_ram_valid_X127 ;
  logic [191:0] accu_ctrl_ram_valid_C127 ;
  assign accu_ctrl_ram_valid_R127 [0:0] = accu_ctrl_ram_valid_R [65:65] ;
  assign accu_ctrl_ram_valid_X127 [0:0] = accu_ctrl_ram_valid_X [65:65] ;
  assign accu_ctrl_ram_valid_C127 [0:0] = accu_ctrl_ram_valid_C [65:65] ;
  assign { accu_ctrl_ram_valid_R127 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X127 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C127 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R128 ;
  logic [191:0] accu_ctrl_ram_valid_X128 ;
  logic [191:0] accu_ctrl_ram_valid_C128 ;
  assign accu_ctrl_ram_valid_R128 [0:0] = accu_ctrl_ram_valid_R [64:64] ;
  assign accu_ctrl_ram_valid_X128 [0:0] = accu_ctrl_ram_valid_X [64:64] ;
  assign accu_ctrl_ram_valid_C128 [0:0] = accu_ctrl_ram_valid_C [64:64] ;
  assign { accu_ctrl_ram_valid_R128 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X128 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C128 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R129 ;
  logic [191:0] accu_ctrl_ram_valid_X129 ;
  logic [191:0] accu_ctrl_ram_valid_C129 ;
  assign accu_ctrl_ram_valid_R129 [0:0] = accu_ctrl_ram_valid_R [63:63] ;
  assign accu_ctrl_ram_valid_X129 [0:0] = accu_ctrl_ram_valid_X [63:63] ;
  assign accu_ctrl_ram_valid_C129 [0:0] = accu_ctrl_ram_valid_C [63:63] ;
  assign { accu_ctrl_ram_valid_R129 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X129 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C129 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R130 ;
  logic [191:0] accu_ctrl_ram_valid_X130 ;
  logic [191:0] accu_ctrl_ram_valid_C130 ;
  assign accu_ctrl_ram_valid_R130 [0:0] = accu_ctrl_ram_valid_R [62:62] ;
  assign accu_ctrl_ram_valid_X130 [0:0] = accu_ctrl_ram_valid_X [62:62] ;
  assign accu_ctrl_ram_valid_C130 [0:0] = accu_ctrl_ram_valid_C [62:62] ;
  assign { accu_ctrl_ram_valid_R130 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X130 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C130 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R131 ;
  logic [191:0] accu_ctrl_ram_valid_X131 ;
  logic [191:0] accu_ctrl_ram_valid_C131 ;
  assign accu_ctrl_ram_valid_R131 [0:0] = accu_ctrl_ram_valid_R [61:61] ;
  assign accu_ctrl_ram_valid_X131 [0:0] = accu_ctrl_ram_valid_X [61:61] ;
  assign accu_ctrl_ram_valid_C131 [0:0] = accu_ctrl_ram_valid_C [61:61] ;
  assign { accu_ctrl_ram_valid_R131 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X131 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C131 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R132 ;
  logic [191:0] accu_ctrl_ram_valid_X132 ;
  logic [191:0] accu_ctrl_ram_valid_C132 ;
  assign accu_ctrl_ram_valid_R132 [0:0] = accu_ctrl_ram_valid_R [60:60] ;
  assign accu_ctrl_ram_valid_X132 [0:0] = accu_ctrl_ram_valid_X [60:60] ;
  assign accu_ctrl_ram_valid_C132 [0:0] = accu_ctrl_ram_valid_C [60:60] ;
  assign { accu_ctrl_ram_valid_R132 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X132 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C132 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R133 ;
  logic [191:0] accu_ctrl_ram_valid_X133 ;
  logic [191:0] accu_ctrl_ram_valid_C133 ;
  assign accu_ctrl_ram_valid_R133 [0:0] = accu_ctrl_ram_valid_R [59:59] ;
  assign accu_ctrl_ram_valid_X133 [0:0] = accu_ctrl_ram_valid_X [59:59] ;
  assign accu_ctrl_ram_valid_C133 [0:0] = accu_ctrl_ram_valid_C [59:59] ;
  assign { accu_ctrl_ram_valid_R133 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X133 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C133 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R134 ;
  logic [191:0] accu_ctrl_ram_valid_X134 ;
  logic [191:0] accu_ctrl_ram_valid_C134 ;
  assign accu_ctrl_ram_valid_R134 [0:0] = accu_ctrl_ram_valid_R [58:58] ;
  assign accu_ctrl_ram_valid_X134 [0:0] = accu_ctrl_ram_valid_X [58:58] ;
  assign accu_ctrl_ram_valid_C134 [0:0] = accu_ctrl_ram_valid_C [58:58] ;
  assign { accu_ctrl_ram_valid_R134 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X134 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C134 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R135 ;
  logic [191:0] accu_ctrl_ram_valid_X135 ;
  logic [191:0] accu_ctrl_ram_valid_C135 ;
  assign accu_ctrl_ram_valid_R135 [0:0] = accu_ctrl_ram_valid_R [57:57] ;
  assign accu_ctrl_ram_valid_X135 [0:0] = accu_ctrl_ram_valid_X [57:57] ;
  assign accu_ctrl_ram_valid_C135 [0:0] = accu_ctrl_ram_valid_C [57:57] ;
  assign { accu_ctrl_ram_valid_R135 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X135 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C135 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R136 ;
  logic [191:0] accu_ctrl_ram_valid_X136 ;
  logic [191:0] accu_ctrl_ram_valid_C136 ;
  assign accu_ctrl_ram_valid_R136 [0:0] = accu_ctrl_ram_valid_R [56:56] ;
  assign accu_ctrl_ram_valid_X136 [0:0] = accu_ctrl_ram_valid_X [56:56] ;
  assign accu_ctrl_ram_valid_C136 [0:0] = accu_ctrl_ram_valid_C [56:56] ;
  assign { accu_ctrl_ram_valid_R136 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X136 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C136 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R137 ;
  logic [191:0] accu_ctrl_ram_valid_X137 ;
  logic [191:0] accu_ctrl_ram_valid_C137 ;
  assign accu_ctrl_ram_valid_R137 [0:0] = accu_ctrl_ram_valid_R [55:55] ;
  assign accu_ctrl_ram_valid_X137 [0:0] = accu_ctrl_ram_valid_X [55:55] ;
  assign accu_ctrl_ram_valid_C137 [0:0] = accu_ctrl_ram_valid_C [55:55] ;
  assign { accu_ctrl_ram_valid_R137 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X137 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C137 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R138 ;
  logic [191:0] accu_ctrl_ram_valid_X138 ;
  logic [191:0] accu_ctrl_ram_valid_C138 ;
  assign accu_ctrl_ram_valid_R138 [0:0] = accu_ctrl_ram_valid_R [54:54] ;
  assign accu_ctrl_ram_valid_X138 [0:0] = accu_ctrl_ram_valid_X [54:54] ;
  assign accu_ctrl_ram_valid_C138 [0:0] = accu_ctrl_ram_valid_C [54:54] ;
  assign { accu_ctrl_ram_valid_R138 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X138 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C138 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R139 ;
  logic [191:0] accu_ctrl_ram_valid_X139 ;
  logic [191:0] accu_ctrl_ram_valid_C139 ;
  assign accu_ctrl_ram_valid_R139 [0:0] = accu_ctrl_ram_valid_R [53:53] ;
  assign accu_ctrl_ram_valid_X139 [0:0] = accu_ctrl_ram_valid_X [53:53] ;
  assign accu_ctrl_ram_valid_C139 [0:0] = accu_ctrl_ram_valid_C [53:53] ;
  assign { accu_ctrl_ram_valid_R139 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X139 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C139 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R140 ;
  logic [191:0] accu_ctrl_ram_valid_X140 ;
  logic [191:0] accu_ctrl_ram_valid_C140 ;
  assign accu_ctrl_ram_valid_R140 [0:0] = accu_ctrl_ram_valid_R [52:52] ;
  assign accu_ctrl_ram_valid_X140 [0:0] = accu_ctrl_ram_valid_X [52:52] ;
  assign accu_ctrl_ram_valid_C140 [0:0] = accu_ctrl_ram_valid_C [52:52] ;
  assign { accu_ctrl_ram_valid_R140 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X140 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C140 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R141 ;
  logic [191:0] accu_ctrl_ram_valid_X141 ;
  logic [191:0] accu_ctrl_ram_valid_C141 ;
  assign accu_ctrl_ram_valid_R141 [0:0] = accu_ctrl_ram_valid_R [51:51] ;
  assign accu_ctrl_ram_valid_X141 [0:0] = accu_ctrl_ram_valid_X [51:51] ;
  assign accu_ctrl_ram_valid_C141 [0:0] = accu_ctrl_ram_valid_C [51:51] ;
  assign { accu_ctrl_ram_valid_R141 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X141 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C141 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R142 ;
  logic [191:0] accu_ctrl_ram_valid_X142 ;
  logic [191:0] accu_ctrl_ram_valid_C142 ;
  assign accu_ctrl_ram_valid_R142 [0:0] = accu_ctrl_ram_valid_R [50:50] ;
  assign accu_ctrl_ram_valid_X142 [0:0] = accu_ctrl_ram_valid_X [50:50] ;
  assign accu_ctrl_ram_valid_C142 [0:0] = accu_ctrl_ram_valid_C [50:50] ;
  assign { accu_ctrl_ram_valid_R142 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X142 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C142 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R143 ;
  logic [191:0] accu_ctrl_ram_valid_X143 ;
  logic [191:0] accu_ctrl_ram_valid_C143 ;
  assign accu_ctrl_ram_valid_R143 [0:0] = accu_ctrl_ram_valid_R [49:49] ;
  assign accu_ctrl_ram_valid_X143 [0:0] = accu_ctrl_ram_valid_X [49:49] ;
  assign accu_ctrl_ram_valid_C143 [0:0] = accu_ctrl_ram_valid_C [49:49] ;
  assign { accu_ctrl_ram_valid_R143 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X143 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C143 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R144 ;
  logic [191:0] accu_ctrl_ram_valid_X144 ;
  logic [191:0] accu_ctrl_ram_valid_C144 ;
  assign accu_ctrl_ram_valid_R144 [0:0] = accu_ctrl_ram_valid_R [48:48] ;
  assign accu_ctrl_ram_valid_X144 [0:0] = accu_ctrl_ram_valid_X [48:48] ;
  assign accu_ctrl_ram_valid_C144 [0:0] = accu_ctrl_ram_valid_C [48:48] ;
  assign { accu_ctrl_ram_valid_R144 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X144 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C144 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R145 ;
  logic [191:0] accu_ctrl_ram_valid_X145 ;
  logic [191:0] accu_ctrl_ram_valid_C145 ;
  assign accu_ctrl_ram_valid_R145 [0:0] = accu_ctrl_ram_valid_R [47:47] ;
  assign accu_ctrl_ram_valid_X145 [0:0] = accu_ctrl_ram_valid_X [47:47] ;
  assign accu_ctrl_ram_valid_C145 [0:0] = accu_ctrl_ram_valid_C [47:47] ;
  assign { accu_ctrl_ram_valid_R145 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X145 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C145 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R146 ;
  logic [191:0] accu_ctrl_ram_valid_X146 ;
  logic [191:0] accu_ctrl_ram_valid_C146 ;
  assign accu_ctrl_ram_valid_R146 [0:0] = accu_ctrl_ram_valid_R [46:46] ;
  assign accu_ctrl_ram_valid_X146 [0:0] = accu_ctrl_ram_valid_X [46:46] ;
  assign accu_ctrl_ram_valid_C146 [0:0] = accu_ctrl_ram_valid_C [46:46] ;
  assign { accu_ctrl_ram_valid_R146 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X146 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C146 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R147 ;
  logic [191:0] accu_ctrl_ram_valid_X147 ;
  logic [191:0] accu_ctrl_ram_valid_C147 ;
  assign accu_ctrl_ram_valid_R147 [0:0] = accu_ctrl_ram_valid_R [45:45] ;
  assign accu_ctrl_ram_valid_X147 [0:0] = accu_ctrl_ram_valid_X [45:45] ;
  assign accu_ctrl_ram_valid_C147 [0:0] = accu_ctrl_ram_valid_C [45:45] ;
  assign { accu_ctrl_ram_valid_R147 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X147 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C147 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R148 ;
  logic [191:0] accu_ctrl_ram_valid_X148 ;
  logic [191:0] accu_ctrl_ram_valid_C148 ;
  assign accu_ctrl_ram_valid_R148 [0:0] = accu_ctrl_ram_valid_R [44:44] ;
  assign accu_ctrl_ram_valid_X148 [0:0] = accu_ctrl_ram_valid_X [44:44] ;
  assign accu_ctrl_ram_valid_C148 [0:0] = accu_ctrl_ram_valid_C [44:44] ;
  assign { accu_ctrl_ram_valid_R148 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X148 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C148 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R149 ;
  logic [191:0] accu_ctrl_ram_valid_X149 ;
  logic [191:0] accu_ctrl_ram_valid_C149 ;
  assign accu_ctrl_ram_valid_R149 [0:0] = accu_ctrl_ram_valid_R [43:43] ;
  assign accu_ctrl_ram_valid_X149 [0:0] = accu_ctrl_ram_valid_X [43:43] ;
  assign accu_ctrl_ram_valid_C149 [0:0] = accu_ctrl_ram_valid_C [43:43] ;
  assign { accu_ctrl_ram_valid_R149 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X149 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C149 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R150 ;
  logic [191:0] accu_ctrl_ram_valid_X150 ;
  logic [191:0] accu_ctrl_ram_valid_C150 ;
  assign accu_ctrl_ram_valid_R150 [0:0] = accu_ctrl_ram_valid_R [42:42] ;
  assign accu_ctrl_ram_valid_X150 [0:0] = accu_ctrl_ram_valid_X [42:42] ;
  assign accu_ctrl_ram_valid_C150 [0:0] = accu_ctrl_ram_valid_C [42:42] ;
  assign { accu_ctrl_ram_valid_R150 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X150 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C150 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R151 ;
  logic [191:0] accu_ctrl_ram_valid_X151 ;
  logic [191:0] accu_ctrl_ram_valid_C151 ;
  assign accu_ctrl_ram_valid_R151 [0:0] = accu_ctrl_ram_valid_R [41:41] ;
  assign accu_ctrl_ram_valid_X151 [0:0] = accu_ctrl_ram_valid_X [41:41] ;
  assign accu_ctrl_ram_valid_C151 [0:0] = accu_ctrl_ram_valid_C [41:41] ;
  assign { accu_ctrl_ram_valid_R151 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X151 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C151 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R152 ;
  logic [191:0] accu_ctrl_ram_valid_X152 ;
  logic [191:0] accu_ctrl_ram_valid_C152 ;
  assign accu_ctrl_ram_valid_R152 [0:0] = accu_ctrl_ram_valid_R [40:40] ;
  assign accu_ctrl_ram_valid_X152 [0:0] = accu_ctrl_ram_valid_X [40:40] ;
  assign accu_ctrl_ram_valid_C152 [0:0] = accu_ctrl_ram_valid_C [40:40] ;
  assign { accu_ctrl_ram_valid_R152 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X152 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C152 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R153 ;
  logic [191:0] accu_ctrl_ram_valid_X153 ;
  logic [191:0] accu_ctrl_ram_valid_C153 ;
  assign accu_ctrl_ram_valid_R153 [0:0] = accu_ctrl_ram_valid_R [39:39] ;
  assign accu_ctrl_ram_valid_X153 [0:0] = accu_ctrl_ram_valid_X [39:39] ;
  assign accu_ctrl_ram_valid_C153 [0:0] = accu_ctrl_ram_valid_C [39:39] ;
  assign { accu_ctrl_ram_valid_R153 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X153 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C153 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R154 ;
  logic [191:0] accu_ctrl_ram_valid_X154 ;
  logic [191:0] accu_ctrl_ram_valid_C154 ;
  assign accu_ctrl_ram_valid_R154 [0:0] = accu_ctrl_ram_valid_R [38:38] ;
  assign accu_ctrl_ram_valid_X154 [0:0] = accu_ctrl_ram_valid_X [38:38] ;
  assign accu_ctrl_ram_valid_C154 [0:0] = accu_ctrl_ram_valid_C [38:38] ;
  assign { accu_ctrl_ram_valid_R154 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X154 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C154 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R155 ;
  logic [191:0] accu_ctrl_ram_valid_X155 ;
  logic [191:0] accu_ctrl_ram_valid_C155 ;
  assign accu_ctrl_ram_valid_R155 [0:0] = accu_ctrl_ram_valid_R [37:37] ;
  assign accu_ctrl_ram_valid_X155 [0:0] = accu_ctrl_ram_valid_X [37:37] ;
  assign accu_ctrl_ram_valid_C155 [0:0] = accu_ctrl_ram_valid_C [37:37] ;
  assign { accu_ctrl_ram_valid_R155 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X155 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C155 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R156 ;
  logic [191:0] accu_ctrl_ram_valid_X156 ;
  logic [191:0] accu_ctrl_ram_valid_C156 ;
  assign accu_ctrl_ram_valid_R156 [0:0] = accu_ctrl_ram_valid_R [36:36] ;
  assign accu_ctrl_ram_valid_X156 [0:0] = accu_ctrl_ram_valid_X [36:36] ;
  assign accu_ctrl_ram_valid_C156 [0:0] = accu_ctrl_ram_valid_C [36:36] ;
  assign { accu_ctrl_ram_valid_R156 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X156 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C156 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R157 ;
  logic [191:0] accu_ctrl_ram_valid_X157 ;
  logic [191:0] accu_ctrl_ram_valid_C157 ;
  assign accu_ctrl_ram_valid_R157 [0:0] = accu_ctrl_ram_valid_R [35:35] ;
  assign accu_ctrl_ram_valid_X157 [0:0] = accu_ctrl_ram_valid_X [35:35] ;
  assign accu_ctrl_ram_valid_C157 [0:0] = accu_ctrl_ram_valid_C [35:35] ;
  assign { accu_ctrl_ram_valid_R157 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X157 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C157 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R158 ;
  logic [191:0] accu_ctrl_ram_valid_X158 ;
  logic [191:0] accu_ctrl_ram_valid_C158 ;
  assign accu_ctrl_ram_valid_R158 [0:0] = accu_ctrl_ram_valid_R [34:34] ;
  assign accu_ctrl_ram_valid_X158 [0:0] = accu_ctrl_ram_valid_X [34:34] ;
  assign accu_ctrl_ram_valid_C158 [0:0] = accu_ctrl_ram_valid_C [34:34] ;
  assign { accu_ctrl_ram_valid_R158 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X158 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C158 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R159 ;
  logic [191:0] accu_ctrl_ram_valid_X159 ;
  logic [191:0] accu_ctrl_ram_valid_C159 ;
  assign accu_ctrl_ram_valid_R159 [0:0] = accu_ctrl_ram_valid_R [33:33] ;
  assign accu_ctrl_ram_valid_X159 [0:0] = accu_ctrl_ram_valid_X [33:33] ;
  assign accu_ctrl_ram_valid_C159 [0:0] = accu_ctrl_ram_valid_C [33:33] ;
  assign { accu_ctrl_ram_valid_R159 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X159 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C159 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R160 ;
  logic [191:0] accu_ctrl_ram_valid_X160 ;
  logic [191:0] accu_ctrl_ram_valid_C160 ;
  assign accu_ctrl_ram_valid_R160 [0:0] = accu_ctrl_ram_valid_R [32:32] ;
  assign accu_ctrl_ram_valid_X160 [0:0] = accu_ctrl_ram_valid_X [32:32] ;
  assign accu_ctrl_ram_valid_C160 [0:0] = accu_ctrl_ram_valid_C [32:32] ;
  assign { accu_ctrl_ram_valid_R160 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X160 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C160 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R161 ;
  logic [191:0] accu_ctrl_ram_valid_X161 ;
  logic [191:0] accu_ctrl_ram_valid_C161 ;
  assign accu_ctrl_ram_valid_R161 [0:0] = accu_ctrl_ram_valid_R [31:31] ;
  assign accu_ctrl_ram_valid_X161 [0:0] = accu_ctrl_ram_valid_X [31:31] ;
  assign accu_ctrl_ram_valid_C161 [0:0] = accu_ctrl_ram_valid_C [31:31] ;
  assign { accu_ctrl_ram_valid_R161 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X161 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C161 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R162 ;
  logic [191:0] accu_ctrl_ram_valid_X162 ;
  logic [191:0] accu_ctrl_ram_valid_C162 ;
  assign accu_ctrl_ram_valid_R162 [0:0] = accu_ctrl_ram_valid_R [30:30] ;
  assign accu_ctrl_ram_valid_X162 [0:0] = accu_ctrl_ram_valid_X [30:30] ;
  assign accu_ctrl_ram_valid_C162 [0:0] = accu_ctrl_ram_valid_C [30:30] ;
  assign { accu_ctrl_ram_valid_R162 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X162 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C162 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R163 ;
  logic [191:0] accu_ctrl_ram_valid_X163 ;
  logic [191:0] accu_ctrl_ram_valid_C163 ;
  assign accu_ctrl_ram_valid_R163 [0:0] = accu_ctrl_ram_valid_R [29:29] ;
  assign accu_ctrl_ram_valid_X163 [0:0] = accu_ctrl_ram_valid_X [29:29] ;
  assign accu_ctrl_ram_valid_C163 [0:0] = accu_ctrl_ram_valid_C [29:29] ;
  assign { accu_ctrl_ram_valid_R163 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X163 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C163 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R164 ;
  logic [191:0] accu_ctrl_ram_valid_X164 ;
  logic [191:0] accu_ctrl_ram_valid_C164 ;
  assign accu_ctrl_ram_valid_R164 [0:0] = accu_ctrl_ram_valid_R [28:28] ;
  assign accu_ctrl_ram_valid_X164 [0:0] = accu_ctrl_ram_valid_X [28:28] ;
  assign accu_ctrl_ram_valid_C164 [0:0] = accu_ctrl_ram_valid_C [28:28] ;
  assign { accu_ctrl_ram_valid_R164 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X164 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C164 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R165 ;
  logic [191:0] accu_ctrl_ram_valid_X165 ;
  logic [191:0] accu_ctrl_ram_valid_C165 ;
  assign accu_ctrl_ram_valid_R165 [0:0] = accu_ctrl_ram_valid_R [27:27] ;
  assign accu_ctrl_ram_valid_X165 [0:0] = accu_ctrl_ram_valid_X [27:27] ;
  assign accu_ctrl_ram_valid_C165 [0:0] = accu_ctrl_ram_valid_C [27:27] ;
  assign { accu_ctrl_ram_valid_R165 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X165 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C165 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R166 ;
  logic [191:0] accu_ctrl_ram_valid_X166 ;
  logic [191:0] accu_ctrl_ram_valid_C166 ;
  assign accu_ctrl_ram_valid_R166 [0:0] = accu_ctrl_ram_valid_R [26:26] ;
  assign accu_ctrl_ram_valid_X166 [0:0] = accu_ctrl_ram_valid_X [26:26] ;
  assign accu_ctrl_ram_valid_C166 [0:0] = accu_ctrl_ram_valid_C [26:26] ;
  assign { accu_ctrl_ram_valid_R166 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X166 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C166 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R167 ;
  logic [191:0] accu_ctrl_ram_valid_X167 ;
  logic [191:0] accu_ctrl_ram_valid_C167 ;
  assign accu_ctrl_ram_valid_R167 [0:0] = accu_ctrl_ram_valid_R [25:25] ;
  assign accu_ctrl_ram_valid_X167 [0:0] = accu_ctrl_ram_valid_X [25:25] ;
  assign accu_ctrl_ram_valid_C167 [0:0] = accu_ctrl_ram_valid_C [25:25] ;
  assign { accu_ctrl_ram_valid_R167 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X167 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C167 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R168 ;
  logic [191:0] accu_ctrl_ram_valid_X168 ;
  logic [191:0] accu_ctrl_ram_valid_C168 ;
  assign accu_ctrl_ram_valid_R168 [0:0] = accu_ctrl_ram_valid_R [24:24] ;
  assign accu_ctrl_ram_valid_X168 [0:0] = accu_ctrl_ram_valid_X [24:24] ;
  assign accu_ctrl_ram_valid_C168 [0:0] = accu_ctrl_ram_valid_C [24:24] ;
  assign { accu_ctrl_ram_valid_R168 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X168 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C168 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R169 ;
  logic [191:0] accu_ctrl_ram_valid_X169 ;
  logic [191:0] accu_ctrl_ram_valid_C169 ;
  assign accu_ctrl_ram_valid_R169 [0:0] = accu_ctrl_ram_valid_R [23:23] ;
  assign accu_ctrl_ram_valid_X169 [0:0] = accu_ctrl_ram_valid_X [23:23] ;
  assign accu_ctrl_ram_valid_C169 [0:0] = accu_ctrl_ram_valid_C [23:23] ;
  assign { accu_ctrl_ram_valid_R169 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X169 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C169 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R170 ;
  logic [191:0] accu_ctrl_ram_valid_X170 ;
  logic [191:0] accu_ctrl_ram_valid_C170 ;
  assign accu_ctrl_ram_valid_R170 [0:0] = accu_ctrl_ram_valid_R [22:22] ;
  assign accu_ctrl_ram_valid_X170 [0:0] = accu_ctrl_ram_valid_X [22:22] ;
  assign accu_ctrl_ram_valid_C170 [0:0] = accu_ctrl_ram_valid_C [22:22] ;
  assign { accu_ctrl_ram_valid_R170 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X170 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C170 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R171 ;
  logic [191:0] accu_ctrl_ram_valid_X171 ;
  logic [191:0] accu_ctrl_ram_valid_C171 ;
  assign accu_ctrl_ram_valid_R171 [0:0] = accu_ctrl_ram_valid_R [21:21] ;
  assign accu_ctrl_ram_valid_X171 [0:0] = accu_ctrl_ram_valid_X [21:21] ;
  assign accu_ctrl_ram_valid_C171 [0:0] = accu_ctrl_ram_valid_C [21:21] ;
  assign { accu_ctrl_ram_valid_R171 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X171 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C171 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R172 ;
  logic [191:0] accu_ctrl_ram_valid_X172 ;
  logic [191:0] accu_ctrl_ram_valid_C172 ;
  assign accu_ctrl_ram_valid_R172 [0:0] = accu_ctrl_ram_valid_R [20:20] ;
  assign accu_ctrl_ram_valid_X172 [0:0] = accu_ctrl_ram_valid_X [20:20] ;
  assign accu_ctrl_ram_valid_C172 [0:0] = accu_ctrl_ram_valid_C [20:20] ;
  assign { accu_ctrl_ram_valid_R172 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X172 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C172 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R173 ;
  logic [191:0] accu_ctrl_ram_valid_X173 ;
  logic [191:0] accu_ctrl_ram_valid_C173 ;
  assign accu_ctrl_ram_valid_R173 [0:0] = accu_ctrl_ram_valid_R [19:19] ;
  assign accu_ctrl_ram_valid_X173 [0:0] = accu_ctrl_ram_valid_X [19:19] ;
  assign accu_ctrl_ram_valid_C173 [0:0] = accu_ctrl_ram_valid_C [19:19] ;
  assign { accu_ctrl_ram_valid_R173 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X173 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C173 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R174 ;
  logic [191:0] accu_ctrl_ram_valid_X174 ;
  logic [191:0] accu_ctrl_ram_valid_C174 ;
  assign accu_ctrl_ram_valid_R174 [0:0] = accu_ctrl_ram_valid_R [18:18] ;
  assign accu_ctrl_ram_valid_X174 [0:0] = accu_ctrl_ram_valid_X [18:18] ;
  assign accu_ctrl_ram_valid_C174 [0:0] = accu_ctrl_ram_valid_C [18:18] ;
  assign { accu_ctrl_ram_valid_R174 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X174 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C174 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R175 ;
  logic [191:0] accu_ctrl_ram_valid_X175 ;
  logic [191:0] accu_ctrl_ram_valid_C175 ;
  assign accu_ctrl_ram_valid_R175 [0:0] = accu_ctrl_ram_valid_R [17:17] ;
  assign accu_ctrl_ram_valid_X175 [0:0] = accu_ctrl_ram_valid_X [17:17] ;
  assign accu_ctrl_ram_valid_C175 [0:0] = accu_ctrl_ram_valid_C [17:17] ;
  assign { accu_ctrl_ram_valid_R175 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X175 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C175 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R176 ;
  logic [191:0] accu_ctrl_ram_valid_X176 ;
  logic [191:0] accu_ctrl_ram_valid_C176 ;
  assign accu_ctrl_ram_valid_R176 [0:0] = accu_ctrl_ram_valid_R [16:16] ;
  assign accu_ctrl_ram_valid_X176 [0:0] = accu_ctrl_ram_valid_X [16:16] ;
  assign accu_ctrl_ram_valid_C176 [0:0] = accu_ctrl_ram_valid_C [16:16] ;
  assign { accu_ctrl_ram_valid_R176 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X176 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C176 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R177 ;
  logic [191:0] accu_ctrl_ram_valid_X177 ;
  logic [191:0] accu_ctrl_ram_valid_C177 ;
  assign accu_ctrl_ram_valid_R177 [0:0] = accu_ctrl_ram_valid_R [15:15] ;
  assign accu_ctrl_ram_valid_X177 [0:0] = accu_ctrl_ram_valid_X [15:15] ;
  assign accu_ctrl_ram_valid_C177 [0:0] = accu_ctrl_ram_valid_C [15:15] ;
  assign { accu_ctrl_ram_valid_R177 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X177 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C177 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R178 ;
  logic [191:0] accu_ctrl_ram_valid_X178 ;
  logic [191:0] accu_ctrl_ram_valid_C178 ;
  assign accu_ctrl_ram_valid_R178 [0:0] = accu_ctrl_ram_valid_R [14:14] ;
  assign accu_ctrl_ram_valid_X178 [0:0] = accu_ctrl_ram_valid_X [14:14] ;
  assign accu_ctrl_ram_valid_C178 [0:0] = accu_ctrl_ram_valid_C [14:14] ;
  assign { accu_ctrl_ram_valid_R178 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X178 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C178 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R179 ;
  logic [191:0] accu_ctrl_ram_valid_X179 ;
  logic [191:0] accu_ctrl_ram_valid_C179 ;
  assign accu_ctrl_ram_valid_R179 [0:0] = accu_ctrl_ram_valid_R [13:13] ;
  assign accu_ctrl_ram_valid_X179 [0:0] = accu_ctrl_ram_valid_X [13:13] ;
  assign accu_ctrl_ram_valid_C179 [0:0] = accu_ctrl_ram_valid_C [13:13] ;
  assign { accu_ctrl_ram_valid_R179 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X179 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C179 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R180 ;
  logic [191:0] accu_ctrl_ram_valid_X180 ;
  logic [191:0] accu_ctrl_ram_valid_C180 ;
  assign accu_ctrl_ram_valid_R180 [0:0] = accu_ctrl_ram_valid_R [12:12] ;
  assign accu_ctrl_ram_valid_X180 [0:0] = accu_ctrl_ram_valid_X [12:12] ;
  assign accu_ctrl_ram_valid_C180 [0:0] = accu_ctrl_ram_valid_C [12:12] ;
  assign { accu_ctrl_ram_valid_R180 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X180 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C180 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R181 ;
  logic [191:0] accu_ctrl_ram_valid_X181 ;
  logic [191:0] accu_ctrl_ram_valid_C181 ;
  assign accu_ctrl_ram_valid_R181 [0:0] = accu_ctrl_ram_valid_R [11:11] ;
  assign accu_ctrl_ram_valid_X181 [0:0] = accu_ctrl_ram_valid_X [11:11] ;
  assign accu_ctrl_ram_valid_C181 [0:0] = accu_ctrl_ram_valid_C [11:11] ;
  assign { accu_ctrl_ram_valid_R181 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X181 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C181 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R182 ;
  logic [191:0] accu_ctrl_ram_valid_X182 ;
  logic [191:0] accu_ctrl_ram_valid_C182 ;
  assign accu_ctrl_ram_valid_R182 [0:0] = accu_ctrl_ram_valid_R [10:10] ;
  assign accu_ctrl_ram_valid_X182 [0:0] = accu_ctrl_ram_valid_X [10:10] ;
  assign accu_ctrl_ram_valid_C182 [0:0] = accu_ctrl_ram_valid_C [10:10] ;
  assign { accu_ctrl_ram_valid_R182 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X182 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C182 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R183 ;
  logic [191:0] accu_ctrl_ram_valid_X183 ;
  logic [191:0] accu_ctrl_ram_valid_C183 ;
  assign accu_ctrl_ram_valid_R183 [0:0] = accu_ctrl_ram_valid_R [9:9] ;
  assign accu_ctrl_ram_valid_X183 [0:0] = accu_ctrl_ram_valid_X [9:9] ;
  assign accu_ctrl_ram_valid_C183 [0:0] = accu_ctrl_ram_valid_C [9:9] ;
  assign { accu_ctrl_ram_valid_R183 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X183 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C183 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R184 ;
  logic [191:0] accu_ctrl_ram_valid_X184 ;
  logic [191:0] accu_ctrl_ram_valid_C184 ;
  assign accu_ctrl_ram_valid_R184 [0:0] = accu_ctrl_ram_valid_R [8:8] ;
  assign accu_ctrl_ram_valid_X184 [0:0] = accu_ctrl_ram_valid_X [8:8] ;
  assign accu_ctrl_ram_valid_C184 [0:0] = accu_ctrl_ram_valid_C [8:8] ;
  assign { accu_ctrl_ram_valid_R184 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X184 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C184 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R185 ;
  logic [191:0] accu_ctrl_ram_valid_X185 ;
  logic [191:0] accu_ctrl_ram_valid_C185 ;
  assign accu_ctrl_ram_valid_R185 [0:0] = accu_ctrl_ram_valid_R [7:7] ;
  assign accu_ctrl_ram_valid_X185 [0:0] = accu_ctrl_ram_valid_X [7:7] ;
  assign accu_ctrl_ram_valid_C185 [0:0] = accu_ctrl_ram_valid_C [7:7] ;
  assign { accu_ctrl_ram_valid_R185 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X185 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C185 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R186 ;
  logic [191:0] accu_ctrl_ram_valid_X186 ;
  logic [191:0] accu_ctrl_ram_valid_C186 ;
  assign accu_ctrl_ram_valid_R186 [0:0] = accu_ctrl_ram_valid_R [6:6] ;
  assign accu_ctrl_ram_valid_X186 [0:0] = accu_ctrl_ram_valid_X [6:6] ;
  assign accu_ctrl_ram_valid_C186 [0:0] = accu_ctrl_ram_valid_C [6:6] ;
  assign { accu_ctrl_ram_valid_R186 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X186 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C186 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R187 ;
  logic [191:0] accu_ctrl_ram_valid_X187 ;
  logic [191:0] accu_ctrl_ram_valid_C187 ;
  assign accu_ctrl_ram_valid_R187 [0:0] = accu_ctrl_ram_valid_R [5:5] ;
  assign accu_ctrl_ram_valid_X187 [0:0] = accu_ctrl_ram_valid_X [5:5] ;
  assign accu_ctrl_ram_valid_C187 [0:0] = accu_ctrl_ram_valid_C [5:5] ;
  assign { accu_ctrl_ram_valid_R187 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X187 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C187 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R188 ;
  logic [191:0] accu_ctrl_ram_valid_X188 ;
  logic [191:0] accu_ctrl_ram_valid_C188 ;
  assign accu_ctrl_ram_valid_R188 [0:0] = accu_ctrl_ram_valid_R [4:4] ;
  assign accu_ctrl_ram_valid_X188 [0:0] = accu_ctrl_ram_valid_X [4:4] ;
  assign accu_ctrl_ram_valid_C188 [0:0] = accu_ctrl_ram_valid_C [4:4] ;
  assign { accu_ctrl_ram_valid_R188 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X188 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C188 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R189 ;
  logic [191:0] accu_ctrl_ram_valid_X189 ;
  logic [191:0] accu_ctrl_ram_valid_C189 ;
  assign accu_ctrl_ram_valid_R189 [0:0] = accu_ctrl_ram_valid_R [3:3] ;
  assign accu_ctrl_ram_valid_X189 [0:0] = accu_ctrl_ram_valid_X [3:3] ;
  assign accu_ctrl_ram_valid_C189 [0:0] = accu_ctrl_ram_valid_C [3:3] ;
  assign { accu_ctrl_ram_valid_R189 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X189 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C189 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R190 ;
  logic [191:0] accu_ctrl_ram_valid_X190 ;
  logic [191:0] accu_ctrl_ram_valid_C190 ;
  assign accu_ctrl_ram_valid_R190 [0:0] = accu_ctrl_ram_valid_R [2:2] ;
  assign accu_ctrl_ram_valid_X190 [0:0] = accu_ctrl_ram_valid_X [2:2] ;
  assign accu_ctrl_ram_valid_C190 [0:0] = accu_ctrl_ram_valid_C [2:2] ;
  assign { accu_ctrl_ram_valid_R190 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X190 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C190 [191:1] } = 0;
  logic [191:0] accu_ctrl_ram_valid_R191 ;
  logic [191:0] accu_ctrl_ram_valid_X191 ;
  logic [191:0] accu_ctrl_ram_valid_C191 ;
  assign accu_ctrl_ram_valid_R191 [0:0] = accu_ctrl_ram_valid_R [1:1] ;
  assign accu_ctrl_ram_valid_X191 [0:0] = accu_ctrl_ram_valid_X [1:1] ;
  assign accu_ctrl_ram_valid_C191 [0:0] = accu_ctrl_ram_valid_C [1:1] ;
  assign accu_ctrl_valid_d0 = accu_valid[0];
  assign { accu_valid_R25 [8:1] } = 0;
  assign { accu_valid_X25 [8:1] } = 0;
  assign { accu_valid_C25 [8:1] } = 0;
  logic [8:0] accu_valid_C26 ;
  logic [8:0] accu_valid_R26 ;
  logic [8:0] accu_valid_X26 ;
  assign accu_ctrl_valid_d0_T = accu_valid_T [0] ;
  assign accu_valid_C26 [0] = accu_ctrl_valid_d0_C ;
  assign accu_valid_R26 [0] = accu_ctrl_valid_d0_R ;
  assign accu_valid_X26 [0] = accu_ctrl_valid_d0_X ;
  assign accu_ctrl_valid_d0_S = accu_valid_S ;
  assign accu_layer_end = accu_pd[8];
  assign accu_layer_end_T = accu_pd_T [8] ;
  assign accu_pd_C6 [8] = accu_layer_end_C ;
  assign accu_pd_R6 [8] = accu_layer_end_R ;
  assign accu_pd_X6 [8] = accu_layer_end_X ;
  assign accu_layer_end_S = accu_pd_S ;
  assign accu_layer_end_d0 = accu_pd[8];
  assign { accu_pd_R6 [0], accu_pd_R6 [1], accu_pd_R6 [2], accu_pd_R6 [3], accu_pd_R6 [4], accu_pd_R6 [5], accu_pd_R6 [6] } = 0;
  assign { accu_pd_X6 [0], accu_pd_X6 [1], accu_pd_X6 [2], accu_pd_X6 [3], accu_pd_X6 [4], accu_pd_X6 [5], accu_pd_X6 [6] } = 0;
  assign { accu_pd_C6 [0], accu_pd_C6 [1], accu_pd_C6 [2], accu_pd_C6 [3], accu_pd_C6 [4], accu_pd_C6 [5], accu_pd_C6 [6] } = 0;
  logic [8:0] accu_pd_C7 ;
  logic [8:0] accu_pd_R7 ;
  logic [8:0] accu_pd_X7 ;
  assign accu_layer_end_d0_T = accu_pd_T [8] ;
  assign accu_pd_C7 [8] = accu_layer_end_d0_C ;
  assign accu_pd_R7 [8] = accu_layer_end_d0_R ;
  assign accu_pd_X7 [8] = accu_layer_end_d0_X ;
  assign accu_layer_end_d0_S = accu_pd_S ;
  assign accu_ram_sel_0_w = accu_rd_mask_w[0];
  logic [7:0] accu_rd_mask_w_C2 ;
  logic [7:0] accu_rd_mask_w_R2 ;
  logic [7:0] accu_rd_mask_w_X2 ;
  assign accu_ram_sel_0_w_T = accu_rd_mask_w_T [0] ;
  assign accu_rd_mask_w_C2 [0] = accu_ram_sel_0_w_C ;
  assign accu_rd_mask_w_R2 [0] = accu_ram_sel_0_w_R ;
  assign accu_rd_mask_w_X2 [0] = accu_ram_sel_0_w_X ;
  assign accu_ram_sel_0_w_S = accu_rd_mask_w_S ;
  assign accu_ram_sel_4_w = accu_rd_mask_w[4];
  assign accu_ram_sel_4_w_T = accu_rd_mask_w_T [4] ;
  assign accu_rd_mask_w_C2 [4] = accu_ram_sel_4_w_C ;
  assign accu_rd_mask_w_R2 [4] = accu_ram_sel_4_w_R ;
  assign accu_rd_mask_w_X2 [4] = accu_ram_sel_4_w_X ;
  assign accu_ram_sel_4_w_S = accu_rd_mask_w_S ;
  assign accu_ram_valid_d0 = accu_ram_valid;
  logic [0:0] accu_ram_valid_C1 ;
  logic [0:0] accu_ram_valid_R1 ;
  logic [0:0] accu_ram_valid_X1 ;
  assign accu_ram_valid_d0_T = accu_ram_valid_T ;
  assign accu_ram_valid_C1 = accu_ram_valid_d0_C ;
  assign accu_ram_valid_R1 = accu_ram_valid_d0_R ;
  assign accu_ram_valid_X1 = accu_ram_valid_d0_X ;
  assign accu_ram_valid_d0_S = accu_ram_valid_S ;
  assign accu_rd_en = abuf_rd_en;
  logic [7:0] abuf_rd_en_C1 ;
  logic [7:0] abuf_rd_en_R1 ;
  logic [7:0] abuf_rd_en_X1 ;
  assign accu_rd_en_T = abuf_rd_en_T ;
  assign abuf_rd_en_C1 = accu_rd_en_C ;
  assign abuf_rd_en_R1 = accu_rd_en_R ;
  assign abuf_rd_en_X1 = accu_rd_en_X ;
  assign accu_rd_en_S = abuf_rd_en_S ;
  assign accu_rd_mask_d0 = accu_rd_mask;
  logic [7:0] accu_rd_mask_C3 ;
  logic [7:0] accu_rd_mask_R3 ;
  logic [7:0] accu_rd_mask_X3 ;
  assign accu_rd_mask_d0_T = accu_rd_mask_T ;
  assign accu_rd_mask_C3 = accu_rd_mask_d0_C ;
  assign accu_rd_mask_R3 = accu_rd_mask_d0_R ;
  assign accu_rd_mask_X3 = accu_rd_mask_d0_X ;
  assign accu_rd_mask_d0_S = accu_rd_mask_S ;
  assign accu_stripe_end = accu_pd[6];
  assign accu_stripe_end_T = accu_pd_T [6] ;
  assign accu_pd_C7 [6] = accu_stripe_end_C ;
  assign accu_pd_R7 [6] = accu_stripe_end_R ;
  assign accu_pd_X7 [6] = accu_stripe_end_X ;
  assign accu_stripe_end_S = accu_pd_S ;
  assign accu_stripe_end_d0 = accu_pd[6];
  assign { accu_pd_R7 [0], accu_pd_R7 [1], accu_pd_R7 [2], accu_pd_R7 [3], accu_pd_R7 [4], accu_pd_R7 [5], accu_pd_R7 [7] } = 0;
  assign { accu_pd_X7 [0], accu_pd_X7 [1], accu_pd_X7 [2], accu_pd_X7 [3], accu_pd_X7 [4], accu_pd_X7 [5], accu_pd_X7 [7] } = 0;
  assign { accu_pd_C7 [0], accu_pd_C7 [1], accu_pd_C7 [2], accu_pd_C7 [3], accu_pd_C7 [4], accu_pd_C7 [5], accu_pd_C7 [7] } = 0;
  logic [8:0] accu_pd_C8 ;
  logic [8:0] accu_pd_R8 ;
  logic [8:0] accu_pd_X8 ;
  assign accu_stripe_end_d0_T = accu_pd_T [6] ;
  assign accu_pd_C8 [6] = accu_stripe_end_d0_C ;
  assign accu_pd_R8 [6] = accu_stripe_end_d0_R ;
  assign accu_pd_X8 [6] = accu_stripe_end_d0_X ;
  assign accu_stripe_end_d0_S = accu_pd_S ;
  assign accu_stripe_st = accu_pd[5];
  assign accu_stripe_st_T = accu_pd_T [5] ;
  assign accu_pd_C8 [5] = accu_stripe_st_C ;
  assign accu_pd_R8 [5] = accu_stripe_st_R ;
  assign accu_pd_X8 [5] = accu_stripe_st_X ;
  assign accu_stripe_st_S = accu_pd_S ;
  assign accu_valid[8:1] = { accu_valid[0], accu_valid[0], accu_valid[0], accu_valid[0], accu_valid[0], accu_valid[0], accu_valid[0], accu_valid[0] };
  assign accu_valid_T [8:1] = {  accu_valid_T [0] , accu_valid_T [0] , accu_valid_T [0] , accu_valid_T [0] , accu_valid_T [0] , accu_valid_T [0] , accu_valid_T [0] , accu_valid_T [0]  };
  logic [13:0] accu_valid_S ;
  assign accu_valid_S = 0 ;
  assign { accu_valid_R26 [8:1] } = 0;
  assign { accu_valid_X26 [8:1] } = 0;
  assign { accu_valid_C26 [8:1] } = 0;
  logic [8:0] accu_valid_R27 ;
  logic [8:0] accu_valid_X27 ;
  logic [8:0] accu_valid_C27 ;
  assign accu_valid_R27 [0:0] = accu_valid_R [8:8] ;
  assign accu_valid_X27 [0:0] = accu_valid_X [8:8] ;
  assign accu_valid_C27 [0:0] = accu_valid_C [8:8] ;
  assign { accu_valid_R27 [8:1] } = 0;
  assign { accu_valid_X27 [8:1] } = 0;
  assign { accu_valid_C27 [8:1] } = 0;
  logic [8:0] accu_valid_R28 ;
  logic [8:0] accu_valid_X28 ;
  logic [8:0] accu_valid_C28 ;
  assign accu_valid_R28 [0:0] = accu_valid_R [7:7] ;
  assign accu_valid_X28 [0:0] = accu_valid_X [7:7] ;
  assign accu_valid_C28 [0:0] = accu_valid_C [7:7] ;
  assign { accu_valid_R28 [8:1] } = 0;
  assign { accu_valid_X28 [8:1] } = 0;
  assign { accu_valid_C28 [8:1] } = 0;
  logic [8:0] accu_valid_R29 ;
  logic [8:0] accu_valid_X29 ;
  logic [8:0] accu_valid_C29 ;
  assign accu_valid_R29 [0:0] = accu_valid_R [6:6] ;
  assign accu_valid_X29 [0:0] = accu_valid_X [6:6] ;
  assign accu_valid_C29 [0:0] = accu_valid_C [6:6] ;
  assign { accu_valid_R29 [8:1] } = 0;
  assign { accu_valid_X29 [8:1] } = 0;
  assign { accu_valid_C29 [8:1] } = 0;
  logic [8:0] accu_valid_R30 ;
  logic [8:0] accu_valid_X30 ;
  logic [8:0] accu_valid_C30 ;
  assign accu_valid_R30 [0:0] = accu_valid_R [5:5] ;
  assign accu_valid_X30 [0:0] = accu_valid_X [5:5] ;
  assign accu_valid_C30 [0:0] = accu_valid_C [5:5] ;
  assign { accu_valid_R30 [8:1] } = 0;
  assign { accu_valid_X30 [8:1] } = 0;
  assign { accu_valid_C30 [8:1] } = 0;
  logic [8:0] accu_valid_R31 ;
  logic [8:0] accu_valid_X31 ;
  logic [8:0] accu_valid_C31 ;
  assign accu_valid_R31 [0:0] = accu_valid_R [4:4] ;
  assign accu_valid_X31 [0:0] = accu_valid_X [4:4] ;
  assign accu_valid_C31 [0:0] = accu_valid_C [4:4] ;
  assign { accu_valid_R31 [8:1] } = 0;
  assign { accu_valid_X31 [8:1] } = 0;
  assign { accu_valid_C31 [8:1] } = 0;
  logic [8:0] accu_valid_R32 ;
  logic [8:0] accu_valid_X32 ;
  logic [8:0] accu_valid_C32 ;
  assign accu_valid_R32 [0:0] = accu_valid_R [3:3] ;
  assign accu_valid_X32 [0:0] = accu_valid_X [3:3] ;
  assign accu_valid_C32 [0:0] = accu_valid_C [3:3] ;
  assign { accu_valid_R32 [8:1] } = 0;
  assign { accu_valid_X32 [8:1] } = 0;
  assign { accu_valid_C32 [8:1] } = 0;
  logic [8:0] accu_valid_R33 ;
  logic [8:0] accu_valid_X33 ;
  logic [8:0] accu_valid_C33 ;
  assign accu_valid_R33 [0:0] = accu_valid_R [2:2] ;
  assign accu_valid_X33 [0:0] = accu_valid_X [2:2] ;
  assign accu_valid_C33 [0:0] = accu_valid_C [2:2] ;
  assign { accu_valid_R33 [8:1] } = 0;
  assign { accu_valid_X33 [8:1] } = 0;
  assign { accu_valid_C33 [8:1] } = 0;
  logic [8:0] accu_valid_R34 ;
  logic [8:0] accu_valid_X34 ;
  logic [8:0] accu_valid_C34 ;
  assign accu_valid_R34 [0:0] = accu_valid_R [1:1] ;
  assign accu_valid_X34 [0:0] = accu_valid_X [1:1] ;
  assign accu_valid_C34 [0:0] = accu_valid_C [1:1] ;
  assign is_winograd = reg2dp_conv_mode;
  logic [0:0] reg2dp_conv_mode_C101 ;
  logic [0:0] reg2dp_conv_mode_R101 ;
  logic [0:0] reg2dp_conv_mode_X101 ;
  assign is_winograd_T = reg2dp_conv_mode_T ;
  assign reg2dp_conv_mode_C101 = is_winograd_C ;
  assign reg2dp_conv_mode_R101 = is_winograd_R ;
  assign reg2dp_conv_mode_X101 = is_winograd_X ;
  assign is_winograd_S = reg2dp_conv_mode_S ;
  assign pre_accu_addr = accu_addr_d2;
  logic [4:0] accu_addr_d2_C2 ;
  logic [4:0] accu_addr_d2_R2 ;
  logic [4:0] accu_addr_d2_X2 ;
  assign pre_accu_addr_T = accu_addr_d2_T ;
  assign accu_addr_d2_C2 = pre_accu_addr_C ;
  assign accu_addr_d2_R2 = pre_accu_addr_R ;
  assign accu_addr_d2_X2 = pre_accu_addr_X ;
  assign pre_accu_addr_S = accu_addr_d2_S ;
  assign pre_accu_channel_end = accu_channel_end_d2;
  logic [0:0] accu_channel_end_d2_C194 ;
  logic [0:0] accu_channel_end_d2_R194 ;
  logic [0:0] accu_channel_end_d2_X194 ;
  assign pre_accu_channel_end_T = accu_channel_end_d2_T ;
  assign accu_channel_end_d2_C194 = pre_accu_channel_end_C ;
  assign accu_channel_end_d2_R194 = pre_accu_channel_end_R ;
  assign accu_channel_end_d2_X194 = pre_accu_channel_end_X ;
  assign pre_accu_channel_end_S = accu_channel_end_d2_S ;
  assign pre_accu_ctrl_valid = accu_ctrl_valid_d2;
  logic [0:0] accu_ctrl_valid_d2_C16 ;
  logic [0:0] accu_ctrl_valid_d2_R16 ;
  logic [0:0] accu_ctrl_valid_d2_X16 ;
  assign pre_accu_ctrl_valid_T = accu_ctrl_valid_d2_T ;
  assign accu_ctrl_valid_d2_C16 = pre_accu_ctrl_valid_C ;
  assign accu_ctrl_valid_d2_R16 = pre_accu_ctrl_valid_R ;
  assign accu_ctrl_valid_d2_X16 = pre_accu_ctrl_valid_X ;
  assign pre_accu_ctrl_valid_S = accu_ctrl_valid_d2_S ;
  assign pre_accu_layer_end = accu_layer_end_d2;
  logic [0:0] accu_layer_end_d2_C2 ;
  logic [0:0] accu_layer_end_d2_R2 ;
  logic [0:0] accu_layer_end_d2_X2 ;
  assign pre_accu_layer_end_T = accu_layer_end_d2_T ;
  assign accu_layer_end_d2_C2 = pre_accu_layer_end_C ;
  assign accu_layer_end_d2_R2 = pre_accu_layer_end_R ;
  assign accu_layer_end_d2_X2 = pre_accu_layer_end_X ;
  assign pre_accu_layer_end_S = accu_layer_end_d2_S ;
  assign pre_accu_mode = accu_mode_d2;
  logic [3:0] accu_mode_d2_C2 ;
  logic [3:0] accu_mode_d2_R2 ;
  logic [3:0] accu_mode_d2_X2 ;
  assign pre_accu_mode_T = accu_mode_d2_T ;
  assign accu_mode_d2_C2 = pre_accu_mode_C ;
  assign accu_mode_d2_R2 = pre_accu_mode_R ;
  assign accu_mode_d2_X2 = pre_accu_mode_X ;
  assign pre_accu_mode_S = accu_mode_d2_S ;
  assign pre_accu_ram_sel_0 = accu_ram_sel_0_d2;
  logic [0:0] accu_ram_sel_0_d2_C17 ;
  logic [0:0] accu_ram_sel_0_d2_R17 ;
  logic [0:0] accu_ram_sel_0_d2_X17 ;
  assign pre_accu_ram_sel_0_T = accu_ram_sel_0_d2_T ;
  assign accu_ram_sel_0_d2_C17 = pre_accu_ram_sel_0_C ;
  assign accu_ram_sel_0_d2_R17 = pre_accu_ram_sel_0_R ;
  assign accu_ram_sel_0_d2_X17 = pre_accu_ram_sel_0_X ;
  assign pre_accu_ram_sel_0_S = accu_ram_sel_0_d2_S ;
  assign pre_accu_ram_sel_1 = accu_ram_sel_1_d2;
  logic [0:0] accu_ram_sel_1_d2_C17 ;
  logic [0:0] accu_ram_sel_1_d2_R17 ;
  logic [0:0] accu_ram_sel_1_d2_X17 ;
  assign pre_accu_ram_sel_1_T = accu_ram_sel_1_d2_T ;
  assign accu_ram_sel_1_d2_C17 = pre_accu_ram_sel_1_C ;
  assign accu_ram_sel_1_d2_R17 = pre_accu_ram_sel_1_R ;
  assign accu_ram_sel_1_d2_X17 = pre_accu_ram_sel_1_X ;
  assign pre_accu_ram_sel_1_S = accu_ram_sel_1_d2_S ;
  assign pre_accu_ram_sel_2 = accu_ram_sel_2_d2;
  logic [0:0] accu_ram_sel_2_d2_C17 ;
  logic [0:0] accu_ram_sel_2_d2_R17 ;
  logic [0:0] accu_ram_sel_2_d2_X17 ;
  assign pre_accu_ram_sel_2_T = accu_ram_sel_2_d2_T ;
  assign accu_ram_sel_2_d2_C17 = pre_accu_ram_sel_2_C ;
  assign accu_ram_sel_2_d2_R17 = pre_accu_ram_sel_2_R ;
  assign accu_ram_sel_2_d2_X17 = pre_accu_ram_sel_2_X ;
  assign pre_accu_ram_sel_2_S = accu_ram_sel_2_d2_S ;
  assign pre_accu_ram_sel_3 = accu_ram_sel_3_d2;
  logic [0:0] accu_ram_sel_3_d2_C17 ;
  logic [0:0] accu_ram_sel_3_d2_R17 ;
  logic [0:0] accu_ram_sel_3_d2_X17 ;
  assign pre_accu_ram_sel_3_T = accu_ram_sel_3_d2_T ;
  assign accu_ram_sel_3_d2_C17 = pre_accu_ram_sel_3_C ;
  assign accu_ram_sel_3_d2_R17 = pre_accu_ram_sel_3_R ;
  assign accu_ram_sel_3_d2_X17 = pre_accu_ram_sel_3_X ;
  assign pre_accu_ram_sel_3_S = accu_ram_sel_3_d2_S ;
  assign pre_accu_ram_sel_4 = accu_ram_sel_4_d2;
  logic [0:0] accu_ram_sel_4_d2_C17 ;
  logic [0:0] accu_ram_sel_4_d2_R17 ;
  logic [0:0] accu_ram_sel_4_d2_X17 ;
  assign pre_accu_ram_sel_4_T = accu_ram_sel_4_d2_T ;
  assign accu_ram_sel_4_d2_C17 = pre_accu_ram_sel_4_C ;
  assign accu_ram_sel_4_d2_R17 = pre_accu_ram_sel_4_R ;
  assign accu_ram_sel_4_d2_X17 = pre_accu_ram_sel_4_X ;
  assign pre_accu_ram_sel_4_S = accu_ram_sel_4_d2_S ;
  assign pre_accu_ram_sel_5 = accu_ram_sel_5_d2;
  logic [0:0] accu_ram_sel_5_d2_C17 ;
  logic [0:0] accu_ram_sel_5_d2_R17 ;
  logic [0:0] accu_ram_sel_5_d2_X17 ;
  assign pre_accu_ram_sel_5_T = accu_ram_sel_5_d2_T ;
  assign accu_ram_sel_5_d2_C17 = pre_accu_ram_sel_5_C ;
  assign accu_ram_sel_5_d2_R17 = pre_accu_ram_sel_5_R ;
  assign accu_ram_sel_5_d2_X17 = pre_accu_ram_sel_5_X ;
  assign pre_accu_ram_sel_5_S = accu_ram_sel_5_d2_S ;
  assign pre_accu_ram_sel_6 = accu_ram_sel_6_d2;
  logic [0:0] accu_ram_sel_6_d2_C17 ;
  logic [0:0] accu_ram_sel_6_d2_R17 ;
  logic [0:0] accu_ram_sel_6_d2_X17 ;
  assign pre_accu_ram_sel_6_T = accu_ram_sel_6_d2_T ;
  assign accu_ram_sel_6_d2_C17 = pre_accu_ram_sel_6_C ;
  assign accu_ram_sel_6_d2_R17 = pre_accu_ram_sel_6_R ;
  assign accu_ram_sel_6_d2_X17 = pre_accu_ram_sel_6_X ;
  assign pre_accu_ram_sel_6_S = accu_ram_sel_6_d2_S ;
  assign pre_accu_ram_sel_7 = accu_ram_sel_7_d2;
  logic [0:0] accu_ram_sel_7_d2_C17 ;
  logic [0:0] accu_ram_sel_7_d2_R17 ;
  logic [0:0] accu_ram_sel_7_d2_X17 ;
  assign pre_accu_ram_sel_7_T = accu_ram_sel_7_d2_T ;
  assign accu_ram_sel_7_d2_C17 = pre_accu_ram_sel_7_C ;
  assign accu_ram_sel_7_d2_R17 = pre_accu_ram_sel_7_R ;
  assign accu_ram_sel_7_d2_X17 = pre_accu_ram_sel_7_X ;
  assign pre_accu_ram_sel_7_S = accu_ram_sel_7_d2_S ;
  assign pre_accu_ram_valid = accu_ram_valid_d2;
  logic [0:0] accu_ram_valid_d2_C1 ;
  logic [0:0] accu_ram_valid_d2_R1 ;
  logic [0:0] accu_ram_valid_d2_X1 ;
  assign pre_accu_ram_valid_T = accu_ram_valid_d2_T ;
  assign accu_ram_valid_d2_C1 = pre_accu_ram_valid_C ;
  assign accu_ram_valid_d2_R1 = pre_accu_ram_valid_R ;
  assign accu_ram_valid_d2_X1 = pre_accu_ram_valid_X ;
  assign pre_accu_ram_valid_S = accu_ram_valid_d2_S ;
  assign pre_accu_rd_mask = accu_rd_mask_d2;
  logic [7:0] accu_rd_mask_d2_C2 ;
  logic [7:0] accu_rd_mask_d2_R2 ;
  logic [7:0] accu_rd_mask_d2_X2 ;
  assign pre_accu_rd_mask_T = accu_rd_mask_d2_T ;
  assign accu_rd_mask_d2_C2 = pre_accu_rd_mask_C ;
  assign accu_rd_mask_d2_R2 = pre_accu_rd_mask_R ;
  assign accu_rd_mask_d2_X2 = pre_accu_rd_mask_X ;
  assign pre_accu_rd_mask_S = accu_rd_mask_d2_S ;
  assign pre_accu_stripe_end = accu_stripe_end_d2;
  logic [0:0] accu_stripe_end_d2_C2 ;
  logic [0:0] accu_stripe_end_d2_R2 ;
  logic [0:0] accu_stripe_end_d2_X2 ;
  assign pre_accu_stripe_end_T = accu_stripe_end_d2_T ;
  assign accu_stripe_end_d2_C2 = pre_accu_stripe_end_C ;
  assign accu_stripe_end_d2_R2 = pre_accu_stripe_end_R ;
  assign accu_stripe_end_d2_X2 = pre_accu_stripe_end_X ;
  assign pre_accu_stripe_end_S = accu_stripe_end_d2_S ;
  assign slcg_cell_en = slcg_cell_en_d3;
  logic [3:0] slcg_cell_en_d3_C0 ;
  logic [3:0] slcg_cell_en_d3_R0 ;
  logic [3:0] slcg_cell_en_d3_X0 ;
  assign slcg_cell_en_T = slcg_cell_en_d3_T ;
  assign slcg_cell_en_d3_C0 = slcg_cell_en_C ;
  assign slcg_cell_en_d3_R0 = slcg_cell_en_R ;
  assign slcg_cell_en_d3_X0 = slcg_cell_en_X ;
  assign slcg_cell_en_S = slcg_cell_en_d3_S ;
  assign slcg_cell_en_d3_C = ( slcg_cell_en_d3_C0 );
  assign _081__C = ( _081__C0 );
  assign _080__C = ( _080__C0 );
  assign fangyuan19_C = ( fangyuan19_C0 );
  assign _067__C = ( _067__C0 );
  assign _066__C = ( _066__C0 );
  assign _079__C = ( _079__C0 );
  assign _064__C = ( _064__C0 );
  assign _078__C = ( _078__C0 );
  assign _077__C = ( _077__C0 );
  assign fangyuan18_C = ( fangyuan18_C0 );
  assign fangyuan17_C = ( fangyuan17_C0 );
  assign accu_rd_sel_w_C = ( accu_rd_sel_w_C0 ) | ( accu_rd_sel_w_C1 ) | ( accu_rd_sel_w_C2 );
  assign accu_cnt_inc_C = ( accu_cnt_inc_C0 );
  assign _074__C = ( _074__C0 );
  assign _076__C = ( _076__C0 );
  assign dp2reg_done_C = ( dp2reg_done_C0 );
  assign mac_a2accu_pd_C = ( mac_a2accu_pd_C0 );
  assign accu_cnt_w_C = ( accu_cnt_w_C0 ) | ( accu_cnt_w_C1 );
  assign fangyuan16_C = ( fangyuan16_C0 );
  assign accu_channel_st_w_C = ( accu_channel_st_w_C0 ) | ( accu_channel_st_w_C1 ) | ( accu_channel_st_w_C2 ) | ( accu_channel_st_w_C3 ) | ( accu_channel_st_w_C4 ) | ( accu_channel_st_w_C5 ) | ( accu_channel_st_w_C6 ) | ( accu_channel_st_w_C7 ) | ( accu_channel_st_w_C8 );
  assign fangyuan15_C = ( fangyuan15_C0 );
  assign is_x4_C = ( is_x4_C0 ) | ( is_x4_C1 ) | ( is_x4_C2 );
  assign is_x8_C = ( is_x8_C0 ) | ( is_x8_C1 ) | ( is_x8_C2 );
  assign accu_ram_sel_1_w_C = ( accu_ram_sel_1_w_C0 );
  assign accu_ram_sel_2_w_C = ( accu_ram_sel_2_w_C0 );
  assign accu_ram_sel_3_w_C = ( accu_ram_sel_3_w_C0 );
  assign accu_ram_sel_5_w_C = ( accu_ram_sel_5_w_C0 );
  assign accu_ram_sel_6_w_C = ( accu_ram_sel_6_w_C0 );
  assign accu_ram_sel_7_w_C = ( accu_ram_sel_7_w_C0 );
  assign _068__C = ( _068__C0 ) | ( _068__C1 ) | ( _068__C2 ) | ( _068__C3 ) | ( _068__C4 ) | ( _068__C5 ) | ( _068__C6 ) | ( _068__C7 ) | ( _068__C8 ) | ( _068__C9 ) | ( _068__C10 );
  assign cfg_winograd_C = ( cfg_winograd_C0 ) | ( cfg_winograd_C1 );
  assign fangyuan14_C = ( fangyuan14_C0 );
  assign reg2dp_clip_truncate_C = ( reg2dp_clip_truncate_C0 ) | ( reg2dp_clip_truncate_C1 ) | ( reg2dp_clip_truncate_C2 ) | ( reg2dp_clip_truncate_C3 ) | ( reg2dp_clip_truncate_C4 ) | ( reg2dp_clip_truncate_C5 ) | ( reg2dp_clip_truncate_C6 ) | ( reg2dp_clip_truncate_C7 ) | ( reg2dp_clip_truncate_C8 ) | ( reg2dp_clip_truncate_C9 ) | ( reg2dp_clip_truncate_C10 ) | ( reg2dp_clip_truncate_C11 ) | ( reg2dp_clip_truncate_C12 ) | ( reg2dp_clip_truncate_C13 ) | ( reg2dp_clip_truncate_C14 ) | ( reg2dp_clip_truncate_C15 ) | ( reg2dp_clip_truncate_C16 ) | ( reg2dp_clip_truncate_C17 ) | ( reg2dp_clip_truncate_C18 ) | ( reg2dp_clip_truncate_C19 ) | ( reg2dp_clip_truncate_C20 ) | ( reg2dp_clip_truncate_C21 ) | ( reg2dp_clip_truncate_C22 ) | ( reg2dp_clip_truncate_C23 ) | ( reg2dp_clip_truncate_C24 ) | ( reg2dp_clip_truncate_C25 ) | ( reg2dp_clip_truncate_C26 ) | ( reg2dp_clip_truncate_C27 ) | ( reg2dp_clip_truncate_C28 ) | ( reg2dp_clip_truncate_C29 ) | ( reg2dp_clip_truncate_C30 ) | ( reg2dp_clip_truncate_C31 ) | ( reg2dp_clip_truncate_C32 ) | ( reg2dp_clip_truncate_C33 ) | ( reg2dp_clip_truncate_C34 ) | ( reg2dp_clip_truncate_C35 ) | ( reg2dp_clip_truncate_C36 ) | ( reg2dp_clip_truncate_C37 ) | ( reg2dp_clip_truncate_C38 ) | ( reg2dp_clip_truncate_C39 ) | ( reg2dp_clip_truncate_C40 ) | ( reg2dp_clip_truncate_C41 ) | ( reg2dp_clip_truncate_C42 ) | ( reg2dp_clip_truncate_C43 ) | ( reg2dp_clip_truncate_C44 ) | ( reg2dp_clip_truncate_C45 ) | ( reg2dp_clip_truncate_C46 ) | ( reg2dp_clip_truncate_C47 ) | ( reg2dp_clip_truncate_C48 ) | ( reg2dp_clip_truncate_C49 ) | ( reg2dp_clip_truncate_C50 ) | ( reg2dp_clip_truncate_C51 ) | ( reg2dp_clip_truncate_C52 ) | ( reg2dp_clip_truncate_C53 ) | ( reg2dp_clip_truncate_C54 ) | ( reg2dp_clip_truncate_C55 ) | ( reg2dp_clip_truncate_C56 ) | ( reg2dp_clip_truncate_C57 ) | ( reg2dp_clip_truncate_C58 ) | ( reg2dp_clip_truncate_C59 ) | ( reg2dp_clip_truncate_C60 ) | ( reg2dp_clip_truncate_C61 ) | ( reg2dp_clip_truncate_C62 ) | ( reg2dp_clip_truncate_C63 ) | ( reg2dp_clip_truncate_C64 ) | ( reg2dp_clip_truncate_C65 ) | ( reg2dp_clip_truncate_C66 ) | ( reg2dp_clip_truncate_C67 ) | ( reg2dp_clip_truncate_C68 ) | ( reg2dp_clip_truncate_C69 ) | ( reg2dp_clip_truncate_C70 ) | ( reg2dp_clip_truncate_C71 ) | ( reg2dp_clip_truncate_C72 ) | ( reg2dp_clip_truncate_C73 ) | ( reg2dp_clip_truncate_C74 ) | ( reg2dp_clip_truncate_C75 ) | ( reg2dp_clip_truncate_C76 ) | ( reg2dp_clip_truncate_C77 ) | ( reg2dp_clip_truncate_C78 ) | ( reg2dp_clip_truncate_C79 ) | ( reg2dp_clip_truncate_C80 ) | ( reg2dp_clip_truncate_C81 ) | ( reg2dp_clip_truncate_C82 ) | ( reg2dp_clip_truncate_C83 ) | ( reg2dp_clip_truncate_C84 ) | ( reg2dp_clip_truncate_C85 ) | ( reg2dp_clip_truncate_C86 ) | ( reg2dp_clip_truncate_C87 ) | ( reg2dp_clip_truncate_C88 ) | ( reg2dp_clip_truncate_C89 ) | ( reg2dp_clip_truncate_C90 ) | ( reg2dp_clip_truncate_C91 ) | ( reg2dp_clip_truncate_C92 ) | ( reg2dp_clip_truncate_C93 ) | ( reg2dp_clip_truncate_C94 ) | ( reg2dp_clip_truncate_C95 ) | ( reg2dp_clip_truncate_C96 ) | ( reg2dp_clip_truncate_C97 ) | ( reg2dp_clip_truncate_C98 ) | ( reg2dp_clip_truncate_C99 ) | ( reg2dp_clip_truncate_C100 ) | ( reg2dp_clip_truncate_C101 ) | ( reg2dp_clip_truncate_C102 ) | ( reg2dp_clip_truncate_C103 ) | ( reg2dp_clip_truncate_C104 ) | ( reg2dp_clip_truncate_C105 ) | ( reg2dp_clip_truncate_C106 ) | ( reg2dp_clip_truncate_C107 ) | ( reg2dp_clip_truncate_C108 ) | ( reg2dp_clip_truncate_C109 ) | ( reg2dp_clip_truncate_C110 ) | ( reg2dp_clip_truncate_C111 ) | ( reg2dp_clip_truncate_C112 ) | ( reg2dp_clip_truncate_C113 ) | ( reg2dp_clip_truncate_C114 ) | ( reg2dp_clip_truncate_C115 ) | ( reg2dp_clip_truncate_C116 ) | ( reg2dp_clip_truncate_C117 ) | ( reg2dp_clip_truncate_C118 ) | ( reg2dp_clip_truncate_C119 ) | ( reg2dp_clip_truncate_C120 ) | ( reg2dp_clip_truncate_C121 ) | ( reg2dp_clip_truncate_C122 ) | ( reg2dp_clip_truncate_C123 ) | ( reg2dp_clip_truncate_C124 ) | ( reg2dp_clip_truncate_C125 ) | ( reg2dp_clip_truncate_C126 ) | ( reg2dp_clip_truncate_C127 );
  assign fangyuan13_C = ( fangyuan13_C0 );
  assign fangyuan12_C = ( fangyuan12_C0 );
  assign fangyuan11_C = ( fangyuan11_C0 );
  assign fangyuan10_C = ( fangyuan10_C0 );
  assign cfg_in_en_mask_w_C = ( cfg_in_en_mask_w_C0 );
  assign accu_addr_d0_C = ( accu_addr_d0_C0 ) | ( accu_addr_d0_C1 ) | ( accu_addr_d0_C2 );
  assign accu_mode_d0_C = ( accu_mode_d0_C0 ) | ( accu_mode_d0_C1 );
  assign accu_ram_sel_0_d0_C = ( accu_ram_sel_0_d0_C0 ) | ( accu_ram_sel_0_d0_C1 );
  assign accu_ram_sel_1_d0_C = ( accu_ram_sel_1_d0_C0 ) | ( accu_ram_sel_1_d0_C1 );
  assign accu_ram_sel_2_d0_C = ( accu_ram_sel_2_d0_C0 ) | ( accu_ram_sel_2_d0_C1 );
  assign accu_ram_sel_3_d0_C = ( accu_ram_sel_3_d0_C0 ) | ( accu_ram_sel_3_d0_C1 );
  assign accu_ram_sel_4_d0_C = ( accu_ram_sel_4_d0_C0 ) | ( accu_ram_sel_4_d0_C1 );
  assign accu_ram_sel_5_d0_C = ( accu_ram_sel_5_d0_C0 ) | ( accu_ram_sel_5_d0_C1 );
  assign accu_ram_sel_6_d0_C = ( accu_ram_sel_6_d0_C0 ) | ( accu_ram_sel_6_d0_C1 );
  assign accu_addr_d1_C = ( accu_addr_d1_C0 ) | ( accu_addr_d1_C1 );
  assign accu_mode_d1_C = ( accu_mode_d1_C0 ) | ( accu_mode_d1_C1 );
  assign accu_rd_mask_d1_C = ( accu_rd_mask_d1_C0 ) | ( accu_rd_mask_d1_C1 );
  assign accu_stripe_end_d1_C = ( accu_stripe_end_d1_C0 ) | ( accu_stripe_end_d1_C1 );
  assign accu_channel_end_d1_C = ( accu_channel_end_d1_C0 ) | ( accu_channel_end_d1_C1 );
  assign accu_layer_end_d1_C = ( accu_layer_end_d1_C0 ) | ( accu_layer_end_d1_C1 );
  assign accu_ram_sel_0_d1_C = ( accu_ram_sel_0_d1_C0 ) | ( accu_ram_sel_0_d1_C1 );
  assign accu_ram_sel_1_d1_C = ( accu_ram_sel_1_d1_C0 ) | ( accu_ram_sel_1_d1_C1 );
  assign accu_ram_sel_2_d1_C = ( accu_ram_sel_2_d1_C0 ) | ( accu_ram_sel_2_d1_C1 );
  assign accu_ram_sel_3_d1_C = ( accu_ram_sel_3_d1_C0 ) | ( accu_ram_sel_3_d1_C1 );
  assign accu_ram_sel_4_d1_C = ( accu_ram_sel_4_d1_C0 ) | ( accu_ram_sel_4_d1_C1 );
  assign accu_ram_sel_5_d1_C = ( accu_ram_sel_5_d1_C0 ) | ( accu_ram_sel_5_d1_C1 );
  assign accu_ram_sel_6_d1_C = ( accu_ram_sel_6_d1_C0 ) | ( accu_ram_sel_6_d1_C1 );
  assign accu_ram_sel_7_d1_C = ( accu_ram_sel_7_d1_C0 ) | ( accu_ram_sel_7_d1_C1 );
  assign accu_ctrl_addr_C = ( accu_ctrl_addr_C0 ) | ( accu_ctrl_addr_C1 );
  assign accu_addr_d2_C = ( accu_addr_d2_C0 ) | ( accu_addr_d2_C1 ) | ( accu_addr_d2_C2 );
  assign accu_ctrl_mode_C = ( accu_ctrl_mode_C0 ) | ( accu_ctrl_mode_C1 );
  assign accu_mode_d2_C = ( accu_mode_d2_C0 ) | ( accu_mode_d2_C1 ) | ( accu_mode_d2_C2 );
  assign accu_ctrl_rd_mask_C = ( accu_ctrl_rd_mask_C0 ) | ( accu_ctrl_rd_mask_C1 );
  assign accu_rd_mask_d2_C = ( accu_rd_mask_d2_C0 ) | ( accu_rd_mask_d2_C1 ) | ( accu_rd_mask_d2_C2 );
  assign accu_ctrl_stripe_end_C = ( accu_ctrl_stripe_end_C0 ) | ( accu_ctrl_stripe_end_C1 );
  assign accu_stripe_end_d2_C = ( accu_stripe_end_d2_C0 ) | ( accu_stripe_end_d2_C1 ) | ( accu_stripe_end_d2_C2 );
  assign accu_ctrl_channel_end_C = ( accu_ctrl_channel_end_C0 ) | ( accu_ctrl_channel_end_C1 );
  assign accu_ctrl_layer_end_C = ( accu_ctrl_layer_end_C0 ) | ( accu_ctrl_layer_end_C1 );
  assign accu_layer_end_d2_C = ( accu_layer_end_d2_C0 ) | ( accu_layer_end_d2_C1 ) | ( accu_layer_end_d2_C2 );
  assign accu_ctrl_ram_sel_0_C = ( accu_ctrl_ram_sel_0_C0 ) | ( accu_ctrl_ram_sel_0_C1 );
  assign fangyuan9_C = ( fangyuan9_C0 );
  assign accu_ram_sel_0_d2_C = ( accu_ram_sel_0_d2_C0 ) | ( accu_ram_sel_0_d2_C1 ) | ( accu_ram_sel_0_d2_C2 ) | ( accu_ram_sel_0_d2_C3 ) | ( accu_ram_sel_0_d2_C4 ) | ( accu_ram_sel_0_d2_C5 ) | ( accu_ram_sel_0_d2_C6 ) | ( accu_ram_sel_0_d2_C7 ) | ( accu_ram_sel_0_d2_C8 ) | ( accu_ram_sel_0_d2_C9 ) | ( accu_ram_sel_0_d2_C10 ) | ( accu_ram_sel_0_d2_C11 ) | ( accu_ram_sel_0_d2_C12 ) | ( accu_ram_sel_0_d2_C13 ) | ( accu_ram_sel_0_d2_C14 ) | ( accu_ram_sel_0_d2_C15 ) | ( accu_ram_sel_0_d2_C16 ) | ( accu_ram_sel_0_d2_C17 );
  assign accu_ctrl_ram_sel_1_C = ( accu_ctrl_ram_sel_1_C0 ) | ( accu_ctrl_ram_sel_1_C1 );
  assign fangyuan8_C = ( fangyuan8_C0 );
  assign accu_ram_sel_1_d2_C = ( accu_ram_sel_1_d2_C0 ) | ( accu_ram_sel_1_d2_C1 ) | ( accu_ram_sel_1_d2_C2 ) | ( accu_ram_sel_1_d2_C3 ) | ( accu_ram_sel_1_d2_C4 ) | ( accu_ram_sel_1_d2_C5 ) | ( accu_ram_sel_1_d2_C6 ) | ( accu_ram_sel_1_d2_C7 ) | ( accu_ram_sel_1_d2_C8 ) | ( accu_ram_sel_1_d2_C9 ) | ( accu_ram_sel_1_d2_C10 ) | ( accu_ram_sel_1_d2_C11 ) | ( accu_ram_sel_1_d2_C12 ) | ( accu_ram_sel_1_d2_C13 ) | ( accu_ram_sel_1_d2_C14 ) | ( accu_ram_sel_1_d2_C15 ) | ( accu_ram_sel_1_d2_C16 ) | ( accu_ram_sel_1_d2_C17 );
  assign accu_ctrl_ram_sel_2_C = ( accu_ctrl_ram_sel_2_C0 ) | ( accu_ctrl_ram_sel_2_C1 );
  assign fangyuan7_C = ( fangyuan7_C0 );
  assign accu_ram_sel_2_d2_C = ( accu_ram_sel_2_d2_C0 ) | ( accu_ram_sel_2_d2_C1 ) | ( accu_ram_sel_2_d2_C2 ) | ( accu_ram_sel_2_d2_C3 ) | ( accu_ram_sel_2_d2_C4 ) | ( accu_ram_sel_2_d2_C5 ) | ( accu_ram_sel_2_d2_C6 ) | ( accu_ram_sel_2_d2_C7 ) | ( accu_ram_sel_2_d2_C8 ) | ( accu_ram_sel_2_d2_C9 ) | ( accu_ram_sel_2_d2_C10 ) | ( accu_ram_sel_2_d2_C11 ) | ( accu_ram_sel_2_d2_C12 ) | ( accu_ram_sel_2_d2_C13 ) | ( accu_ram_sel_2_d2_C14 ) | ( accu_ram_sel_2_d2_C15 ) | ( accu_ram_sel_2_d2_C16 ) | ( accu_ram_sel_2_d2_C17 );
  assign accu_ctrl_ram_sel_3_C = ( accu_ctrl_ram_sel_3_C0 ) | ( accu_ctrl_ram_sel_3_C1 );
  assign fangyuan6_C = ( fangyuan6_C0 );
  assign accu_ram_sel_3_d2_C = ( accu_ram_sel_3_d2_C0 ) | ( accu_ram_sel_3_d2_C1 ) | ( accu_ram_sel_3_d2_C2 ) | ( accu_ram_sel_3_d2_C3 ) | ( accu_ram_sel_3_d2_C4 ) | ( accu_ram_sel_3_d2_C5 ) | ( accu_ram_sel_3_d2_C6 ) | ( accu_ram_sel_3_d2_C7 ) | ( accu_ram_sel_3_d2_C8 ) | ( accu_ram_sel_3_d2_C9 ) | ( accu_ram_sel_3_d2_C10 ) | ( accu_ram_sel_3_d2_C11 ) | ( accu_ram_sel_3_d2_C12 ) | ( accu_ram_sel_3_d2_C13 ) | ( accu_ram_sel_3_d2_C14 ) | ( accu_ram_sel_3_d2_C15 ) | ( accu_ram_sel_3_d2_C16 ) | ( accu_ram_sel_3_d2_C17 );
  assign accu_ctrl_ram_sel_4_C = ( accu_ctrl_ram_sel_4_C0 ) | ( accu_ctrl_ram_sel_4_C1 );
  assign fangyuan5_C = ( fangyuan5_C0 );
  assign accu_ram_sel_4_d2_C = ( accu_ram_sel_4_d2_C0 ) | ( accu_ram_sel_4_d2_C1 ) | ( accu_ram_sel_4_d2_C2 ) | ( accu_ram_sel_4_d2_C3 ) | ( accu_ram_sel_4_d2_C4 ) | ( accu_ram_sel_4_d2_C5 ) | ( accu_ram_sel_4_d2_C6 ) | ( accu_ram_sel_4_d2_C7 ) | ( accu_ram_sel_4_d2_C8 ) | ( accu_ram_sel_4_d2_C9 ) | ( accu_ram_sel_4_d2_C10 ) | ( accu_ram_sel_4_d2_C11 ) | ( accu_ram_sel_4_d2_C12 ) | ( accu_ram_sel_4_d2_C13 ) | ( accu_ram_sel_4_d2_C14 ) | ( accu_ram_sel_4_d2_C15 ) | ( accu_ram_sel_4_d2_C16 ) | ( accu_ram_sel_4_d2_C17 );
  assign accu_ctrl_ram_sel_5_C = ( accu_ctrl_ram_sel_5_C0 ) | ( accu_ctrl_ram_sel_5_C1 );
  assign fangyuan4_C = ( fangyuan4_C0 );
  assign accu_ram_sel_5_d2_C = ( accu_ram_sel_5_d2_C0 ) | ( accu_ram_sel_5_d2_C1 ) | ( accu_ram_sel_5_d2_C2 ) | ( accu_ram_sel_5_d2_C3 ) | ( accu_ram_sel_5_d2_C4 ) | ( accu_ram_sel_5_d2_C5 ) | ( accu_ram_sel_5_d2_C6 ) | ( accu_ram_sel_5_d2_C7 ) | ( accu_ram_sel_5_d2_C8 ) | ( accu_ram_sel_5_d2_C9 ) | ( accu_ram_sel_5_d2_C10 ) | ( accu_ram_sel_5_d2_C11 ) | ( accu_ram_sel_5_d2_C12 ) | ( accu_ram_sel_5_d2_C13 ) | ( accu_ram_sel_5_d2_C14 ) | ( accu_ram_sel_5_d2_C15 ) | ( accu_ram_sel_5_d2_C16 ) | ( accu_ram_sel_5_d2_C17 );
  assign accu_ctrl_ram_sel_6_C = ( accu_ctrl_ram_sel_6_C0 ) | ( accu_ctrl_ram_sel_6_C1 );
  assign fangyuan3_C = ( fangyuan3_C0 );
  assign accu_ram_sel_6_d2_C = ( accu_ram_sel_6_d2_C0 ) | ( accu_ram_sel_6_d2_C1 ) | ( accu_ram_sel_6_d2_C2 ) | ( accu_ram_sel_6_d2_C3 ) | ( accu_ram_sel_6_d2_C4 ) | ( accu_ram_sel_6_d2_C5 ) | ( accu_ram_sel_6_d2_C6 ) | ( accu_ram_sel_6_d2_C7 ) | ( accu_ram_sel_6_d2_C8 ) | ( accu_ram_sel_6_d2_C9 ) | ( accu_ram_sel_6_d2_C10 ) | ( accu_ram_sel_6_d2_C11 ) | ( accu_ram_sel_6_d2_C12 ) | ( accu_ram_sel_6_d2_C13 ) | ( accu_ram_sel_6_d2_C14 ) | ( accu_ram_sel_6_d2_C15 ) | ( accu_ram_sel_6_d2_C16 ) | ( accu_ram_sel_6_d2_C17 );
  assign accu_ctrl_ram_sel_7_C = ( accu_ctrl_ram_sel_7_C0 ) | ( accu_ctrl_ram_sel_7_C1 );
  assign fangyuan2_C = ( fangyuan2_C0 );
  assign accu_ram_sel_7_d2_C = ( accu_ram_sel_7_d2_C0 ) | ( accu_ram_sel_7_d2_C1 ) | ( accu_ram_sel_7_d2_C2 ) | ( accu_ram_sel_7_d2_C3 ) | ( accu_ram_sel_7_d2_C4 ) | ( accu_ram_sel_7_d2_C5 ) | ( accu_ram_sel_7_d2_C6 ) | ( accu_ram_sel_7_d2_C7 ) | ( accu_ram_sel_7_d2_C8 ) | ( accu_ram_sel_7_d2_C9 ) | ( accu_ram_sel_7_d2_C10 ) | ( accu_ram_sel_7_d2_C11 ) | ( accu_ram_sel_7_d2_C12 ) | ( accu_ram_sel_7_d2_C13 ) | ( accu_ram_sel_7_d2_C14 ) | ( accu_ram_sel_7_d2_C15 ) | ( accu_ram_sel_7_d2_C16 ) | ( accu_ram_sel_7_d2_C17 );
  assign accu_ctrl_dlv_elem_mask_C = ( accu_ctrl_dlv_elem_mask_C0 ) | ( accu_ctrl_dlv_elem_mask_C1 );
  assign fangyuan1_C = ( fangyuan1_C0 );
  assign accu_channel_end_d2_C = ( accu_channel_end_d2_C0 ) | ( accu_channel_end_d2_C1 ) | ( accu_channel_end_d2_C2 ) | ( accu_channel_end_d2_C3 ) | ( accu_channel_end_d2_C4 ) | ( accu_channel_end_d2_C5 ) | ( accu_channel_end_d2_C6 ) | ( accu_channel_end_d2_C7 ) | ( accu_channel_end_d2_C8 ) | ( accu_channel_end_d2_C9 ) | ( accu_channel_end_d2_C10 ) | ( accu_channel_end_d2_C11 ) | ( accu_channel_end_d2_C12 ) | ( accu_channel_end_d2_C13 ) | ( accu_channel_end_d2_C14 ) | ( accu_channel_end_d2_C15 ) | ( accu_channel_end_d2_C16 ) | ( accu_channel_end_d2_C17 ) | ( accu_channel_end_d2_C18 ) | ( accu_channel_end_d2_C19 ) | ( accu_channel_end_d2_C20 ) | ( accu_channel_end_d2_C21 ) | ( accu_channel_end_d2_C22 ) | ( accu_channel_end_d2_C23 ) | ( accu_channel_end_d2_C24 ) | ( accu_channel_end_d2_C25 ) | ( accu_channel_end_d2_C26 ) | ( accu_channel_end_d2_C27 ) | ( accu_channel_end_d2_C28 ) | ( accu_channel_end_d2_C29 ) | ( accu_channel_end_d2_C30 ) | ( accu_channel_end_d2_C31 ) | ( accu_channel_end_d2_C32 ) | ( accu_channel_end_d2_C33 ) | ( accu_channel_end_d2_C34 ) | ( accu_channel_end_d2_C35 ) | ( accu_channel_end_d2_C36 ) | ( accu_channel_end_d2_C37 ) | ( accu_channel_end_d2_C38 ) | ( accu_channel_end_d2_C39 ) | ( accu_channel_end_d2_C40 ) | ( accu_channel_end_d2_C41 ) | ( accu_channel_end_d2_C42 ) | ( accu_channel_end_d2_C43 ) | ( accu_channel_end_d2_C44 ) | ( accu_channel_end_d2_C45 ) | ( accu_channel_end_d2_C46 ) | ( accu_channel_end_d2_C47 ) | ( accu_channel_end_d2_C48 ) | ( accu_channel_end_d2_C49 ) | ( accu_channel_end_d2_C50 ) | ( accu_channel_end_d2_C51 ) | ( accu_channel_end_d2_C52 ) | ( accu_channel_end_d2_C53 ) | ( accu_channel_end_d2_C54 ) | ( accu_channel_end_d2_C55 ) | ( accu_channel_end_d2_C56 ) | ( accu_channel_end_d2_C57 ) | ( accu_channel_end_d2_C58 ) | ( accu_channel_end_d2_C59 ) | ( accu_channel_end_d2_C60 ) | ( accu_channel_end_d2_C61 ) | ( accu_channel_end_d2_C62 ) | ( accu_channel_end_d2_C63 ) | ( accu_channel_end_d2_C64 ) | ( accu_channel_end_d2_C65 ) | ( accu_channel_end_d2_C66 ) | ( accu_channel_end_d2_C67 ) | ( accu_channel_end_d2_C68 ) | ( accu_channel_end_d2_C69 ) | ( accu_channel_end_d2_C70 ) | ( accu_channel_end_d2_C71 ) | ( accu_channel_end_d2_C72 ) | ( accu_channel_end_d2_C73 ) | ( accu_channel_end_d2_C74 ) | ( accu_channel_end_d2_C75 ) | ( accu_channel_end_d2_C76 ) | ( accu_channel_end_d2_C77 ) | ( accu_channel_end_d2_C78 ) | ( accu_channel_end_d2_C79 ) | ( accu_channel_end_d2_C80 ) | ( accu_channel_end_d2_C81 ) | ( accu_channel_end_d2_C82 ) | ( accu_channel_end_d2_C83 ) | ( accu_channel_end_d2_C84 ) | ( accu_channel_end_d2_C85 ) | ( accu_channel_end_d2_C86 ) | ( accu_channel_end_d2_C87 ) | ( accu_channel_end_d2_C88 ) | ( accu_channel_end_d2_C89 ) | ( accu_channel_end_d2_C90 ) | ( accu_channel_end_d2_C91 ) | ( accu_channel_end_d2_C92 ) | ( accu_channel_end_d2_C93 ) | ( accu_channel_end_d2_C94 ) | ( accu_channel_end_d2_C95 ) | ( accu_channel_end_d2_C96 ) | ( accu_channel_end_d2_C97 ) | ( accu_channel_end_d2_C98 ) | ( accu_channel_end_d2_C99 ) | ( accu_channel_end_d2_C100 ) | ( accu_channel_end_d2_C101 ) | ( accu_channel_end_d2_C102 ) | ( accu_channel_end_d2_C103 ) | ( accu_channel_end_d2_C104 ) | ( accu_channel_end_d2_C105 ) | ( accu_channel_end_d2_C106 ) | ( accu_channel_end_d2_C107 ) | ( accu_channel_end_d2_C108 ) | ( accu_channel_end_d2_C109 ) | ( accu_channel_end_d2_C110 ) | ( accu_channel_end_d2_C111 ) | ( accu_channel_end_d2_C112 ) | ( accu_channel_end_d2_C113 ) | ( accu_channel_end_d2_C114 ) | ( accu_channel_end_d2_C115 ) | ( accu_channel_end_d2_C116 ) | ( accu_channel_end_d2_C117 ) | ( accu_channel_end_d2_C118 ) | ( accu_channel_end_d2_C119 ) | ( accu_channel_end_d2_C120 ) | ( accu_channel_end_d2_C121 ) | ( accu_channel_end_d2_C122 ) | ( accu_channel_end_d2_C123 ) | ( accu_channel_end_d2_C124 ) | ( accu_channel_end_d2_C125 ) | ( accu_channel_end_d2_C126 ) | ( accu_channel_end_d2_C127 ) | ( accu_channel_end_d2_C128 ) | ( accu_channel_end_d2_C129 ) | ( accu_channel_end_d2_C130 ) | ( accu_channel_end_d2_C131 ) | ( accu_channel_end_d2_C132 ) | ( accu_channel_end_d2_C133 ) | ( accu_channel_end_d2_C134 ) | ( accu_channel_end_d2_C135 ) | ( accu_channel_end_d2_C136 ) | ( accu_channel_end_d2_C137 ) | ( accu_channel_end_d2_C138 ) | ( accu_channel_end_d2_C139 ) | ( accu_channel_end_d2_C140 ) | ( accu_channel_end_d2_C141 ) | ( accu_channel_end_d2_C142 ) | ( accu_channel_end_d2_C143 ) | ( accu_channel_end_d2_C144 ) | ( accu_channel_end_d2_C145 ) | ( accu_channel_end_d2_C146 ) | ( accu_channel_end_d2_C147 ) | ( accu_channel_end_d2_C148 ) | ( accu_channel_end_d2_C149 ) | ( accu_channel_end_d2_C150 ) | ( accu_channel_end_d2_C151 ) | ( accu_channel_end_d2_C152 ) | ( accu_channel_end_d2_C153 ) | ( accu_channel_end_d2_C154 ) | ( accu_channel_end_d2_C155 ) | ( accu_channel_end_d2_C156 ) | ( accu_channel_end_d2_C157 ) | ( accu_channel_end_d2_C158 ) | ( accu_channel_end_d2_C159 ) | ( accu_channel_end_d2_C160 ) | ( accu_channel_end_d2_C161 ) | ( accu_channel_end_d2_C162 ) | ( accu_channel_end_d2_C163 ) | ( accu_channel_end_d2_C164 ) | ( accu_channel_end_d2_C165 ) | ( accu_channel_end_d2_C166 ) | ( accu_channel_end_d2_C167 ) | ( accu_channel_end_d2_C168 ) | ( accu_channel_end_d2_C169 ) | ( accu_channel_end_d2_C170 ) | ( accu_channel_end_d2_C171 ) | ( accu_channel_end_d2_C172 ) | ( accu_channel_end_d2_C173 ) | ( accu_channel_end_d2_C174 ) | ( accu_channel_end_d2_C175 ) | ( accu_channel_end_d2_C176 ) | ( accu_channel_end_d2_C177 ) | ( accu_channel_end_d2_C178 ) | ( accu_channel_end_d2_C179 ) | ( accu_channel_end_d2_C180 ) | ( accu_channel_end_d2_C181 ) | ( accu_channel_end_d2_C182 ) | ( accu_channel_end_d2_C183 ) | ( accu_channel_end_d2_C184 ) | ( accu_channel_end_d2_C185 ) | ( accu_channel_end_d2_C186 ) | ( accu_channel_end_d2_C187 ) | ( accu_channel_end_d2_C188 ) | ( accu_channel_end_d2_C189 ) | ( accu_channel_end_d2_C190 ) | ( accu_channel_end_d2_C191 ) | ( accu_channel_end_d2_C192 ) | ( accu_channel_end_d2_C193 ) | ( accu_channel_end_d2_C194 );
  assign \accu_valid_reg[0]_C = ( \accu_valid_reg[0]_C0 );
  assign mac_a2accu_pvld_C = ( mac_a2accu_pvld_C0 ) | ( mac_a2accu_pvld_C1 );
  assign _026__C = ( _026__C0 );
  assign slcg_cell_en_w_C = ( slcg_cell_en_w_C0 );
  assign slcg_cell_en_d1_C = ( slcg_cell_en_d1_C0 );
  assign slcg_cell_en_d2_C = ( slcg_cell_en_d2_C0 );
  assign wait_for_op_en_w_C = ( wait_for_op_en_w_C0 );
  assign _005__C = ( _005__C0 );
  assign _004__C = ( _004__C0 );
  assign _051__C = ( _051__C0 );
  assign _023__C = ( _023__C0 );
  assign _027__C = ( _027__C0 );
  assign _030__C = ( _030__C0 );
  assign _033__C = ( _033__C0 );
  assign _036__C = ( _036__C0 );
  assign _039__C = ( _039__C0 );
  assign accu_ram_sel_7_d0_C = ( accu_ram_sel_7_d0_C0 ) | ( accu_ram_sel_7_d0_C1 );
  assign _042__C = ( _042__C0 );
  assign _045__C = ( _045__C0 );
  assign _048__C = ( _048__C0 );
  assign _062__C = ( _062__C0 );
  assign _061__C = ( _061__C0 );
  assign _057__C = ( _057__C0 );
  assign _059__C = ( _059__C0 );
  assign _060__C = ( _060__C0 );
  assign _058__C = ( _058__C0 );
  assign _056__C = ( _056__C0 );
  assign accu_ram_valid_C = ( accu_ram_valid_C0 ) | ( accu_ram_valid_C1 );
  assign _000__C = ( _000__C0 );
  assign _024__C = ( _024__C0 );
  assign _052__C = ( _052__C0 );
  assign _054__C = ( _054__C0 );
  assign _002__C = ( _002__C0 );
  assign _021__C = ( _021__C0 );
  assign _028__C = ( _028__C0 );
  assign _031__C = ( _031__C0 );
  assign _034__C = ( _034__C0 );
  assign _037__C = ( _037__C0 );
  assign _040__C = ( _040__C0 );
  assign _043__C = ( _043__C0 );
  assign _046__C = ( _046__C0 );
  assign _049__C = ( _049__C0 );
  assign accu_ctrl_valid_d1_C = ( accu_ctrl_valid_d1_C0 ) | ( accu_ctrl_valid_d1_C1 ) | ( accu_ctrl_valid_d1_C2 ) | ( accu_ctrl_valid_d1_C3 ) | ( accu_ctrl_valid_d1_C4 ) | ( accu_ctrl_valid_d1_C5 ) | ( accu_ctrl_valid_d1_C6 ) | ( accu_ctrl_valid_d1_C7 ) | ( accu_ctrl_valid_d1_C8 ) | ( accu_ctrl_valid_d1_C9 ) | ( accu_ctrl_valid_d1_C10 ) | ( accu_ctrl_valid_d1_C11 ) | ( accu_ctrl_valid_d1_C12 ) | ( accu_ctrl_valid_d1_C13 ) | ( accu_ctrl_valid_d1_C14 );
  assign accu_ram_valid_d1_C = ( accu_ram_valid_d1_C0 );
  assign _001__C = ( _001__C0 );
  assign _025__C = ( _025__C0 );
  assign _053__C = ( _053__C0 );
  assign _055__C = ( _055__C0 );
  assign _003__C = ( _003__C0 );
  assign _022__C = ( _022__C0 );
  assign _029__C = ( _029__C0 );
  assign _032__C = ( _032__C0 );
  assign _035__C = ( _035__C0 );
  assign _038__C = ( _038__C0 );
  assign _041__C = ( _041__C0 );
  assign _044__C = ( _044__C0 );
  assign _047__C = ( _047__C0 );
  assign _050__C = ( _050__C0 );
  assign accu_ctrl_valid_d2_C = ( accu_ctrl_valid_d2_C0 ) | ( accu_ctrl_valid_d2_C1 ) | ( accu_ctrl_valid_d2_C2 ) | ( accu_ctrl_valid_d2_C3 ) | ( accu_ctrl_valid_d2_C4 ) | ( accu_ctrl_valid_d2_C5 ) | ( accu_ctrl_valid_d2_C6 ) | ( accu_ctrl_valid_d2_C7 ) | ( accu_ctrl_valid_d2_C8 ) | ( accu_ctrl_valid_d2_C9 ) | ( accu_ctrl_valid_d2_C10 ) | ( accu_ctrl_valid_d2_C11 ) | ( accu_ctrl_valid_d2_C12 ) | ( accu_ctrl_valid_d2_C13 ) | ( accu_ctrl_valid_d2_C14 ) | ( accu_ctrl_valid_d2_C15 ) | ( accu_ctrl_valid_d2_C16 );
  assign \accu_ctrl_ram_valid_reg[0]_C = ( \accu_ctrl_ram_valid_reg[0]_C0 );
  assign accu_ram_valid_d2_C = ( accu_ram_valid_d2_C0 ) | ( accu_ram_valid_d2_C1 );
  assign _006__C = ( _006__C0 );
  assign _010__C = ( _010__C0 );
  assign _019__C = ( _019__C0 );
  assign _020__C = ( _020__C0 );
  assign _007__C = ( _007__C0 );
  assign _009__C = ( _009__C0 );
  assign _011__C = ( _011__C0 );
  assign _012__C = ( _012__C0 );
  assign _013__C = ( _013__C0 );
  assign _014__C = ( _014__C0 );
  assign _015__C = ( _015__C0 );
  assign _016__C = ( _016__C0 );
  assign _017__C = ( _017__C0 );
  assign _018__C = ( _018__C0 );
  assign _008__C = ( _008__C0 );
  assign is_x1_C = ( is_x1_C0 ) | ( is_x1_C1 ) | ( is_x1_C2 );
  assign layer_st_C = ( layer_st_C0 ) | ( layer_st_C1 ) | ( layer_st_C2 ) | ( layer_st_C3 ) | ( layer_st_C4 ) | ( layer_st_C5 ) | ( layer_st_C6 ) | ( layer_st_C7 ) | ( layer_st_C8 ) | ( layer_st_C9 ) | ( layer_st_C10 );
  assign accu_channel_st_C = ( accu_channel_st_C0 ) | ( accu_channel_st_C1 ) | ( accu_channel_st_C2 );
  assign reg2dp_proc_precision_C = ( reg2dp_proc_precision_C0 ) | ( reg2dp_proc_precision_C1 );
  assign _073__C = ( _073__C0 );
  assign accu_rd_mask_C = ( accu_rd_mask_C0 ) | ( accu_rd_mask_C1 ) | ( accu_rd_mask_C2 ) | ( accu_rd_mask_C3 );
  assign _065__C = ( _065__C0 );
  assign _072__C = ( _072__C0 );
  assign fangyuan0_C = ( fangyuan0_C0 );
  assign is_x2_C = ( is_x2_C0 ) | ( is_x2_C1 ) | ( is_x2_C2 ) | ( is_x2_C3 ) | ( is_x2_C4 ) | ( is_x2_C5 ) | ( is_x2_C6 );
  assign _075__C = ( _075__C0 ) | ( _075__C1 ) | ( _075__C2 );
  assign accu_rd_mask_w_C = ( accu_rd_mask_w_C0 ) | ( accu_rd_mask_w_C1 ) | ( accu_rd_mask_w_C2 );
  assign accu_pd_C = ( accu_pd_C0 ) | ( accu_pd_C1 ) | ( accu_pd_C2 ) | ( accu_pd_C3 ) | ( accu_pd_C4 ) | ( accu_pd_C5 ) | ( accu_pd_C6 ) | ( accu_pd_C7 ) | ( accu_pd_C8 );
  assign accu_valid_C = ( accu_valid_C0 ) | ( accu_valid_C1 ) | ( accu_valid_C2 ) | ( accu_valid_C3 ) | ( accu_valid_C4 ) | ( accu_valid_C5 ) | ( accu_valid_C6 ) | ( accu_valid_C7 ) | ( accu_valid_C8 ) | ( accu_valid_C9 ) | ( accu_valid_C10 ) | ( accu_valid_C11 ) | ( accu_valid_C12 ) | ( accu_valid_C13 ) | ( accu_valid_C14 ) | ( accu_valid_C15 ) | ( accu_valid_C16 ) | ( accu_valid_C17 ) | ( accu_valid_C18 ) | ( accu_valid_C19 ) | ( accu_valid_C20 ) | ( accu_valid_C21 ) | ( accu_valid_C22 ) | ( accu_valid_C23 ) | ( accu_valid_C24 ) | ( accu_valid_C25 ) | ( accu_valid_C26 ) | ( accu_valid_C27 ) | ( accu_valid_C28 ) | ( accu_valid_C29 ) | ( accu_valid_C30 ) | ( accu_valid_C31 ) | ( accu_valid_C32 ) | ( accu_valid_C33 ) | ( accu_valid_C34 );
  assign is_fp16_C = ( is_fp16_C0 ) | ( is_fp16_C1 ) | ( is_fp16_C2 ) | ( is_fp16_C3 ) | ( is_fp16_C4 ) | ( is_fp16_C5 ) | ( is_fp16_C6 ) | ( is_fp16_C7 ) | ( is_fp16_C8 ) | ( is_fp16_C9 ) | ( is_fp16_C10 ) | ( is_fp16_C11 ) | ( is_fp16_C12 ) | ( is_fp16_C13 ) | ( is_fp16_C14 ) | ( is_fp16_C15 ) | ( is_fp16_C16 ) | ( is_fp16_C17 ) | ( is_fp16_C18 ) | ( is_fp16_C19 ) | ( is_fp16_C20 ) | ( is_fp16_C21 ) | ( is_fp16_C22 ) | ( is_fp16_C23 ) | ( is_fp16_C24 ) | ( is_fp16_C25 ) | ( is_fp16_C26 ) | ( is_fp16_C27 ) | ( is_fp16_C28 ) | ( is_fp16_C29 );
  assign _063__C = ( _063__C0 ) | ( _063__C1 );
  assign _069__C = ( _069__C0 ) | ( _069__C1 ) | ( _069__C2 ) | ( _069__C3 ) | ( _069__C4 ) | ( _069__C5 ) | ( _069__C6 ) | ( _069__C7 ) | ( _069__C8 ) | ( _069__C9 ) | ( _069__C10 ) | ( _069__C11 ) | ( _069__C12 ) | ( _069__C13 ) | ( _069__C14 ) | ( _069__C15 ) | ( _069__C16 ) | ( _069__C17 ) | ( _069__C18 ) | ( _069__C19 ) | ( _069__C20 ) | ( _069__C21 ) | ( _069__C22 ) | ( _069__C23 ) | ( _069__C24 ) | ( _069__C25 ) | ( _069__C26 );
  assign reg2dp_op_en_C = ( reg2dp_op_en_C0 ) | ( reg2dp_op_en_C1 ) | ( reg2dp_op_en_C2 ) | ( reg2dp_op_en_C3 ) | ( reg2dp_op_en_C4 );
  assign reg2dp_conv_mode_C = ( reg2dp_conv_mode_C0 ) | ( reg2dp_conv_mode_C1 ) | ( reg2dp_conv_mode_C2 ) | ( reg2dp_conv_mode_C3 ) | ( reg2dp_conv_mode_C4 ) | ( reg2dp_conv_mode_C5 ) | ( reg2dp_conv_mode_C6 ) | ( reg2dp_conv_mode_C7 ) | ( reg2dp_conv_mode_C8 ) | ( reg2dp_conv_mode_C9 ) | ( reg2dp_conv_mode_C10 ) | ( reg2dp_conv_mode_C11 ) | ( reg2dp_conv_mode_C12 ) | ( reg2dp_conv_mode_C13 ) | ( reg2dp_conv_mode_C14 ) | ( reg2dp_conv_mode_C15 ) | ( reg2dp_conv_mode_C16 ) | ( reg2dp_conv_mode_C17 ) | ( reg2dp_conv_mode_C18 ) | ( reg2dp_conv_mode_C19 ) | ( reg2dp_conv_mode_C20 ) | ( reg2dp_conv_mode_C21 ) | ( reg2dp_conv_mode_C22 ) | ( reg2dp_conv_mode_C23 ) | ( reg2dp_conv_mode_C24 ) | ( reg2dp_conv_mode_C25 ) | ( reg2dp_conv_mode_C26 ) | ( reg2dp_conv_mode_C27 ) | ( reg2dp_conv_mode_C28 ) | ( reg2dp_conv_mode_C29 ) | ( reg2dp_conv_mode_C30 ) | ( reg2dp_conv_mode_C31 ) | ( reg2dp_conv_mode_C32 ) | ( reg2dp_conv_mode_C33 ) | ( reg2dp_conv_mode_C34 ) | ( reg2dp_conv_mode_C35 ) | ( reg2dp_conv_mode_C36 ) | ( reg2dp_conv_mode_C37 ) | ( reg2dp_conv_mode_C38 ) | ( reg2dp_conv_mode_C39 ) | ( reg2dp_conv_mode_C40 ) | ( reg2dp_conv_mode_C41 ) | ( reg2dp_conv_mode_C42 ) | ( reg2dp_conv_mode_C43 ) | ( reg2dp_conv_mode_C44 ) | ( reg2dp_conv_mode_C45 ) | ( reg2dp_conv_mode_C46 ) | ( reg2dp_conv_mode_C47 ) | ( reg2dp_conv_mode_C48 ) | ( reg2dp_conv_mode_C49 ) | ( reg2dp_conv_mode_C50 ) | ( reg2dp_conv_mode_C51 ) | ( reg2dp_conv_mode_C52 ) | ( reg2dp_conv_mode_C53 ) | ( reg2dp_conv_mode_C54 ) | ( reg2dp_conv_mode_C55 ) | ( reg2dp_conv_mode_C56 ) | ( reg2dp_conv_mode_C57 ) | ( reg2dp_conv_mode_C58 ) | ( reg2dp_conv_mode_C59 ) | ( reg2dp_conv_mode_C60 ) | ( reg2dp_conv_mode_C61 ) | ( reg2dp_conv_mode_C62 ) | ( reg2dp_conv_mode_C63 ) | ( reg2dp_conv_mode_C64 ) | ( reg2dp_conv_mode_C65 ) | ( reg2dp_conv_mode_C66 ) | ( reg2dp_conv_mode_C67 ) | ( reg2dp_conv_mode_C68 ) | ( reg2dp_conv_mode_C69 ) | ( reg2dp_conv_mode_C70 ) | ( reg2dp_conv_mode_C71 ) | ( reg2dp_conv_mode_C72 ) | ( reg2dp_conv_mode_C73 ) | ( reg2dp_conv_mode_C74 ) | ( reg2dp_conv_mode_C75 ) | ( reg2dp_conv_mode_C76 ) | ( reg2dp_conv_mode_C77 ) | ( reg2dp_conv_mode_C78 ) | ( reg2dp_conv_mode_C79 ) | ( reg2dp_conv_mode_C80 ) | ( reg2dp_conv_mode_C81 ) | ( reg2dp_conv_mode_C82 ) | ( reg2dp_conv_mode_C83 ) | ( reg2dp_conv_mode_C84 ) | ( reg2dp_conv_mode_C85 ) | ( reg2dp_conv_mode_C86 ) | ( reg2dp_conv_mode_C87 ) | ( reg2dp_conv_mode_C88 ) | ( reg2dp_conv_mode_C89 ) | ( reg2dp_conv_mode_C90 ) | ( reg2dp_conv_mode_C91 ) | ( reg2dp_conv_mode_C92 ) | ( reg2dp_conv_mode_C93 ) | ( reg2dp_conv_mode_C94 ) | ( reg2dp_conv_mode_C95 ) | ( reg2dp_conv_mode_C96 ) | ( reg2dp_conv_mode_C97 ) | ( reg2dp_conv_mode_C98 ) | ( reg2dp_conv_mode_C99 ) | ( reg2dp_conv_mode_C100 ) | ( reg2dp_conv_mode_C101 );
  assign is_int8_C = ( is_int8_C0 ) | ( is_int8_C1 ) | ( is_int8_C2 ) | ( is_int8_C3 ) | ( is_int8_C4 ) | ( is_int8_C5 ) | ( is_int8_C6 ) | ( is_int8_C7 ) | ( is_int8_C8 ) | ( is_int8_C9 ) | ( is_int8_C10 ) | ( is_int8_C11 ) | ( is_int8_C12 ) | ( is_int8_C13 ) | ( is_int8_C14 ) | ( is_int8_C15 ) | ( is_int8_C16 ) | ( is_int8_C17 ) | ( is_int8_C18 ) | ( is_int8_C19 ) | ( is_int8_C20 ) | ( is_int8_C21 ) | ( is_int8_C22 ) | ( is_int8_C23 ) | ( is_int8_C24 ) | ( is_int8_C25 ) | ( is_int8_C26 ) | ( is_int8_C27 ) | ( is_int8_C28 ) | ( is_int8_C29 ) | ( is_int8_C30 ) | ( is_int8_C31 ) | ( is_int8_C32 ) | ( is_int8_C33 ) | ( is_int8_C34 ) | ( is_int8_C35 ) | ( is_int8_C36 ) | ( is_int8_C37 ) | ( is_int8_C38 ) | ( is_int8_C39 ) | ( is_int8_C40 ) | ( is_int8_C41 ) | ( is_int8_C42 ) | ( is_int8_C43 ) | ( is_int8_C44 ) | ( is_int8_C45 ) | ( is_int8_C46 ) | ( is_int8_C47 ) | ( is_int8_C48 ) | ( is_int8_C49 ) | ( is_int8_C50 ) | ( is_int8_C51 ) | ( is_int8_C52 ) | ( is_int8_C53 ) | ( is_int8_C54 ) | ( is_int8_C55 ) | ( is_int8_C56 ) | ( is_int8_C57 ) | ( is_int8_C58 ) | ( is_int8_C59 ) | ( is_int8_C60 ) | ( is_int8_C61 ) | ( is_int8_C62 ) | ( is_int8_C63 ) | ( is_int8_C64 ) | ( is_int8_C65 ) | ( is_int8_C66 ) | ( is_int8_C67 ) | ( is_int8_C68 ) | ( is_int8_C69 ) | ( is_int8_C70 ) | ( is_int8_C71 ) | ( is_int8_C72 ) | ( is_int8_C73 ) | ( is_int8_C74 ) | ( is_int8_C75 ) | ( is_int8_C76 ) | ( is_int8_C77 ) | ( is_int8_C78 ) | ( is_int8_C79 ) | ( is_int8_C80 ) | ( is_int8_C81 ) | ( is_int8_C82 ) | ( is_int8_C83 ) | ( is_int8_C84 ) | ( is_int8_C85 ) | ( is_int8_C86 ) | ( is_int8_C87 ) | ( is_int8_C88 ) | ( is_int8_C89 ) | ( is_int8_C90 ) | ( is_int8_C91 ) | ( is_int8_C92 ) | ( is_int8_C93 ) | ( is_int8_C94 ) | ( is_int8_C95 ) | ( is_int8_C96 ) | ( is_int8_C97 ) | ( is_int8_C98 ) | ( is_int8_C99 ) | ( is_int8_C100 ) | ( is_int8_C101 ) | ( is_int8_C102 ) | ( is_int8_C103 ) | ( is_int8_C104 ) | ( is_int8_C105 ) | ( is_int8_C106 ) | ( is_int8_C107 ) | ( is_int8_C108 ) | ( is_int8_C109 ) | ( is_int8_C110 ) | ( is_int8_C111 ) | ( is_int8_C112 ) | ( is_int8_C113 ) | ( is_int8_C114 ) | ( is_int8_C115 ) | ( is_int8_C116 ) | ( is_int8_C117 ) | ( is_int8_C118 ) | ( is_int8_C119 ) | ( is_int8_C120 ) | ( is_int8_C121 ) | ( is_int8_C122 ) | ( is_int8_C123 ) | ( is_int8_C124 ) | ( is_int8_C125 ) | ( is_int8_C126 ) | ( is_int8_C127 ) | ( is_int8_C128 ) | ( is_int8_C129 );
  assign _071__C = ( _071__C0 ) | ( _071__C1 );
  assign _070__C = ( _070__C0 ) | ( _070__C1 );
  assign accu_cnt_C = ( accu_cnt_C0 ) | ( accu_cnt_C1 ) | ( accu_cnt_C2 ) | ( accu_cnt_C3 );
  assign wait_for_op_en_C = ( wait_for_op_en_C0 ) | ( wait_for_op_en_C1 ) | ( wait_for_op_en_C2 );
  assign slcg_cell_en_C = ( slcg_cell_en_C0 );
  assign cfg_truncate_C = ( cfg_truncate_C0 ) | ( cfg_truncate_C1 );
  assign cfg_is_wg_C = ( cfg_is_wg_C0 ) | ( cfg_is_wg_C1 );
  assign cfg_is_int8_C = ( cfg_is_int8_C0 ) | ( cfg_is_int8_C1 );
  assign cfg_is_int_C = ( cfg_is_int_C0 ) | ( cfg_is_int_C1 );
  assign cfg_is_fp_C = ( cfg_is_fp_C0 ) | ( cfg_is_fp_C1 );
  assign cfg_in_en_mask_C = ( cfg_in_en_mask_C0 ) | ( cfg_in_en_mask_C1 );
  assign accu_ctrl_valid_C = ( accu_ctrl_valid_C0 );
  assign accu_ctrl_ram_valid_C = ( accu_ctrl_ram_valid_C0 ) | ( accu_ctrl_ram_valid_C1 ) | ( accu_ctrl_ram_valid_C2 ) | ( accu_ctrl_ram_valid_C3 ) | ( accu_ctrl_ram_valid_C4 ) | ( accu_ctrl_ram_valid_C5 ) | ( accu_ctrl_ram_valid_C6 ) | ( accu_ctrl_ram_valid_C7 ) | ( accu_ctrl_ram_valid_C8 ) | ( accu_ctrl_ram_valid_C9 ) | ( accu_ctrl_ram_valid_C10 ) | ( accu_ctrl_ram_valid_C11 ) | ( accu_ctrl_ram_valid_C12 ) | ( accu_ctrl_ram_valid_C13 ) | ( accu_ctrl_ram_valid_C14 ) | ( accu_ctrl_ram_valid_C15 ) | ( accu_ctrl_ram_valid_C16 ) | ( accu_ctrl_ram_valid_C17 ) | ( accu_ctrl_ram_valid_C18 ) | ( accu_ctrl_ram_valid_C19 ) | ( accu_ctrl_ram_valid_C20 ) | ( accu_ctrl_ram_valid_C21 ) | ( accu_ctrl_ram_valid_C22 ) | ( accu_ctrl_ram_valid_C23 ) | ( accu_ctrl_ram_valid_C24 ) | ( accu_ctrl_ram_valid_C25 ) | ( accu_ctrl_ram_valid_C26 ) | ( accu_ctrl_ram_valid_C27 ) | ( accu_ctrl_ram_valid_C28 ) | ( accu_ctrl_ram_valid_C29 ) | ( accu_ctrl_ram_valid_C30 ) | ( accu_ctrl_ram_valid_C31 ) | ( accu_ctrl_ram_valid_C32 ) | ( accu_ctrl_ram_valid_C33 ) | ( accu_ctrl_ram_valid_C34 ) | ( accu_ctrl_ram_valid_C35 ) | ( accu_ctrl_ram_valid_C36 ) | ( accu_ctrl_ram_valid_C37 ) | ( accu_ctrl_ram_valid_C38 ) | ( accu_ctrl_ram_valid_C39 ) | ( accu_ctrl_ram_valid_C40 ) | ( accu_ctrl_ram_valid_C41 ) | ( accu_ctrl_ram_valid_C42 ) | ( accu_ctrl_ram_valid_C43 ) | ( accu_ctrl_ram_valid_C44 ) | ( accu_ctrl_ram_valid_C45 ) | ( accu_ctrl_ram_valid_C46 ) | ( accu_ctrl_ram_valid_C47 ) | ( accu_ctrl_ram_valid_C48 ) | ( accu_ctrl_ram_valid_C49 ) | ( accu_ctrl_ram_valid_C50 ) | ( accu_ctrl_ram_valid_C51 ) | ( accu_ctrl_ram_valid_C52 ) | ( accu_ctrl_ram_valid_C53 ) | ( accu_ctrl_ram_valid_C54 ) | ( accu_ctrl_ram_valid_C55 ) | ( accu_ctrl_ram_valid_C56 ) | ( accu_ctrl_ram_valid_C57 ) | ( accu_ctrl_ram_valid_C58 ) | ( accu_ctrl_ram_valid_C59 ) | ( accu_ctrl_ram_valid_C60 ) | ( accu_ctrl_ram_valid_C61 ) | ( accu_ctrl_ram_valid_C62 ) | ( accu_ctrl_ram_valid_C63 ) | ( accu_ctrl_ram_valid_C64 ) | ( accu_ctrl_ram_valid_C65 ) | ( accu_ctrl_ram_valid_C66 ) | ( accu_ctrl_ram_valid_C67 ) | ( accu_ctrl_ram_valid_C68 ) | ( accu_ctrl_ram_valid_C69 ) | ( accu_ctrl_ram_valid_C70 ) | ( accu_ctrl_ram_valid_C71 ) | ( accu_ctrl_ram_valid_C72 ) | ( accu_ctrl_ram_valid_C73 ) | ( accu_ctrl_ram_valid_C74 ) | ( accu_ctrl_ram_valid_C75 ) | ( accu_ctrl_ram_valid_C76 ) | ( accu_ctrl_ram_valid_C77 ) | ( accu_ctrl_ram_valid_C78 ) | ( accu_ctrl_ram_valid_C79 ) | ( accu_ctrl_ram_valid_C80 ) | ( accu_ctrl_ram_valid_C81 ) | ( accu_ctrl_ram_valid_C82 ) | ( accu_ctrl_ram_valid_C83 ) | ( accu_ctrl_ram_valid_C84 ) | ( accu_ctrl_ram_valid_C85 ) | ( accu_ctrl_ram_valid_C86 ) | ( accu_ctrl_ram_valid_C87 ) | ( accu_ctrl_ram_valid_C88 ) | ( accu_ctrl_ram_valid_C89 ) | ( accu_ctrl_ram_valid_C90 ) | ( accu_ctrl_ram_valid_C91 ) | ( accu_ctrl_ram_valid_C92 ) | ( accu_ctrl_ram_valid_C93 ) | ( accu_ctrl_ram_valid_C94 ) | ( accu_ctrl_ram_valid_C95 ) | ( accu_ctrl_ram_valid_C96 ) | ( accu_ctrl_ram_valid_C97 ) | ( accu_ctrl_ram_valid_C98 ) | ( accu_ctrl_ram_valid_C99 ) | ( accu_ctrl_ram_valid_C100 ) | ( accu_ctrl_ram_valid_C101 ) | ( accu_ctrl_ram_valid_C102 ) | ( accu_ctrl_ram_valid_C103 ) | ( accu_ctrl_ram_valid_C104 ) | ( accu_ctrl_ram_valid_C105 ) | ( accu_ctrl_ram_valid_C106 ) | ( accu_ctrl_ram_valid_C107 ) | ( accu_ctrl_ram_valid_C108 ) | ( accu_ctrl_ram_valid_C109 ) | ( accu_ctrl_ram_valid_C110 ) | ( accu_ctrl_ram_valid_C111 ) | ( accu_ctrl_ram_valid_C112 ) | ( accu_ctrl_ram_valid_C113 ) | ( accu_ctrl_ram_valid_C114 ) | ( accu_ctrl_ram_valid_C115 ) | ( accu_ctrl_ram_valid_C116 ) | ( accu_ctrl_ram_valid_C117 ) | ( accu_ctrl_ram_valid_C118 ) | ( accu_ctrl_ram_valid_C119 ) | ( accu_ctrl_ram_valid_C120 ) | ( accu_ctrl_ram_valid_C121 ) | ( accu_ctrl_ram_valid_C122 ) | ( accu_ctrl_ram_valid_C123 ) | ( accu_ctrl_ram_valid_C124 ) | ( accu_ctrl_ram_valid_C125 ) | ( accu_ctrl_ram_valid_C126 ) | ( accu_ctrl_ram_valid_C127 ) | ( accu_ctrl_ram_valid_C128 ) | ( accu_ctrl_ram_valid_C129 ) | ( accu_ctrl_ram_valid_C130 ) | ( accu_ctrl_ram_valid_C131 ) | ( accu_ctrl_ram_valid_C132 ) | ( accu_ctrl_ram_valid_C133 ) | ( accu_ctrl_ram_valid_C134 ) | ( accu_ctrl_ram_valid_C135 ) | ( accu_ctrl_ram_valid_C136 ) | ( accu_ctrl_ram_valid_C137 ) | ( accu_ctrl_ram_valid_C138 ) | ( accu_ctrl_ram_valid_C139 ) | ( accu_ctrl_ram_valid_C140 ) | ( accu_ctrl_ram_valid_C141 ) | ( accu_ctrl_ram_valid_C142 ) | ( accu_ctrl_ram_valid_C143 ) | ( accu_ctrl_ram_valid_C144 ) | ( accu_ctrl_ram_valid_C145 ) | ( accu_ctrl_ram_valid_C146 ) | ( accu_ctrl_ram_valid_C147 ) | ( accu_ctrl_ram_valid_C148 ) | ( accu_ctrl_ram_valid_C149 ) | ( accu_ctrl_ram_valid_C150 ) | ( accu_ctrl_ram_valid_C151 ) | ( accu_ctrl_ram_valid_C152 ) | ( accu_ctrl_ram_valid_C153 ) | ( accu_ctrl_ram_valid_C154 ) | ( accu_ctrl_ram_valid_C155 ) | ( accu_ctrl_ram_valid_C156 ) | ( accu_ctrl_ram_valid_C157 ) | ( accu_ctrl_ram_valid_C158 ) | ( accu_ctrl_ram_valid_C159 ) | ( accu_ctrl_ram_valid_C160 ) | ( accu_ctrl_ram_valid_C161 ) | ( accu_ctrl_ram_valid_C162 ) | ( accu_ctrl_ram_valid_C163 ) | ( accu_ctrl_ram_valid_C164 ) | ( accu_ctrl_ram_valid_C165 ) | ( accu_ctrl_ram_valid_C166 ) | ( accu_ctrl_ram_valid_C167 ) | ( accu_ctrl_ram_valid_C168 ) | ( accu_ctrl_ram_valid_C169 ) | ( accu_ctrl_ram_valid_C170 ) | ( accu_ctrl_ram_valid_C171 ) | ( accu_ctrl_ram_valid_C172 ) | ( accu_ctrl_ram_valid_C173 ) | ( accu_ctrl_ram_valid_C174 ) | ( accu_ctrl_ram_valid_C175 ) | ( accu_ctrl_ram_valid_C176 ) | ( accu_ctrl_ram_valid_C177 ) | ( accu_ctrl_ram_valid_C178 ) | ( accu_ctrl_ram_valid_C179 ) | ( accu_ctrl_ram_valid_C180 ) | ( accu_ctrl_ram_valid_C181 ) | ( accu_ctrl_ram_valid_C182 ) | ( accu_ctrl_ram_valid_C183 ) | ( accu_ctrl_ram_valid_C184 ) | ( accu_ctrl_ram_valid_C185 ) | ( accu_ctrl_ram_valid_C186 ) | ( accu_ctrl_ram_valid_C187 ) | ( accu_ctrl_ram_valid_C188 ) | ( accu_ctrl_ram_valid_C189 ) | ( accu_ctrl_ram_valid_C190 ) | ( accu_ctrl_ram_valid_C191 );
  assign accu_ctrl_pd_C = ( accu_ctrl_pd_C0 );
  assign abuf_rd_en_C = ( abuf_rd_en_C0 ) | ( abuf_rd_en_C1 );
  assign abuf_rd_addr_C = ( abuf_rd_addr_C0 );
  assign slcg_cell_en_d3_X = ( slcg_cell_en_d3_X0 );
  assign _081__X = ( _081__X0 );
  assign _080__X = ( _080__X0 );
  assign fangyuan19_X = ( fangyuan19_X0 );
  assign _067__X = ( _067__X0 );
  assign _066__X = ( _066__X0 );
  assign _079__X = ( _079__X0 );
  assign _064__X = ( _064__X0 );
  assign _078__X = ( _078__X0 );
  assign _077__X = ( _077__X0 );
  assign fangyuan18_X = ( fangyuan18_X0 );
  assign fangyuan17_X = ( fangyuan17_X0 );
  assign accu_rd_sel_w_X = ( accu_rd_sel_w_X0 ) | ( accu_rd_sel_w_X1 ) | ( accu_rd_sel_w_X2 );
  assign accu_cnt_inc_X = ( accu_cnt_inc_X0 );
  assign _074__X = ( _074__X0 );
  assign _076__X = ( _076__X0 );
  assign dp2reg_done_X = ( dp2reg_done_X0 );
  assign mac_a2accu_pd_X = ( mac_a2accu_pd_X0 );
  assign accu_cnt_w_X = ( accu_cnt_w_X0 ) | ( accu_cnt_w_X1 );
  assign fangyuan16_X = ( fangyuan16_X0 );
  assign accu_channel_st_w_X = ( accu_channel_st_w_X0 ) | ( accu_channel_st_w_X1 ) | ( accu_channel_st_w_X2 ) | ( accu_channel_st_w_X3 ) | ( accu_channel_st_w_X4 ) | ( accu_channel_st_w_X5 ) | ( accu_channel_st_w_X6 ) | ( accu_channel_st_w_X7 ) | ( accu_channel_st_w_X8 );
  assign fangyuan15_X = ( fangyuan15_X0 );
  assign is_x4_X = ( is_x4_X0 ) | ( is_x4_X1 ) | ( is_x4_X2 );
  assign is_x8_X = ( is_x8_X0 ) | ( is_x8_X1 ) | ( is_x8_X2 );
  assign accu_ram_sel_1_w_X = ( accu_ram_sel_1_w_X0 );
  assign accu_ram_sel_2_w_X = ( accu_ram_sel_2_w_X0 );
  assign accu_ram_sel_3_w_X = ( accu_ram_sel_3_w_X0 );
  assign accu_ram_sel_5_w_X = ( accu_ram_sel_5_w_X0 );
  assign accu_ram_sel_6_w_X = ( accu_ram_sel_6_w_X0 );
  assign accu_ram_sel_7_w_X = ( accu_ram_sel_7_w_X0 );
  assign _068__X = ( _068__X0 ) | ( _068__X1 ) | ( _068__X2 ) | ( _068__X3 ) | ( _068__X4 ) | ( _068__X5 ) | ( _068__X6 ) | ( _068__X7 ) | ( _068__X8 ) | ( _068__X9 ) | ( _068__X10 );
  assign cfg_winograd_X = ( cfg_winograd_X0 ) | ( cfg_winograd_X1 );
  assign fangyuan14_X = ( fangyuan14_X0 );
  assign reg2dp_clip_truncate_X = ( reg2dp_clip_truncate_X0 ) | ( reg2dp_clip_truncate_X1 ) | ( reg2dp_clip_truncate_X2 ) | ( reg2dp_clip_truncate_X3 ) | ( reg2dp_clip_truncate_X4 ) | ( reg2dp_clip_truncate_X5 ) | ( reg2dp_clip_truncate_X6 ) | ( reg2dp_clip_truncate_X7 ) | ( reg2dp_clip_truncate_X8 ) | ( reg2dp_clip_truncate_X9 ) | ( reg2dp_clip_truncate_X10 ) | ( reg2dp_clip_truncate_X11 ) | ( reg2dp_clip_truncate_X12 ) | ( reg2dp_clip_truncate_X13 ) | ( reg2dp_clip_truncate_X14 ) | ( reg2dp_clip_truncate_X15 ) | ( reg2dp_clip_truncate_X16 ) | ( reg2dp_clip_truncate_X17 ) | ( reg2dp_clip_truncate_X18 ) | ( reg2dp_clip_truncate_X19 ) | ( reg2dp_clip_truncate_X20 ) | ( reg2dp_clip_truncate_X21 ) | ( reg2dp_clip_truncate_X22 ) | ( reg2dp_clip_truncate_X23 ) | ( reg2dp_clip_truncate_X24 ) | ( reg2dp_clip_truncate_X25 ) | ( reg2dp_clip_truncate_X26 ) | ( reg2dp_clip_truncate_X27 ) | ( reg2dp_clip_truncate_X28 ) | ( reg2dp_clip_truncate_X29 ) | ( reg2dp_clip_truncate_X30 ) | ( reg2dp_clip_truncate_X31 ) | ( reg2dp_clip_truncate_X32 ) | ( reg2dp_clip_truncate_X33 ) | ( reg2dp_clip_truncate_X34 ) | ( reg2dp_clip_truncate_X35 ) | ( reg2dp_clip_truncate_X36 ) | ( reg2dp_clip_truncate_X37 ) | ( reg2dp_clip_truncate_X38 ) | ( reg2dp_clip_truncate_X39 ) | ( reg2dp_clip_truncate_X40 ) | ( reg2dp_clip_truncate_X41 ) | ( reg2dp_clip_truncate_X42 ) | ( reg2dp_clip_truncate_X43 ) | ( reg2dp_clip_truncate_X44 ) | ( reg2dp_clip_truncate_X45 ) | ( reg2dp_clip_truncate_X46 ) | ( reg2dp_clip_truncate_X47 ) | ( reg2dp_clip_truncate_X48 ) | ( reg2dp_clip_truncate_X49 ) | ( reg2dp_clip_truncate_X50 ) | ( reg2dp_clip_truncate_X51 ) | ( reg2dp_clip_truncate_X52 ) | ( reg2dp_clip_truncate_X53 ) | ( reg2dp_clip_truncate_X54 ) | ( reg2dp_clip_truncate_X55 ) | ( reg2dp_clip_truncate_X56 ) | ( reg2dp_clip_truncate_X57 ) | ( reg2dp_clip_truncate_X58 ) | ( reg2dp_clip_truncate_X59 ) | ( reg2dp_clip_truncate_X60 ) | ( reg2dp_clip_truncate_X61 ) | ( reg2dp_clip_truncate_X62 ) | ( reg2dp_clip_truncate_X63 ) | ( reg2dp_clip_truncate_X64 ) | ( reg2dp_clip_truncate_X65 ) | ( reg2dp_clip_truncate_X66 ) | ( reg2dp_clip_truncate_X67 ) | ( reg2dp_clip_truncate_X68 ) | ( reg2dp_clip_truncate_X69 ) | ( reg2dp_clip_truncate_X70 ) | ( reg2dp_clip_truncate_X71 ) | ( reg2dp_clip_truncate_X72 ) | ( reg2dp_clip_truncate_X73 ) | ( reg2dp_clip_truncate_X74 ) | ( reg2dp_clip_truncate_X75 ) | ( reg2dp_clip_truncate_X76 ) | ( reg2dp_clip_truncate_X77 ) | ( reg2dp_clip_truncate_X78 ) | ( reg2dp_clip_truncate_X79 ) | ( reg2dp_clip_truncate_X80 ) | ( reg2dp_clip_truncate_X81 ) | ( reg2dp_clip_truncate_X82 ) | ( reg2dp_clip_truncate_X83 ) | ( reg2dp_clip_truncate_X84 ) | ( reg2dp_clip_truncate_X85 ) | ( reg2dp_clip_truncate_X86 ) | ( reg2dp_clip_truncate_X87 ) | ( reg2dp_clip_truncate_X88 ) | ( reg2dp_clip_truncate_X89 ) | ( reg2dp_clip_truncate_X90 ) | ( reg2dp_clip_truncate_X91 ) | ( reg2dp_clip_truncate_X92 ) | ( reg2dp_clip_truncate_X93 ) | ( reg2dp_clip_truncate_X94 ) | ( reg2dp_clip_truncate_X95 ) | ( reg2dp_clip_truncate_X96 ) | ( reg2dp_clip_truncate_X97 ) | ( reg2dp_clip_truncate_X98 ) | ( reg2dp_clip_truncate_X99 ) | ( reg2dp_clip_truncate_X100 ) | ( reg2dp_clip_truncate_X101 ) | ( reg2dp_clip_truncate_X102 ) | ( reg2dp_clip_truncate_X103 ) | ( reg2dp_clip_truncate_X104 ) | ( reg2dp_clip_truncate_X105 ) | ( reg2dp_clip_truncate_X106 ) | ( reg2dp_clip_truncate_X107 ) | ( reg2dp_clip_truncate_X108 ) | ( reg2dp_clip_truncate_X109 ) | ( reg2dp_clip_truncate_X110 ) | ( reg2dp_clip_truncate_X111 ) | ( reg2dp_clip_truncate_X112 ) | ( reg2dp_clip_truncate_X113 ) | ( reg2dp_clip_truncate_X114 ) | ( reg2dp_clip_truncate_X115 ) | ( reg2dp_clip_truncate_X116 ) | ( reg2dp_clip_truncate_X117 ) | ( reg2dp_clip_truncate_X118 ) | ( reg2dp_clip_truncate_X119 ) | ( reg2dp_clip_truncate_X120 ) | ( reg2dp_clip_truncate_X121 ) | ( reg2dp_clip_truncate_X122 ) | ( reg2dp_clip_truncate_X123 ) | ( reg2dp_clip_truncate_X124 ) | ( reg2dp_clip_truncate_X125 ) | ( reg2dp_clip_truncate_X126 ) | ( reg2dp_clip_truncate_X127 );
  assign fangyuan13_X = ( fangyuan13_X0 );
  assign fangyuan12_X = ( fangyuan12_X0 );
  assign fangyuan11_X = ( fangyuan11_X0 );
  assign fangyuan10_X = ( fangyuan10_X0 );
  assign cfg_in_en_mask_w_X = ( cfg_in_en_mask_w_X0 );
  assign accu_addr_d0_X = ( accu_addr_d0_X0 ) | ( accu_addr_d0_X1 ) | ( accu_addr_d0_X2 );
  assign accu_mode_d0_X = ( accu_mode_d0_X0 ) | ( accu_mode_d0_X1 );
  assign accu_ram_sel_0_d0_X = ( accu_ram_sel_0_d0_X0 ) | ( accu_ram_sel_0_d0_X1 );
  assign accu_ram_sel_1_d0_X = ( accu_ram_sel_1_d0_X0 ) | ( accu_ram_sel_1_d0_X1 );
  assign accu_ram_sel_2_d0_X = ( accu_ram_sel_2_d0_X0 ) | ( accu_ram_sel_2_d0_X1 );
  assign accu_ram_sel_3_d0_X = ( accu_ram_sel_3_d0_X0 ) | ( accu_ram_sel_3_d0_X1 );
  assign accu_ram_sel_4_d0_X = ( accu_ram_sel_4_d0_X0 ) | ( accu_ram_sel_4_d0_X1 );
  assign accu_ram_sel_5_d0_X = ( accu_ram_sel_5_d0_X0 ) | ( accu_ram_sel_5_d0_X1 );
  assign accu_ram_sel_6_d0_X = ( accu_ram_sel_6_d0_X0 ) | ( accu_ram_sel_6_d0_X1 );
  assign accu_addr_d1_X = ( accu_addr_d1_X0 ) | ( accu_addr_d1_X1 );
  assign accu_mode_d1_X = ( accu_mode_d1_X0 ) | ( accu_mode_d1_X1 );
  assign accu_rd_mask_d1_X = ( accu_rd_mask_d1_X0 ) | ( accu_rd_mask_d1_X1 );
  assign accu_stripe_end_d1_X = ( accu_stripe_end_d1_X0 ) | ( accu_stripe_end_d1_X1 );
  assign accu_channel_end_d1_X = ( accu_channel_end_d1_X0 ) | ( accu_channel_end_d1_X1 );
  assign accu_layer_end_d1_X = ( accu_layer_end_d1_X0 ) | ( accu_layer_end_d1_X1 );
  assign accu_ram_sel_0_d1_X = ( accu_ram_sel_0_d1_X0 ) | ( accu_ram_sel_0_d1_X1 );
  assign accu_ram_sel_1_d1_X = ( accu_ram_sel_1_d1_X0 ) | ( accu_ram_sel_1_d1_X1 );
  assign accu_ram_sel_2_d1_X = ( accu_ram_sel_2_d1_X0 ) | ( accu_ram_sel_2_d1_X1 );
  assign accu_ram_sel_3_d1_X = ( accu_ram_sel_3_d1_X0 ) | ( accu_ram_sel_3_d1_X1 );
  assign accu_ram_sel_4_d1_X = ( accu_ram_sel_4_d1_X0 ) | ( accu_ram_sel_4_d1_X1 );
  assign accu_ram_sel_5_d1_X = ( accu_ram_sel_5_d1_X0 ) | ( accu_ram_sel_5_d1_X1 );
  assign accu_ram_sel_6_d1_X = ( accu_ram_sel_6_d1_X0 ) | ( accu_ram_sel_6_d1_X1 );
  assign accu_ram_sel_7_d1_X = ( accu_ram_sel_7_d1_X0 ) | ( accu_ram_sel_7_d1_X1 );
  assign accu_ctrl_addr_X = ( accu_ctrl_addr_X0 ) | ( accu_ctrl_addr_X1 );
  assign accu_addr_d2_X = ( accu_addr_d2_X0 ) | ( accu_addr_d2_X1 ) | ( accu_addr_d2_X2 );
  assign accu_ctrl_mode_X = ( accu_ctrl_mode_X0 ) | ( accu_ctrl_mode_X1 );
  assign accu_mode_d2_X = ( accu_mode_d2_X0 ) | ( accu_mode_d2_X1 ) | ( accu_mode_d2_X2 );
  assign accu_ctrl_rd_mask_X = ( accu_ctrl_rd_mask_X0 ) | ( accu_ctrl_rd_mask_X1 );
  assign accu_rd_mask_d2_X = ( accu_rd_mask_d2_X0 ) | ( accu_rd_mask_d2_X1 ) | ( accu_rd_mask_d2_X2 );
  assign accu_ctrl_stripe_end_X = ( accu_ctrl_stripe_end_X0 ) | ( accu_ctrl_stripe_end_X1 );
  assign accu_stripe_end_d2_X = ( accu_stripe_end_d2_X0 ) | ( accu_stripe_end_d2_X1 ) | ( accu_stripe_end_d2_X2 );
  assign accu_ctrl_channel_end_X = ( accu_ctrl_channel_end_X0 ) | ( accu_ctrl_channel_end_X1 );
  assign accu_ctrl_layer_end_X = ( accu_ctrl_layer_end_X0 ) | ( accu_ctrl_layer_end_X1 );
  assign accu_layer_end_d2_X = ( accu_layer_end_d2_X0 ) | ( accu_layer_end_d2_X1 ) | ( accu_layer_end_d2_X2 );
  assign accu_ctrl_ram_sel_0_X = ( accu_ctrl_ram_sel_0_X0 ) | ( accu_ctrl_ram_sel_0_X1 );
  assign fangyuan9_X = ( fangyuan9_X0 );
  assign accu_ram_sel_0_d2_X = ( accu_ram_sel_0_d2_X0 ) | ( accu_ram_sel_0_d2_X1 ) | ( accu_ram_sel_0_d2_X2 ) | ( accu_ram_sel_0_d2_X3 ) | ( accu_ram_sel_0_d2_X4 ) | ( accu_ram_sel_0_d2_X5 ) | ( accu_ram_sel_0_d2_X6 ) | ( accu_ram_sel_0_d2_X7 ) | ( accu_ram_sel_0_d2_X8 ) | ( accu_ram_sel_0_d2_X9 ) | ( accu_ram_sel_0_d2_X10 ) | ( accu_ram_sel_0_d2_X11 ) | ( accu_ram_sel_0_d2_X12 ) | ( accu_ram_sel_0_d2_X13 ) | ( accu_ram_sel_0_d2_X14 ) | ( accu_ram_sel_0_d2_X15 ) | ( accu_ram_sel_0_d2_X16 ) | ( accu_ram_sel_0_d2_X17 );
  assign accu_ctrl_ram_sel_1_X = ( accu_ctrl_ram_sel_1_X0 ) | ( accu_ctrl_ram_sel_1_X1 );
  assign fangyuan8_X = ( fangyuan8_X0 );
  assign accu_ram_sel_1_d2_X = ( accu_ram_sel_1_d2_X0 ) | ( accu_ram_sel_1_d2_X1 ) | ( accu_ram_sel_1_d2_X2 ) | ( accu_ram_sel_1_d2_X3 ) | ( accu_ram_sel_1_d2_X4 ) | ( accu_ram_sel_1_d2_X5 ) | ( accu_ram_sel_1_d2_X6 ) | ( accu_ram_sel_1_d2_X7 ) | ( accu_ram_sel_1_d2_X8 ) | ( accu_ram_sel_1_d2_X9 ) | ( accu_ram_sel_1_d2_X10 ) | ( accu_ram_sel_1_d2_X11 ) | ( accu_ram_sel_1_d2_X12 ) | ( accu_ram_sel_1_d2_X13 ) | ( accu_ram_sel_1_d2_X14 ) | ( accu_ram_sel_1_d2_X15 ) | ( accu_ram_sel_1_d2_X16 ) | ( accu_ram_sel_1_d2_X17 );
  assign accu_ctrl_ram_sel_2_X = ( accu_ctrl_ram_sel_2_X0 ) | ( accu_ctrl_ram_sel_2_X1 );
  assign fangyuan7_X = ( fangyuan7_X0 );
  assign accu_ram_sel_2_d2_X = ( accu_ram_sel_2_d2_X0 ) | ( accu_ram_sel_2_d2_X1 ) | ( accu_ram_sel_2_d2_X2 ) | ( accu_ram_sel_2_d2_X3 ) | ( accu_ram_sel_2_d2_X4 ) | ( accu_ram_sel_2_d2_X5 ) | ( accu_ram_sel_2_d2_X6 ) | ( accu_ram_sel_2_d2_X7 ) | ( accu_ram_sel_2_d2_X8 ) | ( accu_ram_sel_2_d2_X9 ) | ( accu_ram_sel_2_d2_X10 ) | ( accu_ram_sel_2_d2_X11 ) | ( accu_ram_sel_2_d2_X12 ) | ( accu_ram_sel_2_d2_X13 ) | ( accu_ram_sel_2_d2_X14 ) | ( accu_ram_sel_2_d2_X15 ) | ( accu_ram_sel_2_d2_X16 ) | ( accu_ram_sel_2_d2_X17 );
  assign accu_ctrl_ram_sel_3_X = ( accu_ctrl_ram_sel_3_X0 ) | ( accu_ctrl_ram_sel_3_X1 );
  assign fangyuan6_X = ( fangyuan6_X0 );
  assign accu_ram_sel_3_d2_X = ( accu_ram_sel_3_d2_X0 ) | ( accu_ram_sel_3_d2_X1 ) | ( accu_ram_sel_3_d2_X2 ) | ( accu_ram_sel_3_d2_X3 ) | ( accu_ram_sel_3_d2_X4 ) | ( accu_ram_sel_3_d2_X5 ) | ( accu_ram_sel_3_d2_X6 ) | ( accu_ram_sel_3_d2_X7 ) | ( accu_ram_sel_3_d2_X8 ) | ( accu_ram_sel_3_d2_X9 ) | ( accu_ram_sel_3_d2_X10 ) | ( accu_ram_sel_3_d2_X11 ) | ( accu_ram_sel_3_d2_X12 ) | ( accu_ram_sel_3_d2_X13 ) | ( accu_ram_sel_3_d2_X14 ) | ( accu_ram_sel_3_d2_X15 ) | ( accu_ram_sel_3_d2_X16 ) | ( accu_ram_sel_3_d2_X17 );
  assign accu_ctrl_ram_sel_4_X = ( accu_ctrl_ram_sel_4_X0 ) | ( accu_ctrl_ram_sel_4_X1 );
  assign fangyuan5_X = ( fangyuan5_X0 );
  assign accu_ram_sel_4_d2_X = ( accu_ram_sel_4_d2_X0 ) | ( accu_ram_sel_4_d2_X1 ) | ( accu_ram_sel_4_d2_X2 ) | ( accu_ram_sel_4_d2_X3 ) | ( accu_ram_sel_4_d2_X4 ) | ( accu_ram_sel_4_d2_X5 ) | ( accu_ram_sel_4_d2_X6 ) | ( accu_ram_sel_4_d2_X7 ) | ( accu_ram_sel_4_d2_X8 ) | ( accu_ram_sel_4_d2_X9 ) | ( accu_ram_sel_4_d2_X10 ) | ( accu_ram_sel_4_d2_X11 ) | ( accu_ram_sel_4_d2_X12 ) | ( accu_ram_sel_4_d2_X13 ) | ( accu_ram_sel_4_d2_X14 ) | ( accu_ram_sel_4_d2_X15 ) | ( accu_ram_sel_4_d2_X16 ) | ( accu_ram_sel_4_d2_X17 );
  assign accu_ctrl_ram_sel_5_X = ( accu_ctrl_ram_sel_5_X0 ) | ( accu_ctrl_ram_sel_5_X1 );
  assign fangyuan4_X = ( fangyuan4_X0 );
  assign accu_ram_sel_5_d2_X = ( accu_ram_sel_5_d2_X0 ) | ( accu_ram_sel_5_d2_X1 ) | ( accu_ram_sel_5_d2_X2 ) | ( accu_ram_sel_5_d2_X3 ) | ( accu_ram_sel_5_d2_X4 ) | ( accu_ram_sel_5_d2_X5 ) | ( accu_ram_sel_5_d2_X6 ) | ( accu_ram_sel_5_d2_X7 ) | ( accu_ram_sel_5_d2_X8 ) | ( accu_ram_sel_5_d2_X9 ) | ( accu_ram_sel_5_d2_X10 ) | ( accu_ram_sel_5_d2_X11 ) | ( accu_ram_sel_5_d2_X12 ) | ( accu_ram_sel_5_d2_X13 ) | ( accu_ram_sel_5_d2_X14 ) | ( accu_ram_sel_5_d2_X15 ) | ( accu_ram_sel_5_d2_X16 ) | ( accu_ram_sel_5_d2_X17 );
  assign accu_ctrl_ram_sel_6_X = ( accu_ctrl_ram_sel_6_X0 ) | ( accu_ctrl_ram_sel_6_X1 );
  assign fangyuan3_X = ( fangyuan3_X0 );
  assign accu_ram_sel_6_d2_X = ( accu_ram_sel_6_d2_X0 ) | ( accu_ram_sel_6_d2_X1 ) | ( accu_ram_sel_6_d2_X2 ) | ( accu_ram_sel_6_d2_X3 ) | ( accu_ram_sel_6_d2_X4 ) | ( accu_ram_sel_6_d2_X5 ) | ( accu_ram_sel_6_d2_X6 ) | ( accu_ram_sel_6_d2_X7 ) | ( accu_ram_sel_6_d2_X8 ) | ( accu_ram_sel_6_d2_X9 ) | ( accu_ram_sel_6_d2_X10 ) | ( accu_ram_sel_6_d2_X11 ) | ( accu_ram_sel_6_d2_X12 ) | ( accu_ram_sel_6_d2_X13 ) | ( accu_ram_sel_6_d2_X14 ) | ( accu_ram_sel_6_d2_X15 ) | ( accu_ram_sel_6_d2_X16 ) | ( accu_ram_sel_6_d2_X17 );
  assign accu_ctrl_ram_sel_7_X = ( accu_ctrl_ram_sel_7_X0 ) | ( accu_ctrl_ram_sel_7_X1 );
  assign fangyuan2_X = ( fangyuan2_X0 );
  assign accu_ram_sel_7_d2_X = ( accu_ram_sel_7_d2_X0 ) | ( accu_ram_sel_7_d2_X1 ) | ( accu_ram_sel_7_d2_X2 ) | ( accu_ram_sel_7_d2_X3 ) | ( accu_ram_sel_7_d2_X4 ) | ( accu_ram_sel_7_d2_X5 ) | ( accu_ram_sel_7_d2_X6 ) | ( accu_ram_sel_7_d2_X7 ) | ( accu_ram_sel_7_d2_X8 ) | ( accu_ram_sel_7_d2_X9 ) | ( accu_ram_sel_7_d2_X10 ) | ( accu_ram_sel_7_d2_X11 ) | ( accu_ram_sel_7_d2_X12 ) | ( accu_ram_sel_7_d2_X13 ) | ( accu_ram_sel_7_d2_X14 ) | ( accu_ram_sel_7_d2_X15 ) | ( accu_ram_sel_7_d2_X16 ) | ( accu_ram_sel_7_d2_X17 );
  assign accu_ctrl_dlv_elem_mask_X = ( accu_ctrl_dlv_elem_mask_X0 ) | ( accu_ctrl_dlv_elem_mask_X1 );
  assign fangyuan1_X = ( fangyuan1_X0 );
  assign accu_channel_end_d2_X = ( accu_channel_end_d2_X0 ) | ( accu_channel_end_d2_X1 ) | ( accu_channel_end_d2_X2 ) | ( accu_channel_end_d2_X3 ) | ( accu_channel_end_d2_X4 ) | ( accu_channel_end_d2_X5 ) | ( accu_channel_end_d2_X6 ) | ( accu_channel_end_d2_X7 ) | ( accu_channel_end_d2_X8 ) | ( accu_channel_end_d2_X9 ) | ( accu_channel_end_d2_X10 ) | ( accu_channel_end_d2_X11 ) | ( accu_channel_end_d2_X12 ) | ( accu_channel_end_d2_X13 ) | ( accu_channel_end_d2_X14 ) | ( accu_channel_end_d2_X15 ) | ( accu_channel_end_d2_X16 ) | ( accu_channel_end_d2_X17 ) | ( accu_channel_end_d2_X18 ) | ( accu_channel_end_d2_X19 ) | ( accu_channel_end_d2_X20 ) | ( accu_channel_end_d2_X21 ) | ( accu_channel_end_d2_X22 ) | ( accu_channel_end_d2_X23 ) | ( accu_channel_end_d2_X24 ) | ( accu_channel_end_d2_X25 ) | ( accu_channel_end_d2_X26 ) | ( accu_channel_end_d2_X27 ) | ( accu_channel_end_d2_X28 ) | ( accu_channel_end_d2_X29 ) | ( accu_channel_end_d2_X30 ) | ( accu_channel_end_d2_X31 ) | ( accu_channel_end_d2_X32 ) | ( accu_channel_end_d2_X33 ) | ( accu_channel_end_d2_X34 ) | ( accu_channel_end_d2_X35 ) | ( accu_channel_end_d2_X36 ) | ( accu_channel_end_d2_X37 ) | ( accu_channel_end_d2_X38 ) | ( accu_channel_end_d2_X39 ) | ( accu_channel_end_d2_X40 ) | ( accu_channel_end_d2_X41 ) | ( accu_channel_end_d2_X42 ) | ( accu_channel_end_d2_X43 ) | ( accu_channel_end_d2_X44 ) | ( accu_channel_end_d2_X45 ) | ( accu_channel_end_d2_X46 ) | ( accu_channel_end_d2_X47 ) | ( accu_channel_end_d2_X48 ) | ( accu_channel_end_d2_X49 ) | ( accu_channel_end_d2_X50 ) | ( accu_channel_end_d2_X51 ) | ( accu_channel_end_d2_X52 ) | ( accu_channel_end_d2_X53 ) | ( accu_channel_end_d2_X54 ) | ( accu_channel_end_d2_X55 ) | ( accu_channel_end_d2_X56 ) | ( accu_channel_end_d2_X57 ) | ( accu_channel_end_d2_X58 ) | ( accu_channel_end_d2_X59 ) | ( accu_channel_end_d2_X60 ) | ( accu_channel_end_d2_X61 ) | ( accu_channel_end_d2_X62 ) | ( accu_channel_end_d2_X63 ) | ( accu_channel_end_d2_X64 ) | ( accu_channel_end_d2_X65 ) | ( accu_channel_end_d2_X66 ) | ( accu_channel_end_d2_X67 ) | ( accu_channel_end_d2_X68 ) | ( accu_channel_end_d2_X69 ) | ( accu_channel_end_d2_X70 ) | ( accu_channel_end_d2_X71 ) | ( accu_channel_end_d2_X72 ) | ( accu_channel_end_d2_X73 ) | ( accu_channel_end_d2_X74 ) | ( accu_channel_end_d2_X75 ) | ( accu_channel_end_d2_X76 ) | ( accu_channel_end_d2_X77 ) | ( accu_channel_end_d2_X78 ) | ( accu_channel_end_d2_X79 ) | ( accu_channel_end_d2_X80 ) | ( accu_channel_end_d2_X81 ) | ( accu_channel_end_d2_X82 ) | ( accu_channel_end_d2_X83 ) | ( accu_channel_end_d2_X84 ) | ( accu_channel_end_d2_X85 ) | ( accu_channel_end_d2_X86 ) | ( accu_channel_end_d2_X87 ) | ( accu_channel_end_d2_X88 ) | ( accu_channel_end_d2_X89 ) | ( accu_channel_end_d2_X90 ) | ( accu_channel_end_d2_X91 ) | ( accu_channel_end_d2_X92 ) | ( accu_channel_end_d2_X93 ) | ( accu_channel_end_d2_X94 ) | ( accu_channel_end_d2_X95 ) | ( accu_channel_end_d2_X96 ) | ( accu_channel_end_d2_X97 ) | ( accu_channel_end_d2_X98 ) | ( accu_channel_end_d2_X99 ) | ( accu_channel_end_d2_X100 ) | ( accu_channel_end_d2_X101 ) | ( accu_channel_end_d2_X102 ) | ( accu_channel_end_d2_X103 ) | ( accu_channel_end_d2_X104 ) | ( accu_channel_end_d2_X105 ) | ( accu_channel_end_d2_X106 ) | ( accu_channel_end_d2_X107 ) | ( accu_channel_end_d2_X108 ) | ( accu_channel_end_d2_X109 ) | ( accu_channel_end_d2_X110 ) | ( accu_channel_end_d2_X111 ) | ( accu_channel_end_d2_X112 ) | ( accu_channel_end_d2_X113 ) | ( accu_channel_end_d2_X114 ) | ( accu_channel_end_d2_X115 ) | ( accu_channel_end_d2_X116 ) | ( accu_channel_end_d2_X117 ) | ( accu_channel_end_d2_X118 ) | ( accu_channel_end_d2_X119 ) | ( accu_channel_end_d2_X120 ) | ( accu_channel_end_d2_X121 ) | ( accu_channel_end_d2_X122 ) | ( accu_channel_end_d2_X123 ) | ( accu_channel_end_d2_X124 ) | ( accu_channel_end_d2_X125 ) | ( accu_channel_end_d2_X126 ) | ( accu_channel_end_d2_X127 ) | ( accu_channel_end_d2_X128 ) | ( accu_channel_end_d2_X129 ) | ( accu_channel_end_d2_X130 ) | ( accu_channel_end_d2_X131 ) | ( accu_channel_end_d2_X132 ) | ( accu_channel_end_d2_X133 ) | ( accu_channel_end_d2_X134 ) | ( accu_channel_end_d2_X135 ) | ( accu_channel_end_d2_X136 ) | ( accu_channel_end_d2_X137 ) | ( accu_channel_end_d2_X138 ) | ( accu_channel_end_d2_X139 ) | ( accu_channel_end_d2_X140 ) | ( accu_channel_end_d2_X141 ) | ( accu_channel_end_d2_X142 ) | ( accu_channel_end_d2_X143 ) | ( accu_channel_end_d2_X144 ) | ( accu_channel_end_d2_X145 ) | ( accu_channel_end_d2_X146 ) | ( accu_channel_end_d2_X147 ) | ( accu_channel_end_d2_X148 ) | ( accu_channel_end_d2_X149 ) | ( accu_channel_end_d2_X150 ) | ( accu_channel_end_d2_X151 ) | ( accu_channel_end_d2_X152 ) | ( accu_channel_end_d2_X153 ) | ( accu_channel_end_d2_X154 ) | ( accu_channel_end_d2_X155 ) | ( accu_channel_end_d2_X156 ) | ( accu_channel_end_d2_X157 ) | ( accu_channel_end_d2_X158 ) | ( accu_channel_end_d2_X159 ) | ( accu_channel_end_d2_X160 ) | ( accu_channel_end_d2_X161 ) | ( accu_channel_end_d2_X162 ) | ( accu_channel_end_d2_X163 ) | ( accu_channel_end_d2_X164 ) | ( accu_channel_end_d2_X165 ) | ( accu_channel_end_d2_X166 ) | ( accu_channel_end_d2_X167 ) | ( accu_channel_end_d2_X168 ) | ( accu_channel_end_d2_X169 ) | ( accu_channel_end_d2_X170 ) | ( accu_channel_end_d2_X171 ) | ( accu_channel_end_d2_X172 ) | ( accu_channel_end_d2_X173 ) | ( accu_channel_end_d2_X174 ) | ( accu_channel_end_d2_X175 ) | ( accu_channel_end_d2_X176 ) | ( accu_channel_end_d2_X177 ) | ( accu_channel_end_d2_X178 ) | ( accu_channel_end_d2_X179 ) | ( accu_channel_end_d2_X180 ) | ( accu_channel_end_d2_X181 ) | ( accu_channel_end_d2_X182 ) | ( accu_channel_end_d2_X183 ) | ( accu_channel_end_d2_X184 ) | ( accu_channel_end_d2_X185 ) | ( accu_channel_end_d2_X186 ) | ( accu_channel_end_d2_X187 ) | ( accu_channel_end_d2_X188 ) | ( accu_channel_end_d2_X189 ) | ( accu_channel_end_d2_X190 ) | ( accu_channel_end_d2_X191 ) | ( accu_channel_end_d2_X192 ) | ( accu_channel_end_d2_X193 ) | ( accu_channel_end_d2_X194 );
  assign \accu_valid_reg[0]_X = ( \accu_valid_reg[0]_X0 );
  assign mac_a2accu_pvld_X = ( mac_a2accu_pvld_X0 ) | ( mac_a2accu_pvld_X1 );
  assign _026__X = ( _026__X0 );
  assign slcg_cell_en_w_X = ( slcg_cell_en_w_X0 );
  assign slcg_cell_en_d1_X = ( slcg_cell_en_d1_X0 );
  assign slcg_cell_en_d2_X = ( slcg_cell_en_d2_X0 );
  assign wait_for_op_en_w_X = ( wait_for_op_en_w_X0 );
  assign _005__X = ( _005__X0 );
  assign _004__X = ( _004__X0 );
  assign _051__X = ( _051__X0 );
  assign _023__X = ( _023__X0 );
  assign _027__X = ( _027__X0 );
  assign _030__X = ( _030__X0 );
  assign _033__X = ( _033__X0 );
  assign _036__X = ( _036__X0 );
  assign _039__X = ( _039__X0 );
  assign accu_ram_sel_7_d0_X = ( accu_ram_sel_7_d0_X0 ) | ( accu_ram_sel_7_d0_X1 );
  assign _042__X = ( _042__X0 );
  assign _045__X = ( _045__X0 );
  assign _048__X = ( _048__X0 );
  assign _062__X = ( _062__X0 );
  assign _061__X = ( _061__X0 );
  assign _057__X = ( _057__X0 );
  assign _059__X = ( _059__X0 );
  assign _060__X = ( _060__X0 );
  assign _058__X = ( _058__X0 );
  assign _056__X = ( _056__X0 );
  assign accu_ram_valid_X = ( accu_ram_valid_X0 ) | ( accu_ram_valid_X1 );
  assign _000__X = ( _000__X0 );
  assign _024__X = ( _024__X0 );
  assign _052__X = ( _052__X0 );
  assign _054__X = ( _054__X0 );
  assign _002__X = ( _002__X0 );
  assign _021__X = ( _021__X0 );
  assign _028__X = ( _028__X0 );
  assign _031__X = ( _031__X0 );
  assign _034__X = ( _034__X0 );
  assign _037__X = ( _037__X0 );
  assign _040__X = ( _040__X0 );
  assign _043__X = ( _043__X0 );
  assign _046__X = ( _046__X0 );
  assign _049__X = ( _049__X0 );
  assign accu_ctrl_valid_d1_X = ( accu_ctrl_valid_d1_X0 ) | ( accu_ctrl_valid_d1_X1 ) | ( accu_ctrl_valid_d1_X2 ) | ( accu_ctrl_valid_d1_X3 ) | ( accu_ctrl_valid_d1_X4 ) | ( accu_ctrl_valid_d1_X5 ) | ( accu_ctrl_valid_d1_X6 ) | ( accu_ctrl_valid_d1_X7 ) | ( accu_ctrl_valid_d1_X8 ) | ( accu_ctrl_valid_d1_X9 ) | ( accu_ctrl_valid_d1_X10 ) | ( accu_ctrl_valid_d1_X11 ) | ( accu_ctrl_valid_d1_X12 ) | ( accu_ctrl_valid_d1_X13 ) | ( accu_ctrl_valid_d1_X14 );
  assign accu_ram_valid_d1_X = ( accu_ram_valid_d1_X0 );
  assign _001__X = ( _001__X0 );
  assign _025__X = ( _025__X0 );
  assign _053__X = ( _053__X0 );
  assign _055__X = ( _055__X0 );
  assign _003__X = ( _003__X0 );
  assign _022__X = ( _022__X0 );
  assign _029__X = ( _029__X0 );
  assign _032__X = ( _032__X0 );
  assign _035__X = ( _035__X0 );
  assign _038__X = ( _038__X0 );
  assign _041__X = ( _041__X0 );
  assign _044__X = ( _044__X0 );
  assign _047__X = ( _047__X0 );
  assign _050__X = ( _050__X0 );
  assign accu_ctrl_valid_d2_X = ( accu_ctrl_valid_d2_X0 ) | ( accu_ctrl_valid_d2_X1 ) | ( accu_ctrl_valid_d2_X2 ) | ( accu_ctrl_valid_d2_X3 ) | ( accu_ctrl_valid_d2_X4 ) | ( accu_ctrl_valid_d2_X5 ) | ( accu_ctrl_valid_d2_X6 ) | ( accu_ctrl_valid_d2_X7 ) | ( accu_ctrl_valid_d2_X8 ) | ( accu_ctrl_valid_d2_X9 ) | ( accu_ctrl_valid_d2_X10 ) | ( accu_ctrl_valid_d2_X11 ) | ( accu_ctrl_valid_d2_X12 ) | ( accu_ctrl_valid_d2_X13 ) | ( accu_ctrl_valid_d2_X14 ) | ( accu_ctrl_valid_d2_X15 ) | ( accu_ctrl_valid_d2_X16 );
  assign \accu_ctrl_ram_valid_reg[0]_X = ( \accu_ctrl_ram_valid_reg[0]_X0 );
  assign accu_ram_valid_d2_X = ( accu_ram_valid_d2_X0 ) | ( accu_ram_valid_d2_X1 );
  assign _006__X = ( _006__X0 );
  assign _010__X = ( _010__X0 );
  assign _019__X = ( _019__X0 );
  assign _020__X = ( _020__X0 );
  assign _007__X = ( _007__X0 );
  assign _009__X = ( _009__X0 );
  assign _011__X = ( _011__X0 );
  assign _012__X = ( _012__X0 );
  assign _013__X = ( _013__X0 );
  assign _014__X = ( _014__X0 );
  assign _015__X = ( _015__X0 );
  assign _016__X = ( _016__X0 );
  assign _017__X = ( _017__X0 );
  assign _018__X = ( _018__X0 );
  assign _008__X = ( _008__X0 );
  assign is_x1_X = ( is_x1_X0 ) | ( is_x1_X1 ) | ( is_x1_X2 );
  assign layer_st_X = ( layer_st_X0 ) | ( layer_st_X1 ) | ( layer_st_X2 ) | ( layer_st_X3 ) | ( layer_st_X4 ) | ( layer_st_X5 ) | ( layer_st_X6 ) | ( layer_st_X7 ) | ( layer_st_X8 ) | ( layer_st_X9 ) | ( layer_st_X10 );
  assign accu_channel_st_X = ( accu_channel_st_X0 ) | ( accu_channel_st_X1 ) | ( accu_channel_st_X2 );
  assign reg2dp_proc_precision_X = ( reg2dp_proc_precision_X0 ) | ( reg2dp_proc_precision_X1 );
  assign _073__X = ( _073__X0 );
  assign accu_rd_mask_X = ( accu_rd_mask_X0 ) | ( accu_rd_mask_X1 ) | ( accu_rd_mask_X2 ) | ( accu_rd_mask_X3 );
  assign _065__X = ( _065__X0 );
  assign _072__X = ( _072__X0 );
  assign fangyuan0_X = ( fangyuan0_X0 );
  assign is_x2_X = ( is_x2_X0 ) | ( is_x2_X1 ) | ( is_x2_X2 ) | ( is_x2_X3 ) | ( is_x2_X4 ) | ( is_x2_X5 ) | ( is_x2_X6 );
  assign _075__X = ( _075__X0 ) | ( _075__X1 ) | ( _075__X2 );
  assign accu_rd_mask_w_X = ( accu_rd_mask_w_X0 ) | ( accu_rd_mask_w_X1 ) | ( accu_rd_mask_w_X2 );
  assign accu_pd_X = ( accu_pd_X0 ) | ( accu_pd_X1 ) | ( accu_pd_X2 ) | ( accu_pd_X3 ) | ( accu_pd_X4 ) | ( accu_pd_X5 ) | ( accu_pd_X6 ) | ( accu_pd_X7 ) | ( accu_pd_X8 );
  assign accu_valid_X = ( accu_valid_X0 ) | ( accu_valid_X1 ) | ( accu_valid_X2 ) | ( accu_valid_X3 ) | ( accu_valid_X4 ) | ( accu_valid_X5 ) | ( accu_valid_X6 ) | ( accu_valid_X7 ) | ( accu_valid_X8 ) | ( accu_valid_X9 ) | ( accu_valid_X10 ) | ( accu_valid_X11 ) | ( accu_valid_X12 ) | ( accu_valid_X13 ) | ( accu_valid_X14 ) | ( accu_valid_X15 ) | ( accu_valid_X16 ) | ( accu_valid_X17 ) | ( accu_valid_X18 ) | ( accu_valid_X19 ) | ( accu_valid_X20 ) | ( accu_valid_X21 ) | ( accu_valid_X22 ) | ( accu_valid_X23 ) | ( accu_valid_X24 ) | ( accu_valid_X25 ) | ( accu_valid_X26 ) | ( accu_valid_X27 ) | ( accu_valid_X28 ) | ( accu_valid_X29 ) | ( accu_valid_X30 ) | ( accu_valid_X31 ) | ( accu_valid_X32 ) | ( accu_valid_X33 ) | ( accu_valid_X34 );
  assign is_fp16_X = ( is_fp16_X0 ) | ( is_fp16_X1 ) | ( is_fp16_X2 ) | ( is_fp16_X3 ) | ( is_fp16_X4 ) | ( is_fp16_X5 ) | ( is_fp16_X6 ) | ( is_fp16_X7 ) | ( is_fp16_X8 ) | ( is_fp16_X9 ) | ( is_fp16_X10 ) | ( is_fp16_X11 ) | ( is_fp16_X12 ) | ( is_fp16_X13 ) | ( is_fp16_X14 ) | ( is_fp16_X15 ) | ( is_fp16_X16 ) | ( is_fp16_X17 ) | ( is_fp16_X18 ) | ( is_fp16_X19 ) | ( is_fp16_X20 ) | ( is_fp16_X21 ) | ( is_fp16_X22 ) | ( is_fp16_X23 ) | ( is_fp16_X24 ) | ( is_fp16_X25 ) | ( is_fp16_X26 ) | ( is_fp16_X27 ) | ( is_fp16_X28 ) | ( is_fp16_X29 );
  assign _063__X = ( _063__X0 ) | ( _063__X1 );
  assign _069__X = ( _069__X0 ) | ( _069__X1 ) | ( _069__X2 ) | ( _069__X3 ) | ( _069__X4 ) | ( _069__X5 ) | ( _069__X6 ) | ( _069__X7 ) | ( _069__X8 ) | ( _069__X9 ) | ( _069__X10 ) | ( _069__X11 ) | ( _069__X12 ) | ( _069__X13 ) | ( _069__X14 ) | ( _069__X15 ) | ( _069__X16 ) | ( _069__X17 ) | ( _069__X18 ) | ( _069__X19 ) | ( _069__X20 ) | ( _069__X21 ) | ( _069__X22 ) | ( _069__X23 ) | ( _069__X24 ) | ( _069__X25 ) | ( _069__X26 );
  assign reg2dp_op_en_X = ( reg2dp_op_en_X0 ) | ( reg2dp_op_en_X1 ) | ( reg2dp_op_en_X2 ) | ( reg2dp_op_en_X3 ) | ( reg2dp_op_en_X4 );
  assign reg2dp_conv_mode_X = ( reg2dp_conv_mode_X0 ) | ( reg2dp_conv_mode_X1 ) | ( reg2dp_conv_mode_X2 ) | ( reg2dp_conv_mode_X3 ) | ( reg2dp_conv_mode_X4 ) | ( reg2dp_conv_mode_X5 ) | ( reg2dp_conv_mode_X6 ) | ( reg2dp_conv_mode_X7 ) | ( reg2dp_conv_mode_X8 ) | ( reg2dp_conv_mode_X9 ) | ( reg2dp_conv_mode_X10 ) | ( reg2dp_conv_mode_X11 ) | ( reg2dp_conv_mode_X12 ) | ( reg2dp_conv_mode_X13 ) | ( reg2dp_conv_mode_X14 ) | ( reg2dp_conv_mode_X15 ) | ( reg2dp_conv_mode_X16 ) | ( reg2dp_conv_mode_X17 ) | ( reg2dp_conv_mode_X18 ) | ( reg2dp_conv_mode_X19 ) | ( reg2dp_conv_mode_X20 ) | ( reg2dp_conv_mode_X21 ) | ( reg2dp_conv_mode_X22 ) | ( reg2dp_conv_mode_X23 ) | ( reg2dp_conv_mode_X24 ) | ( reg2dp_conv_mode_X25 ) | ( reg2dp_conv_mode_X26 ) | ( reg2dp_conv_mode_X27 ) | ( reg2dp_conv_mode_X28 ) | ( reg2dp_conv_mode_X29 ) | ( reg2dp_conv_mode_X30 ) | ( reg2dp_conv_mode_X31 ) | ( reg2dp_conv_mode_X32 ) | ( reg2dp_conv_mode_X33 ) | ( reg2dp_conv_mode_X34 ) | ( reg2dp_conv_mode_X35 ) | ( reg2dp_conv_mode_X36 ) | ( reg2dp_conv_mode_X37 ) | ( reg2dp_conv_mode_X38 ) | ( reg2dp_conv_mode_X39 ) | ( reg2dp_conv_mode_X40 ) | ( reg2dp_conv_mode_X41 ) | ( reg2dp_conv_mode_X42 ) | ( reg2dp_conv_mode_X43 ) | ( reg2dp_conv_mode_X44 ) | ( reg2dp_conv_mode_X45 ) | ( reg2dp_conv_mode_X46 ) | ( reg2dp_conv_mode_X47 ) | ( reg2dp_conv_mode_X48 ) | ( reg2dp_conv_mode_X49 ) | ( reg2dp_conv_mode_X50 ) | ( reg2dp_conv_mode_X51 ) | ( reg2dp_conv_mode_X52 ) | ( reg2dp_conv_mode_X53 ) | ( reg2dp_conv_mode_X54 ) | ( reg2dp_conv_mode_X55 ) | ( reg2dp_conv_mode_X56 ) | ( reg2dp_conv_mode_X57 ) | ( reg2dp_conv_mode_X58 ) | ( reg2dp_conv_mode_X59 ) | ( reg2dp_conv_mode_X60 ) | ( reg2dp_conv_mode_X61 ) | ( reg2dp_conv_mode_X62 ) | ( reg2dp_conv_mode_X63 ) | ( reg2dp_conv_mode_X64 ) | ( reg2dp_conv_mode_X65 ) | ( reg2dp_conv_mode_X66 ) | ( reg2dp_conv_mode_X67 ) | ( reg2dp_conv_mode_X68 ) | ( reg2dp_conv_mode_X69 ) | ( reg2dp_conv_mode_X70 ) | ( reg2dp_conv_mode_X71 ) | ( reg2dp_conv_mode_X72 ) | ( reg2dp_conv_mode_X73 ) | ( reg2dp_conv_mode_X74 ) | ( reg2dp_conv_mode_X75 ) | ( reg2dp_conv_mode_X76 ) | ( reg2dp_conv_mode_X77 ) | ( reg2dp_conv_mode_X78 ) | ( reg2dp_conv_mode_X79 ) | ( reg2dp_conv_mode_X80 ) | ( reg2dp_conv_mode_X81 ) | ( reg2dp_conv_mode_X82 ) | ( reg2dp_conv_mode_X83 ) | ( reg2dp_conv_mode_X84 ) | ( reg2dp_conv_mode_X85 ) | ( reg2dp_conv_mode_X86 ) | ( reg2dp_conv_mode_X87 ) | ( reg2dp_conv_mode_X88 ) | ( reg2dp_conv_mode_X89 ) | ( reg2dp_conv_mode_X90 ) | ( reg2dp_conv_mode_X91 ) | ( reg2dp_conv_mode_X92 ) | ( reg2dp_conv_mode_X93 ) | ( reg2dp_conv_mode_X94 ) | ( reg2dp_conv_mode_X95 ) | ( reg2dp_conv_mode_X96 ) | ( reg2dp_conv_mode_X97 ) | ( reg2dp_conv_mode_X98 ) | ( reg2dp_conv_mode_X99 ) | ( reg2dp_conv_mode_X100 ) | ( reg2dp_conv_mode_X101 );
  assign is_int8_X = ( is_int8_X0 ) | ( is_int8_X1 ) | ( is_int8_X2 ) | ( is_int8_X3 ) | ( is_int8_X4 ) | ( is_int8_X5 ) | ( is_int8_X6 ) | ( is_int8_X7 ) | ( is_int8_X8 ) | ( is_int8_X9 ) | ( is_int8_X10 ) | ( is_int8_X11 ) | ( is_int8_X12 ) | ( is_int8_X13 ) | ( is_int8_X14 ) | ( is_int8_X15 ) | ( is_int8_X16 ) | ( is_int8_X17 ) | ( is_int8_X18 ) | ( is_int8_X19 ) | ( is_int8_X20 ) | ( is_int8_X21 ) | ( is_int8_X22 ) | ( is_int8_X23 ) | ( is_int8_X24 ) | ( is_int8_X25 ) | ( is_int8_X26 ) | ( is_int8_X27 ) | ( is_int8_X28 ) | ( is_int8_X29 ) | ( is_int8_X30 ) | ( is_int8_X31 ) | ( is_int8_X32 ) | ( is_int8_X33 ) | ( is_int8_X34 ) | ( is_int8_X35 ) | ( is_int8_X36 ) | ( is_int8_X37 ) | ( is_int8_X38 ) | ( is_int8_X39 ) | ( is_int8_X40 ) | ( is_int8_X41 ) | ( is_int8_X42 ) | ( is_int8_X43 ) | ( is_int8_X44 ) | ( is_int8_X45 ) | ( is_int8_X46 ) | ( is_int8_X47 ) | ( is_int8_X48 ) | ( is_int8_X49 ) | ( is_int8_X50 ) | ( is_int8_X51 ) | ( is_int8_X52 ) | ( is_int8_X53 ) | ( is_int8_X54 ) | ( is_int8_X55 ) | ( is_int8_X56 ) | ( is_int8_X57 ) | ( is_int8_X58 ) | ( is_int8_X59 ) | ( is_int8_X60 ) | ( is_int8_X61 ) | ( is_int8_X62 ) | ( is_int8_X63 ) | ( is_int8_X64 ) | ( is_int8_X65 ) | ( is_int8_X66 ) | ( is_int8_X67 ) | ( is_int8_X68 ) | ( is_int8_X69 ) | ( is_int8_X70 ) | ( is_int8_X71 ) | ( is_int8_X72 ) | ( is_int8_X73 ) | ( is_int8_X74 ) | ( is_int8_X75 ) | ( is_int8_X76 ) | ( is_int8_X77 ) | ( is_int8_X78 ) | ( is_int8_X79 ) | ( is_int8_X80 ) | ( is_int8_X81 ) | ( is_int8_X82 ) | ( is_int8_X83 ) | ( is_int8_X84 ) | ( is_int8_X85 ) | ( is_int8_X86 ) | ( is_int8_X87 ) | ( is_int8_X88 ) | ( is_int8_X89 ) | ( is_int8_X90 ) | ( is_int8_X91 ) | ( is_int8_X92 ) | ( is_int8_X93 ) | ( is_int8_X94 ) | ( is_int8_X95 ) | ( is_int8_X96 ) | ( is_int8_X97 ) | ( is_int8_X98 ) | ( is_int8_X99 ) | ( is_int8_X100 ) | ( is_int8_X101 ) | ( is_int8_X102 ) | ( is_int8_X103 ) | ( is_int8_X104 ) | ( is_int8_X105 ) | ( is_int8_X106 ) | ( is_int8_X107 ) | ( is_int8_X108 ) | ( is_int8_X109 ) | ( is_int8_X110 ) | ( is_int8_X111 ) | ( is_int8_X112 ) | ( is_int8_X113 ) | ( is_int8_X114 ) | ( is_int8_X115 ) | ( is_int8_X116 ) | ( is_int8_X117 ) | ( is_int8_X118 ) | ( is_int8_X119 ) | ( is_int8_X120 ) | ( is_int8_X121 ) | ( is_int8_X122 ) | ( is_int8_X123 ) | ( is_int8_X124 ) | ( is_int8_X125 ) | ( is_int8_X126 ) | ( is_int8_X127 ) | ( is_int8_X128 ) | ( is_int8_X129 );
  assign _071__X = ( _071__X0 ) | ( _071__X1 );
  assign _070__X = ( _070__X0 ) | ( _070__X1 );
  assign accu_cnt_X = ( accu_cnt_X0 ) | ( accu_cnt_X1 ) | ( accu_cnt_X2 ) | ( accu_cnt_X3 );
  assign wait_for_op_en_X = ( wait_for_op_en_X0 ) | ( wait_for_op_en_X1 ) | ( wait_for_op_en_X2 );
  assign slcg_cell_en_X = ( slcg_cell_en_X0 );
  assign cfg_truncate_X = ( cfg_truncate_X0 ) | ( cfg_truncate_X1 );
  assign cfg_is_wg_X = ( cfg_is_wg_X0 ) | ( cfg_is_wg_X1 );
  assign cfg_is_int8_X = ( cfg_is_int8_X0 ) | ( cfg_is_int8_X1 );
  assign cfg_is_int_X = ( cfg_is_int_X0 ) | ( cfg_is_int_X1 );
  assign cfg_is_fp_X = ( cfg_is_fp_X0 ) | ( cfg_is_fp_X1 );
  assign cfg_in_en_mask_X = ( cfg_in_en_mask_X0 ) | ( cfg_in_en_mask_X1 );
  assign accu_ctrl_valid_X = ( accu_ctrl_valid_X0 );
  assign accu_ctrl_ram_valid_X = ( accu_ctrl_ram_valid_X0 ) | ( accu_ctrl_ram_valid_X1 ) | ( accu_ctrl_ram_valid_X2 ) | ( accu_ctrl_ram_valid_X3 ) | ( accu_ctrl_ram_valid_X4 ) | ( accu_ctrl_ram_valid_X5 ) | ( accu_ctrl_ram_valid_X6 ) | ( accu_ctrl_ram_valid_X7 ) | ( accu_ctrl_ram_valid_X8 ) | ( accu_ctrl_ram_valid_X9 ) | ( accu_ctrl_ram_valid_X10 ) | ( accu_ctrl_ram_valid_X11 ) | ( accu_ctrl_ram_valid_X12 ) | ( accu_ctrl_ram_valid_X13 ) | ( accu_ctrl_ram_valid_X14 ) | ( accu_ctrl_ram_valid_X15 ) | ( accu_ctrl_ram_valid_X16 ) | ( accu_ctrl_ram_valid_X17 ) | ( accu_ctrl_ram_valid_X18 ) | ( accu_ctrl_ram_valid_X19 ) | ( accu_ctrl_ram_valid_X20 ) | ( accu_ctrl_ram_valid_X21 ) | ( accu_ctrl_ram_valid_X22 ) | ( accu_ctrl_ram_valid_X23 ) | ( accu_ctrl_ram_valid_X24 ) | ( accu_ctrl_ram_valid_X25 ) | ( accu_ctrl_ram_valid_X26 ) | ( accu_ctrl_ram_valid_X27 ) | ( accu_ctrl_ram_valid_X28 ) | ( accu_ctrl_ram_valid_X29 ) | ( accu_ctrl_ram_valid_X30 ) | ( accu_ctrl_ram_valid_X31 ) | ( accu_ctrl_ram_valid_X32 ) | ( accu_ctrl_ram_valid_X33 ) | ( accu_ctrl_ram_valid_X34 ) | ( accu_ctrl_ram_valid_X35 ) | ( accu_ctrl_ram_valid_X36 ) | ( accu_ctrl_ram_valid_X37 ) | ( accu_ctrl_ram_valid_X38 ) | ( accu_ctrl_ram_valid_X39 ) | ( accu_ctrl_ram_valid_X40 ) | ( accu_ctrl_ram_valid_X41 ) | ( accu_ctrl_ram_valid_X42 ) | ( accu_ctrl_ram_valid_X43 ) | ( accu_ctrl_ram_valid_X44 ) | ( accu_ctrl_ram_valid_X45 ) | ( accu_ctrl_ram_valid_X46 ) | ( accu_ctrl_ram_valid_X47 ) | ( accu_ctrl_ram_valid_X48 ) | ( accu_ctrl_ram_valid_X49 ) | ( accu_ctrl_ram_valid_X50 ) | ( accu_ctrl_ram_valid_X51 ) | ( accu_ctrl_ram_valid_X52 ) | ( accu_ctrl_ram_valid_X53 ) | ( accu_ctrl_ram_valid_X54 ) | ( accu_ctrl_ram_valid_X55 ) | ( accu_ctrl_ram_valid_X56 ) | ( accu_ctrl_ram_valid_X57 ) | ( accu_ctrl_ram_valid_X58 ) | ( accu_ctrl_ram_valid_X59 ) | ( accu_ctrl_ram_valid_X60 ) | ( accu_ctrl_ram_valid_X61 ) | ( accu_ctrl_ram_valid_X62 ) | ( accu_ctrl_ram_valid_X63 ) | ( accu_ctrl_ram_valid_X64 ) | ( accu_ctrl_ram_valid_X65 ) | ( accu_ctrl_ram_valid_X66 ) | ( accu_ctrl_ram_valid_X67 ) | ( accu_ctrl_ram_valid_X68 ) | ( accu_ctrl_ram_valid_X69 ) | ( accu_ctrl_ram_valid_X70 ) | ( accu_ctrl_ram_valid_X71 ) | ( accu_ctrl_ram_valid_X72 ) | ( accu_ctrl_ram_valid_X73 ) | ( accu_ctrl_ram_valid_X74 ) | ( accu_ctrl_ram_valid_X75 ) | ( accu_ctrl_ram_valid_X76 ) | ( accu_ctrl_ram_valid_X77 ) | ( accu_ctrl_ram_valid_X78 ) | ( accu_ctrl_ram_valid_X79 ) | ( accu_ctrl_ram_valid_X80 ) | ( accu_ctrl_ram_valid_X81 ) | ( accu_ctrl_ram_valid_X82 ) | ( accu_ctrl_ram_valid_X83 ) | ( accu_ctrl_ram_valid_X84 ) | ( accu_ctrl_ram_valid_X85 ) | ( accu_ctrl_ram_valid_X86 ) | ( accu_ctrl_ram_valid_X87 ) | ( accu_ctrl_ram_valid_X88 ) | ( accu_ctrl_ram_valid_X89 ) | ( accu_ctrl_ram_valid_X90 ) | ( accu_ctrl_ram_valid_X91 ) | ( accu_ctrl_ram_valid_X92 ) | ( accu_ctrl_ram_valid_X93 ) | ( accu_ctrl_ram_valid_X94 ) | ( accu_ctrl_ram_valid_X95 ) | ( accu_ctrl_ram_valid_X96 ) | ( accu_ctrl_ram_valid_X97 ) | ( accu_ctrl_ram_valid_X98 ) | ( accu_ctrl_ram_valid_X99 ) | ( accu_ctrl_ram_valid_X100 ) | ( accu_ctrl_ram_valid_X101 ) | ( accu_ctrl_ram_valid_X102 ) | ( accu_ctrl_ram_valid_X103 ) | ( accu_ctrl_ram_valid_X104 ) | ( accu_ctrl_ram_valid_X105 ) | ( accu_ctrl_ram_valid_X106 ) | ( accu_ctrl_ram_valid_X107 ) | ( accu_ctrl_ram_valid_X108 ) | ( accu_ctrl_ram_valid_X109 ) | ( accu_ctrl_ram_valid_X110 ) | ( accu_ctrl_ram_valid_X111 ) | ( accu_ctrl_ram_valid_X112 ) | ( accu_ctrl_ram_valid_X113 ) | ( accu_ctrl_ram_valid_X114 ) | ( accu_ctrl_ram_valid_X115 ) | ( accu_ctrl_ram_valid_X116 ) | ( accu_ctrl_ram_valid_X117 ) | ( accu_ctrl_ram_valid_X118 ) | ( accu_ctrl_ram_valid_X119 ) | ( accu_ctrl_ram_valid_X120 ) | ( accu_ctrl_ram_valid_X121 ) | ( accu_ctrl_ram_valid_X122 ) | ( accu_ctrl_ram_valid_X123 ) | ( accu_ctrl_ram_valid_X124 ) | ( accu_ctrl_ram_valid_X125 ) | ( accu_ctrl_ram_valid_X126 ) | ( accu_ctrl_ram_valid_X127 ) | ( accu_ctrl_ram_valid_X128 ) | ( accu_ctrl_ram_valid_X129 ) | ( accu_ctrl_ram_valid_X130 ) | ( accu_ctrl_ram_valid_X131 ) | ( accu_ctrl_ram_valid_X132 ) | ( accu_ctrl_ram_valid_X133 ) | ( accu_ctrl_ram_valid_X134 ) | ( accu_ctrl_ram_valid_X135 ) | ( accu_ctrl_ram_valid_X136 ) | ( accu_ctrl_ram_valid_X137 ) | ( accu_ctrl_ram_valid_X138 ) | ( accu_ctrl_ram_valid_X139 ) | ( accu_ctrl_ram_valid_X140 ) | ( accu_ctrl_ram_valid_X141 ) | ( accu_ctrl_ram_valid_X142 ) | ( accu_ctrl_ram_valid_X143 ) | ( accu_ctrl_ram_valid_X144 ) | ( accu_ctrl_ram_valid_X145 ) | ( accu_ctrl_ram_valid_X146 ) | ( accu_ctrl_ram_valid_X147 ) | ( accu_ctrl_ram_valid_X148 ) | ( accu_ctrl_ram_valid_X149 ) | ( accu_ctrl_ram_valid_X150 ) | ( accu_ctrl_ram_valid_X151 ) | ( accu_ctrl_ram_valid_X152 ) | ( accu_ctrl_ram_valid_X153 ) | ( accu_ctrl_ram_valid_X154 ) | ( accu_ctrl_ram_valid_X155 ) | ( accu_ctrl_ram_valid_X156 ) | ( accu_ctrl_ram_valid_X157 ) | ( accu_ctrl_ram_valid_X158 ) | ( accu_ctrl_ram_valid_X159 ) | ( accu_ctrl_ram_valid_X160 ) | ( accu_ctrl_ram_valid_X161 ) | ( accu_ctrl_ram_valid_X162 ) | ( accu_ctrl_ram_valid_X163 ) | ( accu_ctrl_ram_valid_X164 ) | ( accu_ctrl_ram_valid_X165 ) | ( accu_ctrl_ram_valid_X166 ) | ( accu_ctrl_ram_valid_X167 ) | ( accu_ctrl_ram_valid_X168 ) | ( accu_ctrl_ram_valid_X169 ) | ( accu_ctrl_ram_valid_X170 ) | ( accu_ctrl_ram_valid_X171 ) | ( accu_ctrl_ram_valid_X172 ) | ( accu_ctrl_ram_valid_X173 ) | ( accu_ctrl_ram_valid_X174 ) | ( accu_ctrl_ram_valid_X175 ) | ( accu_ctrl_ram_valid_X176 ) | ( accu_ctrl_ram_valid_X177 ) | ( accu_ctrl_ram_valid_X178 ) | ( accu_ctrl_ram_valid_X179 ) | ( accu_ctrl_ram_valid_X180 ) | ( accu_ctrl_ram_valid_X181 ) | ( accu_ctrl_ram_valid_X182 ) | ( accu_ctrl_ram_valid_X183 ) | ( accu_ctrl_ram_valid_X184 ) | ( accu_ctrl_ram_valid_X185 ) | ( accu_ctrl_ram_valid_X186 ) | ( accu_ctrl_ram_valid_X187 ) | ( accu_ctrl_ram_valid_X188 ) | ( accu_ctrl_ram_valid_X189 ) | ( accu_ctrl_ram_valid_X190 ) | ( accu_ctrl_ram_valid_X191 );
  assign accu_ctrl_pd_X = ( accu_ctrl_pd_X0 );
  assign abuf_rd_en_X = ( abuf_rd_en_X0 ) | ( abuf_rd_en_X1 );
  assign abuf_rd_addr_X = ( abuf_rd_addr_X0 );
  assign slcg_cell_en_d3_R = ( slcg_cell_en_d3_X0 & slcg_cell_en_d3_R0 );
  assign _081__R = ( _081__X0 & _081__R0 );
  assign _080__R = ( _080__X0 & _080__R0 );
  assign fangyuan19_R = ( fangyuan19_X0 & fangyuan19_R0 );
  assign _067__R = ( _067__X0 & _067__R0 );
  assign _066__R = ( _066__X0 & _066__R0 );
  assign _079__R = ( _079__X0 & _079__R0 );
  assign _064__R = ( _064__X0 & _064__R0 );
  assign _078__R = ( _078__X0 & _078__R0 );
  assign _077__R = ( _077__X0 & _077__R0 );
  assign fangyuan18_R = ( fangyuan18_X0 & fangyuan18_R0 );
  assign fangyuan17_R = ( fangyuan17_X0 & fangyuan17_R0 );
  assign accu_rd_sel_w_R = ( accu_rd_sel_w_X0 & accu_rd_sel_w_R0 ) | ( accu_rd_sel_w_X1 & accu_rd_sel_w_R1 ) | ( accu_rd_sel_w_X2 & accu_rd_sel_w_R2 );
  assign accu_cnt_inc_R = ( accu_cnt_inc_X0 & accu_cnt_inc_R0 );
  assign _074__R = ( _074__X0 & _074__R0 );
  assign _076__R = ( _076__X0 & _076__R0 );
  assign dp2reg_done_R = ( dp2reg_done_X0 & dp2reg_done_R0 );
  assign mac_a2accu_pd_R = ( mac_a2accu_pd_X0 & mac_a2accu_pd_R0 );
  assign accu_cnt_w_R = ( accu_cnt_w_X0 & accu_cnt_w_R0 ) | ( accu_cnt_w_X1 & accu_cnt_w_R1 );
  assign fangyuan16_R = ( fangyuan16_X0 & fangyuan16_R0 );
  assign accu_channel_st_w_R = ( accu_channel_st_w_X0 & accu_channel_st_w_R0 ) | ( accu_channel_st_w_X1 & accu_channel_st_w_R1 ) | ( accu_channel_st_w_X2 & accu_channel_st_w_R2 ) | ( accu_channel_st_w_X3 & accu_channel_st_w_R3 ) | ( accu_channel_st_w_X4 & accu_channel_st_w_R4 ) | ( accu_channel_st_w_X5 & accu_channel_st_w_R5 ) | ( accu_channel_st_w_X6 & accu_channel_st_w_R6 ) | ( accu_channel_st_w_X7 & accu_channel_st_w_R7 ) | ( accu_channel_st_w_X8 & accu_channel_st_w_R8 );
  assign fangyuan15_R = ( fangyuan15_X0 & fangyuan15_R0 );
  assign is_x4_R = ( is_x4_X0 & is_x4_R0 ) | ( is_x4_X1 & is_x4_R1 ) | ( is_x4_X2 & is_x4_R2 );
  assign is_x8_R = ( is_x8_X0 & is_x8_R0 ) | ( is_x8_X1 & is_x8_R1 ) | ( is_x8_X2 & is_x8_R2 );
  assign accu_ram_sel_1_w_R = ( accu_ram_sel_1_w_X0 & accu_ram_sel_1_w_R0 );
  assign accu_ram_sel_2_w_R = ( accu_ram_sel_2_w_X0 & accu_ram_sel_2_w_R0 );
  assign accu_ram_sel_3_w_R = ( accu_ram_sel_3_w_X0 & accu_ram_sel_3_w_R0 );
  assign accu_ram_sel_5_w_R = ( accu_ram_sel_5_w_X0 & accu_ram_sel_5_w_R0 );
  assign accu_ram_sel_6_w_R = ( accu_ram_sel_6_w_X0 & accu_ram_sel_6_w_R0 );
  assign accu_ram_sel_7_w_R = ( accu_ram_sel_7_w_X0 & accu_ram_sel_7_w_R0 );
  assign _068__R = ( _068__X0 & _068__R0 ) | ( _068__X1 & _068__R1 ) | ( _068__X2 & _068__R2 ) | ( _068__X3 & _068__R3 ) | ( _068__X4 & _068__R4 ) | ( _068__X5 & _068__R5 ) | ( _068__X6 & _068__R6 ) | ( _068__X7 & _068__R7 ) | ( _068__X8 & _068__R8 ) | ( _068__X9 & _068__R9 ) | ( _068__X10 & _068__R10 );
  assign cfg_winograd_R = ( cfg_winograd_X0 & cfg_winograd_R0 ) | ( cfg_winograd_X1 & cfg_winograd_R1 );
  assign fangyuan14_R = ( fangyuan14_X0 & fangyuan14_R0 );
  assign reg2dp_clip_truncate_R = ( reg2dp_clip_truncate_X0 & reg2dp_clip_truncate_R0 ) | ( reg2dp_clip_truncate_X1 & reg2dp_clip_truncate_R1 ) | ( reg2dp_clip_truncate_X2 & reg2dp_clip_truncate_R2 ) | ( reg2dp_clip_truncate_X3 & reg2dp_clip_truncate_R3 ) | ( reg2dp_clip_truncate_X4 & reg2dp_clip_truncate_R4 ) | ( reg2dp_clip_truncate_X5 & reg2dp_clip_truncate_R5 ) | ( reg2dp_clip_truncate_X6 & reg2dp_clip_truncate_R6 ) | ( reg2dp_clip_truncate_X7 & reg2dp_clip_truncate_R7 ) | ( reg2dp_clip_truncate_X8 & reg2dp_clip_truncate_R8 ) | ( reg2dp_clip_truncate_X9 & reg2dp_clip_truncate_R9 ) | ( reg2dp_clip_truncate_X10 & reg2dp_clip_truncate_R10 ) | ( reg2dp_clip_truncate_X11 & reg2dp_clip_truncate_R11 ) | ( reg2dp_clip_truncate_X12 & reg2dp_clip_truncate_R12 ) | ( reg2dp_clip_truncate_X13 & reg2dp_clip_truncate_R13 ) | ( reg2dp_clip_truncate_X14 & reg2dp_clip_truncate_R14 ) | ( reg2dp_clip_truncate_X15 & reg2dp_clip_truncate_R15 ) | ( reg2dp_clip_truncate_X16 & reg2dp_clip_truncate_R16 ) | ( reg2dp_clip_truncate_X17 & reg2dp_clip_truncate_R17 ) | ( reg2dp_clip_truncate_X18 & reg2dp_clip_truncate_R18 ) | ( reg2dp_clip_truncate_X19 & reg2dp_clip_truncate_R19 ) | ( reg2dp_clip_truncate_X20 & reg2dp_clip_truncate_R20 ) | ( reg2dp_clip_truncate_X21 & reg2dp_clip_truncate_R21 ) | ( reg2dp_clip_truncate_X22 & reg2dp_clip_truncate_R22 ) | ( reg2dp_clip_truncate_X23 & reg2dp_clip_truncate_R23 ) | ( reg2dp_clip_truncate_X24 & reg2dp_clip_truncate_R24 ) | ( reg2dp_clip_truncate_X25 & reg2dp_clip_truncate_R25 ) | ( reg2dp_clip_truncate_X26 & reg2dp_clip_truncate_R26 ) | ( reg2dp_clip_truncate_X27 & reg2dp_clip_truncate_R27 ) | ( reg2dp_clip_truncate_X28 & reg2dp_clip_truncate_R28 ) | ( reg2dp_clip_truncate_X29 & reg2dp_clip_truncate_R29 ) | ( reg2dp_clip_truncate_X30 & reg2dp_clip_truncate_R30 ) | ( reg2dp_clip_truncate_X31 & reg2dp_clip_truncate_R31 ) | ( reg2dp_clip_truncate_X32 & reg2dp_clip_truncate_R32 ) | ( reg2dp_clip_truncate_X33 & reg2dp_clip_truncate_R33 ) | ( reg2dp_clip_truncate_X34 & reg2dp_clip_truncate_R34 ) | ( reg2dp_clip_truncate_X35 & reg2dp_clip_truncate_R35 ) | ( reg2dp_clip_truncate_X36 & reg2dp_clip_truncate_R36 ) | ( reg2dp_clip_truncate_X37 & reg2dp_clip_truncate_R37 ) | ( reg2dp_clip_truncate_X38 & reg2dp_clip_truncate_R38 ) | ( reg2dp_clip_truncate_X39 & reg2dp_clip_truncate_R39 ) | ( reg2dp_clip_truncate_X40 & reg2dp_clip_truncate_R40 ) | ( reg2dp_clip_truncate_X41 & reg2dp_clip_truncate_R41 ) | ( reg2dp_clip_truncate_X42 & reg2dp_clip_truncate_R42 ) | ( reg2dp_clip_truncate_X43 & reg2dp_clip_truncate_R43 ) | ( reg2dp_clip_truncate_X44 & reg2dp_clip_truncate_R44 ) | ( reg2dp_clip_truncate_X45 & reg2dp_clip_truncate_R45 ) | ( reg2dp_clip_truncate_X46 & reg2dp_clip_truncate_R46 ) | ( reg2dp_clip_truncate_X47 & reg2dp_clip_truncate_R47 ) | ( reg2dp_clip_truncate_X48 & reg2dp_clip_truncate_R48 ) | ( reg2dp_clip_truncate_X49 & reg2dp_clip_truncate_R49 ) | ( reg2dp_clip_truncate_X50 & reg2dp_clip_truncate_R50 ) | ( reg2dp_clip_truncate_X51 & reg2dp_clip_truncate_R51 ) | ( reg2dp_clip_truncate_X52 & reg2dp_clip_truncate_R52 ) | ( reg2dp_clip_truncate_X53 & reg2dp_clip_truncate_R53 ) | ( reg2dp_clip_truncate_X54 & reg2dp_clip_truncate_R54 ) | ( reg2dp_clip_truncate_X55 & reg2dp_clip_truncate_R55 ) | ( reg2dp_clip_truncate_X56 & reg2dp_clip_truncate_R56 ) | ( reg2dp_clip_truncate_X57 & reg2dp_clip_truncate_R57 ) | ( reg2dp_clip_truncate_X58 & reg2dp_clip_truncate_R58 ) | ( reg2dp_clip_truncate_X59 & reg2dp_clip_truncate_R59 ) | ( reg2dp_clip_truncate_X60 & reg2dp_clip_truncate_R60 ) | ( reg2dp_clip_truncate_X61 & reg2dp_clip_truncate_R61 ) | ( reg2dp_clip_truncate_X62 & reg2dp_clip_truncate_R62 ) | ( reg2dp_clip_truncate_X63 & reg2dp_clip_truncate_R63 ) | ( reg2dp_clip_truncate_X64 & reg2dp_clip_truncate_R64 ) | ( reg2dp_clip_truncate_X65 & reg2dp_clip_truncate_R65 ) | ( reg2dp_clip_truncate_X66 & reg2dp_clip_truncate_R66 ) | ( reg2dp_clip_truncate_X67 & reg2dp_clip_truncate_R67 ) | ( reg2dp_clip_truncate_X68 & reg2dp_clip_truncate_R68 ) | ( reg2dp_clip_truncate_X69 & reg2dp_clip_truncate_R69 ) | ( reg2dp_clip_truncate_X70 & reg2dp_clip_truncate_R70 ) | ( reg2dp_clip_truncate_X71 & reg2dp_clip_truncate_R71 ) | ( reg2dp_clip_truncate_X72 & reg2dp_clip_truncate_R72 ) | ( reg2dp_clip_truncate_X73 & reg2dp_clip_truncate_R73 ) | ( reg2dp_clip_truncate_X74 & reg2dp_clip_truncate_R74 ) | ( reg2dp_clip_truncate_X75 & reg2dp_clip_truncate_R75 ) | ( reg2dp_clip_truncate_X76 & reg2dp_clip_truncate_R76 ) | ( reg2dp_clip_truncate_X77 & reg2dp_clip_truncate_R77 ) | ( reg2dp_clip_truncate_X78 & reg2dp_clip_truncate_R78 ) | ( reg2dp_clip_truncate_X79 & reg2dp_clip_truncate_R79 ) | ( reg2dp_clip_truncate_X80 & reg2dp_clip_truncate_R80 ) | ( reg2dp_clip_truncate_X81 & reg2dp_clip_truncate_R81 ) | ( reg2dp_clip_truncate_X82 & reg2dp_clip_truncate_R82 ) | ( reg2dp_clip_truncate_X83 & reg2dp_clip_truncate_R83 ) | ( reg2dp_clip_truncate_X84 & reg2dp_clip_truncate_R84 ) | ( reg2dp_clip_truncate_X85 & reg2dp_clip_truncate_R85 ) | ( reg2dp_clip_truncate_X86 & reg2dp_clip_truncate_R86 ) | ( reg2dp_clip_truncate_X87 & reg2dp_clip_truncate_R87 ) | ( reg2dp_clip_truncate_X88 & reg2dp_clip_truncate_R88 ) | ( reg2dp_clip_truncate_X89 & reg2dp_clip_truncate_R89 ) | ( reg2dp_clip_truncate_X90 & reg2dp_clip_truncate_R90 ) | ( reg2dp_clip_truncate_X91 & reg2dp_clip_truncate_R91 ) | ( reg2dp_clip_truncate_X92 & reg2dp_clip_truncate_R92 ) | ( reg2dp_clip_truncate_X93 & reg2dp_clip_truncate_R93 ) | ( reg2dp_clip_truncate_X94 & reg2dp_clip_truncate_R94 ) | ( reg2dp_clip_truncate_X95 & reg2dp_clip_truncate_R95 ) | ( reg2dp_clip_truncate_X96 & reg2dp_clip_truncate_R96 ) | ( reg2dp_clip_truncate_X97 & reg2dp_clip_truncate_R97 ) | ( reg2dp_clip_truncate_X98 & reg2dp_clip_truncate_R98 ) | ( reg2dp_clip_truncate_X99 & reg2dp_clip_truncate_R99 ) | ( reg2dp_clip_truncate_X100 & reg2dp_clip_truncate_R100 ) | ( reg2dp_clip_truncate_X101 & reg2dp_clip_truncate_R101 ) | ( reg2dp_clip_truncate_X102 & reg2dp_clip_truncate_R102 ) | ( reg2dp_clip_truncate_X103 & reg2dp_clip_truncate_R103 ) | ( reg2dp_clip_truncate_X104 & reg2dp_clip_truncate_R104 ) | ( reg2dp_clip_truncate_X105 & reg2dp_clip_truncate_R105 ) | ( reg2dp_clip_truncate_X106 & reg2dp_clip_truncate_R106 ) | ( reg2dp_clip_truncate_X107 & reg2dp_clip_truncate_R107 ) | ( reg2dp_clip_truncate_X108 & reg2dp_clip_truncate_R108 ) | ( reg2dp_clip_truncate_X109 & reg2dp_clip_truncate_R109 ) | ( reg2dp_clip_truncate_X110 & reg2dp_clip_truncate_R110 ) | ( reg2dp_clip_truncate_X111 & reg2dp_clip_truncate_R111 ) | ( reg2dp_clip_truncate_X112 & reg2dp_clip_truncate_R112 ) | ( reg2dp_clip_truncate_X113 & reg2dp_clip_truncate_R113 ) | ( reg2dp_clip_truncate_X114 & reg2dp_clip_truncate_R114 ) | ( reg2dp_clip_truncate_X115 & reg2dp_clip_truncate_R115 ) | ( reg2dp_clip_truncate_X116 & reg2dp_clip_truncate_R116 ) | ( reg2dp_clip_truncate_X117 & reg2dp_clip_truncate_R117 ) | ( reg2dp_clip_truncate_X118 & reg2dp_clip_truncate_R118 ) | ( reg2dp_clip_truncate_X119 & reg2dp_clip_truncate_R119 ) | ( reg2dp_clip_truncate_X120 & reg2dp_clip_truncate_R120 ) | ( reg2dp_clip_truncate_X121 & reg2dp_clip_truncate_R121 ) | ( reg2dp_clip_truncate_X122 & reg2dp_clip_truncate_R122 ) | ( reg2dp_clip_truncate_X123 & reg2dp_clip_truncate_R123 ) | ( reg2dp_clip_truncate_X124 & reg2dp_clip_truncate_R124 ) | ( reg2dp_clip_truncate_X125 & reg2dp_clip_truncate_R125 ) | ( reg2dp_clip_truncate_X126 & reg2dp_clip_truncate_R126 ) | ( reg2dp_clip_truncate_X127 & reg2dp_clip_truncate_R127 );
  assign fangyuan13_R = ( fangyuan13_X0 & fangyuan13_R0 );
  assign fangyuan12_R = ( fangyuan12_X0 & fangyuan12_R0 );
  assign fangyuan11_R = ( fangyuan11_X0 & fangyuan11_R0 );
  assign fangyuan10_R = ( fangyuan10_X0 & fangyuan10_R0 );
  assign cfg_in_en_mask_w_R = ( cfg_in_en_mask_w_X0 & cfg_in_en_mask_w_R0 );
  assign accu_addr_d0_R = ( accu_addr_d0_X0 & accu_addr_d0_R0 ) | ( accu_addr_d0_X1 & accu_addr_d0_R1 ) | ( accu_addr_d0_X2 & accu_addr_d0_R2 );
  assign accu_mode_d0_R = ( accu_mode_d0_X0 & accu_mode_d0_R0 ) | ( accu_mode_d0_X1 & accu_mode_d0_R1 );
  assign accu_ram_sel_0_d0_R = ( accu_ram_sel_0_d0_X0 & accu_ram_sel_0_d0_R0 ) | ( accu_ram_sel_0_d0_X1 & accu_ram_sel_0_d0_R1 );
  assign accu_ram_sel_1_d0_R = ( accu_ram_sel_1_d0_X0 & accu_ram_sel_1_d0_R0 ) | ( accu_ram_sel_1_d0_X1 & accu_ram_sel_1_d0_R1 );
  assign accu_ram_sel_2_d0_R = ( accu_ram_sel_2_d0_X0 & accu_ram_sel_2_d0_R0 ) | ( accu_ram_sel_2_d0_X1 & accu_ram_sel_2_d0_R1 );
  assign accu_ram_sel_3_d0_R = ( accu_ram_sel_3_d0_X0 & accu_ram_sel_3_d0_R0 ) | ( accu_ram_sel_3_d0_X1 & accu_ram_sel_3_d0_R1 );
  assign accu_ram_sel_4_d0_R = ( accu_ram_sel_4_d0_X0 & accu_ram_sel_4_d0_R0 ) | ( accu_ram_sel_4_d0_X1 & accu_ram_sel_4_d0_R1 );
  assign accu_ram_sel_5_d0_R = ( accu_ram_sel_5_d0_X0 & accu_ram_sel_5_d0_R0 ) | ( accu_ram_sel_5_d0_X1 & accu_ram_sel_5_d0_R1 );
  assign accu_ram_sel_6_d0_R = ( accu_ram_sel_6_d0_X0 & accu_ram_sel_6_d0_R0 ) | ( accu_ram_sel_6_d0_X1 & accu_ram_sel_6_d0_R1 );
  assign accu_addr_d1_R = ( accu_addr_d1_X0 & accu_addr_d1_R0 ) | ( accu_addr_d1_X1 & accu_addr_d1_R1 );
  assign accu_mode_d1_R = ( accu_mode_d1_X0 & accu_mode_d1_R0 ) | ( accu_mode_d1_X1 & accu_mode_d1_R1 );
  assign accu_rd_mask_d1_R = ( accu_rd_mask_d1_X0 & accu_rd_mask_d1_R0 ) | ( accu_rd_mask_d1_X1 & accu_rd_mask_d1_R1 );
  assign accu_stripe_end_d1_R = ( accu_stripe_end_d1_X0 & accu_stripe_end_d1_R0 ) | ( accu_stripe_end_d1_X1 & accu_stripe_end_d1_R1 );
  assign accu_channel_end_d1_R = ( accu_channel_end_d1_X0 & accu_channel_end_d1_R0 ) | ( accu_channel_end_d1_X1 & accu_channel_end_d1_R1 );
  assign accu_layer_end_d1_R = ( accu_layer_end_d1_X0 & accu_layer_end_d1_R0 ) | ( accu_layer_end_d1_X1 & accu_layer_end_d1_R1 );
  assign accu_ram_sel_0_d1_R = ( accu_ram_sel_0_d1_X0 & accu_ram_sel_0_d1_R0 ) | ( accu_ram_sel_0_d1_X1 & accu_ram_sel_0_d1_R1 );
  assign accu_ram_sel_1_d1_R = ( accu_ram_sel_1_d1_X0 & accu_ram_sel_1_d1_R0 ) | ( accu_ram_sel_1_d1_X1 & accu_ram_sel_1_d1_R1 );
  assign accu_ram_sel_2_d1_R = ( accu_ram_sel_2_d1_X0 & accu_ram_sel_2_d1_R0 ) | ( accu_ram_sel_2_d1_X1 & accu_ram_sel_2_d1_R1 );
  assign accu_ram_sel_3_d1_R = ( accu_ram_sel_3_d1_X0 & accu_ram_sel_3_d1_R0 ) | ( accu_ram_sel_3_d1_X1 & accu_ram_sel_3_d1_R1 );
  assign accu_ram_sel_4_d1_R = ( accu_ram_sel_4_d1_X0 & accu_ram_sel_4_d1_R0 ) | ( accu_ram_sel_4_d1_X1 & accu_ram_sel_4_d1_R1 );
  assign accu_ram_sel_5_d1_R = ( accu_ram_sel_5_d1_X0 & accu_ram_sel_5_d1_R0 ) | ( accu_ram_sel_5_d1_X1 & accu_ram_sel_5_d1_R1 );
  assign accu_ram_sel_6_d1_R = ( accu_ram_sel_6_d1_X0 & accu_ram_sel_6_d1_R0 ) | ( accu_ram_sel_6_d1_X1 & accu_ram_sel_6_d1_R1 );
  assign accu_ram_sel_7_d1_R = ( accu_ram_sel_7_d1_X0 & accu_ram_sel_7_d1_R0 ) | ( accu_ram_sel_7_d1_X1 & accu_ram_sel_7_d1_R1 );
  assign accu_ctrl_addr_R = ( accu_ctrl_addr_X0 & accu_ctrl_addr_R0 ) | ( accu_ctrl_addr_X1 & accu_ctrl_addr_R1 );
  assign accu_addr_d2_R = ( accu_addr_d2_X0 & accu_addr_d2_R0 ) | ( accu_addr_d2_X1 & accu_addr_d2_R1 ) | ( accu_addr_d2_X2 & accu_addr_d2_R2 );
  assign accu_ctrl_mode_R = ( accu_ctrl_mode_X0 & accu_ctrl_mode_R0 ) | ( accu_ctrl_mode_X1 & accu_ctrl_mode_R1 );
  assign accu_mode_d2_R = ( accu_mode_d2_X0 & accu_mode_d2_R0 ) | ( accu_mode_d2_X1 & accu_mode_d2_R1 ) | ( accu_mode_d2_X2 & accu_mode_d2_R2 );
  assign accu_ctrl_rd_mask_R = ( accu_ctrl_rd_mask_X0 & accu_ctrl_rd_mask_R0 ) | ( accu_ctrl_rd_mask_X1 & accu_ctrl_rd_mask_R1 );
  assign accu_rd_mask_d2_R = ( accu_rd_mask_d2_X0 & accu_rd_mask_d2_R0 ) | ( accu_rd_mask_d2_X1 & accu_rd_mask_d2_R1 ) | ( accu_rd_mask_d2_X2 & accu_rd_mask_d2_R2 );
  assign accu_ctrl_stripe_end_R = ( accu_ctrl_stripe_end_X0 & accu_ctrl_stripe_end_R0 ) | ( accu_ctrl_stripe_end_X1 & accu_ctrl_stripe_end_R1 );
  assign accu_stripe_end_d2_R = ( accu_stripe_end_d2_X0 & accu_stripe_end_d2_R0 ) | ( accu_stripe_end_d2_X1 & accu_stripe_end_d2_R1 ) | ( accu_stripe_end_d2_X2 & accu_stripe_end_d2_R2 );
  assign accu_ctrl_channel_end_R = ( accu_ctrl_channel_end_X0 & accu_ctrl_channel_end_R0 ) | ( accu_ctrl_channel_end_X1 & accu_ctrl_channel_end_R1 );
  assign accu_ctrl_layer_end_R = ( accu_ctrl_layer_end_X0 & accu_ctrl_layer_end_R0 ) | ( accu_ctrl_layer_end_X1 & accu_ctrl_layer_end_R1 );
  assign accu_layer_end_d2_R = ( accu_layer_end_d2_X0 & accu_layer_end_d2_R0 ) | ( accu_layer_end_d2_X1 & accu_layer_end_d2_R1 ) | ( accu_layer_end_d2_X2 & accu_layer_end_d2_R2 );
  assign accu_ctrl_ram_sel_0_R = ( accu_ctrl_ram_sel_0_X0 & accu_ctrl_ram_sel_0_R0 ) | ( accu_ctrl_ram_sel_0_X1 & accu_ctrl_ram_sel_0_R1 );
  assign fangyuan9_R = ( fangyuan9_X0 & fangyuan9_R0 );
  assign accu_ram_sel_0_d2_R = ( accu_ram_sel_0_d2_X0 & accu_ram_sel_0_d2_R0 ) | ( accu_ram_sel_0_d2_X1 & accu_ram_sel_0_d2_R1 ) | ( accu_ram_sel_0_d2_X2 & accu_ram_sel_0_d2_R2 ) | ( accu_ram_sel_0_d2_X3 & accu_ram_sel_0_d2_R3 ) | ( accu_ram_sel_0_d2_X4 & accu_ram_sel_0_d2_R4 ) | ( accu_ram_sel_0_d2_X5 & accu_ram_sel_0_d2_R5 ) | ( accu_ram_sel_0_d2_X6 & accu_ram_sel_0_d2_R6 ) | ( accu_ram_sel_0_d2_X7 & accu_ram_sel_0_d2_R7 ) | ( accu_ram_sel_0_d2_X8 & accu_ram_sel_0_d2_R8 ) | ( accu_ram_sel_0_d2_X9 & accu_ram_sel_0_d2_R9 ) | ( accu_ram_sel_0_d2_X10 & accu_ram_sel_0_d2_R10 ) | ( accu_ram_sel_0_d2_X11 & accu_ram_sel_0_d2_R11 ) | ( accu_ram_sel_0_d2_X12 & accu_ram_sel_0_d2_R12 ) | ( accu_ram_sel_0_d2_X13 & accu_ram_sel_0_d2_R13 ) | ( accu_ram_sel_0_d2_X14 & accu_ram_sel_0_d2_R14 ) | ( accu_ram_sel_0_d2_X15 & accu_ram_sel_0_d2_R15 ) | ( accu_ram_sel_0_d2_X16 & accu_ram_sel_0_d2_R16 ) | ( accu_ram_sel_0_d2_X17 & accu_ram_sel_0_d2_R17 );
  assign accu_ctrl_ram_sel_1_R = ( accu_ctrl_ram_sel_1_X0 & accu_ctrl_ram_sel_1_R0 ) | ( accu_ctrl_ram_sel_1_X1 & accu_ctrl_ram_sel_1_R1 );
  assign fangyuan8_R = ( fangyuan8_X0 & fangyuan8_R0 );
  assign accu_ram_sel_1_d2_R = ( accu_ram_sel_1_d2_X0 & accu_ram_sel_1_d2_R0 ) | ( accu_ram_sel_1_d2_X1 & accu_ram_sel_1_d2_R1 ) | ( accu_ram_sel_1_d2_X2 & accu_ram_sel_1_d2_R2 ) | ( accu_ram_sel_1_d2_X3 & accu_ram_sel_1_d2_R3 ) | ( accu_ram_sel_1_d2_X4 & accu_ram_sel_1_d2_R4 ) | ( accu_ram_sel_1_d2_X5 & accu_ram_sel_1_d2_R5 ) | ( accu_ram_sel_1_d2_X6 & accu_ram_sel_1_d2_R6 ) | ( accu_ram_sel_1_d2_X7 & accu_ram_sel_1_d2_R7 ) | ( accu_ram_sel_1_d2_X8 & accu_ram_sel_1_d2_R8 ) | ( accu_ram_sel_1_d2_X9 & accu_ram_sel_1_d2_R9 ) | ( accu_ram_sel_1_d2_X10 & accu_ram_sel_1_d2_R10 ) | ( accu_ram_sel_1_d2_X11 & accu_ram_sel_1_d2_R11 ) | ( accu_ram_sel_1_d2_X12 & accu_ram_sel_1_d2_R12 ) | ( accu_ram_sel_1_d2_X13 & accu_ram_sel_1_d2_R13 ) | ( accu_ram_sel_1_d2_X14 & accu_ram_sel_1_d2_R14 ) | ( accu_ram_sel_1_d2_X15 & accu_ram_sel_1_d2_R15 ) | ( accu_ram_sel_1_d2_X16 & accu_ram_sel_1_d2_R16 ) | ( accu_ram_sel_1_d2_X17 & accu_ram_sel_1_d2_R17 );
  assign accu_ctrl_ram_sel_2_R = ( accu_ctrl_ram_sel_2_X0 & accu_ctrl_ram_sel_2_R0 ) | ( accu_ctrl_ram_sel_2_X1 & accu_ctrl_ram_sel_2_R1 );
  assign fangyuan7_R = ( fangyuan7_X0 & fangyuan7_R0 );
  assign accu_ram_sel_2_d2_R = ( accu_ram_sel_2_d2_X0 & accu_ram_sel_2_d2_R0 ) | ( accu_ram_sel_2_d2_X1 & accu_ram_sel_2_d2_R1 ) | ( accu_ram_sel_2_d2_X2 & accu_ram_sel_2_d2_R2 ) | ( accu_ram_sel_2_d2_X3 & accu_ram_sel_2_d2_R3 ) | ( accu_ram_sel_2_d2_X4 & accu_ram_sel_2_d2_R4 ) | ( accu_ram_sel_2_d2_X5 & accu_ram_sel_2_d2_R5 ) | ( accu_ram_sel_2_d2_X6 & accu_ram_sel_2_d2_R6 ) | ( accu_ram_sel_2_d2_X7 & accu_ram_sel_2_d2_R7 ) | ( accu_ram_sel_2_d2_X8 & accu_ram_sel_2_d2_R8 ) | ( accu_ram_sel_2_d2_X9 & accu_ram_sel_2_d2_R9 ) | ( accu_ram_sel_2_d2_X10 & accu_ram_sel_2_d2_R10 ) | ( accu_ram_sel_2_d2_X11 & accu_ram_sel_2_d2_R11 ) | ( accu_ram_sel_2_d2_X12 & accu_ram_sel_2_d2_R12 ) | ( accu_ram_sel_2_d2_X13 & accu_ram_sel_2_d2_R13 ) | ( accu_ram_sel_2_d2_X14 & accu_ram_sel_2_d2_R14 ) | ( accu_ram_sel_2_d2_X15 & accu_ram_sel_2_d2_R15 ) | ( accu_ram_sel_2_d2_X16 & accu_ram_sel_2_d2_R16 ) | ( accu_ram_sel_2_d2_X17 & accu_ram_sel_2_d2_R17 );
  assign accu_ctrl_ram_sel_3_R = ( accu_ctrl_ram_sel_3_X0 & accu_ctrl_ram_sel_3_R0 ) | ( accu_ctrl_ram_sel_3_X1 & accu_ctrl_ram_sel_3_R1 );
  assign fangyuan6_R = ( fangyuan6_X0 & fangyuan6_R0 );
  assign accu_ram_sel_3_d2_R = ( accu_ram_sel_3_d2_X0 & accu_ram_sel_3_d2_R0 ) | ( accu_ram_sel_3_d2_X1 & accu_ram_sel_3_d2_R1 ) | ( accu_ram_sel_3_d2_X2 & accu_ram_sel_3_d2_R2 ) | ( accu_ram_sel_3_d2_X3 & accu_ram_sel_3_d2_R3 ) | ( accu_ram_sel_3_d2_X4 & accu_ram_sel_3_d2_R4 ) | ( accu_ram_sel_3_d2_X5 & accu_ram_sel_3_d2_R5 ) | ( accu_ram_sel_3_d2_X6 & accu_ram_sel_3_d2_R6 ) | ( accu_ram_sel_3_d2_X7 & accu_ram_sel_3_d2_R7 ) | ( accu_ram_sel_3_d2_X8 & accu_ram_sel_3_d2_R8 ) | ( accu_ram_sel_3_d2_X9 & accu_ram_sel_3_d2_R9 ) | ( accu_ram_sel_3_d2_X10 & accu_ram_sel_3_d2_R10 ) | ( accu_ram_sel_3_d2_X11 & accu_ram_sel_3_d2_R11 ) | ( accu_ram_sel_3_d2_X12 & accu_ram_sel_3_d2_R12 ) | ( accu_ram_sel_3_d2_X13 & accu_ram_sel_3_d2_R13 ) | ( accu_ram_sel_3_d2_X14 & accu_ram_sel_3_d2_R14 ) | ( accu_ram_sel_3_d2_X15 & accu_ram_sel_3_d2_R15 ) | ( accu_ram_sel_3_d2_X16 & accu_ram_sel_3_d2_R16 ) | ( accu_ram_sel_3_d2_X17 & accu_ram_sel_3_d2_R17 );
  assign accu_ctrl_ram_sel_4_R = ( accu_ctrl_ram_sel_4_X0 & accu_ctrl_ram_sel_4_R0 ) | ( accu_ctrl_ram_sel_4_X1 & accu_ctrl_ram_sel_4_R1 );
  assign fangyuan5_R = ( fangyuan5_X0 & fangyuan5_R0 );
  assign accu_ram_sel_4_d2_R = ( accu_ram_sel_4_d2_X0 & accu_ram_sel_4_d2_R0 ) | ( accu_ram_sel_4_d2_X1 & accu_ram_sel_4_d2_R1 ) | ( accu_ram_sel_4_d2_X2 & accu_ram_sel_4_d2_R2 ) | ( accu_ram_sel_4_d2_X3 & accu_ram_sel_4_d2_R3 ) | ( accu_ram_sel_4_d2_X4 & accu_ram_sel_4_d2_R4 ) | ( accu_ram_sel_4_d2_X5 & accu_ram_sel_4_d2_R5 ) | ( accu_ram_sel_4_d2_X6 & accu_ram_sel_4_d2_R6 ) | ( accu_ram_sel_4_d2_X7 & accu_ram_sel_4_d2_R7 ) | ( accu_ram_sel_4_d2_X8 & accu_ram_sel_4_d2_R8 ) | ( accu_ram_sel_4_d2_X9 & accu_ram_sel_4_d2_R9 ) | ( accu_ram_sel_4_d2_X10 & accu_ram_sel_4_d2_R10 ) | ( accu_ram_sel_4_d2_X11 & accu_ram_sel_4_d2_R11 ) | ( accu_ram_sel_4_d2_X12 & accu_ram_sel_4_d2_R12 ) | ( accu_ram_sel_4_d2_X13 & accu_ram_sel_4_d2_R13 ) | ( accu_ram_sel_4_d2_X14 & accu_ram_sel_4_d2_R14 ) | ( accu_ram_sel_4_d2_X15 & accu_ram_sel_4_d2_R15 ) | ( accu_ram_sel_4_d2_X16 & accu_ram_sel_4_d2_R16 ) | ( accu_ram_sel_4_d2_X17 & accu_ram_sel_4_d2_R17 );
  assign accu_ctrl_ram_sel_5_R = ( accu_ctrl_ram_sel_5_X0 & accu_ctrl_ram_sel_5_R0 ) | ( accu_ctrl_ram_sel_5_X1 & accu_ctrl_ram_sel_5_R1 );
  assign fangyuan4_R = ( fangyuan4_X0 & fangyuan4_R0 );
  assign accu_ram_sel_5_d2_R = ( accu_ram_sel_5_d2_X0 & accu_ram_sel_5_d2_R0 ) | ( accu_ram_sel_5_d2_X1 & accu_ram_sel_5_d2_R1 ) | ( accu_ram_sel_5_d2_X2 & accu_ram_sel_5_d2_R2 ) | ( accu_ram_sel_5_d2_X3 & accu_ram_sel_5_d2_R3 ) | ( accu_ram_sel_5_d2_X4 & accu_ram_sel_5_d2_R4 ) | ( accu_ram_sel_5_d2_X5 & accu_ram_sel_5_d2_R5 ) | ( accu_ram_sel_5_d2_X6 & accu_ram_sel_5_d2_R6 ) | ( accu_ram_sel_5_d2_X7 & accu_ram_sel_5_d2_R7 ) | ( accu_ram_sel_5_d2_X8 & accu_ram_sel_5_d2_R8 ) | ( accu_ram_sel_5_d2_X9 & accu_ram_sel_5_d2_R9 ) | ( accu_ram_sel_5_d2_X10 & accu_ram_sel_5_d2_R10 ) | ( accu_ram_sel_5_d2_X11 & accu_ram_sel_5_d2_R11 ) | ( accu_ram_sel_5_d2_X12 & accu_ram_sel_5_d2_R12 ) | ( accu_ram_sel_5_d2_X13 & accu_ram_sel_5_d2_R13 ) | ( accu_ram_sel_5_d2_X14 & accu_ram_sel_5_d2_R14 ) | ( accu_ram_sel_5_d2_X15 & accu_ram_sel_5_d2_R15 ) | ( accu_ram_sel_5_d2_X16 & accu_ram_sel_5_d2_R16 ) | ( accu_ram_sel_5_d2_X17 & accu_ram_sel_5_d2_R17 );
  assign accu_ctrl_ram_sel_6_R = ( accu_ctrl_ram_sel_6_X0 & accu_ctrl_ram_sel_6_R0 ) | ( accu_ctrl_ram_sel_6_X1 & accu_ctrl_ram_sel_6_R1 );
  assign fangyuan3_R = ( fangyuan3_X0 & fangyuan3_R0 );
  assign accu_ram_sel_6_d2_R = ( accu_ram_sel_6_d2_X0 & accu_ram_sel_6_d2_R0 ) | ( accu_ram_sel_6_d2_X1 & accu_ram_sel_6_d2_R1 ) | ( accu_ram_sel_6_d2_X2 & accu_ram_sel_6_d2_R2 ) | ( accu_ram_sel_6_d2_X3 & accu_ram_sel_6_d2_R3 ) | ( accu_ram_sel_6_d2_X4 & accu_ram_sel_6_d2_R4 ) | ( accu_ram_sel_6_d2_X5 & accu_ram_sel_6_d2_R5 ) | ( accu_ram_sel_6_d2_X6 & accu_ram_sel_6_d2_R6 ) | ( accu_ram_sel_6_d2_X7 & accu_ram_sel_6_d2_R7 ) | ( accu_ram_sel_6_d2_X8 & accu_ram_sel_6_d2_R8 ) | ( accu_ram_sel_6_d2_X9 & accu_ram_sel_6_d2_R9 ) | ( accu_ram_sel_6_d2_X10 & accu_ram_sel_6_d2_R10 ) | ( accu_ram_sel_6_d2_X11 & accu_ram_sel_6_d2_R11 ) | ( accu_ram_sel_6_d2_X12 & accu_ram_sel_6_d2_R12 ) | ( accu_ram_sel_6_d2_X13 & accu_ram_sel_6_d2_R13 ) | ( accu_ram_sel_6_d2_X14 & accu_ram_sel_6_d2_R14 ) | ( accu_ram_sel_6_d2_X15 & accu_ram_sel_6_d2_R15 ) | ( accu_ram_sel_6_d2_X16 & accu_ram_sel_6_d2_R16 ) | ( accu_ram_sel_6_d2_X17 & accu_ram_sel_6_d2_R17 );
  assign accu_ctrl_ram_sel_7_R = ( accu_ctrl_ram_sel_7_X0 & accu_ctrl_ram_sel_7_R0 ) | ( accu_ctrl_ram_sel_7_X1 & accu_ctrl_ram_sel_7_R1 );
  assign fangyuan2_R = ( fangyuan2_X0 & fangyuan2_R0 );
  assign accu_ram_sel_7_d2_R = ( accu_ram_sel_7_d2_X0 & accu_ram_sel_7_d2_R0 ) | ( accu_ram_sel_7_d2_X1 & accu_ram_sel_7_d2_R1 ) | ( accu_ram_sel_7_d2_X2 & accu_ram_sel_7_d2_R2 ) | ( accu_ram_sel_7_d2_X3 & accu_ram_sel_7_d2_R3 ) | ( accu_ram_sel_7_d2_X4 & accu_ram_sel_7_d2_R4 ) | ( accu_ram_sel_7_d2_X5 & accu_ram_sel_7_d2_R5 ) | ( accu_ram_sel_7_d2_X6 & accu_ram_sel_7_d2_R6 ) | ( accu_ram_sel_7_d2_X7 & accu_ram_sel_7_d2_R7 ) | ( accu_ram_sel_7_d2_X8 & accu_ram_sel_7_d2_R8 ) | ( accu_ram_sel_7_d2_X9 & accu_ram_sel_7_d2_R9 ) | ( accu_ram_sel_7_d2_X10 & accu_ram_sel_7_d2_R10 ) | ( accu_ram_sel_7_d2_X11 & accu_ram_sel_7_d2_R11 ) | ( accu_ram_sel_7_d2_X12 & accu_ram_sel_7_d2_R12 ) | ( accu_ram_sel_7_d2_X13 & accu_ram_sel_7_d2_R13 ) | ( accu_ram_sel_7_d2_X14 & accu_ram_sel_7_d2_R14 ) | ( accu_ram_sel_7_d2_X15 & accu_ram_sel_7_d2_R15 ) | ( accu_ram_sel_7_d2_X16 & accu_ram_sel_7_d2_R16 ) | ( accu_ram_sel_7_d2_X17 & accu_ram_sel_7_d2_R17 );
  assign accu_ctrl_dlv_elem_mask_R = ( accu_ctrl_dlv_elem_mask_X0 & accu_ctrl_dlv_elem_mask_R0 ) | ( accu_ctrl_dlv_elem_mask_X1 & accu_ctrl_dlv_elem_mask_R1 );
  assign fangyuan1_R = ( fangyuan1_X0 & fangyuan1_R0 );
  assign accu_channel_end_d2_R = ( accu_channel_end_d2_X0 & accu_channel_end_d2_R0 ) | ( accu_channel_end_d2_X1 & accu_channel_end_d2_R1 ) | ( accu_channel_end_d2_X2 & accu_channel_end_d2_R2 ) | ( accu_channel_end_d2_X3 & accu_channel_end_d2_R3 ) | ( accu_channel_end_d2_X4 & accu_channel_end_d2_R4 ) | ( accu_channel_end_d2_X5 & accu_channel_end_d2_R5 ) | ( accu_channel_end_d2_X6 & accu_channel_end_d2_R6 ) | ( accu_channel_end_d2_X7 & accu_channel_end_d2_R7 ) | ( accu_channel_end_d2_X8 & accu_channel_end_d2_R8 ) | ( accu_channel_end_d2_X9 & accu_channel_end_d2_R9 ) | ( accu_channel_end_d2_X10 & accu_channel_end_d2_R10 ) | ( accu_channel_end_d2_X11 & accu_channel_end_d2_R11 ) | ( accu_channel_end_d2_X12 & accu_channel_end_d2_R12 ) | ( accu_channel_end_d2_X13 & accu_channel_end_d2_R13 ) | ( accu_channel_end_d2_X14 & accu_channel_end_d2_R14 ) | ( accu_channel_end_d2_X15 & accu_channel_end_d2_R15 ) | ( accu_channel_end_d2_X16 & accu_channel_end_d2_R16 ) | ( accu_channel_end_d2_X17 & accu_channel_end_d2_R17 ) | ( accu_channel_end_d2_X18 & accu_channel_end_d2_R18 ) | ( accu_channel_end_d2_X19 & accu_channel_end_d2_R19 ) | ( accu_channel_end_d2_X20 & accu_channel_end_d2_R20 ) | ( accu_channel_end_d2_X21 & accu_channel_end_d2_R21 ) | ( accu_channel_end_d2_X22 & accu_channel_end_d2_R22 ) | ( accu_channel_end_d2_X23 & accu_channel_end_d2_R23 ) | ( accu_channel_end_d2_X24 & accu_channel_end_d2_R24 ) | ( accu_channel_end_d2_X25 & accu_channel_end_d2_R25 ) | ( accu_channel_end_d2_X26 & accu_channel_end_d2_R26 ) | ( accu_channel_end_d2_X27 & accu_channel_end_d2_R27 ) | ( accu_channel_end_d2_X28 & accu_channel_end_d2_R28 ) | ( accu_channel_end_d2_X29 & accu_channel_end_d2_R29 ) | ( accu_channel_end_d2_X30 & accu_channel_end_d2_R30 ) | ( accu_channel_end_d2_X31 & accu_channel_end_d2_R31 ) | ( accu_channel_end_d2_X32 & accu_channel_end_d2_R32 ) | ( accu_channel_end_d2_X33 & accu_channel_end_d2_R33 ) | ( accu_channel_end_d2_X34 & accu_channel_end_d2_R34 ) | ( accu_channel_end_d2_X35 & accu_channel_end_d2_R35 ) | ( accu_channel_end_d2_X36 & accu_channel_end_d2_R36 ) | ( accu_channel_end_d2_X37 & accu_channel_end_d2_R37 ) | ( accu_channel_end_d2_X38 & accu_channel_end_d2_R38 ) | ( accu_channel_end_d2_X39 & accu_channel_end_d2_R39 ) | ( accu_channel_end_d2_X40 & accu_channel_end_d2_R40 ) | ( accu_channel_end_d2_X41 & accu_channel_end_d2_R41 ) | ( accu_channel_end_d2_X42 & accu_channel_end_d2_R42 ) | ( accu_channel_end_d2_X43 & accu_channel_end_d2_R43 ) | ( accu_channel_end_d2_X44 & accu_channel_end_d2_R44 ) | ( accu_channel_end_d2_X45 & accu_channel_end_d2_R45 ) | ( accu_channel_end_d2_X46 & accu_channel_end_d2_R46 ) | ( accu_channel_end_d2_X47 & accu_channel_end_d2_R47 ) | ( accu_channel_end_d2_X48 & accu_channel_end_d2_R48 ) | ( accu_channel_end_d2_X49 & accu_channel_end_d2_R49 ) | ( accu_channel_end_d2_X50 & accu_channel_end_d2_R50 ) | ( accu_channel_end_d2_X51 & accu_channel_end_d2_R51 ) | ( accu_channel_end_d2_X52 & accu_channel_end_d2_R52 ) | ( accu_channel_end_d2_X53 & accu_channel_end_d2_R53 ) | ( accu_channel_end_d2_X54 & accu_channel_end_d2_R54 ) | ( accu_channel_end_d2_X55 & accu_channel_end_d2_R55 ) | ( accu_channel_end_d2_X56 & accu_channel_end_d2_R56 ) | ( accu_channel_end_d2_X57 & accu_channel_end_d2_R57 ) | ( accu_channel_end_d2_X58 & accu_channel_end_d2_R58 ) | ( accu_channel_end_d2_X59 & accu_channel_end_d2_R59 ) | ( accu_channel_end_d2_X60 & accu_channel_end_d2_R60 ) | ( accu_channel_end_d2_X61 & accu_channel_end_d2_R61 ) | ( accu_channel_end_d2_X62 & accu_channel_end_d2_R62 ) | ( accu_channel_end_d2_X63 & accu_channel_end_d2_R63 ) | ( accu_channel_end_d2_X64 & accu_channel_end_d2_R64 ) | ( accu_channel_end_d2_X65 & accu_channel_end_d2_R65 ) | ( accu_channel_end_d2_X66 & accu_channel_end_d2_R66 ) | ( accu_channel_end_d2_X67 & accu_channel_end_d2_R67 ) | ( accu_channel_end_d2_X68 & accu_channel_end_d2_R68 ) | ( accu_channel_end_d2_X69 & accu_channel_end_d2_R69 ) | ( accu_channel_end_d2_X70 & accu_channel_end_d2_R70 ) | ( accu_channel_end_d2_X71 & accu_channel_end_d2_R71 ) | ( accu_channel_end_d2_X72 & accu_channel_end_d2_R72 ) | ( accu_channel_end_d2_X73 & accu_channel_end_d2_R73 ) | ( accu_channel_end_d2_X74 & accu_channel_end_d2_R74 ) | ( accu_channel_end_d2_X75 & accu_channel_end_d2_R75 ) | ( accu_channel_end_d2_X76 & accu_channel_end_d2_R76 ) | ( accu_channel_end_d2_X77 & accu_channel_end_d2_R77 ) | ( accu_channel_end_d2_X78 & accu_channel_end_d2_R78 ) | ( accu_channel_end_d2_X79 & accu_channel_end_d2_R79 ) | ( accu_channel_end_d2_X80 & accu_channel_end_d2_R80 ) | ( accu_channel_end_d2_X81 & accu_channel_end_d2_R81 ) | ( accu_channel_end_d2_X82 & accu_channel_end_d2_R82 ) | ( accu_channel_end_d2_X83 & accu_channel_end_d2_R83 ) | ( accu_channel_end_d2_X84 & accu_channel_end_d2_R84 ) | ( accu_channel_end_d2_X85 & accu_channel_end_d2_R85 ) | ( accu_channel_end_d2_X86 & accu_channel_end_d2_R86 ) | ( accu_channel_end_d2_X87 & accu_channel_end_d2_R87 ) | ( accu_channel_end_d2_X88 & accu_channel_end_d2_R88 ) | ( accu_channel_end_d2_X89 & accu_channel_end_d2_R89 ) | ( accu_channel_end_d2_X90 & accu_channel_end_d2_R90 ) | ( accu_channel_end_d2_X91 & accu_channel_end_d2_R91 ) | ( accu_channel_end_d2_X92 & accu_channel_end_d2_R92 ) | ( accu_channel_end_d2_X93 & accu_channel_end_d2_R93 ) | ( accu_channel_end_d2_X94 & accu_channel_end_d2_R94 ) | ( accu_channel_end_d2_X95 & accu_channel_end_d2_R95 ) | ( accu_channel_end_d2_X96 & accu_channel_end_d2_R96 ) | ( accu_channel_end_d2_X97 & accu_channel_end_d2_R97 ) | ( accu_channel_end_d2_X98 & accu_channel_end_d2_R98 ) | ( accu_channel_end_d2_X99 & accu_channel_end_d2_R99 ) | ( accu_channel_end_d2_X100 & accu_channel_end_d2_R100 ) | ( accu_channel_end_d2_X101 & accu_channel_end_d2_R101 ) | ( accu_channel_end_d2_X102 & accu_channel_end_d2_R102 ) | ( accu_channel_end_d2_X103 & accu_channel_end_d2_R103 ) | ( accu_channel_end_d2_X104 & accu_channel_end_d2_R104 ) | ( accu_channel_end_d2_X105 & accu_channel_end_d2_R105 ) | ( accu_channel_end_d2_X106 & accu_channel_end_d2_R106 ) | ( accu_channel_end_d2_X107 & accu_channel_end_d2_R107 ) | ( accu_channel_end_d2_X108 & accu_channel_end_d2_R108 ) | ( accu_channel_end_d2_X109 & accu_channel_end_d2_R109 ) | ( accu_channel_end_d2_X110 & accu_channel_end_d2_R110 ) | ( accu_channel_end_d2_X111 & accu_channel_end_d2_R111 ) | ( accu_channel_end_d2_X112 & accu_channel_end_d2_R112 ) | ( accu_channel_end_d2_X113 & accu_channel_end_d2_R113 ) | ( accu_channel_end_d2_X114 & accu_channel_end_d2_R114 ) | ( accu_channel_end_d2_X115 & accu_channel_end_d2_R115 ) | ( accu_channel_end_d2_X116 & accu_channel_end_d2_R116 ) | ( accu_channel_end_d2_X117 & accu_channel_end_d2_R117 ) | ( accu_channel_end_d2_X118 & accu_channel_end_d2_R118 ) | ( accu_channel_end_d2_X119 & accu_channel_end_d2_R119 ) | ( accu_channel_end_d2_X120 & accu_channel_end_d2_R120 ) | ( accu_channel_end_d2_X121 & accu_channel_end_d2_R121 ) | ( accu_channel_end_d2_X122 & accu_channel_end_d2_R122 ) | ( accu_channel_end_d2_X123 & accu_channel_end_d2_R123 ) | ( accu_channel_end_d2_X124 & accu_channel_end_d2_R124 ) | ( accu_channel_end_d2_X125 & accu_channel_end_d2_R125 ) | ( accu_channel_end_d2_X126 & accu_channel_end_d2_R126 ) | ( accu_channel_end_d2_X127 & accu_channel_end_d2_R127 ) | ( accu_channel_end_d2_X128 & accu_channel_end_d2_R128 ) | ( accu_channel_end_d2_X129 & accu_channel_end_d2_R129 ) | ( accu_channel_end_d2_X130 & accu_channel_end_d2_R130 ) | ( accu_channel_end_d2_X131 & accu_channel_end_d2_R131 ) | ( accu_channel_end_d2_X132 & accu_channel_end_d2_R132 ) | ( accu_channel_end_d2_X133 & accu_channel_end_d2_R133 ) | ( accu_channel_end_d2_X134 & accu_channel_end_d2_R134 ) | ( accu_channel_end_d2_X135 & accu_channel_end_d2_R135 ) | ( accu_channel_end_d2_X136 & accu_channel_end_d2_R136 ) | ( accu_channel_end_d2_X137 & accu_channel_end_d2_R137 ) | ( accu_channel_end_d2_X138 & accu_channel_end_d2_R138 ) | ( accu_channel_end_d2_X139 & accu_channel_end_d2_R139 ) | ( accu_channel_end_d2_X140 & accu_channel_end_d2_R140 ) | ( accu_channel_end_d2_X141 & accu_channel_end_d2_R141 ) | ( accu_channel_end_d2_X142 & accu_channel_end_d2_R142 ) | ( accu_channel_end_d2_X143 & accu_channel_end_d2_R143 ) | ( accu_channel_end_d2_X144 & accu_channel_end_d2_R144 ) | ( accu_channel_end_d2_X145 & accu_channel_end_d2_R145 ) | ( accu_channel_end_d2_X146 & accu_channel_end_d2_R146 ) | ( accu_channel_end_d2_X147 & accu_channel_end_d2_R147 ) | ( accu_channel_end_d2_X148 & accu_channel_end_d2_R148 ) | ( accu_channel_end_d2_X149 & accu_channel_end_d2_R149 ) | ( accu_channel_end_d2_X150 & accu_channel_end_d2_R150 ) | ( accu_channel_end_d2_X151 & accu_channel_end_d2_R151 ) | ( accu_channel_end_d2_X152 & accu_channel_end_d2_R152 ) | ( accu_channel_end_d2_X153 & accu_channel_end_d2_R153 ) | ( accu_channel_end_d2_X154 & accu_channel_end_d2_R154 ) | ( accu_channel_end_d2_X155 & accu_channel_end_d2_R155 ) | ( accu_channel_end_d2_X156 & accu_channel_end_d2_R156 ) | ( accu_channel_end_d2_X157 & accu_channel_end_d2_R157 ) | ( accu_channel_end_d2_X158 & accu_channel_end_d2_R158 ) | ( accu_channel_end_d2_X159 & accu_channel_end_d2_R159 ) | ( accu_channel_end_d2_X160 & accu_channel_end_d2_R160 ) | ( accu_channel_end_d2_X161 & accu_channel_end_d2_R161 ) | ( accu_channel_end_d2_X162 & accu_channel_end_d2_R162 ) | ( accu_channel_end_d2_X163 & accu_channel_end_d2_R163 ) | ( accu_channel_end_d2_X164 & accu_channel_end_d2_R164 ) | ( accu_channel_end_d2_X165 & accu_channel_end_d2_R165 ) | ( accu_channel_end_d2_X166 & accu_channel_end_d2_R166 ) | ( accu_channel_end_d2_X167 & accu_channel_end_d2_R167 ) | ( accu_channel_end_d2_X168 & accu_channel_end_d2_R168 ) | ( accu_channel_end_d2_X169 & accu_channel_end_d2_R169 ) | ( accu_channel_end_d2_X170 & accu_channel_end_d2_R170 ) | ( accu_channel_end_d2_X171 & accu_channel_end_d2_R171 ) | ( accu_channel_end_d2_X172 & accu_channel_end_d2_R172 ) | ( accu_channel_end_d2_X173 & accu_channel_end_d2_R173 ) | ( accu_channel_end_d2_X174 & accu_channel_end_d2_R174 ) | ( accu_channel_end_d2_X175 & accu_channel_end_d2_R175 ) | ( accu_channel_end_d2_X176 & accu_channel_end_d2_R176 ) | ( accu_channel_end_d2_X177 & accu_channel_end_d2_R177 ) | ( accu_channel_end_d2_X178 & accu_channel_end_d2_R178 ) | ( accu_channel_end_d2_X179 & accu_channel_end_d2_R179 ) | ( accu_channel_end_d2_X180 & accu_channel_end_d2_R180 ) | ( accu_channel_end_d2_X181 & accu_channel_end_d2_R181 ) | ( accu_channel_end_d2_X182 & accu_channel_end_d2_R182 ) | ( accu_channel_end_d2_X183 & accu_channel_end_d2_R183 ) | ( accu_channel_end_d2_X184 & accu_channel_end_d2_R184 ) | ( accu_channel_end_d2_X185 & accu_channel_end_d2_R185 ) | ( accu_channel_end_d2_X186 & accu_channel_end_d2_R186 ) | ( accu_channel_end_d2_X187 & accu_channel_end_d2_R187 ) | ( accu_channel_end_d2_X188 & accu_channel_end_d2_R188 ) | ( accu_channel_end_d2_X189 & accu_channel_end_d2_R189 ) | ( accu_channel_end_d2_X190 & accu_channel_end_d2_R190 ) | ( accu_channel_end_d2_X191 & accu_channel_end_d2_R191 ) | ( accu_channel_end_d2_X192 & accu_channel_end_d2_R192 ) | ( accu_channel_end_d2_X193 & accu_channel_end_d2_R193 ) | ( accu_channel_end_d2_X194 & accu_channel_end_d2_R194 );
  assign \accu_valid_reg[0]_R = ( \accu_valid_reg[0]_X0 & \accu_valid_reg[0]_R0 );
  assign mac_a2accu_pvld_R = ( mac_a2accu_pvld_X0 & mac_a2accu_pvld_R0 ) | ( mac_a2accu_pvld_X1 & mac_a2accu_pvld_R1 );
  assign _026__R = ( _026__X0 & _026__R0 );
  assign slcg_cell_en_w_R = ( slcg_cell_en_w_X0 & slcg_cell_en_w_R0 );
  assign slcg_cell_en_d1_R = ( slcg_cell_en_d1_X0 & slcg_cell_en_d1_R0 );
  assign slcg_cell_en_d2_R = ( slcg_cell_en_d2_X0 & slcg_cell_en_d2_R0 );
  assign wait_for_op_en_w_R = ( wait_for_op_en_w_X0 & wait_for_op_en_w_R0 );
  assign _005__R = ( _005__X0 & _005__R0 );
  assign _004__R = ( _004__X0 & _004__R0 );
  assign _051__R = ( _051__X0 & _051__R0 );
  assign _023__R = ( _023__X0 & _023__R0 );
  assign _027__R = ( _027__X0 & _027__R0 );
  assign _030__R = ( _030__X0 & _030__R0 );
  assign _033__R = ( _033__X0 & _033__R0 );
  assign _036__R = ( _036__X0 & _036__R0 );
  assign _039__R = ( _039__X0 & _039__R0 );
  assign accu_ram_sel_7_d0_R = ( accu_ram_sel_7_d0_X0 & accu_ram_sel_7_d0_R0 ) | ( accu_ram_sel_7_d0_X1 & accu_ram_sel_7_d0_R1 );
  assign _042__R = ( _042__X0 & _042__R0 );
  assign _045__R = ( _045__X0 & _045__R0 );
  assign _048__R = ( _048__X0 & _048__R0 );
  assign _062__R = ( _062__X0 & _062__R0 );
  assign _061__R = ( _061__X0 & _061__R0 );
  assign _057__R = ( _057__X0 & _057__R0 );
  assign _059__R = ( _059__X0 & _059__R0 );
  assign _060__R = ( _060__X0 & _060__R0 );
  assign _058__R = ( _058__X0 & _058__R0 );
  assign _056__R = ( _056__X0 & _056__R0 );
  assign accu_ram_valid_R = ( accu_ram_valid_X0 & accu_ram_valid_R0 ) | ( accu_ram_valid_X1 & accu_ram_valid_R1 );
  assign _000__R = ( _000__X0 & _000__R0 );
  assign _024__R = ( _024__X0 & _024__R0 );
  assign _052__R = ( _052__X0 & _052__R0 );
  assign _054__R = ( _054__X0 & _054__R0 );
  assign _002__R = ( _002__X0 & _002__R0 );
  assign _021__R = ( _021__X0 & _021__R0 );
  assign _028__R = ( _028__X0 & _028__R0 );
  assign _031__R = ( _031__X0 & _031__R0 );
  assign _034__R = ( _034__X0 & _034__R0 );
  assign _037__R = ( _037__X0 & _037__R0 );
  assign _040__R = ( _040__X0 & _040__R0 );
  assign _043__R = ( _043__X0 & _043__R0 );
  assign _046__R = ( _046__X0 & _046__R0 );
  assign _049__R = ( _049__X0 & _049__R0 );
  assign accu_ctrl_valid_d1_R = ( accu_ctrl_valid_d1_X0 & accu_ctrl_valid_d1_R0 ) | ( accu_ctrl_valid_d1_X1 & accu_ctrl_valid_d1_R1 ) | ( accu_ctrl_valid_d1_X2 & accu_ctrl_valid_d1_R2 ) | ( accu_ctrl_valid_d1_X3 & accu_ctrl_valid_d1_R3 ) | ( accu_ctrl_valid_d1_X4 & accu_ctrl_valid_d1_R4 ) | ( accu_ctrl_valid_d1_X5 & accu_ctrl_valid_d1_R5 ) | ( accu_ctrl_valid_d1_X6 & accu_ctrl_valid_d1_R6 ) | ( accu_ctrl_valid_d1_X7 & accu_ctrl_valid_d1_R7 ) | ( accu_ctrl_valid_d1_X8 & accu_ctrl_valid_d1_R8 ) | ( accu_ctrl_valid_d1_X9 & accu_ctrl_valid_d1_R9 ) | ( accu_ctrl_valid_d1_X10 & accu_ctrl_valid_d1_R10 ) | ( accu_ctrl_valid_d1_X11 & accu_ctrl_valid_d1_R11 ) | ( accu_ctrl_valid_d1_X12 & accu_ctrl_valid_d1_R12 ) | ( accu_ctrl_valid_d1_X13 & accu_ctrl_valid_d1_R13 ) | ( accu_ctrl_valid_d1_X14 & accu_ctrl_valid_d1_R14 );
  assign accu_ram_valid_d1_R = ( accu_ram_valid_d1_X0 & accu_ram_valid_d1_R0 );
  assign _001__R = ( _001__X0 & _001__R0 );
  assign _025__R = ( _025__X0 & _025__R0 );
  assign _053__R = ( _053__X0 & _053__R0 );
  assign _055__R = ( _055__X0 & _055__R0 );
  assign _003__R = ( _003__X0 & _003__R0 );
  assign _022__R = ( _022__X0 & _022__R0 );
  assign _029__R = ( _029__X0 & _029__R0 );
  assign _032__R = ( _032__X0 & _032__R0 );
  assign _035__R = ( _035__X0 & _035__R0 );
  assign _038__R = ( _038__X0 & _038__R0 );
  assign _041__R = ( _041__X0 & _041__R0 );
  assign _044__R = ( _044__X0 & _044__R0 );
  assign _047__R = ( _047__X0 & _047__R0 );
  assign _050__R = ( _050__X0 & _050__R0 );
  assign accu_ctrl_valid_d2_R = ( accu_ctrl_valid_d2_X0 & accu_ctrl_valid_d2_R0 ) | ( accu_ctrl_valid_d2_X1 & accu_ctrl_valid_d2_R1 ) | ( accu_ctrl_valid_d2_X2 & accu_ctrl_valid_d2_R2 ) | ( accu_ctrl_valid_d2_X3 & accu_ctrl_valid_d2_R3 ) | ( accu_ctrl_valid_d2_X4 & accu_ctrl_valid_d2_R4 ) | ( accu_ctrl_valid_d2_X5 & accu_ctrl_valid_d2_R5 ) | ( accu_ctrl_valid_d2_X6 & accu_ctrl_valid_d2_R6 ) | ( accu_ctrl_valid_d2_X7 & accu_ctrl_valid_d2_R7 ) | ( accu_ctrl_valid_d2_X8 & accu_ctrl_valid_d2_R8 ) | ( accu_ctrl_valid_d2_X9 & accu_ctrl_valid_d2_R9 ) | ( accu_ctrl_valid_d2_X10 & accu_ctrl_valid_d2_R10 ) | ( accu_ctrl_valid_d2_X11 & accu_ctrl_valid_d2_R11 ) | ( accu_ctrl_valid_d2_X12 & accu_ctrl_valid_d2_R12 ) | ( accu_ctrl_valid_d2_X13 & accu_ctrl_valid_d2_R13 ) | ( accu_ctrl_valid_d2_X14 & accu_ctrl_valid_d2_R14 ) | ( accu_ctrl_valid_d2_X15 & accu_ctrl_valid_d2_R15 ) | ( accu_ctrl_valid_d2_X16 & accu_ctrl_valid_d2_R16 );
  assign \accu_ctrl_ram_valid_reg[0]_R = ( \accu_ctrl_ram_valid_reg[0]_X0 & \accu_ctrl_ram_valid_reg[0]_R0 );
  assign accu_ram_valid_d2_R = ( accu_ram_valid_d2_X0 & accu_ram_valid_d2_R0 ) | ( accu_ram_valid_d2_X1 & accu_ram_valid_d2_R1 );
  assign _006__R = ( _006__X0 & _006__R0 );
  assign _010__R = ( _010__X0 & _010__R0 );
  assign _019__R = ( _019__X0 & _019__R0 );
  assign _020__R = ( _020__X0 & _020__R0 );
  assign _007__R = ( _007__X0 & _007__R0 );
  assign _009__R = ( _009__X0 & _009__R0 );
  assign _011__R = ( _011__X0 & _011__R0 );
  assign _012__R = ( _012__X0 & _012__R0 );
  assign _013__R = ( _013__X0 & _013__R0 );
  assign _014__R = ( _014__X0 & _014__R0 );
  assign _015__R = ( _015__X0 & _015__R0 );
  assign _016__R = ( _016__X0 & _016__R0 );
  assign _017__R = ( _017__X0 & _017__R0 );
  assign _018__R = ( _018__X0 & _018__R0 );
  assign _008__R = ( _008__X0 & _008__R0 );
  assign is_x1_R = ( is_x1_X0 & is_x1_R0 ) | ( is_x1_X1 & is_x1_R1 ) | ( is_x1_X2 & is_x1_R2 );
  assign layer_st_R = ( layer_st_X0 & layer_st_R0 ) | ( layer_st_X1 & layer_st_R1 ) | ( layer_st_X2 & layer_st_R2 ) | ( layer_st_X3 & layer_st_R3 ) | ( layer_st_X4 & layer_st_R4 ) | ( layer_st_X5 & layer_st_R5 ) | ( layer_st_X6 & layer_st_R6 ) | ( layer_st_X7 & layer_st_R7 ) | ( layer_st_X8 & layer_st_R8 ) | ( layer_st_X9 & layer_st_R9 ) | ( layer_st_X10 & layer_st_R10 );
  assign accu_channel_st_R = ( accu_channel_st_X0 & accu_channel_st_R0 ) | ( accu_channel_st_X1 & accu_channel_st_R1 ) | ( accu_channel_st_X2 & accu_channel_st_R2 );
  assign reg2dp_proc_precision_R = ( reg2dp_proc_precision_X0 & reg2dp_proc_precision_R0 ) | ( reg2dp_proc_precision_X1 & reg2dp_proc_precision_R1 );
  assign _073__R = ( _073__X0 & _073__R0 );
  assign accu_rd_mask_R = ( accu_rd_mask_X0 & accu_rd_mask_R0 ) | ( accu_rd_mask_X1 & accu_rd_mask_R1 ) | ( accu_rd_mask_X2 & accu_rd_mask_R2 ) | ( accu_rd_mask_X3 & accu_rd_mask_R3 );
  assign _065__R = ( _065__X0 & _065__R0 );
  assign _072__R = ( _072__X0 & _072__R0 );
  assign fangyuan0_R = ( fangyuan0_X0 & fangyuan0_R0 );
  assign is_x2_R = ( is_x2_X0 & is_x2_R0 ) | ( is_x2_X1 & is_x2_R1 ) | ( is_x2_X2 & is_x2_R2 ) | ( is_x2_X3 & is_x2_R3 ) | ( is_x2_X4 & is_x2_R4 ) | ( is_x2_X5 & is_x2_R5 ) | ( is_x2_X6 & is_x2_R6 );
  assign _075__R = ( _075__X0 & _075__R0 ) | ( _075__X1 & _075__R1 ) | ( _075__X2 & _075__R2 );
  assign accu_rd_mask_w_R = ( accu_rd_mask_w_X0 & accu_rd_mask_w_R0 ) | ( accu_rd_mask_w_X1 & accu_rd_mask_w_R1 ) | ( accu_rd_mask_w_X2 & accu_rd_mask_w_R2 );
  assign accu_pd_R = ( accu_pd_X0 & accu_pd_R0 ) | ( accu_pd_X1 & accu_pd_R1 ) | ( accu_pd_X2 & accu_pd_R2 ) | ( accu_pd_X3 & accu_pd_R3 ) | ( accu_pd_X4 & accu_pd_R4 ) | ( accu_pd_X5 & accu_pd_R5 ) | ( accu_pd_X6 & accu_pd_R6 ) | ( accu_pd_X7 & accu_pd_R7 ) | ( accu_pd_X8 & accu_pd_R8 );
  assign accu_valid_R = ( accu_valid_X0 & accu_valid_R0 ) | ( accu_valid_X1 & accu_valid_R1 ) | ( accu_valid_X2 & accu_valid_R2 ) | ( accu_valid_X3 & accu_valid_R3 ) | ( accu_valid_X4 & accu_valid_R4 ) | ( accu_valid_X5 & accu_valid_R5 ) | ( accu_valid_X6 & accu_valid_R6 ) | ( accu_valid_X7 & accu_valid_R7 ) | ( accu_valid_X8 & accu_valid_R8 ) | ( accu_valid_X9 & accu_valid_R9 ) | ( accu_valid_X10 & accu_valid_R10 ) | ( accu_valid_X11 & accu_valid_R11 ) | ( accu_valid_X12 & accu_valid_R12 ) | ( accu_valid_X13 & accu_valid_R13 ) | ( accu_valid_X14 & accu_valid_R14 ) | ( accu_valid_X15 & accu_valid_R15 ) | ( accu_valid_X16 & accu_valid_R16 ) | ( accu_valid_X17 & accu_valid_R17 ) | ( accu_valid_X18 & accu_valid_R18 ) | ( accu_valid_X19 & accu_valid_R19 ) | ( accu_valid_X20 & accu_valid_R20 ) | ( accu_valid_X21 & accu_valid_R21 ) | ( accu_valid_X22 & accu_valid_R22 ) | ( accu_valid_X23 & accu_valid_R23 ) | ( accu_valid_X24 & accu_valid_R24 ) | ( accu_valid_X25 & accu_valid_R25 ) | ( accu_valid_X26 & accu_valid_R26 ) | ( accu_valid_X27 & accu_valid_R27 ) | ( accu_valid_X28 & accu_valid_R28 ) | ( accu_valid_X29 & accu_valid_R29 ) | ( accu_valid_X30 & accu_valid_R30 ) | ( accu_valid_X31 & accu_valid_R31 ) | ( accu_valid_X32 & accu_valid_R32 ) | ( accu_valid_X33 & accu_valid_R33 ) | ( accu_valid_X34 & accu_valid_R34 );
  assign is_fp16_R = ( is_fp16_X0 & is_fp16_R0 ) | ( is_fp16_X1 & is_fp16_R1 ) | ( is_fp16_X2 & is_fp16_R2 ) | ( is_fp16_X3 & is_fp16_R3 ) | ( is_fp16_X4 & is_fp16_R4 ) | ( is_fp16_X5 & is_fp16_R5 ) | ( is_fp16_X6 & is_fp16_R6 ) | ( is_fp16_X7 & is_fp16_R7 ) | ( is_fp16_X8 & is_fp16_R8 ) | ( is_fp16_X9 & is_fp16_R9 ) | ( is_fp16_X10 & is_fp16_R10 ) | ( is_fp16_X11 & is_fp16_R11 ) | ( is_fp16_X12 & is_fp16_R12 ) | ( is_fp16_X13 & is_fp16_R13 ) | ( is_fp16_X14 & is_fp16_R14 ) | ( is_fp16_X15 & is_fp16_R15 ) | ( is_fp16_X16 & is_fp16_R16 ) | ( is_fp16_X17 & is_fp16_R17 ) | ( is_fp16_X18 & is_fp16_R18 ) | ( is_fp16_X19 & is_fp16_R19 ) | ( is_fp16_X20 & is_fp16_R20 ) | ( is_fp16_X21 & is_fp16_R21 ) | ( is_fp16_X22 & is_fp16_R22 ) | ( is_fp16_X23 & is_fp16_R23 ) | ( is_fp16_X24 & is_fp16_R24 ) | ( is_fp16_X25 & is_fp16_R25 ) | ( is_fp16_X26 & is_fp16_R26 ) | ( is_fp16_X27 & is_fp16_R27 ) | ( is_fp16_X28 & is_fp16_R28 ) | ( is_fp16_X29 & is_fp16_R29 );
  assign _063__R = ( _063__X0 & _063__R0 ) | ( _063__X1 & _063__R1 );
  assign _069__R = ( _069__X0 & _069__R0 ) | ( _069__X1 & _069__R1 ) | ( _069__X2 & _069__R2 ) | ( _069__X3 & _069__R3 ) | ( _069__X4 & _069__R4 ) | ( _069__X5 & _069__R5 ) | ( _069__X6 & _069__R6 ) | ( _069__X7 & _069__R7 ) | ( _069__X8 & _069__R8 ) | ( _069__X9 & _069__R9 ) | ( _069__X10 & _069__R10 ) | ( _069__X11 & _069__R11 ) | ( _069__X12 & _069__R12 ) | ( _069__X13 & _069__R13 ) | ( _069__X14 & _069__R14 ) | ( _069__X15 & _069__R15 ) | ( _069__X16 & _069__R16 ) | ( _069__X17 & _069__R17 ) | ( _069__X18 & _069__R18 ) | ( _069__X19 & _069__R19 ) | ( _069__X20 & _069__R20 ) | ( _069__X21 & _069__R21 ) | ( _069__X22 & _069__R22 ) | ( _069__X23 & _069__R23 ) | ( _069__X24 & _069__R24 ) | ( _069__X25 & _069__R25 ) | ( _069__X26 & _069__R26 );
  assign reg2dp_op_en_R = ( reg2dp_op_en_X0 & reg2dp_op_en_R0 ) | ( reg2dp_op_en_X1 & reg2dp_op_en_R1 ) | ( reg2dp_op_en_X2 & reg2dp_op_en_R2 ) | ( reg2dp_op_en_X3 & reg2dp_op_en_R3 ) | ( reg2dp_op_en_X4 & reg2dp_op_en_R4 );
  assign reg2dp_conv_mode_R = ( reg2dp_conv_mode_X0 & reg2dp_conv_mode_R0 ) | ( reg2dp_conv_mode_X1 & reg2dp_conv_mode_R1 ) | ( reg2dp_conv_mode_X2 & reg2dp_conv_mode_R2 ) | ( reg2dp_conv_mode_X3 & reg2dp_conv_mode_R3 ) | ( reg2dp_conv_mode_X4 & reg2dp_conv_mode_R4 ) | ( reg2dp_conv_mode_X5 & reg2dp_conv_mode_R5 ) | ( reg2dp_conv_mode_X6 & reg2dp_conv_mode_R6 ) | ( reg2dp_conv_mode_X7 & reg2dp_conv_mode_R7 ) | ( reg2dp_conv_mode_X8 & reg2dp_conv_mode_R8 ) | ( reg2dp_conv_mode_X9 & reg2dp_conv_mode_R9 ) | ( reg2dp_conv_mode_X10 & reg2dp_conv_mode_R10 ) | ( reg2dp_conv_mode_X11 & reg2dp_conv_mode_R11 ) | ( reg2dp_conv_mode_X12 & reg2dp_conv_mode_R12 ) | ( reg2dp_conv_mode_X13 & reg2dp_conv_mode_R13 ) | ( reg2dp_conv_mode_X14 & reg2dp_conv_mode_R14 ) | ( reg2dp_conv_mode_X15 & reg2dp_conv_mode_R15 ) | ( reg2dp_conv_mode_X16 & reg2dp_conv_mode_R16 ) | ( reg2dp_conv_mode_X17 & reg2dp_conv_mode_R17 ) | ( reg2dp_conv_mode_X18 & reg2dp_conv_mode_R18 ) | ( reg2dp_conv_mode_X19 & reg2dp_conv_mode_R19 ) | ( reg2dp_conv_mode_X20 & reg2dp_conv_mode_R20 ) | ( reg2dp_conv_mode_X21 & reg2dp_conv_mode_R21 ) | ( reg2dp_conv_mode_X22 & reg2dp_conv_mode_R22 ) | ( reg2dp_conv_mode_X23 & reg2dp_conv_mode_R23 ) | ( reg2dp_conv_mode_X24 & reg2dp_conv_mode_R24 ) | ( reg2dp_conv_mode_X25 & reg2dp_conv_mode_R25 ) | ( reg2dp_conv_mode_X26 & reg2dp_conv_mode_R26 ) | ( reg2dp_conv_mode_X27 & reg2dp_conv_mode_R27 ) | ( reg2dp_conv_mode_X28 & reg2dp_conv_mode_R28 ) | ( reg2dp_conv_mode_X29 & reg2dp_conv_mode_R29 ) | ( reg2dp_conv_mode_X30 & reg2dp_conv_mode_R30 ) | ( reg2dp_conv_mode_X31 & reg2dp_conv_mode_R31 ) | ( reg2dp_conv_mode_X32 & reg2dp_conv_mode_R32 ) | ( reg2dp_conv_mode_X33 & reg2dp_conv_mode_R33 ) | ( reg2dp_conv_mode_X34 & reg2dp_conv_mode_R34 ) | ( reg2dp_conv_mode_X35 & reg2dp_conv_mode_R35 ) | ( reg2dp_conv_mode_X36 & reg2dp_conv_mode_R36 ) | ( reg2dp_conv_mode_X37 & reg2dp_conv_mode_R37 ) | ( reg2dp_conv_mode_X38 & reg2dp_conv_mode_R38 ) | ( reg2dp_conv_mode_X39 & reg2dp_conv_mode_R39 ) | ( reg2dp_conv_mode_X40 & reg2dp_conv_mode_R40 ) | ( reg2dp_conv_mode_X41 & reg2dp_conv_mode_R41 ) | ( reg2dp_conv_mode_X42 & reg2dp_conv_mode_R42 ) | ( reg2dp_conv_mode_X43 & reg2dp_conv_mode_R43 ) | ( reg2dp_conv_mode_X44 & reg2dp_conv_mode_R44 ) | ( reg2dp_conv_mode_X45 & reg2dp_conv_mode_R45 ) | ( reg2dp_conv_mode_X46 & reg2dp_conv_mode_R46 ) | ( reg2dp_conv_mode_X47 & reg2dp_conv_mode_R47 ) | ( reg2dp_conv_mode_X48 & reg2dp_conv_mode_R48 ) | ( reg2dp_conv_mode_X49 & reg2dp_conv_mode_R49 ) | ( reg2dp_conv_mode_X50 & reg2dp_conv_mode_R50 ) | ( reg2dp_conv_mode_X51 & reg2dp_conv_mode_R51 ) | ( reg2dp_conv_mode_X52 & reg2dp_conv_mode_R52 ) | ( reg2dp_conv_mode_X53 & reg2dp_conv_mode_R53 ) | ( reg2dp_conv_mode_X54 & reg2dp_conv_mode_R54 ) | ( reg2dp_conv_mode_X55 & reg2dp_conv_mode_R55 ) | ( reg2dp_conv_mode_X56 & reg2dp_conv_mode_R56 ) | ( reg2dp_conv_mode_X57 & reg2dp_conv_mode_R57 ) | ( reg2dp_conv_mode_X58 & reg2dp_conv_mode_R58 ) | ( reg2dp_conv_mode_X59 & reg2dp_conv_mode_R59 ) | ( reg2dp_conv_mode_X60 & reg2dp_conv_mode_R60 ) | ( reg2dp_conv_mode_X61 & reg2dp_conv_mode_R61 ) | ( reg2dp_conv_mode_X62 & reg2dp_conv_mode_R62 ) | ( reg2dp_conv_mode_X63 & reg2dp_conv_mode_R63 ) | ( reg2dp_conv_mode_X64 & reg2dp_conv_mode_R64 ) | ( reg2dp_conv_mode_X65 & reg2dp_conv_mode_R65 ) | ( reg2dp_conv_mode_X66 & reg2dp_conv_mode_R66 ) | ( reg2dp_conv_mode_X67 & reg2dp_conv_mode_R67 ) | ( reg2dp_conv_mode_X68 & reg2dp_conv_mode_R68 ) | ( reg2dp_conv_mode_X69 & reg2dp_conv_mode_R69 ) | ( reg2dp_conv_mode_X70 & reg2dp_conv_mode_R70 ) | ( reg2dp_conv_mode_X71 & reg2dp_conv_mode_R71 ) | ( reg2dp_conv_mode_X72 & reg2dp_conv_mode_R72 ) | ( reg2dp_conv_mode_X73 & reg2dp_conv_mode_R73 ) | ( reg2dp_conv_mode_X74 & reg2dp_conv_mode_R74 ) | ( reg2dp_conv_mode_X75 & reg2dp_conv_mode_R75 ) | ( reg2dp_conv_mode_X76 & reg2dp_conv_mode_R76 ) | ( reg2dp_conv_mode_X77 & reg2dp_conv_mode_R77 ) | ( reg2dp_conv_mode_X78 & reg2dp_conv_mode_R78 ) | ( reg2dp_conv_mode_X79 & reg2dp_conv_mode_R79 ) | ( reg2dp_conv_mode_X80 & reg2dp_conv_mode_R80 ) | ( reg2dp_conv_mode_X81 & reg2dp_conv_mode_R81 ) | ( reg2dp_conv_mode_X82 & reg2dp_conv_mode_R82 ) | ( reg2dp_conv_mode_X83 & reg2dp_conv_mode_R83 ) | ( reg2dp_conv_mode_X84 & reg2dp_conv_mode_R84 ) | ( reg2dp_conv_mode_X85 & reg2dp_conv_mode_R85 ) | ( reg2dp_conv_mode_X86 & reg2dp_conv_mode_R86 ) | ( reg2dp_conv_mode_X87 & reg2dp_conv_mode_R87 ) | ( reg2dp_conv_mode_X88 & reg2dp_conv_mode_R88 ) | ( reg2dp_conv_mode_X89 & reg2dp_conv_mode_R89 ) | ( reg2dp_conv_mode_X90 & reg2dp_conv_mode_R90 ) | ( reg2dp_conv_mode_X91 & reg2dp_conv_mode_R91 ) | ( reg2dp_conv_mode_X92 & reg2dp_conv_mode_R92 ) | ( reg2dp_conv_mode_X93 & reg2dp_conv_mode_R93 ) | ( reg2dp_conv_mode_X94 & reg2dp_conv_mode_R94 ) | ( reg2dp_conv_mode_X95 & reg2dp_conv_mode_R95 ) | ( reg2dp_conv_mode_X96 & reg2dp_conv_mode_R96 ) | ( reg2dp_conv_mode_X97 & reg2dp_conv_mode_R97 ) | ( reg2dp_conv_mode_X98 & reg2dp_conv_mode_R98 ) | ( reg2dp_conv_mode_X99 & reg2dp_conv_mode_R99 ) | ( reg2dp_conv_mode_X100 & reg2dp_conv_mode_R100 ) | ( reg2dp_conv_mode_X101 & reg2dp_conv_mode_R101 );
  assign is_int8_R = ( is_int8_X0 & is_int8_R0 ) | ( is_int8_X1 & is_int8_R1 ) | ( is_int8_X2 & is_int8_R2 ) | ( is_int8_X3 & is_int8_R3 ) | ( is_int8_X4 & is_int8_R4 ) | ( is_int8_X5 & is_int8_R5 ) | ( is_int8_X6 & is_int8_R6 ) | ( is_int8_X7 & is_int8_R7 ) | ( is_int8_X8 & is_int8_R8 ) | ( is_int8_X9 & is_int8_R9 ) | ( is_int8_X10 & is_int8_R10 ) | ( is_int8_X11 & is_int8_R11 ) | ( is_int8_X12 & is_int8_R12 ) | ( is_int8_X13 & is_int8_R13 ) | ( is_int8_X14 & is_int8_R14 ) | ( is_int8_X15 & is_int8_R15 ) | ( is_int8_X16 & is_int8_R16 ) | ( is_int8_X17 & is_int8_R17 ) | ( is_int8_X18 & is_int8_R18 ) | ( is_int8_X19 & is_int8_R19 ) | ( is_int8_X20 & is_int8_R20 ) | ( is_int8_X21 & is_int8_R21 ) | ( is_int8_X22 & is_int8_R22 ) | ( is_int8_X23 & is_int8_R23 ) | ( is_int8_X24 & is_int8_R24 ) | ( is_int8_X25 & is_int8_R25 ) | ( is_int8_X26 & is_int8_R26 ) | ( is_int8_X27 & is_int8_R27 ) | ( is_int8_X28 & is_int8_R28 ) | ( is_int8_X29 & is_int8_R29 ) | ( is_int8_X30 & is_int8_R30 ) | ( is_int8_X31 & is_int8_R31 ) | ( is_int8_X32 & is_int8_R32 ) | ( is_int8_X33 & is_int8_R33 ) | ( is_int8_X34 & is_int8_R34 ) | ( is_int8_X35 & is_int8_R35 ) | ( is_int8_X36 & is_int8_R36 ) | ( is_int8_X37 & is_int8_R37 ) | ( is_int8_X38 & is_int8_R38 ) | ( is_int8_X39 & is_int8_R39 ) | ( is_int8_X40 & is_int8_R40 ) | ( is_int8_X41 & is_int8_R41 ) | ( is_int8_X42 & is_int8_R42 ) | ( is_int8_X43 & is_int8_R43 ) | ( is_int8_X44 & is_int8_R44 ) | ( is_int8_X45 & is_int8_R45 ) | ( is_int8_X46 & is_int8_R46 ) | ( is_int8_X47 & is_int8_R47 ) | ( is_int8_X48 & is_int8_R48 ) | ( is_int8_X49 & is_int8_R49 ) | ( is_int8_X50 & is_int8_R50 ) | ( is_int8_X51 & is_int8_R51 ) | ( is_int8_X52 & is_int8_R52 ) | ( is_int8_X53 & is_int8_R53 ) | ( is_int8_X54 & is_int8_R54 ) | ( is_int8_X55 & is_int8_R55 ) | ( is_int8_X56 & is_int8_R56 ) | ( is_int8_X57 & is_int8_R57 ) | ( is_int8_X58 & is_int8_R58 ) | ( is_int8_X59 & is_int8_R59 ) | ( is_int8_X60 & is_int8_R60 ) | ( is_int8_X61 & is_int8_R61 ) | ( is_int8_X62 & is_int8_R62 ) | ( is_int8_X63 & is_int8_R63 ) | ( is_int8_X64 & is_int8_R64 ) | ( is_int8_X65 & is_int8_R65 ) | ( is_int8_X66 & is_int8_R66 ) | ( is_int8_X67 & is_int8_R67 ) | ( is_int8_X68 & is_int8_R68 ) | ( is_int8_X69 & is_int8_R69 ) | ( is_int8_X70 & is_int8_R70 ) | ( is_int8_X71 & is_int8_R71 ) | ( is_int8_X72 & is_int8_R72 ) | ( is_int8_X73 & is_int8_R73 ) | ( is_int8_X74 & is_int8_R74 ) | ( is_int8_X75 & is_int8_R75 ) | ( is_int8_X76 & is_int8_R76 ) | ( is_int8_X77 & is_int8_R77 ) | ( is_int8_X78 & is_int8_R78 ) | ( is_int8_X79 & is_int8_R79 ) | ( is_int8_X80 & is_int8_R80 ) | ( is_int8_X81 & is_int8_R81 ) | ( is_int8_X82 & is_int8_R82 ) | ( is_int8_X83 & is_int8_R83 ) | ( is_int8_X84 & is_int8_R84 ) | ( is_int8_X85 & is_int8_R85 ) | ( is_int8_X86 & is_int8_R86 ) | ( is_int8_X87 & is_int8_R87 ) | ( is_int8_X88 & is_int8_R88 ) | ( is_int8_X89 & is_int8_R89 ) | ( is_int8_X90 & is_int8_R90 ) | ( is_int8_X91 & is_int8_R91 ) | ( is_int8_X92 & is_int8_R92 ) | ( is_int8_X93 & is_int8_R93 ) | ( is_int8_X94 & is_int8_R94 ) | ( is_int8_X95 & is_int8_R95 ) | ( is_int8_X96 & is_int8_R96 ) | ( is_int8_X97 & is_int8_R97 ) | ( is_int8_X98 & is_int8_R98 ) | ( is_int8_X99 & is_int8_R99 ) | ( is_int8_X100 & is_int8_R100 ) | ( is_int8_X101 & is_int8_R101 ) | ( is_int8_X102 & is_int8_R102 ) | ( is_int8_X103 & is_int8_R103 ) | ( is_int8_X104 & is_int8_R104 ) | ( is_int8_X105 & is_int8_R105 ) | ( is_int8_X106 & is_int8_R106 ) | ( is_int8_X107 & is_int8_R107 ) | ( is_int8_X108 & is_int8_R108 ) | ( is_int8_X109 & is_int8_R109 ) | ( is_int8_X110 & is_int8_R110 ) | ( is_int8_X111 & is_int8_R111 ) | ( is_int8_X112 & is_int8_R112 ) | ( is_int8_X113 & is_int8_R113 ) | ( is_int8_X114 & is_int8_R114 ) | ( is_int8_X115 & is_int8_R115 ) | ( is_int8_X116 & is_int8_R116 ) | ( is_int8_X117 & is_int8_R117 ) | ( is_int8_X118 & is_int8_R118 ) | ( is_int8_X119 & is_int8_R119 ) | ( is_int8_X120 & is_int8_R120 ) | ( is_int8_X121 & is_int8_R121 ) | ( is_int8_X122 & is_int8_R122 ) | ( is_int8_X123 & is_int8_R123 ) | ( is_int8_X124 & is_int8_R124 ) | ( is_int8_X125 & is_int8_R125 ) | ( is_int8_X126 & is_int8_R126 ) | ( is_int8_X127 & is_int8_R127 ) | ( is_int8_X128 & is_int8_R128 ) | ( is_int8_X129 & is_int8_R129 );
  assign _071__R = ( _071__X0 & _071__R0 ) | ( _071__X1 & _071__R1 );
  assign _070__R = ( _070__X0 & _070__R0 ) | ( _070__X1 & _070__R1 );
  assign accu_cnt_R = ( accu_cnt_X0 & accu_cnt_R0 ) | ( accu_cnt_X1 & accu_cnt_R1 ) | ( accu_cnt_X2 & accu_cnt_R2 ) | ( accu_cnt_X3 & accu_cnt_R3 );
  assign wait_for_op_en_R = ( wait_for_op_en_X0 & wait_for_op_en_R0 ) | ( wait_for_op_en_X1 & wait_for_op_en_R1 ) | ( wait_for_op_en_X2 & wait_for_op_en_R2 );
  assign slcg_cell_en_R = ( slcg_cell_en_X0 & slcg_cell_en_R0 );
  assign cfg_truncate_R = ( cfg_truncate_X0 & cfg_truncate_R0 ) | ( cfg_truncate_X1 & cfg_truncate_R1 );
  assign cfg_is_wg_R = ( cfg_is_wg_X0 & cfg_is_wg_R0 ) | ( cfg_is_wg_X1 & cfg_is_wg_R1 );
  assign cfg_is_int8_R = ( cfg_is_int8_X0 & cfg_is_int8_R0 ) | ( cfg_is_int8_X1 & cfg_is_int8_R1 );
  assign cfg_is_int_R = ( cfg_is_int_X0 & cfg_is_int_R0 ) | ( cfg_is_int_X1 & cfg_is_int_R1 );
  assign cfg_is_fp_R = ( cfg_is_fp_X0 & cfg_is_fp_R0 ) | ( cfg_is_fp_X1 & cfg_is_fp_R1 );
  assign cfg_in_en_mask_R = ( cfg_in_en_mask_X0 & cfg_in_en_mask_R0 ) | ( cfg_in_en_mask_X1 & cfg_in_en_mask_R1 );
  assign accu_ctrl_valid_R = ( accu_ctrl_valid_X0 & accu_ctrl_valid_R0 );
  assign accu_ctrl_ram_valid_R = ( accu_ctrl_ram_valid_X0 & accu_ctrl_ram_valid_R0 ) | ( accu_ctrl_ram_valid_X1 & accu_ctrl_ram_valid_R1 ) | ( accu_ctrl_ram_valid_X2 & accu_ctrl_ram_valid_R2 ) | ( accu_ctrl_ram_valid_X3 & accu_ctrl_ram_valid_R3 ) | ( accu_ctrl_ram_valid_X4 & accu_ctrl_ram_valid_R4 ) | ( accu_ctrl_ram_valid_X5 & accu_ctrl_ram_valid_R5 ) | ( accu_ctrl_ram_valid_X6 & accu_ctrl_ram_valid_R6 ) | ( accu_ctrl_ram_valid_X7 & accu_ctrl_ram_valid_R7 ) | ( accu_ctrl_ram_valid_X8 & accu_ctrl_ram_valid_R8 ) | ( accu_ctrl_ram_valid_X9 & accu_ctrl_ram_valid_R9 ) | ( accu_ctrl_ram_valid_X10 & accu_ctrl_ram_valid_R10 ) | ( accu_ctrl_ram_valid_X11 & accu_ctrl_ram_valid_R11 ) | ( accu_ctrl_ram_valid_X12 & accu_ctrl_ram_valid_R12 ) | ( accu_ctrl_ram_valid_X13 & accu_ctrl_ram_valid_R13 ) | ( accu_ctrl_ram_valid_X14 & accu_ctrl_ram_valid_R14 ) | ( accu_ctrl_ram_valid_X15 & accu_ctrl_ram_valid_R15 ) | ( accu_ctrl_ram_valid_X16 & accu_ctrl_ram_valid_R16 ) | ( accu_ctrl_ram_valid_X17 & accu_ctrl_ram_valid_R17 ) | ( accu_ctrl_ram_valid_X18 & accu_ctrl_ram_valid_R18 ) | ( accu_ctrl_ram_valid_X19 & accu_ctrl_ram_valid_R19 ) | ( accu_ctrl_ram_valid_X20 & accu_ctrl_ram_valid_R20 ) | ( accu_ctrl_ram_valid_X21 & accu_ctrl_ram_valid_R21 ) | ( accu_ctrl_ram_valid_X22 & accu_ctrl_ram_valid_R22 ) | ( accu_ctrl_ram_valid_X23 & accu_ctrl_ram_valid_R23 ) | ( accu_ctrl_ram_valid_X24 & accu_ctrl_ram_valid_R24 ) | ( accu_ctrl_ram_valid_X25 & accu_ctrl_ram_valid_R25 ) | ( accu_ctrl_ram_valid_X26 & accu_ctrl_ram_valid_R26 ) | ( accu_ctrl_ram_valid_X27 & accu_ctrl_ram_valid_R27 ) | ( accu_ctrl_ram_valid_X28 & accu_ctrl_ram_valid_R28 ) | ( accu_ctrl_ram_valid_X29 & accu_ctrl_ram_valid_R29 ) | ( accu_ctrl_ram_valid_X30 & accu_ctrl_ram_valid_R30 ) | ( accu_ctrl_ram_valid_X31 & accu_ctrl_ram_valid_R31 ) | ( accu_ctrl_ram_valid_X32 & accu_ctrl_ram_valid_R32 ) | ( accu_ctrl_ram_valid_X33 & accu_ctrl_ram_valid_R33 ) | ( accu_ctrl_ram_valid_X34 & accu_ctrl_ram_valid_R34 ) | ( accu_ctrl_ram_valid_X35 & accu_ctrl_ram_valid_R35 ) | ( accu_ctrl_ram_valid_X36 & accu_ctrl_ram_valid_R36 ) | ( accu_ctrl_ram_valid_X37 & accu_ctrl_ram_valid_R37 ) | ( accu_ctrl_ram_valid_X38 & accu_ctrl_ram_valid_R38 ) | ( accu_ctrl_ram_valid_X39 & accu_ctrl_ram_valid_R39 ) | ( accu_ctrl_ram_valid_X40 & accu_ctrl_ram_valid_R40 ) | ( accu_ctrl_ram_valid_X41 & accu_ctrl_ram_valid_R41 ) | ( accu_ctrl_ram_valid_X42 & accu_ctrl_ram_valid_R42 ) | ( accu_ctrl_ram_valid_X43 & accu_ctrl_ram_valid_R43 ) | ( accu_ctrl_ram_valid_X44 & accu_ctrl_ram_valid_R44 ) | ( accu_ctrl_ram_valid_X45 & accu_ctrl_ram_valid_R45 ) | ( accu_ctrl_ram_valid_X46 & accu_ctrl_ram_valid_R46 ) | ( accu_ctrl_ram_valid_X47 & accu_ctrl_ram_valid_R47 ) | ( accu_ctrl_ram_valid_X48 & accu_ctrl_ram_valid_R48 ) | ( accu_ctrl_ram_valid_X49 & accu_ctrl_ram_valid_R49 ) | ( accu_ctrl_ram_valid_X50 & accu_ctrl_ram_valid_R50 ) | ( accu_ctrl_ram_valid_X51 & accu_ctrl_ram_valid_R51 ) | ( accu_ctrl_ram_valid_X52 & accu_ctrl_ram_valid_R52 ) | ( accu_ctrl_ram_valid_X53 & accu_ctrl_ram_valid_R53 ) | ( accu_ctrl_ram_valid_X54 & accu_ctrl_ram_valid_R54 ) | ( accu_ctrl_ram_valid_X55 & accu_ctrl_ram_valid_R55 ) | ( accu_ctrl_ram_valid_X56 & accu_ctrl_ram_valid_R56 ) | ( accu_ctrl_ram_valid_X57 & accu_ctrl_ram_valid_R57 ) | ( accu_ctrl_ram_valid_X58 & accu_ctrl_ram_valid_R58 ) | ( accu_ctrl_ram_valid_X59 & accu_ctrl_ram_valid_R59 ) | ( accu_ctrl_ram_valid_X60 & accu_ctrl_ram_valid_R60 ) | ( accu_ctrl_ram_valid_X61 & accu_ctrl_ram_valid_R61 ) | ( accu_ctrl_ram_valid_X62 & accu_ctrl_ram_valid_R62 ) | ( accu_ctrl_ram_valid_X63 & accu_ctrl_ram_valid_R63 ) | ( accu_ctrl_ram_valid_X64 & accu_ctrl_ram_valid_R64 ) | ( accu_ctrl_ram_valid_X65 & accu_ctrl_ram_valid_R65 ) | ( accu_ctrl_ram_valid_X66 & accu_ctrl_ram_valid_R66 ) | ( accu_ctrl_ram_valid_X67 & accu_ctrl_ram_valid_R67 ) | ( accu_ctrl_ram_valid_X68 & accu_ctrl_ram_valid_R68 ) | ( accu_ctrl_ram_valid_X69 & accu_ctrl_ram_valid_R69 ) | ( accu_ctrl_ram_valid_X70 & accu_ctrl_ram_valid_R70 ) | ( accu_ctrl_ram_valid_X71 & accu_ctrl_ram_valid_R71 ) | ( accu_ctrl_ram_valid_X72 & accu_ctrl_ram_valid_R72 ) | ( accu_ctrl_ram_valid_X73 & accu_ctrl_ram_valid_R73 ) | ( accu_ctrl_ram_valid_X74 & accu_ctrl_ram_valid_R74 ) | ( accu_ctrl_ram_valid_X75 & accu_ctrl_ram_valid_R75 ) | ( accu_ctrl_ram_valid_X76 & accu_ctrl_ram_valid_R76 ) | ( accu_ctrl_ram_valid_X77 & accu_ctrl_ram_valid_R77 ) | ( accu_ctrl_ram_valid_X78 & accu_ctrl_ram_valid_R78 ) | ( accu_ctrl_ram_valid_X79 & accu_ctrl_ram_valid_R79 ) | ( accu_ctrl_ram_valid_X80 & accu_ctrl_ram_valid_R80 ) | ( accu_ctrl_ram_valid_X81 & accu_ctrl_ram_valid_R81 ) | ( accu_ctrl_ram_valid_X82 & accu_ctrl_ram_valid_R82 ) | ( accu_ctrl_ram_valid_X83 & accu_ctrl_ram_valid_R83 ) | ( accu_ctrl_ram_valid_X84 & accu_ctrl_ram_valid_R84 ) | ( accu_ctrl_ram_valid_X85 & accu_ctrl_ram_valid_R85 ) | ( accu_ctrl_ram_valid_X86 & accu_ctrl_ram_valid_R86 ) | ( accu_ctrl_ram_valid_X87 & accu_ctrl_ram_valid_R87 ) | ( accu_ctrl_ram_valid_X88 & accu_ctrl_ram_valid_R88 ) | ( accu_ctrl_ram_valid_X89 & accu_ctrl_ram_valid_R89 ) | ( accu_ctrl_ram_valid_X90 & accu_ctrl_ram_valid_R90 ) | ( accu_ctrl_ram_valid_X91 & accu_ctrl_ram_valid_R91 ) | ( accu_ctrl_ram_valid_X92 & accu_ctrl_ram_valid_R92 ) | ( accu_ctrl_ram_valid_X93 & accu_ctrl_ram_valid_R93 ) | ( accu_ctrl_ram_valid_X94 & accu_ctrl_ram_valid_R94 ) | ( accu_ctrl_ram_valid_X95 & accu_ctrl_ram_valid_R95 ) | ( accu_ctrl_ram_valid_X96 & accu_ctrl_ram_valid_R96 ) | ( accu_ctrl_ram_valid_X97 & accu_ctrl_ram_valid_R97 ) | ( accu_ctrl_ram_valid_X98 & accu_ctrl_ram_valid_R98 ) | ( accu_ctrl_ram_valid_X99 & accu_ctrl_ram_valid_R99 ) | ( accu_ctrl_ram_valid_X100 & accu_ctrl_ram_valid_R100 ) | ( accu_ctrl_ram_valid_X101 & accu_ctrl_ram_valid_R101 ) | ( accu_ctrl_ram_valid_X102 & accu_ctrl_ram_valid_R102 ) | ( accu_ctrl_ram_valid_X103 & accu_ctrl_ram_valid_R103 ) | ( accu_ctrl_ram_valid_X104 & accu_ctrl_ram_valid_R104 ) | ( accu_ctrl_ram_valid_X105 & accu_ctrl_ram_valid_R105 ) | ( accu_ctrl_ram_valid_X106 & accu_ctrl_ram_valid_R106 ) | ( accu_ctrl_ram_valid_X107 & accu_ctrl_ram_valid_R107 ) | ( accu_ctrl_ram_valid_X108 & accu_ctrl_ram_valid_R108 ) | ( accu_ctrl_ram_valid_X109 & accu_ctrl_ram_valid_R109 ) | ( accu_ctrl_ram_valid_X110 & accu_ctrl_ram_valid_R110 ) | ( accu_ctrl_ram_valid_X111 & accu_ctrl_ram_valid_R111 ) | ( accu_ctrl_ram_valid_X112 & accu_ctrl_ram_valid_R112 ) | ( accu_ctrl_ram_valid_X113 & accu_ctrl_ram_valid_R113 ) | ( accu_ctrl_ram_valid_X114 & accu_ctrl_ram_valid_R114 ) | ( accu_ctrl_ram_valid_X115 & accu_ctrl_ram_valid_R115 ) | ( accu_ctrl_ram_valid_X116 & accu_ctrl_ram_valid_R116 ) | ( accu_ctrl_ram_valid_X117 & accu_ctrl_ram_valid_R117 ) | ( accu_ctrl_ram_valid_X118 & accu_ctrl_ram_valid_R118 ) | ( accu_ctrl_ram_valid_X119 & accu_ctrl_ram_valid_R119 ) | ( accu_ctrl_ram_valid_X120 & accu_ctrl_ram_valid_R120 ) | ( accu_ctrl_ram_valid_X121 & accu_ctrl_ram_valid_R121 ) | ( accu_ctrl_ram_valid_X122 & accu_ctrl_ram_valid_R122 ) | ( accu_ctrl_ram_valid_X123 & accu_ctrl_ram_valid_R123 ) | ( accu_ctrl_ram_valid_X124 & accu_ctrl_ram_valid_R124 ) | ( accu_ctrl_ram_valid_X125 & accu_ctrl_ram_valid_R125 ) | ( accu_ctrl_ram_valid_X126 & accu_ctrl_ram_valid_R126 ) | ( accu_ctrl_ram_valid_X127 & accu_ctrl_ram_valid_R127 ) | ( accu_ctrl_ram_valid_X128 & accu_ctrl_ram_valid_R128 ) | ( accu_ctrl_ram_valid_X129 & accu_ctrl_ram_valid_R129 ) | ( accu_ctrl_ram_valid_X130 & accu_ctrl_ram_valid_R130 ) | ( accu_ctrl_ram_valid_X131 & accu_ctrl_ram_valid_R131 ) | ( accu_ctrl_ram_valid_X132 & accu_ctrl_ram_valid_R132 ) | ( accu_ctrl_ram_valid_X133 & accu_ctrl_ram_valid_R133 ) | ( accu_ctrl_ram_valid_X134 & accu_ctrl_ram_valid_R134 ) | ( accu_ctrl_ram_valid_X135 & accu_ctrl_ram_valid_R135 ) | ( accu_ctrl_ram_valid_X136 & accu_ctrl_ram_valid_R136 ) | ( accu_ctrl_ram_valid_X137 & accu_ctrl_ram_valid_R137 ) | ( accu_ctrl_ram_valid_X138 & accu_ctrl_ram_valid_R138 ) | ( accu_ctrl_ram_valid_X139 & accu_ctrl_ram_valid_R139 ) | ( accu_ctrl_ram_valid_X140 & accu_ctrl_ram_valid_R140 ) | ( accu_ctrl_ram_valid_X141 & accu_ctrl_ram_valid_R141 ) | ( accu_ctrl_ram_valid_X142 & accu_ctrl_ram_valid_R142 ) | ( accu_ctrl_ram_valid_X143 & accu_ctrl_ram_valid_R143 ) | ( accu_ctrl_ram_valid_X144 & accu_ctrl_ram_valid_R144 ) | ( accu_ctrl_ram_valid_X145 & accu_ctrl_ram_valid_R145 ) | ( accu_ctrl_ram_valid_X146 & accu_ctrl_ram_valid_R146 ) | ( accu_ctrl_ram_valid_X147 & accu_ctrl_ram_valid_R147 ) | ( accu_ctrl_ram_valid_X148 & accu_ctrl_ram_valid_R148 ) | ( accu_ctrl_ram_valid_X149 & accu_ctrl_ram_valid_R149 ) | ( accu_ctrl_ram_valid_X150 & accu_ctrl_ram_valid_R150 ) | ( accu_ctrl_ram_valid_X151 & accu_ctrl_ram_valid_R151 ) | ( accu_ctrl_ram_valid_X152 & accu_ctrl_ram_valid_R152 ) | ( accu_ctrl_ram_valid_X153 & accu_ctrl_ram_valid_R153 ) | ( accu_ctrl_ram_valid_X154 & accu_ctrl_ram_valid_R154 ) | ( accu_ctrl_ram_valid_X155 & accu_ctrl_ram_valid_R155 ) | ( accu_ctrl_ram_valid_X156 & accu_ctrl_ram_valid_R156 ) | ( accu_ctrl_ram_valid_X157 & accu_ctrl_ram_valid_R157 ) | ( accu_ctrl_ram_valid_X158 & accu_ctrl_ram_valid_R158 ) | ( accu_ctrl_ram_valid_X159 & accu_ctrl_ram_valid_R159 ) | ( accu_ctrl_ram_valid_X160 & accu_ctrl_ram_valid_R160 ) | ( accu_ctrl_ram_valid_X161 & accu_ctrl_ram_valid_R161 ) | ( accu_ctrl_ram_valid_X162 & accu_ctrl_ram_valid_R162 ) | ( accu_ctrl_ram_valid_X163 & accu_ctrl_ram_valid_R163 ) | ( accu_ctrl_ram_valid_X164 & accu_ctrl_ram_valid_R164 ) | ( accu_ctrl_ram_valid_X165 & accu_ctrl_ram_valid_R165 ) | ( accu_ctrl_ram_valid_X166 & accu_ctrl_ram_valid_R166 ) | ( accu_ctrl_ram_valid_X167 & accu_ctrl_ram_valid_R167 ) | ( accu_ctrl_ram_valid_X168 & accu_ctrl_ram_valid_R168 ) | ( accu_ctrl_ram_valid_X169 & accu_ctrl_ram_valid_R169 ) | ( accu_ctrl_ram_valid_X170 & accu_ctrl_ram_valid_R170 ) | ( accu_ctrl_ram_valid_X171 & accu_ctrl_ram_valid_R171 ) | ( accu_ctrl_ram_valid_X172 & accu_ctrl_ram_valid_R172 ) | ( accu_ctrl_ram_valid_X173 & accu_ctrl_ram_valid_R173 ) | ( accu_ctrl_ram_valid_X174 & accu_ctrl_ram_valid_R174 ) | ( accu_ctrl_ram_valid_X175 & accu_ctrl_ram_valid_R175 ) | ( accu_ctrl_ram_valid_X176 & accu_ctrl_ram_valid_R176 ) | ( accu_ctrl_ram_valid_X177 & accu_ctrl_ram_valid_R177 ) | ( accu_ctrl_ram_valid_X178 & accu_ctrl_ram_valid_R178 ) | ( accu_ctrl_ram_valid_X179 & accu_ctrl_ram_valid_R179 ) | ( accu_ctrl_ram_valid_X180 & accu_ctrl_ram_valid_R180 ) | ( accu_ctrl_ram_valid_X181 & accu_ctrl_ram_valid_R181 ) | ( accu_ctrl_ram_valid_X182 & accu_ctrl_ram_valid_R182 ) | ( accu_ctrl_ram_valid_X183 & accu_ctrl_ram_valid_R183 ) | ( accu_ctrl_ram_valid_X184 & accu_ctrl_ram_valid_R184 ) | ( accu_ctrl_ram_valid_X185 & accu_ctrl_ram_valid_R185 ) | ( accu_ctrl_ram_valid_X186 & accu_ctrl_ram_valid_R186 ) | ( accu_ctrl_ram_valid_X187 & accu_ctrl_ram_valid_R187 ) | ( accu_ctrl_ram_valid_X188 & accu_ctrl_ram_valid_R188 ) | ( accu_ctrl_ram_valid_X189 & accu_ctrl_ram_valid_R189 ) | ( accu_ctrl_ram_valid_X190 & accu_ctrl_ram_valid_R190 ) | ( accu_ctrl_ram_valid_X191 & accu_ctrl_ram_valid_R191 );
  assign accu_ctrl_pd_R = ( accu_ctrl_pd_X0 & accu_ctrl_pd_R0 );
  assign abuf_rd_en_R = ( abuf_rd_en_X0 & abuf_rd_en_R0 ) | ( abuf_rd_en_X1 & abuf_rd_en_R1 );
  assign abuf_rd_addr_R = ( abuf_rd_addr_X0 & abuf_rd_addr_R0 );
 // ground taints for floating regs
 // ground taints for unused wires
  assign { accu_addr_R , accu_addr_C , accu_addr_X , accu_batch_index_R , accu_batch_index_C , accu_batch_index_X , accu_channel_end_R , accu_channel_end_C , accu_channel_end_X , accu_channel_end_d0_R , accu_channel_end_d0_C , accu_channel_end_d0_X , accu_ctrl_valid_d0_R , accu_ctrl_valid_d0_C , accu_ctrl_valid_d0_X , accu_layer_end_R , accu_layer_end_C , accu_layer_end_X , accu_layer_end_d0_R , accu_layer_end_d0_C , accu_layer_end_d0_X , accu_ram_sel_0_w_R , accu_ram_sel_0_w_C , accu_ram_sel_0_w_X , accu_ram_sel_4_w_R , accu_ram_sel_4_w_C , accu_ram_sel_4_w_X , accu_ram_valid_d0_R , accu_ram_valid_d0_C , accu_ram_valid_d0_X , accu_rd_en_R , accu_rd_en_C , accu_rd_en_X , accu_rd_mask_d0_R , accu_rd_mask_d0_C , accu_rd_mask_d0_X , accu_stripe_end_R , accu_stripe_end_C , accu_stripe_end_X , accu_stripe_end_d0_R , accu_stripe_end_d0_C , accu_stripe_end_d0_X , accu_stripe_st_R , accu_stripe_st_C , accu_stripe_st_X , is_winograd_R , is_winograd_C , is_winograd_X , pre_accu_addr_R , pre_accu_addr_C , pre_accu_addr_X , pre_accu_channel_end_R , pre_accu_channel_end_C , pre_accu_channel_end_X , pre_accu_ctrl_valid_R , pre_accu_ctrl_valid_C , pre_accu_ctrl_valid_X , pre_accu_layer_end_R , pre_accu_layer_end_C , pre_accu_layer_end_X , pre_accu_mode_R , pre_accu_mode_C , pre_accu_mode_X , pre_accu_ram_sel_0_R , pre_accu_ram_sel_0_C , pre_accu_ram_sel_0_X , pre_accu_ram_sel_1_R , pre_accu_ram_sel_1_C , pre_accu_ram_sel_1_X , pre_accu_ram_sel_2_R , pre_accu_ram_sel_2_C , pre_accu_ram_sel_2_X , pre_accu_ram_sel_3_R , pre_accu_ram_sel_3_C , pre_accu_ram_sel_3_X , pre_accu_ram_sel_4_R , pre_accu_ram_sel_4_C , pre_accu_ram_sel_4_X , pre_accu_ram_sel_5_R , pre_accu_ram_sel_5_C , pre_accu_ram_sel_5_X , pre_accu_ram_sel_6_R , pre_accu_ram_sel_6_C , pre_accu_ram_sel_6_X , pre_accu_ram_sel_7_R , pre_accu_ram_sel_7_C , pre_accu_ram_sel_7_X , pre_accu_ram_valid_R , pre_accu_ram_valid_C , pre_accu_ram_valid_X , pre_accu_rd_mask_R , pre_accu_rd_mask_C , pre_accu_rd_mask_X , pre_accu_stripe_end_R , pre_accu_stripe_end_C , pre_accu_stripe_end_X  } = 0;
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ctrl_dlv_elem_mask_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ctrl_dlv_elem_mask_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ctrl_dlv_elem_mask_PREV_VAL1 <= accu_ctrl_dlv_elem_mask ;
    if( INSTR_IN_ZY ) accu_ctrl_dlv_elem_mask_PREV_VAL2 <= accu_ctrl_dlv_elem_mask_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ctrl_ram_sel_7_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ctrl_ram_sel_7_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ctrl_ram_sel_7_PREV_VAL1 <= accu_ctrl_ram_sel_7 ;
    if( INSTR_IN_ZY ) accu_ctrl_ram_sel_7_PREV_VAL2 <= accu_ctrl_ram_sel_7_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ctrl_ram_sel_6_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ctrl_ram_sel_6_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ctrl_ram_sel_6_PREV_VAL1 <= accu_ctrl_ram_sel_6 ;
    if( INSTR_IN_ZY ) accu_ctrl_ram_sel_6_PREV_VAL2 <= accu_ctrl_ram_sel_6_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ctrl_ram_sel_5_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ctrl_ram_sel_5_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ctrl_ram_sel_5_PREV_VAL1 <= accu_ctrl_ram_sel_5 ;
    if( INSTR_IN_ZY ) accu_ctrl_ram_sel_5_PREV_VAL2 <= accu_ctrl_ram_sel_5_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ctrl_ram_sel_4_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ctrl_ram_sel_4_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ctrl_ram_sel_4_PREV_VAL1 <= accu_ctrl_ram_sel_4 ;
    if( INSTR_IN_ZY ) accu_ctrl_ram_sel_4_PREV_VAL2 <= accu_ctrl_ram_sel_4_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ctrl_ram_sel_3_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ctrl_ram_sel_3_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ctrl_ram_sel_3_PREV_VAL1 <= accu_ctrl_ram_sel_3 ;
    if( INSTR_IN_ZY ) accu_ctrl_ram_sel_3_PREV_VAL2 <= accu_ctrl_ram_sel_3_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ctrl_ram_sel_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ctrl_ram_sel_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ctrl_ram_sel_2_PREV_VAL1 <= accu_ctrl_ram_sel_2 ;
    if( INSTR_IN_ZY ) accu_ctrl_ram_sel_2_PREV_VAL2 <= accu_ctrl_ram_sel_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ctrl_ram_sel_1_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ctrl_ram_sel_1_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ctrl_ram_sel_1_PREV_VAL1 <= accu_ctrl_ram_sel_1 ;
    if( INSTR_IN_ZY ) accu_ctrl_ram_sel_1_PREV_VAL2 <= accu_ctrl_ram_sel_1_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ctrl_ram_sel_0_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ctrl_ram_sel_0_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ctrl_ram_sel_0_PREV_VAL1 <= accu_ctrl_ram_sel_0 ;
    if( INSTR_IN_ZY ) accu_ctrl_ram_sel_0_PREV_VAL2 <= accu_ctrl_ram_sel_0_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ctrl_layer_end_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ctrl_layer_end_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ctrl_layer_end_PREV_VAL1 <= accu_ctrl_layer_end ;
    if( INSTR_IN_ZY ) accu_ctrl_layer_end_PREV_VAL2 <= accu_ctrl_layer_end_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ctrl_channel_end_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ctrl_channel_end_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ctrl_channel_end_PREV_VAL1 <= accu_ctrl_channel_end ;
    if( INSTR_IN_ZY ) accu_ctrl_channel_end_PREV_VAL2 <= accu_ctrl_channel_end_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ctrl_stripe_end_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ctrl_stripe_end_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ctrl_stripe_end_PREV_VAL1 <= accu_ctrl_stripe_end ;
    if( INSTR_IN_ZY ) accu_ctrl_stripe_end_PREV_VAL2 <= accu_ctrl_stripe_end_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ctrl_rd_mask_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ctrl_rd_mask_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ctrl_rd_mask_PREV_VAL1 <= accu_ctrl_rd_mask ;
    if( INSTR_IN_ZY ) accu_ctrl_rd_mask_PREV_VAL2 <= accu_ctrl_rd_mask_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ctrl_mode_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ctrl_mode_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ctrl_mode_PREV_VAL1 <= accu_ctrl_mode ;
    if( INSTR_IN_ZY ) accu_ctrl_mode_PREV_VAL2 <= accu_ctrl_mode_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ctrl_addr_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ctrl_addr_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ctrl_addr_PREV_VAL1 <= accu_ctrl_addr ;
    if( INSTR_IN_ZY ) accu_ctrl_addr_PREV_VAL2 <= accu_ctrl_addr_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) \accu_ctrl_ram_valid_reg[0]_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) \accu_ctrl_ram_valid_reg[0]_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) \accu_ctrl_ram_valid_reg[0]_PREV_VAL1 <= \accu_ctrl_ram_valid_reg[0] ;
    if( INSTR_IN_ZY ) \accu_ctrl_ram_valid_reg[0]_PREV_VAL2 <= \accu_ctrl_ram_valid_reg[0]_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ctrl_valid_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ctrl_valid_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ctrl_valid_PREV_VAL1 <= accu_ctrl_valid ;
    if( INSTR_IN_ZY ) accu_ctrl_valid_PREV_VAL2 <= accu_ctrl_valid_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ram_sel_7_d2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ram_sel_7_d2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ram_sel_7_d2_PREV_VAL1 <= accu_ram_sel_7_d2 ;
    if( INSTR_IN_ZY ) accu_ram_sel_7_d2_PREV_VAL2 <= accu_ram_sel_7_d2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ram_sel_6_d2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ram_sel_6_d2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ram_sel_6_d2_PREV_VAL1 <= accu_ram_sel_6_d2 ;
    if( INSTR_IN_ZY ) accu_ram_sel_6_d2_PREV_VAL2 <= accu_ram_sel_6_d2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ram_sel_5_d2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ram_sel_5_d2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ram_sel_5_d2_PREV_VAL1 <= accu_ram_sel_5_d2 ;
    if( INSTR_IN_ZY ) accu_ram_sel_5_d2_PREV_VAL2 <= accu_ram_sel_5_d2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ram_sel_4_d2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ram_sel_4_d2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ram_sel_4_d2_PREV_VAL1 <= accu_ram_sel_4_d2 ;
    if( INSTR_IN_ZY ) accu_ram_sel_4_d2_PREV_VAL2 <= accu_ram_sel_4_d2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ram_sel_3_d2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ram_sel_3_d2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ram_sel_3_d2_PREV_VAL1 <= accu_ram_sel_3_d2 ;
    if( INSTR_IN_ZY ) accu_ram_sel_3_d2_PREV_VAL2 <= accu_ram_sel_3_d2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ram_sel_2_d2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ram_sel_2_d2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ram_sel_2_d2_PREV_VAL1 <= accu_ram_sel_2_d2 ;
    if( INSTR_IN_ZY ) accu_ram_sel_2_d2_PREV_VAL2 <= accu_ram_sel_2_d2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ram_sel_1_d2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ram_sel_1_d2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ram_sel_1_d2_PREV_VAL1 <= accu_ram_sel_1_d2 ;
    if( INSTR_IN_ZY ) accu_ram_sel_1_d2_PREV_VAL2 <= accu_ram_sel_1_d2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ram_sel_0_d2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ram_sel_0_d2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ram_sel_0_d2_PREV_VAL1 <= accu_ram_sel_0_d2 ;
    if( INSTR_IN_ZY ) accu_ram_sel_0_d2_PREV_VAL2 <= accu_ram_sel_0_d2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_layer_end_d2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_layer_end_d2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_layer_end_d2_PREV_VAL1 <= accu_layer_end_d2 ;
    if( INSTR_IN_ZY ) accu_layer_end_d2_PREV_VAL2 <= accu_layer_end_d2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_channel_end_d2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_channel_end_d2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_channel_end_d2_PREV_VAL1 <= accu_channel_end_d2 ;
    if( INSTR_IN_ZY ) accu_channel_end_d2_PREV_VAL2 <= accu_channel_end_d2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_stripe_end_d2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_stripe_end_d2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_stripe_end_d2_PREV_VAL1 <= accu_stripe_end_d2 ;
    if( INSTR_IN_ZY ) accu_stripe_end_d2_PREV_VAL2 <= accu_stripe_end_d2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_rd_mask_d2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_rd_mask_d2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_rd_mask_d2_PREV_VAL1 <= accu_rd_mask_d2 ;
    if( INSTR_IN_ZY ) accu_rd_mask_d2_PREV_VAL2 <= accu_rd_mask_d2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_mode_d2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_mode_d2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_mode_d2_PREV_VAL1 <= accu_mode_d2 ;
    if( INSTR_IN_ZY ) accu_mode_d2_PREV_VAL2 <= accu_mode_d2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_addr_d2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_addr_d2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_addr_d2_PREV_VAL1 <= accu_addr_d2 ;
    if( INSTR_IN_ZY ) accu_addr_d2_PREV_VAL2 <= accu_addr_d2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ram_valid_d2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ram_valid_d2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ram_valid_d2_PREV_VAL1 <= accu_ram_valid_d2 ;
    if( INSTR_IN_ZY ) accu_ram_valid_d2_PREV_VAL2 <= accu_ram_valid_d2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ctrl_valid_d2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ctrl_valid_d2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ctrl_valid_d2_PREV_VAL1 <= accu_ctrl_valid_d2 ;
    if( INSTR_IN_ZY ) accu_ctrl_valid_d2_PREV_VAL2 <= accu_ctrl_valid_d2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ram_sel_7_d1_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ram_sel_7_d1_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ram_sel_7_d1_PREV_VAL1 <= accu_ram_sel_7_d1 ;
    if( INSTR_IN_ZY ) accu_ram_sel_7_d1_PREV_VAL2 <= accu_ram_sel_7_d1_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ram_sel_6_d1_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ram_sel_6_d1_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ram_sel_6_d1_PREV_VAL1 <= accu_ram_sel_6_d1 ;
    if( INSTR_IN_ZY ) accu_ram_sel_6_d1_PREV_VAL2 <= accu_ram_sel_6_d1_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ram_sel_5_d1_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ram_sel_5_d1_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ram_sel_5_d1_PREV_VAL1 <= accu_ram_sel_5_d1 ;
    if( INSTR_IN_ZY ) accu_ram_sel_5_d1_PREV_VAL2 <= accu_ram_sel_5_d1_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ram_sel_4_d1_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ram_sel_4_d1_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ram_sel_4_d1_PREV_VAL1 <= accu_ram_sel_4_d1 ;
    if( INSTR_IN_ZY ) accu_ram_sel_4_d1_PREV_VAL2 <= accu_ram_sel_4_d1_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ram_sel_3_d1_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ram_sel_3_d1_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ram_sel_3_d1_PREV_VAL1 <= accu_ram_sel_3_d1 ;
    if( INSTR_IN_ZY ) accu_ram_sel_3_d1_PREV_VAL2 <= accu_ram_sel_3_d1_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ram_sel_2_d1_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ram_sel_2_d1_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ram_sel_2_d1_PREV_VAL1 <= accu_ram_sel_2_d1 ;
    if( INSTR_IN_ZY ) accu_ram_sel_2_d1_PREV_VAL2 <= accu_ram_sel_2_d1_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ram_sel_1_d1_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ram_sel_1_d1_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ram_sel_1_d1_PREV_VAL1 <= accu_ram_sel_1_d1 ;
    if( INSTR_IN_ZY ) accu_ram_sel_1_d1_PREV_VAL2 <= accu_ram_sel_1_d1_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ram_sel_0_d1_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ram_sel_0_d1_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ram_sel_0_d1_PREV_VAL1 <= accu_ram_sel_0_d1 ;
    if( INSTR_IN_ZY ) accu_ram_sel_0_d1_PREV_VAL2 <= accu_ram_sel_0_d1_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_layer_end_d1_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_layer_end_d1_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_layer_end_d1_PREV_VAL1 <= accu_layer_end_d1 ;
    if( INSTR_IN_ZY ) accu_layer_end_d1_PREV_VAL2 <= accu_layer_end_d1_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_channel_end_d1_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_channel_end_d1_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_channel_end_d1_PREV_VAL1 <= accu_channel_end_d1 ;
    if( INSTR_IN_ZY ) accu_channel_end_d1_PREV_VAL2 <= accu_channel_end_d1_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_stripe_end_d1_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_stripe_end_d1_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_stripe_end_d1_PREV_VAL1 <= accu_stripe_end_d1 ;
    if( INSTR_IN_ZY ) accu_stripe_end_d1_PREV_VAL2 <= accu_stripe_end_d1_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_rd_mask_d1_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_rd_mask_d1_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_rd_mask_d1_PREV_VAL1 <= accu_rd_mask_d1 ;
    if( INSTR_IN_ZY ) accu_rd_mask_d1_PREV_VAL2 <= accu_rd_mask_d1_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_mode_d1_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_mode_d1_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_mode_d1_PREV_VAL1 <= accu_mode_d1 ;
    if( INSTR_IN_ZY ) accu_mode_d1_PREV_VAL2 <= accu_mode_d1_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_addr_d1_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_addr_d1_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_addr_d1_PREV_VAL1 <= accu_addr_d1 ;
    if( INSTR_IN_ZY ) accu_addr_d1_PREV_VAL2 <= accu_addr_d1_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ram_valid_d1_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ram_valid_d1_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ram_valid_d1_PREV_VAL1 <= accu_ram_valid_d1 ;
    if( INSTR_IN_ZY ) accu_ram_valid_d1_PREV_VAL2 <= accu_ram_valid_d1_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ctrl_valid_d1_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ctrl_valid_d1_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ctrl_valid_d1_PREV_VAL1 <= accu_ctrl_valid_d1 ;
    if( INSTR_IN_ZY ) accu_ctrl_valid_d1_PREV_VAL2 <= accu_ctrl_valid_d1_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) cfg_in_en_mask_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) cfg_in_en_mask_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) cfg_in_en_mask_PREV_VAL1 <= cfg_in_en_mask ;
    if( INSTR_IN_ZY ) cfg_in_en_mask_PREV_VAL2 <= cfg_in_en_mask_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) cfg_is_int8_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) cfg_is_int8_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) cfg_is_int8_PREV_VAL1 <= cfg_is_int8 ;
    if( INSTR_IN_ZY ) cfg_is_int8_PREV_VAL2 <= cfg_is_int8_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) cfg_is_wg_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) cfg_is_wg_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) cfg_is_wg_PREV_VAL1 <= cfg_is_wg ;
    if( INSTR_IN_ZY ) cfg_is_wg_PREV_VAL2 <= cfg_is_wg_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) cfg_is_int_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) cfg_is_int_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) cfg_is_int_PREV_VAL1 <= cfg_is_int ;
    if( INSTR_IN_ZY ) cfg_is_int_PREV_VAL2 <= cfg_is_int_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) cfg_is_fp_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) cfg_is_fp_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) cfg_is_fp_PREV_VAL1 <= cfg_is_fp ;
    if( INSTR_IN_ZY ) cfg_is_fp_PREV_VAL2 <= cfg_is_fp_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) cfg_truncate_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) cfg_truncate_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) cfg_truncate_PREV_VAL1 <= cfg_truncate ;
    if( INSTR_IN_ZY ) cfg_truncate_PREV_VAL2 <= cfg_truncate_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) cfg_winograd_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) cfg_winograd_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) cfg_winograd_PREV_VAL1 <= cfg_winograd ;
    if( INSTR_IN_ZY ) cfg_winograd_PREV_VAL2 <= cfg_winograd_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ram_sel_7_d0_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ram_sel_7_d0_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ram_sel_7_d0_PREV_VAL1 <= accu_ram_sel_7_d0 ;
    if( INSTR_IN_ZY ) accu_ram_sel_7_d0_PREV_VAL2 <= accu_ram_sel_7_d0_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ram_sel_6_d0_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ram_sel_6_d0_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ram_sel_6_d0_PREV_VAL1 <= accu_ram_sel_6_d0 ;
    if( INSTR_IN_ZY ) accu_ram_sel_6_d0_PREV_VAL2 <= accu_ram_sel_6_d0_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ram_sel_5_d0_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ram_sel_5_d0_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ram_sel_5_d0_PREV_VAL1 <= accu_ram_sel_5_d0 ;
    if( INSTR_IN_ZY ) accu_ram_sel_5_d0_PREV_VAL2 <= accu_ram_sel_5_d0_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ram_sel_4_d0_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ram_sel_4_d0_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ram_sel_4_d0_PREV_VAL1 <= accu_ram_sel_4_d0 ;
    if( INSTR_IN_ZY ) accu_ram_sel_4_d0_PREV_VAL2 <= accu_ram_sel_4_d0_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ram_sel_3_d0_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ram_sel_3_d0_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ram_sel_3_d0_PREV_VAL1 <= accu_ram_sel_3_d0 ;
    if( INSTR_IN_ZY ) accu_ram_sel_3_d0_PREV_VAL2 <= accu_ram_sel_3_d0_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ram_sel_2_d0_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ram_sel_2_d0_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ram_sel_2_d0_PREV_VAL1 <= accu_ram_sel_2_d0 ;
    if( INSTR_IN_ZY ) accu_ram_sel_2_d0_PREV_VAL2 <= accu_ram_sel_2_d0_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ram_sel_1_d0_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ram_sel_1_d0_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ram_sel_1_d0_PREV_VAL1 <= accu_ram_sel_1_d0 ;
    if( INSTR_IN_ZY ) accu_ram_sel_1_d0_PREV_VAL2 <= accu_ram_sel_1_d0_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_ram_sel_0_d0_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_ram_sel_0_d0_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_ram_sel_0_d0_PREV_VAL1 <= accu_ram_sel_0_d0 ;
    if( INSTR_IN_ZY ) accu_ram_sel_0_d0_PREV_VAL2 <= accu_ram_sel_0_d0_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_mode_d0_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_mode_d0_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_mode_d0_PREV_VAL1 <= accu_mode_d0 ;
    if( INSTR_IN_ZY ) accu_mode_d0_PREV_VAL2 <= accu_mode_d0_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_rd_mask_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_rd_mask_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_rd_mask_PREV_VAL1 <= accu_rd_mask ;
    if( INSTR_IN_ZY ) accu_rd_mask_PREV_VAL2 <= accu_rd_mask_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_channel_st_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_channel_st_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_channel_st_PREV_VAL1 <= accu_channel_st ;
    if( INSTR_IN_ZY ) accu_channel_st_PREV_VAL2 <= accu_channel_st_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_cnt_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_cnt_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_cnt_PREV_VAL1 <= accu_cnt ;
    if( INSTR_IN_ZY ) accu_cnt_PREV_VAL2 <= accu_cnt_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) wait_for_op_en_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) wait_for_op_en_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) wait_for_op_en_PREV_VAL1 <= wait_for_op_en ;
    if( INSTR_IN_ZY ) wait_for_op_en_PREV_VAL2 <= wait_for_op_en_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) slcg_cell_en_d3_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) slcg_cell_en_d3_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) slcg_cell_en_d3_PREV_VAL1 <= slcg_cell_en_d3 ;
    if( INSTR_IN_ZY ) slcg_cell_en_d3_PREV_VAL2 <= slcg_cell_en_d3_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) slcg_cell_en_d2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) slcg_cell_en_d2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) slcg_cell_en_d2_PREV_VAL1 <= slcg_cell_en_d2 ;
    if( INSTR_IN_ZY ) slcg_cell_en_d2_PREV_VAL2 <= slcg_cell_en_d2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) slcg_cell_en_d1_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) slcg_cell_en_d1_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) slcg_cell_en_d1_PREV_VAL1 <= slcg_cell_en_d1 ;
    if( INSTR_IN_ZY ) slcg_cell_en_d1_PREV_VAL2 <= slcg_cell_en_d1_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) accu_pd_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) accu_pd_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) accu_pd_PREV_VAL1 <= accu_pd ;
    if( INSTR_IN_ZY ) accu_pd_PREV_VAL2 <= accu_pd_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) \accu_valid_reg[0]_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) \accu_valid_reg[0]_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) \accu_valid_reg[0]_PREV_VAL1 <= \accu_valid_reg[0] ;
    if( INSTR_IN_ZY ) \accu_valid_reg[0]_PREV_VAL2 <= \accu_valid_reg[0]_PREV_VAL1 ;
  end
 // ground taints for unused wire slices
  assign { _067__R0 [127:80] } = 0;
  assign { _067__X0 [127:80] } = 0;
  assign { _067__C0 [127:80] } = 0;
  assign { _066__R0 [127:80] } = 0;
  assign { _066__X0 [127:80] } = 0;
  assign { _066__C0 [127:80] } = 0;
  assign { accu_cnt_w_R1 [6:2] } = 0;
  assign { accu_cnt_w_X1 [6:2] } = 0;
  assign { accu_cnt_w_C1 [6:2] } = 0;
  assign { accu_channel_st_R2 [0], accu_channel_st_R2 [1], accu_channel_st_R2 [2], accu_channel_st_R2 [3], accu_channel_st_R2 [4], accu_channel_st_R2 [5], accu_channel_st_R2 [6], accu_channel_st_R2 [7] } = 0;
  assign { accu_channel_st_X2 [0], accu_channel_st_X2 [1], accu_channel_st_X2 [2], accu_channel_st_X2 [3], accu_channel_st_X2 [4], accu_channel_st_X2 [5], accu_channel_st_X2 [6], accu_channel_st_X2 [7] } = 0;
  assign { accu_channel_st_C2 [0], accu_channel_st_C2 [1], accu_channel_st_C2 [2], accu_channel_st_C2 [3], accu_channel_st_C2 [4], accu_channel_st_C2 [5], accu_channel_st_C2 [6], accu_channel_st_C2 [7] } = 0;
  assign { accu_rd_mask_w_R2 [1], accu_rd_mask_w_R2 [2], accu_rd_mask_w_R2 [3], accu_rd_mask_w_R2 [7:5] } = 0;
  assign { accu_rd_mask_w_X2 [1], accu_rd_mask_w_X2 [2], accu_rd_mask_w_X2 [3], accu_rd_mask_w_X2 [7:5] } = 0;
  assign { accu_rd_mask_w_C2 [1], accu_rd_mask_w_C2 [2], accu_rd_mask_w_C2 [3], accu_rd_mask_w_C2 [7:5] } = 0;
  assign { accu_pd_R8 [0], accu_pd_R8 [1], accu_pd_R8 [2], accu_pd_R8 [3], accu_pd_R8 [4], accu_pd_R8 [8:7] } = 0;
  assign { accu_pd_X8 [0], accu_pd_X8 [1], accu_pd_X8 [2], accu_pd_X8 [3], accu_pd_X8 [4], accu_pd_X8 [8:7] } = 0;
  assign { accu_pd_C8 [0], accu_pd_C8 [1], accu_pd_C8 [2], accu_pd_C8 [3], accu_pd_C8 [4], accu_pd_C8 [8:7] } = 0;
  assign { accu_valid_R34 [8:1] } = 0;
  assign { accu_valid_X34 [8:1] } = 0;
  assign { accu_valid_C34 [8:1] } = 0;
  assign { accu_cnt_R3 [0], accu_cnt_R3 [1] } = 0;
  assign { accu_cnt_X3 [0], accu_cnt_X3 [1] } = 0;
  assign { accu_cnt_C3 [0], accu_cnt_C3 [1] } = 0;
  assign { accu_ctrl_ram_valid_R191 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_X191 [191:1] } = 0;
  assign { accu_ctrl_ram_valid_C191 [191:1] } = 0;
  assert property( accu_addr_d1_r_flag == 0 || accu_addr_d1_PREV_VAL1 == accu_addr_d1_PREV_VAL2 );
  assert property( accu_addr_d2_r_flag == 0 || accu_addr_d2_PREV_VAL1 == accu_addr_d2_PREV_VAL2 );
  assert property( accu_channel_end_d1_r_flag == 0 || accu_channel_end_d1_PREV_VAL1 == accu_channel_end_d1_PREV_VAL2 );
  assert property( accu_channel_end_d2_r_flag == 0 || accu_channel_end_d2_PREV_VAL1 == accu_channel_end_d2_PREV_VAL2 );
  assert property( accu_channel_st_r_flag == 0 || accu_channel_st_PREV_VAL1 == accu_channel_st_PREV_VAL2 );
  assert property( accu_cnt_r_flag == 0 || accu_cnt_PREV_VAL1 == accu_cnt_PREV_VAL2 );
  assert property( accu_ctrl_addr_r_flag == 0 || accu_ctrl_addr_PREV_VAL1 == accu_ctrl_addr_PREV_VAL2 );
  assert property( accu_ctrl_channel_end_r_flag == 0 || accu_ctrl_channel_end_PREV_VAL1 == accu_ctrl_channel_end_PREV_VAL2 );
  assert property( accu_ctrl_dlv_elem_mask_r_flag == 0 || accu_ctrl_dlv_elem_mask_PREV_VAL1 == accu_ctrl_dlv_elem_mask_PREV_VAL2 );
  assert property( accu_ctrl_layer_end_r_flag == 0 || accu_ctrl_layer_end_PREV_VAL1 == accu_ctrl_layer_end_PREV_VAL2 );
  assert property( accu_ctrl_mode_r_flag == 0 || accu_ctrl_mode_PREV_VAL1 == accu_ctrl_mode_PREV_VAL2 );
  assert property( accu_ctrl_ram_sel_0_r_flag == 0 || accu_ctrl_ram_sel_0_PREV_VAL1 == accu_ctrl_ram_sel_0_PREV_VAL2 );
  assert property( accu_ctrl_ram_sel_1_r_flag == 0 || accu_ctrl_ram_sel_1_PREV_VAL1 == accu_ctrl_ram_sel_1_PREV_VAL2 );
  assert property( accu_ctrl_ram_sel_2_r_flag == 0 || accu_ctrl_ram_sel_2_PREV_VAL1 == accu_ctrl_ram_sel_2_PREV_VAL2 );
  assert property( accu_ctrl_ram_sel_3_r_flag == 0 || accu_ctrl_ram_sel_3_PREV_VAL1 == accu_ctrl_ram_sel_3_PREV_VAL2 );
  assert property( accu_ctrl_ram_sel_4_r_flag == 0 || accu_ctrl_ram_sel_4_PREV_VAL1 == accu_ctrl_ram_sel_4_PREV_VAL2 );
  assert property( accu_ctrl_ram_sel_5_r_flag == 0 || accu_ctrl_ram_sel_5_PREV_VAL1 == accu_ctrl_ram_sel_5_PREV_VAL2 );
  assert property( accu_ctrl_ram_sel_6_r_flag == 0 || accu_ctrl_ram_sel_6_PREV_VAL1 == accu_ctrl_ram_sel_6_PREV_VAL2 );
  assert property( accu_ctrl_ram_sel_7_r_flag == 0 || accu_ctrl_ram_sel_7_PREV_VAL1 == accu_ctrl_ram_sel_7_PREV_VAL2 );
  assert property( accu_ctrl_rd_mask_r_flag == 0 || accu_ctrl_rd_mask_PREV_VAL1 == accu_ctrl_rd_mask_PREV_VAL2 );
  assert property( accu_ctrl_stripe_end_r_flag == 0 || accu_ctrl_stripe_end_PREV_VAL1 == accu_ctrl_stripe_end_PREV_VAL2 );
  assert property( accu_ctrl_valid_r_flag == 0 || accu_ctrl_valid_PREV_VAL1 == accu_ctrl_valid_PREV_VAL2 );
  assert property( accu_ctrl_valid_d1_r_flag == 0 || accu_ctrl_valid_d1_PREV_VAL1 == accu_ctrl_valid_d1_PREV_VAL2 );
  assert property( accu_ctrl_valid_d2_r_flag == 0 || accu_ctrl_valid_d2_PREV_VAL1 == accu_ctrl_valid_d2_PREV_VAL2 );
  assert property( accu_layer_end_d1_r_flag == 0 || accu_layer_end_d1_PREV_VAL1 == accu_layer_end_d1_PREV_VAL2 );
  assert property( accu_layer_end_d2_r_flag == 0 || accu_layer_end_d2_PREV_VAL1 == accu_layer_end_d2_PREV_VAL2 );
  assert property( accu_mode_d0_r_flag == 0 || accu_mode_d0_PREV_VAL1 == accu_mode_d0_PREV_VAL2 );
  assert property( accu_mode_d1_r_flag == 0 || accu_mode_d1_PREV_VAL1 == accu_mode_d1_PREV_VAL2 );
  assert property( accu_mode_d2_r_flag == 0 || accu_mode_d2_PREV_VAL1 == accu_mode_d2_PREV_VAL2 );
  assert property( accu_pd_r_flag == 0 || accu_pd_PREV_VAL1 == accu_pd_PREV_VAL2 );
  assert property( accu_ram_sel_0_d0_r_flag == 0 || accu_ram_sel_0_d0_PREV_VAL1 == accu_ram_sel_0_d0_PREV_VAL2 );
  assert property( accu_ram_sel_0_d1_r_flag == 0 || accu_ram_sel_0_d1_PREV_VAL1 == accu_ram_sel_0_d1_PREV_VAL2 );
  assert property( accu_ram_sel_0_d2_r_flag == 0 || accu_ram_sel_0_d2_PREV_VAL1 == accu_ram_sel_0_d2_PREV_VAL2 );
  assert property( accu_ram_sel_1_d0_r_flag == 0 || accu_ram_sel_1_d0_PREV_VAL1 == accu_ram_sel_1_d0_PREV_VAL2 );
  assert property( accu_ram_sel_1_d1_r_flag == 0 || accu_ram_sel_1_d1_PREV_VAL1 == accu_ram_sel_1_d1_PREV_VAL2 );
  assert property( accu_ram_sel_1_d2_r_flag == 0 || accu_ram_sel_1_d2_PREV_VAL1 == accu_ram_sel_1_d2_PREV_VAL2 );
  assert property( accu_ram_sel_2_d0_r_flag == 0 || accu_ram_sel_2_d0_PREV_VAL1 == accu_ram_sel_2_d0_PREV_VAL2 );
  assert property( accu_ram_sel_2_d1_r_flag == 0 || accu_ram_sel_2_d1_PREV_VAL1 == accu_ram_sel_2_d1_PREV_VAL2 );
  assert property( accu_ram_sel_2_d2_r_flag == 0 || accu_ram_sel_2_d2_PREV_VAL1 == accu_ram_sel_2_d2_PREV_VAL2 );
  assert property( accu_ram_sel_3_d0_r_flag == 0 || accu_ram_sel_3_d0_PREV_VAL1 == accu_ram_sel_3_d0_PREV_VAL2 );
  assert property( accu_ram_sel_3_d1_r_flag == 0 || accu_ram_sel_3_d1_PREV_VAL1 == accu_ram_sel_3_d1_PREV_VAL2 );
  assert property( accu_ram_sel_3_d2_r_flag == 0 || accu_ram_sel_3_d2_PREV_VAL1 == accu_ram_sel_3_d2_PREV_VAL2 );
  assert property( accu_ram_sel_4_d0_r_flag == 0 || accu_ram_sel_4_d0_PREV_VAL1 == accu_ram_sel_4_d0_PREV_VAL2 );
  assert property( accu_ram_sel_4_d1_r_flag == 0 || accu_ram_sel_4_d1_PREV_VAL1 == accu_ram_sel_4_d1_PREV_VAL2 );
  assert property( accu_ram_sel_4_d2_r_flag == 0 || accu_ram_sel_4_d2_PREV_VAL1 == accu_ram_sel_4_d2_PREV_VAL2 );
  assert property( accu_ram_sel_5_d0_r_flag == 0 || accu_ram_sel_5_d0_PREV_VAL1 == accu_ram_sel_5_d0_PREV_VAL2 );
  assert property( accu_ram_sel_5_d1_r_flag == 0 || accu_ram_sel_5_d1_PREV_VAL1 == accu_ram_sel_5_d1_PREV_VAL2 );
  assert property( accu_ram_sel_5_d2_r_flag == 0 || accu_ram_sel_5_d2_PREV_VAL1 == accu_ram_sel_5_d2_PREV_VAL2 );
  assert property( accu_ram_sel_6_d0_r_flag == 0 || accu_ram_sel_6_d0_PREV_VAL1 == accu_ram_sel_6_d0_PREV_VAL2 );
  assert property( accu_ram_sel_6_d1_r_flag == 0 || accu_ram_sel_6_d1_PREV_VAL1 == accu_ram_sel_6_d1_PREV_VAL2 );
  assert property( accu_ram_sel_6_d2_r_flag == 0 || accu_ram_sel_6_d2_PREV_VAL1 == accu_ram_sel_6_d2_PREV_VAL2 );
  assert property( accu_ram_sel_7_d0_r_flag == 0 || accu_ram_sel_7_d0_PREV_VAL1 == accu_ram_sel_7_d0_PREV_VAL2 );
  assert property( accu_ram_sel_7_d1_r_flag == 0 || accu_ram_sel_7_d1_PREV_VAL1 == accu_ram_sel_7_d1_PREV_VAL2 );
  assert property( accu_ram_sel_7_d2_r_flag == 0 || accu_ram_sel_7_d2_PREV_VAL1 == accu_ram_sel_7_d2_PREV_VAL2 );
  assert property( accu_ram_valid_d1_r_flag == 0 || accu_ram_valid_d1_PREV_VAL1 == accu_ram_valid_d1_PREV_VAL2 );
  assert property( accu_ram_valid_d2_r_flag == 0 || accu_ram_valid_d2_PREV_VAL1 == accu_ram_valid_d2_PREV_VAL2 );
  assert property( accu_rd_mask_r_flag == 0 || accu_rd_mask_PREV_VAL1 == accu_rd_mask_PREV_VAL2 );
  assert property( accu_rd_mask_d1_r_flag == 0 || accu_rd_mask_d1_PREV_VAL1 == accu_rd_mask_d1_PREV_VAL2 );
  assert property( accu_rd_mask_d2_r_flag == 0 || accu_rd_mask_d2_PREV_VAL1 == accu_rd_mask_d2_PREV_VAL2 );
  assert property( accu_stripe_end_d1_r_flag == 0 || accu_stripe_end_d1_PREV_VAL1 == accu_stripe_end_d1_PREV_VAL2 );
  assert property( accu_stripe_end_d2_r_flag == 0 || accu_stripe_end_d2_PREV_VAL1 == accu_stripe_end_d2_PREV_VAL2 );
  assert property( cfg_in_en_mask_r_flag == 0 || cfg_in_en_mask_PREV_VAL1 == cfg_in_en_mask_PREV_VAL2 );
  assert property( cfg_is_fp_r_flag == 0 || cfg_is_fp_PREV_VAL1 == cfg_is_fp_PREV_VAL2 );
  assert property( cfg_is_int_r_flag == 0 || cfg_is_int_PREV_VAL1 == cfg_is_int_PREV_VAL2 );
  assert property( cfg_is_int8_r_flag == 0 || cfg_is_int8_PREV_VAL1 == cfg_is_int8_PREV_VAL2 );
  assert property( cfg_is_wg_r_flag == 0 || cfg_is_wg_PREV_VAL1 == cfg_is_wg_PREV_VAL2 );
  assert property( cfg_truncate_r_flag == 0 || cfg_truncate_PREV_VAL1 == cfg_truncate_PREV_VAL2 );
  assert property( cfg_winograd_r_flag == 0 || cfg_winograd_PREV_VAL1 == cfg_winograd_PREV_VAL2 );
  assert property( slcg_cell_en_d1_r_flag == 0 || slcg_cell_en_d1_PREV_VAL1 == slcg_cell_en_d1_PREV_VAL2 );
  assert property( slcg_cell_en_d2_r_flag == 0 || slcg_cell_en_d2_PREV_VAL1 == slcg_cell_en_d2_PREV_VAL2 );
  assert property( slcg_cell_en_d3_r_flag == 0 || slcg_cell_en_d3_PREV_VAL1 == slcg_cell_en_d3_PREV_VAL2 );
  assert property( wait_for_op_en_r_flag == 0 || wait_for_op_en_PREV_VAL1 == wait_for_op_en_PREV_VAL2 );
  assert property( \accu_ctrl_ram_valid_reg[0]_r_flag == 0 || \accu_ctrl_ram_valid_reg[0]_PREV_VAL1 == \accu_ctrl_ram_valid_reg[0]_PREV_VAL2 );
  assert property( \accu_valid_reg[0]_r_flag == 0 || \accu_valid_reg[0]_PREV_VAL1 == \accu_valid_reg[0]_PREV_VAL2 );
  assign rst_zy = !nvdla_core_rstn ;
endmodule
