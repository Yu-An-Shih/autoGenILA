module NV_NVDLA_BDMA_cq_flopram_rwsa_20x161(clk, clk_mgated, pwrbus_ram_pd, di, iwe, we, wa, ra, dout);
  wire [160:0] _000_;
  wire [160:0] _001_;
  wire [160:0] _002_;
  wire [160:0] _003_;
  wire [160:0] _004_;
  wire [160:0] _005_;
  wire [160:0] _006_;
  wire [160:0] _007_;
  wire [160:0] _008_;
  wire [160:0] _009_;
  wire [160:0] _010_;
  wire [160:0] _011_;
  wire [160:0] _012_;
  wire [160:0] _013_;
  wire [160:0] _014_;
  wire [160:0] _015_;
  wire [160:0] _016_;
  wire [160:0] _017_;
  wire [160:0] _018_;
  wire [160:0] _019_;
  wire [160:0] _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  input clk;
  input clk_mgated;
  input [160:0] di;
  reg [160:0] di_d;
  output [160:0] dout;
  input iwe;
  input [31:0] pwrbus_ram_pd;
  input [4:0] ra;
  reg [160:0] ram_ff0;
  reg [160:0] ram_ff1;
  reg [160:0] ram_ff10;
  reg [160:0] ram_ff11;
  reg [160:0] ram_ff12;
  reg [160:0] ram_ff13;
  reg [160:0] ram_ff14;
  reg [160:0] ram_ff15;
  reg [160:0] ram_ff16;
  reg [160:0] ram_ff17;
  reg [160:0] ram_ff18;
  reg [160:0] ram_ff19;
  reg [160:0] ram_ff2;
  reg [160:0] ram_ff3;
  reg [160:0] ram_ff4;
  reg [160:0] ram_ff5;
  reg [160:0] ram_ff6;
  reg [160:0] ram_ff7;
  reg [160:0] ram_ff8;
  reg [160:0] ram_ff9;
  input [4:0] wa;
  input we;
  assign _021_ = ! wa;
  assign _022_ = wa == 1'b1;
  assign _023_ = wa == 2'b10;
  assign _024_ = wa == 2'b11;
  assign _025_ = wa == 3'b100;
  assign _026_ = wa == 3'b101;
  assign _027_ = wa == 3'b110;
  assign _028_ = wa == 3'b111;
  assign _029_ = wa == 4'b1000;
  assign _030_ = wa == 4'b1001;
  assign _031_ = wa == 4'b1010;
  assign _032_ = wa == 4'b1011;
  assign _033_ = wa == 4'b1100;
  assign _034_ = wa == 4'b1101;
  assign _035_ = wa == 4'b1110;
  assign _036_ = wa == 4'b1111;
  assign _037_ = wa == 5'b10000;
  assign _038_ = wa == 5'b10001;
  assign _039_ = wa == 5'b10010;
  assign _040_ = wa == 5'b10011;
  assign _041_ = we && _021_;
  assign _042_ = we && _022_;
  assign _043_ = we && _023_;
  assign _044_ = we && _024_;
  assign _045_ = we && _025_;
  assign _046_ = we && _026_;
  assign _047_ = we && _027_;
  assign _048_ = we && _028_;
  assign _049_ = we && _029_;
  assign _050_ = we && _030_;
  assign _051_ = we && _031_;
  assign _052_ = we && _032_;
  assign _053_ = we && _033_;
  assign _054_ = we && _034_;
  assign _055_ = we && _035_;
  assign _056_ = we && _036_;
  assign _057_ = we && _037_;
  assign _058_ = we && _038_;
  assign _059_ = we && _039_;
  assign _060_ = we && _040_;
  always @(posedge clk_mgated)
      ram_ff0 <= _001_;
  always @(posedge clk_mgated)
      ram_ff1 <= _012_;
  always @(posedge clk_mgated)
      ram_ff2 <= _013_;
  always @(posedge clk_mgated)
      ram_ff3 <= _014_;
  always @(posedge clk_mgated)
      ram_ff4 <= _015_;
  always @(posedge clk_mgated)
      ram_ff5 <= _016_;
  always @(posedge clk_mgated)
      ram_ff6 <= _017_;
  always @(posedge clk_mgated)
      ram_ff7 <= _018_;
  always @(posedge clk_mgated)
      ram_ff8 <= _019_;
  always @(posedge clk_mgated)
      ram_ff9 <= _020_;
  always @(posedge clk_mgated)
      ram_ff10 <= _002_;
  always @(posedge clk_mgated)
      ram_ff11 <= _003_;
  always @(posedge clk_mgated)
      ram_ff12 <= _004_;
  always @(posedge clk_mgated)
      ram_ff13 <= _005_;
  always @(posedge clk_mgated)
      ram_ff14 <= _006_;
  always @(posedge clk_mgated)
      ram_ff15 <= _007_;
  always @(posedge clk_mgated)
      ram_ff16 <= _008_;
  always @(posedge clk_mgated)
      ram_ff17 <= _009_;
  always @(posedge clk_mgated)
      ram_ff18 <= _010_;
  always @(posedge clk_mgated)
      ram_ff19 <= _011_;
  always @(posedge clk)
      di_d <= _000_;
  function [160:0] _143_;
    input [160:0] a;
    input [3380:0] b;
    input [20:0] s;
    casez (s)
      21'b????????????????????1:
        _143_ = b[160:0];
      21'b???????????????????1?:
        _143_ = b[321:161];
      21'b??????????????????1??:
        _143_ = b[482:322];
      21'b?????????????????1???:
        _143_ = b[643:483];
      21'b????????????????1????:
        _143_ = b[804:644];
      21'b???????????????1?????:
        _143_ = b[965:805];
      21'b??????????????1??????:
        _143_ = b[1126:966];
      21'b?????????????1???????:
        _143_ = b[1287:1127];
      21'b????????????1????????:
        _143_ = b[1448:1288];
      21'b???????????1?????????:
        _143_ = b[1609:1449];
      21'b??????????1??????????:
        _143_ = b[1770:1610];
      21'b?????????1???????????:
        _143_ = b[1931:1771];
      21'b????????1????????????:
        _143_ = b[2092:1932];
      21'b???????1?????????????:
        _143_ = b[2253:2093];
      21'b??????1??????????????:
        _143_ = b[2414:2254];
      21'b?????1???????????????:
        _143_ = b[2575:2415];
      21'b????1????????????????:
        _143_ = b[2736:2576];
      21'b???1?????????????????:
        _143_ = b[2897:2737];
      21'b??1??????????????????:
        _143_ = b[3058:2898];
      21'b?1???????????????????:
        _143_ = b[3219:3059];
      21'b1????????????????????:
        _143_ = b[3380:3220];
      default:
        _143_ = a;
    endcase
  endfunction
  wire [3380:0] fangyuan0;
  assign fangyuan0 = { ram_ff0, ram_ff1, ram_ff2, ram_ff3, ram_ff4, ram_ff5, ram_ff6, ram_ff7, ram_ff8, ram_ff9, ram_ff10, ram_ff11, ram_ff12, ram_ff13, ram_ff14, ram_ff15, ram_ff16, ram_ff17, ram_ff18, ram_ff19, di_d };
  wire [20:0] fangyuan1;
  assign fangyuan1 = { _081_, _080_, _079_, _078_, _077_, _076_, _075_, _074_, _073_, _072_, _071_, _070_, _069_, _068_, _067_, _066_, _065_, _064_, _063_, _062_, _061_ };

  assign dout = _143_(161'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, fangyuan0, fangyuan1);
  assign _061_ = ra == 5'b10100;
  assign _062_ = ra == 5'b10011;
  assign _063_ = ra == 5'b10010;
  assign _064_ = ra == 5'b10001;
  assign _065_ = ra == 5'b10000;
  assign _066_ = ra == 4'b1111;
  assign _067_ = ra == 4'b1110;
  assign _068_ = ra == 4'b1101;
  assign _069_ = ra == 4'b1100;
  assign _070_ = ra == 4'b1011;
  assign _071_ = ra == 4'b1010;
  assign _072_ = ra == 4'b1001;
  assign _073_ = ra == 4'b1000;
  assign _074_ = ra == 3'b111;
  assign _075_ = ra == 3'b110;
  assign _076_ = ra == 3'b101;
  assign _077_ = ra == 3'b100;
  assign _078_ = ra == 2'b11;
  assign _079_ = ra == 2'b10;
  assign _080_ = ra == 1'b1;
  assign _081_ = ! ra;
  assign _011_ = _060_ ? di_d : ram_ff19;
  assign _010_ = _059_ ? di_d : ram_ff18;
  assign _009_ = _058_ ? di_d : ram_ff17;
  assign _008_ = _057_ ? di_d : ram_ff16;
  assign _007_ = _056_ ? di_d : ram_ff15;
  assign _006_ = _055_ ? di_d : ram_ff14;
  assign _005_ = _054_ ? di_d : ram_ff13;
  assign _004_ = _053_ ? di_d : ram_ff12;
  assign _003_ = _052_ ? di_d : ram_ff11;
  assign _002_ = _051_ ? di_d : ram_ff10;
  assign _020_ = _050_ ? di_d : ram_ff9;
  assign _019_ = _049_ ? di_d : ram_ff8;
  assign _018_ = _048_ ? di_d : ram_ff7;
  assign _017_ = _047_ ? di_d : ram_ff6;
  assign _016_ = _046_ ? di_d : ram_ff5;
  assign _015_ = _045_ ? di_d : ram_ff4;
  assign _014_ = _044_ ? di_d : ram_ff3;
  assign _013_ = _043_ ? di_d : ram_ff2;
  assign _012_ = _042_ ? di_d : ram_ff1;
  assign _001_ = _041_ ? di_d : ram_ff0;
  assign _000_ = iwe ? di : di_d;
endmodule
