module HLS_fp32_to_fp17_core_chn_a_rsci_chn_a_wait_ctrl(nvdla_core_clk, nvdla_core_rstn, chn_a_rsci_oswt, core_wen, chn_a_rsci_iswt0, chn_a_rsci_ld_core_psct, core_wten, chn_a_rsci_biwt, chn_a_rsci_bdwt, chn_a_rsci_ld_core_sct, chn_a_rsci_vd);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  output chn_a_rsci_bdwt;
  output chn_a_rsci_biwt;
  reg chn_a_rsci_icwt;
  input chn_a_rsci_iswt0;
  input chn_a_rsci_ld_core_psct;
  output chn_a_rsci_ld_core_sct;
  wire chn_a_rsci_ogwt;
  input chn_a_rsci_oswt;
  wire chn_a_rsci_pdswt0;
  input chn_a_rsci_vd;
  input core_wen;
  input core_wten;
  input nvdla_core_clk;
  input nvdla_core_rstn;
  assign chn_a_rsci_pdswt0 = _01_ & chn_a_rsci_iswt0;
  assign chn_a_rsci_biwt = chn_a_rsci_ogwt & chn_a_rsci_vd;
  assign chn_a_rsci_bdwt = chn_a_rsci_oswt & core_wen;
  assign chn_a_rsci_ld_core_sct = chn_a_rsci_ld_core_psct & chn_a_rsci_ogwt;
  assign _01_ = ~ core_wten;
  assign _02_ = ~ chn_a_rsci_ogwt;
  assign _00_ = ~ _03_;
  assign chn_a_rsci_ogwt = chn_a_rsci_pdswt0 | chn_a_rsci_icwt;
  assign _03_ = _02_ | chn_a_rsci_biwt;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_a_rsci_icwt <= 1'b0;
    else
      chn_a_rsci_icwt <= _00_;
endmodule
