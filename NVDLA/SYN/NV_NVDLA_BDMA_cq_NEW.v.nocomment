module NV_NVDLA_BDMA_cq(nvdla_core_clk, nvdla_core_rstn, ld2st_wr_prdy, ld2st_wr_idle, ld2st_wr_pvld, ld2st_wr_pd, ld2st_rd_prdy, ld2st_rd_pvld, ld2st_rd_pd, pwrbus_ram_pd);
  wire [4:0] _000_;
  wire [4:0] _001_;
  wire [160:0] _002_;
  wire [4:0] _003_;
  wire [4:0] _004_;
  wire _005_;
  wire [4:0] _006_;
  wire [4:0] _007_;
  wire [4:0] _008_;
  wire [4:0] _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire [4:0] _037_;
  wire [4:0] _038_;
  wire [4:0] _039_;
  reg [4:0] ld2st_rd_adr;
  reg [4:0] ld2st_rd_count_p;
  output [160:0] ld2st_rd_pd;
  reg [160:0] ld2st_rd_pd;
  wire [160:0] ld2st_rd_pd_p;
  input ld2st_rd_prdy;
  output ld2st_rd_pvld;
  reg ld2st_rd_pvld_int;
  wire ld2st_rd_pvld_p;
  reg [4:0] ld2st_wr_adr;
  reg ld2st_wr_busy_int;
  wire ld2st_wr_busy_next;
  reg [4:0] ld2st_wr_count;
  output ld2st_wr_idle;
  wire ld2st_wr_idle_d0;
  input [160:0] ld2st_wr_pd;
  output ld2st_wr_prdy;
  input ld2st_wr_pvld;
  reg ld2st_wr_pvld_in;
  input nvdla_core_clk;
  wire nvdla_core_clk_mgated;
  wire nvdla_core_clk_mgated_enable;
  input nvdla_core_rstn;
  input [31:0] pwrbus_ram_pd;
  wire ram_iwe;
  wire ram_we;
  wire [4:0] rd_adr_next_popping;
  wire [4:0] rd_count_p_next;
  wire [4:0] rd_count_p_next_no_rd_popping;
  wire [4:0] rd_count_p_next_rd_popping;
  wire rd_idle;
  wire rd_popping;
  wire rd_pushing;
  wire rd_req_next;
  wire [4:0] wr_adr_next;
  reg wr_busy_in;
  wire wr_busy_in_int;
  wire wr_busy_in_next;
  wire wr_busy_in_next_wr_req_eq_0;
  wire wr_busy_in_next_wr_req_eq_1;
  wire [4:0] wr_count_next;
  wire wr_count_next_is_20;
  wire [4:0] wr_count_next_no_wr_popping;
  wire wr_count_next_no_wr_popping_is_20;
  wire [4:0] wr_count_next_wr_popping;
  wire [4:0] wr_limit_muxed;
  wire [4:0] wr_limit_reg;
  wire wr_popping;
  wire wr_pushing;
  wire wr_reserving;
  assign _006_ = ld2st_wr_adr + 1'b1;
  assign _007_ = ld2st_rd_adr + 1'b1;
  assign _008_ = ld2st_rd_count_p + 1'b1;
  assign _009_ = ld2st_wr_count + 1'b1;
  assign _010_ = ld2st_wr_adr == 5'b10011;
  assign _011_ = ! ld2st_wr_count;
  assign _012_ = ld2st_rd_adr == 5'b10011;
  assign _013_ = ! ld2st_rd_count_p;
  assign wr_count_next_no_wr_popping_is_20 = wr_count_next_no_wr_popping == 5'b10100;
  assign _014_ = ld2st_wr_count > 1'b0;
  assign ram_we = rd_pushing && _028_;
  assign ram_iwe = ld2st_wr_prdy && ld2st_wr_pvld;
  assign _015_ = ld2st_rd_pvld_int && _022_;
  assign rd_popping = ld2st_rd_pvld_p && _023_;
  assign _016_ = _024_ && _025_;
  assign rd_idle = _016_ && _013_;
  assign _017_ = _026_ && rd_idle;
  assign _018_ = _017_ && _025_;
  assign ld2st_wr_idle = _018_ && _011_;
  assign rd_pushing = ld2st_wr_pvld_in && _027_;
  assign _019_ = ld2st_rd_pvld_int && ld2st_rd_prdy;
  assign _020_ = ld2st_wr_pvld_in && ld2st_wr_busy_next;
  assign wr_busy_in_next_wr_req_eq_0 = _020_ && _025_;
  assign wr_busy_in_int = ld2st_wr_pvld_in && ld2st_wr_busy_int;
  assign _021_ = ! rd_popping;
  assign ld2st_wr_prdy = ! wr_busy_in;
  assign _022_ = ! ld2st_rd_prdy;
  assign _023_ = ! _015_;
  assign _024_ = ! ld2st_rd_pvld_int;
  assign _025_ = ! rd_pushing;
  assign _026_ = ! ld2st_wr_pvld_in;
  assign _027_ = ! ld2st_wr_busy_int;
  assign _028_ = _014_ || _021_;
  assign ld2st_rd_pvld_p = _034_ || rd_pushing;
  assign _029_ = rd_pushing || rd_popping;
  assign rd_req_next = ld2st_rd_pvld_p || _015_;
  assign _030_ = _029_ || rd_pushing;
  assign _031_ = _030_ || _035_;
  assign _032_ = _029_ || _019_;
  assign _033_ = _031_ || _032_;
  assign nvdla_core_clk_mgated_enable = _033_ || rd_pushing;
  assign _034_ = | ld2st_rd_count_p;
  assign _035_ = ld2st_wr_busy_int != ld2st_wr_busy_next;
  always @(posedge nvdla_core_clk_mgated)
      ld2st_rd_pd <= _002_;
  always @(posedge nvdla_core_clk_mgated or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      ld2st_rd_pvld_int <= 1'b0;
    else
      ld2st_rd_pvld_int <= rd_req_next;
  always @(posedge nvdla_core_clk_mgated or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      ld2st_rd_count_p <= 5'b00000;
    else
      ld2st_rd_count_p <= _001_;
  always @(posedge nvdla_core_clk_mgated or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      ld2st_rd_adr <= 5'b00000;
    else
      ld2st_rd_adr <= _000_;
  always @(posedge nvdla_core_clk_mgated or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      ld2st_wr_adr <= 5'b00000;
    else
      ld2st_wr_adr <= _003_;
  always @(posedge nvdla_core_clk_mgated or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      ld2st_wr_busy_int <= 1'b0;
    else
      ld2st_wr_busy_int <= ld2st_wr_busy_next;
  always @(posedge nvdla_core_clk_mgated or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      ld2st_wr_count <= 5'b00000;
    else
      ld2st_wr_count <= _004_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      wr_busy_in <= 1'b0;
    else
      wr_busy_in <= wr_busy_in_next;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      ld2st_wr_pvld_in <= 1'b0;
    else
      ld2st_wr_pvld_in <= _005_;
  assign _002_ = rd_popping ? ld2st_rd_pd_p : ld2st_rd_pd;
  assign _001_ = _029_ ? rd_count_p_next : ld2st_rd_count_p;
  assign _000_ = rd_popping ? rd_adr_next_popping : ld2st_rd_adr;
  assign _003_ = rd_pushing ? wr_adr_next : ld2st_wr_adr;
  assign _004_ = _036_ ? wr_count_next : ld2st_wr_count;
  assign _005_ = wr_busy_in_int ? ld2st_wr_pvld_in : ram_iwe;
  assign _037_ = ld2st_rd_count_p - 1'b1;
  assign _038_ = ld2st_wr_count - 1'b1;
  assign wr_adr_next = _010_ ? 5'b00000 : _006_;
  assign _039_ = _011_ ? 5'b10100 : ld2st_rd_adr;
  assign rd_adr_next_popping = _012_ ? 5'b00000 : _007_;
  assign rd_count_p_next_rd_popping = rd_pushing ? ld2st_rd_count_p : _037_;
  assign rd_count_p_next_no_rd_popping = rd_pushing ? _008_ : ld2st_rd_count_p;
  assign rd_count_p_next = rd_popping ? rd_count_p_next_rd_popping : rd_count_p_next_no_rd_popping;
  assign wr_busy_in_next = ld2st_wr_pvld ? ld2st_wr_busy_next : wr_busy_in_next_wr_req_eq_0;
  assign wr_count_next_wr_popping = rd_pushing ? ld2st_wr_count : _038_;
  assign wr_count_next_no_wr_popping = rd_pushing ? _009_ : ld2st_wr_count;
  assign wr_count_next = rd_popping ? wr_count_next_wr_popping : wr_count_next_no_wr_popping;
  assign ld2st_wr_busy_next = rd_popping ? 1'b0 : wr_count_next_no_wr_popping_is_20;
  assign _036_ = rd_pushing ^ rd_popping;
  NV_CLK_gate_power nvdla_core_clk_mgate (
    .clk(nvdla_core_clk),
    .clk_en(nvdla_core_clk_mgated_enable),
    .clk_gated(nvdla_core_clk_mgated),
    .reset_(nvdla_core_rstn)
  );
  NV_NVDLA_BDMA_cq_flopram_rwsa_20x161 ram (
    .clk(nvdla_core_clk),
    .clk_mgated(nvdla_core_clk_mgated),
    .di(ld2st_wr_pd),
    .dout(ld2st_rd_pd_p),
    .iwe(ram_iwe),
    .pwrbus_ram_pd(pwrbus_ram_pd),
    .ra(_039_),
    .wa(ld2st_wr_adr),
    .we(ram_we)
  );
  assign ld2st_rd_pvld = ld2st_rd_pvld_int;
  assign ld2st_wr_idle_d0 = ld2st_wr_idle;
  assign wr_busy_in_next_wr_req_eq_1 = ld2st_wr_busy_next;
  assign wr_count_next_is_20 = ld2st_wr_busy_next;
  assign wr_limit_muxed = 5'b00000;
  assign wr_limit_reg = 5'b00000;
  assign wr_popping = rd_popping;
  assign wr_pushing = rd_pushing;
  assign wr_reserving = rd_pushing;
endmodule
