module HLS_fp16_to_fp17_core ( chn_a_rsc_vz , chn_a_rsc_z , chn_a_rsci_oswt , chn_o_rsc_vz , chn_o_rsci_oswt , nvdla_core_clk , nvdla_core_rstn , INSTR_IN_ZY , chn_a_rsc_lz_R0 , chn_a_rsc_lz_C0 , chn_a_rsc_lz_X0 , chn_a_rsc_vz_T , chn_a_rsc_vz_S , chn_a_rsc_z_T , chn_a_rsc_z_S , chn_a_rsci_oswt_T , chn_a_rsci_oswt_S , chn_a_rsci_oswt_unreg_R0 , chn_a_rsci_oswt_unreg_C0 , chn_a_rsci_oswt_unreg_X0 , chn_o_rsc_lz_R0 , chn_o_rsc_lz_C0 , chn_o_rsc_lz_X0 , chn_o_rsc_vz_T , chn_o_rsc_vz_S , chn_o_rsc_z_R0 , chn_o_rsc_z_C0 , chn_o_rsc_z_X0 , chn_o_rsci_oswt_T , chn_o_rsci_oswt_S , chn_o_rsci_oswt_unreg_R0 , chn_o_rsci_oswt_unreg_C0 , chn_o_rsci_oswt_unreg_X0 , nvdla_core_clk_T , nvdla_core_clk_S , nvdla_core_rstn_T , nvdla_core_rstn_S , chn_a_rsc_lz , chn_a_rsci_oswt_unreg , chn_o_rsc_lz , chn_o_rsc_z , chn_o_rsci_oswt_unreg , chn_a_rsc_lz_T , chn_a_rsc_lz_S , chn_a_rsc_vz_R , chn_a_rsc_vz_X , chn_a_rsc_vz_C , chn_a_rsc_z_R , chn_a_rsc_z_X , chn_a_rsc_z_C , chn_a_rsci_oswt_R , chn_a_rsci_oswt_X , chn_a_rsci_oswt_C , chn_a_rsci_oswt_unreg_T , chn_a_rsci_oswt_unreg_S , chn_o_rsc_lz_T , chn_o_rsc_lz_S , chn_o_rsc_vz_R , chn_o_rsc_vz_X , chn_o_rsc_vz_C , chn_o_rsc_z_T , chn_o_rsc_z_S , chn_o_rsci_oswt_R , chn_o_rsci_oswt_X , chn_o_rsci_oswt_C , chn_o_rsci_oswt_unreg_T , chn_o_rsci_oswt_unreg_S , nvdla_core_clk_R , nvdla_core_clk_X , nvdla_core_clk_C , nvdla_core_rstn_R , nvdla_core_rstn_X , nvdla_core_rstn_C );
  logic rst_zy;
  integer i;
  input INSTR_IN_ZY;
  logic _000_;
  logic _000__T ;
  logic _000__R ;
  logic _000__C ;
  logic _000__X ;
  logic [13:0] _000__S ;
  logic _001_;
  logic _001__T ;
  logic _001__R ;
  logic _001__C ;
  logic _001__X ;
  logic [13:0] _001__S ;
  logic [3:0] _002_;
  logic [3:0] _002__T ;
  logic [3:0] _002__R ;
  logic [3:0] _002__C ;
  logic [3:0] _002__X ;
  logic [13:0] _002__S ;
  logic _003_;
  logic _003__T ;
  logic _003__R ;
  logic _003__C ;
  logic _003__X ;
  logic [13:0] _003__S ;
  logic _004_;
  logic _004__T ;
  logic _004__R ;
  logic _004__C ;
  logic _004__X ;
  logic [13:0] _004__S ;
  logic _005_;
  logic _005__T ;
  logic _005__R ;
  logic _005__C ;
  logic _005__X ;
  logic [13:0] _005__S ;
  logic [9:0] _006_;
  logic [9:0] _006__T ;
  logic [9:0] _006__R ;
  logic [9:0] _006__C ;
  logic [9:0] _006__X ;
  logic [13:0] _006__S ;
  logic _007_;
  logic _007__T ;
  logic _007__R ;
  logic _007__C ;
  logic _007__X ;
  logic [13:0] _007__S ;
  logic _008_;
  logic _008__T ;
  logic _008__R ;
  logic _008__C ;
  logic _008__X ;
  logic [13:0] _008__S ;
  logic [9:0] _009_;
  logic [9:0] _009__T ;
  logic [9:0] _009__R ;
  logic [9:0] _009__C ;
  logic [9:0] _009__X ;
  logic [13:0] _009__S ;
  logic [3:0] _010_;
  logic [3:0] _010__T ;
  logic [3:0] _010__R ;
  logic [3:0] _010__C ;
  logic [3:0] _010__X ;
  logic [13:0] _010__S ;
  logic _011_;
  logic _011__T ;
  logic _011__R ;
  logic _011__C ;
  logic _011__X ;
  logic [13:0] _011__S ;
  logic _012_;
  logic _012__T ;
  logic _012__R ;
  logic _012__C ;
  logic _012__X ;
  logic [13:0] _012__S ;
  logic _013_;
  logic _013__T ;
  logic _013__R ;
  logic _013__C ;
  logic _013__X ;
  logic [13:0] _013__S ;
  logic _014_;
  logic _014__T ;
  logic _014__R ;
  logic _014__C ;
  logic _014__X ;
  logic [13:0] _014__S ;
  logic _015_;
  logic _015__T ;
  logic _015__R ;
  logic _015__C ;
  logic _015__X ;
  logic [13:0] _015__S ;
  logic _016_;
  logic _016__T ;
  logic _016__R ;
  logic _016__C ;
  logic _016__X ;
  logic [13:0] _016__S ;
  logic _017_;
  logic _017__T ;
  logic _017__R ;
  logic _017__C ;
  logic _017__X ;
  logic [13:0] _017__S ;
  logic _018_;
  logic _018__T ;
  logic _018__R ;
  logic _018__C ;
  logic _018__X ;
  logic [13:0] _018__S ;
  logic _019_;
  logic _019__T ;
  logic _019__R ;
  logic _019__C ;
  logic _019__X ;
  logic [13:0] _019__S ;
  logic _020_;
  logic _020__T ;
  logic _020__R ;
  logic _020__C ;
  logic _020__X ;
  logic [13:0] _020__S ;
  logic _021_;
  logic _021__T ;
  logic _021__R ;
  logic _021__C ;
  logic _021__X ;
  logic [13:0] _021__S ;
  logic _022_;
  logic _022__T ;
  logic _022__R ;
  logic _022__C ;
  logic _022__X ;
  logic [13:0] _022__S ;
  logic _023_;
  logic _023__T ;
  logic _023__R ;
  logic _023__C ;
  logic _023__X ;
  logic [13:0] _023__S ;
  logic _024_;
  logic _024__T ;
  logic _024__R ;
  logic _024__C ;
  logic _024__X ;
  logic [13:0] _024__S ;
  logic _025_;
  logic _025__T ;
  logic _025__R ;
  logic _025__C ;
  logic _025__X ;
  logic [13:0] _025__S ;
  logic _026_;
  logic _026__T ;
  logic _026__R ;
  logic _026__C ;
  logic _026__X ;
  logic [13:0] _026__S ;
  logic _027_;
  logic _027__T ;
  logic _027__R ;
  logic _027__C ;
  logic _027__X ;
  logic [13:0] _027__S ;
  logic _028_;
  logic _028__T ;
  logic _028__R ;
  logic _028__C ;
  logic _028__X ;
  logic [13:0] _028__S ;
  logic _029_;
  logic _029__T ;
  logic _029__R ;
  logic _029__C ;
  logic _029__X ;
  logic [13:0] _029__S ;
  logic [3:0] _030_;
  logic [3:0] _030__T ;
  logic [3:0] _030__R ;
  logic [3:0] _030__C ;
  logic [3:0] _030__X ;
  logic [13:0] _030__S ;
  logic [3:0] _031_;
  logic [3:0] _031__T ;
  logic [3:0] _031__R ;
  logic [3:0] _031__C ;
  logic [3:0] _031__X ;
  logic [13:0] _031__S ;
  logic [3:0] _032_;
  logic [3:0] _032__T ;
  logic [3:0] _032__R ;
  logic [3:0] _032__C ;
  logic [3:0] _032__X ;
  logic [13:0] _032__S ;
  logic _033_;
  logic _033__T ;
  logic _033__R ;
  logic _033__C ;
  logic _033__X ;
  logic [13:0] _033__S ;
  logic _034_;
  logic _034__T ;
  logic _034__R ;
  logic _034__C ;
  logic _034__X ;
  logic [13:0] _034__S ;
  logic _035_;
  logic _035__T ;
  logic _035__R ;
  logic _035__C ;
  logic _035__X ;
  logic [13:0] _035__S ;
  logic _036_;
  logic _036__T ;
  logic _036__R ;
  logic _036__C ;
  logic _036__X ;
  logic [13:0] _036__S ;
  logic _037_;
  logic _037__T ;
  logic _037__R ;
  logic _037__C ;
  logic _037__X ;
  logic [13:0] _037__S ;
  logic [3:0] _038_;
  logic [3:0] _038__T ;
  logic [3:0] _038__R ;
  logic [3:0] _038__C ;
  logic [3:0] _038__X ;
  logic [13:0] _038__S ;
  logic _039_;
  logic _039__T ;
  logic _039__R ;
  logic _039__C ;
  logic _039__X ;
  logic [13:0] _039__S ;
  logic _040_;
  logic _040__T ;
  logic _040__R ;
  logic _040__C ;
  logic _040__X ;
  logic [13:0] _040__S ;
  logic _041_;
  logic _041__T ;
  logic _041__R ;
  logic _041__C ;
  logic _041__X ;
  logic [13:0] _041__S ;
  logic _042_;
  logic _042__T ;
  logic _042__R ;
  logic _042__C ;
  logic _042__X ;
  logic [13:0] _042__S ;
  logic _043_;
  logic _043__T ;
  logic _043__R ;
  logic _043__C ;
  logic _043__X ;
  logic [13:0] _043__S ;
  logic _044_;
  logic _044__T ;
  logic _044__R ;
  logic _044__C ;
  logic _044__X ;
  logic [13:0] _044__S ;
  logic _045_;
  logic _045__T ;
  logic _045__R ;
  logic _045__C ;
  logic _045__X ;
  logic [13:0] _045__S ;
  logic _046_;
  logic _046__T ;
  logic _046__R ;
  logic _046__C ;
  logic _046__X ;
  logic [13:0] _046__S ;
  logic _047_;
  logic _047__T ;
  logic _047__R ;
  logic _047__C ;
  logic _047__X ;
  logic [13:0] _047__S ;
  logic _048_;
  logic _048__T ;
  logic _048__R ;
  logic _048__C ;
  logic _048__X ;
  logic [13:0] _048__S ;
  logic _049_;
  logic _049__T ;
  logic _049__R ;
  logic _049__C ;
  logic _049__X ;
  logic [13:0] _049__S ;
  logic _050_;
  logic _050__T ;
  logic _050__R ;
  logic _050__C ;
  logic _050__X ;
  logic [13:0] _050__S ;
  logic _051_;
  logic _051__T ;
  logic _051__R ;
  logic _051__C ;
  logic _051__X ;
  logic [13:0] _051__S ;
  logic _052_;
  logic _052__T ;
  logic _052__R ;
  logic _052__C ;
  logic _052__X ;
  logic [13:0] _052__S ;
  logic _053_;
  logic _053__T ;
  logic _053__R ;
  logic _053__C ;
  logic _053__X ;
  logic [13:0] _053__S ;
  logic _054_;
  logic _054__T ;
  logic _054__R ;
  logic _054__C ;
  logic _054__X ;
  logic [13:0] _054__S ;
  logic _055_;
  logic _055__T ;
  logic _055__R ;
  logic _055__C ;
  logic _055__X ;
  logic [13:0] _055__S ;
  logic _056_;
  logic _056__T ;
  logic _056__R ;
  logic _056__C ;
  logic _056__X ;
  logic [13:0] _056__S ;
  logic _057_;
  logic _057__T ;
  logic _057__R ;
  logic _057__C ;
  logic _057__X ;
  logic [13:0] _057__S ;
  logic _058_;
  logic _058__T ;
  logic _058__R ;
  logic _058__C ;
  logic _058__X ;
  logic [13:0] _058__S ;
  logic _059_;
  logic _059__T ;
  logic _059__R ;
  logic _059__C ;
  logic _059__X ;
  logic [13:0] _059__S ;
  logic _060_;
  logic _060__T ;
  logic _060__R ;
  logic _060__C ;
  logic _060__X ;
  logic [13:0] _060__S ;
  logic _061_;
  logic _061__T ;
  logic _061__R ;
  logic _061__C ;
  logic _061__X ;
  logic [13:0] _061__S ;
  logic [3:0] _062_;
  logic [3:0] _062__T ;
  logic [3:0] _062__R ;
  logic [3:0] _062__C ;
  logic [3:0] _062__X ;
  logic [13:0] _062__S ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_T ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_R ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_C ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_X ;
  logic [13:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_S ;
  logic [3:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl;
  logic [3:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_T ;
  logic [3:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_R ;
  logic [3:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_C ;
  logic [3:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_X ;
  logic [13:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_S ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_T ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_R ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_C ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_X ;
  logic [13:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_S ;
  logic [9:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl;
  logic [9:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_T ;
  logic [9:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_R ;
  logic [9:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_C ;
  logic [9:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_X ;
  logic [13:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_S ;
  logic [4:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva;
  logic [4:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_T ;
  logic [4:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_R ;
  logic [4:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_C ;
  logic [4:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_X ;
  logic [13:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_S ;
  logic [9:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm;
  logic [9:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_T ;
  logic [9:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_R ;
  logic [9:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_C ;
  logic [9:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_X ;
  logic [13:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_S ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_T ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_R ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_C ;
  logic FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_X ;
  logic [13:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_S ;
  logic IsDenorm_5U_10U_land_lpi_1_dfm;
  logic IsDenorm_5U_10U_land_lpi_1_dfm_T ;
  logic IsDenorm_5U_10U_land_lpi_1_dfm_R ;
  logic IsDenorm_5U_10U_land_lpi_1_dfm_C ;
  logic IsDenorm_5U_10U_land_lpi_1_dfm_X ;
  logic [13:0] IsDenorm_5U_10U_land_lpi_1_dfm_S ;
  logic IsDenorm_5U_10U_or_tmp;
  logic IsDenorm_5U_10U_or_tmp_T ;
  logic IsDenorm_5U_10U_or_tmp_R ;
  logic IsDenorm_5U_10U_or_tmp_C ;
  logic IsDenorm_5U_10U_or_tmp_X ;
  logic [13:0] IsDenorm_5U_10U_or_tmp_S ;
  logic IsInf_5U_10U_IsInf_5U_10U_and_cse_sva;
  logic IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_T ;
  logic IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_R ;
  logic IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_C ;
  logic IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_X ;
  logic [13:0] IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_S ;
  logic IsInf_5U_10U_land_lpi_1_dfm;
  logic IsInf_5U_10U_land_lpi_1_dfm_T ;
  logic IsInf_5U_10U_land_lpi_1_dfm_R ;
  logic IsInf_5U_10U_land_lpi_1_dfm_C ;
  logic IsInf_5U_10U_land_lpi_1_dfm_X ;
  logic [13:0] IsInf_5U_10U_land_lpi_1_dfm_S ;
  logic IsNaN_5U_10U_land_lpi_1_dfm;
  logic IsNaN_5U_10U_land_lpi_1_dfm_T ;
  logic IsNaN_5U_10U_land_lpi_1_dfm_R ;
  logic IsNaN_5U_10U_land_lpi_1_dfm_C ;
  logic IsNaN_5U_10U_land_lpi_1_dfm_X ;
  logic [13:0] IsNaN_5U_10U_land_lpi_1_dfm_S ;
  logic IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva;
  logic IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_T ;
  logic IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_R ;
  logic IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_C ;
  logic IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_X ;
  logic [13:0] IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_S ;
  logic and_38_cse;
  logic and_38_cse_T ;
  logic and_38_cse_R ;
  logic and_38_cse_C ;
  logic and_38_cse_X ;
  logic [13:0] and_38_cse_S ;
  logic and_4_mdf;
  logic and_4_mdf_T ;
  logic and_4_mdf_R ;
  logic and_4_mdf_C ;
  logic and_4_mdf_X ;
  logic [13:0] and_4_mdf_S ;
  logic and_6_cse;
  logic and_6_cse_T ;
  logic and_6_cse_R ;
  logic and_6_cse_C ;
  logic and_6_cse_X ;
  logic [13:0] and_6_cse_S ;
  logic and_dcpl_13;
  logic and_dcpl_13_T ;
  logic and_dcpl_13_R ;
  logic and_dcpl_13_C ;
  logic and_dcpl_13_X ;
  logic [13:0] and_dcpl_13_S ;
  logic and_dcpl_19;
  logic and_dcpl_19_T ;
  logic and_dcpl_19_R ;
  logic and_dcpl_19_C ;
  logic and_dcpl_19_X ;
  logic [13:0] and_dcpl_19_S ;
  logic and_dcpl_2;
  logic and_dcpl_2_T ;
  logic and_dcpl_2_R ;
  logic and_dcpl_2_C ;
  logic and_dcpl_2_X ;
  logic [13:0] and_dcpl_2_S ;
  logic and_dcpl_8;
  logic and_dcpl_8_T ;
  logic and_dcpl_8_R ;
  logic and_dcpl_8_C ;
  logic and_dcpl_8_X ;
  logic [13:0] and_dcpl_8_S ;
  logic and_dcpl_9;
  logic and_dcpl_9_T ;
  logic and_dcpl_9_R ;
  logic and_dcpl_9_C ;
  logic and_dcpl_9_X ;
  logic [13:0] and_dcpl_9_S ;
  output chn_a_rsc_lz;
  logic chn_a_rsc_lz ;
  output chn_a_rsc_lz_T ;
  logic chn_a_rsc_lz_T ;
  logic chn_a_rsc_lz_R ;
  logic chn_a_rsc_lz_C ;
  logic chn_a_rsc_lz_X ;
  logic [13:0] chn_a_rsc_lz_S ;
  input chn_a_rsc_lz_R0 ;
  input chn_a_rsc_lz_C0 ;
  input chn_a_rsc_lz_X0 ;
  output [13:0] chn_a_rsc_lz_S ;
  input chn_a_rsc_vz;
  input chn_a_rsc_vz_T ;
  input [13:0] chn_a_rsc_vz_S ;
  output chn_a_rsc_vz_R ;
  output chn_a_rsc_vz_X ;
  output chn_a_rsc_vz_C ;
  input [15:0] chn_a_rsc_z;
  input [15:0] chn_a_rsc_z_T ;
  input [13:0] chn_a_rsc_z_S ;
  output [15:0] chn_a_rsc_z_R ;
  output [15:0] chn_a_rsc_z_X ;
  output [15:0] chn_a_rsc_z_C ;
  logic chn_a_rsci_bawt;
  logic chn_a_rsci_bawt_T ;
  logic chn_a_rsci_bawt_R ;
  logic chn_a_rsci_bawt_C ;
  logic chn_a_rsci_bawt_X ;
  logic [13:0] chn_a_rsci_bawt_S ;
  logic [15:0] chn_a_rsci_d_mxwt;
  logic [15:0] chn_a_rsci_d_mxwt_T ;
  logic [15:0] chn_a_rsci_d_mxwt_R ;
  logic [15:0] chn_a_rsci_d_mxwt_C ;
  logic [15:0] chn_a_rsci_d_mxwt_X ;
  logic [13:0] chn_a_rsci_d_mxwt_S ;
  logic chn_a_rsci_iswt0;
  logic  chn_a_rsci_iswt0_T ;
  logic  chn_a_rsci_iswt0_PREV_VAL1 ;
  logic  chn_a_rsci_iswt0_PREV_VAL2 ;
  logic  chn_a_rsci_iswt0_R ;
  logic  chn_a_rsci_iswt0_X ;
  logic  chn_a_rsci_iswt0_C ;
  logic [13:0] chn_a_rsci_iswt0_S ;
  logic chn_a_rsci_iswt0_t_flag ;
  logic chn_a_rsci_iswt0_r_flag ;
  assign chn_a_rsci_iswt0_S = 381 ;
  logic chn_a_rsci_ld_core_psct;
  logic  chn_a_rsci_ld_core_psct_T ;
  logic  chn_a_rsci_ld_core_psct_PREV_VAL1 ;
  logic  chn_a_rsci_ld_core_psct_PREV_VAL2 ;
  logic  chn_a_rsci_ld_core_psct_R ;
  logic  chn_a_rsci_ld_core_psct_X ;
  logic  chn_a_rsci_ld_core_psct_C ;
  logic [13:0] chn_a_rsci_ld_core_psct_S ;
  logic chn_a_rsci_ld_core_psct_t_flag ;
  logic chn_a_rsci_ld_core_psct_r_flag ;
  assign chn_a_rsci_ld_core_psct_S = 382 ;
  logic chn_a_rsci_ld_core_psct_mx0c0;
  logic chn_a_rsci_ld_core_psct_mx0c0_T ;
  logic chn_a_rsci_ld_core_psct_mx0c0_R ;
  logic chn_a_rsci_ld_core_psct_mx0c0_C ;
  logic chn_a_rsci_ld_core_psct_mx0c0_X ;
  logic [13:0] chn_a_rsci_ld_core_psct_mx0c0_S ;
  input chn_a_rsci_oswt;
  input chn_a_rsci_oswt_T ;
  input [13:0] chn_a_rsci_oswt_S ;
  output chn_a_rsci_oswt_R ;
  output chn_a_rsci_oswt_X ;
  output chn_a_rsci_oswt_C ;
  output chn_a_rsci_oswt_unreg;
  logic chn_a_rsci_oswt_unreg ;
  output chn_a_rsci_oswt_unreg_T ;
  logic chn_a_rsci_oswt_unreg_T ;
  logic chn_a_rsci_oswt_unreg_R ;
  logic chn_a_rsci_oswt_unreg_C ;
  logic chn_a_rsci_oswt_unreg_X ;
  logic [13:0] chn_a_rsci_oswt_unreg_S ;
  input chn_a_rsci_oswt_unreg_R0 ;
  input chn_a_rsci_oswt_unreg_C0 ;
  input chn_a_rsci_oswt_unreg_X0 ;
  output [13:0] chn_a_rsci_oswt_unreg_S ;
  logic chn_a_rsci_wen_comp;
  logic chn_a_rsci_wen_comp_T ;
  logic chn_a_rsci_wen_comp_R ;
  logic chn_a_rsci_wen_comp_C ;
  logic chn_a_rsci_wen_comp_X ;
  logic [13:0] chn_a_rsci_wen_comp_S ;
  logic chn_o_and_1_cse;
  logic chn_o_and_1_cse_T ;
  logic chn_o_and_1_cse_R ;
  logic chn_o_and_1_cse_C ;
  logic chn_o_and_1_cse_X ;
  logic [13:0] chn_o_and_1_cse_S ;
  output chn_o_rsc_lz;
  logic chn_o_rsc_lz ;
  output chn_o_rsc_lz_T ;
  logic chn_o_rsc_lz_T ;
  logic chn_o_rsc_lz_R ;
  logic chn_o_rsc_lz_C ;
  logic chn_o_rsc_lz_X ;
  logic [13:0] chn_o_rsc_lz_S ;
  input chn_o_rsc_lz_R0 ;
  input chn_o_rsc_lz_C0 ;
  input chn_o_rsc_lz_X0 ;
  output [13:0] chn_o_rsc_lz_S ;
  input chn_o_rsc_vz;
  input chn_o_rsc_vz_T ;
  input [13:0] chn_o_rsc_vz_S ;
  output chn_o_rsc_vz_R ;
  output chn_o_rsc_vz_X ;
  output chn_o_rsc_vz_C ;
  output [16:0] chn_o_rsc_z;
  logic [16:0] chn_o_rsc_z ;
  output [16:0] chn_o_rsc_z_T ;
  logic [16:0] chn_o_rsc_z_T ;
  logic [16:0] chn_o_rsc_z_R ;
  logic [16:0] chn_o_rsc_z_C ;
  logic [16:0] chn_o_rsc_z_X ;
  logic [13:0] chn_o_rsc_z_S ;
  input [16:0] chn_o_rsc_z_R0 ;
  input [16:0] chn_o_rsc_z_C0 ;
  input [16:0] chn_o_rsc_z_X0 ;
  output [13:0] chn_o_rsc_z_S ;
  logic chn_o_rsci_bawt;
  logic chn_o_rsci_bawt_T ;
  logic chn_o_rsci_bawt_R ;
  logic chn_o_rsci_bawt_C ;
  logic chn_o_rsci_bawt_X ;
  logic [13:0] chn_o_rsci_bawt_S ;
  logic [3:0] chn_o_rsci_d_13_10;
  logic [3:0]  chn_o_rsci_d_13_10_T ;
  logic [3:0]  chn_o_rsci_d_13_10_PREV_VAL1 ;
  logic [3:0]  chn_o_rsci_d_13_10_PREV_VAL2 ;
  logic [3:0]  chn_o_rsci_d_13_10_R ;
  logic [3:0]  chn_o_rsci_d_13_10_X ;
  logic [3:0]  chn_o_rsci_d_13_10_C ;
  logic [13:0] chn_o_rsci_d_13_10_S ;
  logic chn_o_rsci_d_13_10_t_flag ;
  logic chn_o_rsci_d_13_10_r_flag ;
  assign chn_o_rsci_d_13_10_S = 383 ;
  logic chn_o_rsci_d_14;
  logic  chn_o_rsci_d_14_T ;
  logic  chn_o_rsci_d_14_PREV_VAL1 ;
  logic  chn_o_rsci_d_14_PREV_VAL2 ;
  logic  chn_o_rsci_d_14_R ;
  logic  chn_o_rsci_d_14_X ;
  logic  chn_o_rsci_d_14_C ;
  logic [13:0] chn_o_rsci_d_14_S ;
  logic chn_o_rsci_d_14_t_flag ;
  logic chn_o_rsci_d_14_r_flag ;
  assign chn_o_rsci_d_14_S = 384 ;
  logic chn_o_rsci_d_15;
  logic  chn_o_rsci_d_15_T ;
  logic  chn_o_rsci_d_15_PREV_VAL1 ;
  logic  chn_o_rsci_d_15_PREV_VAL2 ;
  logic  chn_o_rsci_d_15_R ;
  logic  chn_o_rsci_d_15_X ;
  logic  chn_o_rsci_d_15_C ;
  logic [13:0] chn_o_rsci_d_15_S ;
  logic chn_o_rsci_d_15_t_flag ;
  logic chn_o_rsci_d_15_r_flag ;
  assign chn_o_rsci_d_15_S = 385 ;
  logic chn_o_rsci_d_16;
  logic  chn_o_rsci_d_16_T ;
  logic  chn_o_rsci_d_16_PREV_VAL1 ;
  logic  chn_o_rsci_d_16_PREV_VAL2 ;
  logic  chn_o_rsci_d_16_R ;
  logic  chn_o_rsci_d_16_X ;
  logic  chn_o_rsci_d_16_C ;
  logic [13:0] chn_o_rsci_d_16_S ;
  logic chn_o_rsci_d_16_t_flag ;
  logic chn_o_rsci_d_16_r_flag ;
  assign chn_o_rsci_d_16_S = 386 ;
  logic [9:0] chn_o_rsci_d_9_0;
  logic [9:0]  chn_o_rsci_d_9_0_T ;
  logic [9:0]  chn_o_rsci_d_9_0_PREV_VAL1 ;
  logic [9:0]  chn_o_rsci_d_9_0_PREV_VAL2 ;
  logic [9:0]  chn_o_rsci_d_9_0_R ;
  logic [9:0]  chn_o_rsci_d_9_0_X ;
  logic [9:0]  chn_o_rsci_d_9_0_C ;
  logic [13:0] chn_o_rsci_d_9_0_S ;
  logic chn_o_rsci_d_9_0_t_flag ;
  logic chn_o_rsci_d_9_0_r_flag ;
  assign chn_o_rsci_d_9_0_S = 387 ;
  logic chn_o_rsci_d_9_0_mx0c1;
  logic chn_o_rsci_d_9_0_mx0c1_T ;
  logic chn_o_rsci_d_9_0_mx0c1_R ;
  logic chn_o_rsci_d_9_0_mx0c1_C ;
  logic chn_o_rsci_d_9_0_mx0c1_X ;
  logic [13:0] chn_o_rsci_d_9_0_mx0c1_S ;
  input chn_o_rsci_oswt;
  input chn_o_rsci_oswt_T ;
  input [13:0] chn_o_rsci_oswt_S ;
  output chn_o_rsci_oswt_R ;
  output chn_o_rsci_oswt_X ;
  output chn_o_rsci_oswt_C ;
  output chn_o_rsci_oswt_unreg;
  logic chn_o_rsci_oswt_unreg ;
  output chn_o_rsci_oswt_unreg_T ;
  logic chn_o_rsci_oswt_unreg_T ;
  logic chn_o_rsci_oswt_unreg_R ;
  logic chn_o_rsci_oswt_unreg_C ;
  logic chn_o_rsci_oswt_unreg_X ;
  logic [13:0] chn_o_rsci_oswt_unreg_S ;
  input chn_o_rsci_oswt_unreg_R0 ;
  input chn_o_rsci_oswt_unreg_C0 ;
  input chn_o_rsci_oswt_unreg_X0 ;
  output [13:0] chn_o_rsci_oswt_unreg_S ;
  logic chn_o_rsci_wen_comp;
  logic chn_o_rsci_wen_comp_T ;
  logic chn_o_rsci_wen_comp_R ;
  logic chn_o_rsci_wen_comp_C ;
  logic chn_o_rsci_wen_comp_X ;
  logic [13:0] chn_o_rsci_wen_comp_S ;
  logic core_wen;
  logic core_wen_T ;
  logic core_wen_R ;
  logic core_wen_C ;
  logic core_wen_X ;
  logic [13:0] core_wen_S ;
  logic core_wten;
  logic core_wten_T ;
  logic core_wten_R ;
  logic core_wten_C ;
  logic core_wten_X ;
  logic [13:0] core_wten_S ;
  logic [1:0] fsm_output;
  logic [1:0] fsm_output_T ;
  logic [1:0] fsm_output_R ;
  logic [1:0] fsm_output_C ;
  logic [1:0] fsm_output_X ;
  logic [13:0] fsm_output_S ;
  logic [3:0] libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1;
  logic [3:0] libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1_T ;
  logic [3:0] libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1_R ;
  logic [3:0] libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1_C ;
  logic [3:0] libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1_X ;
  logic [13:0] libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1_S ;
  logic [5:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva;
  logic [5:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_T ;
  logic [5:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_R ;
  logic [5:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_C ;
  logic [5:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_X ;
  logic [13:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_S ;
  logic [8:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_a;
  logic [8:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_a_T ;
  logic [8:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_a_R ;
  logic [8:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_a_C ;
  logic [8:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_a_X ;
  logic [13:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_a_S ;
  logic [4:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s;
  logic [4:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s_T ;
  logic [4:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s_R ;
  logic [4:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s_C ;
  logic [4:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s_X ;
  logic [13:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s_S ;
  logic [16:0] nl_HLS_fp16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d;
  logic [16:0] nl_HLS_fp16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_T ;
  logic [16:0] nl_HLS_fp16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_R ;
  logic [16:0] nl_HLS_fp16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_C ;
  logic [16:0] nl_HLS_fp16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_X ;
  logic [13:0] nl_HLS_fp16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_S ;
  logic [9:0] nl_leading_sign_10_0_rg_mantissa;
  logic [9:0] nl_leading_sign_10_0_rg_mantissa_T ;
  logic [9:0] nl_leading_sign_10_0_rg_mantissa_R ;
  logic [9:0] nl_leading_sign_10_0_rg_mantissa_C ;
  logic [9:0] nl_leading_sign_10_0_rg_mantissa_X ;
  logic [13:0] nl_leading_sign_10_0_rg_mantissa_S ;
  input nvdla_core_clk;
  input nvdla_core_clk_T ;
  input [13:0] nvdla_core_clk_S ;
  output nvdla_core_clk_R ;
  output nvdla_core_clk_X ;
  output nvdla_core_clk_C ;
  input nvdla_core_rstn;
  input nvdla_core_rstn_T ;
  input [13:0] nvdla_core_rstn_S ;
  output nvdla_core_rstn_R ;
  output nvdla_core_rstn_X ;
  output nvdla_core_rstn_C ;
  logic or_cse;
  logic or_cse_T ;
  logic or_cse_R ;
  logic or_cse_C ;
  logic or_cse_X ;
  logic [13:0] or_cse_S ;
  logic or_dcpl_8;
  logic or_dcpl_8_T ;
  logic or_dcpl_8_R ;
  logic or_dcpl_8_C ;
  logic or_dcpl_8_X ;
  logic [13:0] or_dcpl_8_S ;
  logic reg_chn_o_rsci_iswt0_cse;
  logic  reg_chn_o_rsci_iswt0_cse_T ;
  logic  reg_chn_o_rsci_iswt0_cse_PREV_VAL1 ;
  logic  reg_chn_o_rsci_iswt0_cse_PREV_VAL2 ;
  logic  reg_chn_o_rsci_iswt0_cse_R ;
  logic  reg_chn_o_rsci_iswt0_cse_X ;
  logic  reg_chn_o_rsci_iswt0_cse_C ;
  logic [13:0] reg_chn_o_rsci_iswt0_cse_S ;
  logic reg_chn_o_rsci_iswt0_cse_t_flag ;
  logic reg_chn_o_rsci_iswt0_cse_r_flag ;
  assign reg_chn_o_rsci_iswt0_cse_S = 388 ;
  logic reg_chn_o_rsci_ld_core_psct_cse;
  logic  reg_chn_o_rsci_ld_core_psct_cse_T ;
  logic  reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL1 ;
  logic  reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL2 ;
  logic  reg_chn_o_rsci_ld_core_psct_cse_R ;
  logic  reg_chn_o_rsci_ld_core_psct_cse_X ;
  logic  reg_chn_o_rsci_ld_core_psct_cse_C ;
  logic [13:0] reg_chn_o_rsci_ld_core_psct_cse_S ;
  logic reg_chn_o_rsci_ld_core_psct_cse_t_flag ;
  logic reg_chn_o_rsci_ld_core_psct_cse_r_flag ;
  assign reg_chn_o_rsci_ld_core_psct_cse_S = 389 ;
  assign nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s = libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1 + 1'b1;
  assign nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s_S = 0 ;
  logic [3:0] libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1_C0 ;
  logic [3:0] libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1_R0 ;
  logic [3:0] libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1_X0 ;
  assign nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s_T = libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1_T ;
  assign libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1_C0 = nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s_C ;
  assign libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1_R0 = nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s_R ;
  assign libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1_X0 = nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s_X ;
  logic [4:0] fangyuan0;
  logic [4:0] fangyuan0_T ;
  logic [4:0] fangyuan0_R ;
  logic [4:0] fangyuan0_C ;
  logic [4:0] fangyuan0_X ;
  assign fangyuan0 = { 1'b1, _038_ };
  assign fangyuan0_T = {  1'h0 , _038__T  };
  logic [13:0] fangyuan0_S ;
  assign fangyuan0_S = 0 ;
  logic [3:0] _038__R0 ;
  logic [3:0] _038__X0 ;
  logic [3:0] _038__C0 ;
  assign _038__R0 = fangyuan0_R [3:0] ;
  assign _038__X0 = fangyuan0_X [3:0] ;
  assign _038__C0 = fangyuan0_C [3:0] ;

  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva = fangyuan0 + 5'b10001;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_S = 0 ;
  logic [4:0] fangyuan0_C0 ;
  logic [4:0] fangyuan0_R0 ;
  logic [4:0] fangyuan0_X0 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_T = fangyuan0_T ;
  assign fangyuan0_C0 = FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_C ;
  assign fangyuan0_R0 = FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_R ;
  assign fangyuan0_X0 = FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_X ;
  assign and_6_cse = and_4_mdf & fsm_output[1];
  assign and_6_cse_S = 0 ;
  logic [0:0] and_4_mdf_C0 ;
  logic [0:0] and_4_mdf_R0 ;
  logic [0:0] and_4_mdf_X0 ;
  logic [1:0] fsm_output_C0 ;
  logic [1:0] fsm_output_R0 ;
  logic [1:0] fsm_output_X0 ;
  assign and_6_cse_T = and_4_mdf_T | fsm_output_T [1] ;
  assign and_4_mdf_C0 = and_6_cse_C ;
  assign and_4_mdf_X0 = and_6_cse_X ;
  assign fsm_output_C0 [1] = and_6_cse_C ;
  assign fsm_output_X0 [1] = and_6_cse_X ;
  assign and_4_mdf_R0 = ( and_6_cse_R | and_6_cse_C & fsm_output_T [1] ) & { 1{ fsm_output[1] != 0 }} ;
  assign fsm_output_R0 [1] = ( and_6_cse_R | and_6_cse_C & and_4_mdf_T ) & { 1{ and_4_mdf != 0 }} ;
  assign chn_o_and_1_cse = core_wen & _037_;
  assign chn_o_and_1_cse_S = 0 ;
  logic [0:0] core_wen_C0 ;
  logic [0:0] core_wen_R0 ;
  logic [0:0] core_wen_X0 ;
  logic [0:0] _037__C0 ;
  logic [0:0] _037__R0 ;
  logic [0:0] _037__X0 ;
  assign chn_o_and_1_cse_T = core_wen_T | _037__T ;
  assign core_wen_C0 = chn_o_and_1_cse_C ;
  assign core_wen_X0 = chn_o_and_1_cse_X ;
  assign _037__C0 = chn_o_and_1_cse_C ;
  assign _037__X0 = chn_o_and_1_cse_X ;
  assign core_wen_R0 = ( chn_o_and_1_cse_R | chn_o_and_1_cse_C & _037__T ) & { 1{ _037_ != 0 }} ;
  assign _037__R0 = ( chn_o_and_1_cse_R | chn_o_and_1_cse_C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign IsNaN_5U_10U_land_lpi_1_dfm = IsDenorm_5U_10U_or_tmp & IsInf_5U_10U_IsInf_5U_10U_and_cse_sva;
  assign IsNaN_5U_10U_land_lpi_1_dfm_S = 0 ;
  logic [0:0] IsDenorm_5U_10U_or_tmp_C0 ;
  logic [0:0] IsDenorm_5U_10U_or_tmp_R0 ;
  logic [0:0] IsDenorm_5U_10U_or_tmp_X0 ;
  logic [0:0] IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_C0 ;
  logic [0:0] IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_R0 ;
  logic [0:0] IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_X0 ;
  assign IsNaN_5U_10U_land_lpi_1_dfm_T = IsDenorm_5U_10U_or_tmp_T | IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_T ;
  assign IsDenorm_5U_10U_or_tmp_C0 = IsNaN_5U_10U_land_lpi_1_dfm_C ;
  assign IsDenorm_5U_10U_or_tmp_X0 = IsNaN_5U_10U_land_lpi_1_dfm_X ;
  assign IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_C0 = IsNaN_5U_10U_land_lpi_1_dfm_C ;
  assign IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_X0 = IsNaN_5U_10U_land_lpi_1_dfm_X ;
  assign IsDenorm_5U_10U_or_tmp_R0 = ( IsNaN_5U_10U_land_lpi_1_dfm_R | IsNaN_5U_10U_land_lpi_1_dfm_C & IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_T ) & { 1{ IsInf_5U_10U_IsInf_5U_10U_and_cse_sva != 0 }} ;
  assign IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_R0 = ( IsNaN_5U_10U_land_lpi_1_dfm_R | IsNaN_5U_10U_land_lpi_1_dfm_C & IsDenorm_5U_10U_or_tmp_T ) & { 1{ IsDenorm_5U_10U_or_tmp != 0 }} ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm = IsDenorm_5U_10U_or_tmp & IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_S = 0 ;
  logic [0:0] IsDenorm_5U_10U_or_tmp_C1 ;
  logic [0:0] IsDenorm_5U_10U_or_tmp_R1 ;
  logic [0:0] IsDenorm_5U_10U_or_tmp_X1 ;
  logic [0:0] IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_C0 ;
  logic [0:0] IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_R0 ;
  logic [0:0] IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_X0 ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_T = IsDenorm_5U_10U_or_tmp_T | IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_T ;
  assign IsDenorm_5U_10U_or_tmp_C1 = IsDenorm_5U_10U_land_lpi_1_dfm_C ;
  assign IsDenorm_5U_10U_or_tmp_X1 = IsDenorm_5U_10U_land_lpi_1_dfm_X ;
  assign IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_C0 = IsDenorm_5U_10U_land_lpi_1_dfm_C ;
  assign IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_X0 = IsDenorm_5U_10U_land_lpi_1_dfm_X ;
  assign IsDenorm_5U_10U_or_tmp_R1 = ( IsDenorm_5U_10U_land_lpi_1_dfm_R | IsDenorm_5U_10U_land_lpi_1_dfm_C & IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_T ) & { 1{ IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva != 0 }} ;
  assign IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_R0 = ( IsDenorm_5U_10U_land_lpi_1_dfm_R | IsDenorm_5U_10U_land_lpi_1_dfm_C & IsDenorm_5U_10U_or_tmp_T ) & { 1{ IsDenorm_5U_10U_or_tmp != 0 }} ;
  assign and_4_mdf = chn_a_rsci_bawt & or_cse;
  assign and_4_mdf_S = 0 ;
  logic [0:0] chn_a_rsci_bawt_C0 ;
  logic [0:0] chn_a_rsci_bawt_R0 ;
  logic [0:0] chn_a_rsci_bawt_X0 ;
  logic [0:0] or_cse_C0 ;
  logic [0:0] or_cse_R0 ;
  logic [0:0] or_cse_X0 ;
  assign and_4_mdf_T = chn_a_rsci_bawt_T | or_cse_T ;
  assign chn_a_rsci_bawt_C0 = and_4_mdf_C ;
  assign chn_a_rsci_bawt_X0 = and_4_mdf_X ;
  assign or_cse_C0 = and_4_mdf_C ;
  assign or_cse_X0 = and_4_mdf_X ;
  assign chn_a_rsci_bawt_R0 = ( and_4_mdf_R | and_4_mdf_C & or_cse_T ) & { 1{ or_cse != 0 }} ;
  assign or_cse_R0 = ( and_4_mdf_R | and_4_mdf_C & chn_a_rsci_bawt_T ) & { 1{ chn_a_rsci_bawt != 0 }} ;
  assign and_dcpl_2 = chn_o_rsci_bawt & reg_chn_o_rsci_ld_core_psct_cse;
  assign and_dcpl_2_S = 0 ;
  logic [0:0] chn_o_rsci_bawt_C0 ;
  logic [0:0] chn_o_rsci_bawt_R0 ;
  logic [0:0] chn_o_rsci_bawt_X0 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C0 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R0 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X0 ;
  assign and_dcpl_2_T = chn_o_rsci_bawt_T | reg_chn_o_rsci_ld_core_psct_cse_T ;
  assign chn_o_rsci_bawt_C0 = and_dcpl_2_C ;
  assign chn_o_rsci_bawt_X0 = and_dcpl_2_X ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C0 = and_dcpl_2_C ;
  assign reg_chn_o_rsci_ld_core_psct_cse_X0 = and_dcpl_2_X ;
  assign chn_o_rsci_bawt_R0 = ( and_dcpl_2_R | and_dcpl_2_C & reg_chn_o_rsci_ld_core_psct_cse_T ) & { 1{ reg_chn_o_rsci_ld_core_psct_cse != 0 }} ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R0 = ( and_dcpl_2_R | and_dcpl_2_C & chn_o_rsci_bawt_T ) & { 1{ chn_o_rsci_bawt != 0 }} ;
  assign and_dcpl_8 = _033_ & IsDenorm_5U_10U_or_tmp;
  assign and_dcpl_8_S = 0 ;
  logic [0:0] _033__C0 ;
  logic [0:0] _033__R0 ;
  logic [0:0] _033__X0 ;
  logic [0:0] IsDenorm_5U_10U_or_tmp_C2 ;
  logic [0:0] IsDenorm_5U_10U_or_tmp_R2 ;
  logic [0:0] IsDenorm_5U_10U_or_tmp_X2 ;
  assign and_dcpl_8_T = _033__T | IsDenorm_5U_10U_or_tmp_T ;
  assign _033__C0 = and_dcpl_8_C ;
  assign _033__X0 = and_dcpl_8_X ;
  assign IsDenorm_5U_10U_or_tmp_C2 = and_dcpl_8_C ;
  assign IsDenorm_5U_10U_or_tmp_X2 = and_dcpl_8_X ;
  assign _033__R0 = ( and_dcpl_8_R | and_dcpl_8_C & IsDenorm_5U_10U_or_tmp_T ) & { 1{ IsDenorm_5U_10U_or_tmp != 0 }} ;
  assign IsDenorm_5U_10U_or_tmp_R2 = ( and_dcpl_8_R | and_dcpl_8_C & _033__T ) & { 1{ _033_ != 0 }} ;
  assign and_dcpl_13 = and_dcpl_2 & chn_a_rsci_bawt;
  assign and_dcpl_13_S = 0 ;
  logic [0:0] and_dcpl_2_C0 ;
  logic [0:0] and_dcpl_2_R0 ;
  logic [0:0] and_dcpl_2_X0 ;
  logic [0:0] chn_a_rsci_bawt_C1 ;
  logic [0:0] chn_a_rsci_bawt_R1 ;
  logic [0:0] chn_a_rsci_bawt_X1 ;
  assign and_dcpl_13_T = and_dcpl_2_T | chn_a_rsci_bawt_T ;
  assign and_dcpl_2_C0 = and_dcpl_13_C ;
  assign and_dcpl_2_X0 = and_dcpl_13_X ;
  assign chn_a_rsci_bawt_C1 = and_dcpl_13_C ;
  assign chn_a_rsci_bawt_X1 = and_dcpl_13_X ;
  assign and_dcpl_2_R0 = ( and_dcpl_13_R | and_dcpl_13_C & chn_a_rsci_bawt_T ) & { 1{ chn_a_rsci_bawt != 0 }} ;
  assign chn_a_rsci_bawt_R1 = ( and_dcpl_13_R | and_dcpl_13_C & and_dcpl_2_T ) & { 1{ and_dcpl_2 != 0 }} ;
  assign _011_ = _034_ & IsDenorm_5U_10U_or_tmp;
  assign _011__S = 0 ;
  logic [0:0] _034__C0 ;
  logic [0:0] _034__R0 ;
  logic [0:0] _034__X0 ;
  logic [0:0] IsDenorm_5U_10U_or_tmp_C3 ;
  logic [0:0] IsDenorm_5U_10U_or_tmp_R3 ;
  logic [0:0] IsDenorm_5U_10U_or_tmp_X3 ;
  assign _011__T = _034__T | IsDenorm_5U_10U_or_tmp_T ;
  assign _034__C0 = _011__C ;
  assign _034__X0 = _011__X ;
  assign IsDenorm_5U_10U_or_tmp_C3 = _011__C ;
  assign IsDenorm_5U_10U_or_tmp_X3 = _011__X ;
  assign _034__R0 = ( _011__R | _011__C & IsDenorm_5U_10U_or_tmp_T ) & { 1{ IsDenorm_5U_10U_or_tmp != 0 }} ;
  assign IsDenorm_5U_10U_or_tmp_R3 = ( _011__R | _011__C & _034__T ) & { 1{ _034_ != 0 }} ;
  assign and_dcpl_19 = and_dcpl_2 & _042_;
  assign and_dcpl_19_S = 0 ;
  logic [0:0] and_dcpl_2_C1 ;
  logic [0:0] and_dcpl_2_R1 ;
  logic [0:0] and_dcpl_2_X1 ;
  logic [0:0] _042__C0 ;
  logic [0:0] _042__R0 ;
  logic [0:0] _042__X0 ;
  assign and_dcpl_19_T = and_dcpl_2_T | _042__T ;
  assign and_dcpl_2_C1 = and_dcpl_19_C ;
  assign and_dcpl_2_X1 = and_dcpl_19_X ;
  assign _042__C0 = and_dcpl_19_C ;
  assign _042__X0 = and_dcpl_19_X ;
  assign and_dcpl_2_R1 = ( and_dcpl_19_R | and_dcpl_19_C & _042__T ) & { 1{ _042_ != 0 }} ;
  assign _042__R0 = ( and_dcpl_19_R | and_dcpl_19_C & and_dcpl_2_T ) & { 1{ and_dcpl_2 != 0 }} ;
  assign _012_ = _043_ & reg_chn_o_rsci_ld_core_psct_cse;
  assign _012__S = 0 ;
  logic [0:0] _043__C0 ;
  logic [0:0] _043__R0 ;
  logic [0:0] _043__X0 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C1 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R1 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X1 ;
  assign _012__T = _043__T | reg_chn_o_rsci_ld_core_psct_cse_T ;
  assign _043__C0 = _012__C ;
  assign _043__X0 = _012__X ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C1 = _012__C ;
  assign reg_chn_o_rsci_ld_core_psct_cse_X1 = _012__X ;
  assign _043__R0 = ( _012__R | _012__C & reg_chn_o_rsci_ld_core_psct_cse_T ) & { 1{ reg_chn_o_rsci_ld_core_psct_cse != 0 }} ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R1 = ( _012__R | _012__C & _043__T ) & { 1{ _043_ != 0 }} ;
  assign _013_ = _044_ & chn_a_rsci_bawt;
  assign _013__S = 0 ;
  logic [0:0] _044__C0 ;
  logic [0:0] _044__R0 ;
  logic [0:0] _044__X0 ;
  logic [0:0] chn_a_rsci_bawt_C2 ;
  logic [0:0] chn_a_rsci_bawt_R2 ;
  logic [0:0] chn_a_rsci_bawt_X2 ;
  assign _013__T = _044__T | chn_a_rsci_bawt_T ;
  assign _044__C0 = _013__C ;
  assign _044__X0 = _013__X ;
  assign chn_a_rsci_bawt_C2 = _013__C ;
  assign chn_a_rsci_bawt_X2 = _013__X ;
  assign _044__R0 = ( _013__R | _013__C & chn_a_rsci_bawt_T ) & { 1{ chn_a_rsci_bawt != 0 }} ;
  assign chn_a_rsci_bawt_R2 = ( _013__R | _013__C & _044__T ) & { 1{ _044_ != 0 }} ;
  assign _014_ = or_dcpl_8 & or_cse;
  assign _014__S = 0 ;
  logic [0:0] or_dcpl_8_C0 ;
  logic [0:0] or_dcpl_8_R0 ;
  logic [0:0] or_dcpl_8_X0 ;
  logic [0:0] or_cse_C1 ;
  logic [0:0] or_cse_R1 ;
  logic [0:0] or_cse_X1 ;
  assign _014__T = or_dcpl_8_T | or_cse_T ;
  assign or_dcpl_8_C0 = _014__C ;
  assign or_dcpl_8_X0 = _014__X ;
  assign or_cse_C1 = _014__C ;
  assign or_cse_X1 = _014__X ;
  assign or_dcpl_8_R0 = ( _014__R | _014__C & or_cse_T ) & { 1{ or_cse != 0 }} ;
  assign or_cse_R1 = ( _014__R | _014__C & or_dcpl_8_T ) & { 1{ or_dcpl_8 != 0 }} ;
  assign _015_ = _014_ & chn_a_rsci_bawt;
  assign _015__S = 0 ;
  logic [0:0] _014__C0 ;
  logic [0:0] _014__R0 ;
  logic [0:0] _014__X0 ;
  logic [0:0] chn_a_rsci_bawt_C3 ;
  logic [0:0] chn_a_rsci_bawt_R3 ;
  logic [0:0] chn_a_rsci_bawt_X3 ;
  assign _015__T = _014__T | chn_a_rsci_bawt_T ;
  assign _014__C0 = _015__C ;
  assign _014__X0 = _015__X ;
  assign chn_a_rsci_bawt_C3 = _015__C ;
  assign chn_a_rsci_bawt_X3 = _015__X ;
  assign _014__R0 = ( _015__R | _015__C & chn_a_rsci_bawt_T ) & { 1{ chn_a_rsci_bawt != 0 }} ;
  assign chn_a_rsci_bawt_R3 = ( _015__R | _015__C & _014__T ) & { 1{ _014_ != 0 }} ;
  assign _016_ = _015_ & fsm_output[1];
  assign _016__S = 0 ;
  assign { fsm_output_R0 [0] } = 0;
  assign { fsm_output_X0 [0] } = 0;
  assign { fsm_output_C0 [0] } = 0;
  logic [0:0] _015__C0 ;
  logic [0:0] _015__R0 ;
  logic [0:0] _015__X0 ;
  logic [1:0] fsm_output_C1 ;
  logic [1:0] fsm_output_R1 ;
  logic [1:0] fsm_output_X1 ;
  assign _016__T = _015__T | fsm_output_T [1] ;
  assign _015__C0 = _016__C ;
  assign _015__X0 = _016__X ;
  assign fsm_output_C1 [1] = _016__C ;
  assign fsm_output_X1 [1] = _016__X ;
  assign _015__R0 = ( _016__R | _016__C & fsm_output_T [1] ) & { 1{ fsm_output[1] != 0 }} ;
  assign fsm_output_R1 [1] = ( _016__R | _016__C & _015__T ) & { 1{ _015_ != 0 }} ;
  assign _017_ = or_dcpl_8 & and_dcpl_13;
  assign _017__S = 0 ;
  logic [0:0] or_dcpl_8_C1 ;
  logic [0:0] or_dcpl_8_R1 ;
  logic [0:0] or_dcpl_8_X1 ;
  logic [0:0] and_dcpl_13_C0 ;
  logic [0:0] and_dcpl_13_R0 ;
  logic [0:0] and_dcpl_13_X0 ;
  assign _017__T = or_dcpl_8_T | and_dcpl_13_T ;
  assign or_dcpl_8_C1 = _017__C ;
  assign or_dcpl_8_X1 = _017__X ;
  assign and_dcpl_13_C0 = _017__C ;
  assign and_dcpl_13_X0 = _017__X ;
  assign or_dcpl_8_R1 = ( _017__R | _017__C & and_dcpl_13_T ) & { 1{ and_dcpl_13 != 0 }} ;
  assign and_dcpl_13_R0 = ( _017__R | _017__C & or_dcpl_8_T ) & { 1{ or_dcpl_8 != 0 }} ;
  assign _018_ = _045_ & fsm_output[1];
  assign _018__S = 0 ;
  assign { fsm_output_R1 [0] } = 0;
  assign { fsm_output_X1 [0] } = 0;
  assign { fsm_output_C1 [0] } = 0;
  logic [0:0] _045__C0 ;
  logic [0:0] _045__R0 ;
  logic [0:0] _045__X0 ;
  logic [1:0] fsm_output_C2 ;
  logic [1:0] fsm_output_R2 ;
  logic [1:0] fsm_output_X2 ;
  assign _018__T = _045__T | fsm_output_T [1] ;
  assign _045__C0 = _018__C ;
  assign _045__X0 = _018__X ;
  assign fsm_output_C2 [1] = _018__C ;
  assign fsm_output_X2 [1] = _018__X ;
  assign _045__R0 = ( _018__R | _018__C & fsm_output_T [1] ) & { 1{ fsm_output[1] != 0 }} ;
  assign fsm_output_R2 [1] = ( _018__R | _018__C & _045__T ) & { 1{ _045_ != 0 }} ;
  assign _019_ = core_wen & chn_a_rsci_ld_core_psct_mx0c0;
  assign _019__S = 0 ;
  logic [0:0] core_wen_C1 ;
  logic [0:0] core_wen_R1 ;
  logic [0:0] core_wen_X1 ;
  logic [0:0] chn_a_rsci_ld_core_psct_mx0c0_C0 ;
  logic [0:0] chn_a_rsci_ld_core_psct_mx0c0_R0 ;
  logic [0:0] chn_a_rsci_ld_core_psct_mx0c0_X0 ;
  assign _019__T = core_wen_T | chn_a_rsci_ld_core_psct_mx0c0_T ;
  assign core_wen_C1 = _019__C ;
  assign core_wen_X1 = _019__X ;
  assign chn_a_rsci_ld_core_psct_mx0c0_C0 = _019__C ;
  assign chn_a_rsci_ld_core_psct_mx0c0_X0 = _019__X ;
  assign core_wen_R1 = ( _019__R | _019__C & chn_a_rsci_ld_core_psct_mx0c0_T ) & { 1{ chn_a_rsci_ld_core_psct_mx0c0 != 0 }} ;
  assign chn_a_rsci_ld_core_psct_mx0c0_R0 = ( _019__R | _019__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _020_ = _047_ & fsm_output[0];
  assign _020__S = 0 ;
  logic [0:0] _047__C0 ;
  logic [0:0] _047__R0 ;
  logic [0:0] _047__X0 ;
  assign _020__T = _047__T | fsm_output_T [0] ;
  assign _047__C0 = _020__C ;
  assign _047__X0 = _020__X ;
  assign fsm_output_C2 [0] = _020__C ;
  assign fsm_output_X2 [0] = _020__X ;
  assign _047__R0 = ( _020__R | _020__C & fsm_output_T [0] ) & { 1{ fsm_output[0] != 0 }} ;
  assign fsm_output_R2 [0] = ( _020__R | _020__C & _047__T ) & { 1{ _047_ != 0 }} ;
  assign _021_ = core_wen & _048_;
  assign _021__S = 0 ;
  logic [0:0] core_wen_C2 ;
  logic [0:0] core_wen_R2 ;
  logic [0:0] core_wen_X2 ;
  logic [0:0] _048__C0 ;
  logic [0:0] _048__R0 ;
  logic [0:0] _048__X0 ;
  assign _021__T = core_wen_T | _048__T ;
  assign core_wen_C2 = _021__C ;
  assign core_wen_X2 = _021__X ;
  assign _048__C0 = _021__C ;
  assign _048__X0 = _021__X ;
  assign core_wen_R2 = ( _021__R | _021__C & _048__T ) & { 1{ _048_ != 0 }} ;
  assign _048__R0 = ( _021__R | _021__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _022_ = and_4_mdf & and_dcpl_9;
  assign _022__S = 0 ;
  logic [0:0] and_4_mdf_C1 ;
  logic [0:0] and_4_mdf_R1 ;
  logic [0:0] and_4_mdf_X1 ;
  logic [0:0] and_dcpl_9_C0 ;
  logic [0:0] and_dcpl_9_R0 ;
  logic [0:0] and_dcpl_9_X0 ;
  assign _022__T = and_4_mdf_T | and_dcpl_9_T ;
  assign and_4_mdf_C1 = _022__C ;
  assign and_4_mdf_X1 = _022__X ;
  assign and_dcpl_9_C0 = _022__C ;
  assign and_dcpl_9_X0 = _022__X ;
  assign and_4_mdf_R1 = ( _022__R | _022__C & and_dcpl_9_T ) & { 1{ and_dcpl_9 != 0 }} ;
  assign and_dcpl_9_R0 = ( _022__R | _022__C & and_4_mdf_T ) & { 1{ and_4_mdf != 0 }} ;
  assign _023_ = _022_ & and_dcpl_8;
  assign _023__S = 0 ;
  logic [0:0] _022__C0 ;
  logic [0:0] _022__R0 ;
  logic [0:0] _022__X0 ;
  logic [0:0] and_dcpl_8_C0 ;
  logic [0:0] and_dcpl_8_R0 ;
  logic [0:0] and_dcpl_8_X0 ;
  assign _023__T = _022__T | and_dcpl_8_T ;
  assign _022__C0 = _023__C ;
  assign _022__X0 = _023__X ;
  assign and_dcpl_8_C0 = _023__C ;
  assign and_dcpl_8_X0 = _023__X ;
  assign _022__R0 = ( _023__R | _023__C & and_dcpl_8_T ) & { 1{ and_dcpl_8 != 0 }} ;
  assign and_dcpl_8_R0 = ( _023__R | _023__C & _022__T ) & { 1{ _022_ != 0 }} ;
  assign _024_ = _023_ & fsm_output[1];
  assign _024__S = 0 ;
  logic [0:0] _023__C0 ;
  logic [0:0] _023__R0 ;
  logic [0:0] _023__X0 ;
  logic [1:0] fsm_output_C3 ;
  logic [1:0] fsm_output_R3 ;
  logic [1:0] fsm_output_X3 ;
  assign _024__T = _023__T | fsm_output_T [1] ;
  assign _023__C0 = _024__C ;
  assign _023__X0 = _024__X ;
  assign fsm_output_C3 [1] = _024__C ;
  assign fsm_output_X3 [1] = _024__X ;
  assign _023__R0 = ( _024__R | _024__C & fsm_output_T [1] ) & { 1{ fsm_output[1] != 0 }} ;
  assign fsm_output_R3 [1] = ( _024__R | _024__C & _023__T ) & { 1{ _023_ != 0 }} ;
  assign _025_ = and_dcpl_13 & and_dcpl_9;
  assign _025__S = 0 ;
  logic [0:0] and_dcpl_13_C1 ;
  logic [0:0] and_dcpl_13_R1 ;
  logic [0:0] and_dcpl_13_X1 ;
  logic [0:0] and_dcpl_9_C1 ;
  logic [0:0] and_dcpl_9_R1 ;
  logic [0:0] and_dcpl_9_X1 ;
  assign _025__T = and_dcpl_13_T | and_dcpl_9_T ;
  assign and_dcpl_13_C1 = _025__C ;
  assign and_dcpl_13_X1 = _025__X ;
  assign and_dcpl_9_C1 = _025__C ;
  assign and_dcpl_9_X1 = _025__X ;
  assign and_dcpl_13_R1 = ( _025__R | _025__C & and_dcpl_9_T ) & { 1{ and_dcpl_9 != 0 }} ;
  assign and_dcpl_9_R1 = ( _025__R | _025__C & and_dcpl_13_T ) & { 1{ and_dcpl_13 != 0 }} ;
  assign _026_ = _025_ & and_dcpl_8;
  assign _026__S = 0 ;
  logic [0:0] _025__C0 ;
  logic [0:0] _025__R0 ;
  logic [0:0] _025__X0 ;
  logic [0:0] and_dcpl_8_C1 ;
  logic [0:0] and_dcpl_8_R1 ;
  logic [0:0] and_dcpl_8_X1 ;
  assign _026__T = _025__T | and_dcpl_8_T ;
  assign _025__C0 = _026__C ;
  assign _025__X0 = _026__X ;
  assign and_dcpl_8_C1 = _026__C ;
  assign and_dcpl_8_X1 = _026__X ;
  assign _025__R0 = ( _026__R | _026__C & and_dcpl_8_T ) & { 1{ and_dcpl_8 != 0 }} ;
  assign and_dcpl_8_R1 = ( _026__R | _026__C & _025__T ) & { 1{ _025_ != 0 }} ;
  assign _027_ = core_wen & _058_;
  assign _027__S = 0 ;
  logic [0:0] core_wen_C3 ;
  logic [0:0] core_wen_R3 ;
  logic [0:0] core_wen_X3 ;
  logic [0:0] _058__C0 ;
  logic [0:0] _058__R0 ;
  logic [0:0] _058__X0 ;
  assign _027__T = core_wen_T | _058__T ;
  assign core_wen_C3 = _027__C ;
  assign core_wen_X3 = _027__X ;
  assign _058__C0 = _027__C ;
  assign _058__X0 = _027__X ;
  assign core_wen_R3 = ( _027__R | _027__C & _058__T ) & { 1{ _058_ != 0 }} ;
  assign _058__R0 = ( _027__R | _027__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _028_ = core_wen & _059_;
  assign _028__S = 0 ;
  logic [0:0] core_wen_C4 ;
  logic [0:0] core_wen_R4 ;
  logic [0:0] core_wen_X4 ;
  logic [0:0] _059__C0 ;
  logic [0:0] _059__R0 ;
  logic [0:0] _059__X0 ;
  assign _028__T = core_wen_T | _059__T ;
  assign core_wen_C4 = _028__C ;
  assign core_wen_X4 = _028__X ;
  assign _059__C0 = _028__C ;
  assign _059__X0 = _028__X ;
  assign core_wen_R4 = ( _028__R | _028__C & _059__T ) & { 1{ _059_ != 0 }} ;
  assign _059__R0 = ( _028__R | _028__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _029_ = _051_ & chn_o_rsci_d_9_0_mx0c1;
  assign _029__S = 0 ;
  logic [0:0] _051__C0 ;
  logic [0:0] _051__R0 ;
  logic [0:0] _051__X0 ;
  logic [0:0] chn_o_rsci_d_9_0_mx0c1_C0 ;
  logic [0:0] chn_o_rsci_d_9_0_mx0c1_R0 ;
  logic [0:0] chn_o_rsci_d_9_0_mx0c1_X0 ;
  assign _029__T = _051__T | chn_o_rsci_d_9_0_mx0c1_T ;
  assign _051__C0 = _029__C ;
  assign _051__X0 = _029__X ;
  assign chn_o_rsci_d_9_0_mx0c1_C0 = _029__C ;
  assign chn_o_rsci_d_9_0_mx0c1_X0 = _029__X ;
  assign _051__R0 = ( _029__R | _029__C & chn_o_rsci_d_9_0_mx0c1_T ) & { 1{ chn_o_rsci_d_9_0_mx0c1 != 0 }} ;
  assign chn_o_rsci_d_9_0_mx0c1_R0 = ( _029__R | _029__C & _051__T ) & { 1{ _051_ != 0 }} ;
  logic [3:0] fangyuan1;
  logic [3:0] fangyuan1_T ;
  logic [3:0] fangyuan1_R ;
  logic [3:0] fangyuan1_C ;
  logic [3:0] fangyuan1_X ;
  assign fangyuan1 = { IsInf_5U_10U_land_lpi_1_dfm, IsInf_5U_10U_land_lpi_1_dfm, IsInf_5U_10U_land_lpi_1_dfm, IsInf_5U_10U_land_lpi_1_dfm };
  assign fangyuan1_T = {  IsInf_5U_10U_land_lpi_1_dfm_T , IsInf_5U_10U_land_lpi_1_dfm_T , IsInf_5U_10U_land_lpi_1_dfm_T , IsInf_5U_10U_land_lpi_1_dfm_T  };
  logic [13:0] fangyuan1_S ;
  assign fangyuan1_S = 0 ;
  logic [0:0] IsInf_5U_10U_land_lpi_1_dfm_R0 ;
  logic [0:0] IsInf_5U_10U_land_lpi_1_dfm_X0 ;
  logic [0:0] IsInf_5U_10U_land_lpi_1_dfm_C0 ;
  assign IsInf_5U_10U_land_lpi_1_dfm_R0 = fangyuan1_R [3:3] ;
  assign IsInf_5U_10U_land_lpi_1_dfm_X0 = fangyuan1_X [3:3] ;
  assign IsInf_5U_10U_land_lpi_1_dfm_C0 = fangyuan1_C [3:3] ;
  logic [0:0] IsInf_5U_10U_land_lpi_1_dfm_R1 ;
  logic [0:0] IsInf_5U_10U_land_lpi_1_dfm_X1 ;
  logic [0:0] IsInf_5U_10U_land_lpi_1_dfm_C1 ;
  assign IsInf_5U_10U_land_lpi_1_dfm_R1 = fangyuan1_R [2:2] ;
  assign IsInf_5U_10U_land_lpi_1_dfm_X1 = fangyuan1_X [2:2] ;
  assign IsInf_5U_10U_land_lpi_1_dfm_C1 = fangyuan1_C [2:2] ;
  logic [0:0] IsInf_5U_10U_land_lpi_1_dfm_R2 ;
  logic [0:0] IsInf_5U_10U_land_lpi_1_dfm_X2 ;
  logic [0:0] IsInf_5U_10U_land_lpi_1_dfm_C2 ;
  assign IsInf_5U_10U_land_lpi_1_dfm_R2 = fangyuan1_R [1:1] ;
  assign IsInf_5U_10U_land_lpi_1_dfm_X2 = fangyuan1_X [1:1] ;
  assign IsInf_5U_10U_land_lpi_1_dfm_C2 = fangyuan1_C [1:1] ;
  logic [0:0] IsInf_5U_10U_land_lpi_1_dfm_R3 ;
  logic [0:0] IsInf_5U_10U_land_lpi_1_dfm_X3 ;
  logic [0:0] IsInf_5U_10U_land_lpi_1_dfm_C3 ;
  assign IsInf_5U_10U_land_lpi_1_dfm_R3 = fangyuan1_R [0:0] ;
  assign IsInf_5U_10U_land_lpi_1_dfm_X3 = fangyuan1_X [0:0] ;
  assign IsInf_5U_10U_land_lpi_1_dfm_C3 = fangyuan1_C [0:0] ;

  assign _030_ = 4'b1110 & fangyuan1;
  assign _030__S = 0 ;
  logic [3:0] fangyuan1_C0 ;
  logic [3:0] fangyuan1_R0 ;
  logic [3:0] fangyuan1_X0 ;
  assign _030__T = fangyuan1_T ;
  assign fangyuan1_C0 = _030__C ;
  assign fangyuan1_R0 = _030__R ;
  assign fangyuan1_X0 = _030__X ;
  logic [3:0] fangyuan2;
  logic [3:0] fangyuan2_T ;
  logic [3:0] fangyuan2_R ;
  logic [3:0] fangyuan2_C ;
  logic [3:0] fangyuan2_X ;
  assign fangyuan2 = { IsDenorm_5U_10U_land_lpi_1_dfm, IsDenorm_5U_10U_land_lpi_1_dfm, IsDenorm_5U_10U_land_lpi_1_dfm, IsDenorm_5U_10U_land_lpi_1_dfm };
  assign fangyuan2_T = {  IsDenorm_5U_10U_land_lpi_1_dfm_T , IsDenorm_5U_10U_land_lpi_1_dfm_T , IsDenorm_5U_10U_land_lpi_1_dfm_T , IsDenorm_5U_10U_land_lpi_1_dfm_T  };
  logic [13:0] fangyuan2_S ;
  assign fangyuan2_S = 0 ;
  logic [0:0] IsDenorm_5U_10U_land_lpi_1_dfm_R0 ;
  logic [0:0] IsDenorm_5U_10U_land_lpi_1_dfm_X0 ;
  logic [0:0] IsDenorm_5U_10U_land_lpi_1_dfm_C0 ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_R0 = fangyuan2_R [3:3] ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_X0 = fangyuan2_X [3:3] ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_C0 = fangyuan2_C [3:3] ;
  logic [0:0] IsDenorm_5U_10U_land_lpi_1_dfm_R1 ;
  logic [0:0] IsDenorm_5U_10U_land_lpi_1_dfm_X1 ;
  logic [0:0] IsDenorm_5U_10U_land_lpi_1_dfm_C1 ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_R1 = fangyuan2_R [2:2] ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_X1 = fangyuan2_X [2:2] ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_C1 = fangyuan2_C [2:2] ;
  logic [0:0] IsDenorm_5U_10U_land_lpi_1_dfm_R2 ;
  logic [0:0] IsDenorm_5U_10U_land_lpi_1_dfm_X2 ;
  logic [0:0] IsDenorm_5U_10U_land_lpi_1_dfm_C2 ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_R2 = fangyuan2_R [1:1] ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_X2 = fangyuan2_X [1:1] ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_C2 = fangyuan2_C [1:1] ;
  logic [0:0] IsDenorm_5U_10U_land_lpi_1_dfm_R3 ;
  logic [0:0] IsDenorm_5U_10U_land_lpi_1_dfm_X3 ;
  logic [0:0] IsDenorm_5U_10U_land_lpi_1_dfm_C3 ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_R3 = fangyuan2_R [0:0] ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_X3 = fangyuan2_X [0:0] ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_C3 = fangyuan2_C [0:0] ;

  assign _031_ = FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva[3:0] & fangyuan2;
  assign _031__S = 0 ;
  logic [4:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_C0 ;
  logic [4:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_R0 ;
  logic [4:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_X0 ;
  logic [3:0] fangyuan2_C0 ;
  logic [3:0] fangyuan2_R0 ;
  logic [3:0] fangyuan2_X0 ;
  assign _031__T = FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_T [3:0] | fangyuan2_T ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_C0 [3:0] = _031__C ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_X0 [3:0] = _031__X ;
  assign fangyuan2_C0 = _031__C ;
  assign fangyuan2_X0 = _031__X ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_R0 [3:0] = ( _031__R | _031__C & fangyuan2_T ) & { 4{ fangyuan2 != 0 }} ;
  assign fangyuan2_R0 = ( _031__R | _031__C & FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_T [3:0] ) & { 4{ FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva[3:0] != 0 }} ;
  logic [3:0] fangyuan3;
  logic [3:0] fangyuan3_T ;
  logic [3:0] fangyuan3_R ;
  logic [3:0] fangyuan3_C ;
  logic [3:0] fangyuan3_X ;
  assign fangyuan3 = { FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse, FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse, FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse, FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse };
  assign fangyuan3_T = {  FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_T , FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_T , FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_T , FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_T  };
  logic [13:0] fangyuan3_S ;
  assign fangyuan3_S = 0 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_R0 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_X0 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_C0 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_R0 = fangyuan3_R [3:3] ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_X0 = fangyuan3_X [3:3] ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_C0 = fangyuan3_C [3:3] ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_R1 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_X1 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_C1 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_R1 = fangyuan3_R [2:2] ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_X1 = fangyuan3_X [2:2] ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_C1 = fangyuan3_C [2:2] ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_R2 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_X2 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_C2 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_R2 = fangyuan3_R [1:1] ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_X2 = fangyuan3_X [1:1] ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_C2 = fangyuan3_C [1:1] ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_R3 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_X3 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_C3 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_R3 = fangyuan3_R [0:0] ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_X3 = fangyuan3_X [0:0] ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_C3 = fangyuan3_C [0:0] ;

  assign _032_ = chn_a_rsci_d_mxwt[13:10] & fangyuan3;
  assign _032__S = 0 ;
  logic [15:0] chn_a_rsci_d_mxwt_C0 ;
  logic [15:0] chn_a_rsci_d_mxwt_R0 ;
  logic [15:0] chn_a_rsci_d_mxwt_X0 ;
  logic [3:0] fangyuan3_C0 ;
  logic [3:0] fangyuan3_R0 ;
  logic [3:0] fangyuan3_X0 ;
  assign _032__T = chn_a_rsci_d_mxwt_T [13:10] | fangyuan3_T ;
  assign chn_a_rsci_d_mxwt_C0 [13:10] = _032__C ;
  assign chn_a_rsci_d_mxwt_X0 [13:10] = _032__X ;
  assign fangyuan3_C0 = _032__C ;
  assign fangyuan3_X0 = _032__X ;
  assign chn_a_rsci_d_mxwt_R0 [13:10] = ( _032__R | _032__C & fangyuan3_T ) & { 4{ fangyuan3 != 0 }} ;
  assign fangyuan3_R0 = ( _032__R | _032__C & chn_a_rsci_d_mxwt_T [13:10] ) & { 4{ chn_a_rsci_d_mxwt[13:10] != 0 }} ;
  assign IsInf_5U_10U_IsInf_5U_10U_and_cse_sva = chn_a_rsci_d_mxwt[14:10] == 5'b11111;
  assign IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_S = 0 ;
  assign { chn_a_rsci_d_mxwt_R0 [0], chn_a_rsci_d_mxwt_R0 [1], chn_a_rsci_d_mxwt_R0 [2], chn_a_rsci_d_mxwt_R0 [3], chn_a_rsci_d_mxwt_R0 [4], chn_a_rsci_d_mxwt_R0 [5], chn_a_rsci_d_mxwt_R0 [6], chn_a_rsci_d_mxwt_R0 [7], chn_a_rsci_d_mxwt_R0 [8], chn_a_rsci_d_mxwt_R0 [9], chn_a_rsci_d_mxwt_R0 [15:14] } = 0;
  assign { chn_a_rsci_d_mxwt_X0 [0], chn_a_rsci_d_mxwt_X0 [1], chn_a_rsci_d_mxwt_X0 [2], chn_a_rsci_d_mxwt_X0 [3], chn_a_rsci_d_mxwt_X0 [4], chn_a_rsci_d_mxwt_X0 [5], chn_a_rsci_d_mxwt_X0 [6], chn_a_rsci_d_mxwt_X0 [7], chn_a_rsci_d_mxwt_X0 [8], chn_a_rsci_d_mxwt_X0 [9], chn_a_rsci_d_mxwt_X0 [15:14] } = 0;
  assign { chn_a_rsci_d_mxwt_C0 [0], chn_a_rsci_d_mxwt_C0 [1], chn_a_rsci_d_mxwt_C0 [2], chn_a_rsci_d_mxwt_C0 [3], chn_a_rsci_d_mxwt_C0 [4], chn_a_rsci_d_mxwt_C0 [5], chn_a_rsci_d_mxwt_C0 [6], chn_a_rsci_d_mxwt_C0 [7], chn_a_rsci_d_mxwt_C0 [8], chn_a_rsci_d_mxwt_C0 [9], chn_a_rsci_d_mxwt_C0 [15:14] } = 0;
  logic [15:0] chn_a_rsci_d_mxwt_C1 ;
  logic [15:0] chn_a_rsci_d_mxwt_R1 ;
  logic [15:0] chn_a_rsci_d_mxwt_X1 ;
  assign IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_T = | chn_a_rsci_d_mxwt_T [14:10] ;
  assign chn_a_rsci_d_mxwt_C1 [14:10] = { 5{ IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_C }} ;
  assign chn_a_rsci_d_mxwt_R1 [14:10] = { 5{ IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_R }} ;
  assign chn_a_rsci_d_mxwt_X1 [14:10] = { 5{ IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_X }} ;
  assign _033_ = chn_a_rsci_d_mxwt[14:12] == 3'b111;
  assign _033__S = 0 ;
  assign { chn_a_rsci_d_mxwt_R1 [0], chn_a_rsci_d_mxwt_R1 [1], chn_a_rsci_d_mxwt_R1 [2], chn_a_rsci_d_mxwt_R1 [3], chn_a_rsci_d_mxwt_R1 [4], chn_a_rsci_d_mxwt_R1 [5], chn_a_rsci_d_mxwt_R1 [6], chn_a_rsci_d_mxwt_R1 [7], chn_a_rsci_d_mxwt_R1 [8], chn_a_rsci_d_mxwt_R1 [9], chn_a_rsci_d_mxwt_R1 [15:15] } = 0;
  assign { chn_a_rsci_d_mxwt_X1 [0], chn_a_rsci_d_mxwt_X1 [1], chn_a_rsci_d_mxwt_X1 [2], chn_a_rsci_d_mxwt_X1 [3], chn_a_rsci_d_mxwt_X1 [4], chn_a_rsci_d_mxwt_X1 [5], chn_a_rsci_d_mxwt_X1 [6], chn_a_rsci_d_mxwt_X1 [7], chn_a_rsci_d_mxwt_X1 [8], chn_a_rsci_d_mxwt_X1 [9], chn_a_rsci_d_mxwt_X1 [15:15] } = 0;
  assign { chn_a_rsci_d_mxwt_C1 [0], chn_a_rsci_d_mxwt_C1 [1], chn_a_rsci_d_mxwt_C1 [2], chn_a_rsci_d_mxwt_C1 [3], chn_a_rsci_d_mxwt_C1 [4], chn_a_rsci_d_mxwt_C1 [5], chn_a_rsci_d_mxwt_C1 [6], chn_a_rsci_d_mxwt_C1 [7], chn_a_rsci_d_mxwt_C1 [8], chn_a_rsci_d_mxwt_C1 [9], chn_a_rsci_d_mxwt_C1 [15:15] } = 0;
  logic [15:0] chn_a_rsci_d_mxwt_C2 ;
  logic [15:0] chn_a_rsci_d_mxwt_R2 ;
  logic [15:0] chn_a_rsci_d_mxwt_X2 ;
  assign _033__T = | chn_a_rsci_d_mxwt_T [14:12] ;
  assign chn_a_rsci_d_mxwt_C2 [14:12] = { 3{ _033__C }} ;
  assign chn_a_rsci_d_mxwt_R2 [14:12] = { 3{ _033__R }} ;
  assign chn_a_rsci_d_mxwt_X2 [14:12] = { 3{ _033__X }} ;
  assign and_dcpl_9 = chn_a_rsci_d_mxwt[11:10] == 2'b11;
  assign and_dcpl_9_S = 0 ;
  assign and_dcpl_9_T = | chn_a_rsci_d_mxwt_T [11:10] ;
  assign chn_a_rsci_d_mxwt_C2 [11:10] = { 2{ and_dcpl_9_C }} ;
  assign chn_a_rsci_d_mxwt_R2 [11:10] = { 2{ and_dcpl_9_R }} ;
  assign chn_a_rsci_d_mxwt_X2 [11:10] = { 2{ and_dcpl_9_X }} ;
  assign _034_ = chn_a_rsci_d_mxwt[14:13] == 2'b11;
  assign _034__S = 0 ;
  assign { chn_a_rsci_d_mxwt_R2 [0], chn_a_rsci_d_mxwt_R2 [1], chn_a_rsci_d_mxwt_R2 [2], chn_a_rsci_d_mxwt_R2 [3], chn_a_rsci_d_mxwt_R2 [4], chn_a_rsci_d_mxwt_R2 [5], chn_a_rsci_d_mxwt_R2 [6], chn_a_rsci_d_mxwt_R2 [7], chn_a_rsci_d_mxwt_R2 [8], chn_a_rsci_d_mxwt_R2 [9], chn_a_rsci_d_mxwt_R2 [15:15] } = 0;
  assign { chn_a_rsci_d_mxwt_X2 [0], chn_a_rsci_d_mxwt_X2 [1], chn_a_rsci_d_mxwt_X2 [2], chn_a_rsci_d_mxwt_X2 [3], chn_a_rsci_d_mxwt_X2 [4], chn_a_rsci_d_mxwt_X2 [5], chn_a_rsci_d_mxwt_X2 [6], chn_a_rsci_d_mxwt_X2 [7], chn_a_rsci_d_mxwt_X2 [8], chn_a_rsci_d_mxwt_X2 [9], chn_a_rsci_d_mxwt_X2 [15:15] } = 0;
  assign { chn_a_rsci_d_mxwt_C2 [0], chn_a_rsci_d_mxwt_C2 [1], chn_a_rsci_d_mxwt_C2 [2], chn_a_rsci_d_mxwt_C2 [3], chn_a_rsci_d_mxwt_C2 [4], chn_a_rsci_d_mxwt_C2 [5], chn_a_rsci_d_mxwt_C2 [6], chn_a_rsci_d_mxwt_C2 [7], chn_a_rsci_d_mxwt_C2 [8], chn_a_rsci_d_mxwt_C2 [9], chn_a_rsci_d_mxwt_C2 [15:15] } = 0;
  logic [15:0] chn_a_rsci_d_mxwt_C3 ;
  logic [15:0] chn_a_rsci_d_mxwt_R3 ;
  logic [15:0] chn_a_rsci_d_mxwt_X3 ;
  assign _034__T = | chn_a_rsci_d_mxwt_T [14:13] ;
  assign chn_a_rsci_d_mxwt_C3 [14:13] = { 2{ _034__C }} ;
  assign chn_a_rsci_d_mxwt_R3 [14:13] = { 2{ _034__R }} ;
  assign chn_a_rsci_d_mxwt_X3 [14:13] = { 2{ _034__X }} ;
  assign IsDenorm_5U_10U_or_tmp = | chn_a_rsci_d_mxwt[9:0];
  assign IsDenorm_5U_10U_or_tmp_T = | chn_a_rsci_d_mxwt_T [9:0] ;
  assign chn_a_rsci_d_mxwt_C3 [9:0] = { 10{ IsDenorm_5U_10U_or_tmp_C }} ;
  assign chn_a_rsci_d_mxwt_X3 [9:0] = { 10{ IsDenorm_5U_10U_or_tmp_X }} ;
  assign chn_a_rsci_d_mxwt_R3 [9:0] = { 10{ IsDenorm_5U_10U_or_tmp_R }} & chn_a_rsci_d_mxwt[9:0] ;
  assign IsDenorm_5U_10U_or_tmp_S = 0 ;
  assign _035_ = | chn_a_rsci_d_mxwt[14:10];
  assign { chn_a_rsci_d_mxwt_R3 [10], chn_a_rsci_d_mxwt_R3 [11], chn_a_rsci_d_mxwt_R3 [12], chn_a_rsci_d_mxwt_R3 [15:15] } = 0;
  assign { chn_a_rsci_d_mxwt_X3 [10], chn_a_rsci_d_mxwt_X3 [11], chn_a_rsci_d_mxwt_X3 [12], chn_a_rsci_d_mxwt_X3 [15:15] } = 0;
  assign { chn_a_rsci_d_mxwt_C3 [10], chn_a_rsci_d_mxwt_C3 [11], chn_a_rsci_d_mxwt_C3 [12], chn_a_rsci_d_mxwt_C3 [15:15] } = 0;
  logic [15:0] chn_a_rsci_d_mxwt_C4 ;
  logic [15:0] chn_a_rsci_d_mxwt_R4 ;
  logic [15:0] chn_a_rsci_d_mxwt_X4 ;
  assign _035__T = | chn_a_rsci_d_mxwt_T [14:10] ;
  assign chn_a_rsci_d_mxwt_C4 [14:10] = { 5{ _035__C }} ;
  assign chn_a_rsci_d_mxwt_X4 [14:10] = { 5{ _035__X }} ;
  assign chn_a_rsci_d_mxwt_R4 [14:10] = { 5{ _035__R }} & chn_a_rsci_d_mxwt[14:10] ;
  assign _035__S = 0 ;
  assign _036_ = chn_a_rsci_d_mxwt[12:10] != 3'b111;
  assign _036__S = 0 ;
  assign { chn_a_rsci_d_mxwt_R4 [0], chn_a_rsci_d_mxwt_R4 [1], chn_a_rsci_d_mxwt_R4 [2], chn_a_rsci_d_mxwt_R4 [3], chn_a_rsci_d_mxwt_R4 [4], chn_a_rsci_d_mxwt_R4 [5], chn_a_rsci_d_mxwt_R4 [6], chn_a_rsci_d_mxwt_R4 [7], chn_a_rsci_d_mxwt_R4 [8], chn_a_rsci_d_mxwt_R4 [9], chn_a_rsci_d_mxwt_R4 [15:15] } = 0;
  assign { chn_a_rsci_d_mxwt_X4 [0], chn_a_rsci_d_mxwt_X4 [1], chn_a_rsci_d_mxwt_X4 [2], chn_a_rsci_d_mxwt_X4 [3], chn_a_rsci_d_mxwt_X4 [4], chn_a_rsci_d_mxwt_X4 [5], chn_a_rsci_d_mxwt_X4 [6], chn_a_rsci_d_mxwt_X4 [7], chn_a_rsci_d_mxwt_X4 [8], chn_a_rsci_d_mxwt_X4 [9], chn_a_rsci_d_mxwt_X4 [15:15] } = 0;
  assign { chn_a_rsci_d_mxwt_C4 [0], chn_a_rsci_d_mxwt_C4 [1], chn_a_rsci_d_mxwt_C4 [2], chn_a_rsci_d_mxwt_C4 [3], chn_a_rsci_d_mxwt_C4 [4], chn_a_rsci_d_mxwt_C4 [5], chn_a_rsci_d_mxwt_C4 [6], chn_a_rsci_d_mxwt_C4 [7], chn_a_rsci_d_mxwt_C4 [8], chn_a_rsci_d_mxwt_C4 [9], chn_a_rsci_d_mxwt_C4 [15:15] } = 0;
  logic [15:0] chn_a_rsci_d_mxwt_C5 ;
  logic [15:0] chn_a_rsci_d_mxwt_R5 ;
  logic [15:0] chn_a_rsci_d_mxwt_X5 ;
  assign _036__T = | chn_a_rsci_d_mxwt_T [12:10] ;
  assign chn_a_rsci_d_mxwt_C5 [12:10] = { 3{ _036__C }} ;
  assign chn_a_rsci_d_mxwt_R5 [12:10] = { 3{ _036__R }} ;
  assign chn_a_rsci_d_mxwt_X5 [12:10] = { 3{ _036__X }} ;
  assign _037_ = ~ _052_;
  logic [0:0] _052__C0 ;
  logic [0:0] _052__R0 ;
  logic [0:0] _052__X0 ;
  assign _037__T = _052__T ;
  assign _052__C0 = _037__C ;
  assign _052__R0 = _037__R ;
  assign _052__X0 = _037__X ;
  assign _037__S = 0 ;
  assign _038_ = ~ libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1;
  logic [3:0] libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1_C1 ;
  logic [3:0] libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1_R1 ;
  logic [3:0] libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1_X1 ;
  assign _038__T = libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1_T ;
  assign libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1_C1 = _038__C ;
  assign libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1_R1 = _038__R ;
  assign libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1_X1 = _038__X ;
  assign _038__S = 0 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse = ~ _051_;
  logic [0:0] _051__C1 ;
  logic [0:0] _051__R1 ;
  logic [0:0] _051__X1 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_T = _051__T ;
  assign _051__C1 = FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_C ;
  assign _051__R1 = FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_R ;
  assign _051__X1 = FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_X ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_S = 0 ;
  assign _039_ = ~ IsInf_5U_10U_IsInf_5U_10U_and_cse_sva;
  logic [0:0] IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_C1 ;
  logic [0:0] IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_R1 ;
  logic [0:0] IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_X1 ;
  assign _039__T = IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_T ;
  assign IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_C1 = _039__C ;
  assign IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_R1 = _039__R ;
  assign IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_X1 = _039__X ;
  assign _039__S = 0 ;
  assign IsInf_5U_10U_land_lpi_1_dfm = ~ _053_;
  logic [0:0] _053__C0 ;
  logic [0:0] _053__R0 ;
  logic [0:0] _053__X0 ;
  assign IsInf_5U_10U_land_lpi_1_dfm_T = _053__T ;
  assign _053__C0 = IsInf_5U_10U_land_lpi_1_dfm_C ;
  assign _053__R0 = IsInf_5U_10U_land_lpi_1_dfm_R ;
  assign _053__X0 = IsInf_5U_10U_land_lpi_1_dfm_X ;
  assign IsInf_5U_10U_land_lpi_1_dfm_S = 0 ;
  assign IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva = ~ _035_;
  logic [0:0] _035__C0 ;
  logic [0:0] _035__R0 ;
  logic [0:0] _035__X0 ;
  assign IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_T = _035__T ;
  assign _035__C0 = IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_C ;
  assign _035__R0 = IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_R ;
  assign _035__X0 = IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_X ;
  assign IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_S = 0 ;
  assign _040_ = ~ reg_chn_o_rsci_ld_core_psct_cse;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C2 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R2 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X2 ;
  assign _040__T = reg_chn_o_rsci_ld_core_psct_cse_T ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C2 = _040__C ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R2 = _040__R ;
  assign reg_chn_o_rsci_ld_core_psct_cse_X2 = _040__X ;
  assign _040__S = 0 ;
  assign _041_ = ~ _011_;
  logic [0:0] _011__C0 ;
  logic [0:0] _011__R0 ;
  logic [0:0] _011__X0 ;
  assign _041__T = _011__T ;
  assign _011__C0 = _041__C ;
  assign _011__R0 = _041__R ;
  assign _011__X0 = _041__X ;
  assign _041__S = 0 ;
  assign _042_ = ~ chn_a_rsci_bawt;
  logic [0:0] chn_a_rsci_bawt_C4 ;
  logic [0:0] chn_a_rsci_bawt_R4 ;
  logic [0:0] chn_a_rsci_bawt_X4 ;
  assign _042__T = chn_a_rsci_bawt_T ;
  assign chn_a_rsci_bawt_C4 = _042__C ;
  assign chn_a_rsci_bawt_R4 = _042__R ;
  assign chn_a_rsci_bawt_X4 = _042__X ;
  assign _042__S = 0 ;
  assign _043_ = ~ chn_o_rsci_bawt;
  logic [0:0] chn_o_rsci_bawt_C1 ;
  logic [0:0] chn_o_rsci_bawt_R1 ;
  logic [0:0] chn_o_rsci_bawt_X1 ;
  assign _043__T = chn_o_rsci_bawt_T ;
  assign chn_o_rsci_bawt_C1 = _043__C ;
  assign chn_o_rsci_bawt_R1 = _043__R ;
  assign chn_o_rsci_bawt_X1 = _043__X ;
  assign _043__S = 0 ;
  assign _044_ = ~ _012_;
  logic [0:0] _012__C0 ;
  logic [0:0] _012__R0 ;
  logic [0:0] _012__X0 ;
  assign _044__T = _012__T ;
  assign _012__C0 = _044__C ;
  assign _012__R0 = _044__R ;
  assign _012__X0 = _044__X ;
  assign _044__S = 0 ;
  assign and_38_cse = ~ _013_;
  logic [0:0] _013__C0 ;
  logic [0:0] _013__R0 ;
  logic [0:0] _013__X0 ;
  assign and_38_cse_T = _013__T ;
  assign _013__C0 = and_38_cse_C ;
  assign _013__R0 = and_38_cse_R ;
  assign _013__X0 = and_38_cse_X ;
  assign and_38_cse_S = 0 ;
  assign _045_ = ~ and_4_mdf;
  logic [0:0] and_4_mdf_C2 ;
  logic [0:0] and_4_mdf_R2 ;
  logic [0:0] and_4_mdf_X2 ;
  assign _045__T = and_4_mdf_T ;
  assign and_4_mdf_C2 = _045__C ;
  assign and_4_mdf_R2 = _045__R ;
  assign and_4_mdf_X2 = _045__X ;
  assign _045__S = 0 ;
  assign _046_ = ~ _018_;
  logic [0:0] _018__C0 ;
  logic [0:0] _018__R0 ;
  logic [0:0] _018__X0 ;
  assign _046__T = _018__T ;
  assign _018__C0 = _046__C ;
  assign _018__R0 = _046__R ;
  assign _018__X0 = _046__X ;
  assign _046__S = 0 ;
  assign _047_ = ~ and_dcpl_13;
  logic [0:0] and_dcpl_13_C2 ;
  logic [0:0] and_dcpl_13_R2 ;
  logic [0:0] and_dcpl_13_X2 ;
  assign _047__T = and_dcpl_13_T ;
  assign and_dcpl_13_C2 = _047__C ;
  assign and_dcpl_13_R2 = _047__R ;
  assign and_dcpl_13_X2 = _047__X ;
  assign _047__S = 0 ;
  assign _048_ = ~ _054_;
  logic [0:0] _054__C0 ;
  logic [0:0] _054__R0 ;
  logic [0:0] _054__X0 ;
  assign _048__T = _054__T ;
  assign _054__C0 = _048__C ;
  assign _054__R0 = _048__R ;
  assign _054__X0 = _048__X ;
  assign _048__S = 0 ;
  assign _049_ = ~ and_dcpl_19;
  logic [0:0] and_dcpl_19_C0 ;
  logic [0:0] and_dcpl_19_R0 ;
  logic [0:0] and_dcpl_19_X0 ;
  assign _049__T = and_dcpl_19_T ;
  assign and_dcpl_19_C0 = _049__C ;
  assign and_dcpl_19_R0 = _049__R ;
  assign and_dcpl_19_X0 = _049__X ;
  assign _049__S = 0 ;
  assign _050_ = ~ _060_;
  logic [0:0] _060__C0 ;
  logic [0:0] _060__R0 ;
  logic [0:0] _060__X0 ;
  assign _050__T = _060__T ;
  assign _060__C0 = _050__C ;
  assign _060__R0 = _050__R ;
  assign _060__X0 = _050__X ;
  assign _050__S = 0 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl = ~ _061_;
  logic [0:0] _061__C0 ;
  logic [0:0] _061__R0 ;
  logic [0:0] _061__X0 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_T = _061__T ;
  assign _061__C0 = FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_C ;
  assign _061__R0 = FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_R ;
  assign _061__X0 = FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_X ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_S = 0 ;
  assign _052_ = and_38_cse | fsm_output[0];
  assign _052__S = 0 ;
  logic [0:0] and_38_cse_C0 ;
  logic [0:0] and_38_cse_R0 ;
  logic [0:0] and_38_cse_X0 ;
  assign _052__T = and_38_cse_T | fsm_output_T [0] ;
  assign and_38_cse_C0 = _052__C ;
  assign and_38_cse_X0 = _052__X ;
  assign fsm_output_C3 [0] = _052__C ;
  assign fsm_output_X3 [0] = _052__X ;
  assign and_38_cse_R0 = ( _052__R | _052__C & fsm_output_T [0] ) & { 1{ fsm_output[0] != 1'b1 }} ;
  assign fsm_output_R3 [0] = ( _052__R | _052__C & and_38_cse_T ) & { 1{ and_38_cse != 1'b1 }} ;
  assign _051_ = IsDenorm_5U_10U_land_lpi_1_dfm | IsInf_5U_10U_land_lpi_1_dfm;
  assign _051__S = 0 ;
  logic [0:0] IsDenorm_5U_10U_land_lpi_1_dfm_C4 ;
  logic [0:0] IsDenorm_5U_10U_land_lpi_1_dfm_R4 ;
  logic [0:0] IsDenorm_5U_10U_land_lpi_1_dfm_X4 ;
  logic [0:0] IsInf_5U_10U_land_lpi_1_dfm_C4 ;
  logic [0:0] IsInf_5U_10U_land_lpi_1_dfm_R4 ;
  logic [0:0] IsInf_5U_10U_land_lpi_1_dfm_X4 ;
  assign _051__T = IsDenorm_5U_10U_land_lpi_1_dfm_T | IsInf_5U_10U_land_lpi_1_dfm_T ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_C4 = _051__C ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_X4 = _051__X ;
  assign IsInf_5U_10U_land_lpi_1_dfm_C4 = _051__C ;
  assign IsInf_5U_10U_land_lpi_1_dfm_X4 = _051__X ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_R4 = ( _051__R | _051__C & IsInf_5U_10U_land_lpi_1_dfm_T ) & { 1{ IsInf_5U_10U_land_lpi_1_dfm != 1'b1 }} ;
  assign IsInf_5U_10U_land_lpi_1_dfm_R4 = ( _051__R | _051__C & IsDenorm_5U_10U_land_lpi_1_dfm_T ) & { 1{ IsDenorm_5U_10U_land_lpi_1_dfm != 1'b1 }} ;
  assign _053_ = IsDenorm_5U_10U_or_tmp | _039_;
  assign _053__S = 0 ;
  logic [0:0] IsDenorm_5U_10U_or_tmp_C4 ;
  logic [0:0] IsDenorm_5U_10U_or_tmp_R4 ;
  logic [0:0] IsDenorm_5U_10U_or_tmp_X4 ;
  logic [0:0] _039__C0 ;
  logic [0:0] _039__R0 ;
  logic [0:0] _039__X0 ;
  assign _053__T = IsDenorm_5U_10U_or_tmp_T | _039__T ;
  assign IsDenorm_5U_10U_or_tmp_C4 = _053__C ;
  assign IsDenorm_5U_10U_or_tmp_X4 = _053__X ;
  assign _039__C0 = _053__C ;
  assign _039__X0 = _053__X ;
  assign IsDenorm_5U_10U_or_tmp_R4 = ( _053__R | _053__C & _039__T ) & { 1{ _039_ != 1'b1 }} ;
  assign _039__R0 = ( _053__R | _053__C & IsDenorm_5U_10U_or_tmp_T ) & { 1{ IsDenorm_5U_10U_or_tmp != 1'b1 }} ;
  assign or_cse = chn_o_rsci_bawt | _040_;
  assign or_cse_S = 0 ;
  logic [0:0] chn_o_rsci_bawt_C2 ;
  logic [0:0] chn_o_rsci_bawt_R2 ;
  logic [0:0] chn_o_rsci_bawt_X2 ;
  logic [0:0] _040__C0 ;
  logic [0:0] _040__R0 ;
  logic [0:0] _040__X0 ;
  assign or_cse_T = chn_o_rsci_bawt_T | _040__T ;
  assign chn_o_rsci_bawt_C2 = or_cse_C ;
  assign chn_o_rsci_bawt_X2 = or_cse_X ;
  assign _040__C0 = or_cse_C ;
  assign _040__X0 = or_cse_X ;
  assign chn_o_rsci_bawt_R2 = ( or_cse_R | or_cse_C & _040__T ) & { 1{ _040_ != 1'b1 }} ;
  assign _040__R0 = ( or_cse_R | or_cse_C & chn_o_rsci_bawt_T ) & { 1{ chn_o_rsci_bawt != 1'b1 }} ;
  assign or_dcpl_8 = _036_ | _041_;
  assign or_dcpl_8_S = 0 ;
  logic [0:0] _036__C0 ;
  logic [0:0] _036__R0 ;
  logic [0:0] _036__X0 ;
  logic [0:0] _041__C0 ;
  logic [0:0] _041__R0 ;
  logic [0:0] _041__X0 ;
  assign or_dcpl_8_T = _036__T | _041__T ;
  assign _036__C0 = or_dcpl_8_C ;
  assign _036__X0 = or_dcpl_8_X ;
  assign _041__C0 = or_dcpl_8_C ;
  assign _041__X0 = or_dcpl_8_X ;
  assign _036__R0 = ( or_dcpl_8_R | or_dcpl_8_C & _041__T ) & { 1{ _041_ != 1'b1 }} ;
  assign _041__R0 = ( or_dcpl_8_R | or_dcpl_8_C & _036__T ) & { 1{ _036_ != 1'b1 }} ;
  assign chn_a_rsci_ld_core_psct_mx0c0 = and_4_mdf | fsm_output[0];
  assign chn_a_rsci_ld_core_psct_mx0c0_S = 0 ;
  logic [0:0] and_4_mdf_C3 ;
  logic [0:0] and_4_mdf_R3 ;
  logic [0:0] and_4_mdf_X3 ;
  logic [1:0] fsm_output_C4 ;
  logic [1:0] fsm_output_R4 ;
  logic [1:0] fsm_output_X4 ;
  assign chn_a_rsci_ld_core_psct_mx0c0_T = and_4_mdf_T | fsm_output_T [0] ;
  assign and_4_mdf_C3 = chn_a_rsci_ld_core_psct_mx0c0_C ;
  assign and_4_mdf_X3 = chn_a_rsci_ld_core_psct_mx0c0_X ;
  assign fsm_output_C4 [0] = chn_a_rsci_ld_core_psct_mx0c0_C ;
  assign fsm_output_X4 [0] = chn_a_rsci_ld_core_psct_mx0c0_X ;
  assign and_4_mdf_R3 = ( chn_a_rsci_ld_core_psct_mx0c0_R | chn_a_rsci_ld_core_psct_mx0c0_C & fsm_output_T [0] ) & { 1{ fsm_output[0] != 1'b1 }} ;
  assign fsm_output_R4 [0] = ( chn_a_rsci_ld_core_psct_mx0c0_R | chn_a_rsci_ld_core_psct_mx0c0_C & and_4_mdf_T ) & { 1{ and_4_mdf != 1'b1 }} ;
  assign chn_o_rsci_d_9_0_mx0c1 = _016_ | _017_;
  assign chn_o_rsci_d_9_0_mx0c1_S = 0 ;
  logic [0:0] _016__C0 ;
  logic [0:0] _016__R0 ;
  logic [0:0] _016__X0 ;
  logic [0:0] _017__C0 ;
  logic [0:0] _017__R0 ;
  logic [0:0] _017__X0 ;
  assign chn_o_rsci_d_9_0_mx0c1_T = _016__T | _017__T ;
  assign _016__C0 = chn_o_rsci_d_9_0_mx0c1_C ;
  assign _016__X0 = chn_o_rsci_d_9_0_mx0c1_X ;
  assign _017__C0 = chn_o_rsci_d_9_0_mx0c1_C ;
  assign _017__X0 = chn_o_rsci_d_9_0_mx0c1_X ;
  assign _016__R0 = ( chn_o_rsci_d_9_0_mx0c1_R | chn_o_rsci_d_9_0_mx0c1_C & _017__T ) & { 1{ _017_ != 1'b1 }} ;
  assign _017__R0 = ( chn_o_rsci_d_9_0_mx0c1_R | chn_o_rsci_d_9_0_mx0c1_C & _016__T ) & { 1{ _016_ != 1'b1 }} ;
  assign _054_ = and_38_cse | _020_;
  assign _054__S = 0 ;
  logic [0:0] and_38_cse_C1 ;
  logic [0:0] and_38_cse_R1 ;
  logic [0:0] and_38_cse_X1 ;
  logic [0:0] _020__C0 ;
  logic [0:0] _020__R0 ;
  logic [0:0] _020__X0 ;
  assign _054__T = and_38_cse_T | _020__T ;
  assign and_38_cse_C1 = _054__C ;
  assign and_38_cse_X1 = _054__X ;
  assign _020__C0 = _054__C ;
  assign _020__X0 = _054__X ;
  assign and_38_cse_R1 = ( _054__R | _054__C & _020__T ) & { 1{ _020_ != 1'b1 }} ;
  assign _020__R0 = ( _054__R | _054__C & and_38_cse_T ) & { 1{ and_38_cse != 1'b1 }} ;
  assign _055_ = FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl | IsInf_5U_10U_land_lpi_1_dfm;
  assign _055__S = 0 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_C0 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_R0 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_X0 ;
  logic [0:0] IsInf_5U_10U_land_lpi_1_dfm_C5 ;
  logic [0:0] IsInf_5U_10U_land_lpi_1_dfm_R5 ;
  logic [0:0] IsInf_5U_10U_land_lpi_1_dfm_X5 ;
  assign _055__T = FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_T | IsInf_5U_10U_land_lpi_1_dfm_T ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_C0 = _055__C ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_X0 = _055__X ;
  assign IsInf_5U_10U_land_lpi_1_dfm_C5 = _055__C ;
  assign IsInf_5U_10U_land_lpi_1_dfm_X5 = _055__X ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_R0 = ( _055__R | _055__C & IsInf_5U_10U_land_lpi_1_dfm_T ) & { 1{ IsInf_5U_10U_land_lpi_1_dfm != 1'b1 }} ;
  assign IsInf_5U_10U_land_lpi_1_dfm_R5 = ( _055__R | _055__C & FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_T ) & { 1{ FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl != 1'b1 }} ;
  assign _056_ = _055_ | IsNaN_5U_10U_land_lpi_1_dfm;
  assign _056__S = 0 ;
  logic [0:0] _055__C0 ;
  logic [0:0] _055__R0 ;
  logic [0:0] _055__X0 ;
  logic [0:0] IsNaN_5U_10U_land_lpi_1_dfm_C0 ;
  logic [0:0] IsNaN_5U_10U_land_lpi_1_dfm_R0 ;
  logic [0:0] IsNaN_5U_10U_land_lpi_1_dfm_X0 ;
  assign _056__T = _055__T | IsNaN_5U_10U_land_lpi_1_dfm_T ;
  assign _055__C0 = _056__C ;
  assign _055__X0 = _056__X ;
  assign IsNaN_5U_10U_land_lpi_1_dfm_C0 = _056__C ;
  assign IsNaN_5U_10U_land_lpi_1_dfm_X0 = _056__X ;
  assign _055__R0 = ( _056__R | _056__C & IsNaN_5U_10U_land_lpi_1_dfm_T ) & { 1{ IsNaN_5U_10U_land_lpi_1_dfm != 1'b1 }} ;
  assign IsNaN_5U_10U_land_lpi_1_dfm_R0 = ( _056__R | _056__C & _055__T ) & { 1{ _055_ != 1'b1 }} ;
  assign _057_ = _024_ | _026_;
  assign _057__S = 0 ;
  logic [0:0] _024__C0 ;
  logic [0:0] _024__R0 ;
  logic [0:0] _024__X0 ;
  logic [0:0] _026__C0 ;
  logic [0:0] _026__R0 ;
  logic [0:0] _026__X0 ;
  assign _057__T = _024__T | _026__T ;
  assign _024__C0 = _057__C ;
  assign _024__X0 = _057__X ;
  assign _026__C0 = _057__C ;
  assign _026__X0 = _057__X ;
  assign _024__R0 = ( _057__R | _057__C & _026__T ) & { 1{ _026_ != 1'b1 }} ;
  assign _026__R0 = ( _057__R | _057__C & _024__T ) & { 1{ _024_ != 1'b1 }} ;
  assign _058_ = _057_ | chn_o_rsci_d_9_0_mx0c1;
  assign _058__S = 0 ;
  logic [0:0] _057__C0 ;
  logic [0:0] _057__R0 ;
  logic [0:0] _057__X0 ;
  logic [0:0] chn_o_rsci_d_9_0_mx0c1_C1 ;
  logic [0:0] chn_o_rsci_d_9_0_mx0c1_R1 ;
  logic [0:0] chn_o_rsci_d_9_0_mx0c1_X1 ;
  assign _058__T = _057__T | chn_o_rsci_d_9_0_mx0c1_T ;
  assign _057__C0 = _058__C ;
  assign _057__X0 = _058__X ;
  assign chn_o_rsci_d_9_0_mx0c1_C1 = _058__C ;
  assign chn_o_rsci_d_9_0_mx0c1_X1 = _058__X ;
  assign _057__R0 = ( _058__R | _058__C & chn_o_rsci_d_9_0_mx0c1_T ) & { 1{ chn_o_rsci_d_9_0_mx0c1 != 1'b1 }} ;
  assign chn_o_rsci_d_9_0_mx0c1_R1 = ( _058__R | _058__C & _057__T ) & { 1{ _057_ != 1'b1 }} ;
  assign _059_ = and_6_cse | and_dcpl_19;
  assign _059__S = 0 ;
  logic [0:0] and_6_cse_C0 ;
  logic [0:0] and_6_cse_R0 ;
  logic [0:0] and_6_cse_X0 ;
  logic [0:0] and_dcpl_19_C1 ;
  logic [0:0] and_dcpl_19_R1 ;
  logic [0:0] and_dcpl_19_X1 ;
  assign _059__T = and_6_cse_T | and_dcpl_19_T ;
  assign and_6_cse_C0 = _059__C ;
  assign and_6_cse_X0 = _059__X ;
  assign and_dcpl_19_C1 = _059__C ;
  assign and_dcpl_19_X1 = _059__X ;
  assign and_6_cse_R0 = ( _059__R | _059__C & and_dcpl_19_T ) & { 1{ and_dcpl_19 != 1'b1 }} ;
  assign and_dcpl_19_R1 = ( _059__R | _059__C & and_6_cse_T ) & { 1{ and_6_cse != 1'b1 }} ;
  assign _060_ = IsDenorm_5U_10U_or_tmp | _035_;
  assign _060__S = 0 ;
  logic [0:0] IsDenorm_5U_10U_or_tmp_C5 ;
  logic [0:0] IsDenorm_5U_10U_or_tmp_R5 ;
  logic [0:0] IsDenorm_5U_10U_or_tmp_X5 ;
  logic [0:0] _035__C1 ;
  logic [0:0] _035__R1 ;
  logic [0:0] _035__X1 ;
  assign _060__T = IsDenorm_5U_10U_or_tmp_T | _035__T ;
  assign IsDenorm_5U_10U_or_tmp_C5 = _060__C ;
  assign IsDenorm_5U_10U_or_tmp_X5 = _060__X ;
  assign _035__C1 = _060__C ;
  assign _035__X1 = _060__X ;
  assign IsDenorm_5U_10U_or_tmp_R5 = ( _060__R | _060__C & _035__T ) & { 1{ _035_ != 1'b1 }} ;
  assign _035__R1 = ( _060__R | _060__C & IsDenorm_5U_10U_or_tmp_T ) & { 1{ IsDenorm_5U_10U_or_tmp != 1'b1 }} ;
  assign _061_ = chn_a_rsci_d_mxwt[14] | _050_;
  assign _061__S = 0 ;
  logic [0:0] _050__C0 ;
  logic [0:0] _050__R0 ;
  logic [0:0] _050__X0 ;
  assign _061__T = chn_a_rsci_d_mxwt_T [14] | _050__T ;
  assign chn_a_rsci_d_mxwt_C5 [14] = _061__C ;
  assign chn_a_rsci_d_mxwt_X5 [14] = _061__X ;
  assign _050__C0 = _061__C ;
  assign _050__X0 = _061__X ;
  assign chn_a_rsci_d_mxwt_R5 [14] = ( _061__R | _061__C & _050__T ) & { 1{ _050_ != 1'b1 }} ;
  assign _050__R0 = ( _061__R | _061__C & chn_a_rsci_d_mxwt_T [14] ) & { 1{ chn_a_rsci_d_mxwt[14] != 1'b1 }} ;
  assign _062_ = _030_ | _031_;
  assign _062__S = 0 ;
  logic [3:0] _030__C0 ;
  logic [3:0] _030__R0 ;
  logic [3:0] _030__X0 ;
  logic [3:0] _031__C0 ;
  logic [3:0] _031__R0 ;
  logic [3:0] _031__X0 ;
  assign _062__T = _030__T | _031__T ;
  assign _030__C0 = _062__C ;
  assign _030__X0 = _062__X ;
  assign _031__C0 = _062__C ;
  assign _031__X0 = _062__X ;
  assign _030__R0 = ( _062__R | _062__C & _031__T ) & { 4{ _031_ != 4'b1111 }} ;
  assign _031__R0 = ( _062__R | _062__C & _030__T ) & { 4{ _030_ != 4'b1111 }} ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl = _062_ | _032_;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_S = 0 ;
  logic [3:0] _062__C0 ;
  logic [3:0] _062__R0 ;
  logic [3:0] _062__X0 ;
  logic [3:0] _032__C0 ;
  logic [3:0] _032__R0 ;
  logic [3:0] _032__X0 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_T = _062__T | _032__T ;
  assign _062__C0 = FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_C ;
  assign _062__X0 = FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_X ;
  assign _032__C0 = FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_C ;
  assign _032__X0 = FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_X ;
  assign _062__R0 = ( FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_R | FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_C & _032__T ) & { 4{ _032_ != 4'b1111 }} ;
  assign _032__R0 = ( FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_R | FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_C & _062__T ) & { 4{ _062_ != 4'b1111 }} ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      reg_chn_o_rsci_ld_core_psct_cse <= 1'b0;
    else
      reg_chn_o_rsci_ld_core_psct_cse <= _008_;
  logic [0:0] _008__X0 ;
  logic [0:0] _008__R0 ;
  logic [0:0] _008__C0 ;
  assign _008__X0 = { 1{ reg_chn_o_rsci_ld_core_psct_cse_S != _008__S }} ;
  assign _008__R0 = 0 ;
  assign _008__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      reg_chn_o_rsci_ld_core_psct_cse_T 		<= !nvdla_core_rstn ? 0 : ( _008__T & _008__X0 );
  always @( posedge nvdla_core_clk )
      reg_chn_o_rsci_ld_core_psct_cse_t_flag 	<= !nvdla_core_rstn ? 0 : reg_chn_o_rsci_ld_core_psct_cse_t_flag ? 1 : | _008__T & ( | _008__X0 );
  always @( posedge nvdla_core_clk )
      reg_chn_o_rsci_ld_core_psct_cse_r_flag 	<= !nvdla_core_rstn ? 0 : reg_chn_o_rsci_ld_core_psct_cse_r_flag ? 1 : reg_chn_o_rsci_ld_core_psct_cse_t_flag ? 0 : ( | reg_chn_o_rsci_ld_core_psct_cse_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_o_rsci_d_9_0 <= 10'b0000000000;
    else
      chn_o_rsci_d_9_0 <= _006_;
  logic [9:0] _006__X0 ;
  logic [9:0] _006__R0 ;
  logic [9:0] _006__C0 ;
  assign _006__X0 = { 10{ chn_o_rsci_d_9_0_S != _006__S }} ;
  assign _006__R0 = 0 ;
  assign _006__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_9_0_T 		<= !nvdla_core_rstn ? 0 : ( _006__T & _006__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_9_0_t_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_9_0_t_flag ? 1 : | _006__T & ( | _006__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_9_0_r_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_9_0_r_flag ? 1 : chn_o_rsci_d_9_0_t_flag ? 0 : ( | chn_o_rsci_d_9_0_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_o_rsci_d_16 <= 1'b0;
    else
      chn_o_rsci_d_16 <= _005_;
  logic [0:0] _005__X0 ;
  logic [0:0] _005__R0 ;
  logic [0:0] _005__C0 ;
  assign _005__X0 = { 1{ chn_o_rsci_d_16_S != _005__S }} ;
  assign _005__R0 = 0 ;
  assign _005__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_16_T 		<= !nvdla_core_rstn ? 0 : ( _005__T & _005__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_16_t_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_16_t_flag ? 1 : | _005__T & ( | _005__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_16_r_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_16_r_flag ? 1 : chn_o_rsci_d_16_t_flag ? 0 : ( | chn_o_rsci_d_16_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_o_rsci_d_13_10 <= 4'b0000;
    else
      chn_o_rsci_d_13_10 <= _002_;
  logic [3:0] _002__X0 ;
  logic [3:0] _002__R0 ;
  logic [3:0] _002__C0 ;
  assign _002__X0 = { 4{ chn_o_rsci_d_13_10_S != _002__S }} ;
  assign _002__R0 = 0 ;
  assign _002__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_13_10_T 		<= !nvdla_core_rstn ? 0 : ( _002__T & _002__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_13_10_t_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_13_10_t_flag ? 1 : | _002__T & ( | _002__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_13_10_r_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_13_10_r_flag ? 1 : chn_o_rsci_d_13_10_t_flag ? 0 : ( | chn_o_rsci_d_13_10_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_o_rsci_d_15 <= 1'b0;
    else
      chn_o_rsci_d_15 <= _004_;
  logic [0:0] _004__X0 ;
  logic [0:0] _004__R0 ;
  logic [0:0] _004__C0 ;
  assign _004__X0 = { 1{ chn_o_rsci_d_15_S != _004__S }} ;
  assign _004__R0 = 0 ;
  assign _004__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_15_T 		<= !nvdla_core_rstn ? 0 : ( _004__T & _004__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_15_t_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_15_t_flag ? 1 : | _004__T & ( | _004__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_15_r_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_15_r_flag ? 1 : chn_o_rsci_d_15_t_flag ? 0 : ( | chn_o_rsci_d_15_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_o_rsci_d_14 <= 1'b0;
    else
      chn_o_rsci_d_14 <= _003_;
  logic [0:0] _003__X0 ;
  logic [0:0] _003__R0 ;
  logic [0:0] _003__C0 ;
  assign _003__X0 = { 1{ chn_o_rsci_d_14_S != _003__S }} ;
  assign _003__R0 = 0 ;
  assign _003__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_14_T 		<= !nvdla_core_rstn ? 0 : ( _003__T & _003__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_14_t_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_14_t_flag ? 1 : | _003__T & ( | _003__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_14_r_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_14_r_flag ? 1 : chn_o_rsci_d_14_t_flag ? 0 : ( | chn_o_rsci_d_14_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_a_rsci_ld_core_psct <= 1'b0;
    else
      chn_a_rsci_ld_core_psct <= _001_;
  logic [0:0] _001__X0 ;
  logic [0:0] _001__R0 ;
  logic [0:0] _001__C0 ;
  assign _001__X0 = { 1{ chn_a_rsci_ld_core_psct_S != _001__S }} ;
  assign _001__R0 = 0 ;
  assign _001__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_a_rsci_ld_core_psct_T 		<= !nvdla_core_rstn ? 0 : ( _001__T & _001__X0 );
  always @( posedge nvdla_core_clk )
      chn_a_rsci_ld_core_psct_t_flag 	<= !nvdla_core_rstn ? 0 : chn_a_rsci_ld_core_psct_t_flag ? 1 : | _001__T & ( | _001__X0 );
  always @( posedge nvdla_core_clk )
      chn_a_rsci_ld_core_psct_r_flag 	<= !nvdla_core_rstn ? 0 : chn_a_rsci_ld_core_psct_r_flag ? 1 : chn_a_rsci_ld_core_psct_t_flag ? 0 : ( | chn_a_rsci_ld_core_psct_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_a_rsci_iswt0 <= 1'b0;
    else
      chn_a_rsci_iswt0 <= _000_;
  logic [0:0] _000__X0 ;
  logic [0:0] _000__R0 ;
  logic [0:0] _000__C0 ;
  assign _000__X0 = { 1{ chn_a_rsci_iswt0_S != _000__S }} ;
  assign _000__R0 = 0 ;
  assign _000__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_a_rsci_iswt0_T 		<= !nvdla_core_rstn ? 0 : ( _000__T & _000__X0 );
  always @( posedge nvdla_core_clk )
      chn_a_rsci_iswt0_t_flag 	<= !nvdla_core_rstn ? 0 : chn_a_rsci_iswt0_t_flag ? 1 : | _000__T & ( | _000__X0 );
  always @( posedge nvdla_core_clk )
      chn_a_rsci_iswt0_r_flag 	<= !nvdla_core_rstn ? 0 : chn_a_rsci_iswt0_r_flag ? 1 : chn_a_rsci_iswt0_t_flag ? 0 : ( | chn_a_rsci_iswt0_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      reg_chn_o_rsci_iswt0_cse <= 1'b0;
    else
      reg_chn_o_rsci_iswt0_cse <= _007_;
  logic [0:0] _007__X0 ;
  logic [0:0] _007__R0 ;
  logic [0:0] _007__C0 ;
  assign _007__X0 = { 1{ reg_chn_o_rsci_iswt0_cse_S != _007__S }} ;
  assign _007__R0 = 0 ;
  assign _007__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      reg_chn_o_rsci_iswt0_cse_T 		<= !nvdla_core_rstn ? 0 : ( _007__T & _007__X0 );
  always @( posedge nvdla_core_clk )
      reg_chn_o_rsci_iswt0_cse_t_flag 	<= !nvdla_core_rstn ? 0 : reg_chn_o_rsci_iswt0_cse_t_flag ? 1 : | _007__T & ( | _007__X0 );
  always @( posedge nvdla_core_clk )
      reg_chn_o_rsci_iswt0_cse_r_flag 	<= !nvdla_core_rstn ? 0 : reg_chn_o_rsci_iswt0_cse_r_flag ? 1 : reg_chn_o_rsci_iswt0_cse_t_flag ? 0 : ( | reg_chn_o_rsci_iswt0_cse_R ) ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl = _053_ ? FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm : 10'b1111111111;
  logic [0:0] _053__C1 ;
  logic [0:0] _053__R1 ;
  logic [0:0] _053__X1 ;
  assign _053__C1 = | FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_C ;
  assign _053__X1 = | FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_X ;
  logic [9:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_C0 ;
  logic [9:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_R0 ;
  logic [9:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_X0 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_C0 = { 10{ _053_ }} ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_R0 = { 10{ _053_ }} & ( FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_R | ( { 10{ _053__T  }} & FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_C ));
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_X0 = { 10{ _053_ }} & FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_X ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_T = _053_ ? ( { 10{ | _053__T  }} | FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_T ) : { 10{ | _053__T  }};
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_S = _053_ ? FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_S : _053__S ;
  assign _053__R1 = ( | (FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_R | ( { 10{ _053_ }} & FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_T & FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_C ))) && FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm != 10'b1111111111 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl = IsDenorm_5U_10U_land_lpi_1_dfm ? FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva[4] : FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl;
  logic [0:0] IsDenorm_5U_10U_land_lpi_1_dfm_C5 ;
  logic [0:0] IsDenorm_5U_10U_land_lpi_1_dfm_R5 ;
  logic [0:0] IsDenorm_5U_10U_land_lpi_1_dfm_X5 ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_C5 = | FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_C ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_X5 = | FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_X ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_T = IsDenorm_5U_10U_land_lpi_1_dfm ? ( { 1{ IsDenorm_5U_10U_land_lpi_1_dfm_T  }} | FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_T [4] ) : ( { 1{ IsDenorm_5U_10U_land_lpi_1_dfm_T  }} | FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_T );
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_S = IsDenorm_5U_10U_land_lpi_1_dfm ? FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_S : FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_S ;
  assign IsDenorm_5U_10U_land_lpi_1_dfm_R5 = ( | (FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_R | ( FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_C & ( { 1{ IsDenorm_5U_10U_land_lpi_1_dfm }} & FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_T [4] | { 1{ !IsDenorm_5U_10U_land_lpi_1_dfm }} & FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_T )))) && FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva[4] != FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_C0 [4] = { 1{ IsDenorm_5U_10U_land_lpi_1_dfm }} ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_R0 [4] = { 1{ IsDenorm_5U_10U_land_lpi_1_dfm }} & ( FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_R | ( { 1{ IsDenorm_5U_10U_land_lpi_1_dfm_T  }} & FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_C ));
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_X0 [4] = { 1{ IsDenorm_5U_10U_land_lpi_1_dfm }} & FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_X ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_C0 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_R0 ;
  logic [0:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_X0 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_C0 = { 1{ !IsDenorm_5U_10U_land_lpi_1_dfm }} ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_R0 = { 1{ !IsDenorm_5U_10U_land_lpi_1_dfm }} & ( FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_R | ( { 1{ IsDenorm_5U_10U_land_lpi_1_dfm_T  }} & FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_C ));
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_X0 = { 1{ !IsDenorm_5U_10U_land_lpi_1_dfm }} & FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_X ;
  assign _008_ = _028_ ? _049_ : reg_chn_o_rsci_ld_core_psct_cse;
  logic [0:0] _028__C0 ;
  logic [0:0] _028__R0 ;
  logic [0:0] _028__X0 ;
  assign _028__C0 = | _008__C ;
  assign _028__X0 = | _008__X ;
  assign _008__T = _028_ ? ( { 1{ _028__T  }} | _049__T ) : ( { 1{ _028__T  }} | reg_chn_o_rsci_ld_core_psct_cse_T );
  assign _008__S = _028_ ? _049__S : reg_chn_o_rsci_ld_core_psct_cse_S ;
  assign _028__R0 = ( | (_008__R | ( _008__C & ( { 1{ _028_ }} & _049__T | { 1{ !_028_ }} & reg_chn_o_rsci_ld_core_psct_cse_T )))) && _049_ != reg_chn_o_rsci_ld_core_psct_cse ;
  logic [0:0] _049__C0 ;
  logic [0:0] _049__R0 ;
  logic [0:0] _049__X0 ;
  assign _049__C0 = { 1{ _028_ }} ;
  assign _049__R0 = { 1{ _028_ }} & ( _008__R | ( { 1{ _028__T  }} & _008__C ));
  assign _049__X0 = { 1{ _028_ }} & _008__X ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C3 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R3 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X3 ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C3 = { 1{ !_028_ }} ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R3 = { 1{ !_028_ }} & ( _008__R | ( { 1{ _028__T  }} & _008__C ));
  assign reg_chn_o_rsci_ld_core_psct_cse_X3 = { 1{ !_028_ }} & _008__X ;
  assign _009_ = _029_ ? FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl : chn_a_rsci_d_mxwt[9:0];
  logic [0:0] _029__C0 ;
  logic [0:0] _029__R0 ;
  logic [0:0] _029__X0 ;
  assign _029__C0 = | _009__C ;
  assign _029__X0 = | _009__X ;
  assign _009__T = _029_ ? ( { 10{ _029__T  }} | FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_T ) : ( { 10{ _029__T  }} | chn_a_rsci_d_mxwt_T [9:0] );
  assign _009__S = _029_ ? FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_S : chn_a_rsci_d_mxwt_S ;
  assign _029__R0 = ( | (_009__R | ( _009__C & ( { 10{ _029_ }} & FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_T | { 10{ !_029_ }} & chn_a_rsci_d_mxwt_T [9:0] )))) && FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl != chn_a_rsci_d_mxwt[9:0] ;
  logic [9:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_C0 ;
  logic [9:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_R0 ;
  logic [9:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_X0 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_C0 = { 10{ _029_ }} ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_R0 = { 10{ _029_ }} & ( _009__R | ( { 10{ _029__T  }} & _009__C ));
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_X0 = { 10{ _029_ }} & _009__X ;
  assign chn_a_rsci_d_mxwt_C5 [9:0] = { 10{ !_029_ }} ;
  assign chn_a_rsci_d_mxwt_R5 [9:0] = { 10{ !_029_ }} & ( _009__R | ( { 10{ _029__T  }} & _009__C ));
  assign chn_a_rsci_d_mxwt_X5 [9:0] = { 10{ !_029_ }} & _009__X ;
  assign _006_ = _027_ ? _009_ : chn_o_rsci_d_9_0;
  logic [0:0] _027__C0 ;
  logic [0:0] _027__R0 ;
  logic [0:0] _027__X0 ;
  assign _027__C0 = | _006__C ;
  assign _027__X0 = | _006__X ;
  assign _006__T = _027_ ? ( { 10{ _027__T  }} | _009__T ) : ( { 10{ _027__T  }} | chn_o_rsci_d_9_0_T );
  assign _006__S = _027_ ? _009__S : chn_o_rsci_d_9_0_S ;
  assign _027__R0 = ( | (_006__R | ( _006__C & ( { 10{ _027_ }} & _009__T | { 10{ !_027_ }} & chn_o_rsci_d_9_0_T )))) && _009_ != chn_o_rsci_d_9_0 ;
  logic [9:0] _009__C0 ;
  logic [9:0] _009__R0 ;
  logic [9:0] _009__X0 ;
  assign _009__C0 = { 10{ _027_ }} ;
  assign _009__R0 = { 10{ _027_ }} & ( _006__R | ( { 10{ _027__T  }} & _006__C ));
  assign _009__X0 = { 10{ _027_ }} & _006__X ;
  logic [9:0] chn_o_rsci_d_9_0_C0 ;
  logic [9:0] chn_o_rsci_d_9_0_R0 ;
  logic [9:0] chn_o_rsci_d_9_0_X0 ;
  assign chn_o_rsci_d_9_0_C0 = { 10{ !_027_ }} ;
  assign chn_o_rsci_d_9_0_R0 = { 10{ !_027_ }} & ( _006__R | ( { 10{ _027__T  }} & _006__C ));
  assign chn_o_rsci_d_9_0_X0 = { 10{ !_027_ }} & _006__X ;
  assign _010_ = IsNaN_5U_10U_land_lpi_1_dfm ? 4'b1111 : FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl;
  logic [0:0] IsNaN_5U_10U_land_lpi_1_dfm_C1 ;
  logic [0:0] IsNaN_5U_10U_land_lpi_1_dfm_R1 ;
  logic [0:0] IsNaN_5U_10U_land_lpi_1_dfm_X1 ;
  assign IsNaN_5U_10U_land_lpi_1_dfm_C1 = | _010__C ;
  assign IsNaN_5U_10U_land_lpi_1_dfm_X1 = | _010__X ;
  logic [3:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_C0 ;
  logic [3:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_R0 ;
  logic [3:0] FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_X0 ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_C0 = { 4{ !IsNaN_5U_10U_land_lpi_1_dfm }};
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_R0 = { 4{ !IsNaN_5U_10U_land_lpi_1_dfm }} & ( _010__R | ( { 4{ IsNaN_5U_10U_land_lpi_1_dfm_T  }} & _010__C ));
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_X0 = { 4{ !IsNaN_5U_10U_land_lpi_1_dfm }} & _010__X ;
  assign _010__T = IsNaN_5U_10U_land_lpi_1_dfm ? { 4{ | IsNaN_5U_10U_land_lpi_1_dfm_T  }} : ( { 4{ | IsNaN_5U_10U_land_lpi_1_dfm_T  }} | FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_T );
  assign _010__S = IsNaN_5U_10U_land_lpi_1_dfm ? IsNaN_5U_10U_land_lpi_1_dfm_S : FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_S ;
  assign IsNaN_5U_10U_land_lpi_1_dfm_R1 = ( | (_010__R | ( { 4{ !IsNaN_5U_10U_land_lpi_1_dfm }} & FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_T & _010__C ))) && 4'b1111 != FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl ;
  assign _004_ = chn_o_and_1_cse ? chn_a_rsci_d_mxwt[14] : chn_o_rsci_d_15;
  logic [0:0] chn_o_and_1_cse_C0 ;
  logic [0:0] chn_o_and_1_cse_R0 ;
  logic [0:0] chn_o_and_1_cse_X0 ;
  assign chn_o_and_1_cse_C0 = | _004__C ;
  assign chn_o_and_1_cse_X0 = | _004__X ;
  assign _004__T = chn_o_and_1_cse ? ( { 1{ chn_o_and_1_cse_T  }} | chn_a_rsci_d_mxwt_T [14] ) : ( { 1{ chn_o_and_1_cse_T  }} | chn_o_rsci_d_15_T );
  assign _004__S = chn_o_and_1_cse ? chn_a_rsci_d_mxwt_S : chn_o_rsci_d_15_S ;
  assign chn_o_and_1_cse_R0 = ( | (_004__R | ( _004__C & ( { 1{ chn_o_and_1_cse }} & chn_a_rsci_d_mxwt_T [14] | { 1{ !chn_o_and_1_cse }} & chn_o_rsci_d_15_T )))) && chn_a_rsci_d_mxwt[14] != chn_o_rsci_d_15 ;
  assign { chn_a_rsci_d_mxwt_R5 [13], chn_a_rsci_d_mxwt_R5 [15:15] } = 0;
  assign { chn_a_rsci_d_mxwt_X5 [13], chn_a_rsci_d_mxwt_X5 [15:15] } = 0;
  assign { chn_a_rsci_d_mxwt_C5 [13], chn_a_rsci_d_mxwt_C5 [15:15] } = 0;
  logic [15:0] chn_a_rsci_d_mxwt_C6 ;
  logic [15:0] chn_a_rsci_d_mxwt_R6 ;
  logic [15:0] chn_a_rsci_d_mxwt_X6 ;
  assign chn_a_rsci_d_mxwt_C6 [14] = { 1{ chn_o_and_1_cse }} ;
  assign chn_a_rsci_d_mxwt_R6 [14] = { 1{ chn_o_and_1_cse }} & ( _004__R | ( { 1{ chn_o_and_1_cse_T  }} & _004__C ));
  assign chn_a_rsci_d_mxwt_X6 [14] = { 1{ chn_o_and_1_cse }} & _004__X ;
  logic [0:0] chn_o_rsci_d_15_C0 ;
  logic [0:0] chn_o_rsci_d_15_R0 ;
  logic [0:0] chn_o_rsci_d_15_X0 ;
  assign chn_o_rsci_d_15_C0 = { 1{ !chn_o_and_1_cse }} ;
  assign chn_o_rsci_d_15_R0 = { 1{ !chn_o_and_1_cse }} & ( _004__R | ( { 1{ chn_o_and_1_cse_T  }} & _004__C ));
  assign chn_o_rsci_d_15_X0 = { 1{ !chn_o_and_1_cse }} & _004__X ;
  assign _002_ = chn_o_and_1_cse ? _010_ : chn_o_rsci_d_13_10;
  logic [0:0] chn_o_and_1_cse_C1 ;
  logic [0:0] chn_o_and_1_cse_R1 ;
  logic [0:0] chn_o_and_1_cse_X1 ;
  assign chn_o_and_1_cse_C1 = | _002__C ;
  assign chn_o_and_1_cse_X1 = | _002__X ;
  assign _002__T = chn_o_and_1_cse ? ( { 4{ chn_o_and_1_cse_T  }} | _010__T ) : ( { 4{ chn_o_and_1_cse_T  }} | chn_o_rsci_d_13_10_T );
  assign _002__S = chn_o_and_1_cse ? _010__S : chn_o_rsci_d_13_10_S ;
  assign chn_o_and_1_cse_R1 = ( | (_002__R | ( _002__C & ( { 4{ chn_o_and_1_cse }} & _010__T | { 4{ !chn_o_and_1_cse }} & chn_o_rsci_d_13_10_T )))) && _010_ != chn_o_rsci_d_13_10 ;
  logic [3:0] _010__C0 ;
  logic [3:0] _010__R0 ;
  logic [3:0] _010__X0 ;
  assign _010__C0 = { 4{ chn_o_and_1_cse }} ;
  assign _010__R0 = { 4{ chn_o_and_1_cse }} & ( _002__R | ( { 4{ chn_o_and_1_cse_T  }} & _002__C ));
  assign _010__X0 = { 4{ chn_o_and_1_cse }} & _002__X ;
  logic [3:0] chn_o_rsci_d_13_10_C0 ;
  logic [3:0] chn_o_rsci_d_13_10_R0 ;
  logic [3:0] chn_o_rsci_d_13_10_X0 ;
  assign chn_o_rsci_d_13_10_C0 = { 4{ !chn_o_and_1_cse }} ;
  assign chn_o_rsci_d_13_10_R0 = { 4{ !chn_o_and_1_cse }} & ( _002__R | ( { 4{ chn_o_and_1_cse_T  }} & _002__C ));
  assign chn_o_rsci_d_13_10_X0 = { 4{ !chn_o_and_1_cse }} & _002__X ;
  assign _005_ = chn_o_and_1_cse ? chn_a_rsci_d_mxwt[15] : chn_o_rsci_d_16;
  logic [0:0] chn_o_and_1_cse_C2 ;
  logic [0:0] chn_o_and_1_cse_R2 ;
  logic [0:0] chn_o_and_1_cse_X2 ;
  assign chn_o_and_1_cse_C2 = | _005__C ;
  assign chn_o_and_1_cse_X2 = | _005__X ;
  assign _005__T = chn_o_and_1_cse ? ( { 1{ chn_o_and_1_cse_T  }} | chn_a_rsci_d_mxwt_T [15] ) : ( { 1{ chn_o_and_1_cse_T  }} | chn_o_rsci_d_16_T );
  assign _005__S = chn_o_and_1_cse ? chn_a_rsci_d_mxwt_S : chn_o_rsci_d_16_S ;
  assign chn_o_and_1_cse_R2 = ( | (_005__R | ( _005__C & ( { 1{ chn_o_and_1_cse }} & chn_a_rsci_d_mxwt_T [15] | { 1{ !chn_o_and_1_cse }} & chn_o_rsci_d_16_T )))) && chn_a_rsci_d_mxwt[15] != chn_o_rsci_d_16 ;
  assign chn_a_rsci_d_mxwt_C6 [15] = { 1{ chn_o_and_1_cse }} ;
  assign chn_a_rsci_d_mxwt_R6 [15] = { 1{ chn_o_and_1_cse }} & ( _005__R | ( { 1{ chn_o_and_1_cse_T  }} & _005__C ));
  assign chn_a_rsci_d_mxwt_X6 [15] = { 1{ chn_o_and_1_cse }} & _005__X ;
  logic [0:0] chn_o_rsci_d_16_C0 ;
  logic [0:0] chn_o_rsci_d_16_R0 ;
  logic [0:0] chn_o_rsci_d_16_X0 ;
  assign chn_o_rsci_d_16_C0 = { 1{ !chn_o_and_1_cse }} ;
  assign chn_o_rsci_d_16_R0 = { 1{ !chn_o_and_1_cse }} & ( _005__R | ( { 1{ chn_o_and_1_cse_T  }} & _005__C ));
  assign chn_o_rsci_d_16_X0 = { 1{ !chn_o_and_1_cse }} & _005__X ;
  assign _003_ = _021_ ? _056_ : chn_o_rsci_d_14;
  logic [0:0] _021__C0 ;
  logic [0:0] _021__R0 ;
  logic [0:0] _021__X0 ;
  assign _021__C0 = | _003__C ;
  assign _021__X0 = | _003__X ;
  assign _003__T = _021_ ? ( { 1{ _021__T  }} | _056__T ) : ( { 1{ _021__T  }} | chn_o_rsci_d_14_T );
  assign _003__S = _021_ ? _056__S : chn_o_rsci_d_14_S ;
  assign _021__R0 = ( | (_003__R | ( _003__C & ( { 1{ _021_ }} & _056__T | { 1{ !_021_ }} & chn_o_rsci_d_14_T )))) && _056_ != chn_o_rsci_d_14 ;
  logic [0:0] _056__C0 ;
  logic [0:0] _056__R0 ;
  logic [0:0] _056__X0 ;
  assign _056__C0 = { 1{ _021_ }} ;
  assign _056__R0 = { 1{ _021_ }} & ( _003__R | ( { 1{ _021__T  }} & _003__C ));
  assign _056__X0 = { 1{ _021_ }} & _003__X ;
  logic [0:0] chn_o_rsci_d_14_C0 ;
  logic [0:0] chn_o_rsci_d_14_R0 ;
  logic [0:0] chn_o_rsci_d_14_X0 ;
  assign chn_o_rsci_d_14_C0 = { 1{ !_021_ }} ;
  assign chn_o_rsci_d_14_R0 = { 1{ !_021_ }} & ( _003__R | ( { 1{ _021__T  }} & _003__C ));
  assign chn_o_rsci_d_14_X0 = { 1{ !_021_ }} & _003__X ;
  assign _001_ = _019_ ? chn_a_rsci_ld_core_psct_mx0c0 : chn_a_rsci_ld_core_psct;
  logic [0:0] _019__C0 ;
  logic [0:0] _019__R0 ;
  logic [0:0] _019__X0 ;
  assign _019__C0 = | _001__C ;
  assign _019__X0 = | _001__X ;
  assign _001__T = _019_ ? ( { 1{ _019__T  }} | chn_a_rsci_ld_core_psct_mx0c0_T ) : ( { 1{ _019__T  }} | chn_a_rsci_ld_core_psct_T );
  assign _001__S = _019_ ? chn_a_rsci_ld_core_psct_mx0c0_S : chn_a_rsci_ld_core_psct_S ;
  assign _019__R0 = ( | (_001__R | ( _001__C & ( { 1{ _019_ }} & chn_a_rsci_ld_core_psct_mx0c0_T | { 1{ !_019_ }} & chn_a_rsci_ld_core_psct_T )))) && chn_a_rsci_ld_core_psct_mx0c0 != chn_a_rsci_ld_core_psct ;
  logic [0:0] chn_a_rsci_ld_core_psct_mx0c0_C1 ;
  logic [0:0] chn_a_rsci_ld_core_psct_mx0c0_R1 ;
  logic [0:0] chn_a_rsci_ld_core_psct_mx0c0_X1 ;
  assign chn_a_rsci_ld_core_psct_mx0c0_C1 = { 1{ _019_ }} ;
  assign chn_a_rsci_ld_core_psct_mx0c0_R1 = { 1{ _019_ }} & ( _001__R | ( { 1{ _019__T  }} & _001__C ));
  assign chn_a_rsci_ld_core_psct_mx0c0_X1 = { 1{ _019_ }} & _001__X ;
  logic [0:0] chn_a_rsci_ld_core_psct_C0 ;
  logic [0:0] chn_a_rsci_ld_core_psct_R0 ;
  logic [0:0] chn_a_rsci_ld_core_psct_X0 ;
  assign chn_a_rsci_ld_core_psct_C0 = { 1{ !_019_ }} ;
  assign chn_a_rsci_ld_core_psct_R0 = { 1{ !_019_ }} & ( _001__R | ( { 1{ _019__T  }} & _001__C ));
  assign chn_a_rsci_ld_core_psct_X0 = { 1{ !_019_ }} & _001__X ;
  assign _007_ = core_wen ? and_6_cse : reg_chn_o_rsci_iswt0_cse;
  logic [0:0] core_wen_C5 ;
  logic [0:0] core_wen_R5 ;
  logic [0:0] core_wen_X5 ;
  assign core_wen_C5 = | _007__C ;
  assign core_wen_X5 = | _007__X ;
  assign _007__T = core_wen ? ( { 1{ core_wen_T  }} | and_6_cse_T ) : ( { 1{ core_wen_T  }} | reg_chn_o_rsci_iswt0_cse_T );
  assign _007__S = core_wen ? and_6_cse_S : reg_chn_o_rsci_iswt0_cse_S ;
  assign core_wen_R5 = ( | (_007__R | ( _007__C & ( { 1{ core_wen }} & and_6_cse_T | { 1{ !core_wen }} & reg_chn_o_rsci_iswt0_cse_T )))) && and_6_cse != reg_chn_o_rsci_iswt0_cse ;
  logic [0:0] and_6_cse_C1 ;
  logic [0:0] and_6_cse_R1 ;
  logic [0:0] and_6_cse_X1 ;
  assign and_6_cse_C1 = { 1{ core_wen }} ;
  assign and_6_cse_R1 = { 1{ core_wen }} & ( _007__R | ( { 1{ core_wen_T  }} & _007__C ));
  assign and_6_cse_X1 = { 1{ core_wen }} & _007__X ;
  logic [0:0] reg_chn_o_rsci_iswt0_cse_C0 ;
  logic [0:0] reg_chn_o_rsci_iswt0_cse_R0 ;
  logic [0:0] reg_chn_o_rsci_iswt0_cse_X0 ;
  assign reg_chn_o_rsci_iswt0_cse_C0 = { 1{ !core_wen }} ;
  assign reg_chn_o_rsci_iswt0_cse_R0 = { 1{ !core_wen }} & ( _007__R | ( { 1{ core_wen_T  }} & _007__C ));
  assign reg_chn_o_rsci_iswt0_cse_X0 = { 1{ !core_wen }} & _007__X ;
  assign _000_ = core_wen ? _046_ : chn_a_rsci_iswt0;
  logic [0:0] core_wen_C6 ;
  logic [0:0] core_wen_R6 ;
  logic [0:0] core_wen_X6 ;
  assign core_wen_C6 = | _000__C ;
  assign core_wen_X6 = | _000__X ;
  assign _000__T = core_wen ? ( { 1{ core_wen_T  }} | _046__T ) : ( { 1{ core_wen_T  }} | chn_a_rsci_iswt0_T );
  assign _000__S = core_wen ? _046__S : chn_a_rsci_iswt0_S ;
  assign core_wen_R6 = ( | (_000__R | ( _000__C & ( { 1{ core_wen }} & _046__T | { 1{ !core_wen }} & chn_a_rsci_iswt0_T )))) && _046_ != chn_a_rsci_iswt0 ;
  logic [0:0] _046__C0 ;
  logic [0:0] _046__R0 ;
  logic [0:0] _046__X0 ;
  assign _046__C0 = { 1{ core_wen }} ;
  assign _046__R0 = { 1{ core_wen }} & ( _000__R | ( { 1{ core_wen_T  }} & _000__C ));
  assign _046__X0 = { 1{ core_wen }} & _000__X ;
  logic [0:0] chn_a_rsci_iswt0_C0 ;
  logic [0:0] chn_a_rsci_iswt0_R0 ;
  logic [0:0] chn_a_rsci_iswt0_X0 ;
  assign chn_a_rsci_iswt0_C0 = { 1{ !core_wen }} ;
  assign chn_a_rsci_iswt0_R0 = { 1{ !core_wen }} & ( _000__R | ( { 1{ core_wen_T  }} & _000__C ));
  assign chn_a_rsci_iswt0_X0 = { 1{ !core_wen }} & _000__X ;
  logic [4:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s_R0 ;
  logic [4:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s_X0 ;
  logic [4:0] nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s_C0 ;
// module: \$paramod\FP16_TO_FP17_mgc_shift_l_v4\width_a=9\signd_a=1\width_s=5\width_z=10
  \$paramod\FP16_TO_FP17_mgc_shift_l_v4\width_a=9\signd_a=1\width_s=5\width_z=10 FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg (
    .a_T (  chn_a_rsci_d_mxwt_T [8:0]  ),
    .a_R (  chn_a_rsci_d_mxwt_R6 [8:0]  ),
    .a_X (  chn_a_rsci_d_mxwt_X6 [8:0]  ),
    .a_C (  chn_a_rsci_d_mxwt_C6 [8:0]  ),
    .a_S (  chn_a_rsci_d_mxwt_S [8:0]  ),
    .s_T (  nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s_T  ),
    .s_R (  nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s_R0  ),
    .s_X (  nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s_X0  ),
    .s_C (  nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s_C0  ),
    .s_S (  nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .rst_zy(rst_zy),
    .z_T (  FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_T  ),
    .z_R0 (  FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_R  ),
    .z_X0 (  FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_X  ),
    .z_C0 (  FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_C  ),
    .z_S ( FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_S ),
    .z ( FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm ),
    .a ( chn_a_rsci_d_mxwt[8:0] ),
    .s ( nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s )
  );
  logic [0:0] chn_a_rsc_vz_R0 ;
  logic [0:0] chn_a_rsc_vz_X0 ;
  logic [0:0] chn_a_rsc_vz_C0 ;
  logic [15:0] chn_a_rsc_z_R0 ;
  logic [15:0] chn_a_rsc_z_X0 ;
  logic [15:0] chn_a_rsc_z_C0 ;
  logic [0:0] chn_a_rsci_iswt0_R1 ;
  logic [0:0] chn_a_rsci_iswt0_X1 ;
  logic [0:0] chn_a_rsci_iswt0_C1 ;
  logic [0:0] chn_a_rsci_ld_core_psct_R1 ;
  logic [0:0] chn_a_rsci_ld_core_psct_X1 ;
  logic [0:0] chn_a_rsci_ld_core_psct_C1 ;
  logic [0:0] chn_a_rsci_oswt_R0 ;
  logic [0:0] chn_a_rsci_oswt_X0 ;
  logic [0:0] chn_a_rsci_oswt_C0 ;
  logic [0:0] core_wen_R7 ;
  logic [0:0] core_wen_X7 ;
  logic [0:0] core_wen_C7 ;
  logic [0:0] core_wten_R0 ;
  logic [0:0] core_wten_X0 ;
  logic [0:0] core_wten_C0 ;
  logic [0:0] nvdla_core_rstn_R0 ;
  logic [0:0] nvdla_core_rstn_X0 ;
  logic [0:0] nvdla_core_rstn_C0 ;
// module: HLS_fp16_to_fp17_core_chn_a_rsci
  HLS_fp16_to_fp17_core_chn_a_rsci HLS_fp16_to_fp17_core_chn_a_rsci_inst (
    .chn_a_rsc_vz_T (  chn_a_rsc_vz_T  ),
    .chn_a_rsc_vz_R (  chn_a_rsc_vz_R0  ),
    .chn_a_rsc_vz_X (  chn_a_rsc_vz_X0  ),
    .chn_a_rsc_vz_C (  chn_a_rsc_vz_C0  ),
    .chn_a_rsc_vz_S (  chn_a_rsc_vz_S  ),
    .chn_a_rsc_z_T (  chn_a_rsc_z_T  ),
    .chn_a_rsc_z_R (  chn_a_rsc_z_R0  ),
    .chn_a_rsc_z_X (  chn_a_rsc_z_X0  ),
    .chn_a_rsc_z_C (  chn_a_rsc_z_C0  ),
    .chn_a_rsc_z_S (  chn_a_rsc_z_S  ),
    .chn_a_rsci_iswt0_T (  chn_a_rsci_iswt0_T  ),
    .chn_a_rsci_iswt0_R (  chn_a_rsci_iswt0_R1  ),
    .chn_a_rsci_iswt0_X (  chn_a_rsci_iswt0_X1  ),
    .chn_a_rsci_iswt0_C (  chn_a_rsci_iswt0_C1  ),
    .chn_a_rsci_iswt0_S (  chn_a_rsci_iswt0_S  ),
    .chn_a_rsci_ld_core_psct_T (  chn_a_rsci_ld_core_psct_T  ),
    .chn_a_rsci_ld_core_psct_R (  chn_a_rsci_ld_core_psct_R1  ),
    .chn_a_rsci_ld_core_psct_X (  chn_a_rsci_ld_core_psct_X1  ),
    .chn_a_rsci_ld_core_psct_C (  chn_a_rsci_ld_core_psct_C1  ),
    .chn_a_rsci_ld_core_psct_S (  chn_a_rsci_ld_core_psct_S  ),
    .chn_a_rsci_oswt_T (  chn_a_rsci_oswt_T  ),
    .chn_a_rsci_oswt_R (  chn_a_rsci_oswt_R0  ),
    .chn_a_rsci_oswt_X (  chn_a_rsci_oswt_X0  ),
    .chn_a_rsci_oswt_C (  chn_a_rsci_oswt_C0  ),
    .chn_a_rsci_oswt_S (  chn_a_rsci_oswt_S  ),
    .core_wen_T (  core_wen_T  ),
    .core_wen_R (  core_wen_R7  ),
    .core_wen_X (  core_wen_X7  ),
    .core_wen_C (  core_wen_C7  ),
    .core_wen_S (  core_wen_S  ),
    .core_wten_T (  core_wten_T  ),
    .core_wten_R (  core_wten_R0  ),
    .core_wten_X (  core_wten_X0  ),
    .core_wten_C (  core_wten_C0  ),
    .core_wten_S (  core_wten_S  ),
    .nvdla_core_rstn_T (  nvdla_core_rstn_T  ),
    .nvdla_core_rstn_R (  nvdla_core_rstn_R0  ),
    .nvdla_core_rstn_X (  nvdla_core_rstn_X0  ),
    .nvdla_core_rstn_C (  nvdla_core_rstn_C0  ),
    .nvdla_core_rstn_S (  nvdla_core_rstn_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .chn_a_rsc_lz_T (  chn_a_rsc_lz_T  ),
    .chn_a_rsc_lz_R0 (  chn_a_rsc_lz_R  ),
    .chn_a_rsc_lz_X0 (  chn_a_rsc_lz_X  ),
    .chn_a_rsc_lz_C0 (  chn_a_rsc_lz_C  ),
    .chn_a_rsc_lz_S ( chn_a_rsc_lz_S ),
    .chn_a_rsci_bawt_T (  chn_a_rsci_bawt_T  ),
    .chn_a_rsci_bawt_R0 (  chn_a_rsci_bawt_R  ),
    .chn_a_rsci_bawt_X0 (  chn_a_rsci_bawt_X  ),
    .chn_a_rsci_bawt_C0 (  chn_a_rsci_bawt_C  ),
    .chn_a_rsci_bawt_S ( chn_a_rsci_bawt_S ),
    .chn_a_rsci_d_mxwt_T (  chn_a_rsci_d_mxwt_T  ),
    .chn_a_rsci_d_mxwt_R0 (  chn_a_rsci_d_mxwt_R  ),
    .chn_a_rsci_d_mxwt_X0 (  chn_a_rsci_d_mxwt_X  ),
    .chn_a_rsci_d_mxwt_C0 (  chn_a_rsci_d_mxwt_C  ),
    .chn_a_rsci_d_mxwt_S ( chn_a_rsci_d_mxwt_S ),
    .chn_a_rsci_wen_comp_T (  chn_a_rsci_wen_comp_T  ),
    .chn_a_rsci_wen_comp_R0 (  chn_a_rsci_wen_comp_R  ),
    .chn_a_rsci_wen_comp_X0 (  chn_a_rsci_wen_comp_X  ),
    .chn_a_rsci_wen_comp_C0 (  chn_a_rsci_wen_comp_C  ),
    .chn_a_rsci_wen_comp_S ( chn_a_rsci_wen_comp_S ),
    .nvdla_core_clk ( nvdla_core_clk ),
    .chn_a_rsci_d_mxwt ( chn_a_rsci_d_mxwt ),
    .core_wten ( core_wten ),
    .chn_a_rsci_bawt ( chn_a_rsci_bawt ),
    .chn_a_rsc_z ( chn_a_rsc_z ),
    .chn_a_rsc_lz ( chn_a_rsc_lz ),
    .chn_a_rsc_vz ( chn_a_rsc_vz ),
    .chn_a_rsci_ld_core_psct ( chn_a_rsci_ld_core_psct ),
    .chn_a_rsci_oswt ( chn_a_rsci_oswt ),
    .nvdla_core_rstn ( nvdla_core_rstn ),
    .chn_a_rsci_wen_comp ( chn_a_rsci_wen_comp ),
    .chn_a_rsci_iswt0 ( chn_a_rsci_iswt0 ),
    .core_wen ( core_wen )
  );
  logic [0:0] chn_o_rsc_vz_R0 ;
  logic [0:0] chn_o_rsc_vz_X0 ;
  logic [0:0] chn_o_rsc_vz_C0 ;
  logic [0:0] chn_o_rsci_d_16_R1 ;
  logic [0:0] chn_o_rsci_d_16_X1 ;
  logic [0:0] chn_o_rsci_d_16_C1 ;
  logic [0:0] chn_o_rsci_d_15_R1 ;
  logic [0:0] chn_o_rsci_d_15_X1 ;
  logic [0:0] chn_o_rsci_d_15_C1 ;
  logic [0:0] chn_o_rsci_d_14_R1 ;
  logic [0:0] chn_o_rsci_d_14_X1 ;
  logic [0:0] chn_o_rsci_d_14_C1 ;
  logic [3:0] chn_o_rsci_d_13_10_R1 ;
  logic [3:0] chn_o_rsci_d_13_10_X1 ;
  logic [3:0] chn_o_rsci_d_13_10_C1 ;
  logic [9:0] chn_o_rsci_d_9_0_R1 ;
  logic [9:0] chn_o_rsci_d_9_0_X1 ;
  logic [9:0] chn_o_rsci_d_9_0_C1 ;
  logic [0:0] reg_chn_o_rsci_iswt0_cse_R1 ;
  logic [0:0] reg_chn_o_rsci_iswt0_cse_X1 ;
  logic [0:0] reg_chn_o_rsci_iswt0_cse_C1 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R4 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X4 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C4 ;
  logic [0:0] chn_o_rsci_oswt_R0 ;
  logic [0:0] chn_o_rsci_oswt_X0 ;
  logic [0:0] chn_o_rsci_oswt_C0 ;
  logic [0:0] core_wen_R8 ;
  logic [0:0] core_wen_X8 ;
  logic [0:0] core_wen_C8 ;
  logic [0:0] core_wten_R1 ;
  logic [0:0] core_wten_X1 ;
  logic [0:0] core_wten_C1 ;
  logic [0:0] nvdla_core_rstn_R1 ;
  logic [0:0] nvdla_core_rstn_X1 ;
  logic [0:0] nvdla_core_rstn_C1 ;
// module: HLS_fp16_to_fp17_core_chn_o_rsci
  HLS_fp16_to_fp17_core_chn_o_rsci HLS_fp16_to_fp17_core_chn_o_rsci_inst (
    .chn_o_rsc_vz_T (  chn_o_rsc_vz_T  ),
    .chn_o_rsc_vz_R (  chn_o_rsc_vz_R0  ),
    .chn_o_rsc_vz_X (  chn_o_rsc_vz_X0  ),
    .chn_o_rsc_vz_C (  chn_o_rsc_vz_C0  ),
    .chn_o_rsc_vz_S (  chn_o_rsc_vz_S  ),
    .chn_o_rsci_d_T ( {  chn_o_rsci_d_16_T , chn_o_rsci_d_15_T , chn_o_rsci_d_14_T , chn_o_rsci_d_13_10_T , chn_o_rsci_d_9_0_T  } ),
    .chn_o_rsci_d_R ( {  chn_o_rsci_d_16_R1 , chn_o_rsci_d_15_R1 , chn_o_rsci_d_14_R1 , chn_o_rsci_d_13_10_R1 , chn_o_rsci_d_9_0_R1  } ),
    .chn_o_rsci_d_X ( {  chn_o_rsci_d_16_X1 , chn_o_rsci_d_15_X1 , chn_o_rsci_d_14_X1 , chn_o_rsci_d_13_10_X1 , chn_o_rsci_d_9_0_X1  } ),
    .chn_o_rsci_d_C ( {  chn_o_rsci_d_16_C1 , chn_o_rsci_d_15_C1 , chn_o_rsci_d_14_C1 , chn_o_rsci_d_13_10_C1 , chn_o_rsci_d_9_0_C1  } ),
    .chn_o_rsci_d_S ( {  chn_o_rsci_d_16_S , chn_o_rsci_d_15_S , chn_o_rsci_d_14_S , chn_o_rsci_d_13_10_S , chn_o_rsci_d_9_0_S  } ),
    .chn_o_rsci_iswt0_T (  reg_chn_o_rsci_iswt0_cse_T  ),
    .chn_o_rsci_iswt0_R (  reg_chn_o_rsci_iswt0_cse_R1  ),
    .chn_o_rsci_iswt0_X (  reg_chn_o_rsci_iswt0_cse_X1  ),
    .chn_o_rsci_iswt0_C (  reg_chn_o_rsci_iswt0_cse_C1  ),
    .chn_o_rsci_iswt0_S (  reg_chn_o_rsci_iswt0_cse_S  ),
    .chn_o_rsci_ld_core_psct_T (  reg_chn_o_rsci_ld_core_psct_cse_T  ),
    .chn_o_rsci_ld_core_psct_R (  reg_chn_o_rsci_ld_core_psct_cse_R4  ),
    .chn_o_rsci_ld_core_psct_X (  reg_chn_o_rsci_ld_core_psct_cse_X4  ),
    .chn_o_rsci_ld_core_psct_C (  reg_chn_o_rsci_ld_core_psct_cse_C4  ),
    .chn_o_rsci_ld_core_psct_S (  reg_chn_o_rsci_ld_core_psct_cse_S  ),
    .chn_o_rsci_oswt_T (  chn_o_rsci_oswt_T  ),
    .chn_o_rsci_oswt_R (  chn_o_rsci_oswt_R0  ),
    .chn_o_rsci_oswt_X (  chn_o_rsci_oswt_X0  ),
    .chn_o_rsci_oswt_C (  chn_o_rsci_oswt_C0  ),
    .chn_o_rsci_oswt_S (  chn_o_rsci_oswt_S  ),
    .core_wen_T (  core_wen_T  ),
    .core_wen_R (  core_wen_R8  ),
    .core_wen_X (  core_wen_X8  ),
    .core_wen_C (  core_wen_C8  ),
    .core_wen_S (  core_wen_S  ),
    .core_wten_T (  core_wten_T  ),
    .core_wten_R (  core_wten_R1  ),
    .core_wten_X (  core_wten_X1  ),
    .core_wten_C (  core_wten_C1  ),
    .core_wten_S (  core_wten_S  ),
    .nvdla_core_rstn_T (  nvdla_core_rstn_T  ),
    .nvdla_core_rstn_R (  nvdla_core_rstn_R1  ),
    .nvdla_core_rstn_X (  nvdla_core_rstn_X1  ),
    .nvdla_core_rstn_C (  nvdla_core_rstn_C1  ),
    .nvdla_core_rstn_S (  nvdla_core_rstn_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .chn_o_rsc_lz_T (  chn_o_rsc_lz_T  ),
    .chn_o_rsc_lz_R0 (  chn_o_rsc_lz_R  ),
    .chn_o_rsc_lz_X0 (  chn_o_rsc_lz_X  ),
    .chn_o_rsc_lz_C0 (  chn_o_rsc_lz_C  ),
    .chn_o_rsc_lz_S ( chn_o_rsc_lz_S ),
    .chn_o_rsc_z_T (  chn_o_rsc_z_T  ),
    .chn_o_rsc_z_R0 (  chn_o_rsc_z_R  ),
    .chn_o_rsc_z_X0 (  chn_o_rsc_z_X  ),
    .chn_o_rsc_z_C0 (  chn_o_rsc_z_C  ),
    .chn_o_rsc_z_S ( chn_o_rsc_z_S ),
    .chn_o_rsci_bawt_T (  chn_o_rsci_bawt_T  ),
    .chn_o_rsci_bawt_R0 (  chn_o_rsci_bawt_R  ),
    .chn_o_rsci_bawt_X0 (  chn_o_rsci_bawt_X  ),
    .chn_o_rsci_bawt_C0 (  chn_o_rsci_bawt_C  ),
    .chn_o_rsci_bawt_S ( chn_o_rsci_bawt_S ),
    .chn_o_rsci_wen_comp_T (  chn_o_rsci_wen_comp_T  ),
    .chn_o_rsci_wen_comp_R0 (  chn_o_rsci_wen_comp_R  ),
    .chn_o_rsci_wen_comp_X0 (  chn_o_rsci_wen_comp_X  ),
    .chn_o_rsci_wen_comp_C0 (  chn_o_rsci_wen_comp_C  ),
    .chn_o_rsci_wen_comp_S ( chn_o_rsci_wen_comp_S ),
    .nvdla_core_rstn ( nvdla_core_rstn ),
    .nvdla_core_clk ( nvdla_core_clk ),
    .chn_o_rsci_d ( { chn_o_rsci_d_16, chn_o_rsci_d_15, chn_o_rsci_d_14, chn_o_rsci_d_13_10, chn_o_rsci_d_9_0 } ),
    .core_wten ( core_wten ),
    .chn_o_rsc_z ( chn_o_rsc_z ),
    .core_wen ( core_wen ),
    .chn_o_rsc_lz ( chn_o_rsc_lz ),
    .chn_o_rsci_ld_core_psct ( reg_chn_o_rsci_ld_core_psct_cse ),
    .chn_o_rsci_bawt ( chn_o_rsci_bawt ),
    .chn_o_rsc_vz ( chn_o_rsc_vz ),
    .chn_o_rsci_wen_comp ( chn_o_rsci_wen_comp ),
    .chn_o_rsci_iswt0 ( reg_chn_o_rsci_iswt0_cse ),
    .chn_o_rsci_oswt ( chn_o_rsci_oswt )
  );
  logic [0:0] core_wen_R9 ;
  logic [0:0] core_wen_X9 ;
  logic [0:0] core_wen_C9 ;
  logic [0:0] nvdla_core_rstn_R2 ;
  logic [0:0] nvdla_core_rstn_X2 ;
  logic [0:0] nvdla_core_rstn_C2 ;
// module: HLS_fp16_to_fp17_core_core_fsm
  HLS_fp16_to_fp17_core_core_fsm HLS_fp16_to_fp17_core_core_fsm_inst (
    .core_wen_T (  core_wen_T  ),
    .core_wen_R (  core_wen_R9  ),
    .core_wen_X (  core_wen_X9  ),
    .core_wen_C (  core_wen_C9  ),
    .core_wen_S (  core_wen_S  ),
    .nvdla_core_rstn_T (  nvdla_core_rstn_T  ),
    .nvdla_core_rstn_R (  nvdla_core_rstn_R2  ),
    .nvdla_core_rstn_X (  nvdla_core_rstn_X2  ),
    .nvdla_core_rstn_C (  nvdla_core_rstn_C2  ),
    .nvdla_core_rstn_S (  nvdla_core_rstn_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .fsm_output_T (  fsm_output_T  ),
    .fsm_output_R0 (  fsm_output_R  ),
    .fsm_output_X0 (  fsm_output_X  ),
    .fsm_output_C0 (  fsm_output_C  ),
    .fsm_output_S ( fsm_output_S ),
    .nvdla_core_clk ( nvdla_core_clk ),
    .nvdla_core_rstn ( nvdla_core_rstn ),
    .core_wen ( core_wen ),
    .fsm_output ( fsm_output )
  );
  logic [0:0] chn_a_rsci_wen_comp_R0 ;
  logic [0:0] chn_a_rsci_wen_comp_X0 ;
  logic [0:0] chn_a_rsci_wen_comp_C0 ;
  logic [0:0] chn_o_rsci_wen_comp_R0 ;
  logic [0:0] chn_o_rsci_wen_comp_X0 ;
  logic [0:0] chn_o_rsci_wen_comp_C0 ;
  logic [0:0] nvdla_core_rstn_R3 ;
  logic [0:0] nvdla_core_rstn_X3 ;
  logic [0:0] nvdla_core_rstn_C3 ;
// module: HLS_fp16_to_fp17_core_staller
  HLS_fp16_to_fp17_core_staller HLS_fp16_to_fp17_core_staller_inst (
    .chn_a_rsci_wen_comp_T (  chn_a_rsci_wen_comp_T  ),
    .chn_a_rsci_wen_comp_R (  chn_a_rsci_wen_comp_R0  ),
    .chn_a_rsci_wen_comp_X (  chn_a_rsci_wen_comp_X0  ),
    .chn_a_rsci_wen_comp_C (  chn_a_rsci_wen_comp_C0  ),
    .chn_a_rsci_wen_comp_S (  chn_a_rsci_wen_comp_S  ),
    .chn_o_rsci_wen_comp_T (  chn_o_rsci_wen_comp_T  ),
    .chn_o_rsci_wen_comp_R (  chn_o_rsci_wen_comp_R0  ),
    .chn_o_rsci_wen_comp_X (  chn_o_rsci_wen_comp_X0  ),
    .chn_o_rsci_wen_comp_C (  chn_o_rsci_wen_comp_C0  ),
    .chn_o_rsci_wen_comp_S (  chn_o_rsci_wen_comp_S  ),
    .nvdla_core_rstn_T (  nvdla_core_rstn_T  ),
    .nvdla_core_rstn_R (  nvdla_core_rstn_R3  ),
    .nvdla_core_rstn_X (  nvdla_core_rstn_X3  ),
    .nvdla_core_rstn_C (  nvdla_core_rstn_C3  ),
    .nvdla_core_rstn_S (  nvdla_core_rstn_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .core_wen_T (  core_wen_T  ),
    .core_wen_R0 (  core_wen_R  ),
    .core_wen_X0 (  core_wen_X  ),
    .core_wen_C0 (  core_wen_C  ),
    .core_wen_S ( core_wen_S ),
    .core_wten_T (  core_wten_T  ),
    .core_wten_R0 (  core_wten_R  ),
    .core_wten_X0 (  core_wten_X  ),
    .core_wten_C0 (  core_wten_C  ),
    .core_wten_S ( core_wten_S ),
    .chn_o_rsci_wen_comp ( chn_o_rsci_wen_comp ),
    .nvdla_core_rstn ( nvdla_core_rstn ),
    .chn_a_rsci_wen_comp ( chn_a_rsci_wen_comp ),
    .nvdla_core_clk ( nvdla_core_clk ),
    .core_wen ( core_wen ),
    .core_wten ( core_wten )
  );
  assign { chn_a_rsci_d_mxwt_R6 [9], chn_a_rsci_d_mxwt_R6 [10], chn_a_rsci_d_mxwt_R6 [11], chn_a_rsci_d_mxwt_R6 [12], chn_a_rsci_d_mxwt_R6 [13] } = 0;
  assign { chn_a_rsci_d_mxwt_X6 [9], chn_a_rsci_d_mxwt_X6 [10], chn_a_rsci_d_mxwt_X6 [11], chn_a_rsci_d_mxwt_X6 [12], chn_a_rsci_d_mxwt_X6 [13] } = 0;
  assign { chn_a_rsci_d_mxwt_C6 [9], chn_a_rsci_d_mxwt_C6 [10], chn_a_rsci_d_mxwt_C6 [11], chn_a_rsci_d_mxwt_C6 [12], chn_a_rsci_d_mxwt_C6 [13] } = 0;
  logic [15:0] chn_a_rsci_d_mxwt_R7 ;
  logic [15:0] chn_a_rsci_d_mxwt_X7 ;
  logic [15:0] chn_a_rsci_d_mxwt_C7 ;
// module: FP16_TO_FP17_leading_sign_10_0
  FP16_TO_FP17_leading_sign_10_0 leading_sign_10_0_rg (
    .mantissa_T (  chn_a_rsci_d_mxwt_T [9:0]  ),
    .mantissa_R (  chn_a_rsci_d_mxwt_R7 [9:0]  ),
    .mantissa_X (  chn_a_rsci_d_mxwt_X7 [9:0]  ),
    .mantissa_C (  chn_a_rsci_d_mxwt_C7 [9:0]  ),
    .mantissa_S (  chn_a_rsci_d_mxwt_S [9:0]  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .rst_zy(rst_zy),
    .rtn_T (  libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1_T  ),
    .rtn_R0 (  libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1_R  ),
    .rtn_X0 (  libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1_X  ),
    .rtn_C0 (  libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1_C  ),
    .rtn_S ( libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1_S ),
    .rtn ( libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1 ),
    .mantissa ( chn_a_rsci_d_mxwt[9:0] )
  );
  assign chn_a_rsci_oswt_unreg = and_6_cse;
  logic [0:0] and_6_cse_C2 ;
  logic [0:0] and_6_cse_R2 ;
  logic [0:0] and_6_cse_X2 ;
  assign chn_a_rsci_oswt_unreg_T = and_6_cse_T ;
  assign and_6_cse_C2 = chn_a_rsci_oswt_unreg_C ;
  assign and_6_cse_R2 = chn_a_rsci_oswt_unreg_R ;
  assign and_6_cse_X2 = chn_a_rsci_oswt_unreg_X ;
  assign chn_a_rsci_oswt_unreg_S = and_6_cse_S ;
  assign chn_o_rsci_oswt_unreg = and_dcpl_2;
  logic [0:0] and_dcpl_2_C2 ;
  logic [0:0] and_dcpl_2_R2 ;
  logic [0:0] and_dcpl_2_X2 ;
  assign chn_o_rsci_oswt_unreg_T = and_dcpl_2_T ;
  assign and_dcpl_2_C2 = chn_o_rsci_oswt_unreg_C ;
  assign and_dcpl_2_R2 = chn_o_rsci_oswt_unreg_R ;
  assign and_dcpl_2_X2 = chn_o_rsci_oswt_unreg_X ;
  assign chn_o_rsci_oswt_unreg_S = and_dcpl_2_S ;
  assign nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva[4:0] = FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva;
  logic [4:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_C1 ;
  logic [4:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_R1 ;
  logic [4:0] FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_X1 ;
  assign nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_T [4:0] = FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_T ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_C1 = nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_C [4:0] ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_R1 = nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_R [4:0] ;
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_X1 = nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_X [4:0] ;
  assign nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_S = FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_S ;
  assign nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_a = chn_a_rsci_d_mxwt[8:0];
  assign { chn_a_rsci_d_mxwt_R7 [15:10] } = 0;
  assign { chn_a_rsci_d_mxwt_X7 [15:10] } = 0;
  assign { chn_a_rsci_d_mxwt_C7 [15:10] } = 0;
  logic [15:0] chn_a_rsci_d_mxwt_C8 ;
  logic [15:0] chn_a_rsci_d_mxwt_R8 ;
  logic [15:0] chn_a_rsci_d_mxwt_X8 ;
  assign nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_a_T = chn_a_rsci_d_mxwt_T [8:0] ;
  assign chn_a_rsci_d_mxwt_C8 [8:0] = nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_a_C ;
  assign chn_a_rsci_d_mxwt_R8 [8:0] = nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_a_R ;
  assign chn_a_rsci_d_mxwt_X8 [8:0] = nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_a_X ;
  assign nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_a_S = chn_a_rsci_d_mxwt_S ;
  assign nl_HLS_fp16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d = { chn_o_rsci_d_16, chn_o_rsci_d_15, chn_o_rsci_d_14, chn_o_rsci_d_13_10, chn_o_rsci_d_9_0 };
  assign nl_HLS_fp16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_T = {  chn_o_rsci_d_16_T , chn_o_rsci_d_15_T , chn_o_rsci_d_14_T , chn_o_rsci_d_13_10_T , chn_o_rsci_d_9_0_T  };
  logic [13:0] nl_HLS_fp16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_S ;
  assign nl_HLS_fp16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_S = 0 ;
  logic [0:0] chn_o_rsci_d_16_R2 ;
  logic [0:0] chn_o_rsci_d_16_X2 ;
  logic [0:0] chn_o_rsci_d_16_C2 ;
  assign chn_o_rsci_d_16_R2 = nl_HLS_fp16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_R [16:16] ;
  assign chn_o_rsci_d_16_X2 = nl_HLS_fp16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_X [16:16] ;
  assign chn_o_rsci_d_16_C2 = nl_HLS_fp16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_C [16:16] ;
  logic [0:0] chn_o_rsci_d_15_R2 ;
  logic [0:0] chn_o_rsci_d_15_X2 ;
  logic [0:0] chn_o_rsci_d_15_C2 ;
  assign chn_o_rsci_d_15_R2 = nl_HLS_fp16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_R [15:15] ;
  assign chn_o_rsci_d_15_X2 = nl_HLS_fp16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_X [15:15] ;
  assign chn_o_rsci_d_15_C2 = nl_HLS_fp16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_C [15:15] ;
  logic [0:0] chn_o_rsci_d_14_R2 ;
  logic [0:0] chn_o_rsci_d_14_X2 ;
  logic [0:0] chn_o_rsci_d_14_C2 ;
  assign chn_o_rsci_d_14_R2 = nl_HLS_fp16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_R [14:14] ;
  assign chn_o_rsci_d_14_X2 = nl_HLS_fp16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_X [14:14] ;
  assign chn_o_rsci_d_14_C2 = nl_HLS_fp16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_C [14:14] ;
  logic [3:0] chn_o_rsci_d_13_10_R2 ;
  logic [3:0] chn_o_rsci_d_13_10_X2 ;
  logic [3:0] chn_o_rsci_d_13_10_C2 ;
  assign chn_o_rsci_d_13_10_R2 = nl_HLS_fp16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_R [13:10] ;
  assign chn_o_rsci_d_13_10_X2 = nl_HLS_fp16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_X [13:10] ;
  assign chn_o_rsci_d_13_10_C2 = nl_HLS_fp16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_C [13:10] ;
  logic [9:0] chn_o_rsci_d_9_0_R2 ;
  logic [9:0] chn_o_rsci_d_9_0_X2 ;
  logic [9:0] chn_o_rsci_d_9_0_C2 ;
  assign chn_o_rsci_d_9_0_R2 = nl_HLS_fp16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_R [9:0] ;
  assign chn_o_rsci_d_9_0_X2 = nl_HLS_fp16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_X [9:0] ;
  assign chn_o_rsci_d_9_0_C2 = nl_HLS_fp16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_C [9:0] ;
  assign nl_leading_sign_10_0_rg_mantissa = chn_a_rsci_d_mxwt[9:0];
  assign { chn_a_rsci_d_mxwt_R8 [15:9] } = 0;
  assign { chn_a_rsci_d_mxwt_X8 [15:9] } = 0;
  assign { chn_a_rsci_d_mxwt_C8 [15:9] } = 0;
  logic [15:0] chn_a_rsci_d_mxwt_C9 ;
  logic [15:0] chn_a_rsci_d_mxwt_R9 ;
  logic [15:0] chn_a_rsci_d_mxwt_X9 ;
  assign nl_leading_sign_10_0_rg_mantissa_T = chn_a_rsci_d_mxwt_T [9:0] ;
  assign chn_a_rsci_d_mxwt_C9 [9:0] = nl_leading_sign_10_0_rg_mantissa_C ;
  assign chn_a_rsci_d_mxwt_R9 [9:0] = nl_leading_sign_10_0_rg_mantissa_R ;
  assign chn_a_rsci_d_mxwt_X9 [9:0] = nl_leading_sign_10_0_rg_mantissa_X ;
  assign nl_leading_sign_10_0_rg_mantissa_S = chn_a_rsci_d_mxwt_S ;
  assign chn_o_rsci_wen_comp_C = ( chn_o_rsci_wen_comp_C0 );
  assign chn_a_rsci_wen_comp_C = ( chn_a_rsci_wen_comp_C0 );
  assign chn_o_rsci_oswt_C = ( chn_o_rsci_oswt_C0 );
  assign chn_o_rsc_vz_C = ( chn_o_rsc_vz_C0 );
  assign nvdla_core_rstn_C = ( nvdla_core_rstn_C0 ) | ( nvdla_core_rstn_C1 ) | ( nvdla_core_rstn_C2 ) | ( nvdla_core_rstn_C3 );
  assign core_wten_C = ( core_wten_C0 ) | ( core_wten_C1 );
  assign chn_a_rsci_oswt_C = ( chn_a_rsci_oswt_C0 );
  assign chn_a_rsc_z_C = ( chn_a_rsc_z_C0 );
  assign chn_a_rsc_vz_C = ( chn_a_rsc_vz_C0 );
  assign nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s_C = ( nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s_C0 );
  assign chn_a_rsci_iswt0_C = ( chn_a_rsci_iswt0_C0 ) | ( chn_a_rsci_iswt0_C1 );
  assign _046__C = ( _046__C0 );
  assign reg_chn_o_rsci_iswt0_cse_C = ( reg_chn_o_rsci_iswt0_cse_C0 ) | ( reg_chn_o_rsci_iswt0_cse_C1 );
  assign chn_a_rsci_ld_core_psct_C = ( chn_a_rsci_ld_core_psct_C0 ) | ( chn_a_rsci_ld_core_psct_C1 );
  assign _019__C = ( _019__C0 );
  assign chn_o_rsci_d_14_C = ( chn_o_rsci_d_14_C0 ) | ( chn_o_rsci_d_14_C1 ) | ( chn_o_rsci_d_14_C2 );
  assign _056__C = ( _056__C0 );
  assign _021__C = ( _021__C0 );
  assign chn_o_rsci_d_16_C = ( chn_o_rsci_d_16_C0 ) | ( chn_o_rsci_d_16_C1 ) | ( chn_o_rsci_d_16_C2 );
  assign chn_o_rsci_d_13_10_C = ( chn_o_rsci_d_13_10_C0 ) | ( chn_o_rsci_d_13_10_C1 ) | ( chn_o_rsci_d_13_10_C2 );
  assign _010__C = ( _010__C0 );
  assign chn_o_rsci_d_15_C = ( chn_o_rsci_d_15_C0 ) | ( chn_o_rsci_d_15_C1 ) | ( chn_o_rsci_d_15_C2 );
  assign chn_o_and_1_cse_C = ( chn_o_and_1_cse_C0 ) | ( chn_o_and_1_cse_C1 ) | ( chn_o_and_1_cse_C2 );
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_C = ( FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_C0 );
  assign chn_o_rsci_d_9_0_C = ( chn_o_rsci_d_9_0_C0 ) | ( chn_o_rsci_d_9_0_C1 ) | ( chn_o_rsci_d_9_0_C2 );
  assign _009__C = ( _009__C0 );
  assign _027__C = ( _027__C0 );
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_C = ( FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_C0 );
  assign _029__C = ( _029__C0 );
  assign _049__C = ( _049__C0 );
  assign _028__C = ( _028__C0 );
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_C = ( FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_C0 );
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_C = ( FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_C0 );
  assign _007__C = ( _007__C0 );
  assign _000__C = ( _000__C0 );
  assign _001__C = ( _001__C0 );
  assign _003__C = ( _003__C0 );
  assign _004__C = ( _004__C0 );
  assign _002__C = ( _002__C0 );
  assign _005__C = ( _005__C0 );
  assign _006__C = ( _006__C0 );
  assign _008__C = ( _008__C0 );
  assign _032__C = ( _032__C0 );
  assign _062__C = ( _062__C0 );
  assign _031__C = ( _031__C0 );
  assign _030__C = ( _030__C0 );
  assign _050__C = ( _050__C0 );
  assign and_6_cse_C = ( and_6_cse_C0 ) | ( and_6_cse_C1 ) | ( and_6_cse_C2 );
  assign _057__C = ( _057__C0 );
  assign _026__C = ( _026__C0 );
  assign _024__C = ( _024__C0 );
  assign IsNaN_5U_10U_land_lpi_1_dfm_C = ( IsNaN_5U_10U_land_lpi_1_dfm_C0 ) | ( IsNaN_5U_10U_land_lpi_1_dfm_C1 );
  assign _055__C = ( _055__C0 );
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_C = ( FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_C0 );
  assign _020__C = ( _020__C0 );
  assign _017__C = ( _017__C0 );
  assign _016__C = ( _016__C0 );
  assign _041__C = ( _041__C0 );
  assign _036__C = ( _036__C0 );
  assign _040__C = ( _040__C0 );
  assign _039__C = ( _039__C0 );
  assign and_38_cse_C = ( and_38_cse_C0 ) | ( and_38_cse_C1 );
  assign _061__C = ( _061__C0 );
  assign _060__C = ( _060__C0 );
  assign and_dcpl_19_C = ( and_dcpl_19_C0 ) | ( and_dcpl_19_C1 );
  assign _054__C = ( _054__C0 );
  assign _018__C = ( _018__C0 );
  assign _013__C = ( _013__C0 );
  assign _012__C = ( _012__C0 );
  assign _011__C = ( _011__C0 );
  assign _035__C = ( _035__C0 ) | ( _035__C1 );
  assign _053__C = ( _053__C0 ) | ( _053__C1 );
  assign _052__C = ( _052__C0 );
  assign fangyuan3_C = ( fangyuan3_C0 );
  assign chn_a_rsci_d_mxwt_C = ( chn_a_rsci_d_mxwt_C0 ) | ( chn_a_rsci_d_mxwt_C1 ) | ( chn_a_rsci_d_mxwt_C2 ) | ( chn_a_rsci_d_mxwt_C3 ) | ( chn_a_rsci_d_mxwt_C4 ) | ( chn_a_rsci_d_mxwt_C5 ) | ( chn_a_rsci_d_mxwt_C6 ) | ( chn_a_rsci_d_mxwt_C7 ) | ( chn_a_rsci_d_mxwt_C8 ) | ( chn_a_rsci_d_mxwt_C9 );
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_C = ( FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_C0 ) | ( FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_C1 ) | ( FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_C2 ) | ( FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_C3 );
  assign fangyuan2_C = ( fangyuan2_C0 );
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_C = ( FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_C0 ) | ( FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_C1 );
  assign IsDenorm_5U_10U_land_lpi_1_dfm_C = ( IsDenorm_5U_10U_land_lpi_1_dfm_C0 ) | ( IsDenorm_5U_10U_land_lpi_1_dfm_C1 ) | ( IsDenorm_5U_10U_land_lpi_1_dfm_C2 ) | ( IsDenorm_5U_10U_land_lpi_1_dfm_C3 ) | ( IsDenorm_5U_10U_land_lpi_1_dfm_C4 ) | ( IsDenorm_5U_10U_land_lpi_1_dfm_C5 );
  assign fangyuan1_C = ( fangyuan1_C0 );
  assign IsInf_5U_10U_land_lpi_1_dfm_C = ( IsInf_5U_10U_land_lpi_1_dfm_C0 ) | ( IsInf_5U_10U_land_lpi_1_dfm_C1 ) | ( IsInf_5U_10U_land_lpi_1_dfm_C2 ) | ( IsInf_5U_10U_land_lpi_1_dfm_C3 ) | ( IsInf_5U_10U_land_lpi_1_dfm_C4 ) | ( IsInf_5U_10U_land_lpi_1_dfm_C5 );
  assign chn_o_rsci_d_9_0_mx0c1_C = ( chn_o_rsci_d_9_0_mx0c1_C0 ) | ( chn_o_rsci_d_9_0_mx0c1_C1 );
  assign _051__C = ( _051__C0 ) | ( _051__C1 );
  assign _059__C = ( _059__C0 );
  assign _058__C = ( _058__C0 );
  assign _025__C = ( _025__C0 );
  assign _023__C = ( _023__C0 );
  assign and_dcpl_8_C = ( and_dcpl_8_C0 ) | ( and_dcpl_8_C1 );
  assign _022__C = ( _022__C0 );
  assign and_dcpl_9_C = ( and_dcpl_9_C0 ) | ( and_dcpl_9_C1 );
  assign _048__C = ( _048__C0 );
  assign _047__C = ( _047__C0 );
  assign chn_a_rsci_ld_core_psct_mx0c0_C = ( chn_a_rsci_ld_core_psct_mx0c0_C0 ) | ( chn_a_rsci_ld_core_psct_mx0c0_C1 );
  assign _045__C = ( _045__C0 );
  assign and_dcpl_13_C = ( and_dcpl_13_C0 ) | ( and_dcpl_13_C1 ) | ( and_dcpl_13_C2 );
  assign _015__C = ( _015__C0 );
  assign _014__C = ( _014__C0 );
  assign or_dcpl_8_C = ( or_dcpl_8_C0 ) | ( or_dcpl_8_C1 );
  assign _044__C = ( _044__C0 );
  assign _043__C = ( _043__C0 );
  assign _042__C = ( _042__C0 );
  assign _034__C = ( _034__C0 );
  assign and_dcpl_2_C = ( and_dcpl_2_C0 ) | ( and_dcpl_2_C1 ) | ( and_dcpl_2_C2 );
  assign _033__C = ( _033__C0 );
  assign reg_chn_o_rsci_ld_core_psct_cse_C = ( reg_chn_o_rsci_ld_core_psct_cse_C0 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C1 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C2 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C3 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C4 );
  assign chn_o_rsci_bawt_C = ( chn_o_rsci_bawt_C0 ) | ( chn_o_rsci_bawt_C1 ) | ( chn_o_rsci_bawt_C2 );
  assign or_cse_C = ( or_cse_C0 ) | ( or_cse_C1 );
  assign chn_a_rsci_bawt_C = ( chn_a_rsci_bawt_C0 ) | ( chn_a_rsci_bawt_C1 ) | ( chn_a_rsci_bawt_C2 ) | ( chn_a_rsci_bawt_C3 ) | ( chn_a_rsci_bawt_C4 );
  assign IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_C = ( IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_C0 );
  assign IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_C = ( IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_C0 ) | ( IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_C1 );
  assign IsDenorm_5U_10U_or_tmp_C = ( IsDenorm_5U_10U_or_tmp_C0 ) | ( IsDenorm_5U_10U_or_tmp_C1 ) | ( IsDenorm_5U_10U_or_tmp_C2 ) | ( IsDenorm_5U_10U_or_tmp_C3 ) | ( IsDenorm_5U_10U_or_tmp_C4 ) | ( IsDenorm_5U_10U_or_tmp_C5 );
  assign _037__C = ( _037__C0 );
  assign core_wen_C = ( core_wen_C0 ) | ( core_wen_C1 ) | ( core_wen_C2 ) | ( core_wen_C3 ) | ( core_wen_C4 ) | ( core_wen_C5 ) | ( core_wen_C6 ) | ( core_wen_C7 ) | ( core_wen_C8 ) | ( core_wen_C9 );
  assign fsm_output_C = ( fsm_output_C0 ) | ( fsm_output_C1 ) | ( fsm_output_C2 ) | ( fsm_output_C3 ) | ( fsm_output_C4 );
  assign and_4_mdf_C = ( and_4_mdf_C0 ) | ( and_4_mdf_C1 ) | ( and_4_mdf_C2 ) | ( and_4_mdf_C3 );
  assign fangyuan0_C = ( fangyuan0_C0 );
  assign _038__C = ( _038__C0 );
  assign libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1_C = ( libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1_C0 ) | ( libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1_C1 );
  assign chn_o_rsci_oswt_unreg_C = ( chn_o_rsci_oswt_unreg_C0 );
  assign chn_o_rsc_z_C = ( chn_o_rsc_z_C0 );
  assign chn_o_rsc_lz_C = ( chn_o_rsc_lz_C0 );
  assign chn_a_rsci_oswt_unreg_C = ( chn_a_rsci_oswt_unreg_C0 );
  assign chn_a_rsc_lz_C = ( chn_a_rsc_lz_C0 );
  assign chn_o_rsci_wen_comp_X = ( chn_o_rsci_wen_comp_X0 );
  assign chn_a_rsci_wen_comp_X = ( chn_a_rsci_wen_comp_X0 );
  assign chn_o_rsci_oswt_X = ( chn_o_rsci_oswt_X0 );
  assign chn_o_rsc_vz_X = ( chn_o_rsc_vz_X0 );
  assign nvdla_core_rstn_X = ( nvdla_core_rstn_X0 ) | ( nvdla_core_rstn_X1 ) | ( nvdla_core_rstn_X2 ) | ( nvdla_core_rstn_X3 );
  assign core_wten_X = ( core_wten_X0 ) | ( core_wten_X1 );
  assign chn_a_rsci_oswt_X = ( chn_a_rsci_oswt_X0 );
  assign chn_a_rsc_z_X = ( chn_a_rsc_z_X0 );
  assign chn_a_rsc_vz_X = ( chn_a_rsc_vz_X0 );
  assign nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s_X = ( nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s_X0 );
  assign chn_a_rsci_iswt0_X = ( chn_a_rsci_iswt0_X0 ) | ( chn_a_rsci_iswt0_X1 );
  assign _046__X = ( _046__X0 );
  assign reg_chn_o_rsci_iswt0_cse_X = ( reg_chn_o_rsci_iswt0_cse_X0 ) | ( reg_chn_o_rsci_iswt0_cse_X1 );
  assign chn_a_rsci_ld_core_psct_X = ( chn_a_rsci_ld_core_psct_X0 ) | ( chn_a_rsci_ld_core_psct_X1 );
  assign _019__X = ( _019__X0 );
  assign chn_o_rsci_d_14_X = ( chn_o_rsci_d_14_X0 ) | ( chn_o_rsci_d_14_X1 ) | ( chn_o_rsci_d_14_X2 );
  assign _056__X = ( _056__X0 );
  assign _021__X = ( _021__X0 );
  assign chn_o_rsci_d_16_X = ( chn_o_rsci_d_16_X0 ) | ( chn_o_rsci_d_16_X1 ) | ( chn_o_rsci_d_16_X2 );
  assign chn_o_rsci_d_13_10_X = ( chn_o_rsci_d_13_10_X0 ) | ( chn_o_rsci_d_13_10_X1 ) | ( chn_o_rsci_d_13_10_X2 );
  assign _010__X = ( _010__X0 );
  assign chn_o_rsci_d_15_X = ( chn_o_rsci_d_15_X0 ) | ( chn_o_rsci_d_15_X1 ) | ( chn_o_rsci_d_15_X2 );
  assign chn_o_and_1_cse_X = ( chn_o_and_1_cse_X0 ) | ( chn_o_and_1_cse_X1 ) | ( chn_o_and_1_cse_X2 );
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_X = ( FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_X0 );
  assign chn_o_rsci_d_9_0_X = ( chn_o_rsci_d_9_0_X0 ) | ( chn_o_rsci_d_9_0_X1 ) | ( chn_o_rsci_d_9_0_X2 );
  assign _009__X = ( _009__X0 );
  assign _027__X = ( _027__X0 );
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_X = ( FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_X0 );
  assign _029__X = ( _029__X0 );
  assign _049__X = ( _049__X0 );
  assign _028__X = ( _028__X0 );
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_X = ( FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_X0 );
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_X = ( FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_X0 );
  assign _007__X = ( _007__X0 );
  assign _000__X = ( _000__X0 );
  assign _001__X = ( _001__X0 );
  assign _003__X = ( _003__X0 );
  assign _004__X = ( _004__X0 );
  assign _002__X = ( _002__X0 );
  assign _005__X = ( _005__X0 );
  assign _006__X = ( _006__X0 );
  assign _008__X = ( _008__X0 );
  assign _032__X = ( _032__X0 );
  assign _062__X = ( _062__X0 );
  assign _031__X = ( _031__X0 );
  assign _030__X = ( _030__X0 );
  assign _050__X = ( _050__X0 );
  assign and_6_cse_X = ( and_6_cse_X0 ) | ( and_6_cse_X1 ) | ( and_6_cse_X2 );
  assign _057__X = ( _057__X0 );
  assign _026__X = ( _026__X0 );
  assign _024__X = ( _024__X0 );
  assign IsNaN_5U_10U_land_lpi_1_dfm_X = ( IsNaN_5U_10U_land_lpi_1_dfm_X0 ) | ( IsNaN_5U_10U_land_lpi_1_dfm_X1 );
  assign _055__X = ( _055__X0 );
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_X = ( FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_X0 );
  assign _020__X = ( _020__X0 );
  assign _017__X = ( _017__X0 );
  assign _016__X = ( _016__X0 );
  assign _041__X = ( _041__X0 );
  assign _036__X = ( _036__X0 );
  assign _040__X = ( _040__X0 );
  assign _039__X = ( _039__X0 );
  assign and_38_cse_X = ( and_38_cse_X0 ) | ( and_38_cse_X1 );
  assign _061__X = ( _061__X0 );
  assign _060__X = ( _060__X0 );
  assign and_dcpl_19_X = ( and_dcpl_19_X0 ) | ( and_dcpl_19_X1 );
  assign _054__X = ( _054__X0 );
  assign _018__X = ( _018__X0 );
  assign _013__X = ( _013__X0 );
  assign _012__X = ( _012__X0 );
  assign _011__X = ( _011__X0 );
  assign _035__X = ( _035__X0 ) | ( _035__X1 );
  assign _053__X = ( _053__X0 ) | ( _053__X1 );
  assign _052__X = ( _052__X0 );
  assign fangyuan3_X = ( fangyuan3_X0 );
  assign chn_a_rsci_d_mxwt_X = ( chn_a_rsci_d_mxwt_X0 ) | ( chn_a_rsci_d_mxwt_X1 ) | ( chn_a_rsci_d_mxwt_X2 ) | ( chn_a_rsci_d_mxwt_X3 ) | ( chn_a_rsci_d_mxwt_X4 ) | ( chn_a_rsci_d_mxwt_X5 ) | ( chn_a_rsci_d_mxwt_X6 ) | ( chn_a_rsci_d_mxwt_X7 ) | ( chn_a_rsci_d_mxwt_X8 ) | ( chn_a_rsci_d_mxwt_X9 );
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_X = ( FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_X0 ) | ( FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_X1 ) | ( FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_X2 ) | ( FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_X3 );
  assign fangyuan2_X = ( fangyuan2_X0 );
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_X = ( FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_X0 ) | ( FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_X1 );
  assign IsDenorm_5U_10U_land_lpi_1_dfm_X = ( IsDenorm_5U_10U_land_lpi_1_dfm_X0 ) | ( IsDenorm_5U_10U_land_lpi_1_dfm_X1 ) | ( IsDenorm_5U_10U_land_lpi_1_dfm_X2 ) | ( IsDenorm_5U_10U_land_lpi_1_dfm_X3 ) | ( IsDenorm_5U_10U_land_lpi_1_dfm_X4 ) | ( IsDenorm_5U_10U_land_lpi_1_dfm_X5 );
  assign fangyuan1_X = ( fangyuan1_X0 );
  assign IsInf_5U_10U_land_lpi_1_dfm_X = ( IsInf_5U_10U_land_lpi_1_dfm_X0 ) | ( IsInf_5U_10U_land_lpi_1_dfm_X1 ) | ( IsInf_5U_10U_land_lpi_1_dfm_X2 ) | ( IsInf_5U_10U_land_lpi_1_dfm_X3 ) | ( IsInf_5U_10U_land_lpi_1_dfm_X4 ) | ( IsInf_5U_10U_land_lpi_1_dfm_X5 );
  assign chn_o_rsci_d_9_0_mx0c1_X = ( chn_o_rsci_d_9_0_mx0c1_X0 ) | ( chn_o_rsci_d_9_0_mx0c1_X1 );
  assign _051__X = ( _051__X0 ) | ( _051__X1 );
  assign _059__X = ( _059__X0 );
  assign _058__X = ( _058__X0 );
  assign _025__X = ( _025__X0 );
  assign _023__X = ( _023__X0 );
  assign and_dcpl_8_X = ( and_dcpl_8_X0 ) | ( and_dcpl_8_X1 );
  assign _022__X = ( _022__X0 );
  assign and_dcpl_9_X = ( and_dcpl_9_X0 ) | ( and_dcpl_9_X1 );
  assign _048__X = ( _048__X0 );
  assign _047__X = ( _047__X0 );
  assign chn_a_rsci_ld_core_psct_mx0c0_X = ( chn_a_rsci_ld_core_psct_mx0c0_X0 ) | ( chn_a_rsci_ld_core_psct_mx0c0_X1 );
  assign _045__X = ( _045__X0 );
  assign and_dcpl_13_X = ( and_dcpl_13_X0 ) | ( and_dcpl_13_X1 ) | ( and_dcpl_13_X2 );
  assign _015__X = ( _015__X0 );
  assign _014__X = ( _014__X0 );
  assign or_dcpl_8_X = ( or_dcpl_8_X0 ) | ( or_dcpl_8_X1 );
  assign _044__X = ( _044__X0 );
  assign _043__X = ( _043__X0 );
  assign _042__X = ( _042__X0 );
  assign _034__X = ( _034__X0 );
  assign and_dcpl_2_X = ( and_dcpl_2_X0 ) | ( and_dcpl_2_X1 ) | ( and_dcpl_2_X2 );
  assign _033__X = ( _033__X0 );
  assign reg_chn_o_rsci_ld_core_psct_cse_X = ( reg_chn_o_rsci_ld_core_psct_cse_X0 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X1 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X2 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X3 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X4 );
  assign chn_o_rsci_bawt_X = ( chn_o_rsci_bawt_X0 ) | ( chn_o_rsci_bawt_X1 ) | ( chn_o_rsci_bawt_X2 );
  assign or_cse_X = ( or_cse_X0 ) | ( or_cse_X1 );
  assign chn_a_rsci_bawt_X = ( chn_a_rsci_bawt_X0 ) | ( chn_a_rsci_bawt_X1 ) | ( chn_a_rsci_bawt_X2 ) | ( chn_a_rsci_bawt_X3 ) | ( chn_a_rsci_bawt_X4 );
  assign IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_X = ( IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_X0 );
  assign IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_X = ( IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_X0 ) | ( IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_X1 );
  assign IsDenorm_5U_10U_or_tmp_X = ( IsDenorm_5U_10U_or_tmp_X0 ) | ( IsDenorm_5U_10U_or_tmp_X1 ) | ( IsDenorm_5U_10U_or_tmp_X2 ) | ( IsDenorm_5U_10U_or_tmp_X3 ) | ( IsDenorm_5U_10U_or_tmp_X4 ) | ( IsDenorm_5U_10U_or_tmp_X5 );
  assign _037__X = ( _037__X0 );
  assign core_wen_X = ( core_wen_X0 ) | ( core_wen_X1 ) | ( core_wen_X2 ) | ( core_wen_X3 ) | ( core_wen_X4 ) | ( core_wen_X5 ) | ( core_wen_X6 ) | ( core_wen_X7 ) | ( core_wen_X8 ) | ( core_wen_X9 );
  assign fsm_output_X = ( fsm_output_X0 ) | ( fsm_output_X1 ) | ( fsm_output_X2 ) | ( fsm_output_X3 ) | ( fsm_output_X4 );
  assign and_4_mdf_X = ( and_4_mdf_X0 ) | ( and_4_mdf_X1 ) | ( and_4_mdf_X2 ) | ( and_4_mdf_X3 );
  assign fangyuan0_X = ( fangyuan0_X0 );
  assign _038__X = ( _038__X0 );
  assign libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1_X = ( libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1_X0 ) | ( libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1_X1 );
  assign chn_o_rsci_oswt_unreg_X = ( chn_o_rsci_oswt_unreg_X0 );
  assign chn_o_rsc_z_X = ( chn_o_rsc_z_X0 );
  assign chn_o_rsc_lz_X = ( chn_o_rsc_lz_X0 );
  assign chn_a_rsci_oswt_unreg_X = ( chn_a_rsci_oswt_unreg_X0 );
  assign chn_a_rsc_lz_X = ( chn_a_rsc_lz_X0 );
  assign chn_o_rsci_wen_comp_R = ( chn_o_rsci_wen_comp_X0 & chn_o_rsci_wen_comp_R0 );
  assign chn_a_rsci_wen_comp_R = ( chn_a_rsci_wen_comp_X0 & chn_a_rsci_wen_comp_R0 );
  assign chn_o_rsci_oswt_R = ( chn_o_rsci_oswt_X0 & chn_o_rsci_oswt_R0 );
  assign chn_o_rsc_vz_R = ( chn_o_rsc_vz_X0 & chn_o_rsc_vz_R0 );
  assign nvdla_core_rstn_R = ( nvdla_core_rstn_X0 & nvdla_core_rstn_R0 ) | ( nvdla_core_rstn_X1 & nvdla_core_rstn_R1 ) | ( nvdla_core_rstn_X2 & nvdla_core_rstn_R2 ) | ( nvdla_core_rstn_X3 & nvdla_core_rstn_R3 );
  assign core_wten_R = ( core_wten_X0 & core_wten_R0 ) | ( core_wten_X1 & core_wten_R1 );
  assign chn_a_rsci_oswt_R = ( chn_a_rsci_oswt_X0 & chn_a_rsci_oswt_R0 );
  assign chn_a_rsc_z_R = ( chn_a_rsc_z_X0 & chn_a_rsc_z_R0 );
  assign chn_a_rsc_vz_R = ( chn_a_rsc_vz_X0 & chn_a_rsc_vz_R0 );
  assign nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s_R = ( nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s_X0 & nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_s_R0 );
  assign chn_a_rsci_iswt0_R = ( chn_a_rsci_iswt0_X0 & chn_a_rsci_iswt0_R0 ) | ( chn_a_rsci_iswt0_X1 & chn_a_rsci_iswt0_R1 );
  assign _046__R = ( _046__X0 & _046__R0 );
  assign reg_chn_o_rsci_iswt0_cse_R = ( reg_chn_o_rsci_iswt0_cse_X0 & reg_chn_o_rsci_iswt0_cse_R0 ) | ( reg_chn_o_rsci_iswt0_cse_X1 & reg_chn_o_rsci_iswt0_cse_R1 );
  assign chn_a_rsci_ld_core_psct_R = ( chn_a_rsci_ld_core_psct_X0 & chn_a_rsci_ld_core_psct_R0 ) | ( chn_a_rsci_ld_core_psct_X1 & chn_a_rsci_ld_core_psct_R1 );
  assign _019__R = ( _019__X0 & _019__R0 );
  assign chn_o_rsci_d_14_R = ( chn_o_rsci_d_14_X0 & chn_o_rsci_d_14_R0 ) | ( chn_o_rsci_d_14_X1 & chn_o_rsci_d_14_R1 ) | ( chn_o_rsci_d_14_X2 & chn_o_rsci_d_14_R2 );
  assign _056__R = ( _056__X0 & _056__R0 );
  assign _021__R = ( _021__X0 & _021__R0 );
  assign chn_o_rsci_d_16_R = ( chn_o_rsci_d_16_X0 & chn_o_rsci_d_16_R0 ) | ( chn_o_rsci_d_16_X1 & chn_o_rsci_d_16_R1 ) | ( chn_o_rsci_d_16_X2 & chn_o_rsci_d_16_R2 );
  assign chn_o_rsci_d_13_10_R = ( chn_o_rsci_d_13_10_X0 & chn_o_rsci_d_13_10_R0 ) | ( chn_o_rsci_d_13_10_X1 & chn_o_rsci_d_13_10_R1 ) | ( chn_o_rsci_d_13_10_X2 & chn_o_rsci_d_13_10_R2 );
  assign _010__R = ( _010__X0 & _010__R0 );
  assign chn_o_rsci_d_15_R = ( chn_o_rsci_d_15_X0 & chn_o_rsci_d_15_R0 ) | ( chn_o_rsci_d_15_X1 & chn_o_rsci_d_15_R1 ) | ( chn_o_rsci_d_15_X2 & chn_o_rsci_d_15_R2 );
  assign chn_o_and_1_cse_R = ( chn_o_and_1_cse_X0 & chn_o_and_1_cse_R0 ) | ( chn_o_and_1_cse_X1 & chn_o_and_1_cse_R1 ) | ( chn_o_and_1_cse_X2 & chn_o_and_1_cse_R2 );
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_R = ( FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_X0 & FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_mux1h_nl_R0 );
  assign chn_o_rsci_d_9_0_R = ( chn_o_rsci_d_9_0_X0 & chn_o_rsci_d_9_0_R0 ) | ( chn_o_rsci_d_9_0_X1 & chn_o_rsci_d_9_0_R1 ) | ( chn_o_rsci_d_9_0_X2 & chn_o_rsci_d_9_0_R2 );
  assign _009__R = ( _009__X0 & _009__R0 );
  assign _027__R = ( _027__X0 & _027__R0 );
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_R = ( FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_X0 & FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_or_1_nl_R0 );
  assign _029__R = ( _029__X0 & _029__R0 );
  assign _049__R = ( _049__X0 & _049__R0 );
  assign _028__R = ( _028__X0 & _028__R0 );
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_R = ( FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_X0 & FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_nl_R0 );
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_R = ( FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_X0 & FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_itm_R0 );
  assign _007__R = ( _007__X0 & _007__R0 );
  assign _000__R = ( _000__X0 & _000__R0 );
  assign _001__R = ( _001__X0 & _001__R0 );
  assign _003__R = ( _003__X0 & _003__R0 );
  assign _004__R = ( _004__X0 & _004__R0 );
  assign _002__R = ( _002__X0 & _002__R0 );
  assign _005__R = ( _005__X0 & _005__R0 );
  assign _006__R = ( _006__X0 & _006__R0 );
  assign _008__R = ( _008__X0 & _008__R0 );
  assign _032__R = ( _032__X0 & _032__R0 );
  assign _062__R = ( _062__X0 & _062__R0 );
  assign _031__R = ( _031__X0 & _031__R0 );
  assign _030__R = ( _030__X0 & _030__R0 );
  assign _050__R = ( _050__X0 & _050__R0 );
  assign and_6_cse_R = ( and_6_cse_X0 & and_6_cse_R0 ) | ( and_6_cse_X1 & and_6_cse_R1 ) | ( and_6_cse_X2 & and_6_cse_R2 );
  assign _057__R = ( _057__X0 & _057__R0 );
  assign _026__R = ( _026__X0 & _026__R0 );
  assign _024__R = ( _024__X0 & _024__R0 );
  assign IsNaN_5U_10U_land_lpi_1_dfm_R = ( IsNaN_5U_10U_land_lpi_1_dfm_X0 & IsNaN_5U_10U_land_lpi_1_dfm_R0 ) | ( IsNaN_5U_10U_land_lpi_1_dfm_X1 & IsNaN_5U_10U_land_lpi_1_dfm_R1 );
  assign _055__R = ( _055__X0 & _055__R0 );
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_R = ( FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_X0 & FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_mux_2_nl_R0 );
  assign _020__R = ( _020__X0 & _020__R0 );
  assign _017__R = ( _017__X0 & _017__R0 );
  assign _016__R = ( _016__X0 & _016__R0 );
  assign _041__R = ( _041__X0 & _041__R0 );
  assign _036__R = ( _036__X0 & _036__R0 );
  assign _040__R = ( _040__X0 & _040__R0 );
  assign _039__R = ( _039__X0 & _039__R0 );
  assign and_38_cse_R = ( and_38_cse_X0 & and_38_cse_R0 ) | ( and_38_cse_X1 & and_38_cse_R1 );
  assign _061__R = ( _061__X0 & _061__R0 );
  assign _060__R = ( _060__X0 & _060__R0 );
  assign and_dcpl_19_R = ( and_dcpl_19_X0 & and_dcpl_19_R0 ) | ( and_dcpl_19_X1 & and_dcpl_19_R1 );
  assign _054__R = ( _054__X0 & _054__R0 );
  assign _018__R = ( _018__X0 & _018__R0 );
  assign _013__R = ( _013__X0 & _013__R0 );
  assign _012__R = ( _012__X0 & _012__R0 );
  assign _011__R = ( _011__X0 & _011__R0 );
  assign _035__R = ( _035__X0 & _035__R0 ) | ( _035__X1 & _035__R1 );
  assign _053__R = ( _053__X0 & _053__R0 ) | ( _053__X1 & _053__R1 );
  assign _052__R = ( _052__X0 & _052__R0 );
  assign fangyuan3_R = ( fangyuan3_X0 & fangyuan3_R0 );
  assign chn_a_rsci_d_mxwt_R = ( chn_a_rsci_d_mxwt_X0 & chn_a_rsci_d_mxwt_R0 ) | ( chn_a_rsci_d_mxwt_X1 & chn_a_rsci_d_mxwt_R1 ) | ( chn_a_rsci_d_mxwt_X2 & chn_a_rsci_d_mxwt_R2 ) | ( chn_a_rsci_d_mxwt_X3 & chn_a_rsci_d_mxwt_R3 ) | ( chn_a_rsci_d_mxwt_X4 & chn_a_rsci_d_mxwt_R4 ) | ( chn_a_rsci_d_mxwt_X5 & chn_a_rsci_d_mxwt_R5 ) | ( chn_a_rsci_d_mxwt_X6 & chn_a_rsci_d_mxwt_R6 ) | ( chn_a_rsci_d_mxwt_X7 & chn_a_rsci_d_mxwt_R7 ) | ( chn_a_rsci_d_mxwt_X8 & chn_a_rsci_d_mxwt_R8 ) | ( chn_a_rsci_d_mxwt_X9 & chn_a_rsci_d_mxwt_R9 );
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_R = ( FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_X0 & FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_R0 ) | ( FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_X1 & FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_R1 ) | ( FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_X2 & FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_R2 ) | ( FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_X3 & FpExpoWidthInc_5U_6U_10U_1U_1U_FpExpoWidthInc_5U_6U_10U_1U_1U_nor_1_cse_R3 );
  assign fangyuan2_R = ( fangyuan2_X0 & fangyuan2_R0 );
  assign FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_R = ( FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_X0 & FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_R0 ) | ( FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_X1 & FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_R1 );
  assign IsDenorm_5U_10U_land_lpi_1_dfm_R = ( IsDenorm_5U_10U_land_lpi_1_dfm_X0 & IsDenorm_5U_10U_land_lpi_1_dfm_R0 ) | ( IsDenorm_5U_10U_land_lpi_1_dfm_X1 & IsDenorm_5U_10U_land_lpi_1_dfm_R1 ) | ( IsDenorm_5U_10U_land_lpi_1_dfm_X2 & IsDenorm_5U_10U_land_lpi_1_dfm_R2 ) | ( IsDenorm_5U_10U_land_lpi_1_dfm_X3 & IsDenorm_5U_10U_land_lpi_1_dfm_R3 ) | ( IsDenorm_5U_10U_land_lpi_1_dfm_X4 & IsDenorm_5U_10U_land_lpi_1_dfm_R4 ) | ( IsDenorm_5U_10U_land_lpi_1_dfm_X5 & IsDenorm_5U_10U_land_lpi_1_dfm_R5 );
  assign fangyuan1_R = ( fangyuan1_X0 & fangyuan1_R0 );
  assign IsInf_5U_10U_land_lpi_1_dfm_R = ( IsInf_5U_10U_land_lpi_1_dfm_X0 & IsInf_5U_10U_land_lpi_1_dfm_R0 ) | ( IsInf_5U_10U_land_lpi_1_dfm_X1 & IsInf_5U_10U_land_lpi_1_dfm_R1 ) | ( IsInf_5U_10U_land_lpi_1_dfm_X2 & IsInf_5U_10U_land_lpi_1_dfm_R2 ) | ( IsInf_5U_10U_land_lpi_1_dfm_X3 & IsInf_5U_10U_land_lpi_1_dfm_R3 ) | ( IsInf_5U_10U_land_lpi_1_dfm_X4 & IsInf_5U_10U_land_lpi_1_dfm_R4 ) | ( IsInf_5U_10U_land_lpi_1_dfm_X5 & IsInf_5U_10U_land_lpi_1_dfm_R5 );
  assign chn_o_rsci_d_9_0_mx0c1_R = ( chn_o_rsci_d_9_0_mx0c1_X0 & chn_o_rsci_d_9_0_mx0c1_R0 ) | ( chn_o_rsci_d_9_0_mx0c1_X1 & chn_o_rsci_d_9_0_mx0c1_R1 );
  assign _051__R = ( _051__X0 & _051__R0 ) | ( _051__X1 & _051__R1 );
  assign _059__R = ( _059__X0 & _059__R0 );
  assign _058__R = ( _058__X0 & _058__R0 );
  assign _025__R = ( _025__X0 & _025__R0 );
  assign _023__R = ( _023__X0 & _023__R0 );
  assign and_dcpl_8_R = ( and_dcpl_8_X0 & and_dcpl_8_R0 ) | ( and_dcpl_8_X1 & and_dcpl_8_R1 );
  assign _022__R = ( _022__X0 & _022__R0 );
  assign and_dcpl_9_R = ( and_dcpl_9_X0 & and_dcpl_9_R0 ) | ( and_dcpl_9_X1 & and_dcpl_9_R1 );
  assign _048__R = ( _048__X0 & _048__R0 );
  assign _047__R = ( _047__X0 & _047__R0 );
  assign chn_a_rsci_ld_core_psct_mx0c0_R = ( chn_a_rsci_ld_core_psct_mx0c0_X0 & chn_a_rsci_ld_core_psct_mx0c0_R0 ) | ( chn_a_rsci_ld_core_psct_mx0c0_X1 & chn_a_rsci_ld_core_psct_mx0c0_R1 );
  assign _045__R = ( _045__X0 & _045__R0 );
  assign and_dcpl_13_R = ( and_dcpl_13_X0 & and_dcpl_13_R0 ) | ( and_dcpl_13_X1 & and_dcpl_13_R1 ) | ( and_dcpl_13_X2 & and_dcpl_13_R2 );
  assign _015__R = ( _015__X0 & _015__R0 );
  assign _014__R = ( _014__X0 & _014__R0 );
  assign or_dcpl_8_R = ( or_dcpl_8_X0 & or_dcpl_8_R0 ) | ( or_dcpl_8_X1 & or_dcpl_8_R1 );
  assign _044__R = ( _044__X0 & _044__R0 );
  assign _043__R = ( _043__X0 & _043__R0 );
  assign _042__R = ( _042__X0 & _042__R0 );
  assign _034__R = ( _034__X0 & _034__R0 );
  assign and_dcpl_2_R = ( and_dcpl_2_X0 & and_dcpl_2_R0 ) | ( and_dcpl_2_X1 & and_dcpl_2_R1 ) | ( and_dcpl_2_X2 & and_dcpl_2_R2 );
  assign _033__R = ( _033__X0 & _033__R0 );
  assign reg_chn_o_rsci_ld_core_psct_cse_R = ( reg_chn_o_rsci_ld_core_psct_cse_X0 & reg_chn_o_rsci_ld_core_psct_cse_R0 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X1 & reg_chn_o_rsci_ld_core_psct_cse_R1 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X2 & reg_chn_o_rsci_ld_core_psct_cse_R2 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X3 & reg_chn_o_rsci_ld_core_psct_cse_R3 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X4 & reg_chn_o_rsci_ld_core_psct_cse_R4 );
  assign chn_o_rsci_bawt_R = ( chn_o_rsci_bawt_X0 & chn_o_rsci_bawt_R0 ) | ( chn_o_rsci_bawt_X1 & chn_o_rsci_bawt_R1 ) | ( chn_o_rsci_bawt_X2 & chn_o_rsci_bawt_R2 );
  assign or_cse_R = ( or_cse_X0 & or_cse_R0 ) | ( or_cse_X1 & or_cse_R1 );
  assign chn_a_rsci_bawt_R = ( chn_a_rsci_bawt_X0 & chn_a_rsci_bawt_R0 ) | ( chn_a_rsci_bawt_X1 & chn_a_rsci_bawt_R1 ) | ( chn_a_rsci_bawt_X2 & chn_a_rsci_bawt_R2 ) | ( chn_a_rsci_bawt_X3 & chn_a_rsci_bawt_R3 ) | ( chn_a_rsci_bawt_X4 & chn_a_rsci_bawt_R4 );
  assign IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_R = ( IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_X0 & IsZero_5U_10U_IsZero_5U_10U_nor_cse_sva_R0 );
  assign IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_R = ( IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_X0 & IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_R0 ) | ( IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_X1 & IsInf_5U_10U_IsInf_5U_10U_and_cse_sva_R1 );
  assign IsDenorm_5U_10U_or_tmp_R = ( IsDenorm_5U_10U_or_tmp_X0 & IsDenorm_5U_10U_or_tmp_R0 ) | ( IsDenorm_5U_10U_or_tmp_X1 & IsDenorm_5U_10U_or_tmp_R1 ) | ( IsDenorm_5U_10U_or_tmp_X2 & IsDenorm_5U_10U_or_tmp_R2 ) | ( IsDenorm_5U_10U_or_tmp_X3 & IsDenorm_5U_10U_or_tmp_R3 ) | ( IsDenorm_5U_10U_or_tmp_X4 & IsDenorm_5U_10U_or_tmp_R4 ) | ( IsDenorm_5U_10U_or_tmp_X5 & IsDenorm_5U_10U_or_tmp_R5 );
  assign _037__R = ( _037__X0 & _037__R0 );
  assign core_wen_R = ( core_wen_X0 & core_wen_R0 ) | ( core_wen_X1 & core_wen_R1 ) | ( core_wen_X2 & core_wen_R2 ) | ( core_wen_X3 & core_wen_R3 ) | ( core_wen_X4 & core_wen_R4 ) | ( core_wen_X5 & core_wen_R5 ) | ( core_wen_X6 & core_wen_R6 ) | ( core_wen_X7 & core_wen_R7 ) | ( core_wen_X8 & core_wen_R8 ) | ( core_wen_X9 & core_wen_R9 );
  assign fsm_output_R = ( fsm_output_X0 & fsm_output_R0 ) | ( fsm_output_X1 & fsm_output_R1 ) | ( fsm_output_X2 & fsm_output_R2 ) | ( fsm_output_X3 & fsm_output_R3 ) | ( fsm_output_X4 & fsm_output_R4 );
  assign and_4_mdf_R = ( and_4_mdf_X0 & and_4_mdf_R0 ) | ( and_4_mdf_X1 & and_4_mdf_R1 ) | ( and_4_mdf_X2 & and_4_mdf_R2 ) | ( and_4_mdf_X3 & and_4_mdf_R3 );
  assign fangyuan0_R = ( fangyuan0_X0 & fangyuan0_R0 );
  assign _038__R = ( _038__X0 & _038__R0 );
  assign libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1_R = ( libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1_X0 & libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1_R0 ) | ( libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1_X1 & libraries_leading_sign_10_0_9ac8f64992538a762a5a05a903e0d3de3d5a_1_R1 );
  assign chn_o_rsci_oswt_unreg_R = ( chn_o_rsci_oswt_unreg_X0 & chn_o_rsci_oswt_unreg_R0 );
  assign chn_o_rsc_z_R = ( chn_o_rsc_z_X0 & chn_o_rsc_z_R0 );
  assign chn_o_rsc_lz_R = ( chn_o_rsc_lz_X0 & chn_o_rsc_lz_R0 );
  assign chn_a_rsci_oswt_unreg_R = ( chn_a_rsci_oswt_unreg_X0 & chn_a_rsci_oswt_unreg_R0 );
  assign chn_a_rsc_lz_R = ( chn_a_rsc_lz_X0 & chn_a_rsc_lz_R0 );
 // ground taints for floating regs
 // ground taints for unused wires
  assign { nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_R , nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_C , nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_acc_psp_sva_X , nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_a_R , nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_a_C , nl_FpExpoWidthInc_5U_6U_10U_1U_1U_if_1_if_lshift_rg_a_X , nl_HLS_fp16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_R , nl_HLS_fp16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_C , nl_HLS_fp16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_X , nl_leading_sign_10_0_rg_mantissa_R , nl_leading_sign_10_0_rg_mantissa_C , nl_leading_sign_10_0_rg_mantissa_X  } = 0;
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL1 <= reg_chn_o_rsci_ld_core_psct_cse ;
    if( INSTR_IN_ZY ) reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL2 <= reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_o_rsci_d_9_0_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_o_rsci_d_9_0_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_9_0_PREV_VAL1 <= chn_o_rsci_d_9_0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_9_0_PREV_VAL2 <= chn_o_rsci_d_9_0_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_o_rsci_d_16_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_o_rsci_d_16_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_16_PREV_VAL1 <= chn_o_rsci_d_16 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_16_PREV_VAL2 <= chn_o_rsci_d_16_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_o_rsci_d_13_10_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_o_rsci_d_13_10_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_13_10_PREV_VAL1 <= chn_o_rsci_d_13_10 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_13_10_PREV_VAL2 <= chn_o_rsci_d_13_10_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_o_rsci_d_15_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_o_rsci_d_15_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_15_PREV_VAL1 <= chn_o_rsci_d_15 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_15_PREV_VAL2 <= chn_o_rsci_d_15_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_o_rsci_d_14_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_o_rsci_d_14_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_14_PREV_VAL1 <= chn_o_rsci_d_14 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_14_PREV_VAL2 <= chn_o_rsci_d_14_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_a_rsci_ld_core_psct_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_a_rsci_ld_core_psct_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_a_rsci_ld_core_psct_PREV_VAL1 <= chn_a_rsci_ld_core_psct ;
    if( INSTR_IN_ZY ) chn_a_rsci_ld_core_psct_PREV_VAL2 <= chn_a_rsci_ld_core_psct_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_a_rsci_iswt0_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_a_rsci_iswt0_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_a_rsci_iswt0_PREV_VAL1 <= chn_a_rsci_iswt0 ;
    if( INSTR_IN_ZY ) chn_a_rsci_iswt0_PREV_VAL2 <= chn_a_rsci_iswt0_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) reg_chn_o_rsci_iswt0_cse_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) reg_chn_o_rsci_iswt0_cse_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) reg_chn_o_rsci_iswt0_cse_PREV_VAL1 <= reg_chn_o_rsci_iswt0_cse ;
    if( INSTR_IN_ZY ) reg_chn_o_rsci_iswt0_cse_PREV_VAL2 <= reg_chn_o_rsci_iswt0_cse_PREV_VAL1 ;
  end
 // ground taints for unused wire slices
  assign { chn_a_rsci_d_mxwt_R9 [15:10] } = 0;
  assign { chn_a_rsci_d_mxwt_X9 [15:10] } = 0;
  assign { chn_a_rsci_d_mxwt_C9 [15:10] } = 0;
  assign { fsm_output_R4 [1:1] } = 0;
  assign { fsm_output_X4 [1:1] } = 0;
  assign { fsm_output_C4 [1:1] } = 0;
  assert property( chn_a_rsci_iswt0_r_flag == 0 || chn_a_rsci_iswt0_PREV_VAL1 == chn_a_rsci_iswt0_PREV_VAL2 );
  assert property( chn_a_rsci_ld_core_psct_r_flag == 0 || chn_a_rsci_ld_core_psct_PREV_VAL1 == chn_a_rsci_ld_core_psct_PREV_VAL2 );
  assert property( chn_o_rsci_d_13_10_r_flag == 0 || chn_o_rsci_d_13_10_PREV_VAL1 == chn_o_rsci_d_13_10_PREV_VAL2 );
  assert property( chn_o_rsci_d_14_r_flag == 0 || chn_o_rsci_d_14_PREV_VAL1 == chn_o_rsci_d_14_PREV_VAL2 );
  assert property( chn_o_rsci_d_15_r_flag == 0 || chn_o_rsci_d_15_PREV_VAL1 == chn_o_rsci_d_15_PREV_VAL2 );
  assert property( chn_o_rsci_d_16_r_flag == 0 || chn_o_rsci_d_16_PREV_VAL1 == chn_o_rsci_d_16_PREV_VAL2 );
  assert property( chn_o_rsci_d_9_0_r_flag == 0 || chn_o_rsci_d_9_0_PREV_VAL1 == chn_o_rsci_d_9_0_PREV_VAL2 );
  assert property( reg_chn_o_rsci_iswt0_cse_r_flag == 0 || reg_chn_o_rsci_iswt0_cse_PREV_VAL1 == reg_chn_o_rsci_iswt0_cse_PREV_VAL2 );
  assert property( reg_chn_o_rsci_ld_core_psct_cse_r_flag == 0 || reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL1 == reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL2 );
  assign rst_zy = !nvdla_core_rstn ;
endmodule
