module RAM_BANK_RAMPDP_64X226_GL_M1_D2 ( CLK , IDDQ , RA , RE , RET_EN , SLEEP_EN , SVOP , WA , WD , WE , clobber_array , clobber_flops , INSTR_IN_ZY , rst_zy , CLK_T , CLK_S , IDDQ_T , IDDQ_S , RA_T , RA_S , RD_R0 , RD_C0 , RD_X0 , RE_T , RE_S , RET_EN_T , RET_EN_S , SLEEP_EN_T , SLEEP_EN_S , SVOP_T , SVOP_S , WA_T , WA_S , WD_T , WD_S , WE_T , WE_S , clobber_array_T , clobber_array_S , clobber_flops_T , clobber_flops_S , RD , CLK_R , CLK_X , CLK_C , IDDQ_R , IDDQ_X , IDDQ_C , RA_R , RA_X , RA_C , RD_T , RD_S , RE_R , RE_X , RE_C , RET_EN_R , RET_EN_X , RET_EN_C , SLEEP_EN_R , SLEEP_EN_X , SLEEP_EN_C , SVOP_R , SVOP_X , SVOP_C , WA_R , WA_X , WA_C , WD_R , WD_X , WD_C , WE_R , WE_X , WE_C , clobber_array_R , clobber_array_X , clobber_array_C , clobber_flops_R , clobber_flops_X , clobber_flops_C );
  input rst_zy;
  integer i;
  input INSTR_IN_ZY;
  logic _00_;
  logic _00__T ;
  logic _00__R ;
  logic _00__C ;
  logic _00__X ;
  logic [13:0] _00__S ;
  logic [225:0] _01_;
  logic [225:0] _01__T ;
  logic [225:0] _01__R ;
  logic [225:0] _01__C ;
  logic [225:0] _01__X ;
  logic [13:0] _01__S ;
  logic _02_;
  logic _02__T ;
  logic _02__R ;
  logic _02__C ;
  logic _02__X ;
  logic [13:0] _02__S ;
  logic _03_;
  logic _03__T ;
  logic _03__R ;
  logic _03__C ;
  logic _03__X ;
  logic [13:0] _03__S ;
  logic _04_;
  logic _04__T ;
  logic _04__R ;
  logic _04__C ;
  logic _04__X ;
  logic [13:0] _04__S ;
  logic _05_;
  logic _05__T ;
  logic _05__R ;
  logic _05__C ;
  logic _05__X ;
  logic [13:0] _05__S ;
  logic _06_;
  logic _06__T ;
  logic _06__R ;
  logic _06__C ;
  logic _06__X ;
  logic [13:0] _06__S ;
  logic _07_;
  logic _07__T ;
  logic _07__R ;
  logic _07__C ;
  logic _07__X ;
  logic [13:0] _07__S ;
  logic _08_;
  logic _08__T ;
  logic _08__R ;
  logic _08__C ;
  logic _08__X ;
  logic [13:0] _08__S ;
  logic _09_;
  logic _09__T ;
  logic _09__R ;
  logic _09__C ;
  logic _09__X ;
  logic [13:0] _09__S ;
  logic _10_;
  logic _10__T ;
  logic _10__R ;
  logic _10__C ;
  logic _10__X ;
  logic [13:0] _10__S ;
  logic _11_;
  logic _11__T ;
  logic _11__R ;
  logic _11__C ;
  logic _11__X ;
  logic [13:0] _11__S ;
  logic _12_;
  logic _12__T ;
  logic _12__R ;
  logic _12__C ;
  logic _12__X ;
  logic [13:0] _12__S ;
  logic [6:0] _13_;
  logic [6:0] _13__T ;
  logic [6:0] _13__R ;
  logic [6:0] _13__C ;
  logic [6:0] _13__X ;
  logic [13:0] _13__S ;
  logic [6:0] _14_;
  logic [6:0] _14__T ;
  logic [6:0] _14__R ;
  logic [6:0] _14__C ;
  logic [6:0] _14__X ;
  logic [13:0] _14__S ;
  logic [225:0] _15_;
  logic [225:0] _15__T ;
  logic [225:0] _15__R ;
  logic [225:0] _15__C ;
  logic [225:0] _15__X ;
  logic [13:0] _15__S ;
  logic [225:0] _16_;
  logic [225:0] _16__T ;
  logic [225:0] _16__R ;
  logic [225:0] _16__C ;
  logic [225:0] _16__X ;
  logic [13:0] _16__S ;
  logic _17_;
  logic _17__T ;
  logic _17__R ;
  logic _17__C ;
  logic _17__X ;
  logic [13:0] _17__S ;
  logic _18_;
  logic _18__T ;
  logic _18__R ;
  logic _18__C ;
  logic _18__X ;
  logic [13:0] _18__S ;
  logic _19_;
  logic _19__T ;
  logic _19__R ;
  logic _19__C ;
  logic _19__X ;
  logic [13:0] _19__S ;
  logic _20_;
  logic _20__T ;
  logic _20__R ;
  logic _20__C ;
  logic _20__X ;
  logic [13:0] _20__S ;
  logic _21_;
  logic _21__T ;
  logic _21__R ;
  logic _21__C ;
  logic _21__X ;
  logic [13:0] _21__S ;
  logic [6:0] _22_;
  logic [6:0] _22__T ;
  logic [6:0] _22__R ;
  logic [6:0] _22__C ;
  logic [6:0] _22__X ;
  logic [13:0] _22__S ;
  logic [225:0] _23_;
  logic [225:0] _23__T ;
  logic [225:0] _23__R ;
  logic [225:0] _23__C ;
  logic [225:0] _23__X ;
  logic [13:0] _23__S ;
  logic [6:0] ADR;
  logic [6:0] ADR_T ;
  logic [6:0] ADR_R ;
  logic [6:0] ADR_C ;
  logic [6:0] ADR_X ;
  logic [13:0] ADR_S ;
  logic [225:0] BADBIT;
  logic [225:0] BADBIT_T ;
  logic [225:0] BADBIT_R ;
  logic [225:0] BADBIT_C ;
  logic [225:0] BADBIT_X ;
  logic [13:0] BADBIT_S ;
  logic CAPT_DIS;
  logic CAPT_DIS_T ;
  logic CAPT_DIS_R ;
  logic CAPT_DIS_C ;
  logic CAPT_DIS_X ;
  logic [13:0] CAPT_DIS_S ;
  logic CLAMPB;
  logic CLAMPB_T ;
  logic CLAMPB_R ;
  logic CLAMPB_C ;
  logic CLAMPB_X ;
  logic [13:0] CLAMPB_S ;
  input CLK;
  input CLK_T ;
  input [13:0] CLK_S ;
  output CLK_R ;
  output CLK_X ;
  output CLK_C ;
  input IDDQ;
  input IDDQ_T ;
  input [13:0] IDDQ_S ;
  output IDDQ_R ;
  output IDDQ_X ;
  output IDDQ_C ;
  logic [511:0] PDEC0;
  logic [511:0] PDEC0_T ;
  logic [511:0] PDEC0_R ;
  logic [511:0] PDEC0_C ;
  logic [511:0] PDEC0_X ;
  logic [13:0] PDEC0_S ;
  logic [511:0] PDEC1;
  logic [511:0] PDEC1_T ;
  logic [511:0] PDEC1_R ;
  logic [511:0] PDEC1_C ;
  logic [511:0] PDEC1_X ;
  logic [13:0] PDEC1_S ;
  logic [511:0] PDEC2;
  logic [511:0] PDEC2_T ;
  logic [511:0] PDEC2_R ;
  logic [511:0] PDEC2_C ;
  logic [511:0] PDEC2_X ;
  logic [13:0] PDEC2_S ;
  input [6:0] RA;
  input [6:0] RA_T ;
  input [13:0] RA_S ;
  output [6:0] RA_R ;
  output [6:0] RA_X ;
  output [6:0] RA_C ;
  logic [6:0] RADR;
  logic [6:0]  RADR_T ;
  logic [6:0]  RADR_PREV_VAL1 ;
  logic [6:0]  RADR_PREV_VAL2 ;
  logic [6:0]  RADR_R ;
  logic [6:0]  RADR_X ;
  logic [6:0]  RADR_C ;
  logic [13:0] RADR_S ;
  logic RADR_t_flag ;
  logic RADR_r_flag ;
  logic RADRCLK;
  logic RADRCLK_T ;
  logic RADRCLK_R ;
  logic RADRCLK_C ;
  logic RADRCLK_X ;
  logic [13:0] RADRCLK_S ;
  logic [6:0] RADRSWI;
  logic [6:0] RADRSWI_T ;
  logic [6:0] RADRSWI_R ;
  logic [6:0] RADRSWI_C ;
  logic [6:0] RADRSWI_X ;
  logic [13:0] RADRSWI_S ;
  output [225:0] RD;
  logic [225:0] RD ;
  output [225:0] RD_T ;
  logic [225:0] RD_T ;
  logic [225:0] RD_R ;
  logic [225:0] RD_C ;
  logic [225:0] RD_X ;
  logic [13:0] RD_S ;
  input [225:0] RD_R0 ;
  input [225:0] RD_C0 ;
  input [225:0] RD_X0 ;
  output [13:0] RD_S ;
  logic RDBYP;
  logic RDBYP_T ;
  logic RDBYP_R ;
  logic RDBYP_C ;
  logic RDBYP_X ;
  logic [13:0] RDBYP_S ;
  logic [225:0] RDBYPASS;
  logic [225:0] RDBYPASS_T ;
  logic [225:0] RDBYPASS_R ;
  logic [225:0] RDBYPASS_C ;
  logic [225:0] RDBYPASS_X ;
  logic [13:0] RDBYPASS_S ;
  input RE;
  input RE_T ;
  input [13:0] RE_S ;
  output RE_R ;
  output RE_X ;
  output RE_C ;
  logic RECLK;
  logic RECLK_T ;
  logic RECLK_R ;
  logic RECLK_C ;
  logic RECLK_X ;
  logic [13:0] RECLK_S ;
  input RET_EN;
  input RET_EN_T ;
  input [13:0] RET_EN_S ;
  output RET_EN_R ;
  output RET_EN_X ;
  output RET_EN_C ;
  logic RE_LATB;
  logic  RE_LATB_T ;
  logic  RE_LATB_PREV_VAL1 ;
  logic  RE_LATB_PREV_VAL2 ;
  logic  RE_LATB_R ;
  logic  RE_LATB_X ;
  logic  RE_LATB_C ;
  logic [13:0] RE_LATB_S ;
  logic RE_LATB_t_flag ;
  logic RE_LATB_r_flag ;
  logic RWSEL;
  logic RWSEL_T ;
  logic RWSEL_R ;
  logic RWSEL_C ;
  logic RWSEL_X ;
  logic [13:0] RWSEL_S ;
  logic RdClk0;
  logic RdClk0_T ;
  logic RdClk0_R ;
  logic RdClk0_C ;
  logic RdClk0_X ;
  logic [13:0] RdClk0_S ;
  logic [225:0] SHFT;
  logic [225:0] SHFT_T ;
  logic [225:0] SHFT_R ;
  logic [225:0] SHFT_C ;
  logic [225:0] SHFT_X ;
  logic [13:0] SHFT_S ;
  input [7:0] SLEEP_EN;
  input [7:0] SLEEP_EN_T ;
  input [13:0] SLEEP_EN_S ;
  output [7:0] SLEEP_EN_R ;
  output [7:0] SLEEP_EN_X ;
  output [7:0] SLEEP_EN_C ;
  input [7:0] SVOP;
  input [7:0] SVOP_T ;
  input [13:0] SVOP_S ;
  output [7:0] SVOP_R ;
  output [7:0] SVOP_X ;
  output [7:0] SVOP_C ;
  input [6:0] WA;
  input [6:0] WA_T ;
  input [13:0] WA_S ;
  output [6:0] WA_R ;
  output [6:0] WA_X ;
  output [6:0] WA_C ;
  logic WADRCLK;
  logic WADRCLK_T ;
  logic WADRCLK_R ;
  logic WADRCLK_C ;
  logic WADRCLK_X ;
  logic [13:0] WADRCLK_S ;
  logic [6:0] WAFF;
  logic [6:0]  WAFF_T ;
  logic [6:0]  WAFF_PREV_VAL1 ;
  logic [6:0]  WAFF_PREV_VAL2 ;
  logic [6:0]  WAFF_R ;
  logic [6:0]  WAFF_X ;
  logic [6:0]  WAFF_C ;
  logic [13:0] WAFF_S ;
  logic WAFF_t_flag ;
  logic WAFF_r_flag ;
  assign WAFF_S = 145 ;
  input [225:0] WD;
  input [225:0] WD_T ;
  input [13:0] WD_S ;
  output [225:0] WD_R ;
  output [225:0] WD_X ;
  output [225:0] WD_C ;
  logic [225:0] WDBQ;
  logic [225:0] WDBQ_T ;
  logic [225:0] WDBQ_R ;
  logic [225:0] WDBQ_C ;
  logic [225:0] WDBQ_X ;
  logic [13:0] WDBQ_S ;
  logic [225:0] WDBQ_pr;
  logic [225:0] WDBQ_pr_T ;
  logic [225:0] WDBQ_pr_R ;
  logic [225:0] WDBQ_pr_C ;
  logic [225:0] WDBQ_pr_X ;
  logic [13:0] WDBQ_pr_S ;
  logic [225:0] WDQ;
  logic [225:0] WDQ_T ;
  logic [225:0] WDQ_R ;
  logic [225:0] WDQ_C ;
  logic [225:0] WDQ_X ;
  logic [13:0] WDQ_S ;
  logic [225:0] WDQ_pr;
  logic [225:0]  WDQ_pr_T ;
  logic [225:0]  WDQ_pr_PREV_VAL1 ;
  logic [225:0]  WDQ_pr_PREV_VAL2 ;
  logic [225:0]  WDQ_pr_R ;
  logic [225:0]  WDQ_pr_X ;
  logic [225:0]  WDQ_pr_C ;
  logic [13:0] WDQ_pr_S ;
  logic WDQ_pr_t_flag ;
  logic WDQ_pr_r_flag ;
  assign WDQ_pr_S = 146 ;
  input WE;
  input WE_T ;
  input [13:0] WE_S ;
  output WE_R ;
  output WE_X ;
  output WE_C ;
  logic WECLK;
  logic WECLK_T ;
  logic WECLK_R ;
  logic WECLK_C ;
  logic WECLK_X ;
  logic [13:0] WECLK_S ;
  logic WE_FF;
  logic  WE_FF_T ;
  logic  WE_FF_PREV_VAL1 ;
  logic  WE_FF_PREV_VAL2 ;
  logic  WE_FF_R ;
  logic  WE_FF_X ;
  logic  WE_FF_C ;
  logic [13:0] WE_FF_S ;
  logic WE_FF_t_flag ;
  logic WE_FF_r_flag ;
  logic WE_LATB;
  logic  WE_LATB_T ;
  logic  WE_LATB_PREV_VAL1 ;
  logic  WE_LATB_PREV_VAL2 ;
  logic  WE_LATB_R ;
  logic  WE_LATB_X ;
  logic  WE_LATB_C ;
  logic [13:0] WE_LATB_S ;
  logic WE_LATB_t_flag ;
  logic WE_LATB_r_flag ;
  logic [225:0] WMNQ;
  logic [225:0] WMNQ_T ;
  logic [225:0] WMNQ_R ;
  logic [225:0] WMNQ_C ;
  logic [225:0] WMNQ_X ;
  logic [13:0] WMNQ_S ;
  logic [225:0] WMNexp;
  logic [225:0] WMNexp_T ;
  logic [225:0] WMNexp_R ;
  logic [225:0] WMNexp_C ;
  logic [225:0] WMNexp_X ;
  logic [13:0] WMNexp_S ;
  logic WRDCLK;
  logic WRDCLK_T ;
  logic WRDCLK_R ;
  logic WRDCLK_C ;
  logic WRDCLK_X ;
  logic [13:0] WRDCLK_S ;
  logic WrClk0;
  logic WrClk0_T ;
  logic WrClk0_R ;
  logic WrClk0_C ;
  logic WrClk0_X ;
  logic [13:0] WrClk0_S ;
  input clobber_array;
  input clobber_array_T ;
  input [13:0] clobber_array_S ;
  output clobber_array_R ;
  output clobber_array_X ;
  output clobber_array_C ;
  input clobber_flops;
  input clobber_flops_T ;
  input [13:0] clobber_flops_S ;
  output clobber_flops_R ;
  output clobber_flops_X ;
  output clobber_flops_C ;
  logic [225:0] dout;
  logic [225:0]  dout_T ;
  logic [225:0]  dout_PREV_VAL1 ;
  logic [225:0]  dout_PREV_VAL2 ;
  logic [225:0]  dout_R ;
  logic [225:0]  dout_X ;
  logic [225:0]  dout_C ;
  logic [13:0] dout_S ;
  logic dout_t_flag ;
  logic dout_r_flag ;
  logic [225:0] dout0;
  logic [225:0] dout0_T ;
  logic [225:0] dout0_R ;
  logic [225:0] dout0_C ;
  logic [225:0] dout0_X ;
  logic [13:0] dout0_S ;
  logic empadd;
  logic empadd_T ;
  logic empadd_R ;
  logic empadd_C ;
  logic empadd_X ;
  logic [13:0] empadd_S ;
  logic [225:0] force_x;
  logic [225:0] force_x_T ;
  logic [225:0] force_x_R ;
  logic [225:0] force_x_C ;
  logic [225:0] force_x_X ;
  logic [13:0] force_x_S ;
  logic [7:0] fusePDEC0;
  logic [7:0] fusePDEC0_T ;
  logic [7:0] fusePDEC0_R ;
  logic [7:0] fusePDEC0_C ;
  logic [7:0] fusePDEC0_X ;
  logic [13:0] fusePDEC0_S ;
  logic [7:0] fusePDEC1;
  logic [7:0] fusePDEC1_T ;
  logic [7:0] fusePDEC1_R ;
  logic [7:0] fusePDEC1_C ;
  logic [7:0] fusePDEC1_X ;
  logic [13:0] fusePDEC1_S ;
  logic [7:0] fusePDEC2;
  logic [7:0] fusePDEC2_T ;
  logic [7:0] fusePDEC2_R ;
  logic [7:0] fusePDEC2_C ;
  logic [7:0] fusePDEC2_X ;
  logic [13:0] fusePDEC2_S ;
  logic fuseien;
  logic fuseien_T ;
  logic fuseien_R ;
  logic fuseien_C ;
  logic fuseien_X ;
  logic [13:0] fuseien_S ;
  logic latffclk;
  logic latffclk_T ;
  logic latffclk_R ;
  logic latffclk_C ;
  logic latffclk_X ;
  logic [13:0] latffclk_S ;
  logic legal;
  logic legal_T ;
  logic legal_R ;
  logic legal_C ;
  logic legal_X ;
  logic [13:0] legal_S ;
  logic re_se;
  logic re_se_T ;
  logic re_se_R ;
  logic re_se_C ;
  logic re_se_X ;
  logic [13:0] re_se_S ;
  logic [225:0] rmuxd0;
  logic [225:0] rmuxd0_T ;
  logic [225:0] rmuxd0_R ;
  logic [225:0] rmuxd0_C ;
  logic [225:0] rmuxd0_X ;
  logic [13:0] rmuxd0_S ;
  logic [225:0] sel_normal;
  logic [225:0] sel_normal_T ;
  logic [225:0] sel_normal_R ;
  logic [225:0] sel_normal_C ;
  logic [225:0] sel_normal_X ;
  logic [13:0] sel_normal_S ;
  logic [225:0] sel_redun;
  logic [225:0] sel_redun_T ;
  logic [225:0] sel_redun_R ;
  logic [225:0] sel_redun_C ;
  logic [225:0] sel_redun_X ;
  logic [13:0] sel_redun_S ;
  logic tiedvalid;
  logic tiedvalid_T ;
  logic tiedvalid_R ;
  logic tiedvalid_C ;
  logic tiedvalid_X ;
  logic [13:0] tiedvalid_S ;
  logic we_se;
  logic we_se_T ;
  logic we_se_R ;
  logic we_se_C ;
  logic we_se_X ;
  logic [13:0] we_se_S ;
  assign _03_ = _17_ & _18_;
  assign _03__S = 0 ;
  logic [0:0] _17__C0 ;
  logic [0:0] _17__R0 ;
  logic [0:0] _17__X0 ;
  logic [0:0] _18__C0 ;
  logic [0:0] _18__R0 ;
  logic [0:0] _18__X0 ;
  assign _03__T = _17__T | _18__T ;
  assign _17__C0 = _03__C ;
  assign _17__X0 = _03__X ;
  assign _18__C0 = _03__C ;
  assign _18__X0 = _03__X ;
  assign _17__R0 = ( _03__R | _03__C & _18__T ) & { 1{ _18_ != 0 }} ;
  assign _18__R0 = ( _03__R | _03__C & _17__T ) & { 1{ _17_ != 0 }} ;
  assign _04_ = CLK & _18_;
  assign _04__S = 0 ;
  logic [0:0] CLK_C0 ;
  logic [0:0] CLK_R0 ;
  logic [0:0] CLK_X0 ;
  logic [0:0] _18__C1 ;
  logic [0:0] _18__R1 ;
  logic [0:0] _18__X1 ;
  assign _04__T = CLK_T | _18__T ;
  assign CLK_C0 = _04__C ;
  assign CLK_X0 = _04__X ;
  assign _18__C1 = _04__C ;
  assign _18__X1 = _04__X ;
  assign CLK_R0 = ( _04__R | _04__C & _18__T ) & { 1{ _18_ != 0 }} ;
  assign _18__R1 = ( _04__R | _04__C & CLK_T ) & { 1{ CLK != 0 }} ;
  assign _05_ = we_se & CLK;
  assign _05__S = 0 ;
  logic [0:0] we_se_C0 ;
  logic [0:0] we_se_R0 ;
  logic [0:0] we_se_X0 ;
  logic [0:0] CLK_C1 ;
  logic [0:0] CLK_R1 ;
  logic [0:0] CLK_X1 ;
  assign _05__T = we_se_T | CLK_T ;
  assign we_se_C0 = _05__C ;
  assign we_se_X0 = _05__X ;
  assign CLK_C1 = _05__C ;
  assign CLK_X1 = _05__X ;
  assign we_se_R0 = ( _05__R | _05__C & CLK_T ) & { 1{ CLK != 0 }} ;
  assign CLK_R1 = ( _05__R | _05__C & we_se_T ) & { 1{ we_se != 0 }} ;
  assign WADRCLK = _05_ & _18_;
  assign WADRCLK_S = 0 ;
  logic [0:0] _05__C0 ;
  logic [0:0] _05__R0 ;
  logic [0:0] _05__X0 ;
  logic [0:0] _18__C2 ;
  logic [0:0] _18__R2 ;
  logic [0:0] _18__X2 ;
  assign WADRCLK_T = _05__T | _18__T ;
  assign _05__C0 = WADRCLK_C ;
  assign _05__X0 = WADRCLK_X ;
  assign _18__C2 = WADRCLK_C ;
  assign _18__X2 = WADRCLK_X ;
  assign _05__R0 = ( WADRCLK_R | WADRCLK_C & _18__T ) & { 1{ _18_ != 0 }} ;
  assign _18__R2 = ( WADRCLK_R | WADRCLK_C & _05__T ) & { 1{ _05_ != 0 }} ;
  assign RADRCLK = re_se & CLK;
  assign RADRCLK_S = 0 ;
  logic [0:0] re_se_C0 ;
  logic [0:0] re_se_R0 ;
  logic [0:0] re_se_X0 ;
  logic [0:0] CLK_C2 ;
  logic [0:0] CLK_R2 ;
  logic [0:0] CLK_X2 ;
  assign RADRCLK_T = re_se_T | CLK_T ;
  assign re_se_C0 = RADRCLK_C ;
  assign re_se_X0 = RADRCLK_X ;
  assign CLK_C2 = RADRCLK_C ;
  assign CLK_X2 = RADRCLK_X ;
  assign re_se_R0 = ( RADRCLK_R | RADRCLK_C & CLK_T ) & { 1{ CLK != 0 }} ;
  assign CLK_R2 = ( RADRCLK_R | RADRCLK_C & re_se_T ) & { 1{ re_se != 0 }} ;
  assign _06_ = re_se & CLAMPB;
  assign _06__S = 0 ;
  logic [0:0] re_se_C1 ;
  logic [0:0] re_se_R1 ;
  logic [0:0] re_se_X1 ;
  logic [0:0] CLAMPB_C0 ;
  logic [0:0] CLAMPB_R0 ;
  logic [0:0] CLAMPB_X0 ;
  assign _06__T = re_se_T | CLAMPB_T ;
  assign re_se_C1 = _06__C ;
  assign re_se_X1 = _06__X ;
  assign CLAMPB_C0 = _06__C ;
  assign CLAMPB_X0 = _06__X ;
  assign re_se_R1 = ( _06__R | _06__C & CLAMPB_T ) & { 1{ CLAMPB != 0 }} ;
  assign CLAMPB_R0 = ( _06__R | _06__C & re_se_T ) & { 1{ re_se != 0 }} ;
  assign _07_ = _06_ & _18_;
  assign _07__S = 0 ;
  logic [0:0] _06__C0 ;
  logic [0:0] _06__R0 ;
  logic [0:0] _06__X0 ;
  logic [0:0] _18__C3 ;
  logic [0:0] _18__R3 ;
  logic [0:0] _18__X3 ;
  assign _07__T = _06__T | _18__T ;
  assign _06__C0 = _07__C ;
  assign _06__X0 = _07__X ;
  assign _18__C3 = _07__C ;
  assign _18__X3 = _07__X ;
  assign _06__R0 = ( _07__R | _07__C & _18__T ) & { 1{ _18_ != 0 }} ;
  assign _18__R3 = ( _07__R | _07__C & _06__T ) & { 1{ _06_ != 0 }} ;
  assign _08_ = _07_ & _19_;
  assign _08__S = 0 ;
  logic [0:0] _07__C0 ;
  logic [0:0] _07__R0 ;
  logic [0:0] _07__X0 ;
  logic [0:0] _19__C0 ;
  logic [0:0] _19__R0 ;
  logic [0:0] _19__X0 ;
  assign _08__T = _07__T | _19__T ;
  assign _07__C0 = _08__C ;
  assign _07__X0 = _08__X ;
  assign _19__C0 = _08__C ;
  assign _19__X0 = _08__X ;
  assign _07__R0 = ( _08__R | _08__C & _19__T ) & { 1{ _19_ != 0 }} ;
  assign _19__R0 = ( _08__R | _08__C & _07__T ) & { 1{ _07_ != 0 }} ;
  assign RdClk0 = _08_ & CLK;
  assign RdClk0_S = 0 ;
  logic [0:0] _08__C0 ;
  logic [0:0] _08__R0 ;
  logic [0:0] _08__X0 ;
  logic [0:0] CLK_C3 ;
  logic [0:0] CLK_R3 ;
  logic [0:0] CLK_X3 ;
  assign RdClk0_T = _08__T | CLK_T ;
  assign _08__C0 = RdClk0_C ;
  assign _08__X0 = RdClk0_X ;
  assign CLK_C3 = RdClk0_C ;
  assign CLK_X3 = RdClk0_X ;
  assign _08__R0 = ( RdClk0_R | RdClk0_C & CLK_T ) & { 1{ CLK != 0 }} ;
  assign CLK_R3 = ( RdClk0_R | RdClk0_C & _08__T ) & { 1{ _08_ != 0 }} ;
  assign _09_ = WE_FF & CLAMPB;
  assign _09__S = 0 ;
  logic [0:0] WE_FF_C0 ;
  logic [0:0] WE_FF_R0 ;
  logic [0:0] WE_FF_X0 ;
  logic [0:0] CLAMPB_C1 ;
  logic [0:0] CLAMPB_R1 ;
  logic [0:0] CLAMPB_X1 ;
  assign _09__T = WE_FF_T | CLAMPB_T ;
  assign WE_FF_C0 = _09__C ;
  assign WE_FF_X0 = _09__X ;
  assign CLAMPB_C1 = _09__C ;
  assign CLAMPB_X1 = _09__X ;
  assign WE_FF_R0 = ( _09__R | _09__C & CLAMPB_T ) & { 1{ CLAMPB != 0 }} ;
  assign CLAMPB_R1 = ( _09__R | _09__C & WE_FF_T ) & { 1{ WE_FF != 0 }} ;
  assign _10_ = _09_ & _18_;
  assign _10__S = 0 ;
  logic [0:0] _09__C0 ;
  logic [0:0] _09__R0 ;
  logic [0:0] _09__X0 ;
  logic [0:0] _18__C4 ;
  logic [0:0] _18__R4 ;
  logic [0:0] _18__X4 ;
  assign _10__T = _09__T | _18__T ;
  assign _09__C0 = _10__C ;
  assign _09__X0 = _10__X ;
  assign _18__C4 = _10__C ;
  assign _18__X4 = _10__X ;
  assign _09__R0 = ( _10__R | _10__C & _18__T ) & { 1{ _18_ != 0 }} ;
  assign _18__R4 = ( _10__R | _10__C & _09__T ) & { 1{ _09_ != 0 }} ;
  assign _11_ = _10_ & _19_;
  assign _11__S = 0 ;
  logic [0:0] _10__C0 ;
  logic [0:0] _10__R0 ;
  logic [0:0] _10__X0 ;
  logic [0:0] _19__C1 ;
  logic [0:0] _19__R1 ;
  logic [0:0] _19__X1 ;
  assign _11__T = _10__T | _19__T ;
  assign _10__C0 = _11__C ;
  assign _10__X0 = _11__X ;
  assign _19__C1 = _11__C ;
  assign _19__X1 = _11__X ;
  assign _10__R0 = ( _11__R | _11__C & _19__T ) & { 1{ _19_ != 0 }} ;
  assign _19__R1 = ( _11__R | _11__C & _10__T ) & { 1{ _10_ != 0 }} ;
  assign WECLK = _11_ & _21_;
  assign WECLK_S = 0 ;
  logic [0:0] _11__C0 ;
  logic [0:0] _11__R0 ;
  logic [0:0] _11__X0 ;
  logic [0:0] _21__C0 ;
  logic [0:0] _21__R0 ;
  logic [0:0] _21__X0 ;
  assign WECLK_T = _11__T | _21__T ;
  assign _11__C0 = WECLK_C ;
  assign _11__X0 = WECLK_X ;
  assign _21__C0 = WECLK_C ;
  assign _21__X0 = WECLK_X ;
  assign _11__R0 = ( WECLK_R | WECLK_C & _21__T ) & { 1{ _21_ != 0 }} ;
  assign _21__R0 = ( WECLK_R | WECLK_C & _11__T ) & { 1{ _11_ != 0 }} ;
  assign RWSEL = _09_ & _21_;
  assign RWSEL_S = 0 ;
  logic [0:0] _09__C1 ;
  logic [0:0] _09__R1 ;
  logic [0:0] _09__X1 ;
  logic [0:0] _21__C1 ;
  logic [0:0] _21__R1 ;
  logic [0:0] _21__X1 ;
  assign RWSEL_T = _09__T | _21__T ;
  assign _09__C1 = RWSEL_C ;
  assign _09__X1 = RWSEL_X ;
  assign _21__C1 = RWSEL_C ;
  assign _21__X1 = RWSEL_X ;
  assign _09__R1 = ( RWSEL_R | RWSEL_C & _21__T ) & { 1{ _21_ != 0 }} ;
  assign _21__R1 = ( RWSEL_R | RWSEL_C & _09__T ) & { 1{ _09_ != 0 }} ;
  assign _12_ = _20_ & _18_;
  assign _12__S = 0 ;
  logic [0:0] _20__C0 ;
  logic [0:0] _20__R0 ;
  logic [0:0] _20__X0 ;
  logic [0:0] _18__C5 ;
  logic [0:0] _18__R5 ;
  logic [0:0] _18__X5 ;
  assign _12__T = _20__T | _18__T ;
  assign _20__C0 = _12__C ;
  assign _20__X0 = _12__X ;
  assign _18__C5 = _12__C ;
  assign _18__X5 = _12__X ;
  assign _20__R0 = ( _12__R | _12__C & _18__T ) & { 1{ _18_ != 0 }} ;
  assign _18__R5 = ( _12__R | _12__C & _20__T ) & { 1{ _20_ != 0 }} ;
  logic [6:0] fangyuan0;
  logic [6:0] fangyuan0_T ;
  logic [6:0] fangyuan0_R ;
  logic [6:0] fangyuan0_C ;
  logic [6:0] fangyuan0_X ;
  assign fangyuan0 = { RWSEL, RWSEL, RWSEL, RWSEL, RWSEL, RWSEL, RWSEL };
  assign fangyuan0_T = {  RWSEL_T , RWSEL_T , RWSEL_T , RWSEL_T , RWSEL_T , RWSEL_T , RWSEL_T  };
  logic [13:0] fangyuan0_S ;
  assign fangyuan0_S = 0 ;
  logic [0:0] RWSEL_R0 ;
  logic [0:0] RWSEL_X0 ;
  logic [0:0] RWSEL_C0 ;
  assign RWSEL_R0 = fangyuan0_R [6:6] ;
  assign RWSEL_X0 = fangyuan0_X [6:6] ;
  assign RWSEL_C0 = fangyuan0_C [6:6] ;
  logic [0:0] RWSEL_R1 ;
  logic [0:0] RWSEL_X1 ;
  logic [0:0] RWSEL_C1 ;
  assign RWSEL_R1 = fangyuan0_R [5:5] ;
  assign RWSEL_X1 = fangyuan0_X [5:5] ;
  assign RWSEL_C1 = fangyuan0_C [5:5] ;
  logic [0:0] RWSEL_R2 ;
  logic [0:0] RWSEL_X2 ;
  logic [0:0] RWSEL_C2 ;
  assign RWSEL_R2 = fangyuan0_R [4:4] ;
  assign RWSEL_X2 = fangyuan0_X [4:4] ;
  assign RWSEL_C2 = fangyuan0_C [4:4] ;
  logic [0:0] RWSEL_R3 ;
  logic [0:0] RWSEL_X3 ;
  logic [0:0] RWSEL_C3 ;
  assign RWSEL_R3 = fangyuan0_R [3:3] ;
  assign RWSEL_X3 = fangyuan0_X [3:3] ;
  assign RWSEL_C3 = fangyuan0_C [3:3] ;
  logic [0:0] RWSEL_R4 ;
  logic [0:0] RWSEL_X4 ;
  logic [0:0] RWSEL_C4 ;
  assign RWSEL_R4 = fangyuan0_R [2:2] ;
  assign RWSEL_X4 = fangyuan0_X [2:2] ;
  assign RWSEL_C4 = fangyuan0_C [2:2] ;
  logic [0:0] RWSEL_R5 ;
  logic [0:0] RWSEL_X5 ;
  logic [0:0] RWSEL_C5 ;
  assign RWSEL_R5 = fangyuan0_R [1:1] ;
  assign RWSEL_X5 = fangyuan0_X [1:1] ;
  assign RWSEL_C5 = fangyuan0_C [1:1] ;
  logic [0:0] RWSEL_R6 ;
  logic [0:0] RWSEL_X6 ;
  logic [0:0] RWSEL_C6 ;
  assign RWSEL_R6 = fangyuan0_R [0:0] ;
  assign RWSEL_X6 = fangyuan0_X [0:0] ;
  assign RWSEL_C6 = fangyuan0_C [0:0] ;

  assign _13_ = fangyuan0 & WAFF;
  assign _13__S = 0 ;
  logic [6:0] fangyuan0_C0 ;
  logic [6:0] fangyuan0_R0 ;
  logic [6:0] fangyuan0_X0 ;
  logic [6:0] WAFF_C0 ;
  logic [6:0] WAFF_R0 ;
  logic [6:0] WAFF_X0 ;
  assign _13__T = fangyuan0_T | WAFF_T ;
  assign fangyuan0_C0 = _13__C ;
  assign fangyuan0_X0 = _13__X ;
  assign WAFF_C0 = _13__C ;
  assign WAFF_X0 = _13__X ;
  assign fangyuan0_R0 = ( _13__R | _13__C & WAFF_T ) & { 7{ WAFF != 0 }} ;
  assign WAFF_R0 = ( _13__R | _13__C & fangyuan0_T ) & { 7{ fangyuan0 != 0 }} ;
  assign _14_ = _22_ & RADR;
  assign _14__S = 0 ;
  logic [6:0] _22__C0 ;
  logic [6:0] _22__R0 ;
  logic [6:0] _22__X0 ;
  logic [6:0] RADR_C0 ;
  logic [6:0] RADR_R0 ;
  logic [6:0] RADR_X0 ;
  assign _14__T = _22__T | RADR_T ;
  assign _22__C0 = _14__C ;
  assign _22__X0 = _14__X ;
  assign RADR_C0 = _14__C ;
  assign RADR_X0 = _14__X ;
  assign _22__R0 = ( _14__R | _14__C & RADR_T ) & { 7{ RADR != 0 }} ;
  assign RADR_R0 = ( _14__R | _14__C & _22__T ) & { 7{ _22_ != 0 }} ;
  assign _01_ = WD & 226'b1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111;
  assign _01__S = 0 ;
  logic [225:0] WD_C0 ;
  logic [225:0] WD_R0 ;
  logic [225:0] WD_X0 ;
  assign _01__T = WD_T ;
  assign WD_C0 = _01__C ;
  assign WD_R0 = _01__R ;
  assign WD_X0 = _01__X ;
  assign _15_ = 226'b1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111 & dout;
  assign _15__S = 0 ;
  logic [225:0] dout_C0 ;
  logic [225:0] dout_R0 ;
  logic [225:0] dout_X0 ;
  assign _15__T = dout_T ;
  assign dout_C0 = _15__C ;
  assign dout_R0 = _15__R ;
  assign dout_X0 = _15__X ;
  assign _16_ = 1'b0 & WDQ_pr;
  assign _16__S = 0 ;
  logic [225:0] WDQ_pr_C0 ;
  logic [225:0] WDQ_pr_R0 ;
  logic [225:0] WDQ_pr_X0 ;
  assign _16__T = WDQ_pr_T ;
  assign WDQ_pr_C0 = _16__C ;
  assign WDQ_pr_R0 = _16__R ;
  assign WDQ_pr_X0 = _16__X ;
  assign WrClk0 = WECLK & legal;
  assign WrClk0_S = 0 ;
  logic [0:0] WECLK_C0 ;
  logic [0:0] WECLK_R0 ;
  logic [0:0] WECLK_X0 ;
  logic [0:0] legal_C0 ;
  logic [0:0] legal_R0 ;
  logic [0:0] legal_X0 ;
  assign WrClk0_T = WECLK_T | legal_T ;
  assign WECLK_C0 = WrClk0_C ;
  assign WECLK_X0 = WrClk0_X ;
  assign legal_C0 = WrClk0_C ;
  assign legal_X0 = WrClk0_X ;
  assign WECLK_R0 = ( WrClk0_R | WrClk0_C & legal_T ) & { 1{ legal != 0 }} ;
  assign legal_R0 = ( WrClk0_R | WrClk0_C & WECLK_T ) & { 1{ WECLK != 0 }} ;
  logic [225:0] fangyuan1;
  logic [225:0] fangyuan1_T ;
  logic [225:0] fangyuan1_R ;
  logic [225:0] fangyuan1_C ;
  logic [225:0] fangyuan1_X ;
  assign fangyuan1 = { RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0, RdClk0 };
  assign fangyuan1_T = {  RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T , RdClk0_T  };
  logic [13:0] fangyuan1_S ;
  assign fangyuan1_S = 0 ;
  logic [0:0] RdClk0_R0 ;
  logic [0:0] RdClk0_X0 ;
  logic [0:0] RdClk0_C0 ;
  assign RdClk0_R0 = fangyuan1_R [225:225] ;
  assign RdClk0_X0 = fangyuan1_X [225:225] ;
  assign RdClk0_C0 = fangyuan1_C [225:225] ;
  logic [0:0] RdClk0_R1 ;
  logic [0:0] RdClk0_X1 ;
  logic [0:0] RdClk0_C1 ;
  assign RdClk0_R1 = fangyuan1_R [224:224] ;
  assign RdClk0_X1 = fangyuan1_X [224:224] ;
  assign RdClk0_C1 = fangyuan1_C [224:224] ;
  logic [0:0] RdClk0_R2 ;
  logic [0:0] RdClk0_X2 ;
  logic [0:0] RdClk0_C2 ;
  assign RdClk0_R2 = fangyuan1_R [223:223] ;
  assign RdClk0_X2 = fangyuan1_X [223:223] ;
  assign RdClk0_C2 = fangyuan1_C [223:223] ;
  logic [0:0] RdClk0_R3 ;
  logic [0:0] RdClk0_X3 ;
  logic [0:0] RdClk0_C3 ;
  assign RdClk0_R3 = fangyuan1_R [222:222] ;
  assign RdClk0_X3 = fangyuan1_X [222:222] ;
  assign RdClk0_C3 = fangyuan1_C [222:222] ;
  logic [0:0] RdClk0_R4 ;
  logic [0:0] RdClk0_X4 ;
  logic [0:0] RdClk0_C4 ;
  assign RdClk0_R4 = fangyuan1_R [221:221] ;
  assign RdClk0_X4 = fangyuan1_X [221:221] ;
  assign RdClk0_C4 = fangyuan1_C [221:221] ;
  logic [0:0] RdClk0_R5 ;
  logic [0:0] RdClk0_X5 ;
  logic [0:0] RdClk0_C5 ;
  assign RdClk0_R5 = fangyuan1_R [220:220] ;
  assign RdClk0_X5 = fangyuan1_X [220:220] ;
  assign RdClk0_C5 = fangyuan1_C [220:220] ;
  logic [0:0] RdClk0_R6 ;
  logic [0:0] RdClk0_X6 ;
  logic [0:0] RdClk0_C6 ;
  assign RdClk0_R6 = fangyuan1_R [219:219] ;
  assign RdClk0_X6 = fangyuan1_X [219:219] ;
  assign RdClk0_C6 = fangyuan1_C [219:219] ;
  logic [0:0] RdClk0_R7 ;
  logic [0:0] RdClk0_X7 ;
  logic [0:0] RdClk0_C7 ;
  assign RdClk0_R7 = fangyuan1_R [218:218] ;
  assign RdClk0_X7 = fangyuan1_X [218:218] ;
  assign RdClk0_C7 = fangyuan1_C [218:218] ;
  logic [0:0] RdClk0_R8 ;
  logic [0:0] RdClk0_X8 ;
  logic [0:0] RdClk0_C8 ;
  assign RdClk0_R8 = fangyuan1_R [217:217] ;
  assign RdClk0_X8 = fangyuan1_X [217:217] ;
  assign RdClk0_C8 = fangyuan1_C [217:217] ;
  logic [0:0] RdClk0_R9 ;
  logic [0:0] RdClk0_X9 ;
  logic [0:0] RdClk0_C9 ;
  assign RdClk0_R9 = fangyuan1_R [216:216] ;
  assign RdClk0_X9 = fangyuan1_X [216:216] ;
  assign RdClk0_C9 = fangyuan1_C [216:216] ;
  logic [0:0] RdClk0_R10 ;
  logic [0:0] RdClk0_X10 ;
  logic [0:0] RdClk0_C10 ;
  assign RdClk0_R10 = fangyuan1_R [215:215] ;
  assign RdClk0_X10 = fangyuan1_X [215:215] ;
  assign RdClk0_C10 = fangyuan1_C [215:215] ;
  logic [0:0] RdClk0_R11 ;
  logic [0:0] RdClk0_X11 ;
  logic [0:0] RdClk0_C11 ;
  assign RdClk0_R11 = fangyuan1_R [214:214] ;
  assign RdClk0_X11 = fangyuan1_X [214:214] ;
  assign RdClk0_C11 = fangyuan1_C [214:214] ;
  logic [0:0] RdClk0_R12 ;
  logic [0:0] RdClk0_X12 ;
  logic [0:0] RdClk0_C12 ;
  assign RdClk0_R12 = fangyuan1_R [213:213] ;
  assign RdClk0_X12 = fangyuan1_X [213:213] ;
  assign RdClk0_C12 = fangyuan1_C [213:213] ;
  logic [0:0] RdClk0_R13 ;
  logic [0:0] RdClk0_X13 ;
  logic [0:0] RdClk0_C13 ;
  assign RdClk0_R13 = fangyuan1_R [212:212] ;
  assign RdClk0_X13 = fangyuan1_X [212:212] ;
  assign RdClk0_C13 = fangyuan1_C [212:212] ;
  logic [0:0] RdClk0_R14 ;
  logic [0:0] RdClk0_X14 ;
  logic [0:0] RdClk0_C14 ;
  assign RdClk0_R14 = fangyuan1_R [211:211] ;
  assign RdClk0_X14 = fangyuan1_X [211:211] ;
  assign RdClk0_C14 = fangyuan1_C [211:211] ;
  logic [0:0] RdClk0_R15 ;
  logic [0:0] RdClk0_X15 ;
  logic [0:0] RdClk0_C15 ;
  assign RdClk0_R15 = fangyuan1_R [210:210] ;
  assign RdClk0_X15 = fangyuan1_X [210:210] ;
  assign RdClk0_C15 = fangyuan1_C [210:210] ;
  logic [0:0] RdClk0_R16 ;
  logic [0:0] RdClk0_X16 ;
  logic [0:0] RdClk0_C16 ;
  assign RdClk0_R16 = fangyuan1_R [209:209] ;
  assign RdClk0_X16 = fangyuan1_X [209:209] ;
  assign RdClk0_C16 = fangyuan1_C [209:209] ;
  logic [0:0] RdClk0_R17 ;
  logic [0:0] RdClk0_X17 ;
  logic [0:0] RdClk0_C17 ;
  assign RdClk0_R17 = fangyuan1_R [208:208] ;
  assign RdClk0_X17 = fangyuan1_X [208:208] ;
  assign RdClk0_C17 = fangyuan1_C [208:208] ;
  logic [0:0] RdClk0_R18 ;
  logic [0:0] RdClk0_X18 ;
  logic [0:0] RdClk0_C18 ;
  assign RdClk0_R18 = fangyuan1_R [207:207] ;
  assign RdClk0_X18 = fangyuan1_X [207:207] ;
  assign RdClk0_C18 = fangyuan1_C [207:207] ;
  logic [0:0] RdClk0_R19 ;
  logic [0:0] RdClk0_X19 ;
  logic [0:0] RdClk0_C19 ;
  assign RdClk0_R19 = fangyuan1_R [206:206] ;
  assign RdClk0_X19 = fangyuan1_X [206:206] ;
  assign RdClk0_C19 = fangyuan1_C [206:206] ;
  logic [0:0] RdClk0_R20 ;
  logic [0:0] RdClk0_X20 ;
  logic [0:0] RdClk0_C20 ;
  assign RdClk0_R20 = fangyuan1_R [205:205] ;
  assign RdClk0_X20 = fangyuan1_X [205:205] ;
  assign RdClk0_C20 = fangyuan1_C [205:205] ;
  logic [0:0] RdClk0_R21 ;
  logic [0:0] RdClk0_X21 ;
  logic [0:0] RdClk0_C21 ;
  assign RdClk0_R21 = fangyuan1_R [204:204] ;
  assign RdClk0_X21 = fangyuan1_X [204:204] ;
  assign RdClk0_C21 = fangyuan1_C [204:204] ;
  logic [0:0] RdClk0_R22 ;
  logic [0:0] RdClk0_X22 ;
  logic [0:0] RdClk0_C22 ;
  assign RdClk0_R22 = fangyuan1_R [203:203] ;
  assign RdClk0_X22 = fangyuan1_X [203:203] ;
  assign RdClk0_C22 = fangyuan1_C [203:203] ;
  logic [0:0] RdClk0_R23 ;
  logic [0:0] RdClk0_X23 ;
  logic [0:0] RdClk0_C23 ;
  assign RdClk0_R23 = fangyuan1_R [202:202] ;
  assign RdClk0_X23 = fangyuan1_X [202:202] ;
  assign RdClk0_C23 = fangyuan1_C [202:202] ;
  logic [0:0] RdClk0_R24 ;
  logic [0:0] RdClk0_X24 ;
  logic [0:0] RdClk0_C24 ;
  assign RdClk0_R24 = fangyuan1_R [201:201] ;
  assign RdClk0_X24 = fangyuan1_X [201:201] ;
  assign RdClk0_C24 = fangyuan1_C [201:201] ;
  logic [0:0] RdClk0_R25 ;
  logic [0:0] RdClk0_X25 ;
  logic [0:0] RdClk0_C25 ;
  assign RdClk0_R25 = fangyuan1_R [200:200] ;
  assign RdClk0_X25 = fangyuan1_X [200:200] ;
  assign RdClk0_C25 = fangyuan1_C [200:200] ;
  logic [0:0] RdClk0_R26 ;
  logic [0:0] RdClk0_X26 ;
  logic [0:0] RdClk0_C26 ;
  assign RdClk0_R26 = fangyuan1_R [199:199] ;
  assign RdClk0_X26 = fangyuan1_X [199:199] ;
  assign RdClk0_C26 = fangyuan1_C [199:199] ;
  logic [0:0] RdClk0_R27 ;
  logic [0:0] RdClk0_X27 ;
  logic [0:0] RdClk0_C27 ;
  assign RdClk0_R27 = fangyuan1_R [198:198] ;
  assign RdClk0_X27 = fangyuan1_X [198:198] ;
  assign RdClk0_C27 = fangyuan1_C [198:198] ;
  logic [0:0] RdClk0_R28 ;
  logic [0:0] RdClk0_X28 ;
  logic [0:0] RdClk0_C28 ;
  assign RdClk0_R28 = fangyuan1_R [197:197] ;
  assign RdClk0_X28 = fangyuan1_X [197:197] ;
  assign RdClk0_C28 = fangyuan1_C [197:197] ;
  logic [0:0] RdClk0_R29 ;
  logic [0:0] RdClk0_X29 ;
  logic [0:0] RdClk0_C29 ;
  assign RdClk0_R29 = fangyuan1_R [196:196] ;
  assign RdClk0_X29 = fangyuan1_X [196:196] ;
  assign RdClk0_C29 = fangyuan1_C [196:196] ;
  logic [0:0] RdClk0_R30 ;
  logic [0:0] RdClk0_X30 ;
  logic [0:0] RdClk0_C30 ;
  assign RdClk0_R30 = fangyuan1_R [195:195] ;
  assign RdClk0_X30 = fangyuan1_X [195:195] ;
  assign RdClk0_C30 = fangyuan1_C [195:195] ;
  logic [0:0] RdClk0_R31 ;
  logic [0:0] RdClk0_X31 ;
  logic [0:0] RdClk0_C31 ;
  assign RdClk0_R31 = fangyuan1_R [194:194] ;
  assign RdClk0_X31 = fangyuan1_X [194:194] ;
  assign RdClk0_C31 = fangyuan1_C [194:194] ;
  logic [0:0] RdClk0_R32 ;
  logic [0:0] RdClk0_X32 ;
  logic [0:0] RdClk0_C32 ;
  assign RdClk0_R32 = fangyuan1_R [193:193] ;
  assign RdClk0_X32 = fangyuan1_X [193:193] ;
  assign RdClk0_C32 = fangyuan1_C [193:193] ;
  logic [0:0] RdClk0_R33 ;
  logic [0:0] RdClk0_X33 ;
  logic [0:0] RdClk0_C33 ;
  assign RdClk0_R33 = fangyuan1_R [192:192] ;
  assign RdClk0_X33 = fangyuan1_X [192:192] ;
  assign RdClk0_C33 = fangyuan1_C [192:192] ;
  logic [0:0] RdClk0_R34 ;
  logic [0:0] RdClk0_X34 ;
  logic [0:0] RdClk0_C34 ;
  assign RdClk0_R34 = fangyuan1_R [191:191] ;
  assign RdClk0_X34 = fangyuan1_X [191:191] ;
  assign RdClk0_C34 = fangyuan1_C [191:191] ;
  logic [0:0] RdClk0_R35 ;
  logic [0:0] RdClk0_X35 ;
  logic [0:0] RdClk0_C35 ;
  assign RdClk0_R35 = fangyuan1_R [190:190] ;
  assign RdClk0_X35 = fangyuan1_X [190:190] ;
  assign RdClk0_C35 = fangyuan1_C [190:190] ;
  logic [0:0] RdClk0_R36 ;
  logic [0:0] RdClk0_X36 ;
  logic [0:0] RdClk0_C36 ;
  assign RdClk0_R36 = fangyuan1_R [189:189] ;
  assign RdClk0_X36 = fangyuan1_X [189:189] ;
  assign RdClk0_C36 = fangyuan1_C [189:189] ;
  logic [0:0] RdClk0_R37 ;
  logic [0:0] RdClk0_X37 ;
  logic [0:0] RdClk0_C37 ;
  assign RdClk0_R37 = fangyuan1_R [188:188] ;
  assign RdClk0_X37 = fangyuan1_X [188:188] ;
  assign RdClk0_C37 = fangyuan1_C [188:188] ;
  logic [0:0] RdClk0_R38 ;
  logic [0:0] RdClk0_X38 ;
  logic [0:0] RdClk0_C38 ;
  assign RdClk0_R38 = fangyuan1_R [187:187] ;
  assign RdClk0_X38 = fangyuan1_X [187:187] ;
  assign RdClk0_C38 = fangyuan1_C [187:187] ;
  logic [0:0] RdClk0_R39 ;
  logic [0:0] RdClk0_X39 ;
  logic [0:0] RdClk0_C39 ;
  assign RdClk0_R39 = fangyuan1_R [186:186] ;
  assign RdClk0_X39 = fangyuan1_X [186:186] ;
  assign RdClk0_C39 = fangyuan1_C [186:186] ;
  logic [0:0] RdClk0_R40 ;
  logic [0:0] RdClk0_X40 ;
  logic [0:0] RdClk0_C40 ;
  assign RdClk0_R40 = fangyuan1_R [185:185] ;
  assign RdClk0_X40 = fangyuan1_X [185:185] ;
  assign RdClk0_C40 = fangyuan1_C [185:185] ;
  logic [0:0] RdClk0_R41 ;
  logic [0:0] RdClk0_X41 ;
  logic [0:0] RdClk0_C41 ;
  assign RdClk0_R41 = fangyuan1_R [184:184] ;
  assign RdClk0_X41 = fangyuan1_X [184:184] ;
  assign RdClk0_C41 = fangyuan1_C [184:184] ;
  logic [0:0] RdClk0_R42 ;
  logic [0:0] RdClk0_X42 ;
  logic [0:0] RdClk0_C42 ;
  assign RdClk0_R42 = fangyuan1_R [183:183] ;
  assign RdClk0_X42 = fangyuan1_X [183:183] ;
  assign RdClk0_C42 = fangyuan1_C [183:183] ;
  logic [0:0] RdClk0_R43 ;
  logic [0:0] RdClk0_X43 ;
  logic [0:0] RdClk0_C43 ;
  assign RdClk0_R43 = fangyuan1_R [182:182] ;
  assign RdClk0_X43 = fangyuan1_X [182:182] ;
  assign RdClk0_C43 = fangyuan1_C [182:182] ;
  logic [0:0] RdClk0_R44 ;
  logic [0:0] RdClk0_X44 ;
  logic [0:0] RdClk0_C44 ;
  assign RdClk0_R44 = fangyuan1_R [181:181] ;
  assign RdClk0_X44 = fangyuan1_X [181:181] ;
  assign RdClk0_C44 = fangyuan1_C [181:181] ;
  logic [0:0] RdClk0_R45 ;
  logic [0:0] RdClk0_X45 ;
  logic [0:0] RdClk0_C45 ;
  assign RdClk0_R45 = fangyuan1_R [180:180] ;
  assign RdClk0_X45 = fangyuan1_X [180:180] ;
  assign RdClk0_C45 = fangyuan1_C [180:180] ;
  logic [0:0] RdClk0_R46 ;
  logic [0:0] RdClk0_X46 ;
  logic [0:0] RdClk0_C46 ;
  assign RdClk0_R46 = fangyuan1_R [179:179] ;
  assign RdClk0_X46 = fangyuan1_X [179:179] ;
  assign RdClk0_C46 = fangyuan1_C [179:179] ;
  logic [0:0] RdClk0_R47 ;
  logic [0:0] RdClk0_X47 ;
  logic [0:0] RdClk0_C47 ;
  assign RdClk0_R47 = fangyuan1_R [178:178] ;
  assign RdClk0_X47 = fangyuan1_X [178:178] ;
  assign RdClk0_C47 = fangyuan1_C [178:178] ;
  logic [0:0] RdClk0_R48 ;
  logic [0:0] RdClk0_X48 ;
  logic [0:0] RdClk0_C48 ;
  assign RdClk0_R48 = fangyuan1_R [177:177] ;
  assign RdClk0_X48 = fangyuan1_X [177:177] ;
  assign RdClk0_C48 = fangyuan1_C [177:177] ;
  logic [0:0] RdClk0_R49 ;
  logic [0:0] RdClk0_X49 ;
  logic [0:0] RdClk0_C49 ;
  assign RdClk0_R49 = fangyuan1_R [176:176] ;
  assign RdClk0_X49 = fangyuan1_X [176:176] ;
  assign RdClk0_C49 = fangyuan1_C [176:176] ;
  logic [0:0] RdClk0_R50 ;
  logic [0:0] RdClk0_X50 ;
  logic [0:0] RdClk0_C50 ;
  assign RdClk0_R50 = fangyuan1_R [175:175] ;
  assign RdClk0_X50 = fangyuan1_X [175:175] ;
  assign RdClk0_C50 = fangyuan1_C [175:175] ;
  logic [0:0] RdClk0_R51 ;
  logic [0:0] RdClk0_X51 ;
  logic [0:0] RdClk0_C51 ;
  assign RdClk0_R51 = fangyuan1_R [174:174] ;
  assign RdClk0_X51 = fangyuan1_X [174:174] ;
  assign RdClk0_C51 = fangyuan1_C [174:174] ;
  logic [0:0] RdClk0_R52 ;
  logic [0:0] RdClk0_X52 ;
  logic [0:0] RdClk0_C52 ;
  assign RdClk0_R52 = fangyuan1_R [173:173] ;
  assign RdClk0_X52 = fangyuan1_X [173:173] ;
  assign RdClk0_C52 = fangyuan1_C [173:173] ;
  logic [0:0] RdClk0_R53 ;
  logic [0:0] RdClk0_X53 ;
  logic [0:0] RdClk0_C53 ;
  assign RdClk0_R53 = fangyuan1_R [172:172] ;
  assign RdClk0_X53 = fangyuan1_X [172:172] ;
  assign RdClk0_C53 = fangyuan1_C [172:172] ;
  logic [0:0] RdClk0_R54 ;
  logic [0:0] RdClk0_X54 ;
  logic [0:0] RdClk0_C54 ;
  assign RdClk0_R54 = fangyuan1_R [171:171] ;
  assign RdClk0_X54 = fangyuan1_X [171:171] ;
  assign RdClk0_C54 = fangyuan1_C [171:171] ;
  logic [0:0] RdClk0_R55 ;
  logic [0:0] RdClk0_X55 ;
  logic [0:0] RdClk0_C55 ;
  assign RdClk0_R55 = fangyuan1_R [170:170] ;
  assign RdClk0_X55 = fangyuan1_X [170:170] ;
  assign RdClk0_C55 = fangyuan1_C [170:170] ;
  logic [0:0] RdClk0_R56 ;
  logic [0:0] RdClk0_X56 ;
  logic [0:0] RdClk0_C56 ;
  assign RdClk0_R56 = fangyuan1_R [169:169] ;
  assign RdClk0_X56 = fangyuan1_X [169:169] ;
  assign RdClk0_C56 = fangyuan1_C [169:169] ;
  logic [0:0] RdClk0_R57 ;
  logic [0:0] RdClk0_X57 ;
  logic [0:0] RdClk0_C57 ;
  assign RdClk0_R57 = fangyuan1_R [168:168] ;
  assign RdClk0_X57 = fangyuan1_X [168:168] ;
  assign RdClk0_C57 = fangyuan1_C [168:168] ;
  logic [0:0] RdClk0_R58 ;
  logic [0:0] RdClk0_X58 ;
  logic [0:0] RdClk0_C58 ;
  assign RdClk0_R58 = fangyuan1_R [167:167] ;
  assign RdClk0_X58 = fangyuan1_X [167:167] ;
  assign RdClk0_C58 = fangyuan1_C [167:167] ;
  logic [0:0] RdClk0_R59 ;
  logic [0:0] RdClk0_X59 ;
  logic [0:0] RdClk0_C59 ;
  assign RdClk0_R59 = fangyuan1_R [166:166] ;
  assign RdClk0_X59 = fangyuan1_X [166:166] ;
  assign RdClk0_C59 = fangyuan1_C [166:166] ;
  logic [0:0] RdClk0_R60 ;
  logic [0:0] RdClk0_X60 ;
  logic [0:0] RdClk0_C60 ;
  assign RdClk0_R60 = fangyuan1_R [165:165] ;
  assign RdClk0_X60 = fangyuan1_X [165:165] ;
  assign RdClk0_C60 = fangyuan1_C [165:165] ;
  logic [0:0] RdClk0_R61 ;
  logic [0:0] RdClk0_X61 ;
  logic [0:0] RdClk0_C61 ;
  assign RdClk0_R61 = fangyuan1_R [164:164] ;
  assign RdClk0_X61 = fangyuan1_X [164:164] ;
  assign RdClk0_C61 = fangyuan1_C [164:164] ;
  logic [0:0] RdClk0_R62 ;
  logic [0:0] RdClk0_X62 ;
  logic [0:0] RdClk0_C62 ;
  assign RdClk0_R62 = fangyuan1_R [163:163] ;
  assign RdClk0_X62 = fangyuan1_X [163:163] ;
  assign RdClk0_C62 = fangyuan1_C [163:163] ;
  logic [0:0] RdClk0_R63 ;
  logic [0:0] RdClk0_X63 ;
  logic [0:0] RdClk0_C63 ;
  assign RdClk0_R63 = fangyuan1_R [162:162] ;
  assign RdClk0_X63 = fangyuan1_X [162:162] ;
  assign RdClk0_C63 = fangyuan1_C [162:162] ;
  logic [0:0] RdClk0_R64 ;
  logic [0:0] RdClk0_X64 ;
  logic [0:0] RdClk0_C64 ;
  assign RdClk0_R64 = fangyuan1_R [161:161] ;
  assign RdClk0_X64 = fangyuan1_X [161:161] ;
  assign RdClk0_C64 = fangyuan1_C [161:161] ;
  logic [0:0] RdClk0_R65 ;
  logic [0:0] RdClk0_X65 ;
  logic [0:0] RdClk0_C65 ;
  assign RdClk0_R65 = fangyuan1_R [160:160] ;
  assign RdClk0_X65 = fangyuan1_X [160:160] ;
  assign RdClk0_C65 = fangyuan1_C [160:160] ;
  logic [0:0] RdClk0_R66 ;
  logic [0:0] RdClk0_X66 ;
  logic [0:0] RdClk0_C66 ;
  assign RdClk0_R66 = fangyuan1_R [159:159] ;
  assign RdClk0_X66 = fangyuan1_X [159:159] ;
  assign RdClk0_C66 = fangyuan1_C [159:159] ;
  logic [0:0] RdClk0_R67 ;
  logic [0:0] RdClk0_X67 ;
  logic [0:0] RdClk0_C67 ;
  assign RdClk0_R67 = fangyuan1_R [158:158] ;
  assign RdClk0_X67 = fangyuan1_X [158:158] ;
  assign RdClk0_C67 = fangyuan1_C [158:158] ;
  logic [0:0] RdClk0_R68 ;
  logic [0:0] RdClk0_X68 ;
  logic [0:0] RdClk0_C68 ;
  assign RdClk0_R68 = fangyuan1_R [157:157] ;
  assign RdClk0_X68 = fangyuan1_X [157:157] ;
  assign RdClk0_C68 = fangyuan1_C [157:157] ;
  logic [0:0] RdClk0_R69 ;
  logic [0:0] RdClk0_X69 ;
  logic [0:0] RdClk0_C69 ;
  assign RdClk0_R69 = fangyuan1_R [156:156] ;
  assign RdClk0_X69 = fangyuan1_X [156:156] ;
  assign RdClk0_C69 = fangyuan1_C [156:156] ;
  logic [0:0] RdClk0_R70 ;
  logic [0:0] RdClk0_X70 ;
  logic [0:0] RdClk0_C70 ;
  assign RdClk0_R70 = fangyuan1_R [155:155] ;
  assign RdClk0_X70 = fangyuan1_X [155:155] ;
  assign RdClk0_C70 = fangyuan1_C [155:155] ;
  logic [0:0] RdClk0_R71 ;
  logic [0:0] RdClk0_X71 ;
  logic [0:0] RdClk0_C71 ;
  assign RdClk0_R71 = fangyuan1_R [154:154] ;
  assign RdClk0_X71 = fangyuan1_X [154:154] ;
  assign RdClk0_C71 = fangyuan1_C [154:154] ;
  logic [0:0] RdClk0_R72 ;
  logic [0:0] RdClk0_X72 ;
  logic [0:0] RdClk0_C72 ;
  assign RdClk0_R72 = fangyuan1_R [153:153] ;
  assign RdClk0_X72 = fangyuan1_X [153:153] ;
  assign RdClk0_C72 = fangyuan1_C [153:153] ;
  logic [0:0] RdClk0_R73 ;
  logic [0:0] RdClk0_X73 ;
  logic [0:0] RdClk0_C73 ;
  assign RdClk0_R73 = fangyuan1_R [152:152] ;
  assign RdClk0_X73 = fangyuan1_X [152:152] ;
  assign RdClk0_C73 = fangyuan1_C [152:152] ;
  logic [0:0] RdClk0_R74 ;
  logic [0:0] RdClk0_X74 ;
  logic [0:0] RdClk0_C74 ;
  assign RdClk0_R74 = fangyuan1_R [151:151] ;
  assign RdClk0_X74 = fangyuan1_X [151:151] ;
  assign RdClk0_C74 = fangyuan1_C [151:151] ;
  logic [0:0] RdClk0_R75 ;
  logic [0:0] RdClk0_X75 ;
  logic [0:0] RdClk0_C75 ;
  assign RdClk0_R75 = fangyuan1_R [150:150] ;
  assign RdClk0_X75 = fangyuan1_X [150:150] ;
  assign RdClk0_C75 = fangyuan1_C [150:150] ;
  logic [0:0] RdClk0_R76 ;
  logic [0:0] RdClk0_X76 ;
  logic [0:0] RdClk0_C76 ;
  assign RdClk0_R76 = fangyuan1_R [149:149] ;
  assign RdClk0_X76 = fangyuan1_X [149:149] ;
  assign RdClk0_C76 = fangyuan1_C [149:149] ;
  logic [0:0] RdClk0_R77 ;
  logic [0:0] RdClk0_X77 ;
  logic [0:0] RdClk0_C77 ;
  assign RdClk0_R77 = fangyuan1_R [148:148] ;
  assign RdClk0_X77 = fangyuan1_X [148:148] ;
  assign RdClk0_C77 = fangyuan1_C [148:148] ;
  logic [0:0] RdClk0_R78 ;
  logic [0:0] RdClk0_X78 ;
  logic [0:0] RdClk0_C78 ;
  assign RdClk0_R78 = fangyuan1_R [147:147] ;
  assign RdClk0_X78 = fangyuan1_X [147:147] ;
  assign RdClk0_C78 = fangyuan1_C [147:147] ;
  logic [0:0] RdClk0_R79 ;
  logic [0:0] RdClk0_X79 ;
  logic [0:0] RdClk0_C79 ;
  assign RdClk0_R79 = fangyuan1_R [146:146] ;
  assign RdClk0_X79 = fangyuan1_X [146:146] ;
  assign RdClk0_C79 = fangyuan1_C [146:146] ;
  logic [0:0] RdClk0_R80 ;
  logic [0:0] RdClk0_X80 ;
  logic [0:0] RdClk0_C80 ;
  assign RdClk0_R80 = fangyuan1_R [145:145] ;
  assign RdClk0_X80 = fangyuan1_X [145:145] ;
  assign RdClk0_C80 = fangyuan1_C [145:145] ;
  logic [0:0] RdClk0_R81 ;
  logic [0:0] RdClk0_X81 ;
  logic [0:0] RdClk0_C81 ;
  assign RdClk0_R81 = fangyuan1_R [144:144] ;
  assign RdClk0_X81 = fangyuan1_X [144:144] ;
  assign RdClk0_C81 = fangyuan1_C [144:144] ;
  logic [0:0] RdClk0_R82 ;
  logic [0:0] RdClk0_X82 ;
  logic [0:0] RdClk0_C82 ;
  assign RdClk0_R82 = fangyuan1_R [143:143] ;
  assign RdClk0_X82 = fangyuan1_X [143:143] ;
  assign RdClk0_C82 = fangyuan1_C [143:143] ;
  logic [0:0] RdClk0_R83 ;
  logic [0:0] RdClk0_X83 ;
  logic [0:0] RdClk0_C83 ;
  assign RdClk0_R83 = fangyuan1_R [142:142] ;
  assign RdClk0_X83 = fangyuan1_X [142:142] ;
  assign RdClk0_C83 = fangyuan1_C [142:142] ;
  logic [0:0] RdClk0_R84 ;
  logic [0:0] RdClk0_X84 ;
  logic [0:0] RdClk0_C84 ;
  assign RdClk0_R84 = fangyuan1_R [141:141] ;
  assign RdClk0_X84 = fangyuan1_X [141:141] ;
  assign RdClk0_C84 = fangyuan1_C [141:141] ;
  logic [0:0] RdClk0_R85 ;
  logic [0:0] RdClk0_X85 ;
  logic [0:0] RdClk0_C85 ;
  assign RdClk0_R85 = fangyuan1_R [140:140] ;
  assign RdClk0_X85 = fangyuan1_X [140:140] ;
  assign RdClk0_C85 = fangyuan1_C [140:140] ;
  logic [0:0] RdClk0_R86 ;
  logic [0:0] RdClk0_X86 ;
  logic [0:0] RdClk0_C86 ;
  assign RdClk0_R86 = fangyuan1_R [139:139] ;
  assign RdClk0_X86 = fangyuan1_X [139:139] ;
  assign RdClk0_C86 = fangyuan1_C [139:139] ;
  logic [0:0] RdClk0_R87 ;
  logic [0:0] RdClk0_X87 ;
  logic [0:0] RdClk0_C87 ;
  assign RdClk0_R87 = fangyuan1_R [138:138] ;
  assign RdClk0_X87 = fangyuan1_X [138:138] ;
  assign RdClk0_C87 = fangyuan1_C [138:138] ;
  logic [0:0] RdClk0_R88 ;
  logic [0:0] RdClk0_X88 ;
  logic [0:0] RdClk0_C88 ;
  assign RdClk0_R88 = fangyuan1_R [137:137] ;
  assign RdClk0_X88 = fangyuan1_X [137:137] ;
  assign RdClk0_C88 = fangyuan1_C [137:137] ;
  logic [0:0] RdClk0_R89 ;
  logic [0:0] RdClk0_X89 ;
  logic [0:0] RdClk0_C89 ;
  assign RdClk0_R89 = fangyuan1_R [136:136] ;
  assign RdClk0_X89 = fangyuan1_X [136:136] ;
  assign RdClk0_C89 = fangyuan1_C [136:136] ;
  logic [0:0] RdClk0_R90 ;
  logic [0:0] RdClk0_X90 ;
  logic [0:0] RdClk0_C90 ;
  assign RdClk0_R90 = fangyuan1_R [135:135] ;
  assign RdClk0_X90 = fangyuan1_X [135:135] ;
  assign RdClk0_C90 = fangyuan1_C [135:135] ;
  logic [0:0] RdClk0_R91 ;
  logic [0:0] RdClk0_X91 ;
  logic [0:0] RdClk0_C91 ;
  assign RdClk0_R91 = fangyuan1_R [134:134] ;
  assign RdClk0_X91 = fangyuan1_X [134:134] ;
  assign RdClk0_C91 = fangyuan1_C [134:134] ;
  logic [0:0] RdClk0_R92 ;
  logic [0:0] RdClk0_X92 ;
  logic [0:0] RdClk0_C92 ;
  assign RdClk0_R92 = fangyuan1_R [133:133] ;
  assign RdClk0_X92 = fangyuan1_X [133:133] ;
  assign RdClk0_C92 = fangyuan1_C [133:133] ;
  logic [0:0] RdClk0_R93 ;
  logic [0:0] RdClk0_X93 ;
  logic [0:0] RdClk0_C93 ;
  assign RdClk0_R93 = fangyuan1_R [132:132] ;
  assign RdClk0_X93 = fangyuan1_X [132:132] ;
  assign RdClk0_C93 = fangyuan1_C [132:132] ;
  logic [0:0] RdClk0_R94 ;
  logic [0:0] RdClk0_X94 ;
  logic [0:0] RdClk0_C94 ;
  assign RdClk0_R94 = fangyuan1_R [131:131] ;
  assign RdClk0_X94 = fangyuan1_X [131:131] ;
  assign RdClk0_C94 = fangyuan1_C [131:131] ;
  logic [0:0] RdClk0_R95 ;
  logic [0:0] RdClk0_X95 ;
  logic [0:0] RdClk0_C95 ;
  assign RdClk0_R95 = fangyuan1_R [130:130] ;
  assign RdClk0_X95 = fangyuan1_X [130:130] ;
  assign RdClk0_C95 = fangyuan1_C [130:130] ;
  logic [0:0] RdClk0_R96 ;
  logic [0:0] RdClk0_X96 ;
  logic [0:0] RdClk0_C96 ;
  assign RdClk0_R96 = fangyuan1_R [129:129] ;
  assign RdClk0_X96 = fangyuan1_X [129:129] ;
  assign RdClk0_C96 = fangyuan1_C [129:129] ;
  logic [0:0] RdClk0_R97 ;
  logic [0:0] RdClk0_X97 ;
  logic [0:0] RdClk0_C97 ;
  assign RdClk0_R97 = fangyuan1_R [128:128] ;
  assign RdClk0_X97 = fangyuan1_X [128:128] ;
  assign RdClk0_C97 = fangyuan1_C [128:128] ;
  logic [0:0] RdClk0_R98 ;
  logic [0:0] RdClk0_X98 ;
  logic [0:0] RdClk0_C98 ;
  assign RdClk0_R98 = fangyuan1_R [127:127] ;
  assign RdClk0_X98 = fangyuan1_X [127:127] ;
  assign RdClk0_C98 = fangyuan1_C [127:127] ;
  logic [0:0] RdClk0_R99 ;
  logic [0:0] RdClk0_X99 ;
  logic [0:0] RdClk0_C99 ;
  assign RdClk0_R99 = fangyuan1_R [126:126] ;
  assign RdClk0_X99 = fangyuan1_X [126:126] ;
  assign RdClk0_C99 = fangyuan1_C [126:126] ;
  logic [0:0] RdClk0_R100 ;
  logic [0:0] RdClk0_X100 ;
  logic [0:0] RdClk0_C100 ;
  assign RdClk0_R100 = fangyuan1_R [125:125] ;
  assign RdClk0_X100 = fangyuan1_X [125:125] ;
  assign RdClk0_C100 = fangyuan1_C [125:125] ;
  logic [0:0] RdClk0_R101 ;
  logic [0:0] RdClk0_X101 ;
  logic [0:0] RdClk0_C101 ;
  assign RdClk0_R101 = fangyuan1_R [124:124] ;
  assign RdClk0_X101 = fangyuan1_X [124:124] ;
  assign RdClk0_C101 = fangyuan1_C [124:124] ;
  logic [0:0] RdClk0_R102 ;
  logic [0:0] RdClk0_X102 ;
  logic [0:0] RdClk0_C102 ;
  assign RdClk0_R102 = fangyuan1_R [123:123] ;
  assign RdClk0_X102 = fangyuan1_X [123:123] ;
  assign RdClk0_C102 = fangyuan1_C [123:123] ;
  logic [0:0] RdClk0_R103 ;
  logic [0:0] RdClk0_X103 ;
  logic [0:0] RdClk0_C103 ;
  assign RdClk0_R103 = fangyuan1_R [122:122] ;
  assign RdClk0_X103 = fangyuan1_X [122:122] ;
  assign RdClk0_C103 = fangyuan1_C [122:122] ;
  logic [0:0] RdClk0_R104 ;
  logic [0:0] RdClk0_X104 ;
  logic [0:0] RdClk0_C104 ;
  assign RdClk0_R104 = fangyuan1_R [121:121] ;
  assign RdClk0_X104 = fangyuan1_X [121:121] ;
  assign RdClk0_C104 = fangyuan1_C [121:121] ;
  logic [0:0] RdClk0_R105 ;
  logic [0:0] RdClk0_X105 ;
  logic [0:0] RdClk0_C105 ;
  assign RdClk0_R105 = fangyuan1_R [120:120] ;
  assign RdClk0_X105 = fangyuan1_X [120:120] ;
  assign RdClk0_C105 = fangyuan1_C [120:120] ;
  logic [0:0] RdClk0_R106 ;
  logic [0:0] RdClk0_X106 ;
  logic [0:0] RdClk0_C106 ;
  assign RdClk0_R106 = fangyuan1_R [119:119] ;
  assign RdClk0_X106 = fangyuan1_X [119:119] ;
  assign RdClk0_C106 = fangyuan1_C [119:119] ;
  logic [0:0] RdClk0_R107 ;
  logic [0:0] RdClk0_X107 ;
  logic [0:0] RdClk0_C107 ;
  assign RdClk0_R107 = fangyuan1_R [118:118] ;
  assign RdClk0_X107 = fangyuan1_X [118:118] ;
  assign RdClk0_C107 = fangyuan1_C [118:118] ;
  logic [0:0] RdClk0_R108 ;
  logic [0:0] RdClk0_X108 ;
  logic [0:0] RdClk0_C108 ;
  assign RdClk0_R108 = fangyuan1_R [117:117] ;
  assign RdClk0_X108 = fangyuan1_X [117:117] ;
  assign RdClk0_C108 = fangyuan1_C [117:117] ;
  logic [0:0] RdClk0_R109 ;
  logic [0:0] RdClk0_X109 ;
  logic [0:0] RdClk0_C109 ;
  assign RdClk0_R109 = fangyuan1_R [116:116] ;
  assign RdClk0_X109 = fangyuan1_X [116:116] ;
  assign RdClk0_C109 = fangyuan1_C [116:116] ;
  logic [0:0] RdClk0_R110 ;
  logic [0:0] RdClk0_X110 ;
  logic [0:0] RdClk0_C110 ;
  assign RdClk0_R110 = fangyuan1_R [115:115] ;
  assign RdClk0_X110 = fangyuan1_X [115:115] ;
  assign RdClk0_C110 = fangyuan1_C [115:115] ;
  logic [0:0] RdClk0_R111 ;
  logic [0:0] RdClk0_X111 ;
  logic [0:0] RdClk0_C111 ;
  assign RdClk0_R111 = fangyuan1_R [114:114] ;
  assign RdClk0_X111 = fangyuan1_X [114:114] ;
  assign RdClk0_C111 = fangyuan1_C [114:114] ;
  logic [0:0] RdClk0_R112 ;
  logic [0:0] RdClk0_X112 ;
  logic [0:0] RdClk0_C112 ;
  assign RdClk0_R112 = fangyuan1_R [113:113] ;
  assign RdClk0_X112 = fangyuan1_X [113:113] ;
  assign RdClk0_C112 = fangyuan1_C [113:113] ;
  logic [0:0] RdClk0_R113 ;
  logic [0:0] RdClk0_X113 ;
  logic [0:0] RdClk0_C113 ;
  assign RdClk0_R113 = fangyuan1_R [112:112] ;
  assign RdClk0_X113 = fangyuan1_X [112:112] ;
  assign RdClk0_C113 = fangyuan1_C [112:112] ;
  logic [0:0] RdClk0_R114 ;
  logic [0:0] RdClk0_X114 ;
  logic [0:0] RdClk0_C114 ;
  assign RdClk0_R114 = fangyuan1_R [111:111] ;
  assign RdClk0_X114 = fangyuan1_X [111:111] ;
  assign RdClk0_C114 = fangyuan1_C [111:111] ;
  logic [0:0] RdClk0_R115 ;
  logic [0:0] RdClk0_X115 ;
  logic [0:0] RdClk0_C115 ;
  assign RdClk0_R115 = fangyuan1_R [110:110] ;
  assign RdClk0_X115 = fangyuan1_X [110:110] ;
  assign RdClk0_C115 = fangyuan1_C [110:110] ;
  logic [0:0] RdClk0_R116 ;
  logic [0:0] RdClk0_X116 ;
  logic [0:0] RdClk0_C116 ;
  assign RdClk0_R116 = fangyuan1_R [109:109] ;
  assign RdClk0_X116 = fangyuan1_X [109:109] ;
  assign RdClk0_C116 = fangyuan1_C [109:109] ;
  logic [0:0] RdClk0_R117 ;
  logic [0:0] RdClk0_X117 ;
  logic [0:0] RdClk0_C117 ;
  assign RdClk0_R117 = fangyuan1_R [108:108] ;
  assign RdClk0_X117 = fangyuan1_X [108:108] ;
  assign RdClk0_C117 = fangyuan1_C [108:108] ;
  logic [0:0] RdClk0_R118 ;
  logic [0:0] RdClk0_X118 ;
  logic [0:0] RdClk0_C118 ;
  assign RdClk0_R118 = fangyuan1_R [107:107] ;
  assign RdClk0_X118 = fangyuan1_X [107:107] ;
  assign RdClk0_C118 = fangyuan1_C [107:107] ;
  logic [0:0] RdClk0_R119 ;
  logic [0:0] RdClk0_X119 ;
  logic [0:0] RdClk0_C119 ;
  assign RdClk0_R119 = fangyuan1_R [106:106] ;
  assign RdClk0_X119 = fangyuan1_X [106:106] ;
  assign RdClk0_C119 = fangyuan1_C [106:106] ;
  logic [0:0] RdClk0_R120 ;
  logic [0:0] RdClk0_X120 ;
  logic [0:0] RdClk0_C120 ;
  assign RdClk0_R120 = fangyuan1_R [105:105] ;
  assign RdClk0_X120 = fangyuan1_X [105:105] ;
  assign RdClk0_C120 = fangyuan1_C [105:105] ;
  logic [0:0] RdClk0_R121 ;
  logic [0:0] RdClk0_X121 ;
  logic [0:0] RdClk0_C121 ;
  assign RdClk0_R121 = fangyuan1_R [104:104] ;
  assign RdClk0_X121 = fangyuan1_X [104:104] ;
  assign RdClk0_C121 = fangyuan1_C [104:104] ;
  logic [0:0] RdClk0_R122 ;
  logic [0:0] RdClk0_X122 ;
  logic [0:0] RdClk0_C122 ;
  assign RdClk0_R122 = fangyuan1_R [103:103] ;
  assign RdClk0_X122 = fangyuan1_X [103:103] ;
  assign RdClk0_C122 = fangyuan1_C [103:103] ;
  logic [0:0] RdClk0_R123 ;
  logic [0:0] RdClk0_X123 ;
  logic [0:0] RdClk0_C123 ;
  assign RdClk0_R123 = fangyuan1_R [102:102] ;
  assign RdClk0_X123 = fangyuan1_X [102:102] ;
  assign RdClk0_C123 = fangyuan1_C [102:102] ;
  logic [0:0] RdClk0_R124 ;
  logic [0:0] RdClk0_X124 ;
  logic [0:0] RdClk0_C124 ;
  assign RdClk0_R124 = fangyuan1_R [101:101] ;
  assign RdClk0_X124 = fangyuan1_X [101:101] ;
  assign RdClk0_C124 = fangyuan1_C [101:101] ;
  logic [0:0] RdClk0_R125 ;
  logic [0:0] RdClk0_X125 ;
  logic [0:0] RdClk0_C125 ;
  assign RdClk0_R125 = fangyuan1_R [100:100] ;
  assign RdClk0_X125 = fangyuan1_X [100:100] ;
  assign RdClk0_C125 = fangyuan1_C [100:100] ;
  logic [0:0] RdClk0_R126 ;
  logic [0:0] RdClk0_X126 ;
  logic [0:0] RdClk0_C126 ;
  assign RdClk0_R126 = fangyuan1_R [99:99] ;
  assign RdClk0_X126 = fangyuan1_X [99:99] ;
  assign RdClk0_C126 = fangyuan1_C [99:99] ;
  logic [0:0] RdClk0_R127 ;
  logic [0:0] RdClk0_X127 ;
  logic [0:0] RdClk0_C127 ;
  assign RdClk0_R127 = fangyuan1_R [98:98] ;
  assign RdClk0_X127 = fangyuan1_X [98:98] ;
  assign RdClk0_C127 = fangyuan1_C [98:98] ;
  logic [0:0] RdClk0_R128 ;
  logic [0:0] RdClk0_X128 ;
  logic [0:0] RdClk0_C128 ;
  assign RdClk0_R128 = fangyuan1_R [97:97] ;
  assign RdClk0_X128 = fangyuan1_X [97:97] ;
  assign RdClk0_C128 = fangyuan1_C [97:97] ;
  logic [0:0] RdClk0_R129 ;
  logic [0:0] RdClk0_X129 ;
  logic [0:0] RdClk0_C129 ;
  assign RdClk0_R129 = fangyuan1_R [96:96] ;
  assign RdClk0_X129 = fangyuan1_X [96:96] ;
  assign RdClk0_C129 = fangyuan1_C [96:96] ;
  logic [0:0] RdClk0_R130 ;
  logic [0:0] RdClk0_X130 ;
  logic [0:0] RdClk0_C130 ;
  assign RdClk0_R130 = fangyuan1_R [95:95] ;
  assign RdClk0_X130 = fangyuan1_X [95:95] ;
  assign RdClk0_C130 = fangyuan1_C [95:95] ;
  logic [0:0] RdClk0_R131 ;
  logic [0:0] RdClk0_X131 ;
  logic [0:0] RdClk0_C131 ;
  assign RdClk0_R131 = fangyuan1_R [94:94] ;
  assign RdClk0_X131 = fangyuan1_X [94:94] ;
  assign RdClk0_C131 = fangyuan1_C [94:94] ;
  logic [0:0] RdClk0_R132 ;
  logic [0:0] RdClk0_X132 ;
  logic [0:0] RdClk0_C132 ;
  assign RdClk0_R132 = fangyuan1_R [93:93] ;
  assign RdClk0_X132 = fangyuan1_X [93:93] ;
  assign RdClk0_C132 = fangyuan1_C [93:93] ;
  logic [0:0] RdClk0_R133 ;
  logic [0:0] RdClk0_X133 ;
  logic [0:0] RdClk0_C133 ;
  assign RdClk0_R133 = fangyuan1_R [92:92] ;
  assign RdClk0_X133 = fangyuan1_X [92:92] ;
  assign RdClk0_C133 = fangyuan1_C [92:92] ;
  logic [0:0] RdClk0_R134 ;
  logic [0:0] RdClk0_X134 ;
  logic [0:0] RdClk0_C134 ;
  assign RdClk0_R134 = fangyuan1_R [91:91] ;
  assign RdClk0_X134 = fangyuan1_X [91:91] ;
  assign RdClk0_C134 = fangyuan1_C [91:91] ;
  logic [0:0] RdClk0_R135 ;
  logic [0:0] RdClk0_X135 ;
  logic [0:0] RdClk0_C135 ;
  assign RdClk0_R135 = fangyuan1_R [90:90] ;
  assign RdClk0_X135 = fangyuan1_X [90:90] ;
  assign RdClk0_C135 = fangyuan1_C [90:90] ;
  logic [0:0] RdClk0_R136 ;
  logic [0:0] RdClk0_X136 ;
  logic [0:0] RdClk0_C136 ;
  assign RdClk0_R136 = fangyuan1_R [89:89] ;
  assign RdClk0_X136 = fangyuan1_X [89:89] ;
  assign RdClk0_C136 = fangyuan1_C [89:89] ;
  logic [0:0] RdClk0_R137 ;
  logic [0:0] RdClk0_X137 ;
  logic [0:0] RdClk0_C137 ;
  assign RdClk0_R137 = fangyuan1_R [88:88] ;
  assign RdClk0_X137 = fangyuan1_X [88:88] ;
  assign RdClk0_C137 = fangyuan1_C [88:88] ;
  logic [0:0] RdClk0_R138 ;
  logic [0:0] RdClk0_X138 ;
  logic [0:0] RdClk0_C138 ;
  assign RdClk0_R138 = fangyuan1_R [87:87] ;
  assign RdClk0_X138 = fangyuan1_X [87:87] ;
  assign RdClk0_C138 = fangyuan1_C [87:87] ;
  logic [0:0] RdClk0_R139 ;
  logic [0:0] RdClk0_X139 ;
  logic [0:0] RdClk0_C139 ;
  assign RdClk0_R139 = fangyuan1_R [86:86] ;
  assign RdClk0_X139 = fangyuan1_X [86:86] ;
  assign RdClk0_C139 = fangyuan1_C [86:86] ;
  logic [0:0] RdClk0_R140 ;
  logic [0:0] RdClk0_X140 ;
  logic [0:0] RdClk0_C140 ;
  assign RdClk0_R140 = fangyuan1_R [85:85] ;
  assign RdClk0_X140 = fangyuan1_X [85:85] ;
  assign RdClk0_C140 = fangyuan1_C [85:85] ;
  logic [0:0] RdClk0_R141 ;
  logic [0:0] RdClk0_X141 ;
  logic [0:0] RdClk0_C141 ;
  assign RdClk0_R141 = fangyuan1_R [84:84] ;
  assign RdClk0_X141 = fangyuan1_X [84:84] ;
  assign RdClk0_C141 = fangyuan1_C [84:84] ;
  logic [0:0] RdClk0_R142 ;
  logic [0:0] RdClk0_X142 ;
  logic [0:0] RdClk0_C142 ;
  assign RdClk0_R142 = fangyuan1_R [83:83] ;
  assign RdClk0_X142 = fangyuan1_X [83:83] ;
  assign RdClk0_C142 = fangyuan1_C [83:83] ;
  logic [0:0] RdClk0_R143 ;
  logic [0:0] RdClk0_X143 ;
  logic [0:0] RdClk0_C143 ;
  assign RdClk0_R143 = fangyuan1_R [82:82] ;
  assign RdClk0_X143 = fangyuan1_X [82:82] ;
  assign RdClk0_C143 = fangyuan1_C [82:82] ;
  logic [0:0] RdClk0_R144 ;
  logic [0:0] RdClk0_X144 ;
  logic [0:0] RdClk0_C144 ;
  assign RdClk0_R144 = fangyuan1_R [81:81] ;
  assign RdClk0_X144 = fangyuan1_X [81:81] ;
  assign RdClk0_C144 = fangyuan1_C [81:81] ;
  logic [0:0] RdClk0_R145 ;
  logic [0:0] RdClk0_X145 ;
  logic [0:0] RdClk0_C145 ;
  assign RdClk0_R145 = fangyuan1_R [80:80] ;
  assign RdClk0_X145 = fangyuan1_X [80:80] ;
  assign RdClk0_C145 = fangyuan1_C [80:80] ;
  logic [0:0] RdClk0_R146 ;
  logic [0:0] RdClk0_X146 ;
  logic [0:0] RdClk0_C146 ;
  assign RdClk0_R146 = fangyuan1_R [79:79] ;
  assign RdClk0_X146 = fangyuan1_X [79:79] ;
  assign RdClk0_C146 = fangyuan1_C [79:79] ;
  logic [0:0] RdClk0_R147 ;
  logic [0:0] RdClk0_X147 ;
  logic [0:0] RdClk0_C147 ;
  assign RdClk0_R147 = fangyuan1_R [78:78] ;
  assign RdClk0_X147 = fangyuan1_X [78:78] ;
  assign RdClk0_C147 = fangyuan1_C [78:78] ;
  logic [0:0] RdClk0_R148 ;
  logic [0:0] RdClk0_X148 ;
  logic [0:0] RdClk0_C148 ;
  assign RdClk0_R148 = fangyuan1_R [77:77] ;
  assign RdClk0_X148 = fangyuan1_X [77:77] ;
  assign RdClk0_C148 = fangyuan1_C [77:77] ;
  logic [0:0] RdClk0_R149 ;
  logic [0:0] RdClk0_X149 ;
  logic [0:0] RdClk0_C149 ;
  assign RdClk0_R149 = fangyuan1_R [76:76] ;
  assign RdClk0_X149 = fangyuan1_X [76:76] ;
  assign RdClk0_C149 = fangyuan1_C [76:76] ;
  logic [0:0] RdClk0_R150 ;
  logic [0:0] RdClk0_X150 ;
  logic [0:0] RdClk0_C150 ;
  assign RdClk0_R150 = fangyuan1_R [75:75] ;
  assign RdClk0_X150 = fangyuan1_X [75:75] ;
  assign RdClk0_C150 = fangyuan1_C [75:75] ;
  logic [0:0] RdClk0_R151 ;
  logic [0:0] RdClk0_X151 ;
  logic [0:0] RdClk0_C151 ;
  assign RdClk0_R151 = fangyuan1_R [74:74] ;
  assign RdClk0_X151 = fangyuan1_X [74:74] ;
  assign RdClk0_C151 = fangyuan1_C [74:74] ;
  logic [0:0] RdClk0_R152 ;
  logic [0:0] RdClk0_X152 ;
  logic [0:0] RdClk0_C152 ;
  assign RdClk0_R152 = fangyuan1_R [73:73] ;
  assign RdClk0_X152 = fangyuan1_X [73:73] ;
  assign RdClk0_C152 = fangyuan1_C [73:73] ;
  logic [0:0] RdClk0_R153 ;
  logic [0:0] RdClk0_X153 ;
  logic [0:0] RdClk0_C153 ;
  assign RdClk0_R153 = fangyuan1_R [72:72] ;
  assign RdClk0_X153 = fangyuan1_X [72:72] ;
  assign RdClk0_C153 = fangyuan1_C [72:72] ;
  logic [0:0] RdClk0_R154 ;
  logic [0:0] RdClk0_X154 ;
  logic [0:0] RdClk0_C154 ;
  assign RdClk0_R154 = fangyuan1_R [71:71] ;
  assign RdClk0_X154 = fangyuan1_X [71:71] ;
  assign RdClk0_C154 = fangyuan1_C [71:71] ;
  logic [0:0] RdClk0_R155 ;
  logic [0:0] RdClk0_X155 ;
  logic [0:0] RdClk0_C155 ;
  assign RdClk0_R155 = fangyuan1_R [70:70] ;
  assign RdClk0_X155 = fangyuan1_X [70:70] ;
  assign RdClk0_C155 = fangyuan1_C [70:70] ;
  logic [0:0] RdClk0_R156 ;
  logic [0:0] RdClk0_X156 ;
  logic [0:0] RdClk0_C156 ;
  assign RdClk0_R156 = fangyuan1_R [69:69] ;
  assign RdClk0_X156 = fangyuan1_X [69:69] ;
  assign RdClk0_C156 = fangyuan1_C [69:69] ;
  logic [0:0] RdClk0_R157 ;
  logic [0:0] RdClk0_X157 ;
  logic [0:0] RdClk0_C157 ;
  assign RdClk0_R157 = fangyuan1_R [68:68] ;
  assign RdClk0_X157 = fangyuan1_X [68:68] ;
  assign RdClk0_C157 = fangyuan1_C [68:68] ;
  logic [0:0] RdClk0_R158 ;
  logic [0:0] RdClk0_X158 ;
  logic [0:0] RdClk0_C158 ;
  assign RdClk0_R158 = fangyuan1_R [67:67] ;
  assign RdClk0_X158 = fangyuan1_X [67:67] ;
  assign RdClk0_C158 = fangyuan1_C [67:67] ;
  logic [0:0] RdClk0_R159 ;
  logic [0:0] RdClk0_X159 ;
  logic [0:0] RdClk0_C159 ;
  assign RdClk0_R159 = fangyuan1_R [66:66] ;
  assign RdClk0_X159 = fangyuan1_X [66:66] ;
  assign RdClk0_C159 = fangyuan1_C [66:66] ;
  logic [0:0] RdClk0_R160 ;
  logic [0:0] RdClk0_X160 ;
  logic [0:0] RdClk0_C160 ;
  assign RdClk0_R160 = fangyuan1_R [65:65] ;
  assign RdClk0_X160 = fangyuan1_X [65:65] ;
  assign RdClk0_C160 = fangyuan1_C [65:65] ;
  logic [0:0] RdClk0_R161 ;
  logic [0:0] RdClk0_X161 ;
  logic [0:0] RdClk0_C161 ;
  assign RdClk0_R161 = fangyuan1_R [64:64] ;
  assign RdClk0_X161 = fangyuan1_X [64:64] ;
  assign RdClk0_C161 = fangyuan1_C [64:64] ;
  logic [0:0] RdClk0_R162 ;
  logic [0:0] RdClk0_X162 ;
  logic [0:0] RdClk0_C162 ;
  assign RdClk0_R162 = fangyuan1_R [63:63] ;
  assign RdClk0_X162 = fangyuan1_X [63:63] ;
  assign RdClk0_C162 = fangyuan1_C [63:63] ;
  logic [0:0] RdClk0_R163 ;
  logic [0:0] RdClk0_X163 ;
  logic [0:0] RdClk0_C163 ;
  assign RdClk0_R163 = fangyuan1_R [62:62] ;
  assign RdClk0_X163 = fangyuan1_X [62:62] ;
  assign RdClk0_C163 = fangyuan1_C [62:62] ;
  logic [0:0] RdClk0_R164 ;
  logic [0:0] RdClk0_X164 ;
  logic [0:0] RdClk0_C164 ;
  assign RdClk0_R164 = fangyuan1_R [61:61] ;
  assign RdClk0_X164 = fangyuan1_X [61:61] ;
  assign RdClk0_C164 = fangyuan1_C [61:61] ;
  logic [0:0] RdClk0_R165 ;
  logic [0:0] RdClk0_X165 ;
  logic [0:0] RdClk0_C165 ;
  assign RdClk0_R165 = fangyuan1_R [60:60] ;
  assign RdClk0_X165 = fangyuan1_X [60:60] ;
  assign RdClk0_C165 = fangyuan1_C [60:60] ;
  logic [0:0] RdClk0_R166 ;
  logic [0:0] RdClk0_X166 ;
  logic [0:0] RdClk0_C166 ;
  assign RdClk0_R166 = fangyuan1_R [59:59] ;
  assign RdClk0_X166 = fangyuan1_X [59:59] ;
  assign RdClk0_C166 = fangyuan1_C [59:59] ;
  logic [0:0] RdClk0_R167 ;
  logic [0:0] RdClk0_X167 ;
  logic [0:0] RdClk0_C167 ;
  assign RdClk0_R167 = fangyuan1_R [58:58] ;
  assign RdClk0_X167 = fangyuan1_X [58:58] ;
  assign RdClk0_C167 = fangyuan1_C [58:58] ;
  logic [0:0] RdClk0_R168 ;
  logic [0:0] RdClk0_X168 ;
  logic [0:0] RdClk0_C168 ;
  assign RdClk0_R168 = fangyuan1_R [57:57] ;
  assign RdClk0_X168 = fangyuan1_X [57:57] ;
  assign RdClk0_C168 = fangyuan1_C [57:57] ;
  logic [0:0] RdClk0_R169 ;
  logic [0:0] RdClk0_X169 ;
  logic [0:0] RdClk0_C169 ;
  assign RdClk0_R169 = fangyuan1_R [56:56] ;
  assign RdClk0_X169 = fangyuan1_X [56:56] ;
  assign RdClk0_C169 = fangyuan1_C [56:56] ;
  logic [0:0] RdClk0_R170 ;
  logic [0:0] RdClk0_X170 ;
  logic [0:0] RdClk0_C170 ;
  assign RdClk0_R170 = fangyuan1_R [55:55] ;
  assign RdClk0_X170 = fangyuan1_X [55:55] ;
  assign RdClk0_C170 = fangyuan1_C [55:55] ;
  logic [0:0] RdClk0_R171 ;
  logic [0:0] RdClk0_X171 ;
  logic [0:0] RdClk0_C171 ;
  assign RdClk0_R171 = fangyuan1_R [54:54] ;
  assign RdClk0_X171 = fangyuan1_X [54:54] ;
  assign RdClk0_C171 = fangyuan1_C [54:54] ;
  logic [0:0] RdClk0_R172 ;
  logic [0:0] RdClk0_X172 ;
  logic [0:0] RdClk0_C172 ;
  assign RdClk0_R172 = fangyuan1_R [53:53] ;
  assign RdClk0_X172 = fangyuan1_X [53:53] ;
  assign RdClk0_C172 = fangyuan1_C [53:53] ;
  logic [0:0] RdClk0_R173 ;
  logic [0:0] RdClk0_X173 ;
  logic [0:0] RdClk0_C173 ;
  assign RdClk0_R173 = fangyuan1_R [52:52] ;
  assign RdClk0_X173 = fangyuan1_X [52:52] ;
  assign RdClk0_C173 = fangyuan1_C [52:52] ;
  logic [0:0] RdClk0_R174 ;
  logic [0:0] RdClk0_X174 ;
  logic [0:0] RdClk0_C174 ;
  assign RdClk0_R174 = fangyuan1_R [51:51] ;
  assign RdClk0_X174 = fangyuan1_X [51:51] ;
  assign RdClk0_C174 = fangyuan1_C [51:51] ;
  logic [0:0] RdClk0_R175 ;
  logic [0:0] RdClk0_X175 ;
  logic [0:0] RdClk0_C175 ;
  assign RdClk0_R175 = fangyuan1_R [50:50] ;
  assign RdClk0_X175 = fangyuan1_X [50:50] ;
  assign RdClk0_C175 = fangyuan1_C [50:50] ;
  logic [0:0] RdClk0_R176 ;
  logic [0:0] RdClk0_X176 ;
  logic [0:0] RdClk0_C176 ;
  assign RdClk0_R176 = fangyuan1_R [49:49] ;
  assign RdClk0_X176 = fangyuan1_X [49:49] ;
  assign RdClk0_C176 = fangyuan1_C [49:49] ;
  logic [0:0] RdClk0_R177 ;
  logic [0:0] RdClk0_X177 ;
  logic [0:0] RdClk0_C177 ;
  assign RdClk0_R177 = fangyuan1_R [48:48] ;
  assign RdClk0_X177 = fangyuan1_X [48:48] ;
  assign RdClk0_C177 = fangyuan1_C [48:48] ;
  logic [0:0] RdClk0_R178 ;
  logic [0:0] RdClk0_X178 ;
  logic [0:0] RdClk0_C178 ;
  assign RdClk0_R178 = fangyuan1_R [47:47] ;
  assign RdClk0_X178 = fangyuan1_X [47:47] ;
  assign RdClk0_C178 = fangyuan1_C [47:47] ;
  logic [0:0] RdClk0_R179 ;
  logic [0:0] RdClk0_X179 ;
  logic [0:0] RdClk0_C179 ;
  assign RdClk0_R179 = fangyuan1_R [46:46] ;
  assign RdClk0_X179 = fangyuan1_X [46:46] ;
  assign RdClk0_C179 = fangyuan1_C [46:46] ;
  logic [0:0] RdClk0_R180 ;
  logic [0:0] RdClk0_X180 ;
  logic [0:0] RdClk0_C180 ;
  assign RdClk0_R180 = fangyuan1_R [45:45] ;
  assign RdClk0_X180 = fangyuan1_X [45:45] ;
  assign RdClk0_C180 = fangyuan1_C [45:45] ;
  logic [0:0] RdClk0_R181 ;
  logic [0:0] RdClk0_X181 ;
  logic [0:0] RdClk0_C181 ;
  assign RdClk0_R181 = fangyuan1_R [44:44] ;
  assign RdClk0_X181 = fangyuan1_X [44:44] ;
  assign RdClk0_C181 = fangyuan1_C [44:44] ;
  logic [0:0] RdClk0_R182 ;
  logic [0:0] RdClk0_X182 ;
  logic [0:0] RdClk0_C182 ;
  assign RdClk0_R182 = fangyuan1_R [43:43] ;
  assign RdClk0_X182 = fangyuan1_X [43:43] ;
  assign RdClk0_C182 = fangyuan1_C [43:43] ;
  logic [0:0] RdClk0_R183 ;
  logic [0:0] RdClk0_X183 ;
  logic [0:0] RdClk0_C183 ;
  assign RdClk0_R183 = fangyuan1_R [42:42] ;
  assign RdClk0_X183 = fangyuan1_X [42:42] ;
  assign RdClk0_C183 = fangyuan1_C [42:42] ;
  logic [0:0] RdClk0_R184 ;
  logic [0:0] RdClk0_X184 ;
  logic [0:0] RdClk0_C184 ;
  assign RdClk0_R184 = fangyuan1_R [41:41] ;
  assign RdClk0_X184 = fangyuan1_X [41:41] ;
  assign RdClk0_C184 = fangyuan1_C [41:41] ;
  logic [0:0] RdClk0_R185 ;
  logic [0:0] RdClk0_X185 ;
  logic [0:0] RdClk0_C185 ;
  assign RdClk0_R185 = fangyuan1_R [40:40] ;
  assign RdClk0_X185 = fangyuan1_X [40:40] ;
  assign RdClk0_C185 = fangyuan1_C [40:40] ;
  logic [0:0] RdClk0_R186 ;
  logic [0:0] RdClk0_X186 ;
  logic [0:0] RdClk0_C186 ;
  assign RdClk0_R186 = fangyuan1_R [39:39] ;
  assign RdClk0_X186 = fangyuan1_X [39:39] ;
  assign RdClk0_C186 = fangyuan1_C [39:39] ;
  logic [0:0] RdClk0_R187 ;
  logic [0:0] RdClk0_X187 ;
  logic [0:0] RdClk0_C187 ;
  assign RdClk0_R187 = fangyuan1_R [38:38] ;
  assign RdClk0_X187 = fangyuan1_X [38:38] ;
  assign RdClk0_C187 = fangyuan1_C [38:38] ;
  logic [0:0] RdClk0_R188 ;
  logic [0:0] RdClk0_X188 ;
  logic [0:0] RdClk0_C188 ;
  assign RdClk0_R188 = fangyuan1_R [37:37] ;
  assign RdClk0_X188 = fangyuan1_X [37:37] ;
  assign RdClk0_C188 = fangyuan1_C [37:37] ;
  logic [0:0] RdClk0_R189 ;
  logic [0:0] RdClk0_X189 ;
  logic [0:0] RdClk0_C189 ;
  assign RdClk0_R189 = fangyuan1_R [36:36] ;
  assign RdClk0_X189 = fangyuan1_X [36:36] ;
  assign RdClk0_C189 = fangyuan1_C [36:36] ;
  logic [0:0] RdClk0_R190 ;
  logic [0:0] RdClk0_X190 ;
  logic [0:0] RdClk0_C190 ;
  assign RdClk0_R190 = fangyuan1_R [35:35] ;
  assign RdClk0_X190 = fangyuan1_X [35:35] ;
  assign RdClk0_C190 = fangyuan1_C [35:35] ;
  logic [0:0] RdClk0_R191 ;
  logic [0:0] RdClk0_X191 ;
  logic [0:0] RdClk0_C191 ;
  assign RdClk0_R191 = fangyuan1_R [34:34] ;
  assign RdClk0_X191 = fangyuan1_X [34:34] ;
  assign RdClk0_C191 = fangyuan1_C [34:34] ;
  logic [0:0] RdClk0_R192 ;
  logic [0:0] RdClk0_X192 ;
  logic [0:0] RdClk0_C192 ;
  assign RdClk0_R192 = fangyuan1_R [33:33] ;
  assign RdClk0_X192 = fangyuan1_X [33:33] ;
  assign RdClk0_C192 = fangyuan1_C [33:33] ;
  logic [0:0] RdClk0_R193 ;
  logic [0:0] RdClk0_X193 ;
  logic [0:0] RdClk0_C193 ;
  assign RdClk0_R193 = fangyuan1_R [32:32] ;
  assign RdClk0_X193 = fangyuan1_X [32:32] ;
  assign RdClk0_C193 = fangyuan1_C [32:32] ;
  logic [0:0] RdClk0_R194 ;
  logic [0:0] RdClk0_X194 ;
  logic [0:0] RdClk0_C194 ;
  assign RdClk0_R194 = fangyuan1_R [31:31] ;
  assign RdClk0_X194 = fangyuan1_X [31:31] ;
  assign RdClk0_C194 = fangyuan1_C [31:31] ;
  logic [0:0] RdClk0_R195 ;
  logic [0:0] RdClk0_X195 ;
  logic [0:0] RdClk0_C195 ;
  assign RdClk0_R195 = fangyuan1_R [30:30] ;
  assign RdClk0_X195 = fangyuan1_X [30:30] ;
  assign RdClk0_C195 = fangyuan1_C [30:30] ;
  logic [0:0] RdClk0_R196 ;
  logic [0:0] RdClk0_X196 ;
  logic [0:0] RdClk0_C196 ;
  assign RdClk0_R196 = fangyuan1_R [29:29] ;
  assign RdClk0_X196 = fangyuan1_X [29:29] ;
  assign RdClk0_C196 = fangyuan1_C [29:29] ;
  logic [0:0] RdClk0_R197 ;
  logic [0:0] RdClk0_X197 ;
  logic [0:0] RdClk0_C197 ;
  assign RdClk0_R197 = fangyuan1_R [28:28] ;
  assign RdClk0_X197 = fangyuan1_X [28:28] ;
  assign RdClk0_C197 = fangyuan1_C [28:28] ;
  logic [0:0] RdClk0_R198 ;
  logic [0:0] RdClk0_X198 ;
  logic [0:0] RdClk0_C198 ;
  assign RdClk0_R198 = fangyuan1_R [27:27] ;
  assign RdClk0_X198 = fangyuan1_X [27:27] ;
  assign RdClk0_C198 = fangyuan1_C [27:27] ;
  logic [0:0] RdClk0_R199 ;
  logic [0:0] RdClk0_X199 ;
  logic [0:0] RdClk0_C199 ;
  assign RdClk0_R199 = fangyuan1_R [26:26] ;
  assign RdClk0_X199 = fangyuan1_X [26:26] ;
  assign RdClk0_C199 = fangyuan1_C [26:26] ;
  logic [0:0] RdClk0_R200 ;
  logic [0:0] RdClk0_X200 ;
  logic [0:0] RdClk0_C200 ;
  assign RdClk0_R200 = fangyuan1_R [25:25] ;
  assign RdClk0_X200 = fangyuan1_X [25:25] ;
  assign RdClk0_C200 = fangyuan1_C [25:25] ;
  logic [0:0] RdClk0_R201 ;
  logic [0:0] RdClk0_X201 ;
  logic [0:0] RdClk0_C201 ;
  assign RdClk0_R201 = fangyuan1_R [24:24] ;
  assign RdClk0_X201 = fangyuan1_X [24:24] ;
  assign RdClk0_C201 = fangyuan1_C [24:24] ;
  logic [0:0] RdClk0_R202 ;
  logic [0:0] RdClk0_X202 ;
  logic [0:0] RdClk0_C202 ;
  assign RdClk0_R202 = fangyuan1_R [23:23] ;
  assign RdClk0_X202 = fangyuan1_X [23:23] ;
  assign RdClk0_C202 = fangyuan1_C [23:23] ;
  logic [0:0] RdClk0_R203 ;
  logic [0:0] RdClk0_X203 ;
  logic [0:0] RdClk0_C203 ;
  assign RdClk0_R203 = fangyuan1_R [22:22] ;
  assign RdClk0_X203 = fangyuan1_X [22:22] ;
  assign RdClk0_C203 = fangyuan1_C [22:22] ;
  logic [0:0] RdClk0_R204 ;
  logic [0:0] RdClk0_X204 ;
  logic [0:0] RdClk0_C204 ;
  assign RdClk0_R204 = fangyuan1_R [21:21] ;
  assign RdClk0_X204 = fangyuan1_X [21:21] ;
  assign RdClk0_C204 = fangyuan1_C [21:21] ;
  logic [0:0] RdClk0_R205 ;
  logic [0:0] RdClk0_X205 ;
  logic [0:0] RdClk0_C205 ;
  assign RdClk0_R205 = fangyuan1_R [20:20] ;
  assign RdClk0_X205 = fangyuan1_X [20:20] ;
  assign RdClk0_C205 = fangyuan1_C [20:20] ;
  logic [0:0] RdClk0_R206 ;
  logic [0:0] RdClk0_X206 ;
  logic [0:0] RdClk0_C206 ;
  assign RdClk0_R206 = fangyuan1_R [19:19] ;
  assign RdClk0_X206 = fangyuan1_X [19:19] ;
  assign RdClk0_C206 = fangyuan1_C [19:19] ;
  logic [0:0] RdClk0_R207 ;
  logic [0:0] RdClk0_X207 ;
  logic [0:0] RdClk0_C207 ;
  assign RdClk0_R207 = fangyuan1_R [18:18] ;
  assign RdClk0_X207 = fangyuan1_X [18:18] ;
  assign RdClk0_C207 = fangyuan1_C [18:18] ;
  logic [0:0] RdClk0_R208 ;
  logic [0:0] RdClk0_X208 ;
  logic [0:0] RdClk0_C208 ;
  assign RdClk0_R208 = fangyuan1_R [17:17] ;
  assign RdClk0_X208 = fangyuan1_X [17:17] ;
  assign RdClk0_C208 = fangyuan1_C [17:17] ;
  logic [0:0] RdClk0_R209 ;
  logic [0:0] RdClk0_X209 ;
  logic [0:0] RdClk0_C209 ;
  assign RdClk0_R209 = fangyuan1_R [16:16] ;
  assign RdClk0_X209 = fangyuan1_X [16:16] ;
  assign RdClk0_C209 = fangyuan1_C [16:16] ;
  logic [0:0] RdClk0_R210 ;
  logic [0:0] RdClk0_X210 ;
  logic [0:0] RdClk0_C210 ;
  assign RdClk0_R210 = fangyuan1_R [15:15] ;
  assign RdClk0_X210 = fangyuan1_X [15:15] ;
  assign RdClk0_C210 = fangyuan1_C [15:15] ;
  logic [0:0] RdClk0_R211 ;
  logic [0:0] RdClk0_X211 ;
  logic [0:0] RdClk0_C211 ;
  assign RdClk0_R211 = fangyuan1_R [14:14] ;
  assign RdClk0_X211 = fangyuan1_X [14:14] ;
  assign RdClk0_C211 = fangyuan1_C [14:14] ;
  logic [0:0] RdClk0_R212 ;
  logic [0:0] RdClk0_X212 ;
  logic [0:0] RdClk0_C212 ;
  assign RdClk0_R212 = fangyuan1_R [13:13] ;
  assign RdClk0_X212 = fangyuan1_X [13:13] ;
  assign RdClk0_C212 = fangyuan1_C [13:13] ;
  logic [0:0] RdClk0_R213 ;
  logic [0:0] RdClk0_X213 ;
  logic [0:0] RdClk0_C213 ;
  assign RdClk0_R213 = fangyuan1_R [12:12] ;
  assign RdClk0_X213 = fangyuan1_X [12:12] ;
  assign RdClk0_C213 = fangyuan1_C [12:12] ;
  logic [0:0] RdClk0_R214 ;
  logic [0:0] RdClk0_X214 ;
  logic [0:0] RdClk0_C214 ;
  assign RdClk0_R214 = fangyuan1_R [11:11] ;
  assign RdClk0_X214 = fangyuan1_X [11:11] ;
  assign RdClk0_C214 = fangyuan1_C [11:11] ;
  logic [0:0] RdClk0_R215 ;
  logic [0:0] RdClk0_X215 ;
  logic [0:0] RdClk0_C215 ;
  assign RdClk0_R215 = fangyuan1_R [10:10] ;
  assign RdClk0_X215 = fangyuan1_X [10:10] ;
  assign RdClk0_C215 = fangyuan1_C [10:10] ;
  logic [0:0] RdClk0_R216 ;
  logic [0:0] RdClk0_X216 ;
  logic [0:0] RdClk0_C216 ;
  assign RdClk0_R216 = fangyuan1_R [9:9] ;
  assign RdClk0_X216 = fangyuan1_X [9:9] ;
  assign RdClk0_C216 = fangyuan1_C [9:9] ;
  logic [0:0] RdClk0_R217 ;
  logic [0:0] RdClk0_X217 ;
  logic [0:0] RdClk0_C217 ;
  assign RdClk0_R217 = fangyuan1_R [8:8] ;
  assign RdClk0_X217 = fangyuan1_X [8:8] ;
  assign RdClk0_C217 = fangyuan1_C [8:8] ;
  logic [0:0] RdClk0_R218 ;
  logic [0:0] RdClk0_X218 ;
  logic [0:0] RdClk0_C218 ;
  assign RdClk0_R218 = fangyuan1_R [7:7] ;
  assign RdClk0_X218 = fangyuan1_X [7:7] ;
  assign RdClk0_C218 = fangyuan1_C [7:7] ;
  logic [0:0] RdClk0_R219 ;
  logic [0:0] RdClk0_X219 ;
  logic [0:0] RdClk0_C219 ;
  assign RdClk0_R219 = fangyuan1_R [6:6] ;
  assign RdClk0_X219 = fangyuan1_X [6:6] ;
  assign RdClk0_C219 = fangyuan1_C [6:6] ;
  logic [0:0] RdClk0_R220 ;
  logic [0:0] RdClk0_X220 ;
  logic [0:0] RdClk0_C220 ;
  assign RdClk0_R220 = fangyuan1_R [5:5] ;
  assign RdClk0_X220 = fangyuan1_X [5:5] ;
  assign RdClk0_C220 = fangyuan1_C [5:5] ;
  logic [0:0] RdClk0_R221 ;
  logic [0:0] RdClk0_X221 ;
  logic [0:0] RdClk0_C221 ;
  assign RdClk0_R221 = fangyuan1_R [4:4] ;
  assign RdClk0_X221 = fangyuan1_X [4:4] ;
  assign RdClk0_C221 = fangyuan1_C [4:4] ;
  logic [0:0] RdClk0_R222 ;
  logic [0:0] RdClk0_X222 ;
  logic [0:0] RdClk0_C222 ;
  assign RdClk0_R222 = fangyuan1_R [3:3] ;
  assign RdClk0_X222 = fangyuan1_X [3:3] ;
  assign RdClk0_C222 = fangyuan1_C [3:3] ;
  logic [0:0] RdClk0_R223 ;
  logic [0:0] RdClk0_X223 ;
  logic [0:0] RdClk0_C223 ;
  assign RdClk0_R223 = fangyuan1_R [2:2] ;
  assign RdClk0_X223 = fangyuan1_X [2:2] ;
  assign RdClk0_C223 = fangyuan1_C [2:2] ;
  logic [0:0] RdClk0_R224 ;
  logic [0:0] RdClk0_X224 ;
  logic [0:0] RdClk0_C224 ;
  assign RdClk0_R224 = fangyuan1_R [1:1] ;
  assign RdClk0_X224 = fangyuan1_X [1:1] ;
  assign RdClk0_C224 = fangyuan1_C [1:1] ;
  logic [0:0] RdClk0_R225 ;
  logic [0:0] RdClk0_X225 ;
  logic [0:0] RdClk0_C225 ;
  assign RdClk0_R225 = fangyuan1_R [0:0] ;
  assign RdClk0_X225 = fangyuan1_X [0:0] ;
  assign RdClk0_C225 = fangyuan1_C [0:0] ;

  assign rmuxd0 = fangyuan1 & _23_;
  assign rmuxd0_S = 0 ;
  logic [225:0] fangyuan1_C0 ;
  logic [225:0] fangyuan1_R0 ;
  logic [225:0] fangyuan1_X0 ;
  logic [225:0] _23__C0 ;
  logic [225:0] _23__R0 ;
  logic [225:0] _23__X0 ;
  assign rmuxd0_T = fangyuan1_T | _23__T ;
  assign fangyuan1_C0 = rmuxd0_C ;
  assign fangyuan1_X0 = rmuxd0_X ;
  assign _23__C0 = rmuxd0_C ;
  assign _23__X0 = rmuxd0_X ;
  assign fangyuan1_R0 = ( rmuxd0_R | rmuxd0_C & _23__T ) & { 226{ _23_ != 0 }} ;
  assign _23__R0 = ( rmuxd0_R | rmuxd0_C & fangyuan1_T ) & { 226{ fangyuan1 != 0 }} ;
  always @*
  logic [225:0] rmuxd0_R0 ;
  logic [225:0] rmuxd0_X0 ;
  logic [225:0] rmuxd0_C0 ;
  always @* begin
    dout_T = 0 ;
    rmuxd0_R0 = 0 ;
    rmuxd0_X0 = 0 ;
    rmuxd0_C0 = 0 ;
    if (RdClk0) begin
      dout = rmuxd0;
      dout_T = rmuxd0_T ;
      rmuxd0_R0 = dout_R ;
      rmuxd0_X0 = dout_X ;
    end
  end
  always @*
  logic [6:0] RA_R0 ;
  logic [6:0] RA_X0 ;
  logic [6:0] RA_C0 ;
  always @* begin
    RADR_T = 0 ;
    RA_R0 = 0 ;
    RA_X0 = 0 ;
    RA_C0 = 0 ;
    if (_12_) begin
      RADR = RA;
      RADR_T = RA_T ;
      RA_R0 = RADR_R ;
      RA_X0 = RADR_X ;
    end
  end
  always @*
  logic [0:0] we_se_R1 ;
  logic [0:0] we_se_X1 ;
  logic [0:0] we_se_C1 ;
  always @* begin
    WE_FF_T = 0 ;
    we_se_R1 = 0 ;
    we_se_X1 = 0 ;
    we_se_C1 = 0 ;
    if (_04_) begin
      WE_FF = we_se;
      WE_FF_T = we_se_T ;
      we_se_R1 = WE_FF_R ;
      we_se_X1 = WE_FF_X ;
    end
  end
  always @*
  logic [0:0] _00__R0 ;
  logic [0:0] _00__X0 ;
  logic [0:0] _00__C0 ;
  always @* begin
    RE_LATB_T = 0 ;
    _00__R0 = 0 ;
    _00__X0 = 0 ;
    _00__C0 = 0 ;
    if (_03_) begin
      RE_LATB = _00_;
      RE_LATB_T = _00__T ;
      _00__R0 = RE_LATB_R ;
      _00__X0 = RE_LATB_X ;
    end
  end
  always @*
  logic [0:0] _02__R0 ;
  logic [0:0] _02__X0 ;
  logic [0:0] _02__C0 ;
  always @* begin
    WE_LATB_T = 0 ;
    _02__R0 = 0 ;
    _02__X0 = 0 ;
    _02__C0 = 0 ;
    if (_03_) begin
      WE_LATB = _02_;
      WE_LATB_T = _02__T ;
      _02__R0 = WE_LATB_R ;
      _02__X0 = WE_LATB_X ;
    end
  end
  assign _17_ = ! CLK;
  logic [0:0] CLK_C4 ;
  logic [0:0] CLK_R4 ;
  logic [0:0] CLK_X4 ;
  assign _17__T = | CLK_T ;
  assign CLK_C4 = { 1{ _17__C }} ;
  assign CLK_X4 = { 1{ _17__X }} ;
  assign CLK_R4 = { 1{ _17__R }} ;
  assign _17__S = 0 ;
  assign _18_ = ! clobber_flops;
  logic [0:0] clobber_flops_C0 ;
  logic [0:0] clobber_flops_R0 ;
  logic [0:0] clobber_flops_X0 ;
  assign _18__T = | clobber_flops_T ;
  assign clobber_flops_C0 = { 1{ _18__C }} ;
  assign clobber_flops_X0 = { 1{ _18__X }} ;
  assign clobber_flops_R0 = { 1{ _18__R }} ;
  assign _18__S = 0 ;
  assign _19_ = ! RET_EN;
  logic [0:0] RET_EN_C0 ;
  logic [0:0] RET_EN_R0 ;
  logic [0:0] RET_EN_X0 ;
  assign _19__T = | RET_EN_T ;
  assign RET_EN_C0 = { 1{ _19__C }} ;
  assign RET_EN_X0 = { 1{ _19__X }} ;
  assign RET_EN_R0 = { 1{ _19__R }} ;
  assign _19__S = 0 ;
  assign _20_ = ! RADRCLK;
  logic [0:0] RADRCLK_C0 ;
  logic [0:0] RADRCLK_R0 ;
  logic [0:0] RADRCLK_X0 ;
  assign _20__T = | RADRCLK_T ;
  assign RADRCLK_C0 = { 1{ _20__C }} ;
  assign RADRCLK_X0 = { 1{ _20__X }} ;
  assign RADRCLK_R0 = { 1{ _20__R }} ;
  assign _20__S = 0 ;
  assign CLAMPB = ~ IDDQ;
  logic [0:0] IDDQ_C0 ;
  logic [0:0] IDDQ_R0 ;
  logic [0:0] IDDQ_X0 ;
  assign CLAMPB_T = IDDQ_T ;
  assign IDDQ_C0 = CLAMPB_C ;
  assign IDDQ_R0 = CLAMPB_R ;
  assign IDDQ_X0 = CLAMPB_X ;
  assign CLAMPB_S = 0 ;
  assign _00_ = ~ RE;
  logic [0:0] RE_C0 ;
  logic [0:0] RE_R0 ;
  logic [0:0] RE_X0 ;
  assign _00__T = RE_T ;
  assign RE_C0 = _00__C ;
  assign RE_R0 = _00__R ;
  assign RE_X0 = _00__X ;
  assign _00__S = 0 ;
  assign _02_ = ~ WE;
  logic [0:0] WE_C0 ;
  logic [0:0] WE_R0 ;
  logic [0:0] WE_X0 ;
  assign _02__T = WE_T ;
  assign WE_C0 = _02__C ;
  assign WE_R0 = _02__R ;
  assign WE_X0 = _02__X ;
  assign _02__S = 0 ;
  assign we_se = ~ WE_LATB;
  logic [0:0] WE_LATB_C0 ;
  logic [0:0] WE_LATB_R0 ;
  logic [0:0] WE_LATB_X0 ;
  assign we_se_T = WE_LATB_T ;
  assign WE_LATB_C0 = we_se_C ;
  assign WE_LATB_R0 = we_se_R ;
  assign WE_LATB_X0 = we_se_X ;
  assign we_se_S = 0 ;
  assign re_se = ~ RE_LATB;
  logic [0:0] RE_LATB_C0 ;
  logic [0:0] RE_LATB_R0 ;
  logic [0:0] RE_LATB_X0 ;
  assign re_se_T = RE_LATB_T ;
  assign RE_LATB_C0 = re_se_C ;
  assign RE_LATB_R0 = re_se_R ;
  assign RE_LATB_X0 = re_se_X ;
  assign re_se_S = 0 ;
  assign _21_ = ~ CLK;
  logic [0:0] CLK_C5 ;
  logic [0:0] CLK_R5 ;
  logic [0:0] CLK_X5 ;
  assign _21__T = CLK_T ;
  assign CLK_C5 = _21__C ;
  assign CLK_R5 = _21__R ;
  assign CLK_X5 = _21__X ;
  assign _21__S = 0 ;
  logic [6:0] fangyuan2;
  logic [6:0] fangyuan2_T ;
  logic [6:0] fangyuan2_R ;
  logic [6:0] fangyuan2_C ;
  logic [6:0] fangyuan2_X ;
  assign fangyuan2 = { RWSEL, RWSEL, RWSEL, RWSEL, RWSEL, RWSEL, RWSEL };
  assign fangyuan2_T = {  RWSEL_T , RWSEL_T , RWSEL_T , RWSEL_T , RWSEL_T , RWSEL_T , RWSEL_T  };
  logic [13:0] fangyuan2_S ;
  assign fangyuan2_S = 0 ;
  logic [0:0] RWSEL_R7 ;
  logic [0:0] RWSEL_X7 ;
  logic [0:0] RWSEL_C7 ;
  assign RWSEL_R7 = fangyuan2_R [6:6] ;
  assign RWSEL_X7 = fangyuan2_X [6:6] ;
  assign RWSEL_C7 = fangyuan2_C [6:6] ;
  logic [0:0] RWSEL_R8 ;
  logic [0:0] RWSEL_X8 ;
  logic [0:0] RWSEL_C8 ;
  assign RWSEL_R8 = fangyuan2_R [5:5] ;
  assign RWSEL_X8 = fangyuan2_X [5:5] ;
  assign RWSEL_C8 = fangyuan2_C [5:5] ;
  logic [0:0] RWSEL_R9 ;
  logic [0:0] RWSEL_X9 ;
  logic [0:0] RWSEL_C9 ;
  assign RWSEL_R9 = fangyuan2_R [4:4] ;
  assign RWSEL_X9 = fangyuan2_X [4:4] ;
  assign RWSEL_C9 = fangyuan2_C [4:4] ;
  logic [0:0] RWSEL_R10 ;
  logic [0:0] RWSEL_X10 ;
  logic [0:0] RWSEL_C10 ;
  assign RWSEL_R10 = fangyuan2_R [3:3] ;
  assign RWSEL_X10 = fangyuan2_X [3:3] ;
  assign RWSEL_C10 = fangyuan2_C [3:3] ;
  logic [0:0] RWSEL_R11 ;
  logic [0:0] RWSEL_X11 ;
  logic [0:0] RWSEL_C11 ;
  assign RWSEL_R11 = fangyuan2_R [2:2] ;
  assign RWSEL_X11 = fangyuan2_X [2:2] ;
  assign RWSEL_C11 = fangyuan2_C [2:2] ;
  logic [0:0] RWSEL_R12 ;
  logic [0:0] RWSEL_X12 ;
  logic [0:0] RWSEL_C12 ;
  assign RWSEL_R12 = fangyuan2_R [1:1] ;
  assign RWSEL_X12 = fangyuan2_X [1:1] ;
  assign RWSEL_C12 = fangyuan2_C [1:1] ;
  logic [0:0] RWSEL_R13 ;
  logic [0:0] RWSEL_X13 ;
  logic [0:0] RWSEL_C13 ;
  assign RWSEL_R13 = fangyuan2_R [0:0] ;
  assign RWSEL_X13 = fangyuan2_X [0:0] ;
  assign RWSEL_C13 = fangyuan2_C [0:0] ;

  assign _22_ = ~ fangyuan2;
  logic [6:0] fangyuan2_C0 ;
  logic [6:0] fangyuan2_R0 ;
  logic [6:0] fangyuan2_X0 ;
  assign _22__T = fangyuan2_T ;
  assign fangyuan2_C0 = _22__C ;
  assign fangyuan2_R0 = _22__R ;
  assign fangyuan2_X0 = _22__X ;
  assign _22__S = 0 ;
  assign WDBQ = ~ WDQ_pr;
  logic [225:0] WDQ_pr_C1 ;
  logic [225:0] WDQ_pr_R1 ;
  logic [225:0] WDQ_pr_X1 ;
  assign WDBQ_T = WDQ_pr_T ;
  assign WDQ_pr_C1 = WDBQ_C ;
  assign WDQ_pr_R1 = WDBQ_R ;
  assign WDQ_pr_X1 = WDBQ_X ;
  assign WDBQ_S = 0 ;
  assign legal = ~ ADR[6];
  logic [6:0] ADR_C0 ;
  logic [6:0] ADR_R0 ;
  logic [6:0] ADR_X0 ;
  assign legal_T = ADR_T [6] ;
  assign ADR_C0 [6] = legal_C ;
  assign ADR_R0 [6] = legal_R ;
  assign ADR_X0 [6] = legal_X ;
  assign legal_S = 0 ;
  assign _23_ = ~ dout0;
  logic [225:0] dout0_C0 ;
  logic [225:0] dout0_R0 ;
  logic [225:0] dout0_X0 ;
  assign _23__T = dout0_T ;
  assign dout0_C0 = _23__C ;
  assign dout0_R0 = _23__R ;
  assign dout0_X0 = _23__X ;
  assign _23__S = 0 ;
  assign ADR = _13_ | _14_;
  assign ADR_S = 0 ;
  logic [6:0] _13__C0 ;
  logic [6:0] _13__R0 ;
  logic [6:0] _13__X0 ;
  logic [6:0] _14__C0 ;
  logic [6:0] _14__R0 ;
  logic [6:0] _14__X0 ;
  assign ADR_T = _13__T | _14__T ;
  assign _13__C0 = ADR_C ;
  assign _13__X0 = ADR_X ;
  assign _14__C0 = ADR_C ;
  assign _14__X0 = ADR_X ;
  assign _13__R0 = ( ADR_R | ADR_C & _14__T ) & { 7{ _14_ != 7'b1111111 }} ;
  assign _14__R0 = ( ADR_R | ADR_C & _13__T ) & { 7{ _13_ != 7'b1111111 }} ;
  assign WMNQ = WDQ_pr | WDBQ;
  assign WMNQ_S = 0 ;
  logic [225:0] WDQ_pr_C2 ;
  logic [225:0] WDQ_pr_R2 ;
  logic [225:0] WDQ_pr_X2 ;
  logic [225:0] WDBQ_C0 ;
  logic [225:0] WDBQ_R0 ;
  logic [225:0] WDBQ_X0 ;
  assign WMNQ_T = WDQ_pr_T | WDBQ_T ;
  assign WDQ_pr_C2 = WMNQ_C ;
  assign WDQ_pr_X2 = WMNQ_X ;
  assign WDBQ_C0 = WMNQ_C ;
  assign WDBQ_X0 = WMNQ_X ;
  assign WDQ_pr_R2 = ( WMNQ_R | WMNQ_C & WDBQ_T ) & { 226{ WDBQ != 226'b1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111 }} ;
  assign WDBQ_R0 = ( WMNQ_R | WMNQ_C & WDQ_pr_T ) & { 226{ WDQ_pr != 226'b1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111 }} ;
  assign RD = _15_ | _16_;
  assign RD_S = 0 ;
  logic [225:0] _15__C0 ;
  logic [225:0] _15__R0 ;
  logic [225:0] _15__X0 ;
  logic [225:0] _16__C0 ;
  logic [225:0] _16__R0 ;
  logic [225:0] _16__X0 ;
  assign RD_T = _15__T | _16__T ;
  assign _15__C0 = RD_C ;
  assign _15__X0 = RD_X ;
  assign _16__C0 = RD_C ;
  assign _16__X0 = RD_X ;
  assign _15__R0 = ( RD_R | RD_C & _16__T ) & { 226{ _16_ != 226'b1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111 }} ;
  assign _16__R0 = ( RD_R | RD_C & _15__T ) & { 226{ _15_ != 226'b1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111 }} ;
  always @(posedge WADRCLK)
      WDQ_pr <= _01_;
  logic [225:0] _01__X0 ;
  logic [225:0] _01__R0 ;
  logic [225:0] _01__C0 ;
  assign _01__X0 = { 226{ WDQ_pr_S != _01__S }} ;
  assign _01__R0 = 0 ;
  assign _01__C0 = 0 ;
  always @( posedge WADRCLK )
      WDQ_pr_T 		<= rst_zy ? 0 : ( _01__T & _01__X0 );
  always @( posedge WADRCLK )
      WDQ_pr_t_flag 	<= rst_zy ? 0 : WDQ_pr_t_flag ? 1 : | _01__T & ( | _01__X0 );
  always @( posedge WADRCLK )
      WDQ_pr_r_flag 	<= rst_zy ? 0 : WDQ_pr_r_flag ? 1 : WDQ_pr_t_flag ? 0 : ( | WDQ_pr_R ) ;
  always @(posedge WADRCLK)
      WAFF <= WA;
  logic [6:0] WA_X0 ;
  logic [6:0] WA_R0 ;
  logic [6:0] WA_C0 ;
  assign WA_X0 = { 7{ WAFF_S != WA_S }} ;
  assign WA_R0 = 0 ;
  assign WA_C0 = 0 ;
  always @( posedge WADRCLK )
      WAFF_T 		<= rst_zy ? 0 : ( WA_T & WA_X0 );
  always @( posedge WADRCLK )
      WAFF_t_flag 	<= rst_zy ? 0 : WAFF_t_flag ? 1 : | WA_T & ( | WA_X0 );
  always @( posedge WADRCLK )
      WAFF_r_flag 	<= rst_zy ? 0 : WAFF_r_flag ? 1 : WAFF_t_flag ? 0 : ( | WAFF_R ) ;
  logic [6:0] RADR_R1 ;
  logic [6:0] RADR_X1 ;
  logic [6:0] RADR_C1 ;
  logic [6:0] WAFF_R1 ;
  logic [6:0] WAFF_X1 ;
  logic [6:0] WAFF_C1 ;
  logic [0:0] WrClk0_R0 ;
  logic [0:0] WrClk0_X0 ;
  logic [0:0] WrClk0_C0 ;
  logic [225:0] WDQ_pr_R3 ;
  logic [225:0] WDQ_pr_X3 ;
  logic [225:0] WDQ_pr_C3 ;
  logic [225:0] WMNQ_R0 ;
  logic [225:0] WMNQ_X0 ;
  logic [225:0] WMNQ_C0 ;
// module: \$paramod\RAMPDP_64X226_GL_M1_D2_ram\words=64\bits=226\addrs=7
  \$paramod\RAMPDP_64X226_GL_M1_D2_ram\words=64\bits=226\addrs=7 iow0 (
    .radr_T (  RADR_T  ),
    .radr_R (  RADR_R1  ),
    .radr_X (  RADR_X1  ),
    .radr_C (  RADR_C1  ),
    .radr_S (  RADR_S  ),
    .wadr_T (  WAFF_T  ),
    .wadr_R (  WAFF_R1  ),
    .wadr_X (  WAFF_X1  ),
    .wadr_C (  WAFF_C1  ),
    .wadr_S (  WAFF_S  ),
    .wrclk_T (  WrClk0_T  ),
    .wrclk_R (  WrClk0_R0  ),
    .wrclk_X (  WrClk0_X0  ),
    .wrclk_C (  WrClk0_C0  ),
    .wrclk_S (  WrClk0_S  ),
    .wrdata_T (  WDQ_pr_T  ),
    .wrdata_R (  WDQ_pr_R3  ),
    .wrdata_X (  WDQ_pr_X3  ),
    .wrdata_C (  WDQ_pr_C3  ),
    .wrdata_S (  WDQ_pr_S  ),
    .wrmaskn_T (  WMNQ_T  ),
    .wrmaskn_R (  WMNQ_R0  ),
    .wrmaskn_X (  WMNQ_X0  ),
    .wrmaskn_C (  WMNQ_C0  ),
    .wrmaskn_S (  WMNQ_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .rst_zy(rst_zy),
    .rout_B_T (  dout0_T  ),
    .rout_B_R0 (  dout0_R  ),
    .rout_B_X0 (  dout0_X  ),
    .rout_B_C0 (  dout0_C  ),
    .rout_B_S ( dout0_S ),
    .wrmaskn ( WMNQ ),
    .rout_B ( dout0 ),
    .wadr ( WAFF ),
    .radr ( RADR ),
    .wrclk ( WrClk0 ),
    .wrdata ( WDQ_pr )
  );
  assign BADBIT = 226'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
  assign BADBIT_T = 0 ;
  assign BADBIT_S = 14'b1 ;
  assign CAPT_DIS = 1'b0;
  assign CAPT_DIS_T = 0 ;
  assign CAPT_DIS_S = 14'b1 ;
  assign PDEC0 = 512'b
  assign PDEC0_T = 0 ;
  assign PDEC0_S = 14'b1 ;
  assign PDEC1 = 512'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
  assign PDEC1_T = 0 ;
  assign PDEC1_S = 14'b1 ;
  assign PDEC2 = 512'b
  assign PDEC2_T = 0 ;
  assign PDEC2_S = 14'b1 ;
  assign RADRSWI = RADR;
  logic [6:0] RADR_C2 ;
  logic [6:0] RADR_R2 ;
  logic [6:0] RADR_X2 ;
  assign RADRSWI_T = RADR_T ;
  assign RADR_C2 = RADRSWI_C ;
  assign RADR_R2 = RADRSWI_R ;
  assign RADR_X2 = RADRSWI_X ;
  assign RADRSWI_S = RADR_S ;
  assign RDBYP = 1'b0;
  assign RDBYP_T = 0 ;
  assign RDBYP_S = 14'b1 ;
  assign RDBYPASS = 226'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
  assign RDBYPASS_T = 0 ;
  assign RDBYPASS_S = 14'b1 ;
  assign RECLK = RdClk0;
  logic [0:0] RdClk0_C227 ;
  logic [0:0] RdClk0_R227 ;
  logic [0:0] RdClk0_X227 ;
  assign RECLK_T = RdClk0_T ;
  assign RdClk0_C227 = RECLK_C ;
  assign RdClk0_R227 = RECLK_R ;
  assign RdClk0_X227 = RECLK_X ;
  assign RECLK_S = RdClk0_S ;
  assign SHFT = 226'b1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111;
  assign SHFT_T = 0 ;
  assign SHFT_S = 14'b1 ;
  assign WDBQ_pr = WDBQ;
  logic [225:0] WDBQ_C1 ;
  logic [225:0] WDBQ_R1 ;
  logic [225:0] WDBQ_X1 ;
  assign WDBQ_pr_T = WDBQ_T ;
  assign WDBQ_C1 = WDBQ_pr_C ;
  assign WDBQ_R1 = WDBQ_pr_R ;
  assign WDBQ_X1 = WDBQ_pr_X ;
  assign WDBQ_pr_S = WDBQ_S ;
  assign WDQ = WDQ_pr;
  logic [225:0] WDQ_pr_C4 ;
  logic [225:0] WDQ_pr_R4 ;
  logic [225:0] WDQ_pr_X4 ;
  assign WDQ_T = WDQ_pr_T ;
  assign WDQ_pr_C4 = WDQ_C ;
  assign WDQ_pr_R4 = WDQ_R ;
  assign WDQ_pr_X4 = WDQ_X ;
  assign WDQ_S = WDQ_pr_S ;
  assign WMNexp = 226'b1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111;
  assign WMNexp_T = 0 ;
  assign WMNexp_S = 14'b1 ;
  assign WRDCLK = WADRCLK;
  logic [0:0] WADRCLK_C0 ;
  logic [0:0] WADRCLK_R0 ;
  logic [0:0] WADRCLK_X0 ;
  assign WRDCLK_T = WADRCLK_T ;
  assign WADRCLK_C0 = WRDCLK_C ;
  assign WADRCLK_R0 = WRDCLK_R ;
  assign WADRCLK_X0 = WRDCLK_X ;
  assign WRDCLK_S = WADRCLK_S ;
  assign empadd = 1'b0;
  assign empadd_T = 0 ;
  assign empadd_S = 14'b1 ;
  assign force_x = 226'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
  assign force_x_T = 0 ;
  assign force_x_S = 14'b1 ;
  assign fusePDEC0 = 8'b00000000;
  assign fusePDEC0_T = 0 ;
  assign fusePDEC0_S = 14'b1 ;
  assign fusePDEC1 = 8'b00000000;
  assign fusePDEC1_T = 0 ;
  assign fusePDEC1_S = 14'b1 ;
  assign fusePDEC2 = 8'b00000000;
  assign fusePDEC2_T = 0 ;
  assign fusePDEC2_S = 14'b1 ;
  assign fuseien = 1'b0;
  assign fuseien_T = 0 ;
  assign fuseien_S = 14'b1 ;
  assign latffclk = CLK;
  logic [0:0] CLK_C6 ;
  logic [0:0] CLK_R6 ;
  logic [0:0] CLK_X6 ;
  assign latffclk_T = CLK_T ;
  assign CLK_C6 = latffclk_C ;
  assign CLK_R6 = latffclk_R ;
  assign CLK_X6 = latffclk_X ;
  assign latffclk_S = CLK_S ;
  assign sel_normal = 226'b1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111;
  assign sel_normal_T = 0 ;
  assign sel_normal_S = 14'b1 ;
  assign sel_redun = 226'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
  assign sel_redun_T = 0 ;
  assign sel_redun_S = 14'b1 ;
  assign tiedvalid = legal;
  logic [0:0] legal_C1 ;
  logic [0:0] legal_R1 ;
  logic [0:0] legal_X1 ;
  assign tiedvalid_T = legal_T ;
  assign legal_C1 = tiedvalid_C ;
  assign legal_R1 = tiedvalid_R ;
  assign legal_X1 = tiedvalid_X ;
  assign tiedvalid_S = legal_S ;
  assign WADRCLK_C = ( WADRCLK_C0 );
  assign WMNQ_C = ( WMNQ_C0 );
  assign WrClk0_C = ( WrClk0_C0 );
  assign WA_C = ( WA_C0 );
  assign _01__C = ( _01__C0 );
  assign _16__C = ( _16__C0 );
  assign _15__C = ( _15__C0 );
  assign WDBQ_C = ( WDBQ_C0 ) | ( WDBQ_C1 );
  assign _14__C = ( _14__C0 );
  assign _13__C = ( _13__C0 );
  assign dout0_C = ( dout0_C0 );
  assign ADR_C = ( ADR_C0 );
  assign fangyuan2_C = ( fangyuan2_C0 );
  assign RE_LATB_C = ( RE_LATB_C0 );
  assign WE_LATB_C = ( WE_LATB_C0 );
  assign WE_C = ( WE_C0 );
  assign RE_C = ( RE_C0 );
  assign IDDQ_C = ( IDDQ_C0 );
  assign RADRCLK_C = ( RADRCLK_C0 );
  assign RET_EN_C = ( RET_EN_C0 );
  assign clobber_flops_C = ( clobber_flops_C0 );
  assign _02__C = ( _02__C0 );
  assign _00__C = ( _00__C0 );
  assign _03__C = ( _03__C0 ) | ( _03__C1 );
  assign _04__C = ( _04__C0 );
  assign RA_C = ( RA_C0 );
  assign _12__C = ( _12__C0 );
  assign rmuxd0_C = ( rmuxd0_C0 );
  assign _23__C = ( _23__C0 );
  assign fangyuan1_C = ( fangyuan1_C0 );
  assign RdClk0_C = ( RdClk0_C0 ) | ( RdClk0_C1 ) | ( RdClk0_C2 ) | ( RdClk0_C3 ) | ( RdClk0_C4 ) | ( RdClk0_C5 ) | ( RdClk0_C6 ) | ( RdClk0_C7 ) | ( RdClk0_C8 ) | ( RdClk0_C9 ) | ( RdClk0_C10 ) | ( RdClk0_C11 ) | ( RdClk0_C12 ) | ( RdClk0_C13 ) | ( RdClk0_C14 ) | ( RdClk0_C15 ) | ( RdClk0_C16 ) | ( RdClk0_C17 ) | ( RdClk0_C18 ) | ( RdClk0_C19 ) | ( RdClk0_C20 ) | ( RdClk0_C21 ) | ( RdClk0_C22 ) | ( RdClk0_C23 ) | ( RdClk0_C24 ) | ( RdClk0_C25 ) | ( RdClk0_C26 ) | ( RdClk0_C27 ) | ( RdClk0_C28 ) | ( RdClk0_C29 ) | ( RdClk0_C30 ) | ( RdClk0_C31 ) | ( RdClk0_C32 ) | ( RdClk0_C33 ) | ( RdClk0_C34 ) | ( RdClk0_C35 ) | ( RdClk0_C36 ) | ( RdClk0_C37 ) | ( RdClk0_C38 ) | ( RdClk0_C39 ) | ( RdClk0_C40 ) | ( RdClk0_C41 ) | ( RdClk0_C42 ) | ( RdClk0_C43 ) | ( RdClk0_C44 ) | ( RdClk0_C45 ) | ( RdClk0_C46 ) | ( RdClk0_C47 ) | ( RdClk0_C48 ) | ( RdClk0_C49 ) | ( RdClk0_C50 ) | ( RdClk0_C51 ) | ( RdClk0_C52 ) | ( RdClk0_C53 ) | ( RdClk0_C54 ) | ( RdClk0_C55 ) | ( RdClk0_C56 ) | ( RdClk0_C57 ) | ( RdClk0_C58 ) | ( RdClk0_C59 ) | ( RdClk0_C60 ) | ( RdClk0_C61 ) | ( RdClk0_C62 ) | ( RdClk0_C63 ) | ( RdClk0_C64 ) | ( RdClk0_C65 ) | ( RdClk0_C66 ) | ( RdClk0_C67 ) | ( RdClk0_C68 ) | ( RdClk0_C69 ) | ( RdClk0_C70 ) | ( RdClk0_C71 ) | ( RdClk0_C72 ) | ( RdClk0_C73 ) | ( RdClk0_C74 ) | ( RdClk0_C75 ) | ( RdClk0_C76 ) | ( RdClk0_C77 ) | ( RdClk0_C78 ) | ( RdClk0_C79 ) | ( RdClk0_C80 ) | ( RdClk0_C81 ) | ( RdClk0_C82 ) | ( RdClk0_C83 ) | ( RdClk0_C84 ) | ( RdClk0_C85 ) | ( RdClk0_C86 ) | ( RdClk0_C87 ) | ( RdClk0_C88 ) | ( RdClk0_C89 ) | ( RdClk0_C90 ) | ( RdClk0_C91 ) | ( RdClk0_C92 ) | ( RdClk0_C93 ) | ( RdClk0_C94 ) | ( RdClk0_C95 ) | ( RdClk0_C96 ) | ( RdClk0_C97 ) | ( RdClk0_C98 ) | ( RdClk0_C99 ) | ( RdClk0_C100 ) | ( RdClk0_C101 ) | ( RdClk0_C102 ) | ( RdClk0_C103 ) | ( RdClk0_C104 ) | ( RdClk0_C105 ) | ( RdClk0_C106 ) | ( RdClk0_C107 ) | ( RdClk0_C108 ) | ( RdClk0_C109 ) | ( RdClk0_C110 ) | ( RdClk0_C111 ) | ( RdClk0_C112 ) | ( RdClk0_C113 ) | ( RdClk0_C114 ) | ( RdClk0_C115 ) | ( RdClk0_C116 ) | ( RdClk0_C117 ) | ( RdClk0_C118 ) | ( RdClk0_C119 ) | ( RdClk0_C120 ) | ( RdClk0_C121 ) | ( RdClk0_C122 ) | ( RdClk0_C123 ) | ( RdClk0_C124 ) | ( RdClk0_C125 ) | ( RdClk0_C126 ) | ( RdClk0_C127 ) | ( RdClk0_C128 ) | ( RdClk0_C129 ) | ( RdClk0_C130 ) | ( RdClk0_C131 ) | ( RdClk0_C132 ) | ( RdClk0_C133 ) | ( RdClk0_C134 ) | ( RdClk0_C135 ) | ( RdClk0_C136 ) | ( RdClk0_C137 ) | ( RdClk0_C138 ) | ( RdClk0_C139 ) | ( RdClk0_C140 ) | ( RdClk0_C141 ) | ( RdClk0_C142 ) | ( RdClk0_C143 ) | ( RdClk0_C144 ) | ( RdClk0_C145 ) | ( RdClk0_C146 ) | ( RdClk0_C147 ) | ( RdClk0_C148 ) | ( RdClk0_C149 ) | ( RdClk0_C150 ) | ( RdClk0_C151 ) | ( RdClk0_C152 ) | ( RdClk0_C153 ) | ( RdClk0_C154 ) | ( RdClk0_C155 ) | ( RdClk0_C156 ) | ( RdClk0_C157 ) | ( RdClk0_C158 ) | ( RdClk0_C159 ) | ( RdClk0_C160 ) | ( RdClk0_C161 ) | ( RdClk0_C162 ) | ( RdClk0_C163 ) | ( RdClk0_C164 ) | ( RdClk0_C165 ) | ( RdClk0_C166 ) | ( RdClk0_C167 ) | ( RdClk0_C168 ) | ( RdClk0_C169 ) | ( RdClk0_C170 ) | ( RdClk0_C171 ) | ( RdClk0_C172 ) | ( RdClk0_C173 ) | ( RdClk0_C174 ) | ( RdClk0_C175 ) | ( RdClk0_C176 ) | ( RdClk0_C177 ) | ( RdClk0_C178 ) | ( RdClk0_C179 ) | ( RdClk0_C180 ) | ( RdClk0_C181 ) | ( RdClk0_C182 ) | ( RdClk0_C183 ) | ( RdClk0_C184 ) | ( RdClk0_C185 ) | ( RdClk0_C186 ) | ( RdClk0_C187 ) | ( RdClk0_C188 ) | ( RdClk0_C189 ) | ( RdClk0_C190 ) | ( RdClk0_C191 ) | ( RdClk0_C192 ) | ( RdClk0_C193 ) | ( RdClk0_C194 ) | ( RdClk0_C195 ) | ( RdClk0_C196 ) | ( RdClk0_C197 ) | ( RdClk0_C198 ) | ( RdClk0_C199 ) | ( RdClk0_C200 ) | ( RdClk0_C201 ) | ( RdClk0_C202 ) | ( RdClk0_C203 ) | ( RdClk0_C204 ) | ( RdClk0_C205 ) | ( RdClk0_C206 ) | ( RdClk0_C207 ) | ( RdClk0_C208 ) | ( RdClk0_C209 ) | ( RdClk0_C210 ) | ( RdClk0_C211 ) | ( RdClk0_C212 ) | ( RdClk0_C213 ) | ( RdClk0_C214 ) | ( RdClk0_C215 ) | ( RdClk0_C216 ) | ( RdClk0_C217 ) | ( RdClk0_C218 ) | ( RdClk0_C219 ) | ( RdClk0_C220 ) | ( RdClk0_C221 ) | ( RdClk0_C222 ) | ( RdClk0_C223 ) | ( RdClk0_C224 ) | ( RdClk0_C225 ) | ( RdClk0_C226 ) | ( RdClk0_C227 );
  assign legal_C = ( legal_C0 ) | ( legal_C1 );
  assign WECLK_C = ( WECLK_C0 );
  assign WDQ_pr_C = ( WDQ_pr_C0 ) | ( WDQ_pr_C1 ) | ( WDQ_pr_C2 ) | ( WDQ_pr_C3 ) | ( WDQ_pr_C4 );
  assign dout_C = ( dout_C0 );
  assign WD_C = ( WD_C0 );
  assign RADR_C = ( RADR_C0 ) | ( RADR_C1 ) | ( RADR_C2 );
  assign _22__C = ( _22__C0 );
  assign WAFF_C = ( WAFF_C0 ) | ( WAFF_C1 );
  assign fangyuan0_C = ( fangyuan0_C0 );
  assign RWSEL_C = ( RWSEL_C0 ) | ( RWSEL_C1 ) | ( RWSEL_C2 ) | ( RWSEL_C3 ) | ( RWSEL_C4 ) | ( RWSEL_C5 ) | ( RWSEL_C6 ) | ( RWSEL_C7 ) | ( RWSEL_C8 ) | ( RWSEL_C9 ) | ( RWSEL_C10 ) | ( RWSEL_C11 ) | ( RWSEL_C12 ) | ( RWSEL_C13 );
  assign _20__C = ( _20__C0 );
  assign _21__C = ( _21__C0 ) | ( _21__C1 );
  assign _11__C = ( _11__C0 );
  assign _10__C = ( _10__C0 );
  assign _09__C = ( _09__C0 ) | ( _09__C1 );
  assign WE_FF_C = ( WE_FF_C0 );
  assign _08__C = ( _08__C0 );
  assign _19__C = ( _19__C0 ) | ( _19__C1 );
  assign _07__C = ( _07__C0 );
  assign _06__C = ( _06__C0 );
  assign CLAMPB_C = ( CLAMPB_C0 ) | ( CLAMPB_C1 );
  assign re_se_C = ( re_se_C0 ) | ( re_se_C1 );
  assign _05__C = ( _05__C0 );
  assign we_se_C = ( we_se_C0 ) | ( we_se_C1 );
  assign CLK_C = ( CLK_C0 ) | ( CLK_C1 ) | ( CLK_C2 ) | ( CLK_C3 ) | ( CLK_C4 ) | ( CLK_C5 ) | ( CLK_C6 );
  assign _18__C = ( _18__C0 ) | ( _18__C1 ) | ( _18__C2 ) | ( _18__C3 ) | ( _18__C4 ) | ( _18__C5 );
  assign _17__C = ( _17__C0 );
  assign RD_C = ( RD_C0 );
  assign WADRCLK_X = ( WADRCLK_X0 );
  assign WMNQ_X = ( WMNQ_X0 );
  assign WrClk0_X = ( WrClk0_X0 );
  assign WA_X = ( WA_X0 );
  assign _01__X = ( _01__X0 );
  assign _16__X = ( _16__X0 );
  assign _15__X = ( _15__X0 );
  assign WDBQ_X = ( WDBQ_X0 ) | ( WDBQ_X1 );
  assign _14__X = ( _14__X0 );
  assign _13__X = ( _13__X0 );
  assign dout0_X = ( dout0_X0 );
  assign ADR_X = ( ADR_X0 );
  assign fangyuan2_X = ( fangyuan2_X0 );
  assign RE_LATB_X = ( RE_LATB_X0 );
  assign WE_LATB_X = ( WE_LATB_X0 );
  assign WE_X = ( WE_X0 );
  assign RE_X = ( RE_X0 );
  assign IDDQ_X = ( IDDQ_X0 );
  assign RADRCLK_X = ( RADRCLK_X0 );
  assign RET_EN_X = ( RET_EN_X0 );
  assign clobber_flops_X = ( clobber_flops_X0 );
  assign _02__X = ( _02__X0 );
  assign _00__X = ( _00__X0 );
  assign _03__X = ( _03__X0 ) | ( _03__X1 );
  assign _04__X = ( _04__X0 );
  assign RA_X = ( RA_X0 );
  assign _12__X = ( _12__X0 );
  assign rmuxd0_X = ( rmuxd0_X0 );
  assign _23__X = ( _23__X0 );
  assign fangyuan1_X = ( fangyuan1_X0 );
  assign RdClk0_X = ( RdClk0_X0 ) | ( RdClk0_X1 ) | ( RdClk0_X2 ) | ( RdClk0_X3 ) | ( RdClk0_X4 ) | ( RdClk0_X5 ) | ( RdClk0_X6 ) | ( RdClk0_X7 ) | ( RdClk0_X8 ) | ( RdClk0_X9 ) | ( RdClk0_X10 ) | ( RdClk0_X11 ) | ( RdClk0_X12 ) | ( RdClk0_X13 ) | ( RdClk0_X14 ) | ( RdClk0_X15 ) | ( RdClk0_X16 ) | ( RdClk0_X17 ) | ( RdClk0_X18 ) | ( RdClk0_X19 ) | ( RdClk0_X20 ) | ( RdClk0_X21 ) | ( RdClk0_X22 ) | ( RdClk0_X23 ) | ( RdClk0_X24 ) | ( RdClk0_X25 ) | ( RdClk0_X26 ) | ( RdClk0_X27 ) | ( RdClk0_X28 ) | ( RdClk0_X29 ) | ( RdClk0_X30 ) | ( RdClk0_X31 ) | ( RdClk0_X32 ) | ( RdClk0_X33 ) | ( RdClk0_X34 ) | ( RdClk0_X35 ) | ( RdClk0_X36 ) | ( RdClk0_X37 ) | ( RdClk0_X38 ) | ( RdClk0_X39 ) | ( RdClk0_X40 ) | ( RdClk0_X41 ) | ( RdClk0_X42 ) | ( RdClk0_X43 ) | ( RdClk0_X44 ) | ( RdClk0_X45 ) | ( RdClk0_X46 ) | ( RdClk0_X47 ) | ( RdClk0_X48 ) | ( RdClk0_X49 ) | ( RdClk0_X50 ) | ( RdClk0_X51 ) | ( RdClk0_X52 ) | ( RdClk0_X53 ) | ( RdClk0_X54 ) | ( RdClk0_X55 ) | ( RdClk0_X56 ) | ( RdClk0_X57 ) | ( RdClk0_X58 ) | ( RdClk0_X59 ) | ( RdClk0_X60 ) | ( RdClk0_X61 ) | ( RdClk0_X62 ) | ( RdClk0_X63 ) | ( RdClk0_X64 ) | ( RdClk0_X65 ) | ( RdClk0_X66 ) | ( RdClk0_X67 ) | ( RdClk0_X68 ) | ( RdClk0_X69 ) | ( RdClk0_X70 ) | ( RdClk0_X71 ) | ( RdClk0_X72 ) | ( RdClk0_X73 ) | ( RdClk0_X74 ) | ( RdClk0_X75 ) | ( RdClk0_X76 ) | ( RdClk0_X77 ) | ( RdClk0_X78 ) | ( RdClk0_X79 ) | ( RdClk0_X80 ) | ( RdClk0_X81 ) | ( RdClk0_X82 ) | ( RdClk0_X83 ) | ( RdClk0_X84 ) | ( RdClk0_X85 ) | ( RdClk0_X86 ) | ( RdClk0_X87 ) | ( RdClk0_X88 ) | ( RdClk0_X89 ) | ( RdClk0_X90 ) | ( RdClk0_X91 ) | ( RdClk0_X92 ) | ( RdClk0_X93 ) | ( RdClk0_X94 ) | ( RdClk0_X95 ) | ( RdClk0_X96 ) | ( RdClk0_X97 ) | ( RdClk0_X98 ) | ( RdClk0_X99 ) | ( RdClk0_X100 ) | ( RdClk0_X101 ) | ( RdClk0_X102 ) | ( RdClk0_X103 ) | ( RdClk0_X104 ) | ( RdClk0_X105 ) | ( RdClk0_X106 ) | ( RdClk0_X107 ) | ( RdClk0_X108 ) | ( RdClk0_X109 ) | ( RdClk0_X110 ) | ( RdClk0_X111 ) | ( RdClk0_X112 ) | ( RdClk0_X113 ) | ( RdClk0_X114 ) | ( RdClk0_X115 ) | ( RdClk0_X116 ) | ( RdClk0_X117 ) | ( RdClk0_X118 ) | ( RdClk0_X119 ) | ( RdClk0_X120 ) | ( RdClk0_X121 ) | ( RdClk0_X122 ) | ( RdClk0_X123 ) | ( RdClk0_X124 ) | ( RdClk0_X125 ) | ( RdClk0_X126 ) | ( RdClk0_X127 ) | ( RdClk0_X128 ) | ( RdClk0_X129 ) | ( RdClk0_X130 ) | ( RdClk0_X131 ) | ( RdClk0_X132 ) | ( RdClk0_X133 ) | ( RdClk0_X134 ) | ( RdClk0_X135 ) | ( RdClk0_X136 ) | ( RdClk0_X137 ) | ( RdClk0_X138 ) | ( RdClk0_X139 ) | ( RdClk0_X140 ) | ( RdClk0_X141 ) | ( RdClk0_X142 ) | ( RdClk0_X143 ) | ( RdClk0_X144 ) | ( RdClk0_X145 ) | ( RdClk0_X146 ) | ( RdClk0_X147 ) | ( RdClk0_X148 ) | ( RdClk0_X149 ) | ( RdClk0_X150 ) | ( RdClk0_X151 ) | ( RdClk0_X152 ) | ( RdClk0_X153 ) | ( RdClk0_X154 ) | ( RdClk0_X155 ) | ( RdClk0_X156 ) | ( RdClk0_X157 ) | ( RdClk0_X158 ) | ( RdClk0_X159 ) | ( RdClk0_X160 ) | ( RdClk0_X161 ) | ( RdClk0_X162 ) | ( RdClk0_X163 ) | ( RdClk0_X164 ) | ( RdClk0_X165 ) | ( RdClk0_X166 ) | ( RdClk0_X167 ) | ( RdClk0_X168 ) | ( RdClk0_X169 ) | ( RdClk0_X170 ) | ( RdClk0_X171 ) | ( RdClk0_X172 ) | ( RdClk0_X173 ) | ( RdClk0_X174 ) | ( RdClk0_X175 ) | ( RdClk0_X176 ) | ( RdClk0_X177 ) | ( RdClk0_X178 ) | ( RdClk0_X179 ) | ( RdClk0_X180 ) | ( RdClk0_X181 ) | ( RdClk0_X182 ) | ( RdClk0_X183 ) | ( RdClk0_X184 ) | ( RdClk0_X185 ) | ( RdClk0_X186 ) | ( RdClk0_X187 ) | ( RdClk0_X188 ) | ( RdClk0_X189 ) | ( RdClk0_X190 ) | ( RdClk0_X191 ) | ( RdClk0_X192 ) | ( RdClk0_X193 ) | ( RdClk0_X194 ) | ( RdClk0_X195 ) | ( RdClk0_X196 ) | ( RdClk0_X197 ) | ( RdClk0_X198 ) | ( RdClk0_X199 ) | ( RdClk0_X200 ) | ( RdClk0_X201 ) | ( RdClk0_X202 ) | ( RdClk0_X203 ) | ( RdClk0_X204 ) | ( RdClk0_X205 ) | ( RdClk0_X206 ) | ( RdClk0_X207 ) | ( RdClk0_X208 ) | ( RdClk0_X209 ) | ( RdClk0_X210 ) | ( RdClk0_X211 ) | ( RdClk0_X212 ) | ( RdClk0_X213 ) | ( RdClk0_X214 ) | ( RdClk0_X215 ) | ( RdClk0_X216 ) | ( RdClk0_X217 ) | ( RdClk0_X218 ) | ( RdClk0_X219 ) | ( RdClk0_X220 ) | ( RdClk0_X221 ) | ( RdClk0_X222 ) | ( RdClk0_X223 ) | ( RdClk0_X224 ) | ( RdClk0_X225 ) | ( RdClk0_X226 ) | ( RdClk0_X227 );
  assign legal_X = ( legal_X0 ) | ( legal_X1 );
  assign WECLK_X = ( WECLK_X0 );
  assign WDQ_pr_X = ( WDQ_pr_X0 ) | ( WDQ_pr_X1 ) | ( WDQ_pr_X2 ) | ( WDQ_pr_X3 ) | ( WDQ_pr_X4 );
  assign dout_X = ( dout_X0 );
  assign WD_X = ( WD_X0 );
  assign RADR_X = ( RADR_X0 ) | ( RADR_X1 ) | ( RADR_X2 );
  assign _22__X = ( _22__X0 );
  assign WAFF_X = ( WAFF_X0 ) | ( WAFF_X1 );
  assign fangyuan0_X = ( fangyuan0_X0 );
  assign RWSEL_X = ( RWSEL_X0 ) | ( RWSEL_X1 ) | ( RWSEL_X2 ) | ( RWSEL_X3 ) | ( RWSEL_X4 ) | ( RWSEL_X5 ) | ( RWSEL_X6 ) | ( RWSEL_X7 ) | ( RWSEL_X8 ) | ( RWSEL_X9 ) | ( RWSEL_X10 ) | ( RWSEL_X11 ) | ( RWSEL_X12 ) | ( RWSEL_X13 );
  assign _20__X = ( _20__X0 );
  assign _21__X = ( _21__X0 ) | ( _21__X1 );
  assign _11__X = ( _11__X0 );
  assign _10__X = ( _10__X0 );
  assign _09__X = ( _09__X0 ) | ( _09__X1 );
  assign WE_FF_X = ( WE_FF_X0 );
  assign _08__X = ( _08__X0 );
  assign _19__X = ( _19__X0 ) | ( _19__X1 );
  assign _07__X = ( _07__X0 );
  assign _06__X = ( _06__X0 );
  assign CLAMPB_X = ( CLAMPB_X0 ) | ( CLAMPB_X1 );
  assign re_se_X = ( re_se_X0 ) | ( re_se_X1 );
  assign _05__X = ( _05__X0 );
  assign we_se_X = ( we_se_X0 ) | ( we_se_X1 );
  assign CLK_X = ( CLK_X0 ) | ( CLK_X1 ) | ( CLK_X2 ) | ( CLK_X3 ) | ( CLK_X4 ) | ( CLK_X5 ) | ( CLK_X6 );
  assign _18__X = ( _18__X0 ) | ( _18__X1 ) | ( _18__X2 ) | ( _18__X3 ) | ( _18__X4 ) | ( _18__X5 );
  assign _17__X = ( _17__X0 );
  assign RD_X = ( RD_X0 );
  assign WADRCLK_R = ( WADRCLK_X0 & WADRCLK_R0 );
  assign WMNQ_R = ( WMNQ_X0 & WMNQ_R0 );
  assign WrClk0_R = ( WrClk0_X0 & WrClk0_R0 );
  assign WA_R = ( WA_X0 & WA_R0 );
  assign _01__R = ( _01__X0 & _01__R0 );
  assign _16__R = ( _16__X0 & _16__R0 );
  assign _15__R = ( _15__X0 & _15__R0 );
  assign WDBQ_R = ( WDBQ_X0 & WDBQ_R0 ) | ( WDBQ_X1 & WDBQ_R1 );
  assign _14__R = ( _14__X0 & _14__R0 );
  assign _13__R = ( _13__X0 & _13__R0 );
  assign dout0_R = ( dout0_X0 & dout0_R0 );
  assign ADR_R = ( ADR_X0 & ADR_R0 );
  assign fangyuan2_R = ( fangyuan2_X0 & fangyuan2_R0 );
  assign RE_LATB_R = ( RE_LATB_X0 & RE_LATB_R0 );
  assign WE_LATB_R = ( WE_LATB_X0 & WE_LATB_R0 );
  assign WE_R = ( WE_X0 & WE_R0 );
  assign RE_R = ( RE_X0 & RE_R0 );
  assign IDDQ_R = ( IDDQ_X0 & IDDQ_R0 );
  assign RADRCLK_R = ( RADRCLK_X0 & RADRCLK_R0 );
  assign RET_EN_R = ( RET_EN_X0 & RET_EN_R0 );
  assign clobber_flops_R = ( clobber_flops_X0 & clobber_flops_R0 );
  assign _02__R = ( _02__X0 & _02__R0 );
  assign _00__R = ( _00__X0 & _00__R0 );
  assign _03__R = ( _03__X0 & _03__R0 ) | ( _03__X1 & _03__R1 );
  assign _04__R = ( _04__X0 & _04__R0 );
  assign RA_R = ( RA_X0 & RA_R0 );
  assign _12__R = ( _12__X0 & _12__R0 );
  assign rmuxd0_R = ( rmuxd0_X0 & rmuxd0_R0 );
  assign _23__R = ( _23__X0 & _23__R0 );
  assign fangyuan1_R = ( fangyuan1_X0 & fangyuan1_R0 );
  assign RdClk0_R = ( RdClk0_X0 & RdClk0_R0 ) | ( RdClk0_X1 & RdClk0_R1 ) | ( RdClk0_X2 & RdClk0_R2 ) | ( RdClk0_X3 & RdClk0_R3 ) | ( RdClk0_X4 & RdClk0_R4 ) | ( RdClk0_X5 & RdClk0_R5 ) | ( RdClk0_X6 & RdClk0_R6 ) | ( RdClk0_X7 & RdClk0_R7 ) | ( RdClk0_X8 & RdClk0_R8 ) | ( RdClk0_X9 & RdClk0_R9 ) | ( RdClk0_X10 & RdClk0_R10 ) | ( RdClk0_X11 & RdClk0_R11 ) | ( RdClk0_X12 & RdClk0_R12 ) | ( RdClk0_X13 & RdClk0_R13 ) | ( RdClk0_X14 & RdClk0_R14 ) | ( RdClk0_X15 & RdClk0_R15 ) | ( RdClk0_X16 & RdClk0_R16 ) | ( RdClk0_X17 & RdClk0_R17 ) | ( RdClk0_X18 & RdClk0_R18 ) | ( RdClk0_X19 & RdClk0_R19 ) | ( RdClk0_X20 & RdClk0_R20 ) | ( RdClk0_X21 & RdClk0_R21 ) | ( RdClk0_X22 & RdClk0_R22 ) | ( RdClk0_X23 & RdClk0_R23 ) | ( RdClk0_X24 & RdClk0_R24 ) | ( RdClk0_X25 & RdClk0_R25 ) | ( RdClk0_X26 & RdClk0_R26 ) | ( RdClk0_X27 & RdClk0_R27 ) | ( RdClk0_X28 & RdClk0_R28 ) | ( RdClk0_X29 & RdClk0_R29 ) | ( RdClk0_X30 & RdClk0_R30 ) | ( RdClk0_X31 & RdClk0_R31 ) | ( RdClk0_X32 & RdClk0_R32 ) | ( RdClk0_X33 & RdClk0_R33 ) | ( RdClk0_X34 & RdClk0_R34 ) | ( RdClk0_X35 & RdClk0_R35 ) | ( RdClk0_X36 & RdClk0_R36 ) | ( RdClk0_X37 & RdClk0_R37 ) | ( RdClk0_X38 & RdClk0_R38 ) | ( RdClk0_X39 & RdClk0_R39 ) | ( RdClk0_X40 & RdClk0_R40 ) | ( RdClk0_X41 & RdClk0_R41 ) | ( RdClk0_X42 & RdClk0_R42 ) | ( RdClk0_X43 & RdClk0_R43 ) | ( RdClk0_X44 & RdClk0_R44 ) | ( RdClk0_X45 & RdClk0_R45 ) | ( RdClk0_X46 & RdClk0_R46 ) | ( RdClk0_X47 & RdClk0_R47 ) | ( RdClk0_X48 & RdClk0_R48 ) | ( RdClk0_X49 & RdClk0_R49 ) | ( RdClk0_X50 & RdClk0_R50 ) | ( RdClk0_X51 & RdClk0_R51 ) | ( RdClk0_X52 & RdClk0_R52 ) | ( RdClk0_X53 & RdClk0_R53 ) | ( RdClk0_X54 & RdClk0_R54 ) | ( RdClk0_X55 & RdClk0_R55 ) | ( RdClk0_X56 & RdClk0_R56 ) | ( RdClk0_X57 & RdClk0_R57 ) | ( RdClk0_X58 & RdClk0_R58 ) | ( RdClk0_X59 & RdClk0_R59 ) | ( RdClk0_X60 & RdClk0_R60 ) | ( RdClk0_X61 & RdClk0_R61 ) | ( RdClk0_X62 & RdClk0_R62 ) | ( RdClk0_X63 & RdClk0_R63 ) | ( RdClk0_X64 & RdClk0_R64 ) | ( RdClk0_X65 & RdClk0_R65 ) | ( RdClk0_X66 & RdClk0_R66 ) | ( RdClk0_X67 & RdClk0_R67 ) | ( RdClk0_X68 & RdClk0_R68 ) | ( RdClk0_X69 & RdClk0_R69 ) | ( RdClk0_X70 & RdClk0_R70 ) | ( RdClk0_X71 & RdClk0_R71 ) | ( RdClk0_X72 & RdClk0_R72 ) | ( RdClk0_X73 & RdClk0_R73 ) | ( RdClk0_X74 & RdClk0_R74 ) | ( RdClk0_X75 & RdClk0_R75 ) | ( RdClk0_X76 & RdClk0_R76 ) | ( RdClk0_X77 & RdClk0_R77 ) | ( RdClk0_X78 & RdClk0_R78 ) | ( RdClk0_X79 & RdClk0_R79 ) | ( RdClk0_X80 & RdClk0_R80 ) | ( RdClk0_X81 & RdClk0_R81 ) | ( RdClk0_X82 & RdClk0_R82 ) | ( RdClk0_X83 & RdClk0_R83 ) | ( RdClk0_X84 & RdClk0_R84 ) | ( RdClk0_X85 & RdClk0_R85 ) | ( RdClk0_X86 & RdClk0_R86 ) | ( RdClk0_X87 & RdClk0_R87 ) | ( RdClk0_X88 & RdClk0_R88 ) | ( RdClk0_X89 & RdClk0_R89 ) | ( RdClk0_X90 & RdClk0_R90 ) | ( RdClk0_X91 & RdClk0_R91 ) | ( RdClk0_X92 & RdClk0_R92 ) | ( RdClk0_X93 & RdClk0_R93 ) | ( RdClk0_X94 & RdClk0_R94 ) | ( RdClk0_X95 & RdClk0_R95 ) | ( RdClk0_X96 & RdClk0_R96 ) | ( RdClk0_X97 & RdClk0_R97 ) | ( RdClk0_X98 & RdClk0_R98 ) | ( RdClk0_X99 & RdClk0_R99 ) | ( RdClk0_X100 & RdClk0_R100 ) | ( RdClk0_X101 & RdClk0_R101 ) | ( RdClk0_X102 & RdClk0_R102 ) | ( RdClk0_X103 & RdClk0_R103 ) | ( RdClk0_X104 & RdClk0_R104 ) | ( RdClk0_X105 & RdClk0_R105 ) | ( RdClk0_X106 & RdClk0_R106 ) | ( RdClk0_X107 & RdClk0_R107 ) | ( RdClk0_X108 & RdClk0_R108 ) | ( RdClk0_X109 & RdClk0_R109 ) | ( RdClk0_X110 & RdClk0_R110 ) | ( RdClk0_X111 & RdClk0_R111 ) | ( RdClk0_X112 & RdClk0_R112 ) | ( RdClk0_X113 & RdClk0_R113 ) | ( RdClk0_X114 & RdClk0_R114 ) | ( RdClk0_X115 & RdClk0_R115 ) | ( RdClk0_X116 & RdClk0_R116 ) | ( RdClk0_X117 & RdClk0_R117 ) | ( RdClk0_X118 & RdClk0_R118 ) | ( RdClk0_X119 & RdClk0_R119 ) | ( RdClk0_X120 & RdClk0_R120 ) | ( RdClk0_X121 & RdClk0_R121 ) | ( RdClk0_X122 & RdClk0_R122 ) | ( RdClk0_X123 & RdClk0_R123 ) | ( RdClk0_X124 & RdClk0_R124 ) | ( RdClk0_X125 & RdClk0_R125 ) | ( RdClk0_X126 & RdClk0_R126 ) | ( RdClk0_X127 & RdClk0_R127 ) | ( RdClk0_X128 & RdClk0_R128 ) | ( RdClk0_X129 & RdClk0_R129 ) | ( RdClk0_X130 & RdClk0_R130 ) | ( RdClk0_X131 & RdClk0_R131 ) | ( RdClk0_X132 & RdClk0_R132 ) | ( RdClk0_X133 & RdClk0_R133 ) | ( RdClk0_X134 & RdClk0_R134 ) | ( RdClk0_X135 & RdClk0_R135 ) | ( RdClk0_X136 & RdClk0_R136 ) | ( RdClk0_X137 & RdClk0_R137 ) | ( RdClk0_X138 & RdClk0_R138 ) | ( RdClk0_X139 & RdClk0_R139 ) | ( RdClk0_X140 & RdClk0_R140 ) | ( RdClk0_X141 & RdClk0_R141 ) | ( RdClk0_X142 & RdClk0_R142 ) | ( RdClk0_X143 & RdClk0_R143 ) | ( RdClk0_X144 & RdClk0_R144 ) | ( RdClk0_X145 & RdClk0_R145 ) | ( RdClk0_X146 & RdClk0_R146 ) | ( RdClk0_X147 & RdClk0_R147 ) | ( RdClk0_X148 & RdClk0_R148 ) | ( RdClk0_X149 & RdClk0_R149 ) | ( RdClk0_X150 & RdClk0_R150 ) | ( RdClk0_X151 & RdClk0_R151 ) | ( RdClk0_X152 & RdClk0_R152 ) | ( RdClk0_X153 & RdClk0_R153 ) | ( RdClk0_X154 & RdClk0_R154 ) | ( RdClk0_X155 & RdClk0_R155 ) | ( RdClk0_X156 & RdClk0_R156 ) | ( RdClk0_X157 & RdClk0_R157 ) | ( RdClk0_X158 & RdClk0_R158 ) | ( RdClk0_X159 & RdClk0_R159 ) | ( RdClk0_X160 & RdClk0_R160 ) | ( RdClk0_X161 & RdClk0_R161 ) | ( RdClk0_X162 & RdClk0_R162 ) | ( RdClk0_X163 & RdClk0_R163 ) | ( RdClk0_X164 & RdClk0_R164 ) | ( RdClk0_X165 & RdClk0_R165 ) | ( RdClk0_X166 & RdClk0_R166 ) | ( RdClk0_X167 & RdClk0_R167 ) | ( RdClk0_X168 & RdClk0_R168 ) | ( RdClk0_X169 & RdClk0_R169 ) | ( RdClk0_X170 & RdClk0_R170 ) | ( RdClk0_X171 & RdClk0_R171 ) | ( RdClk0_X172 & RdClk0_R172 ) | ( RdClk0_X173 & RdClk0_R173 ) | ( RdClk0_X174 & RdClk0_R174 ) | ( RdClk0_X175 & RdClk0_R175 ) | ( RdClk0_X176 & RdClk0_R176 ) | ( RdClk0_X177 & RdClk0_R177 ) | ( RdClk0_X178 & RdClk0_R178 ) | ( RdClk0_X179 & RdClk0_R179 ) | ( RdClk0_X180 & RdClk0_R180 ) | ( RdClk0_X181 & RdClk0_R181 ) | ( RdClk0_X182 & RdClk0_R182 ) | ( RdClk0_X183 & RdClk0_R183 ) | ( RdClk0_X184 & RdClk0_R184 ) | ( RdClk0_X185 & RdClk0_R185 ) | ( RdClk0_X186 & RdClk0_R186 ) | ( RdClk0_X187 & RdClk0_R187 ) | ( RdClk0_X188 & RdClk0_R188 ) | ( RdClk0_X189 & RdClk0_R189 ) | ( RdClk0_X190 & RdClk0_R190 ) | ( RdClk0_X191 & RdClk0_R191 ) | ( RdClk0_X192 & RdClk0_R192 ) | ( RdClk0_X193 & RdClk0_R193 ) | ( RdClk0_X194 & RdClk0_R194 ) | ( RdClk0_X195 & RdClk0_R195 ) | ( RdClk0_X196 & RdClk0_R196 ) | ( RdClk0_X197 & RdClk0_R197 ) | ( RdClk0_X198 & RdClk0_R198 ) | ( RdClk0_X199 & RdClk0_R199 ) | ( RdClk0_X200 & RdClk0_R200 ) | ( RdClk0_X201 & RdClk0_R201 ) | ( RdClk0_X202 & RdClk0_R202 ) | ( RdClk0_X203 & RdClk0_R203 ) | ( RdClk0_X204 & RdClk0_R204 ) | ( RdClk0_X205 & RdClk0_R205 ) | ( RdClk0_X206 & RdClk0_R206 ) | ( RdClk0_X207 & RdClk0_R207 ) | ( RdClk0_X208 & RdClk0_R208 ) | ( RdClk0_X209 & RdClk0_R209 ) | ( RdClk0_X210 & RdClk0_R210 ) | ( RdClk0_X211 & RdClk0_R211 ) | ( RdClk0_X212 & RdClk0_R212 ) | ( RdClk0_X213 & RdClk0_R213 ) | ( RdClk0_X214 & RdClk0_R214 ) | ( RdClk0_X215 & RdClk0_R215 ) | ( RdClk0_X216 & RdClk0_R216 ) | ( RdClk0_X217 & RdClk0_R217 ) | ( RdClk0_X218 & RdClk0_R218 ) | ( RdClk0_X219 & RdClk0_R219 ) | ( RdClk0_X220 & RdClk0_R220 ) | ( RdClk0_X221 & RdClk0_R221 ) | ( RdClk0_X222 & RdClk0_R222 ) | ( RdClk0_X223 & RdClk0_R223 ) | ( RdClk0_X224 & RdClk0_R224 ) | ( RdClk0_X225 & RdClk0_R225 ) | ( RdClk0_X226 & RdClk0_R226 ) | ( RdClk0_X227 & RdClk0_R227 );
  assign legal_R = ( legal_X0 & legal_R0 ) | ( legal_X1 & legal_R1 );
  assign WECLK_R = ( WECLK_X0 & WECLK_R0 );
  assign WDQ_pr_R = ( WDQ_pr_X0 & WDQ_pr_R0 ) | ( WDQ_pr_X1 & WDQ_pr_R1 ) | ( WDQ_pr_X2 & WDQ_pr_R2 ) | ( WDQ_pr_X3 & WDQ_pr_R3 ) | ( WDQ_pr_X4 & WDQ_pr_R4 );
  assign dout_R = ( dout_X0 & dout_R0 );
  assign WD_R = ( WD_X0 & WD_R0 );
  assign RADR_R = ( RADR_X0 & RADR_R0 ) | ( RADR_X1 & RADR_R1 ) | ( RADR_X2 & RADR_R2 );
  assign _22__R = ( _22__X0 & _22__R0 );
  assign WAFF_R = ( WAFF_X0 & WAFF_R0 ) | ( WAFF_X1 & WAFF_R1 );
  assign fangyuan0_R = ( fangyuan0_X0 & fangyuan0_R0 );
  assign RWSEL_R = ( RWSEL_X0 & RWSEL_R0 ) | ( RWSEL_X1 & RWSEL_R1 ) | ( RWSEL_X2 & RWSEL_R2 ) | ( RWSEL_X3 & RWSEL_R3 ) | ( RWSEL_X4 & RWSEL_R4 ) | ( RWSEL_X5 & RWSEL_R5 ) | ( RWSEL_X6 & RWSEL_R6 ) | ( RWSEL_X7 & RWSEL_R7 ) | ( RWSEL_X8 & RWSEL_R8 ) | ( RWSEL_X9 & RWSEL_R9 ) | ( RWSEL_X10 & RWSEL_R10 ) | ( RWSEL_X11 & RWSEL_R11 ) | ( RWSEL_X12 & RWSEL_R12 ) | ( RWSEL_X13 & RWSEL_R13 );
  assign _20__R = ( _20__X0 & _20__R0 );
  assign _21__R = ( _21__X0 & _21__R0 ) | ( _21__X1 & _21__R1 );
  assign _11__R = ( _11__X0 & _11__R0 );
  assign _10__R = ( _10__X0 & _10__R0 );
  assign _09__R = ( _09__X0 & _09__R0 ) | ( _09__X1 & _09__R1 );
  assign WE_FF_R = ( WE_FF_X0 & WE_FF_R0 );
  assign _08__R = ( _08__X0 & _08__R0 );
  assign _19__R = ( _19__X0 & _19__R0 ) | ( _19__X1 & _19__R1 );
  assign _07__R = ( _07__X0 & _07__R0 );
  assign _06__R = ( _06__X0 & _06__R0 );
  assign CLAMPB_R = ( CLAMPB_X0 & CLAMPB_R0 ) | ( CLAMPB_X1 & CLAMPB_R1 );
  assign re_se_R = ( re_se_X0 & re_se_R0 ) | ( re_se_X1 & re_se_R1 );
  assign _05__R = ( _05__X0 & _05__R0 );
  assign we_se_R = ( we_se_X0 & we_se_R0 ) | ( we_se_X1 & we_se_R1 );
  assign CLK_R = ( CLK_X0 & CLK_R0 ) | ( CLK_X1 & CLK_R1 ) | ( CLK_X2 & CLK_R2 ) | ( CLK_X3 & CLK_R3 ) | ( CLK_X4 & CLK_R4 ) | ( CLK_X5 & CLK_R5 ) | ( CLK_X6 & CLK_R6 );
  assign _18__R = ( _18__X0 & _18__R0 ) | ( _18__X1 & _18__R1 ) | ( _18__X2 & _18__R2 ) | ( _18__X3 & _18__R3 ) | ( _18__X4 & _18__R4 ) | ( _18__X5 & _18__R5 );
  assign _17__R = ( _17__X0 & _17__R0 );
  assign RD_R = ( RD_X0 & RD_R0 );
 // ground taints for floating regs
 // ground taints for unused wires
  assign { BADBIT_R , BADBIT_C , BADBIT_X , CAPT_DIS_R , CAPT_DIS_C , CAPT_DIS_X , PDEC0_R , PDEC0_C , PDEC0_X , PDEC1_R , PDEC1_C , PDEC1_X , PDEC2_R , PDEC2_C , PDEC2_X , RADRSWI_R , RADRSWI_C , RADRSWI_X , RDBYP_R , RDBYP_C , RDBYP_X , RDBYPASS_R , RDBYPASS_C , RDBYPASS_X , RECLK_R , RECLK_C , RECLK_X , SHFT_R , SHFT_C , SHFT_X , WDBQ_pr_R , WDBQ_pr_C , WDBQ_pr_X , WDQ_R , WDQ_C , WDQ_X , WMNexp_R , WMNexp_C , WMNexp_X , WRDCLK_R , WRDCLK_C , WRDCLK_X , empadd_R , empadd_C , empadd_X , force_x_R , force_x_C , force_x_X , fusePDEC0_R , fusePDEC0_C , fusePDEC0_X , fusePDEC1_R , fusePDEC1_C , fusePDEC1_X , fusePDEC2_R , fusePDEC2_C , fusePDEC2_X , fuseien_R , fuseien_C , fuseien_X , latffclk_R , latffclk_C , latffclk_X , sel_normal_R , sel_normal_C , sel_normal_X , sel_redun_R , sel_redun_C , sel_redun_X , tiedvalid_R , tiedvalid_C , tiedvalid_X  } = 0;
  always @( posedge WADRCLK ) begin
    if( rst_zy ) WDQ_pr_PREV_VAL1 <= 0 ;
    if( rst_zy ) WDQ_pr_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) WDQ_pr_PREV_VAL1 <= WDQ_pr ;
    if( INSTR_IN_ZY ) WDQ_pr_PREV_VAL2 <= WDQ_pr_PREV_VAL1 ;
  end
  always @( posedge WADRCLK ) begin
    if( rst_zy ) WAFF_PREV_VAL1 <= 0 ;
    if( rst_zy ) WAFF_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) WAFF_PREV_VAL1 <= WAFF ;
    if( INSTR_IN_ZY ) WAFF_PREV_VAL2 <= WAFF_PREV_VAL1 ;
  end
 // ground taints for unused wire slices
  assign { ADR_R0 [0], ADR_R0 [1], ADR_R0 [2], ADR_R0 [3], ADR_R0 [4], ADR_R0 [5] } = 0;
  assign { ADR_X0 [0], ADR_X0 [1], ADR_X0 [2], ADR_X0 [3], ADR_X0 [4], ADR_X0 [5] } = 0;
  assign { ADR_C0 [0], ADR_C0 [1], ADR_C0 [2], ADR_C0 [3], ADR_C0 [4], ADR_C0 [5] } = 0;
  assert property( RADR_r_flag == 0 || RADR_PREV_VAL1 == RADR_PREV_VAL2 );
  assert property( RE_LATB_r_flag == 0 || RE_LATB_PREV_VAL1 == RE_LATB_PREV_VAL2 );
  assert property( WAFF_r_flag == 0 || WAFF_PREV_VAL1 == WAFF_PREV_VAL2 );
  assert property( WDQ_pr_r_flag == 0 || WDQ_pr_PREV_VAL1 == WDQ_pr_PREV_VAL2 );
  assert property( WE_FF_r_flag == 0 || WE_FF_PREV_VAL1 == WE_FF_PREV_VAL2 );
  assert property( WE_LATB_r_flag == 0 || WE_LATB_PREV_VAL1 == WE_LATB_PREV_VAL2 );
  assert property( dout_r_flag == 0 || dout_PREV_VAL1 == dout_PREV_VAL2 );
endmodule
