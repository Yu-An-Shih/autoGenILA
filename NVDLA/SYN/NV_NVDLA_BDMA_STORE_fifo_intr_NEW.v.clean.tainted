  logic _00_;
  logic _00__T ;
  logic _00__R ;
  logic _00__C ;
  logic _00__X ;
  logic [13:0] _00__S ;
  logic _01_;
  logic _01__T ;
  logic _01__R ;
  logic _01__C ;
  logic _01__X ;
  logic [13:0] _01__S ;
  logic _02_;
  logic _02__T ;
  logic _02__R ;
  logic _02__C ;
  logic _02__X ;
  logic [13:0] _02__S ;
  logic _03_;
  logic _03__T ;
  logic _03__R ;
  logic _03__C ;
  logic _03__X ;
  logic [13:0] _03__S ;
  logic _04_;
  logic _04__T ;
  logic _04__R ;
  logic _04__C ;
  logic _04__X ;
  logic [13:0] _04__S ;
  logic _05_;
  logic _05__T ;
  logic _05__R ;
  logic _05__C ;
  logic _05__X ;
  logic [13:0] _05__S ;
  logic _06_;
  logic _06__T ;
  logic _06__R ;
  logic _06__C ;
  logic _06__X ;
  logic [13:0] _06__S ;
  logic _07_;
  logic _07__T ;
  logic _07__R ;
  logic _07__C ;
  logic _07__X ;
  logic [13:0] _07__S ;
  logic _08_;
  logic _08__T ;
  logic _08__R ;
  logic _08__C ;
  logic _08__X ;
  logic [13:0] _08__S ;
  logic _09_;
  logic _09__T ;
  logic _09__R ;
  logic _09__C ;
  logic _09__X ;
  logic [13:0] _09__S ;
  logic _10_;
  logic _10__T ;
  logic _10__R ;
  logic _10__C ;
  logic _10__X ;
  logic [13:0] _10__S ;
  logic _11_;
  logic _11__T ;
  logic _11__R ;
  logic _11__C ;
  logic _11__X ;
  logic [13:0] _11__S ;
  logic _12_;
  logic _12__T ;
  logic _12__R ;
  logic _12__C ;
  logic _12__X ;
  logic [13:0] _12__S ;
  logic _13_;
  logic _13__T ;
  logic _13__R ;
  logic _13__C ;
  logic _13__X ;
  logic [13:0] _13__S ;
  logic _14_;
  logic _14__T ;
  logic _14__R ;
  logic _14__C ;
  logic _14__X ;
  logic [13:0] _14__S ;
  logic _15_;
  logic _15__T ;
  logic _15__R ;
  logic _15__C ;
  logic _15__X ;
  logic [13:0] _15__S ;
  logic _16_;
  logic _16__T ;
  logic _16__R ;
  logic _16__C ;
  logic _16__X ;
  logic [13:0] _16__S ;
  logic _17_;
  logic _17__T ;
  logic _17__R ;
  logic _17__C ;
  logic _17__X ;
  logic [13:0] _17__S ;
  logic _18_;
  logic _18__T ;
  logic _18__R ;
  logic _18__C ;
  logic _18__X ;
  logic [13:0] _18__S ;
  output fifo_intr_rd_pd;
  logic fifo_intr_rd_pd ;
  output fifo_intr_rd_pd_T ;
  logic fifo_intr_rd_pd_T ;
  logic fifo_intr_rd_pd_R ;
  logic fifo_intr_rd_pd_C ;
  logic fifo_intr_rd_pd_X ;
  logic [13:0] fifo_intr_rd_pd_S ;
  input fifo_intr_rd_pd_R0 ;
  input fifo_intr_rd_pd_C0 ;
  input fifo_intr_rd_pd_X0 ;
  output [13:0] fifo_intr_rd_pd_S ;
  logic fifo_intr_rd_pd;
  logic  fifo_intr_rd_pd_T ;
  logic  fifo_intr_rd_pd_PREV_VAL1 ;
  logic  fifo_intr_rd_pd_PREV_VAL2 ;
  logic fifo_intr_rd_pd_t_flag ;
  logic fifo_intr_rd_pd_r_flag ;
  assign fifo_intr_rd_pd_S = 760 ;
  logic fifo_intr_rd_pd_o;
  logic  fifo_intr_rd_pd_o_T ;
  logic  fifo_intr_rd_pd_o_PREV_VAL1 ;
  logic  fifo_intr_rd_pd_o_PREV_VAL2 ;
  logic  fifo_intr_rd_pd_o_R ;
  logic  fifo_intr_rd_pd_o_X ;
  logic  fifo_intr_rd_pd_o_C ;
  logic [13:0] fifo_intr_rd_pd_o_S ;
  logic fifo_intr_rd_pd_o_t_flag ;
  logic fifo_intr_rd_pd_o_r_flag ;
  assign fifo_intr_rd_pd_o_S = 761 ;
  logic fifo_intr_rd_pd_p;
  logic fifo_intr_rd_pd_p_T ;
  logic fifo_intr_rd_pd_p_R ;
  logic fifo_intr_rd_pd_p_C ;
  logic fifo_intr_rd_pd_p_X ;
  logic [13:0] fifo_intr_rd_pd_p_S ;
  input fifo_intr_rd_prdy;
  input fifo_intr_rd_prdy_T ;
  input [13:0] fifo_intr_rd_prdy_S ;
  output fifo_intr_rd_prdy_R ;
  output fifo_intr_rd_prdy_X ;
  output fifo_intr_rd_prdy_C ;
  logic fifo_intr_rd_prdy_d;
  logic  fifo_intr_rd_prdy_d_T ;
  logic  fifo_intr_rd_prdy_d_PREV_VAL1 ;
  logic  fifo_intr_rd_prdy_d_PREV_VAL2 ;
  logic  fifo_intr_rd_prdy_d_R ;
  logic  fifo_intr_rd_prdy_d_X ;
  logic  fifo_intr_rd_prdy_d_C ;
  logic [13:0] fifo_intr_rd_prdy_d_S ;
  logic fifo_intr_rd_prdy_d_t_flag ;
  logic fifo_intr_rd_prdy_d_r_flag ;
  assign fifo_intr_rd_prdy_d_S = 762 ;
  logic fifo_intr_rd_prdy_d_o;
  logic fifo_intr_rd_prdy_d_o_T ;
  logic fifo_intr_rd_prdy_d_o_R ;
  logic fifo_intr_rd_prdy_d_o_C ;
  logic fifo_intr_rd_prdy_d_o_X ;
  logic [13:0] fifo_intr_rd_prdy_d_o_S ;
  output fifo_intr_rd_pvld;
  logic fifo_intr_rd_pvld ;
  output fifo_intr_rd_pvld_T ;
  logic fifo_intr_rd_pvld_T ;
  logic fifo_intr_rd_pvld_R ;
  logic fifo_intr_rd_pvld_C ;
  logic fifo_intr_rd_pvld_X ;
  logic [13:0] fifo_intr_rd_pvld_S ;
  input fifo_intr_rd_pvld_R0 ;
  input fifo_intr_rd_pvld_C0 ;
  input fifo_intr_rd_pvld_X0 ;
  output [13:0] fifo_intr_rd_pvld_S ;
  logic fifo_intr_rd_pvld_int;
  logic  fifo_intr_rd_pvld_int_T ;
  logic  fifo_intr_rd_pvld_int_PREV_VAL1 ;
  logic  fifo_intr_rd_pvld_int_PREV_VAL2 ;
  logic  fifo_intr_rd_pvld_int_R ;
  logic  fifo_intr_rd_pvld_int_X ;
  logic  fifo_intr_rd_pvld_int_C ;
  logic [13:0] fifo_intr_rd_pvld_int_S ;
  logic fifo_intr_rd_pvld_int_t_flag ;
  logic fifo_intr_rd_pvld_int_r_flag ;
  assign fifo_intr_rd_pvld_int_S = 763 ;
  logic fifo_intr_rd_pvld_int_d;
  logic  fifo_intr_rd_pvld_int_d_T ;
  logic  fifo_intr_rd_pvld_int_d_PREV_VAL1 ;
  logic  fifo_intr_rd_pvld_int_d_PREV_VAL2 ;
  logic  fifo_intr_rd_pvld_int_d_R ;
  logic  fifo_intr_rd_pvld_int_d_X ;
  logic  fifo_intr_rd_pvld_int_d_C ;
  logic [13:0] fifo_intr_rd_pvld_int_d_S ;
  logic fifo_intr_rd_pvld_int_d_t_flag ;
  logic fifo_intr_rd_pvld_int_d_r_flag ;
  assign fifo_intr_rd_pvld_int_d_S = 764 ;
  logic fifo_intr_rd_pvld_int_o;
  logic  fifo_intr_rd_pvld_int_o_T ;
  logic  fifo_intr_rd_pvld_int_o_PREV_VAL1 ;
  logic  fifo_intr_rd_pvld_int_o_PREV_VAL2 ;
  logic  fifo_intr_rd_pvld_int_o_R ;
  logic  fifo_intr_rd_pvld_int_o_X ;
  logic  fifo_intr_rd_pvld_int_o_C ;
  logic [13:0] fifo_intr_rd_pvld_int_o_S ;
  logic fifo_intr_rd_pvld_int_o_t_flag ;
  logic fifo_intr_rd_pvld_int_o_r_flag ;
  assign fifo_intr_rd_pvld_int_o_S = 765 ;
  logic fifo_intr_rd_pvld_o;
  logic fifo_intr_rd_pvld_o_T ;
  logic fifo_intr_rd_pvld_o_R ;
  logic fifo_intr_rd_pvld_o_C ;
  logic fifo_intr_rd_pvld_o_X ;
  logic [13:0] fifo_intr_rd_pvld_o_S ;
  logic fifo_intr_rd_pvld_p;
  logic fifo_intr_rd_pvld_p_T ;
  logic fifo_intr_rd_pvld_p_R ;
  logic fifo_intr_rd_pvld_p_C ;
  logic fifo_intr_rd_pvld_p_X ;
  logic [13:0] fifo_intr_rd_pvld_p_S ;
  output fifo_intr_wr_idle;
  logic fifo_intr_wr_idle ;
  output fifo_intr_wr_idle_T ;
  logic fifo_intr_wr_idle_T ;
  logic fifo_intr_wr_idle_R ;
  logic fifo_intr_wr_idle_C ;
  logic fifo_intr_wr_idle_X ;
  logic [13:0] fifo_intr_wr_idle_S ;
  input fifo_intr_wr_idle_R0 ;
  input fifo_intr_wr_idle_C0 ;
  input fifo_intr_wr_idle_X0 ;
  output [13:0] fifo_intr_wr_idle_S ;
  logic fifo_intr_wr_idle_d0;
  logic fifo_intr_wr_idle_d0_T ;
  logic fifo_intr_wr_idle_d0_R ;
  logic fifo_intr_wr_idle_d0_C ;
  logic fifo_intr_wr_idle_d0_X ;
  logic [13:0] fifo_intr_wr_idle_d0_S ;
  input fifo_intr_wr_pd;
  input fifo_intr_wr_pd_T ;
  input [13:0] fifo_intr_wr_pd_S ;
  output fifo_intr_wr_pd_R ;
  output fifo_intr_wr_pd_X ;
  output fifo_intr_wr_pd_C ;
  input fifo_intr_wr_pvld;
  input fifo_intr_wr_pvld_T ;
  input [13:0] fifo_intr_wr_pvld_S ;
  output fifo_intr_wr_pvld_R ;
  output fifo_intr_wr_pvld_X ;
  output fifo_intr_wr_pvld_C ;
  input nvdla_core_clk;
  input nvdla_core_clk_T ;
  input [13:0] nvdla_core_clk_S ;
  output nvdla_core_clk_R ;
  output nvdla_core_clk_X ;
  output nvdla_core_clk_C ;
  logic nvdla_core_clk_mgated;
  logic nvdla_core_clk_mgated_T ;
  logic nvdla_core_clk_mgated_R ;
  logic nvdla_core_clk_mgated_C ;
  logic nvdla_core_clk_mgated_X ;
  logic [13:0] nvdla_core_clk_mgated_S ;
  logic nvdla_core_clk_mgated_enable;
  logic nvdla_core_clk_mgated_enable_T ;
  logic nvdla_core_clk_mgated_enable_R ;
  logic nvdla_core_clk_mgated_enable_C ;
  logic nvdla_core_clk_mgated_enable_X ;
  logic [13:0] nvdla_core_clk_mgated_enable_S ;
  input nvdla_core_rstn;
  input nvdla_core_rstn_T ;
  input [13:0] nvdla_core_rstn_S ;
  output nvdla_core_rstn_R ;
  output nvdla_core_rstn_X ;
  output nvdla_core_rstn_C ;
  input [31:0] pwrbus_ram_pd;
  input [31:0] pwrbus_ram_pd_T ;
  input [13:0] pwrbus_ram_pd_S ;
  output [31:0] pwrbus_ram_pd_R ;
  output [31:0] pwrbus_ram_pd_X ;
  output [31:0] pwrbus_ram_pd_C ;
  logic rd_idle;
  logic rd_idle_T ;
  logic rd_idle_R ;
  logic rd_idle_C ;
  logic rd_idle_X ;
  logic [13:0] rd_idle_S ;
  logic rd_popping;
  logic rd_popping_T ;
  logic rd_popping_R ;
  logic rd_popping_C ;
  logic rd_popping_X ;
  logic [13:0] rd_popping_S ;
  logic rd_req_next;
  logic rd_req_next_T ;
  logic rd_req_next_R ;
  logic rd_req_next_C ;
  logic rd_req_next_X ;
  logic [13:0] rd_req_next_S ;
  logic rd_req_next_o;
  logic rd_req_next_o_T ;
  logic rd_req_next_o_R ;
  logic rd_req_next_o_C ;
  logic rd_req_next_o_X ;
  logic [13:0] rd_req_next_o_S ;
  assign _03_ = fifo_intr_rd_pvld_int_o && _07_;
  assign _03__S = 0 ;
  logic [0:0] fifo_intr_rd_pvld_int_o_C0 ;
  logic [0:0] fifo_intr_rd_pvld_int_o_R0 ;
  logic [0:0] fifo_intr_rd_pvld_int_o_X0 ;
  logic [0:0] _07__C0 ;
  logic [0:0] _07__R0 ;
  logic [0:0] _07__X0 ;
  assign _03__T = fifo_intr_rd_pvld_int_o_T | _07__T ;
  assign fifo_intr_rd_pvld_int_o_C0 = _03__C ;
  assign fifo_intr_rd_pvld_int_o_X0 = _03__X ;
  assign _07__C0 = _03__C ;
  assign _07__X0 = _03__X ;
  assign fifo_intr_rd_pvld_int_o_R0 = ( _03__R | _03__C & _07__T ) & { 1{ _07_ != 0 }} ;
  assign _07__R0 = ( _03__R | _03__C & fifo_intr_rd_pvld_int_o_T ) & { 1{ fifo_intr_rd_pvld_int_o != 0 }} ;
  assign rd_popping = fifo_intr_wr_pvld && _11_;
  assign rd_popping_S = 0 ;
  logic [0:0] fifo_intr_wr_pvld_C0 ;
  logic [0:0] fifo_intr_wr_pvld_R0 ;
  logic [0:0] fifo_intr_wr_pvld_X0 ;
  logic [0:0] _11__C0 ;
  logic [0:0] _11__R0 ;
  logic [0:0] _11__X0 ;
  assign rd_popping_T = fifo_intr_wr_pvld_T | _11__T ;
  assign fifo_intr_wr_pvld_C0 = rd_popping_C ;
  assign fifo_intr_wr_pvld_X0 = rd_popping_X ;
  assign _11__C0 = rd_popping_C ;
  assign _11__X0 = rd_popping_X ;
  assign fifo_intr_wr_pvld_R0 = ( rd_popping_R | rd_popping_C & _11__T ) & { 1{ _11_ != 0 }} ;
  assign _11__R0 = ( rd_popping_R | rd_popping_C & fifo_intr_wr_pvld_T ) & { 1{ fifo_intr_wr_pvld != 0 }} ;
  assign _04_ = fifo_intr_rd_pvld_int && rd_req_next_o;
  assign _04__S = 0 ;
  logic [0:0] fifo_intr_rd_pvld_int_C0 ;
  logic [0:0] fifo_intr_rd_pvld_int_R0 ;
  logic [0:0] fifo_intr_rd_pvld_int_X0 ;
  logic [0:0] rd_req_next_o_C0 ;
  logic [0:0] rd_req_next_o_R0 ;
  logic [0:0] rd_req_next_o_X0 ;
  assign _04__T = fifo_intr_rd_pvld_int_T | rd_req_next_o_T ;
  assign fifo_intr_rd_pvld_int_C0 = _04__C ;
  assign fifo_intr_rd_pvld_int_X0 = _04__X ;
  assign rd_req_next_o_C0 = _04__C ;
  assign rd_req_next_o_X0 = _04__X ;
  assign fifo_intr_rd_pvld_int_R0 = ( _04__R | _04__C & rd_req_next_o_T ) & { 1{ rd_req_next_o != 0 }} ;
  assign rd_req_next_o_R0 = ( _04__R | _04__C & fifo_intr_rd_pvld_int_T ) & { 1{ fifo_intr_rd_pvld_int != 0 }} ;
  assign _05_ = _04_ && rd_popping;
  assign _05__S = 0 ;
  logic [0:0] _04__C0 ;
  logic [0:0] _04__R0 ;
  logic [0:0] _04__X0 ;
  logic [0:0] rd_popping_C0 ;
  logic [0:0] rd_popping_R0 ;
  logic [0:0] rd_popping_X0 ;
  assign _05__T = _04__T | rd_popping_T ;
  assign _04__C0 = _05__C ;
  assign _04__X0 = _05__X ;
  assign rd_popping_C0 = _05__C ;
  assign rd_popping_X0 = _05__X ;
  assign _04__R0 = ( _05__R | _05__C & rd_popping_T ) & { 1{ rd_popping != 0 }} ;
  assign rd_popping_R0 = ( _05__R | _05__C & _04__T ) & { 1{ _04_ != 0 }} ;
  assign _06_ = fifo_intr_rd_pvld_int_o && fifo_intr_rd_pvld_int_d;
  assign _06__S = 0 ;
  logic [0:0] fifo_intr_rd_pvld_int_o_C1 ;
  logic [0:0] fifo_intr_rd_pvld_int_o_R1 ;
  logic [0:0] fifo_intr_rd_pvld_int_o_X1 ;
  logic [0:0] fifo_intr_rd_pvld_int_d_C0 ;
  logic [0:0] fifo_intr_rd_pvld_int_d_R0 ;
  logic [0:0] fifo_intr_rd_pvld_int_d_X0 ;
  assign _06__T = fifo_intr_rd_pvld_int_o_T | fifo_intr_rd_pvld_int_d_T ;
  assign fifo_intr_rd_pvld_int_o_C1 = _06__C ;
  assign fifo_intr_rd_pvld_int_o_X1 = _06__X ;
  assign fifo_intr_rd_pvld_int_d_C0 = _06__C ;
  assign fifo_intr_rd_pvld_int_d_X0 = _06__X ;
  assign fifo_intr_rd_pvld_int_o_R1 = ( _06__R | _06__C & fifo_intr_rd_pvld_int_d_T ) & { 1{ fifo_intr_rd_pvld_int_d != 0 }} ;
  assign fifo_intr_rd_pvld_int_d_R0 = ( _06__R | _06__C & fifo_intr_rd_pvld_int_o_T ) & { 1{ fifo_intr_rd_pvld_int_o != 0 }} ;
  assign _07_ = _06_ && _12_;
  assign _07__S = 0 ;
  logic [0:0] _06__C0 ;
  logic [0:0] _06__R0 ;
  logic [0:0] _06__X0 ;
  logic [0:0] _12__C0 ;
  logic [0:0] _12__R0 ;
  logic [0:0] _12__X0 ;
  assign _07__T = _06__T | _12__T ;
  assign _06__C0 = _07__C ;
  assign _06__X0 = _07__X ;
  assign _12__C0 = _07__C ;
  assign _12__X0 = _07__X ;
  assign _06__R0 = ( _07__R | _07__C & _12__T ) & { 1{ _12_ != 0 }} ;
  assign _12__R0 = ( _07__R | _07__C & _06__T ) & { 1{ _06_ != 0 }} ;
  assign _08_ = rd_req_next && _16_;
  assign _08__S = 0 ;
  logic [0:0] rd_req_next_C0 ;
  logic [0:0] rd_req_next_R0 ;
  logic [0:0] rd_req_next_X0 ;
  logic [0:0] _16__C0 ;
  logic [0:0] _16__R0 ;
  logic [0:0] _16__X0 ;
  assign _08__T = rd_req_next_T | _16__T ;
  assign rd_req_next_C0 = _08__C ;
  assign rd_req_next_X0 = _08__X ;
  assign _16__C0 = _08__C ;
  assign _16__X0 = _08__X ;
  assign rd_req_next_R0 = ( _08__R | _08__C & _16__T ) & { 1{ _16_ != 0 }} ;
  assign _16__R0 = ( _08__R | _08__C & rd_req_next_T ) & { 1{ rd_req_next != 0 }} ;
  assign rd_idle = _14_ && _13_;
  assign rd_idle_S = 0 ;
  logic [0:0] _14__C0 ;
  logic [0:0] _14__R0 ;
  logic [0:0] _14__X0 ;
  logic [0:0] _13__C0 ;
  logic [0:0] _13__R0 ;
  logic [0:0] _13__X0 ;
  assign rd_idle_T = _14__T | _13__T ;
  assign _14__C0 = rd_idle_C ;
  assign _14__X0 = rd_idle_X ;
  assign _13__C0 = rd_idle_C ;
  assign _13__X0 = rd_idle_X ;
  assign _14__R0 = ( rd_idle_R | rd_idle_C & _13__T ) & { 1{ _13_ != 0 }} ;
  assign _13__R0 = ( rd_idle_R | rd_idle_C & _14__T ) & { 1{ _14_ != 0 }} ;
  assign fifo_intr_wr_idle = _15_ && rd_idle;
  assign fifo_intr_wr_idle_S = 0 ;
  logic [0:0] _15__C0 ;
  logic [0:0] _15__R0 ;
  logic [0:0] _15__X0 ;
  logic [0:0] rd_idle_C0 ;
  logic [0:0] rd_idle_R0 ;
  logic [0:0] rd_idle_X0 ;
  assign fifo_intr_wr_idle_T = _15__T | rd_idle_T ;
  assign _15__C0 = fifo_intr_wr_idle_C ;
  assign _15__X0 = fifo_intr_wr_idle_X ;
  assign rd_idle_C0 = fifo_intr_wr_idle_C ;
  assign rd_idle_X0 = fifo_intr_wr_idle_X ;
  assign _15__R0 = ( fifo_intr_wr_idle_R | fifo_intr_wr_idle_C & rd_idle_T ) & { 1{ rd_idle != 0 }} ;
  assign rd_idle_R0 = ( fifo_intr_wr_idle_R | fifo_intr_wr_idle_C & _15__T ) & { 1{ _15_ != 0 }} ;
  assign _09_ = fifo_intr_rd_pvld_int && fifo_intr_rd_prdy_d;
  assign _09__S = 0 ;
  logic [0:0] fifo_intr_rd_pvld_int_C1 ;
  logic [0:0] fifo_intr_rd_pvld_int_R1 ;
  logic [0:0] fifo_intr_rd_pvld_int_X1 ;
  logic [0:0] fifo_intr_rd_prdy_d_C0 ;
  logic [0:0] fifo_intr_rd_prdy_d_R0 ;
  logic [0:0] fifo_intr_rd_prdy_d_X0 ;
  assign _09__T = fifo_intr_rd_pvld_int_T | fifo_intr_rd_prdy_d_T ;
  assign fifo_intr_rd_pvld_int_C1 = _09__C ;
  assign fifo_intr_rd_pvld_int_X1 = _09__X ;
  assign fifo_intr_rd_prdy_d_C0 = _09__C ;
  assign fifo_intr_rd_prdy_d_X0 = _09__X ;
  assign fifo_intr_rd_pvld_int_R1 = ( _09__R | _09__C & fifo_intr_rd_prdy_d_T ) & { 1{ fifo_intr_rd_prdy_d != 0 }} ;
  assign fifo_intr_rd_prdy_d_R0 = ( _09__R | _09__C & fifo_intr_rd_pvld_int_T ) & { 1{ fifo_intr_rd_pvld_int != 0 }} ;
  assign _10_ = fifo_intr_rd_pvld_int_o && fifo_intr_rd_prdy_d_o;
  assign _10__S = 0 ;
  logic [0:0] fifo_intr_rd_pvld_int_o_C2 ;
  logic [0:0] fifo_intr_rd_pvld_int_o_R2 ;
  logic [0:0] fifo_intr_rd_pvld_int_o_X2 ;
  logic [0:0] fifo_intr_rd_prdy_d_o_C0 ;
  logic [0:0] fifo_intr_rd_prdy_d_o_R0 ;
  logic [0:0] fifo_intr_rd_prdy_d_o_X0 ;
  assign _10__T = fifo_intr_rd_pvld_int_o_T | fifo_intr_rd_prdy_d_o_T ;
  assign fifo_intr_rd_pvld_int_o_C2 = _10__C ;
  assign fifo_intr_rd_pvld_int_o_X2 = _10__X ;
  assign fifo_intr_rd_prdy_d_o_C0 = _10__C ;
  assign fifo_intr_rd_prdy_d_o_X0 = _10__X ;
  assign fifo_intr_rd_pvld_int_o_R2 = ( _10__R | _10__C & fifo_intr_rd_prdy_d_o_T ) & { 1{ fifo_intr_rd_prdy_d_o != 0 }} ;
  assign fifo_intr_rd_prdy_d_o_R0 = ( _10__R | _10__C & fifo_intr_rd_pvld_int_o_T ) & { 1{ fifo_intr_rd_pvld_int_o != 0 }} ;
  assign _11_ = ! _03_;
  logic [0:0] _03__C0 ;
  logic [0:0] _03__R0 ;
  logic [0:0] _03__X0 ;
  assign _11__T = | _03__T ;
  assign _03__C0 = { 1{ _11__C }} ;
  assign _03__X0 = { 1{ _11__X }} ;
  assign _03__R0 = { 1{ _11__R }} ;
  assign _11__S = 0 ;
  assign _12_ = ! fifo_intr_rd_prdy_d;
  logic [0:0] fifo_intr_rd_prdy_d_C1 ;
  logic [0:0] fifo_intr_rd_prdy_d_R1 ;
  logic [0:0] fifo_intr_rd_prdy_d_X1 ;
  assign _12__T = | fifo_intr_rd_prdy_d_T ;
  assign fifo_intr_rd_prdy_d_C1 = { 1{ _12__C }} ;
  assign fifo_intr_rd_prdy_d_X1 = { 1{ _12__X }} ;
  assign fifo_intr_rd_prdy_d_R1 = { 1{ _12__R }} ;
  assign _12__S = 0 ;
  assign fifo_intr_rd_prdy_d_o = ! _07_;
  logic [0:0] _07__C1 ;
  logic [0:0] _07__R1 ;
  logic [0:0] _07__X1 ;
  assign fifo_intr_rd_prdy_d_o_T = | _07__T ;
  assign _07__C1 = { 1{ fifo_intr_rd_prdy_d_o_C }} ;
  assign _07__X1 = { 1{ fifo_intr_rd_prdy_d_o_X }} ;
  assign _07__R1 = { 1{ fifo_intr_rd_prdy_d_o_R }} ;
  assign fifo_intr_rd_prdy_d_o_S = 0 ;
  assign _13_ = ! fifo_intr_rd_pvld_int;
  logic [0:0] fifo_intr_rd_pvld_int_C2 ;
  logic [0:0] fifo_intr_rd_pvld_int_R2 ;
  logic [0:0] fifo_intr_rd_pvld_int_X2 ;
  assign _13__T = | fifo_intr_rd_pvld_int_T ;
  assign fifo_intr_rd_pvld_int_C2 = { 1{ _13__C }} ;
  assign fifo_intr_rd_pvld_int_X2 = { 1{ _13__X }} ;
  assign fifo_intr_rd_pvld_int_R2 = { 1{ _13__R }} ;
  assign _13__S = 0 ;
  assign _14_ = ! fifo_intr_rd_pvld_int_o;
  logic [0:0] fifo_intr_rd_pvld_int_o_C3 ;
  logic [0:0] fifo_intr_rd_pvld_int_o_R3 ;
  logic [0:0] fifo_intr_rd_pvld_int_o_X3 ;
  assign _14__T = | fifo_intr_rd_pvld_int_o_T ;
  assign fifo_intr_rd_pvld_int_o_C3 = { 1{ _14__C }} ;
  assign fifo_intr_rd_pvld_int_o_X3 = { 1{ _14__X }} ;
  assign fifo_intr_rd_pvld_int_o_R3 = { 1{ _14__R }} ;
  assign _14__S = 0 ;
  assign _15_ = ! fifo_intr_wr_pvld;
  logic [0:0] fifo_intr_wr_pvld_C1 ;
  logic [0:0] fifo_intr_wr_pvld_R1 ;
  logic [0:0] fifo_intr_wr_pvld_X1 ;
  assign _15__T = | fifo_intr_wr_pvld_T ;
  assign fifo_intr_wr_pvld_C1 = { 1{ _15__C }} ;
  assign fifo_intr_wr_pvld_X1 = { 1{ _15__X }} ;
  assign fifo_intr_wr_pvld_R1 = { 1{ _15__R }} ;
  assign _15__S = 0 ;
  assign rd_req_next_o = fifo_intr_wr_pvld || _03_;
  assign rd_req_next_o_S = 0 ;
  logic [0:0] fifo_intr_wr_pvld_C2 ;
  logic [0:0] fifo_intr_wr_pvld_R2 ;
  logic [0:0] fifo_intr_wr_pvld_X2 ;
  logic [0:0] _03__C1 ;
  logic [0:0] _03__R1 ;
  logic [0:0] _03__X1 ;
  assign rd_req_next_o_T = fifo_intr_wr_pvld_T | _03__T ;
  assign fifo_intr_wr_pvld_C2 = rd_req_next_o_C ;
  assign fifo_intr_wr_pvld_X2 = rd_req_next_o_X ;
  assign _03__C1 = rd_req_next_o_C ;
  assign _03__X1 = rd_req_next_o_X ;
  assign fifo_intr_wr_pvld_R2 = ( rd_req_next_o_R | rd_req_next_o_C & _03__T ) & { 1{ _03_ == 0 }} ;
  assign _03__R1 = ( rd_req_next_o_R | rd_req_next_o_C & fifo_intr_wr_pvld_T ) & { 1{ fifo_intr_wr_pvld == 0 }} ;
  assign _16_ = _13_ || fifo_intr_rd_prdy;
  assign _16__S = 0 ;
  logic [0:0] _13__C1 ;
  logic [0:0] _13__R1 ;
  logic [0:0] _13__X1 ;
  logic [0:0] fifo_intr_rd_prdy_C0 ;
  logic [0:0] fifo_intr_rd_prdy_R0 ;
  logic [0:0] fifo_intr_rd_prdy_X0 ;
  assign _16__T = _13__T | fifo_intr_rd_prdy_T ;
  assign _13__C1 = _16__C ;
  assign _13__X1 = _16__X ;
  assign fifo_intr_rd_prdy_C0 = _16__C ;
  assign fifo_intr_rd_prdy_X0 = _16__X ;
  assign _13__R1 = ( _16__R | _16__C & fifo_intr_rd_prdy_T ) & { 1{ fifo_intr_rd_prdy == 0 }} ;
  assign fifo_intr_rd_prdy_R0 = ( _16__R | _16__C & _13__T ) & { 1{ _13_ == 0 }} ;
  assign _17_ = fifo_intr_wr_pvld || _09_;
  assign _17__S = 0 ;
  logic [0:0] fifo_intr_wr_pvld_C3 ;
  logic [0:0] fifo_intr_wr_pvld_R3 ;
  logic [0:0] fifo_intr_wr_pvld_X3 ;
  logic [0:0] _09__C0 ;
  logic [0:0] _09__R0 ;
  logic [0:0] _09__X0 ;
  assign _17__T = fifo_intr_wr_pvld_T | _09__T ;
  assign fifo_intr_wr_pvld_C3 = _17__C ;
  assign fifo_intr_wr_pvld_X3 = _17__X ;
  assign _09__C0 = _17__C ;
  assign _09__X0 = _17__X ;
  assign fifo_intr_wr_pvld_R3 = ( _17__R | _17__C & _09__T ) & { 1{ _09_ == 0 }} ;
  assign _09__R0 = ( _17__R | _17__C & fifo_intr_wr_pvld_T ) & { 1{ fifo_intr_wr_pvld == 0 }} ;
  assign nvdla_core_clk_mgated_enable = _17_ || _10_;
  assign nvdla_core_clk_mgated_enable_S = 0 ;
  logic [0:0] _17__C0 ;
  logic [0:0] _17__R0 ;
  logic [0:0] _17__X0 ;
  logic [0:0] _10__C0 ;
  logic [0:0] _10__R0 ;
  logic [0:0] _10__X0 ;
  assign nvdla_core_clk_mgated_enable_T = _17__T | _10__T ;
  assign _17__C0 = nvdla_core_clk_mgated_enable_C ;
  assign _17__X0 = nvdla_core_clk_mgated_enable_X ;
  assign _10__C0 = nvdla_core_clk_mgated_enable_C ;
  assign _10__X0 = nvdla_core_clk_mgated_enable_X ;
  assign _17__R0 = ( nvdla_core_clk_mgated_enable_R | nvdla_core_clk_mgated_enable_C & _10__T ) & { 1{ _10_ == 0 }} ;
  assign _10__R0 = ( nvdla_core_clk_mgated_enable_R | nvdla_core_clk_mgated_enable_C & _17__T ) & { 1{ _17_ == 0 }} ;
  always @(posedge nvdla_core_clk)
      fifo_intr_rd_pd <= _00_;
  logic [0:0] _00__X0 ;
  logic [0:0] _00__R0 ;
  logic [0:0] _00__C0 ;
  assign _00__X0 = { 1{ fifo_intr_rd_pd_S != _00__S }} ;
  assign _00__R0 = 0 ;
  assign _00__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      fifo_intr_rd_pd_T 		<= !nvdla_core_rstn ? 0 : ( _00__T & _00__X0 );
  always @( posedge nvdla_core_clk )
      fifo_intr_rd_pd_t_flag 	<= !nvdla_core_rstn ? 0 : fifo_intr_rd_pd_t_flag ? 1 : | _00__T & ( | _00__X0 );
  always @( posedge nvdla_core_clk )
      fifo_intr_rd_pd_r_flag 	<= !nvdla_core_rstn ? 0 : fifo_intr_rd_pd_r_flag ? 1 : fifo_intr_rd_pd_t_flag ? 0 : ( | fifo_intr_rd_pd_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      fifo_intr_rd_pvld_int <= 1'b0;
    else
      fifo_intr_rd_pvld_int <= _02_;
  logic [0:0] _02__X0 ;
  logic [0:0] _02__R0 ;
  logic [0:0] _02__C0 ;
  assign _02__X0 = { 1{ fifo_intr_rd_pvld_int_S != _02__S }} ;
  assign _02__R0 = 0 ;
  assign _02__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      fifo_intr_rd_pvld_int_T 		<= !nvdla_core_rstn ? 0 : ( _02__T & _02__X0 );
  always @( posedge nvdla_core_clk )
      fifo_intr_rd_pvld_int_t_flag 	<= !nvdla_core_rstn ? 0 : fifo_intr_rd_pvld_int_t_flag ? 1 : | _02__T & ( | _02__X0 );
  always @( posedge nvdla_core_clk )
      fifo_intr_rd_pvld_int_r_flag 	<= !nvdla_core_rstn ? 0 : fifo_intr_rd_pvld_int_r_flag ? 1 : fifo_intr_rd_pvld_int_t_flag ? 0 : ( | fifo_intr_rd_pvld_int_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      fifo_intr_rd_pvld_int_d <= 1'b0;
    else
      fifo_intr_rd_pvld_int_d <= fifo_intr_rd_pvld_int;
  logic [0:0] fifo_intr_rd_pvld_int_X3 ;
  logic [0:0] fifo_intr_rd_pvld_int_R3 ;
  logic [0:0] fifo_intr_rd_pvld_int_C3 ;
  assign fifo_intr_rd_pvld_int_X3 = { 1{ fifo_intr_rd_pvld_int_d_S != fifo_intr_rd_pvld_int_S }} ;
  assign fifo_intr_rd_pvld_int_R3 = 0 ;
  assign fifo_intr_rd_pvld_int_C3 = 0 ;
  always @( posedge nvdla_core_clk )
      fifo_intr_rd_pvld_int_d_T 		<= !nvdla_core_rstn ? 0 : ( fifo_intr_rd_pvld_int_T & fifo_intr_rd_pvld_int_X3 );
  always @( posedge nvdla_core_clk )
      fifo_intr_rd_pvld_int_d_t_flag 	<= !nvdla_core_rstn ? 0 : fifo_intr_rd_pvld_int_d_t_flag ? 1 : | fifo_intr_rd_pvld_int_T & ( | fifo_intr_rd_pvld_int_X3 );
  always @( posedge nvdla_core_clk )
      fifo_intr_rd_pvld_int_d_r_flag 	<= !nvdla_core_rstn ? 0 : fifo_intr_rd_pvld_int_d_r_flag ? 1 : fifo_intr_rd_pvld_int_d_t_flag ? 0 : ( | fifo_intr_rd_pvld_int_d_R ) ;
  always @(posedge nvdla_core_clk_mgated)
      fifo_intr_rd_pd_o <= _01_;
  logic [0:0] _01__X0 ;
  logic [0:0] _01__R0 ;
  logic [0:0] _01__C0 ;
  assign _01__X0 = { 1{ fifo_intr_rd_pd_o_S != _01__S }} ;
  assign _01__R0 = 0 ;
  assign _01__C0 = 0 ;
  always @( posedge nvdla_core_clk_mgated )
      fifo_intr_rd_pd_o_T 		<= !nvdla_core_rstn ? 0 : ( _01__T & _01__X0 );
  always @( posedge nvdla_core_clk_mgated )
      fifo_intr_rd_pd_o_t_flag 	<= !nvdla_core_rstn ? 0 : fifo_intr_rd_pd_o_t_flag ? 1 : | _01__T & ( | _01__X0 );
  always @( posedge nvdla_core_clk_mgated )
      fifo_intr_rd_pd_o_r_flag 	<= !nvdla_core_rstn ? 0 : fifo_intr_rd_pd_o_r_flag ? 1 : fifo_intr_rd_pd_o_t_flag ? 0 : ( | fifo_intr_rd_pd_o_R ) ;
  always @(posedge nvdla_core_clk_mgated or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      fifo_intr_rd_pvld_int_o <= 1'b0;
    else
      fifo_intr_rd_pvld_int_o <= rd_req_next_o;
  logic [0:0] rd_req_next_o_X1 ;
  logic [0:0] rd_req_next_o_R1 ;
  logic [0:0] rd_req_next_o_C1 ;
  assign rd_req_next_o_X1 = { 1{ fifo_intr_rd_pvld_int_o_S != rd_req_next_o_S }} ;
  assign rd_req_next_o_R1 = 0 ;
  assign rd_req_next_o_C1 = 0 ;
  always @( posedge nvdla_core_clk_mgated )
      fifo_intr_rd_pvld_int_o_T 		<= !nvdla_core_rstn ? 0 : ( rd_req_next_o_T & rd_req_next_o_X1 );
  always @( posedge nvdla_core_clk_mgated )
      fifo_intr_rd_pvld_int_o_t_flag 	<= !nvdla_core_rstn ? 0 : fifo_intr_rd_pvld_int_o_t_flag ? 1 : | rd_req_next_o_T & ( | rd_req_next_o_X1 );
  always @( posedge nvdla_core_clk_mgated )
      fifo_intr_rd_pvld_int_o_r_flag 	<= !nvdla_core_rstn ? 0 : fifo_intr_rd_pvld_int_o_r_flag ? 1 : fifo_intr_rd_pvld_int_o_t_flag ? 0 : ( | fifo_intr_rd_pvld_int_o_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      fifo_intr_rd_prdy_d <= 1'b1;
    else
      fifo_intr_rd_prdy_d <= fifo_intr_rd_prdy;
  logic [0:0] fifo_intr_rd_prdy_X1 ;
  logic [0:0] fifo_intr_rd_prdy_R1 ;
  logic [0:0] fifo_intr_rd_prdy_C1 ;
  assign fifo_intr_rd_prdy_X1 = { 1{ fifo_intr_rd_prdy_d_S != fifo_intr_rd_prdy_S }} ;
  assign fifo_intr_rd_prdy_R1 = 0 ;
  assign fifo_intr_rd_prdy_C1 = 0 ;
  always @( posedge nvdla_core_clk )
      fifo_intr_rd_prdy_d_T 		<= !nvdla_core_rstn ? 0 : ( fifo_intr_rd_prdy_T & fifo_intr_rd_prdy_X1 );
  always @( posedge nvdla_core_clk )
      fifo_intr_rd_prdy_d_t_flag 	<= !nvdla_core_rstn ? 0 : fifo_intr_rd_prdy_d_t_flag ? 1 : | fifo_intr_rd_prdy_T & ( | fifo_intr_rd_prdy_X1 );
  always @( posedge nvdla_core_clk )
      fifo_intr_rd_prdy_d_r_flag 	<= !nvdla_core_rstn ? 0 : fifo_intr_rd_prdy_d_r_flag ? 1 : fifo_intr_rd_prdy_d_t_flag ? 0 : ( | fifo_intr_rd_prdy_d_R ) ;
  assign _18_ = _07_ ? fifo_intr_rd_pd_o : fifo_intr_wr_pd;
  logic [0:0] _07__C2 ;
  logic [0:0] _07__R2 ;
  logic [0:0] _07__X2 ;
  assign _07__C2 = | _18__C ;
  assign _07__X2 = | _18__X ;
  assign _18__T = _07_ ? ( { 1{ _07__T  }} | fifo_intr_rd_pd_o_T ) : ( { 1{ _07__T  }} | fifo_intr_wr_pd_T );
  assign _18__S = _07_ ? fifo_intr_rd_pd_o_S : fifo_intr_wr_pd_S ;
  assign _07__R2 = ( | (_18__R | ( _18__C & ( { 1{ _07_ }} & fifo_intr_rd_pd_o_T | { 1{ !_07_ }} & fifo_intr_wr_pd_T )))) && fifo_intr_rd_pd_o != fifo_intr_wr_pd ;
  logic [0:0] fifo_intr_rd_pd_o_C0 ;
  logic [0:0] fifo_intr_rd_pd_o_R0 ;
  logic [0:0] fifo_intr_rd_pd_o_X0 ;
  assign fifo_intr_rd_pd_o_C0 = { 1{ _07_ }} ;
  assign fifo_intr_rd_pd_o_R0 = { 1{ _07_ }} & ( _18__R | ( { 1{ _07__T  }} & _18__C ));
  assign fifo_intr_rd_pd_o_X0 = { 1{ _07_ }} & _18__X ;
  logic [0:0] fifo_intr_wr_pd_C0 ;
  logic [0:0] fifo_intr_wr_pd_R0 ;
  logic [0:0] fifo_intr_wr_pd_X0 ;
  assign fifo_intr_wr_pd_C0 = { 1{ !_07_ }} ;
  assign fifo_intr_wr_pd_R0 = { 1{ !_07_ }} & ( _18__R | ( { 1{ _07__T  }} & _18__C ));
  assign fifo_intr_wr_pd_X0 = { 1{ !_07_ }} & _18__X ;
  assign _00_ = _08_ ? _18_ : fifo_intr_rd_pd;
  logic [0:0] _08__C0 ;
  logic [0:0] _08__R0 ;
  logic [0:0] _08__X0 ;
  assign _08__C0 = | _00__C ;
  assign _08__X0 = | _00__X ;
  assign _00__T = _08_ ? ( { 1{ _08__T  }} | _18__T ) : ( { 1{ _08__T  }} | fifo_intr_rd_pd_T );
  assign _00__S = _08_ ? _18__S : fifo_intr_rd_pd_S ;
  assign _08__R0 = ( | (_00__R | ( _00__C & ( { 1{ _08_ }} & _18__T | { 1{ !_08_ }} & fifo_intr_rd_pd_T )))) && _18_ != fifo_intr_rd_pd ;
  logic [0:0] _18__C0 ;
  logic [0:0] _18__R0 ;
  logic [0:0] _18__X0 ;
  assign _18__C0 = { 1{ _08_ }} ;
  assign _18__R0 = { 1{ _08_ }} & ( _00__R | ( { 1{ _08__T  }} & _00__C ));
  assign _18__X0 = { 1{ _08_ }} & _00__X ;
  logic [0:0] fifo_intr_rd_pd_C1 ;
  logic [0:0] fifo_intr_rd_pd_R1 ;
  logic [0:0] fifo_intr_rd_pd_X1 ;
  assign fifo_intr_rd_pd_C1 = { 1{ !_08_ }} ;
  assign fifo_intr_rd_pd_R1 = { 1{ !_08_ }} & ( _00__R | ( { 1{ _08__T  }} & _00__C ));
  assign fifo_intr_rd_pd_X1 = { 1{ !_08_ }} & _00__X ;
  assign _02_ = _16_ ? rd_req_next : fifo_intr_rd_pvld_int;
  logic [0:0] _16__C1 ;
  logic [0:0] _16__R1 ;
  logic [0:0] _16__X1 ;
  assign _16__C1 = | _02__C ;
  assign _16__X1 = | _02__X ;
  assign _02__T = _16_ ? ( { 1{ _16__T  }} | rd_req_next_T ) : ( { 1{ _16__T  }} | fifo_intr_rd_pvld_int_T );
  assign _02__S = _16_ ? rd_req_next_S : fifo_intr_rd_pvld_int_S ;
  assign _16__R1 = ( | (_02__R | ( _02__C & ( { 1{ _16_ }} & rd_req_next_T | { 1{ !_16_ }} & fifo_intr_rd_pvld_int_T )))) && rd_req_next != fifo_intr_rd_pvld_int ;
  logic [0:0] rd_req_next_C1 ;
  logic [0:0] rd_req_next_R1 ;
  logic [0:0] rd_req_next_X1 ;
  assign rd_req_next_C1 = { 1{ _16_ }} ;
  assign rd_req_next_R1 = { 1{ _16_ }} & ( _02__R | ( { 1{ _16__T  }} & _02__C ));
  assign rd_req_next_X1 = { 1{ _16_ }} & _02__X ;
  logic [0:0] fifo_intr_rd_pvld_int_C4 ;
  logic [0:0] fifo_intr_rd_pvld_int_R4 ;
  logic [0:0] fifo_intr_rd_pvld_int_X4 ;
  assign fifo_intr_rd_pvld_int_C4 = { 1{ !_16_ }} ;
  assign fifo_intr_rd_pvld_int_R4 = { 1{ !_16_ }} & ( _02__R | ( { 1{ _16__T  }} & _02__C ));
  assign fifo_intr_rd_pvld_int_X4 = { 1{ !_16_ }} & _02__X ;
  assign _01_ = _05_ ? fifo_intr_wr_pd : fifo_intr_rd_pd_o;
  logic [0:0] _05__C0 ;
  logic [0:0] _05__R0 ;
  logic [0:0] _05__X0 ;
  assign _05__C0 = | _01__C ;
  assign _05__X0 = | _01__X ;
  assign _01__T = _05_ ? ( { 1{ _05__T  }} | fifo_intr_wr_pd_T ) : ( { 1{ _05__T  }} | fifo_intr_rd_pd_o_T );
  assign _01__S = _05_ ? fifo_intr_wr_pd_S : fifo_intr_rd_pd_o_S ;
  assign _05__R0 = ( | (_01__R | ( _01__C & ( { 1{ _05_ }} & fifo_intr_wr_pd_T | { 1{ !_05_ }} & fifo_intr_rd_pd_o_T )))) && fifo_intr_wr_pd != fifo_intr_rd_pd_o ;
  logic [0:0] fifo_intr_wr_pd_C1 ;
  logic [0:0] fifo_intr_wr_pd_R1 ;
  logic [0:0] fifo_intr_wr_pd_X1 ;
  assign fifo_intr_wr_pd_C1 = { 1{ _05_ }} ;
  assign fifo_intr_wr_pd_R1 = { 1{ _05_ }} & ( _01__R | ( { 1{ _05__T  }} & _01__C ));
  assign fifo_intr_wr_pd_X1 = { 1{ _05_ }} & _01__X ;
  logic [0:0] fifo_intr_rd_pd_o_C1 ;
  logic [0:0] fifo_intr_rd_pd_o_R1 ;
  logic [0:0] fifo_intr_rd_pd_o_X1 ;
  assign fifo_intr_rd_pd_o_C1 = { 1{ !_05_ }} ;
  assign fifo_intr_rd_pd_o_R1 = { 1{ !_05_ }} & ( _01__R | ( { 1{ _05__T  }} & _01__C ));
  assign fifo_intr_rd_pd_o_X1 = { 1{ !_05_ }} & _01__X ;
  assign rd_req_next = _07_ ? fifo_intr_rd_pvld_int_o : fifo_intr_wr_pvld;
  logic [0:0] _07__C3 ;
  logic [0:0] _07__R3 ;
  logic [0:0] _07__X3 ;
  assign _07__C3 = | rd_req_next_C ;
  assign _07__X3 = | rd_req_next_X ;
  assign rd_req_next_T = _07_ ? ( { 1{ _07__T  }} | fifo_intr_rd_pvld_int_o_T ) : ( { 1{ _07__T  }} | fifo_intr_wr_pvld_T );
  assign rd_req_next_S = _07_ ? fifo_intr_rd_pvld_int_o_S : fifo_intr_wr_pvld_S ;
  assign _07__R3 = ( | (rd_req_next_R | ( rd_req_next_C & ( { 1{ _07_ }} & fifo_intr_rd_pvld_int_o_T | { 1{ !_07_ }} & fifo_intr_wr_pvld_T )))) && fifo_intr_rd_pvld_int_o != fifo_intr_wr_pvld ;
  logic [0:0] fifo_intr_rd_pvld_int_o_C4 ;
  logic [0:0] fifo_intr_rd_pvld_int_o_R4 ;
  logic [0:0] fifo_intr_rd_pvld_int_o_X4 ;
  assign fifo_intr_rd_pvld_int_o_C4 = { 1{ _07_ }} ;
  assign fifo_intr_rd_pvld_int_o_R4 = { 1{ _07_ }} & ( rd_req_next_R | ( { 1{ _07__T  }} & rd_req_next_C ));
  assign fifo_intr_rd_pvld_int_o_X4 = { 1{ _07_ }} & rd_req_next_X ;
  logic [0:0] fifo_intr_wr_pvld_C4 ;
  logic [0:0] fifo_intr_wr_pvld_R4 ;
  logic [0:0] fifo_intr_wr_pvld_X4 ;
  assign fifo_intr_wr_pvld_C4 = { 1{ !_07_ }} ;
  assign fifo_intr_wr_pvld_R4 = { 1{ !_07_ }} & ( rd_req_next_R | ( { 1{ _07__T  }} & rd_req_next_C ));
  assign fifo_intr_wr_pvld_X4 = { 1{ !_07_ }} & rd_req_next_X ;
  logic [0:0] nvdla_core_clk_R0 ;
  logic [0:0] nvdla_core_clk_X0 ;
  logic [0:0] nvdla_core_clk_C0 ;
  logic [0:0] nvdla_core_clk_mgated_enable_R0 ;
  logic [0:0] nvdla_core_clk_mgated_enable_X0 ;
  logic [0:0] nvdla_core_clk_mgated_enable_C0 ;
  logic [0:0] nvdla_core_rstn_R0 ;
  logic [0:0] nvdla_core_rstn_X0 ;
  logic [0:0] nvdla_core_rstn_C0 ;
// module: NV_CLK_gate_power
  NV_CLK_gate_power nvdla_core_clk_mgate (
    .clk_T (  nvdla_core_clk_T  ),
    .clk_R (  nvdla_core_clk_R0  ),
    .clk_X (  nvdla_core_clk_X0  ),
    .clk_C (  nvdla_core_clk_C0  ),
    .clk_S (  nvdla_core_clk_S  ),
    .clk_en_T (  nvdla_core_clk_mgated_enable_T  ),
    .clk_en_R (  nvdla_core_clk_mgated_enable_R0  ),
    .clk_en_X (  nvdla_core_clk_mgated_enable_X0  ),
    .clk_en_C (  nvdla_core_clk_mgated_enable_C0  ),
    .clk_en_S (  nvdla_core_clk_mgated_enable_S  ),
    .reset__T (  nvdla_core_rstn_T  ),
    .reset__R (  nvdla_core_rstn_R0  ),
    .reset__X (  nvdla_core_rstn_X0  ),
    .reset__C (  nvdla_core_rstn_C0  ),
    .reset__S (  nvdla_core_rstn_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .clk_gated_T (  nvdla_core_clk_mgated_T  ),
    .clk_gated_R0 (  nvdla_core_clk_mgated_R  ),
    .clk_gated_X0 (  nvdla_core_clk_mgated_X  ),
    .clk_gated_C0 (  nvdla_core_clk_mgated_C  ),
    .clk_gated_S ( nvdla_core_clk_mgated_S ),
    .clk ( nvdla_core_clk ),
    .reset_ ( nvdla_core_rstn ),
    .clk_gated ( nvdla_core_clk_mgated ),
    .clk_en ( nvdla_core_clk_mgated_enable )
  );
  assign fifo_intr_rd_pd_p = fifo_intr_wr_pd;
  logic [0:0] fifo_intr_wr_pd_C2 ;
  logic [0:0] fifo_intr_wr_pd_R2 ;
  logic [0:0] fifo_intr_wr_pd_X2 ;
  assign fifo_intr_rd_pd_p_T = fifo_intr_wr_pd_T ;
  assign fifo_intr_wr_pd_C2 = fifo_intr_rd_pd_p_C ;
  assign fifo_intr_wr_pd_R2 = fifo_intr_rd_pd_p_R ;
  assign fifo_intr_wr_pd_X2 = fifo_intr_rd_pd_p_X ;
  assign fifo_intr_rd_pd_p_S = fifo_intr_wr_pd_S ;
  assign fifo_intr_rd_pvld = fifo_intr_rd_pvld_int;
  logic [0:0] fifo_intr_rd_pvld_int_C5 ;
  logic [0:0] fifo_intr_rd_pvld_int_R5 ;
  logic [0:0] fifo_intr_rd_pvld_int_X5 ;
  assign fifo_intr_rd_pvld_T = fifo_intr_rd_pvld_int_T ;
  assign fifo_intr_rd_pvld_int_C5 = fifo_intr_rd_pvld_C ;
  assign fifo_intr_rd_pvld_int_R5 = fifo_intr_rd_pvld_R ;
  assign fifo_intr_rd_pvld_int_X5 = fifo_intr_rd_pvld_X ;
  assign fifo_intr_rd_pvld_S = fifo_intr_rd_pvld_int_S ;
  assign fifo_intr_rd_pvld_o = fifo_intr_rd_pvld_int_o;
  logic [0:0] fifo_intr_rd_pvld_int_o_C5 ;
  logic [0:0] fifo_intr_rd_pvld_int_o_R5 ;
  logic [0:0] fifo_intr_rd_pvld_int_o_X5 ;
  assign fifo_intr_rd_pvld_o_T = fifo_intr_rd_pvld_int_o_T ;
  assign fifo_intr_rd_pvld_int_o_C5 = fifo_intr_rd_pvld_o_C ;
  assign fifo_intr_rd_pvld_int_o_R5 = fifo_intr_rd_pvld_o_R ;
  assign fifo_intr_rd_pvld_int_o_X5 = fifo_intr_rd_pvld_o_X ;
  assign fifo_intr_rd_pvld_o_S = fifo_intr_rd_pvld_int_o_S ;
  assign fifo_intr_rd_pvld_p = fifo_intr_wr_pvld;
  logic [0:0] fifo_intr_wr_pvld_C5 ;
  logic [0:0] fifo_intr_wr_pvld_R5 ;
  logic [0:0] fifo_intr_wr_pvld_X5 ;
  assign fifo_intr_rd_pvld_p_T = fifo_intr_wr_pvld_T ;
  assign fifo_intr_wr_pvld_C5 = fifo_intr_rd_pvld_p_C ;
  assign fifo_intr_wr_pvld_R5 = fifo_intr_rd_pvld_p_R ;
  assign fifo_intr_wr_pvld_X5 = fifo_intr_rd_pvld_p_X ;
  assign fifo_intr_rd_pvld_p_S = fifo_intr_wr_pvld_S ;
  assign fifo_intr_wr_idle_d0 = fifo_intr_wr_idle;
  logic [0:0] fifo_intr_wr_idle_C1 ;
  logic [0:0] fifo_intr_wr_idle_R1 ;
  logic [0:0] fifo_intr_wr_idle_X1 ;
  assign fifo_intr_wr_idle_d0_T = fifo_intr_wr_idle_T ;
  assign fifo_intr_wr_idle_C1 = fifo_intr_wr_idle_d0_C ;
  assign fifo_intr_wr_idle_R1 = fifo_intr_wr_idle_d0_R ;
  assign fifo_intr_wr_idle_X1 = fifo_intr_wr_idle_d0_X ;
  assign fifo_intr_wr_idle_d0_S = fifo_intr_wr_idle_S ;
  assign nvdla_core_rstn_C = ( nvdla_core_rstn_C0 );
  assign nvdla_core_clk_mgated_enable_C = ( nvdla_core_clk_mgated_enable_C0 );
  assign nvdla_core_clk_C = ( nvdla_core_clk_C0 );
  assign _05__C = ( _05__C0 );
  assign _18__C = ( _18__C0 );
  assign _08__C = ( _08__C0 );
  assign fifo_intr_wr_pd_C = ( fifo_intr_wr_pd_C0 ) | ( fifo_intr_wr_pd_C1 ) | ( fifo_intr_wr_pd_C2 );
  assign fifo_intr_rd_pd_o_C = ( fifo_intr_rd_pd_o_C0 ) | ( fifo_intr_rd_pd_o_C1 );
  assign _01__C = ( _01__C0 );
  assign _02__C = ( _02__C0 );
  assign _00__C = ( _00__C0 );
  assign _10__C = ( _10__C0 );
  assign _17__C = ( _17__C0 );
  assign _09__C = ( _09__C0 );
  assign fifo_intr_rd_prdy_C = ( fifo_intr_rd_prdy_C0 ) | ( fifo_intr_rd_prdy_C1 );
  assign _03__C = ( _03__C0 ) | ( _03__C1 );
  assign fifo_intr_rd_prdy_d_o_C = ( fifo_intr_rd_prdy_d_o_C0 );
  assign fifo_intr_rd_prdy_d_C = ( fifo_intr_rd_prdy_d_C0 ) | ( fifo_intr_rd_prdy_d_C1 );
  assign rd_idle_C = ( rd_idle_C0 );
  assign _15__C = ( _15__C0 );
  assign _13__C = ( _13__C0 ) | ( _13__C1 );
  assign _14__C = ( _14__C0 );
  assign _16__C = ( _16__C0 ) | ( _16__C1 );
  assign rd_req_next_C = ( rd_req_next_C0 ) | ( rd_req_next_C1 );
  assign _12__C = ( _12__C0 );
  assign _06__C = ( _06__C0 );
  assign fifo_intr_rd_pvld_int_d_C = ( fifo_intr_rd_pvld_int_d_C0 );
  assign rd_popping_C = ( rd_popping_C0 );
  assign _04__C = ( _04__C0 );
  assign rd_req_next_o_C = ( rd_req_next_o_C0 ) | ( rd_req_next_o_C1 );
  assign fifo_intr_rd_pvld_int_C = ( fifo_intr_rd_pvld_int_C0 ) | ( fifo_intr_rd_pvld_int_C1 ) | ( fifo_intr_rd_pvld_int_C2 ) | ( fifo_intr_rd_pvld_int_C3 ) | ( fifo_intr_rd_pvld_int_C4 ) | ( fifo_intr_rd_pvld_int_C5 );
  assign _11__C = ( _11__C0 );
  assign fifo_intr_wr_pvld_C = ( fifo_intr_wr_pvld_C0 ) | ( fifo_intr_wr_pvld_C1 ) | ( fifo_intr_wr_pvld_C2 ) | ( fifo_intr_wr_pvld_C3 ) | ( fifo_intr_wr_pvld_C4 ) | ( fifo_intr_wr_pvld_C5 );
  assign _07__C = ( _07__C0 ) | ( _07__C1 ) | ( _07__C2 ) | ( _07__C3 );
  assign fifo_intr_rd_pvld_int_o_C = ( fifo_intr_rd_pvld_int_o_C0 ) | ( fifo_intr_rd_pvld_int_o_C1 ) | ( fifo_intr_rd_pvld_int_o_C2 ) | ( fifo_intr_rd_pvld_int_o_C3 ) | ( fifo_intr_rd_pvld_int_o_C4 ) | ( fifo_intr_rd_pvld_int_o_C5 );
  assign fifo_intr_wr_idle_C = ( fifo_intr_wr_idle_C0 ) | ( fifo_intr_wr_idle_C1 );
  assign fifo_intr_rd_pvld_C = ( fifo_intr_rd_pvld_C0 );
  assign fifo_intr_rd_pd_C = ( fifo_intr_rd_pd_C0 ) | ( fifo_intr_rd_pd_C1 );
  assign nvdla_core_rstn_X = ( nvdla_core_rstn_X0 );
  assign nvdla_core_clk_mgated_enable_X = ( nvdla_core_clk_mgated_enable_X0 );
  assign nvdla_core_clk_X = ( nvdla_core_clk_X0 );
  assign _05__X = ( _05__X0 );
  assign _18__X = ( _18__X0 );
  assign _08__X = ( _08__X0 );
  assign fifo_intr_wr_pd_X = ( fifo_intr_wr_pd_X0 ) | ( fifo_intr_wr_pd_X1 ) | ( fifo_intr_wr_pd_X2 );
  assign fifo_intr_rd_pd_o_X = ( fifo_intr_rd_pd_o_X0 ) | ( fifo_intr_rd_pd_o_X1 );
  assign _01__X = ( _01__X0 );
  assign _02__X = ( _02__X0 );
  assign _00__X = ( _00__X0 );
  assign _10__X = ( _10__X0 );
  assign _17__X = ( _17__X0 );
  assign _09__X = ( _09__X0 );
  assign fifo_intr_rd_prdy_X = ( fifo_intr_rd_prdy_X0 ) | ( fifo_intr_rd_prdy_X1 );
  assign _03__X = ( _03__X0 ) | ( _03__X1 );
  assign fifo_intr_rd_prdy_d_o_X = ( fifo_intr_rd_prdy_d_o_X0 );
  assign fifo_intr_rd_prdy_d_X = ( fifo_intr_rd_prdy_d_X0 ) | ( fifo_intr_rd_prdy_d_X1 );
  assign rd_idle_X = ( rd_idle_X0 );
  assign _15__X = ( _15__X0 );
  assign _13__X = ( _13__X0 ) | ( _13__X1 );
  assign _14__X = ( _14__X0 );
  assign _16__X = ( _16__X0 ) | ( _16__X1 );
  assign rd_req_next_X = ( rd_req_next_X0 ) | ( rd_req_next_X1 );
  assign _12__X = ( _12__X0 );
  assign _06__X = ( _06__X0 );
  assign fifo_intr_rd_pvld_int_d_X = ( fifo_intr_rd_pvld_int_d_X0 );
  assign rd_popping_X = ( rd_popping_X0 );
  assign _04__X = ( _04__X0 );
  assign rd_req_next_o_X = ( rd_req_next_o_X0 ) | ( rd_req_next_o_X1 );
  assign fifo_intr_rd_pvld_int_X = ( fifo_intr_rd_pvld_int_X0 ) | ( fifo_intr_rd_pvld_int_X1 ) | ( fifo_intr_rd_pvld_int_X2 ) | ( fifo_intr_rd_pvld_int_X3 ) | ( fifo_intr_rd_pvld_int_X4 ) | ( fifo_intr_rd_pvld_int_X5 );
  assign _11__X = ( _11__X0 );
  assign fifo_intr_wr_pvld_X = ( fifo_intr_wr_pvld_X0 ) | ( fifo_intr_wr_pvld_X1 ) | ( fifo_intr_wr_pvld_X2 ) | ( fifo_intr_wr_pvld_X3 ) | ( fifo_intr_wr_pvld_X4 ) | ( fifo_intr_wr_pvld_X5 );
  assign _07__X = ( _07__X0 ) | ( _07__X1 ) | ( _07__X2 ) | ( _07__X3 );
  assign fifo_intr_rd_pvld_int_o_X = ( fifo_intr_rd_pvld_int_o_X0 ) | ( fifo_intr_rd_pvld_int_o_X1 ) | ( fifo_intr_rd_pvld_int_o_X2 ) | ( fifo_intr_rd_pvld_int_o_X3 ) | ( fifo_intr_rd_pvld_int_o_X4 ) | ( fifo_intr_rd_pvld_int_o_X5 );
  assign fifo_intr_wr_idle_X = ( fifo_intr_wr_idle_X0 ) | ( fifo_intr_wr_idle_X1 );
  assign fifo_intr_rd_pvld_X = ( fifo_intr_rd_pvld_X0 );
  assign fifo_intr_rd_pd_X = ( fifo_intr_rd_pd_X0 ) | ( fifo_intr_rd_pd_X1 );
  assign nvdla_core_rstn_R = ( nvdla_core_rstn_X0 & nvdla_core_rstn_R0 );
  assign nvdla_core_clk_mgated_enable_R = ( nvdla_core_clk_mgated_enable_X0 & nvdla_core_clk_mgated_enable_R0 );
  assign nvdla_core_clk_R = ( nvdla_core_clk_X0 & nvdla_core_clk_R0 );
  assign _05__R = ( _05__X0 & _05__R0 );
  assign _18__R = ( _18__X0 & _18__R0 );
  assign _08__R = ( _08__X0 & _08__R0 );
  assign fifo_intr_wr_pd_R = ( fifo_intr_wr_pd_X0 & fifo_intr_wr_pd_R0 ) | ( fifo_intr_wr_pd_X1 & fifo_intr_wr_pd_R1 ) | ( fifo_intr_wr_pd_X2 & fifo_intr_wr_pd_R2 );
  assign fifo_intr_rd_pd_o_R = ( fifo_intr_rd_pd_o_X0 & fifo_intr_rd_pd_o_R0 ) | ( fifo_intr_rd_pd_o_X1 & fifo_intr_rd_pd_o_R1 );
  assign _01__R = ( _01__X0 & _01__R0 );
  assign _02__R = ( _02__X0 & _02__R0 );
  assign _00__R = ( _00__X0 & _00__R0 );
  assign _10__R = ( _10__X0 & _10__R0 );
  assign _17__R = ( _17__X0 & _17__R0 );
  assign _09__R = ( _09__X0 & _09__R0 );
  assign fifo_intr_rd_prdy_R = ( fifo_intr_rd_prdy_X0 & fifo_intr_rd_prdy_R0 ) | ( fifo_intr_rd_prdy_X1 & fifo_intr_rd_prdy_R1 );
  assign _03__R = ( _03__X0 & _03__R0 ) | ( _03__X1 & _03__R1 );
  assign fifo_intr_rd_prdy_d_o_R = ( fifo_intr_rd_prdy_d_o_X0 & fifo_intr_rd_prdy_d_o_R0 );
  assign fifo_intr_rd_prdy_d_R = ( fifo_intr_rd_prdy_d_X0 & fifo_intr_rd_prdy_d_R0 ) | ( fifo_intr_rd_prdy_d_X1 & fifo_intr_rd_prdy_d_R1 );
  assign rd_idle_R = ( rd_idle_X0 & rd_idle_R0 );
  assign _15__R = ( _15__X0 & _15__R0 );
  assign _13__R = ( _13__X0 & _13__R0 ) | ( _13__X1 & _13__R1 );
  assign _14__R = ( _14__X0 & _14__R0 );
  assign _16__R = ( _16__X0 & _16__R0 ) | ( _16__X1 & _16__R1 );
  assign rd_req_next_R = ( rd_req_next_X0 & rd_req_next_R0 ) | ( rd_req_next_X1 & rd_req_next_R1 );
  assign _12__R = ( _12__X0 & _12__R0 );
  assign _06__R = ( _06__X0 & _06__R0 );
  assign fifo_intr_rd_pvld_int_d_R = ( fifo_intr_rd_pvld_int_d_X0 & fifo_intr_rd_pvld_int_d_R0 );
  assign rd_popping_R = ( rd_popping_X0 & rd_popping_R0 );
  assign _04__R = ( _04__X0 & _04__R0 );
  assign rd_req_next_o_R = ( rd_req_next_o_X0 & rd_req_next_o_R0 ) | ( rd_req_next_o_X1 & rd_req_next_o_R1 );
  assign fifo_intr_rd_pvld_int_R = ( fifo_intr_rd_pvld_int_X0 & fifo_intr_rd_pvld_int_R0 ) | ( fifo_intr_rd_pvld_int_X1 & fifo_intr_rd_pvld_int_R1 ) | ( fifo_intr_rd_pvld_int_X2 & fifo_intr_rd_pvld_int_R2 ) | ( fifo_intr_rd_pvld_int_X3 & fifo_intr_rd_pvld_int_R3 ) | ( fifo_intr_rd_pvld_int_X4 & fifo_intr_rd_pvld_int_R4 ) | ( fifo_intr_rd_pvld_int_X5 & fifo_intr_rd_pvld_int_R5 );
  assign _11__R = ( _11__X0 & _11__R0 );
  assign fifo_intr_wr_pvld_R = ( fifo_intr_wr_pvld_X0 & fifo_intr_wr_pvld_R0 ) | ( fifo_intr_wr_pvld_X1 & fifo_intr_wr_pvld_R1 ) | ( fifo_intr_wr_pvld_X2 & fifo_intr_wr_pvld_R2 ) | ( fifo_intr_wr_pvld_X3 & fifo_intr_wr_pvld_R3 ) | ( fifo_intr_wr_pvld_X4 & fifo_intr_wr_pvld_R4 ) | ( fifo_intr_wr_pvld_X5 & fifo_intr_wr_pvld_R5 );
  assign _07__R = ( _07__X0 & _07__R0 ) | ( _07__X1 & _07__R1 ) | ( _07__X2 & _07__R2 ) | ( _07__X3 & _07__R3 );
  assign fifo_intr_rd_pvld_int_o_R = ( fifo_intr_rd_pvld_int_o_X0 & fifo_intr_rd_pvld_int_o_R0 ) | ( fifo_intr_rd_pvld_int_o_X1 & fifo_intr_rd_pvld_int_o_R1 ) | ( fifo_intr_rd_pvld_int_o_X2 & fifo_intr_rd_pvld_int_o_R2 ) | ( fifo_intr_rd_pvld_int_o_X3 & fifo_intr_rd_pvld_int_o_R3 ) | ( fifo_intr_rd_pvld_int_o_X4 & fifo_intr_rd_pvld_int_o_R4 ) | ( fifo_intr_rd_pvld_int_o_X5 & fifo_intr_rd_pvld_int_o_R5 );
  assign fifo_intr_wr_idle_R = ( fifo_intr_wr_idle_X0 & fifo_intr_wr_idle_R0 ) | ( fifo_intr_wr_idle_X1 & fifo_intr_wr_idle_R1 );
  assign fifo_intr_rd_pvld_R = ( fifo_intr_rd_pvld_X0 & fifo_intr_rd_pvld_R0 );
  assign fifo_intr_rd_pd_R = ( fifo_intr_rd_pd_X0 & fifo_intr_rd_pd_R0 ) | ( fifo_intr_rd_pd_X1 & fifo_intr_rd_pd_R1 );
 // ground taints for floating regs
 // ground taints for unused wires
  assign { fifo_intr_rd_pd_p_R , fifo_intr_rd_pd_p_C , fifo_intr_rd_pd_p_X , fifo_intr_rd_pvld_o_R , fifo_intr_rd_pvld_o_C , fifo_intr_rd_pvld_o_X , fifo_intr_rd_pvld_p_R , fifo_intr_rd_pvld_p_C , fifo_intr_rd_pvld_p_X , fifo_intr_wr_idle_d0_R , fifo_intr_wr_idle_d0_C , fifo_intr_wr_idle_d0_X , nvdla_core_clk_mgated_R , nvdla_core_clk_mgated_C , nvdla_core_clk_mgated_X  } = 0;
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) fifo_intr_rd_pd_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) fifo_intr_rd_pd_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) fifo_intr_rd_pd_PREV_VAL1 <= fifo_intr_rd_pd ;
    if( INSTR_IN_ZY ) fifo_intr_rd_pd_PREV_VAL2 <= fifo_intr_rd_pd_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) fifo_intr_rd_pvld_int_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) fifo_intr_rd_pvld_int_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) fifo_intr_rd_pvld_int_PREV_VAL1 <= fifo_intr_rd_pvld_int ;
    if( INSTR_IN_ZY ) fifo_intr_rd_pvld_int_PREV_VAL2 <= fifo_intr_rd_pvld_int_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) fifo_intr_rd_pvld_int_d_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) fifo_intr_rd_pvld_int_d_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) fifo_intr_rd_pvld_int_d_PREV_VAL1 <= fifo_intr_rd_pvld_int_d ;
    if( INSTR_IN_ZY ) fifo_intr_rd_pvld_int_d_PREV_VAL2 <= fifo_intr_rd_pvld_int_d_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) fifo_intr_rd_pd_o_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) fifo_intr_rd_pd_o_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) fifo_intr_rd_pd_o_PREV_VAL1 <= fifo_intr_rd_pd_o ;
    if( INSTR_IN_ZY ) fifo_intr_rd_pd_o_PREV_VAL2 <= fifo_intr_rd_pd_o_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) fifo_intr_rd_pvld_int_o_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) fifo_intr_rd_pvld_int_o_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) fifo_intr_rd_pvld_int_o_PREV_VAL1 <= fifo_intr_rd_pvld_int_o ;
    if( INSTR_IN_ZY ) fifo_intr_rd_pvld_int_o_PREV_VAL2 <= fifo_intr_rd_pvld_int_o_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) fifo_intr_rd_prdy_d_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) fifo_intr_rd_prdy_d_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) fifo_intr_rd_prdy_d_PREV_VAL1 <= fifo_intr_rd_prdy_d ;
    if( INSTR_IN_ZY ) fifo_intr_rd_prdy_d_PREV_VAL2 <= fifo_intr_rd_prdy_d_PREV_VAL1 ;
  end
 // ground taints for unused wire slices
  assert property( fifo_intr_rd_pd_r_flag == 0 || fifo_intr_rd_pd_PREV_VAL1 == fifo_intr_rd_pd_PREV_VAL2 );
  assert property( fifo_intr_rd_pd_o_r_flag == 0 || fifo_intr_rd_pd_o_PREV_VAL1 == fifo_intr_rd_pd_o_PREV_VAL2 );
  assert property( fifo_intr_rd_prdy_d_r_flag == 0 || fifo_intr_rd_prdy_d_PREV_VAL1 == fifo_intr_rd_prdy_d_PREV_VAL2 );
  assert property( fifo_intr_rd_pvld_int_r_flag == 0 || fifo_intr_rd_pvld_int_PREV_VAL1 == fifo_intr_rd_pvld_int_PREV_VAL2 );
  assert property( fifo_intr_rd_pvld_int_d_r_flag == 0 || fifo_intr_rd_pvld_int_d_PREV_VAL1 == fifo_intr_rd_pvld_int_d_PREV_VAL2 );
  assert property( fifo_intr_rd_pvld_int_o_r_flag == 0 || fifo_intr_rd_pvld_int_o_PREV_VAL1 == fifo_intr_rd_pvld_int_o_PREV_VAL2 );
  assign rst_zy = !nvdla_core_rstn ;
endmodule
