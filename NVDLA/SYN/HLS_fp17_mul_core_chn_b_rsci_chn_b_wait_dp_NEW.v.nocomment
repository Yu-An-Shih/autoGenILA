module HLS_fp17_mul_core_chn_b_rsci_chn_b_wait_dp(nvdla_core_clk, nvdla_core_rstn, chn_b_rsci_oswt, chn_b_rsci_bawt, chn_b_rsci_wen_comp, chn_b_rsci_d_mxwt, chn_b_rsci_biwt, chn_b_rsci_bdwt, chn_b_rsci_d);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  output chn_b_rsci_bawt;
  reg chn_b_rsci_bcwt;
  input chn_b_rsci_bdwt;
  input chn_b_rsci_biwt;
  input [16:0] chn_b_rsci_d;
  reg [16:0] chn_b_rsci_d_bfwt;
  output [16:0] chn_b_rsci_d_mxwt;
  input chn_b_rsci_oswt;
  output chn_b_rsci_wen_comp;
  input nvdla_core_clk;
  input nvdla_core_rstn;
  assign _01_ = ~ chn_b_rsci_oswt;
  assign _02_ = ~ chn_b_rsci_bawt;
  assign _00_ = ~ _03_;
  assign chn_b_rsci_bawt = chn_b_rsci_biwt | chn_b_rsci_bcwt;
  assign chn_b_rsci_wen_comp = _01_ | chn_b_rsci_bawt;
  assign _03_ = _02_ | chn_b_rsci_bdwt;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_b_rsci_bcwt <= 1'b0;
    else
      chn_b_rsci_bcwt <= _00_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_b_rsci_d_bfwt <= 17'b00000000000000000;
    else
      chn_b_rsci_d_bfwt <= chn_b_rsci_d_mxwt;
  assign chn_b_rsci_d_mxwt = chn_b_rsci_bcwt ? chn_b_rsci_d_bfwt : chn_b_rsci_d;
endmodule
