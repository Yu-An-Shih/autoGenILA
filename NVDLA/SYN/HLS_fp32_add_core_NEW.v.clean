module HLS_fp32_add_core(nvdla_core_clk, nvdla_core_rstn, chn_a_rsc_z, chn_a_rsc_vz, chn_a_rsc_lz, chn_b_rsc_z, chn_b_rsc_vz, chn_b_rsc_lz, chn_o_rsc_z, chn_o_rsc_vz, chn_o_rsc_lz, chn_a_rsci_oswt, chn_b_rsci_oswt, chn_o_rsci_oswt, chn_o_rsci_oswt_unreg, chn_a_rsci_oswt_unreg_pff);
  wire [2:0] _000_;
  wire [22:0] _001_;
  wire [7:0] _002_;
  wire _003_;
  wire _004_;
  wire [48:0] _005_;
  wire [48:0] _006_;
  wire [49:0] _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire [7:0] _014_;
  wire [7:0] _015_;
  wire [7:0] _016_;
  wire _017_;
  wire [22:0] _018_;
  wire [22:0] _019_;
  wire [7:0] _020_;
  wire [7:0] _021_;
  wire [31:0] _022_;
  wire [31:0] _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire [22:0] _031_;
  wire [7:0] _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire [22:0] _043_;
  wire [22:0] _044_;
  wire [7:0] _045_;
  wire [7:0] _046_;
  wire [8:0] _047_;
  wire [49:0] _048_;
  wire [9:0] _049_;
  wire [10:0] _050_;
  wire [25:0] _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire [7:0] _082_;
  wire [7:0] _083_;
  wire [7:0] _084_;
  wire [7:0] _085_;
  wire [7:0] _086_;
  wire [7:0] _087_;
  wire [7:0] _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire [6:0] _097_;
  wire [6:0] _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire [48:0] _108_;
  wire [5:0] _109_;
  wire _110_;
  wire _111_;
  wire [7:0] _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire [7:0] _182_;
  wire [7:0] _183_;
  wire [7:0] _184_;
  wire [7:0] _185_;
  wire _186_;
  wire FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c;
  wire [22:0] FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl;
  reg FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2;
  reg FpAdd_8U_23U_IsZero_8U_23U_or_itm_2;
  wire [48:0] FpAdd_8U_23U_a_int_mant_p1_lshift_itm;
  reg [48:0] FpAdd_8U_23U_a_int_mant_p1_sva_2;
  wire [7:0] FpAdd_8U_23U_a_left_shift_acc_nl;
  wire [7:0] FpAdd_8U_23U_a_right_shift_qelse_acc_nl;
  wire [7:0] FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm;
  wire [48:0] FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0;
  wire [48:0] FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0;
  wire FpAdd_8U_23U_and_1_nl;
  wire FpAdd_8U_23U_and_2_nl;
  wire FpAdd_8U_23U_and_3_nl;
  wire FpAdd_8U_23U_and_7_nl;
  wire FpAdd_8U_23U_and_8_cse;
  wire FpAdd_8U_23U_and_nl;
  wire FpAdd_8U_23U_and_tmp;
  wire [49:0] FpAdd_8U_23U_asn_4_mx0w1;
  wire [49:0] FpAdd_8U_23U_asn_5_mx0w0;
  wire [48:0] FpAdd_8U_23U_b_int_mant_p1_lshift_itm;
  reg [48:0] FpAdd_8U_23U_b_int_mant_p1_sva_2;
  wire [7:0] FpAdd_8U_23U_b_left_shift_acc_nl;
  wire [7:0] FpAdd_8U_23U_b_right_shift_qif_acc_nl;
  wire [7:0] FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm;
  wire FpAdd_8U_23U_if_3_if_acc_1_itm_7_1;
  wire [7:0] FpAdd_8U_23U_if_3_if_acc_1_nl;
  wire [7:0] FpAdd_8U_23U_if_3_if_acc_nl;
  wire FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl;
  wire FpAdd_8U_23U_if_4_if_acc_1_itm_7_1;
  wire [7:0] FpAdd_8U_23U_if_4_if_acc_1_nl;
  wire [7:0] FpAdd_8U_23U_if_4_if_acc_nl;
  wire [48:0] FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0;
  reg [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2;
  wire [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0;
  wire FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse;
  wire FpAdd_8U_23U_is_a_greater_acc_1_itm_8_1;
  wire [8:0] FpAdd_8U_23U_is_a_greater_acc_1_nl;
  reg FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4;
  reg FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5;
  wire FpAdd_8U_23U_is_a_greater_oif_aelse_acc_itm_23_1;
  wire [23:0] FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl;
  wire FpAdd_8U_23U_is_a_greater_oif_equal_tmp;
  reg FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xnor_svs_3;
  wire FpAdd_8U_23U_is_addition_and_cse;
  wire FpAdd_8U_23U_is_inf_lpi_1_dfm;
  wire FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0;
  reg FpAdd_8U_23U_mux_13_itm_3;
  reg FpAdd_8U_23U_mux_13_itm_4;
  reg FpAdd_8U_23U_mux_1_itm_2;
  wire FpAdd_8U_23U_mux_2_tmp_49;
  wire [7:0] FpAdd_8U_23U_o_expo_lpi_1_dfm_2;
  wire FpAdd_8U_23U_or_cse;
  reg [7:0] FpAdd_8U_23U_qr_lpi_1_dfm_4;
  reg [7:0] FpAdd_8U_23U_qr_lpi_1_dfm_5;
  reg [7:0] FpAdd_8U_23U_qr_lpi_1_dfm_6;
  wire [22:0] FpMantRNE_49U_24U_else_acc_nl;
  wire FpMantRNE_49U_24U_else_and_tmp;
  wire FpMantRNE_49U_24U_else_carry_sva;
  wire [48:0] FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl;
  wire [7:0] FpNormalize_8U_49U_FpNormalize_8U_49U_and_nl;
  wire [8:0] FpNormalize_8U_49U_acc_nl;
  wire [7:0] FpNormalize_8U_49U_else_acc_nl;
  wire [48:0] FpNormalize_8U_49U_else_lshift_itm;
  reg FpNormalize_8U_49U_if_or_itm_2;
  wire FpNormalize_8U_49U_oelse_not_3;
  wire FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse;
  wire FpSignedBitsToFloat_8U_23U_1_and_1_cse;
  wire FpSignedBitsToFloat_8U_23U_1_and_nl;
  reg [22:0] FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3;
  reg [22:0] FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4;
  reg [7:0] FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3;
  reg [7:0] FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4;
  wire FpSignedBitsToFloat_8U_23U_FpAdd_8U_23U_or_1_cse;
  wire FpSignedBitsToFloat_8U_23U_and_1_rgt;
  wire FpSignedBitsToFloat_8U_23U_and_rgt;
  reg [31:0] FpSignedBitsToFloat_8U_23U_bits_1_sva_36;
  reg [31:0] FpSignedBitsToFloat_8U_23U_bits_sva_36;
  reg IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2;
  wire IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp;
  wire IsNaN_8U_23U_1_and_cse;
  reg IsNaN_8U_23U_1_land_lpi_1_dfm_3;
  reg IsNaN_8U_23U_1_land_lpi_1_dfm_4;
  wire IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0;
  reg IsNaN_8U_23U_1_nor_itm_2;
  wire IsNaN_8U_23U_1_nor_tmp;
  wire IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp;
  wire IsNaN_8U_23U_aelse_and_cse;
  reg IsNaN_8U_23U_land_lpi_1_dfm_5;
  reg IsNaN_8U_23U_land_lpi_1_dfm_6;
  reg IsNaN_8U_23U_land_lpi_1_dfm_st_4;
  wire and_67_nl;
  wire and_dcpl_13;
  wire and_dcpl_14;
  wire and_dcpl_15;
  wire and_dcpl_28;
  wire and_dcpl_29;
  wire and_dcpl_33;
  wire and_dcpl_7;
  output chn_a_rsc_lz;
  input chn_a_rsc_vz;
  input [31:0] chn_a_rsc_z;
  wire chn_a_rsci_bawt;
  wire [31:0] chn_a_rsci_d_mxwt;
  input chn_a_rsci_oswt;
  output chn_a_rsci_oswt_unreg_pff;
  wire chn_a_rsci_wen_comp;
  output chn_b_rsc_lz;
  input chn_b_rsc_vz;
  input [31:0] chn_b_rsc_z;
  wire chn_b_rsci_bawt;
  wire [31:0] chn_b_rsci_d_mxwt;
  input chn_b_rsci_oswt;
  wire chn_b_rsci_wen_comp;
  wire chn_o_and_1_cse;
  output chn_o_rsc_lz;
  input chn_o_rsc_vz;
  output [31:0] chn_o_rsc_z;
  wire chn_o_rsci_bawt;
  reg [22:0] chn_o_rsci_d_22_0;
  wire chn_o_rsci_d_22_0_mx0c1;
  reg [7:0] chn_o_rsci_d_30_23;
  reg chn_o_rsci_d_31;
  reg chn_o_rsci_iswt0;
  input chn_o_rsci_oswt;
  output chn_o_rsci_oswt_unreg;
  wire chn_o_rsci_wen_comp;
  wire core_wen;
  wire core_wten;
  wire [1:0] fsm_output;
  wire [5:0] libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1;
  wire main_stage_en_1;
  reg main_stage_v_1;
  wire main_stage_v_1_mx0c1;
  reg main_stage_v_2;
  wire main_stage_v_2_mx0c1;
  reg main_stage_v_3;
  wire main_stage_v_3_mx0c1;
  wire mux_10_nl;
  wire mux_13_cse;
  wire mux_22_nl;
  wire mux_23_nl;
  wire mux_24_nl;
  wire mux_25_nl;
  wire mux_27_nl;
  wire mux_28_nl;
  wire mux_4_cse;
  wire mux_6_nl;
  wire mux_7_nl;
  wire mux_8_nl;
  wire mux_9_nl;
  wire mux_tmp_5;
  wire [23:0] nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_a;
  wire [8:0] nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s;
  wire [8:0] nl_FpAdd_8U_23U_a_left_shift_acc_nl;
  wire [8:0] nl_FpAdd_8U_23U_a_right_shift_qelse_acc_nl;
  wire [51:0] nl_FpAdd_8U_23U_asn_4_mx0w1;
  wire [50:0] nl_FpAdd_8U_23U_asn_5_mx0w0;
  wire [23:0] nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_a;
  wire [8:0] nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s;
  wire [8:0] nl_FpAdd_8U_23U_b_left_shift_acc_nl;
  wire [8:0] nl_FpAdd_8U_23U_b_right_shift_qif_acc_nl;
  wire [8:0] nl_FpAdd_8U_23U_if_3_if_acc_1_nl;
  wire [8:0] nl_FpAdd_8U_23U_if_3_if_acc_nl;
  wire [8:0] nl_FpAdd_8U_23U_if_4_if_acc_1_nl;
  wire [8:0] nl_FpAdd_8U_23U_if_4_if_acc_nl;
  wire [10:0] nl_FpAdd_8U_23U_is_a_greater_acc_1_nl;
  wire [25:0] nl_FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl;
  wire [23:0] nl_FpMantRNE_49U_24U_else_acc_nl;
  wire [10:0] nl_FpNormalize_8U_49U_acc_nl;
  wire [9:0] nl_FpNormalize_8U_49U_else_acc_nl;
  wire [48:0] nl_FpNormalize_8U_49U_else_lshift_rg_a;
  wire [31:0] nl_HLS_fp32_add_core_chn_o_rsci_inst_chn_o_rsci_d;
  wire [48:0] nl_leading_sign_49_0_rg_mantissa;
  wire nor_26_nl;
  wire nor_27_nl;
  wire nor_28_nl;
  wire nor_29_nl;
  wire nor_31_nl;
  wire nor_32_nl;
  wire nor_34_nl;
  wire nor_36_cse;
  wire nor_37_nl;
  wire nor_38_nl;
  wire nor_tmp_1;
  wire nor_tmp_11;
  input nvdla_core_clk;
  input nvdla_core_rstn;
  wire or_10_nl;
  wire or_cse;
  wire or_tmp_16;
  wire or_tmp_29;
  wire or_tmp_3;
  wire or_tmp_35;
  reg reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xnor_svs_2_cse;
  reg reg_chn_b_rsci_iswt0_cse;
  reg reg_chn_b_rsci_ld_core_psct_cse;
  reg reg_chn_o_rsci_ld_core_psct_cse;
  wire [7:0] fangyuan0;
  assign fangyuan0 = { 1'b1, _097_ };

  assign FpAdd_8U_23U_a_left_shift_acc_nl = fangyuan0 + 4'b1101;
  wire [7:0] fangyuan1;
  assign fangyuan1 = { 1'b1, _098_ };

  assign FpAdd_8U_23U_b_left_shift_acc_nl = fangyuan1 + 4'b1101;
  wire [8:0] fangyuan2;
  assign fangyuan2 = { 1'b1, chn_b_rsci_d_mxwt[30:23] };

  assign _047_ = fangyuan2 + _002_;
  assign FpAdd_8U_23U_is_a_greater_acc_1_nl = _047_ + 1'b1;
  assign FpAdd_8U_23U_asn_5_mx0w0 = FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0 + FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0;
  wire [49:0] fangyuan3;
  assign fangyuan3 = { 1'b1, _108_ };

  assign _048_ = fangyuan3 + FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0;
  assign FpAdd_8U_23U_asn_4_mx0w1 = _048_ + 1'b1;
  wire [7:0] fangyuan4;
  assign fangyuan4 = { 1'b1, FpAdd_8U_23U_qr_lpi_1_dfm_6[7:1] };

  assign FpAdd_8U_23U_if_3_if_acc_1_nl = fangyuan4 + 1'b1;
  wire [7:0] fangyuan5;
  assign fangyuan5 = { 2'b11, _109_ };

  assign _049_[7:0] = FpAdd_8U_23U_qr_lpi_1_dfm_6 + fangyuan5;
  assign FpNormalize_8U_49U_else_acc_nl = _049_[7:0] + 1'b1;
  assign FpAdd_8U_23U_if_3_if_acc_nl = FpAdd_8U_23U_qr_lpi_1_dfm_6 + 1'b1;
  wire [7:0] fangyuan6;
  assign fangyuan6 = { 1'b1, FpAdd_8U_23U_o_expo_lpi_1_dfm_2[7:1] };

  assign FpAdd_8U_23U_if_4_if_acc_1_nl = fangyuan6 + 1'b1;
  wire [8:0] fangyuan7;
  assign fangyuan7 = { 1'b1, _112_ };

  assign _050_[8:0] = fangyuan7 + libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1;
  assign FpNormalize_8U_49U_acc_nl = _050_[8:0] + 1'b1;
  wire [23:0] fangyuan8;
  assign fangyuan8 = { 1'b1, chn_a_rsci_d_mxwt[22:0] };

  assign _051_[23:0] = fangyuan8 + _001_;
  assign FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl = _051_[23:0] + 1'b1;
  assign FpMantRNE_49U_24U_else_acc_nl = FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[47:25] + FpMantRNE_49U_24U_else_carry_sva;
  assign FpAdd_8U_23U_if_4_if_acc_nl = FpAdd_8U_23U_o_expo_lpi_1_dfm_2 + 1'b1;
  assign chn_o_and_1_cse = core_wen & _100_;
  assign IsNaN_8U_23U_aelse_and_cse = _052_ & mux_13_cse;
  assign FpAdd_8U_23U_is_addition_and_cse = _052_ & mux_4_cse;
  assign FpAdd_8U_23U_and_8_cse = _052_ & mux_6_nl;
  assign and_67_nl = FpAdd_8U_23U_or_cse & main_stage_v_3;
  assign FpSignedBitsToFloat_8U_23U_1_and_1_cse = _052_ & mux_10_nl;
  assign _053_ = _104_ & FpAdd_8U_23U_is_a_greater_oif_equal_tmp;
  assign FpSignedBitsToFloat_8U_23U_and_rgt = or_tmp_16 & and_dcpl_28;
  assign FpSignedBitsToFloat_8U_23U_and_1_rgt = IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0 & and_dcpl_28;
  assign _054_ = FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse & or_cse;
  assign _052_ = core_wen & _101_;
  assign IsNaN_8U_23U_1_and_cse = _052_ & mux_28_nl;
  assign FpAdd_8U_23U_and_1_nl = _110_ & FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2[49];
  assign FpAdd_8U_23U_and_2_nl = FpAdd_8U_23U_if_3_if_acc_1_nl[7] & FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2[49];
  assign FpMantRNE_49U_24U_else_carry_sva = FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[24] & _160_;
  assign FpAdd_8U_23U_and_tmp = FpAdd_8U_23U_if_4_if_acc_1_nl[7] & FpMantRNE_49U_24U_else_and_tmp;
  assign FpMantRNE_49U_24U_else_and_tmp = FpMantRNE_49U_24U_else_carry_sva & _090_;
  assign nor_tmp_1 = chn_a_rsci_bawt & chn_b_rsci_bawt;
  assign main_stage_en_1 = nor_tmp_1 & or_cse;
  assign FpNormalize_8U_49U_oelse_not_3 = FpNormalize_8U_49U_if_or_itm_2 & FpNormalize_8U_49U_acc_nl[8];
  assign nor_tmp_11 = _163_ & main_stage_v_2;
  assign and_dcpl_7 = reg_chn_o_rsci_ld_core_psct_cse & _114_;
  assign and_dcpl_13 = or_cse & main_stage_v_3;
  assign and_dcpl_14 = reg_chn_o_rsci_ld_core_psct_cse & chn_o_rsci_bawt;
  assign and_dcpl_15 = and_dcpl_14 & _099_;
  assign and_dcpl_28 = or_cse & _115_;
  assign and_dcpl_29 = or_cse & IsNaN_8U_23U_land_lpi_1_dfm_st_4;
  assign _055_ = or_cse & _116_;
  assign and_dcpl_33 = _055_ & _164_;
  assign or_tmp_35 = main_stage_en_1 & fsm_output[1];
  assign chn_o_rsci_d_22_0_mx0c1 = and_dcpl_13 & _118_;
  assign _056_ = _106_ & main_stage_v_1;
  assign main_stage_v_1_mx0c1 = _056_ & or_cse;
  assign _057_ = main_stage_v_2 & _105_;
  assign main_stage_v_2_mx0c1 = _057_ & or_cse;
  assign _058_ = or_cse & _113_;
  assign main_stage_v_3_mx0c1 = _058_ & main_stage_v_3;
  assign _059_ = _119_ & fsm_output[1];
  assign _060_ = core_wen & or_tmp_29;
  assign _061_ = and_dcpl_13 & IsNaN_8U_23U_land_lpi_1_dfm_6;
  assign _062_ = core_wen & _165_;
  assign _063_ = core_wen & _166_;
  assign _064_ = core_wen & _167_;
  assign _065_ = or_cse & main_stage_v_1;
  assign _066_ = core_wen & _168_;
  assign _067_ = or_cse & main_stage_v_2;
  assign _068_ = core_wen & _169_;
  assign _069_ = _052_ & mux_8_nl;
  assign _070_ = core_wen & FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse;
  assign _071_ = _070_ & mux_23_nl;
  assign _072_ = core_wen & _171_;
  assign _073_ = _072_ & mux_4_cse;
  assign _074_ = core_wen & FpSignedBitsToFloat_8U_23U_FpAdd_8U_23U_or_1_cse;
  assign _075_ = _074_ & mux_13_cse;
  assign _076_ = _074_ & mux_27_nl;
  assign FpSignedBitsToFloat_8U_23U_1_and_nl = _126_ & chn_o_rsci_d_22_0_mx0c1;
  assign FpAdd_8U_23U_and_nl = _127_ & FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c;
  assign _077_ = FpAdd_8U_23U_and_tmp & _128_;
  assign FpAdd_8U_23U_and_3_nl = _077_ & FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c;
  assign FpAdd_8U_23U_and_7_nl = FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0 & FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c;
  assign _078_ = or_tmp_16 & main_stage_v_1;
  assign _079_ = FpSignedBitsToFloat_8U_23U_bits_1_sva_36[31] & FpSignedBitsToFloat_8U_23U_and_1_rgt;
  assign _080_ = FpAdd_8U_23U_mux_1_itm_2 & FpSignedBitsToFloat_8U_23U_and_rgt;
  assign _081_ = FpSignedBitsToFloat_8U_23U_bits_sva_36[31] & and_dcpl_29;
  wire [7:0] fangyuan9;
  assign fangyuan9 = { FpAdd_8U_23U_and_2_nl, FpAdd_8U_23U_and_2_nl, FpAdd_8U_23U_and_2_nl, FpAdd_8U_23U_and_2_nl, FpAdd_8U_23U_and_2_nl, FpAdd_8U_23U_and_2_nl, FpAdd_8U_23U_and_2_nl, FpAdd_8U_23U_and_2_nl };

  assign _082_ = FpAdd_8U_23U_if_3_if_acc_nl & fangyuan9;
  wire [7:0] fangyuan10;
  assign fangyuan10 = { FpAdd_8U_23U_and_1_nl, FpAdd_8U_23U_and_1_nl, FpAdd_8U_23U_and_1_nl, FpAdd_8U_23U_and_1_nl, FpAdd_8U_23U_and_1_nl, FpAdd_8U_23U_and_1_nl, FpAdd_8U_23U_and_1_nl, FpAdd_8U_23U_and_1_nl };

  assign _083_ = FpAdd_8U_23U_qr_lpi_1_dfm_6 & fangyuan10;
  wire [7:0] fangyuan11;
  assign fangyuan11 = { _000_[2], _000_[2], _000_[2], _000_[2], _000_[2], _000_[2], _000_[2], _000_[2] };

  assign _084_ = FpNormalize_8U_49U_FpNormalize_8U_49U_and_nl & fangyuan11;
  wire [7:0] fangyuan12;
  assign fangyuan12 = { FpAdd_8U_23U_or_cse, FpAdd_8U_23U_or_cse, FpAdd_8U_23U_or_cse, FpAdd_8U_23U_or_cse, FpAdd_8U_23U_or_cse, FpAdd_8U_23U_or_cse, FpAdd_8U_23U_or_cse, FpAdd_8U_23U_or_cse };

  assign _085_ = FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4 & fangyuan12;
  wire [7:0] fangyuan13;
  assign fangyuan13 = { FpAdd_8U_23U_and_7_nl, FpAdd_8U_23U_and_7_nl, FpAdd_8U_23U_and_7_nl, FpAdd_8U_23U_and_7_nl, FpAdd_8U_23U_and_7_nl, FpAdd_8U_23U_and_7_nl, FpAdd_8U_23U_and_7_nl, FpAdd_8U_23U_and_7_nl };

  assign _086_ = 8'b11111110 & fangyuan13;
  wire [7:0] fangyuan14;
  assign fangyuan14 = { FpAdd_8U_23U_and_3_nl, FpAdd_8U_23U_and_3_nl, FpAdd_8U_23U_and_3_nl, FpAdd_8U_23U_and_3_nl, FpAdd_8U_23U_and_3_nl, FpAdd_8U_23U_and_3_nl, FpAdd_8U_23U_and_3_nl, FpAdd_8U_23U_and_3_nl };

  assign _087_ = FpAdd_8U_23U_if_4_if_acc_nl & fangyuan14;
  wire [7:0] fangyuan15;
  assign fangyuan15 = { FpAdd_8U_23U_and_nl, FpAdd_8U_23U_and_nl, FpAdd_8U_23U_and_nl, FpAdd_8U_23U_and_nl, FpAdd_8U_23U_and_nl, FpAdd_8U_23U_and_nl, FpAdd_8U_23U_and_nl, FpAdd_8U_23U_and_nl };

  assign _088_ = FpAdd_8U_23U_o_expo_lpi_1_dfm_2 & fangyuan15;
  assign FpAdd_8U_23U_is_a_greater_oif_equal_tmp = chn_a_rsci_d_mxwt[30:23] == chn_b_rsci_d_mxwt[30:23];
  assign _089_ = chn_b_rsci_d_mxwt[30:23] == 8'b11111111;
  assign _090_ = FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[48:25] == 24'b111111111111111111111111;
  assign _091_ = | chn_a_rsci_d_mxwt[22:0];
  assign _092_ = chn_a_rsci_d_mxwt[30:23] != 8'b11111111;
  assign _093_ = | chn_b_rsci_d_mxwt[22:0];
  assign _094_ = | chn_b_rsci_d_mxwt[30:0];
  assign _095_ = | chn_a_rsci_d_mxwt[30:0];
  assign _096_ = | FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0[48:0];
  assign _097_ = ~ FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm[7:1];
  assign nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s[0] = ~ FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm[0];
  assign _098_ = ~ FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm[7:1];
  assign nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s[0] = ~ FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm[0];
  assign _099_ = ~ main_stage_v_3;
  assign _100_ = ~ _132_;
  assign _101_ = ~ and_dcpl_7;
  assign _102_ = ~ reg_chn_o_rsci_ld_core_psct_cse;
  assign nor_36_cse = ~ or_cse;
  assign _103_ = ~ nor_tmp_11;
  assign nor_34_nl = ~ _133_;
  assign _104_ = ~ FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl[23];
  assign _105_ = ~ main_stage_v_1;
  assign nor_26_nl = ~ _134_;
  assign _106_ = ~ nor_tmp_1;
  assign nor_27_nl = ~ _135_;
  assign _107_ = ~ _091_;
  assign IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp = ~ _136_;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0 = ~ or_tmp_16;
  assign IsNaN_8U_23U_1_nor_tmp = ~ _093_;
  assign IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp = ~ _089_;
  assign _002_ = ~ chn_a_rsci_d_mxwt[30:23];
  assign _108_ = ~ FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0;
  assign _109_ = ~ libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1;
  assign _110_ = ~ FpAdd_8U_23U_if_3_if_acc_1_nl[7];
  assign _000_[2] = ~ FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2[49];
  assign _111_ = ~ FpAdd_8U_23U_if_4_if_acc_1_nl[7];
  assign FpAdd_8U_23U_is_inf_lpi_1_dfm = ~ _161_;
  assign FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c = ~ FpAdd_8U_23U_or_cse;
  assign _112_ = ~ FpAdd_8U_23U_qr_lpi_1_dfm_6;
  assign _113_ = ~ main_stage_v_2;
  assign nor_38_nl = ~ _162_;
  assign _114_ = ~ chn_o_rsci_bawt;
  assign _115_ = ~ IsNaN_8U_23U_land_lpi_1_dfm_st_4;
  assign _116_ = ~ FpAdd_8U_23U_is_a_greater_acc_1_nl[8];
  assign _117_ = ~ FpAdd_8U_23U_is_a_greater_oif_equal_tmp;
  assign _118_ = ~ IsNaN_8U_23U_land_lpi_1_dfm_6;
  assign _001_ = ~ chn_b_rsci_d_mxwt[22:0];
  assign _119_ = ~ main_stage_en_1;
  assign _120_ = ~ _059_;
  assign _121_ = ~ and_dcpl_15;
  assign _122_ = ~ main_stage_v_1_mx0c1;
  assign _123_ = ~ _186_;
  assign _124_ = ~ main_stage_v_2_mx0c1;
  assign _125_ = ~ main_stage_v_3_mx0c1;
  assign _126_ = ~ IsNaN_8U_23U_1_land_lpi_1_dfm_4;
  assign _127_ = ~ _172_;
  assign _128_ = ~ FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0;
  assign _129_ = ~ mux_tmp_5;
  assign nor_37_nl = ~ _173_;
  assign nor_31_nl = ~ _175_;
  assign _130_ = ~ _078_;
  assign nor_28_nl = ~ _176_;
  assign _131_ = ~ _177_;
  assign nor_29_nl = ~ _179_;
  assign _132_ = and_dcpl_7 | _099_;
  assign FpAdd_8U_23U_or_cse = IsNaN_8U_23U_1_land_lpi_1_dfm_4 | IsNaN_8U_23U_land_lpi_1_dfm_6;
  assign or_cse = chn_o_rsci_bawt | _102_;
  assign or_10_nl = nor_36_cse | nor_tmp_11;
  assign _133_ = reg_chn_o_rsci_ld_core_psct_cse | _103_;
  assign FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse = _053_ | FpAdd_8U_23U_is_a_greater_acc_1_nl[8];
  assign FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse = and_dcpl_28 | and_dcpl_29;
  assign FpSignedBitsToFloat_8U_23U_FpAdd_8U_23U_or_1_cse = _054_ | and_dcpl_33;
  assign _134_ = IsNaN_8U_23U_land_lpi_1_dfm_st_4 | _105_;
  assign _135_ = IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp | _106_;
  assign _136_ = _107_ | _092_;
  assign or_tmp_16 = IsNaN_8U_23U_1_nor_itm_2 | IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2;
  assign _137_ = FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[0] | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[1];
  assign _138_ = _137_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[2];
  assign _139_ = _138_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[3];
  assign _140_ = _139_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[4];
  assign _141_ = _140_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[5];
  assign _142_ = _141_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[6];
  assign _143_ = _142_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[7];
  assign _144_ = _143_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[8];
  assign _145_ = _144_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[9];
  assign _146_ = _145_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[10];
  assign _147_ = _146_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[11];
  assign _148_ = _147_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[12];
  assign _149_ = _148_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[13];
  assign _150_ = _149_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[14];
  assign _151_ = _150_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[15];
  assign _152_ = _151_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[16];
  assign _153_ = _152_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[17];
  assign _154_ = _153_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[18];
  assign _155_ = _154_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[19];
  assign _156_ = _155_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[20];
  assign _157_ = _156_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[21];
  assign _158_ = _157_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[22];
  assign _159_ = _158_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[23];
  assign _160_ = _159_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[25];
  assign FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl = FpAdd_8U_23U_is_inf_lpi_1_dfm | _111_;
  assign _161_ = FpAdd_8U_23U_if_3_if_acc_1_nl[7] | _000_[2];
  assign or_tmp_3 = nor_36_cse | main_stage_v_2;
  assign _162_ = reg_chn_o_rsci_ld_core_psct_cse | _113_;
  assign _163_ = IsNaN_8U_23U_1_land_lpi_1_dfm_3 | IsNaN_8U_23U_land_lpi_1_dfm_5;
  assign _164_ = FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl[23] | _117_;
  assign or_tmp_29 = main_stage_en_1 | fsm_output[0];
  assign _165_ = _061_ | chn_o_rsci_d_22_0_mx0c1;
  assign _166_ = and_dcpl_13 | and_dcpl_15;
  assign _167_ = or_tmp_35 | main_stage_v_1_mx0c1;
  assign _168_ = _065_ | main_stage_v_2_mx0c1;
  assign _169_ = _067_ | main_stage_v_3_mx0c1;
  assign _170_ = and_dcpl_29 | FpSignedBitsToFloat_8U_23U_and_rgt;
  assign _171_ = _170_ | FpSignedBitsToFloat_8U_23U_and_1_rgt;
  assign _172_ = FpAdd_8U_23U_and_tmp | FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0;
  assign _173_ = FpAdd_8U_23U_mux_2_tmp_49 | _129_;
  assign _174_ = FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2[49] | _099_;
  assign _175_ = or_tmp_16 | _105_;
  assign _176_ = IsNaN_8U_23U_land_lpi_1_dfm_st_4 | _130_;
  assign _177_ = IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp | IsNaN_8U_23U_1_nor_tmp;
  assign _178_ = _131_ | IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp;
  assign _179_ = _178_ | _106_;
  assign _180_ = _079_ | _080_;
  assign _181_ = _180_ | _081_;
  assign _182_ = _082_ | _083_;
  assign FpAdd_8U_23U_o_expo_lpi_1_dfm_2 = _182_ | _084_;
  assign _183_ = _085_ | _086_;
  assign _184_ = _183_ | _087_;
  assign _185_ = _184_ | _088_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      IsNaN_8U_23U_1_nor_itm_2 <= 1'b0;
    else
      IsNaN_8U_23U_1_nor_itm_2 <= _027_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2 <= 1'b0;
    else
      IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2 <= _024_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpAdd_8U_23U_mux_1_itm_2 <= 1'b0;
    else
      FpAdd_8U_23U_mux_1_itm_2 <= _013_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpAdd_8U_23U_qr_lpi_1_dfm_4 <= 8'b00000000;
    else
      FpAdd_8U_23U_qr_lpi_1_dfm_4 <= _014_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpAdd_8U_23U_mux_13_itm_3 <= 1'b0;
    else
      FpAdd_8U_23U_mux_13_itm_3 <= _011_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3 <= 8'b00000000;
    else
      FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3 <= _020_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3 <= 23'b00000000000000000000000;
    else
      FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3 <= _018_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4 <= 23'b00000000000000000000000;
    else
      FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4 <= _019_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4 <= 8'b00000000;
    else
      FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4 <= _021_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpNormalize_8U_49U_if_or_itm_2 <= 1'b0;
    else
      FpNormalize_8U_49U_if_or_itm_2 <= _017_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      IsNaN_8U_23U_1_land_lpi_1_dfm_4 <= 1'b0;
    else
      IsNaN_8U_23U_1_land_lpi_1_dfm_4 <= _026_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpAdd_8U_23U_qr_lpi_1_dfm_6 <= 8'b00000000;
    else
      FpAdd_8U_23U_qr_lpi_1_dfm_6 <= _016_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2 <= 50'b00000000000000000000000000000000000000000000000000;
    else
      FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2 <= _007_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      IsNaN_8U_23U_land_lpi_1_dfm_6 <= 1'b0;
    else
      IsNaN_8U_23U_land_lpi_1_dfm_6 <= _029_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpAdd_8U_23U_mux_13_itm_4 <= 1'b0;
    else
      FpAdd_8U_23U_mux_13_itm_4 <= _012_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      main_stage_v_3 <= 1'b0;
    else
      main_stage_v_3 <= _037_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      IsNaN_8U_23U_1_land_lpi_1_dfm_3 <= 1'b0;
    else
      IsNaN_8U_23U_1_land_lpi_1_dfm_3 <= _025_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5 <= 1'b0;
    else
      FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5 <= _009_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpAdd_8U_23U_qr_lpi_1_dfm_5 <= 8'b00000000;
    else
      FpAdd_8U_23U_qr_lpi_1_dfm_5 <= _015_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpAdd_8U_23U_a_int_mant_p1_sva_2 <= 49'b0000000000000000000000000000000000000000000000000;
    else
      FpAdd_8U_23U_a_int_mant_p1_sva_2 <= _005_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpAdd_8U_23U_b_int_mant_p1_sva_2 <= 49'b0000000000000000000000000000000000000000000000000;
    else
      FpAdd_8U_23U_b_int_mant_p1_sva_2 <= _006_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      IsNaN_8U_23U_land_lpi_1_dfm_5 <= 1'b0;
    else
      IsNaN_8U_23U_land_lpi_1_dfm_5 <= _028_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xnor_svs_2_cse <= 1'b0;
    else
      reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xnor_svs_2_cse <= _038_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      main_stage_v_2 <= 1'b0;
    else
      main_stage_v_2 <= _036_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpSignedBitsToFloat_8U_23U_bits_sva_36 <= 32'd0;
    else
      FpSignedBitsToFloat_8U_23U_bits_sva_36 <= _023_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpSignedBitsToFloat_8U_23U_bits_1_sva_36 <= 32'd0;
    else
      FpSignedBitsToFloat_8U_23U_bits_1_sva_36 <= _022_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4 <= 1'b0;
    else
      FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4 <= _008_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xnor_svs_3 <= 1'b0;
    else
      FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xnor_svs_3 <= _010_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpAdd_8U_23U_IsZero_8U_23U_or_itm_2 <= 1'b0;
    else
      FpAdd_8U_23U_IsZero_8U_23U_or_itm_2 <= _004_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2 <= 1'b0;
    else
      FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2 <= _003_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      IsNaN_8U_23U_land_lpi_1_dfm_st_4 <= 1'b0;
    else
      IsNaN_8U_23U_land_lpi_1_dfm_st_4 <= _030_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      main_stage_v_1 <= 1'b0;
    else
      main_stage_v_1 <= _035_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      reg_chn_o_rsci_ld_core_psct_cse <= 1'b0;
    else
      reg_chn_o_rsci_ld_core_psct_cse <= _041_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_o_rsci_d_31 <= 1'b0;
    else
      chn_o_rsci_d_31 <= _033_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_o_rsci_d_30_23 <= 8'b00000000;
    else
      chn_o_rsci_d_30_23 <= _032_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_o_rsci_d_22_0 <= 23'b00000000000000000000000;
    else
      chn_o_rsci_d_22_0 <= _031_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      reg_chn_b_rsci_ld_core_psct_cse <= 1'b0;
    else
      reg_chn_b_rsci_ld_core_psct_cse <= _040_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_o_rsci_iswt0 <= 1'b0;
    else
      chn_o_rsci_iswt0 <= _034_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      reg_chn_b_rsci_iswt0_cse <= 1'b0;
    else
      reg_chn_b_rsci_iswt0_cse <= _039_;
  assign mux_27_nl = or_cse ? nor_29_nl : nor_28_nl;
  assign mux_23_nl = or_cse ? mux_24_nl : nor_tmp_11;
  assign mux_24_nl = IsNaN_8U_23U_land_lpi_1_dfm_st_4 ? main_stage_v_1 : nor_31_nl;
  assign mux_8_nl = _174_ ? nor_37_nl : mux_7_nl;
  assign mux_7_nl = FpAdd_8U_23U_mux_2_tmp_49 ? nor_36_cse : or_tmp_3;
  assign FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl = FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0 ? 23'b11111111111111111111111 : FpMantRNE_49U_24U_else_acc_nl;
  assign mux_tmp_5 = chn_o_rsci_bawt ? main_stage_v_2 : nor_38_nl;
  assign FpAdd_8U_23U_mux_2_tmp_49 = reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xnor_svs_2_cse ? FpAdd_8U_23U_asn_5_mx0w0[49] : FpAdd_8U_23U_asn_4_mx0w1[49];
  assign FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm = FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4 ? 8'b00000000 : FpAdd_8U_23U_a_right_shift_qelse_acc_nl;
  assign FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm = FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4 ? FpAdd_8U_23U_b_right_shift_qif_acc_nl : 8'b00000000;
  assign FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0 = FpMantRNE_49U_24U_else_and_tmp ? FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl : FpAdd_8U_23U_is_inf_lpi_1_dfm;
  wire [48:0] fangyuan16;
  assign fangyuan16 = { 1'b1, FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2[48:1] };

  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0 = FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2[49] ? fangyuan16 : FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl;
  assign FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl = FpNormalize_8U_49U_oelse_not_3 ? FpNormalize_8U_49U_else_lshift_itm : 49'b0000000000000000000000000000000000000000000000000;
  assign FpNormalize_8U_49U_FpNormalize_8U_49U_and_nl = FpNormalize_8U_49U_oelse_not_3 ? FpNormalize_8U_49U_else_acc_nl : 8'b00000000;
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0 = reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xnor_svs_2_cse ? FpAdd_8U_23U_asn_5_mx0w0 : FpAdd_8U_23U_asn_4_mx0w1;
  assign FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0 = FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5 ? FpAdd_8U_23U_b_int_mant_p1_sva_2 : FpAdd_8U_23U_a_int_mant_p1_sva_2;
  assign FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0 = FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5 ? FpAdd_8U_23U_a_int_mant_p1_sva_2 : FpAdd_8U_23U_b_int_mant_p1_sva_2;
  assign mux_28_nl = or_cse ? nor_27_nl : nor_26_nl;
  assign mux_13_cse = or_cse ? nor_tmp_1 : main_stage_v_1;
  assign mux_10_nl = and_67_nl ? or_10_nl : mux_9_nl;
  assign mux_9_nl = chn_o_rsci_bawt ? nor_tmp_11 : nor_34_nl;
  assign mux_6_nl = main_stage_v_3 ? or_tmp_3 : mux_tmp_5;
  assign mux_4_cse = or_cse ? main_stage_v_1 : main_stage_v_2;
  assign _024_ = IsNaN_8U_23U_1_and_cse ? IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp : IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2;
  assign _027_ = IsNaN_8U_23U_1_and_cse ? IsNaN_8U_23U_1_nor_tmp : IsNaN_8U_23U_1_nor_itm_2;
  assign _042_ = and_dcpl_33 ? chn_b_rsci_d_mxwt[31] : chn_a_rsci_d_mxwt[31];
  assign _013_ = _076_ ? _042_ : FpAdd_8U_23U_mux_1_itm_2;
  assign _046_ = and_dcpl_33 ? chn_b_rsci_d_mxwt[30:23] : chn_a_rsci_d_mxwt[30:23];
  assign _014_ = _075_ ? _046_ : FpAdd_8U_23U_qr_lpi_1_dfm_4;
  assign _011_ = _073_ ? _181_ : FpAdd_8U_23U_mux_13_itm_3;
  assign _045_ = and_dcpl_29 ? FpSignedBitsToFloat_8U_23U_bits_sva_36[30:23] : FpSignedBitsToFloat_8U_23U_bits_1_sva_36[30:23];
  assign _020_ = _071_ ? _045_ : FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3;
  assign _044_ = and_dcpl_29 ? FpSignedBitsToFloat_8U_23U_bits_sva_36[22:0] : FpSignedBitsToFloat_8U_23U_bits_1_sva_36[22:0];
  assign _018_ = _071_ ? _044_ : FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3;
  assign _021_ = FpSignedBitsToFloat_8U_23U_1_and_1_cse ? FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3 : FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4;
  assign _019_ = FpSignedBitsToFloat_8U_23U_1_and_1_cse ? FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3 : FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4;
  assign _017_ = _069_ ? _096_ : FpNormalize_8U_49U_if_or_itm_2;
  assign _012_ = FpAdd_8U_23U_and_8_cse ? FpAdd_8U_23U_mux_13_itm_3 : FpAdd_8U_23U_mux_13_itm_4;
  assign _029_ = FpAdd_8U_23U_and_8_cse ? IsNaN_8U_23U_land_lpi_1_dfm_5 : IsNaN_8U_23U_land_lpi_1_dfm_6;
  assign _007_ = FpAdd_8U_23U_and_8_cse ? FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0 : FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2;
  assign _016_ = FpAdd_8U_23U_and_8_cse ? FpAdd_8U_23U_qr_lpi_1_dfm_5 : FpAdd_8U_23U_qr_lpi_1_dfm_6;
  assign _026_ = FpAdd_8U_23U_and_8_cse ? IsNaN_8U_23U_1_land_lpi_1_dfm_3 : IsNaN_8U_23U_1_land_lpi_1_dfm_4;
  assign _037_ = _068_ ? _125_ : main_stage_v_3;
  assign _038_ = FpAdd_8U_23U_is_addition_and_cse ? FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xnor_svs_3 : reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xnor_svs_2_cse;
  assign _028_ = FpAdd_8U_23U_is_addition_and_cse ? IsNaN_8U_23U_land_lpi_1_dfm_st_4 : IsNaN_8U_23U_land_lpi_1_dfm_5;
  assign _006_ = FpAdd_8U_23U_is_addition_and_cse ? FpAdd_8U_23U_b_int_mant_p1_lshift_itm : FpAdd_8U_23U_b_int_mant_p1_sva_2;
  assign _005_ = FpAdd_8U_23U_is_addition_and_cse ? FpAdd_8U_23U_a_int_mant_p1_lshift_itm : FpAdd_8U_23U_a_int_mant_p1_sva_2;
  assign _015_ = FpAdd_8U_23U_is_addition_and_cse ? FpAdd_8U_23U_qr_lpi_1_dfm_4 : FpAdd_8U_23U_qr_lpi_1_dfm_5;
  assign _009_ = FpAdd_8U_23U_is_addition_and_cse ? FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4 : FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5;
  assign _025_ = FpAdd_8U_23U_is_addition_and_cse ? IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0 : IsNaN_8U_23U_1_land_lpi_1_dfm_3;
  assign _036_ = _066_ ? _124_ : main_stage_v_2;
  assign _030_ = IsNaN_8U_23U_aelse_and_cse ? IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp : IsNaN_8U_23U_land_lpi_1_dfm_st_4;
  assign _003_ = IsNaN_8U_23U_aelse_and_cse ? _094_ : FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2;
  assign _004_ = IsNaN_8U_23U_aelse_and_cse ? _095_ : FpAdd_8U_23U_IsZero_8U_23U_or_itm_2;
  assign _010_ = IsNaN_8U_23U_aelse_and_cse ? _123_ : FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xnor_svs_3;
  assign _008_ = IsNaN_8U_23U_aelse_and_cse ? FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse : FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4;
  assign _022_ = IsNaN_8U_23U_aelse_and_cse ? chn_b_rsci_d_mxwt : FpSignedBitsToFloat_8U_23U_bits_1_sva_36;
  assign _023_ = IsNaN_8U_23U_aelse_and_cse ? chn_a_rsci_d_mxwt : FpSignedBitsToFloat_8U_23U_bits_sva_36;
  assign _035_ = _064_ ? _122_ : main_stage_v_1;
  assign _041_ = _063_ ? _121_ : reg_chn_o_rsci_ld_core_psct_cse;
  assign _032_ = chn_o_and_1_cse ? _185_ : chn_o_rsci_d_30_23;
  assign _033_ = chn_o_and_1_cse ? FpAdd_8U_23U_mux_13_itm_4 : chn_o_rsci_d_31;
  assign _043_ = FpSignedBitsToFloat_8U_23U_1_and_nl ? FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl : FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4;
  assign _031_ = _062_ ? _043_ : chn_o_rsci_d_22_0;
  assign _040_ = _060_ ? or_tmp_29 : reg_chn_b_rsci_ld_core_psct_cse;
  assign _039_ = core_wen ? _120_ : reg_chn_b_rsci_iswt0_cse;
  assign _034_ = core_wen ? and_dcpl_13 : chn_o_rsci_iswt0;
  assign FpAdd_8U_23U_b_right_shift_qif_acc_nl = FpSignedBitsToFloat_8U_23U_bits_sva_36[30:23] - FpSignedBitsToFloat_8U_23U_bits_1_sva_36[30:23];
  assign FpAdd_8U_23U_a_right_shift_qelse_acc_nl = FpSignedBitsToFloat_8U_23U_bits_1_sva_36[30:23] - FpSignedBitsToFloat_8U_23U_bits_sva_36[30:23];
  assign _186_ = chn_a_rsci_d_mxwt[31] ^ chn_b_rsci_d_mxwt[31];
  \$paramod\FP32_ADD_mgc_shift_bl_v4\width_a=24\signd_a=0\width_s=9\width_z=49 FpAdd_8U_23U_a_int_mant_p1_lshift_rg (
    .a({ FpAdd_8U_23U_IsZero_8U_23U_or_itm_2, FpSignedBitsToFloat_8U_23U_bits_sva_36[22:0] }),
    .s({ FpAdd_8U_23U_a_left_shift_acc_nl, nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s[0] }),
    .z(FpAdd_8U_23U_a_int_mant_p1_lshift_itm)
  );
  \$paramod\FP32_ADD_mgc_shift_bl_v4\width_a=24\signd_a=0\width_s=9\width_z=49 FpAdd_8U_23U_b_int_mant_p1_lshift_rg (
    .a({ FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2, FpSignedBitsToFloat_8U_23U_bits_1_sva_36[22:0] }),
    .s({ FpAdd_8U_23U_b_left_shift_acc_nl, nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s[0] }),
    .z(FpAdd_8U_23U_b_int_mant_p1_lshift_itm)
  );
  \$paramod\FP32_ADD_mgc_shift_l_v4\width_a=49\signd_a=0\width_s=6\width_z=49 FpNormalize_8U_49U_else_lshift_rg (
    .a(FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2[48:0]),
    .s(libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1),
    .z(FpNormalize_8U_49U_else_lshift_itm)
  );
  HLS_fp32_add_core_chn_a_rsci HLS_fp32_add_core_chn_a_rsci_inst (
    .chn_a_rsc_lz(chn_a_rsc_lz),
    .chn_a_rsc_vz(chn_a_rsc_vz),
    .chn_a_rsc_z(chn_a_rsc_z),
    .chn_a_rsci_bawt(chn_a_rsci_bawt),
    .chn_a_rsci_d_mxwt(chn_a_rsci_d_mxwt),
    .chn_a_rsci_iswt0(reg_chn_b_rsci_iswt0_cse),
    .chn_a_rsci_ld_core_psct(reg_chn_b_rsci_ld_core_psct_cse),
    .chn_a_rsci_oswt(chn_a_rsci_oswt),
    .chn_a_rsci_wen_comp(chn_a_rsci_wen_comp),
    .core_wen(core_wen),
    .core_wten(core_wten),
    .nvdla_core_clk(nvdla_core_clk),
    .nvdla_core_rstn(nvdla_core_rstn)
  );
  HLS_fp32_add_core_chn_b_rsci HLS_fp32_add_core_chn_b_rsci_inst (
    .chn_b_rsc_lz(chn_b_rsc_lz),
    .chn_b_rsc_vz(chn_b_rsc_vz),
    .chn_b_rsc_z(chn_b_rsc_z),
    .chn_b_rsci_bawt(chn_b_rsci_bawt),
    .chn_b_rsci_d_mxwt(chn_b_rsci_d_mxwt),
    .chn_b_rsci_iswt0(reg_chn_b_rsci_iswt0_cse),
    .chn_b_rsci_ld_core_psct(reg_chn_b_rsci_ld_core_psct_cse),
    .chn_b_rsci_oswt(chn_b_rsci_oswt),
    .chn_b_rsci_wen_comp(chn_b_rsci_wen_comp),
    .core_wen(core_wen),
    .core_wten(core_wten),
    .nvdla_core_clk(nvdla_core_clk),
    .nvdla_core_rstn(nvdla_core_rstn)
  );
  HLS_fp32_add_core_chn_o_rsci HLS_fp32_add_core_chn_o_rsci_inst (
    .chn_o_rsc_lz(chn_o_rsc_lz),
    .chn_o_rsc_vz(chn_o_rsc_vz),
    .chn_o_rsc_z(chn_o_rsc_z),
    .chn_o_rsci_bawt(chn_o_rsci_bawt),
    .chn_o_rsci_d({ chn_o_rsci_d_31, chn_o_rsci_d_30_23, chn_o_rsci_d_22_0 }),
    .chn_o_rsci_iswt0(chn_o_rsci_iswt0),
    .chn_o_rsci_ld_core_psct(reg_chn_o_rsci_ld_core_psct_cse),
    .chn_o_rsci_oswt(chn_o_rsci_oswt),
    .chn_o_rsci_wen_comp(chn_o_rsci_wen_comp),
    .core_wen(core_wen),
    .core_wten(core_wten),
    .nvdla_core_clk(nvdla_core_clk),
    .nvdla_core_rstn(nvdla_core_rstn)
  );
  HLS_fp32_add_core_core_fsm HLS_fp32_add_core_core_fsm_inst (
    .core_wen(core_wen),
    .fsm_output(fsm_output),
    .nvdla_core_clk(nvdla_core_clk),
    .nvdla_core_rstn(nvdla_core_rstn)
  );
  HLS_fp32_add_core_staller HLS_fp32_add_core_staller_inst (
    .chn_a_rsci_wen_comp(chn_a_rsci_wen_comp),
    .chn_b_rsci_wen_comp(chn_b_rsci_wen_comp),
    .chn_o_rsci_wen_comp(chn_o_rsci_wen_comp),
    .core_wen(core_wen),
    .core_wten(core_wten),
    .nvdla_core_clk(nvdla_core_clk),
    .nvdla_core_rstn(nvdla_core_rstn)
  );
  FP32_ADD_leading_sign_49_0 leading_sign_49_0_rg (
    .mantissa(FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2[48:0]),
    .rtn(libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1)
  );
  assign _000_[1:0] = { FpAdd_8U_23U_and_1_nl, FpAdd_8U_23U_and_2_nl };
  assign _049_[9] = 1'b0;
  assign _050_[10] = 1'b0;
  assign _051_[25] = 1'b0;
  assign FpAdd_8U_23U_if_3_if_acc_1_itm_7_1 = FpAdd_8U_23U_if_3_if_acc_1_nl[7];
  assign FpAdd_8U_23U_if_4_if_acc_1_itm_7_1 = FpAdd_8U_23U_if_4_if_acc_1_nl[7];
  assign FpAdd_8U_23U_is_a_greater_acc_1_itm_8_1 = FpAdd_8U_23U_is_a_greater_acc_1_nl[8];
  assign FpAdd_8U_23U_is_a_greater_oif_aelse_acc_itm_23_1 = FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl[23];
  assign chn_a_rsci_oswt_unreg_pff = or_tmp_35;
  assign chn_o_rsci_oswt_unreg = and_dcpl_14;
  assign mux_22_nl = mux_24_nl;
  assign mux_25_nl = mux_23_nl;
  assign nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_a = { FpAdd_8U_23U_IsZero_8U_23U_or_itm_2, FpSignedBitsToFloat_8U_23U_bits_sva_36[22:0] };
  assign nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s[8:1] = FpAdd_8U_23U_a_left_shift_acc_nl;
  assign nl_FpAdd_8U_23U_a_left_shift_acc_nl[7:0] = FpAdd_8U_23U_a_left_shift_acc_nl;
  assign nl_FpAdd_8U_23U_a_right_shift_qelse_acc_nl[7:0] = FpAdd_8U_23U_a_right_shift_qelse_acc_nl;
  assign nl_FpAdd_8U_23U_asn_4_mx0w1[49:0] = FpAdd_8U_23U_asn_4_mx0w1;
  assign nl_FpAdd_8U_23U_asn_5_mx0w0[49:0] = FpAdd_8U_23U_asn_5_mx0w0;
  assign nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_a = { FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2, FpSignedBitsToFloat_8U_23U_bits_1_sva_36[22:0] };
  assign nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s[8:1] = FpAdd_8U_23U_b_left_shift_acc_nl;
  assign nl_FpAdd_8U_23U_b_left_shift_acc_nl[7:0] = FpAdd_8U_23U_b_left_shift_acc_nl;
  assign nl_FpAdd_8U_23U_b_right_shift_qif_acc_nl[7:0] = FpAdd_8U_23U_b_right_shift_qif_acc_nl;
  assign nl_FpAdd_8U_23U_if_3_if_acc_1_nl[7:0] = FpAdd_8U_23U_if_3_if_acc_1_nl;
  assign nl_FpAdd_8U_23U_if_3_if_acc_nl[7:0] = FpAdd_8U_23U_if_3_if_acc_nl;
  assign nl_FpAdd_8U_23U_if_4_if_acc_1_nl[7:0] = FpAdd_8U_23U_if_4_if_acc_1_nl;
  assign nl_FpAdd_8U_23U_if_4_if_acc_nl[7:0] = FpAdd_8U_23U_if_4_if_acc_nl;
  assign nl_FpAdd_8U_23U_is_a_greater_acc_1_nl[8:0] = FpAdd_8U_23U_is_a_greater_acc_1_nl;
  assign nl_FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl[23:0] = FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl;
  assign nl_FpMantRNE_49U_24U_else_acc_nl[22:0] = FpMantRNE_49U_24U_else_acc_nl;
  assign nl_FpNormalize_8U_49U_acc_nl[8:0] = FpNormalize_8U_49U_acc_nl;
  assign nl_FpNormalize_8U_49U_else_acc_nl[7:0] = FpNormalize_8U_49U_else_acc_nl;
  assign nl_FpNormalize_8U_49U_else_lshift_rg_a = FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2[48:0];
  assign nl_HLS_fp32_add_core_chn_o_rsci_inst_chn_o_rsci_d = { chn_o_rsci_d_31, chn_o_rsci_d_30_23, chn_o_rsci_d_22_0 };
  assign nl_leading_sign_49_0_rg_mantissa = FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2[48:0];
  assign nor_32_nl = nor_31_nl;
endmodule
