  output [31:0] d;
  logic [31:0] d ;
  output [31:0] d_T ;
  logic [31:0] d_T ;
  logic [31:0] d_R ;
  logic [31:0] d_C ;
  logic [31:0] d_X ;
  logic [13:0] d_S ;
  input [31:0] d_R0 ;
  input [31:0] d_C0 ;
  input [31:0] d_X0 ;
  output [13:0] d_S ;
  input [31:0] z;
  input [31:0] z_T ;
  input [13:0] z_S ;
  output [31:0] z_R ;
  output [31:0] z_X ;
  output [31:0] z_C ;
  assign d = z;
  logic [31:0] z_C0 ;
  logic [31:0] z_R0 ;
  logic [31:0] z_X0 ;
  assign d_T = z_T ;
  assign z_C0 = d_C ;
  assign z_R0 = d_R ;
  assign z_X0 = d_X ;
  assign d_S = z_S ;
  assign z_C = ( z_C0 );
  assign d_C = ( d_C0 );
  assign z_X = ( z_X0 );
  assign d_X = ( d_X0 );
  assign z_R = ( z_X0 & z_R0 );
  assign d_R = ( d_X0 & d_R0 );
 // ground taints for floating regs
 // ground taints for unused wires
 // ground taints for unused wire slices
endmodule
