  logic [160:0] _000_;
  logic [160:0] _000__T ;
  logic [160:0] _000__R ;
  logic [160:0] _000__C ;
  logic [160:0] _000__X ;
  logic [13:0] _000__S ;
  logic [160:0] _001_;
  logic [160:0] _001__T ;
  logic [160:0] _001__R ;
  logic [160:0] _001__C ;
  logic [160:0] _001__X ;
  logic [13:0] _001__S ;
  logic [160:0] _002_;
  logic [160:0] _002__T ;
  logic [160:0] _002__R ;
  logic [160:0] _002__C ;
  logic [160:0] _002__X ;
  logic [13:0] _002__S ;
  logic [160:0] _003_;
  logic [160:0] _003__T ;
  logic [160:0] _003__R ;
  logic [160:0] _003__C ;
  logic [160:0] _003__X ;
  logic [13:0] _003__S ;
  logic [160:0] _004_;
  logic [160:0] _004__T ;
  logic [160:0] _004__R ;
  logic [160:0] _004__C ;
  logic [160:0] _004__X ;
  logic [13:0] _004__S ;
  logic [160:0] _005_;
  logic [160:0] _005__T ;
  logic [160:0] _005__R ;
  logic [160:0] _005__C ;
  logic [160:0] _005__X ;
  logic [13:0] _005__S ;
  logic [160:0] _006_;
  logic [160:0] _006__T ;
  logic [160:0] _006__R ;
  logic [160:0] _006__C ;
  logic [160:0] _006__X ;
  logic [13:0] _006__S ;
  logic [160:0] _007_;
  logic [160:0] _007__T ;
  logic [160:0] _007__R ;
  logic [160:0] _007__C ;
  logic [160:0] _007__X ;
  logic [13:0] _007__S ;
  logic [160:0] _008_;
  logic [160:0] _008__T ;
  logic [160:0] _008__R ;
  logic [160:0] _008__C ;
  logic [160:0] _008__X ;
  logic [13:0] _008__S ;
  logic [160:0] _009_;
  logic [160:0] _009__T ;
  logic [160:0] _009__R ;
  logic [160:0] _009__C ;
  logic [160:0] _009__X ;
  logic [13:0] _009__S ;
  logic [160:0] _010_;
  logic [160:0] _010__T ;
  logic [160:0] _010__R ;
  logic [160:0] _010__C ;
  logic [160:0] _010__X ;
  logic [13:0] _010__S ;
  logic [160:0] _011_;
  logic [160:0] _011__T ;
  logic [160:0] _011__R ;
  logic [160:0] _011__C ;
  logic [160:0] _011__X ;
  logic [13:0] _011__S ;
  logic [160:0] _012_;
  logic [160:0] _012__T ;
  logic [160:0] _012__R ;
  logic [160:0] _012__C ;
  logic [160:0] _012__X ;
  logic [13:0] _012__S ;
  logic [160:0] _013_;
  logic [160:0] _013__T ;
  logic [160:0] _013__R ;
  logic [160:0] _013__C ;
  logic [160:0] _013__X ;
  logic [13:0] _013__S ;
  logic [160:0] _014_;
  logic [160:0] _014__T ;
  logic [160:0] _014__R ;
  logic [160:0] _014__C ;
  logic [160:0] _014__X ;
  logic [13:0] _014__S ;
  logic [160:0] _015_;
  logic [160:0] _015__T ;
  logic [160:0] _015__R ;
  logic [160:0] _015__C ;
  logic [160:0] _015__X ;
  logic [13:0] _015__S ;
  logic [160:0] _016_;
  logic [160:0] _016__T ;
  logic [160:0] _016__R ;
  logic [160:0] _016__C ;
  logic [160:0] _016__X ;
  logic [13:0] _016__S ;
  logic [160:0] _017_;
  logic [160:0] _017__T ;
  logic [160:0] _017__R ;
  logic [160:0] _017__C ;
  logic [160:0] _017__X ;
  logic [13:0] _017__S ;
  logic [160:0] _018_;
  logic [160:0] _018__T ;
  logic [160:0] _018__R ;
  logic [160:0] _018__C ;
  logic [160:0] _018__X ;
  logic [13:0] _018__S ;
  logic [160:0] _019_;
  logic [160:0] _019__T ;
  logic [160:0] _019__R ;
  logic [160:0] _019__C ;
  logic [160:0] _019__X ;
  logic [13:0] _019__S ;
  logic [160:0] _020_;
  logic [160:0] _020__T ;
  logic [160:0] _020__R ;
  logic [160:0] _020__C ;
  logic [160:0] _020__X ;
  logic [13:0] _020__S ;
  logic _021_;
  logic _021__T ;
  logic _021__R ;
  logic _021__C ;
  logic _021__X ;
  logic [13:0] _021__S ;
  logic _022_;
  logic _022__T ;
  logic _022__R ;
  logic _022__C ;
  logic _022__X ;
  logic [13:0] _022__S ;
  logic _023_;
  logic _023__T ;
  logic _023__R ;
  logic _023__C ;
  logic _023__X ;
  logic [13:0] _023__S ;
  logic _024_;
  logic _024__T ;
  logic _024__R ;
  logic _024__C ;
  logic _024__X ;
  logic [13:0] _024__S ;
  logic _025_;
  logic _025__T ;
  logic _025__R ;
  logic _025__C ;
  logic _025__X ;
  logic [13:0] _025__S ;
  logic _026_;
  logic _026__T ;
  logic _026__R ;
  logic _026__C ;
  logic _026__X ;
  logic [13:0] _026__S ;
  logic _027_;
  logic _027__T ;
  logic _027__R ;
  logic _027__C ;
  logic _027__X ;
  logic [13:0] _027__S ;
  logic _028_;
  logic _028__T ;
  logic _028__R ;
  logic _028__C ;
  logic _028__X ;
  logic [13:0] _028__S ;
  logic _029_;
  logic _029__T ;
  logic _029__R ;
  logic _029__C ;
  logic _029__X ;
  logic [13:0] _029__S ;
  logic _030_;
  logic _030__T ;
  logic _030__R ;
  logic _030__C ;
  logic _030__X ;
  logic [13:0] _030__S ;
  logic _031_;
  logic _031__T ;
  logic _031__R ;
  logic _031__C ;
  logic _031__X ;
  logic [13:0] _031__S ;
  logic _032_;
  logic _032__T ;
  logic _032__R ;
  logic _032__C ;
  logic _032__X ;
  logic [13:0] _032__S ;
  logic _033_;
  logic _033__T ;
  logic _033__R ;
  logic _033__C ;
  logic _033__X ;
  logic [13:0] _033__S ;
  logic _034_;
  logic _034__T ;
  logic _034__R ;
  logic _034__C ;
  logic _034__X ;
  logic [13:0] _034__S ;
  logic _035_;
  logic _035__T ;
  logic _035__R ;
  logic _035__C ;
  logic _035__X ;
  logic [13:0] _035__S ;
  logic _036_;
  logic _036__T ;
  logic _036__R ;
  logic _036__C ;
  logic _036__X ;
  logic [13:0] _036__S ;
  logic _037_;
  logic _037__T ;
  logic _037__R ;
  logic _037__C ;
  logic _037__X ;
  logic [13:0] _037__S ;
  logic _038_;
  logic _038__T ;
  logic _038__R ;
  logic _038__C ;
  logic _038__X ;
  logic [13:0] _038__S ;
  logic _039_;
  logic _039__T ;
  logic _039__R ;
  logic _039__C ;
  logic _039__X ;
  logic [13:0] _039__S ;
  logic _040_;
  logic _040__T ;
  logic _040__R ;
  logic _040__C ;
  logic _040__X ;
  logic [13:0] _040__S ;
  logic _041_;
  logic _041__T ;
  logic _041__R ;
  logic _041__C ;
  logic _041__X ;
  logic [13:0] _041__S ;
  logic _042_;
  logic _042__T ;
  logic _042__R ;
  logic _042__C ;
  logic _042__X ;
  logic [13:0] _042__S ;
  logic _043_;
  logic _043__T ;
  logic _043__R ;
  logic _043__C ;
  logic _043__X ;
  logic [13:0] _043__S ;
  logic _044_;
  logic _044__T ;
  logic _044__R ;
  logic _044__C ;
  logic _044__X ;
  logic [13:0] _044__S ;
  logic _045_;
  logic _045__T ;
  logic _045__R ;
  logic _045__C ;
  logic _045__X ;
  logic [13:0] _045__S ;
  logic _046_;
  logic _046__T ;
  logic _046__R ;
  logic _046__C ;
  logic _046__X ;
  logic [13:0] _046__S ;
  logic _047_;
  logic _047__T ;
  logic _047__R ;
  logic _047__C ;
  logic _047__X ;
  logic [13:0] _047__S ;
  logic _048_;
  logic _048__T ;
  logic _048__R ;
  logic _048__C ;
  logic _048__X ;
  logic [13:0] _048__S ;
  logic _049_;
  logic _049__T ;
  logic _049__R ;
  logic _049__C ;
  logic _049__X ;
  logic [13:0] _049__S ;
  logic _050_;
  logic _050__T ;
  logic _050__R ;
  logic _050__C ;
  logic _050__X ;
  logic [13:0] _050__S ;
  logic _051_;
  logic _051__T ;
  logic _051__R ;
  logic _051__C ;
  logic _051__X ;
  logic [13:0] _051__S ;
  logic _052_;
  logic _052__T ;
  logic _052__R ;
  logic _052__C ;
  logic _052__X ;
  logic [13:0] _052__S ;
  logic _053_;
  logic _053__T ;
  logic _053__R ;
  logic _053__C ;
  logic _053__X ;
  logic [13:0] _053__S ;
  logic _054_;
  logic _054__T ;
  logic _054__R ;
  logic _054__C ;
  logic _054__X ;
  logic [13:0] _054__S ;
  logic _055_;
  logic _055__T ;
  logic _055__R ;
  logic _055__C ;
  logic _055__X ;
  logic [13:0] _055__S ;
  logic _056_;
  logic _056__T ;
  logic _056__R ;
  logic _056__C ;
  logic _056__X ;
  logic [13:0] _056__S ;
  logic _057_;
  logic _057__T ;
  logic _057__R ;
  logic _057__C ;
  logic _057__X ;
  logic [13:0] _057__S ;
  logic _058_;
  logic _058__T ;
  logic _058__R ;
  logic _058__C ;
  logic _058__X ;
  logic [13:0] _058__S ;
  logic _059_;
  logic _059__T ;
  logic _059__R ;
  logic _059__C ;
  logic _059__X ;
  logic [13:0] _059__S ;
  logic _060_;
  logic _060__T ;
  logic _060__R ;
  logic _060__C ;
  logic _060__X ;
  logic [13:0] _060__S ;
  logic _061_;
  logic _061__T ;
  logic _061__R ;
  logic _061__C ;
  logic _061__X ;
  logic [13:0] _061__S ;
  logic _062_;
  logic _062__T ;
  logic _062__R ;
  logic _062__C ;
  logic _062__X ;
  logic [13:0] _062__S ;
  logic _063_;
  logic _063__T ;
  logic _063__R ;
  logic _063__C ;
  logic _063__X ;
  logic [13:0] _063__S ;
  logic _064_;
  logic _064__T ;
  logic _064__R ;
  logic _064__C ;
  logic _064__X ;
  logic [13:0] _064__S ;
  logic _065_;
  logic _065__T ;
  logic _065__R ;
  logic _065__C ;
  logic _065__X ;
  logic [13:0] _065__S ;
  logic _066_;
  logic _066__T ;
  logic _066__R ;
  logic _066__C ;
  logic _066__X ;
  logic [13:0] _066__S ;
  logic _067_;
  logic _067__T ;
  logic _067__R ;
  logic _067__C ;
  logic _067__X ;
  logic [13:0] _067__S ;
  logic _068_;
  logic _068__T ;
  logic _068__R ;
  logic _068__C ;
  logic _068__X ;
  logic [13:0] _068__S ;
  logic _069_;
  logic _069__T ;
  logic _069__R ;
  logic _069__C ;
  logic _069__X ;
  logic [13:0] _069__S ;
  logic _070_;
  logic _070__T ;
  logic _070__R ;
  logic _070__C ;
  logic _070__X ;
  logic [13:0] _070__S ;
  logic _071_;
  logic _071__T ;
  logic _071__R ;
  logic _071__C ;
  logic _071__X ;
  logic [13:0] _071__S ;
  logic _072_;
  logic _072__T ;
  logic _072__R ;
  logic _072__C ;
  logic _072__X ;
  logic [13:0] _072__S ;
  logic _073_;
  logic _073__T ;
  logic _073__R ;
  logic _073__C ;
  logic _073__X ;
  logic [13:0] _073__S ;
  logic _074_;
  logic _074__T ;
  logic _074__R ;
  logic _074__C ;
  logic _074__X ;
  logic [13:0] _074__S ;
  logic _075_;
  logic _075__T ;
  logic _075__R ;
  logic _075__C ;
  logic _075__X ;
  logic [13:0] _075__S ;
  logic _076_;
  logic _076__T ;
  logic _076__R ;
  logic _076__C ;
  logic _076__X ;
  logic [13:0] _076__S ;
  logic _077_;
  logic _077__T ;
  logic _077__R ;
  logic _077__C ;
  logic _077__X ;
  logic [13:0] _077__S ;
  logic _078_;
  logic _078__T ;
  logic _078__R ;
  logic _078__C ;
  logic _078__X ;
  logic [13:0] _078__S ;
  logic _079_;
  logic _079__T ;
  logic _079__R ;
  logic _079__C ;
  logic _079__X ;
  logic [13:0] _079__S ;
  logic _080_;
  logic _080__T ;
  logic _080__R ;
  logic _080__C ;
  logic _080__X ;
  logic [13:0] _080__S ;
  logic _081_;
  logic _081__T ;
  logic _081__R ;
  logic _081__C ;
  logic _081__X ;
  logic [13:0] _081__S ;
  input clk;
  input clk_T ;
  input [13:0] clk_S ;
  output clk_R ;
  output clk_X ;
  output clk_C ;
  input clk_mgated;
  input clk_mgated_T ;
  input [13:0] clk_mgated_S ;
  output clk_mgated_R ;
  output clk_mgated_X ;
  output clk_mgated_C ;
  input [160:0] di;
  input [160:0] di_T ;
  input [13:0] di_S ;
  output [160:0] di_R ;
  output [160:0] di_X ;
  output [160:0] di_C ;
  logic [160:0] di_d;
  logic [160:0]  di_d_T ;
  logic [160:0]  di_d_PREV_VAL1 ;
  logic [160:0]  di_d_PREV_VAL2 ;
  logic [160:0]  di_d_R ;
  logic [160:0]  di_d_X ;
  logic [160:0]  di_d_C ;
  logic [13:0] di_d_S ;
  logic di_d_t_flag ;
  logic di_d_r_flag ;
  assign di_d_S = 795 ;
  output [160:0] dout;
  logic [160:0] dout ;
  output [160:0] dout_T ;
  logic [160:0] dout_T ;
  logic [160:0] dout_R ;
  logic [160:0] dout_C ;
  logic [160:0] dout_X ;
  logic [13:0] dout_S ;
  input [160:0] dout_R0 ;
  input [160:0] dout_C0 ;
  input [160:0] dout_X0 ;
  output [13:0] dout_S ;
  input iwe;
  input iwe_T ;
  input [13:0] iwe_S ;
  output iwe_R ;
  output iwe_X ;
  output iwe_C ;
  input [31:0] pwrbus_ram_pd;
  input [31:0] pwrbus_ram_pd_T ;
  input [13:0] pwrbus_ram_pd_S ;
  output [31:0] pwrbus_ram_pd_R ;
  output [31:0] pwrbus_ram_pd_X ;
  output [31:0] pwrbus_ram_pd_C ;
  input [4:0] ra;
  input [4:0] ra_T ;
  input [13:0] ra_S ;
  output [4:0] ra_R ;
  output [4:0] ra_X ;
  output [4:0] ra_C ;
  logic [160:0] ram_ff0;
  logic [160:0]  ram_ff0_T ;
  logic [160:0]  ram_ff0_PREV_VAL1 ;
  logic [160:0]  ram_ff0_PREV_VAL2 ;
  logic [160:0]  ram_ff0_R ;
  logic [160:0]  ram_ff0_X ;
  logic [160:0]  ram_ff0_C ;
  logic [13:0] ram_ff0_S ;
  logic ram_ff0_t_flag ;
  logic ram_ff0_r_flag ;
  assign ram_ff0_S = 796 ;
  logic [160:0] ram_ff1;
  logic [160:0]  ram_ff1_T ;
  logic [160:0]  ram_ff1_PREV_VAL1 ;
  logic [160:0]  ram_ff1_PREV_VAL2 ;
  logic [160:0]  ram_ff1_R ;
  logic [160:0]  ram_ff1_X ;
  logic [160:0]  ram_ff1_C ;
  logic [13:0] ram_ff1_S ;
  logic ram_ff1_t_flag ;
  logic ram_ff1_r_flag ;
  assign ram_ff1_S = 797 ;
  logic [160:0] ram_ff10;
  logic [160:0]  ram_ff10_T ;
  logic [160:0]  ram_ff10_PREV_VAL1 ;
  logic [160:0]  ram_ff10_PREV_VAL2 ;
  logic [160:0]  ram_ff10_R ;
  logic [160:0]  ram_ff10_X ;
  logic [160:0]  ram_ff10_C ;
  logic [13:0] ram_ff10_S ;
  logic ram_ff10_t_flag ;
  logic ram_ff10_r_flag ;
  assign ram_ff10_S = 798 ;
  logic [160:0] ram_ff11;
  logic [160:0]  ram_ff11_T ;
  logic [160:0]  ram_ff11_PREV_VAL1 ;
  logic [160:0]  ram_ff11_PREV_VAL2 ;
  logic [160:0]  ram_ff11_R ;
  logic [160:0]  ram_ff11_X ;
  logic [160:0]  ram_ff11_C ;
  logic [13:0] ram_ff11_S ;
  logic ram_ff11_t_flag ;
  logic ram_ff11_r_flag ;
  assign ram_ff11_S = 799 ;
  logic [160:0] ram_ff12;
  logic [160:0]  ram_ff12_T ;
  logic [160:0]  ram_ff12_PREV_VAL1 ;
  logic [160:0]  ram_ff12_PREV_VAL2 ;
  logic [160:0]  ram_ff12_R ;
  logic [160:0]  ram_ff12_X ;
  logic [160:0]  ram_ff12_C ;
  logic [13:0] ram_ff12_S ;
  logic ram_ff12_t_flag ;
  logic ram_ff12_r_flag ;
  assign ram_ff12_S = 800 ;
  logic [160:0] ram_ff13;
  logic [160:0]  ram_ff13_T ;
  logic [160:0]  ram_ff13_PREV_VAL1 ;
  logic [160:0]  ram_ff13_PREV_VAL2 ;
  logic [160:0]  ram_ff13_R ;
  logic [160:0]  ram_ff13_X ;
  logic [160:0]  ram_ff13_C ;
  logic [13:0] ram_ff13_S ;
  logic ram_ff13_t_flag ;
  logic ram_ff13_r_flag ;
  assign ram_ff13_S = 801 ;
  logic [160:0] ram_ff14;
  logic [160:0]  ram_ff14_T ;
  logic [160:0]  ram_ff14_PREV_VAL1 ;
  logic [160:0]  ram_ff14_PREV_VAL2 ;
  logic [160:0]  ram_ff14_R ;
  logic [160:0]  ram_ff14_X ;
  logic [160:0]  ram_ff14_C ;
  logic [13:0] ram_ff14_S ;
  logic ram_ff14_t_flag ;
  logic ram_ff14_r_flag ;
  assign ram_ff14_S = 802 ;
  logic [160:0] ram_ff15;
  logic [160:0]  ram_ff15_T ;
  logic [160:0]  ram_ff15_PREV_VAL1 ;
  logic [160:0]  ram_ff15_PREV_VAL2 ;
  logic [160:0]  ram_ff15_R ;
  logic [160:0]  ram_ff15_X ;
  logic [160:0]  ram_ff15_C ;
  logic [13:0] ram_ff15_S ;
  logic ram_ff15_t_flag ;
  logic ram_ff15_r_flag ;
  assign ram_ff15_S = 803 ;
  logic [160:0] ram_ff16;
  logic [160:0]  ram_ff16_T ;
  logic [160:0]  ram_ff16_PREV_VAL1 ;
  logic [160:0]  ram_ff16_PREV_VAL2 ;
  logic [160:0]  ram_ff16_R ;
  logic [160:0]  ram_ff16_X ;
  logic [160:0]  ram_ff16_C ;
  logic [13:0] ram_ff16_S ;
  logic ram_ff16_t_flag ;
  logic ram_ff16_r_flag ;
  assign ram_ff16_S = 804 ;
  logic [160:0] ram_ff17;
  logic [160:0]  ram_ff17_T ;
  logic [160:0]  ram_ff17_PREV_VAL1 ;
  logic [160:0]  ram_ff17_PREV_VAL2 ;
  logic [160:0]  ram_ff17_R ;
  logic [160:0]  ram_ff17_X ;
  logic [160:0]  ram_ff17_C ;
  logic [13:0] ram_ff17_S ;
  logic ram_ff17_t_flag ;
  logic ram_ff17_r_flag ;
  assign ram_ff17_S = 805 ;
  logic [160:0] ram_ff18;
  logic [160:0]  ram_ff18_T ;
  logic [160:0]  ram_ff18_PREV_VAL1 ;
  logic [160:0]  ram_ff18_PREV_VAL2 ;
  logic [160:0]  ram_ff18_R ;
  logic [160:0]  ram_ff18_X ;
  logic [160:0]  ram_ff18_C ;
  logic [13:0] ram_ff18_S ;
  logic ram_ff18_t_flag ;
  logic ram_ff18_r_flag ;
  assign ram_ff18_S = 806 ;
  logic [160:0] ram_ff19;
  logic [160:0]  ram_ff19_T ;
  logic [160:0]  ram_ff19_PREV_VAL1 ;
  logic [160:0]  ram_ff19_PREV_VAL2 ;
  logic [160:0]  ram_ff19_R ;
  logic [160:0]  ram_ff19_X ;
  logic [160:0]  ram_ff19_C ;
  logic [13:0] ram_ff19_S ;
  logic ram_ff19_t_flag ;
  logic ram_ff19_r_flag ;
  assign ram_ff19_S = 807 ;
  logic [160:0] ram_ff2;
  logic [160:0]  ram_ff2_T ;
  logic [160:0]  ram_ff2_PREV_VAL1 ;
  logic [160:0]  ram_ff2_PREV_VAL2 ;
  logic [160:0]  ram_ff2_R ;
  logic [160:0]  ram_ff2_X ;
  logic [160:0]  ram_ff2_C ;
  logic [13:0] ram_ff2_S ;
  logic ram_ff2_t_flag ;
  logic ram_ff2_r_flag ;
  assign ram_ff2_S = 808 ;
  logic [160:0] ram_ff3;
  logic [160:0]  ram_ff3_T ;
  logic [160:0]  ram_ff3_PREV_VAL1 ;
  logic [160:0]  ram_ff3_PREV_VAL2 ;
  logic [160:0]  ram_ff3_R ;
  logic [160:0]  ram_ff3_X ;
  logic [160:0]  ram_ff3_C ;
  logic [13:0] ram_ff3_S ;
  logic ram_ff3_t_flag ;
  logic ram_ff3_r_flag ;
  assign ram_ff3_S = 809 ;
  logic [160:0] ram_ff4;
  logic [160:0]  ram_ff4_T ;
  logic [160:0]  ram_ff4_PREV_VAL1 ;
  logic [160:0]  ram_ff4_PREV_VAL2 ;
  logic [160:0]  ram_ff4_R ;
  logic [160:0]  ram_ff4_X ;
  logic [160:0]  ram_ff4_C ;
  logic [13:0] ram_ff4_S ;
  logic ram_ff4_t_flag ;
  logic ram_ff4_r_flag ;
  assign ram_ff4_S = 810 ;
  logic [160:0] ram_ff5;
  logic [160:0]  ram_ff5_T ;
  logic [160:0]  ram_ff5_PREV_VAL1 ;
  logic [160:0]  ram_ff5_PREV_VAL2 ;
  logic [160:0]  ram_ff5_R ;
  logic [160:0]  ram_ff5_X ;
  logic [160:0]  ram_ff5_C ;
  logic [13:0] ram_ff5_S ;
  logic ram_ff5_t_flag ;
  logic ram_ff5_r_flag ;
  assign ram_ff5_S = 811 ;
  logic [160:0] ram_ff6;
  logic [160:0]  ram_ff6_T ;
  logic [160:0]  ram_ff6_PREV_VAL1 ;
  logic [160:0]  ram_ff6_PREV_VAL2 ;
  logic [160:0]  ram_ff6_R ;
  logic [160:0]  ram_ff6_X ;
  logic [160:0]  ram_ff6_C ;
  logic [13:0] ram_ff6_S ;
  logic ram_ff6_t_flag ;
  logic ram_ff6_r_flag ;
  assign ram_ff6_S = 812 ;
  logic [160:0] ram_ff7;
  logic [160:0]  ram_ff7_T ;
  logic [160:0]  ram_ff7_PREV_VAL1 ;
  logic [160:0]  ram_ff7_PREV_VAL2 ;
  logic [160:0]  ram_ff7_R ;
  logic [160:0]  ram_ff7_X ;
  logic [160:0]  ram_ff7_C ;
  logic [13:0] ram_ff7_S ;
  logic ram_ff7_t_flag ;
  logic ram_ff7_r_flag ;
  assign ram_ff7_S = 813 ;
  logic [160:0] ram_ff8;
  logic [160:0]  ram_ff8_T ;
  logic [160:0]  ram_ff8_PREV_VAL1 ;
  logic [160:0]  ram_ff8_PREV_VAL2 ;
  logic [160:0]  ram_ff8_R ;
  logic [160:0]  ram_ff8_X ;
  logic [160:0]  ram_ff8_C ;
  logic [13:0] ram_ff8_S ;
  logic ram_ff8_t_flag ;
  logic ram_ff8_r_flag ;
  assign ram_ff8_S = 814 ;
  logic [160:0] ram_ff9;
  logic [160:0]  ram_ff9_T ;
  logic [160:0]  ram_ff9_PREV_VAL1 ;
  logic [160:0]  ram_ff9_PREV_VAL2 ;
  logic [160:0]  ram_ff9_R ;
  logic [160:0]  ram_ff9_X ;
  logic [160:0]  ram_ff9_C ;
  logic [13:0] ram_ff9_S ;
  logic ram_ff9_t_flag ;
  logic ram_ff9_r_flag ;
  assign ram_ff9_S = 815 ;
  input [4:0] wa;
  input [4:0] wa_T ;
  input [13:0] wa_S ;
  output [4:0] wa_R ;
  output [4:0] wa_X ;
  output [4:0] wa_C ;
  input we;
  input we_T ;
  input [13:0] we_S ;
  output we_R ;
  output we_X ;
  output we_C ;
  assign _021_ = ! wa;
  logic [4:0] wa_C0 ;
  logic [4:0] wa_R0 ;
  logic [4:0] wa_X0 ;
  assign _021__T = | wa_T ;
  assign wa_C0 = { 5{ _021__C }} ;
  assign wa_X0 = { 5{ _021__X }} ;
  assign wa_R0 = { 5{ _021__R }} ;
  assign _021__S = 0 ;
  assign _022_ = wa == 1'b1;
  assign _022__S = 0 ;
  logic [4:0] wa_C1 ;
  logic [4:0] wa_R1 ;
  logic [4:0] wa_X1 ;
  assign _022__T = | wa_T ;
  assign wa_C1 = { 5{ _022__C }} ;
  assign wa_R1 = { 5{ _022__R }} ;
  assign wa_X1 = { 5{ _022__X }} ;
  assign _023_ = wa == 2'b10;
  assign _023__S = 0 ;
  logic [4:0] wa_C2 ;
  logic [4:0] wa_R2 ;
  logic [4:0] wa_X2 ;
  assign _023__T = | wa_T ;
  assign wa_C2 = { 5{ _023__C }} ;
  assign wa_R2 = { 5{ _023__R }} ;
  assign wa_X2 = { 5{ _023__X }} ;
  assign _024_ = wa == 2'b11;
  assign _024__S = 0 ;
  logic [4:0] wa_C3 ;
  logic [4:0] wa_R3 ;
  logic [4:0] wa_X3 ;
  assign _024__T = | wa_T ;
  assign wa_C3 = { 5{ _024__C }} ;
  assign wa_R3 = { 5{ _024__R }} ;
  assign wa_X3 = { 5{ _024__X }} ;
  assign _025_ = wa == 3'b100;
  assign _025__S = 0 ;
  logic [4:0] wa_C4 ;
  logic [4:0] wa_R4 ;
  logic [4:0] wa_X4 ;
  assign _025__T = | wa_T ;
  assign wa_C4 = { 5{ _025__C }} ;
  assign wa_R4 = { 5{ _025__R }} ;
  assign wa_X4 = { 5{ _025__X }} ;
  assign _026_ = wa == 3'b101;
  assign _026__S = 0 ;
  logic [4:0] wa_C5 ;
  logic [4:0] wa_R5 ;
  logic [4:0] wa_X5 ;
  assign _026__T = | wa_T ;
  assign wa_C5 = { 5{ _026__C }} ;
  assign wa_R5 = { 5{ _026__R }} ;
  assign wa_X5 = { 5{ _026__X }} ;
  assign _027_ = wa == 3'b110;
  assign _027__S = 0 ;
  logic [4:0] wa_C6 ;
  logic [4:0] wa_R6 ;
  logic [4:0] wa_X6 ;
  assign _027__T = | wa_T ;
  assign wa_C6 = { 5{ _027__C }} ;
  assign wa_R6 = { 5{ _027__R }} ;
  assign wa_X6 = { 5{ _027__X }} ;
  assign _028_ = wa == 3'b111;
  assign _028__S = 0 ;
  logic [4:0] wa_C7 ;
  logic [4:0] wa_R7 ;
  logic [4:0] wa_X7 ;
  assign _028__T = | wa_T ;
  assign wa_C7 = { 5{ _028__C }} ;
  assign wa_R7 = { 5{ _028__R }} ;
  assign wa_X7 = { 5{ _028__X }} ;
  assign _029_ = wa == 4'b1000;
  assign _029__S = 0 ;
  logic [4:0] wa_C8 ;
  logic [4:0] wa_R8 ;
  logic [4:0] wa_X8 ;
  assign _029__T = | wa_T ;
  assign wa_C8 = { 5{ _029__C }} ;
  assign wa_R8 = { 5{ _029__R }} ;
  assign wa_X8 = { 5{ _029__X }} ;
  assign _030_ = wa == 4'b1001;
  assign _030__S = 0 ;
  logic [4:0] wa_C9 ;
  logic [4:0] wa_R9 ;
  logic [4:0] wa_X9 ;
  assign _030__T = | wa_T ;
  assign wa_C9 = { 5{ _030__C }} ;
  assign wa_R9 = { 5{ _030__R }} ;
  assign wa_X9 = { 5{ _030__X }} ;
  assign _031_ = wa == 4'b1010;
  assign _031__S = 0 ;
  logic [4:0] wa_C10 ;
  logic [4:0] wa_R10 ;
  logic [4:0] wa_X10 ;
  assign _031__T = | wa_T ;
  assign wa_C10 = { 5{ _031__C }} ;
  assign wa_R10 = { 5{ _031__R }} ;
  assign wa_X10 = { 5{ _031__X }} ;
  assign _032_ = wa == 4'b1011;
  assign _032__S = 0 ;
  logic [4:0] wa_C11 ;
  logic [4:0] wa_R11 ;
  logic [4:0] wa_X11 ;
  assign _032__T = | wa_T ;
  assign wa_C11 = { 5{ _032__C }} ;
  assign wa_R11 = { 5{ _032__R }} ;
  assign wa_X11 = { 5{ _032__X }} ;
  assign _033_ = wa == 4'b1100;
  assign _033__S = 0 ;
  logic [4:0] wa_C12 ;
  logic [4:0] wa_R12 ;
  logic [4:0] wa_X12 ;
  assign _033__T = | wa_T ;
  assign wa_C12 = { 5{ _033__C }} ;
  assign wa_R12 = { 5{ _033__R }} ;
  assign wa_X12 = { 5{ _033__X }} ;
  assign _034_ = wa == 4'b1101;
  assign _034__S = 0 ;
  logic [4:0] wa_C13 ;
  logic [4:0] wa_R13 ;
  logic [4:0] wa_X13 ;
  assign _034__T = | wa_T ;
  assign wa_C13 = { 5{ _034__C }} ;
  assign wa_R13 = { 5{ _034__R }} ;
  assign wa_X13 = { 5{ _034__X }} ;
  assign _035_ = wa == 4'b1110;
  assign _035__S = 0 ;
  logic [4:0] wa_C14 ;
  logic [4:0] wa_R14 ;
  logic [4:0] wa_X14 ;
  assign _035__T = | wa_T ;
  assign wa_C14 = { 5{ _035__C }} ;
  assign wa_R14 = { 5{ _035__R }} ;
  assign wa_X14 = { 5{ _035__X }} ;
  assign _036_ = wa == 4'b1111;
  assign _036__S = 0 ;
  logic [4:0] wa_C15 ;
  logic [4:0] wa_R15 ;
  logic [4:0] wa_X15 ;
  assign _036__T = | wa_T ;
  assign wa_C15 = { 5{ _036__C }} ;
  assign wa_R15 = { 5{ _036__R }} ;
  assign wa_X15 = { 5{ _036__X }} ;
  assign _037_ = wa == 5'b10000;
  assign _037__S = 0 ;
  logic [4:0] wa_C16 ;
  logic [4:0] wa_R16 ;
  logic [4:0] wa_X16 ;
  assign _037__T = | wa_T ;
  assign wa_C16 = { 5{ _037__C }} ;
  assign wa_R16 = { 5{ _037__R }} ;
  assign wa_X16 = { 5{ _037__X }} ;
  assign _038_ = wa == 5'b10001;
  assign _038__S = 0 ;
  logic [4:0] wa_C17 ;
  logic [4:0] wa_R17 ;
  logic [4:0] wa_X17 ;
  assign _038__T = | wa_T ;
  assign wa_C17 = { 5{ _038__C }} ;
  assign wa_R17 = { 5{ _038__R }} ;
  assign wa_X17 = { 5{ _038__X }} ;
  assign _039_ = wa == 5'b10010;
  assign _039__S = 0 ;
  logic [4:0] wa_C18 ;
  logic [4:0] wa_R18 ;
  logic [4:0] wa_X18 ;
  assign _039__T = | wa_T ;
  assign wa_C18 = { 5{ _039__C }} ;
  assign wa_R18 = { 5{ _039__R }} ;
  assign wa_X18 = { 5{ _039__X }} ;
  assign _040_ = wa == 5'b10011;
  assign _040__S = 0 ;
  logic [4:0] wa_C19 ;
  logic [4:0] wa_R19 ;
  logic [4:0] wa_X19 ;
  assign _040__T = | wa_T ;
  assign wa_C19 = { 5{ _040__C }} ;
  assign wa_R19 = { 5{ _040__R }} ;
  assign wa_X19 = { 5{ _040__X }} ;
  assign _041_ = we && _021_;
  assign _041__S = 0 ;
  logic [0:0] we_C0 ;
  logic [0:0] we_R0 ;
  logic [0:0] we_X0 ;
  logic [0:0] _021__C0 ;
  logic [0:0] _021__R0 ;
  logic [0:0] _021__X0 ;
  assign _041__T = we_T | _021__T ;
  assign we_C0 = _041__C ;
  assign we_X0 = _041__X ;
  assign _021__C0 = _041__C ;
  assign _021__X0 = _041__X ;
  assign we_R0 = ( _041__R | _041__C & _021__T ) & { 1{ _021_ != 0 }} ;
  assign _021__R0 = ( _041__R | _041__C & we_T ) & { 1{ we != 0 }} ;
  assign _042_ = we && _022_;
  assign _042__S = 0 ;
  logic [0:0] we_C1 ;
  logic [0:0] we_R1 ;
  logic [0:0] we_X1 ;
  logic [0:0] _022__C0 ;
  logic [0:0] _022__R0 ;
  logic [0:0] _022__X0 ;
  assign _042__T = we_T | _022__T ;
  assign we_C1 = _042__C ;
  assign we_X1 = _042__X ;
  assign _022__C0 = _042__C ;
  assign _022__X0 = _042__X ;
  assign we_R1 = ( _042__R | _042__C & _022__T ) & { 1{ _022_ != 0 }} ;
  assign _022__R0 = ( _042__R | _042__C & we_T ) & { 1{ we != 0 }} ;
  assign _043_ = we && _023_;
  assign _043__S = 0 ;
  logic [0:0] we_C2 ;
  logic [0:0] we_R2 ;
  logic [0:0] we_X2 ;
  logic [0:0] _023__C0 ;
  logic [0:0] _023__R0 ;
  logic [0:0] _023__X0 ;
  assign _043__T = we_T | _023__T ;
  assign we_C2 = _043__C ;
  assign we_X2 = _043__X ;
  assign _023__C0 = _043__C ;
  assign _023__X0 = _043__X ;
  assign we_R2 = ( _043__R | _043__C & _023__T ) & { 1{ _023_ != 0 }} ;
  assign _023__R0 = ( _043__R | _043__C & we_T ) & { 1{ we != 0 }} ;
  assign _044_ = we && _024_;
  assign _044__S = 0 ;
  logic [0:0] we_C3 ;
  logic [0:0] we_R3 ;
  logic [0:0] we_X3 ;
  logic [0:0] _024__C0 ;
  logic [0:0] _024__R0 ;
  logic [0:0] _024__X0 ;
  assign _044__T = we_T | _024__T ;
  assign we_C3 = _044__C ;
  assign we_X3 = _044__X ;
  assign _024__C0 = _044__C ;
  assign _024__X0 = _044__X ;
  assign we_R3 = ( _044__R | _044__C & _024__T ) & { 1{ _024_ != 0 }} ;
  assign _024__R0 = ( _044__R | _044__C & we_T ) & { 1{ we != 0 }} ;
  assign _045_ = we && _025_;
  assign _045__S = 0 ;
  logic [0:0] we_C4 ;
  logic [0:0] we_R4 ;
  logic [0:0] we_X4 ;
  logic [0:0] _025__C0 ;
  logic [0:0] _025__R0 ;
  logic [0:0] _025__X0 ;
  assign _045__T = we_T | _025__T ;
  assign we_C4 = _045__C ;
  assign we_X4 = _045__X ;
  assign _025__C0 = _045__C ;
  assign _025__X0 = _045__X ;
  assign we_R4 = ( _045__R | _045__C & _025__T ) & { 1{ _025_ != 0 }} ;
  assign _025__R0 = ( _045__R | _045__C & we_T ) & { 1{ we != 0 }} ;
  assign _046_ = we && _026_;
  assign _046__S = 0 ;
  logic [0:0] we_C5 ;
  logic [0:0] we_R5 ;
  logic [0:0] we_X5 ;
  logic [0:0] _026__C0 ;
  logic [0:0] _026__R0 ;
  logic [0:0] _026__X0 ;
  assign _046__T = we_T | _026__T ;
  assign we_C5 = _046__C ;
  assign we_X5 = _046__X ;
  assign _026__C0 = _046__C ;
  assign _026__X0 = _046__X ;
  assign we_R5 = ( _046__R | _046__C & _026__T ) & { 1{ _026_ != 0 }} ;
  assign _026__R0 = ( _046__R | _046__C & we_T ) & { 1{ we != 0 }} ;
  assign _047_ = we && _027_;
  assign _047__S = 0 ;
  logic [0:0] we_C6 ;
  logic [0:0] we_R6 ;
  logic [0:0] we_X6 ;
  logic [0:0] _027__C0 ;
  logic [0:0] _027__R0 ;
  logic [0:0] _027__X0 ;
  assign _047__T = we_T | _027__T ;
  assign we_C6 = _047__C ;
  assign we_X6 = _047__X ;
  assign _027__C0 = _047__C ;
  assign _027__X0 = _047__X ;
  assign we_R6 = ( _047__R | _047__C & _027__T ) & { 1{ _027_ != 0 }} ;
  assign _027__R0 = ( _047__R | _047__C & we_T ) & { 1{ we != 0 }} ;
  assign _048_ = we && _028_;
  assign _048__S = 0 ;
  logic [0:0] we_C7 ;
  logic [0:0] we_R7 ;
  logic [0:0] we_X7 ;
  logic [0:0] _028__C0 ;
  logic [0:0] _028__R0 ;
  logic [0:0] _028__X0 ;
  assign _048__T = we_T | _028__T ;
  assign we_C7 = _048__C ;
  assign we_X7 = _048__X ;
  assign _028__C0 = _048__C ;
  assign _028__X0 = _048__X ;
  assign we_R7 = ( _048__R | _048__C & _028__T ) & { 1{ _028_ != 0 }} ;
  assign _028__R0 = ( _048__R | _048__C & we_T ) & { 1{ we != 0 }} ;
  assign _049_ = we && _029_;
  assign _049__S = 0 ;
  logic [0:0] we_C8 ;
  logic [0:0] we_R8 ;
  logic [0:0] we_X8 ;
  logic [0:0] _029__C0 ;
  logic [0:0] _029__R0 ;
  logic [0:0] _029__X0 ;
  assign _049__T = we_T | _029__T ;
  assign we_C8 = _049__C ;
  assign we_X8 = _049__X ;
  assign _029__C0 = _049__C ;
  assign _029__X0 = _049__X ;
  assign we_R8 = ( _049__R | _049__C & _029__T ) & { 1{ _029_ != 0 }} ;
  assign _029__R0 = ( _049__R | _049__C & we_T ) & { 1{ we != 0 }} ;
  assign _050_ = we && _030_;
  assign _050__S = 0 ;
  logic [0:0] we_C9 ;
  logic [0:0] we_R9 ;
  logic [0:0] we_X9 ;
  logic [0:0] _030__C0 ;
  logic [0:0] _030__R0 ;
  logic [0:0] _030__X0 ;
  assign _050__T = we_T | _030__T ;
  assign we_C9 = _050__C ;
  assign we_X9 = _050__X ;
  assign _030__C0 = _050__C ;
  assign _030__X0 = _050__X ;
  assign we_R9 = ( _050__R | _050__C & _030__T ) & { 1{ _030_ != 0 }} ;
  assign _030__R0 = ( _050__R | _050__C & we_T ) & { 1{ we != 0 }} ;
  assign _051_ = we && _031_;
  assign _051__S = 0 ;
  logic [0:0] we_C10 ;
  logic [0:0] we_R10 ;
  logic [0:0] we_X10 ;
  logic [0:0] _031__C0 ;
  logic [0:0] _031__R0 ;
  logic [0:0] _031__X0 ;
  assign _051__T = we_T | _031__T ;
  assign we_C10 = _051__C ;
  assign we_X10 = _051__X ;
  assign _031__C0 = _051__C ;
  assign _031__X0 = _051__X ;
  assign we_R10 = ( _051__R | _051__C & _031__T ) & { 1{ _031_ != 0 }} ;
  assign _031__R0 = ( _051__R | _051__C & we_T ) & { 1{ we != 0 }} ;
  assign _052_ = we && _032_;
  assign _052__S = 0 ;
  logic [0:0] we_C11 ;
  logic [0:0] we_R11 ;
  logic [0:0] we_X11 ;
  logic [0:0] _032__C0 ;
  logic [0:0] _032__R0 ;
  logic [0:0] _032__X0 ;
  assign _052__T = we_T | _032__T ;
  assign we_C11 = _052__C ;
  assign we_X11 = _052__X ;
  assign _032__C0 = _052__C ;
  assign _032__X0 = _052__X ;
  assign we_R11 = ( _052__R | _052__C & _032__T ) & { 1{ _032_ != 0 }} ;
  assign _032__R0 = ( _052__R | _052__C & we_T ) & { 1{ we != 0 }} ;
  assign _053_ = we && _033_;
  assign _053__S = 0 ;
  logic [0:0] we_C12 ;
  logic [0:0] we_R12 ;
  logic [0:0] we_X12 ;
  logic [0:0] _033__C0 ;
  logic [0:0] _033__R0 ;
  logic [0:0] _033__X0 ;
  assign _053__T = we_T | _033__T ;
  assign we_C12 = _053__C ;
  assign we_X12 = _053__X ;
  assign _033__C0 = _053__C ;
  assign _033__X0 = _053__X ;
  assign we_R12 = ( _053__R | _053__C & _033__T ) & { 1{ _033_ != 0 }} ;
  assign _033__R0 = ( _053__R | _053__C & we_T ) & { 1{ we != 0 }} ;
  assign _054_ = we && _034_;
  assign _054__S = 0 ;
  logic [0:0] we_C13 ;
  logic [0:0] we_R13 ;
  logic [0:0] we_X13 ;
  logic [0:0] _034__C0 ;
  logic [0:0] _034__R0 ;
  logic [0:0] _034__X0 ;
  assign _054__T = we_T | _034__T ;
  assign we_C13 = _054__C ;
  assign we_X13 = _054__X ;
  assign _034__C0 = _054__C ;
  assign _034__X0 = _054__X ;
  assign we_R13 = ( _054__R | _054__C & _034__T ) & { 1{ _034_ != 0 }} ;
  assign _034__R0 = ( _054__R | _054__C & we_T ) & { 1{ we != 0 }} ;
  assign _055_ = we && _035_;
  assign _055__S = 0 ;
  logic [0:0] we_C14 ;
  logic [0:0] we_R14 ;
  logic [0:0] we_X14 ;
  logic [0:0] _035__C0 ;
  logic [0:0] _035__R0 ;
  logic [0:0] _035__X0 ;
  assign _055__T = we_T | _035__T ;
  assign we_C14 = _055__C ;
  assign we_X14 = _055__X ;
  assign _035__C0 = _055__C ;
  assign _035__X0 = _055__X ;
  assign we_R14 = ( _055__R | _055__C & _035__T ) & { 1{ _035_ != 0 }} ;
  assign _035__R0 = ( _055__R | _055__C & we_T ) & { 1{ we != 0 }} ;
  assign _056_ = we && _036_;
  assign _056__S = 0 ;
  logic [0:0] we_C15 ;
  logic [0:0] we_R15 ;
  logic [0:0] we_X15 ;
  logic [0:0] _036__C0 ;
  logic [0:0] _036__R0 ;
  logic [0:0] _036__X0 ;
  assign _056__T = we_T | _036__T ;
  assign we_C15 = _056__C ;
  assign we_X15 = _056__X ;
  assign _036__C0 = _056__C ;
  assign _036__X0 = _056__X ;
  assign we_R15 = ( _056__R | _056__C & _036__T ) & { 1{ _036_ != 0 }} ;
  assign _036__R0 = ( _056__R | _056__C & we_T ) & { 1{ we != 0 }} ;
  assign _057_ = we && _037_;
  assign _057__S = 0 ;
  logic [0:0] we_C16 ;
  logic [0:0] we_R16 ;
  logic [0:0] we_X16 ;
  logic [0:0] _037__C0 ;
  logic [0:0] _037__R0 ;
  logic [0:0] _037__X0 ;
  assign _057__T = we_T | _037__T ;
  assign we_C16 = _057__C ;
  assign we_X16 = _057__X ;
  assign _037__C0 = _057__C ;
  assign _037__X0 = _057__X ;
  assign we_R16 = ( _057__R | _057__C & _037__T ) & { 1{ _037_ != 0 }} ;
  assign _037__R0 = ( _057__R | _057__C & we_T ) & { 1{ we != 0 }} ;
  assign _058_ = we && _038_;
  assign _058__S = 0 ;
  logic [0:0] we_C17 ;
  logic [0:0] we_R17 ;
  logic [0:0] we_X17 ;
  logic [0:0] _038__C0 ;
  logic [0:0] _038__R0 ;
  logic [0:0] _038__X0 ;
  assign _058__T = we_T | _038__T ;
  assign we_C17 = _058__C ;
  assign we_X17 = _058__X ;
  assign _038__C0 = _058__C ;
  assign _038__X0 = _058__X ;
  assign we_R17 = ( _058__R | _058__C & _038__T ) & { 1{ _038_ != 0 }} ;
  assign _038__R0 = ( _058__R | _058__C & we_T ) & { 1{ we != 0 }} ;
  assign _059_ = we && _039_;
  assign _059__S = 0 ;
  logic [0:0] we_C18 ;
  logic [0:0] we_R18 ;
  logic [0:0] we_X18 ;
  logic [0:0] _039__C0 ;
  logic [0:0] _039__R0 ;
  logic [0:0] _039__X0 ;
  assign _059__T = we_T | _039__T ;
  assign we_C18 = _059__C ;
  assign we_X18 = _059__X ;
  assign _039__C0 = _059__C ;
  assign _039__X0 = _059__X ;
  assign we_R18 = ( _059__R | _059__C & _039__T ) & { 1{ _039_ != 0 }} ;
  assign _039__R0 = ( _059__R | _059__C & we_T ) & { 1{ we != 0 }} ;
  assign _060_ = we && _040_;
  assign _060__S = 0 ;
  logic [0:0] we_C19 ;
  logic [0:0] we_R19 ;
  logic [0:0] we_X19 ;
  logic [0:0] _040__C0 ;
  logic [0:0] _040__R0 ;
  logic [0:0] _040__X0 ;
  assign _060__T = we_T | _040__T ;
  assign we_C19 = _060__C ;
  assign we_X19 = _060__X ;
  assign _040__C0 = _060__C ;
  assign _040__X0 = _060__X ;
  assign we_R19 = ( _060__R | _060__C & _040__T ) & { 1{ _040_ != 0 }} ;
  assign _040__R0 = ( _060__R | _060__C & we_T ) & { 1{ we != 0 }} ;
  always @(posedge clk_mgated)
      ram_ff0 <= _001_;
  logic [160:0] _001__X0 ;
  logic [160:0] _001__R0 ;
  logic [160:0] _001__C0 ;
  assign _001__X0 = { 161{ ram_ff0_S != _001__S }} ;
  assign _001__R0 = 0 ;
  assign _001__C0 = 0 ;
  always @( posedge clk_mgated )
      ram_ff0_T 		<= rst_zy ? 0 : ( _001__T & _001__X0 );
  always @( posedge clk_mgated )
      ram_ff0_t_flag 	<= rst_zy ? 0 : ram_ff0_t_flag ? 1 : | _001__T & ( | _001__X0 );
  always @( posedge clk_mgated )
      ram_ff0_r_flag 	<= rst_zy ? 0 : ram_ff0_r_flag ? 1 : ram_ff0_t_flag ? 0 : ( | ram_ff0_R ) ;
  always @(posedge clk_mgated)
      ram_ff1 <= _012_;
  logic [160:0] _012__X0 ;
  logic [160:0] _012__R0 ;
  logic [160:0] _012__C0 ;
  assign _012__X0 = { 161{ ram_ff1_S != _012__S }} ;
  assign _012__R0 = 0 ;
  assign _012__C0 = 0 ;
  always @( posedge clk_mgated )
      ram_ff1_T 		<= rst_zy ? 0 : ( _012__T & _012__X0 );
  always @( posedge clk_mgated )
      ram_ff1_t_flag 	<= rst_zy ? 0 : ram_ff1_t_flag ? 1 : | _012__T & ( | _012__X0 );
  always @( posedge clk_mgated )
      ram_ff1_r_flag 	<= rst_zy ? 0 : ram_ff1_r_flag ? 1 : ram_ff1_t_flag ? 0 : ( | ram_ff1_R ) ;
  always @(posedge clk_mgated)
      ram_ff2 <= _013_;
  logic [160:0] _013__X0 ;
  logic [160:0] _013__R0 ;
  logic [160:0] _013__C0 ;
  assign _013__X0 = { 161{ ram_ff2_S != _013__S }} ;
  assign _013__R0 = 0 ;
  assign _013__C0 = 0 ;
  always @( posedge clk_mgated )
      ram_ff2_T 		<= rst_zy ? 0 : ( _013__T & _013__X0 );
  always @( posedge clk_mgated )
      ram_ff2_t_flag 	<= rst_zy ? 0 : ram_ff2_t_flag ? 1 : | _013__T & ( | _013__X0 );
  always @( posedge clk_mgated )
      ram_ff2_r_flag 	<= rst_zy ? 0 : ram_ff2_r_flag ? 1 : ram_ff2_t_flag ? 0 : ( | ram_ff2_R ) ;
  always @(posedge clk_mgated)
      ram_ff3 <= _014_;
  logic [160:0] _014__X0 ;
  logic [160:0] _014__R0 ;
  logic [160:0] _014__C0 ;
  assign _014__X0 = { 161{ ram_ff3_S != _014__S }} ;
  assign _014__R0 = 0 ;
  assign _014__C0 = 0 ;
  always @( posedge clk_mgated )
      ram_ff3_T 		<= rst_zy ? 0 : ( _014__T & _014__X0 );
  always @( posedge clk_mgated )
      ram_ff3_t_flag 	<= rst_zy ? 0 : ram_ff3_t_flag ? 1 : | _014__T & ( | _014__X0 );
  always @( posedge clk_mgated )
      ram_ff3_r_flag 	<= rst_zy ? 0 : ram_ff3_r_flag ? 1 : ram_ff3_t_flag ? 0 : ( | ram_ff3_R ) ;
  always @(posedge clk_mgated)
      ram_ff4 <= _015_;
  logic [160:0] _015__X0 ;
  logic [160:0] _015__R0 ;
  logic [160:0] _015__C0 ;
  assign _015__X0 = { 161{ ram_ff4_S != _015__S }} ;
  assign _015__R0 = 0 ;
  assign _015__C0 = 0 ;
  always @( posedge clk_mgated )
      ram_ff4_T 		<= rst_zy ? 0 : ( _015__T & _015__X0 );
  always @( posedge clk_mgated )
      ram_ff4_t_flag 	<= rst_zy ? 0 : ram_ff4_t_flag ? 1 : | _015__T & ( | _015__X0 );
  always @( posedge clk_mgated )
      ram_ff4_r_flag 	<= rst_zy ? 0 : ram_ff4_r_flag ? 1 : ram_ff4_t_flag ? 0 : ( | ram_ff4_R ) ;
  always @(posedge clk_mgated)
      ram_ff5 <= _016_;
  logic [160:0] _016__X0 ;
  logic [160:0] _016__R0 ;
  logic [160:0] _016__C0 ;
  assign _016__X0 = { 161{ ram_ff5_S != _016__S }} ;
  assign _016__R0 = 0 ;
  assign _016__C0 = 0 ;
  always @( posedge clk_mgated )
      ram_ff5_T 		<= rst_zy ? 0 : ( _016__T & _016__X0 );
  always @( posedge clk_mgated )
      ram_ff5_t_flag 	<= rst_zy ? 0 : ram_ff5_t_flag ? 1 : | _016__T & ( | _016__X0 );
  always @( posedge clk_mgated )
      ram_ff5_r_flag 	<= rst_zy ? 0 : ram_ff5_r_flag ? 1 : ram_ff5_t_flag ? 0 : ( | ram_ff5_R ) ;
  always @(posedge clk_mgated)
      ram_ff6 <= _017_;
  logic [160:0] _017__X0 ;
  logic [160:0] _017__R0 ;
  logic [160:0] _017__C0 ;
  assign _017__X0 = { 161{ ram_ff6_S != _017__S }} ;
  assign _017__R0 = 0 ;
  assign _017__C0 = 0 ;
  always @( posedge clk_mgated )
      ram_ff6_T 		<= rst_zy ? 0 : ( _017__T & _017__X0 );
  always @( posedge clk_mgated )
      ram_ff6_t_flag 	<= rst_zy ? 0 : ram_ff6_t_flag ? 1 : | _017__T & ( | _017__X0 );
  always @( posedge clk_mgated )
      ram_ff6_r_flag 	<= rst_zy ? 0 : ram_ff6_r_flag ? 1 : ram_ff6_t_flag ? 0 : ( | ram_ff6_R ) ;
  always @(posedge clk_mgated)
      ram_ff7 <= _018_;
  logic [160:0] _018__X0 ;
  logic [160:0] _018__R0 ;
  logic [160:0] _018__C0 ;
  assign _018__X0 = { 161{ ram_ff7_S != _018__S }} ;
  assign _018__R0 = 0 ;
  assign _018__C0 = 0 ;
  always @( posedge clk_mgated )
      ram_ff7_T 		<= rst_zy ? 0 : ( _018__T & _018__X0 );
  always @( posedge clk_mgated )
      ram_ff7_t_flag 	<= rst_zy ? 0 : ram_ff7_t_flag ? 1 : | _018__T & ( | _018__X0 );
  always @( posedge clk_mgated )
      ram_ff7_r_flag 	<= rst_zy ? 0 : ram_ff7_r_flag ? 1 : ram_ff7_t_flag ? 0 : ( | ram_ff7_R ) ;
  always @(posedge clk_mgated)
      ram_ff8 <= _019_;
  logic [160:0] _019__X0 ;
  logic [160:0] _019__R0 ;
  logic [160:0] _019__C0 ;
  assign _019__X0 = { 161{ ram_ff8_S != _019__S }} ;
  assign _019__R0 = 0 ;
  assign _019__C0 = 0 ;
  always @( posedge clk_mgated )
      ram_ff8_T 		<= rst_zy ? 0 : ( _019__T & _019__X0 );
  always @( posedge clk_mgated )
      ram_ff8_t_flag 	<= rst_zy ? 0 : ram_ff8_t_flag ? 1 : | _019__T & ( | _019__X0 );
  always @( posedge clk_mgated )
      ram_ff8_r_flag 	<= rst_zy ? 0 : ram_ff8_r_flag ? 1 : ram_ff8_t_flag ? 0 : ( | ram_ff8_R ) ;
  always @(posedge clk_mgated)
      ram_ff9 <= _020_;
  logic [160:0] _020__X0 ;
  logic [160:0] _020__R0 ;
  logic [160:0] _020__C0 ;
  assign _020__X0 = { 161{ ram_ff9_S != _020__S }} ;
  assign _020__R0 = 0 ;
  assign _020__C0 = 0 ;
  always @( posedge clk_mgated )
      ram_ff9_T 		<= rst_zy ? 0 : ( _020__T & _020__X0 );
  always @( posedge clk_mgated )
      ram_ff9_t_flag 	<= rst_zy ? 0 : ram_ff9_t_flag ? 1 : | _020__T & ( | _020__X0 );
  always @( posedge clk_mgated )
      ram_ff9_r_flag 	<= rst_zy ? 0 : ram_ff9_r_flag ? 1 : ram_ff9_t_flag ? 0 : ( | ram_ff9_R ) ;
  always @(posedge clk_mgated)
      ram_ff10 <= _002_;
  logic [160:0] _002__X0 ;
  logic [160:0] _002__R0 ;
  logic [160:0] _002__C0 ;
  assign _002__X0 = { 161{ ram_ff10_S != _002__S }} ;
  assign _002__R0 = 0 ;
  assign _002__C0 = 0 ;
  always @( posedge clk_mgated )
      ram_ff10_T 		<= rst_zy ? 0 : ( _002__T & _002__X0 );
  always @( posedge clk_mgated )
      ram_ff10_t_flag 	<= rst_zy ? 0 : ram_ff10_t_flag ? 1 : | _002__T & ( | _002__X0 );
  always @( posedge clk_mgated )
      ram_ff10_r_flag 	<= rst_zy ? 0 : ram_ff10_r_flag ? 1 : ram_ff10_t_flag ? 0 : ( | ram_ff10_R ) ;
  always @(posedge clk_mgated)
      ram_ff11 <= _003_;
  logic [160:0] _003__X0 ;
  logic [160:0] _003__R0 ;
  logic [160:0] _003__C0 ;
  assign _003__X0 = { 161{ ram_ff11_S != _003__S }} ;
  assign _003__R0 = 0 ;
  assign _003__C0 = 0 ;
  always @( posedge clk_mgated )
      ram_ff11_T 		<= rst_zy ? 0 : ( _003__T & _003__X0 );
  always @( posedge clk_mgated )
      ram_ff11_t_flag 	<= rst_zy ? 0 : ram_ff11_t_flag ? 1 : | _003__T & ( | _003__X0 );
  always @( posedge clk_mgated )
      ram_ff11_r_flag 	<= rst_zy ? 0 : ram_ff11_r_flag ? 1 : ram_ff11_t_flag ? 0 : ( | ram_ff11_R ) ;
  always @(posedge clk_mgated)
      ram_ff12 <= _004_;
  logic [160:0] _004__X0 ;
  logic [160:0] _004__R0 ;
  logic [160:0] _004__C0 ;
  assign _004__X0 = { 161{ ram_ff12_S != _004__S }} ;
  assign _004__R0 = 0 ;
  assign _004__C0 = 0 ;
  always @( posedge clk_mgated )
      ram_ff12_T 		<= rst_zy ? 0 : ( _004__T & _004__X0 );
  always @( posedge clk_mgated )
      ram_ff12_t_flag 	<= rst_zy ? 0 : ram_ff12_t_flag ? 1 : | _004__T & ( | _004__X0 );
  always @( posedge clk_mgated )
      ram_ff12_r_flag 	<= rst_zy ? 0 : ram_ff12_r_flag ? 1 : ram_ff12_t_flag ? 0 : ( | ram_ff12_R ) ;
  always @(posedge clk_mgated)
      ram_ff13 <= _005_;
  logic [160:0] _005__X0 ;
  logic [160:0] _005__R0 ;
  logic [160:0] _005__C0 ;
  assign _005__X0 = { 161{ ram_ff13_S != _005__S }} ;
  assign _005__R0 = 0 ;
  assign _005__C0 = 0 ;
  always @( posedge clk_mgated )
      ram_ff13_T 		<= rst_zy ? 0 : ( _005__T & _005__X0 );
  always @( posedge clk_mgated )
      ram_ff13_t_flag 	<= rst_zy ? 0 : ram_ff13_t_flag ? 1 : | _005__T & ( | _005__X0 );
  always @( posedge clk_mgated )
      ram_ff13_r_flag 	<= rst_zy ? 0 : ram_ff13_r_flag ? 1 : ram_ff13_t_flag ? 0 : ( | ram_ff13_R ) ;
  always @(posedge clk_mgated)
      ram_ff14 <= _006_;
  logic [160:0] _006__X0 ;
  logic [160:0] _006__R0 ;
  logic [160:0] _006__C0 ;
  assign _006__X0 = { 161{ ram_ff14_S != _006__S }} ;
  assign _006__R0 = 0 ;
  assign _006__C0 = 0 ;
  always @( posedge clk_mgated )
      ram_ff14_T 		<= rst_zy ? 0 : ( _006__T & _006__X0 );
  always @( posedge clk_mgated )
      ram_ff14_t_flag 	<= rst_zy ? 0 : ram_ff14_t_flag ? 1 : | _006__T & ( | _006__X0 );
  always @( posedge clk_mgated )
      ram_ff14_r_flag 	<= rst_zy ? 0 : ram_ff14_r_flag ? 1 : ram_ff14_t_flag ? 0 : ( | ram_ff14_R ) ;
  always @(posedge clk_mgated)
      ram_ff15 <= _007_;
  logic [160:0] _007__X0 ;
  logic [160:0] _007__R0 ;
  logic [160:0] _007__C0 ;
  assign _007__X0 = { 161{ ram_ff15_S != _007__S }} ;
  assign _007__R0 = 0 ;
  assign _007__C0 = 0 ;
  always @( posedge clk_mgated )
      ram_ff15_T 		<= rst_zy ? 0 : ( _007__T & _007__X0 );
  always @( posedge clk_mgated )
      ram_ff15_t_flag 	<= rst_zy ? 0 : ram_ff15_t_flag ? 1 : | _007__T & ( | _007__X0 );
  always @( posedge clk_mgated )
      ram_ff15_r_flag 	<= rst_zy ? 0 : ram_ff15_r_flag ? 1 : ram_ff15_t_flag ? 0 : ( | ram_ff15_R ) ;
  always @(posedge clk_mgated)
      ram_ff16 <= _008_;
  logic [160:0] _008__X0 ;
  logic [160:0] _008__R0 ;
  logic [160:0] _008__C0 ;
  assign _008__X0 = { 161{ ram_ff16_S != _008__S }} ;
  assign _008__R0 = 0 ;
  assign _008__C0 = 0 ;
  always @( posedge clk_mgated )
      ram_ff16_T 		<= rst_zy ? 0 : ( _008__T & _008__X0 );
  always @( posedge clk_mgated )
      ram_ff16_t_flag 	<= rst_zy ? 0 : ram_ff16_t_flag ? 1 : | _008__T & ( | _008__X0 );
  always @( posedge clk_mgated )
      ram_ff16_r_flag 	<= rst_zy ? 0 : ram_ff16_r_flag ? 1 : ram_ff16_t_flag ? 0 : ( | ram_ff16_R ) ;
  always @(posedge clk_mgated)
      ram_ff17 <= _009_;
  logic [160:0] _009__X0 ;
  logic [160:0] _009__R0 ;
  logic [160:0] _009__C0 ;
  assign _009__X0 = { 161{ ram_ff17_S != _009__S }} ;
  assign _009__R0 = 0 ;
  assign _009__C0 = 0 ;
  always @( posedge clk_mgated )
      ram_ff17_T 		<= rst_zy ? 0 : ( _009__T & _009__X0 );
  always @( posedge clk_mgated )
      ram_ff17_t_flag 	<= rst_zy ? 0 : ram_ff17_t_flag ? 1 : | _009__T & ( | _009__X0 );
  always @( posedge clk_mgated )
      ram_ff17_r_flag 	<= rst_zy ? 0 : ram_ff17_r_flag ? 1 : ram_ff17_t_flag ? 0 : ( | ram_ff17_R ) ;
  always @(posedge clk_mgated)
      ram_ff18 <= _010_;
  logic [160:0] _010__X0 ;
  logic [160:0] _010__R0 ;
  logic [160:0] _010__C0 ;
  assign _010__X0 = { 161{ ram_ff18_S != _010__S }} ;
  assign _010__R0 = 0 ;
  assign _010__C0 = 0 ;
  always @( posedge clk_mgated )
      ram_ff18_T 		<= rst_zy ? 0 : ( _010__T & _010__X0 );
  always @( posedge clk_mgated )
      ram_ff18_t_flag 	<= rst_zy ? 0 : ram_ff18_t_flag ? 1 : | _010__T & ( | _010__X0 );
  always @( posedge clk_mgated )
      ram_ff18_r_flag 	<= rst_zy ? 0 : ram_ff18_r_flag ? 1 : ram_ff18_t_flag ? 0 : ( | ram_ff18_R ) ;
  always @(posedge clk_mgated)
      ram_ff19 <= _011_;
  logic [160:0] _011__X0 ;
  logic [160:0] _011__R0 ;
  logic [160:0] _011__C0 ;
  assign _011__X0 = { 161{ ram_ff19_S != _011__S }} ;
  assign _011__R0 = 0 ;
  assign _011__C0 = 0 ;
  always @( posedge clk_mgated )
      ram_ff19_T 		<= rst_zy ? 0 : ( _011__T & _011__X0 );
  always @( posedge clk_mgated )
      ram_ff19_t_flag 	<= rst_zy ? 0 : ram_ff19_t_flag ? 1 : | _011__T & ( | _011__X0 );
  always @( posedge clk_mgated )
      ram_ff19_r_flag 	<= rst_zy ? 0 : ram_ff19_r_flag ? 1 : ram_ff19_t_flag ? 0 : ( | ram_ff19_R ) ;
  always @(posedge clk)
      di_d <= _000_;
  logic [160:0] _000__X0 ;
  logic [160:0] _000__R0 ;
  logic [160:0] _000__C0 ;
  assign _000__X0 = { 161{ di_d_S != _000__S }} ;
  assign _000__R0 = 0 ;
  assign _000__C0 = 0 ;
  always @( posedge clk )
      di_d_T 		<= rst_zy ? 0 : ( _000__T & _000__X0 );
  always @( posedge clk )
      di_d_t_flag 	<= rst_zy ? 0 : di_d_t_flag ? 1 : | _000__T & ( | _000__X0 );
  always @( posedge clk )
      di_d_r_flag 	<= rst_zy ? 0 : di_d_r_flag ? 1 : di_d_t_flag ? 0 : ( | di_d_R ) ;
  logic [3380:0] fangyuan0;
  logic [3380:0] fangyuan0_T ;
  logic [3380:0] fangyuan0_R ;
  logic [3380:0] fangyuan0_C ;
  logic [3380:0] fangyuan0_X ;
  assign fangyuan0 = { ram_ff0, ram_ff1, ram_ff2, ram_ff3, ram_ff4, ram_ff5, ram_ff6, ram_ff7, ram_ff8, ram_ff9, ram_ff10, ram_ff11, ram_ff12, ram_ff13, ram_ff14, ram_ff15, ram_ff16, ram_ff17, ram_ff18, ram_ff19, di_d };
  assign fangyuan0_T = {  ram_ff0_T , ram_ff1_T , ram_ff2_T , ram_ff3_T , ram_ff4_T , ram_ff5_T , ram_ff6_T , ram_ff7_T , ram_ff8_T , ram_ff9_T , ram_ff10_T , ram_ff11_T , ram_ff12_T , ram_ff13_T , ram_ff14_T , ram_ff15_T , ram_ff16_T , ram_ff17_T , ram_ff18_T , ram_ff19_T , di_d_T  };
  logic [293:0] fangyuan0_S ;
  assign fangyuan0_S = { ram_ff0_S , ram_ff1_S , ram_ff2_S , ram_ff3_S , ram_ff4_S , ram_ff5_S , ram_ff6_S , ram_ff7_S , ram_ff8_S , ram_ff9_S , ram_ff10_S , ram_ff11_S , ram_ff12_S , ram_ff13_S , ram_ff14_S , ram_ff15_S , ram_ff16_S , ram_ff17_S , ram_ff18_S , ram_ff19_S , di_d_S  };
  logic [160:0] ram_ff0_R0 ;
  logic [160:0] ram_ff0_X0 ;
  logic [160:0] ram_ff0_C0 ;
  assign ram_ff0_R0 = fangyuan0_R [3380:3220] ;
  assign ram_ff0_X0 = fangyuan0_X [3380:3220] ;
  assign ram_ff0_C0 = fangyuan0_C [3380:3220] ;
  logic [160:0] ram_ff1_R0 ;
  logic [160:0] ram_ff1_X0 ;
  logic [160:0] ram_ff1_C0 ;
  assign ram_ff1_R0 = fangyuan0_R [3219:3059] ;
  assign ram_ff1_X0 = fangyuan0_X [3219:3059] ;
  assign ram_ff1_C0 = fangyuan0_C [3219:3059] ;
  logic [160:0] ram_ff2_R0 ;
  logic [160:0] ram_ff2_X0 ;
  logic [160:0] ram_ff2_C0 ;
  assign ram_ff2_R0 = fangyuan0_R [3058:2898] ;
  assign ram_ff2_X0 = fangyuan0_X [3058:2898] ;
  assign ram_ff2_C0 = fangyuan0_C [3058:2898] ;
  logic [160:0] ram_ff3_R0 ;
  logic [160:0] ram_ff3_X0 ;
  logic [160:0] ram_ff3_C0 ;
  assign ram_ff3_R0 = fangyuan0_R [2897:2737] ;
  assign ram_ff3_X0 = fangyuan0_X [2897:2737] ;
  assign ram_ff3_C0 = fangyuan0_C [2897:2737] ;
  logic [160:0] ram_ff4_R0 ;
  logic [160:0] ram_ff4_X0 ;
  logic [160:0] ram_ff4_C0 ;
  assign ram_ff4_R0 = fangyuan0_R [2736:2576] ;
  assign ram_ff4_X0 = fangyuan0_X [2736:2576] ;
  assign ram_ff4_C0 = fangyuan0_C [2736:2576] ;
  logic [160:0] ram_ff5_R0 ;
  logic [160:0] ram_ff5_X0 ;
  logic [160:0] ram_ff5_C0 ;
  assign ram_ff5_R0 = fangyuan0_R [2575:2415] ;
  assign ram_ff5_X0 = fangyuan0_X [2575:2415] ;
  assign ram_ff5_C0 = fangyuan0_C [2575:2415] ;
  logic [160:0] ram_ff6_R0 ;
  logic [160:0] ram_ff6_X0 ;
  logic [160:0] ram_ff6_C0 ;
  assign ram_ff6_R0 = fangyuan0_R [2414:2254] ;
  assign ram_ff6_X0 = fangyuan0_X [2414:2254] ;
  assign ram_ff6_C0 = fangyuan0_C [2414:2254] ;
  logic [160:0] ram_ff7_R0 ;
  logic [160:0] ram_ff7_X0 ;
  logic [160:0] ram_ff7_C0 ;
  assign ram_ff7_R0 = fangyuan0_R [2253:2093] ;
  assign ram_ff7_X0 = fangyuan0_X [2253:2093] ;
  assign ram_ff7_C0 = fangyuan0_C [2253:2093] ;
  logic [160:0] ram_ff8_R0 ;
  logic [160:0] ram_ff8_X0 ;
  logic [160:0] ram_ff8_C0 ;
  assign ram_ff8_R0 = fangyuan0_R [2092:1932] ;
  assign ram_ff8_X0 = fangyuan0_X [2092:1932] ;
  assign ram_ff8_C0 = fangyuan0_C [2092:1932] ;
  logic [160:0] ram_ff9_R0 ;
  logic [160:0] ram_ff9_X0 ;
  logic [160:0] ram_ff9_C0 ;
  assign ram_ff9_R0 = fangyuan0_R [1931:1771] ;
  assign ram_ff9_X0 = fangyuan0_X [1931:1771] ;
  assign ram_ff9_C0 = fangyuan0_C [1931:1771] ;
  logic [160:0] ram_ff10_R0 ;
  logic [160:0] ram_ff10_X0 ;
  logic [160:0] ram_ff10_C0 ;
  assign ram_ff10_R0 = fangyuan0_R [1770:1610] ;
  assign ram_ff10_X0 = fangyuan0_X [1770:1610] ;
  assign ram_ff10_C0 = fangyuan0_C [1770:1610] ;
  logic [160:0] ram_ff11_R0 ;
  logic [160:0] ram_ff11_X0 ;
  logic [160:0] ram_ff11_C0 ;
  assign ram_ff11_R0 = fangyuan0_R [1609:1449] ;
  assign ram_ff11_X0 = fangyuan0_X [1609:1449] ;
  assign ram_ff11_C0 = fangyuan0_C [1609:1449] ;
  logic [160:0] ram_ff12_R0 ;
  logic [160:0] ram_ff12_X0 ;
  logic [160:0] ram_ff12_C0 ;
  assign ram_ff12_R0 = fangyuan0_R [1448:1288] ;
  assign ram_ff12_X0 = fangyuan0_X [1448:1288] ;
  assign ram_ff12_C0 = fangyuan0_C [1448:1288] ;
  logic [160:0] ram_ff13_R0 ;
  logic [160:0] ram_ff13_X0 ;
  logic [160:0] ram_ff13_C0 ;
  assign ram_ff13_R0 = fangyuan0_R [1287:1127] ;
  assign ram_ff13_X0 = fangyuan0_X [1287:1127] ;
  assign ram_ff13_C0 = fangyuan0_C [1287:1127] ;
  logic [160:0] ram_ff14_R0 ;
  logic [160:0] ram_ff14_X0 ;
  logic [160:0] ram_ff14_C0 ;
  assign ram_ff14_R0 = fangyuan0_R [1126:966] ;
  assign ram_ff14_X0 = fangyuan0_X [1126:966] ;
  assign ram_ff14_C0 = fangyuan0_C [1126:966] ;
  logic [160:0] ram_ff15_R0 ;
  logic [160:0] ram_ff15_X0 ;
  logic [160:0] ram_ff15_C0 ;
  assign ram_ff15_R0 = fangyuan0_R [965:805] ;
  assign ram_ff15_X0 = fangyuan0_X [965:805] ;
  assign ram_ff15_C0 = fangyuan0_C [965:805] ;
  logic [160:0] ram_ff16_R0 ;
  logic [160:0] ram_ff16_X0 ;
  logic [160:0] ram_ff16_C0 ;
  assign ram_ff16_R0 = fangyuan0_R [804:644] ;
  assign ram_ff16_X0 = fangyuan0_X [804:644] ;
  assign ram_ff16_C0 = fangyuan0_C [804:644] ;
  logic [160:0] ram_ff17_R0 ;
  logic [160:0] ram_ff17_X0 ;
  logic [160:0] ram_ff17_C0 ;
  assign ram_ff17_R0 = fangyuan0_R [643:483] ;
  assign ram_ff17_X0 = fangyuan0_X [643:483] ;
  assign ram_ff17_C0 = fangyuan0_C [643:483] ;
  logic [160:0] ram_ff18_R0 ;
  logic [160:0] ram_ff18_X0 ;
  logic [160:0] ram_ff18_C0 ;
  assign ram_ff18_R0 = fangyuan0_R [482:322] ;
  assign ram_ff18_X0 = fangyuan0_X [482:322] ;
  assign ram_ff18_C0 = fangyuan0_C [482:322] ;
  logic [160:0] ram_ff19_R0 ;
  logic [160:0] ram_ff19_X0 ;
  logic [160:0] ram_ff19_C0 ;
  assign ram_ff19_R0 = fangyuan0_R [321:161] ;
  assign ram_ff19_X0 = fangyuan0_X [321:161] ;
  assign ram_ff19_C0 = fangyuan0_C [321:161] ;
  logic [160:0] di_d_R0 ;
  logic [160:0] di_d_X0 ;
  logic [160:0] di_d_C0 ;
  assign di_d_R0 = fangyuan0_R [160:0] ;
  assign di_d_X0 = fangyuan0_X [160:0] ;
  assign di_d_C0 = fangyuan0_C [160:0] ;
  logic [20:0] fangyuan1;
  logic [20:0] fangyuan1_T ;
  logic [20:0] fangyuan1_R ;
  logic [20:0] fangyuan1_C ;
  logic [20:0] fangyuan1_X ;
  assign fangyuan1 = { _081_, _080_, _079_, _078_, _077_, _076_, _075_, _074_, _073_, _072_, _071_, _070_, _069_, _068_, _067_, _066_, _065_, _064_, _063_, _062_, _061_ };
  assign fangyuan1_T = {  _081__T , _080__T , _079__T , _078__T , _077__T , _076__T , _075__T , _074__T , _073__T , _072__T , _071__T , _070__T , _069__T , _068__T , _067__T , _066__T , _065__T , _064__T , _063__T , _062__T , _061__T  };
  logic [13:0] fangyuan1_S ;
  assign fangyuan1_S = 0 ;
  logic [0:0] _081__R0 ;
  logic [0:0] _081__X0 ;
  logic [0:0] _081__C0 ;
  assign _081__R0 = fangyuan1_R [20:20] ;
  assign _081__X0 = fangyuan1_X [20:20] ;
  assign _081__C0 = fangyuan1_C [20:20] ;
  logic [0:0] _080__R0 ;
  logic [0:0] _080__X0 ;
  logic [0:0] _080__C0 ;
  assign _080__R0 = fangyuan1_R [19:19] ;
  assign _080__X0 = fangyuan1_X [19:19] ;
  assign _080__C0 = fangyuan1_C [19:19] ;
  logic [0:0] _079__R0 ;
  logic [0:0] _079__X0 ;
  logic [0:0] _079__C0 ;
  assign _079__R0 = fangyuan1_R [18:18] ;
  assign _079__X0 = fangyuan1_X [18:18] ;
  assign _079__C0 = fangyuan1_C [18:18] ;
  logic [0:0] _078__R0 ;
  logic [0:0] _078__X0 ;
  logic [0:0] _078__C0 ;
  assign _078__R0 = fangyuan1_R [17:17] ;
  assign _078__X0 = fangyuan1_X [17:17] ;
  assign _078__C0 = fangyuan1_C [17:17] ;
  logic [0:0] _077__R0 ;
  logic [0:0] _077__X0 ;
  logic [0:0] _077__C0 ;
  assign _077__R0 = fangyuan1_R [16:16] ;
  assign _077__X0 = fangyuan1_X [16:16] ;
  assign _077__C0 = fangyuan1_C [16:16] ;
  logic [0:0] _076__R0 ;
  logic [0:0] _076__X0 ;
  logic [0:0] _076__C0 ;
  assign _076__R0 = fangyuan1_R [15:15] ;
  assign _076__X0 = fangyuan1_X [15:15] ;
  assign _076__C0 = fangyuan1_C [15:15] ;
  logic [0:0] _075__R0 ;
  logic [0:0] _075__X0 ;
  logic [0:0] _075__C0 ;
  assign _075__R0 = fangyuan1_R [14:14] ;
  assign _075__X0 = fangyuan1_X [14:14] ;
  assign _075__C0 = fangyuan1_C [14:14] ;
  logic [0:0] _074__R0 ;
  logic [0:0] _074__X0 ;
  logic [0:0] _074__C0 ;
  assign _074__R0 = fangyuan1_R [13:13] ;
  assign _074__X0 = fangyuan1_X [13:13] ;
  assign _074__C0 = fangyuan1_C [13:13] ;
  logic [0:0] _073__R0 ;
  logic [0:0] _073__X0 ;
  logic [0:0] _073__C0 ;
  assign _073__R0 = fangyuan1_R [12:12] ;
  assign _073__X0 = fangyuan1_X [12:12] ;
  assign _073__C0 = fangyuan1_C [12:12] ;
  logic [0:0] _072__R0 ;
  logic [0:0] _072__X0 ;
  logic [0:0] _072__C0 ;
  assign _072__R0 = fangyuan1_R [11:11] ;
  assign _072__X0 = fangyuan1_X [11:11] ;
  assign _072__C0 = fangyuan1_C [11:11] ;
  logic [0:0] _071__R0 ;
  logic [0:0] _071__X0 ;
  logic [0:0] _071__C0 ;
  assign _071__R0 = fangyuan1_R [10:10] ;
  assign _071__X0 = fangyuan1_X [10:10] ;
  assign _071__C0 = fangyuan1_C [10:10] ;
  logic [0:0] _070__R0 ;
  logic [0:0] _070__X0 ;
  logic [0:0] _070__C0 ;
  assign _070__R0 = fangyuan1_R [9:9] ;
  assign _070__X0 = fangyuan1_X [9:9] ;
  assign _070__C0 = fangyuan1_C [9:9] ;
  logic [0:0] _069__R0 ;
  logic [0:0] _069__X0 ;
  logic [0:0] _069__C0 ;
  assign _069__R0 = fangyuan1_R [8:8] ;
  assign _069__X0 = fangyuan1_X [8:8] ;
  assign _069__C0 = fangyuan1_C [8:8] ;
  logic [0:0] _068__R0 ;
  logic [0:0] _068__X0 ;
  logic [0:0] _068__C0 ;
  assign _068__R0 = fangyuan1_R [7:7] ;
  assign _068__X0 = fangyuan1_X [7:7] ;
  assign _068__C0 = fangyuan1_C [7:7] ;
  logic [0:0] _067__R0 ;
  logic [0:0] _067__X0 ;
  logic [0:0] _067__C0 ;
  assign _067__R0 = fangyuan1_R [6:6] ;
  assign _067__X0 = fangyuan1_X [6:6] ;
  assign _067__C0 = fangyuan1_C [6:6] ;
  logic [0:0] _066__R0 ;
  logic [0:0] _066__X0 ;
  logic [0:0] _066__C0 ;
  assign _066__R0 = fangyuan1_R [5:5] ;
  assign _066__X0 = fangyuan1_X [5:5] ;
  assign _066__C0 = fangyuan1_C [5:5] ;
  logic [0:0] _065__R0 ;
  logic [0:0] _065__X0 ;
  logic [0:0] _065__C0 ;
  assign _065__R0 = fangyuan1_R [4:4] ;
  assign _065__X0 = fangyuan1_X [4:4] ;
  assign _065__C0 = fangyuan1_C [4:4] ;
  logic [0:0] _064__R0 ;
  logic [0:0] _064__X0 ;
  logic [0:0] _064__C0 ;
  assign _064__R0 = fangyuan1_R [3:3] ;
  assign _064__X0 = fangyuan1_X [3:3] ;
  assign _064__C0 = fangyuan1_C [3:3] ;
  logic [0:0] _063__R0 ;
  logic [0:0] _063__X0 ;
  logic [0:0] _063__C0 ;
  assign _063__R0 = fangyuan1_R [2:2] ;
  assign _063__X0 = fangyuan1_X [2:2] ;
  assign _063__C0 = fangyuan1_C [2:2] ;
  logic [0:0] _062__R0 ;
  logic [0:0] _062__X0 ;
  logic [0:0] _062__C0 ;
  assign _062__R0 = fangyuan1_R [1:1] ;
  assign _062__X0 = fangyuan1_X [1:1] ;
  assign _062__C0 = fangyuan1_C [1:1] ;
  logic [0:0] _061__R0 ;
  logic [0:0] _061__X0 ;
  logic [0:0] _061__C0 ;
  assign _061__R0 = fangyuan1_R [0:0] ;
  assign _061__X0 = fangyuan1_X [0:0] ;
  assign _061__C0 = fangyuan1_C [0:0] ;

  always @(161'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 or fangyuan0 or fangyuan1) begin
    casez (fangyuan1)
      21'b????????????????????1 :
        dout = fangyuan0 [160:0] ;
      21'b???????????????????1? :
        dout = fangyuan0 [321:161] ;
      21'b??????????????????1?? :
        dout = fangyuan0 [482:322] ;
      21'b?????????????????1??? :
        dout = fangyuan0 [643:483] ;
      21'b????????????????1???? :
        dout = fangyuan0 [804:644] ;
      21'b???????????????1????? :
        dout = fangyuan0 [965:805] ;
      21'b??????????????1?????? :
        dout = fangyuan0 [1126:966] ;
      21'b?????????????1??????? :
        dout = fangyuan0 [1287:1127] ;
      21'b????????????1???????? :
        dout = fangyuan0 [1448:1288] ;
      21'b???????????1????????? :
        dout = fangyuan0 [1609:1449] ;
      21'b??????????1?????????? :
        dout = fangyuan0 [1770:1610] ;
      21'b?????????1??????????? :
        dout = fangyuan0 [1931:1771] ;
      21'b????????1???????????? :
        dout = fangyuan0 [2092:1932] ;
      21'b???????1????????????? :
        dout = fangyuan0 [2253:2093] ;
      21'b??????1?????????????? :
        dout = fangyuan0 [2414:2254] ;
      21'b?????1??????????????? :
        dout = fangyuan0 [2575:2415] ;
      21'b????1???????????????? :
        dout = fangyuan0 [2736:2576] ;
      21'b???1????????????????? :
        dout = fangyuan0 [2897:2737] ;
      21'b??1?????????????????? :
        dout = fangyuan0 [3058:2898] ;
      21'b?1??????????????????? :
        dout = fangyuan0 [3219:3059] ;
      21'b1???????????????????? :
        dout = fangyuan0 [3380:3220] ;
      default:
        dout = 161'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 ;
    endcase
  end
    always @( fangyuan0_T or fangyuan1_T or fangyuan1 ) begin
      casez (fangyuan1)
        21'b????????????????????1 :
          dout_T = fangyuan0_T  [160:0] | { 161{ | fangyuan1_T }} ;
        21'b???????????????????1? :
          dout_T = fangyuan0_T  [321:161] | { 161{ | fangyuan1_T }} ;
        21'b??????????????????1?? :
          dout_T = fangyuan0_T  [482:322] | { 161{ | fangyuan1_T }} ;
        21'b?????????????????1??? :
          dout_T = fangyuan0_T  [643:483] | { 161{ | fangyuan1_T }} ;
        21'b????????????????1???? :
          dout_T = fangyuan0_T  [804:644] | { 161{ | fangyuan1_T }} ;
        21'b???????????????1????? :
          dout_T = fangyuan0_T  [965:805] | { 161{ | fangyuan1_T }} ;
        21'b??????????????1?????? :
          dout_T = fangyuan0_T  [1126:966] | { 161{ | fangyuan1_T }} ;
        21'b?????????????1??????? :
          dout_T = fangyuan0_T  [1287:1127] | { 161{ | fangyuan1_T }} ;
        21'b????????????1???????? :
          dout_T = fangyuan0_T  [1448:1288] | { 161{ | fangyuan1_T }} ;
        21'b???????????1????????? :
          dout_T = fangyuan0_T  [1609:1449] | { 161{ | fangyuan1_T }} ;
        21'b??????????1?????????? :
          dout_T = fangyuan0_T  [1770:1610] | { 161{ | fangyuan1_T }} ;
        21'b?????????1??????????? :
          dout_T = fangyuan0_T  [1931:1771] | { 161{ | fangyuan1_T }} ;
        21'b????????1???????????? :
          dout_T = fangyuan0_T  [2092:1932] | { 161{ | fangyuan1_T }} ;
        21'b???????1????????????? :
          dout_T = fangyuan0_T  [2253:2093] | { 161{ | fangyuan1_T }} ;
        21'b??????1?????????????? :
          dout_T = fangyuan0_T  [2414:2254] | { 161{ | fangyuan1_T }} ;
        21'b?????1??????????????? :
          dout_T = fangyuan0_T  [2575:2415] | { 161{ | fangyuan1_T }} ;
        21'b????1???????????????? :
          dout_T = fangyuan0_T  [2736:2576] | { 161{ | fangyuan1_T }} ;
        21'b???1????????????????? :
          dout_T = fangyuan0_T  [2897:2737] | { 161{ | fangyuan1_T }} ;
        21'b??1?????????????????? :
          dout_T = fangyuan0_T  [3058:2898] | { 161{ | fangyuan1_T }} ;
        21'b?1??????????????????? :
          dout_T = fangyuan0_T  [3219:3059] | { 161{ | fangyuan1_T }} ;
        21'b1???????????????????? :
          dout_T = fangyuan0_T  [3380:3220] | { 161{ | fangyuan1_T }} ;
        default:
          dout_T = { 161{ | fangyuan1_T }} ;
      endcase
    end
    always @( fangyuan0_S or fangyuan1 ) begin
      casez (fangyuan1)
        21'b????????????????????1 :
          dout_S = fangyuan0_S [13:0] ;
        21'b???????????????????1? :
          dout_S = fangyuan0_S [27:14] ;
        21'b??????????????????1?? :
          dout_S = fangyuan0_S [41:28] ;
        21'b?????????????????1??? :
          dout_S = fangyuan0_S [55:42] ;
        21'b????????????????1???? :
          dout_S = fangyuan0_S [69:56] ;
        21'b???????????????1????? :
          dout_S = fangyuan0_S [83:70] ;
        21'b??????????????1?????? :
          dout_S = fangyuan0_S [97:84] ;
        21'b?????????????1??????? :
          dout_S = fangyuan0_S [111:98] ;
        21'b????????????1???????? :
          dout_S = fangyuan0_S [125:112] ;
        21'b???????????1????????? :
          dout_S = fangyuan0_S [139:126] ;
        21'b??????????1?????????? :
          dout_S = fangyuan0_S [153:140] ;
        21'b?????????1??????????? :
          dout_S = fangyuan0_S [167:154] ;
        21'b????????1???????????? :
          dout_S = fangyuan0_S [181:168] ;
        21'b???????1????????????? :
          dout_S = fangyuan0_S [195:182] ;
        21'b??????1?????????????? :
          dout_S = fangyuan0_S [209:196] ;
        21'b?????1??????????????? :
          dout_S = fangyuan0_S [223:210] ;
        21'b????1???????????????? :
          dout_S = fangyuan0_S [237:224] ;
        21'b???1????????????????? :
          dout_S = fangyuan0_S [251:238] ;
        21'b??1?????????????????? :
          dout_S = fangyuan0_S [265:252] ;
        21'b?1??????????????????? :
          dout_S = fangyuan0_S [279:266] ;
        21'b1???????????????????? :
          dout_S = fangyuan0_S [293:280] ;
        default:
          dout_S = 14'b1 ;
      endcase
    end
    reg [21-1:0] fangyuan1_R0 ;
    reg [21-1:0] fangyuan1_X0 ;
    reg [21-1:0] fangyuan1_C0 ;
    reg [3381-1:0] fangyuan0_R0 ;
    reg [3381-1:0] fangyuan0_X0 ;
    reg [3381-1:0] fangyuan0_C0 ;
    always @( dout_R or fangyuan1 ) begin
      fangyuan1_R0 = { 21{ | dout_R }} ;
      fangyuan0_R0 = 0 ;
      casez (fangyuan1)
        21'b????????????????????1 :
          fangyuan0_R0 [160:0] = dout_R | { 161{ | fangyuan1_T }} ;
        21'b???????????????????1? :
          fangyuan0_R0 [321:161] = dout_R | { 161{ | fangyuan1_T }} ;
        21'b??????????????????1?? :
          fangyuan0_R0 [482:322] = dout_R | { 161{ | fangyuan1_T }} ;
        21'b?????????????????1??? :
          fangyuan0_R0 [643:483] = dout_R | { 161{ | fangyuan1_T }} ;
        21'b????????????????1???? :
          fangyuan0_R0 [804:644] = dout_R | { 161{ | fangyuan1_T }} ;
        21'b???????????????1????? :
          fangyuan0_R0 [965:805] = dout_R | { 161{ | fangyuan1_T }} ;
        21'b??????????????1?????? :
          fangyuan0_R0 [1126:966] = dout_R | { 161{ | fangyuan1_T }} ;
        21'b?????????????1??????? :
          fangyuan0_R0 [1287:1127] = dout_R | { 161{ | fangyuan1_T }} ;
        21'b????????????1???????? :
          fangyuan0_R0 [1448:1288] = dout_R | { 161{ | fangyuan1_T }} ;
        21'b???????????1????????? :
          fangyuan0_R0 [1609:1449] = dout_R | { 161{ | fangyuan1_T }} ;
        21'b??????????1?????????? :
          fangyuan0_R0 [1770:1610] = dout_R | { 161{ | fangyuan1_T }} ;
        21'b?????????1??????????? :
          fangyuan0_R0 [1931:1771] = dout_R | { 161{ | fangyuan1_T }} ;
        21'b????????1???????????? :
          fangyuan0_R0 [2092:1932] = dout_R | { 161{ | fangyuan1_T }} ;
        21'b???????1????????????? :
          fangyuan0_R0 [2253:2093] = dout_R | { 161{ | fangyuan1_T }} ;
        21'b??????1?????????????? :
          fangyuan0_R0 [2414:2254] = dout_R | { 161{ | fangyuan1_T }} ;
        21'b?????1??????????????? :
          fangyuan0_R0 [2575:2415] = dout_R | { 161{ | fangyuan1_T }} ;
        21'b????1???????????????? :
          fangyuan0_R0 [2736:2576] = dout_R | { 161{ | fangyuan1_T }} ;
        21'b???1????????????????? :
          fangyuan0_R0 [2897:2737] = dout_R | { 161{ | fangyuan1_T }} ;
        21'b??1?????????????????? :
          fangyuan0_R0 [3058:2898] = dout_R | { 161{ | fangyuan1_T }} ;
        21'b?1??????????????????? :
          fangyuan0_R0 [3219:3059] = dout_R | { 161{ | fangyuan1_T }} ;
        21'b1???????????????????? :
          fangyuan0_R0 [3380:3220] = dout_R | { 161{ | fangyuan1_T }} ;
      endcase
    end
    always @( dout_X or fangyuan1 ) begin
      fangyuan1_X0 = { 21{ | dout_X }} ;
      fangyuan0_X0 = 0 ;
      casez (fangyuan1)
        21'b????????????????????1 :
          fangyuan0_X0 [160:0] = dout_X ;
        21'b???????????????????1? :
          fangyuan0_X0 [321:161] = dout_X ;
        21'b??????????????????1?? :
          fangyuan0_X0 [482:322] = dout_X ;
        21'b?????????????????1??? :
          fangyuan0_X0 [643:483] = dout_X ;
        21'b????????????????1???? :
          fangyuan0_X0 [804:644] = dout_X ;
        21'b???????????????1????? :
          fangyuan0_X0 [965:805] = dout_X ;
        21'b??????????????1?????? :
          fangyuan0_X0 [1126:966] = dout_X ;
        21'b?????????????1??????? :
          fangyuan0_X0 [1287:1127] = dout_X ;
        21'b????????????1???????? :
          fangyuan0_X0 [1448:1288] = dout_X ;
        21'b???????????1????????? :
          fangyuan0_X0 [1609:1449] = dout_X ;
        21'b??????????1?????????? :
          fangyuan0_X0 [1770:1610] = dout_X ;
        21'b?????????1??????????? :
          fangyuan0_X0 [1931:1771] = dout_X ;
        21'b????????1???????????? :
          fangyuan0_X0 [2092:1932] = dout_X ;
        21'b???????1????????????? :
          fangyuan0_X0 [2253:2093] = dout_X ;
        21'b??????1?????????????? :
          fangyuan0_X0 [2414:2254] = dout_X ;
        21'b?????1??????????????? :
          fangyuan0_X0 [2575:2415] = dout_X ;
        21'b????1???????????????? :
          fangyuan0_X0 [2736:2576] = dout_X ;
        21'b???1????????????????? :
          fangyuan0_X0 [2897:2737] = dout_X ;
        21'b??1?????????????????? :
          fangyuan0_X0 [3058:2898] = dout_X ;
        21'b?1??????????????????? :
          fangyuan0_X0 [3219:3059] = dout_X ;
        21'b1???????????????????? :
          fangyuan0_X0 [3380:3220] = dout_X ;
      endcase
    end
    always @( dout_C or fangyuan1 ) begin
      fangyuan1_C0 = { 21{ | dout_C }} ;
      fangyuan0_C0 = 0 ;
      casez (fangyuan1)
        21'b????????????????????1 :
          fangyuan0_C0 [160:0] = { 161{ 1'b1 }} ;
        21'b???????????????????1? :
          fangyuan0_C0 [321:161] = { 161{ 1'b1 }} ;
        21'b??????????????????1?? :
          fangyuan0_C0 [482:322] = { 161{ 1'b1 }} ;
        21'b?????????????????1??? :
          fangyuan0_C0 [643:483] = { 161{ 1'b1 }} ;
        21'b????????????????1???? :
          fangyuan0_C0 [804:644] = { 161{ 1'b1 }} ;
        21'b???????????????1????? :
          fangyuan0_C0 [965:805] = { 161{ 1'b1 }} ;
        21'b??????????????1?????? :
          fangyuan0_C0 [1126:966] = { 161{ 1'b1 }} ;
        21'b?????????????1??????? :
          fangyuan0_C0 [1287:1127] = { 161{ 1'b1 }} ;
        21'b????????????1???????? :
          fangyuan0_C0 [1448:1288] = { 161{ 1'b1 }} ;
        21'b???????????1????????? :
          fangyuan0_C0 [1609:1449] = { 161{ 1'b1 }} ;
        21'b??????????1?????????? :
          fangyuan0_C0 [1770:1610] = { 161{ 1'b1 }} ;
        21'b?????????1??????????? :
          fangyuan0_C0 [1931:1771] = { 161{ 1'b1 }} ;
        21'b????????1???????????? :
          fangyuan0_C0 [2092:1932] = { 161{ 1'b1 }} ;
        21'b???????1????????????? :
          fangyuan0_C0 [2253:2093] = { 161{ 1'b1 }} ;
        21'b??????1?????????????? :
          fangyuan0_C0 [2414:2254] = { 161{ 1'b1 }} ;
        21'b?????1??????????????? :
          fangyuan0_C0 [2575:2415] = { 161{ 1'b1 }} ;
        21'b????1???????????????? :
          fangyuan0_C0 [2736:2576] = { 161{ 1'b1 }} ;
        21'b???1????????????????? :
          fangyuan0_C0 [2897:2737] = { 161{ 1'b1 }} ;
        21'b??1?????????????????? :
          fangyuan0_C0 [3058:2898] = { 161{ 1'b1 }} ;
        21'b?1??????????????????? :
          fangyuan0_C0 [3219:3059] = { 161{ 1'b1 }} ;
        21'b1???????????????????? :
          fangyuan0_C0 [3380:3220] = { 161{ 1'b1 }} ;
      endcase
    end
  assign _061_ = ra == 5'b10100;
  assign _061__S = 0 ;
  logic [4:0] ra_C0 ;
  logic [4:0] ra_R0 ;
  logic [4:0] ra_X0 ;
  assign _061__T = | ra_T ;
  assign ra_C0 = { 5{ _061__C }} ;
  assign ra_R0 = { 5{ _061__R }} ;
  assign ra_X0 = { 5{ _061__X }} ;
  assign _062_ = ra == 5'b10011;
  assign _062__S = 0 ;
  logic [4:0] ra_C1 ;
  logic [4:0] ra_R1 ;
  logic [4:0] ra_X1 ;
  assign _062__T = | ra_T ;
  assign ra_C1 = { 5{ _062__C }} ;
  assign ra_R1 = { 5{ _062__R }} ;
  assign ra_X1 = { 5{ _062__X }} ;
  assign _063_ = ra == 5'b10010;
  assign _063__S = 0 ;
  logic [4:0] ra_C2 ;
  logic [4:0] ra_R2 ;
  logic [4:0] ra_X2 ;
  assign _063__T = | ra_T ;
  assign ra_C2 = { 5{ _063__C }} ;
  assign ra_R2 = { 5{ _063__R }} ;
  assign ra_X2 = { 5{ _063__X }} ;
  assign _064_ = ra == 5'b10001;
  assign _064__S = 0 ;
  logic [4:0] ra_C3 ;
  logic [4:0] ra_R3 ;
  logic [4:0] ra_X3 ;
  assign _064__T = | ra_T ;
  assign ra_C3 = { 5{ _064__C }} ;
  assign ra_R3 = { 5{ _064__R }} ;
  assign ra_X3 = { 5{ _064__X }} ;
  assign _065_ = ra == 5'b10000;
  assign _065__S = 0 ;
  logic [4:0] ra_C4 ;
  logic [4:0] ra_R4 ;
  logic [4:0] ra_X4 ;
  assign _065__T = | ra_T ;
  assign ra_C4 = { 5{ _065__C }} ;
  assign ra_R4 = { 5{ _065__R }} ;
  assign ra_X4 = { 5{ _065__X }} ;
  assign _066_ = ra == 4'b1111;
  assign _066__S = 0 ;
  logic [4:0] ra_C5 ;
  logic [4:0] ra_R5 ;
  logic [4:0] ra_X5 ;
  assign _066__T = | ra_T ;
  assign ra_C5 = { 5{ _066__C }} ;
  assign ra_R5 = { 5{ _066__R }} ;
  assign ra_X5 = { 5{ _066__X }} ;
  assign _067_ = ra == 4'b1110;
  assign _067__S = 0 ;
  logic [4:0] ra_C6 ;
  logic [4:0] ra_R6 ;
  logic [4:0] ra_X6 ;
  assign _067__T = | ra_T ;
  assign ra_C6 = { 5{ _067__C }} ;
  assign ra_R6 = { 5{ _067__R }} ;
  assign ra_X6 = { 5{ _067__X }} ;
  assign _068_ = ra == 4'b1101;
  assign _068__S = 0 ;
  logic [4:0] ra_C7 ;
  logic [4:0] ra_R7 ;
  logic [4:0] ra_X7 ;
  assign _068__T = | ra_T ;
  assign ra_C7 = { 5{ _068__C }} ;
  assign ra_R7 = { 5{ _068__R }} ;
  assign ra_X7 = { 5{ _068__X }} ;
  assign _069_ = ra == 4'b1100;
  assign _069__S = 0 ;
  logic [4:0] ra_C8 ;
  logic [4:0] ra_R8 ;
  logic [4:0] ra_X8 ;
  assign _069__T = | ra_T ;
  assign ra_C8 = { 5{ _069__C }} ;
  assign ra_R8 = { 5{ _069__R }} ;
  assign ra_X8 = { 5{ _069__X }} ;
  assign _070_ = ra == 4'b1011;
  assign _070__S = 0 ;
  logic [4:0] ra_C9 ;
  logic [4:0] ra_R9 ;
  logic [4:0] ra_X9 ;
  assign _070__T = | ra_T ;
  assign ra_C9 = { 5{ _070__C }} ;
  assign ra_R9 = { 5{ _070__R }} ;
  assign ra_X9 = { 5{ _070__X }} ;
  assign _071_ = ra == 4'b1010;
  assign _071__S = 0 ;
  logic [4:0] ra_C10 ;
  logic [4:0] ra_R10 ;
  logic [4:0] ra_X10 ;
  assign _071__T = | ra_T ;
  assign ra_C10 = { 5{ _071__C }} ;
  assign ra_R10 = { 5{ _071__R }} ;
  assign ra_X10 = { 5{ _071__X }} ;
  assign _072_ = ra == 4'b1001;
  assign _072__S = 0 ;
  logic [4:0] ra_C11 ;
  logic [4:0] ra_R11 ;
  logic [4:0] ra_X11 ;
  assign _072__T = | ra_T ;
  assign ra_C11 = { 5{ _072__C }} ;
  assign ra_R11 = { 5{ _072__R }} ;
  assign ra_X11 = { 5{ _072__X }} ;
  assign _073_ = ra == 4'b1000;
  assign _073__S = 0 ;
  logic [4:0] ra_C12 ;
  logic [4:0] ra_R12 ;
  logic [4:0] ra_X12 ;
  assign _073__T = | ra_T ;
  assign ra_C12 = { 5{ _073__C }} ;
  assign ra_R12 = { 5{ _073__R }} ;
  assign ra_X12 = { 5{ _073__X }} ;
  assign _074_ = ra == 3'b111;
  assign _074__S = 0 ;
  logic [4:0] ra_C13 ;
  logic [4:0] ra_R13 ;
  logic [4:0] ra_X13 ;
  assign _074__T = | ra_T ;
  assign ra_C13 = { 5{ _074__C }} ;
  assign ra_R13 = { 5{ _074__R }} ;
  assign ra_X13 = { 5{ _074__X }} ;
  assign _075_ = ra == 3'b110;
  assign _075__S = 0 ;
  logic [4:0] ra_C14 ;
  logic [4:0] ra_R14 ;
  logic [4:0] ra_X14 ;
  assign _075__T = | ra_T ;
  assign ra_C14 = { 5{ _075__C }} ;
  assign ra_R14 = { 5{ _075__R }} ;
  assign ra_X14 = { 5{ _075__X }} ;
  assign _076_ = ra == 3'b101;
  assign _076__S = 0 ;
  logic [4:0] ra_C15 ;
  logic [4:0] ra_R15 ;
  logic [4:0] ra_X15 ;
  assign _076__T = | ra_T ;
  assign ra_C15 = { 5{ _076__C }} ;
  assign ra_R15 = { 5{ _076__R }} ;
  assign ra_X15 = { 5{ _076__X }} ;
  assign _077_ = ra == 3'b100;
  assign _077__S = 0 ;
  logic [4:0] ra_C16 ;
  logic [4:0] ra_R16 ;
  logic [4:0] ra_X16 ;
  assign _077__T = | ra_T ;
  assign ra_C16 = { 5{ _077__C }} ;
  assign ra_R16 = { 5{ _077__R }} ;
  assign ra_X16 = { 5{ _077__X }} ;
  assign _078_ = ra == 2'b11;
  assign _078__S = 0 ;
  logic [4:0] ra_C17 ;
  logic [4:0] ra_R17 ;
  logic [4:0] ra_X17 ;
  assign _078__T = | ra_T ;
  assign ra_C17 = { 5{ _078__C }} ;
  assign ra_R17 = { 5{ _078__R }} ;
  assign ra_X17 = { 5{ _078__X }} ;
  assign _079_ = ra == 2'b10;
  assign _079__S = 0 ;
  logic [4:0] ra_C18 ;
  logic [4:0] ra_R18 ;
  logic [4:0] ra_X18 ;
  assign _079__T = | ra_T ;
  assign ra_C18 = { 5{ _079__C }} ;
  assign ra_R18 = { 5{ _079__R }} ;
  assign ra_X18 = { 5{ _079__X }} ;
  assign _080_ = ra == 1'b1;
  assign _080__S = 0 ;
  logic [4:0] ra_C19 ;
  logic [4:0] ra_R19 ;
  logic [4:0] ra_X19 ;
  assign _080__T = | ra_T ;
  assign ra_C19 = { 5{ _080__C }} ;
  assign ra_R19 = { 5{ _080__R }} ;
  assign ra_X19 = { 5{ _080__X }} ;
  assign _081_ = ! ra;
  logic [4:0] ra_C20 ;
  logic [4:0] ra_R20 ;
  logic [4:0] ra_X20 ;
  assign _081__T = | ra_T ;
  assign ra_C20 = { 5{ _081__C }} ;
  assign ra_X20 = { 5{ _081__X }} ;
  assign ra_R20 = { 5{ _081__R }} ;
  assign _081__S = 0 ;
  assign _011_ = _060_ ? di_d : ram_ff19;
  logic [0:0] _060__C0 ;
  logic [0:0] _060__R0 ;
  logic [0:0] _060__X0 ;
  assign _060__C0 = | _011__C ;
  assign _060__X0 = | _011__X ;
  assign _011__T = _060_ ? ( { 161{ _060__T  }} | di_d_T ) : ( { 161{ _060__T  }} | ram_ff19_T );
  assign _011__S = _060_ ? di_d_S : ram_ff19_S ;
  assign _060__R0 = ( | (_011__R | ( _011__C & ( { 161{ _060_ }} & di_d_T | { 161{ !_060_ }} & ram_ff19_T )))) && di_d != ram_ff19 ;
  logic [160:0] di_d_C1 ;
  logic [160:0] di_d_R1 ;
  logic [160:0] di_d_X1 ;
  assign di_d_C1 = { 161{ _060_ }} ;
  assign di_d_R1 = { 161{ _060_ }} & ( _011__R | ( { 161{ _060__T  }} & _011__C ));
  assign di_d_X1 = { 161{ _060_ }} & _011__X ;
  logic [160:0] ram_ff19_C1 ;
  logic [160:0] ram_ff19_R1 ;
  logic [160:0] ram_ff19_X1 ;
  assign ram_ff19_C1 = { 161{ !_060_ }} ;
  assign ram_ff19_R1 = { 161{ !_060_ }} & ( _011__R | ( { 161{ _060__T  }} & _011__C ));
  assign ram_ff19_X1 = { 161{ !_060_ }} & _011__X ;
  assign _010_ = _059_ ? di_d : ram_ff18;
  logic [0:0] _059__C0 ;
  logic [0:0] _059__R0 ;
  logic [0:0] _059__X0 ;
  assign _059__C0 = | _010__C ;
  assign _059__X0 = | _010__X ;
  assign _010__T = _059_ ? ( { 161{ _059__T  }} | di_d_T ) : ( { 161{ _059__T  }} | ram_ff18_T );
  assign _010__S = _059_ ? di_d_S : ram_ff18_S ;
  assign _059__R0 = ( | (_010__R | ( _010__C & ( { 161{ _059_ }} & di_d_T | { 161{ !_059_ }} & ram_ff18_T )))) && di_d != ram_ff18 ;
  logic [160:0] di_d_C2 ;
  logic [160:0] di_d_R2 ;
  logic [160:0] di_d_X2 ;
  assign di_d_C2 = { 161{ _059_ }} ;
  assign di_d_R2 = { 161{ _059_ }} & ( _010__R | ( { 161{ _059__T  }} & _010__C ));
  assign di_d_X2 = { 161{ _059_ }} & _010__X ;
  logic [160:0] ram_ff18_C1 ;
  logic [160:0] ram_ff18_R1 ;
  logic [160:0] ram_ff18_X1 ;
  assign ram_ff18_C1 = { 161{ !_059_ }} ;
  assign ram_ff18_R1 = { 161{ !_059_ }} & ( _010__R | ( { 161{ _059__T  }} & _010__C ));
  assign ram_ff18_X1 = { 161{ !_059_ }} & _010__X ;
  assign _009_ = _058_ ? di_d : ram_ff17;
  logic [0:0] _058__C0 ;
  logic [0:0] _058__R0 ;
  logic [0:0] _058__X0 ;
  assign _058__C0 = | _009__C ;
  assign _058__X0 = | _009__X ;
  assign _009__T = _058_ ? ( { 161{ _058__T  }} | di_d_T ) : ( { 161{ _058__T  }} | ram_ff17_T );
  assign _009__S = _058_ ? di_d_S : ram_ff17_S ;
  assign _058__R0 = ( | (_009__R | ( _009__C & ( { 161{ _058_ }} & di_d_T | { 161{ !_058_ }} & ram_ff17_T )))) && di_d != ram_ff17 ;
  logic [160:0] di_d_C3 ;
  logic [160:0] di_d_R3 ;
  logic [160:0] di_d_X3 ;
  assign di_d_C3 = { 161{ _058_ }} ;
  assign di_d_R3 = { 161{ _058_ }} & ( _009__R | ( { 161{ _058__T  }} & _009__C ));
  assign di_d_X3 = { 161{ _058_ }} & _009__X ;
  logic [160:0] ram_ff17_C1 ;
  logic [160:0] ram_ff17_R1 ;
  logic [160:0] ram_ff17_X1 ;
  assign ram_ff17_C1 = { 161{ !_058_ }} ;
  assign ram_ff17_R1 = { 161{ !_058_ }} & ( _009__R | ( { 161{ _058__T  }} & _009__C ));
  assign ram_ff17_X1 = { 161{ !_058_ }} & _009__X ;
  assign _008_ = _057_ ? di_d : ram_ff16;
  logic [0:0] _057__C0 ;
  logic [0:0] _057__R0 ;
  logic [0:0] _057__X0 ;
  assign _057__C0 = | _008__C ;
  assign _057__X0 = | _008__X ;
  assign _008__T = _057_ ? ( { 161{ _057__T  }} | di_d_T ) : ( { 161{ _057__T  }} | ram_ff16_T );
  assign _008__S = _057_ ? di_d_S : ram_ff16_S ;
  assign _057__R0 = ( | (_008__R | ( _008__C & ( { 161{ _057_ }} & di_d_T | { 161{ !_057_ }} & ram_ff16_T )))) && di_d != ram_ff16 ;
  logic [160:0] di_d_C4 ;
  logic [160:0] di_d_R4 ;
  logic [160:0] di_d_X4 ;
  assign di_d_C4 = { 161{ _057_ }} ;
  assign di_d_R4 = { 161{ _057_ }} & ( _008__R | ( { 161{ _057__T  }} & _008__C ));
  assign di_d_X4 = { 161{ _057_ }} & _008__X ;
  logic [160:0] ram_ff16_C1 ;
  logic [160:0] ram_ff16_R1 ;
  logic [160:0] ram_ff16_X1 ;
  assign ram_ff16_C1 = { 161{ !_057_ }} ;
  assign ram_ff16_R1 = { 161{ !_057_ }} & ( _008__R | ( { 161{ _057__T  }} & _008__C ));
  assign ram_ff16_X1 = { 161{ !_057_ }} & _008__X ;
  assign _007_ = _056_ ? di_d : ram_ff15;
  logic [0:0] _056__C0 ;
  logic [0:0] _056__R0 ;
  logic [0:0] _056__X0 ;
  assign _056__C0 = | _007__C ;
  assign _056__X0 = | _007__X ;
  assign _007__T = _056_ ? ( { 161{ _056__T  }} | di_d_T ) : ( { 161{ _056__T  }} | ram_ff15_T );
  assign _007__S = _056_ ? di_d_S : ram_ff15_S ;
  assign _056__R0 = ( | (_007__R | ( _007__C & ( { 161{ _056_ }} & di_d_T | { 161{ !_056_ }} & ram_ff15_T )))) && di_d != ram_ff15 ;
  logic [160:0] di_d_C5 ;
  logic [160:0] di_d_R5 ;
  logic [160:0] di_d_X5 ;
  assign di_d_C5 = { 161{ _056_ }} ;
  assign di_d_R5 = { 161{ _056_ }} & ( _007__R | ( { 161{ _056__T  }} & _007__C ));
  assign di_d_X5 = { 161{ _056_ }} & _007__X ;
  logic [160:0] ram_ff15_C1 ;
  logic [160:0] ram_ff15_R1 ;
  logic [160:0] ram_ff15_X1 ;
  assign ram_ff15_C1 = { 161{ !_056_ }} ;
  assign ram_ff15_R1 = { 161{ !_056_ }} & ( _007__R | ( { 161{ _056__T  }} & _007__C ));
  assign ram_ff15_X1 = { 161{ !_056_ }} & _007__X ;
  assign _006_ = _055_ ? di_d : ram_ff14;
  logic [0:0] _055__C0 ;
  logic [0:0] _055__R0 ;
  logic [0:0] _055__X0 ;
  assign _055__C0 = | _006__C ;
  assign _055__X0 = | _006__X ;
  assign _006__T = _055_ ? ( { 161{ _055__T  }} | di_d_T ) : ( { 161{ _055__T  }} | ram_ff14_T );
  assign _006__S = _055_ ? di_d_S : ram_ff14_S ;
  assign _055__R0 = ( | (_006__R | ( _006__C & ( { 161{ _055_ }} & di_d_T | { 161{ !_055_ }} & ram_ff14_T )))) && di_d != ram_ff14 ;
  logic [160:0] di_d_C6 ;
  logic [160:0] di_d_R6 ;
  logic [160:0] di_d_X6 ;
  assign di_d_C6 = { 161{ _055_ }} ;
  assign di_d_R6 = { 161{ _055_ }} & ( _006__R | ( { 161{ _055__T  }} & _006__C ));
  assign di_d_X6 = { 161{ _055_ }} & _006__X ;
  logic [160:0] ram_ff14_C1 ;
  logic [160:0] ram_ff14_R1 ;
  logic [160:0] ram_ff14_X1 ;
  assign ram_ff14_C1 = { 161{ !_055_ }} ;
  assign ram_ff14_R1 = { 161{ !_055_ }} & ( _006__R | ( { 161{ _055__T  }} & _006__C ));
  assign ram_ff14_X1 = { 161{ !_055_ }} & _006__X ;
  assign _005_ = _054_ ? di_d : ram_ff13;
  logic [0:0] _054__C0 ;
  logic [0:0] _054__R0 ;
  logic [0:0] _054__X0 ;
  assign _054__C0 = | _005__C ;
  assign _054__X0 = | _005__X ;
  assign _005__T = _054_ ? ( { 161{ _054__T  }} | di_d_T ) : ( { 161{ _054__T  }} | ram_ff13_T );
  assign _005__S = _054_ ? di_d_S : ram_ff13_S ;
  assign _054__R0 = ( | (_005__R | ( _005__C & ( { 161{ _054_ }} & di_d_T | { 161{ !_054_ }} & ram_ff13_T )))) && di_d != ram_ff13 ;
  logic [160:0] di_d_C7 ;
  logic [160:0] di_d_R7 ;
  logic [160:0] di_d_X7 ;
  assign di_d_C7 = { 161{ _054_ }} ;
  assign di_d_R7 = { 161{ _054_ }} & ( _005__R | ( { 161{ _054__T  }} & _005__C ));
  assign di_d_X7 = { 161{ _054_ }} & _005__X ;
  logic [160:0] ram_ff13_C1 ;
  logic [160:0] ram_ff13_R1 ;
  logic [160:0] ram_ff13_X1 ;
  assign ram_ff13_C1 = { 161{ !_054_ }} ;
  assign ram_ff13_R1 = { 161{ !_054_ }} & ( _005__R | ( { 161{ _054__T  }} & _005__C ));
  assign ram_ff13_X1 = { 161{ !_054_ }} & _005__X ;
  assign _004_ = _053_ ? di_d : ram_ff12;
  logic [0:0] _053__C0 ;
  logic [0:0] _053__R0 ;
  logic [0:0] _053__X0 ;
  assign _053__C0 = | _004__C ;
  assign _053__X0 = | _004__X ;
  assign _004__T = _053_ ? ( { 161{ _053__T  }} | di_d_T ) : ( { 161{ _053__T  }} | ram_ff12_T );
  assign _004__S = _053_ ? di_d_S : ram_ff12_S ;
  assign _053__R0 = ( | (_004__R | ( _004__C & ( { 161{ _053_ }} & di_d_T | { 161{ !_053_ }} & ram_ff12_T )))) && di_d != ram_ff12 ;
  logic [160:0] di_d_C8 ;
  logic [160:0] di_d_R8 ;
  logic [160:0] di_d_X8 ;
  assign di_d_C8 = { 161{ _053_ }} ;
  assign di_d_R8 = { 161{ _053_ }} & ( _004__R | ( { 161{ _053__T  }} & _004__C ));
  assign di_d_X8 = { 161{ _053_ }} & _004__X ;
  logic [160:0] ram_ff12_C1 ;
  logic [160:0] ram_ff12_R1 ;
  logic [160:0] ram_ff12_X1 ;
  assign ram_ff12_C1 = { 161{ !_053_ }} ;
  assign ram_ff12_R1 = { 161{ !_053_ }} & ( _004__R | ( { 161{ _053__T  }} & _004__C ));
  assign ram_ff12_X1 = { 161{ !_053_ }} & _004__X ;
  assign _003_ = _052_ ? di_d : ram_ff11;
  logic [0:0] _052__C0 ;
  logic [0:0] _052__R0 ;
  logic [0:0] _052__X0 ;
  assign _052__C0 = | _003__C ;
  assign _052__X0 = | _003__X ;
  assign _003__T = _052_ ? ( { 161{ _052__T  }} | di_d_T ) : ( { 161{ _052__T  }} | ram_ff11_T );
  assign _003__S = _052_ ? di_d_S : ram_ff11_S ;
  assign _052__R0 = ( | (_003__R | ( _003__C & ( { 161{ _052_ }} & di_d_T | { 161{ !_052_ }} & ram_ff11_T )))) && di_d != ram_ff11 ;
  logic [160:0] di_d_C9 ;
  logic [160:0] di_d_R9 ;
  logic [160:0] di_d_X9 ;
  assign di_d_C9 = { 161{ _052_ }} ;
  assign di_d_R9 = { 161{ _052_ }} & ( _003__R | ( { 161{ _052__T  }} & _003__C ));
  assign di_d_X9 = { 161{ _052_ }} & _003__X ;
  logic [160:0] ram_ff11_C1 ;
  logic [160:0] ram_ff11_R1 ;
  logic [160:0] ram_ff11_X1 ;
  assign ram_ff11_C1 = { 161{ !_052_ }} ;
  assign ram_ff11_R1 = { 161{ !_052_ }} & ( _003__R | ( { 161{ _052__T  }} & _003__C ));
  assign ram_ff11_X1 = { 161{ !_052_ }} & _003__X ;
  assign _002_ = _051_ ? di_d : ram_ff10;
  logic [0:0] _051__C0 ;
  logic [0:0] _051__R0 ;
  logic [0:0] _051__X0 ;
  assign _051__C0 = | _002__C ;
  assign _051__X0 = | _002__X ;
  assign _002__T = _051_ ? ( { 161{ _051__T  }} | di_d_T ) : ( { 161{ _051__T  }} | ram_ff10_T );
  assign _002__S = _051_ ? di_d_S : ram_ff10_S ;
  assign _051__R0 = ( | (_002__R | ( _002__C & ( { 161{ _051_ }} & di_d_T | { 161{ !_051_ }} & ram_ff10_T )))) && di_d != ram_ff10 ;
  logic [160:0] di_d_C10 ;
  logic [160:0] di_d_R10 ;
  logic [160:0] di_d_X10 ;
  assign di_d_C10 = { 161{ _051_ }} ;
  assign di_d_R10 = { 161{ _051_ }} & ( _002__R | ( { 161{ _051__T  }} & _002__C ));
  assign di_d_X10 = { 161{ _051_ }} & _002__X ;
  logic [160:0] ram_ff10_C1 ;
  logic [160:0] ram_ff10_R1 ;
  logic [160:0] ram_ff10_X1 ;
  assign ram_ff10_C1 = { 161{ !_051_ }} ;
  assign ram_ff10_R1 = { 161{ !_051_ }} & ( _002__R | ( { 161{ _051__T  }} & _002__C ));
  assign ram_ff10_X1 = { 161{ !_051_ }} & _002__X ;
  assign _020_ = _050_ ? di_d : ram_ff9;
  logic [0:0] _050__C0 ;
  logic [0:0] _050__R0 ;
  logic [0:0] _050__X0 ;
  assign _050__C0 = | _020__C ;
  assign _050__X0 = | _020__X ;
  assign _020__T = _050_ ? ( { 161{ _050__T  }} | di_d_T ) : ( { 161{ _050__T  }} | ram_ff9_T );
  assign _020__S = _050_ ? di_d_S : ram_ff9_S ;
  assign _050__R0 = ( | (_020__R | ( _020__C & ( { 161{ _050_ }} & di_d_T | { 161{ !_050_ }} & ram_ff9_T )))) && di_d != ram_ff9 ;
  logic [160:0] di_d_C11 ;
  logic [160:0] di_d_R11 ;
  logic [160:0] di_d_X11 ;
  assign di_d_C11 = { 161{ _050_ }} ;
  assign di_d_R11 = { 161{ _050_ }} & ( _020__R | ( { 161{ _050__T  }} & _020__C ));
  assign di_d_X11 = { 161{ _050_ }} & _020__X ;
  logic [160:0] ram_ff9_C1 ;
  logic [160:0] ram_ff9_R1 ;
  logic [160:0] ram_ff9_X1 ;
  assign ram_ff9_C1 = { 161{ !_050_ }} ;
  assign ram_ff9_R1 = { 161{ !_050_ }} & ( _020__R | ( { 161{ _050__T  }} & _020__C ));
  assign ram_ff9_X1 = { 161{ !_050_ }} & _020__X ;
  assign _019_ = _049_ ? di_d : ram_ff8;
  logic [0:0] _049__C0 ;
  logic [0:0] _049__R0 ;
  logic [0:0] _049__X0 ;
  assign _049__C0 = | _019__C ;
  assign _049__X0 = | _019__X ;
  assign _019__T = _049_ ? ( { 161{ _049__T  }} | di_d_T ) : ( { 161{ _049__T  }} | ram_ff8_T );
  assign _019__S = _049_ ? di_d_S : ram_ff8_S ;
  assign _049__R0 = ( | (_019__R | ( _019__C & ( { 161{ _049_ }} & di_d_T | { 161{ !_049_ }} & ram_ff8_T )))) && di_d != ram_ff8 ;
  logic [160:0] di_d_C12 ;
  logic [160:0] di_d_R12 ;
  logic [160:0] di_d_X12 ;
  assign di_d_C12 = { 161{ _049_ }} ;
  assign di_d_R12 = { 161{ _049_ }} & ( _019__R | ( { 161{ _049__T  }} & _019__C ));
  assign di_d_X12 = { 161{ _049_ }} & _019__X ;
  logic [160:0] ram_ff8_C1 ;
  logic [160:0] ram_ff8_R1 ;
  logic [160:0] ram_ff8_X1 ;
  assign ram_ff8_C1 = { 161{ !_049_ }} ;
  assign ram_ff8_R1 = { 161{ !_049_ }} & ( _019__R | ( { 161{ _049__T  }} & _019__C ));
  assign ram_ff8_X1 = { 161{ !_049_ }} & _019__X ;
  assign _018_ = _048_ ? di_d : ram_ff7;
  logic [0:0] _048__C0 ;
  logic [0:0] _048__R0 ;
  logic [0:0] _048__X0 ;
  assign _048__C0 = | _018__C ;
  assign _048__X0 = | _018__X ;
  assign _018__T = _048_ ? ( { 161{ _048__T  }} | di_d_T ) : ( { 161{ _048__T  }} | ram_ff7_T );
  assign _018__S = _048_ ? di_d_S : ram_ff7_S ;
  assign _048__R0 = ( | (_018__R | ( _018__C & ( { 161{ _048_ }} & di_d_T | { 161{ !_048_ }} & ram_ff7_T )))) && di_d != ram_ff7 ;
  logic [160:0] di_d_C13 ;
  logic [160:0] di_d_R13 ;
  logic [160:0] di_d_X13 ;
  assign di_d_C13 = { 161{ _048_ }} ;
  assign di_d_R13 = { 161{ _048_ }} & ( _018__R | ( { 161{ _048__T  }} & _018__C ));
  assign di_d_X13 = { 161{ _048_ }} & _018__X ;
  logic [160:0] ram_ff7_C1 ;
  logic [160:0] ram_ff7_R1 ;
  logic [160:0] ram_ff7_X1 ;
  assign ram_ff7_C1 = { 161{ !_048_ }} ;
  assign ram_ff7_R1 = { 161{ !_048_ }} & ( _018__R | ( { 161{ _048__T  }} & _018__C ));
  assign ram_ff7_X1 = { 161{ !_048_ }} & _018__X ;
  assign _017_ = _047_ ? di_d : ram_ff6;
  logic [0:0] _047__C0 ;
  logic [0:0] _047__R0 ;
  logic [0:0] _047__X0 ;
  assign _047__C0 = | _017__C ;
  assign _047__X0 = | _017__X ;
  assign _017__T = _047_ ? ( { 161{ _047__T  }} | di_d_T ) : ( { 161{ _047__T  }} | ram_ff6_T );
  assign _017__S = _047_ ? di_d_S : ram_ff6_S ;
  assign _047__R0 = ( | (_017__R | ( _017__C & ( { 161{ _047_ }} & di_d_T | { 161{ !_047_ }} & ram_ff6_T )))) && di_d != ram_ff6 ;
  logic [160:0] di_d_C14 ;
  logic [160:0] di_d_R14 ;
  logic [160:0] di_d_X14 ;
  assign di_d_C14 = { 161{ _047_ }} ;
  assign di_d_R14 = { 161{ _047_ }} & ( _017__R | ( { 161{ _047__T  }} & _017__C ));
  assign di_d_X14 = { 161{ _047_ }} & _017__X ;
  logic [160:0] ram_ff6_C1 ;
  logic [160:0] ram_ff6_R1 ;
  logic [160:0] ram_ff6_X1 ;
  assign ram_ff6_C1 = { 161{ !_047_ }} ;
  assign ram_ff6_R1 = { 161{ !_047_ }} & ( _017__R | ( { 161{ _047__T  }} & _017__C ));
  assign ram_ff6_X1 = { 161{ !_047_ }} & _017__X ;
  assign _016_ = _046_ ? di_d : ram_ff5;
  logic [0:0] _046__C0 ;
  logic [0:0] _046__R0 ;
  logic [0:0] _046__X0 ;
  assign _046__C0 = | _016__C ;
  assign _046__X0 = | _016__X ;
  assign _016__T = _046_ ? ( { 161{ _046__T  }} | di_d_T ) : ( { 161{ _046__T  }} | ram_ff5_T );
  assign _016__S = _046_ ? di_d_S : ram_ff5_S ;
  assign _046__R0 = ( | (_016__R | ( _016__C & ( { 161{ _046_ }} & di_d_T | { 161{ !_046_ }} & ram_ff5_T )))) && di_d != ram_ff5 ;
  logic [160:0] di_d_C15 ;
  logic [160:0] di_d_R15 ;
  logic [160:0] di_d_X15 ;
  assign di_d_C15 = { 161{ _046_ }} ;
  assign di_d_R15 = { 161{ _046_ }} & ( _016__R | ( { 161{ _046__T  }} & _016__C ));
  assign di_d_X15 = { 161{ _046_ }} & _016__X ;
  logic [160:0] ram_ff5_C1 ;
  logic [160:0] ram_ff5_R1 ;
  logic [160:0] ram_ff5_X1 ;
  assign ram_ff5_C1 = { 161{ !_046_ }} ;
  assign ram_ff5_R1 = { 161{ !_046_ }} & ( _016__R | ( { 161{ _046__T  }} & _016__C ));
  assign ram_ff5_X1 = { 161{ !_046_ }} & _016__X ;
  assign _015_ = _045_ ? di_d : ram_ff4;
  logic [0:0] _045__C0 ;
  logic [0:0] _045__R0 ;
  logic [0:0] _045__X0 ;
  assign _045__C0 = | _015__C ;
  assign _045__X0 = | _015__X ;
  assign _015__T = _045_ ? ( { 161{ _045__T  }} | di_d_T ) : ( { 161{ _045__T  }} | ram_ff4_T );
  assign _015__S = _045_ ? di_d_S : ram_ff4_S ;
  assign _045__R0 = ( | (_015__R | ( _015__C & ( { 161{ _045_ }} & di_d_T | { 161{ !_045_ }} & ram_ff4_T )))) && di_d != ram_ff4 ;
  logic [160:0] di_d_C16 ;
  logic [160:0] di_d_R16 ;
  logic [160:0] di_d_X16 ;
  assign di_d_C16 = { 161{ _045_ }} ;
  assign di_d_R16 = { 161{ _045_ }} & ( _015__R | ( { 161{ _045__T  }} & _015__C ));
  assign di_d_X16 = { 161{ _045_ }} & _015__X ;
  logic [160:0] ram_ff4_C1 ;
  logic [160:0] ram_ff4_R1 ;
  logic [160:0] ram_ff4_X1 ;
  assign ram_ff4_C1 = { 161{ !_045_ }} ;
  assign ram_ff4_R1 = { 161{ !_045_ }} & ( _015__R | ( { 161{ _045__T  }} & _015__C ));
  assign ram_ff4_X1 = { 161{ !_045_ }} & _015__X ;
  assign _014_ = _044_ ? di_d : ram_ff3;
  logic [0:0] _044__C0 ;
  logic [0:0] _044__R0 ;
  logic [0:0] _044__X0 ;
  assign _044__C0 = | _014__C ;
  assign _044__X0 = | _014__X ;
  assign _014__T = _044_ ? ( { 161{ _044__T  }} | di_d_T ) : ( { 161{ _044__T  }} | ram_ff3_T );
  assign _014__S = _044_ ? di_d_S : ram_ff3_S ;
  assign _044__R0 = ( | (_014__R | ( _014__C & ( { 161{ _044_ }} & di_d_T | { 161{ !_044_ }} & ram_ff3_T )))) && di_d != ram_ff3 ;
  logic [160:0] di_d_C17 ;
  logic [160:0] di_d_R17 ;
  logic [160:0] di_d_X17 ;
  assign di_d_C17 = { 161{ _044_ }} ;
  assign di_d_R17 = { 161{ _044_ }} & ( _014__R | ( { 161{ _044__T  }} & _014__C ));
  assign di_d_X17 = { 161{ _044_ }} & _014__X ;
  logic [160:0] ram_ff3_C1 ;
  logic [160:0] ram_ff3_R1 ;
  logic [160:0] ram_ff3_X1 ;
  assign ram_ff3_C1 = { 161{ !_044_ }} ;
  assign ram_ff3_R1 = { 161{ !_044_ }} & ( _014__R | ( { 161{ _044__T  }} & _014__C ));
  assign ram_ff3_X1 = { 161{ !_044_ }} & _014__X ;
  assign _013_ = _043_ ? di_d : ram_ff2;
  logic [0:0] _043__C0 ;
  logic [0:0] _043__R0 ;
  logic [0:0] _043__X0 ;
  assign _043__C0 = | _013__C ;
  assign _043__X0 = | _013__X ;
  assign _013__T = _043_ ? ( { 161{ _043__T  }} | di_d_T ) : ( { 161{ _043__T  }} | ram_ff2_T );
  assign _013__S = _043_ ? di_d_S : ram_ff2_S ;
  assign _043__R0 = ( | (_013__R | ( _013__C & ( { 161{ _043_ }} & di_d_T | { 161{ !_043_ }} & ram_ff2_T )))) && di_d != ram_ff2 ;
  logic [160:0] di_d_C18 ;
  logic [160:0] di_d_R18 ;
  logic [160:0] di_d_X18 ;
  assign di_d_C18 = { 161{ _043_ }} ;
  assign di_d_R18 = { 161{ _043_ }} & ( _013__R | ( { 161{ _043__T  }} & _013__C ));
  assign di_d_X18 = { 161{ _043_ }} & _013__X ;
  logic [160:0] ram_ff2_C1 ;
  logic [160:0] ram_ff2_R1 ;
  logic [160:0] ram_ff2_X1 ;
  assign ram_ff2_C1 = { 161{ !_043_ }} ;
  assign ram_ff2_R1 = { 161{ !_043_ }} & ( _013__R | ( { 161{ _043__T  }} & _013__C ));
  assign ram_ff2_X1 = { 161{ !_043_ }} & _013__X ;
  assign _012_ = _042_ ? di_d : ram_ff1;
  logic [0:0] _042__C0 ;
  logic [0:0] _042__R0 ;
  logic [0:0] _042__X0 ;
  assign _042__C0 = | _012__C ;
  assign _042__X0 = | _012__X ;
  assign _012__T = _042_ ? ( { 161{ _042__T  }} | di_d_T ) : ( { 161{ _042__T  }} | ram_ff1_T );
  assign _012__S = _042_ ? di_d_S : ram_ff1_S ;
  assign _042__R0 = ( | (_012__R | ( _012__C & ( { 161{ _042_ }} & di_d_T | { 161{ !_042_ }} & ram_ff1_T )))) && di_d != ram_ff1 ;
  logic [160:0] di_d_C19 ;
  logic [160:0] di_d_R19 ;
  logic [160:0] di_d_X19 ;
  assign di_d_C19 = { 161{ _042_ }} ;
  assign di_d_R19 = { 161{ _042_ }} & ( _012__R | ( { 161{ _042__T  }} & _012__C ));
  assign di_d_X19 = { 161{ _042_ }} & _012__X ;
  logic [160:0] ram_ff1_C1 ;
  logic [160:0] ram_ff1_R1 ;
  logic [160:0] ram_ff1_X1 ;
  assign ram_ff1_C1 = { 161{ !_042_ }} ;
  assign ram_ff1_R1 = { 161{ !_042_ }} & ( _012__R | ( { 161{ _042__T  }} & _012__C ));
  assign ram_ff1_X1 = { 161{ !_042_ }} & _012__X ;
  assign _001_ = _041_ ? di_d : ram_ff0;
  logic [0:0] _041__C0 ;
  logic [0:0] _041__R0 ;
  logic [0:0] _041__X0 ;
  assign _041__C0 = | _001__C ;
  assign _041__X0 = | _001__X ;
  assign _001__T = _041_ ? ( { 161{ _041__T  }} | di_d_T ) : ( { 161{ _041__T  }} | ram_ff0_T );
  assign _001__S = _041_ ? di_d_S : ram_ff0_S ;
  assign _041__R0 = ( | (_001__R | ( _001__C & ( { 161{ _041_ }} & di_d_T | { 161{ !_041_ }} & ram_ff0_T )))) && di_d != ram_ff0 ;
  logic [160:0] di_d_C20 ;
  logic [160:0] di_d_R20 ;
  logic [160:0] di_d_X20 ;
  assign di_d_C20 = { 161{ _041_ }} ;
  assign di_d_R20 = { 161{ _041_ }} & ( _001__R | ( { 161{ _041__T  }} & _001__C ));
  assign di_d_X20 = { 161{ _041_ }} & _001__X ;
  logic [160:0] ram_ff0_C1 ;
  logic [160:0] ram_ff0_R1 ;
  logic [160:0] ram_ff0_X1 ;
  assign ram_ff0_C1 = { 161{ !_041_ }} ;
  assign ram_ff0_R1 = { 161{ !_041_ }} & ( _001__R | ( { 161{ _041__T  }} & _001__C ));
  assign ram_ff0_X1 = { 161{ !_041_ }} & _001__X ;
  assign _000_ = iwe ? di : di_d;
  logic [0:0] iwe_C0 ;
  logic [0:0] iwe_R0 ;
  logic [0:0] iwe_X0 ;
  assign iwe_C0 = | _000__C ;
  assign iwe_X0 = | _000__X ;
  assign _000__T = iwe ? ( { 161{ iwe_T  }} | di_T ) : ( { 161{ iwe_T  }} | di_d_T );
  assign _000__S = iwe ? di_S : di_d_S ;
  assign iwe_R0 = ( | (_000__R | ( _000__C & ( { 161{ iwe }} & di_T | { 161{ !iwe }} & di_d_T )))) && di != di_d ;
  logic [160:0] di_C0 ;
  logic [160:0] di_R0 ;
  logic [160:0] di_X0 ;
  assign di_C0 = { 161{ iwe }} ;
  assign di_R0 = { 161{ iwe }} & ( _000__R | ( { 161{ iwe_T  }} & _000__C ));
  assign di_X0 = { 161{ iwe }} & _000__X ;
  logic [160:0] di_d_C21 ;
  logic [160:0] di_d_R21 ;
  logic [160:0] di_d_X21 ;
  assign di_d_C21 = { 161{ !iwe }} ;
  assign di_d_R21 = { 161{ !iwe }} & ( _000__R | ( { 161{ iwe_T  }} & _000__C ));
  assign di_d_X21 = { 161{ !iwe }} & _000__X ;
  assign di_C = ( di_C0 );
  assign iwe_C = ( iwe_C0 );
  assign _041__C = ( _041__C0 );
  assign _042__C = ( _042__C0 );
  assign _043__C = ( _043__C0 );
  assign _044__C = ( _044__C0 );
  assign _045__C = ( _045__C0 );
  assign _046__C = ( _046__C0 );
  assign _047__C = ( _047__C0 );
  assign _048__C = ( _048__C0 );
  assign _049__C = ( _049__C0 );
  assign _050__C = ( _050__C0 );
  assign _051__C = ( _051__C0 );
  assign _052__C = ( _052__C0 );
  assign _053__C = ( _053__C0 );
  assign _054__C = ( _054__C0 );
  assign _055__C = ( _055__C0 );
  assign _056__C = ( _056__C0 );
  assign _057__C = ( _057__C0 );
  assign _058__C = ( _058__C0 );
  assign _059__C = ( _059__C0 );
  assign _060__C = ( _060__C0 );
  assign ra_C = ( ra_C0 ) | ( ra_C1 ) | ( ra_C2 ) | ( ra_C3 ) | ( ra_C4 ) | ( ra_C5 ) | ( ra_C6 ) | ( ra_C7 ) | ( ra_C8 ) | ( ra_C9 ) | ( ra_C10 ) | ( ra_C11 ) | ( ra_C12 ) | ( ra_C13 ) | ( ra_C14 ) | ( ra_C15 ) | ( ra_C16 ) | ( ra_C17 ) | ( ra_C18 ) | ( ra_C19 ) | ( ra_C20 );
  assign fangyuan0_C = ( fangyuan0_C0 );
  assign fangyuan1_C = ( fangyuan1_C0 );
  assign _061__C = ( _061__C0 );
  assign _062__C = ( _062__C0 );
  assign _063__C = ( _063__C0 );
  assign _064__C = ( _064__C0 );
  assign _065__C = ( _065__C0 );
  assign _066__C = ( _066__C0 );
  assign _067__C = ( _067__C0 );
  assign _068__C = ( _068__C0 );
  assign _069__C = ( _069__C0 );
  assign _070__C = ( _070__C0 );
  assign _071__C = ( _071__C0 );
  assign _072__C = ( _072__C0 );
  assign _073__C = ( _073__C0 );
  assign _074__C = ( _074__C0 );
  assign _075__C = ( _075__C0 );
  assign _076__C = ( _076__C0 );
  assign _077__C = ( _077__C0 );
  assign _078__C = ( _078__C0 );
  assign _079__C = ( _079__C0 );
  assign _080__C = ( _080__C0 );
  assign _081__C = ( _081__C0 );
  assign di_d_C = ( di_d_C0 ) | ( di_d_C1 ) | ( di_d_C2 ) | ( di_d_C3 ) | ( di_d_C4 ) | ( di_d_C5 ) | ( di_d_C6 ) | ( di_d_C7 ) | ( di_d_C8 ) | ( di_d_C9 ) | ( di_d_C10 ) | ( di_d_C11 ) | ( di_d_C12 ) | ( di_d_C13 ) | ( di_d_C14 ) | ( di_d_C15 ) | ( di_d_C16 ) | ( di_d_C17 ) | ( di_d_C18 ) | ( di_d_C19 ) | ( di_d_C20 ) | ( di_d_C21 );
  assign ram_ff19_C = ( ram_ff19_C0 ) | ( ram_ff19_C1 );
  assign ram_ff18_C = ( ram_ff18_C0 ) | ( ram_ff18_C1 );
  assign ram_ff17_C = ( ram_ff17_C0 ) | ( ram_ff17_C1 );
  assign ram_ff16_C = ( ram_ff16_C0 ) | ( ram_ff16_C1 );
  assign ram_ff15_C = ( ram_ff15_C0 ) | ( ram_ff15_C1 );
  assign ram_ff14_C = ( ram_ff14_C0 ) | ( ram_ff14_C1 );
  assign ram_ff13_C = ( ram_ff13_C0 ) | ( ram_ff13_C1 );
  assign ram_ff12_C = ( ram_ff12_C0 ) | ( ram_ff12_C1 );
  assign ram_ff11_C = ( ram_ff11_C0 ) | ( ram_ff11_C1 );
  assign ram_ff10_C = ( ram_ff10_C0 ) | ( ram_ff10_C1 );
  assign ram_ff9_C = ( ram_ff9_C0 ) | ( ram_ff9_C1 );
  assign ram_ff8_C = ( ram_ff8_C0 ) | ( ram_ff8_C1 );
  assign ram_ff7_C = ( ram_ff7_C0 ) | ( ram_ff7_C1 );
  assign ram_ff6_C = ( ram_ff6_C0 ) | ( ram_ff6_C1 );
  assign ram_ff5_C = ( ram_ff5_C0 ) | ( ram_ff5_C1 );
  assign ram_ff4_C = ( ram_ff4_C0 ) | ( ram_ff4_C1 );
  assign ram_ff3_C = ( ram_ff3_C0 ) | ( ram_ff3_C1 );
  assign ram_ff2_C = ( ram_ff2_C0 ) | ( ram_ff2_C1 );
  assign ram_ff1_C = ( ram_ff1_C0 ) | ( ram_ff1_C1 );
  assign ram_ff0_C = ( ram_ff0_C0 ) | ( ram_ff0_C1 );
  assign _000__C = ( _000__C0 );
  assign _011__C = ( _011__C0 );
  assign _010__C = ( _010__C0 );
  assign _009__C = ( _009__C0 );
  assign _008__C = ( _008__C0 );
  assign _007__C = ( _007__C0 );
  assign _006__C = ( _006__C0 );
  assign _005__C = ( _005__C0 );
  assign _004__C = ( _004__C0 );
  assign _003__C = ( _003__C0 );
  assign _002__C = ( _002__C0 );
  assign _020__C = ( _020__C0 );
  assign _019__C = ( _019__C0 );
  assign _018__C = ( _018__C0 );
  assign _017__C = ( _017__C0 );
  assign _016__C = ( _016__C0 );
  assign _015__C = ( _015__C0 );
  assign _014__C = ( _014__C0 );
  assign _013__C = ( _013__C0 );
  assign _012__C = ( _012__C0 );
  assign _001__C = ( _001__C0 );
  assign _040__C = ( _040__C0 );
  assign _039__C = ( _039__C0 );
  assign _038__C = ( _038__C0 );
  assign _037__C = ( _037__C0 );
  assign _036__C = ( _036__C0 );
  assign _035__C = ( _035__C0 );
  assign _034__C = ( _034__C0 );
  assign _033__C = ( _033__C0 );
  assign _032__C = ( _032__C0 );
  assign _031__C = ( _031__C0 );
  assign _030__C = ( _030__C0 );
  assign _029__C = ( _029__C0 );
  assign _028__C = ( _028__C0 );
  assign _027__C = ( _027__C0 );
  assign _026__C = ( _026__C0 );
  assign _025__C = ( _025__C0 );
  assign _024__C = ( _024__C0 );
  assign _023__C = ( _023__C0 );
  assign _022__C = ( _022__C0 );
  assign _021__C = ( _021__C0 );
  assign we_C = ( we_C0 ) | ( we_C1 ) | ( we_C2 ) | ( we_C3 ) | ( we_C4 ) | ( we_C5 ) | ( we_C6 ) | ( we_C7 ) | ( we_C8 ) | ( we_C9 ) | ( we_C10 ) | ( we_C11 ) | ( we_C12 ) | ( we_C13 ) | ( we_C14 ) | ( we_C15 ) | ( we_C16 ) | ( we_C17 ) | ( we_C18 ) | ( we_C19 );
  assign wa_C = ( wa_C0 ) | ( wa_C1 ) | ( wa_C2 ) | ( wa_C3 ) | ( wa_C4 ) | ( wa_C5 ) | ( wa_C6 ) | ( wa_C7 ) | ( wa_C8 ) | ( wa_C9 ) | ( wa_C10 ) | ( wa_C11 ) | ( wa_C12 ) | ( wa_C13 ) | ( wa_C14 ) | ( wa_C15 ) | ( wa_C16 ) | ( wa_C17 ) | ( wa_C18 ) | ( wa_C19 );
  assign dout_C = ( dout_C0 );
  assign di_X = ( di_X0 );
  assign iwe_X = ( iwe_X0 );
  assign _041__X = ( _041__X0 );
  assign _042__X = ( _042__X0 );
  assign _043__X = ( _043__X0 );
  assign _044__X = ( _044__X0 );
  assign _045__X = ( _045__X0 );
  assign _046__X = ( _046__X0 );
  assign _047__X = ( _047__X0 );
  assign _048__X = ( _048__X0 );
  assign _049__X = ( _049__X0 );
  assign _050__X = ( _050__X0 );
  assign _051__X = ( _051__X0 );
  assign _052__X = ( _052__X0 );
  assign _053__X = ( _053__X0 );
  assign _054__X = ( _054__X0 );
  assign _055__X = ( _055__X0 );
  assign _056__X = ( _056__X0 );
  assign _057__X = ( _057__X0 );
  assign _058__X = ( _058__X0 );
  assign _059__X = ( _059__X0 );
  assign _060__X = ( _060__X0 );
  assign ra_X = ( ra_X0 ) | ( ra_X1 ) | ( ra_X2 ) | ( ra_X3 ) | ( ra_X4 ) | ( ra_X5 ) | ( ra_X6 ) | ( ra_X7 ) | ( ra_X8 ) | ( ra_X9 ) | ( ra_X10 ) | ( ra_X11 ) | ( ra_X12 ) | ( ra_X13 ) | ( ra_X14 ) | ( ra_X15 ) | ( ra_X16 ) | ( ra_X17 ) | ( ra_X18 ) | ( ra_X19 ) | ( ra_X20 );
  assign fangyuan0_X = ( fangyuan0_X0 );
  assign fangyuan1_X = ( fangyuan1_X0 );
  assign _061__X = ( _061__X0 );
  assign _062__X = ( _062__X0 );
  assign _063__X = ( _063__X0 );
  assign _064__X = ( _064__X0 );
  assign _065__X = ( _065__X0 );
  assign _066__X = ( _066__X0 );
  assign _067__X = ( _067__X0 );
  assign _068__X = ( _068__X0 );
  assign _069__X = ( _069__X0 );
  assign _070__X = ( _070__X0 );
  assign _071__X = ( _071__X0 );
  assign _072__X = ( _072__X0 );
  assign _073__X = ( _073__X0 );
  assign _074__X = ( _074__X0 );
  assign _075__X = ( _075__X0 );
  assign _076__X = ( _076__X0 );
  assign _077__X = ( _077__X0 );
  assign _078__X = ( _078__X0 );
  assign _079__X = ( _079__X0 );
  assign _080__X = ( _080__X0 );
  assign _081__X = ( _081__X0 );
  assign di_d_X = ( di_d_X0 ) | ( di_d_X1 ) | ( di_d_X2 ) | ( di_d_X3 ) | ( di_d_X4 ) | ( di_d_X5 ) | ( di_d_X6 ) | ( di_d_X7 ) | ( di_d_X8 ) | ( di_d_X9 ) | ( di_d_X10 ) | ( di_d_X11 ) | ( di_d_X12 ) | ( di_d_X13 ) | ( di_d_X14 ) | ( di_d_X15 ) | ( di_d_X16 ) | ( di_d_X17 ) | ( di_d_X18 ) | ( di_d_X19 ) | ( di_d_X20 ) | ( di_d_X21 );
  assign ram_ff19_X = ( ram_ff19_X0 ) | ( ram_ff19_X1 );
  assign ram_ff18_X = ( ram_ff18_X0 ) | ( ram_ff18_X1 );
  assign ram_ff17_X = ( ram_ff17_X0 ) | ( ram_ff17_X1 );
  assign ram_ff16_X = ( ram_ff16_X0 ) | ( ram_ff16_X1 );
  assign ram_ff15_X = ( ram_ff15_X0 ) | ( ram_ff15_X1 );
  assign ram_ff14_X = ( ram_ff14_X0 ) | ( ram_ff14_X1 );
  assign ram_ff13_X = ( ram_ff13_X0 ) | ( ram_ff13_X1 );
  assign ram_ff12_X = ( ram_ff12_X0 ) | ( ram_ff12_X1 );
  assign ram_ff11_X = ( ram_ff11_X0 ) | ( ram_ff11_X1 );
  assign ram_ff10_X = ( ram_ff10_X0 ) | ( ram_ff10_X1 );
  assign ram_ff9_X = ( ram_ff9_X0 ) | ( ram_ff9_X1 );
  assign ram_ff8_X = ( ram_ff8_X0 ) | ( ram_ff8_X1 );
  assign ram_ff7_X = ( ram_ff7_X0 ) | ( ram_ff7_X1 );
  assign ram_ff6_X = ( ram_ff6_X0 ) | ( ram_ff6_X1 );
  assign ram_ff5_X = ( ram_ff5_X0 ) | ( ram_ff5_X1 );
  assign ram_ff4_X = ( ram_ff4_X0 ) | ( ram_ff4_X1 );
  assign ram_ff3_X = ( ram_ff3_X0 ) | ( ram_ff3_X1 );
  assign ram_ff2_X = ( ram_ff2_X0 ) | ( ram_ff2_X1 );
  assign ram_ff1_X = ( ram_ff1_X0 ) | ( ram_ff1_X1 );
  assign ram_ff0_X = ( ram_ff0_X0 ) | ( ram_ff0_X1 );
  assign _000__X = ( _000__X0 );
  assign _011__X = ( _011__X0 );
  assign _010__X = ( _010__X0 );
  assign _009__X = ( _009__X0 );
  assign _008__X = ( _008__X0 );
  assign _007__X = ( _007__X0 );
  assign _006__X = ( _006__X0 );
  assign _005__X = ( _005__X0 );
  assign _004__X = ( _004__X0 );
  assign _003__X = ( _003__X0 );
  assign _002__X = ( _002__X0 );
  assign _020__X = ( _020__X0 );
  assign _019__X = ( _019__X0 );
  assign _018__X = ( _018__X0 );
  assign _017__X = ( _017__X0 );
  assign _016__X = ( _016__X0 );
  assign _015__X = ( _015__X0 );
  assign _014__X = ( _014__X0 );
  assign _013__X = ( _013__X0 );
  assign _012__X = ( _012__X0 );
  assign _001__X = ( _001__X0 );
  assign _040__X = ( _040__X0 );
  assign _039__X = ( _039__X0 );
  assign _038__X = ( _038__X0 );
  assign _037__X = ( _037__X0 );
  assign _036__X = ( _036__X0 );
  assign _035__X = ( _035__X0 );
  assign _034__X = ( _034__X0 );
  assign _033__X = ( _033__X0 );
  assign _032__X = ( _032__X0 );
  assign _031__X = ( _031__X0 );
  assign _030__X = ( _030__X0 );
  assign _029__X = ( _029__X0 );
  assign _028__X = ( _028__X0 );
  assign _027__X = ( _027__X0 );
  assign _026__X = ( _026__X0 );
  assign _025__X = ( _025__X0 );
  assign _024__X = ( _024__X0 );
  assign _023__X = ( _023__X0 );
  assign _022__X = ( _022__X0 );
  assign _021__X = ( _021__X0 );
  assign we_X = ( we_X0 ) | ( we_X1 ) | ( we_X2 ) | ( we_X3 ) | ( we_X4 ) | ( we_X5 ) | ( we_X6 ) | ( we_X7 ) | ( we_X8 ) | ( we_X9 ) | ( we_X10 ) | ( we_X11 ) | ( we_X12 ) | ( we_X13 ) | ( we_X14 ) | ( we_X15 ) | ( we_X16 ) | ( we_X17 ) | ( we_X18 ) | ( we_X19 );
  assign wa_X = ( wa_X0 ) | ( wa_X1 ) | ( wa_X2 ) | ( wa_X3 ) | ( wa_X4 ) | ( wa_X5 ) | ( wa_X6 ) | ( wa_X7 ) | ( wa_X8 ) | ( wa_X9 ) | ( wa_X10 ) | ( wa_X11 ) | ( wa_X12 ) | ( wa_X13 ) | ( wa_X14 ) | ( wa_X15 ) | ( wa_X16 ) | ( wa_X17 ) | ( wa_X18 ) | ( wa_X19 );
  assign dout_X = ( dout_X0 );
  assign di_R = ( di_X0 & di_R0 );
  assign iwe_R = ( iwe_X0 & iwe_R0 );
  assign _041__R = ( _041__X0 & _041__R0 );
  assign _042__R = ( _042__X0 & _042__R0 );
  assign _043__R = ( _043__X0 & _043__R0 );
  assign _044__R = ( _044__X0 & _044__R0 );
  assign _045__R = ( _045__X0 & _045__R0 );
  assign _046__R = ( _046__X0 & _046__R0 );
  assign _047__R = ( _047__X0 & _047__R0 );
  assign _048__R = ( _048__X0 & _048__R0 );
  assign _049__R = ( _049__X0 & _049__R0 );
  assign _050__R = ( _050__X0 & _050__R0 );
  assign _051__R = ( _051__X0 & _051__R0 );
  assign _052__R = ( _052__X0 & _052__R0 );
  assign _053__R = ( _053__X0 & _053__R0 );
  assign _054__R = ( _054__X0 & _054__R0 );
  assign _055__R = ( _055__X0 & _055__R0 );
  assign _056__R = ( _056__X0 & _056__R0 );
  assign _057__R = ( _057__X0 & _057__R0 );
  assign _058__R = ( _058__X0 & _058__R0 );
  assign _059__R = ( _059__X0 & _059__R0 );
  assign _060__R = ( _060__X0 & _060__R0 );
  assign ra_R = ( ra_X0 & ra_R0 ) | ( ra_X1 & ra_R1 ) | ( ra_X2 & ra_R2 ) | ( ra_X3 & ra_R3 ) | ( ra_X4 & ra_R4 ) | ( ra_X5 & ra_R5 ) | ( ra_X6 & ra_R6 ) | ( ra_X7 & ra_R7 ) | ( ra_X8 & ra_R8 ) | ( ra_X9 & ra_R9 ) | ( ra_X10 & ra_R10 ) | ( ra_X11 & ra_R11 ) | ( ra_X12 & ra_R12 ) | ( ra_X13 & ra_R13 ) | ( ra_X14 & ra_R14 ) | ( ra_X15 & ra_R15 ) | ( ra_X16 & ra_R16 ) | ( ra_X17 & ra_R17 ) | ( ra_X18 & ra_R18 ) | ( ra_X19 & ra_R19 ) | ( ra_X20 & ra_R20 );
  assign fangyuan0_R = ( fangyuan0_X0 & fangyuan0_R0 );
  assign fangyuan1_R = ( fangyuan1_X0 & fangyuan1_R0 );
  assign _061__R = ( _061__X0 & _061__R0 );
  assign _062__R = ( _062__X0 & _062__R0 );
  assign _063__R = ( _063__X0 & _063__R0 );
  assign _064__R = ( _064__X0 & _064__R0 );
  assign _065__R = ( _065__X0 & _065__R0 );
  assign _066__R = ( _066__X0 & _066__R0 );
  assign _067__R = ( _067__X0 & _067__R0 );
  assign _068__R = ( _068__X0 & _068__R0 );
  assign _069__R = ( _069__X0 & _069__R0 );
  assign _070__R = ( _070__X0 & _070__R0 );
  assign _071__R = ( _071__X0 & _071__R0 );
  assign _072__R = ( _072__X0 & _072__R0 );
  assign _073__R = ( _073__X0 & _073__R0 );
  assign _074__R = ( _074__X0 & _074__R0 );
  assign _075__R = ( _075__X0 & _075__R0 );
  assign _076__R = ( _076__X0 & _076__R0 );
  assign _077__R = ( _077__X0 & _077__R0 );
  assign _078__R = ( _078__X0 & _078__R0 );
  assign _079__R = ( _079__X0 & _079__R0 );
  assign _080__R = ( _080__X0 & _080__R0 );
  assign _081__R = ( _081__X0 & _081__R0 );
  assign di_d_R = ( di_d_X0 & di_d_R0 ) | ( di_d_X1 & di_d_R1 ) | ( di_d_X2 & di_d_R2 ) | ( di_d_X3 & di_d_R3 ) | ( di_d_X4 & di_d_R4 ) | ( di_d_X5 & di_d_R5 ) | ( di_d_X6 & di_d_R6 ) | ( di_d_X7 & di_d_R7 ) | ( di_d_X8 & di_d_R8 ) | ( di_d_X9 & di_d_R9 ) | ( di_d_X10 & di_d_R10 ) | ( di_d_X11 & di_d_R11 ) | ( di_d_X12 & di_d_R12 ) | ( di_d_X13 & di_d_R13 ) | ( di_d_X14 & di_d_R14 ) | ( di_d_X15 & di_d_R15 ) | ( di_d_X16 & di_d_R16 ) | ( di_d_X17 & di_d_R17 ) | ( di_d_X18 & di_d_R18 ) | ( di_d_X19 & di_d_R19 ) | ( di_d_X20 & di_d_R20 ) | ( di_d_X21 & di_d_R21 );
  assign ram_ff19_R = ( ram_ff19_X0 & ram_ff19_R0 ) | ( ram_ff19_X1 & ram_ff19_R1 );
  assign ram_ff18_R = ( ram_ff18_X0 & ram_ff18_R0 ) | ( ram_ff18_X1 & ram_ff18_R1 );
  assign ram_ff17_R = ( ram_ff17_X0 & ram_ff17_R0 ) | ( ram_ff17_X1 & ram_ff17_R1 );
  assign ram_ff16_R = ( ram_ff16_X0 & ram_ff16_R0 ) | ( ram_ff16_X1 & ram_ff16_R1 );
  assign ram_ff15_R = ( ram_ff15_X0 & ram_ff15_R0 ) | ( ram_ff15_X1 & ram_ff15_R1 );
  assign ram_ff14_R = ( ram_ff14_X0 & ram_ff14_R0 ) | ( ram_ff14_X1 & ram_ff14_R1 );
  assign ram_ff13_R = ( ram_ff13_X0 & ram_ff13_R0 ) | ( ram_ff13_X1 & ram_ff13_R1 );
  assign ram_ff12_R = ( ram_ff12_X0 & ram_ff12_R0 ) | ( ram_ff12_X1 & ram_ff12_R1 );
  assign ram_ff11_R = ( ram_ff11_X0 & ram_ff11_R0 ) | ( ram_ff11_X1 & ram_ff11_R1 );
  assign ram_ff10_R = ( ram_ff10_X0 & ram_ff10_R0 ) | ( ram_ff10_X1 & ram_ff10_R1 );
  assign ram_ff9_R = ( ram_ff9_X0 & ram_ff9_R0 ) | ( ram_ff9_X1 & ram_ff9_R1 );
  assign ram_ff8_R = ( ram_ff8_X0 & ram_ff8_R0 ) | ( ram_ff8_X1 & ram_ff8_R1 );
  assign ram_ff7_R = ( ram_ff7_X0 & ram_ff7_R0 ) | ( ram_ff7_X1 & ram_ff7_R1 );
  assign ram_ff6_R = ( ram_ff6_X0 & ram_ff6_R0 ) | ( ram_ff6_X1 & ram_ff6_R1 );
  assign ram_ff5_R = ( ram_ff5_X0 & ram_ff5_R0 ) | ( ram_ff5_X1 & ram_ff5_R1 );
  assign ram_ff4_R = ( ram_ff4_X0 & ram_ff4_R0 ) | ( ram_ff4_X1 & ram_ff4_R1 );
  assign ram_ff3_R = ( ram_ff3_X0 & ram_ff3_R0 ) | ( ram_ff3_X1 & ram_ff3_R1 );
  assign ram_ff2_R = ( ram_ff2_X0 & ram_ff2_R0 ) | ( ram_ff2_X1 & ram_ff2_R1 );
  assign ram_ff1_R = ( ram_ff1_X0 & ram_ff1_R0 ) | ( ram_ff1_X1 & ram_ff1_R1 );
  assign ram_ff0_R = ( ram_ff0_X0 & ram_ff0_R0 ) | ( ram_ff0_X1 & ram_ff0_R1 );
  assign _000__R = ( _000__X0 & _000__R0 );
  assign _011__R = ( _011__X0 & _011__R0 );
  assign _010__R = ( _010__X0 & _010__R0 );
  assign _009__R = ( _009__X0 & _009__R0 );
  assign _008__R = ( _008__X0 & _008__R0 );
  assign _007__R = ( _007__X0 & _007__R0 );
  assign _006__R = ( _006__X0 & _006__R0 );
  assign _005__R = ( _005__X0 & _005__R0 );
  assign _004__R = ( _004__X0 & _004__R0 );
  assign _003__R = ( _003__X0 & _003__R0 );
  assign _002__R = ( _002__X0 & _002__R0 );
  assign _020__R = ( _020__X0 & _020__R0 );
  assign _019__R = ( _019__X0 & _019__R0 );
  assign _018__R = ( _018__X0 & _018__R0 );
  assign _017__R = ( _017__X0 & _017__R0 );
  assign _016__R = ( _016__X0 & _016__R0 );
  assign _015__R = ( _015__X0 & _015__R0 );
  assign _014__R = ( _014__X0 & _014__R0 );
  assign _013__R = ( _013__X0 & _013__R0 );
  assign _012__R = ( _012__X0 & _012__R0 );
  assign _001__R = ( _001__X0 & _001__R0 );
  assign _040__R = ( _040__X0 & _040__R0 );
  assign _039__R = ( _039__X0 & _039__R0 );
  assign _038__R = ( _038__X0 & _038__R0 );
  assign _037__R = ( _037__X0 & _037__R0 );
  assign _036__R = ( _036__X0 & _036__R0 );
  assign _035__R = ( _035__X0 & _035__R0 );
  assign _034__R = ( _034__X0 & _034__R0 );
  assign _033__R = ( _033__X0 & _033__R0 );
  assign _032__R = ( _032__X0 & _032__R0 );
  assign _031__R = ( _031__X0 & _031__R0 );
  assign _030__R = ( _030__X0 & _030__R0 );
  assign _029__R = ( _029__X0 & _029__R0 );
  assign _028__R = ( _028__X0 & _028__R0 );
  assign _027__R = ( _027__X0 & _027__R0 );
  assign _026__R = ( _026__X0 & _026__R0 );
  assign _025__R = ( _025__X0 & _025__R0 );
  assign _024__R = ( _024__X0 & _024__R0 );
  assign _023__R = ( _023__X0 & _023__R0 );
  assign _022__R = ( _022__X0 & _022__R0 );
  assign _021__R = ( _021__X0 & _021__R0 );
  assign we_R = ( we_X0 & we_R0 ) | ( we_X1 & we_R1 ) | ( we_X2 & we_R2 ) | ( we_X3 & we_R3 ) | ( we_X4 & we_R4 ) | ( we_X5 & we_R5 ) | ( we_X6 & we_R6 ) | ( we_X7 & we_R7 ) | ( we_X8 & we_R8 ) | ( we_X9 & we_R9 ) | ( we_X10 & we_R10 ) | ( we_X11 & we_R11 ) | ( we_X12 & we_R12 ) | ( we_X13 & we_R13 ) | ( we_X14 & we_R14 ) | ( we_X15 & we_R15 ) | ( we_X16 & we_R16 ) | ( we_X17 & we_R17 ) | ( we_X18 & we_R18 ) | ( we_X19 & we_R19 );
  assign wa_R = ( wa_X0 & wa_R0 ) | ( wa_X1 & wa_R1 ) | ( wa_X2 & wa_R2 ) | ( wa_X3 & wa_R3 ) | ( wa_X4 & wa_R4 ) | ( wa_X5 & wa_R5 ) | ( wa_X6 & wa_R6 ) | ( wa_X7 & wa_R7 ) | ( wa_X8 & wa_R8 ) | ( wa_X9 & wa_R9 ) | ( wa_X10 & wa_R10 ) | ( wa_X11 & wa_R11 ) | ( wa_X12 & wa_R12 ) | ( wa_X13 & wa_R13 ) | ( wa_X14 & wa_R14 ) | ( wa_X15 & wa_R15 ) | ( wa_X16 & wa_R16 ) | ( wa_X17 & wa_R17 ) | ( wa_X18 & wa_R18 ) | ( wa_X19 & wa_R19 );
  assign dout_R = ( dout_X0 & dout_R0 );
 // ground taints for floating regs
 // ground taints for unused wires
  always @( posedge clk ) begin
    if( rst_zy ) ram_ff0_PREV_VAL1 <= 0 ;
    if( rst_zy ) ram_ff0_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) ram_ff0_PREV_VAL1 <= ram_ff0 ;
    if( INSTR_IN_ZY ) ram_ff0_PREV_VAL2 <= ram_ff0_PREV_VAL1 ;
  end
  always @( posedge clk ) begin
    if( rst_zy ) ram_ff1_PREV_VAL1 <= 0 ;
    if( rst_zy ) ram_ff1_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) ram_ff1_PREV_VAL1 <= ram_ff1 ;
    if( INSTR_IN_ZY ) ram_ff1_PREV_VAL2 <= ram_ff1_PREV_VAL1 ;
  end
  always @( posedge clk ) begin
    if( rst_zy ) ram_ff2_PREV_VAL1 <= 0 ;
    if( rst_zy ) ram_ff2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) ram_ff2_PREV_VAL1 <= ram_ff2 ;
    if( INSTR_IN_ZY ) ram_ff2_PREV_VAL2 <= ram_ff2_PREV_VAL1 ;
  end
  always @( posedge clk ) begin
    if( rst_zy ) ram_ff3_PREV_VAL1 <= 0 ;
    if( rst_zy ) ram_ff3_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) ram_ff3_PREV_VAL1 <= ram_ff3 ;
    if( INSTR_IN_ZY ) ram_ff3_PREV_VAL2 <= ram_ff3_PREV_VAL1 ;
  end
  always @( posedge clk ) begin
    if( rst_zy ) ram_ff4_PREV_VAL1 <= 0 ;
    if( rst_zy ) ram_ff4_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) ram_ff4_PREV_VAL1 <= ram_ff4 ;
    if( INSTR_IN_ZY ) ram_ff4_PREV_VAL2 <= ram_ff4_PREV_VAL1 ;
  end
  always @( posedge clk ) begin
    if( rst_zy ) ram_ff5_PREV_VAL1 <= 0 ;
    if( rst_zy ) ram_ff5_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) ram_ff5_PREV_VAL1 <= ram_ff5 ;
    if( INSTR_IN_ZY ) ram_ff5_PREV_VAL2 <= ram_ff5_PREV_VAL1 ;
  end
  always @( posedge clk ) begin
    if( rst_zy ) ram_ff6_PREV_VAL1 <= 0 ;
    if( rst_zy ) ram_ff6_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) ram_ff6_PREV_VAL1 <= ram_ff6 ;
    if( INSTR_IN_ZY ) ram_ff6_PREV_VAL2 <= ram_ff6_PREV_VAL1 ;
  end
  always @( posedge clk ) begin
    if( rst_zy ) ram_ff7_PREV_VAL1 <= 0 ;
    if( rst_zy ) ram_ff7_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) ram_ff7_PREV_VAL1 <= ram_ff7 ;
    if( INSTR_IN_ZY ) ram_ff7_PREV_VAL2 <= ram_ff7_PREV_VAL1 ;
  end
  always @( posedge clk ) begin
    if( rst_zy ) ram_ff8_PREV_VAL1 <= 0 ;
    if( rst_zy ) ram_ff8_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) ram_ff8_PREV_VAL1 <= ram_ff8 ;
    if( INSTR_IN_ZY ) ram_ff8_PREV_VAL2 <= ram_ff8_PREV_VAL1 ;
  end
  always @( posedge clk ) begin
    if( rst_zy ) ram_ff9_PREV_VAL1 <= 0 ;
    if( rst_zy ) ram_ff9_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) ram_ff9_PREV_VAL1 <= ram_ff9 ;
    if( INSTR_IN_ZY ) ram_ff9_PREV_VAL2 <= ram_ff9_PREV_VAL1 ;
  end
  always @( posedge clk ) begin
    if( rst_zy ) ram_ff10_PREV_VAL1 <= 0 ;
    if( rst_zy ) ram_ff10_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) ram_ff10_PREV_VAL1 <= ram_ff10 ;
    if( INSTR_IN_ZY ) ram_ff10_PREV_VAL2 <= ram_ff10_PREV_VAL1 ;
  end
  always @( posedge clk ) begin
    if( rst_zy ) ram_ff11_PREV_VAL1 <= 0 ;
    if( rst_zy ) ram_ff11_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) ram_ff11_PREV_VAL1 <= ram_ff11 ;
    if( INSTR_IN_ZY ) ram_ff11_PREV_VAL2 <= ram_ff11_PREV_VAL1 ;
  end
  always @( posedge clk ) begin
    if( rst_zy ) ram_ff12_PREV_VAL1 <= 0 ;
    if( rst_zy ) ram_ff12_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) ram_ff12_PREV_VAL1 <= ram_ff12 ;
    if( INSTR_IN_ZY ) ram_ff12_PREV_VAL2 <= ram_ff12_PREV_VAL1 ;
  end
  always @( posedge clk ) begin
    if( rst_zy ) ram_ff13_PREV_VAL1 <= 0 ;
    if( rst_zy ) ram_ff13_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) ram_ff13_PREV_VAL1 <= ram_ff13 ;
    if( INSTR_IN_ZY ) ram_ff13_PREV_VAL2 <= ram_ff13_PREV_VAL1 ;
  end
  always @( posedge clk ) begin
    if( rst_zy ) ram_ff14_PREV_VAL1 <= 0 ;
    if( rst_zy ) ram_ff14_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) ram_ff14_PREV_VAL1 <= ram_ff14 ;
    if( INSTR_IN_ZY ) ram_ff14_PREV_VAL2 <= ram_ff14_PREV_VAL1 ;
  end
  always @( posedge clk ) begin
    if( rst_zy ) ram_ff15_PREV_VAL1 <= 0 ;
    if( rst_zy ) ram_ff15_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) ram_ff15_PREV_VAL1 <= ram_ff15 ;
    if( INSTR_IN_ZY ) ram_ff15_PREV_VAL2 <= ram_ff15_PREV_VAL1 ;
  end
  always @( posedge clk ) begin
    if( rst_zy ) ram_ff16_PREV_VAL1 <= 0 ;
    if( rst_zy ) ram_ff16_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) ram_ff16_PREV_VAL1 <= ram_ff16 ;
    if( INSTR_IN_ZY ) ram_ff16_PREV_VAL2 <= ram_ff16_PREV_VAL1 ;
  end
  always @( posedge clk ) begin
    if( rst_zy ) ram_ff17_PREV_VAL1 <= 0 ;
    if( rst_zy ) ram_ff17_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) ram_ff17_PREV_VAL1 <= ram_ff17 ;
    if( INSTR_IN_ZY ) ram_ff17_PREV_VAL2 <= ram_ff17_PREV_VAL1 ;
  end
  always @( posedge clk ) begin
    if( rst_zy ) ram_ff18_PREV_VAL1 <= 0 ;
    if( rst_zy ) ram_ff18_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) ram_ff18_PREV_VAL1 <= ram_ff18 ;
    if( INSTR_IN_ZY ) ram_ff18_PREV_VAL2 <= ram_ff18_PREV_VAL1 ;
  end
  always @( posedge clk ) begin
    if( rst_zy ) ram_ff19_PREV_VAL1 <= 0 ;
    if( rst_zy ) ram_ff19_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) ram_ff19_PREV_VAL1 <= ram_ff19 ;
    if( INSTR_IN_ZY ) ram_ff19_PREV_VAL2 <= ram_ff19_PREV_VAL1 ;
  end
  always @( posedge clk ) begin
    if( rst_zy ) di_d_PREV_VAL1 <= 0 ;
    if( rst_zy ) di_d_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) di_d_PREV_VAL1 <= di_d ;
    if( INSTR_IN_ZY ) di_d_PREV_VAL2 <= di_d_PREV_VAL1 ;
  end
 // ground taints for unused wire slices
  assert property( di_d_r_flag == 0 || di_d_PREV_VAL1 == di_d_PREV_VAL2 );
  assert property( ram_ff0_r_flag == 0 || ram_ff0_PREV_VAL1 == ram_ff0_PREV_VAL2 );
  assert property( ram_ff1_r_flag == 0 || ram_ff1_PREV_VAL1 == ram_ff1_PREV_VAL2 );
  assert property( ram_ff10_r_flag == 0 || ram_ff10_PREV_VAL1 == ram_ff10_PREV_VAL2 );
  assert property( ram_ff11_r_flag == 0 || ram_ff11_PREV_VAL1 == ram_ff11_PREV_VAL2 );
  assert property( ram_ff12_r_flag == 0 || ram_ff12_PREV_VAL1 == ram_ff12_PREV_VAL2 );
  assert property( ram_ff13_r_flag == 0 || ram_ff13_PREV_VAL1 == ram_ff13_PREV_VAL2 );
  assert property( ram_ff14_r_flag == 0 || ram_ff14_PREV_VAL1 == ram_ff14_PREV_VAL2 );
  assert property( ram_ff15_r_flag == 0 || ram_ff15_PREV_VAL1 == ram_ff15_PREV_VAL2 );
  assert property( ram_ff16_r_flag == 0 || ram_ff16_PREV_VAL1 == ram_ff16_PREV_VAL2 );
  assert property( ram_ff17_r_flag == 0 || ram_ff17_PREV_VAL1 == ram_ff17_PREV_VAL2 );
  assert property( ram_ff18_r_flag == 0 || ram_ff18_PREV_VAL1 == ram_ff18_PREV_VAL2 );
  assert property( ram_ff19_r_flag == 0 || ram_ff19_PREV_VAL1 == ram_ff19_PREV_VAL2 );
  assert property( ram_ff2_r_flag == 0 || ram_ff2_PREV_VAL1 == ram_ff2_PREV_VAL2 );
  assert property( ram_ff3_r_flag == 0 || ram_ff3_PREV_VAL1 == ram_ff3_PREV_VAL2 );
  assert property( ram_ff4_r_flag == 0 || ram_ff4_PREV_VAL1 == ram_ff4_PREV_VAL2 );
  assert property( ram_ff5_r_flag == 0 || ram_ff5_PREV_VAL1 == ram_ff5_PREV_VAL2 );
  assert property( ram_ff6_r_flag == 0 || ram_ff6_PREV_VAL1 == ram_ff6_PREV_VAL2 );
  assert property( ram_ff7_r_flag == 0 || ram_ff7_PREV_VAL1 == ram_ff7_PREV_VAL2 );
  assert property( ram_ff8_r_flag == 0 || ram_ff8_PREV_VAL1 == ram_ff8_PREV_VAL2 );
  assert property( ram_ff9_r_flag == 0 || ram_ff9_PREV_VAL1 == ram_ff9_PREV_VAL2 );
endmodule
