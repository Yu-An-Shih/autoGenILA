module \$paramod\NV_DW_minmax\width=4\num_inputs=4 ( a , min_max , tc , INSTR_IN_ZY , rst_zy , a_T , a_S , index_R0 , min_max_T , min_max_S , tc_T , tc_S , value_R0 , index , value , a_R , index_T , index_S , min_max_R , tc_R , value_T , value_S );
  input rst_zy;
  integer i;
  input INSTR_IN_ZY;
  logic [3:0] _00_;
  logic [3:0] _00__T ;
  logic [3:0] _00__R ;
  logic [13:0] _00__S ;
  logic [3:0] _01_;
  logic [3:0] _01__T ;
  logic [3:0] _01__R ;
  logic [13:0] _01__S ;
  logic _02_;
  logic _02__T ;
  logic _02__R ;
  logic [13:0] _02__S ;
  logic [3:0] _03_;
  logic [3:0] _03__T ;
  logic [3:0] _03__R ;
  logic [13:0] _03__S ;
  logic _04_;
  logic _04__T ;
  logic _04__R ;
  logic [13:0] _04__S ;
  logic [3:0] _05_;
  logic [3:0] _05__T ;
  logic [3:0] _05__R ;
  logic [13:0] _05__S ;
  logic [1:0] _06_;
  logic [1:0] _06__T ;
  logic [1:0] _06__R ;
  logic [13:0] _06__S ;
  logic [3:0] _07_;
  logic [3:0] _07__T ;
  logic [3:0] _07__R ;
  logic [13:0] _07__S ;
  logic [1:0] _08_;
  logic [1:0] _08__T ;
  logic [1:0] _08__R ;
  logic [13:0] _08__S ;
  logic [3:0] _09_;
  logic [3:0] _09__T ;
  logic [3:0] _09__R ;
  logic [13:0] _09__S ;
  logic [1:0] _10_;
  logic [1:0] _10__T ;
  logic [1:0] _10__R ;
  logic [13:0] _10__S ;
  logic [3:0] _11_;
  logic [3:0] _11__T ;
  logic [3:0] _11__R ;
  logic [13:0] _11__S ;
  logic [1:0] _12_;
  logic [1:0] _12__T ;
  logic [1:0] _12__R ;
  logic [13:0] _12__S ;
  logic [3:0] _13_;
  logic [3:0] _13__T ;
  logic [3:0] _13__R ;
  logic [13:0] _13__S ;
  logic _14_;
  logic _14__T ;
  logic _14__R ;
  logic [13:0] _14__S ;
  logic _15_;
  logic _15__T ;
  logic _15__R ;
  logic [13:0] _15__S ;
  logic _16_;
  logic _16__T ;
  logic _16__R ;
  logic [13:0] _16__S ;
  logic _17_;
  logic _17__T ;
  logic _17__R ;
  logic [13:0] _17__S ;
  logic _18_;
  logic _18__T ;
  logic _18__R ;
  logic [13:0] _18__S ;
  logic _19_;
  logic _19__T ;
  logic _19__R ;
  logic [13:0] _19__S ;
  input [15:0] a;
  input [15:0] a_T ;
  output [15:0] a_R ;
  input [13:0] a_S ;
  output [1:0] index;
  logic [1:0] index ;
  output [1:0] index_T ;
  logic [1:0] index_T ;
  logic [1:0] index_R ;
  logic [13:0] index_S ;
  input [1:0] index_R0 ;
  output [13:0] index_S ;
  input min_max;
  input min_max_T ;
  output min_max_R ;
  input [13:0] min_max_S ;
  input tc;
  input tc_T ;
  output tc_R ;
  input [13:0] tc_S ;
  logic tc_NC;
  logic tc_NC_T ;
  logic tc_NC_R ;
  logic [13:0] tc_NC_S ;
  output [3:0] value;
  logic [3:0] value ;
  output [3:0] value_T ;
  logic [3:0] value_T ;
  logic [3:0] value_R ;
  logic [13:0] value_S ;
  input [3:0] value_R0 ;
  output [13:0] value_S ;
  assign _14_ = a[3:0] >= 1'b0;
  assign _14__S = 0 ;
  logic [15:0] a_R0 ;
  assign _14__T = | a_T [3:0] ;
  assign a_R0 [3:0] = { 4{ _14__R }} ;
  assign _02_ = a[7:4] >= _00_;
  assign _02__S = 0 ;
  logic [3:0] _00__R0 ;
  assign _02__T = (| a_T [7:4] ) | (|_00__T ) ;
  assign a_R0 [7:4] = { 4{ _02__R }} ;
  assign _00__R0 = { 4{ _02__R }} ;
  assign _15_ = a[11:8] >= _03_;
  assign _15__S = 0 ;
  logic [3:0] _03__R0 ;
  assign _15__T = (| a_T [11:8] ) | (|_03__T ) ;
  assign a_R0 [11:8] = { 4{ _15__R }} ;
  assign _03__R0 = { 4{ _15__R }} ;
  assign _16_ = a[15:12] >= _07_;
  assign _16__S = 0 ;
  logic [3:0] _07__R0 ;
  assign _16__T = (| a_T [15:12] ) | (|_07__T ) ;
  assign a_R0 [15:12] = { 4{ _16__R }} ;
  assign _07__R0 = { 4{ _16__R }} ;
  assign _17_ = a[3:0] < 4'b1111;
  assign _17__S = 0 ;
  logic [15:0] a_R1 ;
  assign _17__T = | a_T [3:0] ;
  assign a_R1 [3:0] = { 4{ _17__R }} ;
  assign _18_ = a[11:8] < _05_;
  assign _18__S = 0 ;
  logic [3:0] _05__R0 ;
  assign _18__T = (| a_T [11:8] ) | (|_05__T ) ;
  assign a_R1 [11:8] = { 4{ _18__R }} ;
  assign _05__R0 = { 4{ _18__R }} ;
  assign _19_ = a[15:12] < _09_;
  assign _19__S = 0 ;
  logic [3:0] _09__R0 ;
  assign _19__T = (| a_T [15:12] ) | (|_09__T ) ;
  assign a_R1 [15:12] = { 4{ _19__R }} ;
  assign _09__R0 = { 4{ _19__R }} ;
  assign _04_ = a[7:4] < _01_;
  assign _04__S = 0 ;
  logic [3:0] _01__R0 ;
  assign _04__T = (| a_T [7:4] ) | (|_01__T ) ;
  assign a_R1 [7:4] = { 4{ _04__R }} ;
  assign _01__R0 = { 4{ _04__R }} ;
  assign _10_ = _16_ ? 2'b11 : _06_;
  logic [0:0] _16__R0 ;
  assign _16__R0 = ( | _10__R ) && 2'b11 != _06_ ;
  logic [1:0] _06__R0 ;
  assign _06__R0 = { 2{ !_16_ }} & ( _10__R );
  assign _10__T = _16_ ? { 2{ | _16__T  }} : ( { 2{ | _16__T  }} | _06__T );
  assign _10__S = _16_ ? 0 : _06__S ;
  logic [1:0] fangyuan0;
  logic [1:0] fangyuan0_T ;
  logic [1:0] fangyuan0_R ;
  assign fangyuan0 = { 1'b0, _02_ };
  assign fangyuan0_T = {  1'h0 , _02__T  };
  logic [13:0] fangyuan0_S ;
  assign fangyuan0_S = 0 ;
  logic [0:0] _02__R0 ;
  assign _02__R0 = fangyuan0_R [0:0] ;
  assign _06_ = _15_ ? 2'b10 : fangyuan0;
  logic [0:0] _15__R0 ;
  assign _15__R0 = ( | _06__R ) && 2'b10 != fangyuan0 ;
  logic [1:0] fangyuan0_R0 ;
  assign fangyuan0_R0 = { 2{ !_15_ }} & ( _06__R );
  assign _06__T = _15_ ? { 2{ | _15__T  }} : ( { 2{ | _15__T  }} | fangyuan0_T );
  assign _06__S = _15_ ? 0 : fangyuan0_S ;
  assign _03_ = _02_ ? a[7:4] : _00_;
  logic [0:0] _02__R1 ;
  assign _02__R1 = ( | _03__R ) && a[7:4] != _00_ ;
  assign _03__T = _02_ ? ( { 4{ _02__T  }} | a_T [7:4] ) : ( { 4{ _02__T  }} | _00__T );
  assign _03__S = _02_ ? a_S : _00__S ;
  logic [15:0] a_R2 ;
  assign a_R2 [7:4] = { 4{ _02_ }} & ( _03__R );
  logic [3:0] _00__R1 ;
  assign _00__R1 = { 4{ !_02_ }} & ( _03__R );
  assign _00_ = _14_ ? a[3:0] : 4'b0000;
  logic [0:0] _14__R0 ;
  assign _14__R0 = ( | _00__R ) && a[3:0] != 4'b0000 ;
  assign a_R2 [3:0] = { 4{ _14_ }} & ( _00__R );
  assign _00__T = _14_ ? ( { 4{ | _14__T  }} | a_T [3:0] ) : { 4{ | _14__T  }};
  assign _00__S = _14_ ? a_S : 0 ;
  assign _11_ = _16_ ? a[15:12] : _07_;
  logic [0:0] _16__R1 ;
  assign _16__R1 = ( | _11__R ) && a[15:12] != _07_ ;
  assign _11__T = _16_ ? ( { 4{ _16__T  }} | a_T [15:12] ) : ( { 4{ _16__T  }} | _07__T );
  assign _11__S = _16_ ? a_S : _07__S ;
  assign a_R2 [15:12] = { 4{ _16_ }} & ( _11__R );
  logic [3:0] _07__R1 ;
  assign _07__R1 = { 4{ !_16_ }} & ( _11__R );
  assign _07_ = _15_ ? a[11:8] : _03_;
  logic [0:0] _15__R1 ;
  assign _15__R1 = ( | _07__R ) && a[11:8] != _03_ ;
  assign _07__T = _15_ ? ( { 4{ _15__T  }} | a_T [11:8] ) : ( { 4{ _15__T  }} | _03__T );
  assign _07__S = _15_ ? a_S : _03__S ;
  assign a_R2 [11:8] = { 4{ _15_ }} & ( _07__R );
  logic [3:0] _03__R1 ;
  assign _03__R1 = { 4{ !_15_ }} & ( _07__R );
  assign _12_ = _19_ ? 2'b11 : _08_;
  logic [0:0] _19__R0 ;
  assign _19__R0 = ( | _12__R ) && 2'b11 != _08_ ;
  logic [1:0] _08__R0 ;
  assign _08__R0 = { 2{ !_19_ }} & ( _12__R );
  assign _12__T = _19_ ? { 2{ | _19__T  }} : ( { 2{ | _19__T  }} | _08__T );
  assign _12__S = _19_ ? 0 : _08__S ;
  logic [1:0] fangyuan1;
  logic [1:0] fangyuan1_T ;
  logic [1:0] fangyuan1_R ;
  assign fangyuan1 = { 1'b0, _04_ };
  assign fangyuan1_T = {  1'h0 , _04__T  };
  logic [13:0] fangyuan1_S ;
  assign fangyuan1_S = 0 ;
  logic [0:0] _04__R0 ;
  assign _04__R0 = fangyuan1_R [0:0] ;
  assign _08_ = _18_ ? 2'b10 : fangyuan1;
  logic [0:0] _18__R0 ;
  assign _18__R0 = ( | _08__R ) && 2'b10 != fangyuan1 ;
  logic [1:0] fangyuan1_R0 ;
  assign fangyuan1_R0 = { 2{ !_18_ }} & ( _08__R );
  assign _08__T = _18_ ? { 2{ | _18__T  }} : ( { 2{ | _18__T  }} | fangyuan1_T );
  assign _08__S = _18_ ? 0 : fangyuan1_S ;
  assign _09_ = _18_ ? a[11:8] : _05_;
  logic [0:0] _18__R1 ;
  assign _18__R1 = ( | _09__R ) && a[11:8] != _05_ ;
  assign _09__T = _18_ ? ( { 4{ _18__T  }} | a_T [11:8] ) : ( { 4{ _18__T  }} | _05__T );
  assign _09__S = _18_ ? a_S : _05__S ;
  logic [15:0] a_R3 ;
  assign a_R3 [11:8] = { 4{ _18_ }} & ( _09__R );
  logic [3:0] _05__R1 ;
  assign _05__R1 = { 4{ !_18_ }} & ( _09__R );
  assign _05_ = _04_ ? a[7:4] : _01_;
  logic [0:0] _04__R1 ;
  assign _04__R1 = ( | _05__R ) && a[7:4] != _01_ ;
  assign _05__T = _04_ ? ( { 4{ _04__T  }} | a_T [7:4] ) : ( { 4{ _04__T  }} | _01__T );
  assign _05__S = _04_ ? a_S : _01__S ;
  assign a_R3 [7:4] = { 4{ _04_ }} & ( _05__R );
  logic [3:0] _01__R1 ;
  assign _01__R1 = { 4{ !_04_ }} & ( _05__R );
  assign _01_ = _17_ ? a[3:0] : 4'b1111;
  logic [0:0] _17__R0 ;
  assign _17__R0 = ( | _01__R ) && a[3:0] != 4'b1111 ;
  assign a_R3 [3:0] = { 4{ _17_ }} & ( _01__R );
  assign _01__T = _17_ ? ( { 4{ | _17__T  }} | a_T [3:0] ) : { 4{ | _17__T  }};
  assign _01__S = _17_ ? a_S : 0 ;
  assign _13_ = _19_ ? a[15:12] : _09_;
  logic [0:0] _19__R1 ;
  assign _19__R1 = ( | _13__R ) && a[15:12] != _09_ ;
  assign _13__T = _19_ ? ( { 4{ _19__T  }} | a_T [15:12] ) : ( { 4{ _19__T  }} | _09__T );
  assign _13__S = _19_ ? a_S : _09__S ;
  assign a_R3 [15:12] = { 4{ _19_ }} & ( _13__R );
  logic [3:0] _09__R1 ;
  assign _09__R1 = { 4{ !_19_ }} & ( _13__R );
  assign index = min_max ? _10_ : _12_;
  logic [0:0] min_max_R0 ;
  assign min_max_R0 = ( | index_R ) && _10_ != _12_ ;
  assign index_T = min_max ? ( { 2{ min_max_T  }} | _10__T ) : ( { 2{ min_max_T  }} | _12__T );
  assign index_S = min_max ? _10__S : _12__S ;
  logic [1:0] _10__R0 ;
  assign _10__R0 = { 2{ min_max }} & ( index_R );
  logic [1:0] _12__R0 ;
  assign _12__R0 = { 2{ !min_max }} & ( index_R );
  assign value = min_max ? _11_ : _13_;
  logic [0:0] min_max_R1 ;
  assign min_max_R1 = ( | value_R ) && _11_ != _13_ ;
  assign value_T = min_max ? ( { 4{ min_max_T  }} | _11__T ) : ( { 4{ min_max_T  }} | _13__T );
  assign value_S = min_max ? _11__S : _13__S ;
  logic [3:0] _11__R0 ;
  assign _11__R0 = { 4{ min_max }} & ( value_R );
  logic [3:0] _13__R0 ;
  assign _13__R0 = { 4{ !min_max }} & ( value_R );
  assign tc_NC = tc;
  logic [0:0] tc_R0 ;
  assign tc_NC_T = tc_T ;
  assign tc_R0 = tc_NC_R ;
  assign tc_NC_S = tc_S ;
  assign tc_R = ( tc_R0 );
  assign _13__R = ( _13__R0 );
  assign _11__R = ( _11__R0 );
  assign _12__R = ( _12__R0 );
  assign _10__R = ( _10__R0 );
  assign min_max_R = ( min_max_R0 ) | ( min_max_R1 );
  assign fangyuan1_R = ( fangyuan1_R0 );
  assign _18__R = ( _18__R0 ) | ( _18__R1 );
  assign _04__R = ( _04__R0 ) | ( _04__R1 );
  assign _08__R = ( _08__R0 );
  assign _19__R = ( _19__R0 ) | ( _19__R1 );
  assign _14__R = ( _14__R0 );
  assign _17__R = ( _17__R0 );
  assign fangyuan0_R = ( fangyuan0_R0 );
  assign _15__R = ( _15__R0 ) | ( _15__R1 );
  assign _02__R = ( _02__R0 ) | ( _02__R1 );
  assign _06__R = ( _06__R0 );
  assign _16__R = ( _16__R0 ) | ( _16__R1 );
  assign _01__R = ( _01__R0 ) | ( _01__R1 );
  assign _09__R = ( _09__R0 ) | ( _09__R1 );
  assign _05__R = ( _05__R0 ) | ( _05__R1 );
  assign _07__R = ( _07__R0 ) | ( _07__R1 );
  assign _03__R = ( _03__R0 ) | ( _03__R1 );
  assign _00__R = ( _00__R0 ) | ( _00__R1 );
  assign a_R = ( a_R0 ) | ( a_R1 ) | ( a_R2 ) | ( a_R3 );
  assign value_R = ( value_R0 );
  assign index_R = ( index_R0 );
 // ground taints for floating regs
 // ground taints for unused wires
  assign { tc_NC_R  } = 0;
 // ground taints for unused wire slices
endmodule
