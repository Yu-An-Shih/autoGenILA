  logic [22:0] _00_;
  logic [22:0] _00__T ;
  logic [22:0] _00__R ;
  logic [13:0] _00__S ;
  logic [22:0] _01_;
  logic [22:0] _01__T ;
  logic [22:0] _01__R ;
  logic [13:0] _01__S ;
  logic [22:0] _02_;
  logic [22:0] _02__T ;
  logic [22:0] _02__R ;
  logic [13:0] _02__S ;
  logic [22:0] _03_;
  logic [22:0] _03__T ;
  logic [22:0] _03__R ;
  logic [13:0] _03__S ;
  logic [22:0] _04_;
  logic [22:0] _04__T ;
  logic [22:0] _04__R ;
  logic [13:0] _04__S ;
  logic [22:0] _05_;
  logic [22:0] _05__T ;
  logic [22:0] _05__R ;
  logic [13:0] _05__S ;
  logic [23:0] _06_;
  logic [23:0] _06__T ;
  logic [23:0] _06__R ;
  logic [13:0] _06__S ;
  logic [23:0] _07_;
  logic [23:0] _07__T ;
  logic [23:0] _07__R ;
  logic [13:0] _07__S ;
  logic [23:0] _08_;
  logic [23:0] _08__T ;
  logic [23:0] _08__R ;
  logic [13:0] _08__S ;
  logic [23:0] _09_;
  logic [23:0] _09__T ;
  logic [23:0] _09__R ;
  logic [13:0] _09__S ;
  logic [23:0] _10_;
  logic [23:0] _10__T ;
  logic [23:0] _10__R ;
  logic [13:0] _10__S ;
  logic [23:0] _11_;
  logic [23:0] _11__T ;
  logic [23:0] _11__R ;
  logic [13:0] _11__S ;
  logic [23:0] _12_;
  logic [23:0] _12__T ;
  logic [23:0] _12__R ;
  logic [13:0] _12__S ;
  logic [23:0] _13_;
  logic [23:0] _13__T ;
  logic [23:0] _13__R ;
  logic [13:0] _13__S ;
  logic [23:0] _14_;
  logic [23:0] _14__T ;
  logic [23:0] _14__R ;
  logic [13:0] _14__S ;
  logic [23:0] _15_;
  logic [23:0] _15__T ;
  logic [23:0] _15__R ;
  logic [13:0] _15__S ;
  logic [23:0] _16_;
  logic [23:0] _16__T ;
  logic [23:0] _16__R ;
  logic [13:0] _16__S ;
  logic [23:0] _17_;
  logic [23:0] _17__T ;
  logic [23:0] _17__R ;
  logic [13:0] _17__S ;
  logic [23:0] _18_;
  logic [23:0] _18__T ;
  logic [23:0] _18__R ;
  logic [13:0] _18__S ;
  input [119:0] INPUT;
  input [119:0] INPUT_T ;
  output [119:0] INPUT_R ;
  input [13:0] INPUT_S ;
  output [23:0] OUT0;
  logic [23:0] OUT0 ;
  output [23:0] OUT0_T ;
  logic [23:0] OUT0_T ;
  logic [23:0] OUT0_R ;
  logic [13:0] OUT0_S ;
  input [23:0] OUT0_R0 ;
  output [13:0] OUT0_S ;
  output [23:0] OUT1;
  logic [23:0] OUT1 ;
  output [23:0] OUT1_T ;
  logic [23:0] OUT1_T ;
  logic [23:0] OUT1_R ;
  logic [13:0] OUT1_S ;
  input [23:0] OUT1_R0 ;
  output [13:0] OUT1_S ;
  logic [31:0] i;
  logic [31:0] i_T ;
  logic [31:0] i_R ;
  logic [13:0] i_S ;
  logic [23:0] \input_array[0] ;
  logic [23:0] \input_array[0]_T ;
  logic [23:0] \input_array[0]_R ;
  logic [13:0] \input_array[0]_S ;
  logic [23:0] \input_array[1] ;
  logic [23:0] \input_array[1]_T ;
  logic [23:0] \input_array[1]_R ;
  logic [13:0] \input_array[1]_S ;
  logic [23:0] \input_array[2] ;
  logic [23:0] \input_array[2]_T ;
  logic [23:0] \input_array[2]_R ;
  logic [13:0] \input_array[2]_S ;
  logic [23:0] \input_array[3] ;
  logic [23:0] \input_array[3]_T ;
  logic [23:0] \input_array[3]_R ;
  logic [13:0] \input_array[3]_S ;
  logic [23:0] input_slice;
  logic [23:0] input_slice_T ;
  logic [23:0] input_slice_R ;
  logic [13:0] input_slice_S ;
  logic [31:0] j;
  logic [31:0] j_T ;
  logic [31:0] j_R ;
  logic [13:0] j_S ;
  logic [31:0] num_in;
  logic [31:0] num_in_T ;
  logic [31:0] num_in_R ;
  logic [13:0] num_in_S ;
  logic [23:0] \temp_array[0] ;
  logic [23:0] \temp_array[0]_T ;
  logic [23:0] \temp_array[0]_R ;
  logic [13:0] \temp_array[0]_S ;
  logic [23:0] \temp_array[1] ;
  logic [23:0] \temp_array[1]_T ;
  logic [23:0] \temp_array[1]_R ;
  logic [13:0] \temp_array[1]_S ;
  logic [23:0] \temp_array[2] ;
  logic [23:0] \temp_array[2]_T ;
  logic [23:0] \temp_array[2]_R ;
  logic [13:0] \temp_array[2]_S ;
  logic [23:0] \temp_array[3] ;
  logic [23:0] \temp_array[3]_T ;
  logic [23:0] \temp_array[3]_R ;
  logic [13:0] \temp_array[3]_S ;
  assign _00_ = INPUT[22:0] & INPUT[46:24];
  assign _00__S = 0 ;
  logic [119:0] INPUT_R0 ;
  assign _00__T = ( INPUT_T [22:0] & INPUT[46:24] ) | ( INPUT_T [46:24] & INPUT[22:0] ) ;
  assign INPUT_R0 [22:0] = _00__R & { 23{ INPUT[46:24] != 0 }} ;
  assign INPUT_R0 [46:24] = _00__R & { 23{ INPUT[22:0] != 0 }} ;
  assign _01_ = INPUT[46:24] & INPUT[70:48];
  assign _01__S = 0 ;
  assign { INPUT_R0 [23], INPUT_R0 [119:47] } = 0;
  logic [119:0] INPUT_R1 ;
  assign _01__T = ( INPUT_T [46:24] & INPUT[70:48] ) | ( INPUT_T [70:48] & INPUT[46:24] ) ;
  assign INPUT_R1 [46:24] = _01__R & { 23{ INPUT[70:48] != 0 }} ;
  assign INPUT_R1 [70:48] = _01__R & { 23{ INPUT[46:24] != 0 }} ;
  assign _02_ = INPUT[22:0] & INPUT[70:48];
  assign _02__S = 0 ;
  assign { INPUT_R1 [23], INPUT_R1 [47], INPUT_R1 [119:71] } = 0;
  logic [119:0] INPUT_R2 ;
  assign _02__T = ( INPUT_T [22:0] & INPUT[70:48] ) | ( INPUT_T [70:48] & INPUT[22:0] ) ;
  assign INPUT_R1 [22:0] = _02__R & { 23{ INPUT[70:48] != 0 }} ;
  assign INPUT_R2 [70:48] = _02__R & { 23{ INPUT[22:0] != 0 }} ;
  logic [22:0] fangyuan0;
  logic [22:0] fangyuan0_T ;
  logic [22:0] fangyuan0_R ;
  assign fangyuan0 = { _09_[21:0], 1'b0 };
  assign fangyuan0_T = {  _09__T [21:0] , 1'h0  };
  logic [13:0] fangyuan0_S ;
  assign fangyuan0_S = 0 ;
  logic [23:0] _09__R0 ;
  assign _09__R0 [21:0] = fangyuan0_R [22:1] ;
  assign _03_ = _15_[22:0] & fangyuan0;
  assign _03__S = 0 ;
  logic [23:0] _15__R0 ;
  logic [22:0] fangyuan0_R0 ;
  assign _03__T = ( _15__T [22:0] & fangyuan0 ) | ( fangyuan0_T & _15_[22:0] ) ;
  assign _15__R0 [22:0] = _03__R & { 23{ fangyuan0 != 0 }} ;
  assign fangyuan0_R0 = _03__R & { 23{ _15_[22:0] != 0 }} ;
  logic [22:0] fangyuan1;
  logic [22:0] fangyuan1_T ;
  logic [22:0] fangyuan1_R ;
  assign fangyuan1 = { _09_[21:0], 1'b0 };
  assign fangyuan1_T = {  _09__T [21:0] , 1'h0  };
  logic [13:0] fangyuan1_S ;
  assign fangyuan1_S = 0 ;
  assign { _09__R0 [23:22] } = 0;
  logic [23:0] _09__R1 ;
  assign _09__R1 [21:0] = fangyuan1_R [22:1] ;
  assign _04_ = fangyuan1 & INPUT[94:72];
  assign _04__S = 0 ;
  logic [22:0] fangyuan1_R0 ;
  assign _04__T = ( fangyuan1_T & INPUT[94:72] ) | ( INPUT_T [94:72] & fangyuan1 ) ;
  assign fangyuan1_R0 = _04__R & { 23{ INPUT[94:72] != 0 }} ;
  assign INPUT_R2 [94:72] = _04__R & { 23{ fangyuan1 != 0 }} ;
  assign _05_ = _15_[22:0] & INPUT[94:72];
  assign _05__S = 0 ;
  assign { _15__R0 [23:23] } = 0;
  assign { INPUT_R2 [0], INPUT_R2 [1], INPUT_R2 [2], INPUT_R2 [3], INPUT_R2 [4], INPUT_R2 [5], INPUT_R2 [6], INPUT_R2 [7], INPUT_R2 [8], INPUT_R2 [9], INPUT_R2 [10], INPUT_R2 [11], INPUT_R2 [12], INPUT_R2 [13], INPUT_R2 [14], INPUT_R2 [15], INPUT_R2 [16], INPUT_R2 [17], INPUT_R2 [18], INPUT_R2 [19], INPUT_R2 [20], INPUT_R2 [21], INPUT_R2 [22], INPUT_R2 [23], INPUT_R2 [24], INPUT_R2 [25], INPUT_R2 [26], INPUT_R2 [27], INPUT_R2 [28], INPUT_R2 [29], INPUT_R2 [30], INPUT_R2 [31], INPUT_R2 [32], INPUT_R2 [33], INPUT_R2 [34], INPUT_R2 [35], INPUT_R2 [36], INPUT_R2 [37], INPUT_R2 [38], INPUT_R2 [39], INPUT_R2 [40], INPUT_R2 [41], INPUT_R2 [42], INPUT_R2 [43], INPUT_R2 [44], INPUT_R2 [45], INPUT_R2 [46], INPUT_R2 [47], INPUT_R2 [71], INPUT_R2 [119:95] } = 0;
  logic [23:0] _15__R1 ;
  logic [119:0] INPUT_R3 ;
  assign _05__T = ( _15__T [22:0] & INPUT[94:72] ) | ( INPUT_T [94:72] & _15_[22:0] ) ;
  assign _15__R1 [22:0] = _05__R & { 23{ INPUT[94:72] != 0 }} ;
  assign INPUT_R3 [94:72] = _05__R & { 23{ _15_[22:0] != 0 }} ;
  logic [22:0] fangyuan2;
  logic [22:0] fangyuan2_T ;
  logic [22:0] fangyuan2_R ;
  assign fangyuan2 = { _12_[21:0], 1'b0 };
  assign fangyuan2_T = {  _12__T [21:0] , 1'h0  };
  logic [13:0] fangyuan2_S ;
  assign fangyuan2_S = 0 ;
  logic [23:0] _12__R0 ;
  assign _12__R0 [21:0] = fangyuan2_R [22:1] ;
  assign _06_[22:0] = _17_[22:0] & fangyuan2;
  assign _06__S = 0 ;
  logic [23:0] _17__R0 ;
  logic [22:0] fangyuan2_R0 ;
  assign _06__T [22:0] = ( _17__T [22:0] & fangyuan2 ) | ( fangyuan2_T & _17_[22:0] ) ;
  assign _17__R0 [22:0] = _06__R [22:0] & { 23{ fangyuan2 != 0 }} ;
  assign fangyuan2_R0 = _06__R [22:0] & { 23{ _17_[22:0] != 0 }} ;
  logic [22:0] fangyuan3;
  logic [22:0] fangyuan3_T ;
  logic [22:0] fangyuan3_R ;
  assign fangyuan3 = { _12_[21:0], 1'b0 };
  assign fangyuan3_T = {  _12__T [21:0] , 1'h0  };
  logic [13:0] fangyuan3_S ;
  assign fangyuan3_S = 0 ;
  assign { _12__R0 [23:22] } = 0;
  logic [23:0] _12__R1 ;
  assign _12__R1 [21:0] = fangyuan3_R [22:1] ;
  assign _07_[22:0] = fangyuan3 & INPUT[118:96];
  assign _07__S = 0 ;
  logic [22:0] fangyuan3_R0 ;
  assign _07__T [22:0] = ( fangyuan3_T & INPUT[118:96] ) | ( INPUT_T [118:96] & fangyuan3 ) ;
  assign fangyuan3_R0 = _07__R [22:0] & { 23{ INPUT[118:96] != 0 }} ;
  assign INPUT_R3 [118:96] = _07__R [22:0] & { 23{ fangyuan3 != 0 }} ;
  assign _08_[22:0] = _17_[22:0] & INPUT[118:96];
  assign _08__S = 0 ;
  assign { _17__R0 [23:23] } = 0;
  assign { INPUT_R3 [0], INPUT_R3 [1], INPUT_R3 [2], INPUT_R3 [3], INPUT_R3 [4], INPUT_R3 [5], INPUT_R3 [6], INPUT_R3 [7], INPUT_R3 [8], INPUT_R3 [9], INPUT_R3 [10], INPUT_R3 [11], INPUT_R3 [12], INPUT_R3 [13], INPUT_R3 [14], INPUT_R3 [15], INPUT_R3 [16], INPUT_R3 [17], INPUT_R3 [18], INPUT_R3 [19], INPUT_R3 [20], INPUT_R3 [21], INPUT_R3 [22], INPUT_R3 [23], INPUT_R3 [24], INPUT_R3 [25], INPUT_R3 [26], INPUT_R3 [27], INPUT_R3 [28], INPUT_R3 [29], INPUT_R3 [30], INPUT_R3 [31], INPUT_R3 [32], INPUT_R3 [33], INPUT_R3 [34], INPUT_R3 [35], INPUT_R3 [36], INPUT_R3 [37], INPUT_R3 [38], INPUT_R3 [39], INPUT_R3 [40], INPUT_R3 [41], INPUT_R3 [42], INPUT_R3 [43], INPUT_R3 [44], INPUT_R3 [45], INPUT_R3 [46], INPUT_R3 [47], INPUT_R3 [48], INPUT_R3 [49], INPUT_R3 [50], INPUT_R3 [51], INPUT_R3 [52], INPUT_R3 [53], INPUT_R3 [54], INPUT_R3 [55], INPUT_R3 [56], INPUT_R3 [57], INPUT_R3 [58], INPUT_R3 [59], INPUT_R3 [60], INPUT_R3 [61], INPUT_R3 [62], INPUT_R3 [63], INPUT_R3 [64], INPUT_R3 [65], INPUT_R3 [66], INPUT_R3 [67], INPUT_R3 [68], INPUT_R3 [69], INPUT_R3 [70], INPUT_R3 [71], INPUT_R3 [95], INPUT_R3 [119:119] } = 0;
  logic [23:0] _17__R1 ;
  logic [119:0] INPUT_R4 ;
  assign _08__T [22:0] = ( _17__T [22:0] & INPUT[118:96] ) | ( INPUT_T [118:96] & _17_[22:0] ) ;
  assign _17__R1 [22:0] = _08__R [22:0] & { 23{ INPUT[118:96] != 0 }} ;
  assign INPUT_R4 [118:96] = _08__R [22:0] & { 23{ _17_[22:0] != 0 }} ;
  assign _10_[22:0] = _00_ | _01_;
  assign _10__S = 0 ;
  logic [22:0] _00__R0 ;
  logic [22:0] _01__R0 ;
  assign _10__T [22:0] = ( _00__T & ~_01_ ) | ( _01__T & ~_00_ ) ;
  assign _00__R0 = _10__R [22:0] & { 23{ _01_ != 23'b11111111111111111111111 }} ;
  assign _01__R0 = _10__R [22:0] & { 23{ _00_ != 23'b11111111111111111111111 }} ;
  assign _09_[22:0] = _10_[22:0] | _02_;
  assign _09__S = 0 ;
  logic [23:0] _10__R0 ;
  logic [22:0] _02__R0 ;
  assign _09__T [22:0] = ( _10__T [22:0] & ~_02_ ) | ( _02__T & ~_10_[22:0] ) ;
  assign _10__R0 [22:0] = _09__R [22:0] & { 23{ _02_ != 23'b11111111111111111111111 }} ;
  assign _02__R0 = _09__R [22:0] & { 23{ _10_[22:0] != 23'b11111111111111111111111 }} ;
  assign _11_[22:0] = _03_ | _04_;
  assign _11__S = 0 ;
  logic [22:0] _03__R0 ;
  logic [22:0] _04__R0 ;
  assign _11__T [22:0] = ( _03__T & ~_04_ ) | ( _04__T & ~_03_ ) ;
  assign _03__R0 = _11__R [22:0] & { 23{ _04_ != 23'b11111111111111111111111 }} ;
  assign _04__R0 = _11__R [22:0] & { 23{ _03_ != 23'b11111111111111111111111 }} ;
  assign _12_[22:0] = _11_[22:0] | _05_;
  assign _12__S = 0 ;
  logic [23:0] _11__R0 ;
  logic [22:0] _05__R0 ;
  assign _12__T [22:0] = ( _11__T [22:0] & ~_05_ ) | ( _05__T & ~_11_[22:0] ) ;
  assign _11__R0 [22:0] = _12__R [22:0] & { 23{ _05_ != 23'b11111111111111111111111 }} ;
  assign _05__R0 = _12__R [22:0] & { 23{ _11_[22:0] != 23'b11111111111111111111111 }} ;
  assign _13_[22:0] = _06_[22:0] | _07_[22:0];
  assign _13__S = 0 ;
  logic [23:0] _06__R0 ;
  logic [23:0] _07__R0 ;
  assign _13__T [22:0] = ( _06__T [22:0] & ~_07_[22:0] ) | ( _07__T [22:0] & ~_06_[22:0] ) ;
  assign _06__R0 [22:0] = _13__R [22:0] & { 23{ _07_[22:0] != 23'b11111111111111111111111 }} ;
  assign _07__R0 [22:0] = _13__R [22:0] & { 23{ _06_[22:0] != 23'b11111111111111111111111 }} ;
  assign OUT1[23:1] = _13_[22:0] | _08_[22:0];
  assign OUT1_S = 0 ;
  logic [23:0] _13__R0 ;
  logic [23:0] _08__R0 ;
  assign OUT1_T [23:1] = ( _13__T [22:0] & ~_08_[22:0] ) | ( _08__T [22:0] & ~_13_[22:0] ) ;
  assign _13__R0 [22:0] = OUT1_R [23:1] & { 23{ _08_[22:0] != 23'b11111111111111111111111 }} ;
  assign _08__R0 [22:0] = OUT1_R [23:1] & { 23{ _13_[22:0] != 23'b11111111111111111111111 }} ;
  assign _14_ = INPUT[23:0] ^ INPUT[47:24];
  assign _14__S = 0 ;
  assign _14__T = INPUT_T [23:0] | INPUT_T [47:24] ;
  assign INPUT_R4 [23:0] = _14__R ;
  assign INPUT_R4 [47:24] = _14__R ;
  assign _15_ = _14_ ^ INPUT[71:48];
  assign _15__S = 0 ;
  logic [23:0] _14__R0 ;
  assign _15__T = _14__T | INPUT_T [71:48] ;
  assign _14__R0 = _15__R ;
  assign INPUT_R4 [71:48] = _15__R ;
  logic [23:0] fangyuan4;
  logic [23:0] fangyuan4_T ;
  logic [23:0] fangyuan4_R ;
  assign fangyuan4 = { _09_[22:0], 1'b0 };
  assign fangyuan4_T = {  _09__T [22:0] , 1'h0  };
  logic [13:0] fangyuan4_S ;
  assign fangyuan4_S = 0 ;
  assign { _09__R1 [23:22] } = 0;
  logic [23:0] _09__R2 ;
  assign _09__R2 [22:0] = fangyuan4_R [23:1] ;
  assign _16_ = _15_ ^ fangyuan4;
  assign _16__S = 0 ;
  assign { _15__R1 [23:23] } = 0;
  logic [23:0] _15__R2 ;
  logic [23:0] fangyuan4_R0 ;
  assign _16__T = _15__T | fangyuan4_T ;
  assign _15__R2 = _16__R ;
  assign fangyuan4_R0 = _16__R ;
  assign _17_ = _16_ ^ INPUT[95:72];
  assign _17__S = 0 ;
  logic [23:0] _16__R0 ;
  assign _17__T = _16__T | INPUT_T [95:72] ;
  assign _16__R0 = _17__R ;
  assign INPUT_R4 [95:72] = _17__R ;
  logic [23:0] fangyuan5;
  logic [23:0] fangyuan5_T ;
  logic [23:0] fangyuan5_R ;
  assign fangyuan5 = { _12_[22:0], 1'b0 };
  assign fangyuan5_T = {  _12__T [22:0] , 1'h0  };
  logic [13:0] fangyuan5_S ;
  assign fangyuan5_S = 0 ;
  assign { _12__R1 [23:22] } = 0;
  logic [23:0] _12__R2 ;
  assign _12__R2 [22:0] = fangyuan5_R [23:1] ;
  assign _18_ = _17_ ^ fangyuan5;
  assign _18__S = 0 ;
  assign { _17__R1 [23:23] } = 0;
  logic [23:0] _17__R2 ;
  logic [23:0] fangyuan5_R0 ;
  assign _18__T = _17__T | fangyuan5_T ;
  assign _17__R2 = _18__R ;
  assign fangyuan5_R0 = _18__R ;
  assign OUT0 = _18_ ^ INPUT[119:96];
  assign OUT0_S = 0 ;
  assign { INPUT_R4 [119:119] } = 0;
  logic [23:0] _18__R0 ;
  logic [119:0] INPUT_R5 ;
  assign OUT0_T = _18__T | INPUT_T [119:96] ;
  assign _18__R0 = OUT0_R ;
  assign INPUT_R5 [119:96] = OUT0_R ;
  assign OUT1[0] = 1'b0;
  assign OUT1_T [0] = 0 ;
  assign OUT1_S = 14'b1 ;
  assign i = 32'd3;
  assign i_T = 0 ;
  assign i_S = 14'b1 ;
  assign \input_array[0] = OUT0;
  logic [23:0] OUT0_R1 ;
  assign \input_array[0]_T = OUT0_T ;
  assign OUT0_R1 = \input_array[0]_R ;
  assign \input_array[0]_S = OUT0_S ;
  assign \input_array[1] = { OUT1[23:1], 1'b0 };
  assign \input_array[1]_T = {  OUT1_T [23:1] , 1'h0  };
  logic [13:0] \input_array[1]_S ;
  assign \input_array[1]_S = 0 ;
  logic [23:0] OUT1_R1 ;
  assign OUT1_R1 [23:1] = \input_array[1]_R [23:1] ;
  assign \input_array[2] = INPUT[119:96];
  assign { INPUT_R5 [0], INPUT_R5 [1], INPUT_R5 [2], INPUT_R5 [3], INPUT_R5 [4], INPUT_R5 [5], INPUT_R5 [6], INPUT_R5 [7], INPUT_R5 [8], INPUT_R5 [9], INPUT_R5 [10], INPUT_R5 [11], INPUT_R5 [12], INPUT_R5 [13], INPUT_R5 [14], INPUT_R5 [15], INPUT_R5 [16], INPUT_R5 [17], INPUT_R5 [18], INPUT_R5 [19], INPUT_R5 [20], INPUT_R5 [21], INPUT_R5 [22], INPUT_R5 [23], INPUT_R5 [24], INPUT_R5 [25], INPUT_R5 [26], INPUT_R5 [27], INPUT_R5 [28], INPUT_R5 [29], INPUT_R5 [30], INPUT_R5 [31], INPUT_R5 [32], INPUT_R5 [33], INPUT_R5 [34], INPUT_R5 [35], INPUT_R5 [36], INPUT_R5 [37], INPUT_R5 [38], INPUT_R5 [39], INPUT_R5 [40], INPUT_R5 [41], INPUT_R5 [42], INPUT_R5 [43], INPUT_R5 [44], INPUT_R5 [45], INPUT_R5 [46], INPUT_R5 [47], INPUT_R5 [48], INPUT_R5 [49], INPUT_R5 [50], INPUT_R5 [51], INPUT_R5 [52], INPUT_R5 [53], INPUT_R5 [54], INPUT_R5 [55], INPUT_R5 [56], INPUT_R5 [57], INPUT_R5 [58], INPUT_R5 [59], INPUT_R5 [60], INPUT_R5 [61], INPUT_R5 [62], INPUT_R5 [63], INPUT_R5 [64], INPUT_R5 [65], INPUT_R5 [66], INPUT_R5 [67], INPUT_R5 [68], INPUT_R5 [69], INPUT_R5 [70], INPUT_R5 [71], INPUT_R5 [72], INPUT_R5 [73], INPUT_R5 [74], INPUT_R5 [75], INPUT_R5 [76], INPUT_R5 [77], INPUT_R5 [78], INPUT_R5 [79], INPUT_R5 [80], INPUT_R5 [81], INPUT_R5 [82], INPUT_R5 [83], INPUT_R5 [84], INPUT_R5 [85], INPUT_R5 [86], INPUT_R5 [87], INPUT_R5 [88], INPUT_R5 [89], INPUT_R5 [90], INPUT_R5 [91], INPUT_R5 [92], INPUT_R5 [93], INPUT_R5 [94], INPUT_R5 [95] } = 0;
  logic [119:0] INPUT_R6 ;
  assign \input_array[2]_T = INPUT_T [119:96] ;
  assign INPUT_R6 [119:96] = \input_array[2]_R ;
  assign \input_array[2]_S = INPUT_S ;
  assign \input_array[3] = INPUT[119:96];
  assign { INPUT_R6 [0], INPUT_R6 [1], INPUT_R6 [2], INPUT_R6 [3], INPUT_R6 [4], INPUT_R6 [5], INPUT_R6 [6], INPUT_R6 [7], INPUT_R6 [8], INPUT_R6 [9], INPUT_R6 [10], INPUT_R6 [11], INPUT_R6 [12], INPUT_R6 [13], INPUT_R6 [14], INPUT_R6 [15], INPUT_R6 [16], INPUT_R6 [17], INPUT_R6 [18], INPUT_R6 [19], INPUT_R6 [20], INPUT_R6 [21], INPUT_R6 [22], INPUT_R6 [23], INPUT_R6 [24], INPUT_R6 [25], INPUT_R6 [26], INPUT_R6 [27], INPUT_R6 [28], INPUT_R6 [29], INPUT_R6 [30], INPUT_R6 [31], INPUT_R6 [32], INPUT_R6 [33], INPUT_R6 [34], INPUT_R6 [35], INPUT_R6 [36], INPUT_R6 [37], INPUT_R6 [38], INPUT_R6 [39], INPUT_R6 [40], INPUT_R6 [41], INPUT_R6 [42], INPUT_R6 [43], INPUT_R6 [44], INPUT_R6 [45], INPUT_R6 [46], INPUT_R6 [47], INPUT_R6 [48], INPUT_R6 [49], INPUT_R6 [50], INPUT_R6 [51], INPUT_R6 [52], INPUT_R6 [53], INPUT_R6 [54], INPUT_R6 [55], INPUT_R6 [56], INPUT_R6 [57], INPUT_R6 [58], INPUT_R6 [59], INPUT_R6 [60], INPUT_R6 [61], INPUT_R6 [62], INPUT_R6 [63], INPUT_R6 [64], INPUT_R6 [65], INPUT_R6 [66], INPUT_R6 [67], INPUT_R6 [68], INPUT_R6 [69], INPUT_R6 [70], INPUT_R6 [71], INPUT_R6 [72], INPUT_R6 [73], INPUT_R6 [74], INPUT_R6 [75], INPUT_R6 [76], INPUT_R6 [77], INPUT_R6 [78], INPUT_R6 [79], INPUT_R6 [80], INPUT_R6 [81], INPUT_R6 [82], INPUT_R6 [83], INPUT_R6 [84], INPUT_R6 [85], INPUT_R6 [86], INPUT_R6 [87], INPUT_R6 [88], INPUT_R6 [89], INPUT_R6 [90], INPUT_R6 [91], INPUT_R6 [92], INPUT_R6 [93], INPUT_R6 [94], INPUT_R6 [95] } = 0;
  logic [119:0] INPUT_R7 ;
  assign \input_array[3]_T = INPUT_T [119:96] ;
  assign INPUT_R7 [119:96] = \input_array[3]_R ;
  assign \input_array[3]_S = INPUT_S ;
  assign input_slice = INPUT[119:96];
  assign { INPUT_R7 [0], INPUT_R7 [1], INPUT_R7 [2], INPUT_R7 [3], INPUT_R7 [4], INPUT_R7 [5], INPUT_R7 [6], INPUT_R7 [7], INPUT_R7 [8], INPUT_R7 [9], INPUT_R7 [10], INPUT_R7 [11], INPUT_R7 [12], INPUT_R7 [13], INPUT_R7 [14], INPUT_R7 [15], INPUT_R7 [16], INPUT_R7 [17], INPUT_R7 [18], INPUT_R7 [19], INPUT_R7 [20], INPUT_R7 [21], INPUT_R7 [22], INPUT_R7 [23], INPUT_R7 [24], INPUT_R7 [25], INPUT_R7 [26], INPUT_R7 [27], INPUT_R7 [28], INPUT_R7 [29], INPUT_R7 [30], INPUT_R7 [31], INPUT_R7 [32], INPUT_R7 [33], INPUT_R7 [34], INPUT_R7 [35], INPUT_R7 [36], INPUT_R7 [37], INPUT_R7 [38], INPUT_R7 [39], INPUT_R7 [40], INPUT_R7 [41], INPUT_R7 [42], INPUT_R7 [43], INPUT_R7 [44], INPUT_R7 [45], INPUT_R7 [46], INPUT_R7 [47], INPUT_R7 [48], INPUT_R7 [49], INPUT_R7 [50], INPUT_R7 [51], INPUT_R7 [52], INPUT_R7 [53], INPUT_R7 [54], INPUT_R7 [55], INPUT_R7 [56], INPUT_R7 [57], INPUT_R7 [58], INPUT_R7 [59], INPUT_R7 [60], INPUT_R7 [61], INPUT_R7 [62], INPUT_R7 [63], INPUT_R7 [64], INPUT_R7 [65], INPUT_R7 [66], INPUT_R7 [67], INPUT_R7 [68], INPUT_R7 [69], INPUT_R7 [70], INPUT_R7 [71], INPUT_R7 [72], INPUT_R7 [73], INPUT_R7 [74], INPUT_R7 [75], INPUT_R7 [76], INPUT_R7 [77], INPUT_R7 [78], INPUT_R7 [79], INPUT_R7 [80], INPUT_R7 [81], INPUT_R7 [82], INPUT_R7 [83], INPUT_R7 [84], INPUT_R7 [85], INPUT_R7 [86], INPUT_R7 [87], INPUT_R7 [88], INPUT_R7 [89], INPUT_R7 [90], INPUT_R7 [91], INPUT_R7 [92], INPUT_R7 [93], INPUT_R7 [94], INPUT_R7 [95] } = 0;
  logic [119:0] INPUT_R8 ;
  assign input_slice_T = INPUT_T [119:96] ;
  assign INPUT_R8 [119:96] = input_slice_R ;
  assign input_slice_S = INPUT_S ;
  assign j = 32'd24;
  assign j_T = 0 ;
  assign j_S = 14'b1 ;
  assign num_in = 32'd2;
  assign num_in_T = 0 ;
  assign num_in_S = 14'b1 ;
  assign \temp_array[0] = OUT0;
  logic [23:0] OUT0_R2 ;
  assign \temp_array[0]_T = OUT0_T ;
  assign OUT0_R2 = \temp_array[0]_R ;
  assign \temp_array[0]_S = OUT0_S ;
  assign \temp_array[1] = { OUT1[23:1], 1'b0 };
  assign \temp_array[1]_T = {  OUT1_T [23:1] , 1'h0  };
  logic [13:0] \temp_array[1]_S ;
  assign \temp_array[1]_S = 0 ;
  assign { OUT1_R1 [0] } = 0;
  logic [23:0] OUT1_R2 ;
  assign OUT1_R2 [23:1] = \temp_array[1]_R [23:1] ;
  assign \temp_array[2] = INPUT[119:96];
  assign { INPUT_R8 [0], INPUT_R8 [1], INPUT_R8 [2], INPUT_R8 [3], INPUT_R8 [4], INPUT_R8 [5], INPUT_R8 [6], INPUT_R8 [7], INPUT_R8 [8], INPUT_R8 [9], INPUT_R8 [10], INPUT_R8 [11], INPUT_R8 [12], INPUT_R8 [13], INPUT_R8 [14], INPUT_R8 [15], INPUT_R8 [16], INPUT_R8 [17], INPUT_R8 [18], INPUT_R8 [19], INPUT_R8 [20], INPUT_R8 [21], INPUT_R8 [22], INPUT_R8 [23], INPUT_R8 [24], INPUT_R8 [25], INPUT_R8 [26], INPUT_R8 [27], INPUT_R8 [28], INPUT_R8 [29], INPUT_R8 [30], INPUT_R8 [31], INPUT_R8 [32], INPUT_R8 [33], INPUT_R8 [34], INPUT_R8 [35], INPUT_R8 [36], INPUT_R8 [37], INPUT_R8 [38], INPUT_R8 [39], INPUT_R8 [40], INPUT_R8 [41], INPUT_R8 [42], INPUT_R8 [43], INPUT_R8 [44], INPUT_R8 [45], INPUT_R8 [46], INPUT_R8 [47], INPUT_R8 [48], INPUT_R8 [49], INPUT_R8 [50], INPUT_R8 [51], INPUT_R8 [52], INPUT_R8 [53], INPUT_R8 [54], INPUT_R8 [55], INPUT_R8 [56], INPUT_R8 [57], INPUT_R8 [58], INPUT_R8 [59], INPUT_R8 [60], INPUT_R8 [61], INPUT_R8 [62], INPUT_R8 [63], INPUT_R8 [64], INPUT_R8 [65], INPUT_R8 [66], INPUT_R8 [67], INPUT_R8 [68], INPUT_R8 [69], INPUT_R8 [70], INPUT_R8 [71], INPUT_R8 [72], INPUT_R8 [73], INPUT_R8 [74], INPUT_R8 [75], INPUT_R8 [76], INPUT_R8 [77], INPUT_R8 [78], INPUT_R8 [79], INPUT_R8 [80], INPUT_R8 [81], INPUT_R8 [82], INPUT_R8 [83], INPUT_R8 [84], INPUT_R8 [85], INPUT_R8 [86], INPUT_R8 [87], INPUT_R8 [88], INPUT_R8 [89], INPUT_R8 [90], INPUT_R8 [91], INPUT_R8 [92], INPUT_R8 [93], INPUT_R8 [94], INPUT_R8 [95] } = 0;
  logic [119:0] INPUT_R9 ;
  assign \temp_array[2]_T = INPUT_T [119:96] ;
  assign INPUT_R9 [119:96] = \temp_array[2]_R ;
  assign \temp_array[2]_S = INPUT_S ;
  assign \temp_array[3] = INPUT[119:96];
  assign { INPUT_R9 [0], INPUT_R9 [1], INPUT_R9 [2], INPUT_R9 [3], INPUT_R9 [4], INPUT_R9 [5], INPUT_R9 [6], INPUT_R9 [7], INPUT_R9 [8], INPUT_R9 [9], INPUT_R9 [10], INPUT_R9 [11], INPUT_R9 [12], INPUT_R9 [13], INPUT_R9 [14], INPUT_R9 [15], INPUT_R9 [16], INPUT_R9 [17], INPUT_R9 [18], INPUT_R9 [19], INPUT_R9 [20], INPUT_R9 [21], INPUT_R9 [22], INPUT_R9 [23], INPUT_R9 [24], INPUT_R9 [25], INPUT_R9 [26], INPUT_R9 [27], INPUT_R9 [28], INPUT_R9 [29], INPUT_R9 [30], INPUT_R9 [31], INPUT_R9 [32], INPUT_R9 [33], INPUT_R9 [34], INPUT_R9 [35], INPUT_R9 [36], INPUT_R9 [37], INPUT_R9 [38], INPUT_R9 [39], INPUT_R9 [40], INPUT_R9 [41], INPUT_R9 [42], INPUT_R9 [43], INPUT_R9 [44], INPUT_R9 [45], INPUT_R9 [46], INPUT_R9 [47], INPUT_R9 [48], INPUT_R9 [49], INPUT_R9 [50], INPUT_R9 [51], INPUT_R9 [52], INPUT_R9 [53], INPUT_R9 [54], INPUT_R9 [55], INPUT_R9 [56], INPUT_R9 [57], INPUT_R9 [58], INPUT_R9 [59], INPUT_R9 [60], INPUT_R9 [61], INPUT_R9 [62], INPUT_R9 [63], INPUT_R9 [64], INPUT_R9 [65], INPUT_R9 [66], INPUT_R9 [67], INPUT_R9 [68], INPUT_R9 [69], INPUT_R9 [70], INPUT_R9 [71], INPUT_R9 [72], INPUT_R9 [73], INPUT_R9 [74], INPUT_R9 [75], INPUT_R9 [76], INPUT_R9 [77], INPUT_R9 [78], INPUT_R9 [79], INPUT_R9 [80], INPUT_R9 [81], INPUT_R9 [82], INPUT_R9 [83], INPUT_R9 [84], INPUT_R9 [85], INPUT_R9 [86], INPUT_R9 [87], INPUT_R9 [88], INPUT_R9 [89], INPUT_R9 [90], INPUT_R9 [91], INPUT_R9 [92], INPUT_R9 [93], INPUT_R9 [94], INPUT_R9 [95] } = 0;
  logic [119:0] INPUT_R10 ;
  assign \temp_array[3]_T = INPUT_T [119:96] ;
  assign INPUT_R10 [119:96] = \temp_array[3]_R ;
  assign \temp_array[3]_S = INPUT_S ;
  assign fangyuan5_R = ( fangyuan5_R0 );
  assign _14__R = ( _14__R0 );
  assign _08__R = ( _08__R0 );
  assign _13__R = ( _13__R0 );
  assign _07__R = ( _07__R0 );
  assign _06__R = ( _06__R0 );
  assign _05__R = ( _05__R0 );
  assign fangyuan4_R = ( fangyuan4_R0 );
  assign _11__R = ( _11__R0 );
  assign _04__R = ( _04__R0 );
  assign _03__R = ( _03__R0 );
  assign _02__R = ( _02__R0 );
  assign _10__R = ( _10__R0 );
  assign fangyuan3_R = ( fangyuan3_R0 );
  assign _18__R = ( _18__R0 );
  assign _16__R = ( _16__R0 );
  assign fangyuan2_R = ( fangyuan2_R0 );
  assign _00__R = ( _00__R0 );
  assign _17__R = ( _17__R0 ) | ( _17__R1 ) | ( _17__R2 );
  assign _12__R = ( _12__R0 ) | ( _12__R1 ) | ( _12__R2 );
  assign fangyuan1_R = ( fangyuan1_R0 );
  assign fangyuan0_R = ( fangyuan0_R0 );
  assign _15__R = ( _15__R0 ) | ( _15__R1 ) | ( _15__R2 );
  assign _09__R = ( _09__R0 ) | ( _09__R1 ) | ( _09__R2 );
  assign INPUT_R = ( INPUT_R0 ) | ( INPUT_R1 ) | ( INPUT_R2 ) | ( INPUT_R3 ) | ( INPUT_R4 ) | ( INPUT_R5 ) | ( INPUT_R6 ) | ( INPUT_R7 ) | ( INPUT_R8 ) | ( INPUT_R9 ) | ( INPUT_R10 );
  assign OUT1_R = ( OUT1_R0 ) | ( OUT1_R1 ) | ( OUT1_R2 );
  assign _01__R = ( _01__R0 );
  assign OUT0_R = ( OUT0_R0 ) | ( OUT0_R1 ) | ( OUT0_R2 );
 // ground taints for floating regs
 // ground taints for unused wires
  assign { \input_array[0]_R , \input_array[1]_R , \input_array[2]_R , \input_array[3]_R , \temp_array[0]_R , \temp_array[1]_R , \temp_array[2]_R , \temp_array[3]_R , i_R , input_slice_R , j_R , num_in_R  } = 0;
 // ground taints for unused wire slices
  assign { _08__R0 [23:23] } = 0;
  assign { _13__R0 [23:23] } = 0;
  assign { _07__R0 [23:23] } = 0;
  assign { _06__R0 [23:23] } = 0;
  assign { _11__R0 [23:23] } = 0;
  assign { _10__R0 [23:23] } = 0;
  assign { _12__R2 [23:23] } = 0;
  assign { _09__R2 [23:23] } = 0;
  assign { INPUT_R10 [0], INPUT_R10 [1], INPUT_R10 [2], INPUT_R10 [3], INPUT_R10 [4], INPUT_R10 [5], INPUT_R10 [6], INPUT_R10 [7], INPUT_R10 [8], INPUT_R10 [9], INPUT_R10 [10], INPUT_R10 [11], INPUT_R10 [12], INPUT_R10 [13], INPUT_R10 [14], INPUT_R10 [15], INPUT_R10 [16], INPUT_R10 [17], INPUT_R10 [18], INPUT_R10 [19], INPUT_R10 [20], INPUT_R10 [21], INPUT_R10 [22], INPUT_R10 [23], INPUT_R10 [24], INPUT_R10 [25], INPUT_R10 [26], INPUT_R10 [27], INPUT_R10 [28], INPUT_R10 [29], INPUT_R10 [30], INPUT_R10 [31], INPUT_R10 [32], INPUT_R10 [33], INPUT_R10 [34], INPUT_R10 [35], INPUT_R10 [36], INPUT_R10 [37], INPUT_R10 [38], INPUT_R10 [39], INPUT_R10 [40], INPUT_R10 [41], INPUT_R10 [42], INPUT_R10 [43], INPUT_R10 [44], INPUT_R10 [45], INPUT_R10 [46], INPUT_R10 [47], INPUT_R10 [48], INPUT_R10 [49], INPUT_R10 [50], INPUT_R10 [51], INPUT_R10 [52], INPUT_R10 [53], INPUT_R10 [54], INPUT_R10 [55], INPUT_R10 [56], INPUT_R10 [57], INPUT_R10 [58], INPUT_R10 [59], INPUT_R10 [60], INPUT_R10 [61], INPUT_R10 [62], INPUT_R10 [63], INPUT_R10 [64], INPUT_R10 [65], INPUT_R10 [66], INPUT_R10 [67], INPUT_R10 [68], INPUT_R10 [69], INPUT_R10 [70], INPUT_R10 [71], INPUT_R10 [72], INPUT_R10 [73], INPUT_R10 [74], INPUT_R10 [75], INPUT_R10 [76], INPUT_R10 [77], INPUT_R10 [78], INPUT_R10 [79], INPUT_R10 [80], INPUT_R10 [81], INPUT_R10 [82], INPUT_R10 [83], INPUT_R10 [84], INPUT_R10 [85], INPUT_R10 [86], INPUT_R10 [87], INPUT_R10 [88], INPUT_R10 [89], INPUT_R10 [90], INPUT_R10 [91], INPUT_R10 [92], INPUT_R10 [93], INPUT_R10 [94], INPUT_R10 [95] } = 0;
  assign { OUT1_R2 [0] } = 0;
endmodule
