module HLS_fp32_sub_core ( chn_a_rsc_vz , chn_a_rsc_z , chn_a_rsci_oswt , chn_b_rsc_vz , chn_b_rsc_z , chn_b_rsci_oswt , chn_o_rsc_vz , chn_o_rsci_oswt , nvdla_core_clk , nvdla_core_rstn , INSTR_IN_ZY , chn_a_rsc_lz_R0 , chn_a_rsc_lz_C0 , chn_a_rsc_lz_X0 , chn_a_rsc_vz_T , chn_a_rsc_vz_S , chn_a_rsc_z_T , chn_a_rsc_z_S , chn_a_rsci_oswt_T , chn_a_rsci_oswt_S , chn_a_rsci_oswt_unreg_pff_R0 , chn_a_rsci_oswt_unreg_pff_C0 , chn_a_rsci_oswt_unreg_pff_X0 , chn_b_rsc_lz_R0 , chn_b_rsc_lz_C0 , chn_b_rsc_lz_X0 , chn_b_rsc_vz_T , chn_b_rsc_vz_S , chn_b_rsc_z_T , chn_b_rsc_z_S , chn_b_rsci_oswt_T , chn_b_rsci_oswt_S , chn_o_rsc_lz_R0 , chn_o_rsc_lz_C0 , chn_o_rsc_lz_X0 , chn_o_rsc_vz_T , chn_o_rsc_vz_S , chn_o_rsc_z_R0 , chn_o_rsc_z_C0 , chn_o_rsc_z_X0 , chn_o_rsci_oswt_T , chn_o_rsci_oswt_S , chn_o_rsci_oswt_unreg_R0 , chn_o_rsci_oswt_unreg_C0 , chn_o_rsci_oswt_unreg_X0 , nvdla_core_clk_T , nvdla_core_clk_S , nvdla_core_rstn_T , nvdla_core_rstn_S , chn_a_rsc_lz , chn_a_rsci_oswt_unreg_pff , chn_b_rsc_lz , chn_o_rsc_lz , chn_o_rsc_z , chn_o_rsci_oswt_unreg , chn_a_rsc_lz_T , chn_a_rsc_lz_S , chn_a_rsc_vz_R , chn_a_rsc_vz_X , chn_a_rsc_vz_C , chn_a_rsc_z_R , chn_a_rsc_z_X , chn_a_rsc_z_C , chn_a_rsci_oswt_R , chn_a_rsci_oswt_X , chn_a_rsci_oswt_C , chn_a_rsci_oswt_unreg_pff_T , chn_a_rsci_oswt_unreg_pff_S , chn_b_rsc_lz_T , chn_b_rsc_lz_S , chn_b_rsc_vz_R , chn_b_rsc_vz_X , chn_b_rsc_vz_C , chn_b_rsc_z_R , chn_b_rsc_z_X , chn_b_rsc_z_C , chn_b_rsci_oswt_R , chn_b_rsci_oswt_X , chn_b_rsci_oswt_C , chn_o_rsc_lz_T , chn_o_rsc_lz_S , chn_o_rsc_vz_R , chn_o_rsc_vz_X , chn_o_rsc_vz_C , chn_o_rsc_z_T , chn_o_rsc_z_S , chn_o_rsci_oswt_R , chn_o_rsci_oswt_X , chn_o_rsci_oswt_C , chn_o_rsci_oswt_unreg_T , chn_o_rsci_oswt_unreg_S , nvdla_core_clk_R , nvdla_core_clk_X , nvdla_core_clk_C , nvdla_core_rstn_R , nvdla_core_rstn_X , nvdla_core_rstn_C );
  logic rst_zy;
  integer i;
  input INSTR_IN_ZY;
  logic [2:0] _000_;
  logic [2:0] _000__T ;
  logic [2:0] _000__R ;
  logic [2:0] _000__C ;
  logic [2:0] _000__X ;
  logic [13:0] _000__S ;
  logic [22:0] _001_;
  logic [22:0] _001__T ;
  logic [22:0] _001__R ;
  logic [22:0] _001__C ;
  logic [22:0] _001__X ;
  logic [13:0] _001__S ;
  logic [7:0] _002_;
  logic [7:0] _002__T ;
  logic [7:0] _002__R ;
  logic [7:0] _002__C ;
  logic [7:0] _002__X ;
  logic [13:0] _002__S ;
  logic _003_;
  logic _003__T ;
  logic _003__R ;
  logic _003__C ;
  logic _003__X ;
  logic [13:0] _003__S ;
  logic _004_;
  logic _004__T ;
  logic _004__R ;
  logic _004__C ;
  logic _004__X ;
  logic [13:0] _004__S ;
  logic [48:0] _005_;
  logic [48:0] _005__T ;
  logic [48:0] _005__R ;
  logic [48:0] _005__C ;
  logic [48:0] _005__X ;
  logic [13:0] _005__S ;
  logic [31:0] _006_;
  logic [31:0] _006__T ;
  logic [31:0] _006__R ;
  logic [31:0] _006__C ;
  logic [31:0] _006__X ;
  logic [13:0] _006__S ;
  logic [48:0] _007_;
  logic [48:0] _007__T ;
  logic [48:0] _007__R ;
  logic [48:0] _007__C ;
  logic [48:0] _007__X ;
  logic [13:0] _007__S ;
  logic [49:0] _008_;
  logic [49:0] _008__T ;
  logic [49:0] _008__R ;
  logic [49:0] _008__C ;
  logic [49:0] _008__X ;
  logic [13:0] _008__S ;
  logic _009_;
  logic _009__T ;
  logic _009__R ;
  logic _009__C ;
  logic _009__X ;
  logic [13:0] _009__S ;
  logic _010_;
  logic _010__T ;
  logic _010__R ;
  logic _010__C ;
  logic _010__X ;
  logic [13:0] _010__S ;
  logic _011_;
  logic _011__T ;
  logic _011__R ;
  logic _011__C ;
  logic _011__X ;
  logic [13:0] _011__S ;
  logic _012_;
  logic _012__T ;
  logic _012__R ;
  logic _012__C ;
  logic _012__X ;
  logic [13:0] _012__S ;
  logic _013_;
  logic _013__T ;
  logic _013__R ;
  logic _013__C ;
  logic _013__X ;
  logic [13:0] _013__S ;
  logic _014_;
  logic _014__T ;
  logic _014__R ;
  logic _014__C ;
  logic _014__X ;
  logic [13:0] _014__S ;
  logic [7:0] _015_;
  logic [7:0] _015__T ;
  logic [7:0] _015__R ;
  logic [7:0] _015__C ;
  logic [7:0] _015__X ;
  logic [13:0] _015__S ;
  logic [7:0] _016_;
  logic [7:0] _016__T ;
  logic [7:0] _016__R ;
  logic [7:0] _016__C ;
  logic [7:0] _016__X ;
  logic [13:0] _016__S ;
  logic [7:0] _017_;
  logic [7:0] _017__T ;
  logic [7:0] _017__R ;
  logic [7:0] _017__C ;
  logic [7:0] _017__X ;
  logic [13:0] _017__S ;
  logic _018_;
  logic _018__T ;
  logic _018__R ;
  logic _018__C ;
  logic _018__X ;
  logic [13:0] _018__S ;
  logic [22:0] _019_;
  logic [22:0] _019__T ;
  logic [22:0] _019__R ;
  logic [22:0] _019__C ;
  logic [22:0] _019__X ;
  logic [13:0] _019__S ;
  logic [22:0] _020_;
  logic [22:0] _020__T ;
  logic [22:0] _020__R ;
  logic [22:0] _020__C ;
  logic [22:0] _020__X ;
  logic [13:0] _020__S ;
  logic [7:0] _021_;
  logic [7:0] _021__T ;
  logic [7:0] _021__R ;
  logic [7:0] _021__C ;
  logic [7:0] _021__X ;
  logic [13:0] _021__S ;
  logic [7:0] _022_;
  logic [7:0] _022__T ;
  logic [7:0] _022__R ;
  logic [7:0] _022__C ;
  logic [7:0] _022__X ;
  logic [13:0] _022__S ;
  logic _023_;
  logic _023__T ;
  logic _023__R ;
  logic _023__C ;
  logic _023__X ;
  logic [13:0] _023__S ;
  logic _024_;
  logic _024__T ;
  logic _024__R ;
  logic _024__C ;
  logic _024__X ;
  logic [13:0] _024__S ;
  logic _025_;
  logic _025__T ;
  logic _025__R ;
  logic _025__C ;
  logic _025__X ;
  logic [13:0] _025__S ;
  logic _026_;
  logic _026__T ;
  logic _026__R ;
  logic _026__C ;
  logic _026__X ;
  logic [13:0] _026__S ;
  logic _027_;
  logic _027__T ;
  logic _027__R ;
  logic _027__C ;
  logic _027__X ;
  logic [13:0] _027__S ;
  logic _028_;
  logic _028__T ;
  logic _028__R ;
  logic _028__C ;
  logic _028__X ;
  logic [13:0] _028__S ;
  logic _029_;
  logic _029__T ;
  logic _029__R ;
  logic _029__C ;
  logic _029__X ;
  logic [13:0] _029__S ;
  logic [31:0] _030_;
  logic [31:0] _030__T ;
  logic [31:0] _030__R ;
  logic [31:0] _030__C ;
  logic [31:0] _030__X ;
  logic [13:0] _030__S ;
  logic [22:0] _031_;
  logic [22:0] _031__T ;
  logic [22:0] _031__R ;
  logic [22:0] _031__C ;
  logic [22:0] _031__X ;
  logic [13:0] _031__S ;
  logic [7:0] _032_;
  logic [7:0] _032__T ;
  logic [7:0] _032__R ;
  logic [7:0] _032__C ;
  logic [7:0] _032__X ;
  logic [13:0] _032__S ;
  logic _033_;
  logic _033__T ;
  logic _033__R ;
  logic _033__C ;
  logic _033__X ;
  logic [13:0] _033__S ;
  logic _034_;
  logic _034__T ;
  logic _034__R ;
  logic _034__C ;
  logic _034__X ;
  logic [13:0] _034__S ;
  logic _035_;
  logic _035__T ;
  logic _035__R ;
  logic _035__C ;
  logic _035__X ;
  logic [13:0] _035__S ;
  logic _036_;
  logic _036__T ;
  logic _036__R ;
  logic _036__C ;
  logic _036__X ;
  logic [13:0] _036__S ;
  logic _037_;
  logic _037__T ;
  logic _037__R ;
  logic _037__C ;
  logic _037__X ;
  logic [13:0] _037__S ;
  logic _038_;
  logic _038__T ;
  logic _038__R ;
  logic _038__C ;
  logic _038__X ;
  logic [13:0] _038__S ;
  logic _039_;
  logic _039__T ;
  logic _039__R ;
  logic _039__C ;
  logic _039__X ;
  logic [13:0] _039__S ;
  logic _040_;
  logic _040__T ;
  logic _040__R ;
  logic _040__C ;
  logic _040__X ;
  logic [13:0] _040__S ;
  logic _041_;
  logic _041__T ;
  logic _041__R ;
  logic _041__C ;
  logic _041__X ;
  logic [13:0] _041__S ;
  logic _042_;
  logic _042__T ;
  logic _042__R ;
  logic _042__C ;
  logic _042__X ;
  logic [13:0] _042__S ;
  logic [22:0] _043_;
  logic [22:0] _043__T ;
  logic [22:0] _043__R ;
  logic [22:0] _043__C ;
  logic [22:0] _043__X ;
  logic [13:0] _043__S ;
  logic [22:0] _044_;
  logic [22:0] _044__T ;
  logic [22:0] _044__R ;
  logic [22:0] _044__C ;
  logic [22:0] _044__X ;
  logic [13:0] _044__S ;
  logic [7:0] _045_;
  logic [7:0] _045__T ;
  logic [7:0] _045__R ;
  logic [7:0] _045__C ;
  logic [7:0] _045__X ;
  logic [13:0] _045__S ;
  logic [7:0] _046_;
  logic [7:0] _046__T ;
  logic [7:0] _046__R ;
  logic [7:0] _046__C ;
  logic [7:0] _046__X ;
  logic [13:0] _046__S ;
  logic [8:0] _047_;
  logic [8:0] _047__T ;
  logic [8:0] _047__R ;
  logic [8:0] _047__C ;
  logic [8:0] _047__X ;
  logic [13:0] _047__S ;
  logic [49:0] _048_;
  logic [49:0] _048__T ;
  logic [49:0] _048__R ;
  logic [49:0] _048__C ;
  logic [49:0] _048__X ;
  logic [13:0] _048__S ;
  logic [9:0] _049_;
  logic [9:0] _049__T ;
  logic [9:0] _049__R ;
  logic [9:0] _049__C ;
  logic [9:0] _049__X ;
  logic [13:0] _049__S ;
  logic [10:0] _050_;
  logic [10:0] _050__T ;
  logic [10:0] _050__R ;
  logic [10:0] _050__C ;
  logic [10:0] _050__X ;
  logic [13:0] _050__S ;
  logic [23:0] _051_;
  logic [23:0] _051__T ;
  logic [23:0] _051__R ;
  logic [23:0] _051__C ;
  logic [23:0] _051__X ;
  logic [13:0] _051__S ;
  logic _052_;
  logic _052__T ;
  logic _052__R ;
  logic _052__C ;
  logic _052__X ;
  logic [13:0] _052__S ;
  logic _053_;
  logic _053__T ;
  logic _053__R ;
  logic _053__C ;
  logic _053__X ;
  logic [13:0] _053__S ;
  logic _054_;
  logic _054__T ;
  logic _054__R ;
  logic _054__C ;
  logic _054__X ;
  logic [13:0] _054__S ;
  logic _055_;
  logic _055__T ;
  logic _055__R ;
  logic _055__C ;
  logic _055__X ;
  logic [13:0] _055__S ;
  logic _056_;
  logic _056__T ;
  logic _056__R ;
  logic _056__C ;
  logic _056__X ;
  logic [13:0] _056__S ;
  logic _057_;
  logic _057__T ;
  logic _057__R ;
  logic _057__C ;
  logic _057__X ;
  logic [13:0] _057__S ;
  logic _058_;
  logic _058__T ;
  logic _058__R ;
  logic _058__C ;
  logic _058__X ;
  logic [13:0] _058__S ;
  logic _059_;
  logic _059__T ;
  logic _059__R ;
  logic _059__C ;
  logic _059__X ;
  logic [13:0] _059__S ;
  logic _060_;
  logic _060__T ;
  logic _060__R ;
  logic _060__C ;
  logic _060__X ;
  logic [13:0] _060__S ;
  logic _061_;
  logic _061__T ;
  logic _061__R ;
  logic _061__C ;
  logic _061__X ;
  logic [13:0] _061__S ;
  logic _062_;
  logic _062__T ;
  logic _062__R ;
  logic _062__C ;
  logic _062__X ;
  logic [13:0] _062__S ;
  logic _063_;
  logic _063__T ;
  logic _063__R ;
  logic _063__C ;
  logic _063__X ;
  logic [13:0] _063__S ;
  logic _064_;
  logic _064__T ;
  logic _064__R ;
  logic _064__C ;
  logic _064__X ;
  logic [13:0] _064__S ;
  logic _065_;
  logic _065__T ;
  logic _065__R ;
  logic _065__C ;
  logic _065__X ;
  logic [13:0] _065__S ;
  logic _066_;
  logic _066__T ;
  logic _066__R ;
  logic _066__C ;
  logic _066__X ;
  logic [13:0] _066__S ;
  logic _067_;
  logic _067__T ;
  logic _067__R ;
  logic _067__C ;
  logic _067__X ;
  logic [13:0] _067__S ;
  logic _068_;
  logic _068__T ;
  logic _068__R ;
  logic _068__C ;
  logic _068__X ;
  logic [13:0] _068__S ;
  logic _069_;
  logic _069__T ;
  logic _069__R ;
  logic _069__C ;
  logic _069__X ;
  logic [13:0] _069__S ;
  logic _070_;
  logic _070__T ;
  logic _070__R ;
  logic _070__C ;
  logic _070__X ;
  logic [13:0] _070__S ;
  logic _071_;
  logic _071__T ;
  logic _071__R ;
  logic _071__C ;
  logic _071__X ;
  logic [13:0] _071__S ;
  logic _072_;
  logic _072__T ;
  logic _072__R ;
  logic _072__C ;
  logic _072__X ;
  logic [13:0] _072__S ;
  logic _073_;
  logic _073__T ;
  logic _073__R ;
  logic _073__C ;
  logic _073__X ;
  logic [13:0] _073__S ;
  logic _074_;
  logic _074__T ;
  logic _074__R ;
  logic _074__C ;
  logic _074__X ;
  logic [13:0] _074__S ;
  logic _075_;
  logic _075__T ;
  logic _075__R ;
  logic _075__C ;
  logic _075__X ;
  logic [13:0] _075__S ;
  logic _076_;
  logic _076__T ;
  logic _076__R ;
  logic _076__C ;
  logic _076__X ;
  logic [13:0] _076__S ;
  logic _077_;
  logic _077__T ;
  logic _077__R ;
  logic _077__C ;
  logic _077__X ;
  logic [13:0] _077__S ;
  logic _078_;
  logic _078__T ;
  logic _078__R ;
  logic _078__C ;
  logic _078__X ;
  logic [13:0] _078__S ;
  logic _079_;
  logic _079__T ;
  logic _079__R ;
  logic _079__C ;
  logic _079__X ;
  logic [13:0] _079__S ;
  logic _080_;
  logic _080__T ;
  logic _080__R ;
  logic _080__C ;
  logic _080__X ;
  logic [13:0] _080__S ;
  logic _081_;
  logic _081__T ;
  logic _081__R ;
  logic _081__C ;
  logic _081__X ;
  logic [13:0] _081__S ;
  logic [7:0] _082_;
  logic [7:0] _082__T ;
  logic [7:0] _082__R ;
  logic [7:0] _082__C ;
  logic [7:0] _082__X ;
  logic [13:0] _082__S ;
  logic [7:0] _083_;
  logic [7:0] _083__T ;
  logic [7:0] _083__R ;
  logic [7:0] _083__C ;
  logic [7:0] _083__X ;
  logic [13:0] _083__S ;
  logic [7:0] _084_;
  logic [7:0] _084__T ;
  logic [7:0] _084__R ;
  logic [7:0] _084__C ;
  logic [7:0] _084__X ;
  logic [13:0] _084__S ;
  logic [7:0] _085_;
  logic [7:0] _085__T ;
  logic [7:0] _085__R ;
  logic [7:0] _085__C ;
  logic [7:0] _085__X ;
  logic [13:0] _085__S ;
  logic [7:0] _086_;
  logic [7:0] _086__T ;
  logic [7:0] _086__R ;
  logic [7:0] _086__C ;
  logic [7:0] _086__X ;
  logic [13:0] _086__S ;
  logic [7:0] _087_;
  logic [7:0] _087__T ;
  logic [7:0] _087__R ;
  logic [7:0] _087__C ;
  logic [7:0] _087__X ;
  logic [13:0] _087__S ;
  logic [7:0] _088_;
  logic [7:0] _088__T ;
  logic [7:0] _088__R ;
  logic [7:0] _088__C ;
  logic [7:0] _088__X ;
  logic [13:0] _088__S ;
  logic _089_;
  logic _089__T ;
  logic _089__R ;
  logic _089__C ;
  logic _089__X ;
  logic [13:0] _089__S ;
  logic _090_;
  logic _090__T ;
  logic _090__R ;
  logic _090__C ;
  logic _090__X ;
  logic [13:0] _090__S ;
  logic _091_;
  logic _091__T ;
  logic _091__R ;
  logic _091__C ;
  logic _091__X ;
  logic [13:0] _091__S ;
  logic _092_;
  logic _092__T ;
  logic _092__R ;
  logic _092__C ;
  logic _092__X ;
  logic [13:0] _092__S ;
  logic _093_;
  logic _093__T ;
  logic _093__R ;
  logic _093__C ;
  logic _093__X ;
  logic [13:0] _093__S ;
  logic _094_;
  logic _094__T ;
  logic _094__R ;
  logic _094__C ;
  logic _094__X ;
  logic [13:0] _094__S ;
  logic _095_;
  logic _095__T ;
  logic _095__R ;
  logic _095__C ;
  logic _095__X ;
  logic [13:0] _095__S ;
  logic _096_;
  logic _096__T ;
  logic _096__R ;
  logic _096__C ;
  logic _096__X ;
  logic [13:0] _096__S ;
  logic [6:0] _097_;
  logic [6:0] _097__T ;
  logic [6:0] _097__R ;
  logic [6:0] _097__C ;
  logic [6:0] _097__X ;
  logic [13:0] _097__S ;
  logic [6:0] _098_;
  logic [6:0] _098__T ;
  logic [6:0] _098__R ;
  logic [6:0] _098__C ;
  logic [6:0] _098__X ;
  logic [13:0] _098__S ;
  logic _099_;
  logic _099__T ;
  logic _099__R ;
  logic _099__C ;
  logic _099__X ;
  logic [13:0] _099__S ;
  logic _100_;
  logic _100__T ;
  logic _100__R ;
  logic _100__C ;
  logic _100__X ;
  logic [13:0] _100__S ;
  logic _101_;
  logic _101__T ;
  logic _101__R ;
  logic _101__C ;
  logic _101__X ;
  logic [13:0] _101__S ;
  logic _102_;
  logic _102__T ;
  logic _102__R ;
  logic _102__C ;
  logic _102__X ;
  logic [13:0] _102__S ;
  logic _103_;
  logic _103__T ;
  logic _103__R ;
  logic _103__C ;
  logic _103__X ;
  logic [13:0] _103__S ;
  logic _104_;
  logic _104__T ;
  logic _104__R ;
  logic _104__C ;
  logic _104__X ;
  logic [13:0] _104__S ;
  logic _105_;
  logic _105__T ;
  logic _105__R ;
  logic _105__C ;
  logic _105__X ;
  logic [13:0] _105__S ;
  logic _106_;
  logic _106__T ;
  logic _106__R ;
  logic _106__C ;
  logic _106__X ;
  logic [13:0] _106__S ;
  logic _107_;
  logic _107__T ;
  logic _107__R ;
  logic _107__C ;
  logic _107__X ;
  logic [13:0] _107__S ;
  logic [48:0] _108_;
  logic [48:0] _108__T ;
  logic [48:0] _108__R ;
  logic [48:0] _108__C ;
  logic [48:0] _108__X ;
  logic [13:0] _108__S ;
  logic [5:0] _109_;
  logic [5:0] _109__T ;
  logic [5:0] _109__R ;
  logic [5:0] _109__C ;
  logic [5:0] _109__X ;
  logic [13:0] _109__S ;
  logic _110_;
  logic _110__T ;
  logic _110__R ;
  logic _110__C ;
  logic _110__X ;
  logic [13:0] _110__S ;
  logic _111_;
  logic _111__T ;
  logic _111__R ;
  logic _111__C ;
  logic _111__X ;
  logic [13:0] _111__S ;
  logic [7:0] _112_;
  logic [7:0] _112__T ;
  logic [7:0] _112__R ;
  logic [7:0] _112__C ;
  logic [7:0] _112__X ;
  logic [13:0] _112__S ;
  logic _113_;
  logic _113__T ;
  logic _113__R ;
  logic _113__C ;
  logic _113__X ;
  logic [13:0] _113__S ;
  logic _114_;
  logic _114__T ;
  logic _114__R ;
  logic _114__C ;
  logic _114__X ;
  logic [13:0] _114__S ;
  logic _115_;
  logic _115__T ;
  logic _115__R ;
  logic _115__C ;
  logic _115__X ;
  logic [13:0] _115__S ;
  logic _116_;
  logic _116__T ;
  logic _116__R ;
  logic _116__C ;
  logic _116__X ;
  logic [13:0] _116__S ;
  logic _117_;
  logic _117__T ;
  logic _117__R ;
  logic _117__C ;
  logic _117__X ;
  logic [13:0] _117__S ;
  logic _118_;
  logic _118__T ;
  logic _118__R ;
  logic _118__C ;
  logic _118__X ;
  logic [13:0] _118__S ;
  logic _119_;
  logic _119__T ;
  logic _119__R ;
  logic _119__C ;
  logic _119__X ;
  logic [13:0] _119__S ;
  logic _120_;
  logic _120__T ;
  logic _120__R ;
  logic _120__C ;
  logic _120__X ;
  logic [13:0] _120__S ;
  logic _121_;
  logic _121__T ;
  logic _121__R ;
  logic _121__C ;
  logic _121__X ;
  logic [13:0] _121__S ;
  logic _122_;
  logic _122__T ;
  logic _122__R ;
  logic _122__C ;
  logic _122__X ;
  logic [13:0] _122__S ;
  logic _123_;
  logic _123__T ;
  logic _123__R ;
  logic _123__C ;
  logic _123__X ;
  logic [13:0] _123__S ;
  logic _124_;
  logic _124__T ;
  logic _124__R ;
  logic _124__C ;
  logic _124__X ;
  logic [13:0] _124__S ;
  logic _125_;
  logic _125__T ;
  logic _125__R ;
  logic _125__C ;
  logic _125__X ;
  logic [13:0] _125__S ;
  logic _126_;
  logic _126__T ;
  logic _126__R ;
  logic _126__C ;
  logic _126__X ;
  logic [13:0] _126__S ;
  logic _127_;
  logic _127__T ;
  logic _127__R ;
  logic _127__C ;
  logic _127__X ;
  logic [13:0] _127__S ;
  logic _128_;
  logic _128__T ;
  logic _128__R ;
  logic _128__C ;
  logic _128__X ;
  logic [13:0] _128__S ;
  logic _129_;
  logic _129__T ;
  logic _129__R ;
  logic _129__C ;
  logic _129__X ;
  logic [13:0] _129__S ;
  logic _130_;
  logic _130__T ;
  logic _130__R ;
  logic _130__C ;
  logic _130__X ;
  logic [13:0] _130__S ;
  logic _131_;
  logic _131__T ;
  logic _131__R ;
  logic _131__C ;
  logic _131__X ;
  logic [13:0] _131__S ;
  logic _132_;
  logic _132__T ;
  logic _132__R ;
  logic _132__C ;
  logic _132__X ;
  logic [13:0] _132__S ;
  logic _133_;
  logic _133__T ;
  logic _133__R ;
  logic _133__C ;
  logic _133__X ;
  logic [13:0] _133__S ;
  logic _134_;
  logic _134__T ;
  logic _134__R ;
  logic _134__C ;
  logic _134__X ;
  logic [13:0] _134__S ;
  logic _135_;
  logic _135__T ;
  logic _135__R ;
  logic _135__C ;
  logic _135__X ;
  logic [13:0] _135__S ;
  logic _136_;
  logic _136__T ;
  logic _136__R ;
  logic _136__C ;
  logic _136__X ;
  logic [13:0] _136__S ;
  logic _137_;
  logic _137__T ;
  logic _137__R ;
  logic _137__C ;
  logic _137__X ;
  logic [13:0] _137__S ;
  logic _138_;
  logic _138__T ;
  logic _138__R ;
  logic _138__C ;
  logic _138__X ;
  logic [13:0] _138__S ;
  logic _139_;
  logic _139__T ;
  logic _139__R ;
  logic _139__C ;
  logic _139__X ;
  logic [13:0] _139__S ;
  logic _140_;
  logic _140__T ;
  logic _140__R ;
  logic _140__C ;
  logic _140__X ;
  logic [13:0] _140__S ;
  logic _141_;
  logic _141__T ;
  logic _141__R ;
  logic _141__C ;
  logic _141__X ;
  logic [13:0] _141__S ;
  logic _142_;
  logic _142__T ;
  logic _142__R ;
  logic _142__C ;
  logic _142__X ;
  logic [13:0] _142__S ;
  logic _143_;
  logic _143__T ;
  logic _143__R ;
  logic _143__C ;
  logic _143__X ;
  logic [13:0] _143__S ;
  logic _144_;
  logic _144__T ;
  logic _144__R ;
  logic _144__C ;
  logic _144__X ;
  logic [13:0] _144__S ;
  logic _145_;
  logic _145__T ;
  logic _145__R ;
  logic _145__C ;
  logic _145__X ;
  logic [13:0] _145__S ;
  logic _146_;
  logic _146__T ;
  logic _146__R ;
  logic _146__C ;
  logic _146__X ;
  logic [13:0] _146__S ;
  logic _147_;
  logic _147__T ;
  logic _147__R ;
  logic _147__C ;
  logic _147__X ;
  logic [13:0] _147__S ;
  logic _148_;
  logic _148__T ;
  logic _148__R ;
  logic _148__C ;
  logic _148__X ;
  logic [13:0] _148__S ;
  logic _149_;
  logic _149__T ;
  logic _149__R ;
  logic _149__C ;
  logic _149__X ;
  logic [13:0] _149__S ;
  logic _150_;
  logic _150__T ;
  logic _150__R ;
  logic _150__C ;
  logic _150__X ;
  logic [13:0] _150__S ;
  logic _151_;
  logic _151__T ;
  logic _151__R ;
  logic _151__C ;
  logic _151__X ;
  logic [13:0] _151__S ;
  logic _152_;
  logic _152__T ;
  logic _152__R ;
  logic _152__C ;
  logic _152__X ;
  logic [13:0] _152__S ;
  logic _153_;
  logic _153__T ;
  logic _153__R ;
  logic _153__C ;
  logic _153__X ;
  logic [13:0] _153__S ;
  logic _154_;
  logic _154__T ;
  logic _154__R ;
  logic _154__C ;
  logic _154__X ;
  logic [13:0] _154__S ;
  logic _155_;
  logic _155__T ;
  logic _155__R ;
  logic _155__C ;
  logic _155__X ;
  logic [13:0] _155__S ;
  logic _156_;
  logic _156__T ;
  logic _156__R ;
  logic _156__C ;
  logic _156__X ;
  logic [13:0] _156__S ;
  logic _157_;
  logic _157__T ;
  logic _157__R ;
  logic _157__C ;
  logic _157__X ;
  logic [13:0] _157__S ;
  logic _158_;
  logic _158__T ;
  logic _158__R ;
  logic _158__C ;
  logic _158__X ;
  logic [13:0] _158__S ;
  logic _159_;
  logic _159__T ;
  logic _159__R ;
  logic _159__C ;
  logic _159__X ;
  logic [13:0] _159__S ;
  logic _160_;
  logic _160__T ;
  logic _160__R ;
  logic _160__C ;
  logic _160__X ;
  logic [13:0] _160__S ;
  logic _161_;
  logic _161__T ;
  logic _161__R ;
  logic _161__C ;
  logic _161__X ;
  logic [13:0] _161__S ;
  logic _162_;
  logic _162__T ;
  logic _162__R ;
  logic _162__C ;
  logic _162__X ;
  logic [13:0] _162__S ;
  logic _163_;
  logic _163__T ;
  logic _163__R ;
  logic _163__C ;
  logic _163__X ;
  logic [13:0] _163__S ;
  logic _164_;
  logic _164__T ;
  logic _164__R ;
  logic _164__C ;
  logic _164__X ;
  logic [13:0] _164__S ;
  logic _165_;
  logic _165__T ;
  logic _165__R ;
  logic _165__C ;
  logic _165__X ;
  logic [13:0] _165__S ;
  logic _166_;
  logic _166__T ;
  logic _166__R ;
  logic _166__C ;
  logic _166__X ;
  logic [13:0] _166__S ;
  logic _167_;
  logic _167__T ;
  logic _167__R ;
  logic _167__C ;
  logic _167__X ;
  logic [13:0] _167__S ;
  logic _168_;
  logic _168__T ;
  logic _168__R ;
  logic _168__C ;
  logic _168__X ;
  logic [13:0] _168__S ;
  logic _169_;
  logic _169__T ;
  logic _169__R ;
  logic _169__C ;
  logic _169__X ;
  logic [13:0] _169__S ;
  logic _170_;
  logic _170__T ;
  logic _170__R ;
  logic _170__C ;
  logic _170__X ;
  logic [13:0] _170__S ;
  logic _171_;
  logic _171__T ;
  logic _171__R ;
  logic _171__C ;
  logic _171__X ;
  logic [13:0] _171__S ;
  logic _172_;
  logic _172__T ;
  logic _172__R ;
  logic _172__C ;
  logic _172__X ;
  logic [13:0] _172__S ;
  logic _173_;
  logic _173__T ;
  logic _173__R ;
  logic _173__C ;
  logic _173__X ;
  logic [13:0] _173__S ;
  logic _174_;
  logic _174__T ;
  logic _174__R ;
  logic _174__C ;
  logic _174__X ;
  logic [13:0] _174__S ;
  logic _175_;
  logic _175__T ;
  logic _175__R ;
  logic _175__C ;
  logic _175__X ;
  logic [13:0] _175__S ;
  logic _176_;
  logic _176__T ;
  logic _176__R ;
  logic _176__C ;
  logic _176__X ;
  logic [13:0] _176__S ;
  logic _177_;
  logic _177__T ;
  logic _177__R ;
  logic _177__C ;
  logic _177__X ;
  logic [13:0] _177__S ;
  logic _178_;
  logic _178__T ;
  logic _178__R ;
  logic _178__C ;
  logic _178__X ;
  logic [13:0] _178__S ;
  logic _179_;
  logic _179__T ;
  logic _179__R ;
  logic _179__C ;
  logic _179__X ;
  logic [13:0] _179__S ;
  logic _180_;
  logic _180__T ;
  logic _180__R ;
  logic _180__C ;
  logic _180__X ;
  logic [13:0] _180__S ;
  logic _181_;
  logic _181__T ;
  logic _181__R ;
  logic _181__C ;
  logic _181__X ;
  logic [13:0] _181__S ;
  logic _182_;
  logic _182__T ;
  logic _182__R ;
  logic _182__C ;
  logic _182__X ;
  logic [13:0] _182__S ;
  logic [7:0] _183_;
  logic [7:0] _183__T ;
  logic [7:0] _183__R ;
  logic [7:0] _183__C ;
  logic [7:0] _183__X ;
  logic [13:0] _183__S ;
  logic [7:0] _184_;
  logic [7:0] _184__T ;
  logic [7:0] _184__R ;
  logic [7:0] _184__C ;
  logic [7:0] _184__X ;
  logic [13:0] _184__S ;
  logic [7:0] _185_;
  logic [7:0] _185__T ;
  logic [7:0] _185__R ;
  logic [7:0] _185__C ;
  logic [7:0] _185__X ;
  logic [13:0] _185__S ;
  logic [7:0] _186_;
  logic [7:0] _186__T ;
  logic [7:0] _186__R ;
  logic [7:0] _186__C ;
  logic [7:0] _186__X ;
  logic [13:0] _186__S ;
  logic _187_;
  logic _187__T ;
  logic _187__R ;
  logic _187__C ;
  logic _187__X ;
  logic [13:0] _187__S ;
  logic FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c;
  logic FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_T ;
  logic FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_R ;
  logic FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_C ;
  logic FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_X ;
  logic [13:0] FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_S ;
  logic [22:0] FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl;
  logic [22:0] FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl_T ;
  logic [22:0] FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl_R ;
  logic [22:0] FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl_C ;
  logic [22:0] FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl_X ;
  logic [13:0] FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl_S ;
  logic FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2;
  logic  FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_T ;
  logic  FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_PREV_VAL1 ;
  logic  FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_PREV_VAL2 ;
  logic  FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_R ;
  logic  FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_X ;
  logic  FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_C ;
  logic [13:0] FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_S ;
  logic FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_t_flag ;
  logic FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_r_flag ;
  assign FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_S = 643 ;
  logic FpAdd_8U_23U_IsZero_8U_23U_or_itm_2;
  logic  FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_T ;
  logic  FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_PREV_VAL1 ;
  logic  FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_PREV_VAL2 ;
  logic  FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_R ;
  logic  FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_X ;
  logic  FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_C ;
  logic [13:0] FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_S ;
  logic FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_t_flag ;
  logic FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_r_flag ;
  assign FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_S = 644 ;
  logic [48:0] FpAdd_8U_23U_a_int_mant_p1_lshift_itm;
  logic [48:0] FpAdd_8U_23U_a_int_mant_p1_lshift_itm_T ;
  logic [48:0] FpAdd_8U_23U_a_int_mant_p1_lshift_itm_R ;
  logic [48:0] FpAdd_8U_23U_a_int_mant_p1_lshift_itm_C ;
  logic [48:0] FpAdd_8U_23U_a_int_mant_p1_lshift_itm_X ;
  logic [13:0] FpAdd_8U_23U_a_int_mant_p1_lshift_itm_S ;
  logic [48:0] FpAdd_8U_23U_a_int_mant_p1_sva_2;
  logic [48:0]  FpAdd_8U_23U_a_int_mant_p1_sva_2_T ;
  logic [48:0]  FpAdd_8U_23U_a_int_mant_p1_sva_2_PREV_VAL1 ;
  logic [48:0]  FpAdd_8U_23U_a_int_mant_p1_sva_2_PREV_VAL2 ;
  logic [48:0]  FpAdd_8U_23U_a_int_mant_p1_sva_2_R ;
  logic [48:0]  FpAdd_8U_23U_a_int_mant_p1_sva_2_X ;
  logic [48:0]  FpAdd_8U_23U_a_int_mant_p1_sva_2_C ;
  logic [13:0] FpAdd_8U_23U_a_int_mant_p1_sva_2_S ;
  logic FpAdd_8U_23U_a_int_mant_p1_sva_2_t_flag ;
  logic FpAdd_8U_23U_a_int_mant_p1_sva_2_r_flag ;
  assign FpAdd_8U_23U_a_int_mant_p1_sva_2_S = 645 ;
  logic [7:0] FpAdd_8U_23U_a_left_shift_acc_nl;
  logic [7:0] FpAdd_8U_23U_a_left_shift_acc_nl_T ;
  logic [7:0] FpAdd_8U_23U_a_left_shift_acc_nl_R ;
  logic [7:0] FpAdd_8U_23U_a_left_shift_acc_nl_C ;
  logic [7:0] FpAdd_8U_23U_a_left_shift_acc_nl_X ;
  logic [13:0] FpAdd_8U_23U_a_left_shift_acc_nl_S ;
  logic [7:0] FpAdd_8U_23U_a_right_shift_qelse_acc_nl;
  logic [7:0] FpAdd_8U_23U_a_right_shift_qelse_acc_nl_T ;
  logic [7:0] FpAdd_8U_23U_a_right_shift_qelse_acc_nl_R ;
  logic [7:0] FpAdd_8U_23U_a_right_shift_qelse_acc_nl_C ;
  logic [7:0] FpAdd_8U_23U_a_right_shift_qelse_acc_nl_X ;
  logic [13:0] FpAdd_8U_23U_a_right_shift_qelse_acc_nl_S ;
  logic [7:0] FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm;
  logic [7:0] FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm_T ;
  logic [7:0] FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm_R ;
  logic [7:0] FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm_C ;
  logic [7:0] FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm_X ;
  logic [13:0] FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm_S ;
  logic [31:0] FpAdd_8U_23U_a_sva_36;
  logic [31:0]  FpAdd_8U_23U_a_sva_36_T ;
  logic [31:0]  FpAdd_8U_23U_a_sva_36_PREV_VAL1 ;
  logic [31:0]  FpAdd_8U_23U_a_sva_36_PREV_VAL2 ;
  logic [31:0]  FpAdd_8U_23U_a_sva_36_R ;
  logic [31:0]  FpAdd_8U_23U_a_sva_36_X ;
  logic [31:0]  FpAdd_8U_23U_a_sva_36_C ;
  logic [13:0] FpAdd_8U_23U_a_sva_36_S ;
  logic FpAdd_8U_23U_a_sva_36_t_flag ;
  logic FpAdd_8U_23U_a_sva_36_r_flag ;
  assign FpAdd_8U_23U_a_sva_36_S = 646 ;
  logic [48:0] FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0;
  logic [48:0] FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_T ;
  logic [48:0] FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_R ;
  logic [48:0] FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_C ;
  logic [48:0] FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_X ;
  logic [13:0] FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_S ;
  logic [48:0] FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0;
  logic [48:0] FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_T ;
  logic [48:0] FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_R ;
  logic [48:0] FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_C ;
  logic [48:0] FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_X ;
  logic [13:0] FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_S ;
  logic FpAdd_8U_23U_and_1_nl;
  logic FpAdd_8U_23U_and_1_nl_T ;
  logic FpAdd_8U_23U_and_1_nl_R ;
  logic FpAdd_8U_23U_and_1_nl_C ;
  logic FpAdd_8U_23U_and_1_nl_X ;
  logic [13:0] FpAdd_8U_23U_and_1_nl_S ;
  logic FpAdd_8U_23U_and_2_nl;
  logic FpAdd_8U_23U_and_2_nl_T ;
  logic FpAdd_8U_23U_and_2_nl_R ;
  logic FpAdd_8U_23U_and_2_nl_C ;
  logic FpAdd_8U_23U_and_2_nl_X ;
  logic [13:0] FpAdd_8U_23U_and_2_nl_S ;
  logic FpAdd_8U_23U_and_3_nl;
  logic FpAdd_8U_23U_and_3_nl_T ;
  logic FpAdd_8U_23U_and_3_nl_R ;
  logic FpAdd_8U_23U_and_3_nl_C ;
  logic FpAdd_8U_23U_and_3_nl_X ;
  logic [13:0] FpAdd_8U_23U_and_3_nl_S ;
  logic FpAdd_8U_23U_and_7_nl;
  logic FpAdd_8U_23U_and_7_nl_T ;
  logic FpAdd_8U_23U_and_7_nl_R ;
  logic FpAdd_8U_23U_and_7_nl_C ;
  logic FpAdd_8U_23U_and_7_nl_X ;
  logic [13:0] FpAdd_8U_23U_and_7_nl_S ;
  logic FpAdd_8U_23U_and_8_cse;
  logic FpAdd_8U_23U_and_8_cse_T ;
  logic FpAdd_8U_23U_and_8_cse_R ;
  logic FpAdd_8U_23U_and_8_cse_C ;
  logic FpAdd_8U_23U_and_8_cse_X ;
  logic [13:0] FpAdd_8U_23U_and_8_cse_S ;
  logic FpAdd_8U_23U_and_nl;
  logic FpAdd_8U_23U_and_nl_T ;
  logic FpAdd_8U_23U_and_nl_R ;
  logic FpAdd_8U_23U_and_nl_C ;
  logic FpAdd_8U_23U_and_nl_X ;
  logic [13:0] FpAdd_8U_23U_and_nl_S ;
  logic FpAdd_8U_23U_and_tmp;
  logic FpAdd_8U_23U_and_tmp_T ;
  logic FpAdd_8U_23U_and_tmp_R ;
  logic FpAdd_8U_23U_and_tmp_C ;
  logic FpAdd_8U_23U_and_tmp_X ;
  logic [13:0] FpAdd_8U_23U_and_tmp_S ;
  logic [49:0] FpAdd_8U_23U_asn_4_mx0w1;
  logic [49:0] FpAdd_8U_23U_asn_4_mx0w1_T ;
  logic [49:0] FpAdd_8U_23U_asn_4_mx0w1_R ;
  logic [49:0] FpAdd_8U_23U_asn_4_mx0w1_C ;
  logic [49:0] FpAdd_8U_23U_asn_4_mx0w1_X ;
  logic [13:0] FpAdd_8U_23U_asn_4_mx0w1_S ;
  logic [49:0] FpAdd_8U_23U_asn_5_mx0w0;
  logic [49:0] FpAdd_8U_23U_asn_5_mx0w0_T ;
  logic [49:0] FpAdd_8U_23U_asn_5_mx0w0_R ;
  logic [49:0] FpAdd_8U_23U_asn_5_mx0w0_C ;
  logic [49:0] FpAdd_8U_23U_asn_5_mx0w0_X ;
  logic [13:0] FpAdd_8U_23U_asn_5_mx0w0_S ;
  logic [48:0] FpAdd_8U_23U_b_int_mant_p1_lshift_itm;
  logic [48:0] FpAdd_8U_23U_b_int_mant_p1_lshift_itm_T ;
  logic [48:0] FpAdd_8U_23U_b_int_mant_p1_lshift_itm_R ;
  logic [48:0] FpAdd_8U_23U_b_int_mant_p1_lshift_itm_C ;
  logic [48:0] FpAdd_8U_23U_b_int_mant_p1_lshift_itm_X ;
  logic [13:0] FpAdd_8U_23U_b_int_mant_p1_lshift_itm_S ;
  logic [48:0] FpAdd_8U_23U_b_int_mant_p1_sva_2;
  logic [48:0]  FpAdd_8U_23U_b_int_mant_p1_sva_2_T ;
  logic [48:0]  FpAdd_8U_23U_b_int_mant_p1_sva_2_PREV_VAL1 ;
  logic [48:0]  FpAdd_8U_23U_b_int_mant_p1_sva_2_PREV_VAL2 ;
  logic [48:0]  FpAdd_8U_23U_b_int_mant_p1_sva_2_R ;
  logic [48:0]  FpAdd_8U_23U_b_int_mant_p1_sva_2_X ;
  logic [48:0]  FpAdd_8U_23U_b_int_mant_p1_sva_2_C ;
  logic [13:0] FpAdd_8U_23U_b_int_mant_p1_sva_2_S ;
  logic FpAdd_8U_23U_b_int_mant_p1_sva_2_t_flag ;
  logic FpAdd_8U_23U_b_int_mant_p1_sva_2_r_flag ;
  assign FpAdd_8U_23U_b_int_mant_p1_sva_2_S = 647 ;
  logic [7:0] FpAdd_8U_23U_b_left_shift_acc_nl;
  logic [7:0] FpAdd_8U_23U_b_left_shift_acc_nl_T ;
  logic [7:0] FpAdd_8U_23U_b_left_shift_acc_nl_R ;
  logic [7:0] FpAdd_8U_23U_b_left_shift_acc_nl_C ;
  logic [7:0] FpAdd_8U_23U_b_left_shift_acc_nl_X ;
  logic [13:0] FpAdd_8U_23U_b_left_shift_acc_nl_S ;
  logic [7:0] FpAdd_8U_23U_b_right_shift_qif_acc_nl;
  logic [7:0] FpAdd_8U_23U_b_right_shift_qif_acc_nl_T ;
  logic [7:0] FpAdd_8U_23U_b_right_shift_qif_acc_nl_R ;
  logic [7:0] FpAdd_8U_23U_b_right_shift_qif_acc_nl_C ;
  logic [7:0] FpAdd_8U_23U_b_right_shift_qif_acc_nl_X ;
  logic [13:0] FpAdd_8U_23U_b_right_shift_qif_acc_nl_S ;
  logic [7:0] FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm;
  logic [7:0] FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm_T ;
  logic [7:0] FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm_R ;
  logic [7:0] FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm_C ;
  logic [7:0] FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm_X ;
  logic [13:0] FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm_S ;
  logic FpAdd_8U_23U_if_3_if_acc_1_itm_7_1;
  logic FpAdd_8U_23U_if_3_if_acc_1_itm_7_1_T ;
  logic FpAdd_8U_23U_if_3_if_acc_1_itm_7_1_R ;
  logic FpAdd_8U_23U_if_3_if_acc_1_itm_7_1_C ;
  logic FpAdd_8U_23U_if_3_if_acc_1_itm_7_1_X ;
  logic [13:0] FpAdd_8U_23U_if_3_if_acc_1_itm_7_1_S ;
  logic [7:0] FpAdd_8U_23U_if_3_if_acc_1_nl;
  logic [7:0] FpAdd_8U_23U_if_3_if_acc_1_nl_T ;
  logic [7:0] FpAdd_8U_23U_if_3_if_acc_1_nl_R ;
  logic [7:0] FpAdd_8U_23U_if_3_if_acc_1_nl_C ;
  logic [7:0] FpAdd_8U_23U_if_3_if_acc_1_nl_X ;
  logic [13:0] FpAdd_8U_23U_if_3_if_acc_1_nl_S ;
  logic [7:0] FpAdd_8U_23U_if_3_if_acc_nl;
  logic [7:0] FpAdd_8U_23U_if_3_if_acc_nl_T ;
  logic [7:0] FpAdd_8U_23U_if_3_if_acc_nl_R ;
  logic [7:0] FpAdd_8U_23U_if_3_if_acc_nl_C ;
  logic [7:0] FpAdd_8U_23U_if_3_if_acc_nl_X ;
  logic [13:0] FpAdd_8U_23U_if_3_if_acc_nl_S ;
  logic FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl;
  logic FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl_T ;
  logic FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl_R ;
  logic FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl_C ;
  logic FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl_X ;
  logic [13:0] FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl_S ;
  logic FpAdd_8U_23U_if_4_if_acc_1_itm_7_1;
  logic FpAdd_8U_23U_if_4_if_acc_1_itm_7_1_T ;
  logic FpAdd_8U_23U_if_4_if_acc_1_itm_7_1_R ;
  logic FpAdd_8U_23U_if_4_if_acc_1_itm_7_1_C ;
  logic FpAdd_8U_23U_if_4_if_acc_1_itm_7_1_X ;
  logic [13:0] FpAdd_8U_23U_if_4_if_acc_1_itm_7_1_S ;
  logic [7:0] FpAdd_8U_23U_if_4_if_acc_1_nl;
  logic [7:0] FpAdd_8U_23U_if_4_if_acc_1_nl_T ;
  logic [7:0] FpAdd_8U_23U_if_4_if_acc_1_nl_R ;
  logic [7:0] FpAdd_8U_23U_if_4_if_acc_1_nl_C ;
  logic [7:0] FpAdd_8U_23U_if_4_if_acc_1_nl_X ;
  logic [13:0] FpAdd_8U_23U_if_4_if_acc_1_nl_S ;
  logic [7:0] FpAdd_8U_23U_if_4_if_acc_nl;
  logic [7:0] FpAdd_8U_23U_if_4_if_acc_nl_T ;
  logic [7:0] FpAdd_8U_23U_if_4_if_acc_nl_R ;
  logic [7:0] FpAdd_8U_23U_if_4_if_acc_nl_C ;
  logic [7:0] FpAdd_8U_23U_if_4_if_acc_nl_X ;
  logic [13:0] FpAdd_8U_23U_if_4_if_acc_nl_S ;
  logic [48:0] FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0;
  logic [48:0] FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T ;
  logic [48:0] FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R ;
  logic [48:0] FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C ;
  logic [48:0] FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X ;
  logic [13:0] FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_S ;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2;
  logic [49:0]  FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_T ;
  logic [49:0]  FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_PREV_VAL1 ;
  logic [49:0]  FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_PREV_VAL2 ;
  logic [49:0]  FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R ;
  logic [49:0]  FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X ;
  logic [49:0]  FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C ;
  logic [13:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_S ;
  logic FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_t_flag ;
  logic FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_r_flag ;
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_S = 648 ;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_T ;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_R ;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_C ;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_X ;
  logic [13:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_S ;
  logic FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse;
  logic FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_T ;
  logic FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_R ;
  logic FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_C ;
  logic FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_X ;
  logic [13:0] FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_S ;
  logic FpAdd_8U_23U_is_a_greater_acc_1_itm_8_1;
  logic FpAdd_8U_23U_is_a_greater_acc_1_itm_8_1_T ;
  logic FpAdd_8U_23U_is_a_greater_acc_1_itm_8_1_R ;
  logic FpAdd_8U_23U_is_a_greater_acc_1_itm_8_1_C ;
  logic FpAdd_8U_23U_is_a_greater_acc_1_itm_8_1_X ;
  logic [13:0] FpAdd_8U_23U_is_a_greater_acc_1_itm_8_1_S ;
  logic [8:0] FpAdd_8U_23U_is_a_greater_acc_1_nl;
  logic [8:0] FpAdd_8U_23U_is_a_greater_acc_1_nl_T ;
  logic [8:0] FpAdd_8U_23U_is_a_greater_acc_1_nl_R ;
  logic [8:0] FpAdd_8U_23U_is_a_greater_acc_1_nl_C ;
  logic [8:0] FpAdd_8U_23U_is_a_greater_acc_1_nl_X ;
  logic [13:0] FpAdd_8U_23U_is_a_greater_acc_1_nl_S ;
  logic FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4;
  logic  FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_T ;
  logic  FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_PREV_VAL1 ;
  logic  FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_PREV_VAL2 ;
  logic  FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_R ;
  logic  FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_X ;
  logic  FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_C ;
  logic [13:0] FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_S ;
  logic FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_t_flag ;
  logic FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_r_flag ;
  assign FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_S = 649 ;
  logic FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5;
  logic  FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_T ;
  logic  FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_PREV_VAL1 ;
  logic  FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_PREV_VAL2 ;
  logic  FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_R ;
  logic  FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_X ;
  logic  FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_C ;
  logic [13:0] FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_S ;
  logic FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_t_flag ;
  logic FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_r_flag ;
  assign FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_S = 650 ;
  logic FpAdd_8U_23U_is_a_greater_oif_aelse_acc_itm_23_1;
  logic FpAdd_8U_23U_is_a_greater_oif_aelse_acc_itm_23_1_T ;
  logic FpAdd_8U_23U_is_a_greater_oif_aelse_acc_itm_23_1_R ;
  logic FpAdd_8U_23U_is_a_greater_oif_aelse_acc_itm_23_1_C ;
  logic FpAdd_8U_23U_is_a_greater_oif_aelse_acc_itm_23_1_X ;
  logic [13:0] FpAdd_8U_23U_is_a_greater_oif_aelse_acc_itm_23_1_S ;
  logic [23:0] FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl;
  logic [23:0] FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_T ;
  logic [23:0] FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R ;
  logic [23:0] FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C ;
  logic [23:0] FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X ;
  logic [13:0] FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_S ;
  logic FpAdd_8U_23U_is_a_greater_oif_equal_tmp;
  logic FpAdd_8U_23U_is_a_greater_oif_equal_tmp_T ;
  logic FpAdd_8U_23U_is_a_greater_oif_equal_tmp_R ;
  logic FpAdd_8U_23U_is_a_greater_oif_equal_tmp_C ;
  logic FpAdd_8U_23U_is_a_greater_oif_equal_tmp_X ;
  logic [13:0] FpAdd_8U_23U_is_a_greater_oif_equal_tmp_S ;
  logic FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3;
  logic  FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_T ;
  logic  FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_PREV_VAL1 ;
  logic  FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_PREV_VAL2 ;
  logic  FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_R ;
  logic  FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_X ;
  logic  FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_C ;
  logic [13:0] FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_S ;
  logic FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_t_flag ;
  logic FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_r_flag ;
  assign FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_S = 651 ;
  logic FpAdd_8U_23U_is_addition_and_cse;
  logic FpAdd_8U_23U_is_addition_and_cse_T ;
  logic FpAdd_8U_23U_is_addition_and_cse_R ;
  logic FpAdd_8U_23U_is_addition_and_cse_C ;
  logic FpAdd_8U_23U_is_addition_and_cse_X ;
  logic [13:0] FpAdd_8U_23U_is_addition_and_cse_S ;
  logic FpAdd_8U_23U_is_inf_lpi_1_dfm;
  logic FpAdd_8U_23U_is_inf_lpi_1_dfm_T ;
  logic FpAdd_8U_23U_is_inf_lpi_1_dfm_R ;
  logic FpAdd_8U_23U_is_inf_lpi_1_dfm_C ;
  logic FpAdd_8U_23U_is_inf_lpi_1_dfm_X ;
  logic [13:0] FpAdd_8U_23U_is_inf_lpi_1_dfm_S ;
  logic FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0;
  logic FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_T ;
  logic FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_R ;
  logic FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_C ;
  logic FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_X ;
  logic [13:0] FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_S ;
  logic FpAdd_8U_23U_mux_13_itm_3;
  logic  FpAdd_8U_23U_mux_13_itm_3_T ;
  logic  FpAdd_8U_23U_mux_13_itm_3_PREV_VAL1 ;
  logic  FpAdd_8U_23U_mux_13_itm_3_PREV_VAL2 ;
  logic  FpAdd_8U_23U_mux_13_itm_3_R ;
  logic  FpAdd_8U_23U_mux_13_itm_3_X ;
  logic  FpAdd_8U_23U_mux_13_itm_3_C ;
  logic [13:0] FpAdd_8U_23U_mux_13_itm_3_S ;
  logic FpAdd_8U_23U_mux_13_itm_3_t_flag ;
  logic FpAdd_8U_23U_mux_13_itm_3_r_flag ;
  assign FpAdd_8U_23U_mux_13_itm_3_S = 652 ;
  logic FpAdd_8U_23U_mux_13_itm_4;
  logic  FpAdd_8U_23U_mux_13_itm_4_T ;
  logic  FpAdd_8U_23U_mux_13_itm_4_PREV_VAL1 ;
  logic  FpAdd_8U_23U_mux_13_itm_4_PREV_VAL2 ;
  logic  FpAdd_8U_23U_mux_13_itm_4_R ;
  logic  FpAdd_8U_23U_mux_13_itm_4_X ;
  logic  FpAdd_8U_23U_mux_13_itm_4_C ;
  logic [13:0] FpAdd_8U_23U_mux_13_itm_4_S ;
  logic FpAdd_8U_23U_mux_13_itm_4_t_flag ;
  logic FpAdd_8U_23U_mux_13_itm_4_r_flag ;
  assign FpAdd_8U_23U_mux_13_itm_4_S = 653 ;
  logic FpAdd_8U_23U_mux_1_itm_2;
  logic  FpAdd_8U_23U_mux_1_itm_2_T ;
  logic  FpAdd_8U_23U_mux_1_itm_2_PREV_VAL1 ;
  logic  FpAdd_8U_23U_mux_1_itm_2_PREV_VAL2 ;
  logic  FpAdd_8U_23U_mux_1_itm_2_R ;
  logic  FpAdd_8U_23U_mux_1_itm_2_X ;
  logic  FpAdd_8U_23U_mux_1_itm_2_C ;
  logic [13:0] FpAdd_8U_23U_mux_1_itm_2_S ;
  logic FpAdd_8U_23U_mux_1_itm_2_t_flag ;
  logic FpAdd_8U_23U_mux_1_itm_2_r_flag ;
  assign FpAdd_8U_23U_mux_1_itm_2_S = 654 ;
  logic FpAdd_8U_23U_mux_2_tmp_49;
  logic FpAdd_8U_23U_mux_2_tmp_49_T ;
  logic FpAdd_8U_23U_mux_2_tmp_49_R ;
  logic FpAdd_8U_23U_mux_2_tmp_49_C ;
  logic FpAdd_8U_23U_mux_2_tmp_49_X ;
  logic [13:0] FpAdd_8U_23U_mux_2_tmp_49_S ;
  logic [7:0] FpAdd_8U_23U_o_expo_lpi_1_dfm_2;
  logic [7:0] FpAdd_8U_23U_o_expo_lpi_1_dfm_2_T ;
  logic [7:0] FpAdd_8U_23U_o_expo_lpi_1_dfm_2_R ;
  logic [7:0] FpAdd_8U_23U_o_expo_lpi_1_dfm_2_C ;
  logic [7:0] FpAdd_8U_23U_o_expo_lpi_1_dfm_2_X ;
  logic [13:0] FpAdd_8U_23U_o_expo_lpi_1_dfm_2_S ;
  logic FpAdd_8U_23U_or_cse;
  logic FpAdd_8U_23U_or_cse_T ;
  logic FpAdd_8U_23U_or_cse_R ;
  logic FpAdd_8U_23U_or_cse_C ;
  logic FpAdd_8U_23U_or_cse_X ;
  logic [13:0] FpAdd_8U_23U_or_cse_S ;
  logic [7:0] FpAdd_8U_23U_qr_lpi_1_dfm_4;
  logic [7:0]  FpAdd_8U_23U_qr_lpi_1_dfm_4_T ;
  logic [7:0]  FpAdd_8U_23U_qr_lpi_1_dfm_4_PREV_VAL1 ;
  logic [7:0]  FpAdd_8U_23U_qr_lpi_1_dfm_4_PREV_VAL2 ;
  logic [7:0]  FpAdd_8U_23U_qr_lpi_1_dfm_4_R ;
  logic [7:0]  FpAdd_8U_23U_qr_lpi_1_dfm_4_X ;
  logic [7:0]  FpAdd_8U_23U_qr_lpi_1_dfm_4_C ;
  logic [13:0] FpAdd_8U_23U_qr_lpi_1_dfm_4_S ;
  logic FpAdd_8U_23U_qr_lpi_1_dfm_4_t_flag ;
  logic FpAdd_8U_23U_qr_lpi_1_dfm_4_r_flag ;
  assign FpAdd_8U_23U_qr_lpi_1_dfm_4_S = 655 ;
  logic [7:0] FpAdd_8U_23U_qr_lpi_1_dfm_5;
  logic [7:0]  FpAdd_8U_23U_qr_lpi_1_dfm_5_T ;
  logic [7:0]  FpAdd_8U_23U_qr_lpi_1_dfm_5_PREV_VAL1 ;
  logic [7:0]  FpAdd_8U_23U_qr_lpi_1_dfm_5_PREV_VAL2 ;
  logic [7:0]  FpAdd_8U_23U_qr_lpi_1_dfm_5_R ;
  logic [7:0]  FpAdd_8U_23U_qr_lpi_1_dfm_5_X ;
  logic [7:0]  FpAdd_8U_23U_qr_lpi_1_dfm_5_C ;
  logic [13:0] FpAdd_8U_23U_qr_lpi_1_dfm_5_S ;
  logic FpAdd_8U_23U_qr_lpi_1_dfm_5_t_flag ;
  logic FpAdd_8U_23U_qr_lpi_1_dfm_5_r_flag ;
  assign FpAdd_8U_23U_qr_lpi_1_dfm_5_S = 656 ;
  logic [7:0] FpAdd_8U_23U_qr_lpi_1_dfm_6;
  logic [7:0]  FpAdd_8U_23U_qr_lpi_1_dfm_6_T ;
  logic [7:0]  FpAdd_8U_23U_qr_lpi_1_dfm_6_PREV_VAL1 ;
  logic [7:0]  FpAdd_8U_23U_qr_lpi_1_dfm_6_PREV_VAL2 ;
  logic [7:0]  FpAdd_8U_23U_qr_lpi_1_dfm_6_R ;
  logic [7:0]  FpAdd_8U_23U_qr_lpi_1_dfm_6_X ;
  logic [7:0]  FpAdd_8U_23U_qr_lpi_1_dfm_6_C ;
  logic [13:0] FpAdd_8U_23U_qr_lpi_1_dfm_6_S ;
  logic FpAdd_8U_23U_qr_lpi_1_dfm_6_t_flag ;
  logic FpAdd_8U_23U_qr_lpi_1_dfm_6_r_flag ;
  assign FpAdd_8U_23U_qr_lpi_1_dfm_6_S = 657 ;
  logic [22:0] FpMantRNE_49U_24U_else_acc_nl;
  logic [22:0] FpMantRNE_49U_24U_else_acc_nl_T ;
  logic [22:0] FpMantRNE_49U_24U_else_acc_nl_R ;
  logic [22:0] FpMantRNE_49U_24U_else_acc_nl_C ;
  logic [22:0] FpMantRNE_49U_24U_else_acc_nl_X ;
  logic [13:0] FpMantRNE_49U_24U_else_acc_nl_S ;
  logic FpMantRNE_49U_24U_else_and_tmp;
  logic FpMantRNE_49U_24U_else_and_tmp_T ;
  logic FpMantRNE_49U_24U_else_and_tmp_R ;
  logic FpMantRNE_49U_24U_else_and_tmp_C ;
  logic FpMantRNE_49U_24U_else_and_tmp_X ;
  logic [13:0] FpMantRNE_49U_24U_else_and_tmp_S ;
  logic FpMantRNE_49U_24U_else_carry_sva;
  logic FpMantRNE_49U_24U_else_carry_sva_T ;
  logic FpMantRNE_49U_24U_else_carry_sva_R ;
  logic FpMantRNE_49U_24U_else_carry_sva_C ;
  logic FpMantRNE_49U_24U_else_carry_sva_X ;
  logic [13:0] FpMantRNE_49U_24U_else_carry_sva_S ;
  logic [48:0] FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl;
  logic [48:0] FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl_T ;
  logic [48:0] FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl_R ;
  logic [48:0] FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl_C ;
  logic [48:0] FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl_X ;
  logic [13:0] FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl_S ;
  logic [7:0] FpNormalize_8U_49U_FpNormalize_8U_49U_and_nl;
  logic [7:0] FpNormalize_8U_49U_FpNormalize_8U_49U_and_nl_T ;
  logic [7:0] FpNormalize_8U_49U_FpNormalize_8U_49U_and_nl_R ;
  logic [7:0] FpNormalize_8U_49U_FpNormalize_8U_49U_and_nl_C ;
  logic [7:0] FpNormalize_8U_49U_FpNormalize_8U_49U_and_nl_X ;
  logic [13:0] FpNormalize_8U_49U_FpNormalize_8U_49U_and_nl_S ;
  logic [8:0] FpNormalize_8U_49U_acc_nl;
  logic [8:0] FpNormalize_8U_49U_acc_nl_T ;
  logic [8:0] FpNormalize_8U_49U_acc_nl_R ;
  logic [8:0] FpNormalize_8U_49U_acc_nl_C ;
  logic [8:0] FpNormalize_8U_49U_acc_nl_X ;
  logic [13:0] FpNormalize_8U_49U_acc_nl_S ;
  logic [7:0] FpNormalize_8U_49U_else_acc_nl;
  logic [7:0] FpNormalize_8U_49U_else_acc_nl_T ;
  logic [7:0] FpNormalize_8U_49U_else_acc_nl_R ;
  logic [7:0] FpNormalize_8U_49U_else_acc_nl_C ;
  logic [7:0] FpNormalize_8U_49U_else_acc_nl_X ;
  logic [13:0] FpNormalize_8U_49U_else_acc_nl_S ;
  logic [48:0] FpNormalize_8U_49U_else_lshift_itm;
  logic [48:0] FpNormalize_8U_49U_else_lshift_itm_T ;
  logic [48:0] FpNormalize_8U_49U_else_lshift_itm_R ;
  logic [48:0] FpNormalize_8U_49U_else_lshift_itm_C ;
  logic [48:0] FpNormalize_8U_49U_else_lshift_itm_X ;
  logic [13:0] FpNormalize_8U_49U_else_lshift_itm_S ;
  logic FpNormalize_8U_49U_if_or_itm_2;
  logic  FpNormalize_8U_49U_if_or_itm_2_T ;
  logic  FpNormalize_8U_49U_if_or_itm_2_PREV_VAL1 ;
  logic  FpNormalize_8U_49U_if_or_itm_2_PREV_VAL2 ;
  logic  FpNormalize_8U_49U_if_or_itm_2_R ;
  logic  FpNormalize_8U_49U_if_or_itm_2_X ;
  logic  FpNormalize_8U_49U_if_or_itm_2_C ;
  logic [13:0] FpNormalize_8U_49U_if_or_itm_2_S ;
  logic FpNormalize_8U_49U_if_or_itm_2_t_flag ;
  logic FpNormalize_8U_49U_if_or_itm_2_r_flag ;
  assign FpNormalize_8U_49U_if_or_itm_2_S = 658 ;
  logic FpNormalize_8U_49U_oelse_not_3;
  logic FpNormalize_8U_49U_oelse_not_3_T ;
  logic FpNormalize_8U_49U_oelse_not_3_R ;
  logic FpNormalize_8U_49U_oelse_not_3_C ;
  logic FpNormalize_8U_49U_oelse_not_3_X ;
  logic [13:0] FpNormalize_8U_49U_oelse_not_3_S ;
  logic FpSignedBitsToFloat_8U_23U_1_FpAdd_8U_23U_or_1_cse;
  logic FpSignedBitsToFloat_8U_23U_1_FpAdd_8U_23U_or_1_cse_T ;
  logic FpSignedBitsToFloat_8U_23U_1_FpAdd_8U_23U_or_1_cse_R ;
  logic FpSignedBitsToFloat_8U_23U_1_FpAdd_8U_23U_or_1_cse_C ;
  logic FpSignedBitsToFloat_8U_23U_1_FpAdd_8U_23U_or_1_cse_X ;
  logic [13:0] FpSignedBitsToFloat_8U_23U_1_FpAdd_8U_23U_or_1_cse_S ;
  logic FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse;
  logic FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse_T ;
  logic FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse_R ;
  logic FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse_C ;
  logic FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse_X ;
  logic [13:0] FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse_S ;
  logic FpSignedBitsToFloat_8U_23U_1_and_1_rgt;
  logic FpSignedBitsToFloat_8U_23U_1_and_1_rgt_T ;
  logic FpSignedBitsToFloat_8U_23U_1_and_1_rgt_R ;
  logic FpSignedBitsToFloat_8U_23U_1_and_1_rgt_C ;
  logic FpSignedBitsToFloat_8U_23U_1_and_1_rgt_X ;
  logic [13:0] FpSignedBitsToFloat_8U_23U_1_and_1_rgt_S ;
  logic FpSignedBitsToFloat_8U_23U_1_and_2_nl;
  logic FpSignedBitsToFloat_8U_23U_1_and_2_nl_T ;
  logic FpSignedBitsToFloat_8U_23U_1_and_2_nl_R ;
  logic FpSignedBitsToFloat_8U_23U_1_and_2_nl_C ;
  logic FpSignedBitsToFloat_8U_23U_1_and_2_nl_X ;
  logic [13:0] FpSignedBitsToFloat_8U_23U_1_and_2_nl_S ;
  logic FpSignedBitsToFloat_8U_23U_1_and_3_cse;
  logic FpSignedBitsToFloat_8U_23U_1_and_3_cse_T ;
  logic FpSignedBitsToFloat_8U_23U_1_and_3_cse_R ;
  logic FpSignedBitsToFloat_8U_23U_1_and_3_cse_C ;
  logic FpSignedBitsToFloat_8U_23U_1_and_3_cse_X ;
  logic [13:0] FpSignedBitsToFloat_8U_23U_1_and_3_cse_S ;
  logic FpSignedBitsToFloat_8U_23U_1_and_rgt;
  logic FpSignedBitsToFloat_8U_23U_1_and_rgt_T ;
  logic FpSignedBitsToFloat_8U_23U_1_and_rgt_R ;
  logic FpSignedBitsToFloat_8U_23U_1_and_rgt_C ;
  logic FpSignedBitsToFloat_8U_23U_1_and_rgt_X ;
  logic [13:0] FpSignedBitsToFloat_8U_23U_1_and_rgt_S ;
  logic [22:0] FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3;
  logic [22:0]  FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_T ;
  logic [22:0]  FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_PREV_VAL1 ;
  logic [22:0]  FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_PREV_VAL2 ;
  logic [22:0]  FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_R ;
  logic [22:0]  FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_X ;
  logic [22:0]  FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_C ;
  logic [13:0] FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_S ;
  logic FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_t_flag ;
  logic FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_r_flag ;
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_S = 659 ;
  logic [22:0] FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4;
  logic [22:0]  FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_T ;
  logic [22:0]  FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_PREV_VAL1 ;
  logic [22:0]  FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_PREV_VAL2 ;
  logic [22:0]  FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_R ;
  logic [22:0]  FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_X ;
  logic [22:0]  FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_C ;
  logic [13:0] FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_S ;
  logic FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_t_flag ;
  logic FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_r_flag ;
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_S = 660 ;
  logic [7:0] FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3;
  logic [7:0]  FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_T ;
  logic [7:0]  FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_PREV_VAL1 ;
  logic [7:0]  FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_PREV_VAL2 ;
  logic [7:0]  FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_R ;
  logic [7:0]  FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_X ;
  logic [7:0]  FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_C ;
  logic [13:0] FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_S ;
  logic FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_t_flag ;
  logic FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_r_flag ;
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_S = 661 ;
  logic [7:0] FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4;
  logic [7:0]  FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_T ;
  logic [7:0]  FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_PREV_VAL1 ;
  logic [7:0]  FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_PREV_VAL2 ;
  logic [7:0]  FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_R ;
  logic [7:0]  FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_X ;
  logic [7:0]  FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_C ;
  logic [13:0] FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_S ;
  logic FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_t_flag ;
  logic FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_r_flag ;
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_S = 662 ;
  logic IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2;
  logic  IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_T ;
  logic  IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_PREV_VAL1 ;
  logic  IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_PREV_VAL2 ;
  logic  IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_R ;
  logic  IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_X ;
  logic  IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_C ;
  logic [13:0] IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_S ;
  logic IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_t_flag ;
  logic IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_r_flag ;
  assign IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_S = 663 ;
  logic IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp;
  logic IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_T ;
  logic IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_R ;
  logic IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_C ;
  logic IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_X ;
  logic [13:0] IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_S ;
  logic IsNaN_8U_23U_1_and_cse;
  logic IsNaN_8U_23U_1_and_cse_T ;
  logic IsNaN_8U_23U_1_and_cse_R ;
  logic IsNaN_8U_23U_1_and_cse_C ;
  logic IsNaN_8U_23U_1_and_cse_X ;
  logic [13:0] IsNaN_8U_23U_1_and_cse_S ;
  logic IsNaN_8U_23U_1_land_lpi_1_dfm_3;
  logic  IsNaN_8U_23U_1_land_lpi_1_dfm_3_T ;
  logic  IsNaN_8U_23U_1_land_lpi_1_dfm_3_PREV_VAL1 ;
  logic  IsNaN_8U_23U_1_land_lpi_1_dfm_3_PREV_VAL2 ;
  logic  IsNaN_8U_23U_1_land_lpi_1_dfm_3_R ;
  logic  IsNaN_8U_23U_1_land_lpi_1_dfm_3_X ;
  logic  IsNaN_8U_23U_1_land_lpi_1_dfm_3_C ;
  logic [13:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_S ;
  logic IsNaN_8U_23U_1_land_lpi_1_dfm_3_t_flag ;
  logic IsNaN_8U_23U_1_land_lpi_1_dfm_3_r_flag ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_S = 664 ;
  logic IsNaN_8U_23U_1_land_lpi_1_dfm_4;
  logic  IsNaN_8U_23U_1_land_lpi_1_dfm_4_T ;
  logic  IsNaN_8U_23U_1_land_lpi_1_dfm_4_PREV_VAL1 ;
  logic  IsNaN_8U_23U_1_land_lpi_1_dfm_4_PREV_VAL2 ;
  logic  IsNaN_8U_23U_1_land_lpi_1_dfm_4_R ;
  logic  IsNaN_8U_23U_1_land_lpi_1_dfm_4_X ;
  logic  IsNaN_8U_23U_1_land_lpi_1_dfm_4_C ;
  logic [13:0] IsNaN_8U_23U_1_land_lpi_1_dfm_4_S ;
  logic IsNaN_8U_23U_1_land_lpi_1_dfm_4_t_flag ;
  logic IsNaN_8U_23U_1_land_lpi_1_dfm_4_r_flag ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_4_S = 665 ;
  logic IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0;
  logic IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_T ;
  logic IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_R ;
  logic IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_C ;
  logic IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_X ;
  logic [13:0] IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_S ;
  logic IsNaN_8U_23U_1_nor_itm_2;
  logic  IsNaN_8U_23U_1_nor_itm_2_T ;
  logic  IsNaN_8U_23U_1_nor_itm_2_PREV_VAL1 ;
  logic  IsNaN_8U_23U_1_nor_itm_2_PREV_VAL2 ;
  logic  IsNaN_8U_23U_1_nor_itm_2_R ;
  logic  IsNaN_8U_23U_1_nor_itm_2_X ;
  logic  IsNaN_8U_23U_1_nor_itm_2_C ;
  logic [13:0] IsNaN_8U_23U_1_nor_itm_2_S ;
  logic IsNaN_8U_23U_1_nor_itm_2_t_flag ;
  logic IsNaN_8U_23U_1_nor_itm_2_r_flag ;
  assign IsNaN_8U_23U_1_nor_itm_2_S = 666 ;
  logic IsNaN_8U_23U_1_nor_tmp;
  logic IsNaN_8U_23U_1_nor_tmp_T ;
  logic IsNaN_8U_23U_1_nor_tmp_R ;
  logic IsNaN_8U_23U_1_nor_tmp_C ;
  logic IsNaN_8U_23U_1_nor_tmp_X ;
  logic [13:0] IsNaN_8U_23U_1_nor_tmp_S ;
  logic IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp;
  logic IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_T ;
  logic IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_R ;
  logic IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_C ;
  logic IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_X ;
  logic [13:0] IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_S ;
  logic IsNaN_8U_23U_aelse_and_cse;
  logic IsNaN_8U_23U_aelse_and_cse_T ;
  logic IsNaN_8U_23U_aelse_and_cse_R ;
  logic IsNaN_8U_23U_aelse_and_cse_C ;
  logic IsNaN_8U_23U_aelse_and_cse_X ;
  logic [13:0] IsNaN_8U_23U_aelse_and_cse_S ;
  logic IsNaN_8U_23U_land_lpi_1_dfm_5;
  logic  IsNaN_8U_23U_land_lpi_1_dfm_5_T ;
  logic  IsNaN_8U_23U_land_lpi_1_dfm_5_PREV_VAL1 ;
  logic  IsNaN_8U_23U_land_lpi_1_dfm_5_PREV_VAL2 ;
  logic  IsNaN_8U_23U_land_lpi_1_dfm_5_R ;
  logic  IsNaN_8U_23U_land_lpi_1_dfm_5_X ;
  logic  IsNaN_8U_23U_land_lpi_1_dfm_5_C ;
  logic [13:0] IsNaN_8U_23U_land_lpi_1_dfm_5_S ;
  logic IsNaN_8U_23U_land_lpi_1_dfm_5_t_flag ;
  logic IsNaN_8U_23U_land_lpi_1_dfm_5_r_flag ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_5_S = 667 ;
  logic IsNaN_8U_23U_land_lpi_1_dfm_6;
  logic  IsNaN_8U_23U_land_lpi_1_dfm_6_T ;
  logic  IsNaN_8U_23U_land_lpi_1_dfm_6_PREV_VAL1 ;
  logic  IsNaN_8U_23U_land_lpi_1_dfm_6_PREV_VAL2 ;
  logic  IsNaN_8U_23U_land_lpi_1_dfm_6_R ;
  logic  IsNaN_8U_23U_land_lpi_1_dfm_6_X ;
  logic  IsNaN_8U_23U_land_lpi_1_dfm_6_C ;
  logic [13:0] IsNaN_8U_23U_land_lpi_1_dfm_6_S ;
  logic IsNaN_8U_23U_land_lpi_1_dfm_6_t_flag ;
  logic IsNaN_8U_23U_land_lpi_1_dfm_6_r_flag ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_6_S = 668 ;
  logic IsNaN_8U_23U_land_lpi_1_dfm_st_4;
  logic  IsNaN_8U_23U_land_lpi_1_dfm_st_4_T ;
  logic  IsNaN_8U_23U_land_lpi_1_dfm_st_4_PREV_VAL1 ;
  logic  IsNaN_8U_23U_land_lpi_1_dfm_st_4_PREV_VAL2 ;
  logic  IsNaN_8U_23U_land_lpi_1_dfm_st_4_R ;
  logic  IsNaN_8U_23U_land_lpi_1_dfm_st_4_X ;
  logic  IsNaN_8U_23U_land_lpi_1_dfm_st_4_C ;
  logic [13:0] IsNaN_8U_23U_land_lpi_1_dfm_st_4_S ;
  logic IsNaN_8U_23U_land_lpi_1_dfm_st_4_t_flag ;
  logic IsNaN_8U_23U_land_lpi_1_dfm_st_4_r_flag ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_4_S = 669 ;
  logic and_67_nl;
  logic and_67_nl_T ;
  logic and_67_nl_R ;
  logic and_67_nl_C ;
  logic and_67_nl_X ;
  logic [13:0] and_67_nl_S ;
  logic and_dcpl_13;
  logic and_dcpl_13_T ;
  logic and_dcpl_13_R ;
  logic and_dcpl_13_C ;
  logic and_dcpl_13_X ;
  logic [13:0] and_dcpl_13_S ;
  logic and_dcpl_14;
  logic and_dcpl_14_T ;
  logic and_dcpl_14_R ;
  logic and_dcpl_14_C ;
  logic and_dcpl_14_X ;
  logic [13:0] and_dcpl_14_S ;
  logic and_dcpl_15;
  logic and_dcpl_15_T ;
  logic and_dcpl_15_R ;
  logic and_dcpl_15_C ;
  logic and_dcpl_15_X ;
  logic [13:0] and_dcpl_15_S ;
  logic and_dcpl_28;
  logic and_dcpl_28_T ;
  logic and_dcpl_28_R ;
  logic and_dcpl_28_C ;
  logic and_dcpl_28_X ;
  logic [13:0] and_dcpl_28_S ;
  logic and_dcpl_29;
  logic and_dcpl_29_T ;
  logic and_dcpl_29_R ;
  logic and_dcpl_29_C ;
  logic and_dcpl_29_X ;
  logic [13:0] and_dcpl_29_S ;
  logic and_dcpl_33;
  logic and_dcpl_33_T ;
  logic and_dcpl_33_R ;
  logic and_dcpl_33_C ;
  logic and_dcpl_33_X ;
  logic [13:0] and_dcpl_33_S ;
  logic and_dcpl_7;
  logic and_dcpl_7_T ;
  logic and_dcpl_7_R ;
  logic and_dcpl_7_C ;
  logic and_dcpl_7_X ;
  logic [13:0] and_dcpl_7_S ;
  logic [31:0] b_sva_36;
  logic [31:0]  b_sva_36_T ;
  logic [31:0]  b_sva_36_PREV_VAL1 ;
  logic [31:0]  b_sva_36_PREV_VAL2 ;
  logic [31:0]  b_sva_36_R ;
  logic [31:0]  b_sva_36_X ;
  logic [31:0]  b_sva_36_C ;
  logic [13:0] b_sva_36_S ;
  logic b_sva_36_t_flag ;
  logic b_sva_36_r_flag ;
  assign b_sva_36_S = 670 ;
  output chn_a_rsc_lz;
  logic chn_a_rsc_lz ;
  output chn_a_rsc_lz_T ;
  logic chn_a_rsc_lz_T ;
  logic chn_a_rsc_lz_R ;
  logic chn_a_rsc_lz_C ;
  logic chn_a_rsc_lz_X ;
  logic [13:0] chn_a_rsc_lz_S ;
  input chn_a_rsc_lz_R0 ;
  input chn_a_rsc_lz_C0 ;
  input chn_a_rsc_lz_X0 ;
  output [13:0] chn_a_rsc_lz_S ;
  input chn_a_rsc_vz;
  input chn_a_rsc_vz_T ;
  input [13:0] chn_a_rsc_vz_S ;
  output chn_a_rsc_vz_R ;
  output chn_a_rsc_vz_X ;
  output chn_a_rsc_vz_C ;
  input [31:0] chn_a_rsc_z;
  input [31:0] chn_a_rsc_z_T ;
  input [13:0] chn_a_rsc_z_S ;
  output [31:0] chn_a_rsc_z_R ;
  output [31:0] chn_a_rsc_z_X ;
  output [31:0] chn_a_rsc_z_C ;
  logic chn_a_rsci_bawt;
  logic chn_a_rsci_bawt_T ;
  logic chn_a_rsci_bawt_R ;
  logic chn_a_rsci_bawt_C ;
  logic chn_a_rsci_bawt_X ;
  logic [13:0] chn_a_rsci_bawt_S ;
  logic [31:0] chn_a_rsci_d_mxwt;
  logic [31:0] chn_a_rsci_d_mxwt_T ;
  logic [31:0] chn_a_rsci_d_mxwt_R ;
  logic [31:0] chn_a_rsci_d_mxwt_C ;
  logic [31:0] chn_a_rsci_d_mxwt_X ;
  logic [13:0] chn_a_rsci_d_mxwt_S ;
  input chn_a_rsci_oswt;
  input chn_a_rsci_oswt_T ;
  input [13:0] chn_a_rsci_oswt_S ;
  output chn_a_rsci_oswt_R ;
  output chn_a_rsci_oswt_X ;
  output chn_a_rsci_oswt_C ;
  output chn_a_rsci_oswt_unreg_pff;
  logic chn_a_rsci_oswt_unreg_pff ;
  output chn_a_rsci_oswt_unreg_pff_T ;
  logic chn_a_rsci_oswt_unreg_pff_T ;
  logic chn_a_rsci_oswt_unreg_pff_R ;
  logic chn_a_rsci_oswt_unreg_pff_C ;
  logic chn_a_rsci_oswt_unreg_pff_X ;
  logic [13:0] chn_a_rsci_oswt_unreg_pff_S ;
  input chn_a_rsci_oswt_unreg_pff_R0 ;
  input chn_a_rsci_oswt_unreg_pff_C0 ;
  input chn_a_rsci_oswt_unreg_pff_X0 ;
  output [13:0] chn_a_rsci_oswt_unreg_pff_S ;
  logic chn_a_rsci_wen_comp;
  logic chn_a_rsci_wen_comp_T ;
  logic chn_a_rsci_wen_comp_R ;
  logic chn_a_rsci_wen_comp_C ;
  logic chn_a_rsci_wen_comp_X ;
  logic [13:0] chn_a_rsci_wen_comp_S ;
  output chn_b_rsc_lz;
  logic chn_b_rsc_lz ;
  output chn_b_rsc_lz_T ;
  logic chn_b_rsc_lz_T ;
  logic chn_b_rsc_lz_R ;
  logic chn_b_rsc_lz_C ;
  logic chn_b_rsc_lz_X ;
  logic [13:0] chn_b_rsc_lz_S ;
  input chn_b_rsc_lz_R0 ;
  input chn_b_rsc_lz_C0 ;
  input chn_b_rsc_lz_X0 ;
  output [13:0] chn_b_rsc_lz_S ;
  input chn_b_rsc_vz;
  input chn_b_rsc_vz_T ;
  input [13:0] chn_b_rsc_vz_S ;
  output chn_b_rsc_vz_R ;
  output chn_b_rsc_vz_X ;
  output chn_b_rsc_vz_C ;
  input [31:0] chn_b_rsc_z;
  input [31:0] chn_b_rsc_z_T ;
  input [13:0] chn_b_rsc_z_S ;
  output [31:0] chn_b_rsc_z_R ;
  output [31:0] chn_b_rsc_z_X ;
  output [31:0] chn_b_rsc_z_C ;
  logic chn_b_rsci_bawt;
  logic chn_b_rsci_bawt_T ;
  logic chn_b_rsci_bawt_R ;
  logic chn_b_rsci_bawt_C ;
  logic chn_b_rsci_bawt_X ;
  logic [13:0] chn_b_rsci_bawt_S ;
  logic [31:0] chn_b_rsci_d_mxwt;
  logic [31:0] chn_b_rsci_d_mxwt_T ;
  logic [31:0] chn_b_rsci_d_mxwt_R ;
  logic [31:0] chn_b_rsci_d_mxwt_C ;
  logic [31:0] chn_b_rsci_d_mxwt_X ;
  logic [13:0] chn_b_rsci_d_mxwt_S ;
  input chn_b_rsci_oswt;
  input chn_b_rsci_oswt_T ;
  input [13:0] chn_b_rsci_oswt_S ;
  output chn_b_rsci_oswt_R ;
  output chn_b_rsci_oswt_X ;
  output chn_b_rsci_oswt_C ;
  logic chn_b_rsci_wen_comp;
  logic chn_b_rsci_wen_comp_T ;
  logic chn_b_rsci_wen_comp_R ;
  logic chn_b_rsci_wen_comp_C ;
  logic chn_b_rsci_wen_comp_X ;
  logic [13:0] chn_b_rsci_wen_comp_S ;
  logic chn_o_and_1_cse;
  logic chn_o_and_1_cse_T ;
  logic chn_o_and_1_cse_R ;
  logic chn_o_and_1_cse_C ;
  logic chn_o_and_1_cse_X ;
  logic [13:0] chn_o_and_1_cse_S ;
  output chn_o_rsc_lz;
  logic chn_o_rsc_lz ;
  output chn_o_rsc_lz_T ;
  logic chn_o_rsc_lz_T ;
  logic chn_o_rsc_lz_R ;
  logic chn_o_rsc_lz_C ;
  logic chn_o_rsc_lz_X ;
  logic [13:0] chn_o_rsc_lz_S ;
  input chn_o_rsc_lz_R0 ;
  input chn_o_rsc_lz_C0 ;
  input chn_o_rsc_lz_X0 ;
  output [13:0] chn_o_rsc_lz_S ;
  input chn_o_rsc_vz;
  input chn_o_rsc_vz_T ;
  input [13:0] chn_o_rsc_vz_S ;
  output chn_o_rsc_vz_R ;
  output chn_o_rsc_vz_X ;
  output chn_o_rsc_vz_C ;
  output [31:0] chn_o_rsc_z;
  logic [31:0] chn_o_rsc_z ;
  output [31:0] chn_o_rsc_z_T ;
  logic [31:0] chn_o_rsc_z_T ;
  logic [31:0] chn_o_rsc_z_R ;
  logic [31:0] chn_o_rsc_z_C ;
  logic [31:0] chn_o_rsc_z_X ;
  logic [13:0] chn_o_rsc_z_S ;
  input [31:0] chn_o_rsc_z_R0 ;
  input [31:0] chn_o_rsc_z_C0 ;
  input [31:0] chn_o_rsc_z_X0 ;
  output [13:0] chn_o_rsc_z_S ;
  logic chn_o_rsci_bawt;
  logic chn_o_rsci_bawt_T ;
  logic chn_o_rsci_bawt_R ;
  logic chn_o_rsci_bawt_C ;
  logic chn_o_rsci_bawt_X ;
  logic [13:0] chn_o_rsci_bawt_S ;
  logic [22:0] chn_o_rsci_d_22_0;
  logic [22:0]  chn_o_rsci_d_22_0_T ;
  logic [22:0]  chn_o_rsci_d_22_0_PREV_VAL1 ;
  logic [22:0]  chn_o_rsci_d_22_0_PREV_VAL2 ;
  logic [22:0]  chn_o_rsci_d_22_0_R ;
  logic [22:0]  chn_o_rsci_d_22_0_X ;
  logic [22:0]  chn_o_rsci_d_22_0_C ;
  logic [13:0] chn_o_rsci_d_22_0_S ;
  logic chn_o_rsci_d_22_0_t_flag ;
  logic chn_o_rsci_d_22_0_r_flag ;
  assign chn_o_rsci_d_22_0_S = 671 ;
  logic chn_o_rsci_d_22_0_mx0c1;
  logic chn_o_rsci_d_22_0_mx0c1_T ;
  logic chn_o_rsci_d_22_0_mx0c1_R ;
  logic chn_o_rsci_d_22_0_mx0c1_C ;
  logic chn_o_rsci_d_22_0_mx0c1_X ;
  logic [13:0] chn_o_rsci_d_22_0_mx0c1_S ;
  logic [7:0] chn_o_rsci_d_30_23;
  logic [7:0]  chn_o_rsci_d_30_23_T ;
  logic [7:0]  chn_o_rsci_d_30_23_PREV_VAL1 ;
  logic [7:0]  chn_o_rsci_d_30_23_PREV_VAL2 ;
  logic [7:0]  chn_o_rsci_d_30_23_R ;
  logic [7:0]  chn_o_rsci_d_30_23_X ;
  logic [7:0]  chn_o_rsci_d_30_23_C ;
  logic [13:0] chn_o_rsci_d_30_23_S ;
  logic chn_o_rsci_d_30_23_t_flag ;
  logic chn_o_rsci_d_30_23_r_flag ;
  assign chn_o_rsci_d_30_23_S = 672 ;
  logic chn_o_rsci_d_31;
  logic  chn_o_rsci_d_31_T ;
  logic  chn_o_rsci_d_31_PREV_VAL1 ;
  logic  chn_o_rsci_d_31_PREV_VAL2 ;
  logic  chn_o_rsci_d_31_R ;
  logic  chn_o_rsci_d_31_X ;
  logic  chn_o_rsci_d_31_C ;
  logic [13:0] chn_o_rsci_d_31_S ;
  logic chn_o_rsci_d_31_t_flag ;
  logic chn_o_rsci_d_31_r_flag ;
  assign chn_o_rsci_d_31_S = 673 ;
  logic chn_o_rsci_iswt0;
  logic  chn_o_rsci_iswt0_T ;
  logic  chn_o_rsci_iswt0_PREV_VAL1 ;
  logic  chn_o_rsci_iswt0_PREV_VAL2 ;
  logic  chn_o_rsci_iswt0_R ;
  logic  chn_o_rsci_iswt0_X ;
  logic  chn_o_rsci_iswt0_C ;
  logic [13:0] chn_o_rsci_iswt0_S ;
  logic chn_o_rsci_iswt0_t_flag ;
  logic chn_o_rsci_iswt0_r_flag ;
  assign chn_o_rsci_iswt0_S = 674 ;
  input chn_o_rsci_oswt;
  input chn_o_rsci_oswt_T ;
  input [13:0] chn_o_rsci_oswt_S ;
  output chn_o_rsci_oswt_R ;
  output chn_o_rsci_oswt_X ;
  output chn_o_rsci_oswt_C ;
  output chn_o_rsci_oswt_unreg;
  logic chn_o_rsci_oswt_unreg ;
  output chn_o_rsci_oswt_unreg_T ;
  logic chn_o_rsci_oswt_unreg_T ;
  logic chn_o_rsci_oswt_unreg_R ;
  logic chn_o_rsci_oswt_unreg_C ;
  logic chn_o_rsci_oswt_unreg_X ;
  logic [13:0] chn_o_rsci_oswt_unreg_S ;
  input chn_o_rsci_oswt_unreg_R0 ;
  input chn_o_rsci_oswt_unreg_C0 ;
  input chn_o_rsci_oswt_unreg_X0 ;
  output [13:0] chn_o_rsci_oswt_unreg_S ;
  logic chn_o_rsci_wen_comp;
  logic chn_o_rsci_wen_comp_T ;
  logic chn_o_rsci_wen_comp_R ;
  logic chn_o_rsci_wen_comp_C ;
  logic chn_o_rsci_wen_comp_X ;
  logic [13:0] chn_o_rsci_wen_comp_S ;
  logic core_wen;
  logic core_wen_T ;
  logic core_wen_R ;
  logic core_wen_C ;
  logic core_wen_X ;
  logic [13:0] core_wen_S ;
  logic core_wten;
  logic core_wten_T ;
  logic core_wten_R ;
  logic core_wten_C ;
  logic core_wten_X ;
  logic [13:0] core_wten_S ;
  logic [1:0] fsm_output;
  logic [1:0] fsm_output_T ;
  logic [1:0] fsm_output_R ;
  logic [1:0] fsm_output_C ;
  logic [1:0] fsm_output_X ;
  logic [13:0] fsm_output_S ;
  logic [5:0] libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1;
  logic [5:0] libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_T ;
  logic [5:0] libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_R ;
  logic [5:0] libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_C ;
  logic [5:0] libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_X ;
  logic [13:0] libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_S ;
  logic main_stage_en_1;
  logic main_stage_en_1_T ;
  logic main_stage_en_1_R ;
  logic main_stage_en_1_C ;
  logic main_stage_en_1_X ;
  logic [13:0] main_stage_en_1_S ;
  logic main_stage_v_1;
  logic  main_stage_v_1_T ;
  logic  main_stage_v_1_PREV_VAL1 ;
  logic  main_stage_v_1_PREV_VAL2 ;
  logic  main_stage_v_1_R ;
  logic  main_stage_v_1_X ;
  logic  main_stage_v_1_C ;
  logic [13:0] main_stage_v_1_S ;
  logic main_stage_v_1_t_flag ;
  logic main_stage_v_1_r_flag ;
  assign main_stage_v_1_S = 675 ;
  logic main_stage_v_1_mx0c1;
  logic main_stage_v_1_mx0c1_T ;
  logic main_stage_v_1_mx0c1_R ;
  logic main_stage_v_1_mx0c1_C ;
  logic main_stage_v_1_mx0c1_X ;
  logic [13:0] main_stage_v_1_mx0c1_S ;
  logic main_stage_v_2;
  logic  main_stage_v_2_T ;
  logic  main_stage_v_2_PREV_VAL1 ;
  logic  main_stage_v_2_PREV_VAL2 ;
  logic  main_stage_v_2_R ;
  logic  main_stage_v_2_X ;
  logic  main_stage_v_2_C ;
  logic [13:0] main_stage_v_2_S ;
  logic main_stage_v_2_t_flag ;
  logic main_stage_v_2_r_flag ;
  assign main_stage_v_2_S = 676 ;
  logic main_stage_v_2_mx0c1;
  logic main_stage_v_2_mx0c1_T ;
  logic main_stage_v_2_mx0c1_R ;
  logic main_stage_v_2_mx0c1_C ;
  logic main_stage_v_2_mx0c1_X ;
  logic [13:0] main_stage_v_2_mx0c1_S ;
  logic main_stage_v_3;
  logic  main_stage_v_3_T ;
  logic  main_stage_v_3_PREV_VAL1 ;
  logic  main_stage_v_3_PREV_VAL2 ;
  logic  main_stage_v_3_R ;
  logic  main_stage_v_3_X ;
  logic  main_stage_v_3_C ;
  logic [13:0] main_stage_v_3_S ;
  logic main_stage_v_3_t_flag ;
  logic main_stage_v_3_r_flag ;
  assign main_stage_v_3_S = 677 ;
  logic main_stage_v_3_mx0c1;
  logic main_stage_v_3_mx0c1_T ;
  logic main_stage_v_3_mx0c1_R ;
  logic main_stage_v_3_mx0c1_C ;
  logic main_stage_v_3_mx0c1_X ;
  logic [13:0] main_stage_v_3_mx0c1_S ;
  logic mux_10_nl;
  logic mux_10_nl_T ;
  logic mux_10_nl_R ;
  logic mux_10_nl_C ;
  logic mux_10_nl_X ;
  logic [13:0] mux_10_nl_S ;
  logic mux_13_cse;
  logic mux_13_cse_T ;
  logic mux_13_cse_R ;
  logic mux_13_cse_C ;
  logic mux_13_cse_X ;
  logic [13:0] mux_13_cse_S ;
  logic mux_22_nl;
  logic mux_22_nl_T ;
  logic mux_22_nl_R ;
  logic mux_22_nl_C ;
  logic mux_22_nl_X ;
  logic [13:0] mux_22_nl_S ;
  logic mux_23_nl;
  logic mux_23_nl_T ;
  logic mux_23_nl_R ;
  logic mux_23_nl_C ;
  logic mux_23_nl_X ;
  logic [13:0] mux_23_nl_S ;
  logic mux_24_nl;
  logic mux_24_nl_T ;
  logic mux_24_nl_R ;
  logic mux_24_nl_C ;
  logic mux_24_nl_X ;
  logic [13:0] mux_24_nl_S ;
  logic mux_25_nl;
  logic mux_25_nl_T ;
  logic mux_25_nl_R ;
  logic mux_25_nl_C ;
  logic mux_25_nl_X ;
  logic [13:0] mux_25_nl_S ;
  logic mux_27_nl;
  logic mux_27_nl_T ;
  logic mux_27_nl_R ;
  logic mux_27_nl_C ;
  logic mux_27_nl_X ;
  logic [13:0] mux_27_nl_S ;
  logic mux_28_nl;
  logic mux_28_nl_T ;
  logic mux_28_nl_R ;
  logic mux_28_nl_C ;
  logic mux_28_nl_X ;
  logic [13:0] mux_28_nl_S ;
  logic mux_4_cse;
  logic mux_4_cse_T ;
  logic mux_4_cse_R ;
  logic mux_4_cse_C ;
  logic mux_4_cse_X ;
  logic [13:0] mux_4_cse_S ;
  logic mux_6_nl;
  logic mux_6_nl_T ;
  logic mux_6_nl_R ;
  logic mux_6_nl_C ;
  logic mux_6_nl_X ;
  logic [13:0] mux_6_nl_S ;
  logic mux_7_nl;
  logic mux_7_nl_T ;
  logic mux_7_nl_R ;
  logic mux_7_nl_C ;
  logic mux_7_nl_X ;
  logic [13:0] mux_7_nl_S ;
  logic mux_8_nl;
  logic mux_8_nl_T ;
  logic mux_8_nl_R ;
  logic mux_8_nl_C ;
  logic mux_8_nl_X ;
  logic [13:0] mux_8_nl_S ;
  logic mux_9_nl;
  logic mux_9_nl_T ;
  logic mux_9_nl_R ;
  logic mux_9_nl_C ;
  logic mux_9_nl_X ;
  logic [13:0] mux_9_nl_S ;
  logic mux_tmp_5;
  logic mux_tmp_5_T ;
  logic mux_tmp_5_R ;
  logic mux_tmp_5_C ;
  logic mux_tmp_5_X ;
  logic [13:0] mux_tmp_5_S ;
  logic [23:0] nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_a;
  logic [23:0] nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_a_T ;
  logic [23:0] nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_a_R ;
  logic [23:0] nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_a_C ;
  logic [23:0] nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_a_X ;
  logic [13:0] nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_a_S ;
  logic [8:0] nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s;
  logic [8:0] nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s_T ;
  logic [8:0] nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s_R ;
  logic [8:0] nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s_C ;
  logic [8:0] nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s_X ;
  logic [13:0] nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s_S ;
  logic [8:0] nl_FpAdd_8U_23U_a_left_shift_acc_nl;
  logic [8:0] nl_FpAdd_8U_23U_a_left_shift_acc_nl_T ;
  logic [8:0] nl_FpAdd_8U_23U_a_left_shift_acc_nl_R ;
  logic [8:0] nl_FpAdd_8U_23U_a_left_shift_acc_nl_C ;
  logic [8:0] nl_FpAdd_8U_23U_a_left_shift_acc_nl_X ;
  logic [13:0] nl_FpAdd_8U_23U_a_left_shift_acc_nl_S ;
  logic [8:0] nl_FpAdd_8U_23U_a_right_shift_qelse_acc_nl;
  logic [8:0] nl_FpAdd_8U_23U_a_right_shift_qelse_acc_nl_T ;
  logic [8:0] nl_FpAdd_8U_23U_a_right_shift_qelse_acc_nl_R ;
  logic [8:0] nl_FpAdd_8U_23U_a_right_shift_qelse_acc_nl_C ;
  logic [8:0] nl_FpAdd_8U_23U_a_right_shift_qelse_acc_nl_X ;
  logic [13:0] nl_FpAdd_8U_23U_a_right_shift_qelse_acc_nl_S ;
  logic [51:0] nl_FpAdd_8U_23U_asn_4_mx0w1;
  logic [51:0] nl_FpAdd_8U_23U_asn_4_mx0w1_T ;
  logic [51:0] nl_FpAdd_8U_23U_asn_4_mx0w1_R ;
  logic [51:0] nl_FpAdd_8U_23U_asn_4_mx0w1_C ;
  logic [51:0] nl_FpAdd_8U_23U_asn_4_mx0w1_X ;
  logic [13:0] nl_FpAdd_8U_23U_asn_4_mx0w1_S ;
  logic [50:0] nl_FpAdd_8U_23U_asn_5_mx0w0;
  logic [50:0] nl_FpAdd_8U_23U_asn_5_mx0w0_T ;
  logic [50:0] nl_FpAdd_8U_23U_asn_5_mx0w0_R ;
  logic [50:0] nl_FpAdd_8U_23U_asn_5_mx0w0_C ;
  logic [50:0] nl_FpAdd_8U_23U_asn_5_mx0w0_X ;
  logic [13:0] nl_FpAdd_8U_23U_asn_5_mx0w0_S ;
  logic [23:0] nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_a;
  logic [23:0] nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_a_T ;
  logic [23:0] nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_a_R ;
  logic [23:0] nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_a_C ;
  logic [23:0] nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_a_X ;
  logic [13:0] nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_a_S ;
  logic [8:0] nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s;
  logic [8:0] nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s_T ;
  logic [8:0] nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s_R ;
  logic [8:0] nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s_C ;
  logic [8:0] nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s_X ;
  logic [13:0] nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s_S ;
  logic [8:0] nl_FpAdd_8U_23U_b_left_shift_acc_nl;
  logic [8:0] nl_FpAdd_8U_23U_b_left_shift_acc_nl_T ;
  logic [8:0] nl_FpAdd_8U_23U_b_left_shift_acc_nl_R ;
  logic [8:0] nl_FpAdd_8U_23U_b_left_shift_acc_nl_C ;
  logic [8:0] nl_FpAdd_8U_23U_b_left_shift_acc_nl_X ;
  logic [13:0] nl_FpAdd_8U_23U_b_left_shift_acc_nl_S ;
  logic [8:0] nl_FpAdd_8U_23U_b_right_shift_qif_acc_nl;
  logic [8:0] nl_FpAdd_8U_23U_b_right_shift_qif_acc_nl_T ;
  logic [8:0] nl_FpAdd_8U_23U_b_right_shift_qif_acc_nl_R ;
  logic [8:0] nl_FpAdd_8U_23U_b_right_shift_qif_acc_nl_C ;
  logic [8:0] nl_FpAdd_8U_23U_b_right_shift_qif_acc_nl_X ;
  logic [13:0] nl_FpAdd_8U_23U_b_right_shift_qif_acc_nl_S ;
  logic [8:0] nl_FpAdd_8U_23U_if_3_if_acc_1_nl;
  logic [8:0] nl_FpAdd_8U_23U_if_3_if_acc_1_nl_T ;
  logic [8:0] nl_FpAdd_8U_23U_if_3_if_acc_1_nl_R ;
  logic [8:0] nl_FpAdd_8U_23U_if_3_if_acc_1_nl_C ;
  logic [8:0] nl_FpAdd_8U_23U_if_3_if_acc_1_nl_X ;
  logic [13:0] nl_FpAdd_8U_23U_if_3_if_acc_1_nl_S ;
  logic [8:0] nl_FpAdd_8U_23U_if_3_if_acc_nl;
  logic [8:0] nl_FpAdd_8U_23U_if_3_if_acc_nl_T ;
  logic [8:0] nl_FpAdd_8U_23U_if_3_if_acc_nl_R ;
  logic [8:0] nl_FpAdd_8U_23U_if_3_if_acc_nl_C ;
  logic [8:0] nl_FpAdd_8U_23U_if_3_if_acc_nl_X ;
  logic [13:0] nl_FpAdd_8U_23U_if_3_if_acc_nl_S ;
  logic [8:0] nl_FpAdd_8U_23U_if_4_if_acc_1_nl;
  logic [8:0] nl_FpAdd_8U_23U_if_4_if_acc_1_nl_T ;
  logic [8:0] nl_FpAdd_8U_23U_if_4_if_acc_1_nl_R ;
  logic [8:0] nl_FpAdd_8U_23U_if_4_if_acc_1_nl_C ;
  logic [8:0] nl_FpAdd_8U_23U_if_4_if_acc_1_nl_X ;
  logic [13:0] nl_FpAdd_8U_23U_if_4_if_acc_1_nl_S ;
  logic [8:0] nl_FpAdd_8U_23U_if_4_if_acc_nl;
  logic [8:0] nl_FpAdd_8U_23U_if_4_if_acc_nl_T ;
  logic [8:0] nl_FpAdd_8U_23U_if_4_if_acc_nl_R ;
  logic [8:0] nl_FpAdd_8U_23U_if_4_if_acc_nl_C ;
  logic [8:0] nl_FpAdd_8U_23U_if_4_if_acc_nl_X ;
  logic [13:0] nl_FpAdd_8U_23U_if_4_if_acc_nl_S ;
  logic [10:0] nl_FpAdd_8U_23U_is_a_greater_acc_1_nl;
  logic [10:0] nl_FpAdd_8U_23U_is_a_greater_acc_1_nl_T ;
  logic [10:0] nl_FpAdd_8U_23U_is_a_greater_acc_1_nl_R ;
  logic [10:0] nl_FpAdd_8U_23U_is_a_greater_acc_1_nl_C ;
  logic [10:0] nl_FpAdd_8U_23U_is_a_greater_acc_1_nl_X ;
  logic [13:0] nl_FpAdd_8U_23U_is_a_greater_acc_1_nl_S ;
  logic [25:0] nl_FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl;
  logic [25:0] nl_FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_T ;
  logic [25:0] nl_FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R ;
  logic [25:0] nl_FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C ;
  logic [25:0] nl_FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X ;
  logic [13:0] nl_FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_S ;
  logic [23:0] nl_FpMantRNE_49U_24U_else_acc_nl;
  logic [23:0] nl_FpMantRNE_49U_24U_else_acc_nl_T ;
  logic [23:0] nl_FpMantRNE_49U_24U_else_acc_nl_R ;
  logic [23:0] nl_FpMantRNE_49U_24U_else_acc_nl_C ;
  logic [23:0] nl_FpMantRNE_49U_24U_else_acc_nl_X ;
  logic [13:0] nl_FpMantRNE_49U_24U_else_acc_nl_S ;
  logic [10:0] nl_FpNormalize_8U_49U_acc_nl;
  logic [10:0] nl_FpNormalize_8U_49U_acc_nl_T ;
  logic [10:0] nl_FpNormalize_8U_49U_acc_nl_R ;
  logic [10:0] nl_FpNormalize_8U_49U_acc_nl_C ;
  logic [10:0] nl_FpNormalize_8U_49U_acc_nl_X ;
  logic [13:0] nl_FpNormalize_8U_49U_acc_nl_S ;
  logic [9:0] nl_FpNormalize_8U_49U_else_acc_nl;
  logic [9:0] nl_FpNormalize_8U_49U_else_acc_nl_T ;
  logic [9:0] nl_FpNormalize_8U_49U_else_acc_nl_R ;
  logic [9:0] nl_FpNormalize_8U_49U_else_acc_nl_C ;
  logic [9:0] nl_FpNormalize_8U_49U_else_acc_nl_X ;
  logic [13:0] nl_FpNormalize_8U_49U_else_acc_nl_S ;
  logic [48:0] nl_FpNormalize_8U_49U_else_lshift_rg_a;
  logic [48:0] nl_FpNormalize_8U_49U_else_lshift_rg_a_T ;
  logic [48:0] nl_FpNormalize_8U_49U_else_lshift_rg_a_R ;
  logic [48:0] nl_FpNormalize_8U_49U_else_lshift_rg_a_C ;
  logic [48:0] nl_FpNormalize_8U_49U_else_lshift_rg_a_X ;
  logic [13:0] nl_FpNormalize_8U_49U_else_lshift_rg_a_S ;
  logic [31:0] nl_HLS_fp32_sub_core_chn_o_rsci_inst_chn_o_rsci_d;
  logic [31:0] nl_HLS_fp32_sub_core_chn_o_rsci_inst_chn_o_rsci_d_T ;
  logic [31:0] nl_HLS_fp32_sub_core_chn_o_rsci_inst_chn_o_rsci_d_R ;
  logic [31:0] nl_HLS_fp32_sub_core_chn_o_rsci_inst_chn_o_rsci_d_C ;
  logic [31:0] nl_HLS_fp32_sub_core_chn_o_rsci_inst_chn_o_rsci_d_X ;
  logic [13:0] nl_HLS_fp32_sub_core_chn_o_rsci_inst_chn_o_rsci_d_S ;
  logic [48:0] nl_leading_sign_49_0_rg_mantissa;
  logic [48:0] nl_leading_sign_49_0_rg_mantissa_T ;
  logic [48:0] nl_leading_sign_49_0_rg_mantissa_R ;
  logic [48:0] nl_leading_sign_49_0_rg_mantissa_C ;
  logic [48:0] nl_leading_sign_49_0_rg_mantissa_X ;
  logic [13:0] nl_leading_sign_49_0_rg_mantissa_S ;
  logic nor_26_nl;
  logic nor_26_nl_T ;
  logic nor_26_nl_R ;
  logic nor_26_nl_C ;
  logic nor_26_nl_X ;
  logic [13:0] nor_26_nl_S ;
  logic nor_27_nl;
  logic nor_27_nl_T ;
  logic nor_27_nl_R ;
  logic nor_27_nl_C ;
  logic nor_27_nl_X ;
  logic [13:0] nor_27_nl_S ;
  logic nor_28_nl;
  logic nor_28_nl_T ;
  logic nor_28_nl_R ;
  logic nor_28_nl_C ;
  logic nor_28_nl_X ;
  logic [13:0] nor_28_nl_S ;
  logic nor_29_nl;
  logic nor_29_nl_T ;
  logic nor_29_nl_R ;
  logic nor_29_nl_C ;
  logic nor_29_nl_X ;
  logic [13:0] nor_29_nl_S ;
  logic nor_31_nl;
  logic nor_31_nl_T ;
  logic nor_31_nl_R ;
  logic nor_31_nl_C ;
  logic nor_31_nl_X ;
  logic [13:0] nor_31_nl_S ;
  logic nor_32_nl;
  logic nor_32_nl_T ;
  logic nor_32_nl_R ;
  logic nor_32_nl_C ;
  logic nor_32_nl_X ;
  logic [13:0] nor_32_nl_S ;
  logic nor_34_nl;
  logic nor_34_nl_T ;
  logic nor_34_nl_R ;
  logic nor_34_nl_C ;
  logic nor_34_nl_X ;
  logic [13:0] nor_34_nl_S ;
  logic nor_36_cse;
  logic nor_36_cse_T ;
  logic nor_36_cse_R ;
  logic nor_36_cse_C ;
  logic nor_36_cse_X ;
  logic [13:0] nor_36_cse_S ;
  logic nor_37_nl;
  logic nor_37_nl_T ;
  logic nor_37_nl_R ;
  logic nor_37_nl_C ;
  logic nor_37_nl_X ;
  logic [13:0] nor_37_nl_S ;
  logic nor_38_nl;
  logic nor_38_nl_T ;
  logic nor_38_nl_R ;
  logic nor_38_nl_C ;
  logic nor_38_nl_X ;
  logic [13:0] nor_38_nl_S ;
  logic nor_tmp_1;
  logic nor_tmp_1_T ;
  logic nor_tmp_1_R ;
  logic nor_tmp_1_C ;
  logic nor_tmp_1_X ;
  logic [13:0] nor_tmp_1_S ;
  logic nor_tmp_11;
  logic nor_tmp_11_T ;
  logic nor_tmp_11_R ;
  logic nor_tmp_11_C ;
  logic nor_tmp_11_X ;
  logic [13:0] nor_tmp_11_S ;
  input nvdla_core_clk;
  input nvdla_core_clk_T ;
  input [13:0] nvdla_core_clk_S ;
  output nvdla_core_clk_R ;
  output nvdla_core_clk_X ;
  output nvdla_core_clk_C ;
  input nvdla_core_rstn;
  input nvdla_core_rstn_T ;
  input [13:0] nvdla_core_rstn_S ;
  output nvdla_core_rstn_R ;
  output nvdla_core_rstn_X ;
  output nvdla_core_rstn_C ;
  logic or_10_nl;
  logic or_10_nl_T ;
  logic or_10_nl_R ;
  logic or_10_nl_C ;
  logic or_10_nl_X ;
  logic [13:0] or_10_nl_S ;
  logic or_cse;
  logic or_cse_T ;
  logic or_cse_R ;
  logic or_cse_C ;
  logic or_cse_X ;
  logic [13:0] or_cse_S ;
  logic or_tmp_16;
  logic or_tmp_16_T ;
  logic or_tmp_16_R ;
  logic or_tmp_16_C ;
  logic or_tmp_16_X ;
  logic [13:0] or_tmp_16_S ;
  logic or_tmp_29;
  logic or_tmp_29_T ;
  logic or_tmp_29_R ;
  logic or_tmp_29_C ;
  logic or_tmp_29_X ;
  logic [13:0] or_tmp_29_S ;
  logic or_tmp_3;
  logic or_tmp_3_T ;
  logic or_tmp_3_R ;
  logic or_tmp_3_C ;
  logic or_tmp_3_X ;
  logic [13:0] or_tmp_3_S ;
  logic or_tmp_35;
  logic or_tmp_35_T ;
  logic or_tmp_35_R ;
  logic or_tmp_35_C ;
  logic or_tmp_35_X ;
  logic [13:0] or_tmp_35_S ;
  logic reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse;
  logic  reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_T ;
  logic  reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_PREV_VAL1 ;
  logic  reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_PREV_VAL2 ;
  logic  reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_R ;
  logic  reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_X ;
  logic  reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_C ;
  logic [13:0] reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_S ;
  logic reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_t_flag ;
  logic reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_r_flag ;
  assign reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_S = 678 ;
  logic reg_chn_a_rsci_iswt0_cse;
  logic  reg_chn_a_rsci_iswt0_cse_T ;
  logic  reg_chn_a_rsci_iswt0_cse_PREV_VAL1 ;
  logic  reg_chn_a_rsci_iswt0_cse_PREV_VAL2 ;
  logic  reg_chn_a_rsci_iswt0_cse_R ;
  logic  reg_chn_a_rsci_iswt0_cse_X ;
  logic  reg_chn_a_rsci_iswt0_cse_C ;
  logic [13:0] reg_chn_a_rsci_iswt0_cse_S ;
  logic reg_chn_a_rsci_iswt0_cse_t_flag ;
  logic reg_chn_a_rsci_iswt0_cse_r_flag ;
  assign reg_chn_a_rsci_iswt0_cse_S = 679 ;
  logic reg_chn_a_rsci_ld_core_psct_cse;
  logic  reg_chn_a_rsci_ld_core_psct_cse_T ;
  logic  reg_chn_a_rsci_ld_core_psct_cse_PREV_VAL1 ;
  logic  reg_chn_a_rsci_ld_core_psct_cse_PREV_VAL2 ;
  logic  reg_chn_a_rsci_ld_core_psct_cse_R ;
  logic  reg_chn_a_rsci_ld_core_psct_cse_X ;
  logic  reg_chn_a_rsci_ld_core_psct_cse_C ;
  logic [13:0] reg_chn_a_rsci_ld_core_psct_cse_S ;
  logic reg_chn_a_rsci_ld_core_psct_cse_t_flag ;
  logic reg_chn_a_rsci_ld_core_psct_cse_r_flag ;
  assign reg_chn_a_rsci_ld_core_psct_cse_S = 680 ;
  logic reg_chn_o_rsci_ld_core_psct_cse;
  logic  reg_chn_o_rsci_ld_core_psct_cse_T ;
  logic  reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL1 ;
  logic  reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL2 ;
  logic  reg_chn_o_rsci_ld_core_psct_cse_R ;
  logic  reg_chn_o_rsci_ld_core_psct_cse_X ;
  logic  reg_chn_o_rsci_ld_core_psct_cse_C ;
  logic [13:0] reg_chn_o_rsci_ld_core_psct_cse_S ;
  logic reg_chn_o_rsci_ld_core_psct_cse_t_flag ;
  logic reg_chn_o_rsci_ld_core_psct_cse_r_flag ;
  assign reg_chn_o_rsci_ld_core_psct_cse_S = 681 ;
  logic [7:0] fangyuan0;
  logic [7:0] fangyuan0_T ;
  logic [7:0] fangyuan0_R ;
  logic [7:0] fangyuan0_C ;
  logic [7:0] fangyuan0_X ;
  assign fangyuan0 = { 1'b1, _097_ };
  assign fangyuan0_T = {  1'h0 , _097__T  };
  logic [13:0] fangyuan0_S ;
  assign fangyuan0_S = 0 ;
  logic [6:0] _097__R0 ;
  logic [6:0] _097__X0 ;
  logic [6:0] _097__C0 ;
  assign _097__R0 = fangyuan0_R [6:0] ;
  assign _097__X0 = fangyuan0_X [6:0] ;
  assign _097__C0 = fangyuan0_C [6:0] ;

  assign FpAdd_8U_23U_a_left_shift_acc_nl = fangyuan0 + 4'b1101;
  assign FpAdd_8U_23U_a_left_shift_acc_nl_S = 0 ;
  logic [7:0] fangyuan0_C0 ;
  logic [7:0] fangyuan0_R0 ;
  logic [7:0] fangyuan0_X0 ;
  assign FpAdd_8U_23U_a_left_shift_acc_nl_T = fangyuan0_T ;
  assign fangyuan0_C0 = FpAdd_8U_23U_a_left_shift_acc_nl_C ;
  assign fangyuan0_R0 = FpAdd_8U_23U_a_left_shift_acc_nl_R ;
  assign fangyuan0_X0 = FpAdd_8U_23U_a_left_shift_acc_nl_X ;
  logic [7:0] fangyuan1;
  logic [7:0] fangyuan1_T ;
  logic [7:0] fangyuan1_R ;
  logic [7:0] fangyuan1_C ;
  logic [7:0] fangyuan1_X ;
  assign fangyuan1 = { 1'b1, _098_ };
  assign fangyuan1_T = {  1'h0 , _098__T  };
  logic [13:0] fangyuan1_S ;
  assign fangyuan1_S = 0 ;
  logic [6:0] _098__R0 ;
  logic [6:0] _098__X0 ;
  logic [6:0] _098__C0 ;
  assign _098__R0 = fangyuan1_R [6:0] ;
  assign _098__X0 = fangyuan1_X [6:0] ;
  assign _098__C0 = fangyuan1_C [6:0] ;

  assign FpAdd_8U_23U_b_left_shift_acc_nl = fangyuan1 + 4'b1101;
  assign FpAdd_8U_23U_b_left_shift_acc_nl_S = 0 ;
  logic [7:0] fangyuan1_C0 ;
  logic [7:0] fangyuan1_R0 ;
  logic [7:0] fangyuan1_X0 ;
  assign FpAdd_8U_23U_b_left_shift_acc_nl_T = fangyuan1_T ;
  assign fangyuan1_C0 = FpAdd_8U_23U_b_left_shift_acc_nl_C ;
  assign fangyuan1_R0 = FpAdd_8U_23U_b_left_shift_acc_nl_R ;
  assign fangyuan1_X0 = FpAdd_8U_23U_b_left_shift_acc_nl_X ;
  logic [8:0] fangyuan2;
  logic [8:0] fangyuan2_T ;
  logic [8:0] fangyuan2_R ;
  logic [8:0] fangyuan2_C ;
  logic [8:0] fangyuan2_X ;
  assign fangyuan2 = { 1'b1, chn_b_rsci_d_mxwt[30:23] };
  assign fangyuan2_T = {  1'h0 , chn_b_rsci_d_mxwt_T [30:23]  };
  logic [13:0] fangyuan2_S ;
  assign fangyuan2_S = 0 ;
  logic [31:0] chn_b_rsci_d_mxwt_R0 ;
  logic [31:0] chn_b_rsci_d_mxwt_X0 ;
  logic [31:0] chn_b_rsci_d_mxwt_C0 ;
  assign chn_b_rsci_d_mxwt_R0 [30:23] = fangyuan2_R [7:0] ;
  assign chn_b_rsci_d_mxwt_X0 [30:23] = fangyuan2_X [7:0] ;
  assign chn_b_rsci_d_mxwt_C0 [30:23] = fangyuan2_C [7:0] ;

  assign _047_ = fangyuan2 + _002_;
  assign _047__S = 0 ;
  logic [8:0] fangyuan2_C0 ;
  logic [8:0] fangyuan2_R0 ;
  logic [8:0] fangyuan2_X0 ;
  logic [7:0] _002__C0 ;
  logic [7:0] _002__R0 ;
  logic [7:0] _002__X0 ;
  assign _047__T = fangyuan2_T | _002__T ;
  assign fangyuan2_C0 = _047__C ;
  assign fangyuan2_X0 = _047__X ;
  assign _002__C0 = _047__C ;
  assign _002__X0 = _047__X ;
  assign fangyuan2_R0 = _047__R | ( _047__C & _002__T );
  assign _002__R0 = _047__R | ( _047__C & fangyuan2_T );
  assign FpAdd_8U_23U_is_a_greater_acc_1_nl = _047_ + 1'b1;
  assign FpAdd_8U_23U_is_a_greater_acc_1_nl_S = 0 ;
  logic [8:0] _047__C0 ;
  logic [8:0] _047__R0 ;
  logic [8:0] _047__X0 ;
  assign FpAdd_8U_23U_is_a_greater_acc_1_nl_T = _047__T ;
  assign _047__C0 = FpAdd_8U_23U_is_a_greater_acc_1_nl_C ;
  assign _047__R0 = FpAdd_8U_23U_is_a_greater_acc_1_nl_R ;
  assign _047__X0 = FpAdd_8U_23U_is_a_greater_acc_1_nl_X ;
  assign FpAdd_8U_23U_asn_5_mx0w0 = FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0 + FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0;
  assign FpAdd_8U_23U_asn_5_mx0w0_S = 0 ;
  logic [48:0] FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_C0 ;
  logic [48:0] FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_R0 ;
  logic [48:0] FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_X0 ;
  logic [48:0] FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_C0 ;
  logic [48:0] FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_R0 ;
  logic [48:0] FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_X0 ;
  assign FpAdd_8U_23U_asn_5_mx0w0_T = FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_T | FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_T ;
  assign FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_C0 = FpAdd_8U_23U_asn_5_mx0w0_C ;
  assign FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_X0 = FpAdd_8U_23U_asn_5_mx0w0_X ;
  assign FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_C0 = FpAdd_8U_23U_asn_5_mx0w0_C ;
  assign FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_X0 = FpAdd_8U_23U_asn_5_mx0w0_X ;
  assign FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_R0 = FpAdd_8U_23U_asn_5_mx0w0_R | ( FpAdd_8U_23U_asn_5_mx0w0_C & FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_T );
  assign FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_R0 = FpAdd_8U_23U_asn_5_mx0w0_R | ( FpAdd_8U_23U_asn_5_mx0w0_C & FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_T );
  logic [49:0] fangyuan3;
  logic [49:0] fangyuan3_T ;
  logic [49:0] fangyuan3_R ;
  logic [49:0] fangyuan3_C ;
  logic [49:0] fangyuan3_X ;
  assign fangyuan3 = { 1'b1, _108_ };
  assign fangyuan3_T = {  1'h0 , _108__T  };
  logic [13:0] fangyuan3_S ;
  assign fangyuan3_S = 0 ;
  logic [48:0] _108__R0 ;
  logic [48:0] _108__X0 ;
  logic [48:0] _108__C0 ;
  assign _108__R0 = fangyuan3_R [48:0] ;
  assign _108__X0 = fangyuan3_X [48:0] ;
  assign _108__C0 = fangyuan3_C [48:0] ;

  assign _048_ = fangyuan3 + FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0;
  assign _048__S = 0 ;
  logic [49:0] fangyuan3_C0 ;
  logic [49:0] fangyuan3_R0 ;
  logic [49:0] fangyuan3_X0 ;
  logic [48:0] FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_C1 ;
  logic [48:0] FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_R1 ;
  logic [48:0] FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_X1 ;
  assign _048__T = fangyuan3_T | FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_T ;
  assign fangyuan3_C0 = _048__C ;
  assign fangyuan3_X0 = _048__X ;
  assign FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_C1 = _048__C ;
  assign FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_X1 = _048__X ;
  assign fangyuan3_R0 = _048__R | ( _048__C & FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_T );
  assign FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_R1 = _048__R | ( _048__C & fangyuan3_T );
  assign FpAdd_8U_23U_asn_4_mx0w1 = _048_ + 1'b1;
  assign FpAdd_8U_23U_asn_4_mx0w1_S = 0 ;
  logic [49:0] _048__C0 ;
  logic [49:0] _048__R0 ;
  logic [49:0] _048__X0 ;
  assign FpAdd_8U_23U_asn_4_mx0w1_T = _048__T ;
  assign _048__C0 = FpAdd_8U_23U_asn_4_mx0w1_C ;
  assign _048__R0 = FpAdd_8U_23U_asn_4_mx0w1_R ;
  assign _048__X0 = FpAdd_8U_23U_asn_4_mx0w1_X ;
  logic [7:0] fangyuan4;
  logic [7:0] fangyuan4_T ;
  logic [7:0] fangyuan4_R ;
  logic [7:0] fangyuan4_C ;
  logic [7:0] fangyuan4_X ;
  assign fangyuan4 = { 1'b1, FpAdd_8U_23U_qr_lpi_1_dfm_6[7:1] };
  assign fangyuan4_T = {  1'h0 , FpAdd_8U_23U_qr_lpi_1_dfm_6_T [7:1]  };
  logic [13:0] fangyuan4_S ;
  assign fangyuan4_S = 0 ;
  logic [7:0] FpAdd_8U_23U_qr_lpi_1_dfm_6_R0 ;
  logic [7:0] FpAdd_8U_23U_qr_lpi_1_dfm_6_X0 ;
  logic [7:0] FpAdd_8U_23U_qr_lpi_1_dfm_6_C0 ;
  assign FpAdd_8U_23U_qr_lpi_1_dfm_6_R0 [7:1] = fangyuan4_R [6:0] ;
  assign FpAdd_8U_23U_qr_lpi_1_dfm_6_X0 [7:1] = fangyuan4_X [6:0] ;
  assign FpAdd_8U_23U_qr_lpi_1_dfm_6_C0 [7:1] = fangyuan4_C [6:0] ;

  assign FpAdd_8U_23U_if_3_if_acc_1_nl = fangyuan4 + 1'b1;
  assign FpAdd_8U_23U_if_3_if_acc_1_nl_S = 0 ;
  logic [7:0] fangyuan4_C0 ;
  logic [7:0] fangyuan4_R0 ;
  logic [7:0] fangyuan4_X0 ;
  assign FpAdd_8U_23U_if_3_if_acc_1_nl_T = fangyuan4_T ;
  assign fangyuan4_C0 = FpAdd_8U_23U_if_3_if_acc_1_nl_C ;
  assign fangyuan4_R0 = FpAdd_8U_23U_if_3_if_acc_1_nl_R ;
  assign fangyuan4_X0 = FpAdd_8U_23U_if_3_if_acc_1_nl_X ;
  logic [7:0] fangyuan5;
  logic [7:0] fangyuan5_T ;
  logic [7:0] fangyuan5_R ;
  logic [7:0] fangyuan5_C ;
  logic [7:0] fangyuan5_X ;
  assign fangyuan5 = { 2'b11, _109_ };
  assign fangyuan5_T = {  2'h0 , _109__T  };
  logic [13:0] fangyuan5_S ;
  assign fangyuan5_S = 0 ;
  logic [5:0] _109__R0 ;
  logic [5:0] _109__X0 ;
  logic [5:0] _109__C0 ;
  assign _109__R0 = fangyuan5_R [5:0] ;
  assign _109__X0 = fangyuan5_X [5:0] ;
  assign _109__C0 = fangyuan5_C [5:0] ;

  assign _049_[7:0] = FpAdd_8U_23U_qr_lpi_1_dfm_6 + fangyuan5;
  assign _049__S = 0 ;
  assign { FpAdd_8U_23U_qr_lpi_1_dfm_6_R0 [0] } = 0;
  assign { FpAdd_8U_23U_qr_lpi_1_dfm_6_X0 [0] } = 0;
  assign { FpAdd_8U_23U_qr_lpi_1_dfm_6_C0 [0] } = 0;
  logic [7:0] FpAdd_8U_23U_qr_lpi_1_dfm_6_C1 ;
  logic [7:0] FpAdd_8U_23U_qr_lpi_1_dfm_6_R1 ;
  logic [7:0] FpAdd_8U_23U_qr_lpi_1_dfm_6_X1 ;
  logic [7:0] fangyuan5_C0 ;
  logic [7:0] fangyuan5_R0 ;
  logic [7:0] fangyuan5_X0 ;
  assign _049__T [7:0] = FpAdd_8U_23U_qr_lpi_1_dfm_6_T | fangyuan5_T ;
  assign FpAdd_8U_23U_qr_lpi_1_dfm_6_C1 = _049__C [7:0] ;
  assign FpAdd_8U_23U_qr_lpi_1_dfm_6_X1 = _049__X [7:0] ;
  assign fangyuan5_C0 = _049__C [7:0] ;
  assign fangyuan5_X0 = _049__X [7:0] ;
  assign FpAdd_8U_23U_qr_lpi_1_dfm_6_R1 = _049__R [7:0] | ( _049__C [7:0] & fangyuan5_T );
  assign fangyuan5_R0 = _049__R [7:0] | ( _049__C [7:0] & FpAdd_8U_23U_qr_lpi_1_dfm_6_T );
  assign FpNormalize_8U_49U_else_acc_nl = _049_[7:0] + 1'b1;
  assign FpNormalize_8U_49U_else_acc_nl_S = 0 ;
  logic [9:0] _049__C0 ;
  logic [9:0] _049__R0 ;
  logic [9:0] _049__X0 ;
  assign FpNormalize_8U_49U_else_acc_nl_T = _049__T [7:0] ;
  assign _049__C0 [7:0] = FpNormalize_8U_49U_else_acc_nl_C ;
  assign _049__R0 [7:0] = FpNormalize_8U_49U_else_acc_nl_R ;
  assign _049__X0 [7:0] = FpNormalize_8U_49U_else_acc_nl_X ;
  assign FpAdd_8U_23U_if_3_if_acc_nl = FpAdd_8U_23U_qr_lpi_1_dfm_6 + 1'b1;
  assign FpAdd_8U_23U_if_3_if_acc_nl_S = 0 ;
  logic [7:0] FpAdd_8U_23U_qr_lpi_1_dfm_6_C2 ;
  logic [7:0] FpAdd_8U_23U_qr_lpi_1_dfm_6_R2 ;
  logic [7:0] FpAdd_8U_23U_qr_lpi_1_dfm_6_X2 ;
  assign FpAdd_8U_23U_if_3_if_acc_nl_T = FpAdd_8U_23U_qr_lpi_1_dfm_6_T ;
  assign FpAdd_8U_23U_qr_lpi_1_dfm_6_C2 = FpAdd_8U_23U_if_3_if_acc_nl_C ;
  assign FpAdd_8U_23U_qr_lpi_1_dfm_6_R2 = FpAdd_8U_23U_if_3_if_acc_nl_R ;
  assign FpAdd_8U_23U_qr_lpi_1_dfm_6_X2 = FpAdd_8U_23U_if_3_if_acc_nl_X ;
  logic [7:0] fangyuan6;
  logic [7:0] fangyuan6_T ;
  logic [7:0] fangyuan6_R ;
  logic [7:0] fangyuan6_C ;
  logic [7:0] fangyuan6_X ;
  assign fangyuan6 = { 1'b1, FpAdd_8U_23U_o_expo_lpi_1_dfm_2[7:1] };
  assign fangyuan6_T = {  1'h0 , FpAdd_8U_23U_o_expo_lpi_1_dfm_2_T [7:1]  };
  logic [13:0] fangyuan6_S ;
  assign fangyuan6_S = 0 ;
  logic [7:0] FpAdd_8U_23U_o_expo_lpi_1_dfm_2_R0 ;
  logic [7:0] FpAdd_8U_23U_o_expo_lpi_1_dfm_2_X0 ;
  logic [7:0] FpAdd_8U_23U_o_expo_lpi_1_dfm_2_C0 ;
  assign FpAdd_8U_23U_o_expo_lpi_1_dfm_2_R0 [7:1] = fangyuan6_R [6:0] ;
  assign FpAdd_8U_23U_o_expo_lpi_1_dfm_2_X0 [7:1] = fangyuan6_X [6:0] ;
  assign FpAdd_8U_23U_o_expo_lpi_1_dfm_2_C0 [7:1] = fangyuan6_C [6:0] ;

  assign FpAdd_8U_23U_if_4_if_acc_1_nl = fangyuan6 + 1'b1;
  assign FpAdd_8U_23U_if_4_if_acc_1_nl_S = 0 ;
  logic [7:0] fangyuan6_C0 ;
  logic [7:0] fangyuan6_R0 ;
  logic [7:0] fangyuan6_X0 ;
  assign FpAdd_8U_23U_if_4_if_acc_1_nl_T = fangyuan6_T ;
  assign fangyuan6_C0 = FpAdd_8U_23U_if_4_if_acc_1_nl_C ;
  assign fangyuan6_R0 = FpAdd_8U_23U_if_4_if_acc_1_nl_R ;
  assign fangyuan6_X0 = FpAdd_8U_23U_if_4_if_acc_1_nl_X ;
  logic [8:0] fangyuan7;
  logic [8:0] fangyuan7_T ;
  logic [8:0] fangyuan7_R ;
  logic [8:0] fangyuan7_C ;
  logic [8:0] fangyuan7_X ;
  assign fangyuan7 = { 1'b1, _112_ };
  assign fangyuan7_T = {  1'h0 , _112__T  };
  logic [13:0] fangyuan7_S ;
  assign fangyuan7_S = 0 ;
  logic [7:0] _112__R0 ;
  logic [7:0] _112__X0 ;
  logic [7:0] _112__C0 ;
  assign _112__R0 = fangyuan7_R [7:0] ;
  assign _112__X0 = fangyuan7_X [7:0] ;
  assign _112__C0 = fangyuan7_C [7:0] ;

  assign _050_[8:0] = fangyuan7 + libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1;
  assign _050__S = 0 ;
  logic [8:0] fangyuan7_C0 ;
  logic [8:0] fangyuan7_R0 ;
  logic [8:0] fangyuan7_X0 ;
  logic [5:0] libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_C0 ;
  logic [5:0] libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_R0 ;
  logic [5:0] libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_X0 ;
  assign _050__T [8:0] = fangyuan7_T | libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_T ;
  assign fangyuan7_C0 = _050__C [8:0] ;
  assign fangyuan7_X0 = _050__X [8:0] ;
  assign libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_C0 = _050__C [8:0] ;
  assign libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_X0 = _050__X [8:0] ;
  assign fangyuan7_R0 = _050__R [8:0] | ( _050__C [8:0] & libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_T );
  assign libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_R0 = _050__R [8:0] | ( _050__C [8:0] & fangyuan7_T );
  assign FpNormalize_8U_49U_acc_nl = _050_[8:0] + 1'b1;
  assign FpNormalize_8U_49U_acc_nl_S = 0 ;
  logic [10:0] _050__C0 ;
  logic [10:0] _050__R0 ;
  logic [10:0] _050__X0 ;
  assign FpNormalize_8U_49U_acc_nl_T = _050__T [8:0] ;
  assign _050__C0 [8:0] = FpNormalize_8U_49U_acc_nl_C ;
  assign _050__R0 [8:0] = FpNormalize_8U_49U_acc_nl_R ;
  assign _050__X0 [8:0] = FpNormalize_8U_49U_acc_nl_X ;
  logic [23:0] fangyuan8;
  logic [23:0] fangyuan8_T ;
  logic [23:0] fangyuan8_R ;
  logic [23:0] fangyuan8_C ;
  logic [23:0] fangyuan8_X ;
  assign fangyuan8 = { 1'b1, chn_a_rsci_d_mxwt[22:0] };
  assign fangyuan8_T = {  1'h0 , chn_a_rsci_d_mxwt_T [22:0]  };
  logic [13:0] fangyuan8_S ;
  assign fangyuan8_S = 0 ;
  logic [31:0] chn_a_rsci_d_mxwt_R0 ;
  logic [31:0] chn_a_rsci_d_mxwt_X0 ;
  logic [31:0] chn_a_rsci_d_mxwt_C0 ;
  assign chn_a_rsci_d_mxwt_R0 [22:0] = fangyuan8_R [22:0] ;
  assign chn_a_rsci_d_mxwt_X0 [22:0] = fangyuan8_X [22:0] ;
  assign chn_a_rsci_d_mxwt_C0 [22:0] = fangyuan8_C [22:0] ;

  assign _051_ = fangyuan8 + _001_;
  assign _051__S = 0 ;
  logic [23:0] fangyuan8_C0 ;
  logic [23:0] fangyuan8_R0 ;
  logic [23:0] fangyuan8_X0 ;
  logic [22:0] _001__C0 ;
  logic [22:0] _001__R0 ;
  logic [22:0] _001__X0 ;
  assign _051__T = fangyuan8_T | _001__T ;
  assign fangyuan8_C0 = _051__C ;
  assign fangyuan8_X0 = _051__X ;
  assign _001__C0 = _051__C ;
  assign _001__X0 = _051__X ;
  assign fangyuan8_R0 = _051__R | ( _051__C & _001__T );
  assign _001__R0 = _051__R | ( _051__C & fangyuan8_T );
  assign FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl = _051_ + 1'b1;
  assign FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_S = 0 ;
  logic [23:0] _051__C0 ;
  logic [23:0] _051__R0 ;
  logic [23:0] _051__X0 ;
  assign FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_T = _051__T ;
  assign _051__C0 = FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C ;
  assign _051__R0 = FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R ;
  assign _051__X0 = FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X ;
  assign FpMantRNE_49U_24U_else_acc_nl = FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[47:25] + FpMantRNE_49U_24U_else_carry_sva;
  assign FpMantRNE_49U_24U_else_acc_nl_S = 0 ;
  logic [48:0] FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C0 ;
  logic [48:0] FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R0 ;
  logic [48:0] FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X0 ;
  logic [0:0] FpMantRNE_49U_24U_else_carry_sva_C0 ;
  logic [0:0] FpMantRNE_49U_24U_else_carry_sva_R0 ;
  logic [0:0] FpMantRNE_49U_24U_else_carry_sva_X0 ;
  assign FpMantRNE_49U_24U_else_acc_nl_T = FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [47:25] | FpMantRNE_49U_24U_else_carry_sva_T ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C0 [47:25] = FpMantRNE_49U_24U_else_acc_nl_C ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X0 [47:25] = FpMantRNE_49U_24U_else_acc_nl_X ;
  assign FpMantRNE_49U_24U_else_carry_sva_C0 = FpMantRNE_49U_24U_else_acc_nl_C ;
  assign FpMantRNE_49U_24U_else_carry_sva_X0 = FpMantRNE_49U_24U_else_acc_nl_X ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R0 [47:25] = FpMantRNE_49U_24U_else_acc_nl_R | ( FpMantRNE_49U_24U_else_acc_nl_C & FpMantRNE_49U_24U_else_carry_sva_T );
  assign FpMantRNE_49U_24U_else_carry_sva_R0 = FpMantRNE_49U_24U_else_acc_nl_R | ( FpMantRNE_49U_24U_else_acc_nl_C & FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [47:25] );
  assign FpAdd_8U_23U_if_4_if_acc_nl = FpAdd_8U_23U_o_expo_lpi_1_dfm_2 + 1'b1;
  assign FpAdd_8U_23U_if_4_if_acc_nl_S = 0 ;
  assign { FpAdd_8U_23U_o_expo_lpi_1_dfm_2_R0 [0] } = 0;
  assign { FpAdd_8U_23U_o_expo_lpi_1_dfm_2_X0 [0] } = 0;
  assign { FpAdd_8U_23U_o_expo_lpi_1_dfm_2_C0 [0] } = 0;
  logic [7:0] FpAdd_8U_23U_o_expo_lpi_1_dfm_2_C1 ;
  logic [7:0] FpAdd_8U_23U_o_expo_lpi_1_dfm_2_R1 ;
  logic [7:0] FpAdd_8U_23U_o_expo_lpi_1_dfm_2_X1 ;
  assign FpAdd_8U_23U_if_4_if_acc_nl_T = FpAdd_8U_23U_o_expo_lpi_1_dfm_2_T ;
  assign FpAdd_8U_23U_o_expo_lpi_1_dfm_2_C1 = FpAdd_8U_23U_if_4_if_acc_nl_C ;
  assign FpAdd_8U_23U_o_expo_lpi_1_dfm_2_R1 = FpAdd_8U_23U_if_4_if_acc_nl_R ;
  assign FpAdd_8U_23U_o_expo_lpi_1_dfm_2_X1 = FpAdd_8U_23U_if_4_if_acc_nl_X ;
  assign chn_o_and_1_cse = core_wen & _100_;
  assign chn_o_and_1_cse_S = 0 ;
  logic [0:0] core_wen_C0 ;
  logic [0:0] core_wen_R0 ;
  logic [0:0] core_wen_X0 ;
  logic [0:0] _100__C0 ;
  logic [0:0] _100__R0 ;
  logic [0:0] _100__X0 ;
  assign chn_o_and_1_cse_T = core_wen_T | _100__T ;
  assign core_wen_C0 = chn_o_and_1_cse_C ;
  assign core_wen_X0 = chn_o_and_1_cse_X ;
  assign _100__C0 = chn_o_and_1_cse_C ;
  assign _100__X0 = chn_o_and_1_cse_X ;
  assign core_wen_R0 = ( chn_o_and_1_cse_R | chn_o_and_1_cse_C & _100__T ) & { 1{ _100_ != 0 }} ;
  assign _100__R0 = ( chn_o_and_1_cse_R | chn_o_and_1_cse_C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign IsNaN_8U_23U_aelse_and_cse = _052_ & mux_13_cse;
  assign IsNaN_8U_23U_aelse_and_cse_S = 0 ;
  logic [0:0] _052__C0 ;
  logic [0:0] _052__R0 ;
  logic [0:0] _052__X0 ;
  logic [0:0] mux_13_cse_C0 ;
  logic [0:0] mux_13_cse_R0 ;
  logic [0:0] mux_13_cse_X0 ;
  assign IsNaN_8U_23U_aelse_and_cse_T = _052__T | mux_13_cse_T ;
  assign _052__C0 = IsNaN_8U_23U_aelse_and_cse_C ;
  assign _052__X0 = IsNaN_8U_23U_aelse_and_cse_X ;
  assign mux_13_cse_C0 = IsNaN_8U_23U_aelse_and_cse_C ;
  assign mux_13_cse_X0 = IsNaN_8U_23U_aelse_and_cse_X ;
  assign _052__R0 = ( IsNaN_8U_23U_aelse_and_cse_R | IsNaN_8U_23U_aelse_and_cse_C & mux_13_cse_T ) & { 1{ mux_13_cse != 0 }} ;
  assign mux_13_cse_R0 = ( IsNaN_8U_23U_aelse_and_cse_R | IsNaN_8U_23U_aelse_and_cse_C & _052__T ) & { 1{ _052_ != 0 }} ;
  assign FpAdd_8U_23U_is_addition_and_cse = _052_ & mux_4_cse;
  assign FpAdd_8U_23U_is_addition_and_cse_S = 0 ;
  logic [0:0] _052__C1 ;
  logic [0:0] _052__R1 ;
  logic [0:0] _052__X1 ;
  logic [0:0] mux_4_cse_C0 ;
  logic [0:0] mux_4_cse_R0 ;
  logic [0:0] mux_4_cse_X0 ;
  assign FpAdd_8U_23U_is_addition_and_cse_T = _052__T | mux_4_cse_T ;
  assign _052__C1 = FpAdd_8U_23U_is_addition_and_cse_C ;
  assign _052__X1 = FpAdd_8U_23U_is_addition_and_cse_X ;
  assign mux_4_cse_C0 = FpAdd_8U_23U_is_addition_and_cse_C ;
  assign mux_4_cse_X0 = FpAdd_8U_23U_is_addition_and_cse_X ;
  assign _052__R1 = ( FpAdd_8U_23U_is_addition_and_cse_R | FpAdd_8U_23U_is_addition_and_cse_C & mux_4_cse_T ) & { 1{ mux_4_cse != 0 }} ;
  assign mux_4_cse_R0 = ( FpAdd_8U_23U_is_addition_and_cse_R | FpAdd_8U_23U_is_addition_and_cse_C & _052__T ) & { 1{ _052_ != 0 }} ;
  assign FpAdd_8U_23U_and_8_cse = _052_ & mux_6_nl;
  assign FpAdd_8U_23U_and_8_cse_S = 0 ;
  logic [0:0] _052__C2 ;
  logic [0:0] _052__R2 ;
  logic [0:0] _052__X2 ;
  logic [0:0] mux_6_nl_C0 ;
  logic [0:0] mux_6_nl_R0 ;
  logic [0:0] mux_6_nl_X0 ;
  assign FpAdd_8U_23U_and_8_cse_T = _052__T | mux_6_nl_T ;
  assign _052__C2 = FpAdd_8U_23U_and_8_cse_C ;
  assign _052__X2 = FpAdd_8U_23U_and_8_cse_X ;
  assign mux_6_nl_C0 = FpAdd_8U_23U_and_8_cse_C ;
  assign mux_6_nl_X0 = FpAdd_8U_23U_and_8_cse_X ;
  assign _052__R2 = ( FpAdd_8U_23U_and_8_cse_R | FpAdd_8U_23U_and_8_cse_C & mux_6_nl_T ) & { 1{ mux_6_nl != 0 }} ;
  assign mux_6_nl_R0 = ( FpAdd_8U_23U_and_8_cse_R | FpAdd_8U_23U_and_8_cse_C & _052__T ) & { 1{ _052_ != 0 }} ;
  assign and_67_nl = FpAdd_8U_23U_or_cse & main_stage_v_3;
  assign and_67_nl_S = 0 ;
  logic [0:0] FpAdd_8U_23U_or_cse_C0 ;
  logic [0:0] FpAdd_8U_23U_or_cse_R0 ;
  logic [0:0] FpAdd_8U_23U_or_cse_X0 ;
  logic [0:0] main_stage_v_3_C0 ;
  logic [0:0] main_stage_v_3_R0 ;
  logic [0:0] main_stage_v_3_X0 ;
  assign and_67_nl_T = FpAdd_8U_23U_or_cse_T | main_stage_v_3_T ;
  assign FpAdd_8U_23U_or_cse_C0 = and_67_nl_C ;
  assign FpAdd_8U_23U_or_cse_X0 = and_67_nl_X ;
  assign main_stage_v_3_C0 = and_67_nl_C ;
  assign main_stage_v_3_X0 = and_67_nl_X ;
  assign FpAdd_8U_23U_or_cse_R0 = ( and_67_nl_R | and_67_nl_C & main_stage_v_3_T ) & { 1{ main_stage_v_3 != 0 }} ;
  assign main_stage_v_3_R0 = ( and_67_nl_R | and_67_nl_C & FpAdd_8U_23U_or_cse_T ) & { 1{ FpAdd_8U_23U_or_cse != 0 }} ;
  assign FpSignedBitsToFloat_8U_23U_1_and_3_cse = _052_ & mux_10_nl;
  assign FpSignedBitsToFloat_8U_23U_1_and_3_cse_S = 0 ;
  logic [0:0] _052__C3 ;
  logic [0:0] _052__R3 ;
  logic [0:0] _052__X3 ;
  logic [0:0] mux_10_nl_C0 ;
  logic [0:0] mux_10_nl_R0 ;
  logic [0:0] mux_10_nl_X0 ;
  assign FpSignedBitsToFloat_8U_23U_1_and_3_cse_T = _052__T | mux_10_nl_T ;
  assign _052__C3 = FpSignedBitsToFloat_8U_23U_1_and_3_cse_C ;
  assign _052__X3 = FpSignedBitsToFloat_8U_23U_1_and_3_cse_X ;
  assign mux_10_nl_C0 = FpSignedBitsToFloat_8U_23U_1_and_3_cse_C ;
  assign mux_10_nl_X0 = FpSignedBitsToFloat_8U_23U_1_and_3_cse_X ;
  assign _052__R3 = ( FpSignedBitsToFloat_8U_23U_1_and_3_cse_R | FpSignedBitsToFloat_8U_23U_1_and_3_cse_C & mux_10_nl_T ) & { 1{ mux_10_nl != 0 }} ;
  assign mux_10_nl_R0 = ( FpSignedBitsToFloat_8U_23U_1_and_3_cse_R | FpSignedBitsToFloat_8U_23U_1_and_3_cse_C & _052__T ) & { 1{ _052_ != 0 }} ;
  assign _053_ = _104_ & FpAdd_8U_23U_is_a_greater_oif_equal_tmp;
  assign _053__S = 0 ;
  logic [0:0] _104__C0 ;
  logic [0:0] _104__R0 ;
  logic [0:0] _104__X0 ;
  logic [0:0] FpAdd_8U_23U_is_a_greater_oif_equal_tmp_C0 ;
  logic [0:0] FpAdd_8U_23U_is_a_greater_oif_equal_tmp_R0 ;
  logic [0:0] FpAdd_8U_23U_is_a_greater_oif_equal_tmp_X0 ;
  assign _053__T = _104__T | FpAdd_8U_23U_is_a_greater_oif_equal_tmp_T ;
  assign _104__C0 = _053__C ;
  assign _104__X0 = _053__X ;
  assign FpAdd_8U_23U_is_a_greater_oif_equal_tmp_C0 = _053__C ;
  assign FpAdd_8U_23U_is_a_greater_oif_equal_tmp_X0 = _053__X ;
  assign _104__R0 = ( _053__R | _053__C & FpAdd_8U_23U_is_a_greater_oif_equal_tmp_T ) & { 1{ FpAdd_8U_23U_is_a_greater_oif_equal_tmp != 0 }} ;
  assign FpAdd_8U_23U_is_a_greater_oif_equal_tmp_R0 = ( _053__R | _053__C & _104__T ) & { 1{ _104_ != 0 }} ;
  assign FpSignedBitsToFloat_8U_23U_1_and_rgt = or_tmp_16 & and_dcpl_29;
  assign FpSignedBitsToFloat_8U_23U_1_and_rgt_S = 0 ;
  logic [0:0] or_tmp_16_C0 ;
  logic [0:0] or_tmp_16_R0 ;
  logic [0:0] or_tmp_16_X0 ;
  logic [0:0] and_dcpl_29_C0 ;
  logic [0:0] and_dcpl_29_R0 ;
  logic [0:0] and_dcpl_29_X0 ;
  assign FpSignedBitsToFloat_8U_23U_1_and_rgt_T = or_tmp_16_T | and_dcpl_29_T ;
  assign or_tmp_16_C0 = FpSignedBitsToFloat_8U_23U_1_and_rgt_C ;
  assign or_tmp_16_X0 = FpSignedBitsToFloat_8U_23U_1_and_rgt_X ;
  assign and_dcpl_29_C0 = FpSignedBitsToFloat_8U_23U_1_and_rgt_C ;
  assign and_dcpl_29_X0 = FpSignedBitsToFloat_8U_23U_1_and_rgt_X ;
  assign or_tmp_16_R0 = ( FpSignedBitsToFloat_8U_23U_1_and_rgt_R | FpSignedBitsToFloat_8U_23U_1_and_rgt_C & and_dcpl_29_T ) & { 1{ and_dcpl_29 != 0 }} ;
  assign and_dcpl_29_R0 = ( FpSignedBitsToFloat_8U_23U_1_and_rgt_R | FpSignedBitsToFloat_8U_23U_1_and_rgt_C & or_tmp_16_T ) & { 1{ or_tmp_16 != 0 }} ;
  assign FpSignedBitsToFloat_8U_23U_1_and_1_rgt = IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0 & and_dcpl_29;
  assign FpSignedBitsToFloat_8U_23U_1_and_1_rgt_S = 0 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_C0 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_R0 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_X0 ;
  logic [0:0] and_dcpl_29_C1 ;
  logic [0:0] and_dcpl_29_R1 ;
  logic [0:0] and_dcpl_29_X1 ;
  assign FpSignedBitsToFloat_8U_23U_1_and_1_rgt_T = IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_T | and_dcpl_29_T ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_C0 = FpSignedBitsToFloat_8U_23U_1_and_1_rgt_C ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_X0 = FpSignedBitsToFloat_8U_23U_1_and_1_rgt_X ;
  assign and_dcpl_29_C1 = FpSignedBitsToFloat_8U_23U_1_and_1_rgt_C ;
  assign and_dcpl_29_X1 = FpSignedBitsToFloat_8U_23U_1_and_1_rgt_X ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_R0 = ( FpSignedBitsToFloat_8U_23U_1_and_1_rgt_R | FpSignedBitsToFloat_8U_23U_1_and_1_rgt_C & and_dcpl_29_T ) & { 1{ and_dcpl_29 != 0 }} ;
  assign and_dcpl_29_R1 = ( FpSignedBitsToFloat_8U_23U_1_and_1_rgt_R | FpSignedBitsToFloat_8U_23U_1_and_1_rgt_C & IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_T ) & { 1{ IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0 != 0 }} ;
  assign _054_ = FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse & or_cse;
  assign _054__S = 0 ;
  logic [0:0] FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_C0 ;
  logic [0:0] FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_R0 ;
  logic [0:0] FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_X0 ;
  logic [0:0] or_cse_C0 ;
  logic [0:0] or_cse_R0 ;
  logic [0:0] or_cse_X0 ;
  assign _054__T = FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_T | or_cse_T ;
  assign FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_C0 = _054__C ;
  assign FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_X0 = _054__X ;
  assign or_cse_C0 = _054__C ;
  assign or_cse_X0 = _054__X ;
  assign FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_R0 = ( _054__R | _054__C & or_cse_T ) & { 1{ or_cse != 0 }} ;
  assign or_cse_R0 = ( _054__R | _054__C & FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_T ) & { 1{ FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse != 0 }} ;
  assign _052_ = core_wen & _101_;
  assign _052__S = 0 ;
  logic [0:0] core_wen_C1 ;
  logic [0:0] core_wen_R1 ;
  logic [0:0] core_wen_X1 ;
  logic [0:0] _101__C0 ;
  logic [0:0] _101__R0 ;
  logic [0:0] _101__X0 ;
  assign _052__T = core_wen_T | _101__T ;
  assign core_wen_C1 = _052__C ;
  assign core_wen_X1 = _052__X ;
  assign _101__C0 = _052__C ;
  assign _101__X0 = _052__X ;
  assign core_wen_R1 = ( _052__R | _052__C & _101__T ) & { 1{ _101_ != 0 }} ;
  assign _101__R0 = ( _052__R | _052__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign IsNaN_8U_23U_1_and_cse = _052_ & mux_28_nl;
  assign IsNaN_8U_23U_1_and_cse_S = 0 ;
  logic [0:0] _052__C4 ;
  logic [0:0] _052__R4 ;
  logic [0:0] _052__X4 ;
  logic [0:0] mux_28_nl_C0 ;
  logic [0:0] mux_28_nl_R0 ;
  logic [0:0] mux_28_nl_X0 ;
  assign IsNaN_8U_23U_1_and_cse_T = _052__T | mux_28_nl_T ;
  assign _052__C4 = IsNaN_8U_23U_1_and_cse_C ;
  assign _052__X4 = IsNaN_8U_23U_1_and_cse_X ;
  assign mux_28_nl_C0 = IsNaN_8U_23U_1_and_cse_C ;
  assign mux_28_nl_X0 = IsNaN_8U_23U_1_and_cse_X ;
  assign _052__R4 = ( IsNaN_8U_23U_1_and_cse_R | IsNaN_8U_23U_1_and_cse_C & mux_28_nl_T ) & { 1{ mux_28_nl != 0 }} ;
  assign mux_28_nl_R0 = ( IsNaN_8U_23U_1_and_cse_R | IsNaN_8U_23U_1_and_cse_C & _052__T ) & { 1{ _052_ != 0 }} ;
  assign FpAdd_8U_23U_and_1_nl = _110_ & FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2[49];
  assign FpAdd_8U_23U_and_1_nl_S = 0 ;
  logic [0:0] _110__C0 ;
  logic [0:0] _110__R0 ;
  logic [0:0] _110__X0 ;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 ;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 ;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 ;
  assign FpAdd_8U_23U_and_1_nl_T = _110__T | FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_T [49] ;
  assign _110__C0 = FpAdd_8U_23U_and_1_nl_C ;
  assign _110__X0 = FpAdd_8U_23U_and_1_nl_X ;
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [49] = FpAdd_8U_23U_and_1_nl_C ;
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [49] = FpAdd_8U_23U_and_1_nl_X ;
  assign _110__R0 = ( FpAdd_8U_23U_and_1_nl_R | FpAdd_8U_23U_and_1_nl_C & FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_T [49] ) & { 1{ FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2[49] != 0 }} ;
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [49] = ( FpAdd_8U_23U_and_1_nl_R | FpAdd_8U_23U_and_1_nl_C & _110__T ) & { 1{ _110_ != 0 }} ;
  assign FpAdd_8U_23U_and_2_nl = FpAdd_8U_23U_if_3_if_acc_1_nl[7] & FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2[49];
  assign FpAdd_8U_23U_and_2_nl_S = 0 ;
  assign { FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [0], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [1], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [2], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [3], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [4], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [5], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [6], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [7], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [8], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [9], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [10], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [11], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [12], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [13], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [14], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [15], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [16], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [17], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [18], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [19], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [20], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [21], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [22], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [23], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [24], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [25], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [26], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [27], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [28], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [29], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [30], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [31], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [32], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [33], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [34], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [35], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [36], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [37], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [38], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [39], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [40], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [41], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [42], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [43], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [44], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [45], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [46], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [47], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 [48] } = 0;
  assign { FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [0], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [1], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [2], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [3], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [4], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [5], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [6], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [7], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [8], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [9], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [10], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [11], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [12], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [13], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [14], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [15], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [16], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [17], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [18], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [19], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [20], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [21], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [22], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [23], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [24], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [25], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [26], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [27], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [28], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [29], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [30], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [31], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [32], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [33], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [34], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [35], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [36], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [37], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [38], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [39], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [40], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [41], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [42], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [43], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [44], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [45], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [46], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [47], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 [48] } = 0;
  assign { FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [0], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [1], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [2], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [3], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [4], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [5], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [6], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [7], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [8], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [9], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [10], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [11], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [12], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [13], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [14], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [15], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [16], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [17], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [18], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [19], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [20], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [21], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [22], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [23], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [24], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [25], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [26], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [27], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [28], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [29], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [30], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [31], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [32], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [33], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [34], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [35], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [36], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [37], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [38], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [39], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [40], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [41], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [42], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [43], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [44], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [45], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [46], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [47], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 [48] } = 0;
  logic [7:0] FpAdd_8U_23U_if_3_if_acc_1_nl_C0 ;
  logic [7:0] FpAdd_8U_23U_if_3_if_acc_1_nl_R0 ;
  logic [7:0] FpAdd_8U_23U_if_3_if_acc_1_nl_X0 ;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 ;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 ;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 ;
  assign FpAdd_8U_23U_and_2_nl_T = FpAdd_8U_23U_if_3_if_acc_1_nl_T [7] | FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_T [49] ;
  assign FpAdd_8U_23U_if_3_if_acc_1_nl_C0 [7] = FpAdd_8U_23U_and_2_nl_C ;
  assign FpAdd_8U_23U_if_3_if_acc_1_nl_X0 [7] = FpAdd_8U_23U_and_2_nl_X ;
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [49] = FpAdd_8U_23U_and_2_nl_C ;
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [49] = FpAdd_8U_23U_and_2_nl_X ;
  assign FpAdd_8U_23U_if_3_if_acc_1_nl_R0 [7] = ( FpAdd_8U_23U_and_2_nl_R | FpAdd_8U_23U_and_2_nl_C & FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_T [49] ) & { 1{ FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2[49] != 0 }} ;
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [49] = ( FpAdd_8U_23U_and_2_nl_R | FpAdd_8U_23U_and_2_nl_C & FpAdd_8U_23U_if_3_if_acc_1_nl_T [7] ) & { 1{ FpAdd_8U_23U_if_3_if_acc_1_nl[7] != 0 }} ;
  assign FpMantRNE_49U_24U_else_carry_sva = FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[24] & _161_;
  assign FpMantRNE_49U_24U_else_carry_sva_S = 0 ;
  logic [0:0] _161__C0 ;
  logic [0:0] _161__R0 ;
  logic [0:0] _161__X0 ;
  assign FpMantRNE_49U_24U_else_carry_sva_T = FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [24] | _161__T ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C0 [24] = FpMantRNE_49U_24U_else_carry_sva_C ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X0 [24] = FpMantRNE_49U_24U_else_carry_sva_X ;
  assign _161__C0 = FpMantRNE_49U_24U_else_carry_sva_C ;
  assign _161__X0 = FpMantRNE_49U_24U_else_carry_sva_X ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R0 [24] = ( FpMantRNE_49U_24U_else_carry_sva_R | FpMantRNE_49U_24U_else_carry_sva_C & _161__T ) & { 1{ _161_ != 0 }} ;
  assign _161__R0 = ( FpMantRNE_49U_24U_else_carry_sva_R | FpMantRNE_49U_24U_else_carry_sva_C & FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [24] ) & { 1{ FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[24] != 0 }} ;
  assign FpAdd_8U_23U_and_tmp = FpAdd_8U_23U_if_4_if_acc_1_nl[7] & FpMantRNE_49U_24U_else_and_tmp;
  assign FpAdd_8U_23U_and_tmp_S = 0 ;
  logic [7:0] FpAdd_8U_23U_if_4_if_acc_1_nl_C0 ;
  logic [7:0] FpAdd_8U_23U_if_4_if_acc_1_nl_R0 ;
  logic [7:0] FpAdd_8U_23U_if_4_if_acc_1_nl_X0 ;
  logic [0:0] FpMantRNE_49U_24U_else_and_tmp_C0 ;
  logic [0:0] FpMantRNE_49U_24U_else_and_tmp_R0 ;
  logic [0:0] FpMantRNE_49U_24U_else_and_tmp_X0 ;
  assign FpAdd_8U_23U_and_tmp_T = FpAdd_8U_23U_if_4_if_acc_1_nl_T [7] | FpMantRNE_49U_24U_else_and_tmp_T ;
  assign FpAdd_8U_23U_if_4_if_acc_1_nl_C0 [7] = FpAdd_8U_23U_and_tmp_C ;
  assign FpAdd_8U_23U_if_4_if_acc_1_nl_X0 [7] = FpAdd_8U_23U_and_tmp_X ;
  assign FpMantRNE_49U_24U_else_and_tmp_C0 = FpAdd_8U_23U_and_tmp_C ;
  assign FpMantRNE_49U_24U_else_and_tmp_X0 = FpAdd_8U_23U_and_tmp_X ;
  assign FpAdd_8U_23U_if_4_if_acc_1_nl_R0 [7] = ( FpAdd_8U_23U_and_tmp_R | FpAdd_8U_23U_and_tmp_C & FpMantRNE_49U_24U_else_and_tmp_T ) & { 1{ FpMantRNE_49U_24U_else_and_tmp != 0 }} ;
  assign FpMantRNE_49U_24U_else_and_tmp_R0 = ( FpAdd_8U_23U_and_tmp_R | FpAdd_8U_23U_and_tmp_C & FpAdd_8U_23U_if_4_if_acc_1_nl_T [7] ) & { 1{ FpAdd_8U_23U_if_4_if_acc_1_nl[7] != 0 }} ;
  assign FpMantRNE_49U_24U_else_and_tmp = FpMantRNE_49U_24U_else_carry_sva & _090_;
  assign FpMantRNE_49U_24U_else_and_tmp_S = 0 ;
  logic [0:0] FpMantRNE_49U_24U_else_carry_sva_C1 ;
  logic [0:0] FpMantRNE_49U_24U_else_carry_sva_R1 ;
  logic [0:0] FpMantRNE_49U_24U_else_carry_sva_X1 ;
  logic [0:0] _090__C0 ;
  logic [0:0] _090__R0 ;
  logic [0:0] _090__X0 ;
  assign FpMantRNE_49U_24U_else_and_tmp_T = FpMantRNE_49U_24U_else_carry_sva_T | _090__T ;
  assign FpMantRNE_49U_24U_else_carry_sva_C1 = FpMantRNE_49U_24U_else_and_tmp_C ;
  assign FpMantRNE_49U_24U_else_carry_sva_X1 = FpMantRNE_49U_24U_else_and_tmp_X ;
  assign _090__C0 = FpMantRNE_49U_24U_else_and_tmp_C ;
  assign _090__X0 = FpMantRNE_49U_24U_else_and_tmp_X ;
  assign FpMantRNE_49U_24U_else_carry_sva_R1 = ( FpMantRNE_49U_24U_else_and_tmp_R | FpMantRNE_49U_24U_else_and_tmp_C & _090__T ) & { 1{ _090_ != 0 }} ;
  assign _090__R0 = ( FpMantRNE_49U_24U_else_and_tmp_R | FpMantRNE_49U_24U_else_and_tmp_C & FpMantRNE_49U_24U_else_carry_sva_T ) & { 1{ FpMantRNE_49U_24U_else_carry_sva != 0 }} ;
  assign nor_tmp_1 = chn_b_rsci_bawt & chn_a_rsci_bawt;
  assign nor_tmp_1_S = 0 ;
  logic [0:0] chn_b_rsci_bawt_C0 ;
  logic [0:0] chn_b_rsci_bawt_R0 ;
  logic [0:0] chn_b_rsci_bawt_X0 ;
  logic [0:0] chn_a_rsci_bawt_C0 ;
  logic [0:0] chn_a_rsci_bawt_R0 ;
  logic [0:0] chn_a_rsci_bawt_X0 ;
  assign nor_tmp_1_T = chn_b_rsci_bawt_T | chn_a_rsci_bawt_T ;
  assign chn_b_rsci_bawt_C0 = nor_tmp_1_C ;
  assign chn_b_rsci_bawt_X0 = nor_tmp_1_X ;
  assign chn_a_rsci_bawt_C0 = nor_tmp_1_C ;
  assign chn_a_rsci_bawt_X0 = nor_tmp_1_X ;
  assign chn_b_rsci_bawt_R0 = ( nor_tmp_1_R | nor_tmp_1_C & chn_a_rsci_bawt_T ) & { 1{ chn_a_rsci_bawt != 0 }} ;
  assign chn_a_rsci_bawt_R0 = ( nor_tmp_1_R | nor_tmp_1_C & chn_b_rsci_bawt_T ) & { 1{ chn_b_rsci_bawt != 0 }} ;
  assign main_stage_en_1 = nor_tmp_1 & or_cse;
  assign main_stage_en_1_S = 0 ;
  logic [0:0] nor_tmp_1_C0 ;
  logic [0:0] nor_tmp_1_R0 ;
  logic [0:0] nor_tmp_1_X0 ;
  logic [0:0] or_cse_C1 ;
  logic [0:0] or_cse_R1 ;
  logic [0:0] or_cse_X1 ;
  assign main_stage_en_1_T = nor_tmp_1_T | or_cse_T ;
  assign nor_tmp_1_C0 = main_stage_en_1_C ;
  assign nor_tmp_1_X0 = main_stage_en_1_X ;
  assign or_cse_C1 = main_stage_en_1_C ;
  assign or_cse_X1 = main_stage_en_1_X ;
  assign nor_tmp_1_R0 = ( main_stage_en_1_R | main_stage_en_1_C & or_cse_T ) & { 1{ or_cse != 0 }} ;
  assign or_cse_R1 = ( main_stage_en_1_R | main_stage_en_1_C & nor_tmp_1_T ) & { 1{ nor_tmp_1 != 0 }} ;
  assign FpNormalize_8U_49U_oelse_not_3 = FpNormalize_8U_49U_if_or_itm_2 & FpNormalize_8U_49U_acc_nl[8];
  assign FpNormalize_8U_49U_oelse_not_3_S = 0 ;
  logic [0:0] FpNormalize_8U_49U_if_or_itm_2_C0 ;
  logic [0:0] FpNormalize_8U_49U_if_or_itm_2_R0 ;
  logic [0:0] FpNormalize_8U_49U_if_or_itm_2_X0 ;
  logic [8:0] FpNormalize_8U_49U_acc_nl_C0 ;
  logic [8:0] FpNormalize_8U_49U_acc_nl_R0 ;
  logic [8:0] FpNormalize_8U_49U_acc_nl_X0 ;
  assign FpNormalize_8U_49U_oelse_not_3_T = FpNormalize_8U_49U_if_or_itm_2_T | FpNormalize_8U_49U_acc_nl_T [8] ;
  assign FpNormalize_8U_49U_if_or_itm_2_C0 = FpNormalize_8U_49U_oelse_not_3_C ;
  assign FpNormalize_8U_49U_if_or_itm_2_X0 = FpNormalize_8U_49U_oelse_not_3_X ;
  assign FpNormalize_8U_49U_acc_nl_C0 [8] = FpNormalize_8U_49U_oelse_not_3_C ;
  assign FpNormalize_8U_49U_acc_nl_X0 [8] = FpNormalize_8U_49U_oelse_not_3_X ;
  assign FpNormalize_8U_49U_if_or_itm_2_R0 = ( FpNormalize_8U_49U_oelse_not_3_R | FpNormalize_8U_49U_oelse_not_3_C & FpNormalize_8U_49U_acc_nl_T [8] ) & { 1{ FpNormalize_8U_49U_acc_nl[8] != 0 }} ;
  assign FpNormalize_8U_49U_acc_nl_R0 [8] = ( FpNormalize_8U_49U_oelse_not_3_R | FpNormalize_8U_49U_oelse_not_3_C & FpNormalize_8U_49U_if_or_itm_2_T ) & { 1{ FpNormalize_8U_49U_if_or_itm_2 != 0 }} ;
  assign nor_tmp_11 = _164_ & main_stage_v_2;
  assign nor_tmp_11_S = 0 ;
  logic [0:0] _164__C0 ;
  logic [0:0] _164__R0 ;
  logic [0:0] _164__X0 ;
  logic [0:0] main_stage_v_2_C0 ;
  logic [0:0] main_stage_v_2_R0 ;
  logic [0:0] main_stage_v_2_X0 ;
  assign nor_tmp_11_T = _164__T | main_stage_v_2_T ;
  assign _164__C0 = nor_tmp_11_C ;
  assign _164__X0 = nor_tmp_11_X ;
  assign main_stage_v_2_C0 = nor_tmp_11_C ;
  assign main_stage_v_2_X0 = nor_tmp_11_X ;
  assign _164__R0 = ( nor_tmp_11_R | nor_tmp_11_C & main_stage_v_2_T ) & { 1{ main_stage_v_2 != 0 }} ;
  assign main_stage_v_2_R0 = ( nor_tmp_11_R | nor_tmp_11_C & _164__T ) & { 1{ _164_ != 0 }} ;
  assign and_dcpl_7 = reg_chn_o_rsci_ld_core_psct_cse & _114_;
  assign and_dcpl_7_S = 0 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C0 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R0 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X0 ;
  logic [0:0] _114__C0 ;
  logic [0:0] _114__R0 ;
  logic [0:0] _114__X0 ;
  assign and_dcpl_7_T = reg_chn_o_rsci_ld_core_psct_cse_T | _114__T ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C0 = and_dcpl_7_C ;
  assign reg_chn_o_rsci_ld_core_psct_cse_X0 = and_dcpl_7_X ;
  assign _114__C0 = and_dcpl_7_C ;
  assign _114__X0 = and_dcpl_7_X ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R0 = ( and_dcpl_7_R | and_dcpl_7_C & _114__T ) & { 1{ _114_ != 0 }} ;
  assign _114__R0 = ( and_dcpl_7_R | and_dcpl_7_C & reg_chn_o_rsci_ld_core_psct_cse_T ) & { 1{ reg_chn_o_rsci_ld_core_psct_cse != 0 }} ;
  assign and_dcpl_13 = or_cse & main_stage_v_3;
  assign and_dcpl_13_S = 0 ;
  logic [0:0] or_cse_C2 ;
  logic [0:0] or_cse_R2 ;
  logic [0:0] or_cse_X2 ;
  logic [0:0] main_stage_v_3_C1 ;
  logic [0:0] main_stage_v_3_R1 ;
  logic [0:0] main_stage_v_3_X1 ;
  assign and_dcpl_13_T = or_cse_T | main_stage_v_3_T ;
  assign or_cse_C2 = and_dcpl_13_C ;
  assign or_cse_X2 = and_dcpl_13_X ;
  assign main_stage_v_3_C1 = and_dcpl_13_C ;
  assign main_stage_v_3_X1 = and_dcpl_13_X ;
  assign or_cse_R2 = ( and_dcpl_13_R | and_dcpl_13_C & main_stage_v_3_T ) & { 1{ main_stage_v_3 != 0 }} ;
  assign main_stage_v_3_R1 = ( and_dcpl_13_R | and_dcpl_13_C & or_cse_T ) & { 1{ or_cse != 0 }} ;
  assign and_dcpl_14 = reg_chn_o_rsci_ld_core_psct_cse & chn_o_rsci_bawt;
  assign and_dcpl_14_S = 0 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C1 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R1 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X1 ;
  logic [0:0] chn_o_rsci_bawt_C0 ;
  logic [0:0] chn_o_rsci_bawt_R0 ;
  logic [0:0] chn_o_rsci_bawt_X0 ;
  assign and_dcpl_14_T = reg_chn_o_rsci_ld_core_psct_cse_T | chn_o_rsci_bawt_T ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C1 = and_dcpl_14_C ;
  assign reg_chn_o_rsci_ld_core_psct_cse_X1 = and_dcpl_14_X ;
  assign chn_o_rsci_bawt_C0 = and_dcpl_14_C ;
  assign chn_o_rsci_bawt_X0 = and_dcpl_14_X ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R1 = ( and_dcpl_14_R | and_dcpl_14_C & chn_o_rsci_bawt_T ) & { 1{ chn_o_rsci_bawt != 0 }} ;
  assign chn_o_rsci_bawt_R0 = ( and_dcpl_14_R | and_dcpl_14_C & reg_chn_o_rsci_ld_core_psct_cse_T ) & { 1{ reg_chn_o_rsci_ld_core_psct_cse != 0 }} ;
  assign and_dcpl_15 = and_dcpl_14 & _099_;
  assign and_dcpl_15_S = 0 ;
  logic [0:0] and_dcpl_14_C0 ;
  logic [0:0] and_dcpl_14_R0 ;
  logic [0:0] and_dcpl_14_X0 ;
  logic [0:0] _099__C0 ;
  logic [0:0] _099__R0 ;
  logic [0:0] _099__X0 ;
  assign and_dcpl_15_T = and_dcpl_14_T | _099__T ;
  assign and_dcpl_14_C0 = and_dcpl_15_C ;
  assign and_dcpl_14_X0 = and_dcpl_15_X ;
  assign _099__C0 = and_dcpl_15_C ;
  assign _099__X0 = and_dcpl_15_X ;
  assign and_dcpl_14_R0 = ( and_dcpl_15_R | and_dcpl_15_C & _099__T ) & { 1{ _099_ != 0 }} ;
  assign _099__R0 = ( and_dcpl_15_R | and_dcpl_15_C & and_dcpl_14_T ) & { 1{ and_dcpl_14 != 0 }} ;
  assign and_dcpl_28 = or_cse & IsNaN_8U_23U_land_lpi_1_dfm_st_4;
  assign and_dcpl_28_S = 0 ;
  logic [0:0] or_cse_C3 ;
  logic [0:0] or_cse_R3 ;
  logic [0:0] or_cse_X3 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_4_C0 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_4_R0 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_4_X0 ;
  assign and_dcpl_28_T = or_cse_T | IsNaN_8U_23U_land_lpi_1_dfm_st_4_T ;
  assign or_cse_C3 = and_dcpl_28_C ;
  assign or_cse_X3 = and_dcpl_28_X ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_4_C0 = and_dcpl_28_C ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_4_X0 = and_dcpl_28_X ;
  assign or_cse_R3 = ( and_dcpl_28_R | and_dcpl_28_C & IsNaN_8U_23U_land_lpi_1_dfm_st_4_T ) & { 1{ IsNaN_8U_23U_land_lpi_1_dfm_st_4 != 0 }} ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_4_R0 = ( and_dcpl_28_R | and_dcpl_28_C & or_cse_T ) & { 1{ or_cse != 0 }} ;
  assign and_dcpl_29 = or_cse & _115_;
  assign and_dcpl_29_S = 0 ;
  logic [0:0] or_cse_C4 ;
  logic [0:0] or_cse_R4 ;
  logic [0:0] or_cse_X4 ;
  logic [0:0] _115__C0 ;
  logic [0:0] _115__R0 ;
  logic [0:0] _115__X0 ;
  assign and_dcpl_29_T = or_cse_T | _115__T ;
  assign or_cse_C4 = and_dcpl_29_C ;
  assign or_cse_X4 = and_dcpl_29_X ;
  assign _115__C0 = and_dcpl_29_C ;
  assign _115__X0 = and_dcpl_29_X ;
  assign or_cse_R4 = ( and_dcpl_29_R | and_dcpl_29_C & _115__T ) & { 1{ _115_ != 0 }} ;
  assign _115__R0 = ( and_dcpl_29_R | and_dcpl_29_C & or_cse_T ) & { 1{ or_cse != 0 }} ;
  assign _055_ = or_cse & _116_;
  assign _055__S = 0 ;
  logic [0:0] or_cse_C5 ;
  logic [0:0] or_cse_R5 ;
  logic [0:0] or_cse_X5 ;
  logic [0:0] _116__C0 ;
  logic [0:0] _116__R0 ;
  logic [0:0] _116__X0 ;
  assign _055__T = or_cse_T | _116__T ;
  assign or_cse_C5 = _055__C ;
  assign or_cse_X5 = _055__X ;
  assign _116__C0 = _055__C ;
  assign _116__X0 = _055__X ;
  assign or_cse_R5 = ( _055__R | _055__C & _116__T ) & { 1{ _116_ != 0 }} ;
  assign _116__R0 = ( _055__R | _055__C & or_cse_T ) & { 1{ or_cse != 0 }} ;
  assign and_dcpl_33 = _055_ & _165_;
  assign and_dcpl_33_S = 0 ;
  logic [0:0] _055__C0 ;
  logic [0:0] _055__R0 ;
  logic [0:0] _055__X0 ;
  logic [0:0] _165__C0 ;
  logic [0:0] _165__R0 ;
  logic [0:0] _165__X0 ;
  assign and_dcpl_33_T = _055__T | _165__T ;
  assign _055__C0 = and_dcpl_33_C ;
  assign _055__X0 = and_dcpl_33_X ;
  assign _165__C0 = and_dcpl_33_C ;
  assign _165__X0 = and_dcpl_33_X ;
  assign _055__R0 = ( and_dcpl_33_R | and_dcpl_33_C & _165__T ) & { 1{ _165_ != 0 }} ;
  assign _165__R0 = ( and_dcpl_33_R | and_dcpl_33_C & _055__T ) & { 1{ _055_ != 0 }} ;
  assign or_tmp_35 = main_stage_en_1 & fsm_output[1];
  assign or_tmp_35_S = 0 ;
  logic [0:0] main_stage_en_1_C0 ;
  logic [0:0] main_stage_en_1_R0 ;
  logic [0:0] main_stage_en_1_X0 ;
  logic [1:0] fsm_output_C0 ;
  logic [1:0] fsm_output_R0 ;
  logic [1:0] fsm_output_X0 ;
  assign or_tmp_35_T = main_stage_en_1_T | fsm_output_T [1] ;
  assign main_stage_en_1_C0 = or_tmp_35_C ;
  assign main_stage_en_1_X0 = or_tmp_35_X ;
  assign fsm_output_C0 [1] = or_tmp_35_C ;
  assign fsm_output_X0 [1] = or_tmp_35_X ;
  assign main_stage_en_1_R0 = ( or_tmp_35_R | or_tmp_35_C & fsm_output_T [1] ) & { 1{ fsm_output[1] != 0 }} ;
  assign fsm_output_R0 [1] = ( or_tmp_35_R | or_tmp_35_C & main_stage_en_1_T ) & { 1{ main_stage_en_1 != 0 }} ;
  assign chn_o_rsci_d_22_0_mx0c1 = and_dcpl_13 & _118_;
  assign chn_o_rsci_d_22_0_mx0c1_S = 0 ;
  logic [0:0] and_dcpl_13_C0 ;
  logic [0:0] and_dcpl_13_R0 ;
  logic [0:0] and_dcpl_13_X0 ;
  logic [0:0] _118__C0 ;
  logic [0:0] _118__R0 ;
  logic [0:0] _118__X0 ;
  assign chn_o_rsci_d_22_0_mx0c1_T = and_dcpl_13_T | _118__T ;
  assign and_dcpl_13_C0 = chn_o_rsci_d_22_0_mx0c1_C ;
  assign and_dcpl_13_X0 = chn_o_rsci_d_22_0_mx0c1_X ;
  assign _118__C0 = chn_o_rsci_d_22_0_mx0c1_C ;
  assign _118__X0 = chn_o_rsci_d_22_0_mx0c1_X ;
  assign and_dcpl_13_R0 = ( chn_o_rsci_d_22_0_mx0c1_R | chn_o_rsci_d_22_0_mx0c1_C & _118__T ) & { 1{ _118_ != 0 }} ;
  assign _118__R0 = ( chn_o_rsci_d_22_0_mx0c1_R | chn_o_rsci_d_22_0_mx0c1_C & and_dcpl_13_T ) & { 1{ and_dcpl_13 != 0 }} ;
  assign _056_ = _106_ & main_stage_v_1;
  assign _056__S = 0 ;
  logic [0:0] _106__C0 ;
  logic [0:0] _106__R0 ;
  logic [0:0] _106__X0 ;
  logic [0:0] main_stage_v_1_C0 ;
  logic [0:0] main_stage_v_1_R0 ;
  logic [0:0] main_stage_v_1_X0 ;
  assign _056__T = _106__T | main_stage_v_1_T ;
  assign _106__C0 = _056__C ;
  assign _106__X0 = _056__X ;
  assign main_stage_v_1_C0 = _056__C ;
  assign main_stage_v_1_X0 = _056__X ;
  assign _106__R0 = ( _056__R | _056__C & main_stage_v_1_T ) & { 1{ main_stage_v_1 != 0 }} ;
  assign main_stage_v_1_R0 = ( _056__R | _056__C & _106__T ) & { 1{ _106_ != 0 }} ;
  assign main_stage_v_1_mx0c1 = _056_ & or_cse;
  assign main_stage_v_1_mx0c1_S = 0 ;
  logic [0:0] _056__C0 ;
  logic [0:0] _056__R0 ;
  logic [0:0] _056__X0 ;
  logic [0:0] or_cse_C6 ;
  logic [0:0] or_cse_R6 ;
  logic [0:0] or_cse_X6 ;
  assign main_stage_v_1_mx0c1_T = _056__T | or_cse_T ;
  assign _056__C0 = main_stage_v_1_mx0c1_C ;
  assign _056__X0 = main_stage_v_1_mx0c1_X ;
  assign or_cse_C6 = main_stage_v_1_mx0c1_C ;
  assign or_cse_X6 = main_stage_v_1_mx0c1_X ;
  assign _056__R0 = ( main_stage_v_1_mx0c1_R | main_stage_v_1_mx0c1_C & or_cse_T ) & { 1{ or_cse != 0 }} ;
  assign or_cse_R6 = ( main_stage_v_1_mx0c1_R | main_stage_v_1_mx0c1_C & _056__T ) & { 1{ _056_ != 0 }} ;
  assign _057_ = main_stage_v_2 & _105_;
  assign _057__S = 0 ;
  logic [0:0] main_stage_v_2_C1 ;
  logic [0:0] main_stage_v_2_R1 ;
  logic [0:0] main_stage_v_2_X1 ;
  logic [0:0] _105__C0 ;
  logic [0:0] _105__R0 ;
  logic [0:0] _105__X0 ;
  assign _057__T = main_stage_v_2_T | _105__T ;
  assign main_stage_v_2_C1 = _057__C ;
  assign main_stage_v_2_X1 = _057__X ;
  assign _105__C0 = _057__C ;
  assign _105__X0 = _057__X ;
  assign main_stage_v_2_R1 = ( _057__R | _057__C & _105__T ) & { 1{ _105_ != 0 }} ;
  assign _105__R0 = ( _057__R | _057__C & main_stage_v_2_T ) & { 1{ main_stage_v_2 != 0 }} ;
  assign main_stage_v_2_mx0c1 = _057_ & or_cse;
  assign main_stage_v_2_mx0c1_S = 0 ;
  logic [0:0] _057__C0 ;
  logic [0:0] _057__R0 ;
  logic [0:0] _057__X0 ;
  logic [0:0] or_cse_C7 ;
  logic [0:0] or_cse_R7 ;
  logic [0:0] or_cse_X7 ;
  assign main_stage_v_2_mx0c1_T = _057__T | or_cse_T ;
  assign _057__C0 = main_stage_v_2_mx0c1_C ;
  assign _057__X0 = main_stage_v_2_mx0c1_X ;
  assign or_cse_C7 = main_stage_v_2_mx0c1_C ;
  assign or_cse_X7 = main_stage_v_2_mx0c1_X ;
  assign _057__R0 = ( main_stage_v_2_mx0c1_R | main_stage_v_2_mx0c1_C & or_cse_T ) & { 1{ or_cse != 0 }} ;
  assign or_cse_R7 = ( main_stage_v_2_mx0c1_R | main_stage_v_2_mx0c1_C & _057__T ) & { 1{ _057_ != 0 }} ;
  assign _058_ = or_cse & _113_;
  assign _058__S = 0 ;
  logic [0:0] or_cse_C8 ;
  logic [0:0] or_cse_R8 ;
  logic [0:0] or_cse_X8 ;
  logic [0:0] _113__C0 ;
  logic [0:0] _113__R0 ;
  logic [0:0] _113__X0 ;
  assign _058__T = or_cse_T | _113__T ;
  assign or_cse_C8 = _058__C ;
  assign or_cse_X8 = _058__X ;
  assign _113__C0 = _058__C ;
  assign _113__X0 = _058__X ;
  assign or_cse_R8 = ( _058__R | _058__C & _113__T ) & { 1{ _113_ != 0 }} ;
  assign _113__R0 = ( _058__R | _058__C & or_cse_T ) & { 1{ or_cse != 0 }} ;
  assign main_stage_v_3_mx0c1 = _058_ & main_stage_v_3;
  assign main_stage_v_3_mx0c1_S = 0 ;
  logic [0:0] _058__C0 ;
  logic [0:0] _058__R0 ;
  logic [0:0] _058__X0 ;
  logic [0:0] main_stage_v_3_C2 ;
  logic [0:0] main_stage_v_3_R2 ;
  logic [0:0] main_stage_v_3_X2 ;
  assign main_stage_v_3_mx0c1_T = _058__T | main_stage_v_3_T ;
  assign _058__C0 = main_stage_v_3_mx0c1_C ;
  assign _058__X0 = main_stage_v_3_mx0c1_X ;
  assign main_stage_v_3_C2 = main_stage_v_3_mx0c1_C ;
  assign main_stage_v_3_X2 = main_stage_v_3_mx0c1_X ;
  assign _058__R0 = ( main_stage_v_3_mx0c1_R | main_stage_v_3_mx0c1_C & main_stage_v_3_T ) & { 1{ main_stage_v_3 != 0 }} ;
  assign main_stage_v_3_R2 = ( main_stage_v_3_mx0c1_R | main_stage_v_3_mx0c1_C & _058__T ) & { 1{ _058_ != 0 }} ;
  assign _059_ = _119_ & fsm_output[1];
  assign _059__S = 0 ;
  assign { fsm_output_R0 [0] } = 0;
  assign { fsm_output_X0 [0] } = 0;
  assign { fsm_output_C0 [0] } = 0;
  logic [0:0] _119__C0 ;
  logic [0:0] _119__R0 ;
  logic [0:0] _119__X0 ;
  logic [1:0] fsm_output_C1 ;
  logic [1:0] fsm_output_R1 ;
  logic [1:0] fsm_output_X1 ;
  assign _059__T = _119__T | fsm_output_T [1] ;
  assign _119__C0 = _059__C ;
  assign _119__X0 = _059__X ;
  assign fsm_output_C1 [1] = _059__C ;
  assign fsm_output_X1 [1] = _059__X ;
  assign _119__R0 = ( _059__R | _059__C & fsm_output_T [1] ) & { 1{ fsm_output[1] != 0 }} ;
  assign fsm_output_R1 [1] = ( _059__R | _059__C & _119__T ) & { 1{ _119_ != 0 }} ;
  assign _060_ = core_wen & or_tmp_29;
  assign _060__S = 0 ;
  logic [0:0] core_wen_C2 ;
  logic [0:0] core_wen_R2 ;
  logic [0:0] core_wen_X2 ;
  logic [0:0] or_tmp_29_C0 ;
  logic [0:0] or_tmp_29_R0 ;
  logic [0:0] or_tmp_29_X0 ;
  assign _060__T = core_wen_T | or_tmp_29_T ;
  assign core_wen_C2 = _060__C ;
  assign core_wen_X2 = _060__X ;
  assign or_tmp_29_C0 = _060__C ;
  assign or_tmp_29_X0 = _060__X ;
  assign core_wen_R2 = ( _060__R | _060__C & or_tmp_29_T ) & { 1{ or_tmp_29 != 0 }} ;
  assign or_tmp_29_R0 = ( _060__R | _060__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _061_ = and_dcpl_13 & IsNaN_8U_23U_land_lpi_1_dfm_6;
  assign _061__S = 0 ;
  logic [0:0] and_dcpl_13_C1 ;
  logic [0:0] and_dcpl_13_R1 ;
  logic [0:0] and_dcpl_13_X1 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_6_C0 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_6_R0 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_6_X0 ;
  assign _061__T = and_dcpl_13_T | IsNaN_8U_23U_land_lpi_1_dfm_6_T ;
  assign and_dcpl_13_C1 = _061__C ;
  assign and_dcpl_13_X1 = _061__X ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_6_C0 = _061__C ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_6_X0 = _061__X ;
  assign and_dcpl_13_R1 = ( _061__R | _061__C & IsNaN_8U_23U_land_lpi_1_dfm_6_T ) & { 1{ IsNaN_8U_23U_land_lpi_1_dfm_6 != 0 }} ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_6_R0 = ( _061__R | _061__C & and_dcpl_13_T ) & { 1{ and_dcpl_13 != 0 }} ;
  assign _062_ = core_wen & _166_;
  assign _062__S = 0 ;
  logic [0:0] core_wen_C3 ;
  logic [0:0] core_wen_R3 ;
  logic [0:0] core_wen_X3 ;
  logic [0:0] _166__C0 ;
  logic [0:0] _166__R0 ;
  logic [0:0] _166__X0 ;
  assign _062__T = core_wen_T | _166__T ;
  assign core_wen_C3 = _062__C ;
  assign core_wen_X3 = _062__X ;
  assign _166__C0 = _062__C ;
  assign _166__X0 = _062__X ;
  assign core_wen_R3 = ( _062__R | _062__C & _166__T ) & { 1{ _166_ != 0 }} ;
  assign _166__R0 = ( _062__R | _062__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _063_ = core_wen & _167_;
  assign _063__S = 0 ;
  logic [0:0] core_wen_C4 ;
  logic [0:0] core_wen_R4 ;
  logic [0:0] core_wen_X4 ;
  logic [0:0] _167__C0 ;
  logic [0:0] _167__R0 ;
  logic [0:0] _167__X0 ;
  assign _063__T = core_wen_T | _167__T ;
  assign core_wen_C4 = _063__C ;
  assign core_wen_X4 = _063__X ;
  assign _167__C0 = _063__C ;
  assign _167__X0 = _063__X ;
  assign core_wen_R4 = ( _063__R | _063__C & _167__T ) & { 1{ _167_ != 0 }} ;
  assign _167__R0 = ( _063__R | _063__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _064_ = core_wen & _168_;
  assign _064__S = 0 ;
  logic [0:0] core_wen_C5 ;
  logic [0:0] core_wen_R5 ;
  logic [0:0] core_wen_X5 ;
  logic [0:0] _168__C0 ;
  logic [0:0] _168__R0 ;
  logic [0:0] _168__X0 ;
  assign _064__T = core_wen_T | _168__T ;
  assign core_wen_C5 = _064__C ;
  assign core_wen_X5 = _064__X ;
  assign _168__C0 = _064__C ;
  assign _168__X0 = _064__X ;
  assign core_wen_R5 = ( _064__R | _064__C & _168__T ) & { 1{ _168_ != 0 }} ;
  assign _168__R0 = ( _064__R | _064__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _065_ = or_cse & main_stage_v_1;
  assign _065__S = 0 ;
  logic [0:0] or_cse_C9 ;
  logic [0:0] or_cse_R9 ;
  logic [0:0] or_cse_X9 ;
  logic [0:0] main_stage_v_1_C1 ;
  logic [0:0] main_stage_v_1_R1 ;
  logic [0:0] main_stage_v_1_X1 ;
  assign _065__T = or_cse_T | main_stage_v_1_T ;
  assign or_cse_C9 = _065__C ;
  assign or_cse_X9 = _065__X ;
  assign main_stage_v_1_C1 = _065__C ;
  assign main_stage_v_1_X1 = _065__X ;
  assign or_cse_R9 = ( _065__R | _065__C & main_stage_v_1_T ) & { 1{ main_stage_v_1 != 0 }} ;
  assign main_stage_v_1_R1 = ( _065__R | _065__C & or_cse_T ) & { 1{ or_cse != 0 }} ;
  assign _066_ = core_wen & _169_;
  assign _066__S = 0 ;
  logic [0:0] core_wen_C6 ;
  logic [0:0] core_wen_R6 ;
  logic [0:0] core_wen_X6 ;
  logic [0:0] _169__C0 ;
  logic [0:0] _169__R0 ;
  logic [0:0] _169__X0 ;
  assign _066__T = core_wen_T | _169__T ;
  assign core_wen_C6 = _066__C ;
  assign core_wen_X6 = _066__X ;
  assign _169__C0 = _066__C ;
  assign _169__X0 = _066__X ;
  assign core_wen_R6 = ( _066__R | _066__C & _169__T ) & { 1{ _169_ != 0 }} ;
  assign _169__R0 = ( _066__R | _066__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _067_ = or_cse & main_stage_v_2;
  assign _067__S = 0 ;
  logic [0:0] or_cse_C10 ;
  logic [0:0] or_cse_R10 ;
  logic [0:0] or_cse_X10 ;
  logic [0:0] main_stage_v_2_C2 ;
  logic [0:0] main_stage_v_2_R2 ;
  logic [0:0] main_stage_v_2_X2 ;
  assign _067__T = or_cse_T | main_stage_v_2_T ;
  assign or_cse_C10 = _067__C ;
  assign or_cse_X10 = _067__X ;
  assign main_stage_v_2_C2 = _067__C ;
  assign main_stage_v_2_X2 = _067__X ;
  assign or_cse_R10 = ( _067__R | _067__C & main_stage_v_2_T ) & { 1{ main_stage_v_2 != 0 }} ;
  assign main_stage_v_2_R2 = ( _067__R | _067__C & or_cse_T ) & { 1{ or_cse != 0 }} ;
  assign _068_ = core_wen & _170_;
  assign _068__S = 0 ;
  logic [0:0] core_wen_C7 ;
  logic [0:0] core_wen_R7 ;
  logic [0:0] core_wen_X7 ;
  logic [0:0] _170__C0 ;
  logic [0:0] _170__R0 ;
  logic [0:0] _170__X0 ;
  assign _068__T = core_wen_T | _170__T ;
  assign core_wen_C7 = _068__C ;
  assign core_wen_X7 = _068__X ;
  assign _170__C0 = _068__C ;
  assign _170__X0 = _068__X ;
  assign core_wen_R7 = ( _068__R | _068__C & _170__T ) & { 1{ _170_ != 0 }} ;
  assign _170__R0 = ( _068__R | _068__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _069_ = _052_ & mux_8_nl;
  assign _069__S = 0 ;
  logic [0:0] _052__C5 ;
  logic [0:0] _052__R5 ;
  logic [0:0] _052__X5 ;
  logic [0:0] mux_8_nl_C0 ;
  logic [0:0] mux_8_nl_R0 ;
  logic [0:0] mux_8_nl_X0 ;
  assign _069__T = _052__T | mux_8_nl_T ;
  assign _052__C5 = _069__C ;
  assign _052__X5 = _069__X ;
  assign mux_8_nl_C0 = _069__C ;
  assign mux_8_nl_X0 = _069__X ;
  assign _052__R5 = ( _069__R | _069__C & mux_8_nl_T ) & { 1{ mux_8_nl != 0 }} ;
  assign mux_8_nl_R0 = ( _069__R | _069__C & _052__T ) & { 1{ _052_ != 0 }} ;
  assign _070_ = core_wen & FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse;
  assign _070__S = 0 ;
  logic [0:0] core_wen_C8 ;
  logic [0:0] core_wen_R8 ;
  logic [0:0] core_wen_X8 ;
  logic [0:0] FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse_C0 ;
  logic [0:0] FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse_R0 ;
  logic [0:0] FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse_X0 ;
  assign _070__T = core_wen_T | FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse_T ;
  assign core_wen_C8 = _070__C ;
  assign core_wen_X8 = _070__X ;
  assign FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse_C0 = _070__C ;
  assign FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse_X0 = _070__X ;
  assign core_wen_R8 = ( _070__R | _070__C & FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse_T ) & { 1{ FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse != 0 }} ;
  assign FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse_R0 = ( _070__R | _070__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _071_ = _070_ & mux_23_nl;
  assign _071__S = 0 ;
  logic [0:0] _070__C0 ;
  logic [0:0] _070__R0 ;
  logic [0:0] _070__X0 ;
  logic [0:0] mux_23_nl_C0 ;
  logic [0:0] mux_23_nl_R0 ;
  logic [0:0] mux_23_nl_X0 ;
  assign _071__T = _070__T | mux_23_nl_T ;
  assign _070__C0 = _071__C ;
  assign _070__X0 = _071__X ;
  assign mux_23_nl_C0 = _071__C ;
  assign mux_23_nl_X0 = _071__X ;
  assign _070__R0 = ( _071__R | _071__C & mux_23_nl_T ) & { 1{ mux_23_nl != 0 }} ;
  assign mux_23_nl_R0 = ( _071__R | _071__C & _070__T ) & { 1{ _070_ != 0 }} ;
  assign _072_ = core_wen & _172_;
  assign _072__S = 0 ;
  logic [0:0] core_wen_C9 ;
  logic [0:0] core_wen_R9 ;
  logic [0:0] core_wen_X9 ;
  logic [0:0] _172__C0 ;
  logic [0:0] _172__R0 ;
  logic [0:0] _172__X0 ;
  assign _072__T = core_wen_T | _172__T ;
  assign core_wen_C9 = _072__C ;
  assign core_wen_X9 = _072__X ;
  assign _172__C0 = _072__C ;
  assign _172__X0 = _072__X ;
  assign core_wen_R9 = ( _072__R | _072__C & _172__T ) & { 1{ _172_ != 0 }} ;
  assign _172__R0 = ( _072__R | _072__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _073_ = _072_ & mux_4_cse;
  assign _073__S = 0 ;
  logic [0:0] _072__C0 ;
  logic [0:0] _072__R0 ;
  logic [0:0] _072__X0 ;
  logic [0:0] mux_4_cse_C1 ;
  logic [0:0] mux_4_cse_R1 ;
  logic [0:0] mux_4_cse_X1 ;
  assign _073__T = _072__T | mux_4_cse_T ;
  assign _072__C0 = _073__C ;
  assign _072__X0 = _073__X ;
  assign mux_4_cse_C1 = _073__C ;
  assign mux_4_cse_X1 = _073__X ;
  assign _072__R0 = ( _073__R | _073__C & mux_4_cse_T ) & { 1{ mux_4_cse != 0 }} ;
  assign mux_4_cse_R1 = ( _073__R | _073__C & _072__T ) & { 1{ _072_ != 0 }} ;
  assign _074_ = core_wen & FpSignedBitsToFloat_8U_23U_1_FpAdd_8U_23U_or_1_cse;
  assign _074__S = 0 ;
  logic [0:0] core_wen_C10 ;
  logic [0:0] core_wen_R10 ;
  logic [0:0] core_wen_X10 ;
  logic [0:0] FpSignedBitsToFloat_8U_23U_1_FpAdd_8U_23U_or_1_cse_C0 ;
  logic [0:0] FpSignedBitsToFloat_8U_23U_1_FpAdd_8U_23U_or_1_cse_R0 ;
  logic [0:0] FpSignedBitsToFloat_8U_23U_1_FpAdd_8U_23U_or_1_cse_X0 ;
  assign _074__T = core_wen_T | FpSignedBitsToFloat_8U_23U_1_FpAdd_8U_23U_or_1_cse_T ;
  assign core_wen_C10 = _074__C ;
  assign core_wen_X10 = _074__X ;
  assign FpSignedBitsToFloat_8U_23U_1_FpAdd_8U_23U_or_1_cse_C0 = _074__C ;
  assign FpSignedBitsToFloat_8U_23U_1_FpAdd_8U_23U_or_1_cse_X0 = _074__X ;
  assign core_wen_R10 = ( _074__R | _074__C & FpSignedBitsToFloat_8U_23U_1_FpAdd_8U_23U_or_1_cse_T ) & { 1{ FpSignedBitsToFloat_8U_23U_1_FpAdd_8U_23U_or_1_cse != 0 }} ;
  assign FpSignedBitsToFloat_8U_23U_1_FpAdd_8U_23U_or_1_cse_R0 = ( _074__R | _074__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _075_ = _074_ & mux_13_cse;
  assign _075__S = 0 ;
  logic [0:0] _074__C0 ;
  logic [0:0] _074__R0 ;
  logic [0:0] _074__X0 ;
  logic [0:0] mux_13_cse_C1 ;
  logic [0:0] mux_13_cse_R1 ;
  logic [0:0] mux_13_cse_X1 ;
  assign _075__T = _074__T | mux_13_cse_T ;
  assign _074__C0 = _075__C ;
  assign _074__X0 = _075__X ;
  assign mux_13_cse_C1 = _075__C ;
  assign mux_13_cse_X1 = _075__X ;
  assign _074__R0 = ( _075__R | _075__C & mux_13_cse_T ) & { 1{ mux_13_cse != 0 }} ;
  assign mux_13_cse_R1 = ( _075__R | _075__C & _074__T ) & { 1{ _074_ != 0 }} ;
  assign _076_ = _074_ & mux_27_nl;
  assign _076__S = 0 ;
  logic [0:0] _074__C1 ;
  logic [0:0] _074__R1 ;
  logic [0:0] _074__X1 ;
  logic [0:0] mux_27_nl_C0 ;
  logic [0:0] mux_27_nl_R0 ;
  logic [0:0] mux_27_nl_X0 ;
  assign _076__T = _074__T | mux_27_nl_T ;
  assign _074__C1 = _076__C ;
  assign _074__X1 = _076__X ;
  assign mux_27_nl_C0 = _076__C ;
  assign mux_27_nl_X0 = _076__X ;
  assign _074__R1 = ( _076__R | _076__C & mux_27_nl_T ) & { 1{ mux_27_nl != 0 }} ;
  assign mux_27_nl_R0 = ( _076__R | _076__C & _074__T ) & { 1{ _074_ != 0 }} ;
  assign FpSignedBitsToFloat_8U_23U_1_and_2_nl = _127_ & chn_o_rsci_d_22_0_mx0c1;
  assign FpSignedBitsToFloat_8U_23U_1_and_2_nl_S = 0 ;
  logic [0:0] _127__C0 ;
  logic [0:0] _127__R0 ;
  logic [0:0] _127__X0 ;
  logic [0:0] chn_o_rsci_d_22_0_mx0c1_C0 ;
  logic [0:0] chn_o_rsci_d_22_0_mx0c1_R0 ;
  logic [0:0] chn_o_rsci_d_22_0_mx0c1_X0 ;
  assign FpSignedBitsToFloat_8U_23U_1_and_2_nl_T = _127__T | chn_o_rsci_d_22_0_mx0c1_T ;
  assign _127__C0 = FpSignedBitsToFloat_8U_23U_1_and_2_nl_C ;
  assign _127__X0 = FpSignedBitsToFloat_8U_23U_1_and_2_nl_X ;
  assign chn_o_rsci_d_22_0_mx0c1_C0 = FpSignedBitsToFloat_8U_23U_1_and_2_nl_C ;
  assign chn_o_rsci_d_22_0_mx0c1_X0 = FpSignedBitsToFloat_8U_23U_1_and_2_nl_X ;
  assign _127__R0 = ( FpSignedBitsToFloat_8U_23U_1_and_2_nl_R | FpSignedBitsToFloat_8U_23U_1_and_2_nl_C & chn_o_rsci_d_22_0_mx0c1_T ) & { 1{ chn_o_rsci_d_22_0_mx0c1 != 0 }} ;
  assign chn_o_rsci_d_22_0_mx0c1_R0 = ( FpSignedBitsToFloat_8U_23U_1_and_2_nl_R | FpSignedBitsToFloat_8U_23U_1_and_2_nl_C & _127__T ) & { 1{ _127_ != 0 }} ;
  assign FpAdd_8U_23U_and_nl = _128_ & FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c;
  assign FpAdd_8U_23U_and_nl_S = 0 ;
  logic [0:0] _128__C0 ;
  logic [0:0] _128__R0 ;
  logic [0:0] _128__X0 ;
  logic [0:0] FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_C0 ;
  logic [0:0] FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_R0 ;
  logic [0:0] FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_X0 ;
  assign FpAdd_8U_23U_and_nl_T = _128__T | FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_T ;
  assign _128__C0 = FpAdd_8U_23U_and_nl_C ;
  assign _128__X0 = FpAdd_8U_23U_and_nl_X ;
  assign FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_C0 = FpAdd_8U_23U_and_nl_C ;
  assign FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_X0 = FpAdd_8U_23U_and_nl_X ;
  assign _128__R0 = ( FpAdd_8U_23U_and_nl_R | FpAdd_8U_23U_and_nl_C & FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_T ) & { 1{ FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c != 0 }} ;
  assign FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_R0 = ( FpAdd_8U_23U_and_nl_R | FpAdd_8U_23U_and_nl_C & _128__T ) & { 1{ _128_ != 0 }} ;
  assign _077_ = FpAdd_8U_23U_and_tmp & _129_;
  assign _077__S = 0 ;
  logic [0:0] FpAdd_8U_23U_and_tmp_C0 ;
  logic [0:0] FpAdd_8U_23U_and_tmp_R0 ;
  logic [0:0] FpAdd_8U_23U_and_tmp_X0 ;
  logic [0:0] _129__C0 ;
  logic [0:0] _129__R0 ;
  logic [0:0] _129__X0 ;
  assign _077__T = FpAdd_8U_23U_and_tmp_T | _129__T ;
  assign FpAdd_8U_23U_and_tmp_C0 = _077__C ;
  assign FpAdd_8U_23U_and_tmp_X0 = _077__X ;
  assign _129__C0 = _077__C ;
  assign _129__X0 = _077__X ;
  assign FpAdd_8U_23U_and_tmp_R0 = ( _077__R | _077__C & _129__T ) & { 1{ _129_ != 0 }} ;
  assign _129__R0 = ( _077__R | _077__C & FpAdd_8U_23U_and_tmp_T ) & { 1{ FpAdd_8U_23U_and_tmp != 0 }} ;
  assign FpAdd_8U_23U_and_3_nl = _077_ & FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c;
  assign FpAdd_8U_23U_and_3_nl_S = 0 ;
  logic [0:0] _077__C0 ;
  logic [0:0] _077__R0 ;
  logic [0:0] _077__X0 ;
  logic [0:0] FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_C1 ;
  logic [0:0] FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_R1 ;
  logic [0:0] FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_X1 ;
  assign FpAdd_8U_23U_and_3_nl_T = _077__T | FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_T ;
  assign _077__C0 = FpAdd_8U_23U_and_3_nl_C ;
  assign _077__X0 = FpAdd_8U_23U_and_3_nl_X ;
  assign FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_C1 = FpAdd_8U_23U_and_3_nl_C ;
  assign FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_X1 = FpAdd_8U_23U_and_3_nl_X ;
  assign _077__R0 = ( FpAdd_8U_23U_and_3_nl_R | FpAdd_8U_23U_and_3_nl_C & FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_T ) & { 1{ FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c != 0 }} ;
  assign FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_R1 = ( FpAdd_8U_23U_and_3_nl_R | FpAdd_8U_23U_and_3_nl_C & _077__T ) & { 1{ _077_ != 0 }} ;
  assign FpAdd_8U_23U_and_7_nl = FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0 & FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c;
  assign FpAdd_8U_23U_and_7_nl_S = 0 ;
  logic [0:0] FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_C0 ;
  logic [0:0] FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_R0 ;
  logic [0:0] FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_X0 ;
  logic [0:0] FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_C2 ;
  logic [0:0] FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_R2 ;
  logic [0:0] FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_X2 ;
  assign FpAdd_8U_23U_and_7_nl_T = FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_T | FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_T ;
  assign FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_C0 = FpAdd_8U_23U_and_7_nl_C ;
  assign FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_X0 = FpAdd_8U_23U_and_7_nl_X ;
  assign FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_C2 = FpAdd_8U_23U_and_7_nl_C ;
  assign FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_X2 = FpAdd_8U_23U_and_7_nl_X ;
  assign FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_R0 = ( FpAdd_8U_23U_and_7_nl_R | FpAdd_8U_23U_and_7_nl_C & FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_T ) & { 1{ FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c != 0 }} ;
  assign FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_R2 = ( FpAdd_8U_23U_and_7_nl_R | FpAdd_8U_23U_and_7_nl_C & FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_T ) & { 1{ FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0 != 0 }} ;
  assign _078_ = or_tmp_16 & main_stage_v_1;
  assign _078__S = 0 ;
  logic [0:0] or_tmp_16_C1 ;
  logic [0:0] or_tmp_16_R1 ;
  logic [0:0] or_tmp_16_X1 ;
  logic [0:0] main_stage_v_1_C2 ;
  logic [0:0] main_stage_v_1_R2 ;
  logic [0:0] main_stage_v_1_X2 ;
  assign _078__T = or_tmp_16_T | main_stage_v_1_T ;
  assign or_tmp_16_C1 = _078__C ;
  assign or_tmp_16_X1 = _078__X ;
  assign main_stage_v_1_C2 = _078__C ;
  assign main_stage_v_1_X2 = _078__X ;
  assign or_tmp_16_R1 = ( _078__R | _078__C & main_stage_v_1_T ) & { 1{ main_stage_v_1 != 0 }} ;
  assign main_stage_v_1_R2 = ( _078__R | _078__C & or_tmp_16_T ) & { 1{ or_tmp_16 != 0 }} ;
  assign _079_ = _125_ & FpSignedBitsToFloat_8U_23U_1_and_1_rgt;
  assign _079__S = 0 ;
  logic [0:0] _125__C0 ;
  logic [0:0] _125__R0 ;
  logic [0:0] _125__X0 ;
  logic [0:0] FpSignedBitsToFloat_8U_23U_1_and_1_rgt_C0 ;
  logic [0:0] FpSignedBitsToFloat_8U_23U_1_and_1_rgt_R0 ;
  logic [0:0] FpSignedBitsToFloat_8U_23U_1_and_1_rgt_X0 ;
  assign _079__T = _125__T | FpSignedBitsToFloat_8U_23U_1_and_1_rgt_T ;
  assign _125__C0 = _079__C ;
  assign _125__X0 = _079__X ;
  assign FpSignedBitsToFloat_8U_23U_1_and_1_rgt_C0 = _079__C ;
  assign FpSignedBitsToFloat_8U_23U_1_and_1_rgt_X0 = _079__X ;
  assign _125__R0 = ( _079__R | _079__C & FpSignedBitsToFloat_8U_23U_1_and_1_rgt_T ) & { 1{ FpSignedBitsToFloat_8U_23U_1_and_1_rgt != 0 }} ;
  assign FpSignedBitsToFloat_8U_23U_1_and_1_rgt_R0 = ( _079__R | _079__C & _125__T ) & { 1{ _125_ != 0 }} ;
  assign _080_ = FpAdd_8U_23U_mux_1_itm_2 & FpSignedBitsToFloat_8U_23U_1_and_rgt;
  assign _080__S = 0 ;
  logic [0:0] FpAdd_8U_23U_mux_1_itm_2_C0 ;
  logic [0:0] FpAdd_8U_23U_mux_1_itm_2_R0 ;
  logic [0:0] FpAdd_8U_23U_mux_1_itm_2_X0 ;
  logic [0:0] FpSignedBitsToFloat_8U_23U_1_and_rgt_C0 ;
  logic [0:0] FpSignedBitsToFloat_8U_23U_1_and_rgt_R0 ;
  logic [0:0] FpSignedBitsToFloat_8U_23U_1_and_rgt_X0 ;
  assign _080__T = FpAdd_8U_23U_mux_1_itm_2_T | FpSignedBitsToFloat_8U_23U_1_and_rgt_T ;
  assign FpAdd_8U_23U_mux_1_itm_2_C0 = _080__C ;
  assign FpAdd_8U_23U_mux_1_itm_2_X0 = _080__X ;
  assign FpSignedBitsToFloat_8U_23U_1_and_rgt_C0 = _080__C ;
  assign FpSignedBitsToFloat_8U_23U_1_and_rgt_X0 = _080__X ;
  assign FpAdd_8U_23U_mux_1_itm_2_R0 = ( _080__R | _080__C & FpSignedBitsToFloat_8U_23U_1_and_rgt_T ) & { 1{ FpSignedBitsToFloat_8U_23U_1_and_rgt != 0 }} ;
  assign FpSignedBitsToFloat_8U_23U_1_and_rgt_R0 = ( _080__R | _080__C & FpAdd_8U_23U_mux_1_itm_2_T ) & { 1{ FpAdd_8U_23U_mux_1_itm_2 != 0 }} ;
  assign _081_ = FpAdd_8U_23U_a_sva_36[31] & and_dcpl_28;
  assign _081__S = 0 ;
  logic [31:0] FpAdd_8U_23U_a_sva_36_C0 ;
  logic [31:0] FpAdd_8U_23U_a_sva_36_R0 ;
  logic [31:0] FpAdd_8U_23U_a_sva_36_X0 ;
  logic [0:0] and_dcpl_28_C0 ;
  logic [0:0] and_dcpl_28_R0 ;
  logic [0:0] and_dcpl_28_X0 ;
  assign _081__T = FpAdd_8U_23U_a_sva_36_T [31] | and_dcpl_28_T ;
  assign FpAdd_8U_23U_a_sva_36_C0 [31] = _081__C ;
  assign FpAdd_8U_23U_a_sva_36_X0 [31] = _081__X ;
  assign and_dcpl_28_C0 = _081__C ;
  assign and_dcpl_28_X0 = _081__X ;
  assign FpAdd_8U_23U_a_sva_36_R0 [31] = ( _081__R | _081__C & and_dcpl_28_T ) & { 1{ and_dcpl_28 != 0 }} ;
  assign and_dcpl_28_R0 = ( _081__R | _081__C & FpAdd_8U_23U_a_sva_36_T [31] ) & { 1{ FpAdd_8U_23U_a_sva_36[31] != 0 }} ;
  logic [7:0] fangyuan9;
  logic [7:0] fangyuan9_T ;
  logic [7:0] fangyuan9_R ;
  logic [7:0] fangyuan9_C ;
  logic [7:0] fangyuan9_X ;
  assign fangyuan9 = { FpAdd_8U_23U_and_2_nl, FpAdd_8U_23U_and_2_nl, FpAdd_8U_23U_and_2_nl, FpAdd_8U_23U_and_2_nl, FpAdd_8U_23U_and_2_nl, FpAdd_8U_23U_and_2_nl, FpAdd_8U_23U_and_2_nl, FpAdd_8U_23U_and_2_nl };
  assign fangyuan9_T = {  FpAdd_8U_23U_and_2_nl_T , FpAdd_8U_23U_and_2_nl_T , FpAdd_8U_23U_and_2_nl_T , FpAdd_8U_23U_and_2_nl_T , FpAdd_8U_23U_and_2_nl_T , FpAdd_8U_23U_and_2_nl_T , FpAdd_8U_23U_and_2_nl_T , FpAdd_8U_23U_and_2_nl_T  };
  logic [13:0] fangyuan9_S ;
  assign fangyuan9_S = 0 ;
  logic [0:0] FpAdd_8U_23U_and_2_nl_R0 ;
  logic [0:0] FpAdd_8U_23U_and_2_nl_X0 ;
  logic [0:0] FpAdd_8U_23U_and_2_nl_C0 ;
  assign FpAdd_8U_23U_and_2_nl_R0 = fangyuan9_R [7:7] ;
  assign FpAdd_8U_23U_and_2_nl_X0 = fangyuan9_X [7:7] ;
  assign FpAdd_8U_23U_and_2_nl_C0 = fangyuan9_C [7:7] ;
  logic [0:0] FpAdd_8U_23U_and_2_nl_R1 ;
  logic [0:0] FpAdd_8U_23U_and_2_nl_X1 ;
  logic [0:0] FpAdd_8U_23U_and_2_nl_C1 ;
  assign FpAdd_8U_23U_and_2_nl_R1 = fangyuan9_R [6:6] ;
  assign FpAdd_8U_23U_and_2_nl_X1 = fangyuan9_X [6:6] ;
  assign FpAdd_8U_23U_and_2_nl_C1 = fangyuan9_C [6:6] ;
  logic [0:0] FpAdd_8U_23U_and_2_nl_R2 ;
  logic [0:0] FpAdd_8U_23U_and_2_nl_X2 ;
  logic [0:0] FpAdd_8U_23U_and_2_nl_C2 ;
  assign FpAdd_8U_23U_and_2_nl_R2 = fangyuan9_R [5:5] ;
  assign FpAdd_8U_23U_and_2_nl_X2 = fangyuan9_X [5:5] ;
  assign FpAdd_8U_23U_and_2_nl_C2 = fangyuan9_C [5:5] ;
  logic [0:0] FpAdd_8U_23U_and_2_nl_R3 ;
  logic [0:0] FpAdd_8U_23U_and_2_nl_X3 ;
  logic [0:0] FpAdd_8U_23U_and_2_nl_C3 ;
  assign FpAdd_8U_23U_and_2_nl_R3 = fangyuan9_R [4:4] ;
  assign FpAdd_8U_23U_and_2_nl_X3 = fangyuan9_X [4:4] ;
  assign FpAdd_8U_23U_and_2_nl_C3 = fangyuan9_C [4:4] ;
  logic [0:0] FpAdd_8U_23U_and_2_nl_R4 ;
  logic [0:0] FpAdd_8U_23U_and_2_nl_X4 ;
  logic [0:0] FpAdd_8U_23U_and_2_nl_C4 ;
  assign FpAdd_8U_23U_and_2_nl_R4 = fangyuan9_R [3:3] ;
  assign FpAdd_8U_23U_and_2_nl_X4 = fangyuan9_X [3:3] ;
  assign FpAdd_8U_23U_and_2_nl_C4 = fangyuan9_C [3:3] ;
  logic [0:0] FpAdd_8U_23U_and_2_nl_R5 ;
  logic [0:0] FpAdd_8U_23U_and_2_nl_X5 ;
  logic [0:0] FpAdd_8U_23U_and_2_nl_C5 ;
  assign FpAdd_8U_23U_and_2_nl_R5 = fangyuan9_R [2:2] ;
  assign FpAdd_8U_23U_and_2_nl_X5 = fangyuan9_X [2:2] ;
  assign FpAdd_8U_23U_and_2_nl_C5 = fangyuan9_C [2:2] ;
  logic [0:0] FpAdd_8U_23U_and_2_nl_R6 ;
  logic [0:0] FpAdd_8U_23U_and_2_nl_X6 ;
  logic [0:0] FpAdd_8U_23U_and_2_nl_C6 ;
  assign FpAdd_8U_23U_and_2_nl_R6 = fangyuan9_R [1:1] ;
  assign FpAdd_8U_23U_and_2_nl_X6 = fangyuan9_X [1:1] ;
  assign FpAdd_8U_23U_and_2_nl_C6 = fangyuan9_C [1:1] ;
  logic [0:0] FpAdd_8U_23U_and_2_nl_R7 ;
  logic [0:0] FpAdd_8U_23U_and_2_nl_X7 ;
  logic [0:0] FpAdd_8U_23U_and_2_nl_C7 ;
  assign FpAdd_8U_23U_and_2_nl_R7 = fangyuan9_R [0:0] ;
  assign FpAdd_8U_23U_and_2_nl_X7 = fangyuan9_X [0:0] ;
  assign FpAdd_8U_23U_and_2_nl_C7 = fangyuan9_C [0:0] ;

  assign _082_ = FpAdd_8U_23U_if_3_if_acc_nl & fangyuan9;
  assign _082__S = 0 ;
  logic [7:0] FpAdd_8U_23U_if_3_if_acc_nl_C0 ;
  logic [7:0] FpAdd_8U_23U_if_3_if_acc_nl_R0 ;
  logic [7:0] FpAdd_8U_23U_if_3_if_acc_nl_X0 ;
  logic [7:0] fangyuan9_C0 ;
  logic [7:0] fangyuan9_R0 ;
  logic [7:0] fangyuan9_X0 ;
  assign _082__T = FpAdd_8U_23U_if_3_if_acc_nl_T | fangyuan9_T ;
  assign FpAdd_8U_23U_if_3_if_acc_nl_C0 = _082__C ;
  assign FpAdd_8U_23U_if_3_if_acc_nl_X0 = _082__X ;
  assign fangyuan9_C0 = _082__C ;
  assign fangyuan9_X0 = _082__X ;
  assign FpAdd_8U_23U_if_3_if_acc_nl_R0 = ( _082__R | _082__C & fangyuan9_T ) & { 8{ fangyuan9 != 0 }} ;
  assign fangyuan9_R0 = ( _082__R | _082__C & FpAdd_8U_23U_if_3_if_acc_nl_T ) & { 8{ FpAdd_8U_23U_if_3_if_acc_nl != 0 }} ;
  logic [7:0] fangyuan10;
  logic [7:0] fangyuan10_T ;
  logic [7:0] fangyuan10_R ;
  logic [7:0] fangyuan10_C ;
  logic [7:0] fangyuan10_X ;
  assign fangyuan10 = { FpAdd_8U_23U_and_1_nl, FpAdd_8U_23U_and_1_nl, FpAdd_8U_23U_and_1_nl, FpAdd_8U_23U_and_1_nl, FpAdd_8U_23U_and_1_nl, FpAdd_8U_23U_and_1_nl, FpAdd_8U_23U_and_1_nl, FpAdd_8U_23U_and_1_nl };
  assign fangyuan10_T = {  FpAdd_8U_23U_and_1_nl_T , FpAdd_8U_23U_and_1_nl_T , FpAdd_8U_23U_and_1_nl_T , FpAdd_8U_23U_and_1_nl_T , FpAdd_8U_23U_and_1_nl_T , FpAdd_8U_23U_and_1_nl_T , FpAdd_8U_23U_and_1_nl_T , FpAdd_8U_23U_and_1_nl_T  };
  logic [13:0] fangyuan10_S ;
  assign fangyuan10_S = 0 ;
  logic [0:0] FpAdd_8U_23U_and_1_nl_R0 ;
  logic [0:0] FpAdd_8U_23U_and_1_nl_X0 ;
  logic [0:0] FpAdd_8U_23U_and_1_nl_C0 ;
  assign FpAdd_8U_23U_and_1_nl_R0 = fangyuan10_R [7:7] ;
  assign FpAdd_8U_23U_and_1_nl_X0 = fangyuan10_X [7:7] ;
  assign FpAdd_8U_23U_and_1_nl_C0 = fangyuan10_C [7:7] ;
  logic [0:0] FpAdd_8U_23U_and_1_nl_R1 ;
  logic [0:0] FpAdd_8U_23U_and_1_nl_X1 ;
  logic [0:0] FpAdd_8U_23U_and_1_nl_C1 ;
  assign FpAdd_8U_23U_and_1_nl_R1 = fangyuan10_R [6:6] ;
  assign FpAdd_8U_23U_and_1_nl_X1 = fangyuan10_X [6:6] ;
  assign FpAdd_8U_23U_and_1_nl_C1 = fangyuan10_C [6:6] ;
  logic [0:0] FpAdd_8U_23U_and_1_nl_R2 ;
  logic [0:0] FpAdd_8U_23U_and_1_nl_X2 ;
  logic [0:0] FpAdd_8U_23U_and_1_nl_C2 ;
  assign FpAdd_8U_23U_and_1_nl_R2 = fangyuan10_R [5:5] ;
  assign FpAdd_8U_23U_and_1_nl_X2 = fangyuan10_X [5:5] ;
  assign FpAdd_8U_23U_and_1_nl_C2 = fangyuan10_C [5:5] ;
  logic [0:0] FpAdd_8U_23U_and_1_nl_R3 ;
  logic [0:0] FpAdd_8U_23U_and_1_nl_X3 ;
  logic [0:0] FpAdd_8U_23U_and_1_nl_C3 ;
  assign FpAdd_8U_23U_and_1_nl_R3 = fangyuan10_R [4:4] ;
  assign FpAdd_8U_23U_and_1_nl_X3 = fangyuan10_X [4:4] ;
  assign FpAdd_8U_23U_and_1_nl_C3 = fangyuan10_C [4:4] ;
  logic [0:0] FpAdd_8U_23U_and_1_nl_R4 ;
  logic [0:0] FpAdd_8U_23U_and_1_nl_X4 ;
  logic [0:0] FpAdd_8U_23U_and_1_nl_C4 ;
  assign FpAdd_8U_23U_and_1_nl_R4 = fangyuan10_R [3:3] ;
  assign FpAdd_8U_23U_and_1_nl_X4 = fangyuan10_X [3:3] ;
  assign FpAdd_8U_23U_and_1_nl_C4 = fangyuan10_C [3:3] ;
  logic [0:0] FpAdd_8U_23U_and_1_nl_R5 ;
  logic [0:0] FpAdd_8U_23U_and_1_nl_X5 ;
  logic [0:0] FpAdd_8U_23U_and_1_nl_C5 ;
  assign FpAdd_8U_23U_and_1_nl_R5 = fangyuan10_R [2:2] ;
  assign FpAdd_8U_23U_and_1_nl_X5 = fangyuan10_X [2:2] ;
  assign FpAdd_8U_23U_and_1_nl_C5 = fangyuan10_C [2:2] ;
  logic [0:0] FpAdd_8U_23U_and_1_nl_R6 ;
  logic [0:0] FpAdd_8U_23U_and_1_nl_X6 ;
  logic [0:0] FpAdd_8U_23U_and_1_nl_C6 ;
  assign FpAdd_8U_23U_and_1_nl_R6 = fangyuan10_R [1:1] ;
  assign FpAdd_8U_23U_and_1_nl_X6 = fangyuan10_X [1:1] ;
  assign FpAdd_8U_23U_and_1_nl_C6 = fangyuan10_C [1:1] ;
  logic [0:0] FpAdd_8U_23U_and_1_nl_R7 ;
  logic [0:0] FpAdd_8U_23U_and_1_nl_X7 ;
  logic [0:0] FpAdd_8U_23U_and_1_nl_C7 ;
  assign FpAdd_8U_23U_and_1_nl_R7 = fangyuan10_R [0:0] ;
  assign FpAdd_8U_23U_and_1_nl_X7 = fangyuan10_X [0:0] ;
  assign FpAdd_8U_23U_and_1_nl_C7 = fangyuan10_C [0:0] ;

  assign _083_ = FpAdd_8U_23U_qr_lpi_1_dfm_6 & fangyuan10;
  assign _083__S = 0 ;
  logic [7:0] FpAdd_8U_23U_qr_lpi_1_dfm_6_C3 ;
  logic [7:0] FpAdd_8U_23U_qr_lpi_1_dfm_6_R3 ;
  logic [7:0] FpAdd_8U_23U_qr_lpi_1_dfm_6_X3 ;
  logic [7:0] fangyuan10_C0 ;
  logic [7:0] fangyuan10_R0 ;
  logic [7:0] fangyuan10_X0 ;
  assign _083__T = FpAdd_8U_23U_qr_lpi_1_dfm_6_T | fangyuan10_T ;
  assign FpAdd_8U_23U_qr_lpi_1_dfm_6_C3 = _083__C ;
  assign FpAdd_8U_23U_qr_lpi_1_dfm_6_X3 = _083__X ;
  assign fangyuan10_C0 = _083__C ;
  assign fangyuan10_X0 = _083__X ;
  assign FpAdd_8U_23U_qr_lpi_1_dfm_6_R3 = ( _083__R | _083__C & fangyuan10_T ) & { 8{ fangyuan10 != 0 }} ;
  assign fangyuan10_R0 = ( _083__R | _083__C & FpAdd_8U_23U_qr_lpi_1_dfm_6_T ) & { 8{ FpAdd_8U_23U_qr_lpi_1_dfm_6 != 0 }} ;
  logic [7:0] fangyuan11;
  logic [7:0] fangyuan11_T ;
  logic [7:0] fangyuan11_R ;
  logic [7:0] fangyuan11_C ;
  logic [7:0] fangyuan11_X ;
  assign fangyuan11 = { _000_[2], _000_[2], _000_[2], _000_[2], _000_[2], _000_[2], _000_[2], _000_[2] };
  assign fangyuan11_T = {  _000__T [2] , _000__T [2] , _000__T [2] , _000__T [2] , _000__T [2] , _000__T [2] , _000__T [2] , _000__T [2]  };
  logic [13:0] fangyuan11_S ;
  assign fangyuan11_S = 0 ;
  logic [2:0] _000__R0 ;
  logic [2:0] _000__X0 ;
  logic [2:0] _000__C0 ;
  assign _000__R0 [2:2] = fangyuan11_R [7:7] ;
  assign _000__X0 [2:2] = fangyuan11_X [7:7] ;
  assign _000__C0 [2:2] = fangyuan11_C [7:7] ;
  assign { _000__R0 [0], _000__R0 [1] } = 0;
  assign { _000__X0 [0], _000__X0 [1] } = 0;
  assign { _000__C0 [0], _000__C0 [1] } = 0;
  logic [2:0] _000__R1 ;
  logic [2:0] _000__X1 ;
  logic [2:0] _000__C1 ;
  assign _000__R1 [2:2] = fangyuan11_R [6:6] ;
  assign _000__X1 [2:2] = fangyuan11_X [6:6] ;
  assign _000__C1 [2:2] = fangyuan11_C [6:6] ;
  assign { _000__R1 [0], _000__R1 [1] } = 0;
  assign { _000__X1 [0], _000__X1 [1] } = 0;
  assign { _000__C1 [0], _000__C1 [1] } = 0;
  logic [2:0] _000__R2 ;
  logic [2:0] _000__X2 ;
  logic [2:0] _000__C2 ;
  assign _000__R2 [2:2] = fangyuan11_R [5:5] ;
  assign _000__X2 [2:2] = fangyuan11_X [5:5] ;
  assign _000__C2 [2:2] = fangyuan11_C [5:5] ;
  assign { _000__R2 [0], _000__R2 [1] } = 0;
  assign { _000__X2 [0], _000__X2 [1] } = 0;
  assign { _000__C2 [0], _000__C2 [1] } = 0;
  logic [2:0] _000__R3 ;
  logic [2:0] _000__X3 ;
  logic [2:0] _000__C3 ;
  assign _000__R3 [2:2] = fangyuan11_R [4:4] ;
  assign _000__X3 [2:2] = fangyuan11_X [4:4] ;
  assign _000__C3 [2:2] = fangyuan11_C [4:4] ;
  assign { _000__R3 [0], _000__R3 [1] } = 0;
  assign { _000__X3 [0], _000__X3 [1] } = 0;
  assign { _000__C3 [0], _000__C3 [1] } = 0;
  logic [2:0] _000__R4 ;
  logic [2:0] _000__X4 ;
  logic [2:0] _000__C4 ;
  assign _000__R4 [2:2] = fangyuan11_R [3:3] ;
  assign _000__X4 [2:2] = fangyuan11_X [3:3] ;
  assign _000__C4 [2:2] = fangyuan11_C [3:3] ;
  assign { _000__R4 [0], _000__R4 [1] } = 0;
  assign { _000__X4 [0], _000__X4 [1] } = 0;
  assign { _000__C4 [0], _000__C4 [1] } = 0;
  logic [2:0] _000__R5 ;
  logic [2:0] _000__X5 ;
  logic [2:0] _000__C5 ;
  assign _000__R5 [2:2] = fangyuan11_R [2:2] ;
  assign _000__X5 [2:2] = fangyuan11_X [2:2] ;
  assign _000__C5 [2:2] = fangyuan11_C [2:2] ;
  assign { _000__R5 [0], _000__R5 [1] } = 0;
  assign { _000__X5 [0], _000__X5 [1] } = 0;
  assign { _000__C5 [0], _000__C5 [1] } = 0;
  logic [2:0] _000__R6 ;
  logic [2:0] _000__X6 ;
  logic [2:0] _000__C6 ;
  assign _000__R6 [2:2] = fangyuan11_R [1:1] ;
  assign _000__X6 [2:2] = fangyuan11_X [1:1] ;
  assign _000__C6 [2:2] = fangyuan11_C [1:1] ;
  assign { _000__R6 [0], _000__R6 [1] } = 0;
  assign { _000__X6 [0], _000__X6 [1] } = 0;
  assign { _000__C6 [0], _000__C6 [1] } = 0;
  logic [2:0] _000__R7 ;
  logic [2:0] _000__X7 ;
  logic [2:0] _000__C7 ;
  assign _000__R7 [2:2] = fangyuan11_R [0:0] ;
  assign _000__X7 [2:2] = fangyuan11_X [0:0] ;
  assign _000__C7 [2:2] = fangyuan11_C [0:0] ;

  assign _084_ = FpNormalize_8U_49U_FpNormalize_8U_49U_and_nl & fangyuan11;
  assign _084__S = 0 ;
  logic [7:0] FpNormalize_8U_49U_FpNormalize_8U_49U_and_nl_C0 ;
  logic [7:0] FpNormalize_8U_49U_FpNormalize_8U_49U_and_nl_R0 ;
  logic [7:0] FpNormalize_8U_49U_FpNormalize_8U_49U_and_nl_X0 ;
  logic [7:0] fangyuan11_C0 ;
  logic [7:0] fangyuan11_R0 ;
  logic [7:0] fangyuan11_X0 ;
  assign _084__T = FpNormalize_8U_49U_FpNormalize_8U_49U_and_nl_T | fangyuan11_T ;
  assign FpNormalize_8U_49U_FpNormalize_8U_49U_and_nl_C0 = _084__C ;
  assign FpNormalize_8U_49U_FpNormalize_8U_49U_and_nl_X0 = _084__X ;
  assign fangyuan11_C0 = _084__C ;
  assign fangyuan11_X0 = _084__X ;
  assign FpNormalize_8U_49U_FpNormalize_8U_49U_and_nl_R0 = ( _084__R | _084__C & fangyuan11_T ) & { 8{ fangyuan11 != 0 }} ;
  assign fangyuan11_R0 = ( _084__R | _084__C & FpNormalize_8U_49U_FpNormalize_8U_49U_and_nl_T ) & { 8{ FpNormalize_8U_49U_FpNormalize_8U_49U_and_nl != 0 }} ;
  logic [7:0] fangyuan12;
  logic [7:0] fangyuan12_T ;
  logic [7:0] fangyuan12_R ;
  logic [7:0] fangyuan12_C ;
  logic [7:0] fangyuan12_X ;
  assign fangyuan12 = { FpAdd_8U_23U_or_cse, FpAdd_8U_23U_or_cse, FpAdd_8U_23U_or_cse, FpAdd_8U_23U_or_cse, FpAdd_8U_23U_or_cse, FpAdd_8U_23U_or_cse, FpAdd_8U_23U_or_cse, FpAdd_8U_23U_or_cse };
  assign fangyuan12_T = {  FpAdd_8U_23U_or_cse_T , FpAdd_8U_23U_or_cse_T , FpAdd_8U_23U_or_cse_T , FpAdd_8U_23U_or_cse_T , FpAdd_8U_23U_or_cse_T , FpAdd_8U_23U_or_cse_T , FpAdd_8U_23U_or_cse_T , FpAdd_8U_23U_or_cse_T  };
  logic [13:0] fangyuan12_S ;
  assign fangyuan12_S = 0 ;
  logic [0:0] FpAdd_8U_23U_or_cse_R1 ;
  logic [0:0] FpAdd_8U_23U_or_cse_X1 ;
  logic [0:0] FpAdd_8U_23U_or_cse_C1 ;
  assign FpAdd_8U_23U_or_cse_R1 = fangyuan12_R [7:7] ;
  assign FpAdd_8U_23U_or_cse_X1 = fangyuan12_X [7:7] ;
  assign FpAdd_8U_23U_or_cse_C1 = fangyuan12_C [7:7] ;
  logic [0:0] FpAdd_8U_23U_or_cse_R2 ;
  logic [0:0] FpAdd_8U_23U_or_cse_X2 ;
  logic [0:0] FpAdd_8U_23U_or_cse_C2 ;
  assign FpAdd_8U_23U_or_cse_R2 = fangyuan12_R [6:6] ;
  assign FpAdd_8U_23U_or_cse_X2 = fangyuan12_X [6:6] ;
  assign FpAdd_8U_23U_or_cse_C2 = fangyuan12_C [6:6] ;
  logic [0:0] FpAdd_8U_23U_or_cse_R3 ;
  logic [0:0] FpAdd_8U_23U_or_cse_X3 ;
  logic [0:0] FpAdd_8U_23U_or_cse_C3 ;
  assign FpAdd_8U_23U_or_cse_R3 = fangyuan12_R [5:5] ;
  assign FpAdd_8U_23U_or_cse_X3 = fangyuan12_X [5:5] ;
  assign FpAdd_8U_23U_or_cse_C3 = fangyuan12_C [5:5] ;
  logic [0:0] FpAdd_8U_23U_or_cse_R4 ;
  logic [0:0] FpAdd_8U_23U_or_cse_X4 ;
  logic [0:0] FpAdd_8U_23U_or_cse_C4 ;
  assign FpAdd_8U_23U_or_cse_R4 = fangyuan12_R [4:4] ;
  assign FpAdd_8U_23U_or_cse_X4 = fangyuan12_X [4:4] ;
  assign FpAdd_8U_23U_or_cse_C4 = fangyuan12_C [4:4] ;
  logic [0:0] FpAdd_8U_23U_or_cse_R5 ;
  logic [0:0] FpAdd_8U_23U_or_cse_X5 ;
  logic [0:0] FpAdd_8U_23U_or_cse_C5 ;
  assign FpAdd_8U_23U_or_cse_R5 = fangyuan12_R [3:3] ;
  assign FpAdd_8U_23U_or_cse_X5 = fangyuan12_X [3:3] ;
  assign FpAdd_8U_23U_or_cse_C5 = fangyuan12_C [3:3] ;
  logic [0:0] FpAdd_8U_23U_or_cse_R6 ;
  logic [0:0] FpAdd_8U_23U_or_cse_X6 ;
  logic [0:0] FpAdd_8U_23U_or_cse_C6 ;
  assign FpAdd_8U_23U_or_cse_R6 = fangyuan12_R [2:2] ;
  assign FpAdd_8U_23U_or_cse_X6 = fangyuan12_X [2:2] ;
  assign FpAdd_8U_23U_or_cse_C6 = fangyuan12_C [2:2] ;
  logic [0:0] FpAdd_8U_23U_or_cse_R7 ;
  logic [0:0] FpAdd_8U_23U_or_cse_X7 ;
  logic [0:0] FpAdd_8U_23U_or_cse_C7 ;
  assign FpAdd_8U_23U_or_cse_R7 = fangyuan12_R [1:1] ;
  assign FpAdd_8U_23U_or_cse_X7 = fangyuan12_X [1:1] ;
  assign FpAdd_8U_23U_or_cse_C7 = fangyuan12_C [1:1] ;
  logic [0:0] FpAdd_8U_23U_or_cse_R8 ;
  logic [0:0] FpAdd_8U_23U_or_cse_X8 ;
  logic [0:0] FpAdd_8U_23U_or_cse_C8 ;
  assign FpAdd_8U_23U_or_cse_R8 = fangyuan12_R [0:0] ;
  assign FpAdd_8U_23U_or_cse_X8 = fangyuan12_X [0:0] ;
  assign FpAdd_8U_23U_or_cse_C8 = fangyuan12_C [0:0] ;

  assign _085_ = FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4 & fangyuan12;
  assign _085__S = 0 ;
  logic [7:0] FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_C0 ;
  logic [7:0] FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_R0 ;
  logic [7:0] FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_X0 ;
  logic [7:0] fangyuan12_C0 ;
  logic [7:0] fangyuan12_R0 ;
  logic [7:0] fangyuan12_X0 ;
  assign _085__T = FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_T | fangyuan12_T ;
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_C0 = _085__C ;
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_X0 = _085__X ;
  assign fangyuan12_C0 = _085__C ;
  assign fangyuan12_X0 = _085__X ;
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_R0 = ( _085__R | _085__C & fangyuan12_T ) & { 8{ fangyuan12 != 0 }} ;
  assign fangyuan12_R0 = ( _085__R | _085__C & FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_T ) & { 8{ FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4 != 0 }} ;
  logic [7:0] fangyuan13;
  logic [7:0] fangyuan13_T ;
  logic [7:0] fangyuan13_R ;
  logic [7:0] fangyuan13_C ;
  logic [7:0] fangyuan13_X ;
  assign fangyuan13 = { FpAdd_8U_23U_and_7_nl, FpAdd_8U_23U_and_7_nl, FpAdd_8U_23U_and_7_nl, FpAdd_8U_23U_and_7_nl, FpAdd_8U_23U_and_7_nl, FpAdd_8U_23U_and_7_nl, FpAdd_8U_23U_and_7_nl, FpAdd_8U_23U_and_7_nl };
  assign fangyuan13_T = {  FpAdd_8U_23U_and_7_nl_T , FpAdd_8U_23U_and_7_nl_T , FpAdd_8U_23U_and_7_nl_T , FpAdd_8U_23U_and_7_nl_T , FpAdd_8U_23U_and_7_nl_T , FpAdd_8U_23U_and_7_nl_T , FpAdd_8U_23U_and_7_nl_T , FpAdd_8U_23U_and_7_nl_T  };
  logic [13:0] fangyuan13_S ;
  assign fangyuan13_S = 0 ;
  logic [0:0] FpAdd_8U_23U_and_7_nl_R0 ;
  logic [0:0] FpAdd_8U_23U_and_7_nl_X0 ;
  logic [0:0] FpAdd_8U_23U_and_7_nl_C0 ;
  assign FpAdd_8U_23U_and_7_nl_R0 = fangyuan13_R [7:7] ;
  assign FpAdd_8U_23U_and_7_nl_X0 = fangyuan13_X [7:7] ;
  assign FpAdd_8U_23U_and_7_nl_C0 = fangyuan13_C [7:7] ;
  logic [0:0] FpAdd_8U_23U_and_7_nl_R1 ;
  logic [0:0] FpAdd_8U_23U_and_7_nl_X1 ;
  logic [0:0] FpAdd_8U_23U_and_7_nl_C1 ;
  assign FpAdd_8U_23U_and_7_nl_R1 = fangyuan13_R [6:6] ;
  assign FpAdd_8U_23U_and_7_nl_X1 = fangyuan13_X [6:6] ;
  assign FpAdd_8U_23U_and_7_nl_C1 = fangyuan13_C [6:6] ;
  logic [0:0] FpAdd_8U_23U_and_7_nl_R2 ;
  logic [0:0] FpAdd_8U_23U_and_7_nl_X2 ;
  logic [0:0] FpAdd_8U_23U_and_7_nl_C2 ;
  assign FpAdd_8U_23U_and_7_nl_R2 = fangyuan13_R [5:5] ;
  assign FpAdd_8U_23U_and_7_nl_X2 = fangyuan13_X [5:5] ;
  assign FpAdd_8U_23U_and_7_nl_C2 = fangyuan13_C [5:5] ;
  logic [0:0] FpAdd_8U_23U_and_7_nl_R3 ;
  logic [0:0] FpAdd_8U_23U_and_7_nl_X3 ;
  logic [0:0] FpAdd_8U_23U_and_7_nl_C3 ;
  assign FpAdd_8U_23U_and_7_nl_R3 = fangyuan13_R [4:4] ;
  assign FpAdd_8U_23U_and_7_nl_X3 = fangyuan13_X [4:4] ;
  assign FpAdd_8U_23U_and_7_nl_C3 = fangyuan13_C [4:4] ;
  logic [0:0] FpAdd_8U_23U_and_7_nl_R4 ;
  logic [0:0] FpAdd_8U_23U_and_7_nl_X4 ;
  logic [0:0] FpAdd_8U_23U_and_7_nl_C4 ;
  assign FpAdd_8U_23U_and_7_nl_R4 = fangyuan13_R [3:3] ;
  assign FpAdd_8U_23U_and_7_nl_X4 = fangyuan13_X [3:3] ;
  assign FpAdd_8U_23U_and_7_nl_C4 = fangyuan13_C [3:3] ;
  logic [0:0] FpAdd_8U_23U_and_7_nl_R5 ;
  logic [0:0] FpAdd_8U_23U_and_7_nl_X5 ;
  logic [0:0] FpAdd_8U_23U_and_7_nl_C5 ;
  assign FpAdd_8U_23U_and_7_nl_R5 = fangyuan13_R [2:2] ;
  assign FpAdd_8U_23U_and_7_nl_X5 = fangyuan13_X [2:2] ;
  assign FpAdd_8U_23U_and_7_nl_C5 = fangyuan13_C [2:2] ;
  logic [0:0] FpAdd_8U_23U_and_7_nl_R6 ;
  logic [0:0] FpAdd_8U_23U_and_7_nl_X6 ;
  logic [0:0] FpAdd_8U_23U_and_7_nl_C6 ;
  assign FpAdd_8U_23U_and_7_nl_R6 = fangyuan13_R [1:1] ;
  assign FpAdd_8U_23U_and_7_nl_X6 = fangyuan13_X [1:1] ;
  assign FpAdd_8U_23U_and_7_nl_C6 = fangyuan13_C [1:1] ;
  logic [0:0] FpAdd_8U_23U_and_7_nl_R7 ;
  logic [0:0] FpAdd_8U_23U_and_7_nl_X7 ;
  logic [0:0] FpAdd_8U_23U_and_7_nl_C7 ;
  assign FpAdd_8U_23U_and_7_nl_R7 = fangyuan13_R [0:0] ;
  assign FpAdd_8U_23U_and_7_nl_X7 = fangyuan13_X [0:0] ;
  assign FpAdd_8U_23U_and_7_nl_C7 = fangyuan13_C [0:0] ;

  assign _086_ = 8'b11111110 & fangyuan13;
  assign _086__S = 0 ;
  logic [7:0] fangyuan13_C0 ;
  logic [7:0] fangyuan13_R0 ;
  logic [7:0] fangyuan13_X0 ;
  assign _086__T = fangyuan13_T ;
  assign fangyuan13_C0 = _086__C ;
  assign fangyuan13_R0 = _086__R ;
  assign fangyuan13_X0 = _086__X ;
  logic [7:0] fangyuan14;
  logic [7:0] fangyuan14_T ;
  logic [7:0] fangyuan14_R ;
  logic [7:0] fangyuan14_C ;
  logic [7:0] fangyuan14_X ;
  assign fangyuan14 = { FpAdd_8U_23U_and_3_nl, FpAdd_8U_23U_and_3_nl, FpAdd_8U_23U_and_3_nl, FpAdd_8U_23U_and_3_nl, FpAdd_8U_23U_and_3_nl, FpAdd_8U_23U_and_3_nl, FpAdd_8U_23U_and_3_nl, FpAdd_8U_23U_and_3_nl };
  assign fangyuan14_T = {  FpAdd_8U_23U_and_3_nl_T , FpAdd_8U_23U_and_3_nl_T , FpAdd_8U_23U_and_3_nl_T , FpAdd_8U_23U_and_3_nl_T , FpAdd_8U_23U_and_3_nl_T , FpAdd_8U_23U_and_3_nl_T , FpAdd_8U_23U_and_3_nl_T , FpAdd_8U_23U_and_3_nl_T  };
  logic [13:0] fangyuan14_S ;
  assign fangyuan14_S = 0 ;
  logic [0:0] FpAdd_8U_23U_and_3_nl_R0 ;
  logic [0:0] FpAdd_8U_23U_and_3_nl_X0 ;
  logic [0:0] FpAdd_8U_23U_and_3_nl_C0 ;
  assign FpAdd_8U_23U_and_3_nl_R0 = fangyuan14_R [7:7] ;
  assign FpAdd_8U_23U_and_3_nl_X0 = fangyuan14_X [7:7] ;
  assign FpAdd_8U_23U_and_3_nl_C0 = fangyuan14_C [7:7] ;
  logic [0:0] FpAdd_8U_23U_and_3_nl_R1 ;
  logic [0:0] FpAdd_8U_23U_and_3_nl_X1 ;
  logic [0:0] FpAdd_8U_23U_and_3_nl_C1 ;
  assign FpAdd_8U_23U_and_3_nl_R1 = fangyuan14_R [6:6] ;
  assign FpAdd_8U_23U_and_3_nl_X1 = fangyuan14_X [6:6] ;
  assign FpAdd_8U_23U_and_3_nl_C1 = fangyuan14_C [6:6] ;
  logic [0:0] FpAdd_8U_23U_and_3_nl_R2 ;
  logic [0:0] FpAdd_8U_23U_and_3_nl_X2 ;
  logic [0:0] FpAdd_8U_23U_and_3_nl_C2 ;
  assign FpAdd_8U_23U_and_3_nl_R2 = fangyuan14_R [5:5] ;
  assign FpAdd_8U_23U_and_3_nl_X2 = fangyuan14_X [5:5] ;
  assign FpAdd_8U_23U_and_3_nl_C2 = fangyuan14_C [5:5] ;
  logic [0:0] FpAdd_8U_23U_and_3_nl_R3 ;
  logic [0:0] FpAdd_8U_23U_and_3_nl_X3 ;
  logic [0:0] FpAdd_8U_23U_and_3_nl_C3 ;
  assign FpAdd_8U_23U_and_3_nl_R3 = fangyuan14_R [4:4] ;
  assign FpAdd_8U_23U_and_3_nl_X3 = fangyuan14_X [4:4] ;
  assign FpAdd_8U_23U_and_3_nl_C3 = fangyuan14_C [4:4] ;
  logic [0:0] FpAdd_8U_23U_and_3_nl_R4 ;
  logic [0:0] FpAdd_8U_23U_and_3_nl_X4 ;
  logic [0:0] FpAdd_8U_23U_and_3_nl_C4 ;
  assign FpAdd_8U_23U_and_3_nl_R4 = fangyuan14_R [3:3] ;
  assign FpAdd_8U_23U_and_3_nl_X4 = fangyuan14_X [3:3] ;
  assign FpAdd_8U_23U_and_3_nl_C4 = fangyuan14_C [3:3] ;
  logic [0:0] FpAdd_8U_23U_and_3_nl_R5 ;
  logic [0:0] FpAdd_8U_23U_and_3_nl_X5 ;
  logic [0:0] FpAdd_8U_23U_and_3_nl_C5 ;
  assign FpAdd_8U_23U_and_3_nl_R5 = fangyuan14_R [2:2] ;
  assign FpAdd_8U_23U_and_3_nl_X5 = fangyuan14_X [2:2] ;
  assign FpAdd_8U_23U_and_3_nl_C5 = fangyuan14_C [2:2] ;
  logic [0:0] FpAdd_8U_23U_and_3_nl_R6 ;
  logic [0:0] FpAdd_8U_23U_and_3_nl_X6 ;
  logic [0:0] FpAdd_8U_23U_and_3_nl_C6 ;
  assign FpAdd_8U_23U_and_3_nl_R6 = fangyuan14_R [1:1] ;
  assign FpAdd_8U_23U_and_3_nl_X6 = fangyuan14_X [1:1] ;
  assign FpAdd_8U_23U_and_3_nl_C6 = fangyuan14_C [1:1] ;
  logic [0:0] FpAdd_8U_23U_and_3_nl_R7 ;
  logic [0:0] FpAdd_8U_23U_and_3_nl_X7 ;
  logic [0:0] FpAdd_8U_23U_and_3_nl_C7 ;
  assign FpAdd_8U_23U_and_3_nl_R7 = fangyuan14_R [0:0] ;
  assign FpAdd_8U_23U_and_3_nl_X7 = fangyuan14_X [0:0] ;
  assign FpAdd_8U_23U_and_3_nl_C7 = fangyuan14_C [0:0] ;

  assign _087_ = FpAdd_8U_23U_if_4_if_acc_nl & fangyuan14;
  assign _087__S = 0 ;
  logic [7:0] FpAdd_8U_23U_if_4_if_acc_nl_C0 ;
  logic [7:0] FpAdd_8U_23U_if_4_if_acc_nl_R0 ;
  logic [7:0] FpAdd_8U_23U_if_4_if_acc_nl_X0 ;
  logic [7:0] fangyuan14_C0 ;
  logic [7:0] fangyuan14_R0 ;
  logic [7:0] fangyuan14_X0 ;
  assign _087__T = FpAdd_8U_23U_if_4_if_acc_nl_T | fangyuan14_T ;
  assign FpAdd_8U_23U_if_4_if_acc_nl_C0 = _087__C ;
  assign FpAdd_8U_23U_if_4_if_acc_nl_X0 = _087__X ;
  assign fangyuan14_C0 = _087__C ;
  assign fangyuan14_X0 = _087__X ;
  assign FpAdd_8U_23U_if_4_if_acc_nl_R0 = ( _087__R | _087__C & fangyuan14_T ) & { 8{ fangyuan14 != 0 }} ;
  assign fangyuan14_R0 = ( _087__R | _087__C & FpAdd_8U_23U_if_4_if_acc_nl_T ) & { 8{ FpAdd_8U_23U_if_4_if_acc_nl != 0 }} ;
  logic [7:0] fangyuan15;
  logic [7:0] fangyuan15_T ;
  logic [7:0] fangyuan15_R ;
  logic [7:0] fangyuan15_C ;
  logic [7:0] fangyuan15_X ;
  assign fangyuan15 = { FpAdd_8U_23U_and_nl, FpAdd_8U_23U_and_nl, FpAdd_8U_23U_and_nl, FpAdd_8U_23U_and_nl, FpAdd_8U_23U_and_nl, FpAdd_8U_23U_and_nl, FpAdd_8U_23U_and_nl, FpAdd_8U_23U_and_nl };
  assign fangyuan15_T = {  FpAdd_8U_23U_and_nl_T , FpAdd_8U_23U_and_nl_T , FpAdd_8U_23U_and_nl_T , FpAdd_8U_23U_and_nl_T , FpAdd_8U_23U_and_nl_T , FpAdd_8U_23U_and_nl_T , FpAdd_8U_23U_and_nl_T , FpAdd_8U_23U_and_nl_T  };
  logic [13:0] fangyuan15_S ;
  assign fangyuan15_S = 0 ;
  logic [0:0] FpAdd_8U_23U_and_nl_R0 ;
  logic [0:0] FpAdd_8U_23U_and_nl_X0 ;
  logic [0:0] FpAdd_8U_23U_and_nl_C0 ;
  assign FpAdd_8U_23U_and_nl_R0 = fangyuan15_R [7:7] ;
  assign FpAdd_8U_23U_and_nl_X0 = fangyuan15_X [7:7] ;
  assign FpAdd_8U_23U_and_nl_C0 = fangyuan15_C [7:7] ;
  logic [0:0] FpAdd_8U_23U_and_nl_R1 ;
  logic [0:0] FpAdd_8U_23U_and_nl_X1 ;
  logic [0:0] FpAdd_8U_23U_and_nl_C1 ;
  assign FpAdd_8U_23U_and_nl_R1 = fangyuan15_R [6:6] ;
  assign FpAdd_8U_23U_and_nl_X1 = fangyuan15_X [6:6] ;
  assign FpAdd_8U_23U_and_nl_C1 = fangyuan15_C [6:6] ;
  logic [0:0] FpAdd_8U_23U_and_nl_R2 ;
  logic [0:0] FpAdd_8U_23U_and_nl_X2 ;
  logic [0:0] FpAdd_8U_23U_and_nl_C2 ;
  assign FpAdd_8U_23U_and_nl_R2 = fangyuan15_R [5:5] ;
  assign FpAdd_8U_23U_and_nl_X2 = fangyuan15_X [5:5] ;
  assign FpAdd_8U_23U_and_nl_C2 = fangyuan15_C [5:5] ;
  logic [0:0] FpAdd_8U_23U_and_nl_R3 ;
  logic [0:0] FpAdd_8U_23U_and_nl_X3 ;
  logic [0:0] FpAdd_8U_23U_and_nl_C3 ;
  assign FpAdd_8U_23U_and_nl_R3 = fangyuan15_R [4:4] ;
  assign FpAdd_8U_23U_and_nl_X3 = fangyuan15_X [4:4] ;
  assign FpAdd_8U_23U_and_nl_C3 = fangyuan15_C [4:4] ;
  logic [0:0] FpAdd_8U_23U_and_nl_R4 ;
  logic [0:0] FpAdd_8U_23U_and_nl_X4 ;
  logic [0:0] FpAdd_8U_23U_and_nl_C4 ;
  assign FpAdd_8U_23U_and_nl_R4 = fangyuan15_R [3:3] ;
  assign FpAdd_8U_23U_and_nl_X4 = fangyuan15_X [3:3] ;
  assign FpAdd_8U_23U_and_nl_C4 = fangyuan15_C [3:3] ;
  logic [0:0] FpAdd_8U_23U_and_nl_R5 ;
  logic [0:0] FpAdd_8U_23U_and_nl_X5 ;
  logic [0:0] FpAdd_8U_23U_and_nl_C5 ;
  assign FpAdd_8U_23U_and_nl_R5 = fangyuan15_R [2:2] ;
  assign FpAdd_8U_23U_and_nl_X5 = fangyuan15_X [2:2] ;
  assign FpAdd_8U_23U_and_nl_C5 = fangyuan15_C [2:2] ;
  logic [0:0] FpAdd_8U_23U_and_nl_R6 ;
  logic [0:0] FpAdd_8U_23U_and_nl_X6 ;
  logic [0:0] FpAdd_8U_23U_and_nl_C6 ;
  assign FpAdd_8U_23U_and_nl_R6 = fangyuan15_R [1:1] ;
  assign FpAdd_8U_23U_and_nl_X6 = fangyuan15_X [1:1] ;
  assign FpAdd_8U_23U_and_nl_C6 = fangyuan15_C [1:1] ;
  logic [0:0] FpAdd_8U_23U_and_nl_R7 ;
  logic [0:0] FpAdd_8U_23U_and_nl_X7 ;
  logic [0:0] FpAdd_8U_23U_and_nl_C7 ;
  assign FpAdd_8U_23U_and_nl_R7 = fangyuan15_R [0:0] ;
  assign FpAdd_8U_23U_and_nl_X7 = fangyuan15_X [0:0] ;
  assign FpAdd_8U_23U_and_nl_C7 = fangyuan15_C [0:0] ;

  assign _088_ = FpAdd_8U_23U_o_expo_lpi_1_dfm_2 & fangyuan15;
  assign _088__S = 0 ;
  logic [7:0] FpAdd_8U_23U_o_expo_lpi_1_dfm_2_C2 ;
  logic [7:0] FpAdd_8U_23U_o_expo_lpi_1_dfm_2_R2 ;
  logic [7:0] FpAdd_8U_23U_o_expo_lpi_1_dfm_2_X2 ;
  logic [7:0] fangyuan15_C0 ;
  logic [7:0] fangyuan15_R0 ;
  logic [7:0] fangyuan15_X0 ;
  assign _088__T = FpAdd_8U_23U_o_expo_lpi_1_dfm_2_T | fangyuan15_T ;
  assign FpAdd_8U_23U_o_expo_lpi_1_dfm_2_C2 = _088__C ;
  assign FpAdd_8U_23U_o_expo_lpi_1_dfm_2_X2 = _088__X ;
  assign fangyuan15_C0 = _088__C ;
  assign fangyuan15_X0 = _088__X ;
  assign FpAdd_8U_23U_o_expo_lpi_1_dfm_2_R2 = ( _088__R | _088__C & fangyuan15_T ) & { 8{ fangyuan15 != 0 }} ;
  assign fangyuan15_R0 = ( _088__R | _088__C & FpAdd_8U_23U_o_expo_lpi_1_dfm_2_T ) & { 8{ FpAdd_8U_23U_o_expo_lpi_1_dfm_2 != 0 }} ;
  assign FpAdd_8U_23U_is_a_greater_oif_equal_tmp = chn_a_rsci_d_mxwt[30:23] == chn_b_rsci_d_mxwt[30:23];
  assign FpAdd_8U_23U_is_a_greater_oif_equal_tmp_S = 0 ;
  assign { chn_b_rsci_d_mxwt_R0 [0], chn_b_rsci_d_mxwt_R0 [1], chn_b_rsci_d_mxwt_R0 [2], chn_b_rsci_d_mxwt_R0 [3], chn_b_rsci_d_mxwt_R0 [4], chn_b_rsci_d_mxwt_R0 [5], chn_b_rsci_d_mxwt_R0 [6], chn_b_rsci_d_mxwt_R0 [7], chn_b_rsci_d_mxwt_R0 [8], chn_b_rsci_d_mxwt_R0 [9], chn_b_rsci_d_mxwt_R0 [10], chn_b_rsci_d_mxwt_R0 [11], chn_b_rsci_d_mxwt_R0 [12], chn_b_rsci_d_mxwt_R0 [13], chn_b_rsci_d_mxwt_R0 [14], chn_b_rsci_d_mxwt_R0 [15], chn_b_rsci_d_mxwt_R0 [16], chn_b_rsci_d_mxwt_R0 [17], chn_b_rsci_d_mxwt_R0 [18], chn_b_rsci_d_mxwt_R0 [19], chn_b_rsci_d_mxwt_R0 [20], chn_b_rsci_d_mxwt_R0 [21], chn_b_rsci_d_mxwt_R0 [22], chn_b_rsci_d_mxwt_R0 [31:31] } = 0;
  assign { chn_b_rsci_d_mxwt_X0 [0], chn_b_rsci_d_mxwt_X0 [1], chn_b_rsci_d_mxwt_X0 [2], chn_b_rsci_d_mxwt_X0 [3], chn_b_rsci_d_mxwt_X0 [4], chn_b_rsci_d_mxwt_X0 [5], chn_b_rsci_d_mxwt_X0 [6], chn_b_rsci_d_mxwt_X0 [7], chn_b_rsci_d_mxwt_X0 [8], chn_b_rsci_d_mxwt_X0 [9], chn_b_rsci_d_mxwt_X0 [10], chn_b_rsci_d_mxwt_X0 [11], chn_b_rsci_d_mxwt_X0 [12], chn_b_rsci_d_mxwt_X0 [13], chn_b_rsci_d_mxwt_X0 [14], chn_b_rsci_d_mxwt_X0 [15], chn_b_rsci_d_mxwt_X0 [16], chn_b_rsci_d_mxwt_X0 [17], chn_b_rsci_d_mxwt_X0 [18], chn_b_rsci_d_mxwt_X0 [19], chn_b_rsci_d_mxwt_X0 [20], chn_b_rsci_d_mxwt_X0 [21], chn_b_rsci_d_mxwt_X0 [22], chn_b_rsci_d_mxwt_X0 [31:31] } = 0;
  assign { chn_b_rsci_d_mxwt_C0 [0], chn_b_rsci_d_mxwt_C0 [1], chn_b_rsci_d_mxwt_C0 [2], chn_b_rsci_d_mxwt_C0 [3], chn_b_rsci_d_mxwt_C0 [4], chn_b_rsci_d_mxwt_C0 [5], chn_b_rsci_d_mxwt_C0 [6], chn_b_rsci_d_mxwt_C0 [7], chn_b_rsci_d_mxwt_C0 [8], chn_b_rsci_d_mxwt_C0 [9], chn_b_rsci_d_mxwt_C0 [10], chn_b_rsci_d_mxwt_C0 [11], chn_b_rsci_d_mxwt_C0 [12], chn_b_rsci_d_mxwt_C0 [13], chn_b_rsci_d_mxwt_C0 [14], chn_b_rsci_d_mxwt_C0 [15], chn_b_rsci_d_mxwt_C0 [16], chn_b_rsci_d_mxwt_C0 [17], chn_b_rsci_d_mxwt_C0 [18], chn_b_rsci_d_mxwt_C0 [19], chn_b_rsci_d_mxwt_C0 [20], chn_b_rsci_d_mxwt_C0 [21], chn_b_rsci_d_mxwt_C0 [22], chn_b_rsci_d_mxwt_C0 [31:31] } = 0;
  logic [31:0] chn_b_rsci_d_mxwt_C1 ;
  logic [31:0] chn_b_rsci_d_mxwt_R1 ;
  logic [31:0] chn_b_rsci_d_mxwt_X1 ;
  assign FpAdd_8U_23U_is_a_greater_oif_equal_tmp_T = (| chn_a_rsci_d_mxwt_T [30:23] ) | (|chn_b_rsci_d_mxwt_T [30:23] ) ;
  assign chn_a_rsci_d_mxwt_C0 [30:23] = { 8{ FpAdd_8U_23U_is_a_greater_oif_equal_tmp_C }} ;
  assign chn_a_rsci_d_mxwt_R0 [30:23] = { 8{ FpAdd_8U_23U_is_a_greater_oif_equal_tmp_R }} | ( { 8{ FpAdd_8U_23U_is_a_greater_oif_equal_tmp_C }} & chn_b_rsci_d_mxwt_T [30:23] );
  assign chn_a_rsci_d_mxwt_X0 [30:23] = { 8{ FpAdd_8U_23U_is_a_greater_oif_equal_tmp_X }} ;
  assign chn_b_rsci_d_mxwt_C1 [30:23] = { 8{ FpAdd_8U_23U_is_a_greater_oif_equal_tmp_C }} ;
  assign chn_b_rsci_d_mxwt_R1 [30:23] = { 8{ FpAdd_8U_23U_is_a_greater_oif_equal_tmp_R }} | ( { 8{ FpAdd_8U_23U_is_a_greater_oif_equal_tmp_C }} & chn_a_rsci_d_mxwt_T [30:23] );
  assign chn_b_rsci_d_mxwt_X1 [30:23] = { 8{ FpAdd_8U_23U_is_a_greater_oif_equal_tmp_X }} ;
  assign _089_ = chn_b_rsci_d_mxwt[30:23] == 8'b11111111;
  assign _089__S = 0 ;
  assign { chn_b_rsci_d_mxwt_R1 [0], chn_b_rsci_d_mxwt_R1 [1], chn_b_rsci_d_mxwt_R1 [2], chn_b_rsci_d_mxwt_R1 [3], chn_b_rsci_d_mxwt_R1 [4], chn_b_rsci_d_mxwt_R1 [5], chn_b_rsci_d_mxwt_R1 [6], chn_b_rsci_d_mxwt_R1 [7], chn_b_rsci_d_mxwt_R1 [8], chn_b_rsci_d_mxwt_R1 [9], chn_b_rsci_d_mxwt_R1 [10], chn_b_rsci_d_mxwt_R1 [11], chn_b_rsci_d_mxwt_R1 [12], chn_b_rsci_d_mxwt_R1 [13], chn_b_rsci_d_mxwt_R1 [14], chn_b_rsci_d_mxwt_R1 [15], chn_b_rsci_d_mxwt_R1 [16], chn_b_rsci_d_mxwt_R1 [17], chn_b_rsci_d_mxwt_R1 [18], chn_b_rsci_d_mxwt_R1 [19], chn_b_rsci_d_mxwt_R1 [20], chn_b_rsci_d_mxwt_R1 [21], chn_b_rsci_d_mxwt_R1 [22], chn_b_rsci_d_mxwt_R1 [31:31] } = 0;
  assign { chn_b_rsci_d_mxwt_X1 [0], chn_b_rsci_d_mxwt_X1 [1], chn_b_rsci_d_mxwt_X1 [2], chn_b_rsci_d_mxwt_X1 [3], chn_b_rsci_d_mxwt_X1 [4], chn_b_rsci_d_mxwt_X1 [5], chn_b_rsci_d_mxwt_X1 [6], chn_b_rsci_d_mxwt_X1 [7], chn_b_rsci_d_mxwt_X1 [8], chn_b_rsci_d_mxwt_X1 [9], chn_b_rsci_d_mxwt_X1 [10], chn_b_rsci_d_mxwt_X1 [11], chn_b_rsci_d_mxwt_X1 [12], chn_b_rsci_d_mxwt_X1 [13], chn_b_rsci_d_mxwt_X1 [14], chn_b_rsci_d_mxwt_X1 [15], chn_b_rsci_d_mxwt_X1 [16], chn_b_rsci_d_mxwt_X1 [17], chn_b_rsci_d_mxwt_X1 [18], chn_b_rsci_d_mxwt_X1 [19], chn_b_rsci_d_mxwt_X1 [20], chn_b_rsci_d_mxwt_X1 [21], chn_b_rsci_d_mxwt_X1 [22], chn_b_rsci_d_mxwt_X1 [31:31] } = 0;
  assign { chn_b_rsci_d_mxwt_C1 [0], chn_b_rsci_d_mxwt_C1 [1], chn_b_rsci_d_mxwt_C1 [2], chn_b_rsci_d_mxwt_C1 [3], chn_b_rsci_d_mxwt_C1 [4], chn_b_rsci_d_mxwt_C1 [5], chn_b_rsci_d_mxwt_C1 [6], chn_b_rsci_d_mxwt_C1 [7], chn_b_rsci_d_mxwt_C1 [8], chn_b_rsci_d_mxwt_C1 [9], chn_b_rsci_d_mxwt_C1 [10], chn_b_rsci_d_mxwt_C1 [11], chn_b_rsci_d_mxwt_C1 [12], chn_b_rsci_d_mxwt_C1 [13], chn_b_rsci_d_mxwt_C1 [14], chn_b_rsci_d_mxwt_C1 [15], chn_b_rsci_d_mxwt_C1 [16], chn_b_rsci_d_mxwt_C1 [17], chn_b_rsci_d_mxwt_C1 [18], chn_b_rsci_d_mxwt_C1 [19], chn_b_rsci_d_mxwt_C1 [20], chn_b_rsci_d_mxwt_C1 [21], chn_b_rsci_d_mxwt_C1 [22], chn_b_rsci_d_mxwt_C1 [31:31] } = 0;
  logic [31:0] chn_b_rsci_d_mxwt_C2 ;
  logic [31:0] chn_b_rsci_d_mxwt_R2 ;
  logic [31:0] chn_b_rsci_d_mxwt_X2 ;
  assign _089__T = | chn_b_rsci_d_mxwt_T [30:23] ;
  assign chn_b_rsci_d_mxwt_C2 [30:23] = { 8{ _089__C }} ;
  assign chn_b_rsci_d_mxwt_R2 [30:23] = { 8{ _089__R }} ;
  assign chn_b_rsci_d_mxwt_X2 [30:23] = { 8{ _089__X }} ;
  assign _090_ = FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[48:25] == 24'b111111111111111111111111;
  assign _090__S = 0 ;
  assign { FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R0 [0], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R0 [1], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R0 [2], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R0 [3], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R0 [4], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R0 [5], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R0 [6], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R0 [7], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R0 [8], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R0 [9], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R0 [10], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R0 [11], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R0 [12], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R0 [13], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R0 [14], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R0 [15], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R0 [16], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R0 [17], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R0 [18], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R0 [19], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R0 [20], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R0 [21], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R0 [22], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R0 [23], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R0 [48:48] } = 0;
  assign { FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X0 [0], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X0 [1], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X0 [2], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X0 [3], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X0 [4], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X0 [5], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X0 [6], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X0 [7], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X0 [8], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X0 [9], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X0 [10], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X0 [11], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X0 [12], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X0 [13], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X0 [14], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X0 [15], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X0 [16], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X0 [17], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X0 [18], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X0 [19], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X0 [20], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X0 [21], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X0 [22], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X0 [23], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X0 [48:48] } = 0;
  assign { FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C0 [0], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C0 [1], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C0 [2], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C0 [3], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C0 [4], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C0 [5], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C0 [6], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C0 [7], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C0 [8], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C0 [9], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C0 [10], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C0 [11], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C0 [12], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C0 [13], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C0 [14], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C0 [15], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C0 [16], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C0 [17], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C0 [18], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C0 [19], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C0 [20], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C0 [21], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C0 [22], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C0 [23], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C0 [48:48] } = 0;
  logic [48:0] FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C1 ;
  logic [48:0] FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R1 ;
  logic [48:0] FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X1 ;
  assign _090__T = | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [48:25] ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C1 [48:25] = { 24{ _090__C }} ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R1 [48:25] = { 24{ _090__R }} ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X1 [48:25] = { 24{ _090__X }} ;
  assign _091_ = | chn_a_rsci_d_mxwt[22:0];
  assign { chn_a_rsci_d_mxwt_R0 [31:31] } = 0;
  assign { chn_a_rsci_d_mxwt_X0 [31:31] } = 0;
  assign { chn_a_rsci_d_mxwt_C0 [31:31] } = 0;
  logic [31:0] chn_a_rsci_d_mxwt_C1 ;
  logic [31:0] chn_a_rsci_d_mxwt_R1 ;
  logic [31:0] chn_a_rsci_d_mxwt_X1 ;
  assign _091__T = | chn_a_rsci_d_mxwt_T [22:0] ;
  assign chn_a_rsci_d_mxwt_C1 [22:0] = { 23{ _091__C }} ;
  assign chn_a_rsci_d_mxwt_X1 [22:0] = { 23{ _091__X }} ;
  assign chn_a_rsci_d_mxwt_R1 [22:0] = { 23{ _091__R }} & chn_a_rsci_d_mxwt[22:0] ;
  assign _091__S = 0 ;
  assign _092_ = chn_a_rsci_d_mxwt[30:23] != 8'b11111111;
  assign _092__S = 0 ;
  assign _092__T = | chn_a_rsci_d_mxwt_T [30:23] ;
  assign chn_a_rsci_d_mxwt_C1 [30:23] = { 8{ _092__C }} ;
  assign chn_a_rsci_d_mxwt_R1 [30:23] = { 8{ _092__R }} ;
  assign chn_a_rsci_d_mxwt_X1 [30:23] = { 8{ _092__X }} ;
  assign _093_ = | chn_b_rsci_d_mxwt[22:0];
  assign _093__T = | chn_b_rsci_d_mxwt_T [22:0] ;
  assign chn_b_rsci_d_mxwt_C2 [22:0] = { 23{ _093__C }} ;
  assign chn_b_rsci_d_mxwt_X2 [22:0] = { 23{ _093__X }} ;
  assign chn_b_rsci_d_mxwt_R2 [22:0] = { 23{ _093__R }} & chn_b_rsci_d_mxwt[22:0] ;
  assign _093__S = 0 ;
  assign _094_ = | chn_b_rsci_d_mxwt[30:0];
  assign { chn_b_rsci_d_mxwt_R2 [31:31] } = 0;
  assign { chn_b_rsci_d_mxwt_X2 [31:31] } = 0;
  assign { chn_b_rsci_d_mxwt_C2 [31:31] } = 0;
  logic [31:0] chn_b_rsci_d_mxwt_C3 ;
  logic [31:0] chn_b_rsci_d_mxwt_R3 ;
  logic [31:0] chn_b_rsci_d_mxwt_X3 ;
  assign _094__T = | chn_b_rsci_d_mxwt_T [30:0] ;
  assign chn_b_rsci_d_mxwt_C3 [30:0] = { 31{ _094__C }} ;
  assign chn_b_rsci_d_mxwt_X3 [30:0] = { 31{ _094__X }} ;
  assign chn_b_rsci_d_mxwt_R3 [30:0] = { 31{ _094__R }} & chn_b_rsci_d_mxwt[30:0] ;
  assign _094__S = 0 ;
  assign _095_ = | chn_a_rsci_d_mxwt[30:0];
  assign { chn_a_rsci_d_mxwt_R1 [31:31] } = 0;
  assign { chn_a_rsci_d_mxwt_X1 [31:31] } = 0;
  assign { chn_a_rsci_d_mxwt_C1 [31:31] } = 0;
  logic [31:0] chn_a_rsci_d_mxwt_C2 ;
  logic [31:0] chn_a_rsci_d_mxwt_R2 ;
  logic [31:0] chn_a_rsci_d_mxwt_X2 ;
  assign _095__T = | chn_a_rsci_d_mxwt_T [30:0] ;
  assign chn_a_rsci_d_mxwt_C2 [30:0] = { 31{ _095__C }} ;
  assign chn_a_rsci_d_mxwt_X2 [30:0] = { 31{ _095__X }} ;
  assign chn_a_rsci_d_mxwt_R2 [30:0] = { 31{ _095__R }} & chn_a_rsci_d_mxwt[30:0] ;
  assign _095__S = 0 ;
  assign _096_ = | FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0[48:0];
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_C0 ;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_R0 ;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_X0 ;
  assign _096__T = | FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_T [48:0] ;
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_C0 [48:0] = { 49{ _096__C }} ;
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_X0 [48:0] = { 49{ _096__X }} ;
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_R0 [48:0] = { 49{ _096__R }} & FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0[48:0] ;
  assign _096__S = 0 ;
  assign _097_ = ~ FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm[7:1];
  logic [7:0] FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm_C0 ;
  logic [7:0] FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm_R0 ;
  logic [7:0] FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm_X0 ;
  assign _097__T = FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm_T [7:1] ;
  assign FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm_C0 [7:1] = _097__C ;
  assign FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm_R0 [7:1] = _097__R ;
  assign FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm_X0 [7:1] = _097__X ;
  assign _097__S = 0 ;
  assign nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s[0] = ~ FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm[0];
  assign nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s_T [0] = FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm_T [0] ;
  assign FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm_C0 [0] = nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s_C [0] ;
  assign FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm_R0 [0] = nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s_R [0] ;
  assign FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm_X0 [0] = nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s_X [0] ;
  assign nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s_S = 0 ;
  assign _098_ = ~ FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm[7:1];
  logic [7:0] FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm_C0 ;
  logic [7:0] FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm_R0 ;
  logic [7:0] FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm_X0 ;
  assign _098__T = FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm_T [7:1] ;
  assign FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm_C0 [7:1] = _098__C ;
  assign FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm_R0 [7:1] = _098__R ;
  assign FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm_X0 [7:1] = _098__X ;
  assign _098__S = 0 ;
  assign nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s[0] = ~ FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm[0];
  assign nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s_T [0] = FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm_T [0] ;
  assign FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm_C0 [0] = nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s_C [0] ;
  assign FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm_R0 [0] = nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s_R [0] ;
  assign FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm_X0 [0] = nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s_X [0] ;
  assign nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s_S = 0 ;
  assign _099_ = ~ main_stage_v_3;
  logic [0:0] main_stage_v_3_C3 ;
  logic [0:0] main_stage_v_3_R3 ;
  logic [0:0] main_stage_v_3_X3 ;
  assign _099__T = main_stage_v_3_T ;
  assign main_stage_v_3_C3 = _099__C ;
  assign main_stage_v_3_R3 = _099__R ;
  assign main_stage_v_3_X3 = _099__X ;
  assign _099__S = 0 ;
  assign _100_ = ~ _133_;
  logic [0:0] _133__C0 ;
  logic [0:0] _133__R0 ;
  logic [0:0] _133__X0 ;
  assign _100__T = _133__T ;
  assign _133__C0 = _100__C ;
  assign _133__R0 = _100__R ;
  assign _133__X0 = _100__X ;
  assign _100__S = 0 ;
  assign _101_ = ~ and_dcpl_7;
  logic [0:0] and_dcpl_7_C0 ;
  logic [0:0] and_dcpl_7_R0 ;
  logic [0:0] and_dcpl_7_X0 ;
  assign _101__T = and_dcpl_7_T ;
  assign and_dcpl_7_C0 = _101__C ;
  assign and_dcpl_7_R0 = _101__R ;
  assign and_dcpl_7_X0 = _101__X ;
  assign _101__S = 0 ;
  assign _102_ = ~ reg_chn_o_rsci_ld_core_psct_cse;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C2 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R2 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X2 ;
  assign _102__T = reg_chn_o_rsci_ld_core_psct_cse_T ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C2 = _102__C ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R2 = _102__R ;
  assign reg_chn_o_rsci_ld_core_psct_cse_X2 = _102__X ;
  assign _102__S = 0 ;
  assign nor_36_cse = ~ or_cse;
  logic [0:0] or_cse_C11 ;
  logic [0:0] or_cse_R11 ;
  logic [0:0] or_cse_X11 ;
  assign nor_36_cse_T = or_cse_T ;
  assign or_cse_C11 = nor_36_cse_C ;
  assign or_cse_R11 = nor_36_cse_R ;
  assign or_cse_X11 = nor_36_cse_X ;
  assign nor_36_cse_S = 0 ;
  assign _103_ = ~ nor_tmp_11;
  logic [0:0] nor_tmp_11_C0 ;
  logic [0:0] nor_tmp_11_R0 ;
  logic [0:0] nor_tmp_11_X0 ;
  assign _103__T = nor_tmp_11_T ;
  assign nor_tmp_11_C0 = _103__C ;
  assign nor_tmp_11_R0 = _103__R ;
  assign nor_tmp_11_X0 = _103__X ;
  assign _103__S = 0 ;
  assign nor_34_nl = ~ _134_;
  logic [0:0] _134__C0 ;
  logic [0:0] _134__R0 ;
  logic [0:0] _134__X0 ;
  assign nor_34_nl_T = _134__T ;
  assign _134__C0 = nor_34_nl_C ;
  assign _134__R0 = nor_34_nl_R ;
  assign _134__X0 = nor_34_nl_X ;
  assign nor_34_nl_S = 0 ;
  assign _104_ = ~ FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl[23];
  logic [23:0] FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C0 ;
  logic [23:0] FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R0 ;
  logic [23:0] FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X0 ;
  assign _104__T = FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_T [23] ;
  assign FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C0 [23] = _104__C ;
  assign FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R0 [23] = _104__R ;
  assign FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X0 [23] = _104__X ;
  assign _104__S = 0 ;
  assign _105_ = ~ main_stage_v_1;
  logic [0:0] main_stage_v_1_C3 ;
  logic [0:0] main_stage_v_1_R3 ;
  logic [0:0] main_stage_v_1_X3 ;
  assign _105__T = main_stage_v_1_T ;
  assign main_stage_v_1_C3 = _105__C ;
  assign main_stage_v_1_R3 = _105__R ;
  assign main_stage_v_1_X3 = _105__X ;
  assign _105__S = 0 ;
  assign nor_26_nl = ~ _135_;
  logic [0:0] _135__C0 ;
  logic [0:0] _135__R0 ;
  logic [0:0] _135__X0 ;
  assign nor_26_nl_T = _135__T ;
  assign _135__C0 = nor_26_nl_C ;
  assign _135__R0 = nor_26_nl_R ;
  assign _135__X0 = nor_26_nl_X ;
  assign nor_26_nl_S = 0 ;
  assign _106_ = ~ nor_tmp_1;
  logic [0:0] nor_tmp_1_C1 ;
  logic [0:0] nor_tmp_1_R1 ;
  logic [0:0] nor_tmp_1_X1 ;
  assign _106__T = nor_tmp_1_T ;
  assign nor_tmp_1_C1 = _106__C ;
  assign nor_tmp_1_R1 = _106__R ;
  assign nor_tmp_1_X1 = _106__X ;
  assign _106__S = 0 ;
  assign nor_27_nl = ~ _136_;
  logic [0:0] _136__C0 ;
  logic [0:0] _136__R0 ;
  logic [0:0] _136__X0 ;
  assign nor_27_nl_T = _136__T ;
  assign _136__C0 = nor_27_nl_C ;
  assign _136__R0 = nor_27_nl_R ;
  assign _136__X0 = nor_27_nl_X ;
  assign nor_27_nl_S = 0 ;
  assign _107_ = ~ _091_;
  logic [0:0] _091__C0 ;
  logic [0:0] _091__R0 ;
  logic [0:0] _091__X0 ;
  assign _107__T = _091__T ;
  assign _091__C0 = _107__C ;
  assign _091__R0 = _107__R ;
  assign _091__X0 = _107__X ;
  assign _107__S = 0 ;
  assign IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp = ~ _137_;
  logic [0:0] _137__C0 ;
  logic [0:0] _137__R0 ;
  logic [0:0] _137__X0 ;
  assign IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_T = _137__T ;
  assign _137__C0 = IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_C ;
  assign _137__R0 = IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_R ;
  assign _137__X0 = IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_X ;
  assign IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_S = 0 ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0 = ~ or_tmp_16;
  logic [0:0] or_tmp_16_C2 ;
  logic [0:0] or_tmp_16_R2 ;
  logic [0:0] or_tmp_16_X2 ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_T = or_tmp_16_T ;
  assign or_tmp_16_C2 = IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_C ;
  assign or_tmp_16_R2 = IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_R ;
  assign or_tmp_16_X2 = IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_X ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_S = 0 ;
  assign IsNaN_8U_23U_1_nor_tmp = ~ _093_;
  logic [0:0] _093__C0 ;
  logic [0:0] _093__R0 ;
  logic [0:0] _093__X0 ;
  assign IsNaN_8U_23U_1_nor_tmp_T = _093__T ;
  assign _093__C0 = IsNaN_8U_23U_1_nor_tmp_C ;
  assign _093__R0 = IsNaN_8U_23U_1_nor_tmp_R ;
  assign _093__X0 = IsNaN_8U_23U_1_nor_tmp_X ;
  assign IsNaN_8U_23U_1_nor_tmp_S = 0 ;
  assign IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp = ~ _089_;
  logic [0:0] _089__C0 ;
  logic [0:0] _089__R0 ;
  logic [0:0] _089__X0 ;
  assign IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_T = _089__T ;
  assign _089__C0 = IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_C ;
  assign _089__R0 = IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_R ;
  assign _089__X0 = IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_X ;
  assign IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_S = 0 ;
  assign _002_ = ~ chn_a_rsci_d_mxwt[30:23];
  assign { chn_a_rsci_d_mxwt_R2 [31:31] } = 0;
  assign { chn_a_rsci_d_mxwt_X2 [31:31] } = 0;
  assign { chn_a_rsci_d_mxwt_C2 [31:31] } = 0;
  logic [31:0] chn_a_rsci_d_mxwt_C3 ;
  logic [31:0] chn_a_rsci_d_mxwt_R3 ;
  logic [31:0] chn_a_rsci_d_mxwt_X3 ;
  assign _002__T = chn_a_rsci_d_mxwt_T [30:23] ;
  assign chn_a_rsci_d_mxwt_C3 [30:23] = _002__C ;
  assign chn_a_rsci_d_mxwt_R3 [30:23] = _002__R ;
  assign chn_a_rsci_d_mxwt_X3 [30:23] = _002__X ;
  assign _002__S = 0 ;
  assign _108_ = ~ FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0;
  logic [48:0] FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_C1 ;
  logic [48:0] FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_R1 ;
  logic [48:0] FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_X1 ;
  assign _108__T = FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_T ;
  assign FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_C1 = _108__C ;
  assign FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_R1 = _108__R ;
  assign FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_X1 = _108__X ;
  assign _108__S = 0 ;
  assign _109_ = ~ libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1;
  logic [5:0] libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_C1 ;
  logic [5:0] libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_R1 ;
  logic [5:0] libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_X1 ;
  assign _109__T = libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_T ;
  assign libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_C1 = _109__C ;
  assign libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_R1 = _109__R ;
  assign libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_X1 = _109__X ;
  assign _109__S = 0 ;
  assign _110_ = ~ FpAdd_8U_23U_if_3_if_acc_1_nl[7];
  assign { FpAdd_8U_23U_if_3_if_acc_1_nl_R0 [0], FpAdd_8U_23U_if_3_if_acc_1_nl_R0 [1], FpAdd_8U_23U_if_3_if_acc_1_nl_R0 [2], FpAdd_8U_23U_if_3_if_acc_1_nl_R0 [3], FpAdd_8U_23U_if_3_if_acc_1_nl_R0 [4], FpAdd_8U_23U_if_3_if_acc_1_nl_R0 [5], FpAdd_8U_23U_if_3_if_acc_1_nl_R0 [6] } = 0;
  assign { FpAdd_8U_23U_if_3_if_acc_1_nl_X0 [0], FpAdd_8U_23U_if_3_if_acc_1_nl_X0 [1], FpAdd_8U_23U_if_3_if_acc_1_nl_X0 [2], FpAdd_8U_23U_if_3_if_acc_1_nl_X0 [3], FpAdd_8U_23U_if_3_if_acc_1_nl_X0 [4], FpAdd_8U_23U_if_3_if_acc_1_nl_X0 [5], FpAdd_8U_23U_if_3_if_acc_1_nl_X0 [6] } = 0;
  assign { FpAdd_8U_23U_if_3_if_acc_1_nl_C0 [0], FpAdd_8U_23U_if_3_if_acc_1_nl_C0 [1], FpAdd_8U_23U_if_3_if_acc_1_nl_C0 [2], FpAdd_8U_23U_if_3_if_acc_1_nl_C0 [3], FpAdd_8U_23U_if_3_if_acc_1_nl_C0 [4], FpAdd_8U_23U_if_3_if_acc_1_nl_C0 [5], FpAdd_8U_23U_if_3_if_acc_1_nl_C0 [6] } = 0;
  logic [7:0] FpAdd_8U_23U_if_3_if_acc_1_nl_C1 ;
  logic [7:0] FpAdd_8U_23U_if_3_if_acc_1_nl_R1 ;
  logic [7:0] FpAdd_8U_23U_if_3_if_acc_1_nl_X1 ;
  assign _110__T = FpAdd_8U_23U_if_3_if_acc_1_nl_T [7] ;
  assign FpAdd_8U_23U_if_3_if_acc_1_nl_C1 [7] = _110__C ;
  assign FpAdd_8U_23U_if_3_if_acc_1_nl_R1 [7] = _110__R ;
  assign FpAdd_8U_23U_if_3_if_acc_1_nl_X1 [7] = _110__X ;
  assign _110__S = 0 ;
  assign _000_[2] = ~ FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2[49];
  assign { FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [0], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [1], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [2], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [3], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [4], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [5], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [6], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [7], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [8], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [9], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [10], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [11], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [12], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [13], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [14], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [15], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [16], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [17], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [18], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [19], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [20], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [21], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [22], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [23], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [24], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [25], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [26], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [27], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [28], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [29], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [30], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [31], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [32], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [33], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [34], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [35], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [36], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [37], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [38], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [39], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [40], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [41], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [42], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [43], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [44], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [45], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [46], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [47], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 [48] } = 0;
  assign { FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [0], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [1], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [2], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [3], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [4], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [5], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [6], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [7], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [8], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [9], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [10], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [11], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [12], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [13], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [14], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [15], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [16], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [17], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [18], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [19], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [20], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [21], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [22], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [23], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [24], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [25], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [26], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [27], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [28], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [29], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [30], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [31], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [32], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [33], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [34], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [35], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [36], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [37], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [38], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [39], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [40], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [41], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [42], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [43], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [44], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [45], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [46], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [47], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 [48] } = 0;
  assign { FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [0], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [1], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [2], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [3], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [4], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [5], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [6], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [7], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [8], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [9], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [10], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [11], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [12], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [13], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [14], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [15], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [16], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [17], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [18], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [19], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [20], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [21], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [22], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [23], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [24], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [25], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [26], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [27], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [28], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [29], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [30], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [31], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [32], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [33], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [34], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [35], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [36], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [37], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [38], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [39], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [40], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [41], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [42], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [43], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [44], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [45], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [46], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [47], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 [48] } = 0;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 ;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 ;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 ;
  assign _000__T [2] = FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_T [49] ;
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [49] = _000__C [2] ;
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [49] = _000__R [2] ;
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [49] = _000__X [2] ;
  assign _000__S = 0 ;
  assign _111_ = ~ FpAdd_8U_23U_if_4_if_acc_1_nl[7];
  assign { FpAdd_8U_23U_if_4_if_acc_1_nl_R0 [0], FpAdd_8U_23U_if_4_if_acc_1_nl_R0 [1], FpAdd_8U_23U_if_4_if_acc_1_nl_R0 [2], FpAdd_8U_23U_if_4_if_acc_1_nl_R0 [3], FpAdd_8U_23U_if_4_if_acc_1_nl_R0 [4], FpAdd_8U_23U_if_4_if_acc_1_nl_R0 [5], FpAdd_8U_23U_if_4_if_acc_1_nl_R0 [6] } = 0;
  assign { FpAdd_8U_23U_if_4_if_acc_1_nl_X0 [0], FpAdd_8U_23U_if_4_if_acc_1_nl_X0 [1], FpAdd_8U_23U_if_4_if_acc_1_nl_X0 [2], FpAdd_8U_23U_if_4_if_acc_1_nl_X0 [3], FpAdd_8U_23U_if_4_if_acc_1_nl_X0 [4], FpAdd_8U_23U_if_4_if_acc_1_nl_X0 [5], FpAdd_8U_23U_if_4_if_acc_1_nl_X0 [6] } = 0;
  assign { FpAdd_8U_23U_if_4_if_acc_1_nl_C0 [0], FpAdd_8U_23U_if_4_if_acc_1_nl_C0 [1], FpAdd_8U_23U_if_4_if_acc_1_nl_C0 [2], FpAdd_8U_23U_if_4_if_acc_1_nl_C0 [3], FpAdd_8U_23U_if_4_if_acc_1_nl_C0 [4], FpAdd_8U_23U_if_4_if_acc_1_nl_C0 [5], FpAdd_8U_23U_if_4_if_acc_1_nl_C0 [6] } = 0;
  logic [7:0] FpAdd_8U_23U_if_4_if_acc_1_nl_C1 ;
  logic [7:0] FpAdd_8U_23U_if_4_if_acc_1_nl_R1 ;
  logic [7:0] FpAdd_8U_23U_if_4_if_acc_1_nl_X1 ;
  assign _111__T = FpAdd_8U_23U_if_4_if_acc_1_nl_T [7] ;
  assign FpAdd_8U_23U_if_4_if_acc_1_nl_C1 [7] = _111__C ;
  assign FpAdd_8U_23U_if_4_if_acc_1_nl_R1 [7] = _111__R ;
  assign FpAdd_8U_23U_if_4_if_acc_1_nl_X1 [7] = _111__X ;
  assign _111__S = 0 ;
  assign FpAdd_8U_23U_is_inf_lpi_1_dfm = ~ _162_;
  logic [0:0] _162__C0 ;
  logic [0:0] _162__R0 ;
  logic [0:0] _162__X0 ;
  assign FpAdd_8U_23U_is_inf_lpi_1_dfm_T = _162__T ;
  assign _162__C0 = FpAdd_8U_23U_is_inf_lpi_1_dfm_C ;
  assign _162__R0 = FpAdd_8U_23U_is_inf_lpi_1_dfm_R ;
  assign _162__X0 = FpAdd_8U_23U_is_inf_lpi_1_dfm_X ;
  assign FpAdd_8U_23U_is_inf_lpi_1_dfm_S = 0 ;
  assign FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c = ~ FpAdd_8U_23U_or_cse;
  logic [0:0] FpAdd_8U_23U_or_cse_C9 ;
  logic [0:0] FpAdd_8U_23U_or_cse_R9 ;
  logic [0:0] FpAdd_8U_23U_or_cse_X9 ;
  assign FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_T = FpAdd_8U_23U_or_cse_T ;
  assign FpAdd_8U_23U_or_cse_C9 = FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_C ;
  assign FpAdd_8U_23U_or_cse_R9 = FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_R ;
  assign FpAdd_8U_23U_or_cse_X9 = FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_X ;
  assign FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_S = 0 ;
  assign _112_ = ~ FpAdd_8U_23U_qr_lpi_1_dfm_6;
  logic [7:0] FpAdd_8U_23U_qr_lpi_1_dfm_6_C4 ;
  logic [7:0] FpAdd_8U_23U_qr_lpi_1_dfm_6_R4 ;
  logic [7:0] FpAdd_8U_23U_qr_lpi_1_dfm_6_X4 ;
  assign _112__T = FpAdd_8U_23U_qr_lpi_1_dfm_6_T ;
  assign FpAdd_8U_23U_qr_lpi_1_dfm_6_C4 = _112__C ;
  assign FpAdd_8U_23U_qr_lpi_1_dfm_6_R4 = _112__R ;
  assign FpAdd_8U_23U_qr_lpi_1_dfm_6_X4 = _112__X ;
  assign _112__S = 0 ;
  assign _113_ = ~ main_stage_v_2;
  logic [0:0] main_stage_v_2_C3 ;
  logic [0:0] main_stage_v_2_R3 ;
  logic [0:0] main_stage_v_2_X3 ;
  assign _113__T = main_stage_v_2_T ;
  assign main_stage_v_2_C3 = _113__C ;
  assign main_stage_v_2_R3 = _113__R ;
  assign main_stage_v_2_X3 = _113__X ;
  assign _113__S = 0 ;
  assign nor_38_nl = ~ _163_;
  logic [0:0] _163__C0 ;
  logic [0:0] _163__R0 ;
  logic [0:0] _163__X0 ;
  assign nor_38_nl_T = _163__T ;
  assign _163__C0 = nor_38_nl_C ;
  assign _163__R0 = nor_38_nl_R ;
  assign _163__X0 = nor_38_nl_X ;
  assign nor_38_nl_S = 0 ;
  assign _114_ = ~ chn_o_rsci_bawt;
  logic [0:0] chn_o_rsci_bawt_C1 ;
  logic [0:0] chn_o_rsci_bawt_R1 ;
  logic [0:0] chn_o_rsci_bawt_X1 ;
  assign _114__T = chn_o_rsci_bawt_T ;
  assign chn_o_rsci_bawt_C1 = _114__C ;
  assign chn_o_rsci_bawt_R1 = _114__R ;
  assign chn_o_rsci_bawt_X1 = _114__X ;
  assign _114__S = 0 ;
  assign _115_ = ~ IsNaN_8U_23U_land_lpi_1_dfm_st_4;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_4_C1 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_4_R1 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_4_X1 ;
  assign _115__T = IsNaN_8U_23U_land_lpi_1_dfm_st_4_T ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_4_C1 = _115__C ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_4_R1 = _115__R ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_4_X1 = _115__X ;
  assign _115__S = 0 ;
  assign _116_ = ~ FpAdd_8U_23U_is_a_greater_acc_1_nl[8];
  logic [8:0] FpAdd_8U_23U_is_a_greater_acc_1_nl_C0 ;
  logic [8:0] FpAdd_8U_23U_is_a_greater_acc_1_nl_R0 ;
  logic [8:0] FpAdd_8U_23U_is_a_greater_acc_1_nl_X0 ;
  assign _116__T = FpAdd_8U_23U_is_a_greater_acc_1_nl_T [8] ;
  assign FpAdd_8U_23U_is_a_greater_acc_1_nl_C0 [8] = _116__C ;
  assign FpAdd_8U_23U_is_a_greater_acc_1_nl_R0 [8] = _116__R ;
  assign FpAdd_8U_23U_is_a_greater_acc_1_nl_X0 [8] = _116__X ;
  assign _116__S = 0 ;
  assign _117_ = ~ FpAdd_8U_23U_is_a_greater_oif_equal_tmp;
  logic [0:0] FpAdd_8U_23U_is_a_greater_oif_equal_tmp_C1 ;
  logic [0:0] FpAdd_8U_23U_is_a_greater_oif_equal_tmp_R1 ;
  logic [0:0] FpAdd_8U_23U_is_a_greater_oif_equal_tmp_X1 ;
  assign _117__T = FpAdd_8U_23U_is_a_greater_oif_equal_tmp_T ;
  assign FpAdd_8U_23U_is_a_greater_oif_equal_tmp_C1 = _117__C ;
  assign FpAdd_8U_23U_is_a_greater_oif_equal_tmp_R1 = _117__R ;
  assign FpAdd_8U_23U_is_a_greater_oif_equal_tmp_X1 = _117__X ;
  assign _117__S = 0 ;
  assign _118_ = ~ IsNaN_8U_23U_land_lpi_1_dfm_6;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_6_C1 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_6_R1 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_6_X1 ;
  assign _118__T = IsNaN_8U_23U_land_lpi_1_dfm_6_T ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_6_C1 = _118__C ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_6_R1 = _118__R ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_6_X1 = _118__X ;
  assign _118__S = 0 ;
  assign _001_ = ~ chn_b_rsci_d_mxwt[22:0];
  assign { chn_b_rsci_d_mxwt_R3 [31:31] } = 0;
  assign { chn_b_rsci_d_mxwt_X3 [31:31] } = 0;
  assign { chn_b_rsci_d_mxwt_C3 [31:31] } = 0;
  logic [31:0] chn_b_rsci_d_mxwt_C4 ;
  logic [31:0] chn_b_rsci_d_mxwt_R4 ;
  logic [31:0] chn_b_rsci_d_mxwt_X4 ;
  assign _001__T = chn_b_rsci_d_mxwt_T [22:0] ;
  assign chn_b_rsci_d_mxwt_C4 [22:0] = _001__C ;
  assign chn_b_rsci_d_mxwt_R4 [22:0] = _001__R ;
  assign chn_b_rsci_d_mxwt_X4 [22:0] = _001__X ;
  assign _001__S = 0 ;
  assign _119_ = ~ main_stage_en_1;
  logic [0:0] main_stage_en_1_C1 ;
  logic [0:0] main_stage_en_1_R1 ;
  logic [0:0] main_stage_en_1_X1 ;
  assign _119__T = main_stage_en_1_T ;
  assign main_stage_en_1_C1 = _119__C ;
  assign main_stage_en_1_R1 = _119__R ;
  assign main_stage_en_1_X1 = _119__X ;
  assign _119__S = 0 ;
  assign _120_ = ~ _059_;
  logic [0:0] _059__C0 ;
  logic [0:0] _059__R0 ;
  logic [0:0] _059__X0 ;
  assign _120__T = _059__T ;
  assign _059__C0 = _120__C ;
  assign _059__R0 = _120__R ;
  assign _059__X0 = _120__X ;
  assign _120__S = 0 ;
  assign _121_ = ~ and_dcpl_15;
  logic [0:0] and_dcpl_15_C0 ;
  logic [0:0] and_dcpl_15_R0 ;
  logic [0:0] and_dcpl_15_X0 ;
  assign _121__T = and_dcpl_15_T ;
  assign and_dcpl_15_C0 = _121__C ;
  assign and_dcpl_15_R0 = _121__R ;
  assign and_dcpl_15_X0 = _121__X ;
  assign _121__S = 0 ;
  assign _122_ = ~ main_stage_v_1_mx0c1;
  logic [0:0] main_stage_v_1_mx0c1_C0 ;
  logic [0:0] main_stage_v_1_mx0c1_R0 ;
  logic [0:0] main_stage_v_1_mx0c1_X0 ;
  assign _122__T = main_stage_v_1_mx0c1_T ;
  assign main_stage_v_1_mx0c1_C0 = _122__C ;
  assign main_stage_v_1_mx0c1_R0 = _122__R ;
  assign main_stage_v_1_mx0c1_X0 = _122__X ;
  assign _122__S = 0 ;
  assign _123_ = ~ main_stage_v_2_mx0c1;
  logic [0:0] main_stage_v_2_mx0c1_C0 ;
  logic [0:0] main_stage_v_2_mx0c1_R0 ;
  logic [0:0] main_stage_v_2_mx0c1_X0 ;
  assign _123__T = main_stage_v_2_mx0c1_T ;
  assign main_stage_v_2_mx0c1_C0 = _123__C ;
  assign main_stage_v_2_mx0c1_R0 = _123__R ;
  assign main_stage_v_2_mx0c1_X0 = _123__X ;
  assign _123__S = 0 ;
  assign _124_ = ~ main_stage_v_3_mx0c1;
  logic [0:0] main_stage_v_3_mx0c1_C0 ;
  logic [0:0] main_stage_v_3_mx0c1_R0 ;
  logic [0:0] main_stage_v_3_mx0c1_X0 ;
  assign _124__T = main_stage_v_3_mx0c1_T ;
  assign main_stage_v_3_mx0c1_C0 = _124__C ;
  assign main_stage_v_3_mx0c1_R0 = _124__R ;
  assign main_stage_v_3_mx0c1_X0 = _124__X ;
  assign _124__S = 0 ;
  assign _125_ = ~ b_sva_36[31];
  logic [31:0] b_sva_36_C0 ;
  logic [31:0] b_sva_36_R0 ;
  logic [31:0] b_sva_36_X0 ;
  assign _125__T = b_sva_36_T [31] ;
  assign b_sva_36_C0 [31] = _125__C ;
  assign b_sva_36_R0 [31] = _125__R ;
  assign b_sva_36_X0 [31] = _125__X ;
  assign _125__S = 0 ;
  assign _126_ = ~ chn_b_rsci_d_mxwt[31];
  assign _126__T = chn_b_rsci_d_mxwt_T [31] ;
  assign chn_b_rsci_d_mxwt_C4 [31] = _126__C ;
  assign chn_b_rsci_d_mxwt_R4 [31] = _126__R ;
  assign chn_b_rsci_d_mxwt_X4 [31] = _126__X ;
  assign _126__S = 0 ;
  assign _127_ = ~ IsNaN_8U_23U_1_land_lpi_1_dfm_4;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_4_C0 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_4_R0 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_4_X0 ;
  assign _127__T = IsNaN_8U_23U_1_land_lpi_1_dfm_4_T ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_4_C0 = _127__C ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_4_R0 = _127__R ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_4_X0 = _127__X ;
  assign _127__S = 0 ;
  assign _128_ = ~ _173_;
  logic [0:0] _173__C0 ;
  logic [0:0] _173__R0 ;
  logic [0:0] _173__X0 ;
  assign _128__T = _173__T ;
  assign _173__C0 = _128__C ;
  assign _173__R0 = _128__R ;
  assign _173__X0 = _128__X ;
  assign _128__S = 0 ;
  assign _129_ = ~ FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0;
  logic [0:0] FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_C1 ;
  logic [0:0] FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_R1 ;
  logic [0:0] FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_X1 ;
  assign _129__T = FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_T ;
  assign FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_C1 = _129__C ;
  assign FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_R1 = _129__R ;
  assign FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_X1 = _129__X ;
  assign _129__S = 0 ;
  assign _130_ = ~ mux_tmp_5;
  logic [0:0] mux_tmp_5_C0 ;
  logic [0:0] mux_tmp_5_R0 ;
  logic [0:0] mux_tmp_5_X0 ;
  assign _130__T = mux_tmp_5_T ;
  assign mux_tmp_5_C0 = _130__C ;
  assign mux_tmp_5_R0 = _130__R ;
  assign mux_tmp_5_X0 = _130__X ;
  assign _130__S = 0 ;
  assign nor_37_nl = ~ _174_;
  logic [0:0] _174__C0 ;
  logic [0:0] _174__R0 ;
  logic [0:0] _174__X0 ;
  assign nor_37_nl_T = _174__T ;
  assign _174__C0 = nor_37_nl_C ;
  assign _174__R0 = nor_37_nl_R ;
  assign _174__X0 = nor_37_nl_X ;
  assign nor_37_nl_S = 0 ;
  assign nor_31_nl = ~ _176_;
  logic [0:0] _176__C0 ;
  logic [0:0] _176__R0 ;
  logic [0:0] _176__X0 ;
  assign nor_31_nl_T = _176__T ;
  assign _176__C0 = nor_31_nl_C ;
  assign _176__R0 = nor_31_nl_R ;
  assign _176__X0 = nor_31_nl_X ;
  assign nor_31_nl_S = 0 ;
  assign _131_ = ~ _078_;
  logic [0:0] _078__C0 ;
  logic [0:0] _078__R0 ;
  logic [0:0] _078__X0 ;
  assign _131__T = _078__T ;
  assign _078__C0 = _131__C ;
  assign _078__R0 = _131__R ;
  assign _078__X0 = _131__X ;
  assign _131__S = 0 ;
  assign nor_28_nl = ~ _177_;
  logic [0:0] _177__C0 ;
  logic [0:0] _177__R0 ;
  logic [0:0] _177__X0 ;
  assign nor_28_nl_T = _177__T ;
  assign _177__C0 = nor_28_nl_C ;
  assign _177__R0 = nor_28_nl_R ;
  assign _177__X0 = nor_28_nl_X ;
  assign nor_28_nl_S = 0 ;
  assign _132_ = ~ _178_;
  logic [0:0] _178__C0 ;
  logic [0:0] _178__R0 ;
  logic [0:0] _178__X0 ;
  assign _132__T = _178__T ;
  assign _178__C0 = _132__C ;
  assign _178__R0 = _132__R ;
  assign _178__X0 = _132__X ;
  assign _132__S = 0 ;
  assign nor_29_nl = ~ _180_;
  logic [0:0] _180__C0 ;
  logic [0:0] _180__R0 ;
  logic [0:0] _180__X0 ;
  assign nor_29_nl_T = _180__T ;
  assign _180__C0 = nor_29_nl_C ;
  assign _180__R0 = nor_29_nl_R ;
  assign _180__X0 = nor_29_nl_X ;
  assign nor_29_nl_S = 0 ;
  assign _133_ = and_dcpl_7 | _099_;
  assign _133__S = 0 ;
  logic [0:0] and_dcpl_7_C1 ;
  logic [0:0] and_dcpl_7_R1 ;
  logic [0:0] and_dcpl_7_X1 ;
  logic [0:0] _099__C1 ;
  logic [0:0] _099__R1 ;
  logic [0:0] _099__X1 ;
  assign _133__T = and_dcpl_7_T | _099__T ;
  assign and_dcpl_7_C1 = _133__C ;
  assign and_dcpl_7_X1 = _133__X ;
  assign _099__C1 = _133__C ;
  assign _099__X1 = _133__X ;
  assign and_dcpl_7_R1 = ( _133__R | _133__C & _099__T ) & { 1{ _099_ != 1'b1 }} ;
  assign _099__R1 = ( _133__R | _133__C & and_dcpl_7_T ) & { 1{ and_dcpl_7 != 1'b1 }} ;
  assign FpAdd_8U_23U_or_cse = IsNaN_8U_23U_1_land_lpi_1_dfm_4 | IsNaN_8U_23U_land_lpi_1_dfm_6;
  assign FpAdd_8U_23U_or_cse_S = 0 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_4_C1 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_4_R1 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_4_X1 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_6_C2 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_6_R2 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_6_X2 ;
  assign FpAdd_8U_23U_or_cse_T = IsNaN_8U_23U_1_land_lpi_1_dfm_4_T | IsNaN_8U_23U_land_lpi_1_dfm_6_T ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_4_C1 = FpAdd_8U_23U_or_cse_C ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_4_X1 = FpAdd_8U_23U_or_cse_X ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_6_C2 = FpAdd_8U_23U_or_cse_C ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_6_X2 = FpAdd_8U_23U_or_cse_X ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_4_R1 = ( FpAdd_8U_23U_or_cse_R | FpAdd_8U_23U_or_cse_C & IsNaN_8U_23U_land_lpi_1_dfm_6_T ) & { 1{ IsNaN_8U_23U_land_lpi_1_dfm_6 != 1'b1 }} ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_6_R2 = ( FpAdd_8U_23U_or_cse_R | FpAdd_8U_23U_or_cse_C & IsNaN_8U_23U_1_land_lpi_1_dfm_4_T ) & { 1{ IsNaN_8U_23U_1_land_lpi_1_dfm_4 != 1'b1 }} ;
  assign or_cse = chn_o_rsci_bawt | _102_;
  assign or_cse_S = 0 ;
  logic [0:0] chn_o_rsci_bawt_C2 ;
  logic [0:0] chn_o_rsci_bawt_R2 ;
  logic [0:0] chn_o_rsci_bawt_X2 ;
  logic [0:0] _102__C0 ;
  logic [0:0] _102__R0 ;
  logic [0:0] _102__X0 ;
  assign or_cse_T = chn_o_rsci_bawt_T | _102__T ;
  assign chn_o_rsci_bawt_C2 = or_cse_C ;
  assign chn_o_rsci_bawt_X2 = or_cse_X ;
  assign _102__C0 = or_cse_C ;
  assign _102__X0 = or_cse_X ;
  assign chn_o_rsci_bawt_R2 = ( or_cse_R | or_cse_C & _102__T ) & { 1{ _102_ != 1'b1 }} ;
  assign _102__R0 = ( or_cse_R | or_cse_C & chn_o_rsci_bawt_T ) & { 1{ chn_o_rsci_bawt != 1'b1 }} ;
  assign or_10_nl = nor_36_cse | nor_tmp_11;
  assign or_10_nl_S = 0 ;
  logic [0:0] nor_36_cse_C0 ;
  logic [0:0] nor_36_cse_R0 ;
  logic [0:0] nor_36_cse_X0 ;
  logic [0:0] nor_tmp_11_C1 ;
  logic [0:0] nor_tmp_11_R1 ;
  logic [0:0] nor_tmp_11_X1 ;
  assign or_10_nl_T = nor_36_cse_T | nor_tmp_11_T ;
  assign nor_36_cse_C0 = or_10_nl_C ;
  assign nor_36_cse_X0 = or_10_nl_X ;
  assign nor_tmp_11_C1 = or_10_nl_C ;
  assign nor_tmp_11_X1 = or_10_nl_X ;
  assign nor_36_cse_R0 = ( or_10_nl_R | or_10_nl_C & nor_tmp_11_T ) & { 1{ nor_tmp_11 != 1'b1 }} ;
  assign nor_tmp_11_R1 = ( or_10_nl_R | or_10_nl_C & nor_36_cse_T ) & { 1{ nor_36_cse != 1'b1 }} ;
  assign _134_ = reg_chn_o_rsci_ld_core_psct_cse | _103_;
  assign _134__S = 0 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C3 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R3 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X3 ;
  logic [0:0] _103__C0 ;
  logic [0:0] _103__R0 ;
  logic [0:0] _103__X0 ;
  assign _134__T = reg_chn_o_rsci_ld_core_psct_cse_T | _103__T ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C3 = _134__C ;
  assign reg_chn_o_rsci_ld_core_psct_cse_X3 = _134__X ;
  assign _103__C0 = _134__C ;
  assign _103__X0 = _134__X ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R3 = ( _134__R | _134__C & _103__T ) & { 1{ _103_ != 1'b1 }} ;
  assign _103__R0 = ( _134__R | _134__C & reg_chn_o_rsci_ld_core_psct_cse_T ) & { 1{ reg_chn_o_rsci_ld_core_psct_cse != 1'b1 }} ;
  assign FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse = _053_ | FpAdd_8U_23U_is_a_greater_acc_1_nl[8];
  assign FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_S = 0 ;
  assign { FpAdd_8U_23U_is_a_greater_acc_1_nl_R0 [0], FpAdd_8U_23U_is_a_greater_acc_1_nl_R0 [1], FpAdd_8U_23U_is_a_greater_acc_1_nl_R0 [2], FpAdd_8U_23U_is_a_greater_acc_1_nl_R0 [3], FpAdd_8U_23U_is_a_greater_acc_1_nl_R0 [4], FpAdd_8U_23U_is_a_greater_acc_1_nl_R0 [5], FpAdd_8U_23U_is_a_greater_acc_1_nl_R0 [6], FpAdd_8U_23U_is_a_greater_acc_1_nl_R0 [7] } = 0;
  assign { FpAdd_8U_23U_is_a_greater_acc_1_nl_X0 [0], FpAdd_8U_23U_is_a_greater_acc_1_nl_X0 [1], FpAdd_8U_23U_is_a_greater_acc_1_nl_X0 [2], FpAdd_8U_23U_is_a_greater_acc_1_nl_X0 [3], FpAdd_8U_23U_is_a_greater_acc_1_nl_X0 [4], FpAdd_8U_23U_is_a_greater_acc_1_nl_X0 [5], FpAdd_8U_23U_is_a_greater_acc_1_nl_X0 [6], FpAdd_8U_23U_is_a_greater_acc_1_nl_X0 [7] } = 0;
  assign { FpAdd_8U_23U_is_a_greater_acc_1_nl_C0 [0], FpAdd_8U_23U_is_a_greater_acc_1_nl_C0 [1], FpAdd_8U_23U_is_a_greater_acc_1_nl_C0 [2], FpAdd_8U_23U_is_a_greater_acc_1_nl_C0 [3], FpAdd_8U_23U_is_a_greater_acc_1_nl_C0 [4], FpAdd_8U_23U_is_a_greater_acc_1_nl_C0 [5], FpAdd_8U_23U_is_a_greater_acc_1_nl_C0 [6], FpAdd_8U_23U_is_a_greater_acc_1_nl_C0 [7] } = 0;
  logic [0:0] _053__C0 ;
  logic [0:0] _053__R0 ;
  logic [0:0] _053__X0 ;
  logic [8:0] FpAdd_8U_23U_is_a_greater_acc_1_nl_C1 ;
  logic [8:0] FpAdd_8U_23U_is_a_greater_acc_1_nl_R1 ;
  logic [8:0] FpAdd_8U_23U_is_a_greater_acc_1_nl_X1 ;
  assign FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_T = _053__T | FpAdd_8U_23U_is_a_greater_acc_1_nl_T [8] ;
  assign _053__C0 = FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_C ;
  assign _053__X0 = FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_X ;
  assign FpAdd_8U_23U_is_a_greater_acc_1_nl_C1 [8] = FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_C ;
  assign FpAdd_8U_23U_is_a_greater_acc_1_nl_X1 [8] = FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_X ;
  assign _053__R0 = ( FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_R | FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_C & FpAdd_8U_23U_is_a_greater_acc_1_nl_T [8] ) & { 1{ FpAdd_8U_23U_is_a_greater_acc_1_nl[8] != 1'b1 }} ;
  assign FpAdd_8U_23U_is_a_greater_acc_1_nl_R1 [8] = ( FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_R | FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_C & _053__T ) & { 1{ _053_ != 1'b1 }} ;
  assign FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse = and_dcpl_28 | and_dcpl_29;
  assign FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse_S = 0 ;
  logic [0:0] and_dcpl_28_C1 ;
  logic [0:0] and_dcpl_28_R1 ;
  logic [0:0] and_dcpl_28_X1 ;
  logic [0:0] and_dcpl_29_C2 ;
  logic [0:0] and_dcpl_29_R2 ;
  logic [0:0] and_dcpl_29_X2 ;
  assign FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse_T = and_dcpl_28_T | and_dcpl_29_T ;
  assign and_dcpl_28_C1 = FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse_C ;
  assign and_dcpl_28_X1 = FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse_X ;
  assign and_dcpl_29_C2 = FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse_C ;
  assign and_dcpl_29_X2 = FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse_X ;
  assign and_dcpl_28_R1 = ( FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse_R | FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse_C & and_dcpl_29_T ) & { 1{ and_dcpl_29 != 1'b1 }} ;
  assign and_dcpl_29_R2 = ( FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse_R | FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse_C & and_dcpl_28_T ) & { 1{ and_dcpl_28 != 1'b1 }} ;
  assign FpSignedBitsToFloat_8U_23U_1_FpAdd_8U_23U_or_1_cse = _054_ | and_dcpl_33;
  assign FpSignedBitsToFloat_8U_23U_1_FpAdd_8U_23U_or_1_cse_S = 0 ;
  logic [0:0] _054__C0 ;
  logic [0:0] _054__R0 ;
  logic [0:0] _054__X0 ;
  logic [0:0] and_dcpl_33_C0 ;
  logic [0:0] and_dcpl_33_R0 ;
  logic [0:0] and_dcpl_33_X0 ;
  assign FpSignedBitsToFloat_8U_23U_1_FpAdd_8U_23U_or_1_cse_T = _054__T | and_dcpl_33_T ;
  assign _054__C0 = FpSignedBitsToFloat_8U_23U_1_FpAdd_8U_23U_or_1_cse_C ;
  assign _054__X0 = FpSignedBitsToFloat_8U_23U_1_FpAdd_8U_23U_or_1_cse_X ;
  assign and_dcpl_33_C0 = FpSignedBitsToFloat_8U_23U_1_FpAdd_8U_23U_or_1_cse_C ;
  assign and_dcpl_33_X0 = FpSignedBitsToFloat_8U_23U_1_FpAdd_8U_23U_or_1_cse_X ;
  assign _054__R0 = ( FpSignedBitsToFloat_8U_23U_1_FpAdd_8U_23U_or_1_cse_R | FpSignedBitsToFloat_8U_23U_1_FpAdd_8U_23U_or_1_cse_C & and_dcpl_33_T ) & { 1{ and_dcpl_33 != 1'b1 }} ;
  assign and_dcpl_33_R0 = ( FpSignedBitsToFloat_8U_23U_1_FpAdd_8U_23U_or_1_cse_R | FpSignedBitsToFloat_8U_23U_1_FpAdd_8U_23U_or_1_cse_C & _054__T ) & { 1{ _054_ != 1'b1 }} ;
  assign _135_ = IsNaN_8U_23U_land_lpi_1_dfm_st_4 | _105_;
  assign _135__S = 0 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_4_C2 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_4_R2 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_4_X2 ;
  logic [0:0] _105__C1 ;
  logic [0:0] _105__R1 ;
  logic [0:0] _105__X1 ;
  assign _135__T = IsNaN_8U_23U_land_lpi_1_dfm_st_4_T | _105__T ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_4_C2 = _135__C ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_4_X2 = _135__X ;
  assign _105__C1 = _135__C ;
  assign _105__X1 = _135__X ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_4_R2 = ( _135__R | _135__C & _105__T ) & { 1{ _105_ != 1'b1 }} ;
  assign _105__R1 = ( _135__R | _135__C & IsNaN_8U_23U_land_lpi_1_dfm_st_4_T ) & { 1{ IsNaN_8U_23U_land_lpi_1_dfm_st_4 != 1'b1 }} ;
  assign _136_ = IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp | _106_;
  assign _136__S = 0 ;
  logic [0:0] IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_C0 ;
  logic [0:0] IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_R0 ;
  logic [0:0] IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_X0 ;
  logic [0:0] _106__C1 ;
  logic [0:0] _106__R1 ;
  logic [0:0] _106__X1 ;
  assign _136__T = IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_T | _106__T ;
  assign IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_C0 = _136__C ;
  assign IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_X0 = _136__X ;
  assign _106__C1 = _136__C ;
  assign _106__X1 = _136__X ;
  assign IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_R0 = ( _136__R | _136__C & _106__T ) & { 1{ _106_ != 1'b1 }} ;
  assign _106__R1 = ( _136__R | _136__C & IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_T ) & { 1{ IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp != 1'b1 }} ;
  assign _137_ = _107_ | _092_;
  assign _137__S = 0 ;
  logic [0:0] _107__C0 ;
  logic [0:0] _107__R0 ;
  logic [0:0] _107__X0 ;
  logic [0:0] _092__C0 ;
  logic [0:0] _092__R0 ;
  logic [0:0] _092__X0 ;
  assign _137__T = _107__T | _092__T ;
  assign _107__C0 = _137__C ;
  assign _107__X0 = _137__X ;
  assign _092__C0 = _137__C ;
  assign _092__X0 = _137__X ;
  assign _107__R0 = ( _137__R | _137__C & _092__T ) & { 1{ _092_ != 1'b1 }} ;
  assign _092__R0 = ( _137__R | _137__C & _107__T ) & { 1{ _107_ != 1'b1 }} ;
  assign or_tmp_16 = IsNaN_8U_23U_1_nor_itm_2 | IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2;
  assign or_tmp_16_S = 0 ;
  logic [0:0] IsNaN_8U_23U_1_nor_itm_2_C0 ;
  logic [0:0] IsNaN_8U_23U_1_nor_itm_2_R0 ;
  logic [0:0] IsNaN_8U_23U_1_nor_itm_2_X0 ;
  logic [0:0] IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_C0 ;
  logic [0:0] IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_R0 ;
  logic [0:0] IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_X0 ;
  assign or_tmp_16_T = IsNaN_8U_23U_1_nor_itm_2_T | IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_T ;
  assign IsNaN_8U_23U_1_nor_itm_2_C0 = or_tmp_16_C ;
  assign IsNaN_8U_23U_1_nor_itm_2_X0 = or_tmp_16_X ;
  assign IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_C0 = or_tmp_16_C ;
  assign IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_X0 = or_tmp_16_X ;
  assign IsNaN_8U_23U_1_nor_itm_2_R0 = ( or_tmp_16_R | or_tmp_16_C & IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_T ) & { 1{ IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2 != 1'b1 }} ;
  assign IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_R0 = ( or_tmp_16_R | or_tmp_16_C & IsNaN_8U_23U_1_nor_itm_2_T ) & { 1{ IsNaN_8U_23U_1_nor_itm_2 != 1'b1 }} ;
  assign _138_ = FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[0] | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[1];
  assign _138__S = 0 ;
  assign _138__T = FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [0] | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [1] ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C1 [0] = _138__C ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X1 [0] = _138__X ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C1 [1] = _138__C ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X1 [1] = _138__X ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R1 [0] = ( _138__R | _138__C & FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [1] ) & { 1{ FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[1] != 1'b1 }} ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R1 [1] = ( _138__R | _138__C & FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [0] ) & { 1{ FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[0] != 1'b1 }} ;
  assign _139_ = _138_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[2];
  assign _139__S = 0 ;
  logic [0:0] _138__C0 ;
  logic [0:0] _138__R0 ;
  logic [0:0] _138__X0 ;
  assign _139__T = _138__T | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [2] ;
  assign _138__C0 = _139__C ;
  assign _138__X0 = _139__X ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C1 [2] = _139__C ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X1 [2] = _139__X ;
  assign _138__R0 = ( _139__R | _139__C & FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [2] ) & { 1{ FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[2] != 1'b1 }} ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R1 [2] = ( _139__R | _139__C & _138__T ) & { 1{ _138_ != 1'b1 }} ;
  assign _140_ = _139_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[3];
  assign _140__S = 0 ;
  logic [0:0] _139__C0 ;
  logic [0:0] _139__R0 ;
  logic [0:0] _139__X0 ;
  assign _140__T = _139__T | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [3] ;
  assign _139__C0 = _140__C ;
  assign _139__X0 = _140__X ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C1 [3] = _140__C ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X1 [3] = _140__X ;
  assign _139__R0 = ( _140__R | _140__C & FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [3] ) & { 1{ FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[3] != 1'b1 }} ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R1 [3] = ( _140__R | _140__C & _139__T ) & { 1{ _139_ != 1'b1 }} ;
  assign _141_ = _140_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[4];
  assign _141__S = 0 ;
  logic [0:0] _140__C0 ;
  logic [0:0] _140__R0 ;
  logic [0:0] _140__X0 ;
  assign _141__T = _140__T | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [4] ;
  assign _140__C0 = _141__C ;
  assign _140__X0 = _141__X ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C1 [4] = _141__C ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X1 [4] = _141__X ;
  assign _140__R0 = ( _141__R | _141__C & FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [4] ) & { 1{ FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[4] != 1'b1 }} ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R1 [4] = ( _141__R | _141__C & _140__T ) & { 1{ _140_ != 1'b1 }} ;
  assign _142_ = _141_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[5];
  assign _142__S = 0 ;
  logic [0:0] _141__C0 ;
  logic [0:0] _141__R0 ;
  logic [0:0] _141__X0 ;
  assign _142__T = _141__T | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [5] ;
  assign _141__C0 = _142__C ;
  assign _141__X0 = _142__X ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C1 [5] = _142__C ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X1 [5] = _142__X ;
  assign _141__R0 = ( _142__R | _142__C & FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [5] ) & { 1{ FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[5] != 1'b1 }} ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R1 [5] = ( _142__R | _142__C & _141__T ) & { 1{ _141_ != 1'b1 }} ;
  assign _143_ = _142_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[6];
  assign _143__S = 0 ;
  logic [0:0] _142__C0 ;
  logic [0:0] _142__R0 ;
  logic [0:0] _142__X0 ;
  assign _143__T = _142__T | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [6] ;
  assign _142__C0 = _143__C ;
  assign _142__X0 = _143__X ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C1 [6] = _143__C ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X1 [6] = _143__X ;
  assign _142__R0 = ( _143__R | _143__C & FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [6] ) & { 1{ FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[6] != 1'b1 }} ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R1 [6] = ( _143__R | _143__C & _142__T ) & { 1{ _142_ != 1'b1 }} ;
  assign _144_ = _143_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[7];
  assign _144__S = 0 ;
  logic [0:0] _143__C0 ;
  logic [0:0] _143__R0 ;
  logic [0:0] _143__X0 ;
  assign _144__T = _143__T | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [7] ;
  assign _143__C0 = _144__C ;
  assign _143__X0 = _144__X ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C1 [7] = _144__C ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X1 [7] = _144__X ;
  assign _143__R0 = ( _144__R | _144__C & FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [7] ) & { 1{ FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[7] != 1'b1 }} ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R1 [7] = ( _144__R | _144__C & _143__T ) & { 1{ _143_ != 1'b1 }} ;
  assign _145_ = _144_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[8];
  assign _145__S = 0 ;
  logic [0:0] _144__C0 ;
  logic [0:0] _144__R0 ;
  logic [0:0] _144__X0 ;
  assign _145__T = _144__T | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [8] ;
  assign _144__C0 = _145__C ;
  assign _144__X0 = _145__X ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C1 [8] = _145__C ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X1 [8] = _145__X ;
  assign _144__R0 = ( _145__R | _145__C & FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [8] ) & { 1{ FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[8] != 1'b1 }} ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R1 [8] = ( _145__R | _145__C & _144__T ) & { 1{ _144_ != 1'b1 }} ;
  assign _146_ = _145_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[9];
  assign _146__S = 0 ;
  logic [0:0] _145__C0 ;
  logic [0:0] _145__R0 ;
  logic [0:0] _145__X0 ;
  assign _146__T = _145__T | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [9] ;
  assign _145__C0 = _146__C ;
  assign _145__X0 = _146__X ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C1 [9] = _146__C ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X1 [9] = _146__X ;
  assign _145__R0 = ( _146__R | _146__C & FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [9] ) & { 1{ FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[9] != 1'b1 }} ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R1 [9] = ( _146__R | _146__C & _145__T ) & { 1{ _145_ != 1'b1 }} ;
  assign _147_ = _146_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[10];
  assign _147__S = 0 ;
  logic [0:0] _146__C0 ;
  logic [0:0] _146__R0 ;
  logic [0:0] _146__X0 ;
  assign _147__T = _146__T | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [10] ;
  assign _146__C0 = _147__C ;
  assign _146__X0 = _147__X ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C1 [10] = _147__C ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X1 [10] = _147__X ;
  assign _146__R0 = ( _147__R | _147__C & FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [10] ) & { 1{ FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[10] != 1'b1 }} ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R1 [10] = ( _147__R | _147__C & _146__T ) & { 1{ _146_ != 1'b1 }} ;
  assign _148_ = _147_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[11];
  assign _148__S = 0 ;
  logic [0:0] _147__C0 ;
  logic [0:0] _147__R0 ;
  logic [0:0] _147__X0 ;
  assign _148__T = _147__T | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [11] ;
  assign _147__C0 = _148__C ;
  assign _147__X0 = _148__X ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C1 [11] = _148__C ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X1 [11] = _148__X ;
  assign _147__R0 = ( _148__R | _148__C & FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [11] ) & { 1{ FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[11] != 1'b1 }} ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R1 [11] = ( _148__R | _148__C & _147__T ) & { 1{ _147_ != 1'b1 }} ;
  assign _149_ = _148_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[12];
  assign _149__S = 0 ;
  logic [0:0] _148__C0 ;
  logic [0:0] _148__R0 ;
  logic [0:0] _148__X0 ;
  assign _149__T = _148__T | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [12] ;
  assign _148__C0 = _149__C ;
  assign _148__X0 = _149__X ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C1 [12] = _149__C ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X1 [12] = _149__X ;
  assign _148__R0 = ( _149__R | _149__C & FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [12] ) & { 1{ FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[12] != 1'b1 }} ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R1 [12] = ( _149__R | _149__C & _148__T ) & { 1{ _148_ != 1'b1 }} ;
  assign _150_ = _149_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[13];
  assign _150__S = 0 ;
  logic [0:0] _149__C0 ;
  logic [0:0] _149__R0 ;
  logic [0:0] _149__X0 ;
  assign _150__T = _149__T | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [13] ;
  assign _149__C0 = _150__C ;
  assign _149__X0 = _150__X ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C1 [13] = _150__C ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X1 [13] = _150__X ;
  assign _149__R0 = ( _150__R | _150__C & FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [13] ) & { 1{ FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[13] != 1'b1 }} ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R1 [13] = ( _150__R | _150__C & _149__T ) & { 1{ _149_ != 1'b1 }} ;
  assign _151_ = _150_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[14];
  assign _151__S = 0 ;
  logic [0:0] _150__C0 ;
  logic [0:0] _150__R0 ;
  logic [0:0] _150__X0 ;
  assign _151__T = _150__T | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [14] ;
  assign _150__C0 = _151__C ;
  assign _150__X0 = _151__X ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C1 [14] = _151__C ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X1 [14] = _151__X ;
  assign _150__R0 = ( _151__R | _151__C & FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [14] ) & { 1{ FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[14] != 1'b1 }} ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R1 [14] = ( _151__R | _151__C & _150__T ) & { 1{ _150_ != 1'b1 }} ;
  assign _152_ = _151_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[15];
  assign _152__S = 0 ;
  logic [0:0] _151__C0 ;
  logic [0:0] _151__R0 ;
  logic [0:0] _151__X0 ;
  assign _152__T = _151__T | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [15] ;
  assign _151__C0 = _152__C ;
  assign _151__X0 = _152__X ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C1 [15] = _152__C ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X1 [15] = _152__X ;
  assign _151__R0 = ( _152__R | _152__C & FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [15] ) & { 1{ FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[15] != 1'b1 }} ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R1 [15] = ( _152__R | _152__C & _151__T ) & { 1{ _151_ != 1'b1 }} ;
  assign _153_ = _152_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[16];
  assign _153__S = 0 ;
  logic [0:0] _152__C0 ;
  logic [0:0] _152__R0 ;
  logic [0:0] _152__X0 ;
  assign _153__T = _152__T | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [16] ;
  assign _152__C0 = _153__C ;
  assign _152__X0 = _153__X ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C1 [16] = _153__C ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X1 [16] = _153__X ;
  assign _152__R0 = ( _153__R | _153__C & FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [16] ) & { 1{ FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[16] != 1'b1 }} ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R1 [16] = ( _153__R | _153__C & _152__T ) & { 1{ _152_ != 1'b1 }} ;
  assign _154_ = _153_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[17];
  assign _154__S = 0 ;
  logic [0:0] _153__C0 ;
  logic [0:0] _153__R0 ;
  logic [0:0] _153__X0 ;
  assign _154__T = _153__T | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [17] ;
  assign _153__C0 = _154__C ;
  assign _153__X0 = _154__X ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C1 [17] = _154__C ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X1 [17] = _154__X ;
  assign _153__R0 = ( _154__R | _154__C & FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [17] ) & { 1{ FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[17] != 1'b1 }} ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R1 [17] = ( _154__R | _154__C & _153__T ) & { 1{ _153_ != 1'b1 }} ;
  assign _155_ = _154_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[18];
  assign _155__S = 0 ;
  logic [0:0] _154__C0 ;
  logic [0:0] _154__R0 ;
  logic [0:0] _154__X0 ;
  assign _155__T = _154__T | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [18] ;
  assign _154__C0 = _155__C ;
  assign _154__X0 = _155__X ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C1 [18] = _155__C ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X1 [18] = _155__X ;
  assign _154__R0 = ( _155__R | _155__C & FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [18] ) & { 1{ FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[18] != 1'b1 }} ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R1 [18] = ( _155__R | _155__C & _154__T ) & { 1{ _154_ != 1'b1 }} ;
  assign _156_ = _155_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[19];
  assign _156__S = 0 ;
  logic [0:0] _155__C0 ;
  logic [0:0] _155__R0 ;
  logic [0:0] _155__X0 ;
  assign _156__T = _155__T | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [19] ;
  assign _155__C0 = _156__C ;
  assign _155__X0 = _156__X ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C1 [19] = _156__C ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X1 [19] = _156__X ;
  assign _155__R0 = ( _156__R | _156__C & FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [19] ) & { 1{ FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[19] != 1'b1 }} ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R1 [19] = ( _156__R | _156__C & _155__T ) & { 1{ _155_ != 1'b1 }} ;
  assign _157_ = _156_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[20];
  assign _157__S = 0 ;
  logic [0:0] _156__C0 ;
  logic [0:0] _156__R0 ;
  logic [0:0] _156__X0 ;
  assign _157__T = _156__T | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [20] ;
  assign _156__C0 = _157__C ;
  assign _156__X0 = _157__X ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C1 [20] = _157__C ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X1 [20] = _157__X ;
  assign _156__R0 = ( _157__R | _157__C & FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [20] ) & { 1{ FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[20] != 1'b1 }} ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R1 [20] = ( _157__R | _157__C & _156__T ) & { 1{ _156_ != 1'b1 }} ;
  assign _158_ = _157_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[21];
  assign _158__S = 0 ;
  logic [0:0] _157__C0 ;
  logic [0:0] _157__R0 ;
  logic [0:0] _157__X0 ;
  assign _158__T = _157__T | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [21] ;
  assign _157__C0 = _158__C ;
  assign _157__X0 = _158__X ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C1 [21] = _158__C ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X1 [21] = _158__X ;
  assign _157__R0 = ( _158__R | _158__C & FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [21] ) & { 1{ FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[21] != 1'b1 }} ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R1 [21] = ( _158__R | _158__C & _157__T ) & { 1{ _157_ != 1'b1 }} ;
  assign _159_ = _158_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[22];
  assign _159__S = 0 ;
  logic [0:0] _158__C0 ;
  logic [0:0] _158__R0 ;
  logic [0:0] _158__X0 ;
  assign _159__T = _158__T | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [22] ;
  assign _158__C0 = _159__C ;
  assign _158__X0 = _159__X ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C1 [22] = _159__C ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X1 [22] = _159__X ;
  assign _158__R0 = ( _159__R | _159__C & FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [22] ) & { 1{ FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[22] != 1'b1 }} ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R1 [22] = ( _159__R | _159__C & _158__T ) & { 1{ _158_ != 1'b1 }} ;
  assign _160_ = _159_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[23];
  assign _160__S = 0 ;
  logic [0:0] _159__C0 ;
  logic [0:0] _159__R0 ;
  logic [0:0] _159__X0 ;
  assign _160__T = _159__T | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [23] ;
  assign _159__C0 = _160__C ;
  assign _159__X0 = _160__X ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C1 [23] = _160__C ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X1 [23] = _160__X ;
  assign _159__R0 = ( _160__R | _160__C & FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [23] ) & { 1{ FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[23] != 1'b1 }} ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R1 [23] = ( _160__R | _160__C & _159__T ) & { 1{ _159_ != 1'b1 }} ;
  assign _161_ = _160_ | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[25];
  assign _161__S = 0 ;
  assign { FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R1 [24] } = 0;
  assign { FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X1 [24] } = 0;
  assign { FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C1 [24] } = 0;
  logic [0:0] _160__C0 ;
  logic [0:0] _160__R0 ;
  logic [0:0] _160__X0 ;
  logic [48:0] FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C2 ;
  logic [48:0] FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R2 ;
  logic [48:0] FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X2 ;
  assign _161__T = _160__T | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [25] ;
  assign _160__C0 = _161__C ;
  assign _160__X0 = _161__X ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C2 [25] = _161__C ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X2 [25] = _161__X ;
  assign _160__R0 = ( _161__R | _161__C & FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T [25] ) & { 1{ FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0[25] != 1'b1 }} ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R2 [25] = ( _161__R | _161__C & _160__T ) & { 1{ _160_ != 1'b1 }} ;
  assign FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl = FpAdd_8U_23U_is_inf_lpi_1_dfm | _111_;
  assign FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl_S = 0 ;
  logic [0:0] FpAdd_8U_23U_is_inf_lpi_1_dfm_C0 ;
  logic [0:0] FpAdd_8U_23U_is_inf_lpi_1_dfm_R0 ;
  logic [0:0] FpAdd_8U_23U_is_inf_lpi_1_dfm_X0 ;
  logic [0:0] _111__C0 ;
  logic [0:0] _111__R0 ;
  logic [0:0] _111__X0 ;
  assign FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl_T = FpAdd_8U_23U_is_inf_lpi_1_dfm_T | _111__T ;
  assign FpAdd_8U_23U_is_inf_lpi_1_dfm_C0 = FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl_C ;
  assign FpAdd_8U_23U_is_inf_lpi_1_dfm_X0 = FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl_X ;
  assign _111__C0 = FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl_C ;
  assign _111__X0 = FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl_X ;
  assign FpAdd_8U_23U_is_inf_lpi_1_dfm_R0 = ( FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl_R | FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl_C & _111__T ) & { 1{ _111_ != 1'b1 }} ;
  assign _111__R0 = ( FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl_R | FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl_C & FpAdd_8U_23U_is_inf_lpi_1_dfm_T ) & { 1{ FpAdd_8U_23U_is_inf_lpi_1_dfm != 1'b1 }} ;
  assign _162_ = FpAdd_8U_23U_if_3_if_acc_1_nl[7] | _000_[2];
  assign _162__S = 0 ;
  assign { FpAdd_8U_23U_if_3_if_acc_1_nl_R1 [0], FpAdd_8U_23U_if_3_if_acc_1_nl_R1 [1], FpAdd_8U_23U_if_3_if_acc_1_nl_R1 [2], FpAdd_8U_23U_if_3_if_acc_1_nl_R1 [3], FpAdd_8U_23U_if_3_if_acc_1_nl_R1 [4], FpAdd_8U_23U_if_3_if_acc_1_nl_R1 [5], FpAdd_8U_23U_if_3_if_acc_1_nl_R1 [6] } = 0;
  assign { FpAdd_8U_23U_if_3_if_acc_1_nl_X1 [0], FpAdd_8U_23U_if_3_if_acc_1_nl_X1 [1], FpAdd_8U_23U_if_3_if_acc_1_nl_X1 [2], FpAdd_8U_23U_if_3_if_acc_1_nl_X1 [3], FpAdd_8U_23U_if_3_if_acc_1_nl_X1 [4], FpAdd_8U_23U_if_3_if_acc_1_nl_X1 [5], FpAdd_8U_23U_if_3_if_acc_1_nl_X1 [6] } = 0;
  assign { FpAdd_8U_23U_if_3_if_acc_1_nl_C1 [0], FpAdd_8U_23U_if_3_if_acc_1_nl_C1 [1], FpAdd_8U_23U_if_3_if_acc_1_nl_C1 [2], FpAdd_8U_23U_if_3_if_acc_1_nl_C1 [3], FpAdd_8U_23U_if_3_if_acc_1_nl_C1 [4], FpAdd_8U_23U_if_3_if_acc_1_nl_C1 [5], FpAdd_8U_23U_if_3_if_acc_1_nl_C1 [6] } = 0;
  assign { _000__R7 [0], _000__R7 [1] } = 0;
  assign { _000__X7 [0], _000__X7 [1] } = 0;
  assign { _000__C7 [0], _000__C7 [1] } = 0;
  logic [7:0] FpAdd_8U_23U_if_3_if_acc_1_nl_C2 ;
  logic [7:0] FpAdd_8U_23U_if_3_if_acc_1_nl_R2 ;
  logic [7:0] FpAdd_8U_23U_if_3_if_acc_1_nl_X2 ;
  logic [2:0] _000__C8 ;
  logic [2:0] _000__R8 ;
  logic [2:0] _000__X8 ;
  assign _162__T = FpAdd_8U_23U_if_3_if_acc_1_nl_T [7] | _000__T [2] ;
  assign FpAdd_8U_23U_if_3_if_acc_1_nl_C2 [7] = _162__C ;
  assign FpAdd_8U_23U_if_3_if_acc_1_nl_X2 [7] = _162__X ;
  assign _000__C8 [2] = _162__C ;
  assign _000__X8 [2] = _162__X ;
  assign FpAdd_8U_23U_if_3_if_acc_1_nl_R2 [7] = ( _162__R | _162__C & _000__T [2] ) & { 1{ _000_[2] != 1'b1 }} ;
  assign _000__R8 [2] = ( _162__R | _162__C & FpAdd_8U_23U_if_3_if_acc_1_nl_T [7] ) & { 1{ FpAdd_8U_23U_if_3_if_acc_1_nl[7] != 1'b1 }} ;
  assign or_tmp_3 = nor_36_cse | main_stage_v_2;
  assign or_tmp_3_S = 0 ;
  logic [0:0] nor_36_cse_C1 ;
  logic [0:0] nor_36_cse_R1 ;
  logic [0:0] nor_36_cse_X1 ;
  logic [0:0] main_stage_v_2_C4 ;
  logic [0:0] main_stage_v_2_R4 ;
  logic [0:0] main_stage_v_2_X4 ;
  assign or_tmp_3_T = nor_36_cse_T | main_stage_v_2_T ;
  assign nor_36_cse_C1 = or_tmp_3_C ;
  assign nor_36_cse_X1 = or_tmp_3_X ;
  assign main_stage_v_2_C4 = or_tmp_3_C ;
  assign main_stage_v_2_X4 = or_tmp_3_X ;
  assign nor_36_cse_R1 = ( or_tmp_3_R | or_tmp_3_C & main_stage_v_2_T ) & { 1{ main_stage_v_2 != 1'b1 }} ;
  assign main_stage_v_2_R4 = ( or_tmp_3_R | or_tmp_3_C & nor_36_cse_T ) & { 1{ nor_36_cse != 1'b1 }} ;
  assign _163_ = reg_chn_o_rsci_ld_core_psct_cse | _113_;
  assign _163__S = 0 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C4 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R4 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X4 ;
  logic [0:0] _113__C1 ;
  logic [0:0] _113__R1 ;
  logic [0:0] _113__X1 ;
  assign _163__T = reg_chn_o_rsci_ld_core_psct_cse_T | _113__T ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C4 = _163__C ;
  assign reg_chn_o_rsci_ld_core_psct_cse_X4 = _163__X ;
  assign _113__C1 = _163__C ;
  assign _113__X1 = _163__X ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R4 = ( _163__R | _163__C & _113__T ) & { 1{ _113_ != 1'b1 }} ;
  assign _113__R1 = ( _163__R | _163__C & reg_chn_o_rsci_ld_core_psct_cse_T ) & { 1{ reg_chn_o_rsci_ld_core_psct_cse != 1'b1 }} ;
  assign _164_ = IsNaN_8U_23U_1_land_lpi_1_dfm_3 | IsNaN_8U_23U_land_lpi_1_dfm_5;
  assign _164__S = 0 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_C0 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_R0 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_X0 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_5_C0 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_5_R0 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_5_X0 ;
  assign _164__T = IsNaN_8U_23U_1_land_lpi_1_dfm_3_T | IsNaN_8U_23U_land_lpi_1_dfm_5_T ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_C0 = _164__C ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_X0 = _164__X ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_5_C0 = _164__C ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_5_X0 = _164__X ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_R0 = ( _164__R | _164__C & IsNaN_8U_23U_land_lpi_1_dfm_5_T ) & { 1{ IsNaN_8U_23U_land_lpi_1_dfm_5 != 1'b1 }} ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_5_R0 = ( _164__R | _164__C & IsNaN_8U_23U_1_land_lpi_1_dfm_3_T ) & { 1{ IsNaN_8U_23U_1_land_lpi_1_dfm_3 != 1'b1 }} ;
  assign _165_ = FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl[23] | _117_;
  assign _165__S = 0 ;
  assign { FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R0 [0], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R0 [1], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R0 [2], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R0 [3], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R0 [4], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R0 [5], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R0 [6], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R0 [7], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R0 [8], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R0 [9], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R0 [10], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R0 [11], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R0 [12], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R0 [13], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R0 [14], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R0 [15], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R0 [16], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R0 [17], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R0 [18], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R0 [19], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R0 [20], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R0 [21], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R0 [22] } = 0;
  assign { FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X0 [0], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X0 [1], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X0 [2], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X0 [3], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X0 [4], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X0 [5], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X0 [6], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X0 [7], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X0 [8], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X0 [9], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X0 [10], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X0 [11], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X0 [12], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X0 [13], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X0 [14], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X0 [15], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X0 [16], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X0 [17], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X0 [18], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X0 [19], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X0 [20], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X0 [21], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X0 [22] } = 0;
  assign { FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C0 [0], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C0 [1], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C0 [2], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C0 [3], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C0 [4], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C0 [5], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C0 [6], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C0 [7], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C0 [8], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C0 [9], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C0 [10], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C0 [11], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C0 [12], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C0 [13], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C0 [14], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C0 [15], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C0 [16], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C0 [17], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C0 [18], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C0 [19], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C0 [20], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C0 [21], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C0 [22] } = 0;
  logic [23:0] FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C1 ;
  logic [23:0] FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R1 ;
  logic [23:0] FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X1 ;
  logic [0:0] _117__C0 ;
  logic [0:0] _117__R0 ;
  logic [0:0] _117__X0 ;
  assign _165__T = FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_T [23] | _117__T ;
  assign FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C1 [23] = _165__C ;
  assign FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X1 [23] = _165__X ;
  assign _117__C0 = _165__C ;
  assign _117__X0 = _165__X ;
  assign FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R1 [23] = ( _165__R | _165__C & _117__T ) & { 1{ _117_ != 1'b1 }} ;
  assign _117__R0 = ( _165__R | _165__C & FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_T [23] ) & { 1{ FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl[23] != 1'b1 }} ;
  assign or_tmp_29 = main_stage_en_1 | fsm_output[0];
  assign or_tmp_29_S = 0 ;
  logic [0:0] main_stage_en_1_C2 ;
  logic [0:0] main_stage_en_1_R2 ;
  logic [0:0] main_stage_en_1_X2 ;
  assign or_tmp_29_T = main_stage_en_1_T | fsm_output_T [0] ;
  assign main_stage_en_1_C2 = or_tmp_29_C ;
  assign main_stage_en_1_X2 = or_tmp_29_X ;
  assign fsm_output_C1 [0] = or_tmp_29_C ;
  assign fsm_output_X1 [0] = or_tmp_29_X ;
  assign main_stage_en_1_R2 = ( or_tmp_29_R | or_tmp_29_C & fsm_output_T [0] ) & { 1{ fsm_output[0] != 1'b1 }} ;
  assign fsm_output_R1 [0] = ( or_tmp_29_R | or_tmp_29_C & main_stage_en_1_T ) & { 1{ main_stage_en_1 != 1'b1 }} ;
  assign _166_ = _061_ | chn_o_rsci_d_22_0_mx0c1;
  assign _166__S = 0 ;
  logic [0:0] _061__C0 ;
  logic [0:0] _061__R0 ;
  logic [0:0] _061__X0 ;
  logic [0:0] chn_o_rsci_d_22_0_mx0c1_C1 ;
  logic [0:0] chn_o_rsci_d_22_0_mx0c1_R1 ;
  logic [0:0] chn_o_rsci_d_22_0_mx0c1_X1 ;
  assign _166__T = _061__T | chn_o_rsci_d_22_0_mx0c1_T ;
  assign _061__C0 = _166__C ;
  assign _061__X0 = _166__X ;
  assign chn_o_rsci_d_22_0_mx0c1_C1 = _166__C ;
  assign chn_o_rsci_d_22_0_mx0c1_X1 = _166__X ;
  assign _061__R0 = ( _166__R | _166__C & chn_o_rsci_d_22_0_mx0c1_T ) & { 1{ chn_o_rsci_d_22_0_mx0c1 != 1'b1 }} ;
  assign chn_o_rsci_d_22_0_mx0c1_R1 = ( _166__R | _166__C & _061__T ) & { 1{ _061_ != 1'b1 }} ;
  assign _167_ = and_dcpl_13 | and_dcpl_15;
  assign _167__S = 0 ;
  logic [0:0] and_dcpl_13_C2 ;
  logic [0:0] and_dcpl_13_R2 ;
  logic [0:0] and_dcpl_13_X2 ;
  logic [0:0] and_dcpl_15_C1 ;
  logic [0:0] and_dcpl_15_R1 ;
  logic [0:0] and_dcpl_15_X1 ;
  assign _167__T = and_dcpl_13_T | and_dcpl_15_T ;
  assign and_dcpl_13_C2 = _167__C ;
  assign and_dcpl_13_X2 = _167__X ;
  assign and_dcpl_15_C1 = _167__C ;
  assign and_dcpl_15_X1 = _167__X ;
  assign and_dcpl_13_R2 = ( _167__R | _167__C & and_dcpl_15_T ) & { 1{ and_dcpl_15 != 1'b1 }} ;
  assign and_dcpl_15_R1 = ( _167__R | _167__C & and_dcpl_13_T ) & { 1{ and_dcpl_13 != 1'b1 }} ;
  assign _168_ = or_tmp_35 | main_stage_v_1_mx0c1;
  assign _168__S = 0 ;
  logic [0:0] or_tmp_35_C0 ;
  logic [0:0] or_tmp_35_R0 ;
  logic [0:0] or_tmp_35_X0 ;
  logic [0:0] main_stage_v_1_mx0c1_C1 ;
  logic [0:0] main_stage_v_1_mx0c1_R1 ;
  logic [0:0] main_stage_v_1_mx0c1_X1 ;
  assign _168__T = or_tmp_35_T | main_stage_v_1_mx0c1_T ;
  assign or_tmp_35_C0 = _168__C ;
  assign or_tmp_35_X0 = _168__X ;
  assign main_stage_v_1_mx0c1_C1 = _168__C ;
  assign main_stage_v_1_mx0c1_X1 = _168__X ;
  assign or_tmp_35_R0 = ( _168__R | _168__C & main_stage_v_1_mx0c1_T ) & { 1{ main_stage_v_1_mx0c1 != 1'b1 }} ;
  assign main_stage_v_1_mx0c1_R1 = ( _168__R | _168__C & or_tmp_35_T ) & { 1{ or_tmp_35 != 1'b1 }} ;
  assign _169_ = _065_ | main_stage_v_2_mx0c1;
  assign _169__S = 0 ;
  logic [0:0] _065__C0 ;
  logic [0:0] _065__R0 ;
  logic [0:0] _065__X0 ;
  logic [0:0] main_stage_v_2_mx0c1_C1 ;
  logic [0:0] main_stage_v_2_mx0c1_R1 ;
  logic [0:0] main_stage_v_2_mx0c1_X1 ;
  assign _169__T = _065__T | main_stage_v_2_mx0c1_T ;
  assign _065__C0 = _169__C ;
  assign _065__X0 = _169__X ;
  assign main_stage_v_2_mx0c1_C1 = _169__C ;
  assign main_stage_v_2_mx0c1_X1 = _169__X ;
  assign _065__R0 = ( _169__R | _169__C & main_stage_v_2_mx0c1_T ) & { 1{ main_stage_v_2_mx0c1 != 1'b1 }} ;
  assign main_stage_v_2_mx0c1_R1 = ( _169__R | _169__C & _065__T ) & { 1{ _065_ != 1'b1 }} ;
  assign _170_ = _067_ | main_stage_v_3_mx0c1;
  assign _170__S = 0 ;
  logic [0:0] _067__C0 ;
  logic [0:0] _067__R0 ;
  logic [0:0] _067__X0 ;
  logic [0:0] main_stage_v_3_mx0c1_C1 ;
  logic [0:0] main_stage_v_3_mx0c1_R1 ;
  logic [0:0] main_stage_v_3_mx0c1_X1 ;
  assign _170__T = _067__T | main_stage_v_3_mx0c1_T ;
  assign _067__C0 = _170__C ;
  assign _067__X0 = _170__X ;
  assign main_stage_v_3_mx0c1_C1 = _170__C ;
  assign main_stage_v_3_mx0c1_X1 = _170__X ;
  assign _067__R0 = ( _170__R | _170__C & main_stage_v_3_mx0c1_T ) & { 1{ main_stage_v_3_mx0c1 != 1'b1 }} ;
  assign main_stage_v_3_mx0c1_R1 = ( _170__R | _170__C & _067__T ) & { 1{ _067_ != 1'b1 }} ;
  assign _171_ = and_dcpl_28 | FpSignedBitsToFloat_8U_23U_1_and_rgt;
  assign _171__S = 0 ;
  logic [0:0] and_dcpl_28_C2 ;
  logic [0:0] and_dcpl_28_R2 ;
  logic [0:0] and_dcpl_28_X2 ;
  logic [0:0] FpSignedBitsToFloat_8U_23U_1_and_rgt_C1 ;
  logic [0:0] FpSignedBitsToFloat_8U_23U_1_and_rgt_R1 ;
  logic [0:0] FpSignedBitsToFloat_8U_23U_1_and_rgt_X1 ;
  assign _171__T = and_dcpl_28_T | FpSignedBitsToFloat_8U_23U_1_and_rgt_T ;
  assign and_dcpl_28_C2 = _171__C ;
  assign and_dcpl_28_X2 = _171__X ;
  assign FpSignedBitsToFloat_8U_23U_1_and_rgt_C1 = _171__C ;
  assign FpSignedBitsToFloat_8U_23U_1_and_rgt_X1 = _171__X ;
  assign and_dcpl_28_R2 = ( _171__R | _171__C & FpSignedBitsToFloat_8U_23U_1_and_rgt_T ) & { 1{ FpSignedBitsToFloat_8U_23U_1_and_rgt != 1'b1 }} ;
  assign FpSignedBitsToFloat_8U_23U_1_and_rgt_R1 = ( _171__R | _171__C & and_dcpl_28_T ) & { 1{ and_dcpl_28 != 1'b1 }} ;
  assign _172_ = _171_ | FpSignedBitsToFloat_8U_23U_1_and_1_rgt;
  assign _172__S = 0 ;
  logic [0:0] _171__C0 ;
  logic [0:0] _171__R0 ;
  logic [0:0] _171__X0 ;
  logic [0:0] FpSignedBitsToFloat_8U_23U_1_and_1_rgt_C1 ;
  logic [0:0] FpSignedBitsToFloat_8U_23U_1_and_1_rgt_R1 ;
  logic [0:0] FpSignedBitsToFloat_8U_23U_1_and_1_rgt_X1 ;
  assign _172__T = _171__T | FpSignedBitsToFloat_8U_23U_1_and_1_rgt_T ;
  assign _171__C0 = _172__C ;
  assign _171__X0 = _172__X ;
  assign FpSignedBitsToFloat_8U_23U_1_and_1_rgt_C1 = _172__C ;
  assign FpSignedBitsToFloat_8U_23U_1_and_1_rgt_X1 = _172__X ;
  assign _171__R0 = ( _172__R | _172__C & FpSignedBitsToFloat_8U_23U_1_and_1_rgt_T ) & { 1{ FpSignedBitsToFloat_8U_23U_1_and_1_rgt != 1'b1 }} ;
  assign FpSignedBitsToFloat_8U_23U_1_and_1_rgt_R1 = ( _172__R | _172__C & _171__T ) & { 1{ _171_ != 1'b1 }} ;
  assign _173_ = FpAdd_8U_23U_and_tmp | FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0;
  assign _173__S = 0 ;
  logic [0:0] FpAdd_8U_23U_and_tmp_C1 ;
  logic [0:0] FpAdd_8U_23U_and_tmp_R1 ;
  logic [0:0] FpAdd_8U_23U_and_tmp_X1 ;
  logic [0:0] FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_C2 ;
  logic [0:0] FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_R2 ;
  logic [0:0] FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_X2 ;
  assign _173__T = FpAdd_8U_23U_and_tmp_T | FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_T ;
  assign FpAdd_8U_23U_and_tmp_C1 = _173__C ;
  assign FpAdd_8U_23U_and_tmp_X1 = _173__X ;
  assign FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_C2 = _173__C ;
  assign FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_X2 = _173__X ;
  assign FpAdd_8U_23U_and_tmp_R1 = ( _173__R | _173__C & FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_T ) & { 1{ FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0 != 1'b1 }} ;
  assign FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_R2 = ( _173__R | _173__C & FpAdd_8U_23U_and_tmp_T ) & { 1{ FpAdd_8U_23U_and_tmp != 1'b1 }} ;
  assign _174_ = FpAdd_8U_23U_mux_2_tmp_49 | _130_;
  assign _174__S = 0 ;
  logic [0:0] FpAdd_8U_23U_mux_2_tmp_49_C0 ;
  logic [0:0] FpAdd_8U_23U_mux_2_tmp_49_R0 ;
  logic [0:0] FpAdd_8U_23U_mux_2_tmp_49_X0 ;
  logic [0:0] _130__C0 ;
  logic [0:0] _130__R0 ;
  logic [0:0] _130__X0 ;
  assign _174__T = FpAdd_8U_23U_mux_2_tmp_49_T | _130__T ;
  assign FpAdd_8U_23U_mux_2_tmp_49_C0 = _174__C ;
  assign FpAdd_8U_23U_mux_2_tmp_49_X0 = _174__X ;
  assign _130__C0 = _174__C ;
  assign _130__X0 = _174__X ;
  assign FpAdd_8U_23U_mux_2_tmp_49_R0 = ( _174__R | _174__C & _130__T ) & { 1{ _130_ != 1'b1 }} ;
  assign _130__R0 = ( _174__R | _174__C & FpAdd_8U_23U_mux_2_tmp_49_T ) & { 1{ FpAdd_8U_23U_mux_2_tmp_49 != 1'b1 }} ;
  assign _175_ = FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2[49] | _099_;
  assign _175__S = 0 ;
  assign { FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [0], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [1], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [2], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [3], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [4], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [5], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [6], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [7], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [8], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [9], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [10], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [11], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [12], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [13], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [14], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [15], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [16], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [17], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [18], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [19], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [20], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [21], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [22], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [23], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [24], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [25], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [26], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [27], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [28], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [29], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [30], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [31], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [32], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [33], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [34], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [35], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [36], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [37], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [38], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [39], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [40], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [41], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [42], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [43], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [44], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [45], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [46], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [47], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 [48] } = 0;
  assign { FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [0], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [1], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [2], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [3], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [4], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [5], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [6], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [7], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [8], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [9], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [10], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [11], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [12], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [13], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [14], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [15], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [16], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [17], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [18], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [19], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [20], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [21], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [22], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [23], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [24], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [25], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [26], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [27], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [28], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [29], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [30], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [31], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [32], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [33], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [34], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [35], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [36], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [37], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [38], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [39], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [40], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [41], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [42], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [43], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [44], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [45], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [46], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [47], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 [48] } = 0;
  assign { FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [0], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [1], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [2], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [3], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [4], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [5], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [6], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [7], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [8], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [9], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [10], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [11], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [12], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [13], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [14], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [15], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [16], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [17], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [18], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [19], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [20], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [21], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [22], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [23], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [24], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [25], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [26], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [27], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [28], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [29], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [30], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [31], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [32], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [33], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [34], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [35], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [36], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [37], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [38], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [39], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [40], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [41], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [42], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [43], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [44], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [45], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [46], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [47], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 [48] } = 0;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C3 ;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R3 ;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X3 ;
  logic [0:0] _099__C2 ;
  logic [0:0] _099__R2 ;
  logic [0:0] _099__X2 ;
  assign _175__T = FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_T [49] | _099__T ;
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C3 [49] = _175__C ;
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X3 [49] = _175__X ;
  assign _099__C2 = _175__C ;
  assign _099__X2 = _175__X ;
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R3 [49] = ( _175__R | _175__C & _099__T ) & { 1{ _099_ != 1'b1 }} ;
  assign _099__R2 = ( _175__R | _175__C & FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_T [49] ) & { 1{ FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2[49] != 1'b1 }} ;
  assign _176_ = or_tmp_16 | _105_;
  assign _176__S = 0 ;
  logic [0:0] or_tmp_16_C3 ;
  logic [0:0] or_tmp_16_R3 ;
  logic [0:0] or_tmp_16_X3 ;
  logic [0:0] _105__C2 ;
  logic [0:0] _105__R2 ;
  logic [0:0] _105__X2 ;
  assign _176__T = or_tmp_16_T | _105__T ;
  assign or_tmp_16_C3 = _176__C ;
  assign or_tmp_16_X3 = _176__X ;
  assign _105__C2 = _176__C ;
  assign _105__X2 = _176__X ;
  assign or_tmp_16_R3 = ( _176__R | _176__C & _105__T ) & { 1{ _105_ != 1'b1 }} ;
  assign _105__R2 = ( _176__R | _176__C & or_tmp_16_T ) & { 1{ or_tmp_16 != 1'b1 }} ;
  assign _177_ = IsNaN_8U_23U_land_lpi_1_dfm_st_4 | _131_;
  assign _177__S = 0 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_4_C3 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_4_R3 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_4_X3 ;
  logic [0:0] _131__C0 ;
  logic [0:0] _131__R0 ;
  logic [0:0] _131__X0 ;
  assign _177__T = IsNaN_8U_23U_land_lpi_1_dfm_st_4_T | _131__T ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_4_C3 = _177__C ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_4_X3 = _177__X ;
  assign _131__C0 = _177__C ;
  assign _131__X0 = _177__X ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_4_R3 = ( _177__R | _177__C & _131__T ) & { 1{ _131_ != 1'b1 }} ;
  assign _131__R0 = ( _177__R | _177__C & IsNaN_8U_23U_land_lpi_1_dfm_st_4_T ) & { 1{ IsNaN_8U_23U_land_lpi_1_dfm_st_4 != 1'b1 }} ;
  assign _178_ = IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp | IsNaN_8U_23U_1_nor_tmp;
  assign _178__S = 0 ;
  logic [0:0] IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_C0 ;
  logic [0:0] IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_R0 ;
  logic [0:0] IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_X0 ;
  logic [0:0] IsNaN_8U_23U_1_nor_tmp_C0 ;
  logic [0:0] IsNaN_8U_23U_1_nor_tmp_R0 ;
  logic [0:0] IsNaN_8U_23U_1_nor_tmp_X0 ;
  assign _178__T = IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_T | IsNaN_8U_23U_1_nor_tmp_T ;
  assign IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_C0 = _178__C ;
  assign IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_X0 = _178__X ;
  assign IsNaN_8U_23U_1_nor_tmp_C0 = _178__C ;
  assign IsNaN_8U_23U_1_nor_tmp_X0 = _178__X ;
  assign IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_R0 = ( _178__R | _178__C & IsNaN_8U_23U_1_nor_tmp_T ) & { 1{ IsNaN_8U_23U_1_nor_tmp != 1'b1 }} ;
  assign IsNaN_8U_23U_1_nor_tmp_R0 = ( _178__R | _178__C & IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_T ) & { 1{ IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp != 1'b1 }} ;
  assign _179_ = _132_ | IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp;
  assign _179__S = 0 ;
  logic [0:0] _132__C0 ;
  logic [0:0] _132__R0 ;
  logic [0:0] _132__X0 ;
  logic [0:0] IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_C1 ;
  logic [0:0] IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_R1 ;
  logic [0:0] IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_X1 ;
  assign _179__T = _132__T | IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_T ;
  assign _132__C0 = _179__C ;
  assign _132__X0 = _179__X ;
  assign IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_C1 = _179__C ;
  assign IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_X1 = _179__X ;
  assign _132__R0 = ( _179__R | _179__C & IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_T ) & { 1{ IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp != 1'b1 }} ;
  assign IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_R1 = ( _179__R | _179__C & _132__T ) & { 1{ _132_ != 1'b1 }} ;
  assign _180_ = _179_ | _106_;
  assign _180__S = 0 ;
  logic [0:0] _179__C0 ;
  logic [0:0] _179__R0 ;
  logic [0:0] _179__X0 ;
  logic [0:0] _106__C2 ;
  logic [0:0] _106__R2 ;
  logic [0:0] _106__X2 ;
  assign _180__T = _179__T | _106__T ;
  assign _179__C0 = _180__C ;
  assign _179__X0 = _180__X ;
  assign _106__C2 = _180__C ;
  assign _106__X2 = _180__X ;
  assign _179__R0 = ( _180__R | _180__C & _106__T ) & { 1{ _106_ != 1'b1 }} ;
  assign _106__R2 = ( _180__R | _180__C & _179__T ) & { 1{ _179_ != 1'b1 }} ;
  assign _181_ = _079_ | _080_;
  assign _181__S = 0 ;
  logic [0:0] _079__C0 ;
  logic [0:0] _079__R0 ;
  logic [0:0] _079__X0 ;
  logic [0:0] _080__C0 ;
  logic [0:0] _080__R0 ;
  logic [0:0] _080__X0 ;
  assign _181__T = _079__T | _080__T ;
  assign _079__C0 = _181__C ;
  assign _079__X0 = _181__X ;
  assign _080__C0 = _181__C ;
  assign _080__X0 = _181__X ;
  assign _079__R0 = ( _181__R | _181__C & _080__T ) & { 1{ _080_ != 1'b1 }} ;
  assign _080__R0 = ( _181__R | _181__C & _079__T ) & { 1{ _079_ != 1'b1 }} ;
  assign _182_ = _181_ | _081_;
  assign _182__S = 0 ;
  logic [0:0] _181__C0 ;
  logic [0:0] _181__R0 ;
  logic [0:0] _181__X0 ;
  logic [0:0] _081__C0 ;
  logic [0:0] _081__R0 ;
  logic [0:0] _081__X0 ;
  assign _182__T = _181__T | _081__T ;
  assign _181__C0 = _182__C ;
  assign _181__X0 = _182__X ;
  assign _081__C0 = _182__C ;
  assign _081__X0 = _182__X ;
  assign _181__R0 = ( _182__R | _182__C & _081__T ) & { 1{ _081_ != 1'b1 }} ;
  assign _081__R0 = ( _182__R | _182__C & _181__T ) & { 1{ _181_ != 1'b1 }} ;
  assign _183_ = _082_ | _083_;
  assign _183__S = 0 ;
  logic [7:0] _082__C0 ;
  logic [7:0] _082__R0 ;
  logic [7:0] _082__X0 ;
  logic [7:0] _083__C0 ;
  logic [7:0] _083__R0 ;
  logic [7:0] _083__X0 ;
  assign _183__T = _082__T | _083__T ;
  assign _082__C0 = _183__C ;
  assign _082__X0 = _183__X ;
  assign _083__C0 = _183__C ;
  assign _083__X0 = _183__X ;
  assign _082__R0 = ( _183__R | _183__C & _083__T ) & { 8{ _083_ != 8'b11111111 }} ;
  assign _083__R0 = ( _183__R | _183__C & _082__T ) & { 8{ _082_ != 8'b11111111 }} ;
  assign FpAdd_8U_23U_o_expo_lpi_1_dfm_2 = _183_ | _084_;
  assign FpAdd_8U_23U_o_expo_lpi_1_dfm_2_S = 0 ;
  logic [7:0] _183__C0 ;
  logic [7:0] _183__R0 ;
  logic [7:0] _183__X0 ;
  logic [7:0] _084__C0 ;
  logic [7:0] _084__R0 ;
  logic [7:0] _084__X0 ;
  assign FpAdd_8U_23U_o_expo_lpi_1_dfm_2_T = _183__T | _084__T ;
  assign _183__C0 = FpAdd_8U_23U_o_expo_lpi_1_dfm_2_C ;
  assign _183__X0 = FpAdd_8U_23U_o_expo_lpi_1_dfm_2_X ;
  assign _084__C0 = FpAdd_8U_23U_o_expo_lpi_1_dfm_2_C ;
  assign _084__X0 = FpAdd_8U_23U_o_expo_lpi_1_dfm_2_X ;
  assign _183__R0 = ( FpAdd_8U_23U_o_expo_lpi_1_dfm_2_R | FpAdd_8U_23U_o_expo_lpi_1_dfm_2_C & _084__T ) & { 8{ _084_ != 8'b11111111 }} ;
  assign _084__R0 = ( FpAdd_8U_23U_o_expo_lpi_1_dfm_2_R | FpAdd_8U_23U_o_expo_lpi_1_dfm_2_C & _183__T ) & { 8{ _183_ != 8'b11111111 }} ;
  assign _184_ = _085_ | _086_;
  assign _184__S = 0 ;
  logic [7:0] _085__C0 ;
  logic [7:0] _085__R0 ;
  logic [7:0] _085__X0 ;
  logic [7:0] _086__C0 ;
  logic [7:0] _086__R0 ;
  logic [7:0] _086__X0 ;
  assign _184__T = _085__T | _086__T ;
  assign _085__C0 = _184__C ;
  assign _085__X0 = _184__X ;
  assign _086__C0 = _184__C ;
  assign _086__X0 = _184__X ;
  assign _085__R0 = ( _184__R | _184__C & _086__T ) & { 8{ _086_ != 8'b11111111 }} ;
  assign _086__R0 = ( _184__R | _184__C & _085__T ) & { 8{ _085_ != 8'b11111111 }} ;
  assign _185_ = _184_ | _087_;
  assign _185__S = 0 ;
  logic [7:0] _184__C0 ;
  logic [7:0] _184__R0 ;
  logic [7:0] _184__X0 ;
  logic [7:0] _087__C0 ;
  logic [7:0] _087__R0 ;
  logic [7:0] _087__X0 ;
  assign _185__T = _184__T | _087__T ;
  assign _184__C0 = _185__C ;
  assign _184__X0 = _185__X ;
  assign _087__C0 = _185__C ;
  assign _087__X0 = _185__X ;
  assign _184__R0 = ( _185__R | _185__C & _087__T ) & { 8{ _087_ != 8'b11111111 }} ;
  assign _087__R0 = ( _185__R | _185__C & _184__T ) & { 8{ _184_ != 8'b11111111 }} ;
  assign _186_ = _185_ | _088_;
  assign _186__S = 0 ;
  logic [7:0] _185__C0 ;
  logic [7:0] _185__R0 ;
  logic [7:0] _185__X0 ;
  logic [7:0] _088__C0 ;
  logic [7:0] _088__R0 ;
  logic [7:0] _088__X0 ;
  assign _186__T = _185__T | _088__T ;
  assign _185__C0 = _186__C ;
  assign _185__X0 = _186__X ;
  assign _088__C0 = _186__C ;
  assign _088__X0 = _186__X ;
  assign _185__R0 = ( _186__R | _186__C & _088__T ) & { 8{ _088_ != 8'b11111111 }} ;
  assign _088__R0 = ( _186__R | _186__C & _185__T ) & { 8{ _185_ != 8'b11111111 }} ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      IsNaN_8U_23U_1_nor_itm_2 <= 1'b0;
    else
      IsNaN_8U_23U_1_nor_itm_2 <= _026_;
  logic [0:0] _026__X0 ;
  logic [0:0] _026__R0 ;
  logic [0:0] _026__C0 ;
  assign _026__X0 = { 1{ IsNaN_8U_23U_1_nor_itm_2_S != _026__S }} ;
  assign _026__R0 = 0 ;
  assign _026__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_1_nor_itm_2_T 		<= !nvdla_core_rstn ? 0 : ( _026__T & _026__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_1_nor_itm_2_t_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_8U_23U_1_nor_itm_2_t_flag ? 1 : | _026__T & ( | _026__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_1_nor_itm_2_r_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_8U_23U_1_nor_itm_2_r_flag ? 1 : IsNaN_8U_23U_1_nor_itm_2_t_flag ? 0 : ( | IsNaN_8U_23U_1_nor_itm_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2 <= 1'b0;
    else
      IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2 <= _023_;
  logic [0:0] _023__X0 ;
  logic [0:0] _023__R0 ;
  logic [0:0] _023__C0 ;
  assign _023__X0 = { 1{ IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_S != _023__S }} ;
  assign _023__R0 = 0 ;
  assign _023__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_T 		<= !nvdla_core_rstn ? 0 : ( _023__T & _023__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_t_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_t_flag ? 1 : | _023__T & ( | _023__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_r_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_r_flag ? 1 : IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_t_flag ? 0 : ( | IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpAdd_8U_23U_mux_1_itm_2 <= 1'b0;
    else
      FpAdd_8U_23U_mux_1_itm_2 <= _014_;
  logic [0:0] _014__X0 ;
  logic [0:0] _014__R0 ;
  logic [0:0] _014__C0 ;
  assign _014__X0 = { 1{ FpAdd_8U_23U_mux_1_itm_2_S != _014__S }} ;
  assign _014__R0 = 0 ;
  assign _014__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_mux_1_itm_2_T 		<= !nvdla_core_rstn ? 0 : ( _014__T & _014__X0 );
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_mux_1_itm_2_t_flag 	<= !nvdla_core_rstn ? 0 : FpAdd_8U_23U_mux_1_itm_2_t_flag ? 1 : | _014__T & ( | _014__X0 );
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_mux_1_itm_2_r_flag 	<= !nvdla_core_rstn ? 0 : FpAdd_8U_23U_mux_1_itm_2_r_flag ? 1 : FpAdd_8U_23U_mux_1_itm_2_t_flag ? 0 : ( | FpAdd_8U_23U_mux_1_itm_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpAdd_8U_23U_qr_lpi_1_dfm_4 <= 8'b00000000;
    else
      FpAdd_8U_23U_qr_lpi_1_dfm_4 <= _015_;
  logic [7:0] _015__X0 ;
  logic [7:0] _015__R0 ;
  logic [7:0] _015__C0 ;
  assign _015__X0 = { 8{ FpAdd_8U_23U_qr_lpi_1_dfm_4_S != _015__S }} ;
  assign _015__R0 = 0 ;
  assign _015__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_qr_lpi_1_dfm_4_T 		<= !nvdla_core_rstn ? 0 : ( _015__T & _015__X0 );
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_qr_lpi_1_dfm_4_t_flag 	<= !nvdla_core_rstn ? 0 : FpAdd_8U_23U_qr_lpi_1_dfm_4_t_flag ? 1 : | _015__T & ( | _015__X0 );
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_qr_lpi_1_dfm_4_r_flag 	<= !nvdla_core_rstn ? 0 : FpAdd_8U_23U_qr_lpi_1_dfm_4_r_flag ? 1 : FpAdd_8U_23U_qr_lpi_1_dfm_4_t_flag ? 0 : ( | FpAdd_8U_23U_qr_lpi_1_dfm_4_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpAdd_8U_23U_mux_13_itm_3 <= 1'b0;
    else
      FpAdd_8U_23U_mux_13_itm_3 <= _012_;
  logic [0:0] _012__X0 ;
  logic [0:0] _012__R0 ;
  logic [0:0] _012__C0 ;
  assign _012__X0 = { 1{ FpAdd_8U_23U_mux_13_itm_3_S != _012__S }} ;
  assign _012__R0 = 0 ;
  assign _012__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_mux_13_itm_3_T 		<= !nvdla_core_rstn ? 0 : ( _012__T & _012__X0 );
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_mux_13_itm_3_t_flag 	<= !nvdla_core_rstn ? 0 : FpAdd_8U_23U_mux_13_itm_3_t_flag ? 1 : | _012__T & ( | _012__X0 );
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_mux_13_itm_3_r_flag 	<= !nvdla_core_rstn ? 0 : FpAdd_8U_23U_mux_13_itm_3_r_flag ? 1 : FpAdd_8U_23U_mux_13_itm_3_t_flag ? 0 : ( | FpAdd_8U_23U_mux_13_itm_3_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3 <= 23'b00000000000000000000000;
    else
      FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3 <= _019_;
  logic [22:0] _019__X0 ;
  logic [22:0] _019__R0 ;
  logic [22:0] _019__C0 ;
  assign _019__X0 = { 23{ FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_S != _019__S }} ;
  assign _019__R0 = 0 ;
  assign _019__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_T 		<= !nvdla_core_rstn ? 0 : ( _019__T & _019__X0 );
  always @( posedge nvdla_core_clk )
      FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_t_flag 	<= !nvdla_core_rstn ? 0 : FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_t_flag ? 1 : | _019__T & ( | _019__X0 );
  always @( posedge nvdla_core_clk )
      FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_r_flag 	<= !nvdla_core_rstn ? 0 : FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_r_flag ? 1 : FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_t_flag ? 0 : ( | FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3 <= 8'b00000000;
    else
      FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3 <= _021_;
  logic [7:0] _021__X0 ;
  logic [7:0] _021__R0 ;
  logic [7:0] _021__C0 ;
  assign _021__X0 = { 8{ FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_S != _021__S }} ;
  assign _021__R0 = 0 ;
  assign _021__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_T 		<= !nvdla_core_rstn ? 0 : ( _021__T & _021__X0 );
  always @( posedge nvdla_core_clk )
      FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_t_flag 	<= !nvdla_core_rstn ? 0 : FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_t_flag ? 1 : | _021__T & ( | _021__X0 );
  always @( posedge nvdla_core_clk )
      FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_r_flag 	<= !nvdla_core_rstn ? 0 : FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_r_flag ? 1 : FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_t_flag ? 0 : ( | FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4 <= 23'b00000000000000000000000;
    else
      FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4 <= _020_;
  logic [22:0] _020__X0 ;
  logic [22:0] _020__R0 ;
  logic [22:0] _020__C0 ;
  assign _020__X0 = { 23{ FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_S != _020__S }} ;
  assign _020__R0 = 0 ;
  assign _020__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_T 		<= !nvdla_core_rstn ? 0 : ( _020__T & _020__X0 );
  always @( posedge nvdla_core_clk )
      FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_t_flag 	<= !nvdla_core_rstn ? 0 : FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_t_flag ? 1 : | _020__T & ( | _020__X0 );
  always @( posedge nvdla_core_clk )
      FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_r_flag 	<= !nvdla_core_rstn ? 0 : FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_r_flag ? 1 : FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_t_flag ? 0 : ( | FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4 <= 8'b00000000;
    else
      FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4 <= _022_;
  logic [7:0] _022__X0 ;
  logic [7:0] _022__R0 ;
  logic [7:0] _022__C0 ;
  assign _022__X0 = { 8{ FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_S != _022__S }} ;
  assign _022__R0 = 0 ;
  assign _022__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_T 		<= !nvdla_core_rstn ? 0 : ( _022__T & _022__X0 );
  always @( posedge nvdla_core_clk )
      FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_t_flag 	<= !nvdla_core_rstn ? 0 : FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_t_flag ? 1 : | _022__T & ( | _022__X0 );
  always @( posedge nvdla_core_clk )
      FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_r_flag 	<= !nvdla_core_rstn ? 0 : FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_r_flag ? 1 : FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_t_flag ? 0 : ( | FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpNormalize_8U_49U_if_or_itm_2 <= 1'b0;
    else
      FpNormalize_8U_49U_if_or_itm_2 <= _018_;
  logic [0:0] _018__X0 ;
  logic [0:0] _018__R0 ;
  logic [0:0] _018__C0 ;
  assign _018__X0 = { 1{ FpNormalize_8U_49U_if_or_itm_2_S != _018__S }} ;
  assign _018__R0 = 0 ;
  assign _018__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpNormalize_8U_49U_if_or_itm_2_T 		<= !nvdla_core_rstn ? 0 : ( _018__T & _018__X0 );
  always @( posedge nvdla_core_clk )
      FpNormalize_8U_49U_if_or_itm_2_t_flag 	<= !nvdla_core_rstn ? 0 : FpNormalize_8U_49U_if_or_itm_2_t_flag ? 1 : | _018__T & ( | _018__X0 );
  always @( posedge nvdla_core_clk )
      FpNormalize_8U_49U_if_or_itm_2_r_flag 	<= !nvdla_core_rstn ? 0 : FpNormalize_8U_49U_if_or_itm_2_r_flag ? 1 : FpNormalize_8U_49U_if_or_itm_2_t_flag ? 0 : ( | FpNormalize_8U_49U_if_or_itm_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      IsNaN_8U_23U_1_land_lpi_1_dfm_4 <= 1'b0;
    else
      IsNaN_8U_23U_1_land_lpi_1_dfm_4 <= _025_;
  logic [0:0] _025__X0 ;
  logic [0:0] _025__R0 ;
  logic [0:0] _025__C0 ;
  assign _025__X0 = { 1{ IsNaN_8U_23U_1_land_lpi_1_dfm_4_S != _025__S }} ;
  assign _025__R0 = 0 ;
  assign _025__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_1_land_lpi_1_dfm_4_T 		<= !nvdla_core_rstn ? 0 : ( _025__T & _025__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_1_land_lpi_1_dfm_4_t_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_8U_23U_1_land_lpi_1_dfm_4_t_flag ? 1 : | _025__T & ( | _025__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_1_land_lpi_1_dfm_4_r_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_8U_23U_1_land_lpi_1_dfm_4_r_flag ? 1 : IsNaN_8U_23U_1_land_lpi_1_dfm_4_t_flag ? 0 : ( | IsNaN_8U_23U_1_land_lpi_1_dfm_4_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpAdd_8U_23U_qr_lpi_1_dfm_6 <= 8'b00000000;
    else
      FpAdd_8U_23U_qr_lpi_1_dfm_6 <= _017_;
  logic [7:0] _017__X0 ;
  logic [7:0] _017__R0 ;
  logic [7:0] _017__C0 ;
  assign _017__X0 = { 8{ FpAdd_8U_23U_qr_lpi_1_dfm_6_S != _017__S }} ;
  assign _017__R0 = 0 ;
  assign _017__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_qr_lpi_1_dfm_6_T 		<= !nvdla_core_rstn ? 0 : ( _017__T & _017__X0 );
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_qr_lpi_1_dfm_6_t_flag 	<= !nvdla_core_rstn ? 0 : FpAdd_8U_23U_qr_lpi_1_dfm_6_t_flag ? 1 : | _017__T & ( | _017__X0 );
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_qr_lpi_1_dfm_6_r_flag 	<= !nvdla_core_rstn ? 0 : FpAdd_8U_23U_qr_lpi_1_dfm_6_r_flag ? 1 : FpAdd_8U_23U_qr_lpi_1_dfm_6_t_flag ? 0 : ( | FpAdd_8U_23U_qr_lpi_1_dfm_6_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2 <= 50'b00000000000000000000000000000000000000000000000000;
    else
      FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2 <= _008_;
  logic [49:0] _008__X0 ;
  logic [49:0] _008__R0 ;
  logic [49:0] _008__C0 ;
  assign _008__X0 = { 50{ FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_S != _008__S }} ;
  assign _008__R0 = 0 ;
  assign _008__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_T 		<= !nvdla_core_rstn ? 0 : ( _008__T & _008__X0 );
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_t_flag 	<= !nvdla_core_rstn ? 0 : FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_t_flag ? 1 : | _008__T & ( | _008__X0 );
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_r_flag 	<= !nvdla_core_rstn ? 0 : FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_r_flag ? 1 : FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_t_flag ? 0 : ( | FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      IsNaN_8U_23U_land_lpi_1_dfm_6 <= 1'b0;
    else
      IsNaN_8U_23U_land_lpi_1_dfm_6 <= _028_;
  logic [0:0] _028__X0 ;
  logic [0:0] _028__R0 ;
  logic [0:0] _028__C0 ;
  assign _028__X0 = { 1{ IsNaN_8U_23U_land_lpi_1_dfm_6_S != _028__S }} ;
  assign _028__R0 = 0 ;
  assign _028__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_land_lpi_1_dfm_6_T 		<= !nvdla_core_rstn ? 0 : ( _028__T & _028__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_land_lpi_1_dfm_6_t_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_8U_23U_land_lpi_1_dfm_6_t_flag ? 1 : | _028__T & ( | _028__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_land_lpi_1_dfm_6_r_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_8U_23U_land_lpi_1_dfm_6_r_flag ? 1 : IsNaN_8U_23U_land_lpi_1_dfm_6_t_flag ? 0 : ( | IsNaN_8U_23U_land_lpi_1_dfm_6_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpAdd_8U_23U_mux_13_itm_4 <= 1'b0;
    else
      FpAdd_8U_23U_mux_13_itm_4 <= _013_;
  logic [0:0] _013__X0 ;
  logic [0:0] _013__R0 ;
  logic [0:0] _013__C0 ;
  assign _013__X0 = { 1{ FpAdd_8U_23U_mux_13_itm_4_S != _013__S }} ;
  assign _013__R0 = 0 ;
  assign _013__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_mux_13_itm_4_T 		<= !nvdla_core_rstn ? 0 : ( _013__T & _013__X0 );
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_mux_13_itm_4_t_flag 	<= !nvdla_core_rstn ? 0 : FpAdd_8U_23U_mux_13_itm_4_t_flag ? 1 : | _013__T & ( | _013__X0 );
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_mux_13_itm_4_r_flag 	<= !nvdla_core_rstn ? 0 : FpAdd_8U_23U_mux_13_itm_4_r_flag ? 1 : FpAdd_8U_23U_mux_13_itm_4_t_flag ? 0 : ( | FpAdd_8U_23U_mux_13_itm_4_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      main_stage_v_3 <= 1'b0;
    else
      main_stage_v_3 <= _037_;
  logic [0:0] _037__X0 ;
  logic [0:0] _037__R0 ;
  logic [0:0] _037__C0 ;
  assign _037__X0 = { 1{ main_stage_v_3_S != _037__S }} ;
  assign _037__R0 = 0 ;
  assign _037__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      main_stage_v_3_T 		<= !nvdla_core_rstn ? 0 : ( _037__T & _037__X0 );
  always @( posedge nvdla_core_clk )
      main_stage_v_3_t_flag 	<= !nvdla_core_rstn ? 0 : main_stage_v_3_t_flag ? 1 : | _037__T & ( | _037__X0 );
  always @( posedge nvdla_core_clk )
      main_stage_v_3_r_flag 	<= !nvdla_core_rstn ? 0 : main_stage_v_3_r_flag ? 1 : main_stage_v_3_t_flag ? 0 : ( | main_stage_v_3_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      IsNaN_8U_23U_1_land_lpi_1_dfm_3 <= 1'b0;
    else
      IsNaN_8U_23U_1_land_lpi_1_dfm_3 <= _024_;
  logic [0:0] _024__X0 ;
  logic [0:0] _024__R0 ;
  logic [0:0] _024__C0 ;
  assign _024__X0 = { 1{ IsNaN_8U_23U_1_land_lpi_1_dfm_3_S != _024__S }} ;
  assign _024__R0 = 0 ;
  assign _024__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_1_land_lpi_1_dfm_3_T 		<= !nvdla_core_rstn ? 0 : ( _024__T & _024__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_1_land_lpi_1_dfm_3_t_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_8U_23U_1_land_lpi_1_dfm_3_t_flag ? 1 : | _024__T & ( | _024__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_1_land_lpi_1_dfm_3_r_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_8U_23U_1_land_lpi_1_dfm_3_r_flag ? 1 : IsNaN_8U_23U_1_land_lpi_1_dfm_3_t_flag ? 0 : ( | IsNaN_8U_23U_1_land_lpi_1_dfm_3_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5 <= 1'b0;
    else
      FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5 <= _010_;
  logic [0:0] _010__X0 ;
  logic [0:0] _010__R0 ;
  logic [0:0] _010__C0 ;
  assign _010__X0 = { 1{ FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_S != _010__S }} ;
  assign _010__R0 = 0 ;
  assign _010__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_T 		<= !nvdla_core_rstn ? 0 : ( _010__T & _010__X0 );
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_t_flag 	<= !nvdla_core_rstn ? 0 : FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_t_flag ? 1 : | _010__T & ( | _010__X0 );
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_r_flag 	<= !nvdla_core_rstn ? 0 : FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_r_flag ? 1 : FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_t_flag ? 0 : ( | FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpAdd_8U_23U_qr_lpi_1_dfm_5 <= 8'b00000000;
    else
      FpAdd_8U_23U_qr_lpi_1_dfm_5 <= _016_;
  logic [7:0] _016__X0 ;
  logic [7:0] _016__R0 ;
  logic [7:0] _016__C0 ;
  assign _016__X0 = { 8{ FpAdd_8U_23U_qr_lpi_1_dfm_5_S != _016__S }} ;
  assign _016__R0 = 0 ;
  assign _016__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_qr_lpi_1_dfm_5_T 		<= !nvdla_core_rstn ? 0 : ( _016__T & _016__X0 );
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_qr_lpi_1_dfm_5_t_flag 	<= !nvdla_core_rstn ? 0 : FpAdd_8U_23U_qr_lpi_1_dfm_5_t_flag ? 1 : | _016__T & ( | _016__X0 );
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_qr_lpi_1_dfm_5_r_flag 	<= !nvdla_core_rstn ? 0 : FpAdd_8U_23U_qr_lpi_1_dfm_5_r_flag ? 1 : FpAdd_8U_23U_qr_lpi_1_dfm_5_t_flag ? 0 : ( | FpAdd_8U_23U_qr_lpi_1_dfm_5_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpAdd_8U_23U_a_int_mant_p1_sva_2 <= 49'b0000000000000000000000000000000000000000000000000;
    else
      FpAdd_8U_23U_a_int_mant_p1_sva_2 <= _005_;
  logic [48:0] _005__X0 ;
  logic [48:0] _005__R0 ;
  logic [48:0] _005__C0 ;
  assign _005__X0 = { 49{ FpAdd_8U_23U_a_int_mant_p1_sva_2_S != _005__S }} ;
  assign _005__R0 = 0 ;
  assign _005__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_a_int_mant_p1_sva_2_T 		<= !nvdla_core_rstn ? 0 : ( _005__T & _005__X0 );
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_a_int_mant_p1_sva_2_t_flag 	<= !nvdla_core_rstn ? 0 : FpAdd_8U_23U_a_int_mant_p1_sva_2_t_flag ? 1 : | _005__T & ( | _005__X0 );
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_a_int_mant_p1_sva_2_r_flag 	<= !nvdla_core_rstn ? 0 : FpAdd_8U_23U_a_int_mant_p1_sva_2_r_flag ? 1 : FpAdd_8U_23U_a_int_mant_p1_sva_2_t_flag ? 0 : ( | FpAdd_8U_23U_a_int_mant_p1_sva_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpAdd_8U_23U_b_int_mant_p1_sva_2 <= 49'b0000000000000000000000000000000000000000000000000;
    else
      FpAdd_8U_23U_b_int_mant_p1_sva_2 <= _007_;
  logic [48:0] _007__X0 ;
  logic [48:0] _007__R0 ;
  logic [48:0] _007__C0 ;
  assign _007__X0 = { 49{ FpAdd_8U_23U_b_int_mant_p1_sva_2_S != _007__S }} ;
  assign _007__R0 = 0 ;
  assign _007__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_b_int_mant_p1_sva_2_T 		<= !nvdla_core_rstn ? 0 : ( _007__T & _007__X0 );
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_b_int_mant_p1_sva_2_t_flag 	<= !nvdla_core_rstn ? 0 : FpAdd_8U_23U_b_int_mant_p1_sva_2_t_flag ? 1 : | _007__T & ( | _007__X0 );
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_b_int_mant_p1_sva_2_r_flag 	<= !nvdla_core_rstn ? 0 : FpAdd_8U_23U_b_int_mant_p1_sva_2_r_flag ? 1 : FpAdd_8U_23U_b_int_mant_p1_sva_2_t_flag ? 0 : ( | FpAdd_8U_23U_b_int_mant_p1_sva_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      IsNaN_8U_23U_land_lpi_1_dfm_5 <= 1'b0;
    else
      IsNaN_8U_23U_land_lpi_1_dfm_5 <= _027_;
  logic [0:0] _027__X0 ;
  logic [0:0] _027__R0 ;
  logic [0:0] _027__C0 ;
  assign _027__X0 = { 1{ IsNaN_8U_23U_land_lpi_1_dfm_5_S != _027__S }} ;
  assign _027__R0 = 0 ;
  assign _027__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_land_lpi_1_dfm_5_T 		<= !nvdla_core_rstn ? 0 : ( _027__T & _027__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_land_lpi_1_dfm_5_t_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_8U_23U_land_lpi_1_dfm_5_t_flag ? 1 : | _027__T & ( | _027__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_land_lpi_1_dfm_5_r_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_8U_23U_land_lpi_1_dfm_5_r_flag ? 1 : IsNaN_8U_23U_land_lpi_1_dfm_5_t_flag ? 0 : ( | IsNaN_8U_23U_land_lpi_1_dfm_5_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse <= 1'b0;
    else
      reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse <= _038_;
  logic [0:0] _038__X0 ;
  logic [0:0] _038__R0 ;
  logic [0:0] _038__C0 ;
  assign _038__X0 = { 1{ reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_S != _038__S }} ;
  assign _038__R0 = 0 ;
  assign _038__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_T 		<= !nvdla_core_rstn ? 0 : ( _038__T & _038__X0 );
  always @( posedge nvdla_core_clk )
      reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_t_flag 	<= !nvdla_core_rstn ? 0 : reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_t_flag ? 1 : | _038__T & ( | _038__X0 );
  always @( posedge nvdla_core_clk )
      reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_r_flag 	<= !nvdla_core_rstn ? 0 : reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_r_flag ? 1 : reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_t_flag ? 0 : ( | reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      main_stage_v_2 <= 1'b0;
    else
      main_stage_v_2 <= _036_;
  logic [0:0] _036__X0 ;
  logic [0:0] _036__R0 ;
  logic [0:0] _036__C0 ;
  assign _036__X0 = { 1{ main_stage_v_2_S != _036__S }} ;
  assign _036__R0 = 0 ;
  assign _036__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      main_stage_v_2_T 		<= !nvdla_core_rstn ? 0 : ( _036__T & _036__X0 );
  always @( posedge nvdla_core_clk )
      main_stage_v_2_t_flag 	<= !nvdla_core_rstn ? 0 : main_stage_v_2_t_flag ? 1 : | _036__T & ( | _036__X0 );
  always @( posedge nvdla_core_clk )
      main_stage_v_2_r_flag 	<= !nvdla_core_rstn ? 0 : main_stage_v_2_r_flag ? 1 : main_stage_v_2_t_flag ? 0 : ( | main_stage_v_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4 <= 1'b0;
    else
      FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4 <= _009_;
  logic [0:0] _009__X0 ;
  logic [0:0] _009__R0 ;
  logic [0:0] _009__C0 ;
  assign _009__X0 = { 1{ FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_S != _009__S }} ;
  assign _009__R0 = 0 ;
  assign _009__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_T 		<= !nvdla_core_rstn ? 0 : ( _009__T & _009__X0 );
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_t_flag 	<= !nvdla_core_rstn ? 0 : FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_t_flag ? 1 : | _009__T & ( | _009__X0 );
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_r_flag 	<= !nvdla_core_rstn ? 0 : FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_r_flag ? 1 : FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_t_flag ? 0 : ( | FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpAdd_8U_23U_IsZero_8U_23U_or_itm_2 <= 1'b0;
    else
      FpAdd_8U_23U_IsZero_8U_23U_or_itm_2 <= _004_;
  logic [0:0] _004__X0 ;
  logic [0:0] _004__R0 ;
  logic [0:0] _004__C0 ;
  assign _004__X0 = { 1{ FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_S != _004__S }} ;
  assign _004__R0 = 0 ;
  assign _004__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_T 		<= !nvdla_core_rstn ? 0 : ( _004__T & _004__X0 );
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_t_flag 	<= !nvdla_core_rstn ? 0 : FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_t_flag ? 1 : | _004__T & ( | _004__X0 );
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_r_flag 	<= !nvdla_core_rstn ? 0 : FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_r_flag ? 1 : FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_t_flag ? 0 : ( | FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2 <= 1'b0;
    else
      FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2 <= _003_;
  logic [0:0] _003__X0 ;
  logic [0:0] _003__R0 ;
  logic [0:0] _003__C0 ;
  assign _003__X0 = { 1{ FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_S != _003__S }} ;
  assign _003__R0 = 0 ;
  assign _003__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_T 		<= !nvdla_core_rstn ? 0 : ( _003__T & _003__X0 );
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_t_flag 	<= !nvdla_core_rstn ? 0 : FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_t_flag ? 1 : | _003__T & ( | _003__X0 );
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_r_flag 	<= !nvdla_core_rstn ? 0 : FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_r_flag ? 1 : FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_t_flag ? 0 : ( | FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      IsNaN_8U_23U_land_lpi_1_dfm_st_4 <= 1'b0;
    else
      IsNaN_8U_23U_land_lpi_1_dfm_st_4 <= _029_;
  logic [0:0] _029__X0 ;
  logic [0:0] _029__R0 ;
  logic [0:0] _029__C0 ;
  assign _029__X0 = { 1{ IsNaN_8U_23U_land_lpi_1_dfm_st_4_S != _029__S }} ;
  assign _029__R0 = 0 ;
  assign _029__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_land_lpi_1_dfm_st_4_T 		<= !nvdla_core_rstn ? 0 : ( _029__T & _029__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_land_lpi_1_dfm_st_4_t_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_8U_23U_land_lpi_1_dfm_st_4_t_flag ? 1 : | _029__T & ( | _029__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_land_lpi_1_dfm_st_4_r_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_8U_23U_land_lpi_1_dfm_st_4_r_flag ? 1 : IsNaN_8U_23U_land_lpi_1_dfm_st_4_t_flag ? 0 : ( | IsNaN_8U_23U_land_lpi_1_dfm_st_4_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      b_sva_36 <= 32'd0;
    else
      b_sva_36 <= _030_;
  logic [31:0] _030__X0 ;
  logic [31:0] _030__R0 ;
  logic [31:0] _030__C0 ;
  assign _030__X0 = { 32{ b_sva_36_S != _030__S }} ;
  assign _030__R0 = 0 ;
  assign _030__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      b_sva_36_T 		<= !nvdla_core_rstn ? 0 : ( _030__T & _030__X0 );
  always @( posedge nvdla_core_clk )
      b_sva_36_t_flag 	<= !nvdla_core_rstn ? 0 : b_sva_36_t_flag ? 1 : | _030__T & ( | _030__X0 );
  always @( posedge nvdla_core_clk )
      b_sva_36_r_flag 	<= !nvdla_core_rstn ? 0 : b_sva_36_r_flag ? 1 : b_sva_36_t_flag ? 0 : ( | b_sva_36_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpAdd_8U_23U_a_sva_36 <= 32'd0;
    else
      FpAdd_8U_23U_a_sva_36 <= _006_;
  logic [31:0] _006__X0 ;
  logic [31:0] _006__R0 ;
  logic [31:0] _006__C0 ;
  assign _006__X0 = { 32{ FpAdd_8U_23U_a_sva_36_S != _006__S }} ;
  assign _006__R0 = 0 ;
  assign _006__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_a_sva_36_T 		<= !nvdla_core_rstn ? 0 : ( _006__T & _006__X0 );
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_a_sva_36_t_flag 	<= !nvdla_core_rstn ? 0 : FpAdd_8U_23U_a_sva_36_t_flag ? 1 : | _006__T & ( | _006__X0 );
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_a_sva_36_r_flag 	<= !nvdla_core_rstn ? 0 : FpAdd_8U_23U_a_sva_36_r_flag ? 1 : FpAdd_8U_23U_a_sva_36_t_flag ? 0 : ( | FpAdd_8U_23U_a_sva_36_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3 <= 1'b0;
    else
      FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3 <= _011_;
  logic [0:0] _011__X0 ;
  logic [0:0] _011__R0 ;
  logic [0:0] _011__C0 ;
  assign _011__X0 = { 1{ FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_S != _011__S }} ;
  assign _011__R0 = 0 ;
  assign _011__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_T 		<= !nvdla_core_rstn ? 0 : ( _011__T & _011__X0 );
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_t_flag 	<= !nvdla_core_rstn ? 0 : FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_t_flag ? 1 : | _011__T & ( | _011__X0 );
  always @( posedge nvdla_core_clk )
      FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_r_flag 	<= !nvdla_core_rstn ? 0 : FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_r_flag ? 1 : FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_t_flag ? 0 : ( | FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      main_stage_v_1 <= 1'b0;
    else
      main_stage_v_1 <= _035_;
  logic [0:0] _035__X0 ;
  logic [0:0] _035__R0 ;
  logic [0:0] _035__C0 ;
  assign _035__X0 = { 1{ main_stage_v_1_S != _035__S }} ;
  assign _035__R0 = 0 ;
  assign _035__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      main_stage_v_1_T 		<= !nvdla_core_rstn ? 0 : ( _035__T & _035__X0 );
  always @( posedge nvdla_core_clk )
      main_stage_v_1_t_flag 	<= !nvdla_core_rstn ? 0 : main_stage_v_1_t_flag ? 1 : | _035__T & ( | _035__X0 );
  always @( posedge nvdla_core_clk )
      main_stage_v_1_r_flag 	<= !nvdla_core_rstn ? 0 : main_stage_v_1_r_flag ? 1 : main_stage_v_1_t_flag ? 0 : ( | main_stage_v_1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      reg_chn_o_rsci_ld_core_psct_cse <= 1'b0;
    else
      reg_chn_o_rsci_ld_core_psct_cse <= _041_;
  logic [0:0] _041__X0 ;
  logic [0:0] _041__R0 ;
  logic [0:0] _041__C0 ;
  assign _041__X0 = { 1{ reg_chn_o_rsci_ld_core_psct_cse_S != _041__S }} ;
  assign _041__R0 = 0 ;
  assign _041__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      reg_chn_o_rsci_ld_core_psct_cse_T 		<= !nvdla_core_rstn ? 0 : ( _041__T & _041__X0 );
  always @( posedge nvdla_core_clk )
      reg_chn_o_rsci_ld_core_psct_cse_t_flag 	<= !nvdla_core_rstn ? 0 : reg_chn_o_rsci_ld_core_psct_cse_t_flag ? 1 : | _041__T & ( | _041__X0 );
  always @( posedge nvdla_core_clk )
      reg_chn_o_rsci_ld_core_psct_cse_r_flag 	<= !nvdla_core_rstn ? 0 : reg_chn_o_rsci_ld_core_psct_cse_r_flag ? 1 : reg_chn_o_rsci_ld_core_psct_cse_t_flag ? 0 : ( | reg_chn_o_rsci_ld_core_psct_cse_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_o_rsci_d_31 <= 1'b0;
    else
      chn_o_rsci_d_31 <= _033_;
  logic [0:0] _033__X0 ;
  logic [0:0] _033__R0 ;
  logic [0:0] _033__C0 ;
  assign _033__X0 = { 1{ chn_o_rsci_d_31_S != _033__S }} ;
  assign _033__R0 = 0 ;
  assign _033__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_31_T 		<= !nvdla_core_rstn ? 0 : ( _033__T & _033__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_31_t_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_31_t_flag ? 1 : | _033__T & ( | _033__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_31_r_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_31_r_flag ? 1 : chn_o_rsci_d_31_t_flag ? 0 : ( | chn_o_rsci_d_31_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_o_rsci_d_30_23 <= 8'b00000000;
    else
      chn_o_rsci_d_30_23 <= _032_;
  logic [7:0] _032__X0 ;
  logic [7:0] _032__R0 ;
  logic [7:0] _032__C0 ;
  assign _032__X0 = { 8{ chn_o_rsci_d_30_23_S != _032__S }} ;
  assign _032__R0 = 0 ;
  assign _032__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_30_23_T 		<= !nvdla_core_rstn ? 0 : ( _032__T & _032__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_30_23_t_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_30_23_t_flag ? 1 : | _032__T & ( | _032__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_30_23_r_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_30_23_r_flag ? 1 : chn_o_rsci_d_30_23_t_flag ? 0 : ( | chn_o_rsci_d_30_23_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_o_rsci_d_22_0 <= 23'b00000000000000000000000;
    else
      chn_o_rsci_d_22_0 <= _031_;
  logic [22:0] _031__X0 ;
  logic [22:0] _031__R0 ;
  logic [22:0] _031__C0 ;
  assign _031__X0 = { 23{ chn_o_rsci_d_22_0_S != _031__S }} ;
  assign _031__R0 = 0 ;
  assign _031__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_22_0_T 		<= !nvdla_core_rstn ? 0 : ( _031__T & _031__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_22_0_t_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_22_0_t_flag ? 1 : | _031__T & ( | _031__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_22_0_r_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_22_0_r_flag ? 1 : chn_o_rsci_d_22_0_t_flag ? 0 : ( | chn_o_rsci_d_22_0_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      reg_chn_a_rsci_ld_core_psct_cse <= 1'b0;
    else
      reg_chn_a_rsci_ld_core_psct_cse <= _040_;
  logic [0:0] _040__X0 ;
  logic [0:0] _040__R0 ;
  logic [0:0] _040__C0 ;
  assign _040__X0 = { 1{ reg_chn_a_rsci_ld_core_psct_cse_S != _040__S }} ;
  assign _040__R0 = 0 ;
  assign _040__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      reg_chn_a_rsci_ld_core_psct_cse_T 		<= !nvdla_core_rstn ? 0 : ( _040__T & _040__X0 );
  always @( posedge nvdla_core_clk )
      reg_chn_a_rsci_ld_core_psct_cse_t_flag 	<= !nvdla_core_rstn ? 0 : reg_chn_a_rsci_ld_core_psct_cse_t_flag ? 1 : | _040__T & ( | _040__X0 );
  always @( posedge nvdla_core_clk )
      reg_chn_a_rsci_ld_core_psct_cse_r_flag 	<= !nvdla_core_rstn ? 0 : reg_chn_a_rsci_ld_core_psct_cse_r_flag ? 1 : reg_chn_a_rsci_ld_core_psct_cse_t_flag ? 0 : ( | reg_chn_a_rsci_ld_core_psct_cse_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_o_rsci_iswt0 <= 1'b0;
    else
      chn_o_rsci_iswt0 <= _034_;
  logic [0:0] _034__X0 ;
  logic [0:0] _034__R0 ;
  logic [0:0] _034__C0 ;
  assign _034__X0 = { 1{ chn_o_rsci_iswt0_S != _034__S }} ;
  assign _034__R0 = 0 ;
  assign _034__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_o_rsci_iswt0_T 		<= !nvdla_core_rstn ? 0 : ( _034__T & _034__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_iswt0_t_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_iswt0_t_flag ? 1 : | _034__T & ( | _034__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_iswt0_r_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_iswt0_r_flag ? 1 : chn_o_rsci_iswt0_t_flag ? 0 : ( | chn_o_rsci_iswt0_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      reg_chn_a_rsci_iswt0_cse <= 1'b0;
    else
      reg_chn_a_rsci_iswt0_cse <= _039_;
  logic [0:0] _039__X0 ;
  logic [0:0] _039__R0 ;
  logic [0:0] _039__C0 ;
  assign _039__X0 = { 1{ reg_chn_a_rsci_iswt0_cse_S != _039__S }} ;
  assign _039__R0 = 0 ;
  assign _039__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      reg_chn_a_rsci_iswt0_cse_T 		<= !nvdla_core_rstn ? 0 : ( _039__T & _039__X0 );
  always @( posedge nvdla_core_clk )
      reg_chn_a_rsci_iswt0_cse_t_flag 	<= !nvdla_core_rstn ? 0 : reg_chn_a_rsci_iswt0_cse_t_flag ? 1 : | _039__T & ( | _039__X0 );
  always @( posedge nvdla_core_clk )
      reg_chn_a_rsci_iswt0_cse_r_flag 	<= !nvdla_core_rstn ? 0 : reg_chn_a_rsci_iswt0_cse_r_flag ? 1 : reg_chn_a_rsci_iswt0_cse_t_flag ? 0 : ( | reg_chn_a_rsci_iswt0_cse_R ) ;
  assign mux_27_nl = or_cse ? nor_29_nl : nor_28_nl;
  logic [0:0] or_cse_C12 ;
  logic [0:0] or_cse_R12 ;
  logic [0:0] or_cse_X12 ;
  assign or_cse_C12 = | mux_27_nl_C ;
  assign or_cse_X12 = | mux_27_nl_X ;
  assign mux_27_nl_T = or_cse ? ( { 1{ or_cse_T  }} | nor_29_nl_T ) : ( { 1{ or_cse_T  }} | nor_28_nl_T );
  assign mux_27_nl_S = or_cse ? nor_29_nl_S : nor_28_nl_S ;
  assign or_cse_R12 = ( | (mux_27_nl_R | ( mux_27_nl_C & ( { 1{ or_cse }} & nor_29_nl_T | { 1{ !or_cse }} & nor_28_nl_T )))) && nor_29_nl != nor_28_nl ;
  logic [0:0] nor_29_nl_C0 ;
  logic [0:0] nor_29_nl_R0 ;
  logic [0:0] nor_29_nl_X0 ;
  assign nor_29_nl_C0 = { 1{ or_cse }} ;
  assign nor_29_nl_R0 = { 1{ or_cse }} & ( mux_27_nl_R | ( { 1{ or_cse_T  }} & mux_27_nl_C ));
  assign nor_29_nl_X0 = { 1{ or_cse }} & mux_27_nl_X ;
  logic [0:0] nor_28_nl_C0 ;
  logic [0:0] nor_28_nl_R0 ;
  logic [0:0] nor_28_nl_X0 ;
  assign nor_28_nl_C0 = { 1{ !or_cse }} ;
  assign nor_28_nl_R0 = { 1{ !or_cse }} & ( mux_27_nl_R | ( { 1{ or_cse_T  }} & mux_27_nl_C ));
  assign nor_28_nl_X0 = { 1{ !or_cse }} & mux_27_nl_X ;
  assign mux_23_nl = or_cse ? mux_24_nl : nor_tmp_11;
  logic [0:0] or_cse_C13 ;
  logic [0:0] or_cse_R13 ;
  logic [0:0] or_cse_X13 ;
  assign or_cse_C13 = | mux_23_nl_C ;
  assign or_cse_X13 = | mux_23_nl_X ;
  assign mux_23_nl_T = or_cse ? ( { 1{ or_cse_T  }} | mux_24_nl_T ) : ( { 1{ or_cse_T  }} | nor_tmp_11_T );
  assign mux_23_nl_S = or_cse ? mux_24_nl_S : nor_tmp_11_S ;
  assign or_cse_R13 = ( | (mux_23_nl_R | ( mux_23_nl_C & ( { 1{ or_cse }} & mux_24_nl_T | { 1{ !or_cse }} & nor_tmp_11_T )))) && mux_24_nl != nor_tmp_11 ;
  logic [0:0] mux_24_nl_C0 ;
  logic [0:0] mux_24_nl_R0 ;
  logic [0:0] mux_24_nl_X0 ;
  assign mux_24_nl_C0 = { 1{ or_cse }} ;
  assign mux_24_nl_R0 = { 1{ or_cse }} & ( mux_23_nl_R | ( { 1{ or_cse_T  }} & mux_23_nl_C ));
  assign mux_24_nl_X0 = { 1{ or_cse }} & mux_23_nl_X ;
  logic [0:0] nor_tmp_11_C2 ;
  logic [0:0] nor_tmp_11_R2 ;
  logic [0:0] nor_tmp_11_X2 ;
  assign nor_tmp_11_C2 = { 1{ !or_cse }} ;
  assign nor_tmp_11_R2 = { 1{ !or_cse }} & ( mux_23_nl_R | ( { 1{ or_cse_T  }} & mux_23_nl_C ));
  assign nor_tmp_11_X2 = { 1{ !or_cse }} & mux_23_nl_X ;
  assign mux_24_nl = IsNaN_8U_23U_land_lpi_1_dfm_st_4 ? main_stage_v_1 : nor_31_nl;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_4_C4 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_4_R4 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_4_X4 ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_4_C4 = | mux_24_nl_C ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_4_X4 = | mux_24_nl_X ;
  assign mux_24_nl_T = IsNaN_8U_23U_land_lpi_1_dfm_st_4 ? ( { 1{ IsNaN_8U_23U_land_lpi_1_dfm_st_4_T  }} | main_stage_v_1_T ) : ( { 1{ IsNaN_8U_23U_land_lpi_1_dfm_st_4_T  }} | nor_31_nl_T );
  assign mux_24_nl_S = IsNaN_8U_23U_land_lpi_1_dfm_st_4 ? main_stage_v_1_S : nor_31_nl_S ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_4_R4 = ( | (mux_24_nl_R | ( mux_24_nl_C & ( { 1{ IsNaN_8U_23U_land_lpi_1_dfm_st_4 }} & main_stage_v_1_T | { 1{ !IsNaN_8U_23U_land_lpi_1_dfm_st_4 }} & nor_31_nl_T )))) && main_stage_v_1 != nor_31_nl ;
  logic [0:0] main_stage_v_1_C4 ;
  logic [0:0] main_stage_v_1_R4 ;
  logic [0:0] main_stage_v_1_X4 ;
  assign main_stage_v_1_C4 = { 1{ IsNaN_8U_23U_land_lpi_1_dfm_st_4 }} ;
  assign main_stage_v_1_R4 = { 1{ IsNaN_8U_23U_land_lpi_1_dfm_st_4 }} & ( mux_24_nl_R | ( { 1{ IsNaN_8U_23U_land_lpi_1_dfm_st_4_T  }} & mux_24_nl_C ));
  assign main_stage_v_1_X4 = { 1{ IsNaN_8U_23U_land_lpi_1_dfm_st_4 }} & mux_24_nl_X ;
  logic [0:0] nor_31_nl_C0 ;
  logic [0:0] nor_31_nl_R0 ;
  logic [0:0] nor_31_nl_X0 ;
  assign nor_31_nl_C0 = { 1{ !IsNaN_8U_23U_land_lpi_1_dfm_st_4 }} ;
  assign nor_31_nl_R0 = { 1{ !IsNaN_8U_23U_land_lpi_1_dfm_st_4 }} & ( mux_24_nl_R | ( { 1{ IsNaN_8U_23U_land_lpi_1_dfm_st_4_T  }} & mux_24_nl_C ));
  assign nor_31_nl_X0 = { 1{ !IsNaN_8U_23U_land_lpi_1_dfm_st_4 }} & mux_24_nl_X ;
  assign mux_8_nl = _175_ ? nor_37_nl : mux_7_nl;
  logic [0:0] _175__C0 ;
  logic [0:0] _175__R0 ;
  logic [0:0] _175__X0 ;
  assign _175__C0 = | mux_8_nl_C ;
  assign _175__X0 = | mux_8_nl_X ;
  assign mux_8_nl_T = _175_ ? ( { 1{ _175__T  }} | nor_37_nl_T ) : ( { 1{ _175__T  }} | mux_7_nl_T );
  assign mux_8_nl_S = _175_ ? nor_37_nl_S : mux_7_nl_S ;
  assign _175__R0 = ( | (mux_8_nl_R | ( mux_8_nl_C & ( { 1{ _175_ }} & nor_37_nl_T | { 1{ !_175_ }} & mux_7_nl_T )))) && nor_37_nl != mux_7_nl ;
  logic [0:0] nor_37_nl_C0 ;
  logic [0:0] nor_37_nl_R0 ;
  logic [0:0] nor_37_nl_X0 ;
  assign nor_37_nl_C0 = { 1{ _175_ }} ;
  assign nor_37_nl_R0 = { 1{ _175_ }} & ( mux_8_nl_R | ( { 1{ _175__T  }} & mux_8_nl_C ));
  assign nor_37_nl_X0 = { 1{ _175_ }} & mux_8_nl_X ;
  logic [0:0] mux_7_nl_C0 ;
  logic [0:0] mux_7_nl_R0 ;
  logic [0:0] mux_7_nl_X0 ;
  assign mux_7_nl_C0 = { 1{ !_175_ }} ;
  assign mux_7_nl_R0 = { 1{ !_175_ }} & ( mux_8_nl_R | ( { 1{ _175__T  }} & mux_8_nl_C ));
  assign mux_7_nl_X0 = { 1{ !_175_ }} & mux_8_nl_X ;
  assign mux_7_nl = FpAdd_8U_23U_mux_2_tmp_49 ? nor_36_cse : or_tmp_3;
  logic [0:0] FpAdd_8U_23U_mux_2_tmp_49_C1 ;
  logic [0:0] FpAdd_8U_23U_mux_2_tmp_49_R1 ;
  logic [0:0] FpAdd_8U_23U_mux_2_tmp_49_X1 ;
  assign FpAdd_8U_23U_mux_2_tmp_49_C1 = | mux_7_nl_C ;
  assign FpAdd_8U_23U_mux_2_tmp_49_X1 = | mux_7_nl_X ;
  assign mux_7_nl_T = FpAdd_8U_23U_mux_2_tmp_49 ? ( { 1{ FpAdd_8U_23U_mux_2_tmp_49_T  }} | nor_36_cse_T ) : ( { 1{ FpAdd_8U_23U_mux_2_tmp_49_T  }} | or_tmp_3_T );
  assign mux_7_nl_S = FpAdd_8U_23U_mux_2_tmp_49 ? nor_36_cse_S : or_tmp_3_S ;
  assign FpAdd_8U_23U_mux_2_tmp_49_R1 = ( | (mux_7_nl_R | ( mux_7_nl_C & ( { 1{ FpAdd_8U_23U_mux_2_tmp_49 }} & nor_36_cse_T | { 1{ !FpAdd_8U_23U_mux_2_tmp_49 }} & or_tmp_3_T )))) && nor_36_cse != or_tmp_3 ;
  logic [0:0] nor_36_cse_C2 ;
  logic [0:0] nor_36_cse_R2 ;
  logic [0:0] nor_36_cse_X2 ;
  assign nor_36_cse_C2 = { 1{ FpAdd_8U_23U_mux_2_tmp_49 }} ;
  assign nor_36_cse_R2 = { 1{ FpAdd_8U_23U_mux_2_tmp_49 }} & ( mux_7_nl_R | ( { 1{ FpAdd_8U_23U_mux_2_tmp_49_T  }} & mux_7_nl_C ));
  assign nor_36_cse_X2 = { 1{ FpAdd_8U_23U_mux_2_tmp_49 }} & mux_7_nl_X ;
  logic [0:0] or_tmp_3_C0 ;
  logic [0:0] or_tmp_3_R0 ;
  logic [0:0] or_tmp_3_X0 ;
  assign or_tmp_3_C0 = { 1{ !FpAdd_8U_23U_mux_2_tmp_49 }} ;
  assign or_tmp_3_R0 = { 1{ !FpAdd_8U_23U_mux_2_tmp_49 }} & ( mux_7_nl_R | ( { 1{ FpAdd_8U_23U_mux_2_tmp_49_T  }} & mux_7_nl_C ));
  assign or_tmp_3_X0 = { 1{ !FpAdd_8U_23U_mux_2_tmp_49 }} & mux_7_nl_X ;
  assign FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl = FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0 ? 23'b11111111111111111111111 : FpMantRNE_49U_24U_else_acc_nl;
  logic [0:0] FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_C3 ;
  logic [0:0] FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_R3 ;
  logic [0:0] FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_X3 ;
  assign FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_C3 = | FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl_C ;
  assign FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_X3 = | FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl_X ;
  logic [22:0] FpMantRNE_49U_24U_else_acc_nl_C0 ;
  logic [22:0] FpMantRNE_49U_24U_else_acc_nl_R0 ;
  logic [22:0] FpMantRNE_49U_24U_else_acc_nl_X0 ;
  assign FpMantRNE_49U_24U_else_acc_nl_C0 = { 23{ !FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0 }};
  assign FpMantRNE_49U_24U_else_acc_nl_R0 = { 23{ !FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0 }} & ( FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl_R | ( { 23{ FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_T  }} & FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl_C ));
  assign FpMantRNE_49U_24U_else_acc_nl_X0 = { 23{ !FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0 }} & FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl_X ;
  assign FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl_T = FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0 ? { 23{ | FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_T  }} : ( { 23{ | FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_T  }} | FpMantRNE_49U_24U_else_acc_nl_T );
  assign FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl_S = FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0 ? FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_S : FpMantRNE_49U_24U_else_acc_nl_S ;
  assign FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_R3 = ( | (FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl_R | ( { 23{ !FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0 }} & FpMantRNE_49U_24U_else_acc_nl_T & FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl_C ))) && 23'b11111111111111111111111 != FpMantRNE_49U_24U_else_acc_nl ;
  assign mux_tmp_5 = chn_o_rsci_bawt ? main_stage_v_2 : nor_38_nl;
  logic [0:0] chn_o_rsci_bawt_C3 ;
  logic [0:0] chn_o_rsci_bawt_R3 ;
  logic [0:0] chn_o_rsci_bawt_X3 ;
  assign chn_o_rsci_bawt_C3 = | mux_tmp_5_C ;
  assign chn_o_rsci_bawt_X3 = | mux_tmp_5_X ;
  assign mux_tmp_5_T = chn_o_rsci_bawt ? ( { 1{ chn_o_rsci_bawt_T  }} | main_stage_v_2_T ) : ( { 1{ chn_o_rsci_bawt_T  }} | nor_38_nl_T );
  assign mux_tmp_5_S = chn_o_rsci_bawt ? main_stage_v_2_S : nor_38_nl_S ;
  assign chn_o_rsci_bawt_R3 = ( | (mux_tmp_5_R | ( mux_tmp_5_C & ( { 1{ chn_o_rsci_bawt }} & main_stage_v_2_T | { 1{ !chn_o_rsci_bawt }} & nor_38_nl_T )))) && main_stage_v_2 != nor_38_nl ;
  logic [0:0] main_stage_v_2_C5 ;
  logic [0:0] main_stage_v_2_R5 ;
  logic [0:0] main_stage_v_2_X5 ;
  assign main_stage_v_2_C5 = { 1{ chn_o_rsci_bawt }} ;
  assign main_stage_v_2_R5 = { 1{ chn_o_rsci_bawt }} & ( mux_tmp_5_R | ( { 1{ chn_o_rsci_bawt_T  }} & mux_tmp_5_C ));
  assign main_stage_v_2_X5 = { 1{ chn_o_rsci_bawt }} & mux_tmp_5_X ;
  logic [0:0] nor_38_nl_C0 ;
  logic [0:0] nor_38_nl_R0 ;
  logic [0:0] nor_38_nl_X0 ;
  assign nor_38_nl_C0 = { 1{ !chn_o_rsci_bawt }} ;
  assign nor_38_nl_R0 = { 1{ !chn_o_rsci_bawt }} & ( mux_tmp_5_R | ( { 1{ chn_o_rsci_bawt_T  }} & mux_tmp_5_C ));
  assign nor_38_nl_X0 = { 1{ !chn_o_rsci_bawt }} & mux_tmp_5_X ;
  assign FpAdd_8U_23U_mux_2_tmp_49 = reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse ? FpAdd_8U_23U_asn_5_mx0w0[49] : FpAdd_8U_23U_asn_4_mx0w1[49];
  logic [0:0] reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_C0 ;
  logic [0:0] reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_R0 ;
  logic [0:0] reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_X0 ;
  assign reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_C0 = | FpAdd_8U_23U_mux_2_tmp_49_C ;
  assign reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_X0 = | FpAdd_8U_23U_mux_2_tmp_49_X ;
  assign FpAdd_8U_23U_mux_2_tmp_49_T = reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse ? ( { 1{ reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_T  }} | FpAdd_8U_23U_asn_5_mx0w0_T [49] ) : ( { 1{ reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_T  }} | FpAdd_8U_23U_asn_4_mx0w1_T [49] );
  assign FpAdd_8U_23U_mux_2_tmp_49_S = reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse ? FpAdd_8U_23U_asn_5_mx0w0_S : FpAdd_8U_23U_asn_4_mx0w1_S ;
  assign reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_R0 = ( | (FpAdd_8U_23U_mux_2_tmp_49_R | ( FpAdd_8U_23U_mux_2_tmp_49_C & ( { 1{ reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse }} & FpAdd_8U_23U_asn_5_mx0w0_T [49] | { 1{ !reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse }} & FpAdd_8U_23U_asn_4_mx0w1_T [49] )))) && FpAdd_8U_23U_asn_5_mx0w0[49] != FpAdd_8U_23U_asn_4_mx0w1[49] ;
  logic [49:0] FpAdd_8U_23U_asn_5_mx0w0_C0 ;
  logic [49:0] FpAdd_8U_23U_asn_5_mx0w0_R0 ;
  logic [49:0] FpAdd_8U_23U_asn_5_mx0w0_X0 ;
  assign FpAdd_8U_23U_asn_5_mx0w0_C0 [49] = { 1{ reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse }} ;
  assign FpAdd_8U_23U_asn_5_mx0w0_R0 [49] = { 1{ reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse }} & ( FpAdd_8U_23U_mux_2_tmp_49_R | ( { 1{ reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_T  }} & FpAdd_8U_23U_mux_2_tmp_49_C ));
  assign FpAdd_8U_23U_asn_5_mx0w0_X0 [49] = { 1{ reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse }} & FpAdd_8U_23U_mux_2_tmp_49_X ;
  logic [49:0] FpAdd_8U_23U_asn_4_mx0w1_C0 ;
  logic [49:0] FpAdd_8U_23U_asn_4_mx0w1_R0 ;
  logic [49:0] FpAdd_8U_23U_asn_4_mx0w1_X0 ;
  assign FpAdd_8U_23U_asn_4_mx0w1_C0 [49] = { 1{ !reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse }} ;
  assign FpAdd_8U_23U_asn_4_mx0w1_R0 [49] = { 1{ !reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse }} & ( FpAdd_8U_23U_mux_2_tmp_49_R | ( { 1{ reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_T  }} & FpAdd_8U_23U_mux_2_tmp_49_C ));
  assign FpAdd_8U_23U_asn_4_mx0w1_X0 [49] = { 1{ !reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse }} & FpAdd_8U_23U_mux_2_tmp_49_X ;
  assign FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm = FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4 ? 8'b00000000 : FpAdd_8U_23U_a_right_shift_qelse_acc_nl;
  logic [0:0] FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_C0 ;
  logic [0:0] FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_R0 ;
  logic [0:0] FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_X0 ;
  assign FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_C0 = | FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm_C ;
  assign FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_X0 = | FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm_X ;
  logic [7:0] FpAdd_8U_23U_a_right_shift_qelse_acc_nl_C0 ;
  logic [7:0] FpAdd_8U_23U_a_right_shift_qelse_acc_nl_R0 ;
  logic [7:0] FpAdd_8U_23U_a_right_shift_qelse_acc_nl_X0 ;
  assign FpAdd_8U_23U_a_right_shift_qelse_acc_nl_C0 = { 8{ !FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4 }};
  assign FpAdd_8U_23U_a_right_shift_qelse_acc_nl_R0 = { 8{ !FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4 }} & ( FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm_R | ( { 8{ FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_T  }} & FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm_C ));
  assign FpAdd_8U_23U_a_right_shift_qelse_acc_nl_X0 = { 8{ !FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4 }} & FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm_X ;
  assign FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm_T = FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4 ? { 8{ | FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_T  }} : ( { 8{ | FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_T  }} | FpAdd_8U_23U_a_right_shift_qelse_acc_nl_T );
  assign FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm_S = FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4 ? FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_S : FpAdd_8U_23U_a_right_shift_qelse_acc_nl_S ;
  assign FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_R0 = ( | (FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm_R | ( { 8{ !FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4 }} & FpAdd_8U_23U_a_right_shift_qelse_acc_nl_T & FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm_C ))) && 8'b00000000 != FpAdd_8U_23U_a_right_shift_qelse_acc_nl ;
  assign FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm = FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4 ? FpAdd_8U_23U_b_right_shift_qif_acc_nl : 8'b00000000;
  logic [0:0] FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_C1 ;
  logic [0:0] FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_R1 ;
  logic [0:0] FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_X1 ;
  assign FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_C1 = | FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm_C ;
  assign FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_X1 = | FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm_X ;
  logic [7:0] FpAdd_8U_23U_b_right_shift_qif_acc_nl_C0 ;
  logic [7:0] FpAdd_8U_23U_b_right_shift_qif_acc_nl_R0 ;
  logic [7:0] FpAdd_8U_23U_b_right_shift_qif_acc_nl_X0 ;
  assign FpAdd_8U_23U_b_right_shift_qif_acc_nl_C0 = { 8{ FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4 }} ;
  assign FpAdd_8U_23U_b_right_shift_qif_acc_nl_R0 = { 8{ FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4 }} & ( FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm_R | ( { 8{ FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_T  }} & FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm_C ));
  assign FpAdd_8U_23U_b_right_shift_qif_acc_nl_X0 = { 8{ FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4 }} & FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm_X ;
  assign FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm_T = FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4 ? ( { 8{ | FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_T  }} | FpAdd_8U_23U_b_right_shift_qif_acc_nl_T ) : { 8{ | FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_T  }};
  assign FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm_S = FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4 ? FpAdd_8U_23U_b_right_shift_qif_acc_nl_S : FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_S ;
  assign FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_R1 = ( | (FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm_R | ( { 8{ FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4 }} & FpAdd_8U_23U_b_right_shift_qif_acc_nl_T & FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm_C ))) && FpAdd_8U_23U_b_right_shift_qif_acc_nl != 8'b00000000 ;
  assign FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0 = FpMantRNE_49U_24U_else_and_tmp ? FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl : FpAdd_8U_23U_is_inf_lpi_1_dfm;
  logic [0:0] FpMantRNE_49U_24U_else_and_tmp_C1 ;
  logic [0:0] FpMantRNE_49U_24U_else_and_tmp_R1 ;
  logic [0:0] FpMantRNE_49U_24U_else_and_tmp_X1 ;
  assign FpMantRNE_49U_24U_else_and_tmp_C1 = | FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_C ;
  assign FpMantRNE_49U_24U_else_and_tmp_X1 = | FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_X ;
  assign FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_T = FpMantRNE_49U_24U_else_and_tmp ? ( { 1{ FpMantRNE_49U_24U_else_and_tmp_T  }} | FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl_T ) : ( { 1{ FpMantRNE_49U_24U_else_and_tmp_T  }} | FpAdd_8U_23U_is_inf_lpi_1_dfm_T );
  assign FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_S = FpMantRNE_49U_24U_else_and_tmp ? FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl_S : FpAdd_8U_23U_is_inf_lpi_1_dfm_S ;
  assign FpMantRNE_49U_24U_else_and_tmp_R1 = ( | (FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_R | ( FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_C & ( { 1{ FpMantRNE_49U_24U_else_and_tmp }} & FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl_T | { 1{ !FpMantRNE_49U_24U_else_and_tmp }} & FpAdd_8U_23U_is_inf_lpi_1_dfm_T )))) && FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl != FpAdd_8U_23U_is_inf_lpi_1_dfm ;
  logic [0:0] FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl_C0 ;
  logic [0:0] FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl_R0 ;
  logic [0:0] FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl_X0 ;
  assign FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl_C0 = { 1{ FpMantRNE_49U_24U_else_and_tmp }} ;
  assign FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl_R0 = { 1{ FpMantRNE_49U_24U_else_and_tmp }} & ( FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_R | ( { 1{ FpMantRNE_49U_24U_else_and_tmp_T  }} & FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_C ));
  assign FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl_X0 = { 1{ FpMantRNE_49U_24U_else_and_tmp }} & FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_X ;
  logic [0:0] FpAdd_8U_23U_is_inf_lpi_1_dfm_C1 ;
  logic [0:0] FpAdd_8U_23U_is_inf_lpi_1_dfm_R1 ;
  logic [0:0] FpAdd_8U_23U_is_inf_lpi_1_dfm_X1 ;
  assign FpAdd_8U_23U_is_inf_lpi_1_dfm_C1 = { 1{ !FpMantRNE_49U_24U_else_and_tmp }} ;
  assign FpAdd_8U_23U_is_inf_lpi_1_dfm_R1 = { 1{ !FpMantRNE_49U_24U_else_and_tmp }} & ( FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_R | ( { 1{ FpMantRNE_49U_24U_else_and_tmp_T  }} & FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_C ));
  assign FpAdd_8U_23U_is_inf_lpi_1_dfm_X1 = { 1{ !FpMantRNE_49U_24U_else_and_tmp }} & FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_X ;
  logic [48:0] fangyuan16;
  logic [48:0] fangyuan16_T ;
  logic [48:0] fangyuan16_R ;
  logic [48:0] fangyuan16_C ;
  logic [48:0] fangyuan16_X ;
  assign fangyuan16 = { 1'b1, FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2[48:1] };
  assign fangyuan16_T = {  1'h0 , FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_T [48:1]  };
  logic [13:0] fangyuan16_S ;
  assign fangyuan16_S = 0 ;
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R3 [48:1] = fangyuan16_R [47:0] ;
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X3 [48:1] = fangyuan16_X [47:0] ;
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C3 [48:1] = fangyuan16_C [47:0] ;

  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0 = FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2[49] ? fangyuan16 : FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl;
  assign { FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R3 [0] } = 0;
  assign { FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X3 [0] } = 0;
  assign { FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C3 [0] } = 0;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 ;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 ;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 ;
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [49] = | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C ;
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [49] = | FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X ;
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_T = FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2[49] ? ( { 49{ FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_T  [49] }} | fangyuan16_T ) : ( { 49{ FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_T  [49] }} | FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl_T );
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_S = FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2[49] ? fangyuan16_S : FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl_S ;
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [49] = ( | (FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R | ( FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C & ( { 49{ FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2[49] }} & fangyuan16_T | { 49{ !FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2[49] }} & FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl_T )))) && fangyuan16 != FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl ;
  logic [48:0] fangyuan16_C0 ;
  logic [48:0] fangyuan16_R0 ;
  logic [48:0] fangyuan16_X0 ;
  assign fangyuan16_C0 = { 49{ FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2[49] }} ;
  assign fangyuan16_R0 = { 49{ FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2[49] }} & ( FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R | ( { 49{ FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_T  [49] }} & FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C ));
  assign fangyuan16_X0 = { 49{ FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2[49] }} & FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X ;
  logic [48:0] FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl_C0 ;
  logic [48:0] FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl_R0 ;
  logic [48:0] FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl_X0 ;
  assign FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl_C0 = { 49{ !FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2[49] }} ;
  assign FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl_R0 = { 49{ !FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2[49] }} & ( FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R | ( { 49{ FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_T  [49] }} & FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C ));
  assign FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl_X0 = { 49{ !FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2[49] }} & FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X ;
  assign FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl = FpNormalize_8U_49U_oelse_not_3 ? FpNormalize_8U_49U_else_lshift_itm : 49'b0000000000000000000000000000000000000000000000000;
  logic [0:0] FpNormalize_8U_49U_oelse_not_3_C0 ;
  logic [0:0] FpNormalize_8U_49U_oelse_not_3_R0 ;
  logic [0:0] FpNormalize_8U_49U_oelse_not_3_X0 ;
  assign FpNormalize_8U_49U_oelse_not_3_C0 = | FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl_C ;
  assign FpNormalize_8U_49U_oelse_not_3_X0 = | FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl_X ;
  logic [48:0] FpNormalize_8U_49U_else_lshift_itm_C0 ;
  logic [48:0] FpNormalize_8U_49U_else_lshift_itm_R0 ;
  logic [48:0] FpNormalize_8U_49U_else_lshift_itm_X0 ;
  assign FpNormalize_8U_49U_else_lshift_itm_C0 = { 49{ FpNormalize_8U_49U_oelse_not_3 }} ;
  assign FpNormalize_8U_49U_else_lshift_itm_R0 = { 49{ FpNormalize_8U_49U_oelse_not_3 }} & ( FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl_R | ( { 49{ FpNormalize_8U_49U_oelse_not_3_T  }} & FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl_C ));
  assign FpNormalize_8U_49U_else_lshift_itm_X0 = { 49{ FpNormalize_8U_49U_oelse_not_3 }} & FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl_X ;
  assign FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl_T = FpNormalize_8U_49U_oelse_not_3 ? ( { 49{ | FpNormalize_8U_49U_oelse_not_3_T  }} | FpNormalize_8U_49U_else_lshift_itm_T ) : { 49{ | FpNormalize_8U_49U_oelse_not_3_T  }};
  assign FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl_S = FpNormalize_8U_49U_oelse_not_3 ? FpNormalize_8U_49U_else_lshift_itm_S : FpNormalize_8U_49U_oelse_not_3_S ;
  assign FpNormalize_8U_49U_oelse_not_3_R0 = ( | (FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl_R | ( { 49{ FpNormalize_8U_49U_oelse_not_3 }} & FpNormalize_8U_49U_else_lshift_itm_T & FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl_C ))) && FpNormalize_8U_49U_else_lshift_itm != 49'b0000000000000000000000000000000000000000000000000 ;
  assign FpNormalize_8U_49U_FpNormalize_8U_49U_and_nl = FpNormalize_8U_49U_oelse_not_3 ? FpNormalize_8U_49U_else_acc_nl : 8'b00000000;
  logic [0:0] FpNormalize_8U_49U_oelse_not_3_C1 ;
  logic [0:0] FpNormalize_8U_49U_oelse_not_3_R1 ;
  logic [0:0] FpNormalize_8U_49U_oelse_not_3_X1 ;
  assign FpNormalize_8U_49U_oelse_not_3_C1 = | FpNormalize_8U_49U_FpNormalize_8U_49U_and_nl_C ;
  assign FpNormalize_8U_49U_oelse_not_3_X1 = | FpNormalize_8U_49U_FpNormalize_8U_49U_and_nl_X ;
  logic [7:0] FpNormalize_8U_49U_else_acc_nl_C0 ;
  logic [7:0] FpNormalize_8U_49U_else_acc_nl_R0 ;
  logic [7:0] FpNormalize_8U_49U_else_acc_nl_X0 ;
  assign FpNormalize_8U_49U_else_acc_nl_C0 = { 8{ FpNormalize_8U_49U_oelse_not_3 }} ;
  assign FpNormalize_8U_49U_else_acc_nl_R0 = { 8{ FpNormalize_8U_49U_oelse_not_3 }} & ( FpNormalize_8U_49U_FpNormalize_8U_49U_and_nl_R | ( { 8{ FpNormalize_8U_49U_oelse_not_3_T  }} & FpNormalize_8U_49U_FpNormalize_8U_49U_and_nl_C ));
  assign FpNormalize_8U_49U_else_acc_nl_X0 = { 8{ FpNormalize_8U_49U_oelse_not_3 }} & FpNormalize_8U_49U_FpNormalize_8U_49U_and_nl_X ;
  assign FpNormalize_8U_49U_FpNormalize_8U_49U_and_nl_T = FpNormalize_8U_49U_oelse_not_3 ? ( { 8{ | FpNormalize_8U_49U_oelse_not_3_T  }} | FpNormalize_8U_49U_else_acc_nl_T ) : { 8{ | FpNormalize_8U_49U_oelse_not_3_T  }};
  assign FpNormalize_8U_49U_FpNormalize_8U_49U_and_nl_S = FpNormalize_8U_49U_oelse_not_3 ? FpNormalize_8U_49U_else_acc_nl_S : FpNormalize_8U_49U_oelse_not_3_S ;
  assign FpNormalize_8U_49U_oelse_not_3_R1 = ( | (FpNormalize_8U_49U_FpNormalize_8U_49U_and_nl_R | ( { 8{ FpNormalize_8U_49U_oelse_not_3 }} & FpNormalize_8U_49U_else_acc_nl_T & FpNormalize_8U_49U_FpNormalize_8U_49U_and_nl_C ))) && FpNormalize_8U_49U_else_acc_nl != 8'b00000000 ;
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0 = reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse ? FpAdd_8U_23U_asn_5_mx0w0 : FpAdd_8U_23U_asn_4_mx0w1;
  logic [0:0] reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_C1 ;
  logic [0:0] reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_R1 ;
  logic [0:0] reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_X1 ;
  assign reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_C1 = | FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_C ;
  assign reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_X1 = | FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_X ;
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_T = reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse ? ( { 50{ reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_T  }} | FpAdd_8U_23U_asn_5_mx0w0_T ) : ( { 50{ reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_T  }} | FpAdd_8U_23U_asn_4_mx0w1_T );
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_S = reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse ? FpAdd_8U_23U_asn_5_mx0w0_S : FpAdd_8U_23U_asn_4_mx0w1_S ;
  assign reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_R1 = ( | (FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_R | ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_C & ( { 50{ reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse }} & FpAdd_8U_23U_asn_5_mx0w0_T | { 50{ !reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse }} & FpAdd_8U_23U_asn_4_mx0w1_T )))) && FpAdd_8U_23U_asn_5_mx0w0 != FpAdd_8U_23U_asn_4_mx0w1 ;
  assign { FpAdd_8U_23U_asn_5_mx0w0_R0 [0], FpAdd_8U_23U_asn_5_mx0w0_R0 [1], FpAdd_8U_23U_asn_5_mx0w0_R0 [2], FpAdd_8U_23U_asn_5_mx0w0_R0 [3], FpAdd_8U_23U_asn_5_mx0w0_R0 [4], FpAdd_8U_23U_asn_5_mx0w0_R0 [5], FpAdd_8U_23U_asn_5_mx0w0_R0 [6], FpAdd_8U_23U_asn_5_mx0w0_R0 [7], FpAdd_8U_23U_asn_5_mx0w0_R0 [8], FpAdd_8U_23U_asn_5_mx0w0_R0 [9], FpAdd_8U_23U_asn_5_mx0w0_R0 [10], FpAdd_8U_23U_asn_5_mx0w0_R0 [11], FpAdd_8U_23U_asn_5_mx0w0_R0 [12], FpAdd_8U_23U_asn_5_mx0w0_R0 [13], FpAdd_8U_23U_asn_5_mx0w0_R0 [14], FpAdd_8U_23U_asn_5_mx0w0_R0 [15], FpAdd_8U_23U_asn_5_mx0w0_R0 [16], FpAdd_8U_23U_asn_5_mx0w0_R0 [17], FpAdd_8U_23U_asn_5_mx0w0_R0 [18], FpAdd_8U_23U_asn_5_mx0w0_R0 [19], FpAdd_8U_23U_asn_5_mx0w0_R0 [20], FpAdd_8U_23U_asn_5_mx0w0_R0 [21], FpAdd_8U_23U_asn_5_mx0w0_R0 [22], FpAdd_8U_23U_asn_5_mx0w0_R0 [23], FpAdd_8U_23U_asn_5_mx0w0_R0 [24], FpAdd_8U_23U_asn_5_mx0w0_R0 [25], FpAdd_8U_23U_asn_5_mx0w0_R0 [26], FpAdd_8U_23U_asn_5_mx0w0_R0 [27], FpAdd_8U_23U_asn_5_mx0w0_R0 [28], FpAdd_8U_23U_asn_5_mx0w0_R0 [29], FpAdd_8U_23U_asn_5_mx0w0_R0 [30], FpAdd_8U_23U_asn_5_mx0w0_R0 [31], FpAdd_8U_23U_asn_5_mx0w0_R0 [32], FpAdd_8U_23U_asn_5_mx0w0_R0 [33], FpAdd_8U_23U_asn_5_mx0w0_R0 [34], FpAdd_8U_23U_asn_5_mx0w0_R0 [35], FpAdd_8U_23U_asn_5_mx0w0_R0 [36], FpAdd_8U_23U_asn_5_mx0w0_R0 [37], FpAdd_8U_23U_asn_5_mx0w0_R0 [38], FpAdd_8U_23U_asn_5_mx0w0_R0 [39], FpAdd_8U_23U_asn_5_mx0w0_R0 [40], FpAdd_8U_23U_asn_5_mx0w0_R0 [41], FpAdd_8U_23U_asn_5_mx0w0_R0 [42], FpAdd_8U_23U_asn_5_mx0w0_R0 [43], FpAdd_8U_23U_asn_5_mx0w0_R0 [44], FpAdd_8U_23U_asn_5_mx0w0_R0 [45], FpAdd_8U_23U_asn_5_mx0w0_R0 [46], FpAdd_8U_23U_asn_5_mx0w0_R0 [47], FpAdd_8U_23U_asn_5_mx0w0_R0 [48] } = 0;
  assign { FpAdd_8U_23U_asn_5_mx0w0_X0 [0], FpAdd_8U_23U_asn_5_mx0w0_X0 [1], FpAdd_8U_23U_asn_5_mx0w0_X0 [2], FpAdd_8U_23U_asn_5_mx0w0_X0 [3], FpAdd_8U_23U_asn_5_mx0w0_X0 [4], FpAdd_8U_23U_asn_5_mx0w0_X0 [5], FpAdd_8U_23U_asn_5_mx0w0_X0 [6], FpAdd_8U_23U_asn_5_mx0w0_X0 [7], FpAdd_8U_23U_asn_5_mx0w0_X0 [8], FpAdd_8U_23U_asn_5_mx0w0_X0 [9], FpAdd_8U_23U_asn_5_mx0w0_X0 [10], FpAdd_8U_23U_asn_5_mx0w0_X0 [11], FpAdd_8U_23U_asn_5_mx0w0_X0 [12], FpAdd_8U_23U_asn_5_mx0w0_X0 [13], FpAdd_8U_23U_asn_5_mx0w0_X0 [14], FpAdd_8U_23U_asn_5_mx0w0_X0 [15], FpAdd_8U_23U_asn_5_mx0w0_X0 [16], FpAdd_8U_23U_asn_5_mx0w0_X0 [17], FpAdd_8U_23U_asn_5_mx0w0_X0 [18], FpAdd_8U_23U_asn_5_mx0w0_X0 [19], FpAdd_8U_23U_asn_5_mx0w0_X0 [20], FpAdd_8U_23U_asn_5_mx0w0_X0 [21], FpAdd_8U_23U_asn_5_mx0w0_X0 [22], FpAdd_8U_23U_asn_5_mx0w0_X0 [23], FpAdd_8U_23U_asn_5_mx0w0_X0 [24], FpAdd_8U_23U_asn_5_mx0w0_X0 [25], FpAdd_8U_23U_asn_5_mx0w0_X0 [26], FpAdd_8U_23U_asn_5_mx0w0_X0 [27], FpAdd_8U_23U_asn_5_mx0w0_X0 [28], FpAdd_8U_23U_asn_5_mx0w0_X0 [29], FpAdd_8U_23U_asn_5_mx0w0_X0 [30], FpAdd_8U_23U_asn_5_mx0w0_X0 [31], FpAdd_8U_23U_asn_5_mx0w0_X0 [32], FpAdd_8U_23U_asn_5_mx0w0_X0 [33], FpAdd_8U_23U_asn_5_mx0w0_X0 [34], FpAdd_8U_23U_asn_5_mx0w0_X0 [35], FpAdd_8U_23U_asn_5_mx0w0_X0 [36], FpAdd_8U_23U_asn_5_mx0w0_X0 [37], FpAdd_8U_23U_asn_5_mx0w0_X0 [38], FpAdd_8U_23U_asn_5_mx0w0_X0 [39], FpAdd_8U_23U_asn_5_mx0w0_X0 [40], FpAdd_8U_23U_asn_5_mx0w0_X0 [41], FpAdd_8U_23U_asn_5_mx0w0_X0 [42], FpAdd_8U_23U_asn_5_mx0w0_X0 [43], FpAdd_8U_23U_asn_5_mx0w0_X0 [44], FpAdd_8U_23U_asn_5_mx0w0_X0 [45], FpAdd_8U_23U_asn_5_mx0w0_X0 [46], FpAdd_8U_23U_asn_5_mx0w0_X0 [47], FpAdd_8U_23U_asn_5_mx0w0_X0 [48] } = 0;
  assign { FpAdd_8U_23U_asn_5_mx0w0_C0 [0], FpAdd_8U_23U_asn_5_mx0w0_C0 [1], FpAdd_8U_23U_asn_5_mx0w0_C0 [2], FpAdd_8U_23U_asn_5_mx0w0_C0 [3], FpAdd_8U_23U_asn_5_mx0w0_C0 [4], FpAdd_8U_23U_asn_5_mx0w0_C0 [5], FpAdd_8U_23U_asn_5_mx0w0_C0 [6], FpAdd_8U_23U_asn_5_mx0w0_C0 [7], FpAdd_8U_23U_asn_5_mx0w0_C0 [8], FpAdd_8U_23U_asn_5_mx0w0_C0 [9], FpAdd_8U_23U_asn_5_mx0w0_C0 [10], FpAdd_8U_23U_asn_5_mx0w0_C0 [11], FpAdd_8U_23U_asn_5_mx0w0_C0 [12], FpAdd_8U_23U_asn_5_mx0w0_C0 [13], FpAdd_8U_23U_asn_5_mx0w0_C0 [14], FpAdd_8U_23U_asn_5_mx0w0_C0 [15], FpAdd_8U_23U_asn_5_mx0w0_C0 [16], FpAdd_8U_23U_asn_5_mx0w0_C0 [17], FpAdd_8U_23U_asn_5_mx0w0_C0 [18], FpAdd_8U_23U_asn_5_mx0w0_C0 [19], FpAdd_8U_23U_asn_5_mx0w0_C0 [20], FpAdd_8U_23U_asn_5_mx0w0_C0 [21], FpAdd_8U_23U_asn_5_mx0w0_C0 [22], FpAdd_8U_23U_asn_5_mx0w0_C0 [23], FpAdd_8U_23U_asn_5_mx0w0_C0 [24], FpAdd_8U_23U_asn_5_mx0w0_C0 [25], FpAdd_8U_23U_asn_5_mx0w0_C0 [26], FpAdd_8U_23U_asn_5_mx0w0_C0 [27], FpAdd_8U_23U_asn_5_mx0w0_C0 [28], FpAdd_8U_23U_asn_5_mx0w0_C0 [29], FpAdd_8U_23U_asn_5_mx0w0_C0 [30], FpAdd_8U_23U_asn_5_mx0w0_C0 [31], FpAdd_8U_23U_asn_5_mx0w0_C0 [32], FpAdd_8U_23U_asn_5_mx0w0_C0 [33], FpAdd_8U_23U_asn_5_mx0w0_C0 [34], FpAdd_8U_23U_asn_5_mx0w0_C0 [35], FpAdd_8U_23U_asn_5_mx0w0_C0 [36], FpAdd_8U_23U_asn_5_mx0w0_C0 [37], FpAdd_8U_23U_asn_5_mx0w0_C0 [38], FpAdd_8U_23U_asn_5_mx0w0_C0 [39], FpAdd_8U_23U_asn_5_mx0w0_C0 [40], FpAdd_8U_23U_asn_5_mx0w0_C0 [41], FpAdd_8U_23U_asn_5_mx0w0_C0 [42], FpAdd_8U_23U_asn_5_mx0w0_C0 [43], FpAdd_8U_23U_asn_5_mx0w0_C0 [44], FpAdd_8U_23U_asn_5_mx0w0_C0 [45], FpAdd_8U_23U_asn_5_mx0w0_C0 [46], FpAdd_8U_23U_asn_5_mx0w0_C0 [47], FpAdd_8U_23U_asn_5_mx0w0_C0 [48] } = 0;
  assign { FpAdd_8U_23U_asn_4_mx0w1_R0 [0], FpAdd_8U_23U_asn_4_mx0w1_R0 [1], FpAdd_8U_23U_asn_4_mx0w1_R0 [2], FpAdd_8U_23U_asn_4_mx0w1_R0 [3], FpAdd_8U_23U_asn_4_mx0w1_R0 [4], FpAdd_8U_23U_asn_4_mx0w1_R0 [5], FpAdd_8U_23U_asn_4_mx0w1_R0 [6], FpAdd_8U_23U_asn_4_mx0w1_R0 [7], FpAdd_8U_23U_asn_4_mx0w1_R0 [8], FpAdd_8U_23U_asn_4_mx0w1_R0 [9], FpAdd_8U_23U_asn_4_mx0w1_R0 [10], FpAdd_8U_23U_asn_4_mx0w1_R0 [11], FpAdd_8U_23U_asn_4_mx0w1_R0 [12], FpAdd_8U_23U_asn_4_mx0w1_R0 [13], FpAdd_8U_23U_asn_4_mx0w1_R0 [14], FpAdd_8U_23U_asn_4_mx0w1_R0 [15], FpAdd_8U_23U_asn_4_mx0w1_R0 [16], FpAdd_8U_23U_asn_4_mx0w1_R0 [17], FpAdd_8U_23U_asn_4_mx0w1_R0 [18], FpAdd_8U_23U_asn_4_mx0w1_R0 [19], FpAdd_8U_23U_asn_4_mx0w1_R0 [20], FpAdd_8U_23U_asn_4_mx0w1_R0 [21], FpAdd_8U_23U_asn_4_mx0w1_R0 [22], FpAdd_8U_23U_asn_4_mx0w1_R0 [23], FpAdd_8U_23U_asn_4_mx0w1_R0 [24], FpAdd_8U_23U_asn_4_mx0w1_R0 [25], FpAdd_8U_23U_asn_4_mx0w1_R0 [26], FpAdd_8U_23U_asn_4_mx0w1_R0 [27], FpAdd_8U_23U_asn_4_mx0w1_R0 [28], FpAdd_8U_23U_asn_4_mx0w1_R0 [29], FpAdd_8U_23U_asn_4_mx0w1_R0 [30], FpAdd_8U_23U_asn_4_mx0w1_R0 [31], FpAdd_8U_23U_asn_4_mx0w1_R0 [32], FpAdd_8U_23U_asn_4_mx0w1_R0 [33], FpAdd_8U_23U_asn_4_mx0w1_R0 [34], FpAdd_8U_23U_asn_4_mx0w1_R0 [35], FpAdd_8U_23U_asn_4_mx0w1_R0 [36], FpAdd_8U_23U_asn_4_mx0w1_R0 [37], FpAdd_8U_23U_asn_4_mx0w1_R0 [38], FpAdd_8U_23U_asn_4_mx0w1_R0 [39], FpAdd_8U_23U_asn_4_mx0w1_R0 [40], FpAdd_8U_23U_asn_4_mx0w1_R0 [41], FpAdd_8U_23U_asn_4_mx0w1_R0 [42], FpAdd_8U_23U_asn_4_mx0w1_R0 [43], FpAdd_8U_23U_asn_4_mx0w1_R0 [44], FpAdd_8U_23U_asn_4_mx0w1_R0 [45], FpAdd_8U_23U_asn_4_mx0w1_R0 [46], FpAdd_8U_23U_asn_4_mx0w1_R0 [47], FpAdd_8U_23U_asn_4_mx0w1_R0 [48] } = 0;
  assign { FpAdd_8U_23U_asn_4_mx0w1_X0 [0], FpAdd_8U_23U_asn_4_mx0w1_X0 [1], FpAdd_8U_23U_asn_4_mx0w1_X0 [2], FpAdd_8U_23U_asn_4_mx0w1_X0 [3], FpAdd_8U_23U_asn_4_mx0w1_X0 [4], FpAdd_8U_23U_asn_4_mx0w1_X0 [5], FpAdd_8U_23U_asn_4_mx0w1_X0 [6], FpAdd_8U_23U_asn_4_mx0w1_X0 [7], FpAdd_8U_23U_asn_4_mx0w1_X0 [8], FpAdd_8U_23U_asn_4_mx0w1_X0 [9], FpAdd_8U_23U_asn_4_mx0w1_X0 [10], FpAdd_8U_23U_asn_4_mx0w1_X0 [11], FpAdd_8U_23U_asn_4_mx0w1_X0 [12], FpAdd_8U_23U_asn_4_mx0w1_X0 [13], FpAdd_8U_23U_asn_4_mx0w1_X0 [14], FpAdd_8U_23U_asn_4_mx0w1_X0 [15], FpAdd_8U_23U_asn_4_mx0w1_X0 [16], FpAdd_8U_23U_asn_4_mx0w1_X0 [17], FpAdd_8U_23U_asn_4_mx0w1_X0 [18], FpAdd_8U_23U_asn_4_mx0w1_X0 [19], FpAdd_8U_23U_asn_4_mx0w1_X0 [20], FpAdd_8U_23U_asn_4_mx0w1_X0 [21], FpAdd_8U_23U_asn_4_mx0w1_X0 [22], FpAdd_8U_23U_asn_4_mx0w1_X0 [23], FpAdd_8U_23U_asn_4_mx0w1_X0 [24], FpAdd_8U_23U_asn_4_mx0w1_X0 [25], FpAdd_8U_23U_asn_4_mx0w1_X0 [26], FpAdd_8U_23U_asn_4_mx0w1_X0 [27], FpAdd_8U_23U_asn_4_mx0w1_X0 [28], FpAdd_8U_23U_asn_4_mx0w1_X0 [29], FpAdd_8U_23U_asn_4_mx0w1_X0 [30], FpAdd_8U_23U_asn_4_mx0w1_X0 [31], FpAdd_8U_23U_asn_4_mx0w1_X0 [32], FpAdd_8U_23U_asn_4_mx0w1_X0 [33], FpAdd_8U_23U_asn_4_mx0w1_X0 [34], FpAdd_8U_23U_asn_4_mx0w1_X0 [35], FpAdd_8U_23U_asn_4_mx0w1_X0 [36], FpAdd_8U_23U_asn_4_mx0w1_X0 [37], FpAdd_8U_23U_asn_4_mx0w1_X0 [38], FpAdd_8U_23U_asn_4_mx0w1_X0 [39], FpAdd_8U_23U_asn_4_mx0w1_X0 [40], FpAdd_8U_23U_asn_4_mx0w1_X0 [41], FpAdd_8U_23U_asn_4_mx0w1_X0 [42], FpAdd_8U_23U_asn_4_mx0w1_X0 [43], FpAdd_8U_23U_asn_4_mx0w1_X0 [44], FpAdd_8U_23U_asn_4_mx0w1_X0 [45], FpAdd_8U_23U_asn_4_mx0w1_X0 [46], FpAdd_8U_23U_asn_4_mx0w1_X0 [47], FpAdd_8U_23U_asn_4_mx0w1_X0 [48] } = 0;
  assign { FpAdd_8U_23U_asn_4_mx0w1_C0 [0], FpAdd_8U_23U_asn_4_mx0w1_C0 [1], FpAdd_8U_23U_asn_4_mx0w1_C0 [2], FpAdd_8U_23U_asn_4_mx0w1_C0 [3], FpAdd_8U_23U_asn_4_mx0w1_C0 [4], FpAdd_8U_23U_asn_4_mx0w1_C0 [5], FpAdd_8U_23U_asn_4_mx0w1_C0 [6], FpAdd_8U_23U_asn_4_mx0w1_C0 [7], FpAdd_8U_23U_asn_4_mx0w1_C0 [8], FpAdd_8U_23U_asn_4_mx0w1_C0 [9], FpAdd_8U_23U_asn_4_mx0w1_C0 [10], FpAdd_8U_23U_asn_4_mx0w1_C0 [11], FpAdd_8U_23U_asn_4_mx0w1_C0 [12], FpAdd_8U_23U_asn_4_mx0w1_C0 [13], FpAdd_8U_23U_asn_4_mx0w1_C0 [14], FpAdd_8U_23U_asn_4_mx0w1_C0 [15], FpAdd_8U_23U_asn_4_mx0w1_C0 [16], FpAdd_8U_23U_asn_4_mx0w1_C0 [17], FpAdd_8U_23U_asn_4_mx0w1_C0 [18], FpAdd_8U_23U_asn_4_mx0w1_C0 [19], FpAdd_8U_23U_asn_4_mx0w1_C0 [20], FpAdd_8U_23U_asn_4_mx0w1_C0 [21], FpAdd_8U_23U_asn_4_mx0w1_C0 [22], FpAdd_8U_23U_asn_4_mx0w1_C0 [23], FpAdd_8U_23U_asn_4_mx0w1_C0 [24], FpAdd_8U_23U_asn_4_mx0w1_C0 [25], FpAdd_8U_23U_asn_4_mx0w1_C0 [26], FpAdd_8U_23U_asn_4_mx0w1_C0 [27], FpAdd_8U_23U_asn_4_mx0w1_C0 [28], FpAdd_8U_23U_asn_4_mx0w1_C0 [29], FpAdd_8U_23U_asn_4_mx0w1_C0 [30], FpAdd_8U_23U_asn_4_mx0w1_C0 [31], FpAdd_8U_23U_asn_4_mx0w1_C0 [32], FpAdd_8U_23U_asn_4_mx0w1_C0 [33], FpAdd_8U_23U_asn_4_mx0w1_C0 [34], FpAdd_8U_23U_asn_4_mx0w1_C0 [35], FpAdd_8U_23U_asn_4_mx0w1_C0 [36], FpAdd_8U_23U_asn_4_mx0w1_C0 [37], FpAdd_8U_23U_asn_4_mx0w1_C0 [38], FpAdd_8U_23U_asn_4_mx0w1_C0 [39], FpAdd_8U_23U_asn_4_mx0w1_C0 [40], FpAdd_8U_23U_asn_4_mx0w1_C0 [41], FpAdd_8U_23U_asn_4_mx0w1_C0 [42], FpAdd_8U_23U_asn_4_mx0w1_C0 [43], FpAdd_8U_23U_asn_4_mx0w1_C0 [44], FpAdd_8U_23U_asn_4_mx0w1_C0 [45], FpAdd_8U_23U_asn_4_mx0w1_C0 [46], FpAdd_8U_23U_asn_4_mx0w1_C0 [47], FpAdd_8U_23U_asn_4_mx0w1_C0 [48] } = 0;
  logic [49:0] FpAdd_8U_23U_asn_5_mx0w0_C1 ;
  logic [49:0] FpAdd_8U_23U_asn_5_mx0w0_R1 ;
  logic [49:0] FpAdd_8U_23U_asn_5_mx0w0_X1 ;
  assign FpAdd_8U_23U_asn_5_mx0w0_C1 = { 50{ reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse }} ;
  assign FpAdd_8U_23U_asn_5_mx0w0_R1 = { 50{ reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse }} & ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_R | ( { 50{ reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_T  }} & FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_C ));
  assign FpAdd_8U_23U_asn_5_mx0w0_X1 = { 50{ reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse }} & FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_X ;
  logic [49:0] FpAdd_8U_23U_asn_4_mx0w1_C1 ;
  logic [49:0] FpAdd_8U_23U_asn_4_mx0w1_R1 ;
  logic [49:0] FpAdd_8U_23U_asn_4_mx0w1_X1 ;
  assign FpAdd_8U_23U_asn_4_mx0w1_C1 = { 50{ !reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse }} ;
  assign FpAdd_8U_23U_asn_4_mx0w1_R1 = { 50{ !reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse }} & ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_R | ( { 50{ reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_T  }} & FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_C ));
  assign FpAdd_8U_23U_asn_4_mx0w1_X1 = { 50{ !reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse }} & FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_X ;
  assign FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0 = FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5 ? FpAdd_8U_23U_b_int_mant_p1_sva_2 : FpAdd_8U_23U_a_int_mant_p1_sva_2;
  logic [0:0] FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_C0 ;
  logic [0:0] FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_R0 ;
  logic [0:0] FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_X0 ;
  assign FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_C0 = | FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_C ;
  assign FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_X0 = | FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_X ;
  assign FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_T = FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5 ? ( { 49{ FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_T  }} | FpAdd_8U_23U_b_int_mant_p1_sva_2_T ) : ( { 49{ FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_T  }} | FpAdd_8U_23U_a_int_mant_p1_sva_2_T );
  assign FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_S = FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5 ? FpAdd_8U_23U_b_int_mant_p1_sva_2_S : FpAdd_8U_23U_a_int_mant_p1_sva_2_S ;
  assign FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_R0 = ( | (FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_R | ( FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_C & ( { 49{ FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5 }} & FpAdd_8U_23U_b_int_mant_p1_sva_2_T | { 49{ !FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5 }} & FpAdd_8U_23U_a_int_mant_p1_sva_2_T )))) && FpAdd_8U_23U_b_int_mant_p1_sva_2 != FpAdd_8U_23U_a_int_mant_p1_sva_2 ;
  logic [48:0] FpAdd_8U_23U_b_int_mant_p1_sva_2_C0 ;
  logic [48:0] FpAdd_8U_23U_b_int_mant_p1_sva_2_R0 ;
  logic [48:0] FpAdd_8U_23U_b_int_mant_p1_sva_2_X0 ;
  assign FpAdd_8U_23U_b_int_mant_p1_sva_2_C0 = { 49{ FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5 }} ;
  assign FpAdd_8U_23U_b_int_mant_p1_sva_2_R0 = { 49{ FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5 }} & ( FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_R | ( { 49{ FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_T  }} & FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_C ));
  assign FpAdd_8U_23U_b_int_mant_p1_sva_2_X0 = { 49{ FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5 }} & FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_X ;
  logic [48:0] FpAdd_8U_23U_a_int_mant_p1_sva_2_C0 ;
  logic [48:0] FpAdd_8U_23U_a_int_mant_p1_sva_2_R0 ;
  logic [48:0] FpAdd_8U_23U_a_int_mant_p1_sva_2_X0 ;
  assign FpAdd_8U_23U_a_int_mant_p1_sva_2_C0 = { 49{ !FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5 }} ;
  assign FpAdd_8U_23U_a_int_mant_p1_sva_2_R0 = { 49{ !FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5 }} & ( FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_R | ( { 49{ FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_T  }} & FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_C ));
  assign FpAdd_8U_23U_a_int_mant_p1_sva_2_X0 = { 49{ !FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5 }} & FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_X ;
  assign FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0 = FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5 ? FpAdd_8U_23U_a_int_mant_p1_sva_2 : FpAdd_8U_23U_b_int_mant_p1_sva_2;
  logic [0:0] FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_C1 ;
  logic [0:0] FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_R1 ;
  logic [0:0] FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_X1 ;
  assign FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_C1 = | FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_C ;
  assign FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_X1 = | FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_X ;
  assign FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_T = FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5 ? ( { 49{ FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_T  }} | FpAdd_8U_23U_a_int_mant_p1_sva_2_T ) : ( { 49{ FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_T  }} | FpAdd_8U_23U_b_int_mant_p1_sva_2_T );
  assign FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_S = FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5 ? FpAdd_8U_23U_a_int_mant_p1_sva_2_S : FpAdd_8U_23U_b_int_mant_p1_sva_2_S ;
  assign FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_R1 = ( | (FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_R | ( FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_C & ( { 49{ FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5 }} & FpAdd_8U_23U_a_int_mant_p1_sva_2_T | { 49{ !FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5 }} & FpAdd_8U_23U_b_int_mant_p1_sva_2_T )))) && FpAdd_8U_23U_a_int_mant_p1_sva_2 != FpAdd_8U_23U_b_int_mant_p1_sva_2 ;
  logic [48:0] FpAdd_8U_23U_a_int_mant_p1_sva_2_C1 ;
  logic [48:0] FpAdd_8U_23U_a_int_mant_p1_sva_2_R1 ;
  logic [48:0] FpAdd_8U_23U_a_int_mant_p1_sva_2_X1 ;
  assign FpAdd_8U_23U_a_int_mant_p1_sva_2_C1 = { 49{ FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5 }} ;
  assign FpAdd_8U_23U_a_int_mant_p1_sva_2_R1 = { 49{ FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5 }} & ( FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_R | ( { 49{ FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_T  }} & FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_C ));
  assign FpAdd_8U_23U_a_int_mant_p1_sva_2_X1 = { 49{ FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5 }} & FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_X ;
  logic [48:0] FpAdd_8U_23U_b_int_mant_p1_sva_2_C1 ;
  logic [48:0] FpAdd_8U_23U_b_int_mant_p1_sva_2_R1 ;
  logic [48:0] FpAdd_8U_23U_b_int_mant_p1_sva_2_X1 ;
  assign FpAdd_8U_23U_b_int_mant_p1_sva_2_C1 = { 49{ !FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5 }} ;
  assign FpAdd_8U_23U_b_int_mant_p1_sva_2_R1 = { 49{ !FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5 }} & ( FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_R | ( { 49{ FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_T  }} & FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_C ));
  assign FpAdd_8U_23U_b_int_mant_p1_sva_2_X1 = { 49{ !FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5 }} & FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_X ;
  assign mux_28_nl = or_cse ? nor_27_nl : nor_26_nl;
  logic [0:0] or_cse_C14 ;
  logic [0:0] or_cse_R14 ;
  logic [0:0] or_cse_X14 ;
  assign or_cse_C14 = | mux_28_nl_C ;
  assign or_cse_X14 = | mux_28_nl_X ;
  assign mux_28_nl_T = or_cse ? ( { 1{ or_cse_T  }} | nor_27_nl_T ) : ( { 1{ or_cse_T  }} | nor_26_nl_T );
  assign mux_28_nl_S = or_cse ? nor_27_nl_S : nor_26_nl_S ;
  assign or_cse_R14 = ( | (mux_28_nl_R | ( mux_28_nl_C & ( { 1{ or_cse }} & nor_27_nl_T | { 1{ !or_cse }} & nor_26_nl_T )))) && nor_27_nl != nor_26_nl ;
  logic [0:0] nor_27_nl_C0 ;
  logic [0:0] nor_27_nl_R0 ;
  logic [0:0] nor_27_nl_X0 ;
  assign nor_27_nl_C0 = { 1{ or_cse }} ;
  assign nor_27_nl_R0 = { 1{ or_cse }} & ( mux_28_nl_R | ( { 1{ or_cse_T  }} & mux_28_nl_C ));
  assign nor_27_nl_X0 = { 1{ or_cse }} & mux_28_nl_X ;
  logic [0:0] nor_26_nl_C0 ;
  logic [0:0] nor_26_nl_R0 ;
  logic [0:0] nor_26_nl_X0 ;
  assign nor_26_nl_C0 = { 1{ !or_cse }} ;
  assign nor_26_nl_R0 = { 1{ !or_cse }} & ( mux_28_nl_R | ( { 1{ or_cse_T  }} & mux_28_nl_C ));
  assign nor_26_nl_X0 = { 1{ !or_cse }} & mux_28_nl_X ;
  assign mux_13_cse = or_cse ? nor_tmp_1 : main_stage_v_1;
  logic [0:0] or_cse_C15 ;
  logic [0:0] or_cse_R15 ;
  logic [0:0] or_cse_X15 ;
  assign or_cse_C15 = | mux_13_cse_C ;
  assign or_cse_X15 = | mux_13_cse_X ;
  assign mux_13_cse_T = or_cse ? ( { 1{ or_cse_T  }} | nor_tmp_1_T ) : ( { 1{ or_cse_T  }} | main_stage_v_1_T );
  assign mux_13_cse_S = or_cse ? nor_tmp_1_S : main_stage_v_1_S ;
  assign or_cse_R15 = ( | (mux_13_cse_R | ( mux_13_cse_C & ( { 1{ or_cse }} & nor_tmp_1_T | { 1{ !or_cse }} & main_stage_v_1_T )))) && nor_tmp_1 != main_stage_v_1 ;
  logic [0:0] nor_tmp_1_C2 ;
  logic [0:0] nor_tmp_1_R2 ;
  logic [0:0] nor_tmp_1_X2 ;
  assign nor_tmp_1_C2 = { 1{ or_cse }} ;
  assign nor_tmp_1_R2 = { 1{ or_cse }} & ( mux_13_cse_R | ( { 1{ or_cse_T  }} & mux_13_cse_C ));
  assign nor_tmp_1_X2 = { 1{ or_cse }} & mux_13_cse_X ;
  logic [0:0] main_stage_v_1_C5 ;
  logic [0:0] main_stage_v_1_R5 ;
  logic [0:0] main_stage_v_1_X5 ;
  assign main_stage_v_1_C5 = { 1{ !or_cse }} ;
  assign main_stage_v_1_R5 = { 1{ !or_cse }} & ( mux_13_cse_R | ( { 1{ or_cse_T  }} & mux_13_cse_C ));
  assign main_stage_v_1_X5 = { 1{ !or_cse }} & mux_13_cse_X ;
  assign mux_10_nl = and_67_nl ? or_10_nl : mux_9_nl;
  logic [0:0] and_67_nl_C0 ;
  logic [0:0] and_67_nl_R0 ;
  logic [0:0] and_67_nl_X0 ;
  assign and_67_nl_C0 = | mux_10_nl_C ;
  assign and_67_nl_X0 = | mux_10_nl_X ;
  assign mux_10_nl_T = and_67_nl ? ( { 1{ and_67_nl_T  }} | or_10_nl_T ) : ( { 1{ and_67_nl_T  }} | mux_9_nl_T );
  assign mux_10_nl_S = and_67_nl ? or_10_nl_S : mux_9_nl_S ;
  assign and_67_nl_R0 = ( | (mux_10_nl_R | ( mux_10_nl_C & ( { 1{ and_67_nl }} & or_10_nl_T | { 1{ !and_67_nl }} & mux_9_nl_T )))) && or_10_nl != mux_9_nl ;
  logic [0:0] or_10_nl_C0 ;
  logic [0:0] or_10_nl_R0 ;
  logic [0:0] or_10_nl_X0 ;
  assign or_10_nl_C0 = { 1{ and_67_nl }} ;
  assign or_10_nl_R0 = { 1{ and_67_nl }} & ( mux_10_nl_R | ( { 1{ and_67_nl_T  }} & mux_10_nl_C ));
  assign or_10_nl_X0 = { 1{ and_67_nl }} & mux_10_nl_X ;
  logic [0:0] mux_9_nl_C0 ;
  logic [0:0] mux_9_nl_R0 ;
  logic [0:0] mux_9_nl_X0 ;
  assign mux_9_nl_C0 = { 1{ !and_67_nl }} ;
  assign mux_9_nl_R0 = { 1{ !and_67_nl }} & ( mux_10_nl_R | ( { 1{ and_67_nl_T  }} & mux_10_nl_C ));
  assign mux_9_nl_X0 = { 1{ !and_67_nl }} & mux_10_nl_X ;
  assign mux_9_nl = chn_o_rsci_bawt ? nor_tmp_11 : nor_34_nl;
  logic [0:0] chn_o_rsci_bawt_C4 ;
  logic [0:0] chn_o_rsci_bawt_R4 ;
  logic [0:0] chn_o_rsci_bawt_X4 ;
  assign chn_o_rsci_bawt_C4 = | mux_9_nl_C ;
  assign chn_o_rsci_bawt_X4 = | mux_9_nl_X ;
  assign mux_9_nl_T = chn_o_rsci_bawt ? ( { 1{ chn_o_rsci_bawt_T  }} | nor_tmp_11_T ) : ( { 1{ chn_o_rsci_bawt_T  }} | nor_34_nl_T );
  assign mux_9_nl_S = chn_o_rsci_bawt ? nor_tmp_11_S : nor_34_nl_S ;
  assign chn_o_rsci_bawt_R4 = ( | (mux_9_nl_R | ( mux_9_nl_C & ( { 1{ chn_o_rsci_bawt }} & nor_tmp_11_T | { 1{ !chn_o_rsci_bawt }} & nor_34_nl_T )))) && nor_tmp_11 != nor_34_nl ;
  logic [0:0] nor_tmp_11_C3 ;
  logic [0:0] nor_tmp_11_R3 ;
  logic [0:0] nor_tmp_11_X3 ;
  assign nor_tmp_11_C3 = { 1{ chn_o_rsci_bawt }} ;
  assign nor_tmp_11_R3 = { 1{ chn_o_rsci_bawt }} & ( mux_9_nl_R | ( { 1{ chn_o_rsci_bawt_T  }} & mux_9_nl_C ));
  assign nor_tmp_11_X3 = { 1{ chn_o_rsci_bawt }} & mux_9_nl_X ;
  logic [0:0] nor_34_nl_C0 ;
  logic [0:0] nor_34_nl_R0 ;
  logic [0:0] nor_34_nl_X0 ;
  assign nor_34_nl_C0 = { 1{ !chn_o_rsci_bawt }} ;
  assign nor_34_nl_R0 = { 1{ !chn_o_rsci_bawt }} & ( mux_9_nl_R | ( { 1{ chn_o_rsci_bawt_T  }} & mux_9_nl_C ));
  assign nor_34_nl_X0 = { 1{ !chn_o_rsci_bawt }} & mux_9_nl_X ;
  assign mux_6_nl = main_stage_v_3 ? or_tmp_3 : mux_tmp_5;
  logic [0:0] main_stage_v_3_C4 ;
  logic [0:0] main_stage_v_3_R4 ;
  logic [0:0] main_stage_v_3_X4 ;
  assign main_stage_v_3_C4 = | mux_6_nl_C ;
  assign main_stage_v_3_X4 = | mux_6_nl_X ;
  assign mux_6_nl_T = main_stage_v_3 ? ( { 1{ main_stage_v_3_T  }} | or_tmp_3_T ) : ( { 1{ main_stage_v_3_T  }} | mux_tmp_5_T );
  assign mux_6_nl_S = main_stage_v_3 ? or_tmp_3_S : mux_tmp_5_S ;
  assign main_stage_v_3_R4 = ( | (mux_6_nl_R | ( mux_6_nl_C & ( { 1{ main_stage_v_3 }} & or_tmp_3_T | { 1{ !main_stage_v_3 }} & mux_tmp_5_T )))) && or_tmp_3 != mux_tmp_5 ;
  logic [0:0] or_tmp_3_C1 ;
  logic [0:0] or_tmp_3_R1 ;
  logic [0:0] or_tmp_3_X1 ;
  assign or_tmp_3_C1 = { 1{ main_stage_v_3 }} ;
  assign or_tmp_3_R1 = { 1{ main_stage_v_3 }} & ( mux_6_nl_R | ( { 1{ main_stage_v_3_T  }} & mux_6_nl_C ));
  assign or_tmp_3_X1 = { 1{ main_stage_v_3 }} & mux_6_nl_X ;
  logic [0:0] mux_tmp_5_C1 ;
  logic [0:0] mux_tmp_5_R1 ;
  logic [0:0] mux_tmp_5_X1 ;
  assign mux_tmp_5_C1 = { 1{ !main_stage_v_3 }} ;
  assign mux_tmp_5_R1 = { 1{ !main_stage_v_3 }} & ( mux_6_nl_R | ( { 1{ main_stage_v_3_T  }} & mux_6_nl_C ));
  assign mux_tmp_5_X1 = { 1{ !main_stage_v_3 }} & mux_6_nl_X ;
  assign mux_4_cse = or_cse ? main_stage_v_1 : main_stage_v_2;
  logic [0:0] or_cse_C16 ;
  logic [0:0] or_cse_R16 ;
  logic [0:0] or_cse_X16 ;
  assign or_cse_C16 = | mux_4_cse_C ;
  assign or_cse_X16 = | mux_4_cse_X ;
  assign mux_4_cse_T = or_cse ? ( { 1{ or_cse_T  }} | main_stage_v_1_T ) : ( { 1{ or_cse_T  }} | main_stage_v_2_T );
  assign mux_4_cse_S = or_cse ? main_stage_v_1_S : main_stage_v_2_S ;
  assign or_cse_R16 = ( | (mux_4_cse_R | ( mux_4_cse_C & ( { 1{ or_cse }} & main_stage_v_1_T | { 1{ !or_cse }} & main_stage_v_2_T )))) && main_stage_v_1 != main_stage_v_2 ;
  logic [0:0] main_stage_v_1_C6 ;
  logic [0:0] main_stage_v_1_R6 ;
  logic [0:0] main_stage_v_1_X6 ;
  assign main_stage_v_1_C6 = { 1{ or_cse }} ;
  assign main_stage_v_1_R6 = { 1{ or_cse }} & ( mux_4_cse_R | ( { 1{ or_cse_T  }} & mux_4_cse_C ));
  assign main_stage_v_1_X6 = { 1{ or_cse }} & mux_4_cse_X ;
  logic [0:0] main_stage_v_2_C6 ;
  logic [0:0] main_stage_v_2_R6 ;
  logic [0:0] main_stage_v_2_X6 ;
  assign main_stage_v_2_C6 = { 1{ !or_cse }} ;
  assign main_stage_v_2_R6 = { 1{ !or_cse }} & ( mux_4_cse_R | ( { 1{ or_cse_T  }} & mux_4_cse_C ));
  assign main_stage_v_2_X6 = { 1{ !or_cse }} & mux_4_cse_X ;
  assign _023_ = IsNaN_8U_23U_1_and_cse ? IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp : IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2;
  logic [0:0] IsNaN_8U_23U_1_and_cse_C0 ;
  logic [0:0] IsNaN_8U_23U_1_and_cse_R0 ;
  logic [0:0] IsNaN_8U_23U_1_and_cse_X0 ;
  assign IsNaN_8U_23U_1_and_cse_C0 = | _023__C ;
  assign IsNaN_8U_23U_1_and_cse_X0 = | _023__X ;
  assign _023__T = IsNaN_8U_23U_1_and_cse ? ( { 1{ IsNaN_8U_23U_1_and_cse_T  }} | IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_T ) : ( { 1{ IsNaN_8U_23U_1_and_cse_T  }} | IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_T );
  assign _023__S = IsNaN_8U_23U_1_and_cse ? IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_S : IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_S ;
  assign IsNaN_8U_23U_1_and_cse_R0 = ( | (_023__R | ( _023__C & ( { 1{ IsNaN_8U_23U_1_and_cse }} & IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_T | { 1{ !IsNaN_8U_23U_1_and_cse }} & IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_T )))) && IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp != IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2 ;
  logic [0:0] IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_C1 ;
  logic [0:0] IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_R1 ;
  logic [0:0] IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_X1 ;
  assign IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_C1 = { 1{ IsNaN_8U_23U_1_and_cse }} ;
  assign IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_R1 = { 1{ IsNaN_8U_23U_1_and_cse }} & ( _023__R | ( { 1{ IsNaN_8U_23U_1_and_cse_T  }} & _023__C ));
  assign IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_X1 = { 1{ IsNaN_8U_23U_1_and_cse }} & _023__X ;
  logic [0:0] IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_C1 ;
  logic [0:0] IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_R1 ;
  logic [0:0] IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_X1 ;
  assign IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_C1 = { 1{ !IsNaN_8U_23U_1_and_cse }} ;
  assign IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_R1 = { 1{ !IsNaN_8U_23U_1_and_cse }} & ( _023__R | ( { 1{ IsNaN_8U_23U_1_and_cse_T  }} & _023__C ));
  assign IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_X1 = { 1{ !IsNaN_8U_23U_1_and_cse }} & _023__X ;
  assign _026_ = IsNaN_8U_23U_1_and_cse ? IsNaN_8U_23U_1_nor_tmp : IsNaN_8U_23U_1_nor_itm_2;
  logic [0:0] IsNaN_8U_23U_1_and_cse_C1 ;
  logic [0:0] IsNaN_8U_23U_1_and_cse_R1 ;
  logic [0:0] IsNaN_8U_23U_1_and_cse_X1 ;
  assign IsNaN_8U_23U_1_and_cse_C1 = | _026__C ;
  assign IsNaN_8U_23U_1_and_cse_X1 = | _026__X ;
  assign _026__T = IsNaN_8U_23U_1_and_cse ? ( { 1{ IsNaN_8U_23U_1_and_cse_T  }} | IsNaN_8U_23U_1_nor_tmp_T ) : ( { 1{ IsNaN_8U_23U_1_and_cse_T  }} | IsNaN_8U_23U_1_nor_itm_2_T );
  assign _026__S = IsNaN_8U_23U_1_and_cse ? IsNaN_8U_23U_1_nor_tmp_S : IsNaN_8U_23U_1_nor_itm_2_S ;
  assign IsNaN_8U_23U_1_and_cse_R1 = ( | (_026__R | ( _026__C & ( { 1{ IsNaN_8U_23U_1_and_cse }} & IsNaN_8U_23U_1_nor_tmp_T | { 1{ !IsNaN_8U_23U_1_and_cse }} & IsNaN_8U_23U_1_nor_itm_2_T )))) && IsNaN_8U_23U_1_nor_tmp != IsNaN_8U_23U_1_nor_itm_2 ;
  logic [0:0] IsNaN_8U_23U_1_nor_tmp_C1 ;
  logic [0:0] IsNaN_8U_23U_1_nor_tmp_R1 ;
  logic [0:0] IsNaN_8U_23U_1_nor_tmp_X1 ;
  assign IsNaN_8U_23U_1_nor_tmp_C1 = { 1{ IsNaN_8U_23U_1_and_cse }} ;
  assign IsNaN_8U_23U_1_nor_tmp_R1 = { 1{ IsNaN_8U_23U_1_and_cse }} & ( _026__R | ( { 1{ IsNaN_8U_23U_1_and_cse_T  }} & _026__C ));
  assign IsNaN_8U_23U_1_nor_tmp_X1 = { 1{ IsNaN_8U_23U_1_and_cse }} & _026__X ;
  logic [0:0] IsNaN_8U_23U_1_nor_itm_2_C1 ;
  logic [0:0] IsNaN_8U_23U_1_nor_itm_2_R1 ;
  logic [0:0] IsNaN_8U_23U_1_nor_itm_2_X1 ;
  assign IsNaN_8U_23U_1_nor_itm_2_C1 = { 1{ !IsNaN_8U_23U_1_and_cse }} ;
  assign IsNaN_8U_23U_1_nor_itm_2_R1 = { 1{ !IsNaN_8U_23U_1_and_cse }} & ( _026__R | ( { 1{ IsNaN_8U_23U_1_and_cse_T  }} & _026__C ));
  assign IsNaN_8U_23U_1_nor_itm_2_X1 = { 1{ !IsNaN_8U_23U_1_and_cse }} & _026__X ;
  assign _042_ = and_dcpl_33 ? _126_ : chn_a_rsci_d_mxwt[31];
  logic [0:0] and_dcpl_33_C1 ;
  logic [0:0] and_dcpl_33_R1 ;
  logic [0:0] and_dcpl_33_X1 ;
  assign and_dcpl_33_C1 = | _042__C ;
  assign and_dcpl_33_X1 = | _042__X ;
  assign _042__T = and_dcpl_33 ? ( { 1{ and_dcpl_33_T  }} | _126__T ) : ( { 1{ and_dcpl_33_T  }} | chn_a_rsci_d_mxwt_T [31] );
  assign _042__S = and_dcpl_33 ? _126__S : chn_a_rsci_d_mxwt_S ;
  assign and_dcpl_33_R1 = ( | (_042__R | ( _042__C & ( { 1{ and_dcpl_33 }} & _126__T | { 1{ !and_dcpl_33 }} & chn_a_rsci_d_mxwt_T [31] )))) && _126_ != chn_a_rsci_d_mxwt[31] ;
  logic [0:0] _126__C0 ;
  logic [0:0] _126__R0 ;
  logic [0:0] _126__X0 ;
  assign _126__C0 = { 1{ and_dcpl_33 }} ;
  assign _126__R0 = { 1{ and_dcpl_33 }} & ( _042__R | ( { 1{ and_dcpl_33_T  }} & _042__C ));
  assign _126__X0 = { 1{ and_dcpl_33 }} & _042__X ;
  assign chn_a_rsci_d_mxwt_C3 [31] = { 1{ !and_dcpl_33 }} ;
  assign chn_a_rsci_d_mxwt_R3 [31] = { 1{ !and_dcpl_33 }} & ( _042__R | ( { 1{ and_dcpl_33_T  }} & _042__C ));
  assign chn_a_rsci_d_mxwt_X3 [31] = { 1{ !and_dcpl_33 }} & _042__X ;
  assign _014_ = _076_ ? _042_ : FpAdd_8U_23U_mux_1_itm_2;
  logic [0:0] _076__C0 ;
  logic [0:0] _076__R0 ;
  logic [0:0] _076__X0 ;
  assign _076__C0 = | _014__C ;
  assign _076__X0 = | _014__X ;
  assign _014__T = _076_ ? ( { 1{ _076__T  }} | _042__T ) : ( { 1{ _076__T  }} | FpAdd_8U_23U_mux_1_itm_2_T );
  assign _014__S = _076_ ? _042__S : FpAdd_8U_23U_mux_1_itm_2_S ;
  assign _076__R0 = ( | (_014__R | ( _014__C & ( { 1{ _076_ }} & _042__T | { 1{ !_076_ }} & FpAdd_8U_23U_mux_1_itm_2_T )))) && _042_ != FpAdd_8U_23U_mux_1_itm_2 ;
  logic [0:0] _042__C0 ;
  logic [0:0] _042__R0 ;
  logic [0:0] _042__X0 ;
  assign _042__C0 = { 1{ _076_ }} ;
  assign _042__R0 = { 1{ _076_ }} & ( _014__R | ( { 1{ _076__T  }} & _014__C ));
  assign _042__X0 = { 1{ _076_ }} & _014__X ;
  logic [0:0] FpAdd_8U_23U_mux_1_itm_2_C1 ;
  logic [0:0] FpAdd_8U_23U_mux_1_itm_2_R1 ;
  logic [0:0] FpAdd_8U_23U_mux_1_itm_2_X1 ;
  assign FpAdd_8U_23U_mux_1_itm_2_C1 = { 1{ !_076_ }} ;
  assign FpAdd_8U_23U_mux_1_itm_2_R1 = { 1{ !_076_ }} & ( _014__R | ( { 1{ _076__T  }} & _014__C ));
  assign FpAdd_8U_23U_mux_1_itm_2_X1 = { 1{ !_076_ }} & _014__X ;
  assign _046_ = and_dcpl_33 ? chn_b_rsci_d_mxwt[30:23] : chn_a_rsci_d_mxwt[30:23];
  logic [0:0] and_dcpl_33_C2 ;
  logic [0:0] and_dcpl_33_R2 ;
  logic [0:0] and_dcpl_33_X2 ;
  assign and_dcpl_33_C2 = | _046__C ;
  assign and_dcpl_33_X2 = | _046__X ;
  assign _046__T = and_dcpl_33 ? ( { 8{ and_dcpl_33_T  }} | chn_b_rsci_d_mxwt_T [30:23] ) : ( { 8{ and_dcpl_33_T  }} | chn_a_rsci_d_mxwt_T [30:23] );
  assign _046__S = and_dcpl_33 ? chn_b_rsci_d_mxwt_S : chn_a_rsci_d_mxwt_S ;
  assign and_dcpl_33_R2 = ( | (_046__R | ( _046__C & ( { 8{ and_dcpl_33 }} & chn_b_rsci_d_mxwt_T [30:23] | { 8{ !and_dcpl_33 }} & chn_a_rsci_d_mxwt_T [30:23] )))) && chn_b_rsci_d_mxwt[30:23] != chn_a_rsci_d_mxwt[30:23] ;
  assign { chn_a_rsci_d_mxwt_R3 [0], chn_a_rsci_d_mxwt_R3 [1], chn_a_rsci_d_mxwt_R3 [2], chn_a_rsci_d_mxwt_R3 [3], chn_a_rsci_d_mxwt_R3 [4], chn_a_rsci_d_mxwt_R3 [5], chn_a_rsci_d_mxwt_R3 [6], chn_a_rsci_d_mxwt_R3 [7], chn_a_rsci_d_mxwt_R3 [8], chn_a_rsci_d_mxwt_R3 [9], chn_a_rsci_d_mxwt_R3 [10], chn_a_rsci_d_mxwt_R3 [11], chn_a_rsci_d_mxwt_R3 [12], chn_a_rsci_d_mxwt_R3 [13], chn_a_rsci_d_mxwt_R3 [14], chn_a_rsci_d_mxwt_R3 [15], chn_a_rsci_d_mxwt_R3 [16], chn_a_rsci_d_mxwt_R3 [17], chn_a_rsci_d_mxwt_R3 [18], chn_a_rsci_d_mxwt_R3 [19], chn_a_rsci_d_mxwt_R3 [20], chn_a_rsci_d_mxwt_R3 [21], chn_a_rsci_d_mxwt_R3 [22] } = 0;
  assign { chn_a_rsci_d_mxwt_X3 [0], chn_a_rsci_d_mxwt_X3 [1], chn_a_rsci_d_mxwt_X3 [2], chn_a_rsci_d_mxwt_X3 [3], chn_a_rsci_d_mxwt_X3 [4], chn_a_rsci_d_mxwt_X3 [5], chn_a_rsci_d_mxwt_X3 [6], chn_a_rsci_d_mxwt_X3 [7], chn_a_rsci_d_mxwt_X3 [8], chn_a_rsci_d_mxwt_X3 [9], chn_a_rsci_d_mxwt_X3 [10], chn_a_rsci_d_mxwt_X3 [11], chn_a_rsci_d_mxwt_X3 [12], chn_a_rsci_d_mxwt_X3 [13], chn_a_rsci_d_mxwt_X3 [14], chn_a_rsci_d_mxwt_X3 [15], chn_a_rsci_d_mxwt_X3 [16], chn_a_rsci_d_mxwt_X3 [17], chn_a_rsci_d_mxwt_X3 [18], chn_a_rsci_d_mxwt_X3 [19], chn_a_rsci_d_mxwt_X3 [20], chn_a_rsci_d_mxwt_X3 [21], chn_a_rsci_d_mxwt_X3 [22] } = 0;
  assign { chn_a_rsci_d_mxwt_C3 [0], chn_a_rsci_d_mxwt_C3 [1], chn_a_rsci_d_mxwt_C3 [2], chn_a_rsci_d_mxwt_C3 [3], chn_a_rsci_d_mxwt_C3 [4], chn_a_rsci_d_mxwt_C3 [5], chn_a_rsci_d_mxwt_C3 [6], chn_a_rsci_d_mxwt_C3 [7], chn_a_rsci_d_mxwt_C3 [8], chn_a_rsci_d_mxwt_C3 [9], chn_a_rsci_d_mxwt_C3 [10], chn_a_rsci_d_mxwt_C3 [11], chn_a_rsci_d_mxwt_C3 [12], chn_a_rsci_d_mxwt_C3 [13], chn_a_rsci_d_mxwt_C3 [14], chn_a_rsci_d_mxwt_C3 [15], chn_a_rsci_d_mxwt_C3 [16], chn_a_rsci_d_mxwt_C3 [17], chn_a_rsci_d_mxwt_C3 [18], chn_a_rsci_d_mxwt_C3 [19], chn_a_rsci_d_mxwt_C3 [20], chn_a_rsci_d_mxwt_C3 [21], chn_a_rsci_d_mxwt_C3 [22] } = 0;
  assign chn_b_rsci_d_mxwt_C4 [30:23] = { 8{ and_dcpl_33 }} ;
  assign chn_b_rsci_d_mxwt_R4 [30:23] = { 8{ and_dcpl_33 }} & ( _046__R | ( { 8{ and_dcpl_33_T  }} & _046__C ));
  assign chn_b_rsci_d_mxwt_X4 [30:23] = { 8{ and_dcpl_33 }} & _046__X ;
  logic [31:0] chn_a_rsci_d_mxwt_C4 ;
  logic [31:0] chn_a_rsci_d_mxwt_R4 ;
  logic [31:0] chn_a_rsci_d_mxwt_X4 ;
  assign chn_a_rsci_d_mxwt_C4 [30:23] = { 8{ !and_dcpl_33 }} ;
  assign chn_a_rsci_d_mxwt_R4 [30:23] = { 8{ !and_dcpl_33 }} & ( _046__R | ( { 8{ and_dcpl_33_T  }} & _046__C ));
  assign chn_a_rsci_d_mxwt_X4 [30:23] = { 8{ !and_dcpl_33 }} & _046__X ;
  assign _015_ = _075_ ? _046_ : FpAdd_8U_23U_qr_lpi_1_dfm_4;
  logic [0:0] _075__C0 ;
  logic [0:0] _075__R0 ;
  logic [0:0] _075__X0 ;
  assign _075__C0 = | _015__C ;
  assign _075__X0 = | _015__X ;
  assign _015__T = _075_ ? ( { 8{ _075__T  }} | _046__T ) : ( { 8{ _075__T  }} | FpAdd_8U_23U_qr_lpi_1_dfm_4_T );
  assign _015__S = _075_ ? _046__S : FpAdd_8U_23U_qr_lpi_1_dfm_4_S ;
  assign _075__R0 = ( | (_015__R | ( _015__C & ( { 8{ _075_ }} & _046__T | { 8{ !_075_ }} & FpAdd_8U_23U_qr_lpi_1_dfm_4_T )))) && _046_ != FpAdd_8U_23U_qr_lpi_1_dfm_4 ;
  logic [7:0] _046__C0 ;
  logic [7:0] _046__R0 ;
  logic [7:0] _046__X0 ;
  assign _046__C0 = { 8{ _075_ }} ;
  assign _046__R0 = { 8{ _075_ }} & ( _015__R | ( { 8{ _075__T  }} & _015__C ));
  assign _046__X0 = { 8{ _075_ }} & _015__X ;
  logic [7:0] FpAdd_8U_23U_qr_lpi_1_dfm_4_C0 ;
  logic [7:0] FpAdd_8U_23U_qr_lpi_1_dfm_4_R0 ;
  logic [7:0] FpAdd_8U_23U_qr_lpi_1_dfm_4_X0 ;
  assign FpAdd_8U_23U_qr_lpi_1_dfm_4_C0 = { 8{ !_075_ }} ;
  assign FpAdd_8U_23U_qr_lpi_1_dfm_4_R0 = { 8{ !_075_ }} & ( _015__R | ( { 8{ _075__T  }} & _015__C ));
  assign FpAdd_8U_23U_qr_lpi_1_dfm_4_X0 = { 8{ !_075_ }} & _015__X ;
  assign _012_ = _073_ ? _182_ : FpAdd_8U_23U_mux_13_itm_3;
  logic [0:0] _073__C0 ;
  logic [0:0] _073__R0 ;
  logic [0:0] _073__X0 ;
  assign _073__C0 = | _012__C ;
  assign _073__X0 = | _012__X ;
  assign _012__T = _073_ ? ( { 1{ _073__T  }} | _182__T ) : ( { 1{ _073__T  }} | FpAdd_8U_23U_mux_13_itm_3_T );
  assign _012__S = _073_ ? _182__S : FpAdd_8U_23U_mux_13_itm_3_S ;
  assign _073__R0 = ( | (_012__R | ( _012__C & ( { 1{ _073_ }} & _182__T | { 1{ !_073_ }} & FpAdd_8U_23U_mux_13_itm_3_T )))) && _182_ != FpAdd_8U_23U_mux_13_itm_3 ;
  logic [0:0] _182__C0 ;
  logic [0:0] _182__R0 ;
  logic [0:0] _182__X0 ;
  assign _182__C0 = { 1{ _073_ }} ;
  assign _182__R0 = { 1{ _073_ }} & ( _012__R | ( { 1{ _073__T  }} & _012__C ));
  assign _182__X0 = { 1{ _073_ }} & _012__X ;
  logic [0:0] FpAdd_8U_23U_mux_13_itm_3_C0 ;
  logic [0:0] FpAdd_8U_23U_mux_13_itm_3_R0 ;
  logic [0:0] FpAdd_8U_23U_mux_13_itm_3_X0 ;
  assign FpAdd_8U_23U_mux_13_itm_3_C0 = { 1{ !_073_ }} ;
  assign FpAdd_8U_23U_mux_13_itm_3_R0 = { 1{ !_073_ }} & ( _012__R | ( { 1{ _073__T  }} & _012__C ));
  assign FpAdd_8U_23U_mux_13_itm_3_X0 = { 1{ !_073_ }} & _012__X ;
  assign _044_ = and_dcpl_29 ? b_sva_36[22:0] : FpAdd_8U_23U_a_sva_36[22:0];
  logic [0:0] and_dcpl_29_C3 ;
  logic [0:0] and_dcpl_29_R3 ;
  logic [0:0] and_dcpl_29_X3 ;
  assign and_dcpl_29_C3 = | _044__C ;
  assign and_dcpl_29_X3 = | _044__X ;
  assign _044__T = and_dcpl_29 ? ( { 23{ and_dcpl_29_T  }} | b_sva_36_T [22:0] ) : ( { 23{ and_dcpl_29_T  }} | FpAdd_8U_23U_a_sva_36_T [22:0] );
  assign _044__S = and_dcpl_29 ? b_sva_36_S : FpAdd_8U_23U_a_sva_36_S ;
  assign and_dcpl_29_R3 = ( | (_044__R | ( _044__C & ( { 23{ and_dcpl_29 }} & b_sva_36_T [22:0] | { 23{ !and_dcpl_29 }} & FpAdd_8U_23U_a_sva_36_T [22:0] )))) && b_sva_36[22:0] != FpAdd_8U_23U_a_sva_36[22:0] ;
  assign b_sva_36_C0 [22:0] = { 23{ and_dcpl_29 }} ;
  assign b_sva_36_R0 [22:0] = { 23{ and_dcpl_29 }} & ( _044__R | ( { 23{ and_dcpl_29_T  }} & _044__C ));
  assign b_sva_36_X0 [22:0] = { 23{ and_dcpl_29 }} & _044__X ;
  assign FpAdd_8U_23U_a_sva_36_C0 [22:0] = { 23{ !and_dcpl_29 }} ;
  assign FpAdd_8U_23U_a_sva_36_R0 [22:0] = { 23{ !and_dcpl_29 }} & ( _044__R | ( { 23{ and_dcpl_29_T  }} & _044__C ));
  assign FpAdd_8U_23U_a_sva_36_X0 [22:0] = { 23{ !and_dcpl_29 }} & _044__X ;
  assign _019_ = _071_ ? _044_ : FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3;
  logic [0:0] _071__C0 ;
  logic [0:0] _071__R0 ;
  logic [0:0] _071__X0 ;
  assign _071__C0 = | _019__C ;
  assign _071__X0 = | _019__X ;
  assign _019__T = _071_ ? ( { 23{ _071__T  }} | _044__T ) : ( { 23{ _071__T  }} | FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_T );
  assign _019__S = _071_ ? _044__S : FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_S ;
  assign _071__R0 = ( | (_019__R | ( _019__C & ( { 23{ _071_ }} & _044__T | { 23{ !_071_ }} & FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_T )))) && _044_ != FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3 ;
  logic [22:0] _044__C0 ;
  logic [22:0] _044__R0 ;
  logic [22:0] _044__X0 ;
  assign _044__C0 = { 23{ _071_ }} ;
  assign _044__R0 = { 23{ _071_ }} & ( _019__R | ( { 23{ _071__T  }} & _019__C ));
  assign _044__X0 = { 23{ _071_ }} & _019__X ;
  logic [22:0] FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_C0 ;
  logic [22:0] FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_R0 ;
  logic [22:0] FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_X0 ;
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_C0 = { 23{ !_071_ }} ;
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_R0 = { 23{ !_071_ }} & ( _019__R | ( { 23{ _071__T  }} & _019__C ));
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_X0 = { 23{ !_071_ }} & _019__X ;
  assign _045_ = and_dcpl_29 ? b_sva_36[30:23] : FpAdd_8U_23U_a_sva_36[30:23];
  logic [0:0] and_dcpl_29_C4 ;
  logic [0:0] and_dcpl_29_R4 ;
  logic [0:0] and_dcpl_29_X4 ;
  assign and_dcpl_29_C4 = | _045__C ;
  assign and_dcpl_29_X4 = | _045__X ;
  assign _045__T = and_dcpl_29 ? ( { 8{ and_dcpl_29_T  }} | b_sva_36_T [30:23] ) : ( { 8{ and_dcpl_29_T  }} | FpAdd_8U_23U_a_sva_36_T [30:23] );
  assign _045__S = and_dcpl_29 ? b_sva_36_S : FpAdd_8U_23U_a_sva_36_S ;
  assign and_dcpl_29_R4 = ( | (_045__R | ( _045__C & ( { 8{ and_dcpl_29 }} & b_sva_36_T [30:23] | { 8{ !and_dcpl_29 }} & FpAdd_8U_23U_a_sva_36_T [30:23] )))) && b_sva_36[30:23] != FpAdd_8U_23U_a_sva_36[30:23] ;
  assign b_sva_36_C0 [30:23] = { 8{ and_dcpl_29 }} ;
  assign b_sva_36_R0 [30:23] = { 8{ and_dcpl_29 }} & ( _045__R | ( { 8{ and_dcpl_29_T  }} & _045__C ));
  assign b_sva_36_X0 [30:23] = { 8{ and_dcpl_29 }} & _045__X ;
  assign FpAdd_8U_23U_a_sva_36_C0 [30:23] = { 8{ !and_dcpl_29 }} ;
  assign FpAdd_8U_23U_a_sva_36_R0 [30:23] = { 8{ !and_dcpl_29 }} & ( _045__R | ( { 8{ and_dcpl_29_T  }} & _045__C ));
  assign FpAdd_8U_23U_a_sva_36_X0 [30:23] = { 8{ !and_dcpl_29 }} & _045__X ;
  assign _021_ = _071_ ? _045_ : FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3;
  logic [0:0] _071__C1 ;
  logic [0:0] _071__R1 ;
  logic [0:0] _071__X1 ;
  assign _071__C1 = | _021__C ;
  assign _071__X1 = | _021__X ;
  assign _021__T = _071_ ? ( { 8{ _071__T  }} | _045__T ) : ( { 8{ _071__T  }} | FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_T );
  assign _021__S = _071_ ? _045__S : FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_S ;
  assign _071__R1 = ( | (_021__R | ( _021__C & ( { 8{ _071_ }} & _045__T | { 8{ !_071_ }} & FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_T )))) && _045_ != FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3 ;
  logic [7:0] _045__C0 ;
  logic [7:0] _045__R0 ;
  logic [7:0] _045__X0 ;
  assign _045__C0 = { 8{ _071_ }} ;
  assign _045__R0 = { 8{ _071_ }} & ( _021__R | ( { 8{ _071__T  }} & _021__C ));
  assign _045__X0 = { 8{ _071_ }} & _021__X ;
  logic [7:0] FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_C0 ;
  logic [7:0] FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_R0 ;
  logic [7:0] FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_X0 ;
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_C0 = { 8{ !_071_ }} ;
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_R0 = { 8{ !_071_ }} & ( _021__R | ( { 8{ _071__T  }} & _021__C ));
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_X0 = { 8{ !_071_ }} & _021__X ;
  assign _022_ = FpSignedBitsToFloat_8U_23U_1_and_3_cse ? FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3 : FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4;
  logic [0:0] FpSignedBitsToFloat_8U_23U_1_and_3_cse_C0 ;
  logic [0:0] FpSignedBitsToFloat_8U_23U_1_and_3_cse_R0 ;
  logic [0:0] FpSignedBitsToFloat_8U_23U_1_and_3_cse_X0 ;
  assign FpSignedBitsToFloat_8U_23U_1_and_3_cse_C0 = | _022__C ;
  assign FpSignedBitsToFloat_8U_23U_1_and_3_cse_X0 = | _022__X ;
  assign _022__T = FpSignedBitsToFloat_8U_23U_1_and_3_cse ? ( { 8{ FpSignedBitsToFloat_8U_23U_1_and_3_cse_T  }} | FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_T ) : ( { 8{ FpSignedBitsToFloat_8U_23U_1_and_3_cse_T  }} | FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_T );
  assign _022__S = FpSignedBitsToFloat_8U_23U_1_and_3_cse ? FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_S : FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_S ;
  assign FpSignedBitsToFloat_8U_23U_1_and_3_cse_R0 = ( | (_022__R | ( _022__C & ( { 8{ FpSignedBitsToFloat_8U_23U_1_and_3_cse }} & FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_T | { 8{ !FpSignedBitsToFloat_8U_23U_1_and_3_cse }} & FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_T )))) && FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3 != FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4 ;
  logic [7:0] FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_C1 ;
  logic [7:0] FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_R1 ;
  logic [7:0] FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_X1 ;
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_C1 = { 8{ FpSignedBitsToFloat_8U_23U_1_and_3_cse }} ;
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_R1 = { 8{ FpSignedBitsToFloat_8U_23U_1_and_3_cse }} & ( _022__R | ( { 8{ FpSignedBitsToFloat_8U_23U_1_and_3_cse_T  }} & _022__C ));
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_X1 = { 8{ FpSignedBitsToFloat_8U_23U_1_and_3_cse }} & _022__X ;
  logic [7:0] FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_C1 ;
  logic [7:0] FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_R1 ;
  logic [7:0] FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_X1 ;
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_C1 = { 8{ !FpSignedBitsToFloat_8U_23U_1_and_3_cse }} ;
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_R1 = { 8{ !FpSignedBitsToFloat_8U_23U_1_and_3_cse }} & ( _022__R | ( { 8{ FpSignedBitsToFloat_8U_23U_1_and_3_cse_T  }} & _022__C ));
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_X1 = { 8{ !FpSignedBitsToFloat_8U_23U_1_and_3_cse }} & _022__X ;
  assign _020_ = FpSignedBitsToFloat_8U_23U_1_and_3_cse ? FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3 : FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4;
  logic [0:0] FpSignedBitsToFloat_8U_23U_1_and_3_cse_C1 ;
  logic [0:0] FpSignedBitsToFloat_8U_23U_1_and_3_cse_R1 ;
  logic [0:0] FpSignedBitsToFloat_8U_23U_1_and_3_cse_X1 ;
  assign FpSignedBitsToFloat_8U_23U_1_and_3_cse_C1 = | _020__C ;
  assign FpSignedBitsToFloat_8U_23U_1_and_3_cse_X1 = | _020__X ;
  assign _020__T = FpSignedBitsToFloat_8U_23U_1_and_3_cse ? ( { 23{ FpSignedBitsToFloat_8U_23U_1_and_3_cse_T  }} | FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_T ) : ( { 23{ FpSignedBitsToFloat_8U_23U_1_and_3_cse_T  }} | FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_T );
  assign _020__S = FpSignedBitsToFloat_8U_23U_1_and_3_cse ? FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_S : FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_S ;
  assign FpSignedBitsToFloat_8U_23U_1_and_3_cse_R1 = ( | (_020__R | ( _020__C & ( { 23{ FpSignedBitsToFloat_8U_23U_1_and_3_cse }} & FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_T | { 23{ !FpSignedBitsToFloat_8U_23U_1_and_3_cse }} & FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_T )))) && FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3 != FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4 ;
  logic [22:0] FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_C1 ;
  logic [22:0] FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_R1 ;
  logic [22:0] FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_X1 ;
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_C1 = { 23{ FpSignedBitsToFloat_8U_23U_1_and_3_cse }} ;
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_R1 = { 23{ FpSignedBitsToFloat_8U_23U_1_and_3_cse }} & ( _020__R | ( { 23{ FpSignedBitsToFloat_8U_23U_1_and_3_cse_T  }} & _020__C ));
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_X1 = { 23{ FpSignedBitsToFloat_8U_23U_1_and_3_cse }} & _020__X ;
  logic [22:0] FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_C0 ;
  logic [22:0] FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_R0 ;
  logic [22:0] FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_X0 ;
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_C0 = { 23{ !FpSignedBitsToFloat_8U_23U_1_and_3_cse }} ;
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_R0 = { 23{ !FpSignedBitsToFloat_8U_23U_1_and_3_cse }} & ( _020__R | ( { 23{ FpSignedBitsToFloat_8U_23U_1_and_3_cse_T  }} & _020__C ));
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_X0 = { 23{ !FpSignedBitsToFloat_8U_23U_1_and_3_cse }} & _020__X ;
  assign _018_ = _069_ ? _096_ : FpNormalize_8U_49U_if_or_itm_2;
  logic [0:0] _069__C0 ;
  logic [0:0] _069__R0 ;
  logic [0:0] _069__X0 ;
  assign _069__C0 = | _018__C ;
  assign _069__X0 = | _018__X ;
  assign _018__T = _069_ ? ( { 1{ _069__T  }} | _096__T ) : ( { 1{ _069__T  }} | FpNormalize_8U_49U_if_or_itm_2_T );
  assign _018__S = _069_ ? _096__S : FpNormalize_8U_49U_if_or_itm_2_S ;
  assign _069__R0 = ( | (_018__R | ( _018__C & ( { 1{ _069_ }} & _096__T | { 1{ !_069_ }} & FpNormalize_8U_49U_if_or_itm_2_T )))) && _096_ != FpNormalize_8U_49U_if_or_itm_2 ;
  logic [0:0] _096__C0 ;
  logic [0:0] _096__R0 ;
  logic [0:0] _096__X0 ;
  assign _096__C0 = { 1{ _069_ }} ;
  assign _096__R0 = { 1{ _069_ }} & ( _018__R | ( { 1{ _069__T  }} & _018__C ));
  assign _096__X0 = { 1{ _069_ }} & _018__X ;
  logic [0:0] FpNormalize_8U_49U_if_or_itm_2_C1 ;
  logic [0:0] FpNormalize_8U_49U_if_or_itm_2_R1 ;
  logic [0:0] FpNormalize_8U_49U_if_or_itm_2_X1 ;
  assign FpNormalize_8U_49U_if_or_itm_2_C1 = { 1{ !_069_ }} ;
  assign FpNormalize_8U_49U_if_or_itm_2_R1 = { 1{ !_069_ }} & ( _018__R | ( { 1{ _069__T  }} & _018__C ));
  assign FpNormalize_8U_49U_if_or_itm_2_X1 = { 1{ !_069_ }} & _018__X ;
  assign _013_ = FpAdd_8U_23U_and_8_cse ? FpAdd_8U_23U_mux_13_itm_3 : FpAdd_8U_23U_mux_13_itm_4;
  logic [0:0] FpAdd_8U_23U_and_8_cse_C0 ;
  logic [0:0] FpAdd_8U_23U_and_8_cse_R0 ;
  logic [0:0] FpAdd_8U_23U_and_8_cse_X0 ;
  assign FpAdd_8U_23U_and_8_cse_C0 = | _013__C ;
  assign FpAdd_8U_23U_and_8_cse_X0 = | _013__X ;
  assign _013__T = FpAdd_8U_23U_and_8_cse ? ( { 1{ FpAdd_8U_23U_and_8_cse_T  }} | FpAdd_8U_23U_mux_13_itm_3_T ) : ( { 1{ FpAdd_8U_23U_and_8_cse_T  }} | FpAdd_8U_23U_mux_13_itm_4_T );
  assign _013__S = FpAdd_8U_23U_and_8_cse ? FpAdd_8U_23U_mux_13_itm_3_S : FpAdd_8U_23U_mux_13_itm_4_S ;
  assign FpAdd_8U_23U_and_8_cse_R0 = ( | (_013__R | ( _013__C & ( { 1{ FpAdd_8U_23U_and_8_cse }} & FpAdd_8U_23U_mux_13_itm_3_T | { 1{ !FpAdd_8U_23U_and_8_cse }} & FpAdd_8U_23U_mux_13_itm_4_T )))) && FpAdd_8U_23U_mux_13_itm_3 != FpAdd_8U_23U_mux_13_itm_4 ;
  logic [0:0] FpAdd_8U_23U_mux_13_itm_3_C1 ;
  logic [0:0] FpAdd_8U_23U_mux_13_itm_3_R1 ;
  logic [0:0] FpAdd_8U_23U_mux_13_itm_3_X1 ;
  assign FpAdd_8U_23U_mux_13_itm_3_C1 = { 1{ FpAdd_8U_23U_and_8_cse }} ;
  assign FpAdd_8U_23U_mux_13_itm_3_R1 = { 1{ FpAdd_8U_23U_and_8_cse }} & ( _013__R | ( { 1{ FpAdd_8U_23U_and_8_cse_T  }} & _013__C ));
  assign FpAdd_8U_23U_mux_13_itm_3_X1 = { 1{ FpAdd_8U_23U_and_8_cse }} & _013__X ;
  logic [0:0] FpAdd_8U_23U_mux_13_itm_4_C0 ;
  logic [0:0] FpAdd_8U_23U_mux_13_itm_4_R0 ;
  logic [0:0] FpAdd_8U_23U_mux_13_itm_4_X0 ;
  assign FpAdd_8U_23U_mux_13_itm_4_C0 = { 1{ !FpAdd_8U_23U_and_8_cse }} ;
  assign FpAdd_8U_23U_mux_13_itm_4_R0 = { 1{ !FpAdd_8U_23U_and_8_cse }} & ( _013__R | ( { 1{ FpAdd_8U_23U_and_8_cse_T  }} & _013__C ));
  assign FpAdd_8U_23U_mux_13_itm_4_X0 = { 1{ !FpAdd_8U_23U_and_8_cse }} & _013__X ;
  assign _028_ = FpAdd_8U_23U_and_8_cse ? IsNaN_8U_23U_land_lpi_1_dfm_5 : IsNaN_8U_23U_land_lpi_1_dfm_6;
  logic [0:0] FpAdd_8U_23U_and_8_cse_C1 ;
  logic [0:0] FpAdd_8U_23U_and_8_cse_R1 ;
  logic [0:0] FpAdd_8U_23U_and_8_cse_X1 ;
  assign FpAdd_8U_23U_and_8_cse_C1 = | _028__C ;
  assign FpAdd_8U_23U_and_8_cse_X1 = | _028__X ;
  assign _028__T = FpAdd_8U_23U_and_8_cse ? ( { 1{ FpAdd_8U_23U_and_8_cse_T  }} | IsNaN_8U_23U_land_lpi_1_dfm_5_T ) : ( { 1{ FpAdd_8U_23U_and_8_cse_T  }} | IsNaN_8U_23U_land_lpi_1_dfm_6_T );
  assign _028__S = FpAdd_8U_23U_and_8_cse ? IsNaN_8U_23U_land_lpi_1_dfm_5_S : IsNaN_8U_23U_land_lpi_1_dfm_6_S ;
  assign FpAdd_8U_23U_and_8_cse_R1 = ( | (_028__R | ( _028__C & ( { 1{ FpAdd_8U_23U_and_8_cse }} & IsNaN_8U_23U_land_lpi_1_dfm_5_T | { 1{ !FpAdd_8U_23U_and_8_cse }} & IsNaN_8U_23U_land_lpi_1_dfm_6_T )))) && IsNaN_8U_23U_land_lpi_1_dfm_5 != IsNaN_8U_23U_land_lpi_1_dfm_6 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_5_C1 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_5_R1 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_5_X1 ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_5_C1 = { 1{ FpAdd_8U_23U_and_8_cse }} ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_5_R1 = { 1{ FpAdd_8U_23U_and_8_cse }} & ( _028__R | ( { 1{ FpAdd_8U_23U_and_8_cse_T  }} & _028__C ));
  assign IsNaN_8U_23U_land_lpi_1_dfm_5_X1 = { 1{ FpAdd_8U_23U_and_8_cse }} & _028__X ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_6_C3 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_6_R3 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_6_X3 ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_6_C3 = { 1{ !FpAdd_8U_23U_and_8_cse }} ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_6_R3 = { 1{ !FpAdd_8U_23U_and_8_cse }} & ( _028__R | ( { 1{ FpAdd_8U_23U_and_8_cse_T  }} & _028__C ));
  assign IsNaN_8U_23U_land_lpi_1_dfm_6_X3 = { 1{ !FpAdd_8U_23U_and_8_cse }} & _028__X ;
  assign _008_ = FpAdd_8U_23U_and_8_cse ? FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0 : FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2;
  logic [0:0] FpAdd_8U_23U_and_8_cse_C2 ;
  logic [0:0] FpAdd_8U_23U_and_8_cse_R2 ;
  logic [0:0] FpAdd_8U_23U_and_8_cse_X2 ;
  assign FpAdd_8U_23U_and_8_cse_C2 = | _008__C ;
  assign FpAdd_8U_23U_and_8_cse_X2 = | _008__X ;
  assign _008__T = FpAdd_8U_23U_and_8_cse ? ( { 50{ FpAdd_8U_23U_and_8_cse_T  }} | FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_T ) : ( { 50{ FpAdd_8U_23U_and_8_cse_T  }} | FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_T );
  assign _008__S = FpAdd_8U_23U_and_8_cse ? FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_S : FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_S ;
  assign FpAdd_8U_23U_and_8_cse_R2 = ( | (_008__R | ( _008__C & ( { 50{ FpAdd_8U_23U_and_8_cse }} & FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_T | { 50{ !FpAdd_8U_23U_and_8_cse }} & FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_T )))) && FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0 != FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2 ;
  assign { FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_R0 [49:49] } = 0;
  assign { FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_X0 [49:49] } = 0;
  assign { FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_C0 [49:49] } = 0;
  assign { FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [0], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [1], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [2], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [3], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [4], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [5], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [6], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [7], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [8], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [9], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [10], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [11], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [12], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [13], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [14], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [15], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [16], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [17], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [18], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [19], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [20], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [21], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [22], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [23], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [24], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [25], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [26], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [27], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [28], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [29], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [30], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [31], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [32], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [33], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [34], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [35], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [36], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [37], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [38], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [39], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [40], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [41], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [42], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [43], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [44], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [45], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [46], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [47], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 [48] } = 0;
  assign { FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [0], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [1], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [2], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [3], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [4], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [5], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [6], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [7], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [8], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [9], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [10], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [11], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [12], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [13], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [14], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [15], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [16], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [17], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [18], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [19], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [20], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [21], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [22], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [23], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [24], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [25], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [26], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [27], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [28], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [29], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [30], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [31], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [32], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [33], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [34], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [35], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [36], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [37], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [38], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [39], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [40], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [41], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [42], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [43], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [44], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [45], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [46], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [47], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 [48] } = 0;
  assign { FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [0], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [1], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [2], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [3], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [4], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [5], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [6], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [7], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [8], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [9], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [10], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [11], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [12], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [13], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [14], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [15], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [16], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [17], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [18], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [19], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [20], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [21], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [22], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [23], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [24], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [25], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [26], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [27], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [28], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [29], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [30], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [31], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [32], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [33], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [34], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [35], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [36], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [37], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [38], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [39], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [40], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [41], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [42], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [43], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [44], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [45], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [46], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [47], FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 [48] } = 0;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_C1 ;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_R1 ;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_X1 ;
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_C1 = { 50{ FpAdd_8U_23U_and_8_cse }} ;
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_R1 = { 50{ FpAdd_8U_23U_and_8_cse }} & ( _008__R | ( { 50{ FpAdd_8U_23U_and_8_cse_T  }} & _008__C ));
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_X1 = { 50{ FpAdd_8U_23U_and_8_cse }} & _008__X ;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C5 ;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R5 ;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X5 ;
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C5 = { 50{ !FpAdd_8U_23U_and_8_cse }} ;
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R5 = { 50{ !FpAdd_8U_23U_and_8_cse }} & ( _008__R | ( { 50{ FpAdd_8U_23U_and_8_cse_T  }} & _008__C ));
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X5 = { 50{ !FpAdd_8U_23U_and_8_cse }} & _008__X ;
  assign _017_ = FpAdd_8U_23U_and_8_cse ? FpAdd_8U_23U_qr_lpi_1_dfm_5 : FpAdd_8U_23U_qr_lpi_1_dfm_6;
  logic [0:0] FpAdd_8U_23U_and_8_cse_C3 ;
  logic [0:0] FpAdd_8U_23U_and_8_cse_R3 ;
  logic [0:0] FpAdd_8U_23U_and_8_cse_X3 ;
  assign FpAdd_8U_23U_and_8_cse_C3 = | _017__C ;
  assign FpAdd_8U_23U_and_8_cse_X3 = | _017__X ;
  assign _017__T = FpAdd_8U_23U_and_8_cse ? ( { 8{ FpAdd_8U_23U_and_8_cse_T  }} | FpAdd_8U_23U_qr_lpi_1_dfm_5_T ) : ( { 8{ FpAdd_8U_23U_and_8_cse_T  }} | FpAdd_8U_23U_qr_lpi_1_dfm_6_T );
  assign _017__S = FpAdd_8U_23U_and_8_cse ? FpAdd_8U_23U_qr_lpi_1_dfm_5_S : FpAdd_8U_23U_qr_lpi_1_dfm_6_S ;
  assign FpAdd_8U_23U_and_8_cse_R3 = ( | (_017__R | ( _017__C & ( { 8{ FpAdd_8U_23U_and_8_cse }} & FpAdd_8U_23U_qr_lpi_1_dfm_5_T | { 8{ !FpAdd_8U_23U_and_8_cse }} & FpAdd_8U_23U_qr_lpi_1_dfm_6_T )))) && FpAdd_8U_23U_qr_lpi_1_dfm_5 != FpAdd_8U_23U_qr_lpi_1_dfm_6 ;
  logic [7:0] FpAdd_8U_23U_qr_lpi_1_dfm_5_C0 ;
  logic [7:0] FpAdd_8U_23U_qr_lpi_1_dfm_5_R0 ;
  logic [7:0] FpAdd_8U_23U_qr_lpi_1_dfm_5_X0 ;
  assign FpAdd_8U_23U_qr_lpi_1_dfm_5_C0 = { 8{ FpAdd_8U_23U_and_8_cse }} ;
  assign FpAdd_8U_23U_qr_lpi_1_dfm_5_R0 = { 8{ FpAdd_8U_23U_and_8_cse }} & ( _017__R | ( { 8{ FpAdd_8U_23U_and_8_cse_T  }} & _017__C ));
  assign FpAdd_8U_23U_qr_lpi_1_dfm_5_X0 = { 8{ FpAdd_8U_23U_and_8_cse }} & _017__X ;
  logic [7:0] FpAdd_8U_23U_qr_lpi_1_dfm_6_C5 ;
  logic [7:0] FpAdd_8U_23U_qr_lpi_1_dfm_6_R5 ;
  logic [7:0] FpAdd_8U_23U_qr_lpi_1_dfm_6_X5 ;
  assign FpAdd_8U_23U_qr_lpi_1_dfm_6_C5 = { 8{ !FpAdd_8U_23U_and_8_cse }} ;
  assign FpAdd_8U_23U_qr_lpi_1_dfm_6_R5 = { 8{ !FpAdd_8U_23U_and_8_cse }} & ( _017__R | ( { 8{ FpAdd_8U_23U_and_8_cse_T  }} & _017__C ));
  assign FpAdd_8U_23U_qr_lpi_1_dfm_6_X5 = { 8{ !FpAdd_8U_23U_and_8_cse }} & _017__X ;
  assign _025_ = FpAdd_8U_23U_and_8_cse ? IsNaN_8U_23U_1_land_lpi_1_dfm_3 : IsNaN_8U_23U_1_land_lpi_1_dfm_4;
  logic [0:0] FpAdd_8U_23U_and_8_cse_C4 ;
  logic [0:0] FpAdd_8U_23U_and_8_cse_R4 ;
  logic [0:0] FpAdd_8U_23U_and_8_cse_X4 ;
  assign FpAdd_8U_23U_and_8_cse_C4 = | _025__C ;
  assign FpAdd_8U_23U_and_8_cse_X4 = | _025__X ;
  assign _025__T = FpAdd_8U_23U_and_8_cse ? ( { 1{ FpAdd_8U_23U_and_8_cse_T  }} | IsNaN_8U_23U_1_land_lpi_1_dfm_3_T ) : ( { 1{ FpAdd_8U_23U_and_8_cse_T  }} | IsNaN_8U_23U_1_land_lpi_1_dfm_4_T );
  assign _025__S = FpAdd_8U_23U_and_8_cse ? IsNaN_8U_23U_1_land_lpi_1_dfm_3_S : IsNaN_8U_23U_1_land_lpi_1_dfm_4_S ;
  assign FpAdd_8U_23U_and_8_cse_R4 = ( | (_025__R | ( _025__C & ( { 1{ FpAdd_8U_23U_and_8_cse }} & IsNaN_8U_23U_1_land_lpi_1_dfm_3_T | { 1{ !FpAdd_8U_23U_and_8_cse }} & IsNaN_8U_23U_1_land_lpi_1_dfm_4_T )))) && IsNaN_8U_23U_1_land_lpi_1_dfm_3 != IsNaN_8U_23U_1_land_lpi_1_dfm_4 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_C1 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_R1 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_X1 ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_C1 = { 1{ FpAdd_8U_23U_and_8_cse }} ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_R1 = { 1{ FpAdd_8U_23U_and_8_cse }} & ( _025__R | ( { 1{ FpAdd_8U_23U_and_8_cse_T  }} & _025__C ));
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_X1 = { 1{ FpAdd_8U_23U_and_8_cse }} & _025__X ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_4_C2 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_4_R2 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_4_X2 ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_4_C2 = { 1{ !FpAdd_8U_23U_and_8_cse }} ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_4_R2 = { 1{ !FpAdd_8U_23U_and_8_cse }} & ( _025__R | ( { 1{ FpAdd_8U_23U_and_8_cse_T  }} & _025__C ));
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_4_X2 = { 1{ !FpAdd_8U_23U_and_8_cse }} & _025__X ;
  assign _037_ = _068_ ? _124_ : main_stage_v_3;
  logic [0:0] _068__C0 ;
  logic [0:0] _068__R0 ;
  logic [0:0] _068__X0 ;
  assign _068__C0 = | _037__C ;
  assign _068__X0 = | _037__X ;
  assign _037__T = _068_ ? ( { 1{ _068__T  }} | _124__T ) : ( { 1{ _068__T  }} | main_stage_v_3_T );
  assign _037__S = _068_ ? _124__S : main_stage_v_3_S ;
  assign _068__R0 = ( | (_037__R | ( _037__C & ( { 1{ _068_ }} & _124__T | { 1{ !_068_ }} & main_stage_v_3_T )))) && _124_ != main_stage_v_3 ;
  logic [0:0] _124__C0 ;
  logic [0:0] _124__R0 ;
  logic [0:0] _124__X0 ;
  assign _124__C0 = { 1{ _068_ }} ;
  assign _124__R0 = { 1{ _068_ }} & ( _037__R | ( { 1{ _068__T  }} & _037__C ));
  assign _124__X0 = { 1{ _068_ }} & _037__X ;
  logic [0:0] main_stage_v_3_C5 ;
  logic [0:0] main_stage_v_3_R5 ;
  logic [0:0] main_stage_v_3_X5 ;
  assign main_stage_v_3_C5 = { 1{ !_068_ }} ;
  assign main_stage_v_3_R5 = { 1{ !_068_ }} & ( _037__R | ( { 1{ _068__T  }} & _037__C ));
  assign main_stage_v_3_X5 = { 1{ !_068_ }} & _037__X ;
  assign _038_ = FpAdd_8U_23U_is_addition_and_cse ? FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3 : reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse;
  logic [0:0] FpAdd_8U_23U_is_addition_and_cse_C0 ;
  logic [0:0] FpAdd_8U_23U_is_addition_and_cse_R0 ;
  logic [0:0] FpAdd_8U_23U_is_addition_and_cse_X0 ;
  assign FpAdd_8U_23U_is_addition_and_cse_C0 = | _038__C ;
  assign FpAdd_8U_23U_is_addition_and_cse_X0 = | _038__X ;
  assign _038__T = FpAdd_8U_23U_is_addition_and_cse ? ( { 1{ FpAdd_8U_23U_is_addition_and_cse_T  }} | FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_T ) : ( { 1{ FpAdd_8U_23U_is_addition_and_cse_T  }} | reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_T );
  assign _038__S = FpAdd_8U_23U_is_addition_and_cse ? FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_S : reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_S ;
  assign FpAdd_8U_23U_is_addition_and_cse_R0 = ( | (_038__R | ( _038__C & ( { 1{ FpAdd_8U_23U_is_addition_and_cse }} & FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_T | { 1{ !FpAdd_8U_23U_is_addition_and_cse }} & reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_T )))) && FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3 != reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse ;
  logic [0:0] FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_C0 ;
  logic [0:0] FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_R0 ;
  logic [0:0] FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_X0 ;
  assign FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_C0 = { 1{ FpAdd_8U_23U_is_addition_and_cse }} ;
  assign FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_R0 = { 1{ FpAdd_8U_23U_is_addition_and_cse }} & ( _038__R | ( { 1{ FpAdd_8U_23U_is_addition_and_cse_T  }} & _038__C ));
  assign FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_X0 = { 1{ FpAdd_8U_23U_is_addition_and_cse }} & _038__X ;
  logic [0:0] reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_C2 ;
  logic [0:0] reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_R2 ;
  logic [0:0] reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_X2 ;
  assign reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_C2 = { 1{ !FpAdd_8U_23U_is_addition_and_cse }} ;
  assign reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_R2 = { 1{ !FpAdd_8U_23U_is_addition_and_cse }} & ( _038__R | ( { 1{ FpAdd_8U_23U_is_addition_and_cse_T  }} & _038__C ));
  assign reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_X2 = { 1{ !FpAdd_8U_23U_is_addition_and_cse }} & _038__X ;
  assign _027_ = FpAdd_8U_23U_is_addition_and_cse ? IsNaN_8U_23U_land_lpi_1_dfm_st_4 : IsNaN_8U_23U_land_lpi_1_dfm_5;
  logic [0:0] FpAdd_8U_23U_is_addition_and_cse_C1 ;
  logic [0:0] FpAdd_8U_23U_is_addition_and_cse_R1 ;
  logic [0:0] FpAdd_8U_23U_is_addition_and_cse_X1 ;
  assign FpAdd_8U_23U_is_addition_and_cse_C1 = | _027__C ;
  assign FpAdd_8U_23U_is_addition_and_cse_X1 = | _027__X ;
  assign _027__T = FpAdd_8U_23U_is_addition_and_cse ? ( { 1{ FpAdd_8U_23U_is_addition_and_cse_T  }} | IsNaN_8U_23U_land_lpi_1_dfm_st_4_T ) : ( { 1{ FpAdd_8U_23U_is_addition_and_cse_T  }} | IsNaN_8U_23U_land_lpi_1_dfm_5_T );
  assign _027__S = FpAdd_8U_23U_is_addition_and_cse ? IsNaN_8U_23U_land_lpi_1_dfm_st_4_S : IsNaN_8U_23U_land_lpi_1_dfm_5_S ;
  assign FpAdd_8U_23U_is_addition_and_cse_R1 = ( | (_027__R | ( _027__C & ( { 1{ FpAdd_8U_23U_is_addition_and_cse }} & IsNaN_8U_23U_land_lpi_1_dfm_st_4_T | { 1{ !FpAdd_8U_23U_is_addition_and_cse }} & IsNaN_8U_23U_land_lpi_1_dfm_5_T )))) && IsNaN_8U_23U_land_lpi_1_dfm_st_4 != IsNaN_8U_23U_land_lpi_1_dfm_5 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_4_C5 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_4_R5 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_4_X5 ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_4_C5 = { 1{ FpAdd_8U_23U_is_addition_and_cse }} ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_4_R5 = { 1{ FpAdd_8U_23U_is_addition_and_cse }} & ( _027__R | ( { 1{ FpAdd_8U_23U_is_addition_and_cse_T  }} & _027__C ));
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_4_X5 = { 1{ FpAdd_8U_23U_is_addition_and_cse }} & _027__X ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_5_C2 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_5_R2 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_5_X2 ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_5_C2 = { 1{ !FpAdd_8U_23U_is_addition_and_cse }} ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_5_R2 = { 1{ !FpAdd_8U_23U_is_addition_and_cse }} & ( _027__R | ( { 1{ FpAdd_8U_23U_is_addition_and_cse_T  }} & _027__C ));
  assign IsNaN_8U_23U_land_lpi_1_dfm_5_X2 = { 1{ !FpAdd_8U_23U_is_addition_and_cse }} & _027__X ;
  assign _007_ = FpAdd_8U_23U_is_addition_and_cse ? FpAdd_8U_23U_b_int_mant_p1_lshift_itm : FpAdd_8U_23U_b_int_mant_p1_sva_2;
  logic [0:0] FpAdd_8U_23U_is_addition_and_cse_C2 ;
  logic [0:0] FpAdd_8U_23U_is_addition_and_cse_R2 ;
  logic [0:0] FpAdd_8U_23U_is_addition_and_cse_X2 ;
  assign FpAdd_8U_23U_is_addition_and_cse_C2 = | _007__C ;
  assign FpAdd_8U_23U_is_addition_and_cse_X2 = | _007__X ;
  assign _007__T = FpAdd_8U_23U_is_addition_and_cse ? ( { 49{ FpAdd_8U_23U_is_addition_and_cse_T  }} | FpAdd_8U_23U_b_int_mant_p1_lshift_itm_T ) : ( { 49{ FpAdd_8U_23U_is_addition_and_cse_T  }} | FpAdd_8U_23U_b_int_mant_p1_sva_2_T );
  assign _007__S = FpAdd_8U_23U_is_addition_and_cse ? FpAdd_8U_23U_b_int_mant_p1_lshift_itm_S : FpAdd_8U_23U_b_int_mant_p1_sva_2_S ;
  assign FpAdd_8U_23U_is_addition_and_cse_R2 = ( | (_007__R | ( _007__C & ( { 49{ FpAdd_8U_23U_is_addition_and_cse }} & FpAdd_8U_23U_b_int_mant_p1_lshift_itm_T | { 49{ !FpAdd_8U_23U_is_addition_and_cse }} & FpAdd_8U_23U_b_int_mant_p1_sva_2_T )))) && FpAdd_8U_23U_b_int_mant_p1_lshift_itm != FpAdd_8U_23U_b_int_mant_p1_sva_2 ;
  logic [48:0] FpAdd_8U_23U_b_int_mant_p1_lshift_itm_C0 ;
  logic [48:0] FpAdd_8U_23U_b_int_mant_p1_lshift_itm_R0 ;
  logic [48:0] FpAdd_8U_23U_b_int_mant_p1_lshift_itm_X0 ;
  assign FpAdd_8U_23U_b_int_mant_p1_lshift_itm_C0 = { 49{ FpAdd_8U_23U_is_addition_and_cse }} ;
  assign FpAdd_8U_23U_b_int_mant_p1_lshift_itm_R0 = { 49{ FpAdd_8U_23U_is_addition_and_cse }} & ( _007__R | ( { 49{ FpAdd_8U_23U_is_addition_and_cse_T  }} & _007__C ));
  assign FpAdd_8U_23U_b_int_mant_p1_lshift_itm_X0 = { 49{ FpAdd_8U_23U_is_addition_and_cse }} & _007__X ;
  logic [48:0] FpAdd_8U_23U_b_int_mant_p1_sva_2_C2 ;
  logic [48:0] FpAdd_8U_23U_b_int_mant_p1_sva_2_R2 ;
  logic [48:0] FpAdd_8U_23U_b_int_mant_p1_sva_2_X2 ;
  assign FpAdd_8U_23U_b_int_mant_p1_sva_2_C2 = { 49{ !FpAdd_8U_23U_is_addition_and_cse }} ;
  assign FpAdd_8U_23U_b_int_mant_p1_sva_2_R2 = { 49{ !FpAdd_8U_23U_is_addition_and_cse }} & ( _007__R | ( { 49{ FpAdd_8U_23U_is_addition_and_cse_T  }} & _007__C ));
  assign FpAdd_8U_23U_b_int_mant_p1_sva_2_X2 = { 49{ !FpAdd_8U_23U_is_addition_and_cse }} & _007__X ;
  assign _005_ = FpAdd_8U_23U_is_addition_and_cse ? FpAdd_8U_23U_a_int_mant_p1_lshift_itm : FpAdd_8U_23U_a_int_mant_p1_sva_2;
  logic [0:0] FpAdd_8U_23U_is_addition_and_cse_C3 ;
  logic [0:0] FpAdd_8U_23U_is_addition_and_cse_R3 ;
  logic [0:0] FpAdd_8U_23U_is_addition_and_cse_X3 ;
  assign FpAdd_8U_23U_is_addition_and_cse_C3 = | _005__C ;
  assign FpAdd_8U_23U_is_addition_and_cse_X3 = | _005__X ;
  assign _005__T = FpAdd_8U_23U_is_addition_and_cse ? ( { 49{ FpAdd_8U_23U_is_addition_and_cse_T  }} | FpAdd_8U_23U_a_int_mant_p1_lshift_itm_T ) : ( { 49{ FpAdd_8U_23U_is_addition_and_cse_T  }} | FpAdd_8U_23U_a_int_mant_p1_sva_2_T );
  assign _005__S = FpAdd_8U_23U_is_addition_and_cse ? FpAdd_8U_23U_a_int_mant_p1_lshift_itm_S : FpAdd_8U_23U_a_int_mant_p1_sva_2_S ;
  assign FpAdd_8U_23U_is_addition_and_cse_R3 = ( | (_005__R | ( _005__C & ( { 49{ FpAdd_8U_23U_is_addition_and_cse }} & FpAdd_8U_23U_a_int_mant_p1_lshift_itm_T | { 49{ !FpAdd_8U_23U_is_addition_and_cse }} & FpAdd_8U_23U_a_int_mant_p1_sva_2_T )))) && FpAdd_8U_23U_a_int_mant_p1_lshift_itm != FpAdd_8U_23U_a_int_mant_p1_sva_2 ;
  logic [48:0] FpAdd_8U_23U_a_int_mant_p1_lshift_itm_C0 ;
  logic [48:0] FpAdd_8U_23U_a_int_mant_p1_lshift_itm_R0 ;
  logic [48:0] FpAdd_8U_23U_a_int_mant_p1_lshift_itm_X0 ;
  assign FpAdd_8U_23U_a_int_mant_p1_lshift_itm_C0 = { 49{ FpAdd_8U_23U_is_addition_and_cse }} ;
  assign FpAdd_8U_23U_a_int_mant_p1_lshift_itm_R0 = { 49{ FpAdd_8U_23U_is_addition_and_cse }} & ( _005__R | ( { 49{ FpAdd_8U_23U_is_addition_and_cse_T  }} & _005__C ));
  assign FpAdd_8U_23U_a_int_mant_p1_lshift_itm_X0 = { 49{ FpAdd_8U_23U_is_addition_and_cse }} & _005__X ;
  logic [48:0] FpAdd_8U_23U_a_int_mant_p1_sva_2_C2 ;
  logic [48:0] FpAdd_8U_23U_a_int_mant_p1_sva_2_R2 ;
  logic [48:0] FpAdd_8U_23U_a_int_mant_p1_sva_2_X2 ;
  assign FpAdd_8U_23U_a_int_mant_p1_sva_2_C2 = { 49{ !FpAdd_8U_23U_is_addition_and_cse }} ;
  assign FpAdd_8U_23U_a_int_mant_p1_sva_2_R2 = { 49{ !FpAdd_8U_23U_is_addition_and_cse }} & ( _005__R | ( { 49{ FpAdd_8U_23U_is_addition_and_cse_T  }} & _005__C ));
  assign FpAdd_8U_23U_a_int_mant_p1_sva_2_X2 = { 49{ !FpAdd_8U_23U_is_addition_and_cse }} & _005__X ;
  assign _016_ = FpAdd_8U_23U_is_addition_and_cse ? FpAdd_8U_23U_qr_lpi_1_dfm_4 : FpAdd_8U_23U_qr_lpi_1_dfm_5;
  logic [0:0] FpAdd_8U_23U_is_addition_and_cse_C4 ;
  logic [0:0] FpAdd_8U_23U_is_addition_and_cse_R4 ;
  logic [0:0] FpAdd_8U_23U_is_addition_and_cse_X4 ;
  assign FpAdd_8U_23U_is_addition_and_cse_C4 = | _016__C ;
  assign FpAdd_8U_23U_is_addition_and_cse_X4 = | _016__X ;
  assign _016__T = FpAdd_8U_23U_is_addition_and_cse ? ( { 8{ FpAdd_8U_23U_is_addition_and_cse_T  }} | FpAdd_8U_23U_qr_lpi_1_dfm_4_T ) : ( { 8{ FpAdd_8U_23U_is_addition_and_cse_T  }} | FpAdd_8U_23U_qr_lpi_1_dfm_5_T );
  assign _016__S = FpAdd_8U_23U_is_addition_and_cse ? FpAdd_8U_23U_qr_lpi_1_dfm_4_S : FpAdd_8U_23U_qr_lpi_1_dfm_5_S ;
  assign FpAdd_8U_23U_is_addition_and_cse_R4 = ( | (_016__R | ( _016__C & ( { 8{ FpAdd_8U_23U_is_addition_and_cse }} & FpAdd_8U_23U_qr_lpi_1_dfm_4_T | { 8{ !FpAdd_8U_23U_is_addition_and_cse }} & FpAdd_8U_23U_qr_lpi_1_dfm_5_T )))) && FpAdd_8U_23U_qr_lpi_1_dfm_4 != FpAdd_8U_23U_qr_lpi_1_dfm_5 ;
  logic [7:0] FpAdd_8U_23U_qr_lpi_1_dfm_4_C1 ;
  logic [7:0] FpAdd_8U_23U_qr_lpi_1_dfm_4_R1 ;
  logic [7:0] FpAdd_8U_23U_qr_lpi_1_dfm_4_X1 ;
  assign FpAdd_8U_23U_qr_lpi_1_dfm_4_C1 = { 8{ FpAdd_8U_23U_is_addition_and_cse }} ;
  assign FpAdd_8U_23U_qr_lpi_1_dfm_4_R1 = { 8{ FpAdd_8U_23U_is_addition_and_cse }} & ( _016__R | ( { 8{ FpAdd_8U_23U_is_addition_and_cse_T  }} & _016__C ));
  assign FpAdd_8U_23U_qr_lpi_1_dfm_4_X1 = { 8{ FpAdd_8U_23U_is_addition_and_cse }} & _016__X ;
  logic [7:0] FpAdd_8U_23U_qr_lpi_1_dfm_5_C1 ;
  logic [7:0] FpAdd_8U_23U_qr_lpi_1_dfm_5_R1 ;
  logic [7:0] FpAdd_8U_23U_qr_lpi_1_dfm_5_X1 ;
  assign FpAdd_8U_23U_qr_lpi_1_dfm_5_C1 = { 8{ !FpAdd_8U_23U_is_addition_and_cse }} ;
  assign FpAdd_8U_23U_qr_lpi_1_dfm_5_R1 = { 8{ !FpAdd_8U_23U_is_addition_and_cse }} & ( _016__R | ( { 8{ FpAdd_8U_23U_is_addition_and_cse_T  }} & _016__C ));
  assign FpAdd_8U_23U_qr_lpi_1_dfm_5_X1 = { 8{ !FpAdd_8U_23U_is_addition_and_cse }} & _016__X ;
  assign _010_ = FpAdd_8U_23U_is_addition_and_cse ? FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4 : FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5;
  logic [0:0] FpAdd_8U_23U_is_addition_and_cse_C5 ;
  logic [0:0] FpAdd_8U_23U_is_addition_and_cse_R5 ;
  logic [0:0] FpAdd_8U_23U_is_addition_and_cse_X5 ;
  assign FpAdd_8U_23U_is_addition_and_cse_C5 = | _010__C ;
  assign FpAdd_8U_23U_is_addition_and_cse_X5 = | _010__X ;
  assign _010__T = FpAdd_8U_23U_is_addition_and_cse ? ( { 1{ FpAdd_8U_23U_is_addition_and_cse_T  }} | FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_T ) : ( { 1{ FpAdd_8U_23U_is_addition_and_cse_T  }} | FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_T );
  assign _010__S = FpAdd_8U_23U_is_addition_and_cse ? FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_S : FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_S ;
  assign FpAdd_8U_23U_is_addition_and_cse_R5 = ( | (_010__R | ( _010__C & ( { 1{ FpAdd_8U_23U_is_addition_and_cse }} & FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_T | { 1{ !FpAdd_8U_23U_is_addition_and_cse }} & FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_T )))) && FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4 != FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5 ;
  logic [0:0] FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_C2 ;
  logic [0:0] FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_R2 ;
  logic [0:0] FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_X2 ;
  assign FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_C2 = { 1{ FpAdd_8U_23U_is_addition_and_cse }} ;
  assign FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_R2 = { 1{ FpAdd_8U_23U_is_addition_and_cse }} & ( _010__R | ( { 1{ FpAdd_8U_23U_is_addition_and_cse_T  }} & _010__C ));
  assign FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_X2 = { 1{ FpAdd_8U_23U_is_addition_and_cse }} & _010__X ;
  logic [0:0] FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_C2 ;
  logic [0:0] FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_R2 ;
  logic [0:0] FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_X2 ;
  assign FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_C2 = { 1{ !FpAdd_8U_23U_is_addition_and_cse }} ;
  assign FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_R2 = { 1{ !FpAdd_8U_23U_is_addition_and_cse }} & ( _010__R | ( { 1{ FpAdd_8U_23U_is_addition_and_cse_T  }} & _010__C ));
  assign FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_X2 = { 1{ !FpAdd_8U_23U_is_addition_and_cse }} & _010__X ;
  assign _024_ = FpAdd_8U_23U_is_addition_and_cse ? IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0 : IsNaN_8U_23U_1_land_lpi_1_dfm_3;
  logic [0:0] FpAdd_8U_23U_is_addition_and_cse_C6 ;
  logic [0:0] FpAdd_8U_23U_is_addition_and_cse_R6 ;
  logic [0:0] FpAdd_8U_23U_is_addition_and_cse_X6 ;
  assign FpAdd_8U_23U_is_addition_and_cse_C6 = | _024__C ;
  assign FpAdd_8U_23U_is_addition_and_cse_X6 = | _024__X ;
  assign _024__T = FpAdd_8U_23U_is_addition_and_cse ? ( { 1{ FpAdd_8U_23U_is_addition_and_cse_T  }} | IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_T ) : ( { 1{ FpAdd_8U_23U_is_addition_and_cse_T  }} | IsNaN_8U_23U_1_land_lpi_1_dfm_3_T );
  assign _024__S = FpAdd_8U_23U_is_addition_and_cse ? IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_S : IsNaN_8U_23U_1_land_lpi_1_dfm_3_S ;
  assign FpAdd_8U_23U_is_addition_and_cse_R6 = ( | (_024__R | ( _024__C & ( { 1{ FpAdd_8U_23U_is_addition_and_cse }} & IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_T | { 1{ !FpAdd_8U_23U_is_addition_and_cse }} & IsNaN_8U_23U_1_land_lpi_1_dfm_3_T )))) && IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0 != IsNaN_8U_23U_1_land_lpi_1_dfm_3 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_C1 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_R1 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_X1 ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_C1 = { 1{ FpAdd_8U_23U_is_addition_and_cse }} ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_R1 = { 1{ FpAdd_8U_23U_is_addition_and_cse }} & ( _024__R | ( { 1{ FpAdd_8U_23U_is_addition_and_cse_T  }} & _024__C ));
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_X1 = { 1{ FpAdd_8U_23U_is_addition_and_cse }} & _024__X ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_C2 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_R2 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_X2 ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_C2 = { 1{ !FpAdd_8U_23U_is_addition_and_cse }} ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_R2 = { 1{ !FpAdd_8U_23U_is_addition_and_cse }} & ( _024__R | ( { 1{ FpAdd_8U_23U_is_addition_and_cse_T  }} & _024__C ));
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_X2 = { 1{ !FpAdd_8U_23U_is_addition_and_cse }} & _024__X ;
  assign _036_ = _066_ ? _123_ : main_stage_v_2;
  logic [0:0] _066__C0 ;
  logic [0:0] _066__R0 ;
  logic [0:0] _066__X0 ;
  assign _066__C0 = | _036__C ;
  assign _066__X0 = | _036__X ;
  assign _036__T = _066_ ? ( { 1{ _066__T  }} | _123__T ) : ( { 1{ _066__T  }} | main_stage_v_2_T );
  assign _036__S = _066_ ? _123__S : main_stage_v_2_S ;
  assign _066__R0 = ( | (_036__R | ( _036__C & ( { 1{ _066_ }} & _123__T | { 1{ !_066_ }} & main_stage_v_2_T )))) && _123_ != main_stage_v_2 ;
  logic [0:0] _123__C0 ;
  logic [0:0] _123__R0 ;
  logic [0:0] _123__X0 ;
  assign _123__C0 = { 1{ _066_ }} ;
  assign _123__R0 = { 1{ _066_ }} & ( _036__R | ( { 1{ _066__T  }} & _036__C ));
  assign _123__X0 = { 1{ _066_ }} & _036__X ;
  logic [0:0] main_stage_v_2_C7 ;
  logic [0:0] main_stage_v_2_R7 ;
  logic [0:0] main_stage_v_2_X7 ;
  assign main_stage_v_2_C7 = { 1{ !_066_ }} ;
  assign main_stage_v_2_R7 = { 1{ !_066_ }} & ( _036__R | ( { 1{ _066__T  }} & _036__C ));
  assign main_stage_v_2_X7 = { 1{ !_066_ }} & _036__X ;
  assign _011_ = IsNaN_8U_23U_aelse_and_cse ? _187_ : FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3;
  logic [0:0] IsNaN_8U_23U_aelse_and_cse_C0 ;
  logic [0:0] IsNaN_8U_23U_aelse_and_cse_R0 ;
  logic [0:0] IsNaN_8U_23U_aelse_and_cse_X0 ;
  assign IsNaN_8U_23U_aelse_and_cse_C0 = | _011__C ;
  assign IsNaN_8U_23U_aelse_and_cse_X0 = | _011__X ;
  assign _011__T = IsNaN_8U_23U_aelse_and_cse ? ( { 1{ IsNaN_8U_23U_aelse_and_cse_T  }} | _187__T ) : ( { 1{ IsNaN_8U_23U_aelse_and_cse_T  }} | FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_T );
  assign _011__S = IsNaN_8U_23U_aelse_and_cse ? _187__S : FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_S ;
  assign IsNaN_8U_23U_aelse_and_cse_R0 = ( | (_011__R | ( _011__C & ( { 1{ IsNaN_8U_23U_aelse_and_cse }} & _187__T | { 1{ !IsNaN_8U_23U_aelse_and_cse }} & FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_T )))) && _187_ != FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3 ;
  logic [0:0] _187__C0 ;
  logic [0:0] _187__R0 ;
  logic [0:0] _187__X0 ;
  assign _187__C0 = { 1{ IsNaN_8U_23U_aelse_and_cse }} ;
  assign _187__R0 = { 1{ IsNaN_8U_23U_aelse_and_cse }} & ( _011__R | ( { 1{ IsNaN_8U_23U_aelse_and_cse_T  }} & _011__C ));
  assign _187__X0 = { 1{ IsNaN_8U_23U_aelse_and_cse }} & _011__X ;
  logic [0:0] FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_C1 ;
  logic [0:0] FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_R1 ;
  logic [0:0] FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_X1 ;
  assign FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_C1 = { 1{ !IsNaN_8U_23U_aelse_and_cse }} ;
  assign FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_R1 = { 1{ !IsNaN_8U_23U_aelse_and_cse }} & ( _011__R | ( { 1{ IsNaN_8U_23U_aelse_and_cse_T  }} & _011__C ));
  assign FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_X1 = { 1{ !IsNaN_8U_23U_aelse_and_cse }} & _011__X ;
  assign _006_ = IsNaN_8U_23U_aelse_and_cse ? chn_a_rsci_d_mxwt : FpAdd_8U_23U_a_sva_36;
  logic [0:0] IsNaN_8U_23U_aelse_and_cse_C1 ;
  logic [0:0] IsNaN_8U_23U_aelse_and_cse_R1 ;
  logic [0:0] IsNaN_8U_23U_aelse_and_cse_X1 ;
  assign IsNaN_8U_23U_aelse_and_cse_C1 = | _006__C ;
  assign IsNaN_8U_23U_aelse_and_cse_X1 = | _006__X ;
  assign _006__T = IsNaN_8U_23U_aelse_and_cse ? ( { 32{ IsNaN_8U_23U_aelse_and_cse_T  }} | chn_a_rsci_d_mxwt_T ) : ( { 32{ IsNaN_8U_23U_aelse_and_cse_T  }} | FpAdd_8U_23U_a_sva_36_T );
  assign _006__S = IsNaN_8U_23U_aelse_and_cse ? chn_a_rsci_d_mxwt_S : FpAdd_8U_23U_a_sva_36_S ;
  assign IsNaN_8U_23U_aelse_and_cse_R1 = ( | (_006__R | ( _006__C & ( { 32{ IsNaN_8U_23U_aelse_and_cse }} & chn_a_rsci_d_mxwt_T | { 32{ !IsNaN_8U_23U_aelse_and_cse }} & FpAdd_8U_23U_a_sva_36_T )))) && chn_a_rsci_d_mxwt != FpAdd_8U_23U_a_sva_36 ;
  assign { chn_a_rsci_d_mxwt_R4 [0], chn_a_rsci_d_mxwt_R4 [1], chn_a_rsci_d_mxwt_R4 [2], chn_a_rsci_d_mxwt_R4 [3], chn_a_rsci_d_mxwt_R4 [4], chn_a_rsci_d_mxwt_R4 [5], chn_a_rsci_d_mxwt_R4 [6], chn_a_rsci_d_mxwt_R4 [7], chn_a_rsci_d_mxwt_R4 [8], chn_a_rsci_d_mxwt_R4 [9], chn_a_rsci_d_mxwt_R4 [10], chn_a_rsci_d_mxwt_R4 [11], chn_a_rsci_d_mxwt_R4 [12], chn_a_rsci_d_mxwt_R4 [13], chn_a_rsci_d_mxwt_R4 [14], chn_a_rsci_d_mxwt_R4 [15], chn_a_rsci_d_mxwt_R4 [16], chn_a_rsci_d_mxwt_R4 [17], chn_a_rsci_d_mxwt_R4 [18], chn_a_rsci_d_mxwt_R4 [19], chn_a_rsci_d_mxwt_R4 [20], chn_a_rsci_d_mxwt_R4 [21], chn_a_rsci_d_mxwt_R4 [22], chn_a_rsci_d_mxwt_R4 [31:31] } = 0;
  assign { chn_a_rsci_d_mxwt_X4 [0], chn_a_rsci_d_mxwt_X4 [1], chn_a_rsci_d_mxwt_X4 [2], chn_a_rsci_d_mxwt_X4 [3], chn_a_rsci_d_mxwt_X4 [4], chn_a_rsci_d_mxwt_X4 [5], chn_a_rsci_d_mxwt_X4 [6], chn_a_rsci_d_mxwt_X4 [7], chn_a_rsci_d_mxwt_X4 [8], chn_a_rsci_d_mxwt_X4 [9], chn_a_rsci_d_mxwt_X4 [10], chn_a_rsci_d_mxwt_X4 [11], chn_a_rsci_d_mxwt_X4 [12], chn_a_rsci_d_mxwt_X4 [13], chn_a_rsci_d_mxwt_X4 [14], chn_a_rsci_d_mxwt_X4 [15], chn_a_rsci_d_mxwt_X4 [16], chn_a_rsci_d_mxwt_X4 [17], chn_a_rsci_d_mxwt_X4 [18], chn_a_rsci_d_mxwt_X4 [19], chn_a_rsci_d_mxwt_X4 [20], chn_a_rsci_d_mxwt_X4 [21], chn_a_rsci_d_mxwt_X4 [22], chn_a_rsci_d_mxwt_X4 [31:31] } = 0;
  assign { chn_a_rsci_d_mxwt_C4 [0], chn_a_rsci_d_mxwt_C4 [1], chn_a_rsci_d_mxwt_C4 [2], chn_a_rsci_d_mxwt_C4 [3], chn_a_rsci_d_mxwt_C4 [4], chn_a_rsci_d_mxwt_C4 [5], chn_a_rsci_d_mxwt_C4 [6], chn_a_rsci_d_mxwt_C4 [7], chn_a_rsci_d_mxwt_C4 [8], chn_a_rsci_d_mxwt_C4 [9], chn_a_rsci_d_mxwt_C4 [10], chn_a_rsci_d_mxwt_C4 [11], chn_a_rsci_d_mxwt_C4 [12], chn_a_rsci_d_mxwt_C4 [13], chn_a_rsci_d_mxwt_C4 [14], chn_a_rsci_d_mxwt_C4 [15], chn_a_rsci_d_mxwt_C4 [16], chn_a_rsci_d_mxwt_C4 [17], chn_a_rsci_d_mxwt_C4 [18], chn_a_rsci_d_mxwt_C4 [19], chn_a_rsci_d_mxwt_C4 [20], chn_a_rsci_d_mxwt_C4 [21], chn_a_rsci_d_mxwt_C4 [22], chn_a_rsci_d_mxwt_C4 [31:31] } = 0;
  logic [31:0] chn_a_rsci_d_mxwt_C5 ;
  logic [31:0] chn_a_rsci_d_mxwt_R5 ;
  logic [31:0] chn_a_rsci_d_mxwt_X5 ;
  assign chn_a_rsci_d_mxwt_C5 = { 32{ IsNaN_8U_23U_aelse_and_cse }} ;
  assign chn_a_rsci_d_mxwt_R5 = { 32{ IsNaN_8U_23U_aelse_and_cse }} & ( _006__R | ( { 32{ IsNaN_8U_23U_aelse_and_cse_T  }} & _006__C ));
  assign chn_a_rsci_d_mxwt_X5 = { 32{ IsNaN_8U_23U_aelse_and_cse }} & _006__X ;
  logic [31:0] FpAdd_8U_23U_a_sva_36_C1 ;
  logic [31:0] FpAdd_8U_23U_a_sva_36_R1 ;
  logic [31:0] FpAdd_8U_23U_a_sva_36_X1 ;
  assign FpAdd_8U_23U_a_sva_36_C1 = { 32{ !IsNaN_8U_23U_aelse_and_cse }} ;
  assign FpAdd_8U_23U_a_sva_36_R1 = { 32{ !IsNaN_8U_23U_aelse_and_cse }} & ( _006__R | ( { 32{ IsNaN_8U_23U_aelse_and_cse_T  }} & _006__C ));
  assign FpAdd_8U_23U_a_sva_36_X1 = { 32{ !IsNaN_8U_23U_aelse_and_cse }} & _006__X ;
  assign _030_ = IsNaN_8U_23U_aelse_and_cse ? chn_b_rsci_d_mxwt : b_sva_36;
  logic [0:0] IsNaN_8U_23U_aelse_and_cse_C2 ;
  logic [0:0] IsNaN_8U_23U_aelse_and_cse_R2 ;
  logic [0:0] IsNaN_8U_23U_aelse_and_cse_X2 ;
  assign IsNaN_8U_23U_aelse_and_cse_C2 = | _030__C ;
  assign IsNaN_8U_23U_aelse_and_cse_X2 = | _030__X ;
  assign _030__T = IsNaN_8U_23U_aelse_and_cse ? ( { 32{ IsNaN_8U_23U_aelse_and_cse_T  }} | chn_b_rsci_d_mxwt_T ) : ( { 32{ IsNaN_8U_23U_aelse_and_cse_T  }} | b_sva_36_T );
  assign _030__S = IsNaN_8U_23U_aelse_and_cse ? chn_b_rsci_d_mxwt_S : b_sva_36_S ;
  assign IsNaN_8U_23U_aelse_and_cse_R2 = ( | (_030__R | ( _030__C & ( { 32{ IsNaN_8U_23U_aelse_and_cse }} & chn_b_rsci_d_mxwt_T | { 32{ !IsNaN_8U_23U_aelse_and_cse }} & b_sva_36_T )))) && chn_b_rsci_d_mxwt != b_sva_36 ;
  logic [31:0] chn_b_rsci_d_mxwt_C5 ;
  logic [31:0] chn_b_rsci_d_mxwt_R5 ;
  logic [31:0] chn_b_rsci_d_mxwt_X5 ;
  assign chn_b_rsci_d_mxwt_C5 = { 32{ IsNaN_8U_23U_aelse_and_cse }} ;
  assign chn_b_rsci_d_mxwt_R5 = { 32{ IsNaN_8U_23U_aelse_and_cse }} & ( _030__R | ( { 32{ IsNaN_8U_23U_aelse_and_cse_T  }} & _030__C ));
  assign chn_b_rsci_d_mxwt_X5 = { 32{ IsNaN_8U_23U_aelse_and_cse }} & _030__X ;
  logic [31:0] b_sva_36_C1 ;
  logic [31:0] b_sva_36_R1 ;
  logic [31:0] b_sva_36_X1 ;
  assign b_sva_36_C1 = { 32{ !IsNaN_8U_23U_aelse_and_cse }} ;
  assign b_sva_36_R1 = { 32{ !IsNaN_8U_23U_aelse_and_cse }} & ( _030__R | ( { 32{ IsNaN_8U_23U_aelse_and_cse_T  }} & _030__C ));
  assign b_sva_36_X1 = { 32{ !IsNaN_8U_23U_aelse_and_cse }} & _030__X ;
  assign _029_ = IsNaN_8U_23U_aelse_and_cse ? IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp : IsNaN_8U_23U_land_lpi_1_dfm_st_4;
  logic [0:0] IsNaN_8U_23U_aelse_and_cse_C3 ;
  logic [0:0] IsNaN_8U_23U_aelse_and_cse_R3 ;
  logic [0:0] IsNaN_8U_23U_aelse_and_cse_X3 ;
  assign IsNaN_8U_23U_aelse_and_cse_C3 = | _029__C ;
  assign IsNaN_8U_23U_aelse_and_cse_X3 = | _029__X ;
  assign _029__T = IsNaN_8U_23U_aelse_and_cse ? ( { 1{ IsNaN_8U_23U_aelse_and_cse_T  }} | IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_T ) : ( { 1{ IsNaN_8U_23U_aelse_and_cse_T  }} | IsNaN_8U_23U_land_lpi_1_dfm_st_4_T );
  assign _029__S = IsNaN_8U_23U_aelse_and_cse ? IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_S : IsNaN_8U_23U_land_lpi_1_dfm_st_4_S ;
  assign IsNaN_8U_23U_aelse_and_cse_R3 = ( | (_029__R | ( _029__C & ( { 1{ IsNaN_8U_23U_aelse_and_cse }} & IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_T | { 1{ !IsNaN_8U_23U_aelse_and_cse }} & IsNaN_8U_23U_land_lpi_1_dfm_st_4_T )))) && IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp != IsNaN_8U_23U_land_lpi_1_dfm_st_4 ;
  logic [0:0] IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_C2 ;
  logic [0:0] IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_R2 ;
  logic [0:0] IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_X2 ;
  assign IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_C2 = { 1{ IsNaN_8U_23U_aelse_and_cse }} ;
  assign IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_R2 = { 1{ IsNaN_8U_23U_aelse_and_cse }} & ( _029__R | ( { 1{ IsNaN_8U_23U_aelse_and_cse_T  }} & _029__C ));
  assign IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_X2 = { 1{ IsNaN_8U_23U_aelse_and_cse }} & _029__X ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_4_C6 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_4_R6 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_4_X6 ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_4_C6 = { 1{ !IsNaN_8U_23U_aelse_and_cse }} ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_4_R6 = { 1{ !IsNaN_8U_23U_aelse_and_cse }} & ( _029__R | ( { 1{ IsNaN_8U_23U_aelse_and_cse_T  }} & _029__C ));
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_4_X6 = { 1{ !IsNaN_8U_23U_aelse_and_cse }} & _029__X ;
  assign _003_ = IsNaN_8U_23U_aelse_and_cse ? _094_ : FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2;
  logic [0:0] IsNaN_8U_23U_aelse_and_cse_C4 ;
  logic [0:0] IsNaN_8U_23U_aelse_and_cse_R4 ;
  logic [0:0] IsNaN_8U_23U_aelse_and_cse_X4 ;
  assign IsNaN_8U_23U_aelse_and_cse_C4 = | _003__C ;
  assign IsNaN_8U_23U_aelse_and_cse_X4 = | _003__X ;
  assign _003__T = IsNaN_8U_23U_aelse_and_cse ? ( { 1{ IsNaN_8U_23U_aelse_and_cse_T  }} | _094__T ) : ( { 1{ IsNaN_8U_23U_aelse_and_cse_T  }} | FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_T );
  assign _003__S = IsNaN_8U_23U_aelse_and_cse ? _094__S : FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_S ;
  assign IsNaN_8U_23U_aelse_and_cse_R4 = ( | (_003__R | ( _003__C & ( { 1{ IsNaN_8U_23U_aelse_and_cse }} & _094__T | { 1{ !IsNaN_8U_23U_aelse_and_cse }} & FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_T )))) && _094_ != FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2 ;
  logic [0:0] _094__C0 ;
  logic [0:0] _094__R0 ;
  logic [0:0] _094__X0 ;
  assign _094__C0 = { 1{ IsNaN_8U_23U_aelse_and_cse }} ;
  assign _094__R0 = { 1{ IsNaN_8U_23U_aelse_and_cse }} & ( _003__R | ( { 1{ IsNaN_8U_23U_aelse_and_cse_T  }} & _003__C ));
  assign _094__X0 = { 1{ IsNaN_8U_23U_aelse_and_cse }} & _003__X ;
  logic [0:0] FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_C0 ;
  logic [0:0] FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_R0 ;
  logic [0:0] FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_X0 ;
  assign FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_C0 = { 1{ !IsNaN_8U_23U_aelse_and_cse }} ;
  assign FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_R0 = { 1{ !IsNaN_8U_23U_aelse_and_cse }} & ( _003__R | ( { 1{ IsNaN_8U_23U_aelse_and_cse_T  }} & _003__C ));
  assign FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_X0 = { 1{ !IsNaN_8U_23U_aelse_and_cse }} & _003__X ;
  assign _004_ = IsNaN_8U_23U_aelse_and_cse ? _095_ : FpAdd_8U_23U_IsZero_8U_23U_or_itm_2;
  logic [0:0] IsNaN_8U_23U_aelse_and_cse_C5 ;
  logic [0:0] IsNaN_8U_23U_aelse_and_cse_R5 ;
  logic [0:0] IsNaN_8U_23U_aelse_and_cse_X5 ;
  assign IsNaN_8U_23U_aelse_and_cse_C5 = | _004__C ;
  assign IsNaN_8U_23U_aelse_and_cse_X5 = | _004__X ;
  assign _004__T = IsNaN_8U_23U_aelse_and_cse ? ( { 1{ IsNaN_8U_23U_aelse_and_cse_T  }} | _095__T ) : ( { 1{ IsNaN_8U_23U_aelse_and_cse_T  }} | FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_T );
  assign _004__S = IsNaN_8U_23U_aelse_and_cse ? _095__S : FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_S ;
  assign IsNaN_8U_23U_aelse_and_cse_R5 = ( | (_004__R | ( _004__C & ( { 1{ IsNaN_8U_23U_aelse_and_cse }} & _095__T | { 1{ !IsNaN_8U_23U_aelse_and_cse }} & FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_T )))) && _095_ != FpAdd_8U_23U_IsZero_8U_23U_or_itm_2 ;
  logic [0:0] _095__C0 ;
  logic [0:0] _095__R0 ;
  logic [0:0] _095__X0 ;
  assign _095__C0 = { 1{ IsNaN_8U_23U_aelse_and_cse }} ;
  assign _095__R0 = { 1{ IsNaN_8U_23U_aelse_and_cse }} & ( _004__R | ( { 1{ IsNaN_8U_23U_aelse_and_cse_T  }} & _004__C ));
  assign _095__X0 = { 1{ IsNaN_8U_23U_aelse_and_cse }} & _004__X ;
  logic [0:0] FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_C0 ;
  logic [0:0] FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_R0 ;
  logic [0:0] FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_X0 ;
  assign FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_C0 = { 1{ !IsNaN_8U_23U_aelse_and_cse }} ;
  assign FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_R0 = { 1{ !IsNaN_8U_23U_aelse_and_cse }} & ( _004__R | ( { 1{ IsNaN_8U_23U_aelse_and_cse_T  }} & _004__C ));
  assign FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_X0 = { 1{ !IsNaN_8U_23U_aelse_and_cse }} & _004__X ;
  assign _009_ = IsNaN_8U_23U_aelse_and_cse ? FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse : FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4;
  logic [0:0] IsNaN_8U_23U_aelse_and_cse_C6 ;
  logic [0:0] IsNaN_8U_23U_aelse_and_cse_R6 ;
  logic [0:0] IsNaN_8U_23U_aelse_and_cse_X6 ;
  assign IsNaN_8U_23U_aelse_and_cse_C6 = | _009__C ;
  assign IsNaN_8U_23U_aelse_and_cse_X6 = | _009__X ;
  assign _009__T = IsNaN_8U_23U_aelse_and_cse ? ( { 1{ IsNaN_8U_23U_aelse_and_cse_T  }} | FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_T ) : ( { 1{ IsNaN_8U_23U_aelse_and_cse_T  }} | FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_T );
  assign _009__S = IsNaN_8U_23U_aelse_and_cse ? FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_S : FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_S ;
  assign IsNaN_8U_23U_aelse_and_cse_R6 = ( | (_009__R | ( _009__C & ( { 1{ IsNaN_8U_23U_aelse_and_cse }} & FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_T | { 1{ !IsNaN_8U_23U_aelse_and_cse }} & FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_T )))) && FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse != FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4 ;
  logic [0:0] FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_C1 ;
  logic [0:0] FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_R1 ;
  logic [0:0] FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_X1 ;
  assign FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_C1 = { 1{ IsNaN_8U_23U_aelse_and_cse }} ;
  assign FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_R1 = { 1{ IsNaN_8U_23U_aelse_and_cse }} & ( _009__R | ( { 1{ IsNaN_8U_23U_aelse_and_cse_T  }} & _009__C ));
  assign FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_X1 = { 1{ IsNaN_8U_23U_aelse_and_cse }} & _009__X ;
  logic [0:0] FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_C3 ;
  logic [0:0] FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_R3 ;
  logic [0:0] FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_X3 ;
  assign FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_C3 = { 1{ !IsNaN_8U_23U_aelse_and_cse }} ;
  assign FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_R3 = { 1{ !IsNaN_8U_23U_aelse_and_cse }} & ( _009__R | ( { 1{ IsNaN_8U_23U_aelse_and_cse_T  }} & _009__C ));
  assign FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_X3 = { 1{ !IsNaN_8U_23U_aelse_and_cse }} & _009__X ;
  assign _035_ = _064_ ? _122_ : main_stage_v_1;
  logic [0:0] _064__C0 ;
  logic [0:0] _064__R0 ;
  logic [0:0] _064__X0 ;
  assign _064__C0 = | _035__C ;
  assign _064__X0 = | _035__X ;
  assign _035__T = _064_ ? ( { 1{ _064__T  }} | _122__T ) : ( { 1{ _064__T  }} | main_stage_v_1_T );
  assign _035__S = _064_ ? _122__S : main_stage_v_1_S ;
  assign _064__R0 = ( | (_035__R | ( _035__C & ( { 1{ _064_ }} & _122__T | { 1{ !_064_ }} & main_stage_v_1_T )))) && _122_ != main_stage_v_1 ;
  logic [0:0] _122__C0 ;
  logic [0:0] _122__R0 ;
  logic [0:0] _122__X0 ;
  assign _122__C0 = { 1{ _064_ }} ;
  assign _122__R0 = { 1{ _064_ }} & ( _035__R | ( { 1{ _064__T  }} & _035__C ));
  assign _122__X0 = { 1{ _064_ }} & _035__X ;
  logic [0:0] main_stage_v_1_C7 ;
  logic [0:0] main_stage_v_1_R7 ;
  logic [0:0] main_stage_v_1_X7 ;
  assign main_stage_v_1_C7 = { 1{ !_064_ }} ;
  assign main_stage_v_1_R7 = { 1{ !_064_ }} & ( _035__R | ( { 1{ _064__T  }} & _035__C ));
  assign main_stage_v_1_X7 = { 1{ !_064_ }} & _035__X ;
  assign _041_ = _063_ ? _121_ : reg_chn_o_rsci_ld_core_psct_cse;
  logic [0:0] _063__C0 ;
  logic [0:0] _063__R0 ;
  logic [0:0] _063__X0 ;
  assign _063__C0 = | _041__C ;
  assign _063__X0 = | _041__X ;
  assign _041__T = _063_ ? ( { 1{ _063__T  }} | _121__T ) : ( { 1{ _063__T  }} | reg_chn_o_rsci_ld_core_psct_cse_T );
  assign _041__S = _063_ ? _121__S : reg_chn_o_rsci_ld_core_psct_cse_S ;
  assign _063__R0 = ( | (_041__R | ( _041__C & ( { 1{ _063_ }} & _121__T | { 1{ !_063_ }} & reg_chn_o_rsci_ld_core_psct_cse_T )))) && _121_ != reg_chn_o_rsci_ld_core_psct_cse ;
  logic [0:0] _121__C0 ;
  logic [0:0] _121__R0 ;
  logic [0:0] _121__X0 ;
  assign _121__C0 = { 1{ _063_ }} ;
  assign _121__R0 = { 1{ _063_ }} & ( _041__R | ( { 1{ _063__T  }} & _041__C ));
  assign _121__X0 = { 1{ _063_ }} & _041__X ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C5 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R5 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X5 ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C5 = { 1{ !_063_ }} ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R5 = { 1{ !_063_ }} & ( _041__R | ( { 1{ _063__T  }} & _041__C ));
  assign reg_chn_o_rsci_ld_core_psct_cse_X5 = { 1{ !_063_ }} & _041__X ;
  assign _032_ = chn_o_and_1_cse ? _186_ : chn_o_rsci_d_30_23;
  logic [0:0] chn_o_and_1_cse_C0 ;
  logic [0:0] chn_o_and_1_cse_R0 ;
  logic [0:0] chn_o_and_1_cse_X0 ;
  assign chn_o_and_1_cse_C0 = | _032__C ;
  assign chn_o_and_1_cse_X0 = | _032__X ;
  assign _032__T = chn_o_and_1_cse ? ( { 8{ chn_o_and_1_cse_T  }} | _186__T ) : ( { 8{ chn_o_and_1_cse_T  }} | chn_o_rsci_d_30_23_T );
  assign _032__S = chn_o_and_1_cse ? _186__S : chn_o_rsci_d_30_23_S ;
  assign chn_o_and_1_cse_R0 = ( | (_032__R | ( _032__C & ( { 8{ chn_o_and_1_cse }} & _186__T | { 8{ !chn_o_and_1_cse }} & chn_o_rsci_d_30_23_T )))) && _186_ != chn_o_rsci_d_30_23 ;
  logic [7:0] _186__C0 ;
  logic [7:0] _186__R0 ;
  logic [7:0] _186__X0 ;
  assign _186__C0 = { 8{ chn_o_and_1_cse }} ;
  assign _186__R0 = { 8{ chn_o_and_1_cse }} & ( _032__R | ( { 8{ chn_o_and_1_cse_T  }} & _032__C ));
  assign _186__X0 = { 8{ chn_o_and_1_cse }} & _032__X ;
  logic [7:0] chn_o_rsci_d_30_23_C0 ;
  logic [7:0] chn_o_rsci_d_30_23_R0 ;
  logic [7:0] chn_o_rsci_d_30_23_X0 ;
  assign chn_o_rsci_d_30_23_C0 = { 8{ !chn_o_and_1_cse }} ;
  assign chn_o_rsci_d_30_23_R0 = { 8{ !chn_o_and_1_cse }} & ( _032__R | ( { 8{ chn_o_and_1_cse_T  }} & _032__C ));
  assign chn_o_rsci_d_30_23_X0 = { 8{ !chn_o_and_1_cse }} & _032__X ;
  assign _033_ = chn_o_and_1_cse ? FpAdd_8U_23U_mux_13_itm_4 : chn_o_rsci_d_31;
  logic [0:0] chn_o_and_1_cse_C1 ;
  logic [0:0] chn_o_and_1_cse_R1 ;
  logic [0:0] chn_o_and_1_cse_X1 ;
  assign chn_o_and_1_cse_C1 = | _033__C ;
  assign chn_o_and_1_cse_X1 = | _033__X ;
  assign _033__T = chn_o_and_1_cse ? ( { 1{ chn_o_and_1_cse_T  }} | FpAdd_8U_23U_mux_13_itm_4_T ) : ( { 1{ chn_o_and_1_cse_T  }} | chn_o_rsci_d_31_T );
  assign _033__S = chn_o_and_1_cse ? FpAdd_8U_23U_mux_13_itm_4_S : chn_o_rsci_d_31_S ;
  assign chn_o_and_1_cse_R1 = ( | (_033__R | ( _033__C & ( { 1{ chn_o_and_1_cse }} & FpAdd_8U_23U_mux_13_itm_4_T | { 1{ !chn_o_and_1_cse }} & chn_o_rsci_d_31_T )))) && FpAdd_8U_23U_mux_13_itm_4 != chn_o_rsci_d_31 ;
  logic [0:0] FpAdd_8U_23U_mux_13_itm_4_C1 ;
  logic [0:0] FpAdd_8U_23U_mux_13_itm_4_R1 ;
  logic [0:0] FpAdd_8U_23U_mux_13_itm_4_X1 ;
  assign FpAdd_8U_23U_mux_13_itm_4_C1 = { 1{ chn_o_and_1_cse }} ;
  assign FpAdd_8U_23U_mux_13_itm_4_R1 = { 1{ chn_o_and_1_cse }} & ( _033__R | ( { 1{ chn_o_and_1_cse_T  }} & _033__C ));
  assign FpAdd_8U_23U_mux_13_itm_4_X1 = { 1{ chn_o_and_1_cse }} & _033__X ;
  logic [0:0] chn_o_rsci_d_31_C0 ;
  logic [0:0] chn_o_rsci_d_31_R0 ;
  logic [0:0] chn_o_rsci_d_31_X0 ;
  assign chn_o_rsci_d_31_C0 = { 1{ !chn_o_and_1_cse }} ;
  assign chn_o_rsci_d_31_R0 = { 1{ !chn_o_and_1_cse }} & ( _033__R | ( { 1{ chn_o_and_1_cse_T  }} & _033__C ));
  assign chn_o_rsci_d_31_X0 = { 1{ !chn_o_and_1_cse }} & _033__X ;
  assign _043_ = FpSignedBitsToFloat_8U_23U_1_and_2_nl ? FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl : FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4;
  logic [0:0] FpSignedBitsToFloat_8U_23U_1_and_2_nl_C0 ;
  logic [0:0] FpSignedBitsToFloat_8U_23U_1_and_2_nl_R0 ;
  logic [0:0] FpSignedBitsToFloat_8U_23U_1_and_2_nl_X0 ;
  assign FpSignedBitsToFloat_8U_23U_1_and_2_nl_C0 = | _043__C ;
  assign FpSignedBitsToFloat_8U_23U_1_and_2_nl_X0 = | _043__X ;
  assign _043__T = FpSignedBitsToFloat_8U_23U_1_and_2_nl ? ( { 23{ FpSignedBitsToFloat_8U_23U_1_and_2_nl_T  }} | FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl_T ) : ( { 23{ FpSignedBitsToFloat_8U_23U_1_and_2_nl_T  }} | FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_T );
  assign _043__S = FpSignedBitsToFloat_8U_23U_1_and_2_nl ? FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl_S : FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_S ;
  assign FpSignedBitsToFloat_8U_23U_1_and_2_nl_R0 = ( | (_043__R | ( _043__C & ( { 23{ FpSignedBitsToFloat_8U_23U_1_and_2_nl }} & FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl_T | { 23{ !FpSignedBitsToFloat_8U_23U_1_and_2_nl }} & FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_T )))) && FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl != FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4 ;
  logic [22:0] FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl_C0 ;
  logic [22:0] FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl_R0 ;
  logic [22:0] FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl_X0 ;
  assign FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl_C0 = { 23{ FpSignedBitsToFloat_8U_23U_1_and_2_nl }} ;
  assign FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl_R0 = { 23{ FpSignedBitsToFloat_8U_23U_1_and_2_nl }} & ( _043__R | ( { 23{ FpSignedBitsToFloat_8U_23U_1_and_2_nl_T  }} & _043__C ));
  assign FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl_X0 = { 23{ FpSignedBitsToFloat_8U_23U_1_and_2_nl }} & _043__X ;
  logic [22:0] FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_C1 ;
  logic [22:0] FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_R1 ;
  logic [22:0] FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_X1 ;
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_C1 = { 23{ !FpSignedBitsToFloat_8U_23U_1_and_2_nl }} ;
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_R1 = { 23{ !FpSignedBitsToFloat_8U_23U_1_and_2_nl }} & ( _043__R | ( { 23{ FpSignedBitsToFloat_8U_23U_1_and_2_nl_T  }} & _043__C ));
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_X1 = { 23{ !FpSignedBitsToFloat_8U_23U_1_and_2_nl }} & _043__X ;
  assign _031_ = _062_ ? _043_ : chn_o_rsci_d_22_0;
  logic [0:0] _062__C0 ;
  logic [0:0] _062__R0 ;
  logic [0:0] _062__X0 ;
  assign _062__C0 = | _031__C ;
  assign _062__X0 = | _031__X ;
  assign _031__T = _062_ ? ( { 23{ _062__T  }} | _043__T ) : ( { 23{ _062__T  }} | chn_o_rsci_d_22_0_T );
  assign _031__S = _062_ ? _043__S : chn_o_rsci_d_22_0_S ;
  assign _062__R0 = ( | (_031__R | ( _031__C & ( { 23{ _062_ }} & _043__T | { 23{ !_062_ }} & chn_o_rsci_d_22_0_T )))) && _043_ != chn_o_rsci_d_22_0 ;
  logic [22:0] _043__C0 ;
  logic [22:0] _043__R0 ;
  logic [22:0] _043__X0 ;
  assign _043__C0 = { 23{ _062_ }} ;
  assign _043__R0 = { 23{ _062_ }} & ( _031__R | ( { 23{ _062__T  }} & _031__C ));
  assign _043__X0 = { 23{ _062_ }} & _031__X ;
  logic [22:0] chn_o_rsci_d_22_0_C0 ;
  logic [22:0] chn_o_rsci_d_22_0_R0 ;
  logic [22:0] chn_o_rsci_d_22_0_X0 ;
  assign chn_o_rsci_d_22_0_C0 = { 23{ !_062_ }} ;
  assign chn_o_rsci_d_22_0_R0 = { 23{ !_062_ }} & ( _031__R | ( { 23{ _062__T  }} & _031__C ));
  assign chn_o_rsci_d_22_0_X0 = { 23{ !_062_ }} & _031__X ;
  assign _040_ = _060_ ? or_tmp_29 : reg_chn_a_rsci_ld_core_psct_cse;
  logic [0:0] _060__C0 ;
  logic [0:0] _060__R0 ;
  logic [0:0] _060__X0 ;
  assign _060__C0 = | _040__C ;
  assign _060__X0 = | _040__X ;
  assign _040__T = _060_ ? ( { 1{ _060__T  }} | or_tmp_29_T ) : ( { 1{ _060__T  }} | reg_chn_a_rsci_ld_core_psct_cse_T );
  assign _040__S = _060_ ? or_tmp_29_S : reg_chn_a_rsci_ld_core_psct_cse_S ;
  assign _060__R0 = ( | (_040__R | ( _040__C & ( { 1{ _060_ }} & or_tmp_29_T | { 1{ !_060_ }} & reg_chn_a_rsci_ld_core_psct_cse_T )))) && or_tmp_29 != reg_chn_a_rsci_ld_core_psct_cse ;
  logic [0:0] or_tmp_29_C1 ;
  logic [0:0] or_tmp_29_R1 ;
  logic [0:0] or_tmp_29_X1 ;
  assign or_tmp_29_C1 = { 1{ _060_ }} ;
  assign or_tmp_29_R1 = { 1{ _060_ }} & ( _040__R | ( { 1{ _060__T  }} & _040__C ));
  assign or_tmp_29_X1 = { 1{ _060_ }} & _040__X ;
  logic [0:0] reg_chn_a_rsci_ld_core_psct_cse_C0 ;
  logic [0:0] reg_chn_a_rsci_ld_core_psct_cse_R0 ;
  logic [0:0] reg_chn_a_rsci_ld_core_psct_cse_X0 ;
  assign reg_chn_a_rsci_ld_core_psct_cse_C0 = { 1{ !_060_ }} ;
  assign reg_chn_a_rsci_ld_core_psct_cse_R0 = { 1{ !_060_ }} & ( _040__R | ( { 1{ _060__T  }} & _040__C ));
  assign reg_chn_a_rsci_ld_core_psct_cse_X0 = { 1{ !_060_ }} & _040__X ;
  assign _039_ = core_wen ? _120_ : reg_chn_a_rsci_iswt0_cse;
  logic [0:0] core_wen_C11 ;
  logic [0:0] core_wen_R11 ;
  logic [0:0] core_wen_X11 ;
  assign core_wen_C11 = | _039__C ;
  assign core_wen_X11 = | _039__X ;
  assign _039__T = core_wen ? ( { 1{ core_wen_T  }} | _120__T ) : ( { 1{ core_wen_T  }} | reg_chn_a_rsci_iswt0_cse_T );
  assign _039__S = core_wen ? _120__S : reg_chn_a_rsci_iswt0_cse_S ;
  assign core_wen_R11 = ( | (_039__R | ( _039__C & ( { 1{ core_wen }} & _120__T | { 1{ !core_wen }} & reg_chn_a_rsci_iswt0_cse_T )))) && _120_ != reg_chn_a_rsci_iswt0_cse ;
  logic [0:0] _120__C0 ;
  logic [0:0] _120__R0 ;
  logic [0:0] _120__X0 ;
  assign _120__C0 = { 1{ core_wen }} ;
  assign _120__R0 = { 1{ core_wen }} & ( _039__R | ( { 1{ core_wen_T  }} & _039__C ));
  assign _120__X0 = { 1{ core_wen }} & _039__X ;
  logic [0:0] reg_chn_a_rsci_iswt0_cse_C0 ;
  logic [0:0] reg_chn_a_rsci_iswt0_cse_R0 ;
  logic [0:0] reg_chn_a_rsci_iswt0_cse_X0 ;
  assign reg_chn_a_rsci_iswt0_cse_C0 = { 1{ !core_wen }} ;
  assign reg_chn_a_rsci_iswt0_cse_R0 = { 1{ !core_wen }} & ( _039__R | ( { 1{ core_wen_T  }} & _039__C ));
  assign reg_chn_a_rsci_iswt0_cse_X0 = { 1{ !core_wen }} & _039__X ;
  assign _034_ = core_wen ? and_dcpl_13 : chn_o_rsci_iswt0;
  logic [0:0] core_wen_C12 ;
  logic [0:0] core_wen_R12 ;
  logic [0:0] core_wen_X12 ;
  assign core_wen_C12 = | _034__C ;
  assign core_wen_X12 = | _034__X ;
  assign _034__T = core_wen ? ( { 1{ core_wen_T  }} | and_dcpl_13_T ) : ( { 1{ core_wen_T  }} | chn_o_rsci_iswt0_T );
  assign _034__S = core_wen ? and_dcpl_13_S : chn_o_rsci_iswt0_S ;
  assign core_wen_R12 = ( | (_034__R | ( _034__C & ( { 1{ core_wen }} & and_dcpl_13_T | { 1{ !core_wen }} & chn_o_rsci_iswt0_T )))) && and_dcpl_13 != chn_o_rsci_iswt0 ;
  logic [0:0] and_dcpl_13_C3 ;
  logic [0:0] and_dcpl_13_R3 ;
  logic [0:0] and_dcpl_13_X3 ;
  assign and_dcpl_13_C3 = { 1{ core_wen }} ;
  assign and_dcpl_13_R3 = { 1{ core_wen }} & ( _034__R | ( { 1{ core_wen_T  }} & _034__C ));
  assign and_dcpl_13_X3 = { 1{ core_wen }} & _034__X ;
  logic [0:0] chn_o_rsci_iswt0_C0 ;
  logic [0:0] chn_o_rsci_iswt0_R0 ;
  logic [0:0] chn_o_rsci_iswt0_X0 ;
  assign chn_o_rsci_iswt0_C0 = { 1{ !core_wen }} ;
  assign chn_o_rsci_iswt0_R0 = { 1{ !core_wen }} & ( _034__R | ( { 1{ core_wen_T  }} & _034__C ));
  assign chn_o_rsci_iswt0_X0 = { 1{ !core_wen }} & _034__X ;
  assign FpAdd_8U_23U_b_right_shift_qif_acc_nl = FpAdd_8U_23U_a_sva_36[30:23] - b_sva_36[30:23];
  assign FpAdd_8U_23U_b_right_shift_qif_acc_nl_S = 0 ;
  logic [31:0] FpAdd_8U_23U_a_sva_36_C2 ;
  logic [31:0] FpAdd_8U_23U_a_sva_36_R2 ;
  logic [31:0] FpAdd_8U_23U_a_sva_36_X2 ;
  logic [31:0] b_sva_36_C2 ;
  logic [31:0] b_sva_36_R2 ;
  logic [31:0] b_sva_36_X2 ;
  assign FpAdd_8U_23U_b_right_shift_qif_acc_nl_T = FpAdd_8U_23U_a_sva_36_T [30:23] | b_sva_36_T [30:23] ;
  assign FpAdd_8U_23U_a_sva_36_C2 [30:23] = FpAdd_8U_23U_b_right_shift_qif_acc_nl_C ;
  assign FpAdd_8U_23U_a_sva_36_X2 [30:23] = FpAdd_8U_23U_b_right_shift_qif_acc_nl_X ;
  assign b_sva_36_C2 [30:23] = FpAdd_8U_23U_b_right_shift_qif_acc_nl_C ;
  assign b_sva_36_X2 [30:23] = FpAdd_8U_23U_b_right_shift_qif_acc_nl_X ;
  assign FpAdd_8U_23U_a_sva_36_R2 [30:23] = FpAdd_8U_23U_b_right_shift_qif_acc_nl_R | ( FpAdd_8U_23U_b_right_shift_qif_acc_nl_C & b_sva_36_T [30:23] );
  assign b_sva_36_R2 [30:23] = FpAdd_8U_23U_b_right_shift_qif_acc_nl_R | ( FpAdd_8U_23U_b_right_shift_qif_acc_nl_C & FpAdd_8U_23U_a_sva_36_T [30:23] );
  assign FpAdd_8U_23U_a_right_shift_qelse_acc_nl = b_sva_36[30:23] - FpAdd_8U_23U_a_sva_36[30:23];
  assign FpAdd_8U_23U_a_right_shift_qelse_acc_nl_S = 0 ;
  assign { b_sva_36_R2 [0], b_sva_36_R2 [1], b_sva_36_R2 [2], b_sva_36_R2 [3], b_sva_36_R2 [4], b_sva_36_R2 [5], b_sva_36_R2 [6], b_sva_36_R2 [7], b_sva_36_R2 [8], b_sva_36_R2 [9], b_sva_36_R2 [10], b_sva_36_R2 [11], b_sva_36_R2 [12], b_sva_36_R2 [13], b_sva_36_R2 [14], b_sva_36_R2 [15], b_sva_36_R2 [16], b_sva_36_R2 [17], b_sva_36_R2 [18], b_sva_36_R2 [19], b_sva_36_R2 [20], b_sva_36_R2 [21], b_sva_36_R2 [22], b_sva_36_R2 [31:31] } = 0;
  assign { b_sva_36_X2 [0], b_sva_36_X2 [1], b_sva_36_X2 [2], b_sva_36_X2 [3], b_sva_36_X2 [4], b_sva_36_X2 [5], b_sva_36_X2 [6], b_sva_36_X2 [7], b_sva_36_X2 [8], b_sva_36_X2 [9], b_sva_36_X2 [10], b_sva_36_X2 [11], b_sva_36_X2 [12], b_sva_36_X2 [13], b_sva_36_X2 [14], b_sva_36_X2 [15], b_sva_36_X2 [16], b_sva_36_X2 [17], b_sva_36_X2 [18], b_sva_36_X2 [19], b_sva_36_X2 [20], b_sva_36_X2 [21], b_sva_36_X2 [22], b_sva_36_X2 [31:31] } = 0;
  assign { b_sva_36_C2 [0], b_sva_36_C2 [1], b_sva_36_C2 [2], b_sva_36_C2 [3], b_sva_36_C2 [4], b_sva_36_C2 [5], b_sva_36_C2 [6], b_sva_36_C2 [7], b_sva_36_C2 [8], b_sva_36_C2 [9], b_sva_36_C2 [10], b_sva_36_C2 [11], b_sva_36_C2 [12], b_sva_36_C2 [13], b_sva_36_C2 [14], b_sva_36_C2 [15], b_sva_36_C2 [16], b_sva_36_C2 [17], b_sva_36_C2 [18], b_sva_36_C2 [19], b_sva_36_C2 [20], b_sva_36_C2 [21], b_sva_36_C2 [22], b_sva_36_C2 [31:31] } = 0;
  assign { FpAdd_8U_23U_a_sva_36_R2 [0], FpAdd_8U_23U_a_sva_36_R2 [1], FpAdd_8U_23U_a_sva_36_R2 [2], FpAdd_8U_23U_a_sva_36_R2 [3], FpAdd_8U_23U_a_sva_36_R2 [4], FpAdd_8U_23U_a_sva_36_R2 [5], FpAdd_8U_23U_a_sva_36_R2 [6], FpAdd_8U_23U_a_sva_36_R2 [7], FpAdd_8U_23U_a_sva_36_R2 [8], FpAdd_8U_23U_a_sva_36_R2 [9], FpAdd_8U_23U_a_sva_36_R2 [10], FpAdd_8U_23U_a_sva_36_R2 [11], FpAdd_8U_23U_a_sva_36_R2 [12], FpAdd_8U_23U_a_sva_36_R2 [13], FpAdd_8U_23U_a_sva_36_R2 [14], FpAdd_8U_23U_a_sva_36_R2 [15], FpAdd_8U_23U_a_sva_36_R2 [16], FpAdd_8U_23U_a_sva_36_R2 [17], FpAdd_8U_23U_a_sva_36_R2 [18], FpAdd_8U_23U_a_sva_36_R2 [19], FpAdd_8U_23U_a_sva_36_R2 [20], FpAdd_8U_23U_a_sva_36_R2 [21], FpAdd_8U_23U_a_sva_36_R2 [22], FpAdd_8U_23U_a_sva_36_R2 [31:31] } = 0;
  assign { FpAdd_8U_23U_a_sva_36_X2 [0], FpAdd_8U_23U_a_sva_36_X2 [1], FpAdd_8U_23U_a_sva_36_X2 [2], FpAdd_8U_23U_a_sva_36_X2 [3], FpAdd_8U_23U_a_sva_36_X2 [4], FpAdd_8U_23U_a_sva_36_X2 [5], FpAdd_8U_23U_a_sva_36_X2 [6], FpAdd_8U_23U_a_sva_36_X2 [7], FpAdd_8U_23U_a_sva_36_X2 [8], FpAdd_8U_23U_a_sva_36_X2 [9], FpAdd_8U_23U_a_sva_36_X2 [10], FpAdd_8U_23U_a_sva_36_X2 [11], FpAdd_8U_23U_a_sva_36_X2 [12], FpAdd_8U_23U_a_sva_36_X2 [13], FpAdd_8U_23U_a_sva_36_X2 [14], FpAdd_8U_23U_a_sva_36_X2 [15], FpAdd_8U_23U_a_sva_36_X2 [16], FpAdd_8U_23U_a_sva_36_X2 [17], FpAdd_8U_23U_a_sva_36_X2 [18], FpAdd_8U_23U_a_sva_36_X2 [19], FpAdd_8U_23U_a_sva_36_X2 [20], FpAdd_8U_23U_a_sva_36_X2 [21], FpAdd_8U_23U_a_sva_36_X2 [22], FpAdd_8U_23U_a_sva_36_X2 [31:31] } = 0;
  assign { FpAdd_8U_23U_a_sva_36_C2 [0], FpAdd_8U_23U_a_sva_36_C2 [1], FpAdd_8U_23U_a_sva_36_C2 [2], FpAdd_8U_23U_a_sva_36_C2 [3], FpAdd_8U_23U_a_sva_36_C2 [4], FpAdd_8U_23U_a_sva_36_C2 [5], FpAdd_8U_23U_a_sva_36_C2 [6], FpAdd_8U_23U_a_sva_36_C2 [7], FpAdd_8U_23U_a_sva_36_C2 [8], FpAdd_8U_23U_a_sva_36_C2 [9], FpAdd_8U_23U_a_sva_36_C2 [10], FpAdd_8U_23U_a_sva_36_C2 [11], FpAdd_8U_23U_a_sva_36_C2 [12], FpAdd_8U_23U_a_sva_36_C2 [13], FpAdd_8U_23U_a_sva_36_C2 [14], FpAdd_8U_23U_a_sva_36_C2 [15], FpAdd_8U_23U_a_sva_36_C2 [16], FpAdd_8U_23U_a_sva_36_C2 [17], FpAdd_8U_23U_a_sva_36_C2 [18], FpAdd_8U_23U_a_sva_36_C2 [19], FpAdd_8U_23U_a_sva_36_C2 [20], FpAdd_8U_23U_a_sva_36_C2 [21], FpAdd_8U_23U_a_sva_36_C2 [22], FpAdd_8U_23U_a_sva_36_C2 [31:31] } = 0;
  logic [31:0] b_sva_36_C3 ;
  logic [31:0] b_sva_36_R3 ;
  logic [31:0] b_sva_36_X3 ;
  logic [31:0] FpAdd_8U_23U_a_sva_36_C3 ;
  logic [31:0] FpAdd_8U_23U_a_sva_36_R3 ;
  logic [31:0] FpAdd_8U_23U_a_sva_36_X3 ;
  assign FpAdd_8U_23U_a_right_shift_qelse_acc_nl_T = b_sva_36_T [30:23] | FpAdd_8U_23U_a_sva_36_T [30:23] ;
  assign b_sva_36_C3 [30:23] = FpAdd_8U_23U_a_right_shift_qelse_acc_nl_C ;
  assign b_sva_36_X3 [30:23] = FpAdd_8U_23U_a_right_shift_qelse_acc_nl_X ;
  assign FpAdd_8U_23U_a_sva_36_C3 [30:23] = FpAdd_8U_23U_a_right_shift_qelse_acc_nl_C ;
  assign FpAdd_8U_23U_a_sva_36_X3 [30:23] = FpAdd_8U_23U_a_right_shift_qelse_acc_nl_X ;
  assign b_sva_36_R3 [30:23] = FpAdd_8U_23U_a_right_shift_qelse_acc_nl_R | ( FpAdd_8U_23U_a_right_shift_qelse_acc_nl_C & FpAdd_8U_23U_a_sva_36_T [30:23] );
  assign FpAdd_8U_23U_a_sva_36_R3 [30:23] = FpAdd_8U_23U_a_right_shift_qelse_acc_nl_R | ( FpAdd_8U_23U_a_right_shift_qelse_acc_nl_C & b_sva_36_T [30:23] );
  assign _187_ = chn_a_rsci_d_mxwt[31] ^ chn_b_rsci_d_mxwt[31];
  assign _187__S = 0 ;
  logic [31:0] chn_a_rsci_d_mxwt_C6 ;
  logic [31:0] chn_a_rsci_d_mxwt_R6 ;
  logic [31:0] chn_a_rsci_d_mxwt_X6 ;
  logic [31:0] chn_b_rsci_d_mxwt_C6 ;
  logic [31:0] chn_b_rsci_d_mxwt_R6 ;
  logic [31:0] chn_b_rsci_d_mxwt_X6 ;
  assign _187__T = chn_a_rsci_d_mxwt_T [31] | chn_b_rsci_d_mxwt_T [31] ;
  assign chn_a_rsci_d_mxwt_C6 [31] = _187__C ;
  assign chn_a_rsci_d_mxwt_X6 [31] = _187__X ;
  assign chn_b_rsci_d_mxwt_C6 [31] = _187__C ;
  assign chn_b_rsci_d_mxwt_X6 [31] = _187__X ;
  assign chn_a_rsci_d_mxwt_R6 [31] = _187__R | ( _187__C & chn_b_rsci_d_mxwt_T [31] );
  assign chn_b_rsci_d_mxwt_R6 [31] = _187__R | ( _187__C & chn_a_rsci_d_mxwt_T [31] );
  logic [0:0] FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_R1 ;
  logic [0:0] FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_X1 ;
  logic [0:0] FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_C1 ;
  logic [7:0] FpAdd_8U_23U_a_left_shift_acc_nl_R0 ;
  logic [7:0] FpAdd_8U_23U_a_left_shift_acc_nl_X0 ;
  logic [7:0] FpAdd_8U_23U_a_left_shift_acc_nl_C0 ;
  logic [8:0] nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s_R0 ;
  logic [8:0] nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s_X0 ;
  logic [8:0] nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s_C0 ;
// module: \$paramod\FP32_SUB_mgc_shift_bl_v4\width_a=24\signd_a=0\width_s=9\width_z=49
  \$paramod\FP32_SUB_mgc_shift_bl_v4\width_a=24\signd_a=0\width_s=9\width_z=49 FpAdd_8U_23U_a_int_mant_p1_lshift_rg (
    .a_T ( {  FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_T , FpAdd_8U_23U_a_sva_36_T [22:0]  } ),
    .a_R ( {  FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_R1 , FpAdd_8U_23U_a_sva_36_R3 [22:0]  } ),
    .a_X ( {  FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_X1 , FpAdd_8U_23U_a_sva_36_X3 [22:0]  } ),
    .a_C ( {  FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_C1 , FpAdd_8U_23U_a_sva_36_C3 [22:0]  } ),
    .a_S ( {  FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_S , FpAdd_8U_23U_a_sva_36_S [22:0]  } ),
    .s_T ( {  FpAdd_8U_23U_a_left_shift_acc_nl_T , nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s_T [0]  } ),
    .s_R ( {  FpAdd_8U_23U_a_left_shift_acc_nl_R0 , nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s_R0 [0]  } ),
    .s_X ( {  FpAdd_8U_23U_a_left_shift_acc_nl_X0 , nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s_X0 [0]  } ),
    .s_C ( {  FpAdd_8U_23U_a_left_shift_acc_nl_C0 , nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s_C0 [0]  } ),
    .s_S ( {  FpAdd_8U_23U_a_left_shift_acc_nl_S , nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s_S [0]  } ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .rst_zy(rst_zy),
    .z_T (  FpAdd_8U_23U_a_int_mant_p1_lshift_itm_T  ),
    .z_R0 (  FpAdd_8U_23U_a_int_mant_p1_lshift_itm_R  ),
    .z_X0 (  FpAdd_8U_23U_a_int_mant_p1_lshift_itm_X  ),
    .z_C0 (  FpAdd_8U_23U_a_int_mant_p1_lshift_itm_C  ),
    .z_S ( FpAdd_8U_23U_a_int_mant_p1_lshift_itm_S ),
    .z ( FpAdd_8U_23U_a_int_mant_p1_lshift_itm ),
    .a ( { FpAdd_8U_23U_IsZero_8U_23U_or_itm_2, FpAdd_8U_23U_a_sva_36[22:0] } ),
    .s ( { FpAdd_8U_23U_a_left_shift_acc_nl, nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s[0] } )
  );
  logic [0:0] FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_R1 ;
  logic [0:0] FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_X1 ;
  logic [0:0] FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_C1 ;
  logic [7:0] FpAdd_8U_23U_b_left_shift_acc_nl_R0 ;
  logic [7:0] FpAdd_8U_23U_b_left_shift_acc_nl_X0 ;
  logic [7:0] FpAdd_8U_23U_b_left_shift_acc_nl_C0 ;
  logic [8:0] nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s_R0 ;
  logic [8:0] nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s_X0 ;
  logic [8:0] nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s_C0 ;
// module: \$paramod\FP32_SUB_mgc_shift_bl_v4\width_a=24\signd_a=0\width_s=9\width_z=49
  \$paramod\FP32_SUB_mgc_shift_bl_v4\width_a=24\signd_a=0\width_s=9\width_z=49 FpAdd_8U_23U_b_int_mant_p1_lshift_rg (
    .a_T ( {  FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_T , b_sva_36_T [22:0]  } ),
    .a_R ( {  FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_R1 , b_sva_36_R3 [22:0]  } ),
    .a_X ( {  FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_X1 , b_sva_36_X3 [22:0]  } ),
    .a_C ( {  FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_C1 , b_sva_36_C3 [22:0]  } ),
    .a_S ( {  FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_S , b_sva_36_S [22:0]  } ),
    .s_T ( {  FpAdd_8U_23U_b_left_shift_acc_nl_T , nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s_T [0]  } ),
    .s_R ( {  FpAdd_8U_23U_b_left_shift_acc_nl_R0 , nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s_R0 [0]  } ),
    .s_X ( {  FpAdd_8U_23U_b_left_shift_acc_nl_X0 , nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s_X0 [0]  } ),
    .s_C ( {  FpAdd_8U_23U_b_left_shift_acc_nl_C0 , nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s_C0 [0]  } ),
    .s_S ( {  FpAdd_8U_23U_b_left_shift_acc_nl_S , nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s_S [0]  } ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .rst_zy(rst_zy),
    .z_T (  FpAdd_8U_23U_b_int_mant_p1_lshift_itm_T  ),
    .z_R0 (  FpAdd_8U_23U_b_int_mant_p1_lshift_itm_R  ),
    .z_X0 (  FpAdd_8U_23U_b_int_mant_p1_lshift_itm_X  ),
    .z_C0 (  FpAdd_8U_23U_b_int_mant_p1_lshift_itm_C  ),
    .z_S ( FpAdd_8U_23U_b_int_mant_p1_lshift_itm_S ),
    .z ( FpAdd_8U_23U_b_int_mant_p1_lshift_itm ),
    .a ( { FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2, b_sva_36[22:0] } ),
    .s ( { FpAdd_8U_23U_b_left_shift_acc_nl, nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s[0] } )
  );
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R6 ;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X6 ;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C6 ;
  logic [5:0] libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_R2 ;
  logic [5:0] libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_X2 ;
  logic [5:0] libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_C2 ;
// module: \$paramod\FP32_SUB_mgc_shift_l_v4\width_a=49\signd_a=0\width_s=6\width_z=49
  \$paramod\FP32_SUB_mgc_shift_l_v4\width_a=49\signd_a=0\width_s=6\width_z=49 FpNormalize_8U_49U_else_lshift_rg (
    .a_T (  FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_T [48:0]  ),
    .a_R (  FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R6 [48:0]  ),
    .a_X (  FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X6 [48:0]  ),
    .a_C (  FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C6 [48:0]  ),
    .a_S (  FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_S [48:0]  ),
    .s_T (  libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_T  ),
    .s_R (  libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_R2  ),
    .s_X (  libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_X2  ),
    .s_C (  libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_C2  ),
    .s_S (  libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .rst_zy(rst_zy),
    .z_T (  FpNormalize_8U_49U_else_lshift_itm_T  ),
    .z_R0 (  FpNormalize_8U_49U_else_lshift_itm_R  ),
    .z_X0 (  FpNormalize_8U_49U_else_lshift_itm_X  ),
    .z_C0 (  FpNormalize_8U_49U_else_lshift_itm_C  ),
    .z_S ( FpNormalize_8U_49U_else_lshift_itm_S ),
    .z ( FpNormalize_8U_49U_else_lshift_itm ),
    .a ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2[48:0] ),
    .s ( libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1 )
  );
  logic [0:0] chn_a_rsc_vz_R0 ;
  logic [0:0] chn_a_rsc_vz_X0 ;
  logic [0:0] chn_a_rsc_vz_C0 ;
  logic [31:0] chn_a_rsc_z_R0 ;
  logic [31:0] chn_a_rsc_z_X0 ;
  logic [31:0] chn_a_rsc_z_C0 ;
  logic [0:0] reg_chn_a_rsci_iswt0_cse_R1 ;
  logic [0:0] reg_chn_a_rsci_iswt0_cse_X1 ;
  logic [0:0] reg_chn_a_rsci_iswt0_cse_C1 ;
  logic [0:0] reg_chn_a_rsci_ld_core_psct_cse_R1 ;
  logic [0:0] reg_chn_a_rsci_ld_core_psct_cse_X1 ;
  logic [0:0] reg_chn_a_rsci_ld_core_psct_cse_C1 ;
  logic [0:0] chn_a_rsci_oswt_R0 ;
  logic [0:0] chn_a_rsci_oswt_X0 ;
  logic [0:0] chn_a_rsci_oswt_C0 ;
  logic [0:0] core_wen_R13 ;
  logic [0:0] core_wen_X13 ;
  logic [0:0] core_wen_C13 ;
  logic [0:0] core_wten_R0 ;
  logic [0:0] core_wten_X0 ;
  logic [0:0] core_wten_C0 ;
  logic [0:0] nvdla_core_rstn_R0 ;
  logic [0:0] nvdla_core_rstn_X0 ;
  logic [0:0] nvdla_core_rstn_C0 ;
// module: HLS_fp32_sub_core_chn_a_rsci
  HLS_fp32_sub_core_chn_a_rsci HLS_fp32_sub_core_chn_a_rsci_inst (
    .chn_a_rsc_vz_T (  chn_a_rsc_vz_T  ),
    .chn_a_rsc_vz_R (  chn_a_rsc_vz_R0  ),
    .chn_a_rsc_vz_X (  chn_a_rsc_vz_X0  ),
    .chn_a_rsc_vz_C (  chn_a_rsc_vz_C0  ),
    .chn_a_rsc_vz_S (  chn_a_rsc_vz_S  ),
    .chn_a_rsc_z_T (  chn_a_rsc_z_T  ),
    .chn_a_rsc_z_R (  chn_a_rsc_z_R0  ),
    .chn_a_rsc_z_X (  chn_a_rsc_z_X0  ),
    .chn_a_rsc_z_C (  chn_a_rsc_z_C0  ),
    .chn_a_rsc_z_S (  chn_a_rsc_z_S  ),
    .chn_a_rsci_iswt0_T (  reg_chn_a_rsci_iswt0_cse_T  ),
    .chn_a_rsci_iswt0_R (  reg_chn_a_rsci_iswt0_cse_R1  ),
    .chn_a_rsci_iswt0_X (  reg_chn_a_rsci_iswt0_cse_X1  ),
    .chn_a_rsci_iswt0_C (  reg_chn_a_rsci_iswt0_cse_C1  ),
    .chn_a_rsci_iswt0_S (  reg_chn_a_rsci_iswt0_cse_S  ),
    .chn_a_rsci_ld_core_psct_T (  reg_chn_a_rsci_ld_core_psct_cse_T  ),
    .chn_a_rsci_ld_core_psct_R (  reg_chn_a_rsci_ld_core_psct_cse_R1  ),
    .chn_a_rsci_ld_core_psct_X (  reg_chn_a_rsci_ld_core_psct_cse_X1  ),
    .chn_a_rsci_ld_core_psct_C (  reg_chn_a_rsci_ld_core_psct_cse_C1  ),
    .chn_a_rsci_ld_core_psct_S (  reg_chn_a_rsci_ld_core_psct_cse_S  ),
    .chn_a_rsci_oswt_T (  chn_a_rsci_oswt_T  ),
    .chn_a_rsci_oswt_R (  chn_a_rsci_oswt_R0  ),
    .chn_a_rsci_oswt_X (  chn_a_rsci_oswt_X0  ),
    .chn_a_rsci_oswt_C (  chn_a_rsci_oswt_C0  ),
    .chn_a_rsci_oswt_S (  chn_a_rsci_oswt_S  ),
    .core_wen_T (  core_wen_T  ),
    .core_wen_R (  core_wen_R13  ),
    .core_wen_X (  core_wen_X13  ),
    .core_wen_C (  core_wen_C13  ),
    .core_wen_S (  core_wen_S  ),
    .core_wten_T (  core_wten_T  ),
    .core_wten_R (  core_wten_R0  ),
    .core_wten_X (  core_wten_X0  ),
    .core_wten_C (  core_wten_C0  ),
    .core_wten_S (  core_wten_S  ),
    .nvdla_core_rstn_T (  nvdla_core_rstn_T  ),
    .nvdla_core_rstn_R (  nvdla_core_rstn_R0  ),
    .nvdla_core_rstn_X (  nvdla_core_rstn_X0  ),
    .nvdla_core_rstn_C (  nvdla_core_rstn_C0  ),
    .nvdla_core_rstn_S (  nvdla_core_rstn_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .chn_a_rsc_lz_T (  chn_a_rsc_lz_T  ),
    .chn_a_rsc_lz_R0 (  chn_a_rsc_lz_R  ),
    .chn_a_rsc_lz_X0 (  chn_a_rsc_lz_X  ),
    .chn_a_rsc_lz_C0 (  chn_a_rsc_lz_C  ),
    .chn_a_rsc_lz_S ( chn_a_rsc_lz_S ),
    .chn_a_rsci_bawt_T (  chn_a_rsci_bawt_T  ),
    .chn_a_rsci_bawt_R0 (  chn_a_rsci_bawt_R  ),
    .chn_a_rsci_bawt_X0 (  chn_a_rsci_bawt_X  ),
    .chn_a_rsci_bawt_C0 (  chn_a_rsci_bawt_C  ),
    .chn_a_rsci_bawt_S ( chn_a_rsci_bawt_S ),
    .chn_a_rsci_d_mxwt_T (  chn_a_rsci_d_mxwt_T  ),
    .chn_a_rsci_d_mxwt_R0 (  chn_a_rsci_d_mxwt_R  ),
    .chn_a_rsci_d_mxwt_X0 (  chn_a_rsci_d_mxwt_X  ),
    .chn_a_rsci_d_mxwt_C0 (  chn_a_rsci_d_mxwt_C  ),
    .chn_a_rsci_d_mxwt_S ( chn_a_rsci_d_mxwt_S ),
    .chn_a_rsci_wen_comp_T (  chn_a_rsci_wen_comp_T  ),
    .chn_a_rsci_wen_comp_R0 (  chn_a_rsci_wen_comp_R  ),
    .chn_a_rsci_wen_comp_X0 (  chn_a_rsci_wen_comp_X  ),
    .chn_a_rsci_wen_comp_C0 (  chn_a_rsci_wen_comp_C  ),
    .chn_a_rsci_wen_comp_S ( chn_a_rsci_wen_comp_S ),
    .nvdla_core_clk ( nvdla_core_clk ),
    .chn_a_rsci_d_mxwt ( chn_a_rsci_d_mxwt ),
    .core_wten ( core_wten ),
    .chn_a_rsci_bawt ( chn_a_rsci_bawt ),
    .chn_a_rsc_z ( chn_a_rsc_z ),
    .chn_a_rsc_lz ( chn_a_rsc_lz ),
    .chn_a_rsc_vz ( chn_a_rsc_vz ),
    .chn_a_rsci_ld_core_psct ( reg_chn_a_rsci_ld_core_psct_cse ),
    .chn_a_rsci_oswt ( chn_a_rsci_oswt ),
    .nvdla_core_rstn ( nvdla_core_rstn ),
    .chn_a_rsci_wen_comp ( chn_a_rsci_wen_comp ),
    .chn_a_rsci_iswt0 ( reg_chn_a_rsci_iswt0_cse ),
    .core_wen ( core_wen )
  );
  logic [0:0] chn_b_rsc_vz_R0 ;
  logic [0:0] chn_b_rsc_vz_X0 ;
  logic [0:0] chn_b_rsc_vz_C0 ;
  logic [31:0] chn_b_rsc_z_R0 ;
  logic [31:0] chn_b_rsc_z_X0 ;
  logic [31:0] chn_b_rsc_z_C0 ;
  logic [0:0] reg_chn_a_rsci_iswt0_cse_R2 ;
  logic [0:0] reg_chn_a_rsci_iswt0_cse_X2 ;
  logic [0:0] reg_chn_a_rsci_iswt0_cse_C2 ;
  logic [0:0] reg_chn_a_rsci_ld_core_psct_cse_R2 ;
  logic [0:0] reg_chn_a_rsci_ld_core_psct_cse_X2 ;
  logic [0:0] reg_chn_a_rsci_ld_core_psct_cse_C2 ;
  logic [0:0] chn_b_rsci_oswt_R0 ;
  logic [0:0] chn_b_rsci_oswt_X0 ;
  logic [0:0] chn_b_rsci_oswt_C0 ;
  logic [0:0] core_wen_R14 ;
  logic [0:0] core_wen_X14 ;
  logic [0:0] core_wen_C14 ;
  logic [0:0] core_wten_R1 ;
  logic [0:0] core_wten_X1 ;
  logic [0:0] core_wten_C1 ;
  logic [0:0] nvdla_core_rstn_R1 ;
  logic [0:0] nvdla_core_rstn_X1 ;
  logic [0:0] nvdla_core_rstn_C1 ;
// module: HLS_fp32_sub_core_chn_b_rsci
  HLS_fp32_sub_core_chn_b_rsci HLS_fp32_sub_core_chn_b_rsci_inst (
    .chn_b_rsc_vz_T (  chn_b_rsc_vz_T  ),
    .chn_b_rsc_vz_R (  chn_b_rsc_vz_R0  ),
    .chn_b_rsc_vz_X (  chn_b_rsc_vz_X0  ),
    .chn_b_rsc_vz_C (  chn_b_rsc_vz_C0  ),
    .chn_b_rsc_vz_S (  chn_b_rsc_vz_S  ),
    .chn_b_rsc_z_T (  chn_b_rsc_z_T  ),
    .chn_b_rsc_z_R (  chn_b_rsc_z_R0  ),
    .chn_b_rsc_z_X (  chn_b_rsc_z_X0  ),
    .chn_b_rsc_z_C (  chn_b_rsc_z_C0  ),
    .chn_b_rsc_z_S (  chn_b_rsc_z_S  ),
    .chn_b_rsci_iswt0_T (  reg_chn_a_rsci_iswt0_cse_T  ),
    .chn_b_rsci_iswt0_R (  reg_chn_a_rsci_iswt0_cse_R2  ),
    .chn_b_rsci_iswt0_X (  reg_chn_a_rsci_iswt0_cse_X2  ),
    .chn_b_rsci_iswt0_C (  reg_chn_a_rsci_iswt0_cse_C2  ),
    .chn_b_rsci_iswt0_S (  reg_chn_a_rsci_iswt0_cse_S  ),
    .chn_b_rsci_ld_core_psct_T (  reg_chn_a_rsci_ld_core_psct_cse_T  ),
    .chn_b_rsci_ld_core_psct_R (  reg_chn_a_rsci_ld_core_psct_cse_R2  ),
    .chn_b_rsci_ld_core_psct_X (  reg_chn_a_rsci_ld_core_psct_cse_X2  ),
    .chn_b_rsci_ld_core_psct_C (  reg_chn_a_rsci_ld_core_psct_cse_C2  ),
    .chn_b_rsci_ld_core_psct_S (  reg_chn_a_rsci_ld_core_psct_cse_S  ),
    .chn_b_rsci_oswt_T (  chn_b_rsci_oswt_T  ),
    .chn_b_rsci_oswt_R (  chn_b_rsci_oswt_R0  ),
    .chn_b_rsci_oswt_X (  chn_b_rsci_oswt_X0  ),
    .chn_b_rsci_oswt_C (  chn_b_rsci_oswt_C0  ),
    .chn_b_rsci_oswt_S (  chn_b_rsci_oswt_S  ),
    .core_wen_T (  core_wen_T  ),
    .core_wen_R (  core_wen_R14  ),
    .core_wen_X (  core_wen_X14  ),
    .core_wen_C (  core_wen_C14  ),
    .core_wen_S (  core_wen_S  ),
    .core_wten_T (  core_wten_T  ),
    .core_wten_R (  core_wten_R1  ),
    .core_wten_X (  core_wten_X1  ),
    .core_wten_C (  core_wten_C1  ),
    .core_wten_S (  core_wten_S  ),
    .nvdla_core_rstn_T (  nvdla_core_rstn_T  ),
    .nvdla_core_rstn_R (  nvdla_core_rstn_R1  ),
    .nvdla_core_rstn_X (  nvdla_core_rstn_X1  ),
    .nvdla_core_rstn_C (  nvdla_core_rstn_C1  ),
    .nvdla_core_rstn_S (  nvdla_core_rstn_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .chn_b_rsc_lz_T (  chn_b_rsc_lz_T  ),
    .chn_b_rsc_lz_R0 (  chn_b_rsc_lz_R  ),
    .chn_b_rsc_lz_X0 (  chn_b_rsc_lz_X  ),
    .chn_b_rsc_lz_C0 (  chn_b_rsc_lz_C  ),
    .chn_b_rsc_lz_S ( chn_b_rsc_lz_S ),
    .chn_b_rsci_bawt_T (  chn_b_rsci_bawt_T  ),
    .chn_b_rsci_bawt_R0 (  chn_b_rsci_bawt_R  ),
    .chn_b_rsci_bawt_X0 (  chn_b_rsci_bawt_X  ),
    .chn_b_rsci_bawt_C0 (  chn_b_rsci_bawt_C  ),
    .chn_b_rsci_bawt_S ( chn_b_rsci_bawt_S ),
    .chn_b_rsci_d_mxwt_T (  chn_b_rsci_d_mxwt_T  ),
    .chn_b_rsci_d_mxwt_R0 (  chn_b_rsci_d_mxwt_R  ),
    .chn_b_rsci_d_mxwt_X0 (  chn_b_rsci_d_mxwt_X  ),
    .chn_b_rsci_d_mxwt_C0 (  chn_b_rsci_d_mxwt_C  ),
    .chn_b_rsci_d_mxwt_S ( chn_b_rsci_d_mxwt_S ),
    .chn_b_rsci_wen_comp_T (  chn_b_rsci_wen_comp_T  ),
    .chn_b_rsci_wen_comp_R0 (  chn_b_rsci_wen_comp_R  ),
    .chn_b_rsci_wen_comp_X0 (  chn_b_rsci_wen_comp_X  ),
    .chn_b_rsci_wen_comp_C0 (  chn_b_rsci_wen_comp_C  ),
    .chn_b_rsci_wen_comp_S ( chn_b_rsci_wen_comp_S ),
    .nvdla_core_rstn ( nvdla_core_rstn ),
    .chn_b_rsc_z ( chn_b_rsc_z ),
    .chn_b_rsci_d_mxwt ( chn_b_rsci_d_mxwt ),
    .nvdla_core_clk ( nvdla_core_clk ),
    .chn_b_rsci_iswt0 ( reg_chn_a_rsci_iswt0_cse ),
    .chn_b_rsc_lz ( chn_b_rsc_lz ),
    .chn_b_rsci_bawt ( chn_b_rsci_bawt ),
    .chn_b_rsc_vz ( chn_b_rsc_vz ),
    .chn_b_rsci_wen_comp ( chn_b_rsci_wen_comp ),
    .chn_b_rsci_ld_core_psct ( reg_chn_a_rsci_ld_core_psct_cse ),
    .chn_b_rsci_oswt ( chn_b_rsci_oswt ),
    .core_wen ( core_wen ),
    .core_wten ( core_wten )
  );
  logic [0:0] chn_o_rsc_vz_R0 ;
  logic [0:0] chn_o_rsc_vz_X0 ;
  logic [0:0] chn_o_rsc_vz_C0 ;
  logic [0:0] chn_o_rsci_d_31_R1 ;
  logic [0:0] chn_o_rsci_d_31_X1 ;
  logic [0:0] chn_o_rsci_d_31_C1 ;
  logic [7:0] chn_o_rsci_d_30_23_R1 ;
  logic [7:0] chn_o_rsci_d_30_23_X1 ;
  logic [7:0] chn_o_rsci_d_30_23_C1 ;
  logic [22:0] chn_o_rsci_d_22_0_R1 ;
  logic [22:0] chn_o_rsci_d_22_0_X1 ;
  logic [22:0] chn_o_rsci_d_22_0_C1 ;
  logic [0:0] chn_o_rsci_iswt0_R1 ;
  logic [0:0] chn_o_rsci_iswt0_X1 ;
  logic [0:0] chn_o_rsci_iswt0_C1 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R6 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X6 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C6 ;
  logic [0:0] chn_o_rsci_oswt_R0 ;
  logic [0:0] chn_o_rsci_oswt_X0 ;
  logic [0:0] chn_o_rsci_oswt_C0 ;
  logic [0:0] core_wen_R15 ;
  logic [0:0] core_wen_X15 ;
  logic [0:0] core_wen_C15 ;
  logic [0:0] core_wten_R2 ;
  logic [0:0] core_wten_X2 ;
  logic [0:0] core_wten_C2 ;
  logic [0:0] nvdla_core_rstn_R2 ;
  logic [0:0] nvdla_core_rstn_X2 ;
  logic [0:0] nvdla_core_rstn_C2 ;
// module: HLS_fp32_sub_core_chn_o_rsci
  HLS_fp32_sub_core_chn_o_rsci HLS_fp32_sub_core_chn_o_rsci_inst (
    .chn_o_rsc_vz_T (  chn_o_rsc_vz_T  ),
    .chn_o_rsc_vz_R (  chn_o_rsc_vz_R0  ),
    .chn_o_rsc_vz_X (  chn_o_rsc_vz_X0  ),
    .chn_o_rsc_vz_C (  chn_o_rsc_vz_C0  ),
    .chn_o_rsc_vz_S (  chn_o_rsc_vz_S  ),
    .chn_o_rsci_d_T ( {  chn_o_rsci_d_31_T , chn_o_rsci_d_30_23_T , chn_o_rsci_d_22_0_T  } ),
    .chn_o_rsci_d_R ( {  chn_o_rsci_d_31_R1 , chn_o_rsci_d_30_23_R1 , chn_o_rsci_d_22_0_R1  } ),
    .chn_o_rsci_d_X ( {  chn_o_rsci_d_31_X1 , chn_o_rsci_d_30_23_X1 , chn_o_rsci_d_22_0_X1  } ),
    .chn_o_rsci_d_C ( {  chn_o_rsci_d_31_C1 , chn_o_rsci_d_30_23_C1 , chn_o_rsci_d_22_0_C1  } ),
    .chn_o_rsci_d_S ( {  chn_o_rsci_d_31_S , chn_o_rsci_d_30_23_S , chn_o_rsci_d_22_0_S  } ),
    .chn_o_rsci_iswt0_T (  chn_o_rsci_iswt0_T  ),
    .chn_o_rsci_iswt0_R (  chn_o_rsci_iswt0_R1  ),
    .chn_o_rsci_iswt0_X (  chn_o_rsci_iswt0_X1  ),
    .chn_o_rsci_iswt0_C (  chn_o_rsci_iswt0_C1  ),
    .chn_o_rsci_iswt0_S (  chn_o_rsci_iswt0_S  ),
    .chn_o_rsci_ld_core_psct_T (  reg_chn_o_rsci_ld_core_psct_cse_T  ),
    .chn_o_rsci_ld_core_psct_R (  reg_chn_o_rsci_ld_core_psct_cse_R6  ),
    .chn_o_rsci_ld_core_psct_X (  reg_chn_o_rsci_ld_core_psct_cse_X6  ),
    .chn_o_rsci_ld_core_psct_C (  reg_chn_o_rsci_ld_core_psct_cse_C6  ),
    .chn_o_rsci_ld_core_psct_S (  reg_chn_o_rsci_ld_core_psct_cse_S  ),
    .chn_o_rsci_oswt_T (  chn_o_rsci_oswt_T  ),
    .chn_o_rsci_oswt_R (  chn_o_rsci_oswt_R0  ),
    .chn_o_rsci_oswt_X (  chn_o_rsci_oswt_X0  ),
    .chn_o_rsci_oswt_C (  chn_o_rsci_oswt_C0  ),
    .chn_o_rsci_oswt_S (  chn_o_rsci_oswt_S  ),
    .core_wen_T (  core_wen_T  ),
    .core_wen_R (  core_wen_R15  ),
    .core_wen_X (  core_wen_X15  ),
    .core_wen_C (  core_wen_C15  ),
    .core_wen_S (  core_wen_S  ),
    .core_wten_T (  core_wten_T  ),
    .core_wten_R (  core_wten_R2  ),
    .core_wten_X (  core_wten_X2  ),
    .core_wten_C (  core_wten_C2  ),
    .core_wten_S (  core_wten_S  ),
    .nvdla_core_rstn_T (  nvdla_core_rstn_T  ),
    .nvdla_core_rstn_R (  nvdla_core_rstn_R2  ),
    .nvdla_core_rstn_X (  nvdla_core_rstn_X2  ),
    .nvdla_core_rstn_C (  nvdla_core_rstn_C2  ),
    .nvdla_core_rstn_S (  nvdla_core_rstn_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .chn_o_rsc_lz_T (  chn_o_rsc_lz_T  ),
    .chn_o_rsc_lz_R0 (  chn_o_rsc_lz_R  ),
    .chn_o_rsc_lz_X0 (  chn_o_rsc_lz_X  ),
    .chn_o_rsc_lz_C0 (  chn_o_rsc_lz_C  ),
    .chn_o_rsc_lz_S ( chn_o_rsc_lz_S ),
    .chn_o_rsc_z_T (  chn_o_rsc_z_T  ),
    .chn_o_rsc_z_R0 (  chn_o_rsc_z_R  ),
    .chn_o_rsc_z_X0 (  chn_o_rsc_z_X  ),
    .chn_o_rsc_z_C0 (  chn_o_rsc_z_C  ),
    .chn_o_rsc_z_S ( chn_o_rsc_z_S ),
    .chn_o_rsci_bawt_T (  chn_o_rsci_bawt_T  ),
    .chn_o_rsci_bawt_R0 (  chn_o_rsci_bawt_R  ),
    .chn_o_rsci_bawt_X0 (  chn_o_rsci_bawt_X  ),
    .chn_o_rsci_bawt_C0 (  chn_o_rsci_bawt_C  ),
    .chn_o_rsci_bawt_S ( chn_o_rsci_bawt_S ),
    .chn_o_rsci_wen_comp_T (  chn_o_rsci_wen_comp_T  ),
    .chn_o_rsci_wen_comp_R0 (  chn_o_rsci_wen_comp_R  ),
    .chn_o_rsci_wen_comp_X0 (  chn_o_rsci_wen_comp_X  ),
    .chn_o_rsci_wen_comp_C0 (  chn_o_rsci_wen_comp_C  ),
    .chn_o_rsci_wen_comp_S ( chn_o_rsci_wen_comp_S ),
    .nvdla_core_rstn ( nvdla_core_rstn ),
    .nvdla_core_clk ( nvdla_core_clk ),
    .chn_o_rsci_d ( { chn_o_rsci_d_31, chn_o_rsci_d_30_23, chn_o_rsci_d_22_0 } ),
    .core_wten ( core_wten ),
    .chn_o_rsc_z ( chn_o_rsc_z ),
    .core_wen ( core_wen ),
    .chn_o_rsc_lz ( chn_o_rsc_lz ),
    .chn_o_rsci_ld_core_psct ( reg_chn_o_rsci_ld_core_psct_cse ),
    .chn_o_rsci_bawt ( chn_o_rsci_bawt ),
    .chn_o_rsc_vz ( chn_o_rsc_vz ),
    .chn_o_rsci_wen_comp ( chn_o_rsci_wen_comp ),
    .chn_o_rsci_iswt0 ( chn_o_rsci_iswt0 ),
    .chn_o_rsci_oswt ( chn_o_rsci_oswt )
  );
  logic [0:0] core_wen_R16 ;
  logic [0:0] core_wen_X16 ;
  logic [0:0] core_wen_C16 ;
  logic [0:0] nvdla_core_rstn_R3 ;
  logic [0:0] nvdla_core_rstn_X3 ;
  logic [0:0] nvdla_core_rstn_C3 ;
// module: HLS_fp32_sub_core_core_fsm
  HLS_fp32_sub_core_core_fsm HLS_fp32_sub_core_core_fsm_inst (
    .core_wen_T (  core_wen_T  ),
    .core_wen_R (  core_wen_R16  ),
    .core_wen_X (  core_wen_X16  ),
    .core_wen_C (  core_wen_C16  ),
    .core_wen_S (  core_wen_S  ),
    .nvdla_core_rstn_T (  nvdla_core_rstn_T  ),
    .nvdla_core_rstn_R (  nvdla_core_rstn_R3  ),
    .nvdla_core_rstn_X (  nvdla_core_rstn_X3  ),
    .nvdla_core_rstn_C (  nvdla_core_rstn_C3  ),
    .nvdla_core_rstn_S (  nvdla_core_rstn_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .fsm_output_T (  fsm_output_T  ),
    .fsm_output_R0 (  fsm_output_R  ),
    .fsm_output_X0 (  fsm_output_X  ),
    .fsm_output_C0 (  fsm_output_C  ),
    .fsm_output_S ( fsm_output_S ),
    .nvdla_core_clk ( nvdla_core_clk ),
    .nvdla_core_rstn ( nvdla_core_rstn ),
    .core_wen ( core_wen ),
    .fsm_output ( fsm_output )
  );
  logic [0:0] chn_a_rsci_wen_comp_R0 ;
  logic [0:0] chn_a_rsci_wen_comp_X0 ;
  logic [0:0] chn_a_rsci_wen_comp_C0 ;
  logic [0:0] chn_b_rsci_wen_comp_R0 ;
  logic [0:0] chn_b_rsci_wen_comp_X0 ;
  logic [0:0] chn_b_rsci_wen_comp_C0 ;
  logic [0:0] chn_o_rsci_wen_comp_R0 ;
  logic [0:0] chn_o_rsci_wen_comp_X0 ;
  logic [0:0] chn_o_rsci_wen_comp_C0 ;
  logic [0:0] nvdla_core_rstn_R4 ;
  logic [0:0] nvdla_core_rstn_X4 ;
  logic [0:0] nvdla_core_rstn_C4 ;
// module: HLS_fp32_sub_core_staller
  HLS_fp32_sub_core_staller HLS_fp32_sub_core_staller_inst (
    .chn_a_rsci_wen_comp_T (  chn_a_rsci_wen_comp_T  ),
    .chn_a_rsci_wen_comp_R (  chn_a_rsci_wen_comp_R0  ),
    .chn_a_rsci_wen_comp_X (  chn_a_rsci_wen_comp_X0  ),
    .chn_a_rsci_wen_comp_C (  chn_a_rsci_wen_comp_C0  ),
    .chn_a_rsci_wen_comp_S (  chn_a_rsci_wen_comp_S  ),
    .chn_b_rsci_wen_comp_T (  chn_b_rsci_wen_comp_T  ),
    .chn_b_rsci_wen_comp_R (  chn_b_rsci_wen_comp_R0  ),
    .chn_b_rsci_wen_comp_X (  chn_b_rsci_wen_comp_X0  ),
    .chn_b_rsci_wen_comp_C (  chn_b_rsci_wen_comp_C0  ),
    .chn_b_rsci_wen_comp_S (  chn_b_rsci_wen_comp_S  ),
    .chn_o_rsci_wen_comp_T (  chn_o_rsci_wen_comp_T  ),
    .chn_o_rsci_wen_comp_R (  chn_o_rsci_wen_comp_R0  ),
    .chn_o_rsci_wen_comp_X (  chn_o_rsci_wen_comp_X0  ),
    .chn_o_rsci_wen_comp_C (  chn_o_rsci_wen_comp_C0  ),
    .chn_o_rsci_wen_comp_S (  chn_o_rsci_wen_comp_S  ),
    .nvdla_core_rstn_T (  nvdla_core_rstn_T  ),
    .nvdla_core_rstn_R (  nvdla_core_rstn_R4  ),
    .nvdla_core_rstn_X (  nvdla_core_rstn_X4  ),
    .nvdla_core_rstn_C (  nvdla_core_rstn_C4  ),
    .nvdla_core_rstn_S (  nvdla_core_rstn_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .core_wen_T (  core_wen_T  ),
    .core_wen_R0 (  core_wen_R  ),
    .core_wen_X0 (  core_wen_X  ),
    .core_wen_C0 (  core_wen_C  ),
    .core_wen_S ( core_wen_S ),
    .core_wten_T (  core_wten_T  ),
    .core_wten_R0 (  core_wten_R  ),
    .core_wten_X0 (  core_wten_X  ),
    .core_wten_C0 (  core_wten_C  ),
    .core_wten_S ( core_wten_S ),
    .nvdla_core_clk ( nvdla_core_clk ),
    .chn_b_rsci_wen_comp ( chn_b_rsci_wen_comp ),
    .core_wten ( core_wten ),
    .nvdla_core_rstn ( nvdla_core_rstn ),
    .chn_a_rsci_wen_comp ( chn_a_rsci_wen_comp ),
    .chn_o_rsci_wen_comp ( chn_o_rsci_wen_comp ),
    .core_wen ( core_wen )
  );
  assign { FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R6 [49:49] } = 0;
  assign { FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X6 [49:49] } = 0;
  assign { FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C6 [49:49] } = 0;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R7 ;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X7 ;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C7 ;
// module: FP32_SUB_leading_sign_49_0
  FP32_SUB_leading_sign_49_0 leading_sign_49_0_rg (
    .mantissa_T (  FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_T [48:0]  ),
    .mantissa_R (  FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R7 [48:0]  ),
    .mantissa_X (  FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X7 [48:0]  ),
    .mantissa_C (  FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C7 [48:0]  ),
    .mantissa_S (  FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_S [48:0]  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .rst_zy(rst_zy),
    .rtn_T (  libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_T  ),
    .rtn_R0 (  libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_R  ),
    .rtn_X0 (  libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_X  ),
    .rtn_C0 (  libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_C  ),
    .rtn_S ( libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_S ),
    .rtn ( libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1 ),
    .mantissa ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2[48:0] )
  );
  assign _000_[1:0] = { FpAdd_8U_23U_and_1_nl, FpAdd_8U_23U_and_2_nl };
  assign _000__T [1:0] = {  FpAdd_8U_23U_and_1_nl_T , FpAdd_8U_23U_and_2_nl_T  };
  logic [13:0] _000__S ;
  assign _000__S = 0 ;
  logic [0:0] FpAdd_8U_23U_and_1_nl_R8 ;
  logic [0:0] FpAdd_8U_23U_and_1_nl_X8 ;
  logic [0:0] FpAdd_8U_23U_and_1_nl_C8 ;
  assign FpAdd_8U_23U_and_1_nl_R8 = _000__R [1:1] ;
  assign FpAdd_8U_23U_and_1_nl_X8 = _000__X [1:1] ;
  assign FpAdd_8U_23U_and_1_nl_C8 = _000__C [1:1] ;
  logic [0:0] FpAdd_8U_23U_and_2_nl_R8 ;
  logic [0:0] FpAdd_8U_23U_and_2_nl_X8 ;
  logic [0:0] FpAdd_8U_23U_and_2_nl_C8 ;
  assign FpAdd_8U_23U_and_2_nl_R8 = _000__R [0:0] ;
  assign FpAdd_8U_23U_and_2_nl_X8 = _000__X [0:0] ;
  assign FpAdd_8U_23U_and_2_nl_C8 = _000__C [0:0] ;
  assign _049_[9] = 1'b0;
  assign _049__T [9] = 0 ;
  assign _049__S = 14'b1 ;
  assign _050_[10] = 1'b0;
  assign _050__T [10] = 0 ;
  assign _050__S = 14'b1 ;
  assign FpAdd_8U_23U_if_3_if_acc_1_itm_7_1 = FpAdd_8U_23U_if_3_if_acc_1_nl[7];
  assign { FpAdd_8U_23U_if_3_if_acc_1_nl_R2 [0], FpAdd_8U_23U_if_3_if_acc_1_nl_R2 [1], FpAdd_8U_23U_if_3_if_acc_1_nl_R2 [2], FpAdd_8U_23U_if_3_if_acc_1_nl_R2 [3], FpAdd_8U_23U_if_3_if_acc_1_nl_R2 [4], FpAdd_8U_23U_if_3_if_acc_1_nl_R2 [5], FpAdd_8U_23U_if_3_if_acc_1_nl_R2 [6] } = 0;
  assign { FpAdd_8U_23U_if_3_if_acc_1_nl_X2 [0], FpAdd_8U_23U_if_3_if_acc_1_nl_X2 [1], FpAdd_8U_23U_if_3_if_acc_1_nl_X2 [2], FpAdd_8U_23U_if_3_if_acc_1_nl_X2 [3], FpAdd_8U_23U_if_3_if_acc_1_nl_X2 [4], FpAdd_8U_23U_if_3_if_acc_1_nl_X2 [5], FpAdd_8U_23U_if_3_if_acc_1_nl_X2 [6] } = 0;
  assign { FpAdd_8U_23U_if_3_if_acc_1_nl_C2 [0], FpAdd_8U_23U_if_3_if_acc_1_nl_C2 [1], FpAdd_8U_23U_if_3_if_acc_1_nl_C2 [2], FpAdd_8U_23U_if_3_if_acc_1_nl_C2 [3], FpAdd_8U_23U_if_3_if_acc_1_nl_C2 [4], FpAdd_8U_23U_if_3_if_acc_1_nl_C2 [5], FpAdd_8U_23U_if_3_if_acc_1_nl_C2 [6] } = 0;
  logic [7:0] FpAdd_8U_23U_if_3_if_acc_1_nl_C3 ;
  logic [7:0] FpAdd_8U_23U_if_3_if_acc_1_nl_R3 ;
  logic [7:0] FpAdd_8U_23U_if_3_if_acc_1_nl_X3 ;
  assign FpAdd_8U_23U_if_3_if_acc_1_itm_7_1_T = FpAdd_8U_23U_if_3_if_acc_1_nl_T [7] ;
  assign FpAdd_8U_23U_if_3_if_acc_1_nl_C3 [7] = FpAdd_8U_23U_if_3_if_acc_1_itm_7_1_C ;
  assign FpAdd_8U_23U_if_3_if_acc_1_nl_R3 [7] = FpAdd_8U_23U_if_3_if_acc_1_itm_7_1_R ;
  assign FpAdd_8U_23U_if_3_if_acc_1_nl_X3 [7] = FpAdd_8U_23U_if_3_if_acc_1_itm_7_1_X ;
  assign FpAdd_8U_23U_if_3_if_acc_1_itm_7_1_S = FpAdd_8U_23U_if_3_if_acc_1_nl_S ;
  assign FpAdd_8U_23U_if_4_if_acc_1_itm_7_1 = FpAdd_8U_23U_if_4_if_acc_1_nl[7];
  assign { FpAdd_8U_23U_if_4_if_acc_1_nl_R1 [0], FpAdd_8U_23U_if_4_if_acc_1_nl_R1 [1], FpAdd_8U_23U_if_4_if_acc_1_nl_R1 [2], FpAdd_8U_23U_if_4_if_acc_1_nl_R1 [3], FpAdd_8U_23U_if_4_if_acc_1_nl_R1 [4], FpAdd_8U_23U_if_4_if_acc_1_nl_R1 [5], FpAdd_8U_23U_if_4_if_acc_1_nl_R1 [6] } = 0;
  assign { FpAdd_8U_23U_if_4_if_acc_1_nl_X1 [0], FpAdd_8U_23U_if_4_if_acc_1_nl_X1 [1], FpAdd_8U_23U_if_4_if_acc_1_nl_X1 [2], FpAdd_8U_23U_if_4_if_acc_1_nl_X1 [3], FpAdd_8U_23U_if_4_if_acc_1_nl_X1 [4], FpAdd_8U_23U_if_4_if_acc_1_nl_X1 [5], FpAdd_8U_23U_if_4_if_acc_1_nl_X1 [6] } = 0;
  assign { FpAdd_8U_23U_if_4_if_acc_1_nl_C1 [0], FpAdd_8U_23U_if_4_if_acc_1_nl_C1 [1], FpAdd_8U_23U_if_4_if_acc_1_nl_C1 [2], FpAdd_8U_23U_if_4_if_acc_1_nl_C1 [3], FpAdd_8U_23U_if_4_if_acc_1_nl_C1 [4], FpAdd_8U_23U_if_4_if_acc_1_nl_C1 [5], FpAdd_8U_23U_if_4_if_acc_1_nl_C1 [6] } = 0;
  logic [7:0] FpAdd_8U_23U_if_4_if_acc_1_nl_C2 ;
  logic [7:0] FpAdd_8U_23U_if_4_if_acc_1_nl_R2 ;
  logic [7:0] FpAdd_8U_23U_if_4_if_acc_1_nl_X2 ;
  assign FpAdd_8U_23U_if_4_if_acc_1_itm_7_1_T = FpAdd_8U_23U_if_4_if_acc_1_nl_T [7] ;
  assign FpAdd_8U_23U_if_4_if_acc_1_nl_C2 [7] = FpAdd_8U_23U_if_4_if_acc_1_itm_7_1_C ;
  assign FpAdd_8U_23U_if_4_if_acc_1_nl_R2 [7] = FpAdd_8U_23U_if_4_if_acc_1_itm_7_1_R ;
  assign FpAdd_8U_23U_if_4_if_acc_1_nl_X2 [7] = FpAdd_8U_23U_if_4_if_acc_1_itm_7_1_X ;
  assign FpAdd_8U_23U_if_4_if_acc_1_itm_7_1_S = FpAdd_8U_23U_if_4_if_acc_1_nl_S ;
  assign FpAdd_8U_23U_is_a_greater_acc_1_itm_8_1 = FpAdd_8U_23U_is_a_greater_acc_1_nl[8];
  assign { FpAdd_8U_23U_is_a_greater_acc_1_nl_R1 [0], FpAdd_8U_23U_is_a_greater_acc_1_nl_R1 [1], FpAdd_8U_23U_is_a_greater_acc_1_nl_R1 [2], FpAdd_8U_23U_is_a_greater_acc_1_nl_R1 [3], FpAdd_8U_23U_is_a_greater_acc_1_nl_R1 [4], FpAdd_8U_23U_is_a_greater_acc_1_nl_R1 [5], FpAdd_8U_23U_is_a_greater_acc_1_nl_R1 [6], FpAdd_8U_23U_is_a_greater_acc_1_nl_R1 [7] } = 0;
  assign { FpAdd_8U_23U_is_a_greater_acc_1_nl_X1 [0], FpAdd_8U_23U_is_a_greater_acc_1_nl_X1 [1], FpAdd_8U_23U_is_a_greater_acc_1_nl_X1 [2], FpAdd_8U_23U_is_a_greater_acc_1_nl_X1 [3], FpAdd_8U_23U_is_a_greater_acc_1_nl_X1 [4], FpAdd_8U_23U_is_a_greater_acc_1_nl_X1 [5], FpAdd_8U_23U_is_a_greater_acc_1_nl_X1 [6], FpAdd_8U_23U_is_a_greater_acc_1_nl_X1 [7] } = 0;
  assign { FpAdd_8U_23U_is_a_greater_acc_1_nl_C1 [0], FpAdd_8U_23U_is_a_greater_acc_1_nl_C1 [1], FpAdd_8U_23U_is_a_greater_acc_1_nl_C1 [2], FpAdd_8U_23U_is_a_greater_acc_1_nl_C1 [3], FpAdd_8U_23U_is_a_greater_acc_1_nl_C1 [4], FpAdd_8U_23U_is_a_greater_acc_1_nl_C1 [5], FpAdd_8U_23U_is_a_greater_acc_1_nl_C1 [6], FpAdd_8U_23U_is_a_greater_acc_1_nl_C1 [7] } = 0;
  logic [8:0] FpAdd_8U_23U_is_a_greater_acc_1_nl_C2 ;
  logic [8:0] FpAdd_8U_23U_is_a_greater_acc_1_nl_R2 ;
  logic [8:0] FpAdd_8U_23U_is_a_greater_acc_1_nl_X2 ;
  assign FpAdd_8U_23U_is_a_greater_acc_1_itm_8_1_T = FpAdd_8U_23U_is_a_greater_acc_1_nl_T [8] ;
  assign FpAdd_8U_23U_is_a_greater_acc_1_nl_C2 [8] = FpAdd_8U_23U_is_a_greater_acc_1_itm_8_1_C ;
  assign FpAdd_8U_23U_is_a_greater_acc_1_nl_R2 [8] = FpAdd_8U_23U_is_a_greater_acc_1_itm_8_1_R ;
  assign FpAdd_8U_23U_is_a_greater_acc_1_nl_X2 [8] = FpAdd_8U_23U_is_a_greater_acc_1_itm_8_1_X ;
  assign FpAdd_8U_23U_is_a_greater_acc_1_itm_8_1_S = FpAdd_8U_23U_is_a_greater_acc_1_nl_S ;
  assign FpAdd_8U_23U_is_a_greater_oif_aelse_acc_itm_23_1 = FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl[23];
  assign { FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R1 [0], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R1 [1], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R1 [2], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R1 [3], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R1 [4], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R1 [5], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R1 [6], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R1 [7], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R1 [8], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R1 [9], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R1 [10], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R1 [11], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R1 [12], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R1 [13], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R1 [14], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R1 [15], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R1 [16], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R1 [17], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R1 [18], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R1 [19], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R1 [20], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R1 [21], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R1 [22] } = 0;
  assign { FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X1 [0], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X1 [1], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X1 [2], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X1 [3], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X1 [4], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X1 [5], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X1 [6], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X1 [7], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X1 [8], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X1 [9], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X1 [10], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X1 [11], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X1 [12], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X1 [13], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X1 [14], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X1 [15], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X1 [16], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X1 [17], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X1 [18], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X1 [19], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X1 [20], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X1 [21], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X1 [22] } = 0;
  assign { FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C1 [0], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C1 [1], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C1 [2], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C1 [3], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C1 [4], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C1 [5], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C1 [6], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C1 [7], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C1 [8], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C1 [9], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C1 [10], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C1 [11], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C1 [12], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C1 [13], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C1 [14], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C1 [15], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C1 [16], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C1 [17], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C1 [18], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C1 [19], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C1 [20], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C1 [21], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C1 [22] } = 0;
  logic [23:0] FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C2 ;
  logic [23:0] FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R2 ;
  logic [23:0] FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X2 ;
  assign FpAdd_8U_23U_is_a_greater_oif_aelse_acc_itm_23_1_T = FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_T [23] ;
  assign FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C2 [23] = FpAdd_8U_23U_is_a_greater_oif_aelse_acc_itm_23_1_C ;
  assign FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R2 [23] = FpAdd_8U_23U_is_a_greater_oif_aelse_acc_itm_23_1_R ;
  assign FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X2 [23] = FpAdd_8U_23U_is_a_greater_oif_aelse_acc_itm_23_1_X ;
  assign FpAdd_8U_23U_is_a_greater_oif_aelse_acc_itm_23_1_S = FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_S ;
  assign chn_a_rsci_oswt_unreg_pff = or_tmp_35;
  logic [0:0] or_tmp_35_C1 ;
  logic [0:0] or_tmp_35_R1 ;
  logic [0:0] or_tmp_35_X1 ;
  assign chn_a_rsci_oswt_unreg_pff_T = or_tmp_35_T ;
  assign or_tmp_35_C1 = chn_a_rsci_oswt_unreg_pff_C ;
  assign or_tmp_35_R1 = chn_a_rsci_oswt_unreg_pff_R ;
  assign or_tmp_35_X1 = chn_a_rsci_oswt_unreg_pff_X ;
  assign chn_a_rsci_oswt_unreg_pff_S = or_tmp_35_S ;
  assign chn_o_rsci_oswt_unreg = and_dcpl_14;
  logic [0:0] and_dcpl_14_C1 ;
  logic [0:0] and_dcpl_14_R1 ;
  logic [0:0] and_dcpl_14_X1 ;
  assign chn_o_rsci_oswt_unreg_T = and_dcpl_14_T ;
  assign and_dcpl_14_C1 = chn_o_rsci_oswt_unreg_C ;
  assign and_dcpl_14_R1 = chn_o_rsci_oswt_unreg_R ;
  assign and_dcpl_14_X1 = chn_o_rsci_oswt_unreg_X ;
  assign chn_o_rsci_oswt_unreg_S = and_dcpl_14_S ;
  assign mux_22_nl = mux_24_nl;
  logic [0:0] mux_24_nl_C1 ;
  logic [0:0] mux_24_nl_R1 ;
  logic [0:0] mux_24_nl_X1 ;
  assign mux_22_nl_T = mux_24_nl_T ;
  assign mux_24_nl_C1 = mux_22_nl_C ;
  assign mux_24_nl_R1 = mux_22_nl_R ;
  assign mux_24_nl_X1 = mux_22_nl_X ;
  assign mux_22_nl_S = mux_24_nl_S ;
  assign mux_25_nl = mux_23_nl;
  logic [0:0] mux_23_nl_C1 ;
  logic [0:0] mux_23_nl_R1 ;
  logic [0:0] mux_23_nl_X1 ;
  assign mux_25_nl_T = mux_23_nl_T ;
  assign mux_23_nl_C1 = mux_25_nl_C ;
  assign mux_23_nl_R1 = mux_25_nl_R ;
  assign mux_23_nl_X1 = mux_25_nl_X ;
  assign mux_25_nl_S = mux_23_nl_S ;
  assign nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_a = { FpAdd_8U_23U_IsZero_8U_23U_or_itm_2, FpAdd_8U_23U_a_sva_36[22:0] };
  assign nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_a_T = {  FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_T , FpAdd_8U_23U_a_sva_36_T [22:0]  };
  logic [13:0] nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_a_S ;
  assign nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_a_S = 0 ;
  logic [0:0] FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_R2 ;
  logic [0:0] FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_X2 ;
  logic [0:0] FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_C2 ;
  assign FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_R2 = nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_a_R [23:23] ;
  assign FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_X2 = nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_a_X [23:23] ;
  assign FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_C2 = nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_a_C [23:23] ;
  assign { FpAdd_8U_23U_a_sva_36_R3 [31:31] } = 0;
  assign { FpAdd_8U_23U_a_sva_36_X3 [31:31] } = 0;
  assign { FpAdd_8U_23U_a_sva_36_C3 [31:31] } = 0;
  logic [31:0] FpAdd_8U_23U_a_sva_36_R4 ;
  logic [31:0] FpAdd_8U_23U_a_sva_36_X4 ;
  logic [31:0] FpAdd_8U_23U_a_sva_36_C4 ;
  assign FpAdd_8U_23U_a_sva_36_R4 [22:0] = nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_a_R [22:0] ;
  assign FpAdd_8U_23U_a_sva_36_X4 [22:0] = nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_a_X [22:0] ;
  assign FpAdd_8U_23U_a_sva_36_C4 [22:0] = nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_a_C [22:0] ;
  assign nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s[8:1] = FpAdd_8U_23U_a_left_shift_acc_nl;
  logic [7:0] FpAdd_8U_23U_a_left_shift_acc_nl_C1 ;
  logic [7:0] FpAdd_8U_23U_a_left_shift_acc_nl_R1 ;
  logic [7:0] FpAdd_8U_23U_a_left_shift_acc_nl_X1 ;
  assign nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s_T [8:1] = FpAdd_8U_23U_a_left_shift_acc_nl_T ;
  assign FpAdd_8U_23U_a_left_shift_acc_nl_C1 = nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s_C [8:1] ;
  assign FpAdd_8U_23U_a_left_shift_acc_nl_R1 = nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s_R [8:1] ;
  assign FpAdd_8U_23U_a_left_shift_acc_nl_X1 = nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s_X [8:1] ;
  assign nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s_S = FpAdd_8U_23U_a_left_shift_acc_nl_S ;
  assign nl_FpAdd_8U_23U_a_left_shift_acc_nl[7:0] = FpAdd_8U_23U_a_left_shift_acc_nl;
  logic [7:0] FpAdd_8U_23U_a_left_shift_acc_nl_C2 ;
  logic [7:0] FpAdd_8U_23U_a_left_shift_acc_nl_R2 ;
  logic [7:0] FpAdd_8U_23U_a_left_shift_acc_nl_X2 ;
  assign nl_FpAdd_8U_23U_a_left_shift_acc_nl_T [7:0] = FpAdd_8U_23U_a_left_shift_acc_nl_T ;
  assign FpAdd_8U_23U_a_left_shift_acc_nl_C2 = nl_FpAdd_8U_23U_a_left_shift_acc_nl_C [7:0] ;
  assign FpAdd_8U_23U_a_left_shift_acc_nl_R2 = nl_FpAdd_8U_23U_a_left_shift_acc_nl_R [7:0] ;
  assign FpAdd_8U_23U_a_left_shift_acc_nl_X2 = nl_FpAdd_8U_23U_a_left_shift_acc_nl_X [7:0] ;
  assign nl_FpAdd_8U_23U_a_left_shift_acc_nl_S = FpAdd_8U_23U_a_left_shift_acc_nl_S ;
  assign nl_FpAdd_8U_23U_a_right_shift_qelse_acc_nl[7:0] = FpAdd_8U_23U_a_right_shift_qelse_acc_nl;
  logic [7:0] FpAdd_8U_23U_a_right_shift_qelse_acc_nl_C1 ;
  logic [7:0] FpAdd_8U_23U_a_right_shift_qelse_acc_nl_R1 ;
  logic [7:0] FpAdd_8U_23U_a_right_shift_qelse_acc_nl_X1 ;
  assign nl_FpAdd_8U_23U_a_right_shift_qelse_acc_nl_T [7:0] = FpAdd_8U_23U_a_right_shift_qelse_acc_nl_T ;
  assign FpAdd_8U_23U_a_right_shift_qelse_acc_nl_C1 = nl_FpAdd_8U_23U_a_right_shift_qelse_acc_nl_C [7:0] ;
  assign FpAdd_8U_23U_a_right_shift_qelse_acc_nl_R1 = nl_FpAdd_8U_23U_a_right_shift_qelse_acc_nl_R [7:0] ;
  assign FpAdd_8U_23U_a_right_shift_qelse_acc_nl_X1 = nl_FpAdd_8U_23U_a_right_shift_qelse_acc_nl_X [7:0] ;
  assign nl_FpAdd_8U_23U_a_right_shift_qelse_acc_nl_S = FpAdd_8U_23U_a_right_shift_qelse_acc_nl_S ;
  assign nl_FpAdd_8U_23U_asn_4_mx0w1[49:0] = FpAdd_8U_23U_asn_4_mx0w1;
  logic [49:0] FpAdd_8U_23U_asn_4_mx0w1_C2 ;
  logic [49:0] FpAdd_8U_23U_asn_4_mx0w1_R2 ;
  logic [49:0] FpAdd_8U_23U_asn_4_mx0w1_X2 ;
  assign nl_FpAdd_8U_23U_asn_4_mx0w1_T [49:0] = FpAdd_8U_23U_asn_4_mx0w1_T ;
  assign FpAdd_8U_23U_asn_4_mx0w1_C2 = nl_FpAdd_8U_23U_asn_4_mx0w1_C [49:0] ;
  assign FpAdd_8U_23U_asn_4_mx0w1_R2 = nl_FpAdd_8U_23U_asn_4_mx0w1_R [49:0] ;
  assign FpAdd_8U_23U_asn_4_mx0w1_X2 = nl_FpAdd_8U_23U_asn_4_mx0w1_X [49:0] ;
  assign nl_FpAdd_8U_23U_asn_4_mx0w1_S = FpAdd_8U_23U_asn_4_mx0w1_S ;
  assign nl_FpAdd_8U_23U_asn_5_mx0w0[49:0] = FpAdd_8U_23U_asn_5_mx0w0;
  logic [49:0] FpAdd_8U_23U_asn_5_mx0w0_C2 ;
  logic [49:0] FpAdd_8U_23U_asn_5_mx0w0_R2 ;
  logic [49:0] FpAdd_8U_23U_asn_5_mx0w0_X2 ;
  assign nl_FpAdd_8U_23U_asn_5_mx0w0_T [49:0] = FpAdd_8U_23U_asn_5_mx0w0_T ;
  assign FpAdd_8U_23U_asn_5_mx0w0_C2 = nl_FpAdd_8U_23U_asn_5_mx0w0_C [49:0] ;
  assign FpAdd_8U_23U_asn_5_mx0w0_R2 = nl_FpAdd_8U_23U_asn_5_mx0w0_R [49:0] ;
  assign FpAdd_8U_23U_asn_5_mx0w0_X2 = nl_FpAdd_8U_23U_asn_5_mx0w0_X [49:0] ;
  assign nl_FpAdd_8U_23U_asn_5_mx0w0_S = FpAdd_8U_23U_asn_5_mx0w0_S ;
  assign nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_a = { FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2, b_sva_36[22:0] };
  assign nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_a_T = {  FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_T , b_sva_36_T [22:0]  };
  logic [13:0] nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_a_S ;
  assign nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_a_S = 0 ;
  logic [0:0] FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_R2 ;
  logic [0:0] FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_X2 ;
  logic [0:0] FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_C2 ;
  assign FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_R2 = nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_a_R [23:23] ;
  assign FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_X2 = nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_a_X [23:23] ;
  assign FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_C2 = nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_a_C [23:23] ;
  assign { b_sva_36_R3 [31:31] } = 0;
  assign { b_sva_36_X3 [31:31] } = 0;
  assign { b_sva_36_C3 [31:31] } = 0;
  logic [31:0] b_sva_36_R4 ;
  logic [31:0] b_sva_36_X4 ;
  logic [31:0] b_sva_36_C4 ;
  assign b_sva_36_R4 [22:0] = nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_a_R [22:0] ;
  assign b_sva_36_X4 [22:0] = nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_a_X [22:0] ;
  assign b_sva_36_C4 [22:0] = nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_a_C [22:0] ;
  assign nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s[8:1] = FpAdd_8U_23U_b_left_shift_acc_nl;
  logic [7:0] FpAdd_8U_23U_b_left_shift_acc_nl_C1 ;
  logic [7:0] FpAdd_8U_23U_b_left_shift_acc_nl_R1 ;
  logic [7:0] FpAdd_8U_23U_b_left_shift_acc_nl_X1 ;
  assign nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s_T [8:1] = FpAdd_8U_23U_b_left_shift_acc_nl_T ;
  assign FpAdd_8U_23U_b_left_shift_acc_nl_C1 = nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s_C [8:1] ;
  assign FpAdd_8U_23U_b_left_shift_acc_nl_R1 = nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s_R [8:1] ;
  assign FpAdd_8U_23U_b_left_shift_acc_nl_X1 = nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s_X [8:1] ;
  assign nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s_S = FpAdd_8U_23U_b_left_shift_acc_nl_S ;
  assign nl_FpAdd_8U_23U_b_left_shift_acc_nl[7:0] = FpAdd_8U_23U_b_left_shift_acc_nl;
  logic [7:0] FpAdd_8U_23U_b_left_shift_acc_nl_C2 ;
  logic [7:0] FpAdd_8U_23U_b_left_shift_acc_nl_R2 ;
  logic [7:0] FpAdd_8U_23U_b_left_shift_acc_nl_X2 ;
  assign nl_FpAdd_8U_23U_b_left_shift_acc_nl_T [7:0] = FpAdd_8U_23U_b_left_shift_acc_nl_T ;
  assign FpAdd_8U_23U_b_left_shift_acc_nl_C2 = nl_FpAdd_8U_23U_b_left_shift_acc_nl_C [7:0] ;
  assign FpAdd_8U_23U_b_left_shift_acc_nl_R2 = nl_FpAdd_8U_23U_b_left_shift_acc_nl_R [7:0] ;
  assign FpAdd_8U_23U_b_left_shift_acc_nl_X2 = nl_FpAdd_8U_23U_b_left_shift_acc_nl_X [7:0] ;
  assign nl_FpAdd_8U_23U_b_left_shift_acc_nl_S = FpAdd_8U_23U_b_left_shift_acc_nl_S ;
  assign nl_FpAdd_8U_23U_b_right_shift_qif_acc_nl[7:0] = FpAdd_8U_23U_b_right_shift_qif_acc_nl;
  logic [7:0] FpAdd_8U_23U_b_right_shift_qif_acc_nl_C1 ;
  logic [7:0] FpAdd_8U_23U_b_right_shift_qif_acc_nl_R1 ;
  logic [7:0] FpAdd_8U_23U_b_right_shift_qif_acc_nl_X1 ;
  assign nl_FpAdd_8U_23U_b_right_shift_qif_acc_nl_T [7:0] = FpAdd_8U_23U_b_right_shift_qif_acc_nl_T ;
  assign FpAdd_8U_23U_b_right_shift_qif_acc_nl_C1 = nl_FpAdd_8U_23U_b_right_shift_qif_acc_nl_C [7:0] ;
  assign FpAdd_8U_23U_b_right_shift_qif_acc_nl_R1 = nl_FpAdd_8U_23U_b_right_shift_qif_acc_nl_R [7:0] ;
  assign FpAdd_8U_23U_b_right_shift_qif_acc_nl_X1 = nl_FpAdd_8U_23U_b_right_shift_qif_acc_nl_X [7:0] ;
  assign nl_FpAdd_8U_23U_b_right_shift_qif_acc_nl_S = FpAdd_8U_23U_b_right_shift_qif_acc_nl_S ;
  assign nl_FpAdd_8U_23U_if_3_if_acc_1_nl[7:0] = FpAdd_8U_23U_if_3_if_acc_1_nl;
  assign { FpAdd_8U_23U_if_3_if_acc_1_nl_R3 [0], FpAdd_8U_23U_if_3_if_acc_1_nl_R3 [1], FpAdd_8U_23U_if_3_if_acc_1_nl_R3 [2], FpAdd_8U_23U_if_3_if_acc_1_nl_R3 [3], FpAdd_8U_23U_if_3_if_acc_1_nl_R3 [4], FpAdd_8U_23U_if_3_if_acc_1_nl_R3 [5], FpAdd_8U_23U_if_3_if_acc_1_nl_R3 [6] } = 0;
  assign { FpAdd_8U_23U_if_3_if_acc_1_nl_X3 [0], FpAdd_8U_23U_if_3_if_acc_1_nl_X3 [1], FpAdd_8U_23U_if_3_if_acc_1_nl_X3 [2], FpAdd_8U_23U_if_3_if_acc_1_nl_X3 [3], FpAdd_8U_23U_if_3_if_acc_1_nl_X3 [4], FpAdd_8U_23U_if_3_if_acc_1_nl_X3 [5], FpAdd_8U_23U_if_3_if_acc_1_nl_X3 [6] } = 0;
  assign { FpAdd_8U_23U_if_3_if_acc_1_nl_C3 [0], FpAdd_8U_23U_if_3_if_acc_1_nl_C3 [1], FpAdd_8U_23U_if_3_if_acc_1_nl_C3 [2], FpAdd_8U_23U_if_3_if_acc_1_nl_C3 [3], FpAdd_8U_23U_if_3_if_acc_1_nl_C3 [4], FpAdd_8U_23U_if_3_if_acc_1_nl_C3 [5], FpAdd_8U_23U_if_3_if_acc_1_nl_C3 [6] } = 0;
  logic [7:0] FpAdd_8U_23U_if_3_if_acc_1_nl_C4 ;
  logic [7:0] FpAdd_8U_23U_if_3_if_acc_1_nl_R4 ;
  logic [7:0] FpAdd_8U_23U_if_3_if_acc_1_nl_X4 ;
  assign nl_FpAdd_8U_23U_if_3_if_acc_1_nl_T [7:0] = FpAdd_8U_23U_if_3_if_acc_1_nl_T ;
  assign FpAdd_8U_23U_if_3_if_acc_1_nl_C4 = nl_FpAdd_8U_23U_if_3_if_acc_1_nl_C [7:0] ;
  assign FpAdd_8U_23U_if_3_if_acc_1_nl_R4 = nl_FpAdd_8U_23U_if_3_if_acc_1_nl_R [7:0] ;
  assign FpAdd_8U_23U_if_3_if_acc_1_nl_X4 = nl_FpAdd_8U_23U_if_3_if_acc_1_nl_X [7:0] ;
  assign nl_FpAdd_8U_23U_if_3_if_acc_1_nl_S = FpAdd_8U_23U_if_3_if_acc_1_nl_S ;
  assign nl_FpAdd_8U_23U_if_3_if_acc_nl[7:0] = FpAdd_8U_23U_if_3_if_acc_nl;
  logic [7:0] FpAdd_8U_23U_if_3_if_acc_nl_C1 ;
  logic [7:0] FpAdd_8U_23U_if_3_if_acc_nl_R1 ;
  logic [7:0] FpAdd_8U_23U_if_3_if_acc_nl_X1 ;
  assign nl_FpAdd_8U_23U_if_3_if_acc_nl_T [7:0] = FpAdd_8U_23U_if_3_if_acc_nl_T ;
  assign FpAdd_8U_23U_if_3_if_acc_nl_C1 = nl_FpAdd_8U_23U_if_3_if_acc_nl_C [7:0] ;
  assign FpAdd_8U_23U_if_3_if_acc_nl_R1 = nl_FpAdd_8U_23U_if_3_if_acc_nl_R [7:0] ;
  assign FpAdd_8U_23U_if_3_if_acc_nl_X1 = nl_FpAdd_8U_23U_if_3_if_acc_nl_X [7:0] ;
  assign nl_FpAdd_8U_23U_if_3_if_acc_nl_S = FpAdd_8U_23U_if_3_if_acc_nl_S ;
  assign nl_FpAdd_8U_23U_if_4_if_acc_1_nl[7:0] = FpAdd_8U_23U_if_4_if_acc_1_nl;
  assign { FpAdd_8U_23U_if_4_if_acc_1_nl_R2 [0], FpAdd_8U_23U_if_4_if_acc_1_nl_R2 [1], FpAdd_8U_23U_if_4_if_acc_1_nl_R2 [2], FpAdd_8U_23U_if_4_if_acc_1_nl_R2 [3], FpAdd_8U_23U_if_4_if_acc_1_nl_R2 [4], FpAdd_8U_23U_if_4_if_acc_1_nl_R2 [5], FpAdd_8U_23U_if_4_if_acc_1_nl_R2 [6] } = 0;
  assign { FpAdd_8U_23U_if_4_if_acc_1_nl_X2 [0], FpAdd_8U_23U_if_4_if_acc_1_nl_X2 [1], FpAdd_8U_23U_if_4_if_acc_1_nl_X2 [2], FpAdd_8U_23U_if_4_if_acc_1_nl_X2 [3], FpAdd_8U_23U_if_4_if_acc_1_nl_X2 [4], FpAdd_8U_23U_if_4_if_acc_1_nl_X2 [5], FpAdd_8U_23U_if_4_if_acc_1_nl_X2 [6] } = 0;
  assign { FpAdd_8U_23U_if_4_if_acc_1_nl_C2 [0], FpAdd_8U_23U_if_4_if_acc_1_nl_C2 [1], FpAdd_8U_23U_if_4_if_acc_1_nl_C2 [2], FpAdd_8U_23U_if_4_if_acc_1_nl_C2 [3], FpAdd_8U_23U_if_4_if_acc_1_nl_C2 [4], FpAdd_8U_23U_if_4_if_acc_1_nl_C2 [5], FpAdd_8U_23U_if_4_if_acc_1_nl_C2 [6] } = 0;
  logic [7:0] FpAdd_8U_23U_if_4_if_acc_1_nl_C3 ;
  logic [7:0] FpAdd_8U_23U_if_4_if_acc_1_nl_R3 ;
  logic [7:0] FpAdd_8U_23U_if_4_if_acc_1_nl_X3 ;
  assign nl_FpAdd_8U_23U_if_4_if_acc_1_nl_T [7:0] = FpAdd_8U_23U_if_4_if_acc_1_nl_T ;
  assign FpAdd_8U_23U_if_4_if_acc_1_nl_C3 = nl_FpAdd_8U_23U_if_4_if_acc_1_nl_C [7:0] ;
  assign FpAdd_8U_23U_if_4_if_acc_1_nl_R3 = nl_FpAdd_8U_23U_if_4_if_acc_1_nl_R [7:0] ;
  assign FpAdd_8U_23U_if_4_if_acc_1_nl_X3 = nl_FpAdd_8U_23U_if_4_if_acc_1_nl_X [7:0] ;
  assign nl_FpAdd_8U_23U_if_4_if_acc_1_nl_S = FpAdd_8U_23U_if_4_if_acc_1_nl_S ;
  assign nl_FpAdd_8U_23U_if_4_if_acc_nl[7:0] = FpAdd_8U_23U_if_4_if_acc_nl;
  logic [7:0] FpAdd_8U_23U_if_4_if_acc_nl_C1 ;
  logic [7:0] FpAdd_8U_23U_if_4_if_acc_nl_R1 ;
  logic [7:0] FpAdd_8U_23U_if_4_if_acc_nl_X1 ;
  assign nl_FpAdd_8U_23U_if_4_if_acc_nl_T [7:0] = FpAdd_8U_23U_if_4_if_acc_nl_T ;
  assign FpAdd_8U_23U_if_4_if_acc_nl_C1 = nl_FpAdd_8U_23U_if_4_if_acc_nl_C [7:0] ;
  assign FpAdd_8U_23U_if_4_if_acc_nl_R1 = nl_FpAdd_8U_23U_if_4_if_acc_nl_R [7:0] ;
  assign FpAdd_8U_23U_if_4_if_acc_nl_X1 = nl_FpAdd_8U_23U_if_4_if_acc_nl_X [7:0] ;
  assign nl_FpAdd_8U_23U_if_4_if_acc_nl_S = FpAdd_8U_23U_if_4_if_acc_nl_S ;
  assign nl_FpAdd_8U_23U_is_a_greater_acc_1_nl[8:0] = FpAdd_8U_23U_is_a_greater_acc_1_nl;
  assign { FpAdd_8U_23U_is_a_greater_acc_1_nl_R2 [0], FpAdd_8U_23U_is_a_greater_acc_1_nl_R2 [1], FpAdd_8U_23U_is_a_greater_acc_1_nl_R2 [2], FpAdd_8U_23U_is_a_greater_acc_1_nl_R2 [3], FpAdd_8U_23U_is_a_greater_acc_1_nl_R2 [4], FpAdd_8U_23U_is_a_greater_acc_1_nl_R2 [5], FpAdd_8U_23U_is_a_greater_acc_1_nl_R2 [6], FpAdd_8U_23U_is_a_greater_acc_1_nl_R2 [7] } = 0;
  assign { FpAdd_8U_23U_is_a_greater_acc_1_nl_X2 [0], FpAdd_8U_23U_is_a_greater_acc_1_nl_X2 [1], FpAdd_8U_23U_is_a_greater_acc_1_nl_X2 [2], FpAdd_8U_23U_is_a_greater_acc_1_nl_X2 [3], FpAdd_8U_23U_is_a_greater_acc_1_nl_X2 [4], FpAdd_8U_23U_is_a_greater_acc_1_nl_X2 [5], FpAdd_8U_23U_is_a_greater_acc_1_nl_X2 [6], FpAdd_8U_23U_is_a_greater_acc_1_nl_X2 [7] } = 0;
  assign { FpAdd_8U_23U_is_a_greater_acc_1_nl_C2 [0], FpAdd_8U_23U_is_a_greater_acc_1_nl_C2 [1], FpAdd_8U_23U_is_a_greater_acc_1_nl_C2 [2], FpAdd_8U_23U_is_a_greater_acc_1_nl_C2 [3], FpAdd_8U_23U_is_a_greater_acc_1_nl_C2 [4], FpAdd_8U_23U_is_a_greater_acc_1_nl_C2 [5], FpAdd_8U_23U_is_a_greater_acc_1_nl_C2 [6], FpAdd_8U_23U_is_a_greater_acc_1_nl_C2 [7] } = 0;
  logic [8:0] FpAdd_8U_23U_is_a_greater_acc_1_nl_C3 ;
  logic [8:0] FpAdd_8U_23U_is_a_greater_acc_1_nl_R3 ;
  logic [8:0] FpAdd_8U_23U_is_a_greater_acc_1_nl_X3 ;
  assign nl_FpAdd_8U_23U_is_a_greater_acc_1_nl_T [8:0] = FpAdd_8U_23U_is_a_greater_acc_1_nl_T ;
  assign FpAdd_8U_23U_is_a_greater_acc_1_nl_C3 = nl_FpAdd_8U_23U_is_a_greater_acc_1_nl_C [8:0] ;
  assign FpAdd_8U_23U_is_a_greater_acc_1_nl_R3 = nl_FpAdd_8U_23U_is_a_greater_acc_1_nl_R [8:0] ;
  assign FpAdd_8U_23U_is_a_greater_acc_1_nl_X3 = nl_FpAdd_8U_23U_is_a_greater_acc_1_nl_X [8:0] ;
  assign nl_FpAdd_8U_23U_is_a_greater_acc_1_nl_S = FpAdd_8U_23U_is_a_greater_acc_1_nl_S ;
  assign nl_FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl[23:0] = FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl;
  assign { FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R2 [0], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R2 [1], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R2 [2], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R2 [3], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R2 [4], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R2 [5], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R2 [6], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R2 [7], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R2 [8], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R2 [9], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R2 [10], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R2 [11], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R2 [12], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R2 [13], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R2 [14], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R2 [15], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R2 [16], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R2 [17], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R2 [18], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R2 [19], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R2 [20], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R2 [21], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R2 [22] } = 0;
  assign { FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X2 [0], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X2 [1], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X2 [2], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X2 [3], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X2 [4], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X2 [5], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X2 [6], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X2 [7], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X2 [8], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X2 [9], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X2 [10], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X2 [11], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X2 [12], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X2 [13], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X2 [14], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X2 [15], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X2 [16], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X2 [17], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X2 [18], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X2 [19], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X2 [20], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X2 [21], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X2 [22] } = 0;
  assign { FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C2 [0], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C2 [1], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C2 [2], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C2 [3], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C2 [4], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C2 [5], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C2 [6], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C2 [7], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C2 [8], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C2 [9], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C2 [10], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C2 [11], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C2 [12], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C2 [13], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C2 [14], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C2 [15], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C2 [16], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C2 [17], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C2 [18], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C2 [19], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C2 [20], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C2 [21], FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C2 [22] } = 0;
  logic [23:0] FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C3 ;
  logic [23:0] FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R3 ;
  logic [23:0] FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X3 ;
  assign nl_FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_T [23:0] = FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_T ;
  assign FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C3 = nl_FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C [23:0] ;
  assign FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R3 = nl_FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R [23:0] ;
  assign FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X3 = nl_FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X [23:0] ;
  assign nl_FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_S = FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_S ;
  assign nl_FpMantRNE_49U_24U_else_acc_nl[22:0] = FpMantRNE_49U_24U_else_acc_nl;
  logic [22:0] FpMantRNE_49U_24U_else_acc_nl_C1 ;
  logic [22:0] FpMantRNE_49U_24U_else_acc_nl_R1 ;
  logic [22:0] FpMantRNE_49U_24U_else_acc_nl_X1 ;
  assign nl_FpMantRNE_49U_24U_else_acc_nl_T [22:0] = FpMantRNE_49U_24U_else_acc_nl_T ;
  assign FpMantRNE_49U_24U_else_acc_nl_C1 = nl_FpMantRNE_49U_24U_else_acc_nl_C [22:0] ;
  assign FpMantRNE_49U_24U_else_acc_nl_R1 = nl_FpMantRNE_49U_24U_else_acc_nl_R [22:0] ;
  assign FpMantRNE_49U_24U_else_acc_nl_X1 = nl_FpMantRNE_49U_24U_else_acc_nl_X [22:0] ;
  assign nl_FpMantRNE_49U_24U_else_acc_nl_S = FpMantRNE_49U_24U_else_acc_nl_S ;
  assign nl_FpNormalize_8U_49U_acc_nl[8:0] = FpNormalize_8U_49U_acc_nl;
  assign { FpNormalize_8U_49U_acc_nl_R0 [0], FpNormalize_8U_49U_acc_nl_R0 [1], FpNormalize_8U_49U_acc_nl_R0 [2], FpNormalize_8U_49U_acc_nl_R0 [3], FpNormalize_8U_49U_acc_nl_R0 [4], FpNormalize_8U_49U_acc_nl_R0 [5], FpNormalize_8U_49U_acc_nl_R0 [6], FpNormalize_8U_49U_acc_nl_R0 [7] } = 0;
  assign { FpNormalize_8U_49U_acc_nl_X0 [0], FpNormalize_8U_49U_acc_nl_X0 [1], FpNormalize_8U_49U_acc_nl_X0 [2], FpNormalize_8U_49U_acc_nl_X0 [3], FpNormalize_8U_49U_acc_nl_X0 [4], FpNormalize_8U_49U_acc_nl_X0 [5], FpNormalize_8U_49U_acc_nl_X0 [6], FpNormalize_8U_49U_acc_nl_X0 [7] } = 0;
  assign { FpNormalize_8U_49U_acc_nl_C0 [0], FpNormalize_8U_49U_acc_nl_C0 [1], FpNormalize_8U_49U_acc_nl_C0 [2], FpNormalize_8U_49U_acc_nl_C0 [3], FpNormalize_8U_49U_acc_nl_C0 [4], FpNormalize_8U_49U_acc_nl_C0 [5], FpNormalize_8U_49U_acc_nl_C0 [6], FpNormalize_8U_49U_acc_nl_C0 [7] } = 0;
  logic [8:0] FpNormalize_8U_49U_acc_nl_C1 ;
  logic [8:0] FpNormalize_8U_49U_acc_nl_R1 ;
  logic [8:0] FpNormalize_8U_49U_acc_nl_X1 ;
  assign nl_FpNormalize_8U_49U_acc_nl_T [8:0] = FpNormalize_8U_49U_acc_nl_T ;
  assign FpNormalize_8U_49U_acc_nl_C1 = nl_FpNormalize_8U_49U_acc_nl_C [8:0] ;
  assign FpNormalize_8U_49U_acc_nl_R1 = nl_FpNormalize_8U_49U_acc_nl_R [8:0] ;
  assign FpNormalize_8U_49U_acc_nl_X1 = nl_FpNormalize_8U_49U_acc_nl_X [8:0] ;
  assign nl_FpNormalize_8U_49U_acc_nl_S = FpNormalize_8U_49U_acc_nl_S ;
  assign nl_FpNormalize_8U_49U_else_acc_nl[7:0] = FpNormalize_8U_49U_else_acc_nl;
  logic [7:0] FpNormalize_8U_49U_else_acc_nl_C1 ;
  logic [7:0] FpNormalize_8U_49U_else_acc_nl_R1 ;
  logic [7:0] FpNormalize_8U_49U_else_acc_nl_X1 ;
  assign nl_FpNormalize_8U_49U_else_acc_nl_T [7:0] = FpNormalize_8U_49U_else_acc_nl_T ;
  assign FpNormalize_8U_49U_else_acc_nl_C1 = nl_FpNormalize_8U_49U_else_acc_nl_C [7:0] ;
  assign FpNormalize_8U_49U_else_acc_nl_R1 = nl_FpNormalize_8U_49U_else_acc_nl_R [7:0] ;
  assign FpNormalize_8U_49U_else_acc_nl_X1 = nl_FpNormalize_8U_49U_else_acc_nl_X [7:0] ;
  assign nl_FpNormalize_8U_49U_else_acc_nl_S = FpNormalize_8U_49U_else_acc_nl_S ;
  assign nl_FpNormalize_8U_49U_else_lshift_rg_a = FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2[48:0];
  assign { FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R7 [49:49] } = 0;
  assign { FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X7 [49:49] } = 0;
  assign { FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C7 [49:49] } = 0;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C8 ;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R8 ;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X8 ;
  assign nl_FpNormalize_8U_49U_else_lshift_rg_a_T = FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_T [48:0] ;
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C8 [48:0] = nl_FpNormalize_8U_49U_else_lshift_rg_a_C ;
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R8 [48:0] = nl_FpNormalize_8U_49U_else_lshift_rg_a_R ;
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X8 [48:0] = nl_FpNormalize_8U_49U_else_lshift_rg_a_X ;
  assign nl_FpNormalize_8U_49U_else_lshift_rg_a_S = FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_S ;
  assign nl_HLS_fp32_sub_core_chn_o_rsci_inst_chn_o_rsci_d = { chn_o_rsci_d_31, chn_o_rsci_d_30_23, chn_o_rsci_d_22_0 };
  assign nl_HLS_fp32_sub_core_chn_o_rsci_inst_chn_o_rsci_d_T = {  chn_o_rsci_d_31_T , chn_o_rsci_d_30_23_T , chn_o_rsci_d_22_0_T  };
  logic [13:0] nl_HLS_fp32_sub_core_chn_o_rsci_inst_chn_o_rsci_d_S ;
  assign nl_HLS_fp32_sub_core_chn_o_rsci_inst_chn_o_rsci_d_S = 0 ;
  logic [0:0] chn_o_rsci_d_31_R2 ;
  logic [0:0] chn_o_rsci_d_31_X2 ;
  logic [0:0] chn_o_rsci_d_31_C2 ;
  assign chn_o_rsci_d_31_R2 = nl_HLS_fp32_sub_core_chn_o_rsci_inst_chn_o_rsci_d_R [31:31] ;
  assign chn_o_rsci_d_31_X2 = nl_HLS_fp32_sub_core_chn_o_rsci_inst_chn_o_rsci_d_X [31:31] ;
  assign chn_o_rsci_d_31_C2 = nl_HLS_fp32_sub_core_chn_o_rsci_inst_chn_o_rsci_d_C [31:31] ;
  logic [7:0] chn_o_rsci_d_30_23_R2 ;
  logic [7:0] chn_o_rsci_d_30_23_X2 ;
  logic [7:0] chn_o_rsci_d_30_23_C2 ;
  assign chn_o_rsci_d_30_23_R2 = nl_HLS_fp32_sub_core_chn_o_rsci_inst_chn_o_rsci_d_R [30:23] ;
  assign chn_o_rsci_d_30_23_X2 = nl_HLS_fp32_sub_core_chn_o_rsci_inst_chn_o_rsci_d_X [30:23] ;
  assign chn_o_rsci_d_30_23_C2 = nl_HLS_fp32_sub_core_chn_o_rsci_inst_chn_o_rsci_d_C [30:23] ;
  logic [22:0] chn_o_rsci_d_22_0_R2 ;
  logic [22:0] chn_o_rsci_d_22_0_X2 ;
  logic [22:0] chn_o_rsci_d_22_0_C2 ;
  assign chn_o_rsci_d_22_0_R2 = nl_HLS_fp32_sub_core_chn_o_rsci_inst_chn_o_rsci_d_R [22:0] ;
  assign chn_o_rsci_d_22_0_X2 = nl_HLS_fp32_sub_core_chn_o_rsci_inst_chn_o_rsci_d_X [22:0] ;
  assign chn_o_rsci_d_22_0_C2 = nl_HLS_fp32_sub_core_chn_o_rsci_inst_chn_o_rsci_d_C [22:0] ;
  assign nl_leading_sign_49_0_rg_mantissa = FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2[48:0];
  assign { FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R8 [49:49] } = 0;
  assign { FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X8 [49:49] } = 0;
  assign { FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C8 [49:49] } = 0;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C9 ;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R9 ;
  logic [49:0] FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X9 ;
  assign nl_leading_sign_49_0_rg_mantissa_T = FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_T [48:0] ;
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C9 [48:0] = nl_leading_sign_49_0_rg_mantissa_C ;
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R9 [48:0] = nl_leading_sign_49_0_rg_mantissa_R ;
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X9 [48:0] = nl_leading_sign_49_0_rg_mantissa_X ;
  assign nl_leading_sign_49_0_rg_mantissa_S = FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_S ;
  assign nor_32_nl = nor_31_nl;
  logic [0:0] nor_31_nl_C1 ;
  logic [0:0] nor_31_nl_R1 ;
  logic [0:0] nor_31_nl_X1 ;
  assign nor_32_nl_T = nor_31_nl_T ;
  assign nor_31_nl_C1 = nor_32_nl_C ;
  assign nor_31_nl_R1 = nor_32_nl_R ;
  assign nor_31_nl_X1 = nor_32_nl_X ;
  assign nor_32_nl_S = nor_31_nl_S ;
  assign chn_o_rsci_wen_comp_C = ( chn_o_rsci_wen_comp_C0 );
  assign chn_b_rsci_wen_comp_C = ( chn_b_rsci_wen_comp_C0 );
  assign chn_a_rsci_wen_comp_C = ( chn_a_rsci_wen_comp_C0 );
  assign chn_o_rsci_oswt_C = ( chn_o_rsci_oswt_C0 );
  assign chn_o_rsc_vz_C = ( chn_o_rsc_vz_C0 );
  assign chn_b_rsci_oswt_C = ( chn_b_rsci_oswt_C0 );
  assign chn_b_rsc_z_C = ( chn_b_rsc_z_C0 );
  assign chn_b_rsc_vz_C = ( chn_b_rsc_vz_C0 );
  assign nvdla_core_rstn_C = ( nvdla_core_rstn_C0 ) | ( nvdla_core_rstn_C1 ) | ( nvdla_core_rstn_C2 ) | ( nvdla_core_rstn_C3 ) | ( nvdla_core_rstn_C4 );
  assign core_wten_C = ( core_wten_C0 ) | ( core_wten_C1 ) | ( core_wten_C2 );
  assign chn_a_rsci_oswt_C = ( chn_a_rsci_oswt_C0 );
  assign chn_a_rsc_z_C = ( chn_a_rsc_z_C0 );
  assign chn_a_rsc_vz_C = ( chn_a_rsc_vz_C0 );
  assign nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s_C = ( nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s_C0 );
  assign FpAdd_8U_23U_b_left_shift_acc_nl_C = ( FpAdd_8U_23U_b_left_shift_acc_nl_C0 ) | ( FpAdd_8U_23U_b_left_shift_acc_nl_C1 ) | ( FpAdd_8U_23U_b_left_shift_acc_nl_C2 );
  assign nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s_C = ( nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s_C0 );
  assign FpAdd_8U_23U_a_left_shift_acc_nl_C = ( FpAdd_8U_23U_a_left_shift_acc_nl_C0 ) | ( FpAdd_8U_23U_a_left_shift_acc_nl_C1 ) | ( FpAdd_8U_23U_a_left_shift_acc_nl_C2 );
  assign chn_o_rsci_iswt0_C = ( chn_o_rsci_iswt0_C0 ) | ( chn_o_rsci_iswt0_C1 );
  assign reg_chn_a_rsci_iswt0_cse_C = ( reg_chn_a_rsci_iswt0_cse_C0 ) | ( reg_chn_a_rsci_iswt0_cse_C1 ) | ( reg_chn_a_rsci_iswt0_cse_C2 );
  assign _120__C = ( _120__C0 );
  assign reg_chn_a_rsci_ld_core_psct_cse_C = ( reg_chn_a_rsci_ld_core_psct_cse_C0 ) | ( reg_chn_a_rsci_ld_core_psct_cse_C1 ) | ( reg_chn_a_rsci_ld_core_psct_cse_C2 );
  assign _060__C = ( _060__C0 );
  assign chn_o_rsci_d_22_0_C = ( chn_o_rsci_d_22_0_C0 ) | ( chn_o_rsci_d_22_0_C1 ) | ( chn_o_rsci_d_22_0_C2 );
  assign _043__C = ( _043__C0 );
  assign _062__C = ( _062__C0 );
  assign FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl_C = ( FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl_C0 );
  assign FpSignedBitsToFloat_8U_23U_1_and_2_nl_C = ( FpSignedBitsToFloat_8U_23U_1_and_2_nl_C0 );
  assign chn_o_rsci_d_31_C = ( chn_o_rsci_d_31_C0 ) | ( chn_o_rsci_d_31_C1 ) | ( chn_o_rsci_d_31_C2 );
  assign chn_o_rsci_d_30_23_C = ( chn_o_rsci_d_30_23_C0 ) | ( chn_o_rsci_d_30_23_C1 ) | ( chn_o_rsci_d_30_23_C2 );
  assign _186__C = ( _186__C0 );
  assign chn_o_and_1_cse_C = ( chn_o_and_1_cse_C0 ) | ( chn_o_and_1_cse_C1 );
  assign _121__C = ( _121__C0 );
  assign _063__C = ( _063__C0 );
  assign _122__C = ( _122__C0 );
  assign _064__C = ( _064__C0 );
  assign FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_C = ( FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_C0 ) | ( FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_C1 ) | ( FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_C2 );
  assign _095__C = ( _095__C0 );
  assign FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_C = ( FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_C0 ) | ( FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_C1 ) | ( FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_C2 );
  assign _094__C = ( _094__C0 );
  assign _187__C = ( _187__C0 );
  assign IsNaN_8U_23U_aelse_and_cse_C = ( IsNaN_8U_23U_aelse_and_cse_C0 ) | ( IsNaN_8U_23U_aelse_and_cse_C1 ) | ( IsNaN_8U_23U_aelse_and_cse_C2 ) | ( IsNaN_8U_23U_aelse_and_cse_C3 ) | ( IsNaN_8U_23U_aelse_and_cse_C4 ) | ( IsNaN_8U_23U_aelse_and_cse_C5 ) | ( IsNaN_8U_23U_aelse_and_cse_C6 );
  assign _123__C = ( _123__C0 );
  assign _066__C = ( _066__C0 );
  assign FpAdd_8U_23U_a_int_mant_p1_lshift_itm_C = ( FpAdd_8U_23U_a_int_mant_p1_lshift_itm_C0 );
  assign FpAdd_8U_23U_b_int_mant_p1_lshift_itm_C = ( FpAdd_8U_23U_b_int_mant_p1_lshift_itm_C0 );
  assign FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_C = ( FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_C0 ) | ( FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_C1 );
  assign FpAdd_8U_23U_is_addition_and_cse_C = ( FpAdd_8U_23U_is_addition_and_cse_C0 ) | ( FpAdd_8U_23U_is_addition_and_cse_C1 ) | ( FpAdd_8U_23U_is_addition_and_cse_C2 ) | ( FpAdd_8U_23U_is_addition_and_cse_C3 ) | ( FpAdd_8U_23U_is_addition_and_cse_C4 ) | ( FpAdd_8U_23U_is_addition_and_cse_C5 ) | ( FpAdd_8U_23U_is_addition_and_cse_C6 );
  assign _124__C = ( _124__C0 );
  assign _068__C = ( _068__C0 );
  assign FpAdd_8U_23U_qr_lpi_1_dfm_5_C = ( FpAdd_8U_23U_qr_lpi_1_dfm_5_C0 ) | ( FpAdd_8U_23U_qr_lpi_1_dfm_5_C1 );
  assign FpAdd_8U_23U_mux_13_itm_4_C = ( FpAdd_8U_23U_mux_13_itm_4_C0 ) | ( FpAdd_8U_23U_mux_13_itm_4_C1 );
  assign FpAdd_8U_23U_and_8_cse_C = ( FpAdd_8U_23U_and_8_cse_C0 ) | ( FpAdd_8U_23U_and_8_cse_C1 ) | ( FpAdd_8U_23U_and_8_cse_C2 ) | ( FpAdd_8U_23U_and_8_cse_C3 ) | ( FpAdd_8U_23U_and_8_cse_C4 );
  assign _096__C = ( _096__C0 );
  assign _069__C = ( _069__C0 );
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_C = ( FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_C0 ) | ( FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_C1 );
  assign FpSignedBitsToFloat_8U_23U_1_and_3_cse_C = ( FpSignedBitsToFloat_8U_23U_1_and_3_cse_C0 ) | ( FpSignedBitsToFloat_8U_23U_1_and_3_cse_C1 );
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_C = ( FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_C0 ) | ( FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_C1 );
  assign _045__C = ( _045__C0 );
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_C = ( FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_C0 ) | ( FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_C1 );
  assign _044__C = ( _044__C0 );
  assign _071__C = ( _071__C0 ) | ( _071__C1 );
  assign FpAdd_8U_23U_mux_13_itm_3_C = ( FpAdd_8U_23U_mux_13_itm_3_C0 ) | ( FpAdd_8U_23U_mux_13_itm_3_C1 );
  assign _182__C = ( _182__C0 );
  assign _073__C = ( _073__C0 );
  assign FpAdd_8U_23U_qr_lpi_1_dfm_4_C = ( FpAdd_8U_23U_qr_lpi_1_dfm_4_C0 ) | ( FpAdd_8U_23U_qr_lpi_1_dfm_4_C1 );
  assign _046__C = ( _046__C0 );
  assign _075__C = ( _075__C0 );
  assign _042__C = ( _042__C0 );
  assign _076__C = ( _076__C0 );
  assign _126__C = ( _126__C0 );
  assign IsNaN_8U_23U_1_and_cse_C = ( IsNaN_8U_23U_1_and_cse_C0 ) | ( IsNaN_8U_23U_1_and_cse_C1 );
  assign nor_34_nl_C = ( nor_34_nl_C0 );
  assign mux_9_nl_C = ( mux_9_nl_C0 );
  assign or_10_nl_C = ( or_10_nl_C0 );
  assign and_67_nl_C = ( and_67_nl_C0 );
  assign nor_26_nl_C = ( nor_26_nl_C0 );
  assign nor_27_nl_C = ( nor_27_nl_C0 );
  assign FpAdd_8U_23U_a_int_mant_p1_sva_2_C = ( FpAdd_8U_23U_a_int_mant_p1_sva_2_C0 ) | ( FpAdd_8U_23U_a_int_mant_p1_sva_2_C1 ) | ( FpAdd_8U_23U_a_int_mant_p1_sva_2_C2 );
  assign FpAdd_8U_23U_b_int_mant_p1_sva_2_C = ( FpAdd_8U_23U_b_int_mant_p1_sva_2_C0 ) | ( FpAdd_8U_23U_b_int_mant_p1_sva_2_C1 ) | ( FpAdd_8U_23U_b_int_mant_p1_sva_2_C2 );
  assign FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_C = ( FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_C0 ) | ( FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_C1 ) | ( FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_C2 );
  assign FpNormalize_8U_49U_else_acc_nl_C = ( FpNormalize_8U_49U_else_acc_nl_C0 ) | ( FpNormalize_8U_49U_else_acc_nl_C1 );
  assign FpNormalize_8U_49U_else_lshift_itm_C = ( FpNormalize_8U_49U_else_lshift_itm_C0 );
  assign FpNormalize_8U_49U_oelse_not_3_C = ( FpNormalize_8U_49U_oelse_not_3_C0 ) | ( FpNormalize_8U_49U_oelse_not_3_C1 );
  assign FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl_C = ( FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl_C0 );
  assign fangyuan16_C = ( fangyuan16_C0 );
  assign FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl_C = ( FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl_C0 );
  assign FpAdd_8U_23U_b_right_shift_qif_acc_nl_C = ( FpAdd_8U_23U_b_right_shift_qif_acc_nl_C0 ) | ( FpAdd_8U_23U_b_right_shift_qif_acc_nl_C1 );
  assign FpAdd_8U_23U_a_right_shift_qelse_acc_nl_C = ( FpAdd_8U_23U_a_right_shift_qelse_acc_nl_C0 ) | ( FpAdd_8U_23U_a_right_shift_qelse_acc_nl_C1 );
  assign FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_C = ( FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_C0 ) | ( FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_C1 ) | ( FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_C2 ) | ( FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_C3 );
  assign FpAdd_8U_23U_asn_4_mx0w1_C = ( FpAdd_8U_23U_asn_4_mx0w1_C0 ) | ( FpAdd_8U_23U_asn_4_mx0w1_C1 ) | ( FpAdd_8U_23U_asn_4_mx0w1_C2 );
  assign FpAdd_8U_23U_asn_5_mx0w0_C = ( FpAdd_8U_23U_asn_5_mx0w0_C0 ) | ( FpAdd_8U_23U_asn_5_mx0w0_C1 ) | ( FpAdd_8U_23U_asn_5_mx0w0_C2 );
  assign reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_C = ( reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_C0 ) | ( reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_C1 ) | ( reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_C2 );
  assign nor_38_nl_C = ( nor_38_nl_C0 );
  assign FpMantRNE_49U_24U_else_acc_nl_C = ( FpMantRNE_49U_24U_else_acc_nl_C0 ) | ( FpMantRNE_49U_24U_else_acc_nl_C1 );
  assign or_tmp_3_C = ( or_tmp_3_C0 ) | ( or_tmp_3_C1 );
  assign mux_7_nl_C = ( mux_7_nl_C0 );
  assign nor_37_nl_C = ( nor_37_nl_C0 );
  assign _175__C = ( _175__C0 );
  assign nor_31_nl_C = ( nor_31_nl_C0 ) | ( nor_31_nl_C1 );
  assign mux_24_nl_C = ( mux_24_nl_C0 ) | ( mux_24_nl_C1 );
  assign nor_28_nl_C = ( nor_28_nl_C0 );
  assign nor_29_nl_C = ( nor_29_nl_C0 );
  assign _039__C = ( _039__C0 );
  assign _034__C = ( _034__C0 );
  assign _040__C = ( _040__C0 );
  assign _031__C = ( _031__C0 );
  assign _032__C = ( _032__C0 );
  assign _033__C = ( _033__C0 );
  assign _041__C = ( _041__C0 );
  assign _035__C = ( _035__C0 );
  assign _011__C = ( _011__C0 );
  assign _006__C = ( _006__C0 );
  assign _030__C = ( _030__C0 );
  assign _029__C = ( _029__C0 );
  assign _003__C = ( _003__C0 );
  assign _004__C = ( _004__C0 );
  assign _009__C = ( _009__C0 );
  assign _036__C = ( _036__C0 );
  assign _038__C = ( _038__C0 );
  assign _027__C = ( _027__C0 );
  assign _007__C = ( _007__C0 );
  assign _005__C = ( _005__C0 );
  assign _016__C = ( _016__C0 );
  assign _010__C = ( _010__C0 );
  assign _024__C = ( _024__C0 );
  assign _037__C = ( _037__C0 );
  assign _013__C = ( _013__C0 );
  assign _028__C = ( _028__C0 );
  assign _008__C = ( _008__C0 );
  assign _017__C = ( _017__C0 );
  assign _025__C = ( _025__C0 );
  assign _018__C = ( _018__C0 );
  assign _022__C = ( _022__C0 );
  assign _020__C = ( _020__C0 );
  assign _021__C = ( _021__C0 );
  assign _019__C = ( _019__C0 );
  assign _012__C = ( _012__C0 );
  assign _015__C = ( _015__C0 );
  assign _014__C = ( _014__C0 );
  assign _023__C = ( _023__C0 );
  assign _026__C = ( _026__C0 );
  assign _088__C = ( _088__C0 );
  assign _185__C = ( _185__C0 );
  assign _087__C = ( _087__C0 );
  assign _184__C = ( _184__C0 );
  assign _086__C = ( _086__C0 );
  assign _085__C = ( _085__C0 );
  assign _084__C = ( _084__C0 );
  assign _183__C = ( _183__C0 );
  assign _083__C = ( _083__C0 );
  assign _082__C = ( _082__C0 );
  assign _081__C = ( _081__C0 );
  assign _181__C = ( _181__C0 );
  assign _080__C = ( _080__C0 );
  assign _079__C = ( _079__C0 );
  assign _179__C = ( _179__C0 );
  assign _132__C = ( _132__C0 );
  assign IsNaN_8U_23U_1_nor_tmp_C = ( IsNaN_8U_23U_1_nor_tmp_C0 ) | ( IsNaN_8U_23U_1_nor_tmp_C1 );
  assign IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_C = ( IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_C0 ) | ( IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_C1 );
  assign _131__C = ( _131__C0 );
  assign _130__C = ( _130__C0 );
  assign FpAdd_8U_23U_mux_2_tmp_49_C = ( FpAdd_8U_23U_mux_2_tmp_49_C0 ) | ( FpAdd_8U_23U_mux_2_tmp_49_C1 );
  assign _171__C = ( _171__C0 );
  assign _067__C = ( _067__C0 );
  assign _065__C = ( _065__C0 );
  assign or_tmp_35_C = ( or_tmp_35_C0 ) | ( or_tmp_35_C1 );
  assign _061__C = ( _061__C0 );
  assign _117__C = ( _117__C0 );
  assign IsNaN_8U_23U_land_lpi_1_dfm_5_C = ( IsNaN_8U_23U_land_lpi_1_dfm_5_C0 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_5_C1 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_5_C2 );
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_C = ( IsNaN_8U_23U_1_land_lpi_1_dfm_3_C0 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_3_C1 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_3_C2 );
  assign _111__C = ( _111__C0 );
  assign FpAdd_8U_23U_is_inf_lpi_1_dfm_C = ( FpAdd_8U_23U_is_inf_lpi_1_dfm_C0 ) | ( FpAdd_8U_23U_is_inf_lpi_1_dfm_C1 );
  assign _160__C = ( _160__C0 );
  assign _159__C = ( _159__C0 );
  assign _158__C = ( _158__C0 );
  assign _157__C = ( _157__C0 );
  assign _156__C = ( _156__C0 );
  assign _155__C = ( _155__C0 );
  assign _154__C = ( _154__C0 );
  assign _153__C = ( _153__C0 );
  assign _152__C = ( _152__C0 );
  assign _151__C = ( _151__C0 );
  assign _150__C = ( _150__C0 );
  assign _149__C = ( _149__C0 );
  assign _148__C = ( _148__C0 );
  assign _147__C = ( _147__C0 );
  assign _146__C = ( _146__C0 );
  assign _145__C = ( _145__C0 );
  assign _144__C = ( _144__C0 );
  assign _143__C = ( _143__C0 );
  assign _142__C = ( _142__C0 );
  assign _141__C = ( _141__C0 );
  assign _140__C = ( _140__C0 );
  assign _139__C = ( _139__C0 );
  assign _138__C = ( _138__C0 );
  assign IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_C = ( IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_C0 ) | ( IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_C1 );
  assign IsNaN_8U_23U_1_nor_itm_2_C = ( IsNaN_8U_23U_1_nor_itm_2_C0 ) | ( IsNaN_8U_23U_1_nor_itm_2_C1 );
  assign _092__C = ( _092__C0 );
  assign _107__C = ( _107__C0 );
  assign IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_C = ( IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_C0 ) | ( IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_C1 ) | ( IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_C2 );
  assign and_dcpl_33_C = ( and_dcpl_33_C0 ) | ( and_dcpl_33_C1 ) | ( and_dcpl_33_C2 );
  assign _054__C = ( _054__C0 );
  assign _053__C = ( _053__C0 );
  assign _103__C = ( _103__C0 );
  assign nor_36_cse_C = ( nor_36_cse_C0 ) | ( nor_36_cse_C1 ) | ( nor_36_cse_C2 );
  assign _102__C = ( _102__C0 );
  assign _180__C = ( _180__C0 );
  assign _178__C = ( _178__C0 );
  assign _177__C = ( _177__C0 );
  assign _078__C = ( _078__C0 );
  assign _176__C = ( _176__C0 );
  assign _174__C = ( _174__C0 );
  assign mux_tmp_5_C = ( mux_tmp_5_C0 ) | ( mux_tmp_5_C1 );
  assign _173__C = ( _173__C0 );
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_4_C = ( IsNaN_8U_23U_1_land_lpi_1_dfm_4_C0 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_4_C1 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_4_C2 );
  assign b_sva_36_C = ( b_sva_36_C0 ) | ( b_sva_36_C1 ) | ( b_sva_36_C2 ) | ( b_sva_36_C3 ) | ( b_sva_36_C4 );
  assign main_stage_v_3_mx0c1_C = ( main_stage_v_3_mx0c1_C0 ) | ( main_stage_v_3_mx0c1_C1 );
  assign main_stage_v_2_mx0c1_C = ( main_stage_v_2_mx0c1_C0 ) | ( main_stage_v_2_mx0c1_C1 );
  assign main_stage_v_1_mx0c1_C = ( main_stage_v_1_mx0c1_C0 ) | ( main_stage_v_1_mx0c1_C1 );
  assign and_dcpl_15_C = ( and_dcpl_15_C0 ) | ( and_dcpl_15_C1 );
  assign _059__C = ( _059__C0 );
  assign FpAdd_8U_23U_is_a_greater_acc_1_nl_C = ( FpAdd_8U_23U_is_a_greater_acc_1_nl_C0 ) | ( FpAdd_8U_23U_is_a_greater_acc_1_nl_C1 ) | ( FpAdd_8U_23U_is_a_greater_acc_1_nl_C2 ) | ( FpAdd_8U_23U_is_a_greater_acc_1_nl_C3 );
  assign _163__C = ( _163__C0 );
  assign _162__C = ( _162__C0 );
  assign _089__C = ( _089__C0 );
  assign _093__C = ( _093__C0 );
  assign _137__C = ( _137__C0 );
  assign _091__C = ( _091__C0 );
  assign _136__C = ( _136__C0 );
  assign _135__C = ( _135__C0 );
  assign FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C = ( FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C0 ) | ( FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C1 ) | ( FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C2 ) | ( FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C3 );
  assign _134__C = ( _134__C0 );
  assign nor_tmp_11_C = ( nor_tmp_11_C0 ) | ( nor_tmp_11_C1 ) | ( nor_tmp_11_C2 ) | ( nor_tmp_11_C3 );
  assign and_dcpl_7_C = ( and_dcpl_7_C0 ) | ( and_dcpl_7_C1 );
  assign _133__C = ( _133__C0 );
  assign FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm_C = ( FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm_C0 );
  assign FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm_C = ( FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm_C0 );
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_C = ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_C0 ) | ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_C1 );
  assign fangyuan15_C = ( fangyuan15_C0 );
  assign FpAdd_8U_23U_and_nl_C = ( FpAdd_8U_23U_and_nl_C0 ) | ( FpAdd_8U_23U_and_nl_C1 ) | ( FpAdd_8U_23U_and_nl_C2 ) | ( FpAdd_8U_23U_and_nl_C3 ) | ( FpAdd_8U_23U_and_nl_C4 ) | ( FpAdd_8U_23U_and_nl_C5 ) | ( FpAdd_8U_23U_and_nl_C6 ) | ( FpAdd_8U_23U_and_nl_C7 );
  assign fangyuan14_C = ( fangyuan14_C0 );
  assign FpAdd_8U_23U_if_4_if_acc_nl_C = ( FpAdd_8U_23U_if_4_if_acc_nl_C0 ) | ( FpAdd_8U_23U_if_4_if_acc_nl_C1 );
  assign FpAdd_8U_23U_and_3_nl_C = ( FpAdd_8U_23U_and_3_nl_C0 ) | ( FpAdd_8U_23U_and_3_nl_C1 ) | ( FpAdd_8U_23U_and_3_nl_C2 ) | ( FpAdd_8U_23U_and_3_nl_C3 ) | ( FpAdd_8U_23U_and_3_nl_C4 ) | ( FpAdd_8U_23U_and_3_nl_C5 ) | ( FpAdd_8U_23U_and_3_nl_C6 ) | ( FpAdd_8U_23U_and_3_nl_C7 );
  assign fangyuan13_C = ( fangyuan13_C0 );
  assign FpAdd_8U_23U_and_7_nl_C = ( FpAdd_8U_23U_and_7_nl_C0 ) | ( FpAdd_8U_23U_and_7_nl_C1 ) | ( FpAdd_8U_23U_and_7_nl_C2 ) | ( FpAdd_8U_23U_and_7_nl_C3 ) | ( FpAdd_8U_23U_and_7_nl_C4 ) | ( FpAdd_8U_23U_and_7_nl_C5 ) | ( FpAdd_8U_23U_and_7_nl_C6 ) | ( FpAdd_8U_23U_and_7_nl_C7 );
  assign fangyuan12_C = ( fangyuan12_C0 );
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_C = ( FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_C0 ) | ( FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_C1 );
  assign fangyuan11_C = ( fangyuan11_C0 );
  assign FpNormalize_8U_49U_FpNormalize_8U_49U_and_nl_C = ( FpNormalize_8U_49U_FpNormalize_8U_49U_and_nl_C0 );
  assign _000__C = ( _000__C0 ) | ( _000__C1 ) | ( _000__C2 ) | ( _000__C3 ) | ( _000__C4 ) | ( _000__C5 ) | ( _000__C6 ) | ( _000__C7 ) | ( _000__C8 );
  assign fangyuan10_C = ( fangyuan10_C0 );
  assign FpAdd_8U_23U_and_1_nl_C = ( FpAdd_8U_23U_and_1_nl_C0 ) | ( FpAdd_8U_23U_and_1_nl_C1 ) | ( FpAdd_8U_23U_and_1_nl_C2 ) | ( FpAdd_8U_23U_and_1_nl_C3 ) | ( FpAdd_8U_23U_and_1_nl_C4 ) | ( FpAdd_8U_23U_and_1_nl_C5 ) | ( FpAdd_8U_23U_and_1_nl_C6 ) | ( FpAdd_8U_23U_and_1_nl_C7 ) | ( FpAdd_8U_23U_and_1_nl_C8 );
  assign fangyuan9_C = ( fangyuan9_C0 );
  assign FpAdd_8U_23U_if_3_if_acc_nl_C = ( FpAdd_8U_23U_if_3_if_acc_nl_C0 ) | ( FpAdd_8U_23U_if_3_if_acc_nl_C1 );
  assign FpAdd_8U_23U_and_2_nl_C = ( FpAdd_8U_23U_and_2_nl_C0 ) | ( FpAdd_8U_23U_and_2_nl_C1 ) | ( FpAdd_8U_23U_and_2_nl_C2 ) | ( FpAdd_8U_23U_and_2_nl_C3 ) | ( FpAdd_8U_23U_and_2_nl_C4 ) | ( FpAdd_8U_23U_and_2_nl_C5 ) | ( FpAdd_8U_23U_and_2_nl_C6 ) | ( FpAdd_8U_23U_and_2_nl_C7 ) | ( FpAdd_8U_23U_and_2_nl_C8 );
  assign and_dcpl_28_C = ( and_dcpl_28_C0 ) | ( and_dcpl_28_C1 ) | ( and_dcpl_28_C2 );
  assign FpAdd_8U_23U_a_sva_36_C = ( FpAdd_8U_23U_a_sva_36_C0 ) | ( FpAdd_8U_23U_a_sva_36_C1 ) | ( FpAdd_8U_23U_a_sva_36_C2 ) | ( FpAdd_8U_23U_a_sva_36_C3 ) | ( FpAdd_8U_23U_a_sva_36_C4 );
  assign FpSignedBitsToFloat_8U_23U_1_and_rgt_C = ( FpSignedBitsToFloat_8U_23U_1_and_rgt_C0 ) | ( FpSignedBitsToFloat_8U_23U_1_and_rgt_C1 );
  assign FpAdd_8U_23U_mux_1_itm_2_C = ( FpAdd_8U_23U_mux_1_itm_2_C0 ) | ( FpAdd_8U_23U_mux_1_itm_2_C1 );
  assign FpSignedBitsToFloat_8U_23U_1_and_1_rgt_C = ( FpSignedBitsToFloat_8U_23U_1_and_1_rgt_C0 ) | ( FpSignedBitsToFloat_8U_23U_1_and_1_rgt_C1 );
  assign _125__C = ( _125__C0 );
  assign FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_C = ( FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_C0 ) | ( FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_C1 ) | ( FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_C2 ) | ( FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_C3 );
  assign _077__C = ( _077__C0 );
  assign _129__C = ( _129__C0 );
  assign FpAdd_8U_23U_and_tmp_C = ( FpAdd_8U_23U_and_tmp_C0 ) | ( FpAdd_8U_23U_and_tmp_C1 );
  assign FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_C = ( FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_C0 ) | ( FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_C1 ) | ( FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_C2 );
  assign _128__C = ( _128__C0 );
  assign chn_o_rsci_d_22_0_mx0c1_C = ( chn_o_rsci_d_22_0_mx0c1_C0 ) | ( chn_o_rsci_d_22_0_mx0c1_C1 );
  assign _127__C = ( _127__C0 );
  assign mux_27_nl_C = ( mux_27_nl_C0 );
  assign _074__C = ( _074__C0 ) | ( _074__C1 );
  assign FpSignedBitsToFloat_8U_23U_1_FpAdd_8U_23U_or_1_cse_C = ( FpSignedBitsToFloat_8U_23U_1_FpAdd_8U_23U_or_1_cse_C0 );
  assign _072__C = ( _072__C0 );
  assign _172__C = ( _172__C0 );
  assign mux_23_nl_C = ( mux_23_nl_C0 ) | ( mux_23_nl_C1 );
  assign _070__C = ( _070__C0 );
  assign FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse_C = ( FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse_C0 );
  assign mux_8_nl_C = ( mux_8_nl_C0 );
  assign _170__C = ( _170__C0 );
  assign _169__C = ( _169__C0 );
  assign _168__C = ( _168__C0 );
  assign _167__C = ( _167__C0 );
  assign _166__C = ( _166__C0 );
  assign IsNaN_8U_23U_land_lpi_1_dfm_6_C = ( IsNaN_8U_23U_land_lpi_1_dfm_6_C0 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_6_C1 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_6_C2 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_6_C3 );
  assign or_tmp_29_C = ( or_tmp_29_C0 ) | ( or_tmp_29_C1 );
  assign _119__C = ( _119__C0 );
  assign _058__C = ( _058__C0 );
  assign _113__C = ( _113__C0 ) | ( _113__C1 );
  assign _057__C = ( _057__C0 );
  assign _105__C = ( _105__C0 ) | ( _105__C1 ) | ( _105__C2 );
  assign _056__C = ( _056__C0 );
  assign main_stage_v_1_C = ( main_stage_v_1_C0 ) | ( main_stage_v_1_C1 ) | ( main_stage_v_1_C2 ) | ( main_stage_v_1_C3 ) | ( main_stage_v_1_C4 ) | ( main_stage_v_1_C5 ) | ( main_stage_v_1_C6 ) | ( main_stage_v_1_C7 );
  assign _106__C = ( _106__C0 ) | ( _106__C1 ) | ( _106__C2 );
  assign _118__C = ( _118__C0 );
  assign and_dcpl_13_C = ( and_dcpl_13_C0 ) | ( and_dcpl_13_C1 ) | ( and_dcpl_13_C2 ) | ( and_dcpl_13_C3 );
  assign fsm_output_C = ( fsm_output_C0 ) | ( fsm_output_C1 );
  assign main_stage_en_1_C = ( main_stage_en_1_C0 ) | ( main_stage_en_1_C1 ) | ( main_stage_en_1_C2 );
  assign _165__C = ( _165__C0 );
  assign _055__C = ( _055__C0 );
  assign _116__C = ( _116__C0 );
  assign _115__C = ( _115__C0 );
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_4_C = ( IsNaN_8U_23U_land_lpi_1_dfm_st_4_C0 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_4_C1 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_4_C2 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_4_C3 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_4_C4 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_4_C5 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_4_C6 );
  assign _099__C = ( _099__C0 ) | ( _099__C1 ) | ( _099__C2 );
  assign and_dcpl_14_C = ( and_dcpl_14_C0 ) | ( and_dcpl_14_C1 );
  assign chn_o_rsci_bawt_C = ( chn_o_rsci_bawt_C0 ) | ( chn_o_rsci_bawt_C1 ) | ( chn_o_rsci_bawt_C2 ) | ( chn_o_rsci_bawt_C3 ) | ( chn_o_rsci_bawt_C4 );
  assign _114__C = ( _114__C0 );
  assign reg_chn_o_rsci_ld_core_psct_cse_C = ( reg_chn_o_rsci_ld_core_psct_cse_C0 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C1 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C2 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C3 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C4 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C5 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C6 );
  assign main_stage_v_2_C = ( main_stage_v_2_C0 ) | ( main_stage_v_2_C1 ) | ( main_stage_v_2_C2 ) | ( main_stage_v_2_C3 ) | ( main_stage_v_2_C4 ) | ( main_stage_v_2_C5 ) | ( main_stage_v_2_C6 ) | ( main_stage_v_2_C7 );
  assign _164__C = ( _164__C0 );
  assign FpNormalize_8U_49U_acc_nl_C = ( FpNormalize_8U_49U_acc_nl_C0 ) | ( FpNormalize_8U_49U_acc_nl_C1 );
  assign FpNormalize_8U_49U_if_or_itm_2_C = ( FpNormalize_8U_49U_if_or_itm_2_C0 ) | ( FpNormalize_8U_49U_if_or_itm_2_C1 );
  assign nor_tmp_1_C = ( nor_tmp_1_C0 ) | ( nor_tmp_1_C1 ) | ( nor_tmp_1_C2 );
  assign chn_a_rsci_bawt_C = ( chn_a_rsci_bawt_C0 );
  assign chn_b_rsci_bawt_C = ( chn_b_rsci_bawt_C0 );
  assign _090__C = ( _090__C0 );
  assign FpMantRNE_49U_24U_else_and_tmp_C = ( FpMantRNE_49U_24U_else_and_tmp_C0 ) | ( FpMantRNE_49U_24U_else_and_tmp_C1 );
  assign FpAdd_8U_23U_if_4_if_acc_1_nl_C = ( FpAdd_8U_23U_if_4_if_acc_1_nl_C0 ) | ( FpAdd_8U_23U_if_4_if_acc_1_nl_C1 ) | ( FpAdd_8U_23U_if_4_if_acc_1_nl_C2 ) | ( FpAdd_8U_23U_if_4_if_acc_1_nl_C3 );
  assign _161__C = ( _161__C0 );
  assign FpAdd_8U_23U_if_3_if_acc_1_nl_C = ( FpAdd_8U_23U_if_3_if_acc_1_nl_C0 ) | ( FpAdd_8U_23U_if_3_if_acc_1_nl_C1 ) | ( FpAdd_8U_23U_if_3_if_acc_1_nl_C2 ) | ( FpAdd_8U_23U_if_3_if_acc_1_nl_C3 ) | ( FpAdd_8U_23U_if_3_if_acc_1_nl_C4 );
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C = ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C0 ) | ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C1 ) | ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C2 ) | ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C3 ) | ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C4 ) | ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C5 ) | ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C6 ) | ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C7 ) | ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C8 ) | ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C9 );
  assign _110__C = ( _110__C0 );
  assign mux_28_nl_C = ( mux_28_nl_C0 );
  assign _101__C = ( _101__C0 );
  assign or_cse_C = ( or_cse_C0 ) | ( or_cse_C1 ) | ( or_cse_C2 ) | ( or_cse_C3 ) | ( or_cse_C4 ) | ( or_cse_C5 ) | ( or_cse_C6 ) | ( or_cse_C7 ) | ( or_cse_C8 ) | ( or_cse_C9 ) | ( or_cse_C10 ) | ( or_cse_C11 ) | ( or_cse_C12 ) | ( or_cse_C13 ) | ( or_cse_C14 ) | ( or_cse_C15 ) | ( or_cse_C16 );
  assign FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_C = ( FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_C0 ) | ( FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_C1 );
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_C = ( IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_C0 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_C1 );
  assign and_dcpl_29_C = ( and_dcpl_29_C0 ) | ( and_dcpl_29_C1 ) | ( and_dcpl_29_C2 ) | ( and_dcpl_29_C3 ) | ( and_dcpl_29_C4 );
  assign or_tmp_16_C = ( or_tmp_16_C0 ) | ( or_tmp_16_C1 ) | ( or_tmp_16_C2 ) | ( or_tmp_16_C3 );
  assign FpAdd_8U_23U_is_a_greater_oif_equal_tmp_C = ( FpAdd_8U_23U_is_a_greater_oif_equal_tmp_C0 ) | ( FpAdd_8U_23U_is_a_greater_oif_equal_tmp_C1 );
  assign _104__C = ( _104__C0 );
  assign mux_10_nl_C = ( mux_10_nl_C0 );
  assign main_stage_v_3_C = ( main_stage_v_3_C0 ) | ( main_stage_v_3_C1 ) | ( main_stage_v_3_C2 ) | ( main_stage_v_3_C3 ) | ( main_stage_v_3_C4 ) | ( main_stage_v_3_C5 );
  assign FpAdd_8U_23U_or_cse_C = ( FpAdd_8U_23U_or_cse_C0 ) | ( FpAdd_8U_23U_or_cse_C1 ) | ( FpAdd_8U_23U_or_cse_C2 ) | ( FpAdd_8U_23U_or_cse_C3 ) | ( FpAdd_8U_23U_or_cse_C4 ) | ( FpAdd_8U_23U_or_cse_C5 ) | ( FpAdd_8U_23U_or_cse_C6 ) | ( FpAdd_8U_23U_or_cse_C7 ) | ( FpAdd_8U_23U_or_cse_C8 ) | ( FpAdd_8U_23U_or_cse_C9 );
  assign mux_6_nl_C = ( mux_6_nl_C0 );
  assign mux_4_cse_C = ( mux_4_cse_C0 ) | ( mux_4_cse_C1 );
  assign mux_13_cse_C = ( mux_13_cse_C0 ) | ( mux_13_cse_C1 );
  assign _052__C = ( _052__C0 ) | ( _052__C1 ) | ( _052__C2 ) | ( _052__C3 ) | ( _052__C4 ) | ( _052__C5 );
  assign _100__C = ( _100__C0 );
  assign core_wen_C = ( core_wen_C0 ) | ( core_wen_C1 ) | ( core_wen_C2 ) | ( core_wen_C3 ) | ( core_wen_C4 ) | ( core_wen_C5 ) | ( core_wen_C6 ) | ( core_wen_C7 ) | ( core_wen_C8 ) | ( core_wen_C9 ) | ( core_wen_C10 ) | ( core_wen_C11 ) | ( core_wen_C12 ) | ( core_wen_C13 ) | ( core_wen_C14 ) | ( core_wen_C15 ) | ( core_wen_C16 );
  assign FpMantRNE_49U_24U_else_carry_sva_C = ( FpMantRNE_49U_24U_else_carry_sva_C0 ) | ( FpMantRNE_49U_24U_else_carry_sva_C1 );
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C = ( FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C0 ) | ( FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C1 ) | ( FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C2 );
  assign _051__C = ( _051__C0 );
  assign _001__C = ( _001__C0 );
  assign fangyuan8_C = ( fangyuan8_C0 );
  assign chn_a_rsci_d_mxwt_C = ( chn_a_rsci_d_mxwt_C0 ) | ( chn_a_rsci_d_mxwt_C1 ) | ( chn_a_rsci_d_mxwt_C2 ) | ( chn_a_rsci_d_mxwt_C3 ) | ( chn_a_rsci_d_mxwt_C4 ) | ( chn_a_rsci_d_mxwt_C5 ) | ( chn_a_rsci_d_mxwt_C6 );
  assign _050__C = ( _050__C0 );
  assign libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_C = ( libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_C0 ) | ( libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_C1 ) | ( libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_C2 );
  assign fangyuan7_C = ( fangyuan7_C0 );
  assign _112__C = ( _112__C0 );
  assign fangyuan6_C = ( fangyuan6_C0 );
  assign FpAdd_8U_23U_o_expo_lpi_1_dfm_2_C = ( FpAdd_8U_23U_o_expo_lpi_1_dfm_2_C0 ) | ( FpAdd_8U_23U_o_expo_lpi_1_dfm_2_C1 ) | ( FpAdd_8U_23U_o_expo_lpi_1_dfm_2_C2 );
  assign _049__C = ( _049__C0 );
  assign fangyuan5_C = ( fangyuan5_C0 );
  assign _109__C = ( _109__C0 );
  assign fangyuan4_C = ( fangyuan4_C0 );
  assign FpAdd_8U_23U_qr_lpi_1_dfm_6_C = ( FpAdd_8U_23U_qr_lpi_1_dfm_6_C0 ) | ( FpAdd_8U_23U_qr_lpi_1_dfm_6_C1 ) | ( FpAdd_8U_23U_qr_lpi_1_dfm_6_C2 ) | ( FpAdd_8U_23U_qr_lpi_1_dfm_6_C3 ) | ( FpAdd_8U_23U_qr_lpi_1_dfm_6_C4 ) | ( FpAdd_8U_23U_qr_lpi_1_dfm_6_C5 );
  assign _048__C = ( _048__C0 );
  assign fangyuan3_C = ( fangyuan3_C0 );
  assign _108__C = ( _108__C0 );
  assign FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_C = ( FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_C0 ) | ( FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_C1 );
  assign FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_C = ( FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_C0 ) | ( FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_C1 );
  assign _047__C = ( _047__C0 );
  assign _002__C = ( _002__C0 );
  assign fangyuan2_C = ( fangyuan2_C0 );
  assign chn_b_rsci_d_mxwt_C = ( chn_b_rsci_d_mxwt_C0 ) | ( chn_b_rsci_d_mxwt_C1 ) | ( chn_b_rsci_d_mxwt_C2 ) | ( chn_b_rsci_d_mxwt_C3 ) | ( chn_b_rsci_d_mxwt_C4 ) | ( chn_b_rsci_d_mxwt_C5 ) | ( chn_b_rsci_d_mxwt_C6 );
  assign fangyuan1_C = ( fangyuan1_C0 );
  assign _098__C = ( _098__C0 );
  assign fangyuan0_C = ( fangyuan0_C0 );
  assign _097__C = ( _097__C0 );
  assign chn_o_rsci_oswt_unreg_C = ( chn_o_rsci_oswt_unreg_C0 );
  assign chn_o_rsc_z_C = ( chn_o_rsc_z_C0 );
  assign chn_o_rsc_lz_C = ( chn_o_rsc_lz_C0 );
  assign chn_b_rsc_lz_C = ( chn_b_rsc_lz_C0 );
  assign chn_a_rsci_oswt_unreg_pff_C = ( chn_a_rsci_oswt_unreg_pff_C0 );
  assign chn_a_rsc_lz_C = ( chn_a_rsc_lz_C0 );
  assign chn_o_rsci_wen_comp_X = ( chn_o_rsci_wen_comp_X0 );
  assign chn_b_rsci_wen_comp_X = ( chn_b_rsci_wen_comp_X0 );
  assign chn_a_rsci_wen_comp_X = ( chn_a_rsci_wen_comp_X0 );
  assign chn_o_rsci_oswt_X = ( chn_o_rsci_oswt_X0 );
  assign chn_o_rsc_vz_X = ( chn_o_rsc_vz_X0 );
  assign chn_b_rsci_oswt_X = ( chn_b_rsci_oswt_X0 );
  assign chn_b_rsc_z_X = ( chn_b_rsc_z_X0 );
  assign chn_b_rsc_vz_X = ( chn_b_rsc_vz_X0 );
  assign nvdla_core_rstn_X = ( nvdla_core_rstn_X0 ) | ( nvdla_core_rstn_X1 ) | ( nvdla_core_rstn_X2 ) | ( nvdla_core_rstn_X3 ) | ( nvdla_core_rstn_X4 );
  assign core_wten_X = ( core_wten_X0 ) | ( core_wten_X1 ) | ( core_wten_X2 );
  assign chn_a_rsci_oswt_X = ( chn_a_rsci_oswt_X0 );
  assign chn_a_rsc_z_X = ( chn_a_rsc_z_X0 );
  assign chn_a_rsc_vz_X = ( chn_a_rsc_vz_X0 );
  assign nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s_X = ( nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s_X0 );
  assign FpAdd_8U_23U_b_left_shift_acc_nl_X = ( FpAdd_8U_23U_b_left_shift_acc_nl_X0 ) | ( FpAdd_8U_23U_b_left_shift_acc_nl_X1 ) | ( FpAdd_8U_23U_b_left_shift_acc_nl_X2 );
  assign nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s_X = ( nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s_X0 );
  assign FpAdd_8U_23U_a_left_shift_acc_nl_X = ( FpAdd_8U_23U_a_left_shift_acc_nl_X0 ) | ( FpAdd_8U_23U_a_left_shift_acc_nl_X1 ) | ( FpAdd_8U_23U_a_left_shift_acc_nl_X2 );
  assign chn_o_rsci_iswt0_X = ( chn_o_rsci_iswt0_X0 ) | ( chn_o_rsci_iswt0_X1 );
  assign reg_chn_a_rsci_iswt0_cse_X = ( reg_chn_a_rsci_iswt0_cse_X0 ) | ( reg_chn_a_rsci_iswt0_cse_X1 ) | ( reg_chn_a_rsci_iswt0_cse_X2 );
  assign _120__X = ( _120__X0 );
  assign reg_chn_a_rsci_ld_core_psct_cse_X = ( reg_chn_a_rsci_ld_core_psct_cse_X0 ) | ( reg_chn_a_rsci_ld_core_psct_cse_X1 ) | ( reg_chn_a_rsci_ld_core_psct_cse_X2 );
  assign _060__X = ( _060__X0 );
  assign chn_o_rsci_d_22_0_X = ( chn_o_rsci_d_22_0_X0 ) | ( chn_o_rsci_d_22_0_X1 ) | ( chn_o_rsci_d_22_0_X2 );
  assign _043__X = ( _043__X0 );
  assign _062__X = ( _062__X0 );
  assign FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl_X = ( FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl_X0 );
  assign FpSignedBitsToFloat_8U_23U_1_and_2_nl_X = ( FpSignedBitsToFloat_8U_23U_1_and_2_nl_X0 );
  assign chn_o_rsci_d_31_X = ( chn_o_rsci_d_31_X0 ) | ( chn_o_rsci_d_31_X1 ) | ( chn_o_rsci_d_31_X2 );
  assign chn_o_rsci_d_30_23_X = ( chn_o_rsci_d_30_23_X0 ) | ( chn_o_rsci_d_30_23_X1 ) | ( chn_o_rsci_d_30_23_X2 );
  assign _186__X = ( _186__X0 );
  assign chn_o_and_1_cse_X = ( chn_o_and_1_cse_X0 ) | ( chn_o_and_1_cse_X1 );
  assign _121__X = ( _121__X0 );
  assign _063__X = ( _063__X0 );
  assign _122__X = ( _122__X0 );
  assign _064__X = ( _064__X0 );
  assign FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_X = ( FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_X0 ) | ( FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_X1 ) | ( FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_X2 );
  assign _095__X = ( _095__X0 );
  assign FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_X = ( FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_X0 ) | ( FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_X1 ) | ( FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_X2 );
  assign _094__X = ( _094__X0 );
  assign _187__X = ( _187__X0 );
  assign IsNaN_8U_23U_aelse_and_cse_X = ( IsNaN_8U_23U_aelse_and_cse_X0 ) | ( IsNaN_8U_23U_aelse_and_cse_X1 ) | ( IsNaN_8U_23U_aelse_and_cse_X2 ) | ( IsNaN_8U_23U_aelse_and_cse_X3 ) | ( IsNaN_8U_23U_aelse_and_cse_X4 ) | ( IsNaN_8U_23U_aelse_and_cse_X5 ) | ( IsNaN_8U_23U_aelse_and_cse_X6 );
  assign _123__X = ( _123__X0 );
  assign _066__X = ( _066__X0 );
  assign FpAdd_8U_23U_a_int_mant_p1_lshift_itm_X = ( FpAdd_8U_23U_a_int_mant_p1_lshift_itm_X0 );
  assign FpAdd_8U_23U_b_int_mant_p1_lshift_itm_X = ( FpAdd_8U_23U_b_int_mant_p1_lshift_itm_X0 );
  assign FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_X = ( FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_X0 ) | ( FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_X1 );
  assign FpAdd_8U_23U_is_addition_and_cse_X = ( FpAdd_8U_23U_is_addition_and_cse_X0 ) | ( FpAdd_8U_23U_is_addition_and_cse_X1 ) | ( FpAdd_8U_23U_is_addition_and_cse_X2 ) | ( FpAdd_8U_23U_is_addition_and_cse_X3 ) | ( FpAdd_8U_23U_is_addition_and_cse_X4 ) | ( FpAdd_8U_23U_is_addition_and_cse_X5 ) | ( FpAdd_8U_23U_is_addition_and_cse_X6 );
  assign _124__X = ( _124__X0 );
  assign _068__X = ( _068__X0 );
  assign FpAdd_8U_23U_qr_lpi_1_dfm_5_X = ( FpAdd_8U_23U_qr_lpi_1_dfm_5_X0 ) | ( FpAdd_8U_23U_qr_lpi_1_dfm_5_X1 );
  assign FpAdd_8U_23U_mux_13_itm_4_X = ( FpAdd_8U_23U_mux_13_itm_4_X0 ) | ( FpAdd_8U_23U_mux_13_itm_4_X1 );
  assign FpAdd_8U_23U_and_8_cse_X = ( FpAdd_8U_23U_and_8_cse_X0 ) | ( FpAdd_8U_23U_and_8_cse_X1 ) | ( FpAdd_8U_23U_and_8_cse_X2 ) | ( FpAdd_8U_23U_and_8_cse_X3 ) | ( FpAdd_8U_23U_and_8_cse_X4 );
  assign _096__X = ( _096__X0 );
  assign _069__X = ( _069__X0 );
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_X = ( FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_X0 ) | ( FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_X1 );
  assign FpSignedBitsToFloat_8U_23U_1_and_3_cse_X = ( FpSignedBitsToFloat_8U_23U_1_and_3_cse_X0 ) | ( FpSignedBitsToFloat_8U_23U_1_and_3_cse_X1 );
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_X = ( FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_X0 ) | ( FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_X1 );
  assign _045__X = ( _045__X0 );
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_X = ( FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_X0 ) | ( FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_X1 );
  assign _044__X = ( _044__X0 );
  assign _071__X = ( _071__X0 ) | ( _071__X1 );
  assign FpAdd_8U_23U_mux_13_itm_3_X = ( FpAdd_8U_23U_mux_13_itm_3_X0 ) | ( FpAdd_8U_23U_mux_13_itm_3_X1 );
  assign _182__X = ( _182__X0 );
  assign _073__X = ( _073__X0 );
  assign FpAdd_8U_23U_qr_lpi_1_dfm_4_X = ( FpAdd_8U_23U_qr_lpi_1_dfm_4_X0 ) | ( FpAdd_8U_23U_qr_lpi_1_dfm_4_X1 );
  assign _046__X = ( _046__X0 );
  assign _075__X = ( _075__X0 );
  assign _042__X = ( _042__X0 );
  assign _076__X = ( _076__X0 );
  assign _126__X = ( _126__X0 );
  assign IsNaN_8U_23U_1_and_cse_X = ( IsNaN_8U_23U_1_and_cse_X0 ) | ( IsNaN_8U_23U_1_and_cse_X1 );
  assign nor_34_nl_X = ( nor_34_nl_X0 );
  assign mux_9_nl_X = ( mux_9_nl_X0 );
  assign or_10_nl_X = ( or_10_nl_X0 );
  assign and_67_nl_X = ( and_67_nl_X0 );
  assign nor_26_nl_X = ( nor_26_nl_X0 );
  assign nor_27_nl_X = ( nor_27_nl_X0 );
  assign FpAdd_8U_23U_a_int_mant_p1_sva_2_X = ( FpAdd_8U_23U_a_int_mant_p1_sva_2_X0 ) | ( FpAdd_8U_23U_a_int_mant_p1_sva_2_X1 ) | ( FpAdd_8U_23U_a_int_mant_p1_sva_2_X2 );
  assign FpAdd_8U_23U_b_int_mant_p1_sva_2_X = ( FpAdd_8U_23U_b_int_mant_p1_sva_2_X0 ) | ( FpAdd_8U_23U_b_int_mant_p1_sva_2_X1 ) | ( FpAdd_8U_23U_b_int_mant_p1_sva_2_X2 );
  assign FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_X = ( FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_X0 ) | ( FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_X1 ) | ( FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_X2 );
  assign FpNormalize_8U_49U_else_acc_nl_X = ( FpNormalize_8U_49U_else_acc_nl_X0 ) | ( FpNormalize_8U_49U_else_acc_nl_X1 );
  assign FpNormalize_8U_49U_else_lshift_itm_X = ( FpNormalize_8U_49U_else_lshift_itm_X0 );
  assign FpNormalize_8U_49U_oelse_not_3_X = ( FpNormalize_8U_49U_oelse_not_3_X0 ) | ( FpNormalize_8U_49U_oelse_not_3_X1 );
  assign FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl_X = ( FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl_X0 );
  assign fangyuan16_X = ( fangyuan16_X0 );
  assign FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl_X = ( FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl_X0 );
  assign FpAdd_8U_23U_b_right_shift_qif_acc_nl_X = ( FpAdd_8U_23U_b_right_shift_qif_acc_nl_X0 ) | ( FpAdd_8U_23U_b_right_shift_qif_acc_nl_X1 );
  assign FpAdd_8U_23U_a_right_shift_qelse_acc_nl_X = ( FpAdd_8U_23U_a_right_shift_qelse_acc_nl_X0 ) | ( FpAdd_8U_23U_a_right_shift_qelse_acc_nl_X1 );
  assign FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_X = ( FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_X0 ) | ( FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_X1 ) | ( FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_X2 ) | ( FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_X3 );
  assign FpAdd_8U_23U_asn_4_mx0w1_X = ( FpAdd_8U_23U_asn_4_mx0w1_X0 ) | ( FpAdd_8U_23U_asn_4_mx0w1_X1 ) | ( FpAdd_8U_23U_asn_4_mx0w1_X2 );
  assign FpAdd_8U_23U_asn_5_mx0w0_X = ( FpAdd_8U_23U_asn_5_mx0w0_X0 ) | ( FpAdd_8U_23U_asn_5_mx0w0_X1 ) | ( FpAdd_8U_23U_asn_5_mx0w0_X2 );
  assign reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_X = ( reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_X0 ) | ( reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_X1 ) | ( reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_X2 );
  assign nor_38_nl_X = ( nor_38_nl_X0 );
  assign FpMantRNE_49U_24U_else_acc_nl_X = ( FpMantRNE_49U_24U_else_acc_nl_X0 ) | ( FpMantRNE_49U_24U_else_acc_nl_X1 );
  assign or_tmp_3_X = ( or_tmp_3_X0 ) | ( or_tmp_3_X1 );
  assign mux_7_nl_X = ( mux_7_nl_X0 );
  assign nor_37_nl_X = ( nor_37_nl_X0 );
  assign _175__X = ( _175__X0 );
  assign nor_31_nl_X = ( nor_31_nl_X0 ) | ( nor_31_nl_X1 );
  assign mux_24_nl_X = ( mux_24_nl_X0 ) | ( mux_24_nl_X1 );
  assign nor_28_nl_X = ( nor_28_nl_X0 );
  assign nor_29_nl_X = ( nor_29_nl_X0 );
  assign _039__X = ( _039__X0 );
  assign _034__X = ( _034__X0 );
  assign _040__X = ( _040__X0 );
  assign _031__X = ( _031__X0 );
  assign _032__X = ( _032__X0 );
  assign _033__X = ( _033__X0 );
  assign _041__X = ( _041__X0 );
  assign _035__X = ( _035__X0 );
  assign _011__X = ( _011__X0 );
  assign _006__X = ( _006__X0 );
  assign _030__X = ( _030__X0 );
  assign _029__X = ( _029__X0 );
  assign _003__X = ( _003__X0 );
  assign _004__X = ( _004__X0 );
  assign _009__X = ( _009__X0 );
  assign _036__X = ( _036__X0 );
  assign _038__X = ( _038__X0 );
  assign _027__X = ( _027__X0 );
  assign _007__X = ( _007__X0 );
  assign _005__X = ( _005__X0 );
  assign _016__X = ( _016__X0 );
  assign _010__X = ( _010__X0 );
  assign _024__X = ( _024__X0 );
  assign _037__X = ( _037__X0 );
  assign _013__X = ( _013__X0 );
  assign _028__X = ( _028__X0 );
  assign _008__X = ( _008__X0 );
  assign _017__X = ( _017__X0 );
  assign _025__X = ( _025__X0 );
  assign _018__X = ( _018__X0 );
  assign _022__X = ( _022__X0 );
  assign _020__X = ( _020__X0 );
  assign _021__X = ( _021__X0 );
  assign _019__X = ( _019__X0 );
  assign _012__X = ( _012__X0 );
  assign _015__X = ( _015__X0 );
  assign _014__X = ( _014__X0 );
  assign _023__X = ( _023__X0 );
  assign _026__X = ( _026__X0 );
  assign _088__X = ( _088__X0 );
  assign _185__X = ( _185__X0 );
  assign _087__X = ( _087__X0 );
  assign _184__X = ( _184__X0 );
  assign _086__X = ( _086__X0 );
  assign _085__X = ( _085__X0 );
  assign _084__X = ( _084__X0 );
  assign _183__X = ( _183__X0 );
  assign _083__X = ( _083__X0 );
  assign _082__X = ( _082__X0 );
  assign _081__X = ( _081__X0 );
  assign _181__X = ( _181__X0 );
  assign _080__X = ( _080__X0 );
  assign _079__X = ( _079__X0 );
  assign _179__X = ( _179__X0 );
  assign _132__X = ( _132__X0 );
  assign IsNaN_8U_23U_1_nor_tmp_X = ( IsNaN_8U_23U_1_nor_tmp_X0 ) | ( IsNaN_8U_23U_1_nor_tmp_X1 );
  assign IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_X = ( IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_X0 ) | ( IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_X1 );
  assign _131__X = ( _131__X0 );
  assign _130__X = ( _130__X0 );
  assign FpAdd_8U_23U_mux_2_tmp_49_X = ( FpAdd_8U_23U_mux_2_tmp_49_X0 ) | ( FpAdd_8U_23U_mux_2_tmp_49_X1 );
  assign _171__X = ( _171__X0 );
  assign _067__X = ( _067__X0 );
  assign _065__X = ( _065__X0 );
  assign or_tmp_35_X = ( or_tmp_35_X0 ) | ( or_tmp_35_X1 );
  assign _061__X = ( _061__X0 );
  assign _117__X = ( _117__X0 );
  assign IsNaN_8U_23U_land_lpi_1_dfm_5_X = ( IsNaN_8U_23U_land_lpi_1_dfm_5_X0 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_5_X1 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_5_X2 );
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_X = ( IsNaN_8U_23U_1_land_lpi_1_dfm_3_X0 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_3_X1 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_3_X2 );
  assign _111__X = ( _111__X0 );
  assign FpAdd_8U_23U_is_inf_lpi_1_dfm_X = ( FpAdd_8U_23U_is_inf_lpi_1_dfm_X0 ) | ( FpAdd_8U_23U_is_inf_lpi_1_dfm_X1 );
  assign _160__X = ( _160__X0 );
  assign _159__X = ( _159__X0 );
  assign _158__X = ( _158__X0 );
  assign _157__X = ( _157__X0 );
  assign _156__X = ( _156__X0 );
  assign _155__X = ( _155__X0 );
  assign _154__X = ( _154__X0 );
  assign _153__X = ( _153__X0 );
  assign _152__X = ( _152__X0 );
  assign _151__X = ( _151__X0 );
  assign _150__X = ( _150__X0 );
  assign _149__X = ( _149__X0 );
  assign _148__X = ( _148__X0 );
  assign _147__X = ( _147__X0 );
  assign _146__X = ( _146__X0 );
  assign _145__X = ( _145__X0 );
  assign _144__X = ( _144__X0 );
  assign _143__X = ( _143__X0 );
  assign _142__X = ( _142__X0 );
  assign _141__X = ( _141__X0 );
  assign _140__X = ( _140__X0 );
  assign _139__X = ( _139__X0 );
  assign _138__X = ( _138__X0 );
  assign IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_X = ( IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_X0 ) | ( IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_X1 );
  assign IsNaN_8U_23U_1_nor_itm_2_X = ( IsNaN_8U_23U_1_nor_itm_2_X0 ) | ( IsNaN_8U_23U_1_nor_itm_2_X1 );
  assign _092__X = ( _092__X0 );
  assign _107__X = ( _107__X0 );
  assign IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_X = ( IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_X0 ) | ( IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_X1 ) | ( IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_X2 );
  assign and_dcpl_33_X = ( and_dcpl_33_X0 ) | ( and_dcpl_33_X1 ) | ( and_dcpl_33_X2 );
  assign _054__X = ( _054__X0 );
  assign _053__X = ( _053__X0 );
  assign _103__X = ( _103__X0 );
  assign nor_36_cse_X = ( nor_36_cse_X0 ) | ( nor_36_cse_X1 ) | ( nor_36_cse_X2 );
  assign _102__X = ( _102__X0 );
  assign _180__X = ( _180__X0 );
  assign _178__X = ( _178__X0 );
  assign _177__X = ( _177__X0 );
  assign _078__X = ( _078__X0 );
  assign _176__X = ( _176__X0 );
  assign _174__X = ( _174__X0 );
  assign mux_tmp_5_X = ( mux_tmp_5_X0 ) | ( mux_tmp_5_X1 );
  assign _173__X = ( _173__X0 );
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_4_X = ( IsNaN_8U_23U_1_land_lpi_1_dfm_4_X0 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_4_X1 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_4_X2 );
  assign b_sva_36_X = ( b_sva_36_X0 ) | ( b_sva_36_X1 ) | ( b_sva_36_X2 ) | ( b_sva_36_X3 ) | ( b_sva_36_X4 );
  assign main_stage_v_3_mx0c1_X = ( main_stage_v_3_mx0c1_X0 ) | ( main_stage_v_3_mx0c1_X1 );
  assign main_stage_v_2_mx0c1_X = ( main_stage_v_2_mx0c1_X0 ) | ( main_stage_v_2_mx0c1_X1 );
  assign main_stage_v_1_mx0c1_X = ( main_stage_v_1_mx0c1_X0 ) | ( main_stage_v_1_mx0c1_X1 );
  assign and_dcpl_15_X = ( and_dcpl_15_X0 ) | ( and_dcpl_15_X1 );
  assign _059__X = ( _059__X0 );
  assign FpAdd_8U_23U_is_a_greater_acc_1_nl_X = ( FpAdd_8U_23U_is_a_greater_acc_1_nl_X0 ) | ( FpAdd_8U_23U_is_a_greater_acc_1_nl_X1 ) | ( FpAdd_8U_23U_is_a_greater_acc_1_nl_X2 ) | ( FpAdd_8U_23U_is_a_greater_acc_1_nl_X3 );
  assign _163__X = ( _163__X0 );
  assign _162__X = ( _162__X0 );
  assign _089__X = ( _089__X0 );
  assign _093__X = ( _093__X0 );
  assign _137__X = ( _137__X0 );
  assign _091__X = ( _091__X0 );
  assign _136__X = ( _136__X0 );
  assign _135__X = ( _135__X0 );
  assign FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X = ( FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X0 ) | ( FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X1 ) | ( FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X2 ) | ( FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X3 );
  assign _134__X = ( _134__X0 );
  assign nor_tmp_11_X = ( nor_tmp_11_X0 ) | ( nor_tmp_11_X1 ) | ( nor_tmp_11_X2 ) | ( nor_tmp_11_X3 );
  assign and_dcpl_7_X = ( and_dcpl_7_X0 ) | ( and_dcpl_7_X1 );
  assign _133__X = ( _133__X0 );
  assign FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm_X = ( FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm_X0 );
  assign FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm_X = ( FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm_X0 );
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_X = ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_X0 ) | ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_X1 );
  assign fangyuan15_X = ( fangyuan15_X0 );
  assign FpAdd_8U_23U_and_nl_X = ( FpAdd_8U_23U_and_nl_X0 ) | ( FpAdd_8U_23U_and_nl_X1 ) | ( FpAdd_8U_23U_and_nl_X2 ) | ( FpAdd_8U_23U_and_nl_X3 ) | ( FpAdd_8U_23U_and_nl_X4 ) | ( FpAdd_8U_23U_and_nl_X5 ) | ( FpAdd_8U_23U_and_nl_X6 ) | ( FpAdd_8U_23U_and_nl_X7 );
  assign fangyuan14_X = ( fangyuan14_X0 );
  assign FpAdd_8U_23U_if_4_if_acc_nl_X = ( FpAdd_8U_23U_if_4_if_acc_nl_X0 ) | ( FpAdd_8U_23U_if_4_if_acc_nl_X1 );
  assign FpAdd_8U_23U_and_3_nl_X = ( FpAdd_8U_23U_and_3_nl_X0 ) | ( FpAdd_8U_23U_and_3_nl_X1 ) | ( FpAdd_8U_23U_and_3_nl_X2 ) | ( FpAdd_8U_23U_and_3_nl_X3 ) | ( FpAdd_8U_23U_and_3_nl_X4 ) | ( FpAdd_8U_23U_and_3_nl_X5 ) | ( FpAdd_8U_23U_and_3_nl_X6 ) | ( FpAdd_8U_23U_and_3_nl_X7 );
  assign fangyuan13_X = ( fangyuan13_X0 );
  assign FpAdd_8U_23U_and_7_nl_X = ( FpAdd_8U_23U_and_7_nl_X0 ) | ( FpAdd_8U_23U_and_7_nl_X1 ) | ( FpAdd_8U_23U_and_7_nl_X2 ) | ( FpAdd_8U_23U_and_7_nl_X3 ) | ( FpAdd_8U_23U_and_7_nl_X4 ) | ( FpAdd_8U_23U_and_7_nl_X5 ) | ( FpAdd_8U_23U_and_7_nl_X6 ) | ( FpAdd_8U_23U_and_7_nl_X7 );
  assign fangyuan12_X = ( fangyuan12_X0 );
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_X = ( FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_X0 ) | ( FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_X1 );
  assign fangyuan11_X = ( fangyuan11_X0 );
  assign FpNormalize_8U_49U_FpNormalize_8U_49U_and_nl_X = ( FpNormalize_8U_49U_FpNormalize_8U_49U_and_nl_X0 );
  assign _000__X = ( _000__X0 ) | ( _000__X1 ) | ( _000__X2 ) | ( _000__X3 ) | ( _000__X4 ) | ( _000__X5 ) | ( _000__X6 ) | ( _000__X7 ) | ( _000__X8 );
  assign fangyuan10_X = ( fangyuan10_X0 );
  assign FpAdd_8U_23U_and_1_nl_X = ( FpAdd_8U_23U_and_1_nl_X0 ) | ( FpAdd_8U_23U_and_1_nl_X1 ) | ( FpAdd_8U_23U_and_1_nl_X2 ) | ( FpAdd_8U_23U_and_1_nl_X3 ) | ( FpAdd_8U_23U_and_1_nl_X4 ) | ( FpAdd_8U_23U_and_1_nl_X5 ) | ( FpAdd_8U_23U_and_1_nl_X6 ) | ( FpAdd_8U_23U_and_1_nl_X7 ) | ( FpAdd_8U_23U_and_1_nl_X8 );
  assign fangyuan9_X = ( fangyuan9_X0 );
  assign FpAdd_8U_23U_if_3_if_acc_nl_X = ( FpAdd_8U_23U_if_3_if_acc_nl_X0 ) | ( FpAdd_8U_23U_if_3_if_acc_nl_X1 );
  assign FpAdd_8U_23U_and_2_nl_X = ( FpAdd_8U_23U_and_2_nl_X0 ) | ( FpAdd_8U_23U_and_2_nl_X1 ) | ( FpAdd_8U_23U_and_2_nl_X2 ) | ( FpAdd_8U_23U_and_2_nl_X3 ) | ( FpAdd_8U_23U_and_2_nl_X4 ) | ( FpAdd_8U_23U_and_2_nl_X5 ) | ( FpAdd_8U_23U_and_2_nl_X6 ) | ( FpAdd_8U_23U_and_2_nl_X7 ) | ( FpAdd_8U_23U_and_2_nl_X8 );
  assign and_dcpl_28_X = ( and_dcpl_28_X0 ) | ( and_dcpl_28_X1 ) | ( and_dcpl_28_X2 );
  assign FpAdd_8U_23U_a_sva_36_X = ( FpAdd_8U_23U_a_sva_36_X0 ) | ( FpAdd_8U_23U_a_sva_36_X1 ) | ( FpAdd_8U_23U_a_sva_36_X2 ) | ( FpAdd_8U_23U_a_sva_36_X3 ) | ( FpAdd_8U_23U_a_sva_36_X4 );
  assign FpSignedBitsToFloat_8U_23U_1_and_rgt_X = ( FpSignedBitsToFloat_8U_23U_1_and_rgt_X0 ) | ( FpSignedBitsToFloat_8U_23U_1_and_rgt_X1 );
  assign FpAdd_8U_23U_mux_1_itm_2_X = ( FpAdd_8U_23U_mux_1_itm_2_X0 ) | ( FpAdd_8U_23U_mux_1_itm_2_X1 );
  assign FpSignedBitsToFloat_8U_23U_1_and_1_rgt_X = ( FpSignedBitsToFloat_8U_23U_1_and_1_rgt_X0 ) | ( FpSignedBitsToFloat_8U_23U_1_and_1_rgt_X1 );
  assign _125__X = ( _125__X0 );
  assign FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_X = ( FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_X0 ) | ( FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_X1 ) | ( FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_X2 ) | ( FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_X3 );
  assign _077__X = ( _077__X0 );
  assign _129__X = ( _129__X0 );
  assign FpAdd_8U_23U_and_tmp_X = ( FpAdd_8U_23U_and_tmp_X0 ) | ( FpAdd_8U_23U_and_tmp_X1 );
  assign FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_X = ( FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_X0 ) | ( FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_X1 ) | ( FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_X2 );
  assign _128__X = ( _128__X0 );
  assign chn_o_rsci_d_22_0_mx0c1_X = ( chn_o_rsci_d_22_0_mx0c1_X0 ) | ( chn_o_rsci_d_22_0_mx0c1_X1 );
  assign _127__X = ( _127__X0 );
  assign mux_27_nl_X = ( mux_27_nl_X0 );
  assign _074__X = ( _074__X0 ) | ( _074__X1 );
  assign FpSignedBitsToFloat_8U_23U_1_FpAdd_8U_23U_or_1_cse_X = ( FpSignedBitsToFloat_8U_23U_1_FpAdd_8U_23U_or_1_cse_X0 );
  assign _072__X = ( _072__X0 );
  assign _172__X = ( _172__X0 );
  assign mux_23_nl_X = ( mux_23_nl_X0 ) | ( mux_23_nl_X1 );
  assign _070__X = ( _070__X0 );
  assign FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse_X = ( FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse_X0 );
  assign mux_8_nl_X = ( mux_8_nl_X0 );
  assign _170__X = ( _170__X0 );
  assign _169__X = ( _169__X0 );
  assign _168__X = ( _168__X0 );
  assign _167__X = ( _167__X0 );
  assign _166__X = ( _166__X0 );
  assign IsNaN_8U_23U_land_lpi_1_dfm_6_X = ( IsNaN_8U_23U_land_lpi_1_dfm_6_X0 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_6_X1 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_6_X2 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_6_X3 );
  assign or_tmp_29_X = ( or_tmp_29_X0 ) | ( or_tmp_29_X1 );
  assign _119__X = ( _119__X0 );
  assign _058__X = ( _058__X0 );
  assign _113__X = ( _113__X0 ) | ( _113__X1 );
  assign _057__X = ( _057__X0 );
  assign _105__X = ( _105__X0 ) | ( _105__X1 ) | ( _105__X2 );
  assign _056__X = ( _056__X0 );
  assign main_stage_v_1_X = ( main_stage_v_1_X0 ) | ( main_stage_v_1_X1 ) | ( main_stage_v_1_X2 ) | ( main_stage_v_1_X3 ) | ( main_stage_v_1_X4 ) | ( main_stage_v_1_X5 ) | ( main_stage_v_1_X6 ) | ( main_stage_v_1_X7 );
  assign _106__X = ( _106__X0 ) | ( _106__X1 ) | ( _106__X2 );
  assign _118__X = ( _118__X0 );
  assign and_dcpl_13_X = ( and_dcpl_13_X0 ) | ( and_dcpl_13_X1 ) | ( and_dcpl_13_X2 ) | ( and_dcpl_13_X3 );
  assign fsm_output_X = ( fsm_output_X0 ) | ( fsm_output_X1 );
  assign main_stage_en_1_X = ( main_stage_en_1_X0 ) | ( main_stage_en_1_X1 ) | ( main_stage_en_1_X2 );
  assign _165__X = ( _165__X0 );
  assign _055__X = ( _055__X0 );
  assign _116__X = ( _116__X0 );
  assign _115__X = ( _115__X0 );
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_4_X = ( IsNaN_8U_23U_land_lpi_1_dfm_st_4_X0 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_4_X1 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_4_X2 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_4_X3 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_4_X4 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_4_X5 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_4_X6 );
  assign _099__X = ( _099__X0 ) | ( _099__X1 ) | ( _099__X2 );
  assign and_dcpl_14_X = ( and_dcpl_14_X0 ) | ( and_dcpl_14_X1 );
  assign chn_o_rsci_bawt_X = ( chn_o_rsci_bawt_X0 ) | ( chn_o_rsci_bawt_X1 ) | ( chn_o_rsci_bawt_X2 ) | ( chn_o_rsci_bawt_X3 ) | ( chn_o_rsci_bawt_X4 );
  assign _114__X = ( _114__X0 );
  assign reg_chn_o_rsci_ld_core_psct_cse_X = ( reg_chn_o_rsci_ld_core_psct_cse_X0 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X1 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X2 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X3 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X4 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X5 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X6 );
  assign main_stage_v_2_X = ( main_stage_v_2_X0 ) | ( main_stage_v_2_X1 ) | ( main_stage_v_2_X2 ) | ( main_stage_v_2_X3 ) | ( main_stage_v_2_X4 ) | ( main_stage_v_2_X5 ) | ( main_stage_v_2_X6 ) | ( main_stage_v_2_X7 );
  assign _164__X = ( _164__X0 );
  assign FpNormalize_8U_49U_acc_nl_X = ( FpNormalize_8U_49U_acc_nl_X0 ) | ( FpNormalize_8U_49U_acc_nl_X1 );
  assign FpNormalize_8U_49U_if_or_itm_2_X = ( FpNormalize_8U_49U_if_or_itm_2_X0 ) | ( FpNormalize_8U_49U_if_or_itm_2_X1 );
  assign nor_tmp_1_X = ( nor_tmp_1_X0 ) | ( nor_tmp_1_X1 ) | ( nor_tmp_1_X2 );
  assign chn_a_rsci_bawt_X = ( chn_a_rsci_bawt_X0 );
  assign chn_b_rsci_bawt_X = ( chn_b_rsci_bawt_X0 );
  assign _090__X = ( _090__X0 );
  assign FpMantRNE_49U_24U_else_and_tmp_X = ( FpMantRNE_49U_24U_else_and_tmp_X0 ) | ( FpMantRNE_49U_24U_else_and_tmp_X1 );
  assign FpAdd_8U_23U_if_4_if_acc_1_nl_X = ( FpAdd_8U_23U_if_4_if_acc_1_nl_X0 ) | ( FpAdd_8U_23U_if_4_if_acc_1_nl_X1 ) | ( FpAdd_8U_23U_if_4_if_acc_1_nl_X2 ) | ( FpAdd_8U_23U_if_4_if_acc_1_nl_X3 );
  assign _161__X = ( _161__X0 );
  assign FpAdd_8U_23U_if_3_if_acc_1_nl_X = ( FpAdd_8U_23U_if_3_if_acc_1_nl_X0 ) | ( FpAdd_8U_23U_if_3_if_acc_1_nl_X1 ) | ( FpAdd_8U_23U_if_3_if_acc_1_nl_X2 ) | ( FpAdd_8U_23U_if_3_if_acc_1_nl_X3 ) | ( FpAdd_8U_23U_if_3_if_acc_1_nl_X4 );
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X = ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 ) | ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 ) | ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 ) | ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X3 ) | ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 ) | ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X5 ) | ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X6 ) | ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X7 ) | ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X8 ) | ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X9 );
  assign _110__X = ( _110__X0 );
  assign mux_28_nl_X = ( mux_28_nl_X0 );
  assign _101__X = ( _101__X0 );
  assign or_cse_X = ( or_cse_X0 ) | ( or_cse_X1 ) | ( or_cse_X2 ) | ( or_cse_X3 ) | ( or_cse_X4 ) | ( or_cse_X5 ) | ( or_cse_X6 ) | ( or_cse_X7 ) | ( or_cse_X8 ) | ( or_cse_X9 ) | ( or_cse_X10 ) | ( or_cse_X11 ) | ( or_cse_X12 ) | ( or_cse_X13 ) | ( or_cse_X14 ) | ( or_cse_X15 ) | ( or_cse_X16 );
  assign FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_X = ( FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_X0 ) | ( FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_X1 );
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_X = ( IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_X0 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_X1 );
  assign and_dcpl_29_X = ( and_dcpl_29_X0 ) | ( and_dcpl_29_X1 ) | ( and_dcpl_29_X2 ) | ( and_dcpl_29_X3 ) | ( and_dcpl_29_X4 );
  assign or_tmp_16_X = ( or_tmp_16_X0 ) | ( or_tmp_16_X1 ) | ( or_tmp_16_X2 ) | ( or_tmp_16_X3 );
  assign FpAdd_8U_23U_is_a_greater_oif_equal_tmp_X = ( FpAdd_8U_23U_is_a_greater_oif_equal_tmp_X0 ) | ( FpAdd_8U_23U_is_a_greater_oif_equal_tmp_X1 );
  assign _104__X = ( _104__X0 );
  assign mux_10_nl_X = ( mux_10_nl_X0 );
  assign main_stage_v_3_X = ( main_stage_v_3_X0 ) | ( main_stage_v_3_X1 ) | ( main_stage_v_3_X2 ) | ( main_stage_v_3_X3 ) | ( main_stage_v_3_X4 ) | ( main_stage_v_3_X5 );
  assign FpAdd_8U_23U_or_cse_X = ( FpAdd_8U_23U_or_cse_X0 ) | ( FpAdd_8U_23U_or_cse_X1 ) | ( FpAdd_8U_23U_or_cse_X2 ) | ( FpAdd_8U_23U_or_cse_X3 ) | ( FpAdd_8U_23U_or_cse_X4 ) | ( FpAdd_8U_23U_or_cse_X5 ) | ( FpAdd_8U_23U_or_cse_X6 ) | ( FpAdd_8U_23U_or_cse_X7 ) | ( FpAdd_8U_23U_or_cse_X8 ) | ( FpAdd_8U_23U_or_cse_X9 );
  assign mux_6_nl_X = ( mux_6_nl_X0 );
  assign mux_4_cse_X = ( mux_4_cse_X0 ) | ( mux_4_cse_X1 );
  assign mux_13_cse_X = ( mux_13_cse_X0 ) | ( mux_13_cse_X1 );
  assign _052__X = ( _052__X0 ) | ( _052__X1 ) | ( _052__X2 ) | ( _052__X3 ) | ( _052__X4 ) | ( _052__X5 );
  assign _100__X = ( _100__X0 );
  assign core_wen_X = ( core_wen_X0 ) | ( core_wen_X1 ) | ( core_wen_X2 ) | ( core_wen_X3 ) | ( core_wen_X4 ) | ( core_wen_X5 ) | ( core_wen_X6 ) | ( core_wen_X7 ) | ( core_wen_X8 ) | ( core_wen_X9 ) | ( core_wen_X10 ) | ( core_wen_X11 ) | ( core_wen_X12 ) | ( core_wen_X13 ) | ( core_wen_X14 ) | ( core_wen_X15 ) | ( core_wen_X16 );
  assign FpMantRNE_49U_24U_else_carry_sva_X = ( FpMantRNE_49U_24U_else_carry_sva_X0 ) | ( FpMantRNE_49U_24U_else_carry_sva_X1 );
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X = ( FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X0 ) | ( FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X1 ) | ( FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X2 );
  assign _051__X = ( _051__X0 );
  assign _001__X = ( _001__X0 );
  assign fangyuan8_X = ( fangyuan8_X0 );
  assign chn_a_rsci_d_mxwt_X = ( chn_a_rsci_d_mxwt_X0 ) | ( chn_a_rsci_d_mxwt_X1 ) | ( chn_a_rsci_d_mxwt_X2 ) | ( chn_a_rsci_d_mxwt_X3 ) | ( chn_a_rsci_d_mxwt_X4 ) | ( chn_a_rsci_d_mxwt_X5 ) | ( chn_a_rsci_d_mxwt_X6 );
  assign _050__X = ( _050__X0 );
  assign libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_X = ( libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_X0 ) | ( libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_X1 ) | ( libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_X2 );
  assign fangyuan7_X = ( fangyuan7_X0 );
  assign _112__X = ( _112__X0 );
  assign fangyuan6_X = ( fangyuan6_X0 );
  assign FpAdd_8U_23U_o_expo_lpi_1_dfm_2_X = ( FpAdd_8U_23U_o_expo_lpi_1_dfm_2_X0 ) | ( FpAdd_8U_23U_o_expo_lpi_1_dfm_2_X1 ) | ( FpAdd_8U_23U_o_expo_lpi_1_dfm_2_X2 );
  assign _049__X = ( _049__X0 );
  assign fangyuan5_X = ( fangyuan5_X0 );
  assign _109__X = ( _109__X0 );
  assign fangyuan4_X = ( fangyuan4_X0 );
  assign FpAdd_8U_23U_qr_lpi_1_dfm_6_X = ( FpAdd_8U_23U_qr_lpi_1_dfm_6_X0 ) | ( FpAdd_8U_23U_qr_lpi_1_dfm_6_X1 ) | ( FpAdd_8U_23U_qr_lpi_1_dfm_6_X2 ) | ( FpAdd_8U_23U_qr_lpi_1_dfm_6_X3 ) | ( FpAdd_8U_23U_qr_lpi_1_dfm_6_X4 ) | ( FpAdd_8U_23U_qr_lpi_1_dfm_6_X5 );
  assign _048__X = ( _048__X0 );
  assign fangyuan3_X = ( fangyuan3_X0 );
  assign _108__X = ( _108__X0 );
  assign FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_X = ( FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_X0 ) | ( FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_X1 );
  assign FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_X = ( FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_X0 ) | ( FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_X1 );
  assign _047__X = ( _047__X0 );
  assign _002__X = ( _002__X0 );
  assign fangyuan2_X = ( fangyuan2_X0 );
  assign chn_b_rsci_d_mxwt_X = ( chn_b_rsci_d_mxwt_X0 ) | ( chn_b_rsci_d_mxwt_X1 ) | ( chn_b_rsci_d_mxwt_X2 ) | ( chn_b_rsci_d_mxwt_X3 ) | ( chn_b_rsci_d_mxwt_X4 ) | ( chn_b_rsci_d_mxwt_X5 ) | ( chn_b_rsci_d_mxwt_X6 );
  assign fangyuan1_X = ( fangyuan1_X0 );
  assign _098__X = ( _098__X0 );
  assign fangyuan0_X = ( fangyuan0_X0 );
  assign _097__X = ( _097__X0 );
  assign chn_o_rsci_oswt_unreg_X = ( chn_o_rsci_oswt_unreg_X0 );
  assign chn_o_rsc_z_X = ( chn_o_rsc_z_X0 );
  assign chn_o_rsc_lz_X = ( chn_o_rsc_lz_X0 );
  assign chn_b_rsc_lz_X = ( chn_b_rsc_lz_X0 );
  assign chn_a_rsci_oswt_unreg_pff_X = ( chn_a_rsci_oswt_unreg_pff_X0 );
  assign chn_a_rsc_lz_X = ( chn_a_rsc_lz_X0 );
  assign chn_o_rsci_wen_comp_R = ( chn_o_rsci_wen_comp_X0 & chn_o_rsci_wen_comp_R0 );
  assign chn_b_rsci_wen_comp_R = ( chn_b_rsci_wen_comp_X0 & chn_b_rsci_wen_comp_R0 );
  assign chn_a_rsci_wen_comp_R = ( chn_a_rsci_wen_comp_X0 & chn_a_rsci_wen_comp_R0 );
  assign chn_o_rsci_oswt_R = ( chn_o_rsci_oswt_X0 & chn_o_rsci_oswt_R0 );
  assign chn_o_rsc_vz_R = ( chn_o_rsc_vz_X0 & chn_o_rsc_vz_R0 );
  assign chn_b_rsci_oswt_R = ( chn_b_rsci_oswt_X0 & chn_b_rsci_oswt_R0 );
  assign chn_b_rsc_z_R = ( chn_b_rsc_z_X0 & chn_b_rsc_z_R0 );
  assign chn_b_rsc_vz_R = ( chn_b_rsc_vz_X0 & chn_b_rsc_vz_R0 );
  assign nvdla_core_rstn_R = ( nvdla_core_rstn_X0 & nvdla_core_rstn_R0 ) | ( nvdla_core_rstn_X1 & nvdla_core_rstn_R1 ) | ( nvdla_core_rstn_X2 & nvdla_core_rstn_R2 ) | ( nvdla_core_rstn_X3 & nvdla_core_rstn_R3 ) | ( nvdla_core_rstn_X4 & nvdla_core_rstn_R4 );
  assign core_wten_R = ( core_wten_X0 & core_wten_R0 ) | ( core_wten_X1 & core_wten_R1 ) | ( core_wten_X2 & core_wten_R2 );
  assign chn_a_rsci_oswt_R = ( chn_a_rsci_oswt_X0 & chn_a_rsci_oswt_R0 );
  assign chn_a_rsc_z_R = ( chn_a_rsc_z_X0 & chn_a_rsc_z_R0 );
  assign chn_a_rsc_vz_R = ( chn_a_rsc_vz_X0 & chn_a_rsc_vz_R0 );
  assign nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s_R = ( nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s_X0 & nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s_R0 );
  assign FpAdd_8U_23U_b_left_shift_acc_nl_R = ( FpAdd_8U_23U_b_left_shift_acc_nl_X0 & FpAdd_8U_23U_b_left_shift_acc_nl_R0 ) | ( FpAdd_8U_23U_b_left_shift_acc_nl_X1 & FpAdd_8U_23U_b_left_shift_acc_nl_R1 ) | ( FpAdd_8U_23U_b_left_shift_acc_nl_X2 & FpAdd_8U_23U_b_left_shift_acc_nl_R2 );
  assign nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s_R = ( nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s_X0 & nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s_R0 );
  assign FpAdd_8U_23U_a_left_shift_acc_nl_R = ( FpAdd_8U_23U_a_left_shift_acc_nl_X0 & FpAdd_8U_23U_a_left_shift_acc_nl_R0 ) | ( FpAdd_8U_23U_a_left_shift_acc_nl_X1 & FpAdd_8U_23U_a_left_shift_acc_nl_R1 ) | ( FpAdd_8U_23U_a_left_shift_acc_nl_X2 & FpAdd_8U_23U_a_left_shift_acc_nl_R2 );
  assign chn_o_rsci_iswt0_R = ( chn_o_rsci_iswt0_X0 & chn_o_rsci_iswt0_R0 ) | ( chn_o_rsci_iswt0_X1 & chn_o_rsci_iswt0_R1 );
  assign reg_chn_a_rsci_iswt0_cse_R = ( reg_chn_a_rsci_iswt0_cse_X0 & reg_chn_a_rsci_iswt0_cse_R0 ) | ( reg_chn_a_rsci_iswt0_cse_X1 & reg_chn_a_rsci_iswt0_cse_R1 ) | ( reg_chn_a_rsci_iswt0_cse_X2 & reg_chn_a_rsci_iswt0_cse_R2 );
  assign _120__R = ( _120__X0 & _120__R0 );
  assign reg_chn_a_rsci_ld_core_psct_cse_R = ( reg_chn_a_rsci_ld_core_psct_cse_X0 & reg_chn_a_rsci_ld_core_psct_cse_R0 ) | ( reg_chn_a_rsci_ld_core_psct_cse_X1 & reg_chn_a_rsci_ld_core_psct_cse_R1 ) | ( reg_chn_a_rsci_ld_core_psct_cse_X2 & reg_chn_a_rsci_ld_core_psct_cse_R2 );
  assign _060__R = ( _060__X0 & _060__R0 );
  assign chn_o_rsci_d_22_0_R = ( chn_o_rsci_d_22_0_X0 & chn_o_rsci_d_22_0_R0 ) | ( chn_o_rsci_d_22_0_X1 & chn_o_rsci_d_22_0_R1 ) | ( chn_o_rsci_d_22_0_X2 & chn_o_rsci_d_22_0_R2 );
  assign _043__R = ( _043__X0 & _043__R0 );
  assign _062__R = ( _062__X0 & _062__R0 );
  assign FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl_R = ( FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl_X0 & FpAdd_8U_23U_FpAdd_8U_23U_or_1_nl_R0 );
  assign FpSignedBitsToFloat_8U_23U_1_and_2_nl_R = ( FpSignedBitsToFloat_8U_23U_1_and_2_nl_X0 & FpSignedBitsToFloat_8U_23U_1_and_2_nl_R0 );
  assign chn_o_rsci_d_31_R = ( chn_o_rsci_d_31_X0 & chn_o_rsci_d_31_R0 ) | ( chn_o_rsci_d_31_X1 & chn_o_rsci_d_31_R1 ) | ( chn_o_rsci_d_31_X2 & chn_o_rsci_d_31_R2 );
  assign chn_o_rsci_d_30_23_R = ( chn_o_rsci_d_30_23_X0 & chn_o_rsci_d_30_23_R0 ) | ( chn_o_rsci_d_30_23_X1 & chn_o_rsci_d_30_23_R1 ) | ( chn_o_rsci_d_30_23_X2 & chn_o_rsci_d_30_23_R2 );
  assign _186__R = ( _186__X0 & _186__R0 );
  assign chn_o_and_1_cse_R = ( chn_o_and_1_cse_X0 & chn_o_and_1_cse_R0 ) | ( chn_o_and_1_cse_X1 & chn_o_and_1_cse_R1 );
  assign _121__R = ( _121__X0 & _121__R0 );
  assign _063__R = ( _063__X0 & _063__R0 );
  assign _122__R = ( _122__X0 & _122__R0 );
  assign _064__R = ( _064__X0 & _064__R0 );
  assign FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_R = ( FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_X0 & FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_R0 ) | ( FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_X1 & FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_R1 ) | ( FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_X2 & FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_R2 );
  assign _095__R = ( _095__X0 & _095__R0 );
  assign FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_R = ( FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_X0 & FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_R0 ) | ( FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_X1 & FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_R1 ) | ( FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_X2 & FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_R2 );
  assign _094__R = ( _094__X0 & _094__R0 );
  assign _187__R = ( _187__X0 & _187__R0 );
  assign IsNaN_8U_23U_aelse_and_cse_R = ( IsNaN_8U_23U_aelse_and_cse_X0 & IsNaN_8U_23U_aelse_and_cse_R0 ) | ( IsNaN_8U_23U_aelse_and_cse_X1 & IsNaN_8U_23U_aelse_and_cse_R1 ) | ( IsNaN_8U_23U_aelse_and_cse_X2 & IsNaN_8U_23U_aelse_and_cse_R2 ) | ( IsNaN_8U_23U_aelse_and_cse_X3 & IsNaN_8U_23U_aelse_and_cse_R3 ) | ( IsNaN_8U_23U_aelse_and_cse_X4 & IsNaN_8U_23U_aelse_and_cse_R4 ) | ( IsNaN_8U_23U_aelse_and_cse_X5 & IsNaN_8U_23U_aelse_and_cse_R5 ) | ( IsNaN_8U_23U_aelse_and_cse_X6 & IsNaN_8U_23U_aelse_and_cse_R6 );
  assign _123__R = ( _123__X0 & _123__R0 );
  assign _066__R = ( _066__X0 & _066__R0 );
  assign FpAdd_8U_23U_a_int_mant_p1_lshift_itm_R = ( FpAdd_8U_23U_a_int_mant_p1_lshift_itm_X0 & FpAdd_8U_23U_a_int_mant_p1_lshift_itm_R0 );
  assign FpAdd_8U_23U_b_int_mant_p1_lshift_itm_R = ( FpAdd_8U_23U_b_int_mant_p1_lshift_itm_X0 & FpAdd_8U_23U_b_int_mant_p1_lshift_itm_R0 );
  assign FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_R = ( FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_X0 & FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_R0 ) | ( FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_X1 & FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_R1 );
  assign FpAdd_8U_23U_is_addition_and_cse_R = ( FpAdd_8U_23U_is_addition_and_cse_X0 & FpAdd_8U_23U_is_addition_and_cse_R0 ) | ( FpAdd_8U_23U_is_addition_and_cse_X1 & FpAdd_8U_23U_is_addition_and_cse_R1 ) | ( FpAdd_8U_23U_is_addition_and_cse_X2 & FpAdd_8U_23U_is_addition_and_cse_R2 ) | ( FpAdd_8U_23U_is_addition_and_cse_X3 & FpAdd_8U_23U_is_addition_and_cse_R3 ) | ( FpAdd_8U_23U_is_addition_and_cse_X4 & FpAdd_8U_23U_is_addition_and_cse_R4 ) | ( FpAdd_8U_23U_is_addition_and_cse_X5 & FpAdd_8U_23U_is_addition_and_cse_R5 ) | ( FpAdd_8U_23U_is_addition_and_cse_X6 & FpAdd_8U_23U_is_addition_and_cse_R6 );
  assign _124__R = ( _124__X0 & _124__R0 );
  assign _068__R = ( _068__X0 & _068__R0 );
  assign FpAdd_8U_23U_qr_lpi_1_dfm_5_R = ( FpAdd_8U_23U_qr_lpi_1_dfm_5_X0 & FpAdd_8U_23U_qr_lpi_1_dfm_5_R0 ) | ( FpAdd_8U_23U_qr_lpi_1_dfm_5_X1 & FpAdd_8U_23U_qr_lpi_1_dfm_5_R1 );
  assign FpAdd_8U_23U_mux_13_itm_4_R = ( FpAdd_8U_23U_mux_13_itm_4_X0 & FpAdd_8U_23U_mux_13_itm_4_R0 ) | ( FpAdd_8U_23U_mux_13_itm_4_X1 & FpAdd_8U_23U_mux_13_itm_4_R1 );
  assign FpAdd_8U_23U_and_8_cse_R = ( FpAdd_8U_23U_and_8_cse_X0 & FpAdd_8U_23U_and_8_cse_R0 ) | ( FpAdd_8U_23U_and_8_cse_X1 & FpAdd_8U_23U_and_8_cse_R1 ) | ( FpAdd_8U_23U_and_8_cse_X2 & FpAdd_8U_23U_and_8_cse_R2 ) | ( FpAdd_8U_23U_and_8_cse_X3 & FpAdd_8U_23U_and_8_cse_R3 ) | ( FpAdd_8U_23U_and_8_cse_X4 & FpAdd_8U_23U_and_8_cse_R4 );
  assign _096__R = ( _096__X0 & _096__R0 );
  assign _069__R = ( _069__X0 & _069__R0 );
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_R = ( FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_X0 & FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_R0 ) | ( FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_X1 & FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_R1 );
  assign FpSignedBitsToFloat_8U_23U_1_and_3_cse_R = ( FpSignedBitsToFloat_8U_23U_1_and_3_cse_X0 & FpSignedBitsToFloat_8U_23U_1_and_3_cse_R0 ) | ( FpSignedBitsToFloat_8U_23U_1_and_3_cse_X1 & FpSignedBitsToFloat_8U_23U_1_and_3_cse_R1 );
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_R = ( FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_X0 & FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_R0 ) | ( FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_X1 & FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_R1 );
  assign _045__R = ( _045__X0 & _045__R0 );
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_R = ( FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_X0 & FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_R0 ) | ( FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_X1 & FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_R1 );
  assign _044__R = ( _044__X0 & _044__R0 );
  assign _071__R = ( _071__X0 & _071__R0 ) | ( _071__X1 & _071__R1 );
  assign FpAdd_8U_23U_mux_13_itm_3_R = ( FpAdd_8U_23U_mux_13_itm_3_X0 & FpAdd_8U_23U_mux_13_itm_3_R0 ) | ( FpAdd_8U_23U_mux_13_itm_3_X1 & FpAdd_8U_23U_mux_13_itm_3_R1 );
  assign _182__R = ( _182__X0 & _182__R0 );
  assign _073__R = ( _073__X0 & _073__R0 );
  assign FpAdd_8U_23U_qr_lpi_1_dfm_4_R = ( FpAdd_8U_23U_qr_lpi_1_dfm_4_X0 & FpAdd_8U_23U_qr_lpi_1_dfm_4_R0 ) | ( FpAdd_8U_23U_qr_lpi_1_dfm_4_X1 & FpAdd_8U_23U_qr_lpi_1_dfm_4_R1 );
  assign _046__R = ( _046__X0 & _046__R0 );
  assign _075__R = ( _075__X0 & _075__R0 );
  assign _042__R = ( _042__X0 & _042__R0 );
  assign _076__R = ( _076__X0 & _076__R0 );
  assign _126__R = ( _126__X0 & _126__R0 );
  assign IsNaN_8U_23U_1_and_cse_R = ( IsNaN_8U_23U_1_and_cse_X0 & IsNaN_8U_23U_1_and_cse_R0 ) | ( IsNaN_8U_23U_1_and_cse_X1 & IsNaN_8U_23U_1_and_cse_R1 );
  assign nor_34_nl_R = ( nor_34_nl_X0 & nor_34_nl_R0 );
  assign mux_9_nl_R = ( mux_9_nl_X0 & mux_9_nl_R0 );
  assign or_10_nl_R = ( or_10_nl_X0 & or_10_nl_R0 );
  assign and_67_nl_R = ( and_67_nl_X0 & and_67_nl_R0 );
  assign nor_26_nl_R = ( nor_26_nl_X0 & nor_26_nl_R0 );
  assign nor_27_nl_R = ( nor_27_nl_X0 & nor_27_nl_R0 );
  assign FpAdd_8U_23U_a_int_mant_p1_sva_2_R = ( FpAdd_8U_23U_a_int_mant_p1_sva_2_X0 & FpAdd_8U_23U_a_int_mant_p1_sva_2_R0 ) | ( FpAdd_8U_23U_a_int_mant_p1_sva_2_X1 & FpAdd_8U_23U_a_int_mant_p1_sva_2_R1 ) | ( FpAdd_8U_23U_a_int_mant_p1_sva_2_X2 & FpAdd_8U_23U_a_int_mant_p1_sva_2_R2 );
  assign FpAdd_8U_23U_b_int_mant_p1_sva_2_R = ( FpAdd_8U_23U_b_int_mant_p1_sva_2_X0 & FpAdd_8U_23U_b_int_mant_p1_sva_2_R0 ) | ( FpAdd_8U_23U_b_int_mant_p1_sva_2_X1 & FpAdd_8U_23U_b_int_mant_p1_sva_2_R1 ) | ( FpAdd_8U_23U_b_int_mant_p1_sva_2_X2 & FpAdd_8U_23U_b_int_mant_p1_sva_2_R2 );
  assign FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_R = ( FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_X0 & FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_R0 ) | ( FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_X1 & FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_R1 ) | ( FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_X2 & FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_R2 );
  assign FpNormalize_8U_49U_else_acc_nl_R = ( FpNormalize_8U_49U_else_acc_nl_X0 & FpNormalize_8U_49U_else_acc_nl_R0 ) | ( FpNormalize_8U_49U_else_acc_nl_X1 & FpNormalize_8U_49U_else_acc_nl_R1 );
  assign FpNormalize_8U_49U_else_lshift_itm_R = ( FpNormalize_8U_49U_else_lshift_itm_X0 & FpNormalize_8U_49U_else_lshift_itm_R0 );
  assign FpNormalize_8U_49U_oelse_not_3_R = ( FpNormalize_8U_49U_oelse_not_3_X0 & FpNormalize_8U_49U_oelse_not_3_R0 ) | ( FpNormalize_8U_49U_oelse_not_3_X1 & FpNormalize_8U_49U_oelse_not_3_R1 );
  assign FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl_R = ( FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl_X0 & FpNormalize_8U_49U_FpNormalize_8U_49U_and_1_nl_R0 );
  assign fangyuan16_R = ( fangyuan16_X0 & fangyuan16_R0 );
  assign FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl_R = ( FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl_X0 & FpAdd_8U_23U_if_4_FpAdd_8U_23U_if_4_or_nl_R0 );
  assign FpAdd_8U_23U_b_right_shift_qif_acc_nl_R = ( FpAdd_8U_23U_b_right_shift_qif_acc_nl_X0 & FpAdd_8U_23U_b_right_shift_qif_acc_nl_R0 ) | ( FpAdd_8U_23U_b_right_shift_qif_acc_nl_X1 & FpAdd_8U_23U_b_right_shift_qif_acc_nl_R1 );
  assign FpAdd_8U_23U_a_right_shift_qelse_acc_nl_R = ( FpAdd_8U_23U_a_right_shift_qelse_acc_nl_X0 & FpAdd_8U_23U_a_right_shift_qelse_acc_nl_R0 ) | ( FpAdd_8U_23U_a_right_shift_qelse_acc_nl_X1 & FpAdd_8U_23U_a_right_shift_qelse_acc_nl_R1 );
  assign FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_R = ( FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_X0 & FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_R0 ) | ( FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_X1 & FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_R1 ) | ( FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_X2 & FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_R2 ) | ( FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_X3 & FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_R3 );
  assign FpAdd_8U_23U_asn_4_mx0w1_R = ( FpAdd_8U_23U_asn_4_mx0w1_X0 & FpAdd_8U_23U_asn_4_mx0w1_R0 ) | ( FpAdd_8U_23U_asn_4_mx0w1_X1 & FpAdd_8U_23U_asn_4_mx0w1_R1 ) | ( FpAdd_8U_23U_asn_4_mx0w1_X2 & FpAdd_8U_23U_asn_4_mx0w1_R2 );
  assign FpAdd_8U_23U_asn_5_mx0w0_R = ( FpAdd_8U_23U_asn_5_mx0w0_X0 & FpAdd_8U_23U_asn_5_mx0w0_R0 ) | ( FpAdd_8U_23U_asn_5_mx0w0_X1 & FpAdd_8U_23U_asn_5_mx0w0_R1 ) | ( FpAdd_8U_23U_asn_5_mx0w0_X2 & FpAdd_8U_23U_asn_5_mx0w0_R2 );
  assign reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_R = ( reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_X0 & reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_R0 ) | ( reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_X1 & reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_R1 ) | ( reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_X2 & reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_R2 );
  assign nor_38_nl_R = ( nor_38_nl_X0 & nor_38_nl_R0 );
  assign FpMantRNE_49U_24U_else_acc_nl_R = ( FpMantRNE_49U_24U_else_acc_nl_X0 & FpMantRNE_49U_24U_else_acc_nl_R0 ) | ( FpMantRNE_49U_24U_else_acc_nl_X1 & FpMantRNE_49U_24U_else_acc_nl_R1 );
  assign or_tmp_3_R = ( or_tmp_3_X0 & or_tmp_3_R0 ) | ( or_tmp_3_X1 & or_tmp_3_R1 );
  assign mux_7_nl_R = ( mux_7_nl_X0 & mux_7_nl_R0 );
  assign nor_37_nl_R = ( nor_37_nl_X0 & nor_37_nl_R0 );
  assign _175__R = ( _175__X0 & _175__R0 );
  assign nor_31_nl_R = ( nor_31_nl_X0 & nor_31_nl_R0 ) | ( nor_31_nl_X1 & nor_31_nl_R1 );
  assign mux_24_nl_R = ( mux_24_nl_X0 & mux_24_nl_R0 ) | ( mux_24_nl_X1 & mux_24_nl_R1 );
  assign nor_28_nl_R = ( nor_28_nl_X0 & nor_28_nl_R0 );
  assign nor_29_nl_R = ( nor_29_nl_X0 & nor_29_nl_R0 );
  assign _039__R = ( _039__X0 & _039__R0 );
  assign _034__R = ( _034__X0 & _034__R0 );
  assign _040__R = ( _040__X0 & _040__R0 );
  assign _031__R = ( _031__X0 & _031__R0 );
  assign _032__R = ( _032__X0 & _032__R0 );
  assign _033__R = ( _033__X0 & _033__R0 );
  assign _041__R = ( _041__X0 & _041__R0 );
  assign _035__R = ( _035__X0 & _035__R0 );
  assign _011__R = ( _011__X0 & _011__R0 );
  assign _006__R = ( _006__X0 & _006__R0 );
  assign _030__R = ( _030__X0 & _030__R0 );
  assign _029__R = ( _029__X0 & _029__R0 );
  assign _003__R = ( _003__X0 & _003__R0 );
  assign _004__R = ( _004__X0 & _004__R0 );
  assign _009__R = ( _009__X0 & _009__R0 );
  assign _036__R = ( _036__X0 & _036__R0 );
  assign _038__R = ( _038__X0 & _038__R0 );
  assign _027__R = ( _027__X0 & _027__R0 );
  assign _007__R = ( _007__X0 & _007__R0 );
  assign _005__R = ( _005__X0 & _005__R0 );
  assign _016__R = ( _016__X0 & _016__R0 );
  assign _010__R = ( _010__X0 & _010__R0 );
  assign _024__R = ( _024__X0 & _024__R0 );
  assign _037__R = ( _037__X0 & _037__R0 );
  assign _013__R = ( _013__X0 & _013__R0 );
  assign _028__R = ( _028__X0 & _028__R0 );
  assign _008__R = ( _008__X0 & _008__R0 );
  assign _017__R = ( _017__X0 & _017__R0 );
  assign _025__R = ( _025__X0 & _025__R0 );
  assign _018__R = ( _018__X0 & _018__R0 );
  assign _022__R = ( _022__X0 & _022__R0 );
  assign _020__R = ( _020__X0 & _020__R0 );
  assign _021__R = ( _021__X0 & _021__R0 );
  assign _019__R = ( _019__X0 & _019__R0 );
  assign _012__R = ( _012__X0 & _012__R0 );
  assign _015__R = ( _015__X0 & _015__R0 );
  assign _014__R = ( _014__X0 & _014__R0 );
  assign _023__R = ( _023__X0 & _023__R0 );
  assign _026__R = ( _026__X0 & _026__R0 );
  assign _088__R = ( _088__X0 & _088__R0 );
  assign _185__R = ( _185__X0 & _185__R0 );
  assign _087__R = ( _087__X0 & _087__R0 );
  assign _184__R = ( _184__X0 & _184__R0 );
  assign _086__R = ( _086__X0 & _086__R0 );
  assign _085__R = ( _085__X0 & _085__R0 );
  assign _084__R = ( _084__X0 & _084__R0 );
  assign _183__R = ( _183__X0 & _183__R0 );
  assign _083__R = ( _083__X0 & _083__R0 );
  assign _082__R = ( _082__X0 & _082__R0 );
  assign _081__R = ( _081__X0 & _081__R0 );
  assign _181__R = ( _181__X0 & _181__R0 );
  assign _080__R = ( _080__X0 & _080__R0 );
  assign _079__R = ( _079__X0 & _079__R0 );
  assign _179__R = ( _179__X0 & _179__R0 );
  assign _132__R = ( _132__X0 & _132__R0 );
  assign IsNaN_8U_23U_1_nor_tmp_R = ( IsNaN_8U_23U_1_nor_tmp_X0 & IsNaN_8U_23U_1_nor_tmp_R0 ) | ( IsNaN_8U_23U_1_nor_tmp_X1 & IsNaN_8U_23U_1_nor_tmp_R1 );
  assign IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_R = ( IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_X0 & IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_R0 ) | ( IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_X1 & IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_tmp_R1 );
  assign _131__R = ( _131__X0 & _131__R0 );
  assign _130__R = ( _130__X0 & _130__R0 );
  assign FpAdd_8U_23U_mux_2_tmp_49_R = ( FpAdd_8U_23U_mux_2_tmp_49_X0 & FpAdd_8U_23U_mux_2_tmp_49_R0 ) | ( FpAdd_8U_23U_mux_2_tmp_49_X1 & FpAdd_8U_23U_mux_2_tmp_49_R1 );
  assign _171__R = ( _171__X0 & _171__R0 );
  assign _067__R = ( _067__X0 & _067__R0 );
  assign _065__R = ( _065__X0 & _065__R0 );
  assign or_tmp_35_R = ( or_tmp_35_X0 & or_tmp_35_R0 ) | ( or_tmp_35_X1 & or_tmp_35_R1 );
  assign _061__R = ( _061__X0 & _061__R0 );
  assign _117__R = ( _117__X0 & _117__R0 );
  assign IsNaN_8U_23U_land_lpi_1_dfm_5_R = ( IsNaN_8U_23U_land_lpi_1_dfm_5_X0 & IsNaN_8U_23U_land_lpi_1_dfm_5_R0 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_5_X1 & IsNaN_8U_23U_land_lpi_1_dfm_5_R1 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_5_X2 & IsNaN_8U_23U_land_lpi_1_dfm_5_R2 );
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_R = ( IsNaN_8U_23U_1_land_lpi_1_dfm_3_X0 & IsNaN_8U_23U_1_land_lpi_1_dfm_3_R0 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_3_X1 & IsNaN_8U_23U_1_land_lpi_1_dfm_3_R1 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_3_X2 & IsNaN_8U_23U_1_land_lpi_1_dfm_3_R2 );
  assign _111__R = ( _111__X0 & _111__R0 );
  assign FpAdd_8U_23U_is_inf_lpi_1_dfm_R = ( FpAdd_8U_23U_is_inf_lpi_1_dfm_X0 & FpAdd_8U_23U_is_inf_lpi_1_dfm_R0 ) | ( FpAdd_8U_23U_is_inf_lpi_1_dfm_X1 & FpAdd_8U_23U_is_inf_lpi_1_dfm_R1 );
  assign _160__R = ( _160__X0 & _160__R0 );
  assign _159__R = ( _159__X0 & _159__R0 );
  assign _158__R = ( _158__X0 & _158__R0 );
  assign _157__R = ( _157__X0 & _157__R0 );
  assign _156__R = ( _156__X0 & _156__R0 );
  assign _155__R = ( _155__X0 & _155__R0 );
  assign _154__R = ( _154__X0 & _154__R0 );
  assign _153__R = ( _153__X0 & _153__R0 );
  assign _152__R = ( _152__X0 & _152__R0 );
  assign _151__R = ( _151__X0 & _151__R0 );
  assign _150__R = ( _150__X0 & _150__R0 );
  assign _149__R = ( _149__X0 & _149__R0 );
  assign _148__R = ( _148__X0 & _148__R0 );
  assign _147__R = ( _147__X0 & _147__R0 );
  assign _146__R = ( _146__X0 & _146__R0 );
  assign _145__R = ( _145__X0 & _145__R0 );
  assign _144__R = ( _144__X0 & _144__R0 );
  assign _143__R = ( _143__X0 & _143__R0 );
  assign _142__R = ( _142__X0 & _142__R0 );
  assign _141__R = ( _141__X0 & _141__R0 );
  assign _140__R = ( _140__X0 & _140__R0 );
  assign _139__R = ( _139__X0 & _139__R0 );
  assign _138__R = ( _138__X0 & _138__R0 );
  assign IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_R = ( IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_X0 & IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_R0 ) | ( IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_X1 & IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_R1 );
  assign IsNaN_8U_23U_1_nor_itm_2_R = ( IsNaN_8U_23U_1_nor_itm_2_X0 & IsNaN_8U_23U_1_nor_itm_2_R0 ) | ( IsNaN_8U_23U_1_nor_itm_2_X1 & IsNaN_8U_23U_1_nor_itm_2_R1 );
  assign _092__R = ( _092__X0 & _092__R0 );
  assign _107__R = ( _107__X0 & _107__R0 );
  assign IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_R = ( IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_X0 & IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_R0 ) | ( IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_X1 & IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_R1 ) | ( IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_X2 & IsNaN_8U_23U_IsNaN_8U_23U_nor_tmp_R2 );
  assign and_dcpl_33_R = ( and_dcpl_33_X0 & and_dcpl_33_R0 ) | ( and_dcpl_33_X1 & and_dcpl_33_R1 ) | ( and_dcpl_33_X2 & and_dcpl_33_R2 );
  assign _054__R = ( _054__X0 & _054__R0 );
  assign _053__R = ( _053__X0 & _053__R0 );
  assign _103__R = ( _103__X0 & _103__R0 );
  assign nor_36_cse_R = ( nor_36_cse_X0 & nor_36_cse_R0 ) | ( nor_36_cse_X1 & nor_36_cse_R1 ) | ( nor_36_cse_X2 & nor_36_cse_R2 );
  assign _102__R = ( _102__X0 & _102__R0 );
  assign _180__R = ( _180__X0 & _180__R0 );
  assign _178__R = ( _178__X0 & _178__R0 );
  assign _177__R = ( _177__X0 & _177__R0 );
  assign _078__R = ( _078__X0 & _078__R0 );
  assign _176__R = ( _176__X0 & _176__R0 );
  assign _174__R = ( _174__X0 & _174__R0 );
  assign mux_tmp_5_R = ( mux_tmp_5_X0 & mux_tmp_5_R0 ) | ( mux_tmp_5_X1 & mux_tmp_5_R1 );
  assign _173__R = ( _173__X0 & _173__R0 );
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_4_R = ( IsNaN_8U_23U_1_land_lpi_1_dfm_4_X0 & IsNaN_8U_23U_1_land_lpi_1_dfm_4_R0 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_4_X1 & IsNaN_8U_23U_1_land_lpi_1_dfm_4_R1 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_4_X2 & IsNaN_8U_23U_1_land_lpi_1_dfm_4_R2 );
  assign b_sva_36_R = ( b_sva_36_X0 & b_sva_36_R0 ) | ( b_sva_36_X1 & b_sva_36_R1 ) | ( b_sva_36_X2 & b_sva_36_R2 ) | ( b_sva_36_X3 & b_sva_36_R3 ) | ( b_sva_36_X4 & b_sva_36_R4 );
  assign main_stage_v_3_mx0c1_R = ( main_stage_v_3_mx0c1_X0 & main_stage_v_3_mx0c1_R0 ) | ( main_stage_v_3_mx0c1_X1 & main_stage_v_3_mx0c1_R1 );
  assign main_stage_v_2_mx0c1_R = ( main_stage_v_2_mx0c1_X0 & main_stage_v_2_mx0c1_R0 ) | ( main_stage_v_2_mx0c1_X1 & main_stage_v_2_mx0c1_R1 );
  assign main_stage_v_1_mx0c1_R = ( main_stage_v_1_mx0c1_X0 & main_stage_v_1_mx0c1_R0 ) | ( main_stage_v_1_mx0c1_X1 & main_stage_v_1_mx0c1_R1 );
  assign and_dcpl_15_R = ( and_dcpl_15_X0 & and_dcpl_15_R0 ) | ( and_dcpl_15_X1 & and_dcpl_15_R1 );
  assign _059__R = ( _059__X0 & _059__R0 );
  assign FpAdd_8U_23U_is_a_greater_acc_1_nl_R = ( FpAdd_8U_23U_is_a_greater_acc_1_nl_X0 & FpAdd_8U_23U_is_a_greater_acc_1_nl_R0 ) | ( FpAdd_8U_23U_is_a_greater_acc_1_nl_X1 & FpAdd_8U_23U_is_a_greater_acc_1_nl_R1 ) | ( FpAdd_8U_23U_is_a_greater_acc_1_nl_X2 & FpAdd_8U_23U_is_a_greater_acc_1_nl_R2 ) | ( FpAdd_8U_23U_is_a_greater_acc_1_nl_X3 & FpAdd_8U_23U_is_a_greater_acc_1_nl_R3 );
  assign _163__R = ( _163__X0 & _163__R0 );
  assign _162__R = ( _162__X0 & _162__R0 );
  assign _089__R = ( _089__X0 & _089__R0 );
  assign _093__R = ( _093__X0 & _093__R0 );
  assign _137__R = ( _137__X0 & _137__R0 );
  assign _091__R = ( _091__X0 & _091__R0 );
  assign _136__R = ( _136__X0 & _136__R0 );
  assign _135__R = ( _135__X0 & _135__R0 );
  assign FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R = ( FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X0 & FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R0 ) | ( FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X1 & FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R1 ) | ( FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X2 & FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R2 ) | ( FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X3 & FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R3 );
  assign _134__R = ( _134__X0 & _134__R0 );
  assign nor_tmp_11_R = ( nor_tmp_11_X0 & nor_tmp_11_R0 ) | ( nor_tmp_11_X1 & nor_tmp_11_R1 ) | ( nor_tmp_11_X2 & nor_tmp_11_R2 ) | ( nor_tmp_11_X3 & nor_tmp_11_R3 );
  assign and_dcpl_7_R = ( and_dcpl_7_X0 & and_dcpl_7_R0 ) | ( and_dcpl_7_X1 & and_dcpl_7_R1 );
  assign _133__R = ( _133__X0 & _133__R0 );
  assign FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm_R = ( FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm_X0 & FpAdd_8U_23U_b_right_shift_qr_lpi_1_dfm_R0 );
  assign FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm_R = ( FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm_X0 & FpAdd_8U_23U_a_right_shift_qr_lpi_1_dfm_R0 );
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_R = ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_X0 & FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_R0 ) | ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_X1 & FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_mx0_R1 );
  assign fangyuan15_R = ( fangyuan15_X0 & fangyuan15_R0 );
  assign FpAdd_8U_23U_and_nl_R = ( FpAdd_8U_23U_and_nl_X0 & FpAdd_8U_23U_and_nl_R0 ) | ( FpAdd_8U_23U_and_nl_X1 & FpAdd_8U_23U_and_nl_R1 ) | ( FpAdd_8U_23U_and_nl_X2 & FpAdd_8U_23U_and_nl_R2 ) | ( FpAdd_8U_23U_and_nl_X3 & FpAdd_8U_23U_and_nl_R3 ) | ( FpAdd_8U_23U_and_nl_X4 & FpAdd_8U_23U_and_nl_R4 ) | ( FpAdd_8U_23U_and_nl_X5 & FpAdd_8U_23U_and_nl_R5 ) | ( FpAdd_8U_23U_and_nl_X6 & FpAdd_8U_23U_and_nl_R6 ) | ( FpAdd_8U_23U_and_nl_X7 & FpAdd_8U_23U_and_nl_R7 );
  assign fangyuan14_R = ( fangyuan14_X0 & fangyuan14_R0 );
  assign FpAdd_8U_23U_if_4_if_acc_nl_R = ( FpAdd_8U_23U_if_4_if_acc_nl_X0 & FpAdd_8U_23U_if_4_if_acc_nl_R0 ) | ( FpAdd_8U_23U_if_4_if_acc_nl_X1 & FpAdd_8U_23U_if_4_if_acc_nl_R1 );
  assign FpAdd_8U_23U_and_3_nl_R = ( FpAdd_8U_23U_and_3_nl_X0 & FpAdd_8U_23U_and_3_nl_R0 ) | ( FpAdd_8U_23U_and_3_nl_X1 & FpAdd_8U_23U_and_3_nl_R1 ) | ( FpAdd_8U_23U_and_3_nl_X2 & FpAdd_8U_23U_and_3_nl_R2 ) | ( FpAdd_8U_23U_and_3_nl_X3 & FpAdd_8U_23U_and_3_nl_R3 ) | ( FpAdd_8U_23U_and_3_nl_X4 & FpAdd_8U_23U_and_3_nl_R4 ) | ( FpAdd_8U_23U_and_3_nl_X5 & FpAdd_8U_23U_and_3_nl_R5 ) | ( FpAdd_8U_23U_and_3_nl_X6 & FpAdd_8U_23U_and_3_nl_R6 ) | ( FpAdd_8U_23U_and_3_nl_X7 & FpAdd_8U_23U_and_3_nl_R7 );
  assign fangyuan13_R = ( fangyuan13_X0 & fangyuan13_R0 );
  assign FpAdd_8U_23U_and_7_nl_R = ( FpAdd_8U_23U_and_7_nl_X0 & FpAdd_8U_23U_and_7_nl_R0 ) | ( FpAdd_8U_23U_and_7_nl_X1 & FpAdd_8U_23U_and_7_nl_R1 ) | ( FpAdd_8U_23U_and_7_nl_X2 & FpAdd_8U_23U_and_7_nl_R2 ) | ( FpAdd_8U_23U_and_7_nl_X3 & FpAdd_8U_23U_and_7_nl_R3 ) | ( FpAdd_8U_23U_and_7_nl_X4 & FpAdd_8U_23U_and_7_nl_R4 ) | ( FpAdd_8U_23U_and_7_nl_X5 & FpAdd_8U_23U_and_7_nl_R5 ) | ( FpAdd_8U_23U_and_7_nl_X6 & FpAdd_8U_23U_and_7_nl_R6 ) | ( FpAdd_8U_23U_and_7_nl_X7 & FpAdd_8U_23U_and_7_nl_R7 );
  assign fangyuan12_R = ( fangyuan12_X0 & fangyuan12_R0 );
  assign FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_R = ( FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_X0 & FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_R0 ) | ( FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_X1 & FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_R1 );
  assign fangyuan11_R = ( fangyuan11_X0 & fangyuan11_R0 );
  assign FpNormalize_8U_49U_FpNormalize_8U_49U_and_nl_R = ( FpNormalize_8U_49U_FpNormalize_8U_49U_and_nl_X0 & FpNormalize_8U_49U_FpNormalize_8U_49U_and_nl_R0 );
  assign _000__R = ( _000__X0 & _000__R0 ) | ( _000__X1 & _000__R1 ) | ( _000__X2 & _000__R2 ) | ( _000__X3 & _000__R3 ) | ( _000__X4 & _000__R4 ) | ( _000__X5 & _000__R5 ) | ( _000__X6 & _000__R6 ) | ( _000__X7 & _000__R7 ) | ( _000__X8 & _000__R8 );
  assign fangyuan10_R = ( fangyuan10_X0 & fangyuan10_R0 );
  assign FpAdd_8U_23U_and_1_nl_R = ( FpAdd_8U_23U_and_1_nl_X0 & FpAdd_8U_23U_and_1_nl_R0 ) | ( FpAdd_8U_23U_and_1_nl_X1 & FpAdd_8U_23U_and_1_nl_R1 ) | ( FpAdd_8U_23U_and_1_nl_X2 & FpAdd_8U_23U_and_1_nl_R2 ) | ( FpAdd_8U_23U_and_1_nl_X3 & FpAdd_8U_23U_and_1_nl_R3 ) | ( FpAdd_8U_23U_and_1_nl_X4 & FpAdd_8U_23U_and_1_nl_R4 ) | ( FpAdd_8U_23U_and_1_nl_X5 & FpAdd_8U_23U_and_1_nl_R5 ) | ( FpAdd_8U_23U_and_1_nl_X6 & FpAdd_8U_23U_and_1_nl_R6 ) | ( FpAdd_8U_23U_and_1_nl_X7 & FpAdd_8U_23U_and_1_nl_R7 ) | ( FpAdd_8U_23U_and_1_nl_X8 & FpAdd_8U_23U_and_1_nl_R8 );
  assign fangyuan9_R = ( fangyuan9_X0 & fangyuan9_R0 );
  assign FpAdd_8U_23U_if_3_if_acc_nl_R = ( FpAdd_8U_23U_if_3_if_acc_nl_X0 & FpAdd_8U_23U_if_3_if_acc_nl_R0 ) | ( FpAdd_8U_23U_if_3_if_acc_nl_X1 & FpAdd_8U_23U_if_3_if_acc_nl_R1 );
  assign FpAdd_8U_23U_and_2_nl_R = ( FpAdd_8U_23U_and_2_nl_X0 & FpAdd_8U_23U_and_2_nl_R0 ) | ( FpAdd_8U_23U_and_2_nl_X1 & FpAdd_8U_23U_and_2_nl_R1 ) | ( FpAdd_8U_23U_and_2_nl_X2 & FpAdd_8U_23U_and_2_nl_R2 ) | ( FpAdd_8U_23U_and_2_nl_X3 & FpAdd_8U_23U_and_2_nl_R3 ) | ( FpAdd_8U_23U_and_2_nl_X4 & FpAdd_8U_23U_and_2_nl_R4 ) | ( FpAdd_8U_23U_and_2_nl_X5 & FpAdd_8U_23U_and_2_nl_R5 ) | ( FpAdd_8U_23U_and_2_nl_X6 & FpAdd_8U_23U_and_2_nl_R6 ) | ( FpAdd_8U_23U_and_2_nl_X7 & FpAdd_8U_23U_and_2_nl_R7 ) | ( FpAdd_8U_23U_and_2_nl_X8 & FpAdd_8U_23U_and_2_nl_R8 );
  assign and_dcpl_28_R = ( and_dcpl_28_X0 & and_dcpl_28_R0 ) | ( and_dcpl_28_X1 & and_dcpl_28_R1 ) | ( and_dcpl_28_X2 & and_dcpl_28_R2 );
  assign FpAdd_8U_23U_a_sva_36_R = ( FpAdd_8U_23U_a_sva_36_X0 & FpAdd_8U_23U_a_sva_36_R0 ) | ( FpAdd_8U_23U_a_sva_36_X1 & FpAdd_8U_23U_a_sva_36_R1 ) | ( FpAdd_8U_23U_a_sva_36_X2 & FpAdd_8U_23U_a_sva_36_R2 ) | ( FpAdd_8U_23U_a_sva_36_X3 & FpAdd_8U_23U_a_sva_36_R3 ) | ( FpAdd_8U_23U_a_sva_36_X4 & FpAdd_8U_23U_a_sva_36_R4 );
  assign FpSignedBitsToFloat_8U_23U_1_and_rgt_R = ( FpSignedBitsToFloat_8U_23U_1_and_rgt_X0 & FpSignedBitsToFloat_8U_23U_1_and_rgt_R0 ) | ( FpSignedBitsToFloat_8U_23U_1_and_rgt_X1 & FpSignedBitsToFloat_8U_23U_1_and_rgt_R1 );
  assign FpAdd_8U_23U_mux_1_itm_2_R = ( FpAdd_8U_23U_mux_1_itm_2_X0 & FpAdd_8U_23U_mux_1_itm_2_R0 ) | ( FpAdd_8U_23U_mux_1_itm_2_X1 & FpAdd_8U_23U_mux_1_itm_2_R1 );
  assign FpSignedBitsToFloat_8U_23U_1_and_1_rgt_R = ( FpSignedBitsToFloat_8U_23U_1_and_1_rgt_X0 & FpSignedBitsToFloat_8U_23U_1_and_1_rgt_R0 ) | ( FpSignedBitsToFloat_8U_23U_1_and_1_rgt_X1 & FpSignedBitsToFloat_8U_23U_1_and_1_rgt_R1 );
  assign _125__R = ( _125__X0 & _125__R0 );
  assign FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_R = ( FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_X0 & FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_R0 ) | ( FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_X1 & FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_R1 ) | ( FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_X2 & FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_R2 ) | ( FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_X3 & FpAdd_8U_23U_is_inf_lpi_1_dfm_2_mx0_R3 );
  assign _077__R = ( _077__X0 & _077__R0 );
  assign _129__R = ( _129__X0 & _129__R0 );
  assign FpAdd_8U_23U_and_tmp_R = ( FpAdd_8U_23U_and_tmp_X0 & FpAdd_8U_23U_and_tmp_R0 ) | ( FpAdd_8U_23U_and_tmp_X1 & FpAdd_8U_23U_and_tmp_R1 );
  assign FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_R = ( FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_X0 & FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_R0 ) | ( FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_X1 & FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_R1 ) | ( FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_X2 & FpAdd_8U_23U_FpAdd_8U_23U_nor_2_m1c_R2 );
  assign _128__R = ( _128__X0 & _128__R0 );
  assign chn_o_rsci_d_22_0_mx0c1_R = ( chn_o_rsci_d_22_0_mx0c1_X0 & chn_o_rsci_d_22_0_mx0c1_R0 ) | ( chn_o_rsci_d_22_0_mx0c1_X1 & chn_o_rsci_d_22_0_mx0c1_R1 );
  assign _127__R = ( _127__X0 & _127__R0 );
  assign mux_27_nl_R = ( mux_27_nl_X0 & mux_27_nl_R0 );
  assign _074__R = ( _074__X0 & _074__R0 ) | ( _074__X1 & _074__R1 );
  assign FpSignedBitsToFloat_8U_23U_1_FpAdd_8U_23U_or_1_cse_R = ( FpSignedBitsToFloat_8U_23U_1_FpAdd_8U_23U_or_1_cse_X0 & FpSignedBitsToFloat_8U_23U_1_FpAdd_8U_23U_or_1_cse_R0 );
  assign _072__R = ( _072__X0 & _072__R0 );
  assign _172__R = ( _172__X0 & _172__R0 );
  assign mux_23_nl_R = ( mux_23_nl_X0 & mux_23_nl_R0 ) | ( mux_23_nl_X1 & mux_23_nl_R1 );
  assign _070__R = ( _070__X0 & _070__R0 );
  assign FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse_R = ( FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse_X0 & FpSignedBitsToFloat_8U_23U_1_FpSignedBitsToFloat_8U_23U_1_or_1_cse_R0 );
  assign mux_8_nl_R = ( mux_8_nl_X0 & mux_8_nl_R0 );
  assign _170__R = ( _170__X0 & _170__R0 );
  assign _169__R = ( _169__X0 & _169__R0 );
  assign _168__R = ( _168__X0 & _168__R0 );
  assign _167__R = ( _167__X0 & _167__R0 );
  assign _166__R = ( _166__X0 & _166__R0 );
  assign IsNaN_8U_23U_land_lpi_1_dfm_6_R = ( IsNaN_8U_23U_land_lpi_1_dfm_6_X0 & IsNaN_8U_23U_land_lpi_1_dfm_6_R0 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_6_X1 & IsNaN_8U_23U_land_lpi_1_dfm_6_R1 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_6_X2 & IsNaN_8U_23U_land_lpi_1_dfm_6_R2 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_6_X3 & IsNaN_8U_23U_land_lpi_1_dfm_6_R3 );
  assign or_tmp_29_R = ( or_tmp_29_X0 & or_tmp_29_R0 ) | ( or_tmp_29_X1 & or_tmp_29_R1 );
  assign _119__R = ( _119__X0 & _119__R0 );
  assign _058__R = ( _058__X0 & _058__R0 );
  assign _113__R = ( _113__X0 & _113__R0 ) | ( _113__X1 & _113__R1 );
  assign _057__R = ( _057__X0 & _057__R0 );
  assign _105__R = ( _105__X0 & _105__R0 ) | ( _105__X1 & _105__R1 ) | ( _105__X2 & _105__R2 );
  assign _056__R = ( _056__X0 & _056__R0 );
  assign main_stage_v_1_R = ( main_stage_v_1_X0 & main_stage_v_1_R0 ) | ( main_stage_v_1_X1 & main_stage_v_1_R1 ) | ( main_stage_v_1_X2 & main_stage_v_1_R2 ) | ( main_stage_v_1_X3 & main_stage_v_1_R3 ) | ( main_stage_v_1_X4 & main_stage_v_1_R4 ) | ( main_stage_v_1_X5 & main_stage_v_1_R5 ) | ( main_stage_v_1_X6 & main_stage_v_1_R6 ) | ( main_stage_v_1_X7 & main_stage_v_1_R7 );
  assign _106__R = ( _106__X0 & _106__R0 ) | ( _106__X1 & _106__R1 ) | ( _106__X2 & _106__R2 );
  assign _118__R = ( _118__X0 & _118__R0 );
  assign and_dcpl_13_R = ( and_dcpl_13_X0 & and_dcpl_13_R0 ) | ( and_dcpl_13_X1 & and_dcpl_13_R1 ) | ( and_dcpl_13_X2 & and_dcpl_13_R2 ) | ( and_dcpl_13_X3 & and_dcpl_13_R3 );
  assign fsm_output_R = ( fsm_output_X0 & fsm_output_R0 ) | ( fsm_output_X1 & fsm_output_R1 );
  assign main_stage_en_1_R = ( main_stage_en_1_X0 & main_stage_en_1_R0 ) | ( main_stage_en_1_X1 & main_stage_en_1_R1 ) | ( main_stage_en_1_X2 & main_stage_en_1_R2 );
  assign _165__R = ( _165__X0 & _165__R0 );
  assign _055__R = ( _055__X0 & _055__R0 );
  assign _116__R = ( _116__X0 & _116__R0 );
  assign _115__R = ( _115__X0 & _115__R0 );
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_4_R = ( IsNaN_8U_23U_land_lpi_1_dfm_st_4_X0 & IsNaN_8U_23U_land_lpi_1_dfm_st_4_R0 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_4_X1 & IsNaN_8U_23U_land_lpi_1_dfm_st_4_R1 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_4_X2 & IsNaN_8U_23U_land_lpi_1_dfm_st_4_R2 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_4_X3 & IsNaN_8U_23U_land_lpi_1_dfm_st_4_R3 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_4_X4 & IsNaN_8U_23U_land_lpi_1_dfm_st_4_R4 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_4_X5 & IsNaN_8U_23U_land_lpi_1_dfm_st_4_R5 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_4_X6 & IsNaN_8U_23U_land_lpi_1_dfm_st_4_R6 );
  assign _099__R = ( _099__X0 & _099__R0 ) | ( _099__X1 & _099__R1 ) | ( _099__X2 & _099__R2 );
  assign and_dcpl_14_R = ( and_dcpl_14_X0 & and_dcpl_14_R0 ) | ( and_dcpl_14_X1 & and_dcpl_14_R1 );
  assign chn_o_rsci_bawt_R = ( chn_o_rsci_bawt_X0 & chn_o_rsci_bawt_R0 ) | ( chn_o_rsci_bawt_X1 & chn_o_rsci_bawt_R1 ) | ( chn_o_rsci_bawt_X2 & chn_o_rsci_bawt_R2 ) | ( chn_o_rsci_bawt_X3 & chn_o_rsci_bawt_R3 ) | ( chn_o_rsci_bawt_X4 & chn_o_rsci_bawt_R4 );
  assign _114__R = ( _114__X0 & _114__R0 );
  assign reg_chn_o_rsci_ld_core_psct_cse_R = ( reg_chn_o_rsci_ld_core_psct_cse_X0 & reg_chn_o_rsci_ld_core_psct_cse_R0 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X1 & reg_chn_o_rsci_ld_core_psct_cse_R1 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X2 & reg_chn_o_rsci_ld_core_psct_cse_R2 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X3 & reg_chn_o_rsci_ld_core_psct_cse_R3 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X4 & reg_chn_o_rsci_ld_core_psct_cse_R4 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X5 & reg_chn_o_rsci_ld_core_psct_cse_R5 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X6 & reg_chn_o_rsci_ld_core_psct_cse_R6 );
  assign main_stage_v_2_R = ( main_stage_v_2_X0 & main_stage_v_2_R0 ) | ( main_stage_v_2_X1 & main_stage_v_2_R1 ) | ( main_stage_v_2_X2 & main_stage_v_2_R2 ) | ( main_stage_v_2_X3 & main_stage_v_2_R3 ) | ( main_stage_v_2_X4 & main_stage_v_2_R4 ) | ( main_stage_v_2_X5 & main_stage_v_2_R5 ) | ( main_stage_v_2_X6 & main_stage_v_2_R6 ) | ( main_stage_v_2_X7 & main_stage_v_2_R7 );
  assign _164__R = ( _164__X0 & _164__R0 );
  assign FpNormalize_8U_49U_acc_nl_R = ( FpNormalize_8U_49U_acc_nl_X0 & FpNormalize_8U_49U_acc_nl_R0 ) | ( FpNormalize_8U_49U_acc_nl_X1 & FpNormalize_8U_49U_acc_nl_R1 );
  assign FpNormalize_8U_49U_if_or_itm_2_R = ( FpNormalize_8U_49U_if_or_itm_2_X0 & FpNormalize_8U_49U_if_or_itm_2_R0 ) | ( FpNormalize_8U_49U_if_or_itm_2_X1 & FpNormalize_8U_49U_if_or_itm_2_R1 );
  assign nor_tmp_1_R = ( nor_tmp_1_X0 & nor_tmp_1_R0 ) | ( nor_tmp_1_X1 & nor_tmp_1_R1 ) | ( nor_tmp_1_X2 & nor_tmp_1_R2 );
  assign chn_a_rsci_bawt_R = ( chn_a_rsci_bawt_X0 & chn_a_rsci_bawt_R0 );
  assign chn_b_rsci_bawt_R = ( chn_b_rsci_bawt_X0 & chn_b_rsci_bawt_R0 );
  assign _090__R = ( _090__X0 & _090__R0 );
  assign FpMantRNE_49U_24U_else_and_tmp_R = ( FpMantRNE_49U_24U_else_and_tmp_X0 & FpMantRNE_49U_24U_else_and_tmp_R0 ) | ( FpMantRNE_49U_24U_else_and_tmp_X1 & FpMantRNE_49U_24U_else_and_tmp_R1 );
  assign FpAdd_8U_23U_if_4_if_acc_1_nl_R = ( FpAdd_8U_23U_if_4_if_acc_1_nl_X0 & FpAdd_8U_23U_if_4_if_acc_1_nl_R0 ) | ( FpAdd_8U_23U_if_4_if_acc_1_nl_X1 & FpAdd_8U_23U_if_4_if_acc_1_nl_R1 ) | ( FpAdd_8U_23U_if_4_if_acc_1_nl_X2 & FpAdd_8U_23U_if_4_if_acc_1_nl_R2 ) | ( FpAdd_8U_23U_if_4_if_acc_1_nl_X3 & FpAdd_8U_23U_if_4_if_acc_1_nl_R3 );
  assign _161__R = ( _161__X0 & _161__R0 );
  assign FpAdd_8U_23U_if_3_if_acc_1_nl_R = ( FpAdd_8U_23U_if_3_if_acc_1_nl_X0 & FpAdd_8U_23U_if_3_if_acc_1_nl_R0 ) | ( FpAdd_8U_23U_if_3_if_acc_1_nl_X1 & FpAdd_8U_23U_if_3_if_acc_1_nl_R1 ) | ( FpAdd_8U_23U_if_3_if_acc_1_nl_X2 & FpAdd_8U_23U_if_3_if_acc_1_nl_R2 ) | ( FpAdd_8U_23U_if_3_if_acc_1_nl_X3 & FpAdd_8U_23U_if_3_if_acc_1_nl_R3 ) | ( FpAdd_8U_23U_if_3_if_acc_1_nl_X4 & FpAdd_8U_23U_if_3_if_acc_1_nl_R4 );
  assign FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R = ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X0 & FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R0 ) | ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X1 & FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R1 ) | ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X2 & FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R2 ) | ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X3 & FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R3 ) | ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X4 & FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R4 ) | ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X5 & FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R5 ) | ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X6 & FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R6 ) | ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X7 & FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R7 ) | ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X8 & FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R8 ) | ( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X9 & FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R9 );
  assign _110__R = ( _110__X0 & _110__R0 );
  assign mux_28_nl_R = ( mux_28_nl_X0 & mux_28_nl_R0 );
  assign _101__R = ( _101__X0 & _101__R0 );
  assign or_cse_R = ( or_cse_X0 & or_cse_R0 ) | ( or_cse_X1 & or_cse_R1 ) | ( or_cse_X2 & or_cse_R2 ) | ( or_cse_X3 & or_cse_R3 ) | ( or_cse_X4 & or_cse_R4 ) | ( or_cse_X5 & or_cse_R5 ) | ( or_cse_X6 & or_cse_R6 ) | ( or_cse_X7 & or_cse_R7 ) | ( or_cse_X8 & or_cse_R8 ) | ( or_cse_X9 & or_cse_R9 ) | ( or_cse_X10 & or_cse_R10 ) | ( or_cse_X11 & or_cse_R11 ) | ( or_cse_X12 & or_cse_R12 ) | ( or_cse_X13 & or_cse_R13 ) | ( or_cse_X14 & or_cse_R14 ) | ( or_cse_X15 & or_cse_R15 ) | ( or_cse_X16 & or_cse_R16 );
  assign FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_R = ( FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_X0 & FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_R0 ) | ( FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_X1 & FpAdd_8U_23U_is_a_greater_FpAdd_8U_23U_is_a_greater_or_cse_R1 );
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_R = ( IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_X0 & IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_R0 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_X1 & IsNaN_8U_23U_1_land_lpi_1_dfm_mx0w0_R1 );
  assign and_dcpl_29_R = ( and_dcpl_29_X0 & and_dcpl_29_R0 ) | ( and_dcpl_29_X1 & and_dcpl_29_R1 ) | ( and_dcpl_29_X2 & and_dcpl_29_R2 ) | ( and_dcpl_29_X3 & and_dcpl_29_R3 ) | ( and_dcpl_29_X4 & and_dcpl_29_R4 );
  assign or_tmp_16_R = ( or_tmp_16_X0 & or_tmp_16_R0 ) | ( or_tmp_16_X1 & or_tmp_16_R1 ) | ( or_tmp_16_X2 & or_tmp_16_R2 ) | ( or_tmp_16_X3 & or_tmp_16_R3 );
  assign FpAdd_8U_23U_is_a_greater_oif_equal_tmp_R = ( FpAdd_8U_23U_is_a_greater_oif_equal_tmp_X0 & FpAdd_8U_23U_is_a_greater_oif_equal_tmp_R0 ) | ( FpAdd_8U_23U_is_a_greater_oif_equal_tmp_X1 & FpAdd_8U_23U_is_a_greater_oif_equal_tmp_R1 );
  assign _104__R = ( _104__X0 & _104__R0 );
  assign mux_10_nl_R = ( mux_10_nl_X0 & mux_10_nl_R0 );
  assign main_stage_v_3_R = ( main_stage_v_3_X0 & main_stage_v_3_R0 ) | ( main_stage_v_3_X1 & main_stage_v_3_R1 ) | ( main_stage_v_3_X2 & main_stage_v_3_R2 ) | ( main_stage_v_3_X3 & main_stage_v_3_R3 ) | ( main_stage_v_3_X4 & main_stage_v_3_R4 ) | ( main_stage_v_3_X5 & main_stage_v_3_R5 );
  assign FpAdd_8U_23U_or_cse_R = ( FpAdd_8U_23U_or_cse_X0 & FpAdd_8U_23U_or_cse_R0 ) | ( FpAdd_8U_23U_or_cse_X1 & FpAdd_8U_23U_or_cse_R1 ) | ( FpAdd_8U_23U_or_cse_X2 & FpAdd_8U_23U_or_cse_R2 ) | ( FpAdd_8U_23U_or_cse_X3 & FpAdd_8U_23U_or_cse_R3 ) | ( FpAdd_8U_23U_or_cse_X4 & FpAdd_8U_23U_or_cse_R4 ) | ( FpAdd_8U_23U_or_cse_X5 & FpAdd_8U_23U_or_cse_R5 ) | ( FpAdd_8U_23U_or_cse_X6 & FpAdd_8U_23U_or_cse_R6 ) | ( FpAdd_8U_23U_or_cse_X7 & FpAdd_8U_23U_or_cse_R7 ) | ( FpAdd_8U_23U_or_cse_X8 & FpAdd_8U_23U_or_cse_R8 ) | ( FpAdd_8U_23U_or_cse_X9 & FpAdd_8U_23U_or_cse_R9 );
  assign mux_6_nl_R = ( mux_6_nl_X0 & mux_6_nl_R0 );
  assign mux_4_cse_R = ( mux_4_cse_X0 & mux_4_cse_R0 ) | ( mux_4_cse_X1 & mux_4_cse_R1 );
  assign mux_13_cse_R = ( mux_13_cse_X0 & mux_13_cse_R0 ) | ( mux_13_cse_X1 & mux_13_cse_R1 );
  assign _052__R = ( _052__X0 & _052__R0 ) | ( _052__X1 & _052__R1 ) | ( _052__X2 & _052__R2 ) | ( _052__X3 & _052__R3 ) | ( _052__X4 & _052__R4 ) | ( _052__X5 & _052__R5 );
  assign _100__R = ( _100__X0 & _100__R0 );
  assign core_wen_R = ( core_wen_X0 & core_wen_R0 ) | ( core_wen_X1 & core_wen_R1 ) | ( core_wen_X2 & core_wen_R2 ) | ( core_wen_X3 & core_wen_R3 ) | ( core_wen_X4 & core_wen_R4 ) | ( core_wen_X5 & core_wen_R5 ) | ( core_wen_X6 & core_wen_R6 ) | ( core_wen_X7 & core_wen_R7 ) | ( core_wen_X8 & core_wen_R8 ) | ( core_wen_X9 & core_wen_R9 ) | ( core_wen_X10 & core_wen_R10 ) | ( core_wen_X11 & core_wen_R11 ) | ( core_wen_X12 & core_wen_R12 ) | ( core_wen_X13 & core_wen_R13 ) | ( core_wen_X14 & core_wen_R14 ) | ( core_wen_X15 & core_wen_R15 ) | ( core_wen_X16 & core_wen_R16 );
  assign FpMantRNE_49U_24U_else_carry_sva_R = ( FpMantRNE_49U_24U_else_carry_sva_X0 & FpMantRNE_49U_24U_else_carry_sva_R0 ) | ( FpMantRNE_49U_24U_else_carry_sva_X1 & FpMantRNE_49U_24U_else_carry_sva_R1 );
  assign FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R = ( FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X0 & FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R0 ) | ( FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X1 & FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R1 ) | ( FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X2 & FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R2 );
  assign _051__R = ( _051__X0 & _051__R0 );
  assign _001__R = ( _001__X0 & _001__R0 );
  assign fangyuan8_R = ( fangyuan8_X0 & fangyuan8_R0 );
  assign chn_a_rsci_d_mxwt_R = ( chn_a_rsci_d_mxwt_X0 & chn_a_rsci_d_mxwt_R0 ) | ( chn_a_rsci_d_mxwt_X1 & chn_a_rsci_d_mxwt_R1 ) | ( chn_a_rsci_d_mxwt_X2 & chn_a_rsci_d_mxwt_R2 ) | ( chn_a_rsci_d_mxwt_X3 & chn_a_rsci_d_mxwt_R3 ) | ( chn_a_rsci_d_mxwt_X4 & chn_a_rsci_d_mxwt_R4 ) | ( chn_a_rsci_d_mxwt_X5 & chn_a_rsci_d_mxwt_R5 ) | ( chn_a_rsci_d_mxwt_X6 & chn_a_rsci_d_mxwt_R6 );
  assign _050__R = ( _050__X0 & _050__R0 );
  assign libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_R = ( libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_X0 & libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_R0 ) | ( libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_X1 & libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_R1 ) | ( libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_X2 & libraries_leading_sign_49_0_e47cea887f8a82708c2da9a42282cded83a3_1_R2 );
  assign fangyuan7_R = ( fangyuan7_X0 & fangyuan7_R0 );
  assign _112__R = ( _112__X0 & _112__R0 );
  assign fangyuan6_R = ( fangyuan6_X0 & fangyuan6_R0 );
  assign FpAdd_8U_23U_o_expo_lpi_1_dfm_2_R = ( FpAdd_8U_23U_o_expo_lpi_1_dfm_2_X0 & FpAdd_8U_23U_o_expo_lpi_1_dfm_2_R0 ) | ( FpAdd_8U_23U_o_expo_lpi_1_dfm_2_X1 & FpAdd_8U_23U_o_expo_lpi_1_dfm_2_R1 ) | ( FpAdd_8U_23U_o_expo_lpi_1_dfm_2_X2 & FpAdd_8U_23U_o_expo_lpi_1_dfm_2_R2 );
  assign _049__R = ( _049__X0 & _049__R0 );
  assign fangyuan5_R = ( fangyuan5_X0 & fangyuan5_R0 );
  assign _109__R = ( _109__X0 & _109__R0 );
  assign fangyuan4_R = ( fangyuan4_X0 & fangyuan4_R0 );
  assign FpAdd_8U_23U_qr_lpi_1_dfm_6_R = ( FpAdd_8U_23U_qr_lpi_1_dfm_6_X0 & FpAdd_8U_23U_qr_lpi_1_dfm_6_R0 ) | ( FpAdd_8U_23U_qr_lpi_1_dfm_6_X1 & FpAdd_8U_23U_qr_lpi_1_dfm_6_R1 ) | ( FpAdd_8U_23U_qr_lpi_1_dfm_6_X2 & FpAdd_8U_23U_qr_lpi_1_dfm_6_R2 ) | ( FpAdd_8U_23U_qr_lpi_1_dfm_6_X3 & FpAdd_8U_23U_qr_lpi_1_dfm_6_R3 ) | ( FpAdd_8U_23U_qr_lpi_1_dfm_6_X4 & FpAdd_8U_23U_qr_lpi_1_dfm_6_R4 ) | ( FpAdd_8U_23U_qr_lpi_1_dfm_6_X5 & FpAdd_8U_23U_qr_lpi_1_dfm_6_R5 );
  assign _048__R = ( _048__X0 & _048__R0 );
  assign fangyuan3_R = ( fangyuan3_X0 & fangyuan3_R0 );
  assign _108__R = ( _108__X0 & _108__R0 );
  assign FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_R = ( FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_X0 & FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_R0 ) | ( FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_X1 & FpAdd_8U_23U_addend_smaller_qr_lpi_1_dfm_mx0_R1 );
  assign FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_R = ( FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_X0 & FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_R0 ) | ( FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_X1 & FpAdd_8U_23U_addend_larger_qr_lpi_1_dfm_mx0_R1 );
  assign _047__R = ( _047__X0 & _047__R0 );
  assign _002__R = ( _002__X0 & _002__R0 );
  assign fangyuan2_R = ( fangyuan2_X0 & fangyuan2_R0 );
  assign chn_b_rsci_d_mxwt_R = ( chn_b_rsci_d_mxwt_X0 & chn_b_rsci_d_mxwt_R0 ) | ( chn_b_rsci_d_mxwt_X1 & chn_b_rsci_d_mxwt_R1 ) | ( chn_b_rsci_d_mxwt_X2 & chn_b_rsci_d_mxwt_R2 ) | ( chn_b_rsci_d_mxwt_X3 & chn_b_rsci_d_mxwt_R3 ) | ( chn_b_rsci_d_mxwt_X4 & chn_b_rsci_d_mxwt_R4 ) | ( chn_b_rsci_d_mxwt_X5 & chn_b_rsci_d_mxwt_R5 ) | ( chn_b_rsci_d_mxwt_X6 & chn_b_rsci_d_mxwt_R6 );
  assign fangyuan1_R = ( fangyuan1_X0 & fangyuan1_R0 );
  assign _098__R = ( _098__X0 & _098__R0 );
  assign fangyuan0_R = ( fangyuan0_X0 & fangyuan0_R0 );
  assign _097__R = ( _097__X0 & _097__R0 );
  assign chn_o_rsci_oswt_unreg_R = ( chn_o_rsci_oswt_unreg_X0 & chn_o_rsci_oswt_unreg_R0 );
  assign chn_o_rsc_z_R = ( chn_o_rsc_z_X0 & chn_o_rsc_z_R0 );
  assign chn_o_rsc_lz_R = ( chn_o_rsc_lz_X0 & chn_o_rsc_lz_R0 );
  assign chn_b_rsc_lz_R = ( chn_b_rsc_lz_X0 & chn_b_rsc_lz_R0 );
  assign chn_a_rsci_oswt_unreg_pff_R = ( chn_a_rsci_oswt_unreg_pff_X0 & chn_a_rsci_oswt_unreg_pff_R0 );
  assign chn_a_rsc_lz_R = ( chn_a_rsc_lz_X0 & chn_a_rsc_lz_R0 );
 // ground taints for floating regs
 // ground taints for unused wires
  assign { FpAdd_8U_23U_if_3_if_acc_1_itm_7_1_R , FpAdd_8U_23U_if_3_if_acc_1_itm_7_1_C , FpAdd_8U_23U_if_3_if_acc_1_itm_7_1_X , FpAdd_8U_23U_if_4_if_acc_1_itm_7_1_R , FpAdd_8U_23U_if_4_if_acc_1_itm_7_1_C , FpAdd_8U_23U_if_4_if_acc_1_itm_7_1_X , FpAdd_8U_23U_is_a_greater_acc_1_itm_8_1_R , FpAdd_8U_23U_is_a_greater_acc_1_itm_8_1_C , FpAdd_8U_23U_is_a_greater_acc_1_itm_8_1_X , FpAdd_8U_23U_is_a_greater_oif_aelse_acc_itm_23_1_R , FpAdd_8U_23U_is_a_greater_oif_aelse_acc_itm_23_1_C , FpAdd_8U_23U_is_a_greater_oif_aelse_acc_itm_23_1_X , mux_22_nl_R , mux_22_nl_C , mux_22_nl_X , mux_25_nl_R , mux_25_nl_C , mux_25_nl_X , nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_a_R , nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_a_C , nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_a_X , nl_FpAdd_8U_23U_a_left_shift_acc_nl_R , nl_FpAdd_8U_23U_a_left_shift_acc_nl_C , nl_FpAdd_8U_23U_a_left_shift_acc_nl_X , nl_FpAdd_8U_23U_a_right_shift_qelse_acc_nl_R , nl_FpAdd_8U_23U_a_right_shift_qelse_acc_nl_C , nl_FpAdd_8U_23U_a_right_shift_qelse_acc_nl_X , nl_FpAdd_8U_23U_asn_4_mx0w1_R , nl_FpAdd_8U_23U_asn_4_mx0w1_C , nl_FpAdd_8U_23U_asn_4_mx0w1_X , nl_FpAdd_8U_23U_asn_5_mx0w0_R , nl_FpAdd_8U_23U_asn_5_mx0w0_C , nl_FpAdd_8U_23U_asn_5_mx0w0_X , nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_a_R , nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_a_C , nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_a_X , nl_FpAdd_8U_23U_b_left_shift_acc_nl_R , nl_FpAdd_8U_23U_b_left_shift_acc_nl_C , nl_FpAdd_8U_23U_b_left_shift_acc_nl_X , nl_FpAdd_8U_23U_b_right_shift_qif_acc_nl_R , nl_FpAdd_8U_23U_b_right_shift_qif_acc_nl_C , nl_FpAdd_8U_23U_b_right_shift_qif_acc_nl_X , nl_FpAdd_8U_23U_if_3_if_acc_1_nl_R , nl_FpAdd_8U_23U_if_3_if_acc_1_nl_C , nl_FpAdd_8U_23U_if_3_if_acc_1_nl_X , nl_FpAdd_8U_23U_if_3_if_acc_nl_R , nl_FpAdd_8U_23U_if_3_if_acc_nl_C , nl_FpAdd_8U_23U_if_3_if_acc_nl_X , nl_FpAdd_8U_23U_if_4_if_acc_1_nl_R , nl_FpAdd_8U_23U_if_4_if_acc_1_nl_C , nl_FpAdd_8U_23U_if_4_if_acc_1_nl_X , nl_FpAdd_8U_23U_if_4_if_acc_nl_R , nl_FpAdd_8U_23U_if_4_if_acc_nl_C , nl_FpAdd_8U_23U_if_4_if_acc_nl_X , nl_FpAdd_8U_23U_is_a_greater_acc_1_nl_R , nl_FpAdd_8U_23U_is_a_greater_acc_1_nl_C , nl_FpAdd_8U_23U_is_a_greater_acc_1_nl_X , nl_FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_R , nl_FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_C , nl_FpAdd_8U_23U_is_a_greater_oif_aelse_acc_nl_X , nl_FpMantRNE_49U_24U_else_acc_nl_R , nl_FpMantRNE_49U_24U_else_acc_nl_C , nl_FpMantRNE_49U_24U_else_acc_nl_X , nl_FpNormalize_8U_49U_acc_nl_R , nl_FpNormalize_8U_49U_acc_nl_C , nl_FpNormalize_8U_49U_acc_nl_X , nl_FpNormalize_8U_49U_else_acc_nl_R , nl_FpNormalize_8U_49U_else_acc_nl_C , nl_FpNormalize_8U_49U_else_acc_nl_X , nl_FpNormalize_8U_49U_else_lshift_rg_a_R , nl_FpNormalize_8U_49U_else_lshift_rg_a_C , nl_FpNormalize_8U_49U_else_lshift_rg_a_X , nl_HLS_fp32_sub_core_chn_o_rsci_inst_chn_o_rsci_d_R , nl_HLS_fp32_sub_core_chn_o_rsci_inst_chn_o_rsci_d_C , nl_HLS_fp32_sub_core_chn_o_rsci_inst_chn_o_rsci_d_X , nl_leading_sign_49_0_rg_mantissa_R , nl_leading_sign_49_0_rg_mantissa_C , nl_leading_sign_49_0_rg_mantissa_X , nor_32_nl_R , nor_32_nl_C , nor_32_nl_X  } = 0;
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) IsNaN_8U_23U_1_nor_itm_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) IsNaN_8U_23U_1_nor_itm_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) IsNaN_8U_23U_1_nor_itm_2_PREV_VAL1 <= IsNaN_8U_23U_1_nor_itm_2 ;
    if( INSTR_IN_ZY ) IsNaN_8U_23U_1_nor_itm_2_PREV_VAL2 <= IsNaN_8U_23U_1_nor_itm_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_PREV_VAL1 <= IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2 ;
    if( INSTR_IN_ZY ) IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_PREV_VAL2 <= IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpAdd_8U_23U_mux_1_itm_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpAdd_8U_23U_mux_1_itm_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpAdd_8U_23U_mux_1_itm_2_PREV_VAL1 <= FpAdd_8U_23U_mux_1_itm_2 ;
    if( INSTR_IN_ZY ) FpAdd_8U_23U_mux_1_itm_2_PREV_VAL2 <= FpAdd_8U_23U_mux_1_itm_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpAdd_8U_23U_qr_lpi_1_dfm_4_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpAdd_8U_23U_qr_lpi_1_dfm_4_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpAdd_8U_23U_qr_lpi_1_dfm_4_PREV_VAL1 <= FpAdd_8U_23U_qr_lpi_1_dfm_4 ;
    if( INSTR_IN_ZY ) FpAdd_8U_23U_qr_lpi_1_dfm_4_PREV_VAL2 <= FpAdd_8U_23U_qr_lpi_1_dfm_4_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpAdd_8U_23U_mux_13_itm_3_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpAdd_8U_23U_mux_13_itm_3_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpAdd_8U_23U_mux_13_itm_3_PREV_VAL1 <= FpAdd_8U_23U_mux_13_itm_3 ;
    if( INSTR_IN_ZY ) FpAdd_8U_23U_mux_13_itm_3_PREV_VAL2 <= FpAdd_8U_23U_mux_13_itm_3_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_PREV_VAL1 <= FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3 ;
    if( INSTR_IN_ZY ) FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_PREV_VAL2 <= FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_PREV_VAL1 <= FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3 ;
    if( INSTR_IN_ZY ) FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_PREV_VAL2 <= FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_PREV_VAL1 <= FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4 ;
    if( INSTR_IN_ZY ) FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_PREV_VAL2 <= FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_PREV_VAL1 <= FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4 ;
    if( INSTR_IN_ZY ) FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_PREV_VAL2 <= FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpNormalize_8U_49U_if_or_itm_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpNormalize_8U_49U_if_or_itm_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpNormalize_8U_49U_if_or_itm_2_PREV_VAL1 <= FpNormalize_8U_49U_if_or_itm_2 ;
    if( INSTR_IN_ZY ) FpNormalize_8U_49U_if_or_itm_2_PREV_VAL2 <= FpNormalize_8U_49U_if_or_itm_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) IsNaN_8U_23U_1_land_lpi_1_dfm_4_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) IsNaN_8U_23U_1_land_lpi_1_dfm_4_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) IsNaN_8U_23U_1_land_lpi_1_dfm_4_PREV_VAL1 <= IsNaN_8U_23U_1_land_lpi_1_dfm_4 ;
    if( INSTR_IN_ZY ) IsNaN_8U_23U_1_land_lpi_1_dfm_4_PREV_VAL2 <= IsNaN_8U_23U_1_land_lpi_1_dfm_4_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpAdd_8U_23U_qr_lpi_1_dfm_6_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpAdd_8U_23U_qr_lpi_1_dfm_6_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpAdd_8U_23U_qr_lpi_1_dfm_6_PREV_VAL1 <= FpAdd_8U_23U_qr_lpi_1_dfm_6 ;
    if( INSTR_IN_ZY ) FpAdd_8U_23U_qr_lpi_1_dfm_6_PREV_VAL2 <= FpAdd_8U_23U_qr_lpi_1_dfm_6_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_PREV_VAL1 <= FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2 ;
    if( INSTR_IN_ZY ) FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_PREV_VAL2 <= FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) IsNaN_8U_23U_land_lpi_1_dfm_6_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) IsNaN_8U_23U_land_lpi_1_dfm_6_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) IsNaN_8U_23U_land_lpi_1_dfm_6_PREV_VAL1 <= IsNaN_8U_23U_land_lpi_1_dfm_6 ;
    if( INSTR_IN_ZY ) IsNaN_8U_23U_land_lpi_1_dfm_6_PREV_VAL2 <= IsNaN_8U_23U_land_lpi_1_dfm_6_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpAdd_8U_23U_mux_13_itm_4_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpAdd_8U_23U_mux_13_itm_4_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpAdd_8U_23U_mux_13_itm_4_PREV_VAL1 <= FpAdd_8U_23U_mux_13_itm_4 ;
    if( INSTR_IN_ZY ) FpAdd_8U_23U_mux_13_itm_4_PREV_VAL2 <= FpAdd_8U_23U_mux_13_itm_4_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) main_stage_v_3_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) main_stage_v_3_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) main_stage_v_3_PREV_VAL1 <= main_stage_v_3 ;
    if( INSTR_IN_ZY ) main_stage_v_3_PREV_VAL2 <= main_stage_v_3_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) IsNaN_8U_23U_1_land_lpi_1_dfm_3_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) IsNaN_8U_23U_1_land_lpi_1_dfm_3_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) IsNaN_8U_23U_1_land_lpi_1_dfm_3_PREV_VAL1 <= IsNaN_8U_23U_1_land_lpi_1_dfm_3 ;
    if( INSTR_IN_ZY ) IsNaN_8U_23U_1_land_lpi_1_dfm_3_PREV_VAL2 <= IsNaN_8U_23U_1_land_lpi_1_dfm_3_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_PREV_VAL1 <= FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5 ;
    if( INSTR_IN_ZY ) FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_PREV_VAL2 <= FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpAdd_8U_23U_qr_lpi_1_dfm_5_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpAdd_8U_23U_qr_lpi_1_dfm_5_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpAdd_8U_23U_qr_lpi_1_dfm_5_PREV_VAL1 <= FpAdd_8U_23U_qr_lpi_1_dfm_5 ;
    if( INSTR_IN_ZY ) FpAdd_8U_23U_qr_lpi_1_dfm_5_PREV_VAL2 <= FpAdd_8U_23U_qr_lpi_1_dfm_5_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpAdd_8U_23U_a_int_mant_p1_sva_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpAdd_8U_23U_a_int_mant_p1_sva_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpAdd_8U_23U_a_int_mant_p1_sva_2_PREV_VAL1 <= FpAdd_8U_23U_a_int_mant_p1_sva_2 ;
    if( INSTR_IN_ZY ) FpAdd_8U_23U_a_int_mant_p1_sva_2_PREV_VAL2 <= FpAdd_8U_23U_a_int_mant_p1_sva_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpAdd_8U_23U_b_int_mant_p1_sva_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpAdd_8U_23U_b_int_mant_p1_sva_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpAdd_8U_23U_b_int_mant_p1_sva_2_PREV_VAL1 <= FpAdd_8U_23U_b_int_mant_p1_sva_2 ;
    if( INSTR_IN_ZY ) FpAdd_8U_23U_b_int_mant_p1_sva_2_PREV_VAL2 <= FpAdd_8U_23U_b_int_mant_p1_sva_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) IsNaN_8U_23U_land_lpi_1_dfm_5_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) IsNaN_8U_23U_land_lpi_1_dfm_5_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) IsNaN_8U_23U_land_lpi_1_dfm_5_PREV_VAL1 <= IsNaN_8U_23U_land_lpi_1_dfm_5 ;
    if( INSTR_IN_ZY ) IsNaN_8U_23U_land_lpi_1_dfm_5_PREV_VAL2 <= IsNaN_8U_23U_land_lpi_1_dfm_5_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_PREV_VAL1 <= reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse ;
    if( INSTR_IN_ZY ) reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_PREV_VAL2 <= reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) main_stage_v_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) main_stage_v_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) main_stage_v_2_PREV_VAL1 <= main_stage_v_2 ;
    if( INSTR_IN_ZY ) main_stage_v_2_PREV_VAL2 <= main_stage_v_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_PREV_VAL1 <= FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4 ;
    if( INSTR_IN_ZY ) FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_PREV_VAL2 <= FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_PREV_VAL1 <= FpAdd_8U_23U_IsZero_8U_23U_or_itm_2 ;
    if( INSTR_IN_ZY ) FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_PREV_VAL2 <= FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_PREV_VAL1 <= FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2 ;
    if( INSTR_IN_ZY ) FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_PREV_VAL2 <= FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) IsNaN_8U_23U_land_lpi_1_dfm_st_4_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) IsNaN_8U_23U_land_lpi_1_dfm_st_4_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) IsNaN_8U_23U_land_lpi_1_dfm_st_4_PREV_VAL1 <= IsNaN_8U_23U_land_lpi_1_dfm_st_4 ;
    if( INSTR_IN_ZY ) IsNaN_8U_23U_land_lpi_1_dfm_st_4_PREV_VAL2 <= IsNaN_8U_23U_land_lpi_1_dfm_st_4_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) b_sva_36_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) b_sva_36_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) b_sva_36_PREV_VAL1 <= b_sva_36 ;
    if( INSTR_IN_ZY ) b_sva_36_PREV_VAL2 <= b_sva_36_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpAdd_8U_23U_a_sva_36_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpAdd_8U_23U_a_sva_36_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpAdd_8U_23U_a_sva_36_PREV_VAL1 <= FpAdd_8U_23U_a_sva_36 ;
    if( INSTR_IN_ZY ) FpAdd_8U_23U_a_sva_36_PREV_VAL2 <= FpAdd_8U_23U_a_sva_36_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_PREV_VAL1 <= FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3 ;
    if( INSTR_IN_ZY ) FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_PREV_VAL2 <= FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) main_stage_v_1_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) main_stage_v_1_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) main_stage_v_1_PREV_VAL1 <= main_stage_v_1 ;
    if( INSTR_IN_ZY ) main_stage_v_1_PREV_VAL2 <= main_stage_v_1_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL1 <= reg_chn_o_rsci_ld_core_psct_cse ;
    if( INSTR_IN_ZY ) reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL2 <= reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_o_rsci_d_31_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_o_rsci_d_31_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_31_PREV_VAL1 <= chn_o_rsci_d_31 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_31_PREV_VAL2 <= chn_o_rsci_d_31_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_o_rsci_d_30_23_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_o_rsci_d_30_23_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_30_23_PREV_VAL1 <= chn_o_rsci_d_30_23 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_30_23_PREV_VAL2 <= chn_o_rsci_d_30_23_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_o_rsci_d_22_0_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_o_rsci_d_22_0_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_22_0_PREV_VAL1 <= chn_o_rsci_d_22_0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_22_0_PREV_VAL2 <= chn_o_rsci_d_22_0_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) reg_chn_a_rsci_ld_core_psct_cse_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) reg_chn_a_rsci_ld_core_psct_cse_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) reg_chn_a_rsci_ld_core_psct_cse_PREV_VAL1 <= reg_chn_a_rsci_ld_core_psct_cse ;
    if( INSTR_IN_ZY ) reg_chn_a_rsci_ld_core_psct_cse_PREV_VAL2 <= reg_chn_a_rsci_ld_core_psct_cse_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_o_rsci_iswt0_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_o_rsci_iswt0_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_iswt0_PREV_VAL1 <= chn_o_rsci_iswt0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_iswt0_PREV_VAL2 <= chn_o_rsci_iswt0_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) reg_chn_a_rsci_iswt0_cse_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) reg_chn_a_rsci_iswt0_cse_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) reg_chn_a_rsci_iswt0_cse_PREV_VAL1 <= reg_chn_a_rsci_iswt0_cse ;
    if( INSTR_IN_ZY ) reg_chn_a_rsci_iswt0_cse_PREV_VAL2 <= reg_chn_a_rsci_iswt0_cse_PREV_VAL1 ;
  end
 // ground taints for unused wire slices
  assign { nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s_R0 [8:1] } = 0;
  assign { nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s_X0 [8:1] } = 0;
  assign { nl_FpAdd_8U_23U_b_int_mant_p1_lshift_rg_s_C0 [8:1] } = 0;
  assign { nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s_R0 [8:1] } = 0;
  assign { nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s_X0 [8:1] } = 0;
  assign { nl_FpAdd_8U_23U_a_int_mant_p1_lshift_rg_s_C0 [8:1] } = 0;
  assign { b_sva_36_R4 [31:23] } = 0;
  assign { b_sva_36_X4 [31:23] } = 0;
  assign { b_sva_36_C4 [31:23] } = 0;
  assign { _000__R8 [0], _000__R8 [1] } = 0;
  assign { _000__X8 [0], _000__X8 [1] } = 0;
  assign { _000__C8 [0], _000__C8 [1] } = 0;
  assign { FpAdd_8U_23U_a_sva_36_R4 [31:23] } = 0;
  assign { FpAdd_8U_23U_a_sva_36_X4 [31:23] } = 0;
  assign { FpAdd_8U_23U_a_sva_36_C4 [31:23] } = 0;
  assign { FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_R9 [49:49] } = 0;
  assign { FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_X9 [49:49] } = 0;
  assign { FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_C9 [49:49] } = 0;
  assign { FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R2 [0], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R2 [1], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R2 [2], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R2 [3], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R2 [4], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R2 [5], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R2 [6], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R2 [7], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R2 [8], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R2 [9], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R2 [10], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R2 [11], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R2 [12], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R2 [13], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R2 [14], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R2 [15], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R2 [16], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R2 [17], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R2 [18], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R2 [19], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R2 [20], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R2 [21], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R2 [22], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R2 [23], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R2 [24], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_R2 [48:26] } = 0;
  assign { FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X2 [0], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X2 [1], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X2 [2], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X2 [3], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X2 [4], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X2 [5], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X2 [6], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X2 [7], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X2 [8], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X2 [9], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X2 [10], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X2 [11], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X2 [12], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X2 [13], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X2 [14], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X2 [15], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X2 [16], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X2 [17], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X2 [18], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X2 [19], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X2 [20], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X2 [21], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X2 [22], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X2 [23], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X2 [24], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_X2 [48:26] } = 0;
  assign { FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C2 [0], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C2 [1], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C2 [2], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C2 [3], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C2 [4], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C2 [5], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C2 [6], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C2 [7], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C2 [8], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C2 [9], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C2 [10], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C2 [11], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C2 [12], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C2 [13], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C2 [14], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C2 [15], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C2 [16], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C2 [17], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C2 [18], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C2 [19], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C2 [20], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C2 [21], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C2 [22], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C2 [23], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C2 [24], FpAdd_8U_23U_int_mant_1_lpi_1_dfm_2_mx0_C2 [48:26] } = 0;
  assign { chn_a_rsci_d_mxwt_R6 [0], chn_a_rsci_d_mxwt_R6 [1], chn_a_rsci_d_mxwt_R6 [2], chn_a_rsci_d_mxwt_R6 [3], chn_a_rsci_d_mxwt_R6 [4], chn_a_rsci_d_mxwt_R6 [5], chn_a_rsci_d_mxwt_R6 [6], chn_a_rsci_d_mxwt_R6 [7], chn_a_rsci_d_mxwt_R6 [8], chn_a_rsci_d_mxwt_R6 [9], chn_a_rsci_d_mxwt_R6 [10], chn_a_rsci_d_mxwt_R6 [11], chn_a_rsci_d_mxwt_R6 [12], chn_a_rsci_d_mxwt_R6 [13], chn_a_rsci_d_mxwt_R6 [14], chn_a_rsci_d_mxwt_R6 [15], chn_a_rsci_d_mxwt_R6 [16], chn_a_rsci_d_mxwt_R6 [17], chn_a_rsci_d_mxwt_R6 [18], chn_a_rsci_d_mxwt_R6 [19], chn_a_rsci_d_mxwt_R6 [20], chn_a_rsci_d_mxwt_R6 [21], chn_a_rsci_d_mxwt_R6 [22], chn_a_rsci_d_mxwt_R6 [23], chn_a_rsci_d_mxwt_R6 [24], chn_a_rsci_d_mxwt_R6 [25], chn_a_rsci_d_mxwt_R6 [26], chn_a_rsci_d_mxwt_R6 [27], chn_a_rsci_d_mxwt_R6 [28], chn_a_rsci_d_mxwt_R6 [29], chn_a_rsci_d_mxwt_R6 [30] } = 0;
  assign { chn_a_rsci_d_mxwt_X6 [0], chn_a_rsci_d_mxwt_X6 [1], chn_a_rsci_d_mxwt_X6 [2], chn_a_rsci_d_mxwt_X6 [3], chn_a_rsci_d_mxwt_X6 [4], chn_a_rsci_d_mxwt_X6 [5], chn_a_rsci_d_mxwt_X6 [6], chn_a_rsci_d_mxwt_X6 [7], chn_a_rsci_d_mxwt_X6 [8], chn_a_rsci_d_mxwt_X6 [9], chn_a_rsci_d_mxwt_X6 [10], chn_a_rsci_d_mxwt_X6 [11], chn_a_rsci_d_mxwt_X6 [12], chn_a_rsci_d_mxwt_X6 [13], chn_a_rsci_d_mxwt_X6 [14], chn_a_rsci_d_mxwt_X6 [15], chn_a_rsci_d_mxwt_X6 [16], chn_a_rsci_d_mxwt_X6 [17], chn_a_rsci_d_mxwt_X6 [18], chn_a_rsci_d_mxwt_X6 [19], chn_a_rsci_d_mxwt_X6 [20], chn_a_rsci_d_mxwt_X6 [21], chn_a_rsci_d_mxwt_X6 [22], chn_a_rsci_d_mxwt_X6 [23], chn_a_rsci_d_mxwt_X6 [24], chn_a_rsci_d_mxwt_X6 [25], chn_a_rsci_d_mxwt_X6 [26], chn_a_rsci_d_mxwt_X6 [27], chn_a_rsci_d_mxwt_X6 [28], chn_a_rsci_d_mxwt_X6 [29], chn_a_rsci_d_mxwt_X6 [30] } = 0;
  assign { chn_a_rsci_d_mxwt_C6 [0], chn_a_rsci_d_mxwt_C6 [1], chn_a_rsci_d_mxwt_C6 [2], chn_a_rsci_d_mxwt_C6 [3], chn_a_rsci_d_mxwt_C6 [4], chn_a_rsci_d_mxwt_C6 [5], chn_a_rsci_d_mxwt_C6 [6], chn_a_rsci_d_mxwt_C6 [7], chn_a_rsci_d_mxwt_C6 [8], chn_a_rsci_d_mxwt_C6 [9], chn_a_rsci_d_mxwt_C6 [10], chn_a_rsci_d_mxwt_C6 [11], chn_a_rsci_d_mxwt_C6 [12], chn_a_rsci_d_mxwt_C6 [13], chn_a_rsci_d_mxwt_C6 [14], chn_a_rsci_d_mxwt_C6 [15], chn_a_rsci_d_mxwt_C6 [16], chn_a_rsci_d_mxwt_C6 [17], chn_a_rsci_d_mxwt_C6 [18], chn_a_rsci_d_mxwt_C6 [19], chn_a_rsci_d_mxwt_C6 [20], chn_a_rsci_d_mxwt_C6 [21], chn_a_rsci_d_mxwt_C6 [22], chn_a_rsci_d_mxwt_C6 [23], chn_a_rsci_d_mxwt_C6 [24], chn_a_rsci_d_mxwt_C6 [25], chn_a_rsci_d_mxwt_C6 [26], chn_a_rsci_d_mxwt_C6 [27], chn_a_rsci_d_mxwt_C6 [28], chn_a_rsci_d_mxwt_C6 [29], chn_a_rsci_d_mxwt_C6 [30] } = 0;
  assign { _050__R0 [10:9] } = 0;
  assign { _050__X0 [10:9] } = 0;
  assign { _050__C0 [10:9] } = 0;
  assign { _049__R0 [9:8] } = 0;
  assign { _049__X0 [9:8] } = 0;
  assign { _049__C0 [9:8] } = 0;
  assign { chn_b_rsci_d_mxwt_R6 [0], chn_b_rsci_d_mxwt_R6 [1], chn_b_rsci_d_mxwt_R6 [2], chn_b_rsci_d_mxwt_R6 [3], chn_b_rsci_d_mxwt_R6 [4], chn_b_rsci_d_mxwt_R6 [5], chn_b_rsci_d_mxwt_R6 [6], chn_b_rsci_d_mxwt_R6 [7], chn_b_rsci_d_mxwt_R6 [8], chn_b_rsci_d_mxwt_R6 [9], chn_b_rsci_d_mxwt_R6 [10], chn_b_rsci_d_mxwt_R6 [11], chn_b_rsci_d_mxwt_R6 [12], chn_b_rsci_d_mxwt_R6 [13], chn_b_rsci_d_mxwt_R6 [14], chn_b_rsci_d_mxwt_R6 [15], chn_b_rsci_d_mxwt_R6 [16], chn_b_rsci_d_mxwt_R6 [17], chn_b_rsci_d_mxwt_R6 [18], chn_b_rsci_d_mxwt_R6 [19], chn_b_rsci_d_mxwt_R6 [20], chn_b_rsci_d_mxwt_R6 [21], chn_b_rsci_d_mxwt_R6 [22], chn_b_rsci_d_mxwt_R6 [23], chn_b_rsci_d_mxwt_R6 [24], chn_b_rsci_d_mxwt_R6 [25], chn_b_rsci_d_mxwt_R6 [26], chn_b_rsci_d_mxwt_R6 [27], chn_b_rsci_d_mxwt_R6 [28], chn_b_rsci_d_mxwt_R6 [29], chn_b_rsci_d_mxwt_R6 [30] } = 0;
  assign { chn_b_rsci_d_mxwt_X6 [0], chn_b_rsci_d_mxwt_X6 [1], chn_b_rsci_d_mxwt_X6 [2], chn_b_rsci_d_mxwt_X6 [3], chn_b_rsci_d_mxwt_X6 [4], chn_b_rsci_d_mxwt_X6 [5], chn_b_rsci_d_mxwt_X6 [6], chn_b_rsci_d_mxwt_X6 [7], chn_b_rsci_d_mxwt_X6 [8], chn_b_rsci_d_mxwt_X6 [9], chn_b_rsci_d_mxwt_X6 [10], chn_b_rsci_d_mxwt_X6 [11], chn_b_rsci_d_mxwt_X6 [12], chn_b_rsci_d_mxwt_X6 [13], chn_b_rsci_d_mxwt_X6 [14], chn_b_rsci_d_mxwt_X6 [15], chn_b_rsci_d_mxwt_X6 [16], chn_b_rsci_d_mxwt_X6 [17], chn_b_rsci_d_mxwt_X6 [18], chn_b_rsci_d_mxwt_X6 [19], chn_b_rsci_d_mxwt_X6 [20], chn_b_rsci_d_mxwt_X6 [21], chn_b_rsci_d_mxwt_X6 [22], chn_b_rsci_d_mxwt_X6 [23], chn_b_rsci_d_mxwt_X6 [24], chn_b_rsci_d_mxwt_X6 [25], chn_b_rsci_d_mxwt_X6 [26], chn_b_rsci_d_mxwt_X6 [27], chn_b_rsci_d_mxwt_X6 [28], chn_b_rsci_d_mxwt_X6 [29], chn_b_rsci_d_mxwt_X6 [30] } = 0;
  assign { chn_b_rsci_d_mxwt_C6 [0], chn_b_rsci_d_mxwt_C6 [1], chn_b_rsci_d_mxwt_C6 [2], chn_b_rsci_d_mxwt_C6 [3], chn_b_rsci_d_mxwt_C6 [4], chn_b_rsci_d_mxwt_C6 [5], chn_b_rsci_d_mxwt_C6 [6], chn_b_rsci_d_mxwt_C6 [7], chn_b_rsci_d_mxwt_C6 [8], chn_b_rsci_d_mxwt_C6 [9], chn_b_rsci_d_mxwt_C6 [10], chn_b_rsci_d_mxwt_C6 [11], chn_b_rsci_d_mxwt_C6 [12], chn_b_rsci_d_mxwt_C6 [13], chn_b_rsci_d_mxwt_C6 [14], chn_b_rsci_d_mxwt_C6 [15], chn_b_rsci_d_mxwt_C6 [16], chn_b_rsci_d_mxwt_C6 [17], chn_b_rsci_d_mxwt_C6 [18], chn_b_rsci_d_mxwt_C6 [19], chn_b_rsci_d_mxwt_C6 [20], chn_b_rsci_d_mxwt_C6 [21], chn_b_rsci_d_mxwt_C6 [22], chn_b_rsci_d_mxwt_C6 [23], chn_b_rsci_d_mxwt_C6 [24], chn_b_rsci_d_mxwt_C6 [25], chn_b_rsci_d_mxwt_C6 [26], chn_b_rsci_d_mxwt_C6 [27], chn_b_rsci_d_mxwt_C6 [28], chn_b_rsci_d_mxwt_C6 [29], chn_b_rsci_d_mxwt_C6 [30] } = 0;
  assert property( FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_r_flag == 0 || FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_PREV_VAL1 == FpAdd_8U_23U_IsZero_8U_23U_1_or_itm_2_PREV_VAL2 );
  assert property( FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_r_flag == 0 || FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_PREV_VAL1 == FpAdd_8U_23U_IsZero_8U_23U_or_itm_2_PREV_VAL2 );
  assert property( FpAdd_8U_23U_a_int_mant_p1_sva_2_r_flag == 0 || FpAdd_8U_23U_a_int_mant_p1_sva_2_PREV_VAL1 == FpAdd_8U_23U_a_int_mant_p1_sva_2_PREV_VAL2 );
  assert property( FpAdd_8U_23U_a_sva_36_r_flag == 0 || FpAdd_8U_23U_a_sva_36_PREV_VAL1 == FpAdd_8U_23U_a_sva_36_PREV_VAL2 );
  assert property( FpAdd_8U_23U_b_int_mant_p1_sva_2_r_flag == 0 || FpAdd_8U_23U_b_int_mant_p1_sva_2_PREV_VAL1 == FpAdd_8U_23U_b_int_mant_p1_sva_2_PREV_VAL2 );
  assert property( FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_r_flag == 0 || FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_PREV_VAL1 == FpAdd_8U_23U_int_mant_p1_lpi_1_dfm_2_PREV_VAL2 );
  assert property( FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_r_flag == 0 || FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_PREV_VAL1 == FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_4_PREV_VAL2 );
  assert property( FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_r_flag == 0 || FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_PREV_VAL1 == FpAdd_8U_23U_is_a_greater_lor_lpi_1_dfm_5_PREV_VAL2 );
  assert property( FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_r_flag == 0 || FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_PREV_VAL1 == FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_3_PREV_VAL2 );
  assert property( FpAdd_8U_23U_mux_13_itm_3_r_flag == 0 || FpAdd_8U_23U_mux_13_itm_3_PREV_VAL1 == FpAdd_8U_23U_mux_13_itm_3_PREV_VAL2 );
  assert property( FpAdd_8U_23U_mux_13_itm_4_r_flag == 0 || FpAdd_8U_23U_mux_13_itm_4_PREV_VAL1 == FpAdd_8U_23U_mux_13_itm_4_PREV_VAL2 );
  assert property( FpAdd_8U_23U_mux_1_itm_2_r_flag == 0 || FpAdd_8U_23U_mux_1_itm_2_PREV_VAL1 == FpAdd_8U_23U_mux_1_itm_2_PREV_VAL2 );
  assert property( FpAdd_8U_23U_qr_lpi_1_dfm_4_r_flag == 0 || FpAdd_8U_23U_qr_lpi_1_dfm_4_PREV_VAL1 == FpAdd_8U_23U_qr_lpi_1_dfm_4_PREV_VAL2 );
  assert property( FpAdd_8U_23U_qr_lpi_1_dfm_5_r_flag == 0 || FpAdd_8U_23U_qr_lpi_1_dfm_5_PREV_VAL1 == FpAdd_8U_23U_qr_lpi_1_dfm_5_PREV_VAL2 );
  assert property( FpAdd_8U_23U_qr_lpi_1_dfm_6_r_flag == 0 || FpAdd_8U_23U_qr_lpi_1_dfm_6_PREV_VAL1 == FpAdd_8U_23U_qr_lpi_1_dfm_6_PREV_VAL2 );
  assert property( FpNormalize_8U_49U_if_or_itm_2_r_flag == 0 || FpNormalize_8U_49U_if_or_itm_2_PREV_VAL1 == FpNormalize_8U_49U_if_or_itm_2_PREV_VAL2 );
  assert property( FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_r_flag == 0 || FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_PREV_VAL1 == FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_3_PREV_VAL2 );
  assert property( FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_r_flag == 0 || FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_PREV_VAL1 == FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_22_0_itm_4_PREV_VAL2 );
  assert property( FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_r_flag == 0 || FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_PREV_VAL1 == FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_3_PREV_VAL2 );
  assert property( FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_r_flag == 0 || FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_PREV_VAL1 == FpSignedBitsToFloat_8U_23U_1_slc_FpSignedBitsToFloat_8U_23U_1_ubits_30_23_itm_4_PREV_VAL2 );
  assert property( IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_r_flag == 0 || IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_PREV_VAL1 == IsNaN_8U_23U_1_IsNaN_8U_23U_1_nand_itm_2_PREV_VAL2 );
  assert property( IsNaN_8U_23U_1_land_lpi_1_dfm_3_r_flag == 0 || IsNaN_8U_23U_1_land_lpi_1_dfm_3_PREV_VAL1 == IsNaN_8U_23U_1_land_lpi_1_dfm_3_PREV_VAL2 );
  assert property( IsNaN_8U_23U_1_land_lpi_1_dfm_4_r_flag == 0 || IsNaN_8U_23U_1_land_lpi_1_dfm_4_PREV_VAL1 == IsNaN_8U_23U_1_land_lpi_1_dfm_4_PREV_VAL2 );
  assert property( IsNaN_8U_23U_1_nor_itm_2_r_flag == 0 || IsNaN_8U_23U_1_nor_itm_2_PREV_VAL1 == IsNaN_8U_23U_1_nor_itm_2_PREV_VAL2 );
  assert property( IsNaN_8U_23U_land_lpi_1_dfm_5_r_flag == 0 || IsNaN_8U_23U_land_lpi_1_dfm_5_PREV_VAL1 == IsNaN_8U_23U_land_lpi_1_dfm_5_PREV_VAL2 );
  assert property( IsNaN_8U_23U_land_lpi_1_dfm_6_r_flag == 0 || IsNaN_8U_23U_land_lpi_1_dfm_6_PREV_VAL1 == IsNaN_8U_23U_land_lpi_1_dfm_6_PREV_VAL2 );
  assert property( IsNaN_8U_23U_land_lpi_1_dfm_st_4_r_flag == 0 || IsNaN_8U_23U_land_lpi_1_dfm_st_4_PREV_VAL1 == IsNaN_8U_23U_land_lpi_1_dfm_st_4_PREV_VAL2 );
  assert property( b_sva_36_r_flag == 0 || b_sva_36_PREV_VAL1 == b_sva_36_PREV_VAL2 );
  assert property( chn_o_rsci_d_22_0_r_flag == 0 || chn_o_rsci_d_22_0_PREV_VAL1 == chn_o_rsci_d_22_0_PREV_VAL2 );
  assert property( chn_o_rsci_d_30_23_r_flag == 0 || chn_o_rsci_d_30_23_PREV_VAL1 == chn_o_rsci_d_30_23_PREV_VAL2 );
  assert property( chn_o_rsci_d_31_r_flag == 0 || chn_o_rsci_d_31_PREV_VAL1 == chn_o_rsci_d_31_PREV_VAL2 );
  assert property( chn_o_rsci_iswt0_r_flag == 0 || chn_o_rsci_iswt0_PREV_VAL1 == chn_o_rsci_iswt0_PREV_VAL2 );
  assert property( main_stage_v_1_r_flag == 0 || main_stage_v_1_PREV_VAL1 == main_stage_v_1_PREV_VAL2 );
  assert property( main_stage_v_2_r_flag == 0 || main_stage_v_2_PREV_VAL1 == main_stage_v_2_PREV_VAL2 );
  assert property( main_stage_v_3_r_flag == 0 || main_stage_v_3_PREV_VAL1 == main_stage_v_3_PREV_VAL2 );
  assert property( reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_r_flag == 0 || reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_PREV_VAL1 == reg_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_FpAdd_8U_23U_is_addition_xor_svs_2_cse_PREV_VAL2 );
  assert property( reg_chn_a_rsci_iswt0_cse_r_flag == 0 || reg_chn_a_rsci_iswt0_cse_PREV_VAL1 == reg_chn_a_rsci_iswt0_cse_PREV_VAL2 );
  assert property( reg_chn_a_rsci_ld_core_psct_cse_r_flag == 0 || reg_chn_a_rsci_ld_core_psct_cse_PREV_VAL1 == reg_chn_a_rsci_ld_core_psct_cse_PREV_VAL2 );
  assert property( reg_chn_o_rsci_ld_core_psct_cse_r_flag == 0 || reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL1 == reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL2 );
  assign rst_zy = !nvdla_core_rstn ;
endmodule
