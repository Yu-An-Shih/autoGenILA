module NV_NVDLA_BDMA_STORE_fifo_intr(nvdla_core_clk, nvdla_core_rstn, fifo_intr_wr_idle, fifo_intr_wr_pvld, fifo_intr_wr_pd, fifo_intr_rd_prdy, fifo_intr_rd_pvld, fifo_intr_rd_pd, pwrbus_ram_pd);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  output fifo_intr_rd_pd;
  reg fifo_intr_rd_pd;
  reg fifo_intr_rd_pd_o;
  wire fifo_intr_rd_pd_p;
  input fifo_intr_rd_prdy;
  reg fifo_intr_rd_prdy_d;
  wire fifo_intr_rd_prdy_d_o;
  output fifo_intr_rd_pvld;
  reg fifo_intr_rd_pvld_int;
  reg fifo_intr_rd_pvld_int_d;
  reg fifo_intr_rd_pvld_int_o;
  wire fifo_intr_rd_pvld_o;
  wire fifo_intr_rd_pvld_p;
  output fifo_intr_wr_idle;
  wire fifo_intr_wr_idle_d0;
  input fifo_intr_wr_pd;
  input fifo_intr_wr_pvld;
  input nvdla_core_clk;
  wire nvdla_core_clk_mgated;
  wire nvdla_core_clk_mgated_enable;
  input nvdla_core_rstn;
  input [31:0] pwrbus_ram_pd;
  wire rd_idle;
  wire rd_popping;
  wire rd_req_next;
  wire rd_req_next_o;
  assign _03_ = fifo_intr_rd_pvld_int_o && _07_;
  assign rd_popping = fifo_intr_wr_pvld && _11_;
  assign _04_ = fifo_intr_rd_pvld_int && rd_req_next_o;
  assign _05_ = _04_ && rd_popping;
  assign _06_ = fifo_intr_rd_pvld_int_o && fifo_intr_rd_pvld_int_d;
  assign _07_ = _06_ && _12_;
  assign _08_ = rd_req_next && _16_;
  assign rd_idle = _14_ && _13_;
  assign fifo_intr_wr_idle = _15_ && rd_idle;
  assign _09_ = fifo_intr_rd_pvld_int && fifo_intr_rd_prdy_d;
  assign _10_ = fifo_intr_rd_pvld_int_o && fifo_intr_rd_prdy_d_o;
  assign _11_ = ! _03_;
  assign _12_ = ! fifo_intr_rd_prdy_d;
  assign fifo_intr_rd_prdy_d_o = ! _07_;
  assign _13_ = ! fifo_intr_rd_pvld_int;
  assign _14_ = ! fifo_intr_rd_pvld_int_o;
  assign _15_ = ! fifo_intr_wr_pvld;
  assign rd_req_next_o = fifo_intr_wr_pvld || _03_;
  assign _16_ = _13_ || fifo_intr_rd_prdy;
  assign _17_ = fifo_intr_wr_pvld || _09_;
  assign nvdla_core_clk_mgated_enable = _17_ || _10_;
  always @(posedge nvdla_core_clk)
      fifo_intr_rd_pd <= _00_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      fifo_intr_rd_pvld_int <= 1'b0;
    else
      fifo_intr_rd_pvld_int <= _02_;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      fifo_intr_rd_pvld_int_d <= 1'b0;
    else
      fifo_intr_rd_pvld_int_d <= fifo_intr_rd_pvld_int;
  always @(posedge nvdla_core_clk_mgated)
      fifo_intr_rd_pd_o <= _01_;
  always @(posedge nvdla_core_clk_mgated or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      fifo_intr_rd_pvld_int_o <= 1'b0;
    else
      fifo_intr_rd_pvld_int_o <= rd_req_next_o;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      fifo_intr_rd_prdy_d <= 1'b1;
    else
      fifo_intr_rd_prdy_d <= fifo_intr_rd_prdy;
  assign _18_ = _07_ ? fifo_intr_rd_pd_o : fifo_intr_wr_pd;
  assign _00_ = _08_ ? _18_ : fifo_intr_rd_pd;
  assign _02_ = _16_ ? rd_req_next : fifo_intr_rd_pvld_int;
  assign _01_ = _05_ ? fifo_intr_wr_pd : fifo_intr_rd_pd_o;
  assign rd_req_next = _07_ ? fifo_intr_rd_pvld_int_o : fifo_intr_wr_pvld;
  NV_CLK_gate_power nvdla_core_clk_mgate (
    .clk(nvdla_core_clk),
    .clk_en(nvdla_core_clk_mgated_enable),
    .clk_gated(nvdla_core_clk_mgated),
    .reset_(nvdla_core_rstn)
  );
  assign fifo_intr_rd_pd_p = fifo_intr_wr_pd;
  assign fifo_intr_rd_pvld = fifo_intr_rd_pvld_int;
  assign fifo_intr_rd_pvld_o = fifo_intr_rd_pvld_int_o;
  assign fifo_intr_rd_pvld_p = fifo_intr_wr_pvld;
  assign fifo_intr_wr_idle_d0 = fifo_intr_wr_idle;
endmodule
