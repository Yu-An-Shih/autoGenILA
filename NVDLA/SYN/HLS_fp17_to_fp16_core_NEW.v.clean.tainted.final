module HLS_fp17_to_fp16_core ( chn_a_rsc_vz , chn_a_rsc_z , chn_a_rsci_oswt , chn_o_rsc_vz , chn_o_rsci_oswt , nvdla_core_clk , nvdla_core_rstn , INSTR_IN_ZY , chn_a_rsc_lz_R0 , chn_a_rsc_lz_C0 , chn_a_rsc_lz_X0 , chn_a_rsc_vz_T , chn_a_rsc_vz_S , chn_a_rsc_z_T , chn_a_rsc_z_S , chn_a_rsci_oswt_T , chn_a_rsci_oswt_S , chn_a_rsci_oswt_unreg_R0 , chn_a_rsci_oswt_unreg_C0 , chn_a_rsci_oswt_unreg_X0 , chn_o_rsc_lz_R0 , chn_o_rsc_lz_C0 , chn_o_rsc_lz_X0 , chn_o_rsc_vz_T , chn_o_rsc_vz_S , chn_o_rsc_z_R0 , chn_o_rsc_z_C0 , chn_o_rsc_z_X0 , chn_o_rsci_oswt_T , chn_o_rsci_oswt_S , chn_o_rsci_oswt_unreg_R0 , chn_o_rsci_oswt_unreg_C0 , chn_o_rsci_oswt_unreg_X0 , nvdla_core_clk_T , nvdla_core_clk_S , nvdla_core_rstn_T , nvdla_core_rstn_S , chn_a_rsc_lz , chn_a_rsci_oswt_unreg , chn_o_rsc_lz , chn_o_rsc_z , chn_o_rsci_oswt_unreg , chn_a_rsc_lz_T , chn_a_rsc_lz_S , chn_a_rsc_vz_R , chn_a_rsc_vz_X , chn_a_rsc_vz_C , chn_a_rsc_z_R , chn_a_rsc_z_X , chn_a_rsc_z_C , chn_a_rsci_oswt_R , chn_a_rsci_oswt_X , chn_a_rsci_oswt_C , chn_a_rsci_oswt_unreg_T , chn_a_rsci_oswt_unreg_S , chn_o_rsc_lz_T , chn_o_rsc_lz_S , chn_o_rsc_vz_R , chn_o_rsc_vz_X , chn_o_rsc_vz_C , chn_o_rsc_z_T , chn_o_rsc_z_S , chn_o_rsci_oswt_R , chn_o_rsci_oswt_X , chn_o_rsci_oswt_C , chn_o_rsci_oswt_unreg_T , chn_o_rsci_oswt_unreg_S , nvdla_core_clk_R , nvdla_core_clk_X , nvdla_core_clk_C , nvdla_core_rstn_R , nvdla_core_rstn_X , nvdla_core_rstn_C );
  logic rst_zy;
  integer i;
  input INSTR_IN_ZY;
  logic _000_;
  logic _000__T ;
  logic _000__R ;
  logic _000__C ;
  logic _000__X ;
  logic [13:0] _000__S ;
  logic [9:0] _001_;
  logic [9:0] _001__T ;
  logic [9:0] _001__R ;
  logic [9:0] _001__C ;
  logic [9:0] _001__X ;
  logic [13:0] _001__S ;
  logic [9:0] _002_;
  logic [9:0] _002__T ;
  logic [9:0] _002__R ;
  logic [9:0] _002__C ;
  logic [9:0] _002__X ;
  logic [13:0] _002__S ;
  logic [14:0] _003_;
  logic [14:0] _003__T ;
  logic [14:0] _003__R ;
  logic [14:0] _003__C ;
  logic [14:0] _003__X ;
  logic [13:0] _003__S ;
  logic _004_;
  logic _004__T ;
  logic _004__R ;
  logic _004__C ;
  logic _004__X ;
  logic [13:0] _004__S ;
  logic [2:0] _005_;
  logic [2:0] _005__T ;
  logic [2:0] _005__R ;
  logic [2:0] _005__C ;
  logic [2:0] _005__X ;
  logic [13:0] _005__S ;
  logic _006_;
  logic _006__T ;
  logic _006__R ;
  logic _006__C ;
  logic _006__X ;
  logic [13:0] _006__S ;
  logic _007_;
  logic _007__T ;
  logic _007__R ;
  logic _007__C ;
  logic _007__X ;
  logic [13:0] _007__S ;
  logic _008_;
  logic _008__T ;
  logic _008__R ;
  logic _008__C ;
  logic _008__X ;
  logic [13:0] _008__S ;
  logic _009_;
  logic _009__T ;
  logic _009__R ;
  logic _009__C ;
  logic _009__X ;
  logic [13:0] _009__S ;
  logic _010_;
  logic _010__T ;
  logic _010__R ;
  logic _010__C ;
  logic _010__X ;
  logic [13:0] _010__S ;
  logic _011_;
  logic _011__T ;
  logic _011__R ;
  logic _011__C ;
  logic _011__X ;
  logic [13:0] _011__S ;
  logic _012_;
  logic _012__T ;
  logic _012__R ;
  logic _012__C ;
  logic _012__X ;
  logic [13:0] _012__S ;
  logic _013_;
  logic _013__T ;
  logic _013__R ;
  logic _013__C ;
  logic _013__X ;
  logic [13:0] _013__S ;
  logic _014_;
  logic _014__T ;
  logic _014__R ;
  logic _014__C ;
  logic _014__X ;
  logic [13:0] _014__S ;
  logic _015_;
  logic _015__T ;
  logic _015__R ;
  logic _015__C ;
  logic _015__X ;
  logic [13:0] _015__S ;
  logic _016_;
  logic _016__T ;
  logic _016__R ;
  logic _016__C ;
  logic _016__X ;
  logic [13:0] _016__S ;
  logic [3:0] _017_;
  logic [3:0] _017__T ;
  logic [3:0] _017__R ;
  logic [3:0] _017__C ;
  logic [3:0] _017__X ;
  logic [13:0] _017__S ;
  logic _018_;
  logic _018__T ;
  logic _018__R ;
  logic _018__C ;
  logic _018__X ;
  logic [13:0] _018__S ;
  logic _019_;
  logic _019__T ;
  logic _019__R ;
  logic _019__C ;
  logic _019__X ;
  logic [13:0] _019__S ;
  logic [9:0] _020_;
  logic [9:0] _020__T ;
  logic [9:0] _020__R ;
  logic [9:0] _020__C ;
  logic [9:0] _020__X ;
  logic [13:0] _020__S ;
  logic _021_;
  logic _021__T ;
  logic _021__R ;
  logic _021__C ;
  logic _021__X ;
  logic [13:0] _021__S ;
  logic _022_;
  logic _022__T ;
  logic _022__R ;
  logic _022__C ;
  logic _022__X ;
  logic [13:0] _022__S ;
  logic _023_;
  logic _023__T ;
  logic _023__R ;
  logic _023__C ;
  logic _023__X ;
  logic [13:0] _023__S ;
  logic _024_;
  logic _024__T ;
  logic _024__R ;
  logic _024__C ;
  logic _024__X ;
  logic [13:0] _024__S ;
  logic _025_;
  logic _025__T ;
  logic _025__R ;
  logic _025__C ;
  logic _025__X ;
  logic [13:0] _025__S ;
  logic [9:0] _026_;
  logic [9:0] _026__T ;
  logic [9:0] _026__R ;
  logic [9:0] _026__C ;
  logic [9:0] _026__X ;
  logic [13:0] _026__S ;
  logic [3:0] _027_;
  logic [3:0] _027__T ;
  logic [3:0] _027__R ;
  logic [3:0] _027__C ;
  logic [3:0] _027__X ;
  logic [13:0] _027__S ;
  logic _028_;
  logic _028__T ;
  logic _028__R ;
  logic _028__C ;
  logic _028__X ;
  logic [13:0] _028__S ;
  logic _029_;
  logic _029__T ;
  logic _029__R ;
  logic _029__C ;
  logic _029__X ;
  logic [13:0] _029__S ;
  logic _030_;
  logic _030__T ;
  logic _030__R ;
  logic _030__C ;
  logic _030__X ;
  logic [13:0] _030__S ;
  logic _031_;
  logic _031__T ;
  logic _031__R ;
  logic _031__C ;
  logic _031__X ;
  logic [13:0] _031__S ;
  logic _032_;
  logic _032__T ;
  logic _032__R ;
  logic _032__C ;
  logic _032__X ;
  logic [13:0] _032__S ;
  logic _033_;
  logic _033__T ;
  logic _033__R ;
  logic _033__C ;
  logic _033__X ;
  logic [13:0] _033__S ;
  logic _034_;
  logic _034__T ;
  logic _034__R ;
  logic _034__C ;
  logic _034__X ;
  logic [13:0] _034__S ;
  logic _035_;
  logic _035__T ;
  logic _035__R ;
  logic _035__C ;
  logic _035__X ;
  logic [13:0] _035__S ;
  logic _036_;
  logic _036__T ;
  logic _036__R ;
  logic _036__C ;
  logic _036__X ;
  logic [13:0] _036__S ;
  logic _037_;
  logic _037__T ;
  logic _037__R ;
  logic _037__C ;
  logic _037__X ;
  logic [13:0] _037__S ;
  logic _038_;
  logic _038__T ;
  logic _038__R ;
  logic _038__C ;
  logic _038__X ;
  logic [13:0] _038__S ;
  logic _039_;
  logic _039__T ;
  logic _039__R ;
  logic _039__C ;
  logic _039__X ;
  logic [13:0] _039__S ;
  logic _040_;
  logic _040__T ;
  logic _040__R ;
  logic _040__C ;
  logic _040__X ;
  logic [13:0] _040__S ;
  logic _041_;
  logic _041__T ;
  logic _041__R ;
  logic _041__C ;
  logic _041__X ;
  logic [13:0] _041__S ;
  logic _042_;
  logic _042__T ;
  logic _042__R ;
  logic _042__C ;
  logic _042__X ;
  logic [13:0] _042__S ;
  logic _043_;
  logic _043__T ;
  logic _043__R ;
  logic _043__C ;
  logic _043__X ;
  logic [13:0] _043__S ;
  logic _044_;
  logic _044__T ;
  logic _044__R ;
  logic _044__C ;
  logic _044__X ;
  logic [13:0] _044__S ;
  logic _045_;
  logic _045__T ;
  logic _045__R ;
  logic _045__C ;
  logic _045__X ;
  logic [13:0] _045__S ;
  logic _046_;
  logic _046__T ;
  logic _046__R ;
  logic _046__C ;
  logic _046__X ;
  logic [13:0] _046__S ;
  logic _047_;
  logic _047__T ;
  logic _047__R ;
  logic _047__C ;
  logic _047__X ;
  logic [13:0] _047__S ;
  logic _048_;
  logic _048__T ;
  logic _048__R ;
  logic _048__C ;
  logic _048__X ;
  logic [13:0] _048__S ;
  logic _049_;
  logic _049__T ;
  logic _049__R ;
  logic _049__C ;
  logic _049__X ;
  logic [13:0] _049__S ;
  logic _050_;
  logic _050__T ;
  logic _050__R ;
  logic _050__C ;
  logic _050__X ;
  logic [13:0] _050__S ;
  logic [3:0] _051_;
  logic [3:0] _051__T ;
  logic [3:0] _051__R ;
  logic [3:0] _051__C ;
  logic [3:0] _051__X ;
  logic [13:0] _051__S ;
  logic _052_;
  logic _052__T ;
  logic _052__R ;
  logic _052__C ;
  logic _052__X ;
  logic [13:0] _052__S ;
  logic _053_;
  logic _053__T ;
  logic _053__R ;
  logic _053__C ;
  logic _053__X ;
  logic [13:0] _053__S ;
  logic _054_;
  logic _054__T ;
  logic _054__R ;
  logic _054__C ;
  logic _054__X ;
  logic [13:0] _054__S ;
  logic _055_;
  logic _055__T ;
  logic _055__R ;
  logic _055__C ;
  logic _055__X ;
  logic [13:0] _055__S ;
  logic _056_;
  logic _056__T ;
  logic _056__R ;
  logic _056__C ;
  logic _056__X ;
  logic [13:0] _056__S ;
  logic _057_;
  logic _057__T ;
  logic _057__R ;
  logic _057__C ;
  logic _057__X ;
  logic [13:0] _057__S ;
  logic _058_;
  logic _058__T ;
  logic _058__R ;
  logic _058__C ;
  logic _058__X ;
  logic [13:0] _058__S ;
  logic _059_;
  logic _059__T ;
  logic _059__R ;
  logic _059__C ;
  logic _059__X ;
  logic [13:0] _059__S ;
  logic _060_;
  logic _060__T ;
  logic _060__R ;
  logic _060__C ;
  logic _060__X ;
  logic [13:0] _060__S ;
  logic _061_;
  logic _061__T ;
  logic _061__R ;
  logic _061__C ;
  logic _061__X ;
  logic [13:0] _061__S ;
  logic _062_;
  logic _062__T ;
  logic _062__R ;
  logic _062__C ;
  logic _062__X ;
  logic [13:0] _062__S ;
  logic _063_;
  logic _063__T ;
  logic _063__R ;
  logic _063__C ;
  logic _063__X ;
  logic [13:0] _063__S ;
  logic _064_;
  logic _064__T ;
  logic _064__R ;
  logic _064__C ;
  logic _064__X ;
  logic [13:0] _064__S ;
  logic [5:0] _065_;
  logic [5:0] _065__T ;
  logic [5:0] _065__R ;
  logic [5:0] _065__C ;
  logic [5:0] _065__X ;
  logic [13:0] _065__S ;
  logic _066_;
  logic _066__T ;
  logic _066__R ;
  logic _066__C ;
  logic _066__X ;
  logic [13:0] _066__S ;
  logic _067_;
  logic _067__T ;
  logic _067__R ;
  logic _067__C ;
  logic _067__X ;
  logic [13:0] _067__S ;
  logic _068_;
  logic _068__T ;
  logic _068__R ;
  logic _068__C ;
  logic _068__X ;
  logic [13:0] _068__S ;
  logic _069_;
  logic _069__T ;
  logic _069__R ;
  logic _069__C ;
  logic _069__X ;
  logic [13:0] _069__S ;
  logic _070_;
  logic _070__T ;
  logic _070__R ;
  logic _070__C ;
  logic _070__X ;
  logic [13:0] _070__S ;
  logic _071_;
  logic _071__T ;
  logic _071__R ;
  logic _071__C ;
  logic _071__X ;
  logic [13:0] _071__S ;
  logic _072_;
  logic _072__T ;
  logic _072__R ;
  logic _072__C ;
  logic _072__X ;
  logic [13:0] _072__S ;
  logic _073_;
  logic _073__T ;
  logic _073__R ;
  logic _073__C ;
  logic _073__X ;
  logic [13:0] _073__S ;
  logic _074_;
  logic _074__T ;
  logic _074__R ;
  logic _074__C ;
  logic _074__X ;
  logic [13:0] _074__S ;
  logic _075_;
  logic _075__T ;
  logic _075__R ;
  logic _075__C ;
  logic _075__X ;
  logic [13:0] _075__S ;
  logic _076_;
  logic _076__T ;
  logic _076__R ;
  logic _076__C ;
  logic _076__X ;
  logic [13:0] _076__S ;
  logic _077_;
  logic _077__T ;
  logic _077__R ;
  logic _077__C ;
  logic _077__X ;
  logic [13:0] _077__S ;
  logic _078_;
  logic _078__T ;
  logic _078__R ;
  logic _078__C ;
  logic _078__X ;
  logic [13:0] _078__S ;
  logic _079_;
  logic _079__T ;
  logic _079__R ;
  logic _079__C ;
  logic _079__X ;
  logic [13:0] _079__S ;
  logic _080_;
  logic _080__T ;
  logic _080__R ;
  logic _080__C ;
  logic _080__X ;
  logic [13:0] _080__S ;
  logic _081_;
  logic _081__T ;
  logic _081__R ;
  logic _081__C ;
  logic _081__X ;
  logic [13:0] _081__S ;
  logic _082_;
  logic _082__T ;
  logic _082__R ;
  logic _082__C ;
  logic _082__X ;
  logic [13:0] _082__S ;
  logic _083_;
  logic _083__T ;
  logic _083__R ;
  logic _083__C ;
  logic _083__X ;
  logic [13:0] _083__S ;
  logic _084_;
  logic _084__T ;
  logic _084__R ;
  logic _084__C ;
  logic _084__X ;
  logic [13:0] _084__S ;
  logic _085_;
  logic _085__T ;
  logic _085__R ;
  logic _085__C ;
  logic _085__X ;
  logic [13:0] _085__S ;
  logic _086_;
  logic _086__T ;
  logic _086__R ;
  logic _086__C ;
  logic _086__X ;
  logic [13:0] _086__S ;
  logic _087_;
  logic _087__T ;
  logic _087__R ;
  logic _087__C ;
  logic _087__X ;
  logic [13:0] _087__S ;
  logic _088_;
  logic _088__T ;
  logic _088__R ;
  logic _088__C ;
  logic _088__X ;
  logic [13:0] _088__S ;
  logic _089_;
  logic _089__T ;
  logic _089__R ;
  logic _089__C ;
  logic _089__X ;
  logic [13:0] _089__S ;
  logic _090_;
  logic _090__T ;
  logic _090__R ;
  logic _090__C ;
  logic _090__X ;
  logic [13:0] _090__S ;
  logic _091_;
  logic _091__T ;
  logic _091__R ;
  logic _091__C ;
  logic _091__X ;
  logic [13:0] _091__S ;
  logic _092_;
  logic _092__T ;
  logic _092__R ;
  logic _092__C ;
  logic _092__X ;
  logic [13:0] _092__S ;
  logic _093_;
  logic _093__T ;
  logic _093__R ;
  logic _093__C ;
  logic _093__X ;
  logic [13:0] _093__S ;
  logic _094_;
  logic _094__T ;
  logic _094__R ;
  logic _094__C ;
  logic _094__X ;
  logic [13:0] _094__S ;
  logic _095_;
  logic _095__T ;
  logic _095__R ;
  logic _095__C ;
  logic _095__X ;
  logic [13:0] _095__S ;
  logic _096_;
  logic _096__T ;
  logic _096__R ;
  logic _096__C ;
  logic _096__X ;
  logic [13:0] _096__S ;
  logic _097_;
  logic _097__T ;
  logic _097__R ;
  logic _097__C ;
  logic _097__X ;
  logic [13:0] _097__S ;
  logic _098_;
  logic _098__T ;
  logic _098__R ;
  logic _098__C ;
  logic _098__X ;
  logic [13:0] _098__S ;
  logic _099_;
  logic _099__T ;
  logic _099__R ;
  logic _099__C ;
  logic _099__X ;
  logic [13:0] _099__S ;
  logic _100_;
  logic _100__T ;
  logic _100__R ;
  logic _100__C ;
  logic _100__X ;
  logic [13:0] _100__S ;
  logic _101_;
  logic _101__T ;
  logic _101__R ;
  logic _101__C ;
  logic _101__X ;
  logic [13:0] _101__S ;
  logic _102_;
  logic _102__T ;
  logic _102__R ;
  logic _102__C ;
  logic _102__X ;
  logic [13:0] _102__S ;
  logic Fp17ToFp16_and_cse;
  logic Fp17ToFp16_and_cse_T ;
  logic Fp17ToFp16_and_cse_R ;
  logic Fp17ToFp16_and_cse_C ;
  logic Fp17ToFp16_and_cse_X ;
  logic [13:0] Fp17ToFp16_and_cse_S ;
  logic [9:0] FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl;
  logic [9:0] FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_T ;
  logic [9:0] FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_R ;
  logic [9:0] FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_C ;
  logic [9:0] FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_X ;
  logic [13:0] FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_S ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_acc_itm_6_1;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_acc_itm_6_1_T ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_acc_itm_6_1_R ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_acc_itm_6_1_C ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_acc_itm_6_1_X ;
  logic [13:0] FpExpoWidthDec_6U_5U_10U_1U_1U_acc_itm_6_1_S ;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_T ;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R ;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C ;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X ;
  logic [13:0] FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_S ;
  logic [14:0] FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1;
  logic [14:0]  FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_T ;
  logic [14:0]  FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_PREV_VAL1 ;
  logic [14:0]  FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_PREV_VAL2 ;
  logic [14:0]  FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R ;
  logic [14:0]  FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X ;
  logic [14:0]  FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C ;
  logic [13:0] FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_S ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_t_flag ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_r_flag ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_S = 505 ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_T ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_PREV_VAL1 ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_PREV_VAL2 ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_R ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_X ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_C ;
  logic [13:0] FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_S ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_t_flag ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_r_flag ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_S = 506 ;
  logic [3:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_FpExpoWidthDec_6U_5U_10U_1U_1U_else_and_2_nl;
  logic [3:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_FpExpoWidthDec_6U_5U_10U_1U_1U_else_and_2_nl_T ;
  logic [3:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_FpExpoWidthDec_6U_5U_10U_1U_1U_else_and_2_nl_R ;
  logic [3:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_FpExpoWidthDec_6U_5U_10U_1U_1U_else_and_2_nl_C ;
  logic [3:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_FpExpoWidthDec_6U_5U_10U_1U_1U_else_and_2_nl_X ;
  logic [13:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_FpExpoWidthDec_6U_5U_10U_1U_1U_else_and_2_nl_S ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_itm_6_1;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_itm_6_1_T ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_itm_6_1_R ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_itm_6_1_C ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_itm_6_1_X ;
  logic [13:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_itm_6_1_S ;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_T ;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R ;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C ;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X ;
  logic [13:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_S ;
  logic [2:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2;
  logic [2:0]  FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_T ;
  logic [2:0]  FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_PREV_VAL1 ;
  logic [2:0]  FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_PREV_VAL2 ;
  logic [2:0]  FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_R ;
  logic [2:0]  FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_X ;
  logic [2:0]  FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_C ;
  logic [13:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_S ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_t_flag ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_r_flag ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_S = 507 ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_T ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_PREV_VAL1 ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_PREV_VAL2 ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_R ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_X ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_C ;
  logic [13:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_S ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_t_flag ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_r_flag ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_S = 508 ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_T ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_PREV_VAL1 ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_PREV_VAL2 ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_R ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_X ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_C ;
  logic [13:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_S ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_t_flag ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_r_flag ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_S = 509 ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_T ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_PREV_VAL1 ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_PREV_VAL2 ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_R ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_X ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_C ;
  logic [13:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_S ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_t_flag ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_r_flag ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_S = 510 ;
  logic [3:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl;
  logic [3:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl_T ;
  logic [3:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl_R ;
  logic [3:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl_C ;
  logic [3:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl_X ;
  logic [13:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl_S ;
  logic [9:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl;
  logic [9:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl_T ;
  logic [9:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl_R ;
  logic [9:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl_C ;
  logic [9:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl_X ;
  logic [13:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl_S ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_itm_5_1;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_itm_5_1_T ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_itm_5_1_R ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_itm_5_1_C ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_itm_5_1_X ;
  logic [13:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_itm_5_1_S ;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_T ;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R ;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C ;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X ;
  logic [13:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_S ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_T ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_PREV_VAL1 ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_PREV_VAL2 ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_R ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_X ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_C ;
  logic [13:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_S ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_t_flag ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_r_flag ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_S = 511 ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_T ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_PREV_VAL1 ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_PREV_VAL2 ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_R ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_X ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_C ;
  logic [13:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_S ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_t_flag ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_r_flag ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_S = 512 ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_T ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_PREV_VAL1 ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_PREV_VAL2 ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_R ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_X ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_C ;
  logic [13:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_S ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_t_flag ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_r_flag ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_S = 513 ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_T ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_PREV_VAL1 ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_PREV_VAL2 ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_R ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_X ;
  logic  FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_C ;
  logic [13:0] FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_S ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_t_flag ;
  logic FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_r_flag ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_S = 514 ;
  logic [3:0] FpExpoWidthDec_6U_5U_10U_1U_1U_mux_6_nl;
  logic [3:0] FpExpoWidthDec_6U_5U_10U_1U_1U_mux_6_nl_T ;
  logic [3:0] FpExpoWidthDec_6U_5U_10U_1U_1U_mux_6_nl_R ;
  logic [3:0] FpExpoWidthDec_6U_5U_10U_1U_1U_mux_6_nl_C ;
  logic [3:0] FpExpoWidthDec_6U_5U_10U_1U_1U_mux_6_nl_X ;
  logic [13:0] FpExpoWidthDec_6U_5U_10U_1U_1U_mux_6_nl_S ;
  logic [9:0] FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl;
  logic [9:0] FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_T ;
  logic [9:0] FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_R ;
  logic [9:0] FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_C ;
  logic [9:0] FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_X ;
  logic [13:0] FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_S ;
  logic FpMantDecShiftRight_10U_6U_10U_carry_and_nl;
  logic FpMantDecShiftRight_10U_6U_10U_carry_and_nl_T ;
  logic FpMantDecShiftRight_10U_6U_10U_carry_and_nl_R ;
  logic FpMantDecShiftRight_10U_6U_10U_carry_and_nl_C ;
  logic FpMantDecShiftRight_10U_6U_10U_carry_and_nl_X ;
  logic [13:0] FpMantDecShiftRight_10U_6U_10U_carry_and_nl_S ;
  logic [9:0] FpMantDecShiftRight_10U_6U_10U_guard_bits_9_0_sva;
  logic [9:0] FpMantDecShiftRight_10U_6U_10U_guard_bits_9_0_sva_T ;
  logic [9:0] FpMantDecShiftRight_10U_6U_10U_guard_bits_9_0_sva_R ;
  logic [9:0] FpMantDecShiftRight_10U_6U_10U_guard_bits_9_0_sva_C ;
  logic [9:0] FpMantDecShiftRight_10U_6U_10U_guard_bits_9_0_sva_X ;
  logic [13:0] FpMantDecShiftRight_10U_6U_10U_guard_bits_9_0_sva_S ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_guard_mask_sva;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_T ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_R ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_C ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_X ;
  logic [13:0] FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_S ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_itm;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_itm_T ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_itm_R ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_itm_C ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_itm_X ;
  logic [13:0] FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_itm_S ;
  logic [9:0] FpMantDecShiftRight_10U_6U_10U_least_bits_9_0_sva;
  logic [9:0] FpMantDecShiftRight_10U_6U_10U_least_bits_9_0_sva_T ;
  logic [9:0] FpMantDecShiftRight_10U_6U_10U_least_bits_9_0_sva_R ;
  logic [9:0] FpMantDecShiftRight_10U_6U_10U_least_bits_9_0_sva_C ;
  logic [9:0] FpMantDecShiftRight_10U_6U_10U_least_bits_9_0_sva_X ;
  logic [13:0] FpMantDecShiftRight_10U_6U_10U_least_bits_9_0_sva_S ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_least_mask_sva;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_least_mask_sva_T ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_least_mask_sva_R ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_least_mask_sva_C ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_least_mask_sva_X ;
  logic [13:0] FpMantDecShiftRight_10U_6U_10U_least_mask_sva_S ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_T ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_R ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_C ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_X ;
  logic [13:0] FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_S ;
  logic [9:0] FpMantDecShiftRight_10U_6U_10U_stick_bits_9_0_sva;
  logic [9:0] FpMantDecShiftRight_10U_6U_10U_stick_bits_9_0_sva_T ;
  logic [9:0] FpMantDecShiftRight_10U_6U_10U_stick_bits_9_0_sva_R ;
  logic [9:0] FpMantDecShiftRight_10U_6U_10U_stick_bits_9_0_sva_C ;
  logic [9:0] FpMantDecShiftRight_10U_6U_10U_stick_bits_9_0_sva_X ;
  logic [13:0] FpMantDecShiftRight_10U_6U_10U_stick_bits_9_0_sva_S ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_stick_mask_sva;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_T ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_R ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_C ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_X ;
  logic [13:0] FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_S ;
  logic IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2;
  logic  IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_T ;
  logic  IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_PREV_VAL1 ;
  logic  IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_PREV_VAL2 ;
  logic  IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_R ;
  logic  IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_X ;
  logic  IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_C ;
  logic [13:0] IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_S ;
  logic IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_t_flag ;
  logic IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_r_flag ;
  assign IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_S = 515 ;
  logic IsNaN_6U_10U_nor_itm_2;
  logic  IsNaN_6U_10U_nor_itm_2_T ;
  logic  IsNaN_6U_10U_nor_itm_2_PREV_VAL1 ;
  logic  IsNaN_6U_10U_nor_itm_2_PREV_VAL2 ;
  logic  IsNaN_6U_10U_nor_itm_2_R ;
  logic  IsNaN_6U_10U_nor_itm_2_X ;
  logic  IsNaN_6U_10U_nor_itm_2_C ;
  logic [13:0] IsNaN_6U_10U_nor_itm_2_S ;
  logic IsNaN_6U_10U_nor_itm_2_t_flag ;
  logic IsNaN_6U_10U_nor_itm_2_r_flag ;
  assign IsNaN_6U_10U_nor_itm_2_S = 516 ;
  logic and_35_rgt;
  logic and_35_rgt_T ;
  logic and_35_rgt_R ;
  logic and_35_rgt_C ;
  logic and_35_rgt_X ;
  logic [13:0] and_35_rgt_S ;
  logic and_37_rgt;
  logic and_37_rgt_T ;
  logic and_37_rgt_R ;
  logic and_37_rgt_C ;
  logic and_37_rgt_X ;
  logic [13:0] and_37_rgt_S ;
  logic and_60_nl;
  logic and_60_nl_T ;
  logic and_60_nl_R ;
  logic and_60_nl_C ;
  logic and_60_nl_X ;
  logic [13:0] and_60_nl_S ;
  logic and_6_mdf;
  logic and_6_mdf_T ;
  logic and_6_mdf_R ;
  logic and_6_mdf_C ;
  logic and_6_mdf_X ;
  logic [13:0] and_6_mdf_S ;
  logic and_dcpl_11;
  logic and_dcpl_11_T ;
  logic and_dcpl_11_R ;
  logic and_dcpl_11_C ;
  logic and_dcpl_11_X ;
  logic [13:0] and_dcpl_11_S ;
  logic and_dcpl_14;
  logic and_dcpl_14_T ;
  logic and_dcpl_14_R ;
  logic and_dcpl_14_C ;
  logic and_dcpl_14_X ;
  logic [13:0] and_dcpl_14_S ;
  logic and_dcpl_6;
  logic and_dcpl_6_T ;
  logic and_dcpl_6_R ;
  logic and_dcpl_6_C ;
  logic and_dcpl_6_X ;
  logic [13:0] and_dcpl_6_S ;
  logic and_dcpl_8;
  logic and_dcpl_8_T ;
  logic and_dcpl_8_R ;
  logic and_dcpl_8_C ;
  logic and_dcpl_8_X ;
  logic [13:0] and_dcpl_8_S ;
  logic and_tmp_1;
  logic and_tmp_1_T ;
  logic and_tmp_1_R ;
  logic and_tmp_1_C ;
  logic and_tmp_1_X ;
  logic [13:0] and_tmp_1_S ;
  output chn_a_rsc_lz;
  logic chn_a_rsc_lz ;
  output chn_a_rsc_lz_T ;
  logic chn_a_rsc_lz_T ;
  logic chn_a_rsc_lz_R ;
  logic chn_a_rsc_lz_C ;
  logic chn_a_rsc_lz_X ;
  logic [13:0] chn_a_rsc_lz_S ;
  input chn_a_rsc_lz_R0 ;
  input chn_a_rsc_lz_C0 ;
  input chn_a_rsc_lz_X0 ;
  output [13:0] chn_a_rsc_lz_S ;
  input chn_a_rsc_vz;
  input chn_a_rsc_vz_T ;
  input [13:0] chn_a_rsc_vz_S ;
  output chn_a_rsc_vz_R ;
  output chn_a_rsc_vz_X ;
  output chn_a_rsc_vz_C ;
  input [16:0] chn_a_rsc_z;
  input [16:0] chn_a_rsc_z_T ;
  input [13:0] chn_a_rsc_z_S ;
  output [16:0] chn_a_rsc_z_R ;
  output [16:0] chn_a_rsc_z_X ;
  output [16:0] chn_a_rsc_z_C ;
  logic chn_a_rsci_bawt;
  logic chn_a_rsci_bawt_T ;
  logic chn_a_rsci_bawt_R ;
  logic chn_a_rsci_bawt_C ;
  logic chn_a_rsci_bawt_X ;
  logic [13:0] chn_a_rsci_bawt_S ;
  logic [16:0] chn_a_rsci_d_mxwt;
  logic [16:0] chn_a_rsci_d_mxwt_T ;
  logic [16:0] chn_a_rsci_d_mxwt_R ;
  logic [16:0] chn_a_rsci_d_mxwt_C ;
  logic [16:0] chn_a_rsci_d_mxwt_X ;
  logic [13:0] chn_a_rsci_d_mxwt_S ;
  logic chn_a_rsci_iswt0;
  logic  chn_a_rsci_iswt0_T ;
  logic  chn_a_rsci_iswt0_PREV_VAL1 ;
  logic  chn_a_rsci_iswt0_PREV_VAL2 ;
  logic  chn_a_rsci_iswt0_R ;
  logic  chn_a_rsci_iswt0_X ;
  logic  chn_a_rsci_iswt0_C ;
  logic [13:0] chn_a_rsci_iswt0_S ;
  logic chn_a_rsci_iswt0_t_flag ;
  logic chn_a_rsci_iswt0_r_flag ;
  assign chn_a_rsci_iswt0_S = 517 ;
  logic chn_a_rsci_ld_core_psct;
  logic  chn_a_rsci_ld_core_psct_T ;
  logic  chn_a_rsci_ld_core_psct_PREV_VAL1 ;
  logic  chn_a_rsci_ld_core_psct_PREV_VAL2 ;
  logic  chn_a_rsci_ld_core_psct_R ;
  logic  chn_a_rsci_ld_core_psct_X ;
  logic  chn_a_rsci_ld_core_psct_C ;
  logic [13:0] chn_a_rsci_ld_core_psct_S ;
  logic chn_a_rsci_ld_core_psct_t_flag ;
  logic chn_a_rsci_ld_core_psct_r_flag ;
  assign chn_a_rsci_ld_core_psct_S = 518 ;
  logic chn_a_rsci_ld_core_psct_mx0c0;
  logic chn_a_rsci_ld_core_psct_mx0c0_T ;
  logic chn_a_rsci_ld_core_psct_mx0c0_R ;
  logic chn_a_rsci_ld_core_psct_mx0c0_C ;
  logic chn_a_rsci_ld_core_psct_mx0c0_X ;
  logic [13:0] chn_a_rsci_ld_core_psct_mx0c0_S ;
  input chn_a_rsci_oswt;
  input chn_a_rsci_oswt_T ;
  input [13:0] chn_a_rsci_oswt_S ;
  output chn_a_rsci_oswt_R ;
  output chn_a_rsci_oswt_X ;
  output chn_a_rsci_oswt_C ;
  output chn_a_rsci_oswt_unreg;
  logic chn_a_rsci_oswt_unreg ;
  output chn_a_rsci_oswt_unreg_T ;
  logic chn_a_rsci_oswt_unreg_T ;
  logic chn_a_rsci_oswt_unreg_R ;
  logic chn_a_rsci_oswt_unreg_C ;
  logic chn_a_rsci_oswt_unreg_X ;
  logic [13:0] chn_a_rsci_oswt_unreg_S ;
  input chn_a_rsci_oswt_unreg_R0 ;
  input chn_a_rsci_oswt_unreg_C0 ;
  input chn_a_rsci_oswt_unreg_X0 ;
  output [13:0] chn_a_rsci_oswt_unreg_S ;
  logic chn_a_rsci_wen_comp;
  logic chn_a_rsci_wen_comp_T ;
  logic chn_a_rsci_wen_comp_R ;
  logic chn_a_rsci_wen_comp_C ;
  logic chn_a_rsci_wen_comp_X ;
  logic [13:0] chn_a_rsci_wen_comp_S ;
  logic chn_o_and_1_cse;
  logic chn_o_and_1_cse_T ;
  logic chn_o_and_1_cse_R ;
  logic chn_o_and_1_cse_C ;
  logic chn_o_and_1_cse_X ;
  logic [13:0] chn_o_and_1_cse_S ;
  output chn_o_rsc_lz;
  logic chn_o_rsc_lz ;
  output chn_o_rsc_lz_T ;
  logic chn_o_rsc_lz_T ;
  logic chn_o_rsc_lz_R ;
  logic chn_o_rsc_lz_C ;
  logic chn_o_rsc_lz_X ;
  logic [13:0] chn_o_rsc_lz_S ;
  input chn_o_rsc_lz_R0 ;
  input chn_o_rsc_lz_C0 ;
  input chn_o_rsc_lz_X0 ;
  output [13:0] chn_o_rsc_lz_S ;
  input chn_o_rsc_vz;
  input chn_o_rsc_vz_T ;
  input [13:0] chn_o_rsc_vz_S ;
  output chn_o_rsc_vz_R ;
  output chn_o_rsc_vz_X ;
  output chn_o_rsc_vz_C ;
  output [15:0] chn_o_rsc_z;
  logic [15:0] chn_o_rsc_z ;
  output [15:0] chn_o_rsc_z_T ;
  logic [15:0] chn_o_rsc_z_T ;
  logic [15:0] chn_o_rsc_z_R ;
  logic [15:0] chn_o_rsc_z_C ;
  logic [15:0] chn_o_rsc_z_X ;
  logic [13:0] chn_o_rsc_z_S ;
  input [15:0] chn_o_rsc_z_R0 ;
  input [15:0] chn_o_rsc_z_C0 ;
  input [15:0] chn_o_rsc_z_X0 ;
  output [13:0] chn_o_rsc_z_S ;
  logic chn_o_rsci_bawt;
  logic chn_o_rsci_bawt_T ;
  logic chn_o_rsci_bawt_R ;
  logic chn_o_rsci_bawt_C ;
  logic chn_o_rsci_bawt_X ;
  logic [13:0] chn_o_rsci_bawt_S ;
  logic [3:0] chn_o_rsci_d_13_10;
  logic [3:0]  chn_o_rsci_d_13_10_T ;
  logic [3:0]  chn_o_rsci_d_13_10_PREV_VAL1 ;
  logic [3:0]  chn_o_rsci_d_13_10_PREV_VAL2 ;
  logic [3:0]  chn_o_rsci_d_13_10_R ;
  logic [3:0]  chn_o_rsci_d_13_10_X ;
  logic [3:0]  chn_o_rsci_d_13_10_C ;
  logic [13:0] chn_o_rsci_d_13_10_S ;
  logic chn_o_rsci_d_13_10_t_flag ;
  logic chn_o_rsci_d_13_10_r_flag ;
  assign chn_o_rsci_d_13_10_S = 519 ;
  logic chn_o_rsci_d_14;
  logic  chn_o_rsci_d_14_T ;
  logic  chn_o_rsci_d_14_PREV_VAL1 ;
  logic  chn_o_rsci_d_14_PREV_VAL2 ;
  logic  chn_o_rsci_d_14_R ;
  logic  chn_o_rsci_d_14_X ;
  logic  chn_o_rsci_d_14_C ;
  logic [13:0] chn_o_rsci_d_14_S ;
  logic chn_o_rsci_d_14_t_flag ;
  logic chn_o_rsci_d_14_r_flag ;
  assign chn_o_rsci_d_14_S = 520 ;
  logic chn_o_rsci_d_15;
  logic  chn_o_rsci_d_15_T ;
  logic  chn_o_rsci_d_15_PREV_VAL1 ;
  logic  chn_o_rsci_d_15_PREV_VAL2 ;
  logic  chn_o_rsci_d_15_R ;
  logic  chn_o_rsci_d_15_X ;
  logic  chn_o_rsci_d_15_C ;
  logic [13:0] chn_o_rsci_d_15_S ;
  logic chn_o_rsci_d_15_t_flag ;
  logic chn_o_rsci_d_15_r_flag ;
  assign chn_o_rsci_d_15_S = 521 ;
  logic [9:0] chn_o_rsci_d_9_0;
  logic [9:0]  chn_o_rsci_d_9_0_T ;
  logic [9:0]  chn_o_rsci_d_9_0_PREV_VAL1 ;
  logic [9:0]  chn_o_rsci_d_9_0_PREV_VAL2 ;
  logic [9:0]  chn_o_rsci_d_9_0_R ;
  logic [9:0]  chn_o_rsci_d_9_0_X ;
  logic [9:0]  chn_o_rsci_d_9_0_C ;
  logic [13:0] chn_o_rsci_d_9_0_S ;
  logic chn_o_rsci_d_9_0_t_flag ;
  logic chn_o_rsci_d_9_0_r_flag ;
  assign chn_o_rsci_d_9_0_S = 522 ;
  logic chn_o_rsci_d_9_0_mx0c1;
  logic chn_o_rsci_d_9_0_mx0c1_T ;
  logic chn_o_rsci_d_9_0_mx0c1_R ;
  logic chn_o_rsci_d_9_0_mx0c1_C ;
  logic chn_o_rsci_d_9_0_mx0c1_X ;
  logic [13:0] chn_o_rsci_d_9_0_mx0c1_S ;
  logic chn_o_rsci_iswt0;
  logic  chn_o_rsci_iswt0_T ;
  logic  chn_o_rsci_iswt0_PREV_VAL1 ;
  logic  chn_o_rsci_iswt0_PREV_VAL2 ;
  logic  chn_o_rsci_iswt0_R ;
  logic  chn_o_rsci_iswt0_X ;
  logic  chn_o_rsci_iswt0_C ;
  logic [13:0] chn_o_rsci_iswt0_S ;
  logic chn_o_rsci_iswt0_t_flag ;
  logic chn_o_rsci_iswt0_r_flag ;
  assign chn_o_rsci_iswt0_S = 523 ;
  input chn_o_rsci_oswt;
  input chn_o_rsci_oswt_T ;
  input [13:0] chn_o_rsci_oswt_S ;
  output chn_o_rsci_oswt_R ;
  output chn_o_rsci_oswt_X ;
  output chn_o_rsci_oswt_C ;
  output chn_o_rsci_oswt_unreg;
  logic chn_o_rsci_oswt_unreg ;
  output chn_o_rsci_oswt_unreg_T ;
  logic chn_o_rsci_oswt_unreg_T ;
  logic chn_o_rsci_oswt_unreg_R ;
  logic chn_o_rsci_oswt_unreg_C ;
  logic chn_o_rsci_oswt_unreg_X ;
  logic [13:0] chn_o_rsci_oswt_unreg_S ;
  input chn_o_rsci_oswt_unreg_R0 ;
  input chn_o_rsci_oswt_unreg_C0 ;
  input chn_o_rsci_oswt_unreg_X0 ;
  output [13:0] chn_o_rsci_oswt_unreg_S ;
  logic chn_o_rsci_wen_comp;
  logic chn_o_rsci_wen_comp_T ;
  logic chn_o_rsci_wen_comp_R ;
  logic chn_o_rsci_wen_comp_C ;
  logic chn_o_rsci_wen_comp_X ;
  logic [13:0] chn_o_rsci_wen_comp_S ;
  logic core_wen;
  logic core_wen_T ;
  logic core_wen_R ;
  logic core_wen_C ;
  logic core_wen_X ;
  logic [13:0] core_wen_S ;
  logic core_wten;
  logic core_wten_T ;
  logic core_wten_R ;
  logic core_wten_C ;
  logic core_wten_X ;
  logic [13:0] core_wten_S ;
  logic [1:0] fsm_output;
  logic [1:0] fsm_output_T ;
  logic [1:0] fsm_output_R ;
  logic [1:0] fsm_output_C ;
  logic [1:0] fsm_output_X ;
  logic [13:0] fsm_output_S ;
  logic main_stage_v_1;
  logic  main_stage_v_1_T ;
  logic  main_stage_v_1_PREV_VAL1 ;
  logic  main_stage_v_1_PREV_VAL2 ;
  logic  main_stage_v_1_R ;
  logic  main_stage_v_1_X ;
  logic  main_stage_v_1_C ;
  logic [13:0] main_stage_v_1_S ;
  logic main_stage_v_1_t_flag ;
  logic main_stage_v_1_r_flag ;
  assign main_stage_v_1_S = 524 ;
  logic main_stage_v_1_mx0c1;
  logic main_stage_v_1_mx0c1_T ;
  logic main_stage_v_1_mx0c1_R ;
  logic main_stage_v_1_mx0c1_C ;
  logic main_stage_v_1_mx0c1_X ;
  logic [13:0] main_stage_v_1_mx0c1_S ;
  logic mux_1_itm;
  logic mux_1_itm_T ;
  logic mux_1_itm_R ;
  logic mux_1_itm_C ;
  logic mux_1_itm_X ;
  logic [13:0] mux_1_itm_S ;
  logic mux_2_nl;
  logic mux_2_nl_T ;
  logic mux_2_nl_R ;
  logic mux_2_nl_C ;
  logic mux_2_nl_X ;
  logic [13:0] mux_2_nl_S ;
  logic mux_3_nl;
  logic mux_3_nl_T ;
  logic mux_3_nl_R ;
  logic mux_3_nl_C ;
  logic mux_3_nl_X ;
  logic [13:0] mux_3_nl_S ;
  logic mux_4_nl;
  logic mux_4_nl_T ;
  logic mux_4_nl_R ;
  logic mux_4_nl_C ;
  logic mux_4_nl_X ;
  logic [13:0] mux_4_nl_S ;
  logic mux_5_nl;
  logic mux_5_nl_T ;
  logic mux_5_nl_R ;
  logic mux_5_nl_C ;
  logic mux_5_nl_X ;
  logic [13:0] mux_5_nl_S ;
  logic mux_6_nl;
  logic mux_6_nl_T ;
  logic mux_6_nl_R ;
  logic mux_6_nl_C ;
  logic mux_6_nl_X ;
  logic [13:0] mux_6_nl_S ;
  logic mux_tmp;
  logic mux_tmp_T ;
  logic mux_tmp_R ;
  logic mux_tmp_C ;
  logic mux_tmp_X ;
  logic [13:0] mux_tmp_S ;
  logic [7:0] nl_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl;
  logic [7:0] nl_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_T ;
  logic [7:0] nl_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R ;
  logic [7:0] nl_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C ;
  logic [7:0] nl_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X ;
  logic [13:0] nl_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_S ;
  logic [7:0] nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl;
  logic [7:0] nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_T ;
  logic [7:0] nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R ;
  logic [7:0] nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C ;
  logic [7:0] nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X ;
  logic [13:0] nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_S ;
  logic [2:0] nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2;
  logic [2:0] nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_T ;
  logic [2:0] nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_R ;
  logic [2:0] nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_C ;
  logic [2:0] nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_X ;
  logic [13:0] nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_S ;
  logic [6:0] nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl;
  logic [6:0] nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_T ;
  logic [6:0] nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R ;
  logic [6:0] nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C ;
  logic [6:0] nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X ;
  logic [13:0] nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_S ;
  logic [4:0] nl_FpMantDecShiftRight_10U_6U_10U_guard_mask_lshift_rg_s;
  logic [4:0] nl_FpMantDecShiftRight_10U_6U_10U_guard_mask_lshift_rg_s_T ;
  logic [4:0] nl_FpMantDecShiftRight_10U_6U_10U_guard_mask_lshift_rg_s_R ;
  logic [4:0] nl_FpMantDecShiftRight_10U_6U_10U_guard_mask_lshift_rg_s_C ;
  logic [4:0] nl_FpMantDecShiftRight_10U_6U_10U_guard_mask_lshift_rg_s_X ;
  logic [13:0] nl_FpMantDecShiftRight_10U_6U_10U_guard_mask_lshift_rg_s_S ;
  logic [9:0] nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_a;
  logic [9:0] nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_a_T ;
  logic [9:0] nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_a_R ;
  logic [9:0] nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_a_C ;
  logic [9:0] nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_a_X ;
  logic [13:0] nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_a_S ;
  logic [3:0] nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s;
  logic [3:0] nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_T ;
  logic [3:0] nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_R ;
  logic [3:0] nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_C ;
  logic [3:0] nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_X ;
  logic [13:0] nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_S ;
  logic [3:0] nl_FpMantDecShiftRight_10U_6U_10U_least_mask_lshift_rg_s;
  logic [3:0] nl_FpMantDecShiftRight_10U_6U_10U_least_mask_lshift_rg_s_T ;
  logic [3:0] nl_FpMantDecShiftRight_10U_6U_10U_least_mask_lshift_rg_s_R ;
  logic [3:0] nl_FpMantDecShiftRight_10U_6U_10U_least_mask_lshift_rg_s_C ;
  logic [3:0] nl_FpMantDecShiftRight_10U_6U_10U_least_mask_lshift_rg_s_X ;
  logic [13:0] nl_FpMantDecShiftRight_10U_6U_10U_least_mask_lshift_rg_s_S ;
  logic [11:0] nl_FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva;
  logic [11:0] nl_FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_T ;
  logic [11:0] nl_FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_R ;
  logic [11:0] nl_FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_C ;
  logic [11:0] nl_FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_X ;
  logic [13:0] nl_FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_S ;
  logic [11:0] nl_FpMantDecShiftRight_10U_6U_10U_stick_mask_sva;
  logic [11:0] nl_FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_T ;
  logic [11:0] nl_FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_R ;
  logic [11:0] nl_FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_C ;
  logic [11:0] nl_FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_X ;
  logic [13:0] nl_FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_S ;
  logic [15:0] nl_HLS_fp17_to_fp16_core_chn_o_rsci_inst_chn_o_rsci_d;
  logic [15:0] nl_HLS_fp17_to_fp16_core_chn_o_rsci_inst_chn_o_rsci_d_T ;
  logic [15:0] nl_HLS_fp17_to_fp16_core_chn_o_rsci_inst_chn_o_rsci_d_R ;
  logic [15:0] nl_HLS_fp17_to_fp16_core_chn_o_rsci_inst_chn_o_rsci_d_C ;
  logic [15:0] nl_HLS_fp17_to_fp16_core_chn_o_rsci_inst_chn_o_rsci_d_X ;
  logic [13:0] nl_HLS_fp17_to_fp16_core_chn_o_rsci_inst_chn_o_rsci_d_S ;
  logic nor_5_cse;
  logic nor_5_cse_T ;
  logic nor_5_cse_R ;
  logic nor_5_cse_C ;
  logic nor_5_cse_X ;
  logic [13:0] nor_5_cse_S ;
  logic nor_7_nl;
  logic nor_7_nl_T ;
  logic nor_7_nl_R ;
  logic nor_7_nl_C ;
  logic nor_7_nl_X ;
  logic [13:0] nor_7_nl_S ;
  logic nor_nl;
  logic nor_nl_T ;
  logic nor_nl_R ;
  logic nor_nl_C ;
  logic nor_nl_X ;
  logic [13:0] nor_nl_S ;
  input nvdla_core_clk;
  input nvdla_core_clk_T ;
  input [13:0] nvdla_core_clk_S ;
  output nvdla_core_clk_R ;
  output nvdla_core_clk_X ;
  output nvdla_core_clk_C ;
  input nvdla_core_rstn;
  input nvdla_core_rstn_T ;
  input [13:0] nvdla_core_rstn_S ;
  output nvdla_core_rstn_R ;
  output nvdla_core_rstn_X ;
  output nvdla_core_rstn_C ;
  logic or_10_nl;
  logic or_10_nl_T ;
  logic or_10_nl_R ;
  logic or_10_nl_C ;
  logic or_10_nl_X ;
  logic [13:0] or_10_nl_S ;
  logic or_2_nl;
  logic or_2_nl_T ;
  logic or_2_nl_R ;
  logic or_2_nl_C ;
  logic or_2_nl_X ;
  logic [13:0] or_2_nl_S ;
  logic or_3_nl;
  logic or_3_nl_T ;
  logic or_3_nl_R ;
  logic or_3_nl_C ;
  logic or_3_nl_X ;
  logic [13:0] or_3_nl_S ;
  logic or_6_nl;
  logic or_6_nl_T ;
  logic or_6_nl_R ;
  logic or_6_nl_C ;
  logic or_6_nl_X ;
  logic [13:0] or_6_nl_S ;
  logic or_cse;
  logic or_cse_T ;
  logic or_cse_R ;
  logic or_cse_C ;
  logic or_cse_X ;
  logic [13:0] or_cse_S ;
  logic or_tmp_19;
  logic or_tmp_19_T ;
  logic or_tmp_19_R ;
  logic or_tmp_19_C ;
  logic or_tmp_19_X ;
  logic [13:0] or_tmp_19_S ;
  logic or_tmp_7;
  logic or_tmp_7_T ;
  logic or_tmp_7_R ;
  logic or_tmp_7_C ;
  logic or_tmp_7_X ;
  logic [13:0] or_tmp_7_S ;
  logic or_tmp_8;
  logic or_tmp_8_T ;
  logic or_tmp_8_R ;
  logic or_tmp_8_C ;
  logic or_tmp_8_X ;
  logic [13:0] or_tmp_8_S ;
  logic reg_chn_o_rsci_ld_core_psct_cse;
  logic  reg_chn_o_rsci_ld_core_psct_cse_T ;
  logic  reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL1 ;
  logic  reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL2 ;
  logic  reg_chn_o_rsci_ld_core_psct_cse_R ;
  logic  reg_chn_o_rsci_ld_core_psct_cse_X ;
  logic  reg_chn_o_rsci_ld_core_psct_cse_C ;
  logic [13:0] reg_chn_o_rsci_ld_core_psct_cse_S ;
  logic reg_chn_o_rsci_ld_core_psct_cse_t_flag ;
  logic reg_chn_o_rsci_ld_core_psct_cse_r_flag ;
  assign reg_chn_o_rsci_ld_core_psct_cse_S = 525 ;
  assign nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2 = _051_[2:0] + 1'b1;
  assign nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_S = 0 ;
  logic [3:0] _051__C0 ;
  logic [3:0] _051__R0 ;
  logic [3:0] _051__X0 ;
  assign nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_T = _051__T [2:0] ;
  assign _051__C0 [2:0] = nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_C ;
  assign _051__R0 [2:0] = nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_R ;
  assign _051__X0 [2:0] = nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_X ;
  logic [3:0] fangyuan0;
  logic [3:0] fangyuan0_T ;
  logic [3:0] fangyuan0_R ;
  logic [3:0] fangyuan0_C ;
  logic [3:0] fangyuan0_X ;
  assign fangyuan0 = { FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2, nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s[0] };
  assign fangyuan0_T = {  FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_T , nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_T [0]  };
  logic [13:0] fangyuan0_S ;
  assign fangyuan0_S = 0 ;
  logic [2:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_R0 ;
  logic [2:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_X0 ;
  logic [2:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_C0 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_R0 = fangyuan0_R [3:1] ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_X0 = fangyuan0_X [3:1] ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_C0 = fangyuan0_C [3:1] ;
  logic [3:0] nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_R0 ;
  logic [3:0] nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_X0 ;
  logic [3:0] nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_C0 ;
  assign nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_R0 [0:0] = fangyuan0_R [0:0] ;
  assign nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_X0 [0:0] = fangyuan0_X [0:0] ;
  assign nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_C0 [0:0] = fangyuan0_C [0:0] ;

  assign nl_FpMantDecShiftRight_10U_6U_10U_guard_mask_lshift_rg_s = fangyuan0 + 5'b11111;
  assign nl_FpMantDecShiftRight_10U_6U_10U_guard_mask_lshift_rg_s_S = 0 ;
  logic [3:0] fangyuan0_C0 ;
  logic [3:0] fangyuan0_R0 ;
  logic [3:0] fangyuan0_X0 ;
  assign nl_FpMantDecShiftRight_10U_6U_10U_guard_mask_lshift_rg_s_T = fangyuan0_T ;
  assign fangyuan0_C0 = nl_FpMantDecShiftRight_10U_6U_10U_guard_mask_lshift_rg_s_C ;
  assign fangyuan0_R0 = nl_FpMantDecShiftRight_10U_6U_10U_guard_mask_lshift_rg_s_R ;
  assign fangyuan0_X0 = nl_FpMantDecShiftRight_10U_6U_10U_guard_mask_lshift_rg_s_X ;
  logic [6:0] fangyuan1;
  logic [6:0] fangyuan1_T ;
  logic [6:0] fangyuan1_R ;
  logic [6:0] fangyuan1_C ;
  logic [6:0] fangyuan1_X ;
  assign fangyuan1 = { 1'b1, _065_ };
  assign fangyuan1_T = {  1'h0 , _065__T  };
  logic [13:0] fangyuan1_S ;
  assign fangyuan1_S = 0 ;
  logic [5:0] _065__R0 ;
  logic [5:0] _065__X0 ;
  logic [5:0] _065__C0 ;
  assign _065__R0 = fangyuan1_R [5:0] ;
  assign _065__X0 = fangyuan1_X [5:0] ;
  assign _065__C0 = fangyuan1_C [5:0] ;

  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl = fangyuan1 + 5'b10001;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_S = 0 ;
  logic [6:0] fangyuan1_C0 ;
  logic [6:0] fangyuan1_R0 ;
  logic [6:0] fangyuan1_X0 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_T = fangyuan1_T ;
  assign fangyuan1_C0 = FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C ;
  assign fangyuan1_R0 = FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R ;
  assign fangyuan1_X0 = FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl = chn_a_rsci_d_mxwt[15:11] + 6'b111101;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_S = 0 ;
  logic [16:0] chn_a_rsci_d_mxwt_C0 ;
  logic [16:0] chn_a_rsci_d_mxwt_R0 ;
  logic [16:0] chn_a_rsci_d_mxwt_X0 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_T = chn_a_rsci_d_mxwt_T [15:11] ;
  assign chn_a_rsci_d_mxwt_C0 [15:11] = FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C ;
  assign chn_a_rsci_d_mxwt_R0 [15:11] = FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R ;
  assign chn_a_rsci_d_mxwt_X0 [15:11] = FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl = chn_a_rsci_d_mxwt[15:10] + 7'b1010001;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_S = 0 ;
  assign { chn_a_rsci_d_mxwt_R0 [0], chn_a_rsci_d_mxwt_R0 [1], chn_a_rsci_d_mxwt_R0 [2], chn_a_rsci_d_mxwt_R0 [3], chn_a_rsci_d_mxwt_R0 [4], chn_a_rsci_d_mxwt_R0 [5], chn_a_rsci_d_mxwt_R0 [6], chn_a_rsci_d_mxwt_R0 [7], chn_a_rsci_d_mxwt_R0 [8], chn_a_rsci_d_mxwt_R0 [9], chn_a_rsci_d_mxwt_R0 [10], chn_a_rsci_d_mxwt_R0 [16:16] } = 0;
  assign { chn_a_rsci_d_mxwt_X0 [0], chn_a_rsci_d_mxwt_X0 [1], chn_a_rsci_d_mxwt_X0 [2], chn_a_rsci_d_mxwt_X0 [3], chn_a_rsci_d_mxwt_X0 [4], chn_a_rsci_d_mxwt_X0 [5], chn_a_rsci_d_mxwt_X0 [6], chn_a_rsci_d_mxwt_X0 [7], chn_a_rsci_d_mxwt_X0 [8], chn_a_rsci_d_mxwt_X0 [9], chn_a_rsci_d_mxwt_X0 [10], chn_a_rsci_d_mxwt_X0 [16:16] } = 0;
  assign { chn_a_rsci_d_mxwt_C0 [0], chn_a_rsci_d_mxwt_C0 [1], chn_a_rsci_d_mxwt_C0 [2], chn_a_rsci_d_mxwt_C0 [3], chn_a_rsci_d_mxwt_C0 [4], chn_a_rsci_d_mxwt_C0 [5], chn_a_rsci_d_mxwt_C0 [6], chn_a_rsci_d_mxwt_C0 [7], chn_a_rsci_d_mxwt_C0 [8], chn_a_rsci_d_mxwt_C0 [9], chn_a_rsci_d_mxwt_C0 [10], chn_a_rsci_d_mxwt_C0 [16:16] } = 0;
  logic [16:0] chn_a_rsci_d_mxwt_C1 ;
  logic [16:0] chn_a_rsci_d_mxwt_R1 ;
  logic [16:0] chn_a_rsci_d_mxwt_X1 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_T = chn_a_rsci_d_mxwt_T [15:10] ;
  assign chn_a_rsci_d_mxwt_C1 [15:10] = FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C ;
  assign chn_a_rsci_d_mxwt_R1 [15:10] = FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R ;
  assign chn_a_rsci_d_mxwt_X1 [15:10] = FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X ;
  assign FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva = FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_itm + FpMantDecShiftRight_10U_6U_10U_carry_and_nl;
  assign FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_S = 0 ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_itm_C0 ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_itm_R0 ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_itm_X0 ;
  logic [0:0] FpMantDecShiftRight_10U_6U_10U_carry_and_nl_C0 ;
  logic [0:0] FpMantDecShiftRight_10U_6U_10U_carry_and_nl_R0 ;
  logic [0:0] FpMantDecShiftRight_10U_6U_10U_carry_and_nl_X0 ;
  assign FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_T = FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_itm_T | FpMantDecShiftRight_10U_6U_10U_carry_and_nl_T ;
  assign FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_itm_C0 = FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_C ;
  assign FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_itm_X0 = FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_X ;
  assign FpMantDecShiftRight_10U_6U_10U_carry_and_nl_C0 = FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_C ;
  assign FpMantDecShiftRight_10U_6U_10U_carry_and_nl_X0 = FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_X ;
  assign FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_itm_R0 = FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_R | ( FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_C & FpMantDecShiftRight_10U_6U_10U_carry_and_nl_T );
  assign FpMantDecShiftRight_10U_6U_10U_carry_and_nl_R0 = FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_R | ( FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_C & FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_itm_T );
  assign FpMantDecShiftRight_10U_6U_10U_stick_mask_sva = FpMantDecShiftRight_10U_6U_10U_guard_mask_sva + 11'b11111111111;
  assign FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_S = 0 ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_C0 ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_R0 ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_X0 ;
  assign FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_T = FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_T ;
  assign FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_C0 = FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_C ;
  assign FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_R0 = FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_R ;
  assign FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_X0 = FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_X ;
  assign _028_ = core_wen & _058_;
  assign _028__S = 0 ;
  logic [0:0] core_wen_C0 ;
  logic [0:0] core_wen_R0 ;
  logic [0:0] core_wen_X0 ;
  logic [0:0] _058__C0 ;
  logic [0:0] _058__R0 ;
  logic [0:0] _058__X0 ;
  assign _028__T = core_wen_T | _058__T ;
  assign core_wen_C0 = _028__C ;
  assign core_wen_X0 = _028__X ;
  assign _058__C0 = _028__C ;
  assign _058__X0 = _028__X ;
  assign core_wen_R0 = ( _028__R | _028__C & _058__T ) & { 1{ _058_ != 0 }} ;
  assign _058__R0 = ( _028__R | _028__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _029_ = core_wen & _060_;
  assign _029__S = 0 ;
  logic [0:0] core_wen_C1 ;
  logic [0:0] core_wen_R1 ;
  logic [0:0] core_wen_X1 ;
  logic [0:0] _060__C0 ;
  logic [0:0] _060__R0 ;
  logic [0:0] _060__X0 ;
  assign _029__T = core_wen_T | _060__T ;
  assign core_wen_C1 = _029__C ;
  assign core_wen_X1 = _029__X ;
  assign _060__C0 = _029__C ;
  assign _060__X0 = _029__X ;
  assign core_wen_R1 = ( _029__R | _029__C & _060__T ) & { 1{ _060_ != 0 }} ;
  assign _060__R0 = ( _029__R | _029__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign and_60_nl = main_stage_v_1 & FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2;
  assign and_60_nl_S = 0 ;
  logic [0:0] main_stage_v_1_C0 ;
  logic [0:0] main_stage_v_1_R0 ;
  logic [0:0] main_stage_v_1_X0 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_C0 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_R0 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_X0 ;
  assign and_60_nl_T = main_stage_v_1_T | FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_T ;
  assign main_stage_v_1_C0 = and_60_nl_C ;
  assign main_stage_v_1_X0 = and_60_nl_X ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_C0 = and_60_nl_C ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_X0 = and_60_nl_X ;
  assign main_stage_v_1_R0 = ( and_60_nl_R | and_60_nl_C & FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_T ) & { 1{ FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2 != 0 }} ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_R0 = ( and_60_nl_R | and_60_nl_C & main_stage_v_1_T ) & { 1{ main_stage_v_1 != 0 }} ;
  assign chn_o_and_1_cse = core_wen & _063_;
  assign chn_o_and_1_cse_S = 0 ;
  logic [0:0] core_wen_C2 ;
  logic [0:0] core_wen_R2 ;
  logic [0:0] core_wen_X2 ;
  logic [0:0] _063__C0 ;
  logic [0:0] _063__R0 ;
  logic [0:0] _063__X0 ;
  assign chn_o_and_1_cse_T = core_wen_T | _063__T ;
  assign core_wen_C2 = chn_o_and_1_cse_C ;
  assign core_wen_X2 = chn_o_and_1_cse_X ;
  assign _063__C0 = chn_o_and_1_cse_C ;
  assign _063__X0 = chn_o_and_1_cse_X ;
  assign core_wen_R2 = ( chn_o_and_1_cse_R | chn_o_and_1_cse_C & _063__T ) & { 1{ _063_ != 0 }} ;
  assign _063__R0 = ( chn_o_and_1_cse_R | chn_o_and_1_cse_C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign Fp17ToFp16_and_cse = _030_ & mux_tmp;
  assign Fp17ToFp16_and_cse_S = 0 ;
  logic [0:0] _030__C0 ;
  logic [0:0] _030__R0 ;
  logic [0:0] _030__X0 ;
  logic [0:0] mux_tmp_C0 ;
  logic [0:0] mux_tmp_R0 ;
  logic [0:0] mux_tmp_X0 ;
  assign Fp17ToFp16_and_cse_T = _030__T | mux_tmp_T ;
  assign _030__C0 = Fp17ToFp16_and_cse_C ;
  assign _030__X0 = Fp17ToFp16_and_cse_X ;
  assign mux_tmp_C0 = Fp17ToFp16_and_cse_C ;
  assign mux_tmp_X0 = Fp17ToFp16_and_cse_X ;
  assign _030__R0 = ( Fp17ToFp16_and_cse_R | Fp17ToFp16_and_cse_C & mux_tmp_T ) & { 1{ mux_tmp != 0 }} ;
  assign mux_tmp_R0 = ( Fp17ToFp16_and_cse_R | Fp17ToFp16_and_cse_C & _030__T ) & { 1{ _030_ != 0 }} ;
  assign and_35_rgt = or_cse & _090_;
  assign and_35_rgt_S = 0 ;
  logic [0:0] or_cse_C0 ;
  logic [0:0] or_cse_R0 ;
  logic [0:0] or_cse_X0 ;
  logic [0:0] _090__C0 ;
  logic [0:0] _090__R0 ;
  logic [0:0] _090__X0 ;
  assign and_35_rgt_T = or_cse_T | _090__T ;
  assign or_cse_C0 = and_35_rgt_C ;
  assign or_cse_X0 = and_35_rgt_X ;
  assign _090__C0 = and_35_rgt_C ;
  assign _090__X0 = and_35_rgt_X ;
  assign or_cse_R0 = ( and_35_rgt_R | and_35_rgt_C & _090__T ) & { 1{ _090_ != 0 }} ;
  assign _090__R0 = ( and_35_rgt_R | and_35_rgt_C & or_cse_T ) & { 1{ or_cse != 0 }} ;
  assign and_37_rgt = or_cse & _059_;
  assign and_37_rgt_S = 0 ;
  logic [0:0] or_cse_C1 ;
  logic [0:0] or_cse_R1 ;
  logic [0:0] or_cse_X1 ;
  logic [0:0] _059__C0 ;
  logic [0:0] _059__R0 ;
  logic [0:0] _059__X0 ;
  assign and_37_rgt_T = or_cse_T | _059__T ;
  assign or_cse_C1 = and_37_rgt_C ;
  assign or_cse_X1 = and_37_rgt_X ;
  assign _059__C0 = and_37_rgt_C ;
  assign _059__X0 = and_37_rgt_X ;
  assign or_cse_R1 = ( and_37_rgt_R | and_37_rgt_C & _059__T ) & { 1{ _059_ != 0 }} ;
  assign _059__R0 = ( and_37_rgt_R | and_37_rgt_C & or_cse_T ) & { 1{ or_cse != 0 }} ;
  assign FpMantDecShiftRight_10U_6U_10U_carry_and_nl = _091_ & _094_;
  assign FpMantDecShiftRight_10U_6U_10U_carry_and_nl_S = 0 ;
  logic [0:0] _091__C0 ;
  logic [0:0] _091__R0 ;
  logic [0:0] _091__X0 ;
  logic [0:0] _094__C0 ;
  logic [0:0] _094__R0 ;
  logic [0:0] _094__X0 ;
  assign FpMantDecShiftRight_10U_6U_10U_carry_and_nl_T = _091__T | _094__T ;
  assign _091__C0 = FpMantDecShiftRight_10U_6U_10U_carry_and_nl_C ;
  assign _091__X0 = FpMantDecShiftRight_10U_6U_10U_carry_and_nl_X ;
  assign _094__C0 = FpMantDecShiftRight_10U_6U_10U_carry_and_nl_C ;
  assign _094__X0 = FpMantDecShiftRight_10U_6U_10U_carry_and_nl_X ;
  assign _091__R0 = ( FpMantDecShiftRight_10U_6U_10U_carry_and_nl_R | FpMantDecShiftRight_10U_6U_10U_carry_and_nl_C & _094__T ) & { 1{ _094_ != 0 }} ;
  assign _094__R0 = ( FpMantDecShiftRight_10U_6U_10U_carry_and_nl_R | FpMantDecShiftRight_10U_6U_10U_carry_and_nl_C & _091__T ) & { 1{ _091_ != 0 }} ;
  assign FpMantDecShiftRight_10U_6U_10U_guard_bits_9_0_sva = FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1[9:0] & FpMantDecShiftRight_10U_6U_10U_guard_mask_sva[9:0];
  assign FpMantDecShiftRight_10U_6U_10U_guard_bits_9_0_sva_S = 0 ;
  logic [14:0] FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C0 ;
  logic [14:0] FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R0 ;
  logic [14:0] FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X0 ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_C1 ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_R1 ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_X1 ;
  assign FpMantDecShiftRight_10U_6U_10U_guard_bits_9_0_sva_T = FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_T [9:0] | FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_T [9:0] ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C0 [9:0] = FpMantDecShiftRight_10U_6U_10U_guard_bits_9_0_sva_C ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X0 [9:0] = FpMantDecShiftRight_10U_6U_10U_guard_bits_9_0_sva_X ;
  assign FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_C1 [9:0] = FpMantDecShiftRight_10U_6U_10U_guard_bits_9_0_sva_C ;
  assign FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_X1 [9:0] = FpMantDecShiftRight_10U_6U_10U_guard_bits_9_0_sva_X ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R0 [9:0] = ( FpMantDecShiftRight_10U_6U_10U_guard_bits_9_0_sva_R | FpMantDecShiftRight_10U_6U_10U_guard_bits_9_0_sva_C & FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_T [9:0] ) & { 10{ FpMantDecShiftRight_10U_6U_10U_guard_mask_sva[9:0] != 0 }} ;
  assign FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_R1 [9:0] = ( FpMantDecShiftRight_10U_6U_10U_guard_bits_9_0_sva_R | FpMantDecShiftRight_10U_6U_10U_guard_bits_9_0_sva_C & FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_T [9:0] ) & { 10{ FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1[9:0] != 0 }} ;
  assign FpMantDecShiftRight_10U_6U_10U_stick_bits_9_0_sva = FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1[9:0] & FpMantDecShiftRight_10U_6U_10U_stick_mask_sva[9:0];
  assign FpMantDecShiftRight_10U_6U_10U_stick_bits_9_0_sva_S = 0 ;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R0 [14:10] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X0 [14:10] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C0 [14:10] } = 0;
  logic [14:0] FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C1 ;
  logic [14:0] FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R1 ;
  logic [14:0] FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X1 ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_C0 ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_R0 ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_X0 ;
  assign FpMantDecShiftRight_10U_6U_10U_stick_bits_9_0_sva_T = FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_T [9:0] | FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_T [9:0] ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C1 [9:0] = FpMantDecShiftRight_10U_6U_10U_stick_bits_9_0_sva_C ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X1 [9:0] = FpMantDecShiftRight_10U_6U_10U_stick_bits_9_0_sva_X ;
  assign FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_C0 [9:0] = FpMantDecShiftRight_10U_6U_10U_stick_bits_9_0_sva_C ;
  assign FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_X0 [9:0] = FpMantDecShiftRight_10U_6U_10U_stick_bits_9_0_sva_X ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R1 [9:0] = ( FpMantDecShiftRight_10U_6U_10U_stick_bits_9_0_sva_R | FpMantDecShiftRight_10U_6U_10U_stick_bits_9_0_sva_C & FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_T [9:0] ) & { 10{ FpMantDecShiftRight_10U_6U_10U_stick_mask_sva[9:0] != 0 }} ;
  assign FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_R0 [9:0] = ( FpMantDecShiftRight_10U_6U_10U_stick_bits_9_0_sva_R | FpMantDecShiftRight_10U_6U_10U_stick_bits_9_0_sva_C & FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_T [9:0] ) & { 10{ FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1[9:0] != 0 }} ;
  assign FpMantDecShiftRight_10U_6U_10U_least_bits_9_0_sva = FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1[9:0] & FpMantDecShiftRight_10U_6U_10U_least_mask_sva[9:0];
  assign FpMantDecShiftRight_10U_6U_10U_least_bits_9_0_sva_S = 0 ;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R1 [14:10] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X1 [14:10] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C1 [14:10] } = 0;
  logic [14:0] FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C2 ;
  logic [14:0] FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R2 ;
  logic [14:0] FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X2 ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_least_mask_sva_C0 ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_least_mask_sva_R0 ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_least_mask_sva_X0 ;
  assign FpMantDecShiftRight_10U_6U_10U_least_bits_9_0_sva_T = FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_T [9:0] | FpMantDecShiftRight_10U_6U_10U_least_mask_sva_T [9:0] ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C2 [9:0] = FpMantDecShiftRight_10U_6U_10U_least_bits_9_0_sva_C ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X2 [9:0] = FpMantDecShiftRight_10U_6U_10U_least_bits_9_0_sva_X ;
  assign FpMantDecShiftRight_10U_6U_10U_least_mask_sva_C0 [9:0] = FpMantDecShiftRight_10U_6U_10U_least_bits_9_0_sva_C ;
  assign FpMantDecShiftRight_10U_6U_10U_least_mask_sva_X0 [9:0] = FpMantDecShiftRight_10U_6U_10U_least_bits_9_0_sva_X ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R2 [9:0] = ( FpMantDecShiftRight_10U_6U_10U_least_bits_9_0_sva_R | FpMantDecShiftRight_10U_6U_10U_least_bits_9_0_sva_C & FpMantDecShiftRight_10U_6U_10U_least_mask_sva_T [9:0] ) & { 10{ FpMantDecShiftRight_10U_6U_10U_least_mask_sva[9:0] != 0 }} ;
  assign FpMantDecShiftRight_10U_6U_10U_least_mask_sva_R0 [9:0] = ( FpMantDecShiftRight_10U_6U_10U_least_bits_9_0_sva_R | FpMantDecShiftRight_10U_6U_10U_least_bits_9_0_sva_C & FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_T [9:0] ) & { 10{ FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1[9:0] != 0 }} ;
  assign and_6_mdf = chn_a_rsci_bawt & or_cse;
  assign and_6_mdf_S = 0 ;
  logic [0:0] chn_a_rsci_bawt_C0 ;
  logic [0:0] chn_a_rsci_bawt_R0 ;
  logic [0:0] chn_a_rsci_bawt_X0 ;
  logic [0:0] or_cse_C2 ;
  logic [0:0] or_cse_R2 ;
  logic [0:0] or_cse_X2 ;
  assign and_6_mdf_T = chn_a_rsci_bawt_T | or_cse_T ;
  assign chn_a_rsci_bawt_C0 = and_6_mdf_C ;
  assign chn_a_rsci_bawt_X0 = and_6_mdf_X ;
  assign or_cse_C2 = and_6_mdf_C ;
  assign or_cse_X2 = and_6_mdf_X ;
  assign chn_a_rsci_bawt_R0 = ( and_6_mdf_R | and_6_mdf_C & or_cse_T ) & { 1{ or_cse != 0 }} ;
  assign or_cse_R2 = ( and_6_mdf_R | and_6_mdf_C & chn_a_rsci_bawt_T ) & { 1{ chn_a_rsci_bawt != 0 }} ;
  assign _031_ = FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl[6] & chn_a_rsci_bawt;
  assign _031__S = 0 ;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C0 ;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R0 ;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X0 ;
  logic [0:0] chn_a_rsci_bawt_C1 ;
  logic [0:0] chn_a_rsci_bawt_R1 ;
  logic [0:0] chn_a_rsci_bawt_X1 ;
  assign _031__T = FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_T [6] | chn_a_rsci_bawt_T ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C0 [6] = _031__C ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X0 [6] = _031__X ;
  assign chn_a_rsci_bawt_C1 = _031__C ;
  assign chn_a_rsci_bawt_X1 = _031__X ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R0 [6] = ( _031__R | _031__C & chn_a_rsci_bawt_T ) & { 1{ chn_a_rsci_bawt != 0 }} ;
  assign chn_a_rsci_bawt_R1 = ( _031__R | _031__C & FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_T [6] ) & { 1{ FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl[6] != 0 }} ;
  assign and_tmp_1 = _031_ & or_cse;
  assign and_tmp_1_S = 0 ;
  logic [0:0] _031__C0 ;
  logic [0:0] _031__R0 ;
  logic [0:0] _031__X0 ;
  logic [0:0] or_cse_C3 ;
  logic [0:0] or_cse_R3 ;
  logic [0:0] or_cse_X3 ;
  assign and_tmp_1_T = _031__T | or_cse_T ;
  assign _031__C0 = and_tmp_1_C ;
  assign _031__X0 = and_tmp_1_X ;
  assign or_cse_C3 = and_tmp_1_C ;
  assign or_cse_X3 = and_tmp_1_X ;
  assign _031__R0 = ( and_tmp_1_R | and_tmp_1_C & or_cse_T ) & { 1{ or_cse != 0 }} ;
  assign or_cse_R3 = ( and_tmp_1_R | and_tmp_1_C & _031__T ) & { 1{ _031_ != 0 }} ;
  assign _032_ = _069_ & or_cse;
  assign _032__S = 0 ;
  logic [0:0] _069__C0 ;
  logic [0:0] _069__R0 ;
  logic [0:0] _069__X0 ;
  logic [0:0] or_cse_C4 ;
  logic [0:0] or_cse_R4 ;
  logic [0:0] or_cse_X4 ;
  assign _032__T = _069__T | or_cse_T ;
  assign _069__C0 = _032__C ;
  assign _069__X0 = _032__X ;
  assign or_cse_C4 = _032__C ;
  assign or_cse_X4 = _032__X ;
  assign _069__R0 = ( _032__R | _032__C & or_cse_T ) & { 1{ or_cse != 0 }} ;
  assign or_cse_R4 = ( _032__R | _032__C & _069__T ) & { 1{ _069_ != 0 }} ;
  assign and_dcpl_6 = reg_chn_o_rsci_ld_core_psct_cse & chn_o_rsci_bawt;
  assign and_dcpl_6_S = 0 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C0 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R0 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X0 ;
  logic [0:0] chn_o_rsci_bawt_C0 ;
  logic [0:0] chn_o_rsci_bawt_R0 ;
  logic [0:0] chn_o_rsci_bawt_X0 ;
  assign and_dcpl_6_T = reg_chn_o_rsci_ld_core_psct_cse_T | chn_o_rsci_bawt_T ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C0 = and_dcpl_6_C ;
  assign reg_chn_o_rsci_ld_core_psct_cse_X0 = and_dcpl_6_X ;
  assign chn_o_rsci_bawt_C0 = and_dcpl_6_C ;
  assign chn_o_rsci_bawt_X0 = and_dcpl_6_X ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R0 = ( and_dcpl_6_R | and_dcpl_6_C & chn_o_rsci_bawt_T ) & { 1{ chn_o_rsci_bawt != 0 }} ;
  assign chn_o_rsci_bawt_R0 = ( and_dcpl_6_R | and_dcpl_6_C & reg_chn_o_rsci_ld_core_psct_cse_T ) & { 1{ reg_chn_o_rsci_ld_core_psct_cse != 0 }} ;
  assign and_dcpl_8 = reg_chn_o_rsci_ld_core_psct_cse & _070_;
  assign and_dcpl_8_S = 0 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C1 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R1 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X1 ;
  logic [0:0] _070__C0 ;
  logic [0:0] _070__R0 ;
  logic [0:0] _070__X0 ;
  assign and_dcpl_8_T = reg_chn_o_rsci_ld_core_psct_cse_T | _070__T ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C1 = and_dcpl_8_C ;
  assign reg_chn_o_rsci_ld_core_psct_cse_X1 = and_dcpl_8_X ;
  assign _070__C0 = and_dcpl_8_C ;
  assign _070__X0 = and_dcpl_8_X ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R1 = ( and_dcpl_8_R | and_dcpl_8_C & _070__T ) & { 1{ _070_ != 0 }} ;
  assign _070__R0 = ( and_dcpl_8_R | and_dcpl_8_C & reg_chn_o_rsci_ld_core_psct_cse_T ) & { 1{ reg_chn_o_rsci_ld_core_psct_cse != 0 }} ;
  assign and_dcpl_11 = or_cse & main_stage_v_1;
  assign and_dcpl_11_S = 0 ;
  logic [0:0] or_cse_C5 ;
  logic [0:0] or_cse_R5 ;
  logic [0:0] or_cse_X5 ;
  logic [0:0] main_stage_v_1_C1 ;
  logic [0:0] main_stage_v_1_R1 ;
  logic [0:0] main_stage_v_1_X1 ;
  assign and_dcpl_11_T = or_cse_T | main_stage_v_1_T ;
  assign or_cse_C5 = and_dcpl_11_C ;
  assign or_cse_X5 = and_dcpl_11_X ;
  assign main_stage_v_1_C1 = and_dcpl_11_C ;
  assign main_stage_v_1_X1 = and_dcpl_11_X ;
  assign or_cse_R5 = ( and_dcpl_11_R | and_dcpl_11_C & main_stage_v_1_T ) & { 1{ main_stage_v_1 != 0 }} ;
  assign main_stage_v_1_R1 = ( and_dcpl_11_R | and_dcpl_11_C & or_cse_T ) & { 1{ or_cse != 0 }} ;
  assign and_dcpl_14 = and_dcpl_6 & _062_;
  assign and_dcpl_14_S = 0 ;
  logic [0:0] and_dcpl_6_C0 ;
  logic [0:0] and_dcpl_6_R0 ;
  logic [0:0] and_dcpl_6_X0 ;
  logic [0:0] _062__C0 ;
  logic [0:0] _062__R0 ;
  logic [0:0] _062__X0 ;
  assign and_dcpl_14_T = and_dcpl_6_T | _062__T ;
  assign and_dcpl_6_C0 = and_dcpl_14_C ;
  assign and_dcpl_6_X0 = and_dcpl_14_X ;
  assign _062__C0 = and_dcpl_14_C ;
  assign _062__X0 = and_dcpl_14_X ;
  assign and_dcpl_6_R0 = ( and_dcpl_14_R | and_dcpl_14_C & _062__T ) & { 1{ _062_ != 0 }} ;
  assign _062__R0 = ( and_dcpl_14_R | and_dcpl_14_C & and_dcpl_6_T ) & { 1{ and_dcpl_6 != 0 }} ;
  assign or_tmp_19 = and_6_mdf & fsm_output[1];
  assign or_tmp_19_S = 0 ;
  logic [0:0] and_6_mdf_C0 ;
  logic [0:0] and_6_mdf_R0 ;
  logic [0:0] and_6_mdf_X0 ;
  logic [1:0] fsm_output_C0 ;
  logic [1:0] fsm_output_R0 ;
  logic [1:0] fsm_output_X0 ;
  assign or_tmp_19_T = and_6_mdf_T | fsm_output_T [1] ;
  assign and_6_mdf_C0 = or_tmp_19_C ;
  assign and_6_mdf_X0 = or_tmp_19_X ;
  assign fsm_output_C0 [1] = or_tmp_19_C ;
  assign fsm_output_X0 [1] = or_tmp_19_X ;
  assign and_6_mdf_R0 = ( or_tmp_19_R | or_tmp_19_C & fsm_output_T [1] ) & { 1{ fsm_output[1] != 0 }} ;
  assign fsm_output_R0 [1] = ( or_tmp_19_R | or_tmp_19_C & and_6_mdf_T ) & { 1{ and_6_mdf != 0 }} ;
  assign chn_o_rsci_d_9_0_mx0c1 = and_dcpl_11 & _088_;
  assign chn_o_rsci_d_9_0_mx0c1_S = 0 ;
  logic [0:0] and_dcpl_11_C0 ;
  logic [0:0] and_dcpl_11_R0 ;
  logic [0:0] and_dcpl_11_X0 ;
  logic [0:0] _088__C0 ;
  logic [0:0] _088__R0 ;
  logic [0:0] _088__X0 ;
  assign chn_o_rsci_d_9_0_mx0c1_T = and_dcpl_11_T | _088__T ;
  assign and_dcpl_11_C0 = chn_o_rsci_d_9_0_mx0c1_C ;
  assign and_dcpl_11_X0 = chn_o_rsci_d_9_0_mx0c1_X ;
  assign _088__C0 = chn_o_rsci_d_9_0_mx0c1_C ;
  assign _088__X0 = chn_o_rsci_d_9_0_mx0c1_X ;
  assign and_dcpl_11_R0 = ( chn_o_rsci_d_9_0_mx0c1_R | chn_o_rsci_d_9_0_mx0c1_C & _088__T ) & { 1{ _088_ != 0 }} ;
  assign _088__R0 = ( chn_o_rsci_d_9_0_mx0c1_R | chn_o_rsci_d_9_0_mx0c1_C & and_dcpl_11_T ) & { 1{ and_dcpl_11 != 0 }} ;
  assign _033_ = or_cse & _057_;
  assign _033__S = 0 ;
  logic [0:0] or_cse_C6 ;
  logic [0:0] or_cse_R6 ;
  logic [0:0] or_cse_X6 ;
  logic [0:0] _057__C0 ;
  logic [0:0] _057__R0 ;
  logic [0:0] _057__X0 ;
  assign _033__T = or_cse_T | _057__T ;
  assign or_cse_C6 = _033__C ;
  assign or_cse_X6 = _033__X ;
  assign _057__C0 = _033__C ;
  assign _057__X0 = _033__X ;
  assign or_cse_R6 = ( _033__R | _033__C & _057__T ) & { 1{ _057_ != 0 }} ;
  assign _057__R0 = ( _033__R | _033__C & or_cse_T ) & { 1{ or_cse != 0 }} ;
  assign main_stage_v_1_mx0c1 = _033_ & main_stage_v_1;
  assign main_stage_v_1_mx0c1_S = 0 ;
  logic [0:0] _033__C0 ;
  logic [0:0] _033__R0 ;
  logic [0:0] _033__X0 ;
  logic [0:0] main_stage_v_1_C2 ;
  logic [0:0] main_stage_v_1_R2 ;
  logic [0:0] main_stage_v_1_X2 ;
  assign main_stage_v_1_mx0c1_T = _033__T | main_stage_v_1_T ;
  assign _033__C0 = main_stage_v_1_mx0c1_C ;
  assign _033__X0 = main_stage_v_1_mx0c1_X ;
  assign main_stage_v_1_C2 = main_stage_v_1_mx0c1_C ;
  assign main_stage_v_1_X2 = main_stage_v_1_mx0c1_X ;
  assign _033__R0 = ( main_stage_v_1_mx0c1_R | main_stage_v_1_mx0c1_C & main_stage_v_1_T ) & { 1{ main_stage_v_1 != 0 }} ;
  assign main_stage_v_1_R2 = ( main_stage_v_1_mx0c1_R | main_stage_v_1_mx0c1_C & _033__T ) & { 1{ _033_ != 0 }} ;
  assign _034_ = _071_ & fsm_output[1];
  assign _034__S = 0 ;
  assign { fsm_output_R0 [0] } = 0;
  assign { fsm_output_X0 [0] } = 0;
  assign { fsm_output_C0 [0] } = 0;
  logic [0:0] _071__C0 ;
  logic [0:0] _071__R0 ;
  logic [0:0] _071__X0 ;
  logic [1:0] fsm_output_C1 ;
  logic [1:0] fsm_output_R1 ;
  logic [1:0] fsm_output_X1 ;
  assign _034__T = _071__T | fsm_output_T [1] ;
  assign _071__C0 = _034__C ;
  assign _071__X0 = _034__X ;
  assign fsm_output_C1 [1] = _034__C ;
  assign fsm_output_X1 [1] = _034__X ;
  assign _071__R0 = ( _034__R | _034__C & fsm_output_T [1] ) & { 1{ fsm_output[1] != 0 }} ;
  assign fsm_output_R1 [1] = ( _034__R | _034__C & _071__T ) & { 1{ _071_ != 0 }} ;
  assign _035_ = core_wen & chn_a_rsci_ld_core_psct_mx0c0;
  assign _035__S = 0 ;
  logic [0:0] core_wen_C3 ;
  logic [0:0] core_wen_R3 ;
  logic [0:0] core_wen_X3 ;
  logic [0:0] chn_a_rsci_ld_core_psct_mx0c0_C0 ;
  logic [0:0] chn_a_rsci_ld_core_psct_mx0c0_R0 ;
  logic [0:0] chn_a_rsci_ld_core_psct_mx0c0_X0 ;
  assign _035__T = core_wen_T | chn_a_rsci_ld_core_psct_mx0c0_T ;
  assign core_wen_C3 = _035__C ;
  assign core_wen_X3 = _035__X ;
  assign chn_a_rsci_ld_core_psct_mx0c0_C0 = _035__C ;
  assign chn_a_rsci_ld_core_psct_mx0c0_X0 = _035__X ;
  assign core_wen_R3 = ( _035__R | _035__C & chn_a_rsci_ld_core_psct_mx0c0_T ) & { 1{ chn_a_rsci_ld_core_psct_mx0c0 != 0 }} ;
  assign chn_a_rsci_ld_core_psct_mx0c0_R0 = ( _035__R | _035__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _036_ = and_dcpl_11 & nor_5_cse;
  assign _036__S = 0 ;
  logic [0:0] and_dcpl_11_C1 ;
  logic [0:0] and_dcpl_11_R1 ;
  logic [0:0] and_dcpl_11_X1 ;
  logic [0:0] nor_5_cse_C0 ;
  logic [0:0] nor_5_cse_R0 ;
  logic [0:0] nor_5_cse_X0 ;
  assign _036__T = and_dcpl_11_T | nor_5_cse_T ;
  assign and_dcpl_11_C1 = _036__C ;
  assign and_dcpl_11_X1 = _036__X ;
  assign nor_5_cse_C0 = _036__C ;
  assign nor_5_cse_X0 = _036__X ;
  assign and_dcpl_11_R1 = ( _036__R | _036__C & nor_5_cse_T ) & { 1{ nor_5_cse != 0 }} ;
  assign nor_5_cse_R0 = ( _036__R | _036__C & and_dcpl_11_T ) & { 1{ and_dcpl_11 != 0 }} ;
  assign _037_ = core_wen & _096_;
  assign _037__S = 0 ;
  logic [0:0] core_wen_C4 ;
  logic [0:0] core_wen_R4 ;
  logic [0:0] core_wen_X4 ;
  logic [0:0] _096__C0 ;
  logic [0:0] _096__R0 ;
  logic [0:0] _096__X0 ;
  assign _037__T = core_wen_T | _096__T ;
  assign core_wen_C4 = _037__C ;
  assign core_wen_X4 = _037__X ;
  assign _096__C0 = _037__C ;
  assign _096__X0 = _037__X ;
  assign core_wen_R4 = ( _037__R | _037__C & _096__T ) & { 1{ _096_ != 0 }} ;
  assign _096__R0 = ( _037__R | _037__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _038_ = _073_ & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2;
  assign _038__S = 0 ;
  logic [0:0] _073__C0 ;
  logic [0:0] _073__R0 ;
  logic [0:0] _073__X0 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_C0 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_R0 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_X0 ;
  assign _038__T = _073__T | FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_T ;
  assign _073__C0 = _038__C ;
  assign _073__X0 = _038__X ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_C0 = _038__C ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_X0 = _038__X ;
  assign _073__R0 = ( _038__R | _038__C & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_T ) & { 1{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2 != 0 }} ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_R0 = ( _038__R | _038__C & _073__T ) & { 1{ _073_ != 0 }} ;
  assign _039_ = _038_ & _074_;
  assign _039__S = 0 ;
  logic [0:0] _038__C0 ;
  logic [0:0] _038__R0 ;
  logic [0:0] _038__X0 ;
  logic [0:0] _074__C0 ;
  logic [0:0] _074__R0 ;
  logic [0:0] _074__X0 ;
  assign _039__T = _038__T | _074__T ;
  assign _038__C0 = _039__C ;
  assign _038__X0 = _039__X ;
  assign _074__C0 = _039__C ;
  assign _074__X0 = _039__X ;
  assign _038__R0 = ( _039__R | _039__C & _074__T ) & { 1{ _074_ != 0 }} ;
  assign _074__R0 = ( _039__R | _039__C & _038__T ) & { 1{ _038_ != 0 }} ;
  assign _040_ = core_wen & _099_;
  assign _040__S = 0 ;
  logic [0:0] core_wen_C5 ;
  logic [0:0] core_wen_R5 ;
  logic [0:0] core_wen_X5 ;
  logic [0:0] _099__C0 ;
  logic [0:0] _099__R0 ;
  logic [0:0] _099__X0 ;
  assign _040__T = core_wen_T | _099__T ;
  assign core_wen_C5 = _040__C ;
  assign core_wen_X5 = _040__X ;
  assign _099__C0 = _040__C ;
  assign _099__X0 = _040__X ;
  assign core_wen_R5 = ( _040__R | _040__C & _099__T ) & { 1{ _099_ != 0 }} ;
  assign _099__R0 = ( _040__R | _040__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _041_ = core_wen & _100_;
  assign _041__S = 0 ;
  logic [0:0] core_wen_C6 ;
  logic [0:0] core_wen_R6 ;
  logic [0:0] core_wen_X6 ;
  logic [0:0] _100__C0 ;
  logic [0:0] _100__R0 ;
  logic [0:0] _100__X0 ;
  assign _041__T = core_wen_T | _100__T ;
  assign core_wen_C6 = _041__C ;
  assign core_wen_X6 = _041__X ;
  assign _100__C0 = _041__C ;
  assign _100__X0 = _041__X ;
  assign core_wen_R6 = ( _041__R | _041__C & _100__T ) & { 1{ _100_ != 0 }} ;
  assign _100__R0 = ( _041__R | _041__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _030_ = core_wen & _064_;
  assign _030__S = 0 ;
  logic [0:0] core_wen_C7 ;
  logic [0:0] core_wen_R7 ;
  logic [0:0] core_wen_X7 ;
  logic [0:0] _064__C0 ;
  logic [0:0] _064__R0 ;
  logic [0:0] _064__X0 ;
  assign _030__T = core_wen_T | _064__T ;
  assign core_wen_C7 = _030__C ;
  assign core_wen_X7 = _030__X ;
  assign _064__C0 = _030__C ;
  assign _064__X0 = _030__X ;
  assign core_wen_R7 = ( _030__R | _030__C & _064__T ) & { 1{ _064_ != 0 }} ;
  assign _064__R0 = ( _030__R | _030__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _042_ = _030_ & mux_3_nl;
  assign _042__S = 0 ;
  logic [0:0] _030__C1 ;
  logic [0:0] _030__R1 ;
  logic [0:0] _030__X1 ;
  logic [0:0] mux_3_nl_C0 ;
  logic [0:0] mux_3_nl_R0 ;
  logic [0:0] mux_3_nl_X0 ;
  assign _042__T = _030__T | mux_3_nl_T ;
  assign _030__C1 = _042__C ;
  assign _030__X1 = _042__X ;
  assign mux_3_nl_C0 = _042__C ;
  assign mux_3_nl_X0 = _042__X ;
  assign _030__R1 = ( _042__R | _042__C & mux_3_nl_T ) & { 1{ mux_3_nl != 0 }} ;
  assign mux_3_nl_R0 = ( _042__R | _042__C & _030__T ) & { 1{ _030_ != 0 }} ;
  assign _043_ = _030_ & mux_5_nl;
  assign _043__S = 0 ;
  logic [0:0] _030__C2 ;
  logic [0:0] _030__R2 ;
  logic [0:0] _030__X2 ;
  logic [0:0] mux_5_nl_C0 ;
  logic [0:0] mux_5_nl_R0 ;
  logic [0:0] mux_5_nl_X0 ;
  assign _043__T = _030__T | mux_5_nl_T ;
  assign _030__C2 = _043__C ;
  assign _030__X2 = _043__X ;
  assign mux_5_nl_C0 = _043__C ;
  assign mux_5_nl_X0 = _043__X ;
  assign _030__R2 = ( _043__R | _043__C & mux_5_nl_T ) & { 1{ mux_5_nl != 0 }} ;
  assign mux_5_nl_R0 = ( _043__R | _043__C & _030__T ) & { 1{ _030_ != 0 }} ;
  assign _044_ = or_cse & FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl[6];
  assign _044__S = 0 ;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R0 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R0 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R0 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R0 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R0 [4], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R0 [5] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X0 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X0 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X0 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X0 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X0 [4], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X0 [5] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C0 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C0 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C0 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C0 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C0 [4], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C0 [5] } = 0;
  logic [0:0] or_cse_C7 ;
  logic [0:0] or_cse_R7 ;
  logic [0:0] or_cse_X7 ;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C1 ;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R1 ;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X1 ;
  assign _044__T = or_cse_T | FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_T [6] ;
  assign or_cse_C7 = _044__C ;
  assign or_cse_X7 = _044__X ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C1 [6] = _044__C ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X1 [6] = _044__X ;
  assign or_cse_R7 = ( _044__R | _044__C & FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_T [6] ) & { 1{ FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl[6] != 0 }} ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R1 [6] = ( _044__R | _044__C & or_cse_T ) & { 1{ or_cse != 0 }} ;
  assign _045_ = _044_ & _079_;
  assign _045__S = 0 ;
  logic [0:0] _044__C0 ;
  logic [0:0] _044__R0 ;
  logic [0:0] _044__X0 ;
  logic [0:0] _079__C0 ;
  logic [0:0] _079__R0 ;
  logic [0:0] _079__X0 ;
  assign _045__T = _044__T | _079__T ;
  assign _044__C0 = _045__C ;
  assign _044__X0 = _045__X ;
  assign _079__C0 = _045__C ;
  assign _079__X0 = _045__X ;
  assign _044__R0 = ( _045__R | _045__C & _079__T ) & { 1{ _079_ != 0 }} ;
  assign _079__R0 = ( _045__R | _045__C & _044__T ) & { 1{ _044_ != 0 }} ;
  assign _046_ = core_wen & _101_;
  assign _046__S = 0 ;
  logic [0:0] core_wen_C8 ;
  logic [0:0] core_wen_R8 ;
  logic [0:0] core_wen_X8 ;
  logic [0:0] _101__C0 ;
  logic [0:0] _101__R0 ;
  logic [0:0] _101__X0 ;
  assign _046__T = core_wen_T | _101__T ;
  assign core_wen_C8 = _046__C ;
  assign core_wen_X8 = _046__X ;
  assign _101__C0 = _046__C ;
  assign _101__X0 = _046__X ;
  assign core_wen_R8 = ( _046__R | _046__C & _101__T ) & { 1{ _101_ != 0 }} ;
  assign _101__R0 = ( _046__R | _046__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _047_ = _046_ & mux_tmp;
  assign _047__S = 0 ;
  logic [0:0] _046__C0 ;
  logic [0:0] _046__R0 ;
  logic [0:0] _046__X0 ;
  logic [0:0] mux_tmp_C1 ;
  logic [0:0] mux_tmp_R1 ;
  logic [0:0] mux_tmp_X1 ;
  assign _047__T = _046__T | mux_tmp_T ;
  assign _046__C0 = _047__C ;
  assign _046__X0 = _047__X ;
  assign mux_tmp_C1 = _047__C ;
  assign mux_tmp_X1 = _047__X ;
  assign _046__R0 = ( _047__R | _047__C & mux_tmp_T ) & { 1{ mux_tmp != 0 }} ;
  assign mux_tmp_R1 = ( _047__R | _047__C & _046__T ) & { 1{ _046_ != 0 }} ;
  assign _048_ = core_wen & _102_;
  assign _048__S = 0 ;
  logic [0:0] core_wen_C9 ;
  logic [0:0] core_wen_R9 ;
  logic [0:0] core_wen_X9 ;
  logic [0:0] _102__C0 ;
  logic [0:0] _102__R0 ;
  logic [0:0] _102__X0 ;
  assign _048__T = core_wen_T | _102__T ;
  assign core_wen_C9 = _048__C ;
  assign core_wen_X9 = _048__X ;
  assign _102__C0 = _048__C ;
  assign _102__X0 = _048__X ;
  assign core_wen_R9 = ( _048__R | _048__C & _102__T ) & { 1{ _102_ != 0 }} ;
  assign _102__R0 = ( _048__R | _048__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _049_ = _048_ & mux_tmp;
  assign _049__S = 0 ;
  logic [0:0] _048__C0 ;
  logic [0:0] _048__R0 ;
  logic [0:0] _048__X0 ;
  logic [0:0] mux_tmp_C2 ;
  logic [0:0] mux_tmp_R2 ;
  logic [0:0] mux_tmp_X2 ;
  assign _049__T = _048__T | mux_tmp_T ;
  assign _048__C0 = _049__C ;
  assign _048__X0 = _049__X ;
  assign mux_tmp_C2 = _049__C ;
  assign mux_tmp_X2 = _049__X ;
  assign _048__R0 = ( _049__R | _049__C & mux_tmp_T ) & { 1{ mux_tmp != 0 }} ;
  assign mux_tmp_R2 = ( _049__R | _049__C & _048__T ) & { 1{ _048_ != 0 }} ;
  assign _050_ = _030_ & mux_6_nl;
  assign _050__S = 0 ;
  logic [0:0] _030__C3 ;
  logic [0:0] _030__R3 ;
  logic [0:0] _030__X3 ;
  logic [0:0] mux_6_nl_C0 ;
  logic [0:0] mux_6_nl_R0 ;
  logic [0:0] mux_6_nl_X0 ;
  assign _050__T = _030__T | mux_6_nl_T ;
  assign _030__C3 = _050__C ;
  assign _030__X3 = _050__X ;
  assign mux_6_nl_C0 = _050__C ;
  assign mux_6_nl_X0 = _050__X ;
  assign _030__R3 = ( _050__R | _050__C & mux_6_nl_T ) & { 1{ mux_6_nl != 0 }} ;
  assign mux_6_nl_R0 = ( _050__R | _050__C & _030__T ) & { 1{ _030_ != 0 }} ;
  assign _052_ = chn_a_rsci_d_mxwt[15:10] == 6'b111111;
  assign _052__S = 0 ;
  assign { chn_a_rsci_d_mxwt_R1 [0], chn_a_rsci_d_mxwt_R1 [1], chn_a_rsci_d_mxwt_R1 [2], chn_a_rsci_d_mxwt_R1 [3], chn_a_rsci_d_mxwt_R1 [4], chn_a_rsci_d_mxwt_R1 [5], chn_a_rsci_d_mxwt_R1 [6], chn_a_rsci_d_mxwt_R1 [7], chn_a_rsci_d_mxwt_R1 [8], chn_a_rsci_d_mxwt_R1 [9], chn_a_rsci_d_mxwt_R1 [16:16] } = 0;
  assign { chn_a_rsci_d_mxwt_X1 [0], chn_a_rsci_d_mxwt_X1 [1], chn_a_rsci_d_mxwt_X1 [2], chn_a_rsci_d_mxwt_X1 [3], chn_a_rsci_d_mxwt_X1 [4], chn_a_rsci_d_mxwt_X1 [5], chn_a_rsci_d_mxwt_X1 [6], chn_a_rsci_d_mxwt_X1 [7], chn_a_rsci_d_mxwt_X1 [8], chn_a_rsci_d_mxwt_X1 [9], chn_a_rsci_d_mxwt_X1 [16:16] } = 0;
  assign { chn_a_rsci_d_mxwt_C1 [0], chn_a_rsci_d_mxwt_C1 [1], chn_a_rsci_d_mxwt_C1 [2], chn_a_rsci_d_mxwt_C1 [3], chn_a_rsci_d_mxwt_C1 [4], chn_a_rsci_d_mxwt_C1 [5], chn_a_rsci_d_mxwt_C1 [6], chn_a_rsci_d_mxwt_C1 [7], chn_a_rsci_d_mxwt_C1 [8], chn_a_rsci_d_mxwt_C1 [9], chn_a_rsci_d_mxwt_C1 [16:16] } = 0;
  logic [16:0] chn_a_rsci_d_mxwt_C2 ;
  logic [16:0] chn_a_rsci_d_mxwt_R2 ;
  logic [16:0] chn_a_rsci_d_mxwt_X2 ;
  assign _052__T = | chn_a_rsci_d_mxwt_T [15:10] ;
  assign chn_a_rsci_d_mxwt_C2 [15:10] = { 6{ _052__C }} ;
  assign chn_a_rsci_d_mxwt_R2 [15:10] = { 6{ _052__R }} ;
  assign chn_a_rsci_d_mxwt_X2 [15:10] = { 6{ _052__X }} ;
  assign _053_ = | FpMantDecShiftRight_10U_6U_10U_guard_bits_9_0_sva;
  logic [9:0] FpMantDecShiftRight_10U_6U_10U_guard_bits_9_0_sva_C0 ;
  logic [9:0] FpMantDecShiftRight_10U_6U_10U_guard_bits_9_0_sva_R0 ;
  logic [9:0] FpMantDecShiftRight_10U_6U_10U_guard_bits_9_0_sva_X0 ;
  assign _053__T = | FpMantDecShiftRight_10U_6U_10U_guard_bits_9_0_sva_T ;
  assign FpMantDecShiftRight_10U_6U_10U_guard_bits_9_0_sva_C0 = { 10{ _053__C }} ;
  assign FpMantDecShiftRight_10U_6U_10U_guard_bits_9_0_sva_X0 = { 10{ _053__X }} ;
  assign FpMantDecShiftRight_10U_6U_10U_guard_bits_9_0_sva_R0 = { 10{ _053__R }} & FpMantDecShiftRight_10U_6U_10U_guard_bits_9_0_sva ;
  assign _053__S = 0 ;
  assign _054_ = | FpMantDecShiftRight_10U_6U_10U_stick_bits_9_0_sva;
  logic [9:0] FpMantDecShiftRight_10U_6U_10U_stick_bits_9_0_sva_C0 ;
  logic [9:0] FpMantDecShiftRight_10U_6U_10U_stick_bits_9_0_sva_R0 ;
  logic [9:0] FpMantDecShiftRight_10U_6U_10U_stick_bits_9_0_sva_X0 ;
  assign _054__T = | FpMantDecShiftRight_10U_6U_10U_stick_bits_9_0_sva_T ;
  assign FpMantDecShiftRight_10U_6U_10U_stick_bits_9_0_sva_C0 = { 10{ _054__C }} ;
  assign FpMantDecShiftRight_10U_6U_10U_stick_bits_9_0_sva_X0 = { 10{ _054__X }} ;
  assign FpMantDecShiftRight_10U_6U_10U_stick_bits_9_0_sva_R0 = { 10{ _054__R }} & FpMantDecShiftRight_10U_6U_10U_stick_bits_9_0_sva ;
  assign _054__S = 0 ;
  assign _055_ = | FpMantDecShiftRight_10U_6U_10U_least_bits_9_0_sva;
  logic [9:0] FpMantDecShiftRight_10U_6U_10U_least_bits_9_0_sva_C0 ;
  logic [9:0] FpMantDecShiftRight_10U_6U_10U_least_bits_9_0_sva_R0 ;
  logic [9:0] FpMantDecShiftRight_10U_6U_10U_least_bits_9_0_sva_X0 ;
  assign _055__T = | FpMantDecShiftRight_10U_6U_10U_least_bits_9_0_sva_T ;
  assign FpMantDecShiftRight_10U_6U_10U_least_bits_9_0_sva_C0 = { 10{ _055__C }} ;
  assign FpMantDecShiftRight_10U_6U_10U_least_bits_9_0_sva_X0 = { 10{ _055__X }} ;
  assign FpMantDecShiftRight_10U_6U_10U_least_bits_9_0_sva_R0 = { 10{ _055__R }} & FpMantDecShiftRight_10U_6U_10U_least_bits_9_0_sva ;
  assign _055__S = 0 ;
  assign _056_ = | chn_a_rsci_d_mxwt[9:0];
  assign _056__T = | chn_a_rsci_d_mxwt_T [9:0] ;
  assign chn_a_rsci_d_mxwt_C2 [9:0] = { 10{ _056__C }} ;
  assign chn_a_rsci_d_mxwt_X2 [9:0] = { 10{ _056__X }} ;
  assign chn_a_rsci_d_mxwt_R2 [9:0] = { 10{ _056__R }} & chn_a_rsci_d_mxwt[9:0] ;
  assign _056__S = 0 ;
  assign _057_ = ~ chn_a_rsci_bawt;
  logic [0:0] chn_a_rsci_bawt_C2 ;
  logic [0:0] chn_a_rsci_bawt_R2 ;
  logic [0:0] chn_a_rsci_bawt_X2 ;
  assign _057__T = chn_a_rsci_bawt_T ;
  assign chn_a_rsci_bawt_C2 = _057__C ;
  assign chn_a_rsci_bawt_R2 = _057__R ;
  assign chn_a_rsci_bawt_X2 = _057__X ;
  assign _057__S = 0 ;
  assign _058_ = ~ _083_;
  logic [0:0] _083__C0 ;
  logic [0:0] _083__R0 ;
  logic [0:0] _083__X0 ;
  assign _058__T = _083__T ;
  assign _083__C0 = _058__C ;
  assign _083__R0 = _058__R ;
  assign _083__X0 = _058__X ;
  assign _058__S = 0 ;
  assign _059_ = ~ FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl[6];
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R1 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R1 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R1 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R1 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R1 [4], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R1 [5] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X1 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X1 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X1 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X1 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X1 [4], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X1 [5] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C1 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C1 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C1 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C1 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C1 [4], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C1 [5] } = 0;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C2 ;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R2 ;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X2 ;
  assign _059__T = FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_T [6] ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C2 [6] = _059__C ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R2 [6] = _059__R ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X2 [6] = _059__X ;
  assign _059__S = 0 ;
  assign _060_ = ~ _084_;
  logic [0:0] _084__C0 ;
  logic [0:0] _084__R0 ;
  logic [0:0] _084__X0 ;
  assign _060__T = _084__T ;
  assign _084__C0 = _060__C ;
  assign _084__R0 = _060__R ;
  assign _084__X0 = _060__X ;
  assign _060__S = 0 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl = ~ _001_;
  logic [9:0] _001__C0 ;
  logic [9:0] _001__R0 ;
  logic [9:0] _001__X0 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_T = _001__T ;
  assign _001__C0 = FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_C ;
  assign _001__R0 = FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_R ;
  assign _001__X0 = FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_X ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_S = 0 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl = ~ _002_;
  logic [9:0] _002__C0 ;
  logic [9:0] _002__R0 ;
  logic [9:0] _002__X0 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_T = _002__T ;
  assign _002__C0 = FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_C ;
  assign _002__R0 = FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_R ;
  assign _002__X0 = FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_X ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_S = 0 ;
  assign _051_[2:0] = ~ chn_a_rsci_d_mxwt[13:11];
  assign { chn_a_rsci_d_mxwt_R2 [16:16] } = 0;
  assign { chn_a_rsci_d_mxwt_X2 [16:16] } = 0;
  assign { chn_a_rsci_d_mxwt_C2 [16:16] } = 0;
  logic [16:0] chn_a_rsci_d_mxwt_C3 ;
  logic [16:0] chn_a_rsci_d_mxwt_R3 ;
  logic [16:0] chn_a_rsci_d_mxwt_X3 ;
  assign _051__T [2:0] = chn_a_rsci_d_mxwt_T [13:11] ;
  assign chn_a_rsci_d_mxwt_C3 [13:11] = _051__C [2:0] ;
  assign chn_a_rsci_d_mxwt_R3 [13:11] = _051__R [2:0] ;
  assign chn_a_rsci_d_mxwt_X3 [13:11] = _051__X [2:0] ;
  assign _051__S = 0 ;
  assign _061_ = ~ and_tmp_1;
  logic [0:0] and_tmp_1_C0 ;
  logic [0:0] and_tmp_1_R0 ;
  logic [0:0] and_tmp_1_X0 ;
  assign _061__T = and_tmp_1_T ;
  assign and_tmp_1_C0 = _061__C ;
  assign and_tmp_1_R0 = _061__R ;
  assign and_tmp_1_X0 = _061__X ;
  assign _061__S = 0 ;
  assign nor_7_nl = ~ _085_;
  logic [0:0] _085__C0 ;
  logic [0:0] _085__R0 ;
  logic [0:0] _085__X0 ;
  assign nor_7_nl_T = _085__T ;
  assign _085__C0 = nor_7_nl_C ;
  assign _085__R0 = nor_7_nl_R ;
  assign _085__X0 = nor_7_nl_X ;
  assign nor_7_nl_S = 0 ;
  assign _000_ = ~ or_tmp_7;
  logic [0:0] or_tmp_7_C0 ;
  logic [0:0] or_tmp_7_R0 ;
  logic [0:0] or_tmp_7_X0 ;
  assign _000__T = or_tmp_7_T ;
  assign or_tmp_7_C0 = _000__C ;
  assign or_tmp_7_R0 = _000__R ;
  assign or_tmp_7_X0 = _000__X ;
  assign _000__S = 0 ;
  assign _062_ = ~ main_stage_v_1;
  logic [0:0] main_stage_v_1_C3 ;
  logic [0:0] main_stage_v_1_R3 ;
  logic [0:0] main_stage_v_1_X3 ;
  assign _062__T = main_stage_v_1_T ;
  assign main_stage_v_1_C3 = _062__C ;
  assign main_stage_v_1_R3 = _062__R ;
  assign main_stage_v_1_X3 = _062__X ;
  assign _062__S = 0 ;
  assign nor_nl = ~ _087_;
  logic [0:0] _087__C0 ;
  logic [0:0] _087__R0 ;
  logic [0:0] _087__X0 ;
  assign nor_nl_T = _087__T ;
  assign _087__C0 = nor_nl_C ;
  assign _087__R0 = nor_nl_R ;
  assign _087__X0 = nor_nl_X ;
  assign nor_nl_S = 0 ;
  assign nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s[0] = ~ FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1[10];
  assign nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_T [0] = FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_T [10] ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C2 [10] = nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_C [0] ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R2 [10] = nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_R [0] ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X2 [10] = nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_X [0] ;
  assign nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_S = 0 ;
  assign nor_5_cse = ~ _088_;
  logic [0:0] _088__C1 ;
  logic [0:0] _088__R1 ;
  logic [0:0] _088__X1 ;
  assign nor_5_cse_T = _088__T ;
  assign _088__C1 = nor_5_cse_C ;
  assign _088__R1 = nor_5_cse_R ;
  assign _088__X1 = nor_5_cse_X ;
  assign nor_5_cse_S = 0 ;
  assign _063_ = ~ _089_;
  logic [0:0] _089__C0 ;
  logic [0:0] _089__R0 ;
  logic [0:0] _089__X0 ;
  assign _063__T = _089__T ;
  assign _089__C0 = _063__C ;
  assign _089__R0 = _063__R ;
  assign _089__X0 = _063__X ;
  assign _063__S = 0 ;
  assign _064_ = ~ and_dcpl_8;
  logic [0:0] and_dcpl_8_C0 ;
  logic [0:0] and_dcpl_8_R0 ;
  logic [0:0] and_dcpl_8_X0 ;
  assign _064__T = and_dcpl_8_T ;
  assign and_dcpl_8_C0 = _064__C ;
  assign and_dcpl_8_R0 = _064__R ;
  assign and_dcpl_8_X0 = _064__X ;
  assign _064__S = 0 ;
  assign _065_ = ~ chn_a_rsci_d_mxwt[15:10];
  assign { chn_a_rsci_d_mxwt_R3 [0], chn_a_rsci_d_mxwt_R3 [1], chn_a_rsci_d_mxwt_R3 [2], chn_a_rsci_d_mxwt_R3 [3], chn_a_rsci_d_mxwt_R3 [4], chn_a_rsci_d_mxwt_R3 [5], chn_a_rsci_d_mxwt_R3 [6], chn_a_rsci_d_mxwt_R3 [7], chn_a_rsci_d_mxwt_R3 [8], chn_a_rsci_d_mxwt_R3 [9], chn_a_rsci_d_mxwt_R3 [10], chn_a_rsci_d_mxwt_R3 [16:14] } = 0;
  assign { chn_a_rsci_d_mxwt_X3 [0], chn_a_rsci_d_mxwt_X3 [1], chn_a_rsci_d_mxwt_X3 [2], chn_a_rsci_d_mxwt_X3 [3], chn_a_rsci_d_mxwt_X3 [4], chn_a_rsci_d_mxwt_X3 [5], chn_a_rsci_d_mxwt_X3 [6], chn_a_rsci_d_mxwt_X3 [7], chn_a_rsci_d_mxwt_X3 [8], chn_a_rsci_d_mxwt_X3 [9], chn_a_rsci_d_mxwt_X3 [10], chn_a_rsci_d_mxwt_X3 [16:14] } = 0;
  assign { chn_a_rsci_d_mxwt_C3 [0], chn_a_rsci_d_mxwt_C3 [1], chn_a_rsci_d_mxwt_C3 [2], chn_a_rsci_d_mxwt_C3 [3], chn_a_rsci_d_mxwt_C3 [4], chn_a_rsci_d_mxwt_C3 [5], chn_a_rsci_d_mxwt_C3 [6], chn_a_rsci_d_mxwt_C3 [7], chn_a_rsci_d_mxwt_C3 [8], chn_a_rsci_d_mxwt_C3 [9], chn_a_rsci_d_mxwt_C3 [10], chn_a_rsci_d_mxwt_C3 [16:14] } = 0;
  logic [16:0] chn_a_rsci_d_mxwt_C4 ;
  logic [16:0] chn_a_rsci_d_mxwt_R4 ;
  logic [16:0] chn_a_rsci_d_mxwt_X4 ;
  assign _065__T = chn_a_rsci_d_mxwt_T [15:10] ;
  assign chn_a_rsci_d_mxwt_C4 [15:10] = _065__C ;
  assign chn_a_rsci_d_mxwt_R4 [15:10] = _065__R ;
  assign chn_a_rsci_d_mxwt_X4 [15:10] = _065__X ;
  assign _065__S = 0 ;
  assign _066_ = ~ reg_chn_o_rsci_ld_core_psct_cse;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C2 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R2 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X2 ;
  assign _066__T = reg_chn_o_rsci_ld_core_psct_cse_T ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C2 = _066__C ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R2 = _066__R ;
  assign reg_chn_o_rsci_ld_core_psct_cse_X2 = _066__X ;
  assign _066__S = 0 ;
  assign _067_ = ~ or_cse;
  logic [0:0] or_cse_C8 ;
  logic [0:0] or_cse_R8 ;
  logic [0:0] or_cse_X8 ;
  assign _067__T = or_cse_T ;
  assign or_cse_C8 = _067__C ;
  assign or_cse_R8 = _067__R ;
  assign or_cse_X8 = _067__X ;
  assign _067__S = 0 ;
  assign _068_ = ~ FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_C1 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_R1 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_X1 ;
  assign _068__T = FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_T ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_C1 = _068__C ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_R1 = _068__R ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_X1 = _068__X ;
  assign _068__S = 0 ;
  assign _069_ = ~ _031_;
  logic [0:0] _031__C1 ;
  logic [0:0] _031__R1 ;
  logic [0:0] _031__X1 ;
  assign _069__T = _031__T ;
  assign _031__C1 = _069__C ;
  assign _031__R1 = _069__R ;
  assign _031__X1 = _069__X ;
  assign _069__S = 0 ;
  assign or_tmp_8 = ~ _032_;
  logic [0:0] _032__C0 ;
  logic [0:0] _032__R0 ;
  logic [0:0] _032__X0 ;
  assign or_tmp_8_T = _032__T ;
  assign _032__C0 = or_tmp_8_C ;
  assign _032__R0 = or_tmp_8_R ;
  assign _032__X0 = or_tmp_8_X ;
  assign or_tmp_8_S = 0 ;
  assign _070_ = ~ chn_o_rsci_bawt;
  logic [0:0] chn_o_rsci_bawt_C1 ;
  logic [0:0] chn_o_rsci_bawt_R1 ;
  logic [0:0] chn_o_rsci_bawt_X1 ;
  assign _070__T = chn_o_rsci_bawt_T ;
  assign chn_o_rsci_bawt_C1 = _070__C ;
  assign chn_o_rsci_bawt_R1 = _070__R ;
  assign chn_o_rsci_bawt_X1 = _070__X ;
  assign _070__S = 0 ;
  assign _071_ = ~ and_6_mdf;
  logic [0:0] and_6_mdf_C1 ;
  logic [0:0] and_6_mdf_R1 ;
  logic [0:0] and_6_mdf_X1 ;
  assign _071__T = and_6_mdf_T ;
  assign and_6_mdf_C1 = _071__C ;
  assign and_6_mdf_R1 = _071__R ;
  assign and_6_mdf_X1 = _071__X ;
  assign _071__S = 0 ;
  assign _072_ = ~ _034_;
  logic [0:0] _034__C0 ;
  logic [0:0] _034__R0 ;
  logic [0:0] _034__X0 ;
  assign _072__T = _034__T ;
  assign _034__C0 = _072__C ;
  assign _034__R0 = _072__R ;
  assign _034__X0 = _072__X ;
  assign _072__S = 0 ;
  assign _073_ = ~ FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1[14];
  assign _073__T = FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_T [14] ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C2 [14] = _073__C ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R2 [14] = _073__R ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X2 [14] = _073__X ;
  assign _073__S = 0 ;
  assign _074_ = ~ FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_C0 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_R0 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_X0 ;
  assign _074__T = FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_T ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_C0 = _074__C ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_R0 = _074__R ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_X0 = _074__X ;
  assign _074__S = 0 ;
  assign _075_ = ~ and_dcpl_14;
  logic [0:0] and_dcpl_14_C0 ;
  logic [0:0] and_dcpl_14_R0 ;
  logic [0:0] and_dcpl_14_X0 ;
  assign _075__T = and_dcpl_14_T ;
  assign and_dcpl_14_C0 = _075__C ;
  assign and_dcpl_14_R0 = _075__R ;
  assign and_dcpl_14_X0 = _075__X ;
  assign _075__S = 0 ;
  assign _076_ = ~ main_stage_v_1_mx0c1;
  logic [0:0] main_stage_v_1_mx0c1_C0 ;
  logic [0:0] main_stage_v_1_mx0c1_R0 ;
  logic [0:0] main_stage_v_1_mx0c1_X0 ;
  assign _076__T = main_stage_v_1_mx0c1_T ;
  assign main_stage_v_1_mx0c1_C0 = _076__C ;
  assign main_stage_v_1_mx0c1_R0 = _076__R ;
  assign main_stage_v_1_mx0c1_X0 = _076__X ;
  assign _076__S = 0 ;
  assign _077_ = ~ _056_;
  logic [0:0] _056__C0 ;
  logic [0:0] _056__R0 ;
  logic [0:0] _056__X0 ;
  assign _077__T = _056__T ;
  assign _056__C0 = _077__C ;
  assign _056__R0 = _077__R ;
  assign _056__X0 = _077__X ;
  assign _077__S = 0 ;
  assign _078_ = ~ _052_;
  logic [0:0] _052__C0 ;
  logic [0:0] _052__R0 ;
  logic [0:0] _052__X0 ;
  assign _078__T = _052__T ;
  assign _052__C0 = _078__C ;
  assign _052__R0 = _078__R ;
  assign _052__X0 = _078__X ;
  assign _078__S = 0 ;
  assign _079_ = ~ FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl[5];
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C0 ;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R0 ;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X0 ;
  assign _079__T = FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_T [5] ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C0 [5] = _079__C ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R0 [5] = _079__R ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X0 [5] = _079__X ;
  assign _079__S = 0 ;
  assign _080_ = and_dcpl_8 | _059_;
  assign _080__S = 0 ;
  logic [0:0] and_dcpl_8_C1 ;
  logic [0:0] and_dcpl_8_R1 ;
  logic [0:0] and_dcpl_8_X1 ;
  logic [0:0] _059__C1 ;
  logic [0:0] _059__R1 ;
  logic [0:0] _059__X1 ;
  assign _080__T = and_dcpl_8_T | _059__T ;
  assign and_dcpl_8_C1 = _080__C ;
  assign and_dcpl_8_X1 = _080__X ;
  assign _059__C1 = _080__C ;
  assign _059__X1 = _080__X ;
  assign and_dcpl_8_R1 = ( _080__R | _080__C & _059__T ) & { 1{ _059_ != 1'b1 }} ;
  assign _059__R1 = ( _080__R | _080__C & and_dcpl_8_T ) & { 1{ and_dcpl_8 != 1'b1 }} ;
  assign _081_ = _080_ | _057_;
  assign _081__S = 0 ;
  logic [0:0] _080__C0 ;
  logic [0:0] _080__R0 ;
  logic [0:0] _080__X0 ;
  logic [0:0] _057__C1 ;
  logic [0:0] _057__R1 ;
  logic [0:0] _057__X1 ;
  assign _081__T = _080__T | _057__T ;
  assign _080__C0 = _081__C ;
  assign _080__X0 = _081__X ;
  assign _057__C1 = _081__C ;
  assign _057__X1 = _081__X ;
  assign _080__R0 = ( _081__R | _081__C & _057__T ) & { 1{ _057_ != 1'b1 }} ;
  assign _057__R1 = ( _081__R | _081__C & _080__T ) & { 1{ _080_ != 1'b1 }} ;
  assign _082_ = _081_ | FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl[5];
  assign _082__S = 0 ;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R0 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R0 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R0 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R0 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R0 [4] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X0 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X0 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X0 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X0 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X0 [4] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C0 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C0 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C0 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C0 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C0 [4] } = 0;
  logic [0:0] _081__C0 ;
  logic [0:0] _081__R0 ;
  logic [0:0] _081__X0 ;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C1 ;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R1 ;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X1 ;
  assign _082__T = _081__T | FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_T [5] ;
  assign _081__C0 = _082__C ;
  assign _081__X0 = _082__X ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C1 [5] = _082__C ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X1 [5] = _082__X ;
  assign _081__R0 = ( _082__R | _082__C & FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_T [5] ) & { 1{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl[5] != 1'b1 }} ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R1 [5] = ( _082__R | _082__C & _081__T ) & { 1{ _081_ != 1'b1 }} ;
  assign _083_ = _082_ | fsm_output[0];
  assign _083__S = 0 ;
  logic [0:0] _082__C0 ;
  logic [0:0] _082__R0 ;
  logic [0:0] _082__X0 ;
  assign _083__T = _082__T | fsm_output_T [0] ;
  assign _082__C0 = _083__C ;
  assign _082__X0 = _083__X ;
  assign fsm_output_C1 [0] = _083__C ;
  assign fsm_output_X1 [0] = _083__X ;
  assign _082__R0 = ( _083__R | _083__C & fsm_output_T [0] ) & { 1{ fsm_output[0] != 1'b1 }} ;
  assign fsm_output_R1 [0] = ( _083__R | _083__C & _082__T ) & { 1{ _082_ != 1'b1 }} ;
  assign _084_ = _081_ | fsm_output[0];
  assign _084__S = 0 ;
  logic [0:0] _081__C1 ;
  logic [0:0] _081__R1 ;
  logic [0:0] _081__X1 ;
  logic [1:0] fsm_output_C2 ;
  logic [1:0] fsm_output_R2 ;
  logic [1:0] fsm_output_X2 ;
  assign _084__T = _081__T | fsm_output_T [0] ;
  assign _081__C1 = _084__C ;
  assign _081__X1 = _084__X ;
  assign fsm_output_C2 [0] = _084__C ;
  assign fsm_output_X2 [0] = _084__X ;
  assign _081__R1 = ( _084__R | _084__C & fsm_output_T [0] ) & { 1{ fsm_output[0] != 1'b1 }} ;
  assign fsm_output_R2 [0] = ( _084__R | _084__C & _081__T ) & { 1{ _081_ != 1'b1 }} ;
  assign or_6_nl = FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl[6] | FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl[5];
  assign or_6_nl_S = 0 ;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R1 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R1 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R1 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R1 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R1 [4] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X1 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X1 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X1 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X1 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X1 [4] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C1 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C1 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C1 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C1 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C1 [4] } = 0;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C0 ;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R0 ;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X0 ;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C2 ;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R2 ;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X2 ;
  assign or_6_nl_T = FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_T [6] | FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_T [5] ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C0 [6] = or_6_nl_C ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X0 [6] = or_6_nl_X ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C2 [5] = or_6_nl_C ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X2 [5] = or_6_nl_X ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R0 [6] = ( or_6_nl_R | or_6_nl_C & FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_T [5] ) & { 1{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl[5] != 1'b1 }} ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R2 [5] = ( or_6_nl_R | or_6_nl_C & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_T [6] ) & { 1{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl[6] != 1'b1 }} ;
  assign _085_ = or_6_nl | _061_;
  assign _085__S = 0 ;
  logic [0:0] or_6_nl_C0 ;
  logic [0:0] or_6_nl_R0 ;
  logic [0:0] or_6_nl_X0 ;
  logic [0:0] _061__C0 ;
  logic [0:0] _061__R0 ;
  logic [0:0] _061__X0 ;
  assign _085__T = or_6_nl_T | _061__T ;
  assign or_6_nl_C0 = _085__C ;
  assign or_6_nl_X0 = _085__X ;
  assign _061__C0 = _085__C ;
  assign _061__X0 = _085__X ;
  assign or_6_nl_R0 = ( _085__R | _085__C & _061__T ) & { 1{ _061_ != 1'b1 }} ;
  assign _061__R0 = ( _085__R | _085__C & or_6_nl_T ) & { 1{ or_6_nl != 1'b1 }} ;
  assign _086_ = FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2 | _062_;
  assign _086__S = 0 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_C0 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_R0 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_X0 ;
  logic [0:0] _062__C1 ;
  logic [0:0] _062__R1 ;
  logic [0:0] _062__X1 ;
  assign _086__T = FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_T | _062__T ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_C0 = _086__C ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_X0 = _086__X ;
  assign _062__C1 = _086__C ;
  assign _062__X1 = _086__X ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_R0 = ( _086__R | _086__C & _062__T ) & { 1{ _062_ != 1'b1 }} ;
  assign _062__R1 = ( _086__R | _086__C & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_T ) & { 1{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2 != 1'b1 }} ;
  assign or_3_nl = _086_ | FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2;
  assign or_3_nl_S = 0 ;
  logic [0:0] _086__C0 ;
  logic [0:0] _086__R0 ;
  logic [0:0] _086__X0 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_C0 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_R0 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_X0 ;
  assign or_3_nl_T = _086__T | FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_T ;
  assign _086__C0 = or_3_nl_C ;
  assign _086__X0 = or_3_nl_X ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_C0 = or_3_nl_C ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_X0 = or_3_nl_X ;
  assign _086__R0 = ( or_3_nl_R | or_3_nl_C & FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_T ) & { 1{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2 != 1'b1 }} ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_R0 = ( or_3_nl_R | or_3_nl_C & _086__T ) & { 1{ _086_ != 1'b1 }} ;
  assign _087_ = FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl[5] | _061_;
  assign _087__S = 0 ;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R2 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R2 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R2 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R2 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R2 [4] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X2 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X2 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X2 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X2 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X2 [4] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C2 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C2 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C2 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C2 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C2 [4] } = 0;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C3 ;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R3 ;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X3 ;
  logic [0:0] _061__C1 ;
  logic [0:0] _061__R1 ;
  logic [0:0] _061__X1 ;
  assign _087__T = FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_T [5] | _061__T ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C3 [5] = _087__C ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X3 [5] = _087__X ;
  assign _061__C1 = _087__C ;
  assign _061__X1 = _087__X ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R3 [5] = ( _087__R | _087__C & _061__T ) & { 1{ _061_ != 1'b1 }} ;
  assign _061__R1 = ( _087__R | _087__C & FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_T [5] ) & { 1{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl[5] != 1'b1 }} ;
  assign or_10_nl = _062_ | FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2;
  assign or_10_nl_S = 0 ;
  logic [0:0] _062__C2 ;
  logic [0:0] _062__R2 ;
  logic [0:0] _062__X2 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_C1 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_R1 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_X1 ;
  assign or_10_nl_T = _062__T | FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_T ;
  assign _062__C2 = or_10_nl_C ;
  assign _062__X2 = or_10_nl_X ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_C1 = or_10_nl_C ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_X1 = or_10_nl_X ;
  assign _062__R2 = ( or_10_nl_R | or_10_nl_C & FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_T ) & { 1{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2 != 1'b1 }} ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_R1 = ( or_10_nl_R | or_10_nl_C & _062__T ) & { 1{ _062_ != 1'b1 }} ;
  assign _088_ = IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2 | IsNaN_6U_10U_nor_itm_2;
  assign _088__S = 0 ;
  logic [0:0] IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_C0 ;
  logic [0:0] IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_R0 ;
  logic [0:0] IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_X0 ;
  logic [0:0] IsNaN_6U_10U_nor_itm_2_C0 ;
  logic [0:0] IsNaN_6U_10U_nor_itm_2_R0 ;
  logic [0:0] IsNaN_6U_10U_nor_itm_2_X0 ;
  assign _088__T = IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_T | IsNaN_6U_10U_nor_itm_2_T ;
  assign IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_C0 = _088__C ;
  assign IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_X0 = _088__X ;
  assign IsNaN_6U_10U_nor_itm_2_C0 = _088__C ;
  assign IsNaN_6U_10U_nor_itm_2_X0 = _088__X ;
  assign IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_R0 = ( _088__R | _088__C & IsNaN_6U_10U_nor_itm_2_T ) & { 1{ IsNaN_6U_10U_nor_itm_2 != 1'b1 }} ;
  assign IsNaN_6U_10U_nor_itm_2_R0 = ( _088__R | _088__C & IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_T ) & { 1{ IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2 != 1'b1 }} ;
  assign _089_ = and_dcpl_8 | _062_;
  assign _089__S = 0 ;
  logic [0:0] and_dcpl_8_C2 ;
  logic [0:0] and_dcpl_8_R2 ;
  logic [0:0] and_dcpl_8_X2 ;
  logic [0:0] _062__C3 ;
  logic [0:0] _062__R3 ;
  logic [0:0] _062__X3 ;
  assign _089__T = and_dcpl_8_T | _062__T ;
  assign and_dcpl_8_C2 = _089__C ;
  assign and_dcpl_8_X2 = _089__X ;
  assign _062__C3 = _089__C ;
  assign _062__X3 = _089__X ;
  assign and_dcpl_8_R2 = ( _089__R | _089__C & _062__T ) & { 1{ _062_ != 1'b1 }} ;
  assign _062__R3 = ( _089__R | _089__C & and_dcpl_8_T ) & { 1{ and_dcpl_8 != 1'b1 }} ;
  assign _090_ = _059_ | FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl[5];
  assign _090__S = 0 ;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R3 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R3 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R3 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R3 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R3 [4] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X3 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X3 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X3 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X3 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X3 [4] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C3 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C3 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C3 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C3 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C3 [4] } = 0;
  logic [0:0] _059__C2 ;
  logic [0:0] _059__R2 ;
  logic [0:0] _059__X2 ;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C4 ;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R4 ;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X4 ;
  assign _090__T = _059__T | FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_T [5] ;
  assign _059__C2 = _090__C ;
  assign _059__X2 = _090__X ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C4 [5] = _090__C ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X4 [5] = _090__X ;
  assign _059__R2 = ( _090__R | _090__C & FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_T [5] ) & { 1{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl[5] != 1'b1 }} ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R4 [5] = ( _090__R | _090__C & _059__T ) & { 1{ _059_ != 1'b1 }} ;
  assign _091_ = _053_ | FpMantDecShiftRight_10U_6U_10U_guard_mask_sva[10];
  assign _091__S = 0 ;
  logic [0:0] _053__C0 ;
  logic [0:0] _053__R0 ;
  logic [0:0] _053__X0 ;
  assign _091__T = _053__T | FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_T [10] ;
  assign _053__C0 = _091__C ;
  assign _053__X0 = _091__X ;
  assign FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_C1 [10] = _091__C ;
  assign FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_X1 [10] = _091__X ;
  assign _053__R0 = ( _091__R | _091__C & FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_T [10] ) & { 1{ FpMantDecShiftRight_10U_6U_10U_guard_mask_sva[10] != 1'b1 }} ;
  assign FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_R1 [10] = ( _091__R | _091__C & _053__T ) & { 1{ _053_ != 1'b1 }} ;
  assign _092_ = _054_ | FpMantDecShiftRight_10U_6U_10U_stick_mask_sva[10];
  assign _092__S = 0 ;
  logic [0:0] _054__C0 ;
  logic [0:0] _054__R0 ;
  logic [0:0] _054__X0 ;
  assign _092__T = _054__T | FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_T [10] ;
  assign _054__C0 = _092__C ;
  assign _054__X0 = _092__X ;
  assign FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_C0 [10] = _092__C ;
  assign FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_X0 [10] = _092__X ;
  assign _054__R0 = ( _092__R | _092__C & FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_T [10] ) & { 1{ FpMantDecShiftRight_10U_6U_10U_stick_mask_sva[10] != 1'b1 }} ;
  assign FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_R0 [10] = ( _092__R | _092__C & _054__T ) & { 1{ _054_ != 1'b1 }} ;
  assign _093_ = _092_ | _055_;
  assign _093__S = 0 ;
  logic [0:0] _092__C0 ;
  logic [0:0] _092__R0 ;
  logic [0:0] _092__X0 ;
  logic [0:0] _055__C0 ;
  logic [0:0] _055__R0 ;
  logic [0:0] _055__X0 ;
  assign _093__T = _092__T | _055__T ;
  assign _092__C0 = _093__C ;
  assign _092__X0 = _093__X ;
  assign _055__C0 = _093__C ;
  assign _055__X0 = _093__X ;
  assign _092__R0 = ( _093__R | _093__C & _055__T ) & { 1{ _055_ != 1'b1 }} ;
  assign _055__R0 = ( _093__R | _093__C & _092__T ) & { 1{ _092_ != 1'b1 }} ;
  assign _094_ = _093_ | FpMantDecShiftRight_10U_6U_10U_least_mask_sva[10];
  assign _094__S = 0 ;
  logic [0:0] _093__C0 ;
  logic [0:0] _093__R0 ;
  logic [0:0] _093__X0 ;
  assign _094__T = _093__T | FpMantDecShiftRight_10U_6U_10U_least_mask_sva_T [10] ;
  assign _093__C0 = _094__C ;
  assign _093__X0 = _094__X ;
  assign FpMantDecShiftRight_10U_6U_10U_least_mask_sva_C0 [10] = _094__C ;
  assign FpMantDecShiftRight_10U_6U_10U_least_mask_sva_X0 [10] = _094__X ;
  assign _093__R0 = ( _094__R | _094__C & FpMantDecShiftRight_10U_6U_10U_least_mask_sva_T [10] ) & { 1{ FpMantDecShiftRight_10U_6U_10U_least_mask_sva[10] != 1'b1 }} ;
  assign FpMantDecShiftRight_10U_6U_10U_least_mask_sva_R0 [10] = ( _094__R | _094__C & _093__T ) & { 1{ _093_ != 1'b1 }} ;
  assign or_cse = chn_o_rsci_bawt | _066_;
  assign or_cse_S = 0 ;
  logic [0:0] chn_o_rsci_bawt_C2 ;
  logic [0:0] chn_o_rsci_bawt_R2 ;
  logic [0:0] chn_o_rsci_bawt_X2 ;
  logic [0:0] _066__C0 ;
  logic [0:0] _066__R0 ;
  logic [0:0] _066__X0 ;
  assign or_cse_T = chn_o_rsci_bawt_T | _066__T ;
  assign chn_o_rsci_bawt_C2 = or_cse_C ;
  assign chn_o_rsci_bawt_X2 = or_cse_X ;
  assign _066__C0 = or_cse_C ;
  assign _066__X0 = or_cse_X ;
  assign chn_o_rsci_bawt_R2 = ( or_cse_R | or_cse_C & _066__T ) & { 1{ _066_ != 1'b1 }} ;
  assign _066__R0 = ( or_cse_R | or_cse_C & chn_o_rsci_bawt_T ) & { 1{ chn_o_rsci_bawt != 1'b1 }} ;
  assign or_2_nl = chn_a_rsci_bawt | _067_;
  assign or_2_nl_S = 0 ;
  logic [0:0] chn_a_rsci_bawt_C3 ;
  logic [0:0] chn_a_rsci_bawt_R3 ;
  logic [0:0] chn_a_rsci_bawt_X3 ;
  logic [0:0] _067__C0 ;
  logic [0:0] _067__R0 ;
  logic [0:0] _067__X0 ;
  assign or_2_nl_T = chn_a_rsci_bawt_T | _067__T ;
  assign chn_a_rsci_bawt_C3 = or_2_nl_C ;
  assign chn_a_rsci_bawt_X3 = or_2_nl_X ;
  assign _067__C0 = or_2_nl_C ;
  assign _067__X0 = or_2_nl_X ;
  assign chn_a_rsci_bawt_R3 = ( or_2_nl_R | or_2_nl_C & _067__T ) & { 1{ _067_ != 1'b1 }} ;
  assign _067__R0 = ( or_2_nl_R | or_2_nl_C & chn_a_rsci_bawt_T ) & { 1{ chn_a_rsci_bawt != 1'b1 }} ;
  assign _095_ = _068_ | chn_o_rsci_bawt;
  assign _095__S = 0 ;
  logic [0:0] _068__C0 ;
  logic [0:0] _068__R0 ;
  logic [0:0] _068__X0 ;
  logic [0:0] chn_o_rsci_bawt_C3 ;
  logic [0:0] chn_o_rsci_bawt_R3 ;
  logic [0:0] chn_o_rsci_bawt_X3 ;
  assign _095__T = _068__T | chn_o_rsci_bawt_T ;
  assign _068__C0 = _095__C ;
  assign _068__X0 = _095__X ;
  assign chn_o_rsci_bawt_C3 = _095__C ;
  assign chn_o_rsci_bawt_X3 = _095__X ;
  assign _068__R0 = ( _095__R | _095__C & chn_o_rsci_bawt_T ) & { 1{ chn_o_rsci_bawt != 1'b1 }} ;
  assign chn_o_rsci_bawt_R3 = ( _095__R | _095__C & _068__T ) & { 1{ _068_ != 1'b1 }} ;
  assign or_tmp_7 = _095_ | _066_;
  assign or_tmp_7_S = 0 ;
  logic [0:0] _095__C0 ;
  logic [0:0] _095__R0 ;
  logic [0:0] _095__X0 ;
  logic [0:0] _066__C1 ;
  logic [0:0] _066__R1 ;
  logic [0:0] _066__X1 ;
  assign or_tmp_7_T = _095__T | _066__T ;
  assign _095__C0 = or_tmp_7_C ;
  assign _095__X0 = or_tmp_7_X ;
  assign _066__C1 = or_tmp_7_C ;
  assign _066__X1 = or_tmp_7_X ;
  assign _095__R0 = ( or_tmp_7_R | or_tmp_7_C & _066__T ) & { 1{ _066_ != 1'b1 }} ;
  assign _066__R1 = ( or_tmp_7_R | or_tmp_7_C & _095__T ) & { 1{ _095_ != 1'b1 }} ;
  assign chn_a_rsci_ld_core_psct_mx0c0 = and_6_mdf | fsm_output[0];
  assign chn_a_rsci_ld_core_psct_mx0c0_S = 0 ;
  assign { fsm_output_R2 [1:1] } = 0;
  assign { fsm_output_X2 [1:1] } = 0;
  assign { fsm_output_C2 [1:1] } = 0;
  logic [0:0] and_6_mdf_C2 ;
  logic [0:0] and_6_mdf_R2 ;
  logic [0:0] and_6_mdf_X2 ;
  logic [1:0] fsm_output_C3 ;
  logic [1:0] fsm_output_R3 ;
  logic [1:0] fsm_output_X3 ;
  assign chn_a_rsci_ld_core_psct_mx0c0_T = and_6_mdf_T | fsm_output_T [0] ;
  assign and_6_mdf_C2 = chn_a_rsci_ld_core_psct_mx0c0_C ;
  assign and_6_mdf_X2 = chn_a_rsci_ld_core_psct_mx0c0_X ;
  assign fsm_output_C3 [0] = chn_a_rsci_ld_core_psct_mx0c0_C ;
  assign fsm_output_X3 [0] = chn_a_rsci_ld_core_psct_mx0c0_X ;
  assign and_6_mdf_R2 = ( chn_a_rsci_ld_core_psct_mx0c0_R | chn_a_rsci_ld_core_psct_mx0c0_C & fsm_output_T [0] ) & { 1{ fsm_output[0] != 1'b1 }} ;
  assign fsm_output_R3 [0] = ( chn_a_rsci_ld_core_psct_mx0c0_R | chn_a_rsci_ld_core_psct_mx0c0_C & and_6_mdf_T ) & { 1{ and_6_mdf != 1'b1 }} ;
  assign _096_ = _036_ | chn_o_rsci_d_9_0_mx0c1;
  assign _096__S = 0 ;
  logic [0:0] _036__C0 ;
  logic [0:0] _036__R0 ;
  logic [0:0] _036__X0 ;
  logic [0:0] chn_o_rsci_d_9_0_mx0c1_C0 ;
  logic [0:0] chn_o_rsci_d_9_0_mx0c1_R0 ;
  logic [0:0] chn_o_rsci_d_9_0_mx0c1_X0 ;
  assign _096__T = _036__T | chn_o_rsci_d_9_0_mx0c1_T ;
  assign _036__C0 = _096__C ;
  assign _036__X0 = _096__X ;
  assign chn_o_rsci_d_9_0_mx0c1_C0 = _096__C ;
  assign chn_o_rsci_d_9_0_mx0c1_X0 = _096__X ;
  assign _036__R0 = ( _096__R | _096__C & chn_o_rsci_d_9_0_mx0c1_T ) & { 1{ chn_o_rsci_d_9_0_mx0c1 != 1'b1 }} ;
  assign chn_o_rsci_d_9_0_mx0c1_R0 = ( _096__R | _096__C & _036__T ) & { 1{ _036_ != 1'b1 }} ;
  assign _097_ = _039_ | _068_;
  assign _097__S = 0 ;
  logic [0:0] _039__C0 ;
  logic [0:0] _039__R0 ;
  logic [0:0] _039__X0 ;
  logic [0:0] _068__C1 ;
  logic [0:0] _068__R1 ;
  logic [0:0] _068__X1 ;
  assign _097__T = _039__T | _068__T ;
  assign _039__C0 = _097__C ;
  assign _039__X0 = _097__X ;
  assign _068__C1 = _097__C ;
  assign _068__X1 = _097__X ;
  assign _039__R0 = ( _097__R | _097__C & _068__T ) & { 1{ _068_ != 1'b1 }} ;
  assign _068__R1 = ( _097__R | _097__C & _039__T ) & { 1{ _039_ != 1'b1 }} ;
  assign _098_ = _097_ | nor_5_cse;
  assign _098__S = 0 ;
  logic [0:0] _097__C0 ;
  logic [0:0] _097__R0 ;
  logic [0:0] _097__X0 ;
  logic [0:0] nor_5_cse_C1 ;
  logic [0:0] nor_5_cse_R1 ;
  logic [0:0] nor_5_cse_X1 ;
  assign _098__T = _097__T | nor_5_cse_T ;
  assign _097__C0 = _098__C ;
  assign _097__X0 = _098__X ;
  assign nor_5_cse_C1 = _098__C ;
  assign nor_5_cse_X1 = _098__X ;
  assign _097__R0 = ( _098__R | _098__C & nor_5_cse_T ) & { 1{ nor_5_cse != 1'b1 }} ;
  assign nor_5_cse_R1 = ( _098__R | _098__C & _097__T ) & { 1{ _097_ != 1'b1 }} ;
  assign _099_ = and_dcpl_11 | and_dcpl_14;
  assign _099__S = 0 ;
  logic [0:0] and_dcpl_11_C2 ;
  logic [0:0] and_dcpl_11_R2 ;
  logic [0:0] and_dcpl_11_X2 ;
  logic [0:0] and_dcpl_14_C1 ;
  logic [0:0] and_dcpl_14_R1 ;
  logic [0:0] and_dcpl_14_X1 ;
  assign _099__T = and_dcpl_11_T | and_dcpl_14_T ;
  assign and_dcpl_11_C2 = _099__C ;
  assign and_dcpl_11_X2 = _099__X ;
  assign and_dcpl_14_C1 = _099__C ;
  assign and_dcpl_14_X1 = _099__X ;
  assign and_dcpl_11_R2 = ( _099__R | _099__C & and_dcpl_14_T ) & { 1{ and_dcpl_14 != 1'b1 }} ;
  assign and_dcpl_14_R1 = ( _099__R | _099__C & and_dcpl_11_T ) & { 1{ and_dcpl_11 != 1'b1 }} ;
  assign _100_ = or_tmp_19 | main_stage_v_1_mx0c1;
  assign _100__S = 0 ;
  logic [0:0] or_tmp_19_C0 ;
  logic [0:0] or_tmp_19_R0 ;
  logic [0:0] or_tmp_19_X0 ;
  logic [0:0] main_stage_v_1_mx0c1_C1 ;
  logic [0:0] main_stage_v_1_mx0c1_R1 ;
  logic [0:0] main_stage_v_1_mx0c1_X1 ;
  assign _100__T = or_tmp_19_T | main_stage_v_1_mx0c1_T ;
  assign or_tmp_19_C0 = _100__C ;
  assign or_tmp_19_X0 = _100__X ;
  assign main_stage_v_1_mx0c1_C1 = _100__C ;
  assign main_stage_v_1_mx0c1_X1 = _100__X ;
  assign or_tmp_19_R0 = ( _100__R | _100__C & main_stage_v_1_mx0c1_T ) & { 1{ main_stage_v_1_mx0c1 != 1'b1 }} ;
  assign main_stage_v_1_mx0c1_R1 = ( _100__R | _100__C & or_tmp_19_T ) & { 1{ or_tmp_19 != 1'b1 }} ;
  assign _101_ = _045_ | and_35_rgt;
  assign _101__S = 0 ;
  logic [0:0] _045__C0 ;
  logic [0:0] _045__R0 ;
  logic [0:0] _045__X0 ;
  logic [0:0] and_35_rgt_C0 ;
  logic [0:0] and_35_rgt_R0 ;
  logic [0:0] and_35_rgt_X0 ;
  assign _101__T = _045__T | and_35_rgt_T ;
  assign _045__C0 = _101__C ;
  assign _045__X0 = _101__X ;
  assign and_35_rgt_C0 = _101__C ;
  assign and_35_rgt_X0 = _101__X ;
  assign _045__R0 = ( _101__R | _101__C & and_35_rgt_T ) & { 1{ and_35_rgt != 1'b1 }} ;
  assign and_35_rgt_R0 = ( _101__R | _101__C & _045__T ) & { 1{ _045_ != 1'b1 }} ;
  assign _102_ = _044_ | and_37_rgt;
  assign _102__S = 0 ;
  logic [0:0] _044__C1 ;
  logic [0:0] _044__R1 ;
  logic [0:0] _044__X1 ;
  logic [0:0] and_37_rgt_C0 ;
  logic [0:0] and_37_rgt_R0 ;
  logic [0:0] and_37_rgt_X0 ;
  assign _102__T = _044__T | and_37_rgt_T ;
  assign _044__C1 = _102__C ;
  assign _044__X1 = _102__X ;
  assign and_37_rgt_C0 = _102__C ;
  assign and_37_rgt_X0 = _102__X ;
  assign _044__R1 = ( _102__R | _102__C & and_37_rgt_T ) & { 1{ and_37_rgt != 1'b1 }} ;
  assign and_37_rgt_R0 = ( _102__R | _102__C & _044__T ) & { 1{ _044_ != 1'b1 }} ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs <= 1'b0;
    else
      FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs <= _009_;
  logic [0:0] _009__X0 ;
  logic [0:0] _009__R0 ;
  logic [0:0] _009__C0 ;
  assign _009__X0 = { 1{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_S != _009__S }} ;
  assign _009__R0 = 0 ;
  assign _009__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_T 		<= !nvdla_core_rstn ? 0 : ( _009__T & _009__X0 );
  always @( posedge nvdla_core_clk )
      FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_t_flag 	<= !nvdla_core_rstn ? 0 : FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_t_flag ? 1 : | _009__T & ( | _009__X0 );
  always @( posedge nvdla_core_clk )
      FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_r_flag 	<= !nvdla_core_rstn ? 0 : FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_r_flag ? 1 : FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_t_flag ? 0 : ( | FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs <= 1'b0;
    else
      FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs <= _006_;
  logic [0:0] _006__X0 ;
  logic [0:0] _006__R0 ;
  logic [0:0] _006__C0 ;
  assign _006__X0 = { 1{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_S != _006__S }} ;
  assign _006__R0 = 0 ;
  assign _006__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_T 		<= !nvdla_core_rstn ? 0 : ( _006__T & _006__X0 );
  always @( posedge nvdla_core_clk )
      FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_t_flag 	<= !nvdla_core_rstn ? 0 : FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_t_flag ? 1 : | _006__T & ( | _006__X0 );
  always @( posedge nvdla_core_clk )
      FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_r_flag 	<= !nvdla_core_rstn ? 0 : FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_r_flag ? 1 : FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_t_flag ? 0 : ( | FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2 <= 1'b0;
    else
      FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2 <= _011_;
  logic [0:0] _011__X0 ;
  logic [0:0] _011__R0 ;
  logic [0:0] _011__C0 ;
  assign _011__X0 = { 1{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_S != _011__S }} ;
  assign _011__R0 = 0 ;
  assign _011__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_T 		<= !nvdla_core_rstn ? 0 : ( _011__T & _011__X0 );
  always @( posedge nvdla_core_clk )
      FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_t_flag 	<= !nvdla_core_rstn ? 0 : FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_t_flag ? 1 : | _011__T & ( | _011__X0 );
  always @( posedge nvdla_core_clk )
      FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_r_flag 	<= !nvdla_core_rstn ? 0 : FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_r_flag ? 1 : FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_t_flag ? 0 : ( | FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2 <= 1'b0;
    else
      FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2 <= _010_;
  logic [0:0] _010__X0 ;
  logic [0:0] _010__R0 ;
  logic [0:0] _010__C0 ;
  assign _010__X0 = { 1{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_S != _010__S }} ;
  assign _010__R0 = 0 ;
  assign _010__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_T 		<= !nvdla_core_rstn ? 0 : ( _010__T & _010__X0 );
  always @( posedge nvdla_core_clk )
      FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_t_flag 	<= !nvdla_core_rstn ? 0 : FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_t_flag ? 1 : | _010__T & ( | _010__X0 );
  always @( posedge nvdla_core_clk )
      FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_r_flag 	<= !nvdla_core_rstn ? 0 : FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_r_flag ? 1 : FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_t_flag ? 0 : ( | FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2 <= 1'b0;
    else
      FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2 <= _007_;
  logic [0:0] _007__X0 ;
  logic [0:0] _007__R0 ;
  logic [0:0] _007__C0 ;
  assign _007__X0 = { 1{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_S != _007__S }} ;
  assign _007__R0 = 0 ;
  assign _007__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_T 		<= !nvdla_core_rstn ? 0 : ( _007__T & _007__X0 );
  always @( posedge nvdla_core_clk )
      FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_t_flag 	<= !nvdla_core_rstn ? 0 : FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_t_flag ? 1 : | _007__T & ( | _007__X0 );
  always @( posedge nvdla_core_clk )
      FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_r_flag 	<= !nvdla_core_rstn ? 0 : FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_r_flag ? 1 : FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_t_flag ? 0 : ( | FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2 <= 1'b0;
    else
      FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2 <= _008_;
  logic [0:0] _008__X0 ;
  logic [0:0] _008__R0 ;
  logic [0:0] _008__C0 ;
  assign _008__X0 = { 1{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_S != _008__S }} ;
  assign _008__R0 = 0 ;
  assign _008__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_T 		<= !nvdla_core_rstn ? 0 : ( _008__T & _008__X0 );
  always @( posedge nvdla_core_clk )
      FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_t_flag 	<= !nvdla_core_rstn ? 0 : FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_t_flag ? 1 : | _008__T & ( | _008__X0 );
  always @( posedge nvdla_core_clk )
      FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_r_flag 	<= !nvdla_core_rstn ? 0 : FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_r_flag ? 1 : FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_t_flag ? 0 : ( | FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2 <= 3'b000;
    else
      FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2 <= _005_;
  logic [2:0] _005__X0 ;
  logic [2:0] _005__R0 ;
  logic [2:0] _005__C0 ;
  assign _005__X0 = { 3{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_S != _005__S }} ;
  assign _005__R0 = 0 ;
  assign _005__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_T 		<= !nvdla_core_rstn ? 0 : ( _005__T & _005__X0 );
  always @( posedge nvdla_core_clk )
      FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_t_flag 	<= !nvdla_core_rstn ? 0 : FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_t_flag ? 1 : | _005__T & ( | _005__X0 );
  always @( posedge nvdla_core_clk )
      FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_r_flag 	<= !nvdla_core_rstn ? 0 : FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_r_flag ? 1 : FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_t_flag ? 0 : ( | FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2 <= 1'b0;
    else
      FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2 <= _012_;
  logic [0:0] _012__X0 ;
  logic [0:0] _012__R0 ;
  logic [0:0] _012__C0 ;
  assign _012__X0 = { 1{ FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_S != _012__S }} ;
  assign _012__R0 = 0 ;
  assign _012__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_T 		<= !nvdla_core_rstn ? 0 : ( _012__T & _012__X0 );
  always @( posedge nvdla_core_clk )
      FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_t_flag 	<= !nvdla_core_rstn ? 0 : FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_t_flag ? 1 : | _012__T & ( | _012__X0 );
  always @( posedge nvdla_core_clk )
      FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_r_flag 	<= !nvdla_core_rstn ? 0 : FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_r_flag ? 1 : FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_t_flag ? 0 : ( | FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      IsNaN_6U_10U_nor_itm_2 <= 1'b0;
    else
      IsNaN_6U_10U_nor_itm_2 <= _014_;
  logic [0:0] _014__X0 ;
  logic [0:0] _014__R0 ;
  logic [0:0] _014__C0 ;
  assign _014__X0 = { 1{ IsNaN_6U_10U_nor_itm_2_S != _014__S }} ;
  assign _014__R0 = 0 ;
  assign _014__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      IsNaN_6U_10U_nor_itm_2_T 		<= !nvdla_core_rstn ? 0 : ( _014__T & _014__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_6U_10U_nor_itm_2_t_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_6U_10U_nor_itm_2_t_flag ? 1 : | _014__T & ( | _014__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_6U_10U_nor_itm_2_r_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_6U_10U_nor_itm_2_r_flag ? 1 : IsNaN_6U_10U_nor_itm_2_t_flag ? 0 : ( | IsNaN_6U_10U_nor_itm_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2 <= 1'b0;
    else
      IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2 <= _013_;
  logic [0:0] _013__X0 ;
  logic [0:0] _013__R0 ;
  logic [0:0] _013__C0 ;
  assign _013__X0 = { 1{ IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_S != _013__S }} ;
  assign _013__R0 = 0 ;
  assign _013__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_T 		<= !nvdla_core_rstn ? 0 : ( _013__T & _013__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_t_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_t_flag ? 1 : | _013__T & ( | _013__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_r_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_r_flag ? 1 : IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_t_flag ? 0 : ( | IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1 <= 1'b0;
    else
      FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1 <= _004_;
  logic [0:0] _004__X0 ;
  logic [0:0] _004__R0 ;
  logic [0:0] _004__C0 ;
  assign _004__X0 = { 1{ FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_S != _004__S }} ;
  assign _004__R0 = 0 ;
  assign _004__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_T 		<= !nvdla_core_rstn ? 0 : ( _004__T & _004__X0 );
  always @( posedge nvdla_core_clk )
      FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_t_flag 	<= !nvdla_core_rstn ? 0 : FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_t_flag ? 1 : | _004__T & ( | _004__X0 );
  always @( posedge nvdla_core_clk )
      FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_r_flag 	<= !nvdla_core_rstn ? 0 : FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_r_flag ? 1 : FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_t_flag ? 0 : ( | FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1 <= 15'b000000000000000;
    else
      FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1 <= _003_;
  logic [14:0] _003__X0 ;
  logic [14:0] _003__R0 ;
  logic [14:0] _003__C0 ;
  assign _003__X0 = { 15{ FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_S != _003__S }} ;
  assign _003__R0 = 0 ;
  assign _003__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_T 		<= !nvdla_core_rstn ? 0 : ( _003__T & _003__X0 );
  always @( posedge nvdla_core_clk )
      FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_t_flag 	<= !nvdla_core_rstn ? 0 : FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_t_flag ? 1 : | _003__T & ( | _003__X0 );
  always @( posedge nvdla_core_clk )
      FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_r_flag 	<= !nvdla_core_rstn ? 0 : FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_r_flag ? 1 : FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_t_flag ? 0 : ( | FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      main_stage_v_1 <= 1'b0;
    else
      main_stage_v_1 <= _022_;
  logic [0:0] _022__X0 ;
  logic [0:0] _022__R0 ;
  logic [0:0] _022__C0 ;
  assign _022__X0 = { 1{ main_stage_v_1_S != _022__S }} ;
  assign _022__R0 = 0 ;
  assign _022__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      main_stage_v_1_T 		<= !nvdla_core_rstn ? 0 : ( _022__T & _022__X0 );
  always @( posedge nvdla_core_clk )
      main_stage_v_1_t_flag 	<= !nvdla_core_rstn ? 0 : main_stage_v_1_t_flag ? 1 : | _022__T & ( | _022__X0 );
  always @( posedge nvdla_core_clk )
      main_stage_v_1_r_flag 	<= !nvdla_core_rstn ? 0 : main_stage_v_1_r_flag ? 1 : main_stage_v_1_t_flag ? 0 : ( | main_stage_v_1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      reg_chn_o_rsci_ld_core_psct_cse <= 1'b0;
    else
      reg_chn_o_rsci_ld_core_psct_cse <= _023_;
  logic [0:0] _023__X0 ;
  logic [0:0] _023__R0 ;
  logic [0:0] _023__C0 ;
  assign _023__X0 = { 1{ reg_chn_o_rsci_ld_core_psct_cse_S != _023__S }} ;
  assign _023__R0 = 0 ;
  assign _023__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      reg_chn_o_rsci_ld_core_psct_cse_T 		<= !nvdla_core_rstn ? 0 : ( _023__T & _023__X0 );
  always @( posedge nvdla_core_clk )
      reg_chn_o_rsci_ld_core_psct_cse_t_flag 	<= !nvdla_core_rstn ? 0 : reg_chn_o_rsci_ld_core_psct_cse_t_flag ? 1 : | _023__T & ( | _023__X0 );
  always @( posedge nvdla_core_clk )
      reg_chn_o_rsci_ld_core_psct_cse_r_flag 	<= !nvdla_core_rstn ? 0 : reg_chn_o_rsci_ld_core_psct_cse_r_flag ? 1 : reg_chn_o_rsci_ld_core_psct_cse_t_flag ? 0 : ( | reg_chn_o_rsci_ld_core_psct_cse_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_o_rsci_d_13_10 <= 4'b0000;
    else
      chn_o_rsci_d_13_10 <= _017_;
  logic [3:0] _017__X0 ;
  logic [3:0] _017__R0 ;
  logic [3:0] _017__C0 ;
  assign _017__X0 = { 4{ chn_o_rsci_d_13_10_S != _017__S }} ;
  assign _017__R0 = 0 ;
  assign _017__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_13_10_T 		<= !nvdla_core_rstn ? 0 : ( _017__T & _017__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_13_10_t_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_13_10_t_flag ? 1 : | _017__T & ( | _017__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_13_10_r_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_13_10_r_flag ? 1 : chn_o_rsci_d_13_10_t_flag ? 0 : ( | chn_o_rsci_d_13_10_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_o_rsci_d_15 <= 1'b0;
    else
      chn_o_rsci_d_15 <= _019_;
  logic [0:0] _019__X0 ;
  logic [0:0] _019__R0 ;
  logic [0:0] _019__C0 ;
  assign _019__X0 = { 1{ chn_o_rsci_d_15_S != _019__S }} ;
  assign _019__R0 = 0 ;
  assign _019__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_15_T 		<= !nvdla_core_rstn ? 0 : ( _019__T & _019__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_15_t_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_15_t_flag ? 1 : | _019__T & ( | _019__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_15_r_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_15_r_flag ? 1 : chn_o_rsci_d_15_t_flag ? 0 : ( | chn_o_rsci_d_15_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_o_rsci_d_14 <= 1'b0;
    else
      chn_o_rsci_d_14 <= _018_;
  logic [0:0] _018__X0 ;
  logic [0:0] _018__R0 ;
  logic [0:0] _018__C0 ;
  assign _018__X0 = { 1{ chn_o_rsci_d_14_S != _018__S }} ;
  assign _018__R0 = 0 ;
  assign _018__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_14_T 		<= !nvdla_core_rstn ? 0 : ( _018__T & _018__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_14_t_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_14_t_flag ? 1 : | _018__T & ( | _018__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_14_r_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_14_r_flag ? 1 : chn_o_rsci_d_14_t_flag ? 0 : ( | chn_o_rsci_d_14_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_o_rsci_d_9_0 <= 10'b0000000000;
    else
      chn_o_rsci_d_9_0 <= _020_;
  logic [9:0] _020__X0 ;
  logic [9:0] _020__R0 ;
  logic [9:0] _020__C0 ;
  assign _020__X0 = { 10{ chn_o_rsci_d_9_0_S != _020__S }} ;
  assign _020__R0 = 0 ;
  assign _020__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_9_0_T 		<= !nvdla_core_rstn ? 0 : ( _020__T & _020__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_9_0_t_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_9_0_t_flag ? 1 : | _020__T & ( | _020__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_9_0_r_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_9_0_r_flag ? 1 : chn_o_rsci_d_9_0_t_flag ? 0 : ( | chn_o_rsci_d_9_0_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_a_rsci_ld_core_psct <= 1'b0;
    else
      chn_a_rsci_ld_core_psct <= _016_;
  logic [0:0] _016__X0 ;
  logic [0:0] _016__R0 ;
  logic [0:0] _016__C0 ;
  assign _016__X0 = { 1{ chn_a_rsci_ld_core_psct_S != _016__S }} ;
  assign _016__R0 = 0 ;
  assign _016__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_a_rsci_ld_core_psct_T 		<= !nvdla_core_rstn ? 0 : ( _016__T & _016__X0 );
  always @( posedge nvdla_core_clk )
      chn_a_rsci_ld_core_psct_t_flag 	<= !nvdla_core_rstn ? 0 : chn_a_rsci_ld_core_psct_t_flag ? 1 : | _016__T & ( | _016__X0 );
  always @( posedge nvdla_core_clk )
      chn_a_rsci_ld_core_psct_r_flag 	<= !nvdla_core_rstn ? 0 : chn_a_rsci_ld_core_psct_r_flag ? 1 : chn_a_rsci_ld_core_psct_t_flag ? 0 : ( | chn_a_rsci_ld_core_psct_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_o_rsci_iswt0 <= 1'b0;
    else
      chn_o_rsci_iswt0 <= _021_;
  logic [0:0] _021__X0 ;
  logic [0:0] _021__R0 ;
  logic [0:0] _021__C0 ;
  assign _021__X0 = { 1{ chn_o_rsci_iswt0_S != _021__S }} ;
  assign _021__R0 = 0 ;
  assign _021__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_o_rsci_iswt0_T 		<= !nvdla_core_rstn ? 0 : ( _021__T & _021__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_iswt0_t_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_iswt0_t_flag ? 1 : | _021__T & ( | _021__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_iswt0_r_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_iswt0_r_flag ? 1 : chn_o_rsci_iswt0_t_flag ? 0 : ( | chn_o_rsci_iswt0_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_a_rsci_iswt0 <= 1'b0;
    else
      chn_a_rsci_iswt0 <= _015_;
  logic [0:0] _015__X0 ;
  logic [0:0] _015__R0 ;
  logic [0:0] _015__C0 ;
  assign _015__X0 = { 1{ chn_a_rsci_iswt0_S != _015__S }} ;
  assign _015__R0 = 0 ;
  assign _015__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_a_rsci_iswt0_T 		<= !nvdla_core_rstn ? 0 : ( _015__T & _015__X0 );
  always @( posedge nvdla_core_clk )
      chn_a_rsci_iswt0_t_flag 	<= !nvdla_core_rstn ? 0 : chn_a_rsci_iswt0_t_flag ? 1 : | _015__T & ( | _015__X0 );
  always @( posedge nvdla_core_clk )
      chn_a_rsci_iswt0_r_flag 	<= !nvdla_core_rstn ? 0 : chn_a_rsci_iswt0_r_flag ? 1 : chn_a_rsci_iswt0_t_flag ? 0 : ( | chn_a_rsci_iswt0_R ) ;
  assign mux_6_nl = and_60_nl ? or_tmp_8 : and_tmp_1;
  logic [0:0] and_60_nl_C0 ;
  logic [0:0] and_60_nl_R0 ;
  logic [0:0] and_60_nl_X0 ;
  assign and_60_nl_C0 = | mux_6_nl_C ;
  assign and_60_nl_X0 = | mux_6_nl_X ;
  assign mux_6_nl_T = and_60_nl ? ( { 1{ and_60_nl_T  }} | or_tmp_8_T ) : ( { 1{ and_60_nl_T  }} | and_tmp_1_T );
  assign mux_6_nl_S = and_60_nl ? or_tmp_8_S : and_tmp_1_S ;
  assign and_60_nl_R0 = ( | (mux_6_nl_R | ( mux_6_nl_C & ( { 1{ and_60_nl }} & or_tmp_8_T | { 1{ !and_60_nl }} & and_tmp_1_T )))) && or_tmp_8 != and_tmp_1 ;
  logic [0:0] or_tmp_8_C0 ;
  logic [0:0] or_tmp_8_R0 ;
  logic [0:0] or_tmp_8_X0 ;
  assign or_tmp_8_C0 = { 1{ and_60_nl }} ;
  assign or_tmp_8_R0 = { 1{ and_60_nl }} & ( mux_6_nl_R | ( { 1{ and_60_nl_T  }} & mux_6_nl_C ));
  assign or_tmp_8_X0 = { 1{ and_60_nl }} & mux_6_nl_X ;
  logic [0:0] and_tmp_1_C1 ;
  logic [0:0] and_tmp_1_R1 ;
  logic [0:0] and_tmp_1_X1 ;
  assign and_tmp_1_C1 = { 1{ !and_60_nl }} ;
  assign and_tmp_1_R1 = { 1{ !and_60_nl }} & ( mux_6_nl_R | ( { 1{ and_60_nl_T  }} & mux_6_nl_C ));
  assign and_tmp_1_X1 = { 1{ !and_60_nl }} & mux_6_nl_X ;
  assign mux_5_nl = or_10_nl ? nor_nl : mux_4_nl;
  logic [0:0] or_10_nl_C0 ;
  logic [0:0] or_10_nl_R0 ;
  logic [0:0] or_10_nl_X0 ;
  assign or_10_nl_C0 = | mux_5_nl_C ;
  assign or_10_nl_X0 = | mux_5_nl_X ;
  assign mux_5_nl_T = or_10_nl ? ( { 1{ or_10_nl_T  }} | nor_nl_T ) : ( { 1{ or_10_nl_T  }} | mux_4_nl_T );
  assign mux_5_nl_S = or_10_nl ? nor_nl_S : mux_4_nl_S ;
  assign or_10_nl_R0 = ( | (mux_5_nl_R | ( mux_5_nl_C & ( { 1{ or_10_nl }} & nor_nl_T | { 1{ !or_10_nl }} & mux_4_nl_T )))) && nor_nl != mux_4_nl ;
  logic [0:0] nor_nl_C0 ;
  logic [0:0] nor_nl_R0 ;
  logic [0:0] nor_nl_X0 ;
  assign nor_nl_C0 = { 1{ or_10_nl }} ;
  assign nor_nl_R0 = { 1{ or_10_nl }} & ( mux_5_nl_R | ( { 1{ or_10_nl_T  }} & mux_5_nl_C ));
  assign nor_nl_X0 = { 1{ or_10_nl }} & mux_5_nl_X ;
  logic [0:0] mux_4_nl_C0 ;
  logic [0:0] mux_4_nl_R0 ;
  logic [0:0] mux_4_nl_X0 ;
  assign mux_4_nl_C0 = { 1{ !or_10_nl }} ;
  assign mux_4_nl_R0 = { 1{ !or_10_nl }} & ( mux_5_nl_R | ( { 1{ or_10_nl_T  }} & mux_5_nl_C ));
  assign mux_4_nl_X0 = { 1{ !or_10_nl }} & mux_5_nl_X ;
  assign mux_4_nl = FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl[5] ? _000_ : mux_1_itm;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R4 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R4 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R4 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R4 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R4 [4] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X4 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X4 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X4 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X4 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X4 [4] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C4 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C4 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C4 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C4 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C4 [4] } = 0;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C5 ;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R5 ;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X5 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C5 [5] = | mux_4_nl_C ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X5 [5] = | mux_4_nl_X ;
  assign mux_4_nl_T = FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl[5] ? ( { 1{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_T  [5] }} | _000__T ) : ( { 1{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_T  [5] }} | mux_1_itm_T );
  assign mux_4_nl_S = FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl[5] ? _000__S : mux_1_itm_S ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R5 [5] = ( | (mux_4_nl_R | ( mux_4_nl_C & ( { 1{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl[5] }} & _000__T | { 1{ !FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl[5] }} & mux_1_itm_T )))) && _000_ != mux_1_itm ;
  logic [0:0] _000__C0 ;
  logic [0:0] _000__R0 ;
  logic [0:0] _000__X0 ;
  assign _000__C0 = { 1{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl[5] }} ;
  assign _000__R0 = { 1{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl[5] }} & ( mux_4_nl_R | ( { 1{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_T  [5] }} & mux_4_nl_C ));
  assign _000__X0 = { 1{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl[5] }} & mux_4_nl_X ;
  logic [0:0] mux_1_itm_C0 ;
  logic [0:0] mux_1_itm_R0 ;
  logic [0:0] mux_1_itm_X0 ;
  assign mux_1_itm_C0 = { 1{ !FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl[5] }} ;
  assign mux_1_itm_R0 = { 1{ !FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl[5] }} & ( mux_4_nl_R | ( { 1{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_T  [5] }} & mux_4_nl_C ));
  assign mux_1_itm_X0 = { 1{ !FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl[5] }} & mux_4_nl_X ;
  assign mux_3_nl = or_3_nl ? nor_7_nl : mux_2_nl;
  logic [0:0] or_3_nl_C0 ;
  logic [0:0] or_3_nl_R0 ;
  logic [0:0] or_3_nl_X0 ;
  assign or_3_nl_C0 = | mux_3_nl_C ;
  assign or_3_nl_X0 = | mux_3_nl_X ;
  assign mux_3_nl_T = or_3_nl ? ( { 1{ or_3_nl_T  }} | nor_7_nl_T ) : ( { 1{ or_3_nl_T  }} | mux_2_nl_T );
  assign mux_3_nl_S = or_3_nl ? nor_7_nl_S : mux_2_nl_S ;
  assign or_3_nl_R0 = ( | (mux_3_nl_R | ( mux_3_nl_C & ( { 1{ or_3_nl }} & nor_7_nl_T | { 1{ !or_3_nl }} & mux_2_nl_T )))) && nor_7_nl != mux_2_nl ;
  logic [0:0] nor_7_nl_C0 ;
  logic [0:0] nor_7_nl_R0 ;
  logic [0:0] nor_7_nl_X0 ;
  assign nor_7_nl_C0 = { 1{ or_3_nl }} ;
  assign nor_7_nl_R0 = { 1{ or_3_nl }} & ( mux_3_nl_R | ( { 1{ or_3_nl_T  }} & mux_3_nl_C ));
  assign nor_7_nl_X0 = { 1{ or_3_nl }} & mux_3_nl_X ;
  logic [0:0] mux_2_nl_C0 ;
  logic [0:0] mux_2_nl_R0 ;
  logic [0:0] mux_2_nl_X0 ;
  assign mux_2_nl_C0 = { 1{ !or_3_nl }} ;
  assign mux_2_nl_R0 = { 1{ !or_3_nl }} & ( mux_3_nl_R | ( { 1{ or_3_nl_T  }} & mux_3_nl_C ));
  assign mux_2_nl_X0 = { 1{ !or_3_nl }} & mux_3_nl_X ;
  assign mux_2_nl = or_6_nl ? _000_ : mux_1_itm;
  logic [0:0] or_6_nl_C1 ;
  logic [0:0] or_6_nl_R1 ;
  logic [0:0] or_6_nl_X1 ;
  assign or_6_nl_C1 = | mux_2_nl_C ;
  assign or_6_nl_X1 = | mux_2_nl_X ;
  assign mux_2_nl_T = or_6_nl ? ( { 1{ or_6_nl_T  }} | _000__T ) : ( { 1{ or_6_nl_T  }} | mux_1_itm_T );
  assign mux_2_nl_S = or_6_nl ? _000__S : mux_1_itm_S ;
  assign or_6_nl_R1 = ( | (mux_2_nl_R | ( mux_2_nl_C & ( { 1{ or_6_nl }} & _000__T | { 1{ !or_6_nl }} & mux_1_itm_T )))) && _000_ != mux_1_itm ;
  logic [0:0] _000__C1 ;
  logic [0:0] _000__R1 ;
  logic [0:0] _000__X1 ;
  assign _000__C1 = { 1{ or_6_nl }} ;
  assign _000__R1 = { 1{ or_6_nl }} & ( mux_2_nl_R | ( { 1{ or_6_nl_T  }} & mux_2_nl_C ));
  assign _000__X1 = { 1{ or_6_nl }} & mux_2_nl_X ;
  logic [0:0] mux_1_itm_C1 ;
  logic [0:0] mux_1_itm_R1 ;
  logic [0:0] mux_1_itm_X1 ;
  assign mux_1_itm_C1 = { 1{ !or_6_nl }} ;
  assign mux_1_itm_R1 = { 1{ !or_6_nl }} & ( mux_2_nl_R | ( { 1{ or_6_nl_T  }} & mux_2_nl_C ));
  assign mux_1_itm_X1 = { 1{ !or_6_nl }} & mux_2_nl_X ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_mux_6_nl = FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2 ? FpExpoWidthDec_6U_5U_10U_1U_1U_else_FpExpoWidthDec_6U_5U_10U_1U_1U_else_and_2_nl : 4'b1110;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_C2 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_R2 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_X2 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_C2 = | FpExpoWidthDec_6U_5U_10U_1U_1U_mux_6_nl_C ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_X2 = | FpExpoWidthDec_6U_5U_10U_1U_1U_mux_6_nl_X ;
  logic [3:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_FpExpoWidthDec_6U_5U_10U_1U_1U_else_and_2_nl_C0 ;
  logic [3:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_FpExpoWidthDec_6U_5U_10U_1U_1U_else_and_2_nl_R0 ;
  logic [3:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_FpExpoWidthDec_6U_5U_10U_1U_1U_else_and_2_nl_X0 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_FpExpoWidthDec_6U_5U_10U_1U_1U_else_and_2_nl_C0 = { 4{ FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2 }} ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_FpExpoWidthDec_6U_5U_10U_1U_1U_else_and_2_nl_R0 = { 4{ FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2 }} & ( FpExpoWidthDec_6U_5U_10U_1U_1U_mux_6_nl_R | ( { 4{ FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_T  }} & FpExpoWidthDec_6U_5U_10U_1U_1U_mux_6_nl_C ));
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_FpExpoWidthDec_6U_5U_10U_1U_1U_else_and_2_nl_X0 = { 4{ FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2 }} & FpExpoWidthDec_6U_5U_10U_1U_1U_mux_6_nl_X ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_mux_6_nl_T = FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2 ? ( { 4{ | FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_T  }} | FpExpoWidthDec_6U_5U_10U_1U_1U_else_FpExpoWidthDec_6U_5U_10U_1U_1U_else_and_2_nl_T ) : { 4{ | FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_T  }};
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_mux_6_nl_S = FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2 ? FpExpoWidthDec_6U_5U_10U_1U_1U_else_FpExpoWidthDec_6U_5U_10U_1U_1U_else_and_2_nl_S : FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_S ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_R2 = ( | (FpExpoWidthDec_6U_5U_10U_1U_1U_mux_6_nl_R | ( { 4{ FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2 }} & FpExpoWidthDec_6U_5U_10U_1U_1U_else_FpExpoWidthDec_6U_5U_10U_1U_1U_else_and_2_nl_T & FpExpoWidthDec_6U_5U_10U_1U_1U_mux_6_nl_C ))) && FpExpoWidthDec_6U_5U_10U_1U_1U_else_FpExpoWidthDec_6U_5U_10U_1U_1U_else_and_2_nl != 4'b1110 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_FpExpoWidthDec_6U_5U_10U_1U_1U_else_and_2_nl = FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2 ? 4'b0000 : FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_C1 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_R1 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_X1 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_C1 = | FpExpoWidthDec_6U_5U_10U_1U_1U_else_FpExpoWidthDec_6U_5U_10U_1U_1U_else_and_2_nl_C ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_X1 = | FpExpoWidthDec_6U_5U_10U_1U_1U_else_FpExpoWidthDec_6U_5U_10U_1U_1U_else_and_2_nl_X ;
  logic [3:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl_C0 ;
  logic [3:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl_R0 ;
  logic [3:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl_X0 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl_C0 = { 4{ !FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2 }};
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl_R0 = { 4{ !FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2 }} & ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_FpExpoWidthDec_6U_5U_10U_1U_1U_else_and_2_nl_R | ( { 4{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_T  }} & FpExpoWidthDec_6U_5U_10U_1U_1U_else_FpExpoWidthDec_6U_5U_10U_1U_1U_else_and_2_nl_C ));
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl_X0 = { 4{ !FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2 }} & FpExpoWidthDec_6U_5U_10U_1U_1U_else_FpExpoWidthDec_6U_5U_10U_1U_1U_else_and_2_nl_X ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_FpExpoWidthDec_6U_5U_10U_1U_1U_else_and_2_nl_T = FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2 ? { 4{ | FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_T  }} : ( { 4{ | FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_T  }} | FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl_T );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_FpExpoWidthDec_6U_5U_10U_1U_1U_else_and_2_nl_S = FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2 ? FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_S : FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl_S ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_R1 = ( | (FpExpoWidthDec_6U_5U_10U_1U_1U_else_FpExpoWidthDec_6U_5U_10U_1U_1U_else_and_2_nl_R | ( { 4{ !FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2 }} & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl_T & FpExpoWidthDec_6U_5U_10U_1U_1U_else_FpExpoWidthDec_6U_5U_10U_1U_1U_else_and_2_nl_C ))) && 4'b0000 != FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl ;
  logic [3:0] fangyuan2;
  logic [3:0] fangyuan2_T ;
  logic [3:0] fangyuan2_R ;
  logic [3:0] fangyuan2_C ;
  logic [3:0] fangyuan2_X ;
  assign fangyuan2 = { 3'b000, FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva[10] };
  assign fangyuan2_T = {  3'h0 , FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_T [10]  };
  logic [13:0] fangyuan2_S ;
  assign fangyuan2_S = 0 ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_R0 ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_X0 ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_C0 ;
  assign FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_R0 [10:10] = fangyuan2_R [0:0] ;
  assign FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_X0 [10:10] = fangyuan2_X [0:0] ;
  assign FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_C0 [10:10] = fangyuan2_C [0:0] ;

  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl = FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2 ? FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1[13:10] : fangyuan2;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_C1 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_R1 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_X1 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_C1 = | FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl_C ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_X1 = | FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl_X ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl_T = FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2 ? ( { 4{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_T  }} | FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_T [13:10] ) : ( { 4{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_T  }} | fangyuan2_T );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl_S = FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2 ? FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_S : fangyuan2_S ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_R1 = ( | (FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl_R | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl_C & ( { 4{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2 }} & FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_T [13:10] | { 4{ !FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2 }} & fangyuan2_T )))) && FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1[13:10] != fangyuan2 ;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R2 [11], FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R2 [12], FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R2 [13] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X2 [11], FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X2 [12], FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X2 [13] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C2 [11], FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C2 [12], FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C2 [13] } = 0;
  logic [14:0] FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C3 ;
  logic [14:0] FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R3 ;
  logic [14:0] FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X3 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C3 [13:10] = { 4{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2 }} ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R3 [13:10] = { 4{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2 }} & ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl_R | ( { 4{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_T  }} & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl_C ));
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X3 [13:10] = { 4{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2 }} & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl_X ;
  logic [3:0] fangyuan2_C0 ;
  logic [3:0] fangyuan2_R0 ;
  logic [3:0] fangyuan2_X0 ;
  assign fangyuan2_C0 = { 4{ !FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2 }} ;
  assign fangyuan2_R0 = { 4{ !FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2 }} & ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl_R | ( { 4{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_T  }} & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl_C ));
  assign fangyuan2_X0 = { 4{ !FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2 }} & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl_X ;
  assign _002_ = FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2 ? FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl : 10'b0000000000;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_C3 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_R3 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_X3 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_C3 = | _002__C ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_X3 = | _002__X ;
  logic [9:0] FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_C0 ;
  logic [9:0] FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_R0 ;
  logic [9:0] FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_X0 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_C0 = { 10{ FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2 }} ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_R0 = { 10{ FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2 }} & ( _002__R | ( { 10{ FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_T  }} & _002__C ));
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_X0 = { 10{ FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2 }} & _002__X ;
  assign _002__T = FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2 ? ( { 10{ | FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_T  }} | FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_T ) : { 10{ | FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_T  }};
  assign _002__S = FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2 ? FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_S : FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_S ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_R3 = ( | (_002__R | ( { 10{ FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2 }} & FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_T & _002__C ))) && FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl != 10'b0000000000 ;
  assign _001_ = FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2 ? 10'b0000000000 : FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_C2 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_R2 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_X2 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_C2 = | _001__C ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_X2 = | _001__X ;
  logic [9:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl_C0 ;
  logic [9:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl_R0 ;
  logic [9:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl_X0 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl_C0 = { 10{ !FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2 }};
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl_R0 = { 10{ !FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2 }} & ( _001__R | ( { 10{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_T  }} & _001__C ));
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl_X0 = { 10{ !FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2 }} & _001__X ;
  assign _001__T = FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2 ? { 10{ | FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_T  }} : ( { 10{ | FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_T  }} | FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl_T );
  assign _001__S = FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2 ? FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_S : FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl_S ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_R2 = ( | (_001__R | ( { 10{ !FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2 }} & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl_T & _001__C ))) && 10'b0000000000 != FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl = FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2 ? FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1[9:0] : FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva[9:0];
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_C2 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_R2 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_X2 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_C2 = | FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl_C ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_X2 = | FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl_X ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl_T = FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2 ? ( { 10{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_T  }} | FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_T [9:0] ) : ( { 10{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_T  }} | FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_T [9:0] );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl_S = FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2 ? FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_S : FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_S ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_R2 = ( | (FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl_R | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl_C & ( { 10{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2 }} & FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_T [9:0] | { 10{ !FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2 }} & FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_T [9:0] )))) && FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1[9:0] != FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva[9:0] ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C3 [9:0] = { 10{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2 }} ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R3 [9:0] = { 10{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2 }} & ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl_R | ( { 10{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_T  }} & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl_C ));
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X3 [9:0] = { 10{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2 }} & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl_X ;
  assign FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_C0 [9:0] = { 10{ !FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2 }} ;
  assign FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_R0 [9:0] = { 10{ !FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2 }} & ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl_R | ( { 10{ FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_T  }} & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl_C ));
  assign FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_X0 [9:0] = { 10{ !FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2 }} & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl_X ;
  assign mux_1_itm = FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2 ? or_tmp_8 : and_tmp_1;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_C4 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_R4 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_X4 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_C4 = | mux_1_itm_C ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_X4 = | mux_1_itm_X ;
  assign mux_1_itm_T = FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2 ? ( { 1{ FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_T  }} | or_tmp_8_T ) : ( { 1{ FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_T  }} | and_tmp_1_T );
  assign mux_1_itm_S = FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2 ? or_tmp_8_S : and_tmp_1_S ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_R4 = ( | (mux_1_itm_R | ( mux_1_itm_C & ( { 1{ FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2 }} & or_tmp_8_T | { 1{ !FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2 }} & and_tmp_1_T )))) && or_tmp_8 != and_tmp_1 ;
  logic [0:0] or_tmp_8_C1 ;
  logic [0:0] or_tmp_8_R1 ;
  logic [0:0] or_tmp_8_X1 ;
  assign or_tmp_8_C1 = { 1{ FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2 }} ;
  assign or_tmp_8_R1 = { 1{ FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2 }} & ( mux_1_itm_R | ( { 1{ FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_T  }} & mux_1_itm_C ));
  assign or_tmp_8_X1 = { 1{ FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2 }} & mux_1_itm_X ;
  logic [0:0] and_tmp_1_C2 ;
  logic [0:0] and_tmp_1_R2 ;
  logic [0:0] and_tmp_1_X2 ;
  assign and_tmp_1_C2 = { 1{ !FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2 }} ;
  assign and_tmp_1_R2 = { 1{ !FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2 }} & ( mux_1_itm_R | ( { 1{ FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_T  }} & mux_1_itm_C ));
  assign and_tmp_1_X2 = { 1{ !FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2 }} & mux_1_itm_X ;
  assign mux_tmp = main_stage_v_1 ? or_2_nl : and_6_mdf;
  logic [0:0] main_stage_v_1_C4 ;
  logic [0:0] main_stage_v_1_R4 ;
  logic [0:0] main_stage_v_1_X4 ;
  assign main_stage_v_1_C4 = | mux_tmp_C ;
  assign main_stage_v_1_X4 = | mux_tmp_X ;
  assign mux_tmp_T = main_stage_v_1 ? ( { 1{ main_stage_v_1_T  }} | or_2_nl_T ) : ( { 1{ main_stage_v_1_T  }} | and_6_mdf_T );
  assign mux_tmp_S = main_stage_v_1 ? or_2_nl_S : and_6_mdf_S ;
  assign main_stage_v_1_R4 = ( | (mux_tmp_R | ( mux_tmp_C & ( { 1{ main_stage_v_1 }} & or_2_nl_T | { 1{ !main_stage_v_1 }} & and_6_mdf_T )))) && or_2_nl != and_6_mdf ;
  logic [0:0] or_2_nl_C0 ;
  logic [0:0] or_2_nl_R0 ;
  logic [0:0] or_2_nl_X0 ;
  assign or_2_nl_C0 = { 1{ main_stage_v_1 }} ;
  assign or_2_nl_R0 = { 1{ main_stage_v_1 }} & ( mux_tmp_R | ( { 1{ main_stage_v_1_T  }} & mux_tmp_C ));
  assign or_2_nl_X0 = { 1{ main_stage_v_1 }} & mux_tmp_X ;
  logic [0:0] and_6_mdf_C3 ;
  logic [0:0] and_6_mdf_R3 ;
  logic [0:0] and_6_mdf_X3 ;
  assign and_6_mdf_C3 = { 1{ !main_stage_v_1 }} ;
  assign and_6_mdf_R3 = { 1{ !main_stage_v_1 }} & ( mux_tmp_R | ( { 1{ main_stage_v_1_T  }} & mux_tmp_C ));
  assign and_6_mdf_X3 = { 1{ !main_stage_v_1 }} & mux_tmp_X ;
  assign _009_ = _029_ ? FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl[5] : FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs;
  logic [0:0] _029__C0 ;
  logic [0:0] _029__R0 ;
  logic [0:0] _029__X0 ;
  assign _029__C0 = | _009__C ;
  assign _029__X0 = | _009__X ;
  assign _009__T = _029_ ? ( { 1{ _029__T  }} | FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_T [5] ) : ( { 1{ _029__T  }} | FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_T );
  assign _009__S = _029_ ? FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_S : FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_S ;
  assign _029__R0 = ( | (_009__R | ( _009__C & ( { 1{ _029_ }} & FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_T [5] | { 1{ !_029_ }} & FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_T )))) && FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl[5] != FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs ;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R5 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R5 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R5 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R5 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R5 [4] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X5 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X5 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X5 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X5 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X5 [4] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C5 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C5 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C5 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C5 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C5 [4] } = 0;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C6 ;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R6 ;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X6 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C6 [5] = { 1{ _029_ }} ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R6 [5] = { 1{ _029_ }} & ( _009__R | ( { 1{ _029__T  }} & _009__C ));
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X6 [5] = { 1{ _029_ }} & _009__X ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_C0 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_R0 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_X0 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_C0 = { 1{ !_029_ }} ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_R0 = { 1{ !_029_ }} & ( _009__R | ( { 1{ _029__T  }} & _009__C ));
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_X0 = { 1{ !_029_ }} & _009__X ;
  assign _006_ = _028_ ? FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl[6] : FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs;
  logic [0:0] _028__C0 ;
  logic [0:0] _028__R0 ;
  logic [0:0] _028__X0 ;
  assign _028__C0 = | _006__C ;
  assign _028__X0 = | _006__X ;
  assign _006__T = _028_ ? ( { 1{ _028__T  }} | FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_T [6] ) : ( { 1{ _028__T  }} | FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_T );
  assign _006__S = _028_ ? FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_S : FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_S ;
  assign _028__R0 = ( | (_006__R | ( _006__C & ( { 1{ _028_ }} & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_T [6] | { 1{ !_028_ }} & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_T )))) && FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl[6] != FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs ;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R0 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R0 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R0 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R0 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R0 [4], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R0 [5] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X0 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X0 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X0 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X0 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X0 [4], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X0 [5] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C0 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C0 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C0 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C0 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C0 [4], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C0 [5] } = 0;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C1 ;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R1 ;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X1 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C1 [6] = { 1{ _028_ }} ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R1 [6] = { 1{ _028_ }} & ( _006__R | ( { 1{ _028__T  }} & _006__C ));
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X1 [6] = { 1{ _028_ }} & _006__X ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_C0 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_R0 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_X0 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_C0 = { 1{ !_028_ }} ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_R0 = { 1{ !_028_ }} & ( _006__R | ( { 1{ _028__T  }} & _006__C ));
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_X0 = { 1{ !_028_ }} & _006__X ;
  assign _011_ = _050_ ? FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl[5] : FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2;
  logic [0:0] _050__C0 ;
  logic [0:0] _050__R0 ;
  logic [0:0] _050__X0 ;
  assign _050__C0 = | _011__C ;
  assign _050__X0 = | _011__X ;
  assign _011__T = _050_ ? ( { 1{ _050__T  }} | FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_T [5] ) : ( { 1{ _050__T  }} | FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_T );
  assign _011__S = _050_ ? FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_S : FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_S ;
  assign _050__R0 = ( | (_011__R | ( _011__C & ( { 1{ _050_ }} & FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_T [5] | { 1{ !_050_ }} & FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_T )))) && FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl[5] != FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2 ;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R6 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R6 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R6 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R6 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R6 [4] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X6 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X6 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X6 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X6 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X6 [4] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C6 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C6 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C6 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C6 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C6 [4] } = 0;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C7 ;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R7 ;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X7 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C7 [5] = { 1{ _050_ }} ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R7 [5] = { 1{ _050_ }} & ( _011__R | ( { 1{ _050__T  }} & _011__C ));
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X7 [5] = { 1{ _050_ }} & _011__X ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_C2 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_R2 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_X2 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_C2 = { 1{ !_050_ }} ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_R2 = { 1{ !_050_ }} & ( _011__R | ( { 1{ _050__T  }} & _011__C ));
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_X2 = { 1{ !_050_ }} & _011__X ;
  assign _025_ = and_37_rgt ? FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs : FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl[5];
  logic [0:0] and_37_rgt_C1 ;
  logic [0:0] and_37_rgt_R1 ;
  logic [0:0] and_37_rgt_X1 ;
  assign and_37_rgt_C1 = | _025__C ;
  assign and_37_rgt_X1 = | _025__X ;
  assign _025__T = and_37_rgt ? ( { 1{ and_37_rgt_T  }} | FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_T ) : ( { 1{ and_37_rgt_T  }} | FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_T [5] );
  assign _025__S = and_37_rgt ? FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_S : FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_S ;
  assign and_37_rgt_R1 = ( | (_025__R | ( _025__C & ( { 1{ and_37_rgt }} & FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_T | { 1{ !and_37_rgt }} & FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_T [5] )))) && FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs != FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl[5] ;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R7 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R7 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R7 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R7 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R7 [4] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X7 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X7 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X7 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X7 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X7 [4] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C7 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C7 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C7 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C7 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C7 [4] } = 0;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_C1 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_R1 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_X1 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_C1 = { 1{ and_37_rgt }} ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_R1 = { 1{ and_37_rgt }} & ( _025__R | ( { 1{ and_37_rgt_T  }} & _025__C ));
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_X1 = { 1{ and_37_rgt }} & _025__X ;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C8 ;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R8 ;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X8 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C8 [5] = { 1{ !and_37_rgt }} ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R8 [5] = { 1{ !and_37_rgt }} & ( _025__R | ( { 1{ and_37_rgt_T  }} & _025__C ));
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X8 [5] = { 1{ !and_37_rgt }} & _025__X ;
  assign _010_ = _049_ ? _025_ : FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2;
  logic [0:0] _049__C0 ;
  logic [0:0] _049__R0 ;
  logic [0:0] _049__X0 ;
  assign _049__C0 = | _010__C ;
  assign _049__X0 = | _010__X ;
  assign _010__T = _049_ ? ( { 1{ _049__T  }} | _025__T ) : ( { 1{ _049__T  }} | FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_T );
  assign _010__S = _049_ ? _025__S : FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_S ;
  assign _049__R0 = ( | (_010__R | ( _010__C & ( { 1{ _049_ }} & _025__T | { 1{ !_049_ }} & FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_T )))) && _025_ != FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2 ;
  logic [0:0] _025__C0 ;
  logic [0:0] _025__R0 ;
  logic [0:0] _025__X0 ;
  assign _025__C0 = { 1{ _049_ }} ;
  assign _025__R0 = { 1{ _049_ }} & ( _010__R | ( { 1{ _049__T  }} & _010__C ));
  assign _025__X0 = { 1{ _049_ }} & _010__X ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_C3 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_R3 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_X3 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_C3 = { 1{ !_049_ }} ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_R3 = { 1{ !_049_ }} & ( _010__R | ( { 1{ _049__T  }} & _010__C ));
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_X3 = { 1{ !_049_ }} & _010__X ;
  assign _024_ = and_35_rgt ? FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs : FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl[6];
  logic [0:0] and_35_rgt_C1 ;
  logic [0:0] and_35_rgt_R1 ;
  logic [0:0] and_35_rgt_X1 ;
  assign and_35_rgt_C1 = | _024__C ;
  assign and_35_rgt_X1 = | _024__X ;
  assign _024__T = and_35_rgt ? ( { 1{ and_35_rgt_T  }} | FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_T ) : ( { 1{ and_35_rgt_T  }} | FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_T [6] );
  assign _024__S = and_35_rgt ? FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_S : FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_S ;
  assign and_35_rgt_R1 = ( | (_024__R | ( _024__C & ( { 1{ and_35_rgt }} & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_T | { 1{ !and_35_rgt }} & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_T [6] )))) && FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs != FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl[6] ;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R1 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R1 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R1 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R1 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R1 [4], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R1 [5] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X1 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X1 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X1 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X1 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X1 [4], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X1 [5] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C1 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C1 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C1 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C1 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C1 [4], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C1 [5] } = 0;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_C1 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_R1 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_X1 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_C1 = { 1{ and_35_rgt }} ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_R1 = { 1{ and_35_rgt }} & ( _024__R | ( { 1{ and_35_rgt_T  }} & _024__C ));
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_X1 = { 1{ and_35_rgt }} & _024__X ;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C2 ;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R2 ;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X2 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C2 [6] = { 1{ !and_35_rgt }} ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R2 [6] = { 1{ !and_35_rgt }} & ( _024__R | ( { 1{ and_35_rgt_T  }} & _024__C ));
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X2 [6] = { 1{ !and_35_rgt }} & _024__X ;
  assign _007_ = _047_ ? _024_ : FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2;
  logic [0:0] _047__C0 ;
  logic [0:0] _047__R0 ;
  logic [0:0] _047__X0 ;
  assign _047__C0 = | _007__C ;
  assign _047__X0 = | _007__X ;
  assign _007__T = _047_ ? ( { 1{ _047__T  }} | _024__T ) : ( { 1{ _047__T  }} | FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_T );
  assign _007__S = _047_ ? _024__S : FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_S ;
  assign _047__R0 = ( | (_007__R | ( _007__C & ( { 1{ _047_ }} & _024__T | { 1{ !_047_ }} & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_T )))) && _024_ != FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2 ;
  logic [0:0] _024__C0 ;
  logic [0:0] _024__R0 ;
  logic [0:0] _024__X0 ;
  assign _024__C0 = { 1{ _047_ }} ;
  assign _024__R0 = { 1{ _047_ }} & ( _007__R | ( { 1{ _047__T  }} & _007__C ));
  assign _024__X0 = { 1{ _047_ }} & _007__X ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_C3 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_R3 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_X3 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_C3 = { 1{ !_047_ }} ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_R3 = { 1{ !_047_ }} & ( _007__R | ( { 1{ _047__T  }} & _007__C ));
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_X3 = { 1{ !_047_ }} & _007__X ;
  assign _008_ = _043_ ? FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl[6] : FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2;
  logic [0:0] _043__C0 ;
  logic [0:0] _043__R0 ;
  logic [0:0] _043__X0 ;
  assign _043__C0 = | _008__C ;
  assign _043__X0 = | _008__X ;
  assign _008__T = _043_ ? ( { 1{ _043__T  }} | FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_T [6] ) : ( { 1{ _043__T  }} | FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_T );
  assign _008__S = _043_ ? FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_S : FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_S ;
  assign _043__R0 = ( | (_008__R | ( _008__C & ( { 1{ _043_ }} & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_T [6] | { 1{ !_043_ }} & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_T )))) && FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl[6] != FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2 ;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R2 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R2 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R2 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R2 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R2 [4], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R2 [5] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X2 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X2 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X2 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X2 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X2 [4], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X2 [5] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C2 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C2 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C2 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C2 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C2 [4], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C2 [5] } = 0;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C3 ;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R3 ;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X3 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C3 [6] = { 1{ _043_ }} ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R3 [6] = { 1{ _043_ }} & ( _008__R | ( { 1{ _043__T  }} & _008__C ));
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X3 [6] = { 1{ _043_ }} & _008__X ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_C1 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_R1 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_X1 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_C1 = { 1{ !_043_ }} ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_R1 = { 1{ !_043_ }} & ( _008__R | ( { 1{ _043__T  }} & _008__C ));
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_X1 = { 1{ !_043_ }} & _008__X ;
  assign _005_ = _042_ ? nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2 : FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2;
  logic [0:0] _042__C0 ;
  logic [0:0] _042__R0 ;
  logic [0:0] _042__X0 ;
  assign _042__C0 = | _005__C ;
  assign _042__X0 = | _005__X ;
  assign _005__T = _042_ ? ( { 3{ _042__T  }} | nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_T ) : ( { 3{ _042__T  }} | FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_T );
  assign _005__S = _042_ ? nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_S : FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_S ;
  assign _042__R0 = ( | (_005__R | ( _005__C & ( { 3{ _042_ }} & nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_T | { 3{ !_042_ }} & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_T )))) && nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2 != FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2 ;
  logic [2:0] nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_C0 ;
  logic [2:0] nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_R0 ;
  logic [2:0] nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_X0 ;
  assign nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_C0 = { 3{ _042_ }} ;
  assign nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_R0 = { 3{ _042_ }} & ( _005__R | ( { 3{ _042__T  }} & _005__C ));
  assign nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_X0 = { 3{ _042_ }} & _005__X ;
  logic [2:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_C1 ;
  logic [2:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_R1 ;
  logic [2:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_X1 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_C1 = { 3{ !_042_ }} ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_R1 = { 3{ !_042_ }} & ( _005__R | ( { 3{ _042__T  }} & _005__C ));
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_X1 = { 3{ !_042_ }} & _005__X ;
  assign _003_ = Fp17ToFp16_and_cse ? chn_a_rsci_d_mxwt[14:0] : FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1;
  logic [0:0] Fp17ToFp16_and_cse_C0 ;
  logic [0:0] Fp17ToFp16_and_cse_R0 ;
  logic [0:0] Fp17ToFp16_and_cse_X0 ;
  assign Fp17ToFp16_and_cse_C0 = | _003__C ;
  assign Fp17ToFp16_and_cse_X0 = | _003__X ;
  assign _003__T = Fp17ToFp16_and_cse ? ( { 15{ Fp17ToFp16_and_cse_T  }} | chn_a_rsci_d_mxwt_T [14:0] ) : ( { 15{ Fp17ToFp16_and_cse_T  }} | FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_T );
  assign _003__S = Fp17ToFp16_and_cse ? chn_a_rsci_d_mxwt_S : FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_S ;
  assign Fp17ToFp16_and_cse_R0 = ( | (_003__R | ( _003__C & ( { 15{ Fp17ToFp16_and_cse }} & chn_a_rsci_d_mxwt_T [14:0] | { 15{ !Fp17ToFp16_and_cse }} & FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_T )))) && chn_a_rsci_d_mxwt[14:0] != FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1 ;
  assign { chn_a_rsci_d_mxwt_R4 [0], chn_a_rsci_d_mxwt_R4 [1], chn_a_rsci_d_mxwt_R4 [2], chn_a_rsci_d_mxwt_R4 [3], chn_a_rsci_d_mxwt_R4 [4], chn_a_rsci_d_mxwt_R4 [5], chn_a_rsci_d_mxwt_R4 [6], chn_a_rsci_d_mxwt_R4 [7], chn_a_rsci_d_mxwt_R4 [8], chn_a_rsci_d_mxwt_R4 [9], chn_a_rsci_d_mxwt_R4 [16:16] } = 0;
  assign { chn_a_rsci_d_mxwt_X4 [0], chn_a_rsci_d_mxwt_X4 [1], chn_a_rsci_d_mxwt_X4 [2], chn_a_rsci_d_mxwt_X4 [3], chn_a_rsci_d_mxwt_X4 [4], chn_a_rsci_d_mxwt_X4 [5], chn_a_rsci_d_mxwt_X4 [6], chn_a_rsci_d_mxwt_X4 [7], chn_a_rsci_d_mxwt_X4 [8], chn_a_rsci_d_mxwt_X4 [9], chn_a_rsci_d_mxwt_X4 [16:16] } = 0;
  assign { chn_a_rsci_d_mxwt_C4 [0], chn_a_rsci_d_mxwt_C4 [1], chn_a_rsci_d_mxwt_C4 [2], chn_a_rsci_d_mxwt_C4 [3], chn_a_rsci_d_mxwt_C4 [4], chn_a_rsci_d_mxwt_C4 [5], chn_a_rsci_d_mxwt_C4 [6], chn_a_rsci_d_mxwt_C4 [7], chn_a_rsci_d_mxwt_C4 [8], chn_a_rsci_d_mxwt_C4 [9], chn_a_rsci_d_mxwt_C4 [16:16] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R3 [14:14] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X3 [14:14] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C3 [14:14] } = 0;
  logic [16:0] chn_a_rsci_d_mxwt_C5 ;
  logic [16:0] chn_a_rsci_d_mxwt_R5 ;
  logic [16:0] chn_a_rsci_d_mxwt_X5 ;
  assign chn_a_rsci_d_mxwt_C5 [14:0] = { 15{ Fp17ToFp16_and_cse }} ;
  assign chn_a_rsci_d_mxwt_R5 [14:0] = { 15{ Fp17ToFp16_and_cse }} & ( _003__R | ( { 15{ Fp17ToFp16_and_cse_T  }} & _003__C ));
  assign chn_a_rsci_d_mxwt_X5 [14:0] = { 15{ Fp17ToFp16_and_cse }} & _003__X ;
  logic [14:0] FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C4 ;
  logic [14:0] FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R4 ;
  logic [14:0] FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X4 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C4 = { 15{ !Fp17ToFp16_and_cse }} ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R4 = { 15{ !Fp17ToFp16_and_cse }} & ( _003__R | ( { 15{ Fp17ToFp16_and_cse_T  }} & _003__C ));
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X4 = { 15{ !Fp17ToFp16_and_cse }} & _003__X ;
  assign _004_ = Fp17ToFp16_and_cse ? chn_a_rsci_d_mxwt[16] : FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1;
  logic [0:0] Fp17ToFp16_and_cse_C1 ;
  logic [0:0] Fp17ToFp16_and_cse_R1 ;
  logic [0:0] Fp17ToFp16_and_cse_X1 ;
  assign Fp17ToFp16_and_cse_C1 = | _004__C ;
  assign Fp17ToFp16_and_cse_X1 = | _004__X ;
  assign _004__T = Fp17ToFp16_and_cse ? ( { 1{ Fp17ToFp16_and_cse_T  }} | chn_a_rsci_d_mxwt_T [16] ) : ( { 1{ Fp17ToFp16_and_cse_T  }} | FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_T );
  assign _004__S = Fp17ToFp16_and_cse ? chn_a_rsci_d_mxwt_S : FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_S ;
  assign Fp17ToFp16_and_cse_R1 = ( | (_004__R | ( _004__C & ( { 1{ Fp17ToFp16_and_cse }} & chn_a_rsci_d_mxwt_T [16] | { 1{ !Fp17ToFp16_and_cse }} & FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_T )))) && chn_a_rsci_d_mxwt[16] != FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1 ;
  assign chn_a_rsci_d_mxwt_C5 [16] = { 1{ Fp17ToFp16_and_cse }} ;
  assign chn_a_rsci_d_mxwt_R5 [16] = { 1{ Fp17ToFp16_and_cse }} & ( _004__R | ( { 1{ Fp17ToFp16_and_cse_T  }} & _004__C ));
  assign chn_a_rsci_d_mxwt_X5 [16] = { 1{ Fp17ToFp16_and_cse }} & _004__X ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_C0 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_R0 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_X0 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_C0 = { 1{ !Fp17ToFp16_and_cse }} ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_R0 = { 1{ !Fp17ToFp16_and_cse }} & ( _004__R | ( { 1{ Fp17ToFp16_and_cse_T  }} & _004__C ));
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_X0 = { 1{ !Fp17ToFp16_and_cse }} & _004__X ;
  assign _013_ = Fp17ToFp16_and_cse ? _078_ : IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2;
  logic [0:0] Fp17ToFp16_and_cse_C2 ;
  logic [0:0] Fp17ToFp16_and_cse_R2 ;
  logic [0:0] Fp17ToFp16_and_cse_X2 ;
  assign Fp17ToFp16_and_cse_C2 = | _013__C ;
  assign Fp17ToFp16_and_cse_X2 = | _013__X ;
  assign _013__T = Fp17ToFp16_and_cse ? ( { 1{ Fp17ToFp16_and_cse_T  }} | _078__T ) : ( { 1{ Fp17ToFp16_and_cse_T  }} | IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_T );
  assign _013__S = Fp17ToFp16_and_cse ? _078__S : IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_S ;
  assign Fp17ToFp16_and_cse_R2 = ( | (_013__R | ( _013__C & ( { 1{ Fp17ToFp16_and_cse }} & _078__T | { 1{ !Fp17ToFp16_and_cse }} & IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_T )))) && _078_ != IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2 ;
  logic [0:0] _078__C0 ;
  logic [0:0] _078__R0 ;
  logic [0:0] _078__X0 ;
  assign _078__C0 = { 1{ Fp17ToFp16_and_cse }} ;
  assign _078__R0 = { 1{ Fp17ToFp16_and_cse }} & ( _013__R | ( { 1{ Fp17ToFp16_and_cse_T  }} & _013__C ));
  assign _078__X0 = { 1{ Fp17ToFp16_and_cse }} & _013__X ;
  logic [0:0] IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_C1 ;
  logic [0:0] IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_R1 ;
  logic [0:0] IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_X1 ;
  assign IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_C1 = { 1{ !Fp17ToFp16_and_cse }} ;
  assign IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_R1 = { 1{ !Fp17ToFp16_and_cse }} & ( _013__R | ( { 1{ Fp17ToFp16_and_cse_T  }} & _013__C ));
  assign IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_X1 = { 1{ !Fp17ToFp16_and_cse }} & _013__X ;
  assign _014_ = Fp17ToFp16_and_cse ? _077_ : IsNaN_6U_10U_nor_itm_2;
  logic [0:0] Fp17ToFp16_and_cse_C3 ;
  logic [0:0] Fp17ToFp16_and_cse_R3 ;
  logic [0:0] Fp17ToFp16_and_cse_X3 ;
  assign Fp17ToFp16_and_cse_C3 = | _014__C ;
  assign Fp17ToFp16_and_cse_X3 = | _014__X ;
  assign _014__T = Fp17ToFp16_and_cse ? ( { 1{ Fp17ToFp16_and_cse_T  }} | _077__T ) : ( { 1{ Fp17ToFp16_and_cse_T  }} | IsNaN_6U_10U_nor_itm_2_T );
  assign _014__S = Fp17ToFp16_and_cse ? _077__S : IsNaN_6U_10U_nor_itm_2_S ;
  assign Fp17ToFp16_and_cse_R3 = ( | (_014__R | ( _014__C & ( { 1{ Fp17ToFp16_and_cse }} & _077__T | { 1{ !Fp17ToFp16_and_cse }} & IsNaN_6U_10U_nor_itm_2_T )))) && _077_ != IsNaN_6U_10U_nor_itm_2 ;
  logic [0:0] _077__C0 ;
  logic [0:0] _077__R0 ;
  logic [0:0] _077__X0 ;
  assign _077__C0 = { 1{ Fp17ToFp16_and_cse }} ;
  assign _077__R0 = { 1{ Fp17ToFp16_and_cse }} & ( _014__R | ( { 1{ Fp17ToFp16_and_cse_T  }} & _014__C ));
  assign _077__X0 = { 1{ Fp17ToFp16_and_cse }} & _014__X ;
  logic [0:0] IsNaN_6U_10U_nor_itm_2_C1 ;
  logic [0:0] IsNaN_6U_10U_nor_itm_2_R1 ;
  logic [0:0] IsNaN_6U_10U_nor_itm_2_X1 ;
  assign IsNaN_6U_10U_nor_itm_2_C1 = { 1{ !Fp17ToFp16_and_cse }} ;
  assign IsNaN_6U_10U_nor_itm_2_R1 = { 1{ !Fp17ToFp16_and_cse }} & ( _014__R | ( { 1{ Fp17ToFp16_and_cse_T  }} & _014__C ));
  assign IsNaN_6U_10U_nor_itm_2_X1 = { 1{ !Fp17ToFp16_and_cse }} & _014__X ;
  assign _012_ = Fp17ToFp16_and_cse ? FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl[6] : FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2;
  logic [0:0] Fp17ToFp16_and_cse_C4 ;
  logic [0:0] Fp17ToFp16_and_cse_R4 ;
  logic [0:0] Fp17ToFp16_and_cse_X4 ;
  assign Fp17ToFp16_and_cse_C4 = | _012__C ;
  assign Fp17ToFp16_and_cse_X4 = | _012__X ;
  assign _012__T = Fp17ToFp16_and_cse ? ( { 1{ Fp17ToFp16_and_cse_T  }} | FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_T [6] ) : ( { 1{ Fp17ToFp16_and_cse_T  }} | FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_T );
  assign _012__S = Fp17ToFp16_and_cse ? FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_S : FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_S ;
  assign Fp17ToFp16_and_cse_R4 = ( | (_012__R | ( _012__C & ( { 1{ Fp17ToFp16_and_cse }} & FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_T [6] | { 1{ !Fp17ToFp16_and_cse }} & FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_T )))) && FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl[6] != FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2 ;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R2 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R2 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R2 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R2 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R2 [4], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R2 [5] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X2 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X2 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X2 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X2 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X2 [4], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X2 [5] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C2 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C2 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C2 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C2 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C2 [4], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C2 [5] } = 0;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C3 ;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R3 ;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X3 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C3 [6] = { 1{ Fp17ToFp16_and_cse }} ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R3 [6] = { 1{ Fp17ToFp16_and_cse }} & ( _012__R | ( { 1{ Fp17ToFp16_and_cse_T  }} & _012__C ));
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X3 [6] = { 1{ Fp17ToFp16_and_cse }} & _012__X ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_C5 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_R5 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_X5 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_C5 = { 1{ !Fp17ToFp16_and_cse }} ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_R5 = { 1{ !Fp17ToFp16_and_cse }} & ( _012__R | ( { 1{ Fp17ToFp16_and_cse_T  }} & _012__C ));
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_X5 = { 1{ !Fp17ToFp16_and_cse }} & _012__X ;
  assign _022_ = _041_ ? _076_ : main_stage_v_1;
  logic [0:0] _041__C0 ;
  logic [0:0] _041__R0 ;
  logic [0:0] _041__X0 ;
  assign _041__C0 = | _022__C ;
  assign _041__X0 = | _022__X ;
  assign _022__T = _041_ ? ( { 1{ _041__T  }} | _076__T ) : ( { 1{ _041__T  }} | main_stage_v_1_T );
  assign _022__S = _041_ ? _076__S : main_stage_v_1_S ;
  assign _041__R0 = ( | (_022__R | ( _022__C & ( { 1{ _041_ }} & _076__T | { 1{ !_041_ }} & main_stage_v_1_T )))) && _076_ != main_stage_v_1 ;
  logic [0:0] _076__C0 ;
  logic [0:0] _076__R0 ;
  logic [0:0] _076__X0 ;
  assign _076__C0 = { 1{ _041_ }} ;
  assign _076__R0 = { 1{ _041_ }} & ( _022__R | ( { 1{ _041__T  }} & _022__C ));
  assign _076__X0 = { 1{ _041_ }} & _022__X ;
  logic [0:0] main_stage_v_1_C5 ;
  logic [0:0] main_stage_v_1_R5 ;
  logic [0:0] main_stage_v_1_X5 ;
  assign main_stage_v_1_C5 = { 1{ !_041_ }} ;
  assign main_stage_v_1_R5 = { 1{ !_041_ }} & ( _022__R | ( { 1{ _041__T  }} & _022__C ));
  assign main_stage_v_1_X5 = { 1{ !_041_ }} & _022__X ;
  assign _023_ = _040_ ? _075_ : reg_chn_o_rsci_ld_core_psct_cse;
  logic [0:0] _040__C0 ;
  logic [0:0] _040__R0 ;
  logic [0:0] _040__X0 ;
  assign _040__C0 = | _023__C ;
  assign _040__X0 = | _023__X ;
  assign _023__T = _040_ ? ( { 1{ _040__T  }} | _075__T ) : ( { 1{ _040__T  }} | reg_chn_o_rsci_ld_core_psct_cse_T );
  assign _023__S = _040_ ? _075__S : reg_chn_o_rsci_ld_core_psct_cse_S ;
  assign _040__R0 = ( | (_023__R | ( _023__C & ( { 1{ _040_ }} & _075__T | { 1{ !_040_ }} & reg_chn_o_rsci_ld_core_psct_cse_T )))) && _075_ != reg_chn_o_rsci_ld_core_psct_cse ;
  logic [0:0] _075__C0 ;
  logic [0:0] _075__R0 ;
  logic [0:0] _075__X0 ;
  assign _075__C0 = { 1{ _040_ }} ;
  assign _075__R0 = { 1{ _040_ }} & ( _023__R | ( { 1{ _040__T  }} & _023__C ));
  assign _075__X0 = { 1{ _040_ }} & _023__X ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C3 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R3 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X3 ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C3 = { 1{ !_040_ }} ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R3 = { 1{ !_040_ }} & ( _023__R | ( { 1{ _040__T  }} & _023__C ));
  assign reg_chn_o_rsci_ld_core_psct_cse_X3 = { 1{ !_040_ }} & _023__X ;
  assign _027_ = _088_ ? FpExpoWidthDec_6U_5U_10U_1U_1U_mux_6_nl : 4'b1111;
  logic [0:0] _088__C2 ;
  logic [0:0] _088__R2 ;
  logic [0:0] _088__X2 ;
  assign _088__C2 = | _027__C ;
  assign _088__X2 = | _027__X ;
  logic [3:0] FpExpoWidthDec_6U_5U_10U_1U_1U_mux_6_nl_C0 ;
  logic [3:0] FpExpoWidthDec_6U_5U_10U_1U_1U_mux_6_nl_R0 ;
  logic [3:0] FpExpoWidthDec_6U_5U_10U_1U_1U_mux_6_nl_X0 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_mux_6_nl_C0 = { 4{ _088_ }} ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_mux_6_nl_R0 = { 4{ _088_ }} & ( _027__R | ( { 4{ _088__T  }} & _027__C ));
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_mux_6_nl_X0 = { 4{ _088_ }} & _027__X ;
  assign _027__T = _088_ ? ( { 4{ | _088__T  }} | FpExpoWidthDec_6U_5U_10U_1U_1U_mux_6_nl_T ) : { 4{ | _088__T  }};
  assign _027__S = _088_ ? FpExpoWidthDec_6U_5U_10U_1U_1U_mux_6_nl_S : _088__S ;
  assign _088__R2 = ( | (_027__R | ( { 4{ _088_ }} & FpExpoWidthDec_6U_5U_10U_1U_1U_mux_6_nl_T & _027__C ))) && FpExpoWidthDec_6U_5U_10U_1U_1U_mux_6_nl != 4'b1111 ;
  assign _018_ = chn_o_and_1_cse ? _098_ : chn_o_rsci_d_14;
  logic [0:0] chn_o_and_1_cse_C0 ;
  logic [0:0] chn_o_and_1_cse_R0 ;
  logic [0:0] chn_o_and_1_cse_X0 ;
  assign chn_o_and_1_cse_C0 = | _018__C ;
  assign chn_o_and_1_cse_X0 = | _018__X ;
  assign _018__T = chn_o_and_1_cse ? ( { 1{ chn_o_and_1_cse_T  }} | _098__T ) : ( { 1{ chn_o_and_1_cse_T  }} | chn_o_rsci_d_14_T );
  assign _018__S = chn_o_and_1_cse ? _098__S : chn_o_rsci_d_14_S ;
  assign chn_o_and_1_cse_R0 = ( | (_018__R | ( _018__C & ( { 1{ chn_o_and_1_cse }} & _098__T | { 1{ !chn_o_and_1_cse }} & chn_o_rsci_d_14_T )))) && _098_ != chn_o_rsci_d_14 ;
  logic [0:0] _098__C0 ;
  logic [0:0] _098__R0 ;
  logic [0:0] _098__X0 ;
  assign _098__C0 = { 1{ chn_o_and_1_cse }} ;
  assign _098__R0 = { 1{ chn_o_and_1_cse }} & ( _018__R | ( { 1{ chn_o_and_1_cse_T  }} & _018__C ));
  assign _098__X0 = { 1{ chn_o_and_1_cse }} & _018__X ;
  logic [0:0] chn_o_rsci_d_14_C0 ;
  logic [0:0] chn_o_rsci_d_14_R0 ;
  logic [0:0] chn_o_rsci_d_14_X0 ;
  assign chn_o_rsci_d_14_C0 = { 1{ !chn_o_and_1_cse }} ;
  assign chn_o_rsci_d_14_R0 = { 1{ !chn_o_and_1_cse }} & ( _018__R | ( { 1{ chn_o_and_1_cse_T  }} & _018__C ));
  assign chn_o_rsci_d_14_X0 = { 1{ !chn_o_and_1_cse }} & _018__X ;
  assign _019_ = chn_o_and_1_cse ? FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1 : chn_o_rsci_d_15;
  logic [0:0] chn_o_and_1_cse_C1 ;
  logic [0:0] chn_o_and_1_cse_R1 ;
  logic [0:0] chn_o_and_1_cse_X1 ;
  assign chn_o_and_1_cse_C1 = | _019__C ;
  assign chn_o_and_1_cse_X1 = | _019__X ;
  assign _019__T = chn_o_and_1_cse ? ( { 1{ chn_o_and_1_cse_T  }} | FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_T ) : ( { 1{ chn_o_and_1_cse_T  }} | chn_o_rsci_d_15_T );
  assign _019__S = chn_o_and_1_cse ? FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_S : chn_o_rsci_d_15_S ;
  assign chn_o_and_1_cse_R1 = ( | (_019__R | ( _019__C & ( { 1{ chn_o_and_1_cse }} & FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_T | { 1{ !chn_o_and_1_cse }} & chn_o_rsci_d_15_T )))) && FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1 != chn_o_rsci_d_15 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_C1 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_R1 ;
  logic [0:0] FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_X1 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_C1 = { 1{ chn_o_and_1_cse }} ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_R1 = { 1{ chn_o_and_1_cse }} & ( _019__R | ( { 1{ chn_o_and_1_cse_T  }} & _019__C ));
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_X1 = { 1{ chn_o_and_1_cse }} & _019__X ;
  logic [0:0] chn_o_rsci_d_15_C0 ;
  logic [0:0] chn_o_rsci_d_15_R0 ;
  logic [0:0] chn_o_rsci_d_15_X0 ;
  assign chn_o_rsci_d_15_C0 = { 1{ !chn_o_and_1_cse }} ;
  assign chn_o_rsci_d_15_R0 = { 1{ !chn_o_and_1_cse }} & ( _019__R | ( { 1{ chn_o_and_1_cse_T  }} & _019__C ));
  assign chn_o_rsci_d_15_X0 = { 1{ !chn_o_and_1_cse }} & _019__X ;
  assign _017_ = chn_o_and_1_cse ? _027_ : chn_o_rsci_d_13_10;
  logic [0:0] chn_o_and_1_cse_C2 ;
  logic [0:0] chn_o_and_1_cse_R2 ;
  logic [0:0] chn_o_and_1_cse_X2 ;
  assign chn_o_and_1_cse_C2 = | _017__C ;
  assign chn_o_and_1_cse_X2 = | _017__X ;
  assign _017__T = chn_o_and_1_cse ? ( { 4{ chn_o_and_1_cse_T  }} | _027__T ) : ( { 4{ chn_o_and_1_cse_T  }} | chn_o_rsci_d_13_10_T );
  assign _017__S = chn_o_and_1_cse ? _027__S : chn_o_rsci_d_13_10_S ;
  assign chn_o_and_1_cse_R2 = ( | (_017__R | ( _017__C & ( { 4{ chn_o_and_1_cse }} & _027__T | { 4{ !chn_o_and_1_cse }} & chn_o_rsci_d_13_10_T )))) && _027_ != chn_o_rsci_d_13_10 ;
  logic [3:0] _027__C0 ;
  logic [3:0] _027__R0 ;
  logic [3:0] _027__X0 ;
  assign _027__C0 = { 4{ chn_o_and_1_cse }} ;
  assign _027__R0 = { 4{ chn_o_and_1_cse }} & ( _017__R | ( { 4{ chn_o_and_1_cse_T  }} & _017__C ));
  assign _027__X0 = { 4{ chn_o_and_1_cse }} & _017__X ;
  logic [3:0] chn_o_rsci_d_13_10_C0 ;
  logic [3:0] chn_o_rsci_d_13_10_R0 ;
  logic [3:0] chn_o_rsci_d_13_10_X0 ;
  assign chn_o_rsci_d_13_10_C0 = { 4{ !chn_o_and_1_cse }} ;
  assign chn_o_rsci_d_13_10_R0 = { 4{ !chn_o_and_1_cse }} & ( _017__R | ( { 4{ chn_o_and_1_cse_T  }} & _017__C ));
  assign chn_o_rsci_d_13_10_X0 = { 4{ !chn_o_and_1_cse }} & _017__X ;
  assign _026_ = chn_o_rsci_d_9_0_mx0c1 ? FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl : FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1[9:0];
  logic [0:0] chn_o_rsci_d_9_0_mx0c1_C1 ;
  logic [0:0] chn_o_rsci_d_9_0_mx0c1_R1 ;
  logic [0:0] chn_o_rsci_d_9_0_mx0c1_X1 ;
  assign chn_o_rsci_d_9_0_mx0c1_C1 = | _026__C ;
  assign chn_o_rsci_d_9_0_mx0c1_X1 = | _026__X ;
  assign _026__T = chn_o_rsci_d_9_0_mx0c1 ? ( { 10{ chn_o_rsci_d_9_0_mx0c1_T  }} | FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_T ) : ( { 10{ chn_o_rsci_d_9_0_mx0c1_T  }} | FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_T [9:0] );
  assign _026__S = chn_o_rsci_d_9_0_mx0c1 ? FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_S : FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_S ;
  assign chn_o_rsci_d_9_0_mx0c1_R1 = ( | (_026__R | ( _026__C & ( { 10{ chn_o_rsci_d_9_0_mx0c1 }} & FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_T | { 10{ !chn_o_rsci_d_9_0_mx0c1 }} & FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_T [9:0] )))) && FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl != FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1[9:0] ;
  logic [9:0] FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_C0 ;
  logic [9:0] FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_R0 ;
  logic [9:0] FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_X0 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_C0 = { 10{ chn_o_rsci_d_9_0_mx0c1 }} ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_R0 = { 10{ chn_o_rsci_d_9_0_mx0c1 }} & ( _026__R | ( { 10{ chn_o_rsci_d_9_0_mx0c1_T  }} & _026__C ));
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_X0 = { 10{ chn_o_rsci_d_9_0_mx0c1 }} & _026__X ;
  logic [14:0] FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C5 ;
  logic [14:0] FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R5 ;
  logic [14:0] FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X5 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C5 [9:0] = { 10{ !chn_o_rsci_d_9_0_mx0c1 }} ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R5 [9:0] = { 10{ !chn_o_rsci_d_9_0_mx0c1 }} & ( _026__R | ( { 10{ chn_o_rsci_d_9_0_mx0c1_T  }} & _026__C ));
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X5 [9:0] = { 10{ !chn_o_rsci_d_9_0_mx0c1 }} & _026__X ;
  assign _020_ = _037_ ? _026_ : chn_o_rsci_d_9_0;
  logic [0:0] _037__C0 ;
  logic [0:0] _037__R0 ;
  logic [0:0] _037__X0 ;
  assign _037__C0 = | _020__C ;
  assign _037__X0 = | _020__X ;
  assign _020__T = _037_ ? ( { 10{ _037__T  }} | _026__T ) : ( { 10{ _037__T  }} | chn_o_rsci_d_9_0_T );
  assign _020__S = _037_ ? _026__S : chn_o_rsci_d_9_0_S ;
  assign _037__R0 = ( | (_020__R | ( _020__C & ( { 10{ _037_ }} & _026__T | { 10{ !_037_ }} & chn_o_rsci_d_9_0_T )))) && _026_ != chn_o_rsci_d_9_0 ;
  logic [9:0] _026__C0 ;
  logic [9:0] _026__R0 ;
  logic [9:0] _026__X0 ;
  assign _026__C0 = { 10{ _037_ }} ;
  assign _026__R0 = { 10{ _037_ }} & ( _020__R | ( { 10{ _037__T  }} & _020__C ));
  assign _026__X0 = { 10{ _037_ }} & _020__X ;
  logic [9:0] chn_o_rsci_d_9_0_C0 ;
  logic [9:0] chn_o_rsci_d_9_0_R0 ;
  logic [9:0] chn_o_rsci_d_9_0_X0 ;
  assign chn_o_rsci_d_9_0_C0 = { 10{ !_037_ }} ;
  assign chn_o_rsci_d_9_0_R0 = { 10{ !_037_ }} & ( _020__R | ( { 10{ _037__T  }} & _020__C ));
  assign chn_o_rsci_d_9_0_X0 = { 10{ !_037_ }} & _020__X ;
  assign _016_ = _035_ ? chn_a_rsci_ld_core_psct_mx0c0 : chn_a_rsci_ld_core_psct;
  logic [0:0] _035__C0 ;
  logic [0:0] _035__R0 ;
  logic [0:0] _035__X0 ;
  assign _035__C0 = | _016__C ;
  assign _035__X0 = | _016__X ;
  assign _016__T = _035_ ? ( { 1{ _035__T  }} | chn_a_rsci_ld_core_psct_mx0c0_T ) : ( { 1{ _035__T  }} | chn_a_rsci_ld_core_psct_T );
  assign _016__S = _035_ ? chn_a_rsci_ld_core_psct_mx0c0_S : chn_a_rsci_ld_core_psct_S ;
  assign _035__R0 = ( | (_016__R | ( _016__C & ( { 1{ _035_ }} & chn_a_rsci_ld_core_psct_mx0c0_T | { 1{ !_035_ }} & chn_a_rsci_ld_core_psct_T )))) && chn_a_rsci_ld_core_psct_mx0c0 != chn_a_rsci_ld_core_psct ;
  logic [0:0] chn_a_rsci_ld_core_psct_mx0c0_C1 ;
  logic [0:0] chn_a_rsci_ld_core_psct_mx0c0_R1 ;
  logic [0:0] chn_a_rsci_ld_core_psct_mx0c0_X1 ;
  assign chn_a_rsci_ld_core_psct_mx0c0_C1 = { 1{ _035_ }} ;
  assign chn_a_rsci_ld_core_psct_mx0c0_R1 = { 1{ _035_ }} & ( _016__R | ( { 1{ _035__T  }} & _016__C ));
  assign chn_a_rsci_ld_core_psct_mx0c0_X1 = { 1{ _035_ }} & _016__X ;
  logic [0:0] chn_a_rsci_ld_core_psct_C0 ;
  logic [0:0] chn_a_rsci_ld_core_psct_R0 ;
  logic [0:0] chn_a_rsci_ld_core_psct_X0 ;
  assign chn_a_rsci_ld_core_psct_C0 = { 1{ !_035_ }} ;
  assign chn_a_rsci_ld_core_psct_R0 = { 1{ !_035_ }} & ( _016__R | ( { 1{ _035__T  }} & _016__C ));
  assign chn_a_rsci_ld_core_psct_X0 = { 1{ !_035_ }} & _016__X ;
  assign _015_ = core_wen ? _072_ : chn_a_rsci_iswt0;
  logic [0:0] core_wen_C10 ;
  logic [0:0] core_wen_R10 ;
  logic [0:0] core_wen_X10 ;
  assign core_wen_C10 = | _015__C ;
  assign core_wen_X10 = | _015__X ;
  assign _015__T = core_wen ? ( { 1{ core_wen_T  }} | _072__T ) : ( { 1{ core_wen_T  }} | chn_a_rsci_iswt0_T );
  assign _015__S = core_wen ? _072__S : chn_a_rsci_iswt0_S ;
  assign core_wen_R10 = ( | (_015__R | ( _015__C & ( { 1{ core_wen }} & _072__T | { 1{ !core_wen }} & chn_a_rsci_iswt0_T )))) && _072_ != chn_a_rsci_iswt0 ;
  logic [0:0] _072__C0 ;
  logic [0:0] _072__R0 ;
  logic [0:0] _072__X0 ;
  assign _072__C0 = { 1{ core_wen }} ;
  assign _072__R0 = { 1{ core_wen }} & ( _015__R | ( { 1{ core_wen_T  }} & _015__C ));
  assign _072__X0 = { 1{ core_wen }} & _015__X ;
  logic [0:0] chn_a_rsci_iswt0_C0 ;
  logic [0:0] chn_a_rsci_iswt0_R0 ;
  logic [0:0] chn_a_rsci_iswt0_X0 ;
  assign chn_a_rsci_iswt0_C0 = { 1{ !core_wen }} ;
  assign chn_a_rsci_iswt0_R0 = { 1{ !core_wen }} & ( _015__R | ( { 1{ core_wen_T  }} & _015__C ));
  assign chn_a_rsci_iswt0_X0 = { 1{ !core_wen }} & _015__X ;
  assign _021_ = core_wen ? and_dcpl_11 : chn_o_rsci_iswt0;
  logic [0:0] core_wen_C11 ;
  logic [0:0] core_wen_R11 ;
  logic [0:0] core_wen_X11 ;
  assign core_wen_C11 = | _021__C ;
  assign core_wen_X11 = | _021__X ;
  assign _021__T = core_wen ? ( { 1{ core_wen_T  }} | and_dcpl_11_T ) : ( { 1{ core_wen_T  }} | chn_o_rsci_iswt0_T );
  assign _021__S = core_wen ? and_dcpl_11_S : chn_o_rsci_iswt0_S ;
  assign core_wen_R11 = ( | (_021__R | ( _021__C & ( { 1{ core_wen }} & and_dcpl_11_T | { 1{ !core_wen }} & chn_o_rsci_iswt0_T )))) && and_dcpl_11 != chn_o_rsci_iswt0 ;
  logic [0:0] and_dcpl_11_C3 ;
  logic [0:0] and_dcpl_11_R3 ;
  logic [0:0] and_dcpl_11_X3 ;
  assign and_dcpl_11_C3 = { 1{ core_wen }} ;
  assign and_dcpl_11_R3 = { 1{ core_wen }} & ( _021__R | ( { 1{ core_wen_T  }} & _021__C ));
  assign and_dcpl_11_X3 = { 1{ core_wen }} & _021__X ;
  logic [0:0] chn_o_rsci_iswt0_C0 ;
  logic [0:0] chn_o_rsci_iswt0_R0 ;
  logic [0:0] chn_o_rsci_iswt0_X0 ;
  assign chn_o_rsci_iswt0_C0 = { 1{ !core_wen }} ;
  assign chn_o_rsci_iswt0_R0 = { 1{ !core_wen }} & ( _021__R | ( { 1{ core_wen_T  }} & _021__C ));
  assign chn_o_rsci_iswt0_X0 = { 1{ !core_wen }} & _021__X ;
  logic [4:0] nl_FpMantDecShiftRight_10U_6U_10U_guard_mask_lshift_rg_s_R0 ;
  logic [4:0] nl_FpMantDecShiftRight_10U_6U_10U_guard_mask_lshift_rg_s_X0 ;
  logic [4:0] nl_FpMantDecShiftRight_10U_6U_10U_guard_mask_lshift_rg_s_C0 ;
// module: \$paramod\FP17_TO_FP16_mgc_shift_bl_v4\width_a=1\signd_a=0\width_s=5\width_z=11
  \$paramod\FP17_TO_FP16_mgc_shift_bl_v4\width_a=1\signd_a=0\width_s=5\width_z=11 FpMantDecShiftRight_10U_6U_10U_guard_mask_lshift_rg (
    .a_T (  1'h0  ),
    .a_R (  nouse_zy0  ),
    .a_X (  nouse_zy1  ),
    .a_C (  nouse_zy2  ),
    .a_S ( 1'h0 ),
    .s_T (  nl_FpMantDecShiftRight_10U_6U_10U_guard_mask_lshift_rg_s_T  ),
    .s_R (  nl_FpMantDecShiftRight_10U_6U_10U_guard_mask_lshift_rg_s_R0  ),
    .s_X (  nl_FpMantDecShiftRight_10U_6U_10U_guard_mask_lshift_rg_s_X0  ),
    .s_C (  nl_FpMantDecShiftRight_10U_6U_10U_guard_mask_lshift_rg_s_C0  ),
    .s_S (  nl_FpMantDecShiftRight_10U_6U_10U_guard_mask_lshift_rg_s_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .rst_zy(rst_zy),
    .z_T (  FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_T  ),
    .z_R0 (  FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_R  ),
    .z_X0 (  FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_X  ),
    .z_C0 (  FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_C  ),
    .z_S ( FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_S ),
    .z ( FpMantDecShiftRight_10U_6U_10U_guard_mask_sva ),
    .a ( 1'b1 ),
    .s ( nl_FpMantDecShiftRight_10U_6U_10U_guard_mask_lshift_rg_s )
  );
  logic [1-1:0] nouse_zy0 ;
  logic [1-1:0] nouse_zy1 ;
  logic [1-1:0] nouse_zy2 ;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R5 [14:10] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X5 [14:10] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C5 [14:10] } = 0;
  logic [14:0] FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R6 ;
  logic [14:0] FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X6 ;
  logic [14:0] FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C6 ;
  assign { nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_R0 [3:1] } = 0;
  assign { nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_X0 [3:1] } = 0;
  assign { nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_C0 [3:1] } = 0;
  logic [2:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_R2 ;
  logic [2:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_X2 ;
  logic [2:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_C2 ;
  logic [3:0] nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_R1 ;
  logic [3:0] nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_X1 ;
  logic [3:0] nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_C1 ;
// module: \$paramod\FP17_TO_FP16_mgc_shift_r_v4\width_a=11\signd_a=0\width_s=4\width_z=11
  \$paramod\FP17_TO_FP16_mgc_shift_r_v4\width_a=11\signd_a=0\width_s=4\width_z=11 FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg (
    .a_T ( {  1'h0 , FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_T [9:0]  } ),
    .a_R ( {  nouse_zy3 , FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R6 [9:0]  } ),
    .a_X ( {  nouse_zy4 , FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X6 [9:0]  } ),
    .a_C ( {  nouse_zy5 , FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C6 [9:0]  } ),
    .a_S ( {  1'h0 , FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_S [9:0]  } ),
    .s_T ( {  FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_T , nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_T [0]  } ),
    .s_R ( {  FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_R2 , nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_R1 [0]  } ),
    .s_X ( {  FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_X2 , nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_X1 [0]  } ),
    .s_C ( {  FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_C2 , nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_C1 [0]  } ),
    .s_S ( {  FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_S , nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_S [0]  } ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .rst_zy(rst_zy),
    .z_T (  FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_itm_T  ),
    .z_R0 (  FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_itm_R  ),
    .z_X0 (  FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_itm_X  ),
    .z_C0 (  FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_itm_C  ),
    .z_S ( FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_itm_S ),
    .z ( FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_itm ),
    .a ( { 1'b1, FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1[9:0] } ),
    .s ( { FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2, nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s[0] } )
  );
  logic [1-1:0] nouse_zy3 ;
  logic [1-1:0] nouse_zy4 ;
  logic [1-1:0] nouse_zy5 ;
  assign { nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_R1 [3:1] } = 0;
  assign { nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_X1 [3:1] } = 0;
  assign { nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_C1 [3:1] } = 0;
  logic [2:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_R3 ;
  logic [2:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_X3 ;
  logic [2:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_C3 ;
  logic [3:0] nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_R2 ;
  logic [3:0] nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_X2 ;
  logic [3:0] nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_C2 ;
// module: \$paramod\FP17_TO_FP16_mgc_shift_l_v4\width_a=1\signd_a=0\width_s=4\width_z=11
  \$paramod\FP17_TO_FP16_mgc_shift_l_v4\width_a=1\signd_a=0\width_s=4\width_z=11 FpMantDecShiftRight_10U_6U_10U_least_mask_lshift_rg (
    .a_T (  1'h0  ),
    .a_R (  nouse_zy6  ),
    .a_X (  nouse_zy7  ),
    .a_C (  nouse_zy8  ),
    .a_S ( 1'h0 ),
    .s_T ( {  FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_T , nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_T [0]  } ),
    .s_R ( {  FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_R3 , nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_R2 [0]  } ),
    .s_X ( {  FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_X3 , nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_X2 [0]  } ),
    .s_C ( {  FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_C3 , nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_C2 [0]  } ),
    .s_S ( {  FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_S , nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_S [0]  } ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .rst_zy(rst_zy),
    .z_T (  FpMantDecShiftRight_10U_6U_10U_least_mask_sva_T  ),
    .z_R0 (  FpMantDecShiftRight_10U_6U_10U_least_mask_sva_R  ),
    .z_X0 (  FpMantDecShiftRight_10U_6U_10U_least_mask_sva_X  ),
    .z_C0 (  FpMantDecShiftRight_10U_6U_10U_least_mask_sva_C  ),
    .z_S ( FpMantDecShiftRight_10U_6U_10U_least_mask_sva_S ),
    .z ( FpMantDecShiftRight_10U_6U_10U_least_mask_sva ),
    .a ( 1'b1 ),
    .s ( { FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2, nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s[0] } )
  );
  logic [1-1:0] nouse_zy6 ;
  logic [1-1:0] nouse_zy7 ;
  logic [1-1:0] nouse_zy8 ;
  logic [0:0] chn_a_rsc_vz_R0 ;
  logic [0:0] chn_a_rsc_vz_X0 ;
  logic [0:0] chn_a_rsc_vz_C0 ;
  logic [16:0] chn_a_rsc_z_R0 ;
  logic [16:0] chn_a_rsc_z_X0 ;
  logic [16:0] chn_a_rsc_z_C0 ;
  logic [0:0] chn_a_rsci_iswt0_R1 ;
  logic [0:0] chn_a_rsci_iswt0_X1 ;
  logic [0:0] chn_a_rsci_iswt0_C1 ;
  logic [0:0] chn_a_rsci_ld_core_psct_R1 ;
  logic [0:0] chn_a_rsci_ld_core_psct_X1 ;
  logic [0:0] chn_a_rsci_ld_core_psct_C1 ;
  logic [0:0] chn_a_rsci_oswt_R0 ;
  logic [0:0] chn_a_rsci_oswt_X0 ;
  logic [0:0] chn_a_rsci_oswt_C0 ;
  logic [0:0] core_wen_R12 ;
  logic [0:0] core_wen_X12 ;
  logic [0:0] core_wen_C12 ;
  logic [0:0] core_wten_R0 ;
  logic [0:0] core_wten_X0 ;
  logic [0:0] core_wten_C0 ;
  logic [0:0] nvdla_core_rstn_R0 ;
  logic [0:0] nvdla_core_rstn_X0 ;
  logic [0:0] nvdla_core_rstn_C0 ;
// module: HLS_fp17_to_fp16_core_chn_a_rsci
  HLS_fp17_to_fp16_core_chn_a_rsci HLS_fp17_to_fp16_core_chn_a_rsci_inst (
    .chn_a_rsc_vz_T (  chn_a_rsc_vz_T  ),
    .chn_a_rsc_vz_R (  chn_a_rsc_vz_R0  ),
    .chn_a_rsc_vz_X (  chn_a_rsc_vz_X0  ),
    .chn_a_rsc_vz_C (  chn_a_rsc_vz_C0  ),
    .chn_a_rsc_vz_S (  chn_a_rsc_vz_S  ),
    .chn_a_rsc_z_T (  chn_a_rsc_z_T  ),
    .chn_a_rsc_z_R (  chn_a_rsc_z_R0  ),
    .chn_a_rsc_z_X (  chn_a_rsc_z_X0  ),
    .chn_a_rsc_z_C (  chn_a_rsc_z_C0  ),
    .chn_a_rsc_z_S (  chn_a_rsc_z_S  ),
    .chn_a_rsci_iswt0_T (  chn_a_rsci_iswt0_T  ),
    .chn_a_rsci_iswt0_R (  chn_a_rsci_iswt0_R1  ),
    .chn_a_rsci_iswt0_X (  chn_a_rsci_iswt0_X1  ),
    .chn_a_rsci_iswt0_C (  chn_a_rsci_iswt0_C1  ),
    .chn_a_rsci_iswt0_S (  chn_a_rsci_iswt0_S  ),
    .chn_a_rsci_ld_core_psct_T (  chn_a_rsci_ld_core_psct_T  ),
    .chn_a_rsci_ld_core_psct_R (  chn_a_rsci_ld_core_psct_R1  ),
    .chn_a_rsci_ld_core_psct_X (  chn_a_rsci_ld_core_psct_X1  ),
    .chn_a_rsci_ld_core_psct_C (  chn_a_rsci_ld_core_psct_C1  ),
    .chn_a_rsci_ld_core_psct_S (  chn_a_rsci_ld_core_psct_S  ),
    .chn_a_rsci_oswt_T (  chn_a_rsci_oswt_T  ),
    .chn_a_rsci_oswt_R (  chn_a_rsci_oswt_R0  ),
    .chn_a_rsci_oswt_X (  chn_a_rsci_oswt_X0  ),
    .chn_a_rsci_oswt_C (  chn_a_rsci_oswt_C0  ),
    .chn_a_rsci_oswt_S (  chn_a_rsci_oswt_S  ),
    .core_wen_T (  core_wen_T  ),
    .core_wen_R (  core_wen_R12  ),
    .core_wen_X (  core_wen_X12  ),
    .core_wen_C (  core_wen_C12  ),
    .core_wen_S (  core_wen_S  ),
    .core_wten_T (  core_wten_T  ),
    .core_wten_R (  core_wten_R0  ),
    .core_wten_X (  core_wten_X0  ),
    .core_wten_C (  core_wten_C0  ),
    .core_wten_S (  core_wten_S  ),
    .nvdla_core_rstn_T (  nvdla_core_rstn_T  ),
    .nvdla_core_rstn_R (  nvdla_core_rstn_R0  ),
    .nvdla_core_rstn_X (  nvdla_core_rstn_X0  ),
    .nvdla_core_rstn_C (  nvdla_core_rstn_C0  ),
    .nvdla_core_rstn_S (  nvdla_core_rstn_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .chn_a_rsc_lz_T (  chn_a_rsc_lz_T  ),
    .chn_a_rsc_lz_R0 (  chn_a_rsc_lz_R  ),
    .chn_a_rsc_lz_X0 (  chn_a_rsc_lz_X  ),
    .chn_a_rsc_lz_C0 (  chn_a_rsc_lz_C  ),
    .chn_a_rsc_lz_S ( chn_a_rsc_lz_S ),
    .chn_a_rsci_bawt_T (  chn_a_rsci_bawt_T  ),
    .chn_a_rsci_bawt_R0 (  chn_a_rsci_bawt_R  ),
    .chn_a_rsci_bawt_X0 (  chn_a_rsci_bawt_X  ),
    .chn_a_rsci_bawt_C0 (  chn_a_rsci_bawt_C  ),
    .chn_a_rsci_bawt_S ( chn_a_rsci_bawt_S ),
    .chn_a_rsci_d_mxwt_T (  chn_a_rsci_d_mxwt_T  ),
    .chn_a_rsci_d_mxwt_R0 (  chn_a_rsci_d_mxwt_R  ),
    .chn_a_rsci_d_mxwt_X0 (  chn_a_rsci_d_mxwt_X  ),
    .chn_a_rsci_d_mxwt_C0 (  chn_a_rsci_d_mxwt_C  ),
    .chn_a_rsci_d_mxwt_S ( chn_a_rsci_d_mxwt_S ),
    .chn_a_rsci_wen_comp_T (  chn_a_rsci_wen_comp_T  ),
    .chn_a_rsci_wen_comp_R0 (  chn_a_rsci_wen_comp_R  ),
    .chn_a_rsci_wen_comp_X0 (  chn_a_rsci_wen_comp_X  ),
    .chn_a_rsci_wen_comp_C0 (  chn_a_rsci_wen_comp_C  ),
    .chn_a_rsci_wen_comp_S ( chn_a_rsci_wen_comp_S ),
    .nvdla_core_clk ( nvdla_core_clk ),
    .chn_a_rsci_d_mxwt ( chn_a_rsci_d_mxwt ),
    .core_wten ( core_wten ),
    .chn_a_rsci_bawt ( chn_a_rsci_bawt ),
    .chn_a_rsc_z ( chn_a_rsc_z ),
    .chn_a_rsc_lz ( chn_a_rsc_lz ),
    .chn_a_rsc_vz ( chn_a_rsc_vz ),
    .chn_a_rsci_ld_core_psct ( chn_a_rsci_ld_core_psct ),
    .chn_a_rsci_oswt ( chn_a_rsci_oswt ),
    .nvdla_core_rstn ( nvdla_core_rstn ),
    .chn_a_rsci_wen_comp ( chn_a_rsci_wen_comp ),
    .chn_a_rsci_iswt0 ( chn_a_rsci_iswt0 ),
    .core_wen ( core_wen )
  );
  logic [0:0] chn_o_rsc_vz_R0 ;
  logic [0:0] chn_o_rsc_vz_X0 ;
  logic [0:0] chn_o_rsc_vz_C0 ;
  logic [0:0] chn_o_rsci_d_15_R1 ;
  logic [0:0] chn_o_rsci_d_15_X1 ;
  logic [0:0] chn_o_rsci_d_15_C1 ;
  logic [0:0] chn_o_rsci_d_14_R1 ;
  logic [0:0] chn_o_rsci_d_14_X1 ;
  logic [0:0] chn_o_rsci_d_14_C1 ;
  logic [3:0] chn_o_rsci_d_13_10_R1 ;
  logic [3:0] chn_o_rsci_d_13_10_X1 ;
  logic [3:0] chn_o_rsci_d_13_10_C1 ;
  logic [9:0] chn_o_rsci_d_9_0_R1 ;
  logic [9:0] chn_o_rsci_d_9_0_X1 ;
  logic [9:0] chn_o_rsci_d_9_0_C1 ;
  logic [0:0] chn_o_rsci_iswt0_R1 ;
  logic [0:0] chn_o_rsci_iswt0_X1 ;
  logic [0:0] chn_o_rsci_iswt0_C1 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R4 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X4 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C4 ;
  logic [0:0] chn_o_rsci_oswt_R0 ;
  logic [0:0] chn_o_rsci_oswt_X0 ;
  logic [0:0] chn_o_rsci_oswt_C0 ;
  logic [0:0] core_wen_R13 ;
  logic [0:0] core_wen_X13 ;
  logic [0:0] core_wen_C13 ;
  logic [0:0] core_wten_R1 ;
  logic [0:0] core_wten_X1 ;
  logic [0:0] core_wten_C1 ;
  logic [0:0] nvdla_core_rstn_R1 ;
  logic [0:0] nvdla_core_rstn_X1 ;
  logic [0:0] nvdla_core_rstn_C1 ;
// module: HLS_fp17_to_fp16_core_chn_o_rsci
  HLS_fp17_to_fp16_core_chn_o_rsci HLS_fp17_to_fp16_core_chn_o_rsci_inst (
    .chn_o_rsc_vz_T (  chn_o_rsc_vz_T  ),
    .chn_o_rsc_vz_R (  chn_o_rsc_vz_R0  ),
    .chn_o_rsc_vz_X (  chn_o_rsc_vz_X0  ),
    .chn_o_rsc_vz_C (  chn_o_rsc_vz_C0  ),
    .chn_o_rsc_vz_S (  chn_o_rsc_vz_S  ),
    .chn_o_rsci_d_T ( {  chn_o_rsci_d_15_T , chn_o_rsci_d_14_T , chn_o_rsci_d_13_10_T , chn_o_rsci_d_9_0_T  } ),
    .chn_o_rsci_d_R ( {  chn_o_rsci_d_15_R1 , chn_o_rsci_d_14_R1 , chn_o_rsci_d_13_10_R1 , chn_o_rsci_d_9_0_R1  } ),
    .chn_o_rsci_d_X ( {  chn_o_rsci_d_15_X1 , chn_o_rsci_d_14_X1 , chn_o_rsci_d_13_10_X1 , chn_o_rsci_d_9_0_X1  } ),
    .chn_o_rsci_d_C ( {  chn_o_rsci_d_15_C1 , chn_o_rsci_d_14_C1 , chn_o_rsci_d_13_10_C1 , chn_o_rsci_d_9_0_C1  } ),
    .chn_o_rsci_d_S ( {  chn_o_rsci_d_15_S , chn_o_rsci_d_14_S , chn_o_rsci_d_13_10_S , chn_o_rsci_d_9_0_S  } ),
    .chn_o_rsci_iswt0_T (  chn_o_rsci_iswt0_T  ),
    .chn_o_rsci_iswt0_R (  chn_o_rsci_iswt0_R1  ),
    .chn_o_rsci_iswt0_X (  chn_o_rsci_iswt0_X1  ),
    .chn_o_rsci_iswt0_C (  chn_o_rsci_iswt0_C1  ),
    .chn_o_rsci_iswt0_S (  chn_o_rsci_iswt0_S  ),
    .chn_o_rsci_ld_core_psct_T (  reg_chn_o_rsci_ld_core_psct_cse_T  ),
    .chn_o_rsci_ld_core_psct_R (  reg_chn_o_rsci_ld_core_psct_cse_R4  ),
    .chn_o_rsci_ld_core_psct_X (  reg_chn_o_rsci_ld_core_psct_cse_X4  ),
    .chn_o_rsci_ld_core_psct_C (  reg_chn_o_rsci_ld_core_psct_cse_C4  ),
    .chn_o_rsci_ld_core_psct_S (  reg_chn_o_rsci_ld_core_psct_cse_S  ),
    .chn_o_rsci_oswt_T (  chn_o_rsci_oswt_T  ),
    .chn_o_rsci_oswt_R (  chn_o_rsci_oswt_R0  ),
    .chn_o_rsci_oswt_X (  chn_o_rsci_oswt_X0  ),
    .chn_o_rsci_oswt_C (  chn_o_rsci_oswt_C0  ),
    .chn_o_rsci_oswt_S (  chn_o_rsci_oswt_S  ),
    .core_wen_T (  core_wen_T  ),
    .core_wen_R (  core_wen_R13  ),
    .core_wen_X (  core_wen_X13  ),
    .core_wen_C (  core_wen_C13  ),
    .core_wen_S (  core_wen_S  ),
    .core_wten_T (  core_wten_T  ),
    .core_wten_R (  core_wten_R1  ),
    .core_wten_X (  core_wten_X1  ),
    .core_wten_C (  core_wten_C1  ),
    .core_wten_S (  core_wten_S  ),
    .nvdla_core_rstn_T (  nvdla_core_rstn_T  ),
    .nvdla_core_rstn_R (  nvdla_core_rstn_R1  ),
    .nvdla_core_rstn_X (  nvdla_core_rstn_X1  ),
    .nvdla_core_rstn_C (  nvdla_core_rstn_C1  ),
    .nvdla_core_rstn_S (  nvdla_core_rstn_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .chn_o_rsc_lz_T (  chn_o_rsc_lz_T  ),
    .chn_o_rsc_lz_R0 (  chn_o_rsc_lz_R  ),
    .chn_o_rsc_lz_X0 (  chn_o_rsc_lz_X  ),
    .chn_o_rsc_lz_C0 (  chn_o_rsc_lz_C  ),
    .chn_o_rsc_lz_S ( chn_o_rsc_lz_S ),
    .chn_o_rsc_z_T (  chn_o_rsc_z_T  ),
    .chn_o_rsc_z_R0 (  chn_o_rsc_z_R  ),
    .chn_o_rsc_z_X0 (  chn_o_rsc_z_X  ),
    .chn_o_rsc_z_C0 (  chn_o_rsc_z_C  ),
    .chn_o_rsc_z_S ( chn_o_rsc_z_S ),
    .chn_o_rsci_bawt_T (  chn_o_rsci_bawt_T  ),
    .chn_o_rsci_bawt_R0 (  chn_o_rsci_bawt_R  ),
    .chn_o_rsci_bawt_X0 (  chn_o_rsci_bawt_X  ),
    .chn_o_rsci_bawt_C0 (  chn_o_rsci_bawt_C  ),
    .chn_o_rsci_bawt_S ( chn_o_rsci_bawt_S ),
    .chn_o_rsci_wen_comp_T (  chn_o_rsci_wen_comp_T  ),
    .chn_o_rsci_wen_comp_R0 (  chn_o_rsci_wen_comp_R  ),
    .chn_o_rsci_wen_comp_X0 (  chn_o_rsci_wen_comp_X  ),
    .chn_o_rsci_wen_comp_C0 (  chn_o_rsci_wen_comp_C  ),
    .chn_o_rsci_wen_comp_S ( chn_o_rsci_wen_comp_S ),
    .nvdla_core_rstn ( nvdla_core_rstn ),
    .nvdla_core_clk ( nvdla_core_clk ),
    .chn_o_rsci_d ( { chn_o_rsci_d_15, chn_o_rsci_d_14, chn_o_rsci_d_13_10, chn_o_rsci_d_9_0 } ),
    .core_wten ( core_wten ),
    .chn_o_rsc_z ( chn_o_rsc_z ),
    .core_wen ( core_wen ),
    .chn_o_rsc_lz ( chn_o_rsc_lz ),
    .chn_o_rsci_ld_core_psct ( reg_chn_o_rsci_ld_core_psct_cse ),
    .chn_o_rsci_bawt ( chn_o_rsci_bawt ),
    .chn_o_rsc_vz ( chn_o_rsc_vz ),
    .chn_o_rsci_wen_comp ( chn_o_rsci_wen_comp ),
    .chn_o_rsci_iswt0 ( chn_o_rsci_iswt0 ),
    .chn_o_rsci_oswt ( chn_o_rsci_oswt )
  );
  logic [0:0] core_wen_R14 ;
  logic [0:0] core_wen_X14 ;
  logic [0:0] core_wen_C14 ;
  logic [0:0] nvdla_core_rstn_R2 ;
  logic [0:0] nvdla_core_rstn_X2 ;
  logic [0:0] nvdla_core_rstn_C2 ;
// module: HLS_fp17_to_fp16_core_core_fsm
  HLS_fp17_to_fp16_core_core_fsm HLS_fp17_to_fp16_core_core_fsm_inst (
    .core_wen_T (  core_wen_T  ),
    .core_wen_R (  core_wen_R14  ),
    .core_wen_X (  core_wen_X14  ),
    .core_wen_C (  core_wen_C14  ),
    .core_wen_S (  core_wen_S  ),
    .nvdla_core_rstn_T (  nvdla_core_rstn_T  ),
    .nvdla_core_rstn_R (  nvdla_core_rstn_R2  ),
    .nvdla_core_rstn_X (  nvdla_core_rstn_X2  ),
    .nvdla_core_rstn_C (  nvdla_core_rstn_C2  ),
    .nvdla_core_rstn_S (  nvdla_core_rstn_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .fsm_output_T (  fsm_output_T  ),
    .fsm_output_R0 (  fsm_output_R  ),
    .fsm_output_X0 (  fsm_output_X  ),
    .fsm_output_C0 (  fsm_output_C  ),
    .fsm_output_S ( fsm_output_S ),
    .nvdla_core_clk ( nvdla_core_clk ),
    .nvdla_core_rstn ( nvdla_core_rstn ),
    .core_wen ( core_wen ),
    .fsm_output ( fsm_output )
  );
  logic [0:0] chn_a_rsci_wen_comp_R0 ;
  logic [0:0] chn_a_rsci_wen_comp_X0 ;
  logic [0:0] chn_a_rsci_wen_comp_C0 ;
  logic [0:0] chn_o_rsci_wen_comp_R0 ;
  logic [0:0] chn_o_rsci_wen_comp_X0 ;
  logic [0:0] chn_o_rsci_wen_comp_C0 ;
  logic [0:0] nvdla_core_rstn_R3 ;
  logic [0:0] nvdla_core_rstn_X3 ;
  logic [0:0] nvdla_core_rstn_C3 ;
// module: HLS_fp17_to_fp16_core_staller
  HLS_fp17_to_fp16_core_staller HLS_fp17_to_fp16_core_staller_inst (
    .chn_a_rsci_wen_comp_T (  chn_a_rsci_wen_comp_T  ),
    .chn_a_rsci_wen_comp_R (  chn_a_rsci_wen_comp_R0  ),
    .chn_a_rsci_wen_comp_X (  chn_a_rsci_wen_comp_X0  ),
    .chn_a_rsci_wen_comp_C (  chn_a_rsci_wen_comp_C0  ),
    .chn_a_rsci_wen_comp_S (  chn_a_rsci_wen_comp_S  ),
    .chn_o_rsci_wen_comp_T (  chn_o_rsci_wen_comp_T  ),
    .chn_o_rsci_wen_comp_R (  chn_o_rsci_wen_comp_R0  ),
    .chn_o_rsci_wen_comp_X (  chn_o_rsci_wen_comp_X0  ),
    .chn_o_rsci_wen_comp_C (  chn_o_rsci_wen_comp_C0  ),
    .chn_o_rsci_wen_comp_S (  chn_o_rsci_wen_comp_S  ),
    .nvdla_core_rstn_T (  nvdla_core_rstn_T  ),
    .nvdla_core_rstn_R (  nvdla_core_rstn_R3  ),
    .nvdla_core_rstn_X (  nvdla_core_rstn_X3  ),
    .nvdla_core_rstn_C (  nvdla_core_rstn_C3  ),
    .nvdla_core_rstn_S (  nvdla_core_rstn_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .core_wen_T (  core_wen_T  ),
    .core_wen_R0 (  core_wen_R  ),
    .core_wen_X0 (  core_wen_X  ),
    .core_wen_C0 (  core_wen_C  ),
    .core_wen_S ( core_wen_S ),
    .core_wten_T (  core_wten_T  ),
    .core_wten_R0 (  core_wten_R  ),
    .core_wten_X0 (  core_wten_X  ),
    .core_wten_C0 (  core_wten_C  ),
    .core_wten_S ( core_wten_S ),
    .chn_o_rsci_wen_comp ( chn_o_rsci_wen_comp ),
    .nvdla_core_rstn ( nvdla_core_rstn ),
    .chn_a_rsci_wen_comp ( chn_a_rsci_wen_comp ),
    .nvdla_core_clk ( nvdla_core_clk ),
    .core_wen ( core_wen ),
    .core_wten ( core_wten )
  );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_acc_itm_6_1 = FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl[6];
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R3 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R3 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R3 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R3 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R3 [4], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R3 [5] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X3 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X3 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X3 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X3 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X3 [4], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X3 [5] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C3 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C3 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C3 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C3 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C3 [4], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C3 [5] } = 0;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C4 ;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R4 ;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X4 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_acc_itm_6_1_T = FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_T [6] ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C4 [6] = FpExpoWidthDec_6U_5U_10U_1U_1U_acc_itm_6_1_C ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R4 [6] = FpExpoWidthDec_6U_5U_10U_1U_1U_acc_itm_6_1_R ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X4 [6] = FpExpoWidthDec_6U_5U_10U_1U_1U_acc_itm_6_1_X ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_acc_itm_6_1_S = FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_S ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_itm_6_1 = FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl[6];
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R3 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R3 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R3 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R3 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R3 [4], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R3 [5] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X3 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X3 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X3 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X3 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X3 [4], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X3 [5] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C3 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C3 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C3 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C3 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C3 [4], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C3 [5] } = 0;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C4 ;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R4 ;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X4 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_itm_6_1_T = FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_T [6] ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C4 [6] = FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_itm_6_1_C ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R4 [6] = FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_itm_6_1_R ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X4 [6] = FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_itm_6_1_X ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_itm_6_1_S = FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_S ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_itm_5_1 = FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl[5];
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R8 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R8 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R8 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R8 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R8 [4] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X8 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X8 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X8 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X8 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X8 [4] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C8 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C8 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C8 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C8 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C8 [4] } = 0;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C9 ;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R9 ;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X9 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_itm_5_1_T = FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_T [5] ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C9 [5] = FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_itm_5_1_C ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R9 [5] = FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_itm_5_1_R ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X9 [5] = FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_itm_5_1_X ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_itm_5_1_S = FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_S ;
  assign chn_a_rsci_oswt_unreg = or_tmp_19;
  logic [0:0] or_tmp_19_C1 ;
  logic [0:0] or_tmp_19_R1 ;
  logic [0:0] or_tmp_19_X1 ;
  assign chn_a_rsci_oswt_unreg_T = or_tmp_19_T ;
  assign or_tmp_19_C1 = chn_a_rsci_oswt_unreg_C ;
  assign or_tmp_19_R1 = chn_a_rsci_oswt_unreg_R ;
  assign or_tmp_19_X1 = chn_a_rsci_oswt_unreg_X ;
  assign chn_a_rsci_oswt_unreg_S = or_tmp_19_S ;
  assign chn_o_rsci_oswt_unreg = and_dcpl_6;
  logic [0:0] and_dcpl_6_C1 ;
  logic [0:0] and_dcpl_6_R1 ;
  logic [0:0] and_dcpl_6_X1 ;
  assign chn_o_rsci_oswt_unreg_T = and_dcpl_6_T ;
  assign and_dcpl_6_C1 = chn_o_rsci_oswt_unreg_C ;
  assign and_dcpl_6_R1 = chn_o_rsci_oswt_unreg_R ;
  assign and_dcpl_6_X1 = chn_o_rsci_oswt_unreg_X ;
  assign chn_o_rsci_oswt_unreg_S = and_dcpl_6_S ;
  assign nl_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl[6:0] = FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R4 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R4 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R4 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R4 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R4 [4], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R4 [5] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X4 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X4 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X4 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X4 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X4 [4], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X4 [5] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C4 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C4 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C4 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C4 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C4 [4], FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C4 [5] } = 0;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C5 ;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R5 ;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X5 ;
  assign nl_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_T [6:0] = FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_T ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C5 = nl_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C [6:0] ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R5 = nl_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R [6:0] ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X5 = nl_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X [6:0] ;
  assign nl_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_S = FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_S ;
  assign nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl[6:0] = FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R4 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R4 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R4 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R4 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R4 [4], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R4 [5] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X4 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X4 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X4 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X4 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X4 [4], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X4 [5] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C4 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C4 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C4 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C4 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C4 [4], FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C4 [5] } = 0;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C5 ;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R5 ;
  logic [6:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X5 ;
  assign nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_T [6:0] = FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_T ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C5 = nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C [6:0] ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R5 = nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R [6:0] ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X5 = nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X [6:0] ;
  assign nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_S = FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_S ;
  assign nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl[5:0] = FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R9 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R9 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R9 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R9 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R9 [4] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X9 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X9 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X9 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X9 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X9 [4] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C9 [0], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C9 [1], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C9 [2], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C9 [3], FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C9 [4] } = 0;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C10 ;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R10 ;
  logic [5:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X10 ;
  assign nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_T [5:0] = FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_T ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C10 = nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C [5:0] ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R10 = nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R [5:0] ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X10 = nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X [5:0] ;
  assign nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_S = FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_S ;
  assign nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_a = FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1[9:0];
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R6 [14:10] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X6 [14:10] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C6 [14:10] } = 0;
  logic [14:0] FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C7 ;
  logic [14:0] FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R7 ;
  logic [14:0] FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X7 ;
  assign nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_a_T = FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_T [9:0] ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C7 [9:0] = nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_a_C ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R7 [9:0] = nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_a_R ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X7 [9:0] = nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_a_X ;
  assign nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_a_S = FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_S ;
  assign nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s[3:1] = FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2;
  logic [2:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_C4 ;
  logic [2:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_R4 ;
  logic [2:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_X4 ;
  assign nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_T [3:1] = FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_T ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_C4 = nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_C [3:1] ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_R4 = nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_R [3:1] ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_X4 = nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_X [3:1] ;
  assign nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_S = FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_S ;
  assign nl_FpMantDecShiftRight_10U_6U_10U_least_mask_lshift_rg_s = { FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2, nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s[0] };
  assign nl_FpMantDecShiftRight_10U_6U_10U_least_mask_lshift_rg_s_T = {  FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_T , nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_T [0]  };
  logic [13:0] nl_FpMantDecShiftRight_10U_6U_10U_least_mask_lshift_rg_s_S ;
  assign nl_FpMantDecShiftRight_10U_6U_10U_least_mask_lshift_rg_s_S = 0 ;
  logic [2:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_R5 ;
  logic [2:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_X5 ;
  logic [2:0] FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_C5 ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_R5 = nl_FpMantDecShiftRight_10U_6U_10U_least_mask_lshift_rg_s_R [3:1] ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_X5 = nl_FpMantDecShiftRight_10U_6U_10U_least_mask_lshift_rg_s_X [3:1] ;
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_C5 = nl_FpMantDecShiftRight_10U_6U_10U_least_mask_lshift_rg_s_C [3:1] ;
  assign { nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_R2 [3:1] } = 0;
  assign { nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_X2 [3:1] } = 0;
  assign { nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_C2 [3:1] } = 0;
  logic [3:0] nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_R3 ;
  logic [3:0] nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_X3 ;
  logic [3:0] nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_C3 ;
  assign nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_R3 [0:0] = nl_FpMantDecShiftRight_10U_6U_10U_least_mask_lshift_rg_s_R [0:0] ;
  assign nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_X3 [0:0] = nl_FpMantDecShiftRight_10U_6U_10U_least_mask_lshift_rg_s_X [0:0] ;
  assign nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_C3 [0:0] = nl_FpMantDecShiftRight_10U_6U_10U_least_mask_lshift_rg_s_C [0:0] ;
  assign nl_FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva[10:0] = FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_C1 ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_R1 ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_X1 ;
  assign nl_FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_T [10:0] = FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_T ;
  assign FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_C1 = nl_FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_C [10:0] ;
  assign FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_R1 = nl_FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_R [10:0] ;
  assign FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_X1 = nl_FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_X [10:0] ;
  assign nl_FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_S = FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_S ;
  assign nl_FpMantDecShiftRight_10U_6U_10U_stick_mask_sva[10:0] = FpMantDecShiftRight_10U_6U_10U_stick_mask_sva;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_C1 ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_R1 ;
  logic [10:0] FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_X1 ;
  assign nl_FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_T [10:0] = FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_T ;
  assign FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_C1 = nl_FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_C [10:0] ;
  assign FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_R1 = nl_FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_R [10:0] ;
  assign FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_X1 = nl_FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_X [10:0] ;
  assign nl_FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_S = FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_S ;
  assign nl_HLS_fp17_to_fp16_core_chn_o_rsci_inst_chn_o_rsci_d = { chn_o_rsci_d_15, chn_o_rsci_d_14, chn_o_rsci_d_13_10, chn_o_rsci_d_9_0 };
  assign nl_HLS_fp17_to_fp16_core_chn_o_rsci_inst_chn_o_rsci_d_T = {  chn_o_rsci_d_15_T , chn_o_rsci_d_14_T , chn_o_rsci_d_13_10_T , chn_o_rsci_d_9_0_T  };
  logic [13:0] nl_HLS_fp17_to_fp16_core_chn_o_rsci_inst_chn_o_rsci_d_S ;
  assign nl_HLS_fp17_to_fp16_core_chn_o_rsci_inst_chn_o_rsci_d_S = 0 ;
  logic [0:0] chn_o_rsci_d_15_R2 ;
  logic [0:0] chn_o_rsci_d_15_X2 ;
  logic [0:0] chn_o_rsci_d_15_C2 ;
  assign chn_o_rsci_d_15_R2 = nl_HLS_fp17_to_fp16_core_chn_o_rsci_inst_chn_o_rsci_d_R [15:15] ;
  assign chn_o_rsci_d_15_X2 = nl_HLS_fp17_to_fp16_core_chn_o_rsci_inst_chn_o_rsci_d_X [15:15] ;
  assign chn_o_rsci_d_15_C2 = nl_HLS_fp17_to_fp16_core_chn_o_rsci_inst_chn_o_rsci_d_C [15:15] ;
  logic [0:0] chn_o_rsci_d_14_R2 ;
  logic [0:0] chn_o_rsci_d_14_X2 ;
  logic [0:0] chn_o_rsci_d_14_C2 ;
  assign chn_o_rsci_d_14_R2 = nl_HLS_fp17_to_fp16_core_chn_o_rsci_inst_chn_o_rsci_d_R [14:14] ;
  assign chn_o_rsci_d_14_X2 = nl_HLS_fp17_to_fp16_core_chn_o_rsci_inst_chn_o_rsci_d_X [14:14] ;
  assign chn_o_rsci_d_14_C2 = nl_HLS_fp17_to_fp16_core_chn_o_rsci_inst_chn_o_rsci_d_C [14:14] ;
  logic [3:0] chn_o_rsci_d_13_10_R2 ;
  logic [3:0] chn_o_rsci_d_13_10_X2 ;
  logic [3:0] chn_o_rsci_d_13_10_C2 ;
  assign chn_o_rsci_d_13_10_R2 = nl_HLS_fp17_to_fp16_core_chn_o_rsci_inst_chn_o_rsci_d_R [13:10] ;
  assign chn_o_rsci_d_13_10_X2 = nl_HLS_fp17_to_fp16_core_chn_o_rsci_inst_chn_o_rsci_d_X [13:10] ;
  assign chn_o_rsci_d_13_10_C2 = nl_HLS_fp17_to_fp16_core_chn_o_rsci_inst_chn_o_rsci_d_C [13:10] ;
  logic [9:0] chn_o_rsci_d_9_0_R2 ;
  logic [9:0] chn_o_rsci_d_9_0_X2 ;
  logic [9:0] chn_o_rsci_d_9_0_C2 ;
  assign chn_o_rsci_d_9_0_R2 = nl_HLS_fp17_to_fp16_core_chn_o_rsci_inst_chn_o_rsci_d_R [9:0] ;
  assign chn_o_rsci_d_9_0_X2 = nl_HLS_fp17_to_fp16_core_chn_o_rsci_inst_chn_o_rsci_d_X [9:0] ;
  assign chn_o_rsci_d_9_0_C2 = nl_HLS_fp17_to_fp16_core_chn_o_rsci_inst_chn_o_rsci_d_C [9:0] ;
  assign chn_o_rsci_wen_comp_C = ( chn_o_rsci_wen_comp_C0 );
  assign chn_a_rsci_wen_comp_C = ( chn_a_rsci_wen_comp_C0 );
  assign chn_o_rsci_oswt_C = ( chn_o_rsci_oswt_C0 );
  assign chn_o_rsc_vz_C = ( chn_o_rsc_vz_C0 );
  assign nvdla_core_rstn_C = ( nvdla_core_rstn_C0 ) | ( nvdla_core_rstn_C1 ) | ( nvdla_core_rstn_C2 ) | ( nvdla_core_rstn_C3 );
  assign core_wten_C = ( core_wten_C0 ) | ( core_wten_C1 );
  assign chn_a_rsci_oswt_C = ( chn_a_rsci_oswt_C0 );
  assign chn_a_rsc_z_C = ( chn_a_rsc_z_C0 );
  assign chn_a_rsc_vz_C = ( chn_a_rsc_vz_C0 );
  assign nl_FpMantDecShiftRight_10U_6U_10U_guard_mask_lshift_rg_s_C = ( nl_FpMantDecShiftRight_10U_6U_10U_guard_mask_lshift_rg_s_C0 );
  assign chn_o_rsci_iswt0_C = ( chn_o_rsci_iswt0_C0 ) | ( chn_o_rsci_iswt0_C1 );
  assign chn_a_rsci_iswt0_C = ( chn_a_rsci_iswt0_C0 ) | ( chn_a_rsci_iswt0_C1 );
  assign _072__C = ( _072__C0 );
  assign chn_a_rsci_ld_core_psct_C = ( chn_a_rsci_ld_core_psct_C0 ) | ( chn_a_rsci_ld_core_psct_C1 );
  assign _035__C = ( _035__C0 );
  assign chn_o_rsci_d_9_0_C = ( chn_o_rsci_d_9_0_C0 ) | ( chn_o_rsci_d_9_0_C1 ) | ( chn_o_rsci_d_9_0_C2 );
  assign _026__C = ( _026__C0 );
  assign _037__C = ( _037__C0 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_C = ( FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_C0 );
  assign chn_o_rsci_d_13_10_C = ( chn_o_rsci_d_13_10_C0 ) | ( chn_o_rsci_d_13_10_C1 ) | ( chn_o_rsci_d_13_10_C2 );
  assign _027__C = ( _027__C0 );
  assign chn_o_rsci_d_15_C = ( chn_o_rsci_d_15_C0 ) | ( chn_o_rsci_d_15_C1 ) | ( chn_o_rsci_d_15_C2 );
  assign chn_o_rsci_d_14_C = ( chn_o_rsci_d_14_C0 ) | ( chn_o_rsci_d_14_C1 ) | ( chn_o_rsci_d_14_C2 );
  assign _098__C = ( _098__C0 );
  assign chn_o_and_1_cse_C = ( chn_o_and_1_cse_C0 ) | ( chn_o_and_1_cse_C1 ) | ( chn_o_and_1_cse_C2 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_mux_6_nl_C = ( FpExpoWidthDec_6U_5U_10U_1U_1U_mux_6_nl_C0 );
  assign _075__C = ( _075__C0 );
  assign _040__C = ( _040__C0 );
  assign _076__C = ( _076__C0 );
  assign _041__C = ( _041__C0 );
  assign _077__C = ( _077__C0 );
  assign _078__C = ( _078__C0 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_C = ( FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_C0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_C1 );
  assign Fp17ToFp16_and_cse_C = ( Fp17ToFp16_and_cse_C0 ) | ( Fp17ToFp16_and_cse_C1 ) | ( Fp17ToFp16_and_cse_C2 ) | ( Fp17ToFp16_and_cse_C3 ) | ( Fp17ToFp16_and_cse_C4 );
  assign nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_C = ( nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_C0 );
  assign _042__C = ( _042__C0 );
  assign _043__C = ( _043__C0 );
  assign _024__C = ( _024__C0 );
  assign _047__C = ( _047__C0 );
  assign _025__C = ( _025__C0 );
  assign _049__C = ( _049__C0 );
  assign _050__C = ( _050__C0 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_C = ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_C0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_C1 );
  assign _028__C = ( _028__C0 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_C = ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_C0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_C1 );
  assign _029__C = ( _029__C0 );
  assign or_2_nl_C = ( or_2_nl_C0 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl_C = ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl_C0 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_C = ( FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_C0 );
  assign fangyuan2_C = ( fangyuan2_C0 );
  assign FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_C = ( FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_C0 ) | ( FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_C1 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl_C = ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl_C0 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_FpExpoWidthDec_6U_5U_10U_1U_1U_else_and_2_nl_C = ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_FpExpoWidthDec_6U_5U_10U_1U_1U_else_and_2_nl_C0 );
  assign mux_2_nl_C = ( mux_2_nl_C0 );
  assign nor_7_nl_C = ( nor_7_nl_C0 );
  assign or_3_nl_C = ( or_3_nl_C0 );
  assign mux_1_itm_C = ( mux_1_itm_C0 ) | ( mux_1_itm_C1 );
  assign _000__C = ( _000__C0 ) | ( _000__C1 );
  assign mux_4_nl_C = ( mux_4_nl_C0 );
  assign nor_nl_C = ( nor_nl_C0 );
  assign or_10_nl_C = ( or_10_nl_C0 );
  assign or_tmp_8_C = ( or_tmp_8_C0 ) | ( or_tmp_8_C1 );
  assign and_60_nl_C = ( and_60_nl_C0 );
  assign _015__C = ( _015__C0 );
  assign _021__C = ( _021__C0 );
  assign _016__C = ( _016__C0 );
  assign _020__C = ( _020__C0 );
  assign _018__C = ( _018__C0 );
  assign _019__C = ( _019__C0 );
  assign _017__C = ( _017__C0 );
  assign _023__C = ( _023__C0 );
  assign _022__C = ( _022__C0 );
  assign _003__C = ( _003__C0 );
  assign _004__C = ( _004__C0 );
  assign _013__C = ( _013__C0 );
  assign _014__C = ( _014__C0 );
  assign _012__C = ( _012__C0 );
  assign _005__C = ( _005__C0 );
  assign _008__C = ( _008__C0 );
  assign _007__C = ( _007__C0 );
  assign _010__C = ( _010__C0 );
  assign _011__C = ( _011__C0 );
  assign _006__C = ( _006__C0 );
  assign _009__C = ( _009__C0 );
  assign and_37_rgt_C = ( and_37_rgt_C0 ) | ( and_37_rgt_C1 );
  assign and_35_rgt_C = ( and_35_rgt_C0 ) | ( and_35_rgt_C1 );
  assign _045__C = ( _045__C0 );
  assign or_tmp_19_C = ( or_tmp_19_C0 ) | ( or_tmp_19_C1 );
  assign _097__C = ( _097__C0 );
  assign _039__C = ( _039__C0 );
  assign chn_o_rsci_d_9_0_mx0c1_C = ( chn_o_rsci_d_9_0_mx0c1_C0 ) | ( chn_o_rsci_d_9_0_mx0c1_C1 );
  assign _036__C = ( _036__C0 );
  assign _095__C = ( _095__C0 );
  assign _068__C = ( _068__C0 ) | ( _068__C1 );
  assign _067__C = ( _067__C0 );
  assign _066__C = ( _066__C0 ) | ( _066__C1 );
  assign _093__C = ( _093__C0 );
  assign _055__C = ( _055__C0 );
  assign _092__C = ( _092__C0 );
  assign _054__C = ( _054__C0 );
  assign _053__C = ( _053__C0 );
  assign IsNaN_6U_10U_nor_itm_2_C = ( IsNaN_6U_10U_nor_itm_2_C0 ) | ( IsNaN_6U_10U_nor_itm_2_C1 );
  assign IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_C = ( IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_C0 ) | ( IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_C1 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_C = ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_C0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_C1 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_C2 );
  assign _086__C = ( _086__C0 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_C = ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_C0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_C1 );
  assign _061__C = ( _061__C0 ) | ( _061__C1 );
  assign or_6_nl_C = ( or_6_nl_C0 ) | ( or_6_nl_C1 );
  assign _082__C = ( _082__C0 );
  assign _081__C = ( _081__C0 ) | ( _081__C1 );
  assign _080__C = ( _080__C0 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C = ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C1 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C2 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C3 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C4 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C5 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C6 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C7 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C8 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C9 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C10 );
  assign _052__C = ( _052__C0 );
  assign _056__C = ( _056__C0 );
  assign main_stage_v_1_mx0c1_C = ( main_stage_v_1_mx0c1_C0 ) | ( main_stage_v_1_mx0c1_C1 );
  assign and_dcpl_14_C = ( and_dcpl_14_C0 ) | ( and_dcpl_14_C1 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_C = ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_C0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_C1 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_C2 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_C3 );
  assign _034__C = ( _034__C0 );
  assign _032__C = ( _032__C0 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C = ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C1 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C2 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C3 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C4 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C5 );
  assign and_dcpl_8_C = ( and_dcpl_8_C0 ) | ( and_dcpl_8_C1 ) | ( and_dcpl_8_C2 );
  assign _089__C = ( _089__C0 );
  assign _087__C = ( _087__C0 );
  assign or_tmp_7_C = ( or_tmp_7_C0 );
  assign _085__C = ( _085__C0 );
  assign and_tmp_1_C = ( and_tmp_1_C0 ) | ( and_tmp_1_C1 ) | ( and_tmp_1_C2 );
  assign _002__C = ( _002__C0 );
  assign _001__C = ( _001__C0 );
  assign _084__C = ( _084__C0 );
  assign _083__C = ( _083__C0 );
  assign FpMantDecShiftRight_10U_6U_10U_least_bits_9_0_sva_C = ( FpMantDecShiftRight_10U_6U_10U_least_bits_9_0_sva_C0 );
  assign FpMantDecShiftRight_10U_6U_10U_stick_bits_9_0_sva_C = ( FpMantDecShiftRight_10U_6U_10U_stick_bits_9_0_sva_C0 );
  assign FpMantDecShiftRight_10U_6U_10U_guard_bits_9_0_sva_C = ( FpMantDecShiftRight_10U_6U_10U_guard_bits_9_0_sva_C0 );
  assign mux_6_nl_C = ( mux_6_nl_C0 );
  assign _048__C = ( _048__C0 );
  assign _102__C = ( _102__C0 );
  assign _046__C = ( _046__C0 );
  assign _101__C = ( _101__C0 );
  assign _079__C = ( _079__C0 );
  assign _044__C = ( _044__C0 ) | ( _044__C1 );
  assign mux_5_nl_C = ( mux_5_nl_C0 );
  assign mux_3_nl_C = ( mux_3_nl_C0 );
  assign _064__C = ( _064__C0 );
  assign _100__C = ( _100__C0 );
  assign _099__C = ( _099__C0 );
  assign _074__C = ( _074__C0 );
  assign _038__C = ( _038__C0 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_C = ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_C0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_C1 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_C2 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_C3 );
  assign _073__C = ( _073__C0 );
  assign _096__C = ( _096__C0 );
  assign nor_5_cse_C = ( nor_5_cse_C0 ) | ( nor_5_cse_C1 );
  assign chn_a_rsci_ld_core_psct_mx0c0_C = ( chn_a_rsci_ld_core_psct_mx0c0_C0 ) | ( chn_a_rsci_ld_core_psct_mx0c0_C1 );
  assign _071__C = ( _071__C0 );
  assign _033__C = ( _033__C0 );
  assign _057__C = ( _057__C0 ) | ( _057__C1 );
  assign _088__C = ( _088__C0 ) | ( _088__C1 ) | ( _088__C2 );
  assign and_dcpl_11_C = ( and_dcpl_11_C0 ) | ( and_dcpl_11_C1 ) | ( and_dcpl_11_C2 ) | ( and_dcpl_11_C3 );
  assign fsm_output_C = ( fsm_output_C0 ) | ( fsm_output_C1 ) | ( fsm_output_C2 ) | ( fsm_output_C3 );
  assign and_6_mdf_C = ( and_6_mdf_C0 ) | ( and_6_mdf_C1 ) | ( and_6_mdf_C2 ) | ( and_6_mdf_C3 );
  assign _062__C = ( _062__C0 ) | ( _062__C1 ) | ( _062__C2 ) | ( _062__C3 );
  assign and_dcpl_6_C = ( and_dcpl_6_C0 ) | ( and_dcpl_6_C1 );
  assign _070__C = ( _070__C0 );
  assign chn_o_rsci_bawt_C = ( chn_o_rsci_bawt_C0 ) | ( chn_o_rsci_bawt_C1 ) | ( chn_o_rsci_bawt_C2 ) | ( chn_o_rsci_bawt_C3 );
  assign reg_chn_o_rsci_ld_core_psct_cse_C = ( reg_chn_o_rsci_ld_core_psct_cse_C0 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C1 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C2 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C3 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C4 );
  assign _069__C = ( _069__C0 );
  assign _031__C = ( _031__C0 ) | ( _031__C1 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C = ( FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C1 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C2 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C3 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C4 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C5 );
  assign chn_a_rsci_bawt_C = ( chn_a_rsci_bawt_C0 ) | ( chn_a_rsci_bawt_C1 ) | ( chn_a_rsci_bawt_C2 ) | ( chn_a_rsci_bawt_C3 );
  assign FpMantDecShiftRight_10U_6U_10U_least_mask_sva_C = ( FpMantDecShiftRight_10U_6U_10U_least_mask_sva_C0 );
  assign FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_C = ( FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_C0 ) | ( FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_C1 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C = ( FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C1 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C2 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C3 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C4 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C5 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C6 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C7 );
  assign _094__C = ( _094__C0 );
  assign _091__C = ( _091__C0 );
  assign _059__C = ( _059__C0 ) | ( _059__C1 ) | ( _059__C2 );
  assign _090__C = ( _090__C0 );
  assign or_cse_C = ( or_cse_C0 ) | ( or_cse_C1 ) | ( or_cse_C2 ) | ( or_cse_C3 ) | ( or_cse_C4 ) | ( or_cse_C5 ) | ( or_cse_C6 ) | ( or_cse_C7 ) | ( or_cse_C8 );
  assign mux_tmp_C = ( mux_tmp_C0 ) | ( mux_tmp_C1 ) | ( mux_tmp_C2 );
  assign _030__C = ( _030__C0 ) | ( _030__C1 ) | ( _030__C2 ) | ( _030__C3 );
  assign _063__C = ( _063__C0 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_C = ( FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_C0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_C1 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_C2 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_C3 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_C4 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_C5 );
  assign main_stage_v_1_C = ( main_stage_v_1_C0 ) | ( main_stage_v_1_C1 ) | ( main_stage_v_1_C2 ) | ( main_stage_v_1_C3 ) | ( main_stage_v_1_C4 ) | ( main_stage_v_1_C5 );
  assign _060__C = ( _060__C0 );
  assign _058__C = ( _058__C0 );
  assign core_wen_C = ( core_wen_C0 ) | ( core_wen_C1 ) | ( core_wen_C2 ) | ( core_wen_C3 ) | ( core_wen_C4 ) | ( core_wen_C5 ) | ( core_wen_C6 ) | ( core_wen_C7 ) | ( core_wen_C8 ) | ( core_wen_C9 ) | ( core_wen_C10 ) | ( core_wen_C11 ) | ( core_wen_C12 ) | ( core_wen_C13 ) | ( core_wen_C14 );
  assign FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_C = ( FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_C0 ) | ( FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_C1 );
  assign FpMantDecShiftRight_10U_6U_10U_carry_and_nl_C = ( FpMantDecShiftRight_10U_6U_10U_carry_and_nl_C0 );
  assign FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_itm_C = ( FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_itm_C0 );
  assign chn_a_rsci_d_mxwt_C = ( chn_a_rsci_d_mxwt_C0 ) | ( chn_a_rsci_d_mxwt_C1 ) | ( chn_a_rsci_d_mxwt_C2 ) | ( chn_a_rsci_d_mxwt_C3 ) | ( chn_a_rsci_d_mxwt_C4 ) | ( chn_a_rsci_d_mxwt_C5 );
  assign fangyuan1_C = ( fangyuan1_C0 );
  assign _065__C = ( _065__C0 );
  assign fangyuan0_C = ( fangyuan0_C0 );
  assign nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_C = ( nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_C0 ) | ( nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_C1 ) | ( nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_C2 ) | ( nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_C3 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_C = ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_C0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_C1 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_C2 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_C3 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_C4 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_C5 );
  assign _051__C = ( _051__C0 );
  assign chn_o_rsci_oswt_unreg_C = ( chn_o_rsci_oswt_unreg_C0 );
  assign chn_o_rsc_z_C = ( chn_o_rsc_z_C0 );
  assign chn_o_rsc_lz_C = ( chn_o_rsc_lz_C0 );
  assign chn_a_rsci_oswt_unreg_C = ( chn_a_rsci_oswt_unreg_C0 );
  assign chn_a_rsc_lz_C = ( chn_a_rsc_lz_C0 );
  assign chn_o_rsci_wen_comp_X = ( chn_o_rsci_wen_comp_X0 );
  assign chn_a_rsci_wen_comp_X = ( chn_a_rsci_wen_comp_X0 );
  assign chn_o_rsci_oswt_X = ( chn_o_rsci_oswt_X0 );
  assign chn_o_rsc_vz_X = ( chn_o_rsc_vz_X0 );
  assign nvdla_core_rstn_X = ( nvdla_core_rstn_X0 ) | ( nvdla_core_rstn_X1 ) | ( nvdla_core_rstn_X2 ) | ( nvdla_core_rstn_X3 );
  assign core_wten_X = ( core_wten_X0 ) | ( core_wten_X1 );
  assign chn_a_rsci_oswt_X = ( chn_a_rsci_oswt_X0 );
  assign chn_a_rsc_z_X = ( chn_a_rsc_z_X0 );
  assign chn_a_rsc_vz_X = ( chn_a_rsc_vz_X0 );
  assign nl_FpMantDecShiftRight_10U_6U_10U_guard_mask_lshift_rg_s_X = ( nl_FpMantDecShiftRight_10U_6U_10U_guard_mask_lshift_rg_s_X0 );
  assign chn_o_rsci_iswt0_X = ( chn_o_rsci_iswt0_X0 ) | ( chn_o_rsci_iswt0_X1 );
  assign chn_a_rsci_iswt0_X = ( chn_a_rsci_iswt0_X0 ) | ( chn_a_rsci_iswt0_X1 );
  assign _072__X = ( _072__X0 );
  assign chn_a_rsci_ld_core_psct_X = ( chn_a_rsci_ld_core_psct_X0 ) | ( chn_a_rsci_ld_core_psct_X1 );
  assign _035__X = ( _035__X0 );
  assign chn_o_rsci_d_9_0_X = ( chn_o_rsci_d_9_0_X0 ) | ( chn_o_rsci_d_9_0_X1 ) | ( chn_o_rsci_d_9_0_X2 );
  assign _026__X = ( _026__X0 );
  assign _037__X = ( _037__X0 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_X = ( FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_X0 );
  assign chn_o_rsci_d_13_10_X = ( chn_o_rsci_d_13_10_X0 ) | ( chn_o_rsci_d_13_10_X1 ) | ( chn_o_rsci_d_13_10_X2 );
  assign _027__X = ( _027__X0 );
  assign chn_o_rsci_d_15_X = ( chn_o_rsci_d_15_X0 ) | ( chn_o_rsci_d_15_X1 ) | ( chn_o_rsci_d_15_X2 );
  assign chn_o_rsci_d_14_X = ( chn_o_rsci_d_14_X0 ) | ( chn_o_rsci_d_14_X1 ) | ( chn_o_rsci_d_14_X2 );
  assign _098__X = ( _098__X0 );
  assign chn_o_and_1_cse_X = ( chn_o_and_1_cse_X0 ) | ( chn_o_and_1_cse_X1 ) | ( chn_o_and_1_cse_X2 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_mux_6_nl_X = ( FpExpoWidthDec_6U_5U_10U_1U_1U_mux_6_nl_X0 );
  assign _075__X = ( _075__X0 );
  assign _040__X = ( _040__X0 );
  assign _076__X = ( _076__X0 );
  assign _041__X = ( _041__X0 );
  assign _077__X = ( _077__X0 );
  assign _078__X = ( _078__X0 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_X = ( FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_X0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_X1 );
  assign Fp17ToFp16_and_cse_X = ( Fp17ToFp16_and_cse_X0 ) | ( Fp17ToFp16_and_cse_X1 ) | ( Fp17ToFp16_and_cse_X2 ) | ( Fp17ToFp16_and_cse_X3 ) | ( Fp17ToFp16_and_cse_X4 );
  assign nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_X = ( nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_X0 );
  assign _042__X = ( _042__X0 );
  assign _043__X = ( _043__X0 );
  assign _024__X = ( _024__X0 );
  assign _047__X = ( _047__X0 );
  assign _025__X = ( _025__X0 );
  assign _049__X = ( _049__X0 );
  assign _050__X = ( _050__X0 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_X = ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_X0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_X1 );
  assign _028__X = ( _028__X0 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_X = ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_X0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_X1 );
  assign _029__X = ( _029__X0 );
  assign or_2_nl_X = ( or_2_nl_X0 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl_X = ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl_X0 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_X = ( FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_X0 );
  assign fangyuan2_X = ( fangyuan2_X0 );
  assign FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_X = ( FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_X0 ) | ( FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_X1 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl_X = ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl_X0 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_FpExpoWidthDec_6U_5U_10U_1U_1U_else_and_2_nl_X = ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_FpExpoWidthDec_6U_5U_10U_1U_1U_else_and_2_nl_X0 );
  assign mux_2_nl_X = ( mux_2_nl_X0 );
  assign nor_7_nl_X = ( nor_7_nl_X0 );
  assign or_3_nl_X = ( or_3_nl_X0 );
  assign mux_1_itm_X = ( mux_1_itm_X0 ) | ( mux_1_itm_X1 );
  assign _000__X = ( _000__X0 ) | ( _000__X1 );
  assign mux_4_nl_X = ( mux_4_nl_X0 );
  assign nor_nl_X = ( nor_nl_X0 );
  assign or_10_nl_X = ( or_10_nl_X0 );
  assign or_tmp_8_X = ( or_tmp_8_X0 ) | ( or_tmp_8_X1 );
  assign and_60_nl_X = ( and_60_nl_X0 );
  assign _015__X = ( _015__X0 );
  assign _021__X = ( _021__X0 );
  assign _016__X = ( _016__X0 );
  assign _020__X = ( _020__X0 );
  assign _018__X = ( _018__X0 );
  assign _019__X = ( _019__X0 );
  assign _017__X = ( _017__X0 );
  assign _023__X = ( _023__X0 );
  assign _022__X = ( _022__X0 );
  assign _003__X = ( _003__X0 );
  assign _004__X = ( _004__X0 );
  assign _013__X = ( _013__X0 );
  assign _014__X = ( _014__X0 );
  assign _012__X = ( _012__X0 );
  assign _005__X = ( _005__X0 );
  assign _008__X = ( _008__X0 );
  assign _007__X = ( _007__X0 );
  assign _010__X = ( _010__X0 );
  assign _011__X = ( _011__X0 );
  assign _006__X = ( _006__X0 );
  assign _009__X = ( _009__X0 );
  assign and_37_rgt_X = ( and_37_rgt_X0 ) | ( and_37_rgt_X1 );
  assign and_35_rgt_X = ( and_35_rgt_X0 ) | ( and_35_rgt_X1 );
  assign _045__X = ( _045__X0 );
  assign or_tmp_19_X = ( or_tmp_19_X0 ) | ( or_tmp_19_X1 );
  assign _097__X = ( _097__X0 );
  assign _039__X = ( _039__X0 );
  assign chn_o_rsci_d_9_0_mx0c1_X = ( chn_o_rsci_d_9_0_mx0c1_X0 ) | ( chn_o_rsci_d_9_0_mx0c1_X1 );
  assign _036__X = ( _036__X0 );
  assign _095__X = ( _095__X0 );
  assign _068__X = ( _068__X0 ) | ( _068__X1 );
  assign _067__X = ( _067__X0 );
  assign _066__X = ( _066__X0 ) | ( _066__X1 );
  assign _093__X = ( _093__X0 );
  assign _055__X = ( _055__X0 );
  assign _092__X = ( _092__X0 );
  assign _054__X = ( _054__X0 );
  assign _053__X = ( _053__X0 );
  assign IsNaN_6U_10U_nor_itm_2_X = ( IsNaN_6U_10U_nor_itm_2_X0 ) | ( IsNaN_6U_10U_nor_itm_2_X1 );
  assign IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_X = ( IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_X0 ) | ( IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_X1 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_X = ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_X0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_X1 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_X2 );
  assign _086__X = ( _086__X0 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_X = ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_X0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_X1 );
  assign _061__X = ( _061__X0 ) | ( _061__X1 );
  assign or_6_nl_X = ( or_6_nl_X0 ) | ( or_6_nl_X1 );
  assign _082__X = ( _082__X0 );
  assign _081__X = ( _081__X0 ) | ( _081__X1 );
  assign _080__X = ( _080__X0 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X = ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X1 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X2 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X3 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X4 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X5 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X6 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X7 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X8 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X9 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X10 );
  assign _052__X = ( _052__X0 );
  assign _056__X = ( _056__X0 );
  assign main_stage_v_1_mx0c1_X = ( main_stage_v_1_mx0c1_X0 ) | ( main_stage_v_1_mx0c1_X1 );
  assign and_dcpl_14_X = ( and_dcpl_14_X0 ) | ( and_dcpl_14_X1 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_X = ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_X0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_X1 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_X2 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_X3 );
  assign _034__X = ( _034__X0 );
  assign _032__X = ( _032__X0 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X = ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X1 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X2 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X3 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X4 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X5 );
  assign and_dcpl_8_X = ( and_dcpl_8_X0 ) | ( and_dcpl_8_X1 ) | ( and_dcpl_8_X2 );
  assign _089__X = ( _089__X0 );
  assign _087__X = ( _087__X0 );
  assign or_tmp_7_X = ( or_tmp_7_X0 );
  assign _085__X = ( _085__X0 );
  assign and_tmp_1_X = ( and_tmp_1_X0 ) | ( and_tmp_1_X1 ) | ( and_tmp_1_X2 );
  assign _002__X = ( _002__X0 );
  assign _001__X = ( _001__X0 );
  assign _084__X = ( _084__X0 );
  assign _083__X = ( _083__X0 );
  assign FpMantDecShiftRight_10U_6U_10U_least_bits_9_0_sva_X = ( FpMantDecShiftRight_10U_6U_10U_least_bits_9_0_sva_X0 );
  assign FpMantDecShiftRight_10U_6U_10U_stick_bits_9_0_sva_X = ( FpMantDecShiftRight_10U_6U_10U_stick_bits_9_0_sva_X0 );
  assign FpMantDecShiftRight_10U_6U_10U_guard_bits_9_0_sva_X = ( FpMantDecShiftRight_10U_6U_10U_guard_bits_9_0_sva_X0 );
  assign mux_6_nl_X = ( mux_6_nl_X0 );
  assign _048__X = ( _048__X0 );
  assign _102__X = ( _102__X0 );
  assign _046__X = ( _046__X0 );
  assign _101__X = ( _101__X0 );
  assign _079__X = ( _079__X0 );
  assign _044__X = ( _044__X0 ) | ( _044__X1 );
  assign mux_5_nl_X = ( mux_5_nl_X0 );
  assign mux_3_nl_X = ( mux_3_nl_X0 );
  assign _064__X = ( _064__X0 );
  assign _100__X = ( _100__X0 );
  assign _099__X = ( _099__X0 );
  assign _074__X = ( _074__X0 );
  assign _038__X = ( _038__X0 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_X = ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_X0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_X1 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_X2 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_X3 );
  assign _073__X = ( _073__X0 );
  assign _096__X = ( _096__X0 );
  assign nor_5_cse_X = ( nor_5_cse_X0 ) | ( nor_5_cse_X1 );
  assign chn_a_rsci_ld_core_psct_mx0c0_X = ( chn_a_rsci_ld_core_psct_mx0c0_X0 ) | ( chn_a_rsci_ld_core_psct_mx0c0_X1 );
  assign _071__X = ( _071__X0 );
  assign _033__X = ( _033__X0 );
  assign _057__X = ( _057__X0 ) | ( _057__X1 );
  assign _088__X = ( _088__X0 ) | ( _088__X1 ) | ( _088__X2 );
  assign and_dcpl_11_X = ( and_dcpl_11_X0 ) | ( and_dcpl_11_X1 ) | ( and_dcpl_11_X2 ) | ( and_dcpl_11_X3 );
  assign fsm_output_X = ( fsm_output_X0 ) | ( fsm_output_X1 ) | ( fsm_output_X2 ) | ( fsm_output_X3 );
  assign and_6_mdf_X = ( and_6_mdf_X0 ) | ( and_6_mdf_X1 ) | ( and_6_mdf_X2 ) | ( and_6_mdf_X3 );
  assign _062__X = ( _062__X0 ) | ( _062__X1 ) | ( _062__X2 ) | ( _062__X3 );
  assign and_dcpl_6_X = ( and_dcpl_6_X0 ) | ( and_dcpl_6_X1 );
  assign _070__X = ( _070__X0 );
  assign chn_o_rsci_bawt_X = ( chn_o_rsci_bawt_X0 ) | ( chn_o_rsci_bawt_X1 ) | ( chn_o_rsci_bawt_X2 ) | ( chn_o_rsci_bawt_X3 );
  assign reg_chn_o_rsci_ld_core_psct_cse_X = ( reg_chn_o_rsci_ld_core_psct_cse_X0 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X1 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X2 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X3 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X4 );
  assign _069__X = ( _069__X0 );
  assign _031__X = ( _031__X0 ) | ( _031__X1 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X = ( FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X1 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X2 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X3 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X4 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X5 );
  assign chn_a_rsci_bawt_X = ( chn_a_rsci_bawt_X0 ) | ( chn_a_rsci_bawt_X1 ) | ( chn_a_rsci_bawt_X2 ) | ( chn_a_rsci_bawt_X3 );
  assign FpMantDecShiftRight_10U_6U_10U_least_mask_sva_X = ( FpMantDecShiftRight_10U_6U_10U_least_mask_sva_X0 );
  assign FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_X = ( FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_X0 ) | ( FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_X1 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X = ( FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X1 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X2 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X3 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X4 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X5 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X6 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X7 );
  assign _094__X = ( _094__X0 );
  assign _091__X = ( _091__X0 );
  assign _059__X = ( _059__X0 ) | ( _059__X1 ) | ( _059__X2 );
  assign _090__X = ( _090__X0 );
  assign or_cse_X = ( or_cse_X0 ) | ( or_cse_X1 ) | ( or_cse_X2 ) | ( or_cse_X3 ) | ( or_cse_X4 ) | ( or_cse_X5 ) | ( or_cse_X6 ) | ( or_cse_X7 ) | ( or_cse_X8 );
  assign mux_tmp_X = ( mux_tmp_X0 ) | ( mux_tmp_X1 ) | ( mux_tmp_X2 );
  assign _030__X = ( _030__X0 ) | ( _030__X1 ) | ( _030__X2 ) | ( _030__X3 );
  assign _063__X = ( _063__X0 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_X = ( FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_X0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_X1 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_X2 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_X3 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_X4 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_X5 );
  assign main_stage_v_1_X = ( main_stage_v_1_X0 ) | ( main_stage_v_1_X1 ) | ( main_stage_v_1_X2 ) | ( main_stage_v_1_X3 ) | ( main_stage_v_1_X4 ) | ( main_stage_v_1_X5 );
  assign _060__X = ( _060__X0 );
  assign _058__X = ( _058__X0 );
  assign core_wen_X = ( core_wen_X0 ) | ( core_wen_X1 ) | ( core_wen_X2 ) | ( core_wen_X3 ) | ( core_wen_X4 ) | ( core_wen_X5 ) | ( core_wen_X6 ) | ( core_wen_X7 ) | ( core_wen_X8 ) | ( core_wen_X9 ) | ( core_wen_X10 ) | ( core_wen_X11 ) | ( core_wen_X12 ) | ( core_wen_X13 ) | ( core_wen_X14 );
  assign FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_X = ( FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_X0 ) | ( FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_X1 );
  assign FpMantDecShiftRight_10U_6U_10U_carry_and_nl_X = ( FpMantDecShiftRight_10U_6U_10U_carry_and_nl_X0 );
  assign FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_itm_X = ( FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_itm_X0 );
  assign chn_a_rsci_d_mxwt_X = ( chn_a_rsci_d_mxwt_X0 ) | ( chn_a_rsci_d_mxwt_X1 ) | ( chn_a_rsci_d_mxwt_X2 ) | ( chn_a_rsci_d_mxwt_X3 ) | ( chn_a_rsci_d_mxwt_X4 ) | ( chn_a_rsci_d_mxwt_X5 );
  assign fangyuan1_X = ( fangyuan1_X0 );
  assign _065__X = ( _065__X0 );
  assign fangyuan0_X = ( fangyuan0_X0 );
  assign nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_X = ( nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_X0 ) | ( nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_X1 ) | ( nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_X2 ) | ( nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_X3 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_X = ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_X0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_X1 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_X2 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_X3 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_X4 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_X5 );
  assign _051__X = ( _051__X0 );
  assign chn_o_rsci_oswt_unreg_X = ( chn_o_rsci_oswt_unreg_X0 );
  assign chn_o_rsc_z_X = ( chn_o_rsc_z_X0 );
  assign chn_o_rsc_lz_X = ( chn_o_rsc_lz_X0 );
  assign chn_a_rsci_oswt_unreg_X = ( chn_a_rsci_oswt_unreg_X0 );
  assign chn_a_rsc_lz_X = ( chn_a_rsc_lz_X0 );
  assign chn_o_rsci_wen_comp_R = ( chn_o_rsci_wen_comp_X0 & chn_o_rsci_wen_comp_R0 );
  assign chn_a_rsci_wen_comp_R = ( chn_a_rsci_wen_comp_X0 & chn_a_rsci_wen_comp_R0 );
  assign chn_o_rsci_oswt_R = ( chn_o_rsci_oswt_X0 & chn_o_rsci_oswt_R0 );
  assign chn_o_rsc_vz_R = ( chn_o_rsc_vz_X0 & chn_o_rsc_vz_R0 );
  assign nvdla_core_rstn_R = ( nvdla_core_rstn_X0 & nvdla_core_rstn_R0 ) | ( nvdla_core_rstn_X1 & nvdla_core_rstn_R1 ) | ( nvdla_core_rstn_X2 & nvdla_core_rstn_R2 ) | ( nvdla_core_rstn_X3 & nvdla_core_rstn_R3 );
  assign core_wten_R = ( core_wten_X0 & core_wten_R0 ) | ( core_wten_X1 & core_wten_R1 );
  assign chn_a_rsci_oswt_R = ( chn_a_rsci_oswt_X0 & chn_a_rsci_oswt_R0 );
  assign chn_a_rsc_z_R = ( chn_a_rsc_z_X0 & chn_a_rsc_z_R0 );
  assign chn_a_rsc_vz_R = ( chn_a_rsc_vz_X0 & chn_a_rsc_vz_R0 );
  assign nl_FpMantDecShiftRight_10U_6U_10U_guard_mask_lshift_rg_s_R = ( nl_FpMantDecShiftRight_10U_6U_10U_guard_mask_lshift_rg_s_X0 & nl_FpMantDecShiftRight_10U_6U_10U_guard_mask_lshift_rg_s_R0 );
  assign chn_o_rsci_iswt0_R = ( chn_o_rsci_iswt0_X0 & chn_o_rsci_iswt0_R0 ) | ( chn_o_rsci_iswt0_X1 & chn_o_rsci_iswt0_R1 );
  assign chn_a_rsci_iswt0_R = ( chn_a_rsci_iswt0_X0 & chn_a_rsci_iswt0_R0 ) | ( chn_a_rsci_iswt0_X1 & chn_a_rsci_iswt0_R1 );
  assign _072__R = ( _072__X0 & _072__R0 );
  assign chn_a_rsci_ld_core_psct_R = ( chn_a_rsci_ld_core_psct_X0 & chn_a_rsci_ld_core_psct_R0 ) | ( chn_a_rsci_ld_core_psct_X1 & chn_a_rsci_ld_core_psct_R1 );
  assign _035__R = ( _035__X0 & _035__R0 );
  assign chn_o_rsci_d_9_0_R = ( chn_o_rsci_d_9_0_X0 & chn_o_rsci_d_9_0_R0 ) | ( chn_o_rsci_d_9_0_X1 & chn_o_rsci_d_9_0_R1 ) | ( chn_o_rsci_d_9_0_X2 & chn_o_rsci_d_9_0_R2 );
  assign _026__R = ( _026__X0 & _026__R0 );
  assign _037__R = ( _037__X0 & _037__R0 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_R = ( FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_X0 & FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_R0 );
  assign chn_o_rsci_d_13_10_R = ( chn_o_rsci_d_13_10_X0 & chn_o_rsci_d_13_10_R0 ) | ( chn_o_rsci_d_13_10_X1 & chn_o_rsci_d_13_10_R1 ) | ( chn_o_rsci_d_13_10_X2 & chn_o_rsci_d_13_10_R2 );
  assign _027__R = ( _027__X0 & _027__R0 );
  assign chn_o_rsci_d_15_R = ( chn_o_rsci_d_15_X0 & chn_o_rsci_d_15_R0 ) | ( chn_o_rsci_d_15_X1 & chn_o_rsci_d_15_R1 ) | ( chn_o_rsci_d_15_X2 & chn_o_rsci_d_15_R2 );
  assign chn_o_rsci_d_14_R = ( chn_o_rsci_d_14_X0 & chn_o_rsci_d_14_R0 ) | ( chn_o_rsci_d_14_X1 & chn_o_rsci_d_14_R1 ) | ( chn_o_rsci_d_14_X2 & chn_o_rsci_d_14_R2 );
  assign _098__R = ( _098__X0 & _098__R0 );
  assign chn_o_and_1_cse_R = ( chn_o_and_1_cse_X0 & chn_o_and_1_cse_R0 ) | ( chn_o_and_1_cse_X1 & chn_o_and_1_cse_R1 ) | ( chn_o_and_1_cse_X2 & chn_o_and_1_cse_R2 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_mux_6_nl_R = ( FpExpoWidthDec_6U_5U_10U_1U_1U_mux_6_nl_X0 & FpExpoWidthDec_6U_5U_10U_1U_1U_mux_6_nl_R0 );
  assign _075__R = ( _075__X0 & _075__R0 );
  assign _040__R = ( _040__X0 & _040__R0 );
  assign _076__R = ( _076__X0 & _076__R0 );
  assign _041__R = ( _041__X0 & _041__R0 );
  assign _077__R = ( _077__X0 & _077__R0 );
  assign _078__R = ( _078__X0 & _078__R0 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_R = ( FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_X0 & FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_R0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_X1 & FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_R1 );
  assign Fp17ToFp16_and_cse_R = ( Fp17ToFp16_and_cse_X0 & Fp17ToFp16_and_cse_R0 ) | ( Fp17ToFp16_and_cse_X1 & Fp17ToFp16_and_cse_R1 ) | ( Fp17ToFp16_and_cse_X2 & Fp17ToFp16_and_cse_R2 ) | ( Fp17ToFp16_and_cse_X3 & Fp17ToFp16_and_cse_R3 ) | ( Fp17ToFp16_and_cse_X4 & Fp17ToFp16_and_cse_R4 );
  assign nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_R = ( nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_X0 & nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_R0 );
  assign _042__R = ( _042__X0 & _042__R0 );
  assign _043__R = ( _043__X0 & _043__R0 );
  assign _024__R = ( _024__X0 & _024__R0 );
  assign _047__R = ( _047__X0 & _047__R0 );
  assign _025__R = ( _025__X0 & _025__R0 );
  assign _049__R = ( _049__X0 & _049__R0 );
  assign _050__R = ( _050__X0 & _050__R0 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_R = ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_X0 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_R0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_X1 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_R1 );
  assign _028__R = ( _028__X0 & _028__R0 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_R = ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_X0 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_R0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_X1 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_R1 );
  assign _029__R = ( _029__X0 & _029__R0 );
  assign or_2_nl_R = ( or_2_nl_X0 & or_2_nl_R0 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl_R = ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl_X0 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_nl_R0 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_R = ( FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_X0 & FpExpoWidthDec_6U_5U_10U_1U_1U_nand_nl_R0 );
  assign fangyuan2_R = ( fangyuan2_X0 & fangyuan2_R0 );
  assign FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_R = ( FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_X0 & FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_R0 ) | ( FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_X1 & FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_R1 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl_R = ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl_X0 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_mux_6_nl_R0 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_FpExpoWidthDec_6U_5U_10U_1U_1U_else_and_2_nl_R = ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_FpExpoWidthDec_6U_5U_10U_1U_1U_else_and_2_nl_X0 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_FpExpoWidthDec_6U_5U_10U_1U_1U_else_and_2_nl_R0 );
  assign mux_2_nl_R = ( mux_2_nl_X0 & mux_2_nl_R0 );
  assign nor_7_nl_R = ( nor_7_nl_X0 & nor_7_nl_R0 );
  assign or_3_nl_R = ( or_3_nl_X0 & or_3_nl_R0 );
  assign mux_1_itm_R = ( mux_1_itm_X0 & mux_1_itm_R0 ) | ( mux_1_itm_X1 & mux_1_itm_R1 );
  assign _000__R = ( _000__X0 & _000__R0 ) | ( _000__X1 & _000__R1 );
  assign mux_4_nl_R = ( mux_4_nl_X0 & mux_4_nl_R0 );
  assign nor_nl_R = ( nor_nl_X0 & nor_nl_R0 );
  assign or_10_nl_R = ( or_10_nl_X0 & or_10_nl_R0 );
  assign or_tmp_8_R = ( or_tmp_8_X0 & or_tmp_8_R0 ) | ( or_tmp_8_X1 & or_tmp_8_R1 );
  assign and_60_nl_R = ( and_60_nl_X0 & and_60_nl_R0 );
  assign _015__R = ( _015__X0 & _015__R0 );
  assign _021__R = ( _021__X0 & _021__R0 );
  assign _016__R = ( _016__X0 & _016__R0 );
  assign _020__R = ( _020__X0 & _020__R0 );
  assign _018__R = ( _018__X0 & _018__R0 );
  assign _019__R = ( _019__X0 & _019__R0 );
  assign _017__R = ( _017__X0 & _017__R0 );
  assign _023__R = ( _023__X0 & _023__R0 );
  assign _022__R = ( _022__X0 & _022__R0 );
  assign _003__R = ( _003__X0 & _003__R0 );
  assign _004__R = ( _004__X0 & _004__R0 );
  assign _013__R = ( _013__X0 & _013__R0 );
  assign _014__R = ( _014__X0 & _014__R0 );
  assign _012__R = ( _012__X0 & _012__R0 );
  assign _005__R = ( _005__X0 & _005__R0 );
  assign _008__R = ( _008__X0 & _008__R0 );
  assign _007__R = ( _007__X0 & _007__R0 );
  assign _010__R = ( _010__X0 & _010__R0 );
  assign _011__R = ( _011__X0 & _011__R0 );
  assign _006__R = ( _006__X0 & _006__R0 );
  assign _009__R = ( _009__X0 & _009__R0 );
  assign and_37_rgt_R = ( and_37_rgt_X0 & and_37_rgt_R0 ) | ( and_37_rgt_X1 & and_37_rgt_R1 );
  assign and_35_rgt_R = ( and_35_rgt_X0 & and_35_rgt_R0 ) | ( and_35_rgt_X1 & and_35_rgt_R1 );
  assign _045__R = ( _045__X0 & _045__R0 );
  assign or_tmp_19_R = ( or_tmp_19_X0 & or_tmp_19_R0 ) | ( or_tmp_19_X1 & or_tmp_19_R1 );
  assign _097__R = ( _097__X0 & _097__R0 );
  assign _039__R = ( _039__X0 & _039__R0 );
  assign chn_o_rsci_d_9_0_mx0c1_R = ( chn_o_rsci_d_9_0_mx0c1_X0 & chn_o_rsci_d_9_0_mx0c1_R0 ) | ( chn_o_rsci_d_9_0_mx0c1_X1 & chn_o_rsci_d_9_0_mx0c1_R1 );
  assign _036__R = ( _036__X0 & _036__R0 );
  assign _095__R = ( _095__X0 & _095__R0 );
  assign _068__R = ( _068__X0 & _068__R0 ) | ( _068__X1 & _068__R1 );
  assign _067__R = ( _067__X0 & _067__R0 );
  assign _066__R = ( _066__X0 & _066__R0 ) | ( _066__X1 & _066__R1 );
  assign _093__R = ( _093__X0 & _093__R0 );
  assign _055__R = ( _055__X0 & _055__R0 );
  assign _092__R = ( _092__X0 & _092__R0 );
  assign _054__R = ( _054__X0 & _054__R0 );
  assign _053__R = ( _053__X0 & _053__R0 );
  assign IsNaN_6U_10U_nor_itm_2_R = ( IsNaN_6U_10U_nor_itm_2_X0 & IsNaN_6U_10U_nor_itm_2_R0 ) | ( IsNaN_6U_10U_nor_itm_2_X1 & IsNaN_6U_10U_nor_itm_2_R1 );
  assign IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_R = ( IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_X0 & IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_R0 ) | ( IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_X1 & IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_R1 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_R = ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_X0 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_R0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_X1 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_R1 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_X2 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_R2 );
  assign _086__R = ( _086__X0 & _086__R0 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_R = ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_X0 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_R0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_X1 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_R1 );
  assign _061__R = ( _061__X0 & _061__R0 ) | ( _061__X1 & _061__R1 );
  assign or_6_nl_R = ( or_6_nl_X0 & or_6_nl_R0 ) | ( or_6_nl_X1 & or_6_nl_R1 );
  assign _082__R = ( _082__X0 & _082__R0 );
  assign _081__R = ( _081__X0 & _081__R0 ) | ( _081__X1 & _081__R1 );
  assign _080__R = ( _080__X0 & _080__R0 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R = ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X0 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X1 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R1 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X2 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R2 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X3 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R3 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X4 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R4 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X5 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R5 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X6 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R6 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X7 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R7 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X8 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R8 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X9 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R9 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X10 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R10 );
  assign _052__R = ( _052__X0 & _052__R0 );
  assign _056__R = ( _056__X0 & _056__R0 );
  assign main_stage_v_1_mx0c1_R = ( main_stage_v_1_mx0c1_X0 & main_stage_v_1_mx0c1_R0 ) | ( main_stage_v_1_mx0c1_X1 & main_stage_v_1_mx0c1_R1 );
  assign and_dcpl_14_R = ( and_dcpl_14_X0 & and_dcpl_14_R0 ) | ( and_dcpl_14_X1 & and_dcpl_14_R1 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_R = ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_X0 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_R0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_X1 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_R1 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_X2 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_R2 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_X3 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_R3 );
  assign _034__R = ( _034__X0 & _034__R0 );
  assign _032__R = ( _032__X0 & _032__R0 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R = ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X0 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X1 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R1 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X2 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R2 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X3 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R3 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X4 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R4 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X5 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R5 );
  assign and_dcpl_8_R = ( and_dcpl_8_X0 & and_dcpl_8_R0 ) | ( and_dcpl_8_X1 & and_dcpl_8_R1 ) | ( and_dcpl_8_X2 & and_dcpl_8_R2 );
  assign _089__R = ( _089__X0 & _089__R0 );
  assign _087__R = ( _087__X0 & _087__R0 );
  assign or_tmp_7_R = ( or_tmp_7_X0 & or_tmp_7_R0 );
  assign _085__R = ( _085__X0 & _085__R0 );
  assign and_tmp_1_R = ( and_tmp_1_X0 & and_tmp_1_R0 ) | ( and_tmp_1_X1 & and_tmp_1_R1 ) | ( and_tmp_1_X2 & and_tmp_1_R2 );
  assign _002__R = ( _002__X0 & _002__R0 );
  assign _001__R = ( _001__X0 & _001__R0 );
  assign _084__R = ( _084__X0 & _084__R0 );
  assign _083__R = ( _083__X0 & _083__R0 );
  assign FpMantDecShiftRight_10U_6U_10U_least_bits_9_0_sva_R = ( FpMantDecShiftRight_10U_6U_10U_least_bits_9_0_sva_X0 & FpMantDecShiftRight_10U_6U_10U_least_bits_9_0_sva_R0 );
  assign FpMantDecShiftRight_10U_6U_10U_stick_bits_9_0_sva_R = ( FpMantDecShiftRight_10U_6U_10U_stick_bits_9_0_sva_X0 & FpMantDecShiftRight_10U_6U_10U_stick_bits_9_0_sva_R0 );
  assign FpMantDecShiftRight_10U_6U_10U_guard_bits_9_0_sva_R = ( FpMantDecShiftRight_10U_6U_10U_guard_bits_9_0_sva_X0 & FpMantDecShiftRight_10U_6U_10U_guard_bits_9_0_sva_R0 );
  assign mux_6_nl_R = ( mux_6_nl_X0 & mux_6_nl_R0 );
  assign _048__R = ( _048__X0 & _048__R0 );
  assign _102__R = ( _102__X0 & _102__R0 );
  assign _046__R = ( _046__X0 & _046__R0 );
  assign _101__R = ( _101__X0 & _101__R0 );
  assign _079__R = ( _079__X0 & _079__R0 );
  assign _044__R = ( _044__X0 & _044__R0 ) | ( _044__X1 & _044__R1 );
  assign mux_5_nl_R = ( mux_5_nl_X0 & mux_5_nl_R0 );
  assign mux_3_nl_R = ( mux_3_nl_X0 & mux_3_nl_R0 );
  assign _064__R = ( _064__X0 & _064__R0 );
  assign _100__R = ( _100__X0 & _100__R0 );
  assign _099__R = ( _099__X0 & _099__R0 );
  assign _074__R = ( _074__X0 & _074__R0 );
  assign _038__R = ( _038__X0 & _038__R0 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_R = ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_X0 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_R0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_X1 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_R1 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_X2 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_R2 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_X3 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_R3 );
  assign _073__R = ( _073__X0 & _073__R0 );
  assign _096__R = ( _096__X0 & _096__R0 );
  assign nor_5_cse_R = ( nor_5_cse_X0 & nor_5_cse_R0 ) | ( nor_5_cse_X1 & nor_5_cse_R1 );
  assign chn_a_rsci_ld_core_psct_mx0c0_R = ( chn_a_rsci_ld_core_psct_mx0c0_X0 & chn_a_rsci_ld_core_psct_mx0c0_R0 ) | ( chn_a_rsci_ld_core_psct_mx0c0_X1 & chn_a_rsci_ld_core_psct_mx0c0_R1 );
  assign _071__R = ( _071__X0 & _071__R0 );
  assign _033__R = ( _033__X0 & _033__R0 );
  assign _057__R = ( _057__X0 & _057__R0 ) | ( _057__X1 & _057__R1 );
  assign _088__R = ( _088__X0 & _088__R0 ) | ( _088__X1 & _088__R1 ) | ( _088__X2 & _088__R2 );
  assign and_dcpl_11_R = ( and_dcpl_11_X0 & and_dcpl_11_R0 ) | ( and_dcpl_11_X1 & and_dcpl_11_R1 ) | ( and_dcpl_11_X2 & and_dcpl_11_R2 ) | ( and_dcpl_11_X3 & and_dcpl_11_R3 );
  assign fsm_output_R = ( fsm_output_X0 & fsm_output_R0 ) | ( fsm_output_X1 & fsm_output_R1 ) | ( fsm_output_X2 & fsm_output_R2 ) | ( fsm_output_X3 & fsm_output_R3 );
  assign and_6_mdf_R = ( and_6_mdf_X0 & and_6_mdf_R0 ) | ( and_6_mdf_X1 & and_6_mdf_R1 ) | ( and_6_mdf_X2 & and_6_mdf_R2 ) | ( and_6_mdf_X3 & and_6_mdf_R3 );
  assign _062__R = ( _062__X0 & _062__R0 ) | ( _062__X1 & _062__R1 ) | ( _062__X2 & _062__R2 ) | ( _062__X3 & _062__R3 );
  assign and_dcpl_6_R = ( and_dcpl_6_X0 & and_dcpl_6_R0 ) | ( and_dcpl_6_X1 & and_dcpl_6_R1 );
  assign _070__R = ( _070__X0 & _070__R0 );
  assign chn_o_rsci_bawt_R = ( chn_o_rsci_bawt_X0 & chn_o_rsci_bawt_R0 ) | ( chn_o_rsci_bawt_X1 & chn_o_rsci_bawt_R1 ) | ( chn_o_rsci_bawt_X2 & chn_o_rsci_bawt_R2 ) | ( chn_o_rsci_bawt_X3 & chn_o_rsci_bawt_R3 );
  assign reg_chn_o_rsci_ld_core_psct_cse_R = ( reg_chn_o_rsci_ld_core_psct_cse_X0 & reg_chn_o_rsci_ld_core_psct_cse_R0 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X1 & reg_chn_o_rsci_ld_core_psct_cse_R1 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X2 & reg_chn_o_rsci_ld_core_psct_cse_R2 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X3 & reg_chn_o_rsci_ld_core_psct_cse_R3 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X4 & reg_chn_o_rsci_ld_core_psct_cse_R4 );
  assign _069__R = ( _069__X0 & _069__R0 );
  assign _031__R = ( _031__X0 & _031__R0 ) | ( _031__X1 & _031__R1 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R = ( FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X0 & FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X1 & FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R1 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X2 & FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R2 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X3 & FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R3 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X4 & FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R4 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X5 & FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R5 );
  assign chn_a_rsci_bawt_R = ( chn_a_rsci_bawt_X0 & chn_a_rsci_bawt_R0 ) | ( chn_a_rsci_bawt_X1 & chn_a_rsci_bawt_R1 ) | ( chn_a_rsci_bawt_X2 & chn_a_rsci_bawt_R2 ) | ( chn_a_rsci_bawt_X3 & chn_a_rsci_bawt_R3 );
  assign FpMantDecShiftRight_10U_6U_10U_least_mask_sva_R = ( FpMantDecShiftRight_10U_6U_10U_least_mask_sva_X0 & FpMantDecShiftRight_10U_6U_10U_least_mask_sva_R0 );
  assign FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_R = ( FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_X0 & FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_R0 ) | ( FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_X1 & FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_R1 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R = ( FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X0 & FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X1 & FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R1 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X2 & FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R2 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X3 & FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R3 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X4 & FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R4 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X5 & FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R5 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X6 & FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R6 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X7 & FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R7 );
  assign _094__R = ( _094__X0 & _094__R0 );
  assign _091__R = ( _091__X0 & _091__R0 );
  assign _059__R = ( _059__X0 & _059__R0 ) | ( _059__X1 & _059__R1 ) | ( _059__X2 & _059__R2 );
  assign _090__R = ( _090__X0 & _090__R0 );
  assign or_cse_R = ( or_cse_X0 & or_cse_R0 ) | ( or_cse_X1 & or_cse_R1 ) | ( or_cse_X2 & or_cse_R2 ) | ( or_cse_X3 & or_cse_R3 ) | ( or_cse_X4 & or_cse_R4 ) | ( or_cse_X5 & or_cse_R5 ) | ( or_cse_X6 & or_cse_R6 ) | ( or_cse_X7 & or_cse_R7 ) | ( or_cse_X8 & or_cse_R8 );
  assign mux_tmp_R = ( mux_tmp_X0 & mux_tmp_R0 ) | ( mux_tmp_X1 & mux_tmp_R1 ) | ( mux_tmp_X2 & mux_tmp_R2 );
  assign _030__R = ( _030__X0 & _030__R0 ) | ( _030__X1 & _030__R1 ) | ( _030__X2 & _030__R2 ) | ( _030__X3 & _030__R3 );
  assign _063__R = ( _063__X0 & _063__R0 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_R = ( FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_X0 & FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_R0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_X1 & FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_R1 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_X2 & FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_R2 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_X3 & FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_R3 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_X4 & FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_R4 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_X5 & FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_R5 );
  assign main_stage_v_1_R = ( main_stage_v_1_X0 & main_stage_v_1_R0 ) | ( main_stage_v_1_X1 & main_stage_v_1_R1 ) | ( main_stage_v_1_X2 & main_stage_v_1_R2 ) | ( main_stage_v_1_X3 & main_stage_v_1_R3 ) | ( main_stage_v_1_X4 & main_stage_v_1_R4 ) | ( main_stage_v_1_X5 & main_stage_v_1_R5 );
  assign _060__R = ( _060__X0 & _060__R0 );
  assign _058__R = ( _058__X0 & _058__R0 );
  assign core_wen_R = ( core_wen_X0 & core_wen_R0 ) | ( core_wen_X1 & core_wen_R1 ) | ( core_wen_X2 & core_wen_R2 ) | ( core_wen_X3 & core_wen_R3 ) | ( core_wen_X4 & core_wen_R4 ) | ( core_wen_X5 & core_wen_R5 ) | ( core_wen_X6 & core_wen_R6 ) | ( core_wen_X7 & core_wen_R7 ) | ( core_wen_X8 & core_wen_R8 ) | ( core_wen_X9 & core_wen_R9 ) | ( core_wen_X10 & core_wen_R10 ) | ( core_wen_X11 & core_wen_R11 ) | ( core_wen_X12 & core_wen_R12 ) | ( core_wen_X13 & core_wen_R13 ) | ( core_wen_X14 & core_wen_R14 );
  assign FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_R = ( FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_X0 & FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_R0 ) | ( FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_X1 & FpMantDecShiftRight_10U_6U_10U_guard_mask_sva_R1 );
  assign FpMantDecShiftRight_10U_6U_10U_carry_and_nl_R = ( FpMantDecShiftRight_10U_6U_10U_carry_and_nl_X0 & FpMantDecShiftRight_10U_6U_10U_carry_and_nl_R0 );
  assign FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_itm_R = ( FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_itm_X0 & FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_itm_R0 );
  assign chn_a_rsci_d_mxwt_R = ( chn_a_rsci_d_mxwt_X0 & chn_a_rsci_d_mxwt_R0 ) | ( chn_a_rsci_d_mxwt_X1 & chn_a_rsci_d_mxwt_R1 ) | ( chn_a_rsci_d_mxwt_X2 & chn_a_rsci_d_mxwt_R2 ) | ( chn_a_rsci_d_mxwt_X3 & chn_a_rsci_d_mxwt_R3 ) | ( chn_a_rsci_d_mxwt_X4 & chn_a_rsci_d_mxwt_R4 ) | ( chn_a_rsci_d_mxwt_X5 & chn_a_rsci_d_mxwt_R5 );
  assign fangyuan1_R = ( fangyuan1_X0 & fangyuan1_R0 );
  assign _065__R = ( _065__X0 & _065__R0 );
  assign fangyuan0_R = ( fangyuan0_X0 & fangyuan0_R0 );
  assign nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_R = ( nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_X0 & nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_R0 ) | ( nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_X1 & nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_R1 ) | ( nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_X2 & nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_R2 ) | ( nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_X3 & nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_R3 );
  assign FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_R = ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_X0 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_R0 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_X1 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_R1 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_X2 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_R2 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_X3 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_R3 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_X4 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_R4 ) | ( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_X5 & FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_R5 );
  assign _051__R = ( _051__X0 & _051__R0 );
  assign chn_o_rsci_oswt_unreg_R = ( chn_o_rsci_oswt_unreg_X0 & chn_o_rsci_oswt_unreg_R0 );
  assign chn_o_rsc_z_R = ( chn_o_rsc_z_X0 & chn_o_rsc_z_R0 );
  assign chn_o_rsc_lz_R = ( chn_o_rsc_lz_X0 & chn_o_rsc_lz_R0 );
  assign chn_a_rsci_oswt_unreg_R = ( chn_a_rsci_oswt_unreg_X0 & chn_a_rsci_oswt_unreg_R0 );
  assign chn_a_rsc_lz_R = ( chn_a_rsc_lz_X0 & chn_a_rsc_lz_R0 );
 // ground taints for floating regs
 // ground taints for unused wires
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_acc_itm_6_1_R , FpExpoWidthDec_6U_5U_10U_1U_1U_acc_itm_6_1_C , FpExpoWidthDec_6U_5U_10U_1U_1U_acc_itm_6_1_X , FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_itm_6_1_R , FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_itm_6_1_C , FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_itm_6_1_X , FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_itm_5_1_R , FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_itm_5_1_C , FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_itm_5_1_X , nl_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_R , nl_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_C , nl_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_nl_X , nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_R , nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_C , nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_nl_X , nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_R , nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_C , nl_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_nl_X , nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_a_R , nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_a_C , nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_a_X , nl_FpMantDecShiftRight_10U_6U_10U_least_mask_lshift_rg_s_R , nl_FpMantDecShiftRight_10U_6U_10U_least_mask_lshift_rg_s_C , nl_FpMantDecShiftRight_10U_6U_10U_least_mask_lshift_rg_s_X , nl_FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_R , nl_FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_C , nl_FpMantDecShiftRight_10U_6U_10U_o_mant_sum_sva_X , nl_FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_R , nl_FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_C , nl_FpMantDecShiftRight_10U_6U_10U_stick_mask_sva_X , nl_HLS_fp17_to_fp16_core_chn_o_rsci_inst_chn_o_rsci_d_R , nl_HLS_fp17_to_fp16_core_chn_o_rsci_inst_chn_o_rsci_d_C , nl_HLS_fp17_to_fp16_core_chn_o_rsci_inst_chn_o_rsci_d_X  } = 0;
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_PREV_VAL1 <= FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs ;
    if( INSTR_IN_ZY ) FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_PREV_VAL2 <= FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_PREV_VAL1 <= FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs ;
    if( INSTR_IN_ZY ) FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_PREV_VAL2 <= FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_PREV_VAL1 <= FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2 ;
    if( INSTR_IN_ZY ) FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_PREV_VAL2 <= FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_PREV_VAL1 <= FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2 ;
    if( INSTR_IN_ZY ) FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_PREV_VAL2 <= FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_PREV_VAL1 <= FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2 ;
    if( INSTR_IN_ZY ) FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_PREV_VAL2 <= FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_PREV_VAL1 <= FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2 ;
    if( INSTR_IN_ZY ) FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_PREV_VAL2 <= FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_PREV_VAL1 <= FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2 ;
    if( INSTR_IN_ZY ) FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_PREV_VAL2 <= FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_PREV_VAL1 <= FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2 ;
    if( INSTR_IN_ZY ) FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_PREV_VAL2 <= FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) IsNaN_6U_10U_nor_itm_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) IsNaN_6U_10U_nor_itm_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) IsNaN_6U_10U_nor_itm_2_PREV_VAL1 <= IsNaN_6U_10U_nor_itm_2 ;
    if( INSTR_IN_ZY ) IsNaN_6U_10U_nor_itm_2_PREV_VAL2 <= IsNaN_6U_10U_nor_itm_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_PREV_VAL1 <= IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2 ;
    if( INSTR_IN_ZY ) IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_PREV_VAL2 <= IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_PREV_VAL1 <= FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1 ;
    if( INSTR_IN_ZY ) FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_PREV_VAL2 <= FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_PREV_VAL1 <= FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1 ;
    if( INSTR_IN_ZY ) FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_PREV_VAL2 <= FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) main_stage_v_1_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) main_stage_v_1_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) main_stage_v_1_PREV_VAL1 <= main_stage_v_1 ;
    if( INSTR_IN_ZY ) main_stage_v_1_PREV_VAL2 <= main_stage_v_1_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL1 <= reg_chn_o_rsci_ld_core_psct_cse ;
    if( INSTR_IN_ZY ) reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL2 <= reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_o_rsci_d_13_10_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_o_rsci_d_13_10_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_13_10_PREV_VAL1 <= chn_o_rsci_d_13_10 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_13_10_PREV_VAL2 <= chn_o_rsci_d_13_10_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_o_rsci_d_15_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_o_rsci_d_15_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_15_PREV_VAL1 <= chn_o_rsci_d_15 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_15_PREV_VAL2 <= chn_o_rsci_d_15_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_o_rsci_d_14_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_o_rsci_d_14_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_14_PREV_VAL1 <= chn_o_rsci_d_14 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_14_PREV_VAL2 <= chn_o_rsci_d_14_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_o_rsci_d_9_0_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_o_rsci_d_9_0_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_9_0_PREV_VAL1 <= chn_o_rsci_d_9_0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_9_0_PREV_VAL2 <= chn_o_rsci_d_9_0_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_a_rsci_ld_core_psct_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_a_rsci_ld_core_psct_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_a_rsci_ld_core_psct_PREV_VAL1 <= chn_a_rsci_ld_core_psct ;
    if( INSTR_IN_ZY ) chn_a_rsci_ld_core_psct_PREV_VAL2 <= chn_a_rsci_ld_core_psct_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_o_rsci_iswt0_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_o_rsci_iswt0_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_iswt0_PREV_VAL1 <= chn_o_rsci_iswt0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_iswt0_PREV_VAL2 <= chn_o_rsci_iswt0_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_a_rsci_iswt0_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_a_rsci_iswt0_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_a_rsci_iswt0_PREV_VAL1 <= chn_a_rsci_iswt0 ;
    if( INSTR_IN_ZY ) chn_a_rsci_iswt0_PREV_VAL2 <= chn_a_rsci_iswt0_PREV_VAL1 ;
  end
 // ground taints for unused wire slices
  assign { fsm_output_R3 [1:1] } = 0;
  assign { fsm_output_X3 [1:1] } = 0;
  assign { fsm_output_C3 [1:1] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_R7 [14:10] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_X7 [14:10] } = 0;
  assign { FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_C7 [14:10] } = 0;
  assign { chn_a_rsci_d_mxwt_R5 [15] } = 0;
  assign { chn_a_rsci_d_mxwt_X5 [15] } = 0;
  assign { chn_a_rsci_d_mxwt_C5 [15] } = 0;
  assign { nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_R3 [3:1] } = 0;
  assign { nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_X3 [3:1] } = 0;
  assign { nl_FpMantDecShiftRight_10U_6U_10U_i_mant_s_rshift_rg_s_C3 [3:1] } = 0;
  assign { _051__R0 [3:3] } = 0;
  assign { _051__X0 [3:3] } = 0;
  assign { _051__C0 [3:3] } = 0;
  assert property( FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_r_flag == 0 || FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_PREV_VAL1 == FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_14_0_1_PREV_VAL2 );
  assert property( FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_r_flag == 0 || FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_PREV_VAL1 == FpExpoWidthDec_6U_5U_10U_1U_1U_bits_sva_1_16_1_PREV_VAL2 );
  assert property( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_r_flag == 0 || FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_PREV_VAL1 == FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_if_i_shift_acc_psp_1_sva_2_PREV_VAL2 );
  assert property( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_r_flag == 0 || FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_PREV_VAL1 == FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_PREV_VAL2 );
  assert property( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_r_flag == 0 || FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_PREV_VAL1 == FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_2_PREV_VAL2 );
  assert property( FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_r_flag == 0 || FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_PREV_VAL1 == FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_else_acc_6_svs_st_2_PREV_VAL2 );
  assert property( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_r_flag == 0 || FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_PREV_VAL1 == FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_PREV_VAL2 );
  assert property( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_r_flag == 0 || FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_PREV_VAL1 == FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_2_PREV_VAL2 );
  assert property( FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_r_flag == 0 || FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_PREV_VAL1 == FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_else_if_acc_5_svs_st_2_PREV_VAL2 );
  assert property( FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_r_flag == 0 || FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_PREV_VAL1 == FpExpoWidthDec_6U_5U_10U_1U_1U_if_slc_FpExpoWidthDec_6U_5U_10U_1U_1U_acc_6_svs_2_PREV_VAL2 );
  assert property( IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_r_flag == 0 || IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_PREV_VAL1 == IsNaN_6U_10U_IsNaN_6U_10U_nand_itm_2_PREV_VAL2 );
  assert property( IsNaN_6U_10U_nor_itm_2_r_flag == 0 || IsNaN_6U_10U_nor_itm_2_PREV_VAL1 == IsNaN_6U_10U_nor_itm_2_PREV_VAL2 );
  assert property( chn_a_rsci_iswt0_r_flag == 0 || chn_a_rsci_iswt0_PREV_VAL1 == chn_a_rsci_iswt0_PREV_VAL2 );
  assert property( chn_a_rsci_ld_core_psct_r_flag == 0 || chn_a_rsci_ld_core_psct_PREV_VAL1 == chn_a_rsci_ld_core_psct_PREV_VAL2 );
  assert property( chn_o_rsci_d_13_10_r_flag == 0 || chn_o_rsci_d_13_10_PREV_VAL1 == chn_o_rsci_d_13_10_PREV_VAL2 );
  assert property( chn_o_rsci_d_14_r_flag == 0 || chn_o_rsci_d_14_PREV_VAL1 == chn_o_rsci_d_14_PREV_VAL2 );
  assert property( chn_o_rsci_d_15_r_flag == 0 || chn_o_rsci_d_15_PREV_VAL1 == chn_o_rsci_d_15_PREV_VAL2 );
  assert property( chn_o_rsci_d_9_0_r_flag == 0 || chn_o_rsci_d_9_0_PREV_VAL1 == chn_o_rsci_d_9_0_PREV_VAL2 );
  assert property( chn_o_rsci_iswt0_r_flag == 0 || chn_o_rsci_iswt0_PREV_VAL1 == chn_o_rsci_iswt0_PREV_VAL2 );
  assert property( main_stage_v_1_r_flag == 0 || main_stage_v_1_PREV_VAL1 == main_stage_v_1_PREV_VAL2 );
  assert property( reg_chn_o_rsci_ld_core_psct_cse_r_flag == 0 || reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL1 == reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL2 );
  assign rst_zy = !nvdla_core_rstn ;
endmodule
