  logic [81:0] _0_;
  logic [81:0] _0__T ;
  logic [81:0] _0__R ;
  logic [81:0] _0__C ;
  logic [81:0] _0__X ;
  logic [13:0] _0__S ;
  input CLK;
  input CLK_T ;
  input [13:0] CLK_S ;
  output CLK_R ;
  output CLK_X ;
  output CLK_C ;
  logic GND;
  logic GND_T ;
  logic GND_R ;
  logic GND_C ;
  logic GND_X ;
  logic [13:0] GND_S ;
  input IDDQ;
  input IDDQ_T ;
  input [13:0] IDDQ_S ;
  output IDDQ_R ;
  output IDDQ_X ;
  output IDDQ_C ;
  logic [7:0] RA;
  logic [7:0] RA_T ;
  logic [7:0] RA_R ;
  logic [7:0] RA_C ;
  logic [7:0] RA_X ;
  logic [13:0] RA_S ;
  input RADR_0;
  input RADR_0_T ;
  input [13:0] RADR_0_S ;
  output RADR_0_R ;
  output RADR_0_X ;
  output RADR_0_C ;
  input RADR_1;
  input RADR_1_T ;
  input [13:0] RADR_1_S ;
  output RADR_1_R ;
  output RADR_1_X ;
  output RADR_1_C ;
  input RADR_2;
  input RADR_2_T ;
  input [13:0] RADR_2_S ;
  output RADR_2_R ;
  output RADR_2_X ;
  output RADR_2_C ;
  input RADR_3;
  input RADR_3_T ;
  input [13:0] RADR_3_S ;
  output RADR_3_R ;
  output RADR_3_X ;
  output RADR_3_C ;
  input RADR_4;
  input RADR_4_T ;
  input [13:0] RADR_4_S ;
  output RADR_4_R ;
  output RADR_4_X ;
  output RADR_4_C ;
  input RADR_5;
  input RADR_5_T ;
  input [13:0] RADR_5_S ;
  output RADR_5_R ;
  output RADR_5_X ;
  output RADR_5_C ;
  input RADR_6;
  input RADR_6_T ;
  input [13:0] RADR_6_S ;
  output RADR_6_R ;
  output RADR_6_X ;
  output RADR_6_C ;
  input RADR_7;
  input RADR_7_T ;
  input [13:0] RADR_7_S ;
  output RADR_7_R ;
  output RADR_7_X ;
  output RADR_7_C ;
  logic [81:0] RD;
  logic [81:0] RD_T ;
  logic [81:0] RD_R ;
  logic [81:0] RD_C ;
  logic [81:0] RD_X ;
  logic [13:0] RD_S ;
  output RD_0;
  logic RD_0 ;
  output RD_0_T ;
  logic RD_0_T ;
  logic RD_0_R ;
  logic RD_0_C ;
  logic RD_0_X ;
  logic [13:0] RD_0_S ;
  input RD_0_R0 ;
  input RD_0_C0 ;
  input RD_0_X0 ;
  output [13:0] RD_0_S ;
  output RD_1;
  logic RD_1 ;
  output RD_1_T ;
  logic RD_1_T ;
  logic RD_1_R ;
  logic RD_1_C ;
  logic RD_1_X ;
  logic [13:0] RD_1_S ;
  input RD_1_R0 ;
  input RD_1_C0 ;
  input RD_1_X0 ;
  output [13:0] RD_1_S ;
  output RD_10;
  logic RD_10 ;
  output RD_10_T ;
  logic RD_10_T ;
  logic RD_10_R ;
  logic RD_10_C ;
  logic RD_10_X ;
  logic [13:0] RD_10_S ;
  input RD_10_R0 ;
  input RD_10_C0 ;
  input RD_10_X0 ;
  output [13:0] RD_10_S ;
  output RD_11;
  logic RD_11 ;
  output RD_11_T ;
  logic RD_11_T ;
  logic RD_11_R ;
  logic RD_11_C ;
  logic RD_11_X ;
  logic [13:0] RD_11_S ;
  input RD_11_R0 ;
  input RD_11_C0 ;
  input RD_11_X0 ;
  output [13:0] RD_11_S ;
  output RD_12;
  logic RD_12 ;
  output RD_12_T ;
  logic RD_12_T ;
  logic RD_12_R ;
  logic RD_12_C ;
  logic RD_12_X ;
  logic [13:0] RD_12_S ;
  input RD_12_R0 ;
  input RD_12_C0 ;
  input RD_12_X0 ;
  output [13:0] RD_12_S ;
  output RD_13;
  logic RD_13 ;
  output RD_13_T ;
  logic RD_13_T ;
  logic RD_13_R ;
  logic RD_13_C ;
  logic RD_13_X ;
  logic [13:0] RD_13_S ;
  input RD_13_R0 ;
  input RD_13_C0 ;
  input RD_13_X0 ;
  output [13:0] RD_13_S ;
  output RD_14;
  logic RD_14 ;
  output RD_14_T ;
  logic RD_14_T ;
  logic RD_14_R ;
  logic RD_14_C ;
  logic RD_14_X ;
  logic [13:0] RD_14_S ;
  input RD_14_R0 ;
  input RD_14_C0 ;
  input RD_14_X0 ;
  output [13:0] RD_14_S ;
  output RD_15;
  logic RD_15 ;
  output RD_15_T ;
  logic RD_15_T ;
  logic RD_15_R ;
  logic RD_15_C ;
  logic RD_15_X ;
  logic [13:0] RD_15_S ;
  input RD_15_R0 ;
  input RD_15_C0 ;
  input RD_15_X0 ;
  output [13:0] RD_15_S ;
  output RD_16;
  logic RD_16 ;
  output RD_16_T ;
  logic RD_16_T ;
  logic RD_16_R ;
  logic RD_16_C ;
  logic RD_16_X ;
  logic [13:0] RD_16_S ;
  input RD_16_R0 ;
  input RD_16_C0 ;
  input RD_16_X0 ;
  output [13:0] RD_16_S ;
  output RD_17;
  logic RD_17 ;
  output RD_17_T ;
  logic RD_17_T ;
  logic RD_17_R ;
  logic RD_17_C ;
  logic RD_17_X ;
  logic [13:0] RD_17_S ;
  input RD_17_R0 ;
  input RD_17_C0 ;
  input RD_17_X0 ;
  output [13:0] RD_17_S ;
  output RD_18;
  logic RD_18 ;
  output RD_18_T ;
  logic RD_18_T ;
  logic RD_18_R ;
  logic RD_18_C ;
  logic RD_18_X ;
  logic [13:0] RD_18_S ;
  input RD_18_R0 ;
  input RD_18_C0 ;
  input RD_18_X0 ;
  output [13:0] RD_18_S ;
  output RD_19;
  logic RD_19 ;
  output RD_19_T ;
  logic RD_19_T ;
  logic RD_19_R ;
  logic RD_19_C ;
  logic RD_19_X ;
  logic [13:0] RD_19_S ;
  input RD_19_R0 ;
  input RD_19_C0 ;
  input RD_19_X0 ;
  output [13:0] RD_19_S ;
  output RD_2;
  logic RD_2 ;
  output RD_2_T ;
  logic RD_2_T ;
  logic RD_2_R ;
  logic RD_2_C ;
  logic RD_2_X ;
  logic [13:0] RD_2_S ;
  input RD_2_R0 ;
  input RD_2_C0 ;
  input RD_2_X0 ;
  output [13:0] RD_2_S ;
  output RD_20;
  logic RD_20 ;
  output RD_20_T ;
  logic RD_20_T ;
  logic RD_20_R ;
  logic RD_20_C ;
  logic RD_20_X ;
  logic [13:0] RD_20_S ;
  input RD_20_R0 ;
  input RD_20_C0 ;
  input RD_20_X0 ;
  output [13:0] RD_20_S ;
  output RD_21;
  logic RD_21 ;
  output RD_21_T ;
  logic RD_21_T ;
  logic RD_21_R ;
  logic RD_21_C ;
  logic RD_21_X ;
  logic [13:0] RD_21_S ;
  input RD_21_R0 ;
  input RD_21_C0 ;
  input RD_21_X0 ;
  output [13:0] RD_21_S ;
  output RD_22;
  logic RD_22 ;
  output RD_22_T ;
  logic RD_22_T ;
  logic RD_22_R ;
  logic RD_22_C ;
  logic RD_22_X ;
  logic [13:0] RD_22_S ;
  input RD_22_R0 ;
  input RD_22_C0 ;
  input RD_22_X0 ;
  output [13:0] RD_22_S ;
  output RD_23;
  logic RD_23 ;
  output RD_23_T ;
  logic RD_23_T ;
  logic RD_23_R ;
  logic RD_23_C ;
  logic RD_23_X ;
  logic [13:0] RD_23_S ;
  input RD_23_R0 ;
  input RD_23_C0 ;
  input RD_23_X0 ;
  output [13:0] RD_23_S ;
  output RD_24;
  logic RD_24 ;
  output RD_24_T ;
  logic RD_24_T ;
  logic RD_24_R ;
  logic RD_24_C ;
  logic RD_24_X ;
  logic [13:0] RD_24_S ;
  input RD_24_R0 ;
  input RD_24_C0 ;
  input RD_24_X0 ;
  output [13:0] RD_24_S ;
  output RD_25;
  logic RD_25 ;
  output RD_25_T ;
  logic RD_25_T ;
  logic RD_25_R ;
  logic RD_25_C ;
  logic RD_25_X ;
  logic [13:0] RD_25_S ;
  input RD_25_R0 ;
  input RD_25_C0 ;
  input RD_25_X0 ;
  output [13:0] RD_25_S ;
  output RD_26;
  logic RD_26 ;
  output RD_26_T ;
  logic RD_26_T ;
  logic RD_26_R ;
  logic RD_26_C ;
  logic RD_26_X ;
  logic [13:0] RD_26_S ;
  input RD_26_R0 ;
  input RD_26_C0 ;
  input RD_26_X0 ;
  output [13:0] RD_26_S ;
  output RD_27;
  logic RD_27 ;
  output RD_27_T ;
  logic RD_27_T ;
  logic RD_27_R ;
  logic RD_27_C ;
  logic RD_27_X ;
  logic [13:0] RD_27_S ;
  input RD_27_R0 ;
  input RD_27_C0 ;
  input RD_27_X0 ;
  output [13:0] RD_27_S ;
  output RD_28;
  logic RD_28 ;
  output RD_28_T ;
  logic RD_28_T ;
  logic RD_28_R ;
  logic RD_28_C ;
  logic RD_28_X ;
  logic [13:0] RD_28_S ;
  input RD_28_R0 ;
  input RD_28_C0 ;
  input RD_28_X0 ;
  output [13:0] RD_28_S ;
  output RD_29;
  logic RD_29 ;
  output RD_29_T ;
  logic RD_29_T ;
  logic RD_29_R ;
  logic RD_29_C ;
  logic RD_29_X ;
  logic [13:0] RD_29_S ;
  input RD_29_R0 ;
  input RD_29_C0 ;
  input RD_29_X0 ;
  output [13:0] RD_29_S ;
  output RD_3;
  logic RD_3 ;
  output RD_3_T ;
  logic RD_3_T ;
  logic RD_3_R ;
  logic RD_3_C ;
  logic RD_3_X ;
  logic [13:0] RD_3_S ;
  input RD_3_R0 ;
  input RD_3_C0 ;
  input RD_3_X0 ;
  output [13:0] RD_3_S ;
  output RD_30;
  logic RD_30 ;
  output RD_30_T ;
  logic RD_30_T ;
  logic RD_30_R ;
  logic RD_30_C ;
  logic RD_30_X ;
  logic [13:0] RD_30_S ;
  input RD_30_R0 ;
  input RD_30_C0 ;
  input RD_30_X0 ;
  output [13:0] RD_30_S ;
  output RD_31;
  logic RD_31 ;
  output RD_31_T ;
  logic RD_31_T ;
  logic RD_31_R ;
  logic RD_31_C ;
  logic RD_31_X ;
  logic [13:0] RD_31_S ;
  input RD_31_R0 ;
  input RD_31_C0 ;
  input RD_31_X0 ;
  output [13:0] RD_31_S ;
  output RD_32;
  logic RD_32 ;
  output RD_32_T ;
  logic RD_32_T ;
  logic RD_32_R ;
  logic RD_32_C ;
  logic RD_32_X ;
  logic [13:0] RD_32_S ;
  input RD_32_R0 ;
  input RD_32_C0 ;
  input RD_32_X0 ;
  output [13:0] RD_32_S ;
  output RD_33;
  logic RD_33 ;
  output RD_33_T ;
  logic RD_33_T ;
  logic RD_33_R ;
  logic RD_33_C ;
  logic RD_33_X ;
  logic [13:0] RD_33_S ;
  input RD_33_R0 ;
  input RD_33_C0 ;
  input RD_33_X0 ;
  output [13:0] RD_33_S ;
  output RD_34;
  logic RD_34 ;
  output RD_34_T ;
  logic RD_34_T ;
  logic RD_34_R ;
  logic RD_34_C ;
  logic RD_34_X ;
  logic [13:0] RD_34_S ;
  input RD_34_R0 ;
  input RD_34_C0 ;
  input RD_34_X0 ;
  output [13:0] RD_34_S ;
  output RD_35;
  logic RD_35 ;
  output RD_35_T ;
  logic RD_35_T ;
  logic RD_35_R ;
  logic RD_35_C ;
  logic RD_35_X ;
  logic [13:0] RD_35_S ;
  input RD_35_R0 ;
  input RD_35_C0 ;
  input RD_35_X0 ;
  output [13:0] RD_35_S ;
  output RD_36;
  logic RD_36 ;
  output RD_36_T ;
  logic RD_36_T ;
  logic RD_36_R ;
  logic RD_36_C ;
  logic RD_36_X ;
  logic [13:0] RD_36_S ;
  input RD_36_R0 ;
  input RD_36_C0 ;
  input RD_36_X0 ;
  output [13:0] RD_36_S ;
  output RD_37;
  logic RD_37 ;
  output RD_37_T ;
  logic RD_37_T ;
  logic RD_37_R ;
  logic RD_37_C ;
  logic RD_37_X ;
  logic [13:0] RD_37_S ;
  input RD_37_R0 ;
  input RD_37_C0 ;
  input RD_37_X0 ;
  output [13:0] RD_37_S ;
  output RD_38;
  logic RD_38 ;
  output RD_38_T ;
  logic RD_38_T ;
  logic RD_38_R ;
  logic RD_38_C ;
  logic RD_38_X ;
  logic [13:0] RD_38_S ;
  input RD_38_R0 ;
  input RD_38_C0 ;
  input RD_38_X0 ;
  output [13:0] RD_38_S ;
  output RD_39;
  logic RD_39 ;
  output RD_39_T ;
  logic RD_39_T ;
  logic RD_39_R ;
  logic RD_39_C ;
  logic RD_39_X ;
  logic [13:0] RD_39_S ;
  input RD_39_R0 ;
  input RD_39_C0 ;
  input RD_39_X0 ;
  output [13:0] RD_39_S ;
  output RD_4;
  logic RD_4 ;
  output RD_4_T ;
  logic RD_4_T ;
  logic RD_4_R ;
  logic RD_4_C ;
  logic RD_4_X ;
  logic [13:0] RD_4_S ;
  input RD_4_R0 ;
  input RD_4_C0 ;
  input RD_4_X0 ;
  output [13:0] RD_4_S ;
  output RD_40;
  logic RD_40 ;
  output RD_40_T ;
  logic RD_40_T ;
  logic RD_40_R ;
  logic RD_40_C ;
  logic RD_40_X ;
  logic [13:0] RD_40_S ;
  input RD_40_R0 ;
  input RD_40_C0 ;
  input RD_40_X0 ;
  output [13:0] RD_40_S ;
  output RD_41;
  logic RD_41 ;
  output RD_41_T ;
  logic RD_41_T ;
  logic RD_41_R ;
  logic RD_41_C ;
  logic RD_41_X ;
  logic [13:0] RD_41_S ;
  input RD_41_R0 ;
  input RD_41_C0 ;
  input RD_41_X0 ;
  output [13:0] RD_41_S ;
  output RD_42;
  logic RD_42 ;
  output RD_42_T ;
  logic RD_42_T ;
  logic RD_42_R ;
  logic RD_42_C ;
  logic RD_42_X ;
  logic [13:0] RD_42_S ;
  input RD_42_R0 ;
  input RD_42_C0 ;
  input RD_42_X0 ;
  output [13:0] RD_42_S ;
  output RD_43;
  logic RD_43 ;
  output RD_43_T ;
  logic RD_43_T ;
  logic RD_43_R ;
  logic RD_43_C ;
  logic RD_43_X ;
  logic [13:0] RD_43_S ;
  input RD_43_R0 ;
  input RD_43_C0 ;
  input RD_43_X0 ;
  output [13:0] RD_43_S ;
  output RD_44;
  logic RD_44 ;
  output RD_44_T ;
  logic RD_44_T ;
  logic RD_44_R ;
  logic RD_44_C ;
  logic RD_44_X ;
  logic [13:0] RD_44_S ;
  input RD_44_R0 ;
  input RD_44_C0 ;
  input RD_44_X0 ;
  output [13:0] RD_44_S ;
  output RD_45;
  logic RD_45 ;
  output RD_45_T ;
  logic RD_45_T ;
  logic RD_45_R ;
  logic RD_45_C ;
  logic RD_45_X ;
  logic [13:0] RD_45_S ;
  input RD_45_R0 ;
  input RD_45_C0 ;
  input RD_45_X0 ;
  output [13:0] RD_45_S ;
  output RD_46;
  logic RD_46 ;
  output RD_46_T ;
  logic RD_46_T ;
  logic RD_46_R ;
  logic RD_46_C ;
  logic RD_46_X ;
  logic [13:0] RD_46_S ;
  input RD_46_R0 ;
  input RD_46_C0 ;
  input RD_46_X0 ;
  output [13:0] RD_46_S ;
  output RD_47;
  logic RD_47 ;
  output RD_47_T ;
  logic RD_47_T ;
  logic RD_47_R ;
  logic RD_47_C ;
  logic RD_47_X ;
  logic [13:0] RD_47_S ;
  input RD_47_R0 ;
  input RD_47_C0 ;
  input RD_47_X0 ;
  output [13:0] RD_47_S ;
  output RD_48;
  logic RD_48 ;
  output RD_48_T ;
  logic RD_48_T ;
  logic RD_48_R ;
  logic RD_48_C ;
  logic RD_48_X ;
  logic [13:0] RD_48_S ;
  input RD_48_R0 ;
  input RD_48_C0 ;
  input RD_48_X0 ;
  output [13:0] RD_48_S ;
  output RD_49;
  logic RD_49 ;
  output RD_49_T ;
  logic RD_49_T ;
  logic RD_49_R ;
  logic RD_49_C ;
  logic RD_49_X ;
  logic [13:0] RD_49_S ;
  input RD_49_R0 ;
  input RD_49_C0 ;
  input RD_49_X0 ;
  output [13:0] RD_49_S ;
  output RD_5;
  logic RD_5 ;
  output RD_5_T ;
  logic RD_5_T ;
  logic RD_5_R ;
  logic RD_5_C ;
  logic RD_5_X ;
  logic [13:0] RD_5_S ;
  input RD_5_R0 ;
  input RD_5_C0 ;
  input RD_5_X0 ;
  output [13:0] RD_5_S ;
  output RD_50;
  logic RD_50 ;
  output RD_50_T ;
  logic RD_50_T ;
  logic RD_50_R ;
  logic RD_50_C ;
  logic RD_50_X ;
  logic [13:0] RD_50_S ;
  input RD_50_R0 ;
  input RD_50_C0 ;
  input RD_50_X0 ;
  output [13:0] RD_50_S ;
  output RD_51;
  logic RD_51 ;
  output RD_51_T ;
  logic RD_51_T ;
  logic RD_51_R ;
  logic RD_51_C ;
  logic RD_51_X ;
  logic [13:0] RD_51_S ;
  input RD_51_R0 ;
  input RD_51_C0 ;
  input RD_51_X0 ;
  output [13:0] RD_51_S ;
  output RD_52;
  logic RD_52 ;
  output RD_52_T ;
  logic RD_52_T ;
  logic RD_52_R ;
  logic RD_52_C ;
  logic RD_52_X ;
  logic [13:0] RD_52_S ;
  input RD_52_R0 ;
  input RD_52_C0 ;
  input RD_52_X0 ;
  output [13:0] RD_52_S ;
  output RD_53;
  logic RD_53 ;
  output RD_53_T ;
  logic RD_53_T ;
  logic RD_53_R ;
  logic RD_53_C ;
  logic RD_53_X ;
  logic [13:0] RD_53_S ;
  input RD_53_R0 ;
  input RD_53_C0 ;
  input RD_53_X0 ;
  output [13:0] RD_53_S ;
  output RD_54;
  logic RD_54 ;
  output RD_54_T ;
  logic RD_54_T ;
  logic RD_54_R ;
  logic RD_54_C ;
  logic RD_54_X ;
  logic [13:0] RD_54_S ;
  input RD_54_R0 ;
  input RD_54_C0 ;
  input RD_54_X0 ;
  output [13:0] RD_54_S ;
  output RD_55;
  logic RD_55 ;
  output RD_55_T ;
  logic RD_55_T ;
  logic RD_55_R ;
  logic RD_55_C ;
  logic RD_55_X ;
  logic [13:0] RD_55_S ;
  input RD_55_R0 ;
  input RD_55_C0 ;
  input RD_55_X0 ;
  output [13:0] RD_55_S ;
  output RD_56;
  logic RD_56 ;
  output RD_56_T ;
  logic RD_56_T ;
  logic RD_56_R ;
  logic RD_56_C ;
  logic RD_56_X ;
  logic [13:0] RD_56_S ;
  input RD_56_R0 ;
  input RD_56_C0 ;
  input RD_56_X0 ;
  output [13:0] RD_56_S ;
  output RD_57;
  logic RD_57 ;
  output RD_57_T ;
  logic RD_57_T ;
  logic RD_57_R ;
  logic RD_57_C ;
  logic RD_57_X ;
  logic [13:0] RD_57_S ;
  input RD_57_R0 ;
  input RD_57_C0 ;
  input RD_57_X0 ;
  output [13:0] RD_57_S ;
  output RD_58;
  logic RD_58 ;
  output RD_58_T ;
  logic RD_58_T ;
  logic RD_58_R ;
  logic RD_58_C ;
  logic RD_58_X ;
  logic [13:0] RD_58_S ;
  input RD_58_R0 ;
  input RD_58_C0 ;
  input RD_58_X0 ;
  output [13:0] RD_58_S ;
  output RD_59;
  logic RD_59 ;
  output RD_59_T ;
  logic RD_59_T ;
  logic RD_59_R ;
  logic RD_59_C ;
  logic RD_59_X ;
  logic [13:0] RD_59_S ;
  input RD_59_R0 ;
  input RD_59_C0 ;
  input RD_59_X0 ;
  output [13:0] RD_59_S ;
  output RD_6;
  logic RD_6 ;
  output RD_6_T ;
  logic RD_6_T ;
  logic RD_6_R ;
  logic RD_6_C ;
  logic RD_6_X ;
  logic [13:0] RD_6_S ;
  input RD_6_R0 ;
  input RD_6_C0 ;
  input RD_6_X0 ;
  output [13:0] RD_6_S ;
  output RD_60;
  logic RD_60 ;
  output RD_60_T ;
  logic RD_60_T ;
  logic RD_60_R ;
  logic RD_60_C ;
  logic RD_60_X ;
  logic [13:0] RD_60_S ;
  input RD_60_R0 ;
  input RD_60_C0 ;
  input RD_60_X0 ;
  output [13:0] RD_60_S ;
  output RD_61;
  logic RD_61 ;
  output RD_61_T ;
  logic RD_61_T ;
  logic RD_61_R ;
  logic RD_61_C ;
  logic RD_61_X ;
  logic [13:0] RD_61_S ;
  input RD_61_R0 ;
  input RD_61_C0 ;
  input RD_61_X0 ;
  output [13:0] RD_61_S ;
  output RD_62;
  logic RD_62 ;
  output RD_62_T ;
  logic RD_62_T ;
  logic RD_62_R ;
  logic RD_62_C ;
  logic RD_62_X ;
  logic [13:0] RD_62_S ;
  input RD_62_R0 ;
  input RD_62_C0 ;
  input RD_62_X0 ;
  output [13:0] RD_62_S ;
  output RD_63;
  logic RD_63 ;
  output RD_63_T ;
  logic RD_63_T ;
  logic RD_63_R ;
  logic RD_63_C ;
  logic RD_63_X ;
  logic [13:0] RD_63_S ;
  input RD_63_R0 ;
  input RD_63_C0 ;
  input RD_63_X0 ;
  output [13:0] RD_63_S ;
  output RD_64;
  logic RD_64 ;
  output RD_64_T ;
  logic RD_64_T ;
  logic RD_64_R ;
  logic RD_64_C ;
  logic RD_64_X ;
  logic [13:0] RD_64_S ;
  input RD_64_R0 ;
  input RD_64_C0 ;
  input RD_64_X0 ;
  output [13:0] RD_64_S ;
  output RD_65;
  logic RD_65 ;
  output RD_65_T ;
  logic RD_65_T ;
  logic RD_65_R ;
  logic RD_65_C ;
  logic RD_65_X ;
  logic [13:0] RD_65_S ;
  input RD_65_R0 ;
  input RD_65_C0 ;
  input RD_65_X0 ;
  output [13:0] RD_65_S ;
  output RD_66;
  logic RD_66 ;
  output RD_66_T ;
  logic RD_66_T ;
  logic RD_66_R ;
  logic RD_66_C ;
  logic RD_66_X ;
  logic [13:0] RD_66_S ;
  input RD_66_R0 ;
  input RD_66_C0 ;
  input RD_66_X0 ;
  output [13:0] RD_66_S ;
  output RD_67;
  logic RD_67 ;
  output RD_67_T ;
  logic RD_67_T ;
  logic RD_67_R ;
  logic RD_67_C ;
  logic RD_67_X ;
  logic [13:0] RD_67_S ;
  input RD_67_R0 ;
  input RD_67_C0 ;
  input RD_67_X0 ;
  output [13:0] RD_67_S ;
  output RD_68;
  logic RD_68 ;
  output RD_68_T ;
  logic RD_68_T ;
  logic RD_68_R ;
  logic RD_68_C ;
  logic RD_68_X ;
  logic [13:0] RD_68_S ;
  input RD_68_R0 ;
  input RD_68_C0 ;
  input RD_68_X0 ;
  output [13:0] RD_68_S ;
  output RD_69;
  logic RD_69 ;
  output RD_69_T ;
  logic RD_69_T ;
  logic RD_69_R ;
  logic RD_69_C ;
  logic RD_69_X ;
  logic [13:0] RD_69_S ;
  input RD_69_R0 ;
  input RD_69_C0 ;
  input RD_69_X0 ;
  output [13:0] RD_69_S ;
  output RD_7;
  logic RD_7 ;
  output RD_7_T ;
  logic RD_7_T ;
  logic RD_7_R ;
  logic RD_7_C ;
  logic RD_7_X ;
  logic [13:0] RD_7_S ;
  input RD_7_R0 ;
  input RD_7_C0 ;
  input RD_7_X0 ;
  output [13:0] RD_7_S ;
  output RD_70;
  logic RD_70 ;
  output RD_70_T ;
  logic RD_70_T ;
  logic RD_70_R ;
  logic RD_70_C ;
  logic RD_70_X ;
  logic [13:0] RD_70_S ;
  input RD_70_R0 ;
  input RD_70_C0 ;
  input RD_70_X0 ;
  output [13:0] RD_70_S ;
  output RD_71;
  logic RD_71 ;
  output RD_71_T ;
  logic RD_71_T ;
  logic RD_71_R ;
  logic RD_71_C ;
  logic RD_71_X ;
  logic [13:0] RD_71_S ;
  input RD_71_R0 ;
  input RD_71_C0 ;
  input RD_71_X0 ;
  output [13:0] RD_71_S ;
  output RD_72;
  logic RD_72 ;
  output RD_72_T ;
  logic RD_72_T ;
  logic RD_72_R ;
  logic RD_72_C ;
  logic RD_72_X ;
  logic [13:0] RD_72_S ;
  input RD_72_R0 ;
  input RD_72_C0 ;
  input RD_72_X0 ;
  output [13:0] RD_72_S ;
  output RD_73;
  logic RD_73 ;
  output RD_73_T ;
  logic RD_73_T ;
  logic RD_73_R ;
  logic RD_73_C ;
  logic RD_73_X ;
  logic [13:0] RD_73_S ;
  input RD_73_R0 ;
  input RD_73_C0 ;
  input RD_73_X0 ;
  output [13:0] RD_73_S ;
  output RD_74;
  logic RD_74 ;
  output RD_74_T ;
  logic RD_74_T ;
  logic RD_74_R ;
  logic RD_74_C ;
  logic RD_74_X ;
  logic [13:0] RD_74_S ;
  input RD_74_R0 ;
  input RD_74_C0 ;
  input RD_74_X0 ;
  output [13:0] RD_74_S ;
  output RD_75;
  logic RD_75 ;
  output RD_75_T ;
  logic RD_75_T ;
  logic RD_75_R ;
  logic RD_75_C ;
  logic RD_75_X ;
  logic [13:0] RD_75_S ;
  input RD_75_R0 ;
  input RD_75_C0 ;
  input RD_75_X0 ;
  output [13:0] RD_75_S ;
  output RD_76;
  logic RD_76 ;
  output RD_76_T ;
  logic RD_76_T ;
  logic RD_76_R ;
  logic RD_76_C ;
  logic RD_76_X ;
  logic [13:0] RD_76_S ;
  input RD_76_R0 ;
  input RD_76_C0 ;
  input RD_76_X0 ;
  output [13:0] RD_76_S ;
  output RD_77;
  logic RD_77 ;
  output RD_77_T ;
  logic RD_77_T ;
  logic RD_77_R ;
  logic RD_77_C ;
  logic RD_77_X ;
  logic [13:0] RD_77_S ;
  input RD_77_R0 ;
  input RD_77_C0 ;
  input RD_77_X0 ;
  output [13:0] RD_77_S ;
  output RD_78;
  logic RD_78 ;
  output RD_78_T ;
  logic RD_78_T ;
  logic RD_78_R ;
  logic RD_78_C ;
  logic RD_78_X ;
  logic [13:0] RD_78_S ;
  input RD_78_R0 ;
  input RD_78_C0 ;
  input RD_78_X0 ;
  output [13:0] RD_78_S ;
  output RD_79;
  logic RD_79 ;
  output RD_79_T ;
  logic RD_79_T ;
  logic RD_79_R ;
  logic RD_79_C ;
  logic RD_79_X ;
  logic [13:0] RD_79_S ;
  input RD_79_R0 ;
  input RD_79_C0 ;
  input RD_79_X0 ;
  output [13:0] RD_79_S ;
  output RD_8;
  logic RD_8 ;
  output RD_8_T ;
  logic RD_8_T ;
  logic RD_8_R ;
  logic RD_8_C ;
  logic RD_8_X ;
  logic [13:0] RD_8_S ;
  input RD_8_R0 ;
  input RD_8_C0 ;
  input RD_8_X0 ;
  output [13:0] RD_8_S ;
  output RD_80;
  logic RD_80 ;
  output RD_80_T ;
  logic RD_80_T ;
  logic RD_80_R ;
  logic RD_80_C ;
  logic RD_80_X ;
  logic [13:0] RD_80_S ;
  input RD_80_R0 ;
  input RD_80_C0 ;
  input RD_80_X0 ;
  output [13:0] RD_80_S ;
  output RD_81;
  logic RD_81 ;
  output RD_81_T ;
  logic RD_81_T ;
  logic RD_81_R ;
  logic RD_81_C ;
  logic RD_81_X ;
  logic [13:0] RD_81_S ;
  input RD_81_R0 ;
  input RD_81_C0 ;
  input RD_81_X0 ;
  output [13:0] RD_81_S ;
  output RD_9;
  logic RD_9 ;
  output RD_9_T ;
  logic RD_9_T ;
  logic RD_9_R ;
  logic RD_9_C ;
  logic RD_9_X ;
  logic [13:0] RD_9_S ;
  input RD_9_R0 ;
  input RD_9_C0 ;
  input RD_9_X0 ;
  output [13:0] RD_9_S ;
  input RE;
  input RE_T ;
  input [13:0] RE_S ;
  output RE_R ;
  output RE_X ;
  output RE_C ;
  input RET_EN;
  input RET_EN_T ;
  input [13:0] RET_EN_S ;
  output RET_EN_R ;
  output RET_EN_X ;
  output RET_EN_C ;
  logic [7:0] SLEEP_EN;
  logic [7:0] SLEEP_EN_T ;
  logic [7:0] SLEEP_EN_R ;
  logic [7:0] SLEEP_EN_C ;
  logic [7:0] SLEEP_EN_X ;
  logic [13:0] SLEEP_EN_S ;
  input SLEEP_EN_0;
  input SLEEP_EN_0_T ;
  input [13:0] SLEEP_EN_0_S ;
  output SLEEP_EN_0_R ;
  output SLEEP_EN_0_X ;
  output SLEEP_EN_0_C ;
  input SLEEP_EN_1;
  input SLEEP_EN_1_T ;
  input [13:0] SLEEP_EN_1_S ;
  output SLEEP_EN_1_R ;
  output SLEEP_EN_1_X ;
  output SLEEP_EN_1_C ;
  input SLEEP_EN_2;
  input SLEEP_EN_2_T ;
  input [13:0] SLEEP_EN_2_S ;
  output SLEEP_EN_2_R ;
  output SLEEP_EN_2_X ;
  output SLEEP_EN_2_C ;
  input SLEEP_EN_3;
  input SLEEP_EN_3_T ;
  input [13:0] SLEEP_EN_3_S ;
  output SLEEP_EN_3_R ;
  output SLEEP_EN_3_X ;
  output SLEEP_EN_3_C ;
  input SLEEP_EN_4;
  input SLEEP_EN_4_T ;
  input [13:0] SLEEP_EN_4_S ;
  output SLEEP_EN_4_R ;
  output SLEEP_EN_4_X ;
  output SLEEP_EN_4_C ;
  input SLEEP_EN_5;
  input SLEEP_EN_5_T ;
  input [13:0] SLEEP_EN_5_S ;
  output SLEEP_EN_5_R ;
  output SLEEP_EN_5_X ;
  output SLEEP_EN_5_C ;
  input SLEEP_EN_6;
  input SLEEP_EN_6_T ;
  input [13:0] SLEEP_EN_6_S ;
  output SLEEP_EN_6_R ;
  output SLEEP_EN_6_X ;
  output SLEEP_EN_6_C ;
  input SLEEP_EN_7;
  input SLEEP_EN_7_T ;
  input [13:0] SLEEP_EN_7_S ;
  output SLEEP_EN_7_R ;
  output SLEEP_EN_7_X ;
  output SLEEP_EN_7_C ;
  logic [7:0] SVOP;
  logic [7:0] SVOP_T ;
  logic [7:0] SVOP_R ;
  logic [7:0] SVOP_C ;
  logic [7:0] SVOP_X ;
  logic [13:0] SVOP_S ;
  input SVOP_0;
  input SVOP_0_T ;
  input [13:0] SVOP_0_S ;
  output SVOP_0_R ;
  output SVOP_0_X ;
  output SVOP_0_C ;
  input SVOP_1;
  input SVOP_1_T ;
  input [13:0] SVOP_1_S ;
  output SVOP_1_R ;
  output SVOP_1_X ;
  output SVOP_1_C ;
  input SVOP_2;
  input SVOP_2_T ;
  input [13:0] SVOP_2_S ;
  output SVOP_2_R ;
  output SVOP_2_X ;
  output SVOP_2_C ;
  input SVOP_3;
  input SVOP_3_T ;
  input [13:0] SVOP_3_S ;
  output SVOP_3_R ;
  output SVOP_3_X ;
  output SVOP_3_C ;
  input SVOP_4;
  input SVOP_4_T ;
  input [13:0] SVOP_4_S ;
  output SVOP_4_R ;
  output SVOP_4_X ;
  output SVOP_4_C ;
  input SVOP_5;
  input SVOP_5_T ;
  input [13:0] SVOP_5_S ;
  output SVOP_5_R ;
  output SVOP_5_X ;
  output SVOP_5_C ;
  input SVOP_6;
  input SVOP_6_T ;
  input [13:0] SVOP_6_S ;
  output SVOP_6_R ;
  output SVOP_6_X ;
  output SVOP_6_C ;
  input SVOP_7;
  input SVOP_7_T ;
  input [13:0] SVOP_7_S ;
  output SVOP_7_R ;
  output SVOP_7_X ;
  output SVOP_7_C ;
  logic VDD;
  logic VDD_T ;
  logic VDD_R ;
  logic VDD_C ;
  logic VDD_X ;
  logic [13:0] VDD_S ;
  logic [7:0] WA;
  logic [7:0] WA_T ;
  logic [7:0] WA_R ;
  logic [7:0] WA_C ;
  logic [7:0] WA_X ;
  logic [13:0] WA_S ;
  input WADR_0;
  input WADR_0_T ;
  input [13:0] WADR_0_S ;
  output WADR_0_R ;
  output WADR_0_X ;
  output WADR_0_C ;
  input WADR_1;
  input WADR_1_T ;
  input [13:0] WADR_1_S ;
  output WADR_1_R ;
  output WADR_1_X ;
  output WADR_1_C ;
  input WADR_2;
  input WADR_2_T ;
  input [13:0] WADR_2_S ;
  output WADR_2_R ;
  output WADR_2_X ;
  output WADR_2_C ;
  input WADR_3;
  input WADR_3_T ;
  input [13:0] WADR_3_S ;
  output WADR_3_R ;
  output WADR_3_X ;
  output WADR_3_C ;
  input WADR_4;
  input WADR_4_T ;
  input [13:0] WADR_4_S ;
  output WADR_4_R ;
  output WADR_4_X ;
  output WADR_4_C ;
  input WADR_5;
  input WADR_5_T ;
  input [13:0] WADR_5_S ;
  output WADR_5_R ;
  output WADR_5_X ;
  output WADR_5_C ;
  input WADR_6;
  input WADR_6_T ;
  input [13:0] WADR_6_S ;
  output WADR_6_R ;
  output WADR_6_X ;
  output WADR_6_C ;
  input WADR_7;
  input WADR_7_T ;
  input [13:0] WADR_7_S ;
  output WADR_7_R ;
  output WADR_7_X ;
  output WADR_7_C ;
  logic [81:0] WD;
  logic [81:0] WD_T ;
  logic [81:0] WD_R ;
  logic [81:0] WD_C ;
  logic [81:0] WD_X ;
  logic [13:0] WD_S ;
  input WD_0;
  input WD_0_T ;
  input [13:0] WD_0_S ;
  output WD_0_R ;
  output WD_0_X ;
  output WD_0_C ;
  input WD_1;
  input WD_1_T ;
  input [13:0] WD_1_S ;
  output WD_1_R ;
  output WD_1_X ;
  output WD_1_C ;
  input WD_10;
  input WD_10_T ;
  input [13:0] WD_10_S ;
  output WD_10_R ;
  output WD_10_X ;
  output WD_10_C ;
  input WD_11;
  input WD_11_T ;
  input [13:0] WD_11_S ;
  output WD_11_R ;
  output WD_11_X ;
  output WD_11_C ;
  input WD_12;
  input WD_12_T ;
  input [13:0] WD_12_S ;
  output WD_12_R ;
  output WD_12_X ;
  output WD_12_C ;
  input WD_13;
  input WD_13_T ;
  input [13:0] WD_13_S ;
  output WD_13_R ;
  output WD_13_X ;
  output WD_13_C ;
  input WD_14;
  input WD_14_T ;
  input [13:0] WD_14_S ;
  output WD_14_R ;
  output WD_14_X ;
  output WD_14_C ;
  input WD_15;
  input WD_15_T ;
  input [13:0] WD_15_S ;
  output WD_15_R ;
  output WD_15_X ;
  output WD_15_C ;
  input WD_16;
  input WD_16_T ;
  input [13:0] WD_16_S ;
  output WD_16_R ;
  output WD_16_X ;
  output WD_16_C ;
  input WD_17;
  input WD_17_T ;
  input [13:0] WD_17_S ;
  output WD_17_R ;
  output WD_17_X ;
  output WD_17_C ;
  input WD_18;
  input WD_18_T ;
  input [13:0] WD_18_S ;
  output WD_18_R ;
  output WD_18_X ;
  output WD_18_C ;
  input WD_19;
  input WD_19_T ;
  input [13:0] WD_19_S ;
  output WD_19_R ;
  output WD_19_X ;
  output WD_19_C ;
  input WD_2;
  input WD_2_T ;
  input [13:0] WD_2_S ;
  output WD_2_R ;
  output WD_2_X ;
  output WD_2_C ;
  input WD_20;
  input WD_20_T ;
  input [13:0] WD_20_S ;
  output WD_20_R ;
  output WD_20_X ;
  output WD_20_C ;
  input WD_21;
  input WD_21_T ;
  input [13:0] WD_21_S ;
  output WD_21_R ;
  output WD_21_X ;
  output WD_21_C ;
  input WD_22;
  input WD_22_T ;
  input [13:0] WD_22_S ;
  output WD_22_R ;
  output WD_22_X ;
  output WD_22_C ;
  input WD_23;
  input WD_23_T ;
  input [13:0] WD_23_S ;
  output WD_23_R ;
  output WD_23_X ;
  output WD_23_C ;
  input WD_24;
  input WD_24_T ;
  input [13:0] WD_24_S ;
  output WD_24_R ;
  output WD_24_X ;
  output WD_24_C ;
  input WD_25;
  input WD_25_T ;
  input [13:0] WD_25_S ;
  output WD_25_R ;
  output WD_25_X ;
  output WD_25_C ;
  input WD_26;
  input WD_26_T ;
  input [13:0] WD_26_S ;
  output WD_26_R ;
  output WD_26_X ;
  output WD_26_C ;
  input WD_27;
  input WD_27_T ;
  input [13:0] WD_27_S ;
  output WD_27_R ;
  output WD_27_X ;
  output WD_27_C ;
  input WD_28;
  input WD_28_T ;
  input [13:0] WD_28_S ;
  output WD_28_R ;
  output WD_28_X ;
  output WD_28_C ;
  input WD_29;
  input WD_29_T ;
  input [13:0] WD_29_S ;
  output WD_29_R ;
  output WD_29_X ;
  output WD_29_C ;
  input WD_3;
  input WD_3_T ;
  input [13:0] WD_3_S ;
  output WD_3_R ;
  output WD_3_X ;
  output WD_3_C ;
  input WD_30;
  input WD_30_T ;
  input [13:0] WD_30_S ;
  output WD_30_R ;
  output WD_30_X ;
  output WD_30_C ;
  input WD_31;
  input WD_31_T ;
  input [13:0] WD_31_S ;
  output WD_31_R ;
  output WD_31_X ;
  output WD_31_C ;
  input WD_32;
  input WD_32_T ;
  input [13:0] WD_32_S ;
  output WD_32_R ;
  output WD_32_X ;
  output WD_32_C ;
  input WD_33;
  input WD_33_T ;
  input [13:0] WD_33_S ;
  output WD_33_R ;
  output WD_33_X ;
  output WD_33_C ;
  input WD_34;
  input WD_34_T ;
  input [13:0] WD_34_S ;
  output WD_34_R ;
  output WD_34_X ;
  output WD_34_C ;
  input WD_35;
  input WD_35_T ;
  input [13:0] WD_35_S ;
  output WD_35_R ;
  output WD_35_X ;
  output WD_35_C ;
  input WD_36;
  input WD_36_T ;
  input [13:0] WD_36_S ;
  output WD_36_R ;
  output WD_36_X ;
  output WD_36_C ;
  input WD_37;
  input WD_37_T ;
  input [13:0] WD_37_S ;
  output WD_37_R ;
  output WD_37_X ;
  output WD_37_C ;
  input WD_38;
  input WD_38_T ;
  input [13:0] WD_38_S ;
  output WD_38_R ;
  output WD_38_X ;
  output WD_38_C ;
  input WD_39;
  input WD_39_T ;
  input [13:0] WD_39_S ;
  output WD_39_R ;
  output WD_39_X ;
  output WD_39_C ;
  input WD_4;
  input WD_4_T ;
  input [13:0] WD_4_S ;
  output WD_4_R ;
  output WD_4_X ;
  output WD_4_C ;
  input WD_40;
  input WD_40_T ;
  input [13:0] WD_40_S ;
  output WD_40_R ;
  output WD_40_X ;
  output WD_40_C ;
  input WD_41;
  input WD_41_T ;
  input [13:0] WD_41_S ;
  output WD_41_R ;
  output WD_41_X ;
  output WD_41_C ;
  input WD_42;
  input WD_42_T ;
  input [13:0] WD_42_S ;
  output WD_42_R ;
  output WD_42_X ;
  output WD_42_C ;
  input WD_43;
  input WD_43_T ;
  input [13:0] WD_43_S ;
  output WD_43_R ;
  output WD_43_X ;
  output WD_43_C ;
  input WD_44;
  input WD_44_T ;
  input [13:0] WD_44_S ;
  output WD_44_R ;
  output WD_44_X ;
  output WD_44_C ;
  input WD_45;
  input WD_45_T ;
  input [13:0] WD_45_S ;
  output WD_45_R ;
  output WD_45_X ;
  output WD_45_C ;
  input WD_46;
  input WD_46_T ;
  input [13:0] WD_46_S ;
  output WD_46_R ;
  output WD_46_X ;
  output WD_46_C ;
  input WD_47;
  input WD_47_T ;
  input [13:0] WD_47_S ;
  output WD_47_R ;
  output WD_47_X ;
  output WD_47_C ;
  input WD_48;
  input WD_48_T ;
  input [13:0] WD_48_S ;
  output WD_48_R ;
  output WD_48_X ;
  output WD_48_C ;
  input WD_49;
  input WD_49_T ;
  input [13:0] WD_49_S ;
  output WD_49_R ;
  output WD_49_X ;
  output WD_49_C ;
  input WD_5;
  input WD_5_T ;
  input [13:0] WD_5_S ;
  output WD_5_R ;
  output WD_5_X ;
  output WD_5_C ;
  input WD_50;
  input WD_50_T ;
  input [13:0] WD_50_S ;
  output WD_50_R ;
  output WD_50_X ;
  output WD_50_C ;
  input WD_51;
  input WD_51_T ;
  input [13:0] WD_51_S ;
  output WD_51_R ;
  output WD_51_X ;
  output WD_51_C ;
  input WD_52;
  input WD_52_T ;
  input [13:0] WD_52_S ;
  output WD_52_R ;
  output WD_52_X ;
  output WD_52_C ;
  input WD_53;
  input WD_53_T ;
  input [13:0] WD_53_S ;
  output WD_53_R ;
  output WD_53_X ;
  output WD_53_C ;
  input WD_54;
  input WD_54_T ;
  input [13:0] WD_54_S ;
  output WD_54_R ;
  output WD_54_X ;
  output WD_54_C ;
  input WD_55;
  input WD_55_T ;
  input [13:0] WD_55_S ;
  output WD_55_R ;
  output WD_55_X ;
  output WD_55_C ;
  input WD_56;
  input WD_56_T ;
  input [13:0] WD_56_S ;
  output WD_56_R ;
  output WD_56_X ;
  output WD_56_C ;
  input WD_57;
  input WD_57_T ;
  input [13:0] WD_57_S ;
  output WD_57_R ;
  output WD_57_X ;
  output WD_57_C ;
  input WD_58;
  input WD_58_T ;
  input [13:0] WD_58_S ;
  output WD_58_R ;
  output WD_58_X ;
  output WD_58_C ;
  input WD_59;
  input WD_59_T ;
  input [13:0] WD_59_S ;
  output WD_59_R ;
  output WD_59_X ;
  output WD_59_C ;
  input WD_6;
  input WD_6_T ;
  input [13:0] WD_6_S ;
  output WD_6_R ;
  output WD_6_X ;
  output WD_6_C ;
  input WD_60;
  input WD_60_T ;
  input [13:0] WD_60_S ;
  output WD_60_R ;
  output WD_60_X ;
  output WD_60_C ;
  input WD_61;
  input WD_61_T ;
  input [13:0] WD_61_S ;
  output WD_61_R ;
  output WD_61_X ;
  output WD_61_C ;
  input WD_62;
  input WD_62_T ;
  input [13:0] WD_62_S ;
  output WD_62_R ;
  output WD_62_X ;
  output WD_62_C ;
  input WD_63;
  input WD_63_T ;
  input [13:0] WD_63_S ;
  output WD_63_R ;
  output WD_63_X ;
  output WD_63_C ;
  input WD_64;
  input WD_64_T ;
  input [13:0] WD_64_S ;
  output WD_64_R ;
  output WD_64_X ;
  output WD_64_C ;
  input WD_65;
  input WD_65_T ;
  input [13:0] WD_65_S ;
  output WD_65_R ;
  output WD_65_X ;
  output WD_65_C ;
  input WD_66;
  input WD_66_T ;
  input [13:0] WD_66_S ;
  output WD_66_R ;
  output WD_66_X ;
  output WD_66_C ;
  input WD_67;
  input WD_67_T ;
  input [13:0] WD_67_S ;
  output WD_67_R ;
  output WD_67_X ;
  output WD_67_C ;
  input WD_68;
  input WD_68_T ;
  input [13:0] WD_68_S ;
  output WD_68_R ;
  output WD_68_X ;
  output WD_68_C ;
  input WD_69;
  input WD_69_T ;
  input [13:0] WD_69_S ;
  output WD_69_R ;
  output WD_69_X ;
  output WD_69_C ;
  input WD_7;
  input WD_7_T ;
  input [13:0] WD_7_S ;
  output WD_7_R ;
  output WD_7_X ;
  output WD_7_C ;
  input WD_70;
  input WD_70_T ;
  input [13:0] WD_70_S ;
  output WD_70_R ;
  output WD_70_X ;
  output WD_70_C ;
  input WD_71;
  input WD_71_T ;
  input [13:0] WD_71_S ;
  output WD_71_R ;
  output WD_71_X ;
  output WD_71_C ;
  input WD_72;
  input WD_72_T ;
  input [13:0] WD_72_S ;
  output WD_72_R ;
  output WD_72_X ;
  output WD_72_C ;
  input WD_73;
  input WD_73_T ;
  input [13:0] WD_73_S ;
  output WD_73_R ;
  output WD_73_X ;
  output WD_73_C ;
  input WD_74;
  input WD_74_T ;
  input [13:0] WD_74_S ;
  output WD_74_R ;
  output WD_74_X ;
  output WD_74_C ;
  input WD_75;
  input WD_75_T ;
  input [13:0] WD_75_S ;
  output WD_75_R ;
  output WD_75_X ;
  output WD_75_C ;
  input WD_76;
  input WD_76_T ;
  input [13:0] WD_76_S ;
  output WD_76_R ;
  output WD_76_X ;
  output WD_76_C ;
  input WD_77;
  input WD_77_T ;
  input [13:0] WD_77_S ;
  output WD_77_R ;
  output WD_77_X ;
  output WD_77_C ;
  input WD_78;
  input WD_78_T ;
  input [13:0] WD_78_S ;
  output WD_78_R ;
  output WD_78_X ;
  output WD_78_C ;
  input WD_79;
  input WD_79_T ;
  input [13:0] WD_79_S ;
  output WD_79_R ;
  output WD_79_X ;
  output WD_79_C ;
  input WD_8;
  input WD_8_T ;
  input [13:0] WD_8_S ;
  output WD_8_R ;
  output WD_8_X ;
  output WD_8_C ;
  input WD_80;
  input WD_80_T ;
  input [13:0] WD_80_S ;
  output WD_80_R ;
  output WD_80_X ;
  output WD_80_C ;
  input WD_81;
  input WD_81_T ;
  input [13:0] WD_81_S ;
  output WD_81_R ;
  output WD_81_X ;
  output WD_81_C ;
  input WD_9;
  input WD_9_T ;
  input [13:0] WD_9_S ;
  output WD_9_R ;
  output WD_9_X ;
  output WD_9_C ;
  input WE;
  input WE_T ;
  input [13:0] WE_S ;
  output WE_R ;
  output WE_X ;
  output WE_C ;
  logic clamp_rd;
  logic clamp_rd_T ;
  logic clamp_rd_R ;
  logic clamp_rd_C ;
  logic clamp_rd_X ;
  logic [13:0] clamp_rd_S ;
  logic clobber_array;
  logic clobber_array_T ;
  logic clobber_array_R ;
  logic clobber_array_C ;
  logic clobber_array_X ;
  logic [13:0] clobber_array_S ;
  logic clobber_flops;
  logic clobber_flops_T ;
  logic clobber_flops_R ;
  logic clobber_flops_C ;
  logic clobber_flops_X ;
  logic [13:0] clobber_flops_S ;
  logic clobber_x;
  logic clobber_x_T ;
  logic clobber_x_R ;
  logic clobber_x_C ;
  logic clobber_x_X ;
  logic [13:0] clobber_x_S ;
  logic [81:0] fangyuan0;
  logic [81:0] fangyuan0_T ;
  logic [81:0] fangyuan0_R ;
  logic [81:0] fangyuan0_C ;
  logic [81:0] fangyuan0_X ;
  assign fangyuan0 = { RD_81, RD_80, RD_79, RD_78, RD_77, RD_76, RD_75, RD_74, RD_73, RD_72, RD_71, RD_70, RD_69, RD_68, RD_67, RD_66, RD_65, RD_64, RD_63, RD_62, RD_61, RD_60, RD_59, RD_58, RD_57, RD_56, RD_55, RD_54, RD_53, RD_52, RD_51, RD_50, RD_49, RD_48, RD_47, RD_46, RD_45, RD_44, RD_43, RD_42, RD_41, RD_40, RD_39, RD_38, RD_37, RD_36, RD_35, RD_34, RD_33, RD_32, RD_31, RD_30, RD_29, RD_28, RD_27, RD_26, RD_25, RD_24, RD_23, RD_22, RD_21, RD_20, RD_19, RD_18, RD_17, RD_16, RD_15, RD_14, RD_13, RD_12, RD_11, RD_10, RD_9, RD_8, RD_7, RD_6, RD_5, RD_4, RD_3, RD_2, RD_1, RD_0 };
  assign fangyuan0_T = {  RD_81_T , RD_80_T , RD_79_T , RD_78_T , RD_77_T , RD_76_T , RD_75_T , RD_74_T , RD_73_T , RD_72_T , RD_71_T , RD_70_T , RD_69_T , RD_68_T , RD_67_T , RD_66_T , RD_65_T , RD_64_T , RD_63_T , RD_62_T , RD_61_T , RD_60_T , RD_59_T , RD_58_T , RD_57_T , RD_56_T , RD_55_T , RD_54_T , RD_53_T , RD_52_T , RD_51_T , RD_50_T , RD_49_T , RD_48_T , RD_47_T , RD_46_T , RD_45_T , RD_44_T , RD_43_T , RD_42_T , RD_41_T , RD_40_T , RD_39_T , RD_38_T , RD_37_T , RD_36_T , RD_35_T , RD_34_T , RD_33_T , RD_32_T , RD_31_T , RD_30_T , RD_29_T , RD_28_T , RD_27_T , RD_26_T , RD_25_T , RD_24_T , RD_23_T , RD_22_T , RD_21_T , RD_20_T , RD_19_T , RD_18_T , RD_17_T , RD_16_T , RD_15_T , RD_14_T , RD_13_T , RD_12_T , RD_11_T , RD_10_T , RD_9_T , RD_8_T , RD_7_T , RD_6_T , RD_5_T , RD_4_T , RD_3_T , RD_2_T , RD_1_T , RD_0_T  };
  logic [13:0] fangyuan0_S ;
  assign fangyuan0_S = 0 ;
  logic [0:0] RD_81_R1 ;
  logic [0:0] RD_81_X1 ;
  logic [0:0] RD_81_C1 ;
  assign RD_81_R1 = fangyuan0_R [81:81] ;
  assign RD_81_X1 = fangyuan0_X [81:81] ;
  assign RD_81_C1 = fangyuan0_C [81:81] ;
  logic [0:0] RD_80_R1 ;
  logic [0:0] RD_80_X1 ;
  logic [0:0] RD_80_C1 ;
  assign RD_80_R1 = fangyuan0_R [80:80] ;
  assign RD_80_X1 = fangyuan0_X [80:80] ;
  assign RD_80_C1 = fangyuan0_C [80:80] ;
  logic [0:0] RD_79_R1 ;
  logic [0:0] RD_79_X1 ;
  logic [0:0] RD_79_C1 ;
  assign RD_79_R1 = fangyuan0_R [79:79] ;
  assign RD_79_X1 = fangyuan0_X [79:79] ;
  assign RD_79_C1 = fangyuan0_C [79:79] ;
  logic [0:0] RD_78_R1 ;
  logic [0:0] RD_78_X1 ;
  logic [0:0] RD_78_C1 ;
  assign RD_78_R1 = fangyuan0_R [78:78] ;
  assign RD_78_X1 = fangyuan0_X [78:78] ;
  assign RD_78_C1 = fangyuan0_C [78:78] ;
  logic [0:0] RD_77_R1 ;
  logic [0:0] RD_77_X1 ;
  logic [0:0] RD_77_C1 ;
  assign RD_77_R1 = fangyuan0_R [77:77] ;
  assign RD_77_X1 = fangyuan0_X [77:77] ;
  assign RD_77_C1 = fangyuan0_C [77:77] ;
  logic [0:0] RD_76_R1 ;
  logic [0:0] RD_76_X1 ;
  logic [0:0] RD_76_C1 ;
  assign RD_76_R1 = fangyuan0_R [76:76] ;
  assign RD_76_X1 = fangyuan0_X [76:76] ;
  assign RD_76_C1 = fangyuan0_C [76:76] ;
  logic [0:0] RD_75_R1 ;
  logic [0:0] RD_75_X1 ;
  logic [0:0] RD_75_C1 ;
  assign RD_75_R1 = fangyuan0_R [75:75] ;
  assign RD_75_X1 = fangyuan0_X [75:75] ;
  assign RD_75_C1 = fangyuan0_C [75:75] ;
  logic [0:0] RD_74_R1 ;
  logic [0:0] RD_74_X1 ;
  logic [0:0] RD_74_C1 ;
  assign RD_74_R1 = fangyuan0_R [74:74] ;
  assign RD_74_X1 = fangyuan0_X [74:74] ;
  assign RD_74_C1 = fangyuan0_C [74:74] ;
  logic [0:0] RD_73_R1 ;
  logic [0:0] RD_73_X1 ;
  logic [0:0] RD_73_C1 ;
  assign RD_73_R1 = fangyuan0_R [73:73] ;
  assign RD_73_X1 = fangyuan0_X [73:73] ;
  assign RD_73_C1 = fangyuan0_C [73:73] ;
  logic [0:0] RD_72_R1 ;
  logic [0:0] RD_72_X1 ;
  logic [0:0] RD_72_C1 ;
  assign RD_72_R1 = fangyuan0_R [72:72] ;
  assign RD_72_X1 = fangyuan0_X [72:72] ;
  assign RD_72_C1 = fangyuan0_C [72:72] ;
  logic [0:0] RD_71_R1 ;
  logic [0:0] RD_71_X1 ;
  logic [0:0] RD_71_C1 ;
  assign RD_71_R1 = fangyuan0_R [71:71] ;
  assign RD_71_X1 = fangyuan0_X [71:71] ;
  assign RD_71_C1 = fangyuan0_C [71:71] ;
  logic [0:0] RD_70_R1 ;
  logic [0:0] RD_70_X1 ;
  logic [0:0] RD_70_C1 ;
  assign RD_70_R1 = fangyuan0_R [70:70] ;
  assign RD_70_X1 = fangyuan0_X [70:70] ;
  assign RD_70_C1 = fangyuan0_C [70:70] ;
  logic [0:0] RD_69_R1 ;
  logic [0:0] RD_69_X1 ;
  logic [0:0] RD_69_C1 ;
  assign RD_69_R1 = fangyuan0_R [69:69] ;
  assign RD_69_X1 = fangyuan0_X [69:69] ;
  assign RD_69_C1 = fangyuan0_C [69:69] ;
  logic [0:0] RD_68_R1 ;
  logic [0:0] RD_68_X1 ;
  logic [0:0] RD_68_C1 ;
  assign RD_68_R1 = fangyuan0_R [68:68] ;
  assign RD_68_X1 = fangyuan0_X [68:68] ;
  assign RD_68_C1 = fangyuan0_C [68:68] ;
  logic [0:0] RD_67_R1 ;
  logic [0:0] RD_67_X1 ;
  logic [0:0] RD_67_C1 ;
  assign RD_67_R1 = fangyuan0_R [67:67] ;
  assign RD_67_X1 = fangyuan0_X [67:67] ;
  assign RD_67_C1 = fangyuan0_C [67:67] ;
  logic [0:0] RD_66_R1 ;
  logic [0:0] RD_66_X1 ;
  logic [0:0] RD_66_C1 ;
  assign RD_66_R1 = fangyuan0_R [66:66] ;
  assign RD_66_X1 = fangyuan0_X [66:66] ;
  assign RD_66_C1 = fangyuan0_C [66:66] ;
  logic [0:0] RD_65_R1 ;
  logic [0:0] RD_65_X1 ;
  logic [0:0] RD_65_C1 ;
  assign RD_65_R1 = fangyuan0_R [65:65] ;
  assign RD_65_X1 = fangyuan0_X [65:65] ;
  assign RD_65_C1 = fangyuan0_C [65:65] ;
  logic [0:0] RD_64_R1 ;
  logic [0:0] RD_64_X1 ;
  logic [0:0] RD_64_C1 ;
  assign RD_64_R1 = fangyuan0_R [64:64] ;
  assign RD_64_X1 = fangyuan0_X [64:64] ;
  assign RD_64_C1 = fangyuan0_C [64:64] ;
  logic [0:0] RD_63_R1 ;
  logic [0:0] RD_63_X1 ;
  logic [0:0] RD_63_C1 ;
  assign RD_63_R1 = fangyuan0_R [63:63] ;
  assign RD_63_X1 = fangyuan0_X [63:63] ;
  assign RD_63_C1 = fangyuan0_C [63:63] ;
  logic [0:0] RD_62_R1 ;
  logic [0:0] RD_62_X1 ;
  logic [0:0] RD_62_C1 ;
  assign RD_62_R1 = fangyuan0_R [62:62] ;
  assign RD_62_X1 = fangyuan0_X [62:62] ;
  assign RD_62_C1 = fangyuan0_C [62:62] ;
  logic [0:0] RD_61_R1 ;
  logic [0:0] RD_61_X1 ;
  logic [0:0] RD_61_C1 ;
  assign RD_61_R1 = fangyuan0_R [61:61] ;
  assign RD_61_X1 = fangyuan0_X [61:61] ;
  assign RD_61_C1 = fangyuan0_C [61:61] ;
  logic [0:0] RD_60_R1 ;
  logic [0:0] RD_60_X1 ;
  logic [0:0] RD_60_C1 ;
  assign RD_60_R1 = fangyuan0_R [60:60] ;
  assign RD_60_X1 = fangyuan0_X [60:60] ;
  assign RD_60_C1 = fangyuan0_C [60:60] ;
  logic [0:0] RD_59_R1 ;
  logic [0:0] RD_59_X1 ;
  logic [0:0] RD_59_C1 ;
  assign RD_59_R1 = fangyuan0_R [59:59] ;
  assign RD_59_X1 = fangyuan0_X [59:59] ;
  assign RD_59_C1 = fangyuan0_C [59:59] ;
  logic [0:0] RD_58_R1 ;
  logic [0:0] RD_58_X1 ;
  logic [0:0] RD_58_C1 ;
  assign RD_58_R1 = fangyuan0_R [58:58] ;
  assign RD_58_X1 = fangyuan0_X [58:58] ;
  assign RD_58_C1 = fangyuan0_C [58:58] ;
  logic [0:0] RD_57_R1 ;
  logic [0:0] RD_57_X1 ;
  logic [0:0] RD_57_C1 ;
  assign RD_57_R1 = fangyuan0_R [57:57] ;
  assign RD_57_X1 = fangyuan0_X [57:57] ;
  assign RD_57_C1 = fangyuan0_C [57:57] ;
  logic [0:0] RD_56_R1 ;
  logic [0:0] RD_56_X1 ;
  logic [0:0] RD_56_C1 ;
  assign RD_56_R1 = fangyuan0_R [56:56] ;
  assign RD_56_X1 = fangyuan0_X [56:56] ;
  assign RD_56_C1 = fangyuan0_C [56:56] ;
  logic [0:0] RD_55_R1 ;
  logic [0:0] RD_55_X1 ;
  logic [0:0] RD_55_C1 ;
  assign RD_55_R1 = fangyuan0_R [55:55] ;
  assign RD_55_X1 = fangyuan0_X [55:55] ;
  assign RD_55_C1 = fangyuan0_C [55:55] ;
  logic [0:0] RD_54_R1 ;
  logic [0:0] RD_54_X1 ;
  logic [0:0] RD_54_C1 ;
  assign RD_54_R1 = fangyuan0_R [54:54] ;
  assign RD_54_X1 = fangyuan0_X [54:54] ;
  assign RD_54_C1 = fangyuan0_C [54:54] ;
  logic [0:0] RD_53_R1 ;
  logic [0:0] RD_53_X1 ;
  logic [0:0] RD_53_C1 ;
  assign RD_53_R1 = fangyuan0_R [53:53] ;
  assign RD_53_X1 = fangyuan0_X [53:53] ;
  assign RD_53_C1 = fangyuan0_C [53:53] ;
  logic [0:0] RD_52_R1 ;
  logic [0:0] RD_52_X1 ;
  logic [0:0] RD_52_C1 ;
  assign RD_52_R1 = fangyuan0_R [52:52] ;
  assign RD_52_X1 = fangyuan0_X [52:52] ;
  assign RD_52_C1 = fangyuan0_C [52:52] ;
  logic [0:0] RD_51_R1 ;
  logic [0:0] RD_51_X1 ;
  logic [0:0] RD_51_C1 ;
  assign RD_51_R1 = fangyuan0_R [51:51] ;
  assign RD_51_X1 = fangyuan0_X [51:51] ;
  assign RD_51_C1 = fangyuan0_C [51:51] ;
  logic [0:0] RD_50_R1 ;
  logic [0:0] RD_50_X1 ;
  logic [0:0] RD_50_C1 ;
  assign RD_50_R1 = fangyuan0_R [50:50] ;
  assign RD_50_X1 = fangyuan0_X [50:50] ;
  assign RD_50_C1 = fangyuan0_C [50:50] ;
  logic [0:0] RD_49_R1 ;
  logic [0:0] RD_49_X1 ;
  logic [0:0] RD_49_C1 ;
  assign RD_49_R1 = fangyuan0_R [49:49] ;
  assign RD_49_X1 = fangyuan0_X [49:49] ;
  assign RD_49_C1 = fangyuan0_C [49:49] ;
  logic [0:0] RD_48_R1 ;
  logic [0:0] RD_48_X1 ;
  logic [0:0] RD_48_C1 ;
  assign RD_48_R1 = fangyuan0_R [48:48] ;
  assign RD_48_X1 = fangyuan0_X [48:48] ;
  assign RD_48_C1 = fangyuan0_C [48:48] ;
  logic [0:0] RD_47_R1 ;
  logic [0:0] RD_47_X1 ;
  logic [0:0] RD_47_C1 ;
  assign RD_47_R1 = fangyuan0_R [47:47] ;
  assign RD_47_X1 = fangyuan0_X [47:47] ;
  assign RD_47_C1 = fangyuan0_C [47:47] ;
  logic [0:0] RD_46_R1 ;
  logic [0:0] RD_46_X1 ;
  logic [0:0] RD_46_C1 ;
  assign RD_46_R1 = fangyuan0_R [46:46] ;
  assign RD_46_X1 = fangyuan0_X [46:46] ;
  assign RD_46_C1 = fangyuan0_C [46:46] ;
  logic [0:0] RD_45_R1 ;
  logic [0:0] RD_45_X1 ;
  logic [0:0] RD_45_C1 ;
  assign RD_45_R1 = fangyuan0_R [45:45] ;
  assign RD_45_X1 = fangyuan0_X [45:45] ;
  assign RD_45_C1 = fangyuan0_C [45:45] ;
  logic [0:0] RD_44_R1 ;
  logic [0:0] RD_44_X1 ;
  logic [0:0] RD_44_C1 ;
  assign RD_44_R1 = fangyuan0_R [44:44] ;
  assign RD_44_X1 = fangyuan0_X [44:44] ;
  assign RD_44_C1 = fangyuan0_C [44:44] ;
  logic [0:0] RD_43_R1 ;
  logic [0:0] RD_43_X1 ;
  logic [0:0] RD_43_C1 ;
  assign RD_43_R1 = fangyuan0_R [43:43] ;
  assign RD_43_X1 = fangyuan0_X [43:43] ;
  assign RD_43_C1 = fangyuan0_C [43:43] ;
  logic [0:0] RD_42_R1 ;
  logic [0:0] RD_42_X1 ;
  logic [0:0] RD_42_C1 ;
  assign RD_42_R1 = fangyuan0_R [42:42] ;
  assign RD_42_X1 = fangyuan0_X [42:42] ;
  assign RD_42_C1 = fangyuan0_C [42:42] ;
  logic [0:0] RD_41_R1 ;
  logic [0:0] RD_41_X1 ;
  logic [0:0] RD_41_C1 ;
  assign RD_41_R1 = fangyuan0_R [41:41] ;
  assign RD_41_X1 = fangyuan0_X [41:41] ;
  assign RD_41_C1 = fangyuan0_C [41:41] ;
  logic [0:0] RD_40_R1 ;
  logic [0:0] RD_40_X1 ;
  logic [0:0] RD_40_C1 ;
  assign RD_40_R1 = fangyuan0_R [40:40] ;
  assign RD_40_X1 = fangyuan0_X [40:40] ;
  assign RD_40_C1 = fangyuan0_C [40:40] ;
  logic [0:0] RD_39_R1 ;
  logic [0:0] RD_39_X1 ;
  logic [0:0] RD_39_C1 ;
  assign RD_39_R1 = fangyuan0_R [39:39] ;
  assign RD_39_X1 = fangyuan0_X [39:39] ;
  assign RD_39_C1 = fangyuan0_C [39:39] ;
  logic [0:0] RD_38_R1 ;
  logic [0:0] RD_38_X1 ;
  logic [0:0] RD_38_C1 ;
  assign RD_38_R1 = fangyuan0_R [38:38] ;
  assign RD_38_X1 = fangyuan0_X [38:38] ;
  assign RD_38_C1 = fangyuan0_C [38:38] ;
  logic [0:0] RD_37_R1 ;
  logic [0:0] RD_37_X1 ;
  logic [0:0] RD_37_C1 ;
  assign RD_37_R1 = fangyuan0_R [37:37] ;
  assign RD_37_X1 = fangyuan0_X [37:37] ;
  assign RD_37_C1 = fangyuan0_C [37:37] ;
  logic [0:0] RD_36_R1 ;
  logic [0:0] RD_36_X1 ;
  logic [0:0] RD_36_C1 ;
  assign RD_36_R1 = fangyuan0_R [36:36] ;
  assign RD_36_X1 = fangyuan0_X [36:36] ;
  assign RD_36_C1 = fangyuan0_C [36:36] ;
  logic [0:0] RD_35_R1 ;
  logic [0:0] RD_35_X1 ;
  logic [0:0] RD_35_C1 ;
  assign RD_35_R1 = fangyuan0_R [35:35] ;
  assign RD_35_X1 = fangyuan0_X [35:35] ;
  assign RD_35_C1 = fangyuan0_C [35:35] ;
  logic [0:0] RD_34_R1 ;
  logic [0:0] RD_34_X1 ;
  logic [0:0] RD_34_C1 ;
  assign RD_34_R1 = fangyuan0_R [34:34] ;
  assign RD_34_X1 = fangyuan0_X [34:34] ;
  assign RD_34_C1 = fangyuan0_C [34:34] ;
  logic [0:0] RD_33_R1 ;
  logic [0:0] RD_33_X1 ;
  logic [0:0] RD_33_C1 ;
  assign RD_33_R1 = fangyuan0_R [33:33] ;
  assign RD_33_X1 = fangyuan0_X [33:33] ;
  assign RD_33_C1 = fangyuan0_C [33:33] ;
  logic [0:0] RD_32_R1 ;
  logic [0:0] RD_32_X1 ;
  logic [0:0] RD_32_C1 ;
  assign RD_32_R1 = fangyuan0_R [32:32] ;
  assign RD_32_X1 = fangyuan0_X [32:32] ;
  assign RD_32_C1 = fangyuan0_C [32:32] ;
  logic [0:0] RD_31_R1 ;
  logic [0:0] RD_31_X1 ;
  logic [0:0] RD_31_C1 ;
  assign RD_31_R1 = fangyuan0_R [31:31] ;
  assign RD_31_X1 = fangyuan0_X [31:31] ;
  assign RD_31_C1 = fangyuan0_C [31:31] ;
  logic [0:0] RD_30_R1 ;
  logic [0:0] RD_30_X1 ;
  logic [0:0] RD_30_C1 ;
  assign RD_30_R1 = fangyuan0_R [30:30] ;
  assign RD_30_X1 = fangyuan0_X [30:30] ;
  assign RD_30_C1 = fangyuan0_C [30:30] ;
  logic [0:0] RD_29_R1 ;
  logic [0:0] RD_29_X1 ;
  logic [0:0] RD_29_C1 ;
  assign RD_29_R1 = fangyuan0_R [29:29] ;
  assign RD_29_X1 = fangyuan0_X [29:29] ;
  assign RD_29_C1 = fangyuan0_C [29:29] ;
  logic [0:0] RD_28_R1 ;
  logic [0:0] RD_28_X1 ;
  logic [0:0] RD_28_C1 ;
  assign RD_28_R1 = fangyuan0_R [28:28] ;
  assign RD_28_X1 = fangyuan0_X [28:28] ;
  assign RD_28_C1 = fangyuan0_C [28:28] ;
  logic [0:0] RD_27_R1 ;
  logic [0:0] RD_27_X1 ;
  logic [0:0] RD_27_C1 ;
  assign RD_27_R1 = fangyuan0_R [27:27] ;
  assign RD_27_X1 = fangyuan0_X [27:27] ;
  assign RD_27_C1 = fangyuan0_C [27:27] ;
  logic [0:0] RD_26_R1 ;
  logic [0:0] RD_26_X1 ;
  logic [0:0] RD_26_C1 ;
  assign RD_26_R1 = fangyuan0_R [26:26] ;
  assign RD_26_X1 = fangyuan0_X [26:26] ;
  assign RD_26_C1 = fangyuan0_C [26:26] ;
  logic [0:0] RD_25_R1 ;
  logic [0:0] RD_25_X1 ;
  logic [0:0] RD_25_C1 ;
  assign RD_25_R1 = fangyuan0_R [25:25] ;
  assign RD_25_X1 = fangyuan0_X [25:25] ;
  assign RD_25_C1 = fangyuan0_C [25:25] ;
  logic [0:0] RD_24_R1 ;
  logic [0:0] RD_24_X1 ;
  logic [0:0] RD_24_C1 ;
  assign RD_24_R1 = fangyuan0_R [24:24] ;
  assign RD_24_X1 = fangyuan0_X [24:24] ;
  assign RD_24_C1 = fangyuan0_C [24:24] ;
  logic [0:0] RD_23_R1 ;
  logic [0:0] RD_23_X1 ;
  logic [0:0] RD_23_C1 ;
  assign RD_23_R1 = fangyuan0_R [23:23] ;
  assign RD_23_X1 = fangyuan0_X [23:23] ;
  assign RD_23_C1 = fangyuan0_C [23:23] ;
  logic [0:0] RD_22_R1 ;
  logic [0:0] RD_22_X1 ;
  logic [0:0] RD_22_C1 ;
  assign RD_22_R1 = fangyuan0_R [22:22] ;
  assign RD_22_X1 = fangyuan0_X [22:22] ;
  assign RD_22_C1 = fangyuan0_C [22:22] ;
  logic [0:0] RD_21_R1 ;
  logic [0:0] RD_21_X1 ;
  logic [0:0] RD_21_C1 ;
  assign RD_21_R1 = fangyuan0_R [21:21] ;
  assign RD_21_X1 = fangyuan0_X [21:21] ;
  assign RD_21_C1 = fangyuan0_C [21:21] ;
  logic [0:0] RD_20_R1 ;
  logic [0:0] RD_20_X1 ;
  logic [0:0] RD_20_C1 ;
  assign RD_20_R1 = fangyuan0_R [20:20] ;
  assign RD_20_X1 = fangyuan0_X [20:20] ;
  assign RD_20_C1 = fangyuan0_C [20:20] ;
  logic [0:0] RD_19_R1 ;
  logic [0:0] RD_19_X1 ;
  logic [0:0] RD_19_C1 ;
  assign RD_19_R1 = fangyuan0_R [19:19] ;
  assign RD_19_X1 = fangyuan0_X [19:19] ;
  assign RD_19_C1 = fangyuan0_C [19:19] ;
  logic [0:0] RD_18_R1 ;
  logic [0:0] RD_18_X1 ;
  logic [0:0] RD_18_C1 ;
  assign RD_18_R1 = fangyuan0_R [18:18] ;
  assign RD_18_X1 = fangyuan0_X [18:18] ;
  assign RD_18_C1 = fangyuan0_C [18:18] ;
  logic [0:0] RD_17_R1 ;
  logic [0:0] RD_17_X1 ;
  logic [0:0] RD_17_C1 ;
  assign RD_17_R1 = fangyuan0_R [17:17] ;
  assign RD_17_X1 = fangyuan0_X [17:17] ;
  assign RD_17_C1 = fangyuan0_C [17:17] ;
  logic [0:0] RD_16_R1 ;
  logic [0:0] RD_16_X1 ;
  logic [0:0] RD_16_C1 ;
  assign RD_16_R1 = fangyuan0_R [16:16] ;
  assign RD_16_X1 = fangyuan0_X [16:16] ;
  assign RD_16_C1 = fangyuan0_C [16:16] ;
  logic [0:0] RD_15_R1 ;
  logic [0:0] RD_15_X1 ;
  logic [0:0] RD_15_C1 ;
  assign RD_15_R1 = fangyuan0_R [15:15] ;
  assign RD_15_X1 = fangyuan0_X [15:15] ;
  assign RD_15_C1 = fangyuan0_C [15:15] ;
  logic [0:0] RD_14_R1 ;
  logic [0:0] RD_14_X1 ;
  logic [0:0] RD_14_C1 ;
  assign RD_14_R1 = fangyuan0_R [14:14] ;
  assign RD_14_X1 = fangyuan0_X [14:14] ;
  assign RD_14_C1 = fangyuan0_C [14:14] ;
  logic [0:0] RD_13_R1 ;
  logic [0:0] RD_13_X1 ;
  logic [0:0] RD_13_C1 ;
  assign RD_13_R1 = fangyuan0_R [13:13] ;
  assign RD_13_X1 = fangyuan0_X [13:13] ;
  assign RD_13_C1 = fangyuan0_C [13:13] ;
  logic [0:0] RD_12_R1 ;
  logic [0:0] RD_12_X1 ;
  logic [0:0] RD_12_C1 ;
  assign RD_12_R1 = fangyuan0_R [12:12] ;
  assign RD_12_X1 = fangyuan0_X [12:12] ;
  assign RD_12_C1 = fangyuan0_C [12:12] ;
  logic [0:0] RD_11_R1 ;
  logic [0:0] RD_11_X1 ;
  logic [0:0] RD_11_C1 ;
  assign RD_11_R1 = fangyuan0_R [11:11] ;
  assign RD_11_X1 = fangyuan0_X [11:11] ;
  assign RD_11_C1 = fangyuan0_C [11:11] ;
  logic [0:0] RD_10_R1 ;
  logic [0:0] RD_10_X1 ;
  logic [0:0] RD_10_C1 ;
  assign RD_10_R1 = fangyuan0_R [10:10] ;
  assign RD_10_X1 = fangyuan0_X [10:10] ;
  assign RD_10_C1 = fangyuan0_C [10:10] ;
  logic [0:0] RD_9_R1 ;
  logic [0:0] RD_9_X1 ;
  logic [0:0] RD_9_C1 ;
  assign RD_9_R1 = fangyuan0_R [9:9] ;
  assign RD_9_X1 = fangyuan0_X [9:9] ;
  assign RD_9_C1 = fangyuan0_C [9:9] ;
  logic [0:0] RD_8_R1 ;
  logic [0:0] RD_8_X1 ;
  logic [0:0] RD_8_C1 ;
  assign RD_8_R1 = fangyuan0_R [8:8] ;
  assign RD_8_X1 = fangyuan0_X [8:8] ;
  assign RD_8_C1 = fangyuan0_C [8:8] ;
  logic [0:0] RD_7_R1 ;
  logic [0:0] RD_7_X1 ;
  logic [0:0] RD_7_C1 ;
  assign RD_7_R1 = fangyuan0_R [7:7] ;
  assign RD_7_X1 = fangyuan0_X [7:7] ;
  assign RD_7_C1 = fangyuan0_C [7:7] ;
  logic [0:0] RD_6_R1 ;
  logic [0:0] RD_6_X1 ;
  logic [0:0] RD_6_C1 ;
  assign RD_6_R1 = fangyuan0_R [6:6] ;
  assign RD_6_X1 = fangyuan0_X [6:6] ;
  assign RD_6_C1 = fangyuan0_C [6:6] ;
  logic [0:0] RD_5_R1 ;
  logic [0:0] RD_5_X1 ;
  logic [0:0] RD_5_C1 ;
  assign RD_5_R1 = fangyuan0_R [5:5] ;
  assign RD_5_X1 = fangyuan0_X [5:5] ;
  assign RD_5_C1 = fangyuan0_C [5:5] ;
  logic [0:0] RD_4_R1 ;
  logic [0:0] RD_4_X1 ;
  logic [0:0] RD_4_C1 ;
  assign RD_4_R1 = fangyuan0_R [4:4] ;
  assign RD_4_X1 = fangyuan0_X [4:4] ;
  assign RD_4_C1 = fangyuan0_C [4:4] ;
  logic [0:0] RD_3_R1 ;
  logic [0:0] RD_3_X1 ;
  logic [0:0] RD_3_C1 ;
  assign RD_3_R1 = fangyuan0_R [3:3] ;
  assign RD_3_X1 = fangyuan0_X [3:3] ;
  assign RD_3_C1 = fangyuan0_C [3:3] ;
  logic [0:0] RD_2_R1 ;
  logic [0:0] RD_2_X1 ;
  logic [0:0] RD_2_C1 ;
  assign RD_2_R1 = fangyuan0_R [2:2] ;
  assign RD_2_X1 = fangyuan0_X [2:2] ;
  assign RD_2_C1 = fangyuan0_C [2:2] ;
  logic [0:0] RD_1_R1 ;
  logic [0:0] RD_1_X1 ;
  logic [0:0] RD_1_C1 ;
  assign RD_1_R1 = fangyuan0_R [1:1] ;
  assign RD_1_X1 = fangyuan0_X [1:1] ;
  assign RD_1_C1 = fangyuan0_C [1:1] ;
  logic [0:0] RD_0_R1 ;
  logic [0:0] RD_0_X1 ;
  logic [0:0] RD_0_C1 ;
  assign RD_0_R1 = fangyuan0_R [0:0] ;
  assign RD_0_X1 = fangyuan0_X [0:0] ;
  assign RD_0_C1 = fangyuan0_C [0:0] ;

  assign fangyuan0 = RD & _0_;
  assign fangyuan0_S = 0 ;
  logic [81:0] RD_C0 ;
  logic [81:0] RD_R0 ;
  logic [81:0] RD_X0 ;
  logic [81:0] _0__C0 ;
  logic [81:0] _0__R0 ;
  logic [81:0] _0__X0 ;
  assign fangyuan0_T = RD_T | _0__T ;
  assign RD_C0 = fangyuan0_C ;
  assign RD_X0 = fangyuan0_X ;
  assign _0__C0 = fangyuan0_C ;
  assign _0__X0 = fangyuan0_X ;
  assign RD_R0 = ( fangyuan0_R | fangyuan0_C & _0__T ) & { 82{ _0_ != 0 }} ;
  assign _0__R0 = ( fangyuan0_R | fangyuan0_C & RD_T ) & { 82{ RD != 0 }} ;
  logic [81:0] fangyuan1;
  logic [81:0] fangyuan1_T ;
  logic [81:0] fangyuan1_R ;
  logic [81:0] fangyuan1_C ;
  logic [81:0] fangyuan1_X ;
  assign fangyuan1 = {};
  assign fangyuan1_T = {};
  logic [13:0] fangyuan1_S ;
  assign fangyuan1_S = 0 ;
  logic [0:0] SLEEP_EN_7_R0 ;
  logic [0:0] SLEEP_EN_7_X0 ;
  logic [0:0] SLEEP_EN_7_C0 ;
  assign SLEEP_EN_7_R0 = fangyuan1_R [81:81] ;
  assign SLEEP_EN_7_X0 = fangyuan1_X [81:81] ;
  assign SLEEP_EN_7_C0 = fangyuan1_C [81:81] ;
  logic [0:0] SLEEP_EN_7_R1 ;
  logic [0:0] SLEEP_EN_7_X1 ;
  logic [0:0] SLEEP_EN_7_C1 ;
  assign SLEEP_EN_7_R1 = fangyuan1_R [80:80] ;
  assign SLEEP_EN_7_X1 = fangyuan1_X [80:80] ;
  assign SLEEP_EN_7_C1 = fangyuan1_C [80:80] ;
  logic [0:0] SLEEP_EN_7_R2 ;
  logic [0:0] SLEEP_EN_7_X2 ;
  logic [0:0] SLEEP_EN_7_C2 ;
  assign SLEEP_EN_7_R2 = fangyuan1_R [79:79] ;
  assign SLEEP_EN_7_X2 = fangyuan1_X [79:79] ;
  assign SLEEP_EN_7_C2 = fangyuan1_C [79:79] ;
  logic [0:0] SLEEP_EN_7_R3 ;
  logic [0:0] SLEEP_EN_7_X3 ;
  logic [0:0] SLEEP_EN_7_C3 ;
  assign SLEEP_EN_7_R3 = fangyuan1_R [78:78] ;
  assign SLEEP_EN_7_X3 = fangyuan1_X [78:78] ;
  assign SLEEP_EN_7_C3 = fangyuan1_C [78:78] ;
  logic [0:0] SLEEP_EN_7_R4 ;
  logic [0:0] SLEEP_EN_7_X4 ;
  logic [0:0] SLEEP_EN_7_C4 ;
  assign SLEEP_EN_7_R4 = fangyuan1_R [77:77] ;
  assign SLEEP_EN_7_X4 = fangyuan1_X [77:77] ;
  assign SLEEP_EN_7_C4 = fangyuan1_C [77:77] ;
  logic [0:0] SLEEP_EN_7_R5 ;
  logic [0:0] SLEEP_EN_7_X5 ;
  logic [0:0] SLEEP_EN_7_C5 ;
  assign SLEEP_EN_7_R5 = fangyuan1_R [76:76] ;
  assign SLEEP_EN_7_X5 = fangyuan1_X [76:76] ;
  assign SLEEP_EN_7_C5 = fangyuan1_C [76:76] ;
  logic [0:0] SLEEP_EN_7_R6 ;
  logic [0:0] SLEEP_EN_7_X6 ;
  logic [0:0] SLEEP_EN_7_C6 ;
  assign SLEEP_EN_7_R6 = fangyuan1_R [75:75] ;
  assign SLEEP_EN_7_X6 = fangyuan1_X [75:75] ;
  assign SLEEP_EN_7_C6 = fangyuan1_C [75:75] ;
  logic [0:0] SLEEP_EN_7_R7 ;
  logic [0:0] SLEEP_EN_7_X7 ;
  logic [0:0] SLEEP_EN_7_C7 ;
  assign SLEEP_EN_7_R7 = fangyuan1_R [74:74] ;
  assign SLEEP_EN_7_X7 = fangyuan1_X [74:74] ;
  assign SLEEP_EN_7_C7 = fangyuan1_C [74:74] ;
  logic [0:0] SLEEP_EN_7_R8 ;
  logic [0:0] SLEEP_EN_7_X8 ;
  logic [0:0] SLEEP_EN_7_C8 ;
  assign SLEEP_EN_7_R8 = fangyuan1_R [73:73] ;
  assign SLEEP_EN_7_X8 = fangyuan1_X [73:73] ;
  assign SLEEP_EN_7_C8 = fangyuan1_C [73:73] ;
  logic [0:0] SLEEP_EN_7_R9 ;
  logic [0:0] SLEEP_EN_7_X9 ;
  logic [0:0] SLEEP_EN_7_C9 ;
  assign SLEEP_EN_7_R9 = fangyuan1_R [72:72] ;
  assign SLEEP_EN_7_X9 = fangyuan1_X [72:72] ;
  assign SLEEP_EN_7_C9 = fangyuan1_C [72:72] ;
  logic [0:0] SLEEP_EN_7_R10 ;
  logic [0:0] SLEEP_EN_7_X10 ;
  logic [0:0] SLEEP_EN_7_C10 ;
  assign SLEEP_EN_7_R10 = fangyuan1_R [71:71] ;
  assign SLEEP_EN_7_X10 = fangyuan1_X [71:71] ;
  assign SLEEP_EN_7_C10 = fangyuan1_C [71:71] ;
  logic [0:0] SLEEP_EN_7_R11 ;
  logic [0:0] SLEEP_EN_7_X11 ;
  logic [0:0] SLEEP_EN_7_C11 ;
  assign SLEEP_EN_7_R11 = fangyuan1_R [70:70] ;
  assign SLEEP_EN_7_X11 = fangyuan1_X [70:70] ;
  assign SLEEP_EN_7_C11 = fangyuan1_C [70:70] ;
  logic [0:0] SLEEP_EN_7_R12 ;
  logic [0:0] SLEEP_EN_7_X12 ;
  logic [0:0] SLEEP_EN_7_C12 ;
  assign SLEEP_EN_7_R12 = fangyuan1_R [69:69] ;
  assign SLEEP_EN_7_X12 = fangyuan1_X [69:69] ;
  assign SLEEP_EN_7_C12 = fangyuan1_C [69:69] ;
  logic [0:0] SLEEP_EN_7_R13 ;
  logic [0:0] SLEEP_EN_7_X13 ;
  logic [0:0] SLEEP_EN_7_C13 ;
  assign SLEEP_EN_7_R13 = fangyuan1_R [68:68] ;
  assign SLEEP_EN_7_X13 = fangyuan1_X [68:68] ;
  assign SLEEP_EN_7_C13 = fangyuan1_C [68:68] ;
  logic [0:0] SLEEP_EN_7_R14 ;
  logic [0:0] SLEEP_EN_7_X14 ;
  logic [0:0] SLEEP_EN_7_C14 ;
  assign SLEEP_EN_7_R14 = fangyuan1_R [67:67] ;
  assign SLEEP_EN_7_X14 = fangyuan1_X [67:67] ;
  assign SLEEP_EN_7_C14 = fangyuan1_C [67:67] ;
  logic [0:0] SLEEP_EN_7_R15 ;
  logic [0:0] SLEEP_EN_7_X15 ;
  logic [0:0] SLEEP_EN_7_C15 ;
  assign SLEEP_EN_7_R15 = fangyuan1_R [66:66] ;
  assign SLEEP_EN_7_X15 = fangyuan1_X [66:66] ;
  assign SLEEP_EN_7_C15 = fangyuan1_C [66:66] ;
  logic [0:0] SLEEP_EN_7_R16 ;
  logic [0:0] SLEEP_EN_7_X16 ;
  logic [0:0] SLEEP_EN_7_C16 ;
  assign SLEEP_EN_7_R16 = fangyuan1_R [65:65] ;
  assign SLEEP_EN_7_X16 = fangyuan1_X [65:65] ;
  assign SLEEP_EN_7_C16 = fangyuan1_C [65:65] ;
  logic [0:0] SLEEP_EN_7_R17 ;
  logic [0:0] SLEEP_EN_7_X17 ;
  logic [0:0] SLEEP_EN_7_C17 ;
  assign SLEEP_EN_7_R17 = fangyuan1_R [64:64] ;
  assign SLEEP_EN_7_X17 = fangyuan1_X [64:64] ;
  assign SLEEP_EN_7_C17 = fangyuan1_C [64:64] ;
  logic [0:0] SLEEP_EN_7_R18 ;
  logic [0:0] SLEEP_EN_7_X18 ;
  logic [0:0] SLEEP_EN_7_C18 ;
  assign SLEEP_EN_7_R18 = fangyuan1_R [63:63] ;
  assign SLEEP_EN_7_X18 = fangyuan1_X [63:63] ;
  assign SLEEP_EN_7_C18 = fangyuan1_C [63:63] ;
  logic [0:0] SLEEP_EN_7_R19 ;
  logic [0:0] SLEEP_EN_7_X19 ;
  logic [0:0] SLEEP_EN_7_C19 ;
  assign SLEEP_EN_7_R19 = fangyuan1_R [62:62] ;
  assign SLEEP_EN_7_X19 = fangyuan1_X [62:62] ;
  assign SLEEP_EN_7_C19 = fangyuan1_C [62:62] ;
  logic [0:0] SLEEP_EN_7_R20 ;
  logic [0:0] SLEEP_EN_7_X20 ;
  logic [0:0] SLEEP_EN_7_C20 ;
  assign SLEEP_EN_7_R20 = fangyuan1_R [61:61] ;
  assign SLEEP_EN_7_X20 = fangyuan1_X [61:61] ;
  assign SLEEP_EN_7_C20 = fangyuan1_C [61:61] ;
  logic [0:0] SLEEP_EN_7_R21 ;
  logic [0:0] SLEEP_EN_7_X21 ;
  logic [0:0] SLEEP_EN_7_C21 ;
  assign SLEEP_EN_7_R21 = fangyuan1_R [60:60] ;
  assign SLEEP_EN_7_X21 = fangyuan1_X [60:60] ;
  assign SLEEP_EN_7_C21 = fangyuan1_C [60:60] ;
  logic [0:0] SLEEP_EN_7_R22 ;
  logic [0:0] SLEEP_EN_7_X22 ;
  logic [0:0] SLEEP_EN_7_C22 ;
  assign SLEEP_EN_7_R22 = fangyuan1_R [59:59] ;
  assign SLEEP_EN_7_X22 = fangyuan1_X [59:59] ;
  assign SLEEP_EN_7_C22 = fangyuan1_C [59:59] ;
  logic [0:0] SLEEP_EN_7_R23 ;
  logic [0:0] SLEEP_EN_7_X23 ;
  logic [0:0] SLEEP_EN_7_C23 ;
  assign SLEEP_EN_7_R23 = fangyuan1_R [58:58] ;
  assign SLEEP_EN_7_X23 = fangyuan1_X [58:58] ;
  assign SLEEP_EN_7_C23 = fangyuan1_C [58:58] ;
  logic [0:0] SLEEP_EN_7_R24 ;
  logic [0:0] SLEEP_EN_7_X24 ;
  logic [0:0] SLEEP_EN_7_C24 ;
  assign SLEEP_EN_7_R24 = fangyuan1_R [57:57] ;
  assign SLEEP_EN_7_X24 = fangyuan1_X [57:57] ;
  assign SLEEP_EN_7_C24 = fangyuan1_C [57:57] ;
  logic [0:0] SLEEP_EN_7_R25 ;
  logic [0:0] SLEEP_EN_7_X25 ;
  logic [0:0] SLEEP_EN_7_C25 ;
  assign SLEEP_EN_7_R25 = fangyuan1_R [56:56] ;
  assign SLEEP_EN_7_X25 = fangyuan1_X [56:56] ;
  assign SLEEP_EN_7_C25 = fangyuan1_C [56:56] ;
  logic [0:0] SLEEP_EN_7_R26 ;
  logic [0:0] SLEEP_EN_7_X26 ;
  logic [0:0] SLEEP_EN_7_C26 ;
  assign SLEEP_EN_7_R26 = fangyuan1_R [55:55] ;
  assign SLEEP_EN_7_X26 = fangyuan1_X [55:55] ;
  assign SLEEP_EN_7_C26 = fangyuan1_C [55:55] ;
  logic [0:0] SLEEP_EN_7_R27 ;
  logic [0:0] SLEEP_EN_7_X27 ;
  logic [0:0] SLEEP_EN_7_C27 ;
  assign SLEEP_EN_7_R27 = fangyuan1_R [54:54] ;
  assign SLEEP_EN_7_X27 = fangyuan1_X [54:54] ;
  assign SLEEP_EN_7_C27 = fangyuan1_C [54:54] ;
  logic [0:0] SLEEP_EN_7_R28 ;
  logic [0:0] SLEEP_EN_7_X28 ;
  logic [0:0] SLEEP_EN_7_C28 ;
  assign SLEEP_EN_7_R28 = fangyuan1_R [53:53] ;
  assign SLEEP_EN_7_X28 = fangyuan1_X [53:53] ;
  assign SLEEP_EN_7_C28 = fangyuan1_C [53:53] ;
  logic [0:0] SLEEP_EN_7_R29 ;
  logic [0:0] SLEEP_EN_7_X29 ;
  logic [0:0] SLEEP_EN_7_C29 ;
  assign SLEEP_EN_7_R29 = fangyuan1_R [52:52] ;
  assign SLEEP_EN_7_X29 = fangyuan1_X [52:52] ;
  assign SLEEP_EN_7_C29 = fangyuan1_C [52:52] ;
  logic [0:0] SLEEP_EN_7_R30 ;
  logic [0:0] SLEEP_EN_7_X30 ;
  logic [0:0] SLEEP_EN_7_C30 ;
  assign SLEEP_EN_7_R30 = fangyuan1_R [51:51] ;
  assign SLEEP_EN_7_X30 = fangyuan1_X [51:51] ;
  assign SLEEP_EN_7_C30 = fangyuan1_C [51:51] ;
  logic [0:0] SLEEP_EN_7_R31 ;
  logic [0:0] SLEEP_EN_7_X31 ;
  logic [0:0] SLEEP_EN_7_C31 ;
  assign SLEEP_EN_7_R31 = fangyuan1_R [50:50] ;
  assign SLEEP_EN_7_X31 = fangyuan1_X [50:50] ;
  assign SLEEP_EN_7_C31 = fangyuan1_C [50:50] ;
  logic [0:0] SLEEP_EN_7_R32 ;
  logic [0:0] SLEEP_EN_7_X32 ;
  logic [0:0] SLEEP_EN_7_C32 ;
  assign SLEEP_EN_7_R32 = fangyuan1_R [49:49] ;
  assign SLEEP_EN_7_X32 = fangyuan1_X [49:49] ;
  assign SLEEP_EN_7_C32 = fangyuan1_C [49:49] ;
  logic [0:0] SLEEP_EN_7_R33 ;
  logic [0:0] SLEEP_EN_7_X33 ;
  logic [0:0] SLEEP_EN_7_C33 ;
  assign SLEEP_EN_7_R33 = fangyuan1_R [48:48] ;
  assign SLEEP_EN_7_X33 = fangyuan1_X [48:48] ;
  assign SLEEP_EN_7_C33 = fangyuan1_C [48:48] ;
  logic [0:0] SLEEP_EN_7_R34 ;
  logic [0:0] SLEEP_EN_7_X34 ;
  logic [0:0] SLEEP_EN_7_C34 ;
  assign SLEEP_EN_7_R34 = fangyuan1_R [47:47] ;
  assign SLEEP_EN_7_X34 = fangyuan1_X [47:47] ;
  assign SLEEP_EN_7_C34 = fangyuan1_C [47:47] ;
  logic [0:0] SLEEP_EN_7_R35 ;
  logic [0:0] SLEEP_EN_7_X35 ;
  logic [0:0] SLEEP_EN_7_C35 ;
  assign SLEEP_EN_7_R35 = fangyuan1_R [46:46] ;
  assign SLEEP_EN_7_X35 = fangyuan1_X [46:46] ;
  assign SLEEP_EN_7_C35 = fangyuan1_C [46:46] ;
  logic [0:0] SLEEP_EN_7_R36 ;
  logic [0:0] SLEEP_EN_7_X36 ;
  logic [0:0] SLEEP_EN_7_C36 ;
  assign SLEEP_EN_7_R36 = fangyuan1_R [45:45] ;
  assign SLEEP_EN_7_X36 = fangyuan1_X [45:45] ;
  assign SLEEP_EN_7_C36 = fangyuan1_C [45:45] ;
  logic [0:0] SLEEP_EN_7_R37 ;
  logic [0:0] SLEEP_EN_7_X37 ;
  logic [0:0] SLEEP_EN_7_C37 ;
  assign SLEEP_EN_7_R37 = fangyuan1_R [44:44] ;
  assign SLEEP_EN_7_X37 = fangyuan1_X [44:44] ;
  assign SLEEP_EN_7_C37 = fangyuan1_C [44:44] ;
  logic [0:0] SLEEP_EN_7_R38 ;
  logic [0:0] SLEEP_EN_7_X38 ;
  logic [0:0] SLEEP_EN_7_C38 ;
  assign SLEEP_EN_7_R38 = fangyuan1_R [43:43] ;
  assign SLEEP_EN_7_X38 = fangyuan1_X [43:43] ;
  assign SLEEP_EN_7_C38 = fangyuan1_C [43:43] ;
  logic [0:0] SLEEP_EN_7_R39 ;
  logic [0:0] SLEEP_EN_7_X39 ;
  logic [0:0] SLEEP_EN_7_C39 ;
  assign SLEEP_EN_7_R39 = fangyuan1_R [42:42] ;
  assign SLEEP_EN_7_X39 = fangyuan1_X [42:42] ;
  assign SLEEP_EN_7_C39 = fangyuan1_C [42:42] ;
  logic [0:0] SLEEP_EN_7_R40 ;
  logic [0:0] SLEEP_EN_7_X40 ;
  logic [0:0] SLEEP_EN_7_C40 ;
  assign SLEEP_EN_7_R40 = fangyuan1_R [41:41] ;
  assign SLEEP_EN_7_X40 = fangyuan1_X [41:41] ;
  assign SLEEP_EN_7_C40 = fangyuan1_C [41:41] ;
  logic [0:0] SLEEP_EN_7_R41 ;
  logic [0:0] SLEEP_EN_7_X41 ;
  logic [0:0] SLEEP_EN_7_C41 ;
  assign SLEEP_EN_7_R41 = fangyuan1_R [40:40] ;
  assign SLEEP_EN_7_X41 = fangyuan1_X [40:40] ;
  assign SLEEP_EN_7_C41 = fangyuan1_C [40:40] ;
  logic [0:0] SLEEP_EN_7_R42 ;
  logic [0:0] SLEEP_EN_7_X42 ;
  logic [0:0] SLEEP_EN_7_C42 ;
  assign SLEEP_EN_7_R42 = fangyuan1_R [39:39] ;
  assign SLEEP_EN_7_X42 = fangyuan1_X [39:39] ;
  assign SLEEP_EN_7_C42 = fangyuan1_C [39:39] ;
  logic [0:0] SLEEP_EN_7_R43 ;
  logic [0:0] SLEEP_EN_7_X43 ;
  logic [0:0] SLEEP_EN_7_C43 ;
  assign SLEEP_EN_7_R43 = fangyuan1_R [38:38] ;
  assign SLEEP_EN_7_X43 = fangyuan1_X [38:38] ;
  assign SLEEP_EN_7_C43 = fangyuan1_C [38:38] ;
  logic [0:0] SLEEP_EN_7_R44 ;
  logic [0:0] SLEEP_EN_7_X44 ;
  logic [0:0] SLEEP_EN_7_C44 ;
  assign SLEEP_EN_7_R44 = fangyuan1_R [37:37] ;
  assign SLEEP_EN_7_X44 = fangyuan1_X [37:37] ;
  assign SLEEP_EN_7_C44 = fangyuan1_C [37:37] ;
  logic [0:0] SLEEP_EN_7_R45 ;
  logic [0:0] SLEEP_EN_7_X45 ;
  logic [0:0] SLEEP_EN_7_C45 ;
  assign SLEEP_EN_7_R45 = fangyuan1_R [36:36] ;
  assign SLEEP_EN_7_X45 = fangyuan1_X [36:36] ;
  assign SLEEP_EN_7_C45 = fangyuan1_C [36:36] ;
  logic [0:0] SLEEP_EN_7_R46 ;
  logic [0:0] SLEEP_EN_7_X46 ;
  logic [0:0] SLEEP_EN_7_C46 ;
  assign SLEEP_EN_7_R46 = fangyuan1_R [35:35] ;
  assign SLEEP_EN_7_X46 = fangyuan1_X [35:35] ;
  assign SLEEP_EN_7_C46 = fangyuan1_C [35:35] ;
  logic [0:0] SLEEP_EN_7_R47 ;
  logic [0:0] SLEEP_EN_7_X47 ;
  logic [0:0] SLEEP_EN_7_C47 ;
  assign SLEEP_EN_7_R47 = fangyuan1_R [34:34] ;
  assign SLEEP_EN_7_X47 = fangyuan1_X [34:34] ;
  assign SLEEP_EN_7_C47 = fangyuan1_C [34:34] ;
  logic [0:0] SLEEP_EN_7_R48 ;
  logic [0:0] SLEEP_EN_7_X48 ;
  logic [0:0] SLEEP_EN_7_C48 ;
  assign SLEEP_EN_7_R48 = fangyuan1_R [33:33] ;
  assign SLEEP_EN_7_X48 = fangyuan1_X [33:33] ;
  assign SLEEP_EN_7_C48 = fangyuan1_C [33:33] ;
  logic [0:0] SLEEP_EN_7_R49 ;
  logic [0:0] SLEEP_EN_7_X49 ;
  logic [0:0] SLEEP_EN_7_C49 ;
  assign SLEEP_EN_7_R49 = fangyuan1_R [32:32] ;
  assign SLEEP_EN_7_X49 = fangyuan1_X [32:32] ;
  assign SLEEP_EN_7_C49 = fangyuan1_C [32:32] ;
  logic [0:0] SLEEP_EN_7_R50 ;
  logic [0:0] SLEEP_EN_7_X50 ;
  logic [0:0] SLEEP_EN_7_C50 ;
  assign SLEEP_EN_7_R50 = fangyuan1_R [31:31] ;
  assign SLEEP_EN_7_X50 = fangyuan1_X [31:31] ;
  assign SLEEP_EN_7_C50 = fangyuan1_C [31:31] ;
  logic [0:0] SLEEP_EN_7_R51 ;
  logic [0:0] SLEEP_EN_7_X51 ;
  logic [0:0] SLEEP_EN_7_C51 ;
  assign SLEEP_EN_7_R51 = fangyuan1_R [30:30] ;
  assign SLEEP_EN_7_X51 = fangyuan1_X [30:30] ;
  assign SLEEP_EN_7_C51 = fangyuan1_C [30:30] ;
  logic [0:0] SLEEP_EN_7_R52 ;
  logic [0:0] SLEEP_EN_7_X52 ;
  logic [0:0] SLEEP_EN_7_C52 ;
  assign SLEEP_EN_7_R52 = fangyuan1_R [29:29] ;
  assign SLEEP_EN_7_X52 = fangyuan1_X [29:29] ;
  assign SLEEP_EN_7_C52 = fangyuan1_C [29:29] ;
  logic [0:0] SLEEP_EN_7_R53 ;
  logic [0:0] SLEEP_EN_7_X53 ;
  logic [0:0] SLEEP_EN_7_C53 ;
  assign SLEEP_EN_7_R53 = fangyuan1_R [28:28] ;
  assign SLEEP_EN_7_X53 = fangyuan1_X [28:28] ;
  assign SLEEP_EN_7_C53 = fangyuan1_C [28:28] ;
  logic [0:0] SLEEP_EN_7_R54 ;
  logic [0:0] SLEEP_EN_7_X54 ;
  logic [0:0] SLEEP_EN_7_C54 ;
  assign SLEEP_EN_7_R54 = fangyuan1_R [27:27] ;
  assign SLEEP_EN_7_X54 = fangyuan1_X [27:27] ;
  assign SLEEP_EN_7_C54 = fangyuan1_C [27:27] ;
  logic [0:0] SLEEP_EN_7_R55 ;
  logic [0:0] SLEEP_EN_7_X55 ;
  logic [0:0] SLEEP_EN_7_C55 ;
  assign SLEEP_EN_7_R55 = fangyuan1_R [26:26] ;
  assign SLEEP_EN_7_X55 = fangyuan1_X [26:26] ;
  assign SLEEP_EN_7_C55 = fangyuan1_C [26:26] ;
  logic [0:0] SLEEP_EN_7_R56 ;
  logic [0:0] SLEEP_EN_7_X56 ;
  logic [0:0] SLEEP_EN_7_C56 ;
  assign SLEEP_EN_7_R56 = fangyuan1_R [25:25] ;
  assign SLEEP_EN_7_X56 = fangyuan1_X [25:25] ;
  assign SLEEP_EN_7_C56 = fangyuan1_C [25:25] ;
  logic [0:0] SLEEP_EN_7_R57 ;
  logic [0:0] SLEEP_EN_7_X57 ;
  logic [0:0] SLEEP_EN_7_C57 ;
  assign SLEEP_EN_7_R57 = fangyuan1_R [24:24] ;
  assign SLEEP_EN_7_X57 = fangyuan1_X [24:24] ;
  assign SLEEP_EN_7_C57 = fangyuan1_C [24:24] ;
  logic [0:0] SLEEP_EN_7_R58 ;
  logic [0:0] SLEEP_EN_7_X58 ;
  logic [0:0] SLEEP_EN_7_C58 ;
  assign SLEEP_EN_7_R58 = fangyuan1_R [23:23] ;
  assign SLEEP_EN_7_X58 = fangyuan1_X [23:23] ;
  assign SLEEP_EN_7_C58 = fangyuan1_C [23:23] ;
  logic [0:0] SLEEP_EN_7_R59 ;
  logic [0:0] SLEEP_EN_7_X59 ;
  logic [0:0] SLEEP_EN_7_C59 ;
  assign SLEEP_EN_7_R59 = fangyuan1_R [22:22] ;
  assign SLEEP_EN_7_X59 = fangyuan1_X [22:22] ;
  assign SLEEP_EN_7_C59 = fangyuan1_C [22:22] ;
  logic [0:0] SLEEP_EN_7_R60 ;
  logic [0:0] SLEEP_EN_7_X60 ;
  logic [0:0] SLEEP_EN_7_C60 ;
  assign SLEEP_EN_7_R60 = fangyuan1_R [21:21] ;
  assign SLEEP_EN_7_X60 = fangyuan1_X [21:21] ;
  assign SLEEP_EN_7_C60 = fangyuan1_C [21:21] ;
  logic [0:0] SLEEP_EN_7_R61 ;
  logic [0:0] SLEEP_EN_7_X61 ;
  logic [0:0] SLEEP_EN_7_C61 ;
  assign SLEEP_EN_7_R61 = fangyuan1_R [20:20] ;
  assign SLEEP_EN_7_X61 = fangyuan1_X [20:20] ;
  assign SLEEP_EN_7_C61 = fangyuan1_C [20:20] ;
  logic [0:0] SLEEP_EN_7_R62 ;
  logic [0:0] SLEEP_EN_7_X62 ;
  logic [0:0] SLEEP_EN_7_C62 ;
  assign SLEEP_EN_7_R62 = fangyuan1_R [19:19] ;
  assign SLEEP_EN_7_X62 = fangyuan1_X [19:19] ;
  assign SLEEP_EN_7_C62 = fangyuan1_C [19:19] ;
  logic [0:0] SLEEP_EN_7_R63 ;
  logic [0:0] SLEEP_EN_7_X63 ;
  logic [0:0] SLEEP_EN_7_C63 ;
  assign SLEEP_EN_7_R63 = fangyuan1_R [18:18] ;
  assign SLEEP_EN_7_X63 = fangyuan1_X [18:18] ;
  assign SLEEP_EN_7_C63 = fangyuan1_C [18:18] ;
  logic [0:0] SLEEP_EN_7_R64 ;
  logic [0:0] SLEEP_EN_7_X64 ;
  logic [0:0] SLEEP_EN_7_C64 ;
  assign SLEEP_EN_7_R64 = fangyuan1_R [17:17] ;
  assign SLEEP_EN_7_X64 = fangyuan1_X [17:17] ;
  assign SLEEP_EN_7_C64 = fangyuan1_C [17:17] ;
  logic [0:0] SLEEP_EN_7_R65 ;
  logic [0:0] SLEEP_EN_7_X65 ;
  logic [0:0] SLEEP_EN_7_C65 ;
  assign SLEEP_EN_7_R65 = fangyuan1_R [16:16] ;
  assign SLEEP_EN_7_X65 = fangyuan1_X [16:16] ;
  assign SLEEP_EN_7_C65 = fangyuan1_C [16:16] ;
  logic [0:0] SLEEP_EN_7_R66 ;
  logic [0:0] SLEEP_EN_7_X66 ;
  logic [0:0] SLEEP_EN_7_C66 ;
  assign SLEEP_EN_7_R66 = fangyuan1_R [15:15] ;
  assign SLEEP_EN_7_X66 = fangyuan1_X [15:15] ;
  assign SLEEP_EN_7_C66 = fangyuan1_C [15:15] ;
  logic [0:0] SLEEP_EN_7_R67 ;
  logic [0:0] SLEEP_EN_7_X67 ;
  logic [0:0] SLEEP_EN_7_C67 ;
  assign SLEEP_EN_7_R67 = fangyuan1_R [14:14] ;
  assign SLEEP_EN_7_X67 = fangyuan1_X [14:14] ;
  assign SLEEP_EN_7_C67 = fangyuan1_C [14:14] ;
  logic [0:0] SLEEP_EN_7_R68 ;
  logic [0:0] SLEEP_EN_7_X68 ;
  logic [0:0] SLEEP_EN_7_C68 ;
  assign SLEEP_EN_7_R68 = fangyuan1_R [13:13] ;
  assign SLEEP_EN_7_X68 = fangyuan1_X [13:13] ;
  assign SLEEP_EN_7_C68 = fangyuan1_C [13:13] ;
  logic [0:0] SLEEP_EN_7_R69 ;
  logic [0:0] SLEEP_EN_7_X69 ;
  logic [0:0] SLEEP_EN_7_C69 ;
  assign SLEEP_EN_7_R69 = fangyuan1_R [12:12] ;
  assign SLEEP_EN_7_X69 = fangyuan1_X [12:12] ;
  assign SLEEP_EN_7_C69 = fangyuan1_C [12:12] ;
  logic [0:0] SLEEP_EN_7_R70 ;
  logic [0:0] SLEEP_EN_7_X70 ;
  logic [0:0] SLEEP_EN_7_C70 ;
  assign SLEEP_EN_7_R70 = fangyuan1_R [11:11] ;
  assign SLEEP_EN_7_X70 = fangyuan1_X [11:11] ;
  assign SLEEP_EN_7_C70 = fangyuan1_C [11:11] ;
  logic [0:0] SLEEP_EN_7_R71 ;
  logic [0:0] SLEEP_EN_7_X71 ;
  logic [0:0] SLEEP_EN_7_C71 ;
  assign SLEEP_EN_7_R71 = fangyuan1_R [10:10] ;
  assign SLEEP_EN_7_X71 = fangyuan1_X [10:10] ;
  assign SLEEP_EN_7_C71 = fangyuan1_C [10:10] ;
  logic [0:0] SLEEP_EN_7_R72 ;
  logic [0:0] SLEEP_EN_7_X72 ;
  logic [0:0] SLEEP_EN_7_C72 ;
  assign SLEEP_EN_7_R72 = fangyuan1_R [9:9] ;
  assign SLEEP_EN_7_X72 = fangyuan1_X [9:9] ;
  assign SLEEP_EN_7_C72 = fangyuan1_C [9:9] ;
  logic [0:0] SLEEP_EN_7_R73 ;
  logic [0:0] SLEEP_EN_7_X73 ;
  logic [0:0] SLEEP_EN_7_C73 ;
  assign SLEEP_EN_7_R73 = fangyuan1_R [8:8] ;
  assign SLEEP_EN_7_X73 = fangyuan1_X [8:8] ;
  assign SLEEP_EN_7_C73 = fangyuan1_C [8:8] ;
  logic [0:0] SLEEP_EN_7_R74 ;
  logic [0:0] SLEEP_EN_7_X74 ;
  logic [0:0] SLEEP_EN_7_C74 ;
  assign SLEEP_EN_7_R74 = fangyuan1_R [7:7] ;
  assign SLEEP_EN_7_X74 = fangyuan1_X [7:7] ;
  assign SLEEP_EN_7_C74 = fangyuan1_C [7:7] ;
  logic [0:0] SLEEP_EN_7_R75 ;
  logic [0:0] SLEEP_EN_7_X75 ;
  logic [0:0] SLEEP_EN_7_C75 ;
  assign SLEEP_EN_7_R75 = fangyuan1_R [6:6] ;
  assign SLEEP_EN_7_X75 = fangyuan1_X [6:6] ;
  assign SLEEP_EN_7_C75 = fangyuan1_C [6:6] ;
  logic [0:0] SLEEP_EN_7_R76 ;
  logic [0:0] SLEEP_EN_7_X76 ;
  logic [0:0] SLEEP_EN_7_C76 ;
  assign SLEEP_EN_7_R76 = fangyuan1_R [5:5] ;
  assign SLEEP_EN_7_X76 = fangyuan1_X [5:5] ;
  assign SLEEP_EN_7_C76 = fangyuan1_C [5:5] ;
  logic [0:0] SLEEP_EN_7_R77 ;
  logic [0:0] SLEEP_EN_7_X77 ;
  logic [0:0] SLEEP_EN_7_C77 ;
  assign SLEEP_EN_7_R77 = fangyuan1_R [4:4] ;
  assign SLEEP_EN_7_X77 = fangyuan1_X [4:4] ;
  assign SLEEP_EN_7_C77 = fangyuan1_C [4:4] ;
  logic [0:0] SLEEP_EN_7_R78 ;
  logic [0:0] SLEEP_EN_7_X78 ;
  logic [0:0] SLEEP_EN_7_C78 ;
  assign SLEEP_EN_7_R78 = fangyuan1_R [3:3] ;
  assign SLEEP_EN_7_X78 = fangyuan1_X [3:3] ;
  assign SLEEP_EN_7_C78 = fangyuan1_C [3:3] ;
  logic [0:0] SLEEP_EN_7_R79 ;
  logic [0:0] SLEEP_EN_7_X79 ;
  logic [0:0] SLEEP_EN_7_C79 ;
  assign SLEEP_EN_7_R79 = fangyuan1_R [2:2] ;
  assign SLEEP_EN_7_X79 = fangyuan1_X [2:2] ;
  assign SLEEP_EN_7_C79 = fangyuan1_C [2:2] ;
  logic [0:0] SLEEP_EN_7_R80 ;
  logic [0:0] SLEEP_EN_7_X80 ;
  logic [0:0] SLEEP_EN_7_C80 ;
  assign SLEEP_EN_7_R80 = fangyuan1_R [1:1] ;
  assign SLEEP_EN_7_X80 = fangyuan1_X [1:1] ;
  assign SLEEP_EN_7_C80 = fangyuan1_C [1:1] ;
  logic [0:0] SLEEP_EN_7_R81 ;
  logic [0:0] SLEEP_EN_7_X81 ;
  logic [0:0] SLEEP_EN_7_C81 ;
  assign SLEEP_EN_7_R81 = fangyuan1_R [0:0] ;
  assign SLEEP_EN_7_X81 = fangyuan1_X [0:0] ;
  assign SLEEP_EN_7_C81 = fangyuan1_C [0:0] ;

  assign _0_ = ~ fangyuan1;
  logic [81:0] fangyuan1_C0 ;
  logic [81:0] fangyuan1_R0 ;
  logic [81:0] fangyuan1_X0 ;
  assign _0__T = fangyuan1_T ;
  assign fangyuan1_C0 = _0__C ;
  assign fangyuan1_R0 = _0__R ;
  assign fangyuan1_X0 = _0__X ;
  assign _0__S = 0 ;
  logic [0:0] IDDQ_R0 ;
  logic [0:0] IDDQ_X0 ;
  logic [0:0] IDDQ_C0 ;
  logic [0:0] RADR_7_R0 ;
  logic [0:0] RADR_7_X0 ;
  logic [0:0] RADR_7_C0 ;
  logic [0:0] RADR_6_R0 ;
  logic [0:0] RADR_6_X0 ;
  logic [0:0] RADR_6_C0 ;
  logic [0:0] RADR_5_R0 ;
  logic [0:0] RADR_5_X0 ;
  logic [0:0] RADR_5_C0 ;
  logic [0:0] RADR_4_R0 ;
  logic [0:0] RADR_4_X0 ;
  logic [0:0] RADR_4_C0 ;
  logic [0:0] RADR_3_R0 ;
  logic [0:0] RADR_3_X0 ;
  logic [0:0] RADR_3_C0 ;
  logic [0:0] RADR_2_R0 ;
  logic [0:0] RADR_2_X0 ;
  logic [0:0] RADR_2_C0 ;
  logic [0:0] RADR_1_R0 ;
  logic [0:0] RADR_1_X0 ;
  logic [0:0] RADR_1_C0 ;
  logic [0:0] RADR_0_R0 ;
  logic [0:0] RADR_0_X0 ;
  logic [0:0] RADR_0_C0 ;
  logic [0:0] RE_R0 ;
  logic [0:0] RE_X0 ;
  logic [0:0] RE_C0 ;
  logic [0:0] RET_EN_R0 ;
  logic [0:0] RET_EN_X0 ;
  logic [0:0] RET_EN_C0 ;
  logic [0:0] SLEEP_EN_7_R82 ;
  logic [0:0] SLEEP_EN_7_X82 ;
  logic [0:0] SLEEP_EN_7_C82 ;
  logic [0:0] SLEEP_EN_6_R0 ;
  logic [0:0] SLEEP_EN_6_X0 ;
  logic [0:0] SLEEP_EN_6_C0 ;
  logic [0:0] SLEEP_EN_5_R0 ;
  logic [0:0] SLEEP_EN_5_X0 ;
  logic [0:0] SLEEP_EN_5_C0 ;
  logic [0:0] SLEEP_EN_4_R0 ;
  logic [0:0] SLEEP_EN_4_X0 ;
  logic [0:0] SLEEP_EN_4_C0 ;
  logic [0:0] SLEEP_EN_3_R0 ;
  logic [0:0] SLEEP_EN_3_X0 ;
  logic [0:0] SLEEP_EN_3_C0 ;
  logic [0:0] SLEEP_EN_2_R0 ;
  logic [0:0] SLEEP_EN_2_X0 ;
  logic [0:0] SLEEP_EN_2_C0 ;
  logic [0:0] SLEEP_EN_1_R0 ;
  logic [0:0] SLEEP_EN_1_X0 ;
  logic [0:0] SLEEP_EN_1_C0 ;
  logic [0:0] SLEEP_EN_0_R0 ;
  logic [0:0] SLEEP_EN_0_X0 ;
  logic [0:0] SLEEP_EN_0_C0 ;
  logic [0:0] SVOP_7_R0 ;
  logic [0:0] SVOP_7_X0 ;
  logic [0:0] SVOP_7_C0 ;
  logic [0:0] SVOP_6_R0 ;
  logic [0:0] SVOP_6_X0 ;
  logic [0:0] SVOP_6_C0 ;
  logic [0:0] SVOP_5_R0 ;
  logic [0:0] SVOP_5_X0 ;
  logic [0:0] SVOP_5_C0 ;
  logic [0:0] SVOP_4_R0 ;
  logic [0:0] SVOP_4_X0 ;
  logic [0:0] SVOP_4_C0 ;
  logic [0:0] SVOP_3_R0 ;
  logic [0:0] SVOP_3_X0 ;
  logic [0:0] SVOP_3_C0 ;
  logic [0:0] SVOP_2_R0 ;
  logic [0:0] SVOP_2_X0 ;
  logic [0:0] SVOP_2_C0 ;
  logic [0:0] SVOP_1_R0 ;
  logic [0:0] SVOP_1_X0 ;
  logic [0:0] SVOP_1_C0 ;
  logic [0:0] SVOP_0_R0 ;
  logic [0:0] SVOP_0_X0 ;
  logic [0:0] SVOP_0_C0 ;
  logic [0:0] WADR_7_R0 ;
  logic [0:0] WADR_7_X0 ;
  logic [0:0] WADR_7_C0 ;
  logic [0:0] WADR_6_R0 ;
  logic [0:0] WADR_6_X0 ;
  logic [0:0] WADR_6_C0 ;
  logic [0:0] WADR_5_R0 ;
  logic [0:0] WADR_5_X0 ;
  logic [0:0] WADR_5_C0 ;
  logic [0:0] WADR_4_R0 ;
  logic [0:0] WADR_4_X0 ;
  logic [0:0] WADR_4_C0 ;
  logic [0:0] WADR_3_R0 ;
  logic [0:0] WADR_3_X0 ;
  logic [0:0] WADR_3_C0 ;
  logic [0:0] WADR_2_R0 ;
  logic [0:0] WADR_2_X0 ;
  logic [0:0] WADR_2_C0 ;
  logic [0:0] WADR_1_R0 ;
  logic [0:0] WADR_1_X0 ;
  logic [0:0] WADR_1_C0 ;
  logic [0:0] WADR_0_R0 ;
  logic [0:0] WADR_0_X0 ;
  logic [0:0] WADR_0_C0 ;
  logic [0:0] WD_81_R0 ;
  logic [0:0] WD_81_X0 ;
  logic [0:0] WD_81_C0 ;
  logic [0:0] WD_80_R0 ;
  logic [0:0] WD_80_X0 ;
  logic [0:0] WD_80_C0 ;
  logic [0:0] WD_79_R0 ;
  logic [0:0] WD_79_X0 ;
  logic [0:0] WD_79_C0 ;
  logic [0:0] WD_78_R0 ;
  logic [0:0] WD_78_X0 ;
  logic [0:0] WD_78_C0 ;
  logic [0:0] WD_77_R0 ;
  logic [0:0] WD_77_X0 ;
  logic [0:0] WD_77_C0 ;
  logic [0:0] WD_76_R0 ;
  logic [0:0] WD_76_X0 ;
  logic [0:0] WD_76_C0 ;
  logic [0:0] WD_75_R0 ;
  logic [0:0] WD_75_X0 ;
  logic [0:0] WD_75_C0 ;
  logic [0:0] WD_74_R0 ;
  logic [0:0] WD_74_X0 ;
  logic [0:0] WD_74_C0 ;
  logic [0:0] WD_73_R0 ;
  logic [0:0] WD_73_X0 ;
  logic [0:0] WD_73_C0 ;
  logic [0:0] WD_72_R0 ;
  logic [0:0] WD_72_X0 ;
  logic [0:0] WD_72_C0 ;
  logic [0:0] WD_71_R0 ;
  logic [0:0] WD_71_X0 ;
  logic [0:0] WD_71_C0 ;
  logic [0:0] WD_70_R0 ;
  logic [0:0] WD_70_X0 ;
  logic [0:0] WD_70_C0 ;
  logic [0:0] WD_69_R0 ;
  logic [0:0] WD_69_X0 ;
  logic [0:0] WD_69_C0 ;
  logic [0:0] WD_68_R0 ;
  logic [0:0] WD_68_X0 ;
  logic [0:0] WD_68_C0 ;
  logic [0:0] WD_67_R0 ;
  logic [0:0] WD_67_X0 ;
  logic [0:0] WD_67_C0 ;
  logic [0:0] WD_66_R0 ;
  logic [0:0] WD_66_X0 ;
  logic [0:0] WD_66_C0 ;
  logic [0:0] WD_65_R0 ;
  logic [0:0] WD_65_X0 ;
  logic [0:0] WD_65_C0 ;
  logic [0:0] WD_64_R0 ;
  logic [0:0] WD_64_X0 ;
  logic [0:0] WD_64_C0 ;
  logic [0:0] WD_63_R0 ;
  logic [0:0] WD_63_X0 ;
  logic [0:0] WD_63_C0 ;
  logic [0:0] WD_62_R0 ;
  logic [0:0] WD_62_X0 ;
  logic [0:0] WD_62_C0 ;
  logic [0:0] WD_61_R0 ;
  logic [0:0] WD_61_X0 ;
  logic [0:0] WD_61_C0 ;
  logic [0:0] WD_60_R0 ;
  logic [0:0] WD_60_X0 ;
  logic [0:0] WD_60_C0 ;
  logic [0:0] WD_59_R0 ;
  logic [0:0] WD_59_X0 ;
  logic [0:0] WD_59_C0 ;
  logic [0:0] WD_58_R0 ;
  logic [0:0] WD_58_X0 ;
  logic [0:0] WD_58_C0 ;
  logic [0:0] WD_57_R0 ;
  logic [0:0] WD_57_X0 ;
  logic [0:0] WD_57_C0 ;
  logic [0:0] WD_56_R0 ;
  logic [0:0] WD_56_X0 ;
  logic [0:0] WD_56_C0 ;
  logic [0:0] WD_55_R0 ;
  logic [0:0] WD_55_X0 ;
  logic [0:0] WD_55_C0 ;
  logic [0:0] WD_54_R0 ;
  logic [0:0] WD_54_X0 ;
  logic [0:0] WD_54_C0 ;
  logic [0:0] WD_53_R0 ;
  logic [0:0] WD_53_X0 ;
  logic [0:0] WD_53_C0 ;
  logic [0:0] WD_52_R0 ;
  logic [0:0] WD_52_X0 ;
  logic [0:0] WD_52_C0 ;
  logic [0:0] WD_51_R0 ;
  logic [0:0] WD_51_X0 ;
  logic [0:0] WD_51_C0 ;
  logic [0:0] WD_50_R0 ;
  logic [0:0] WD_50_X0 ;
  logic [0:0] WD_50_C0 ;
  logic [0:0] WD_49_R0 ;
  logic [0:0] WD_49_X0 ;
  logic [0:0] WD_49_C0 ;
  logic [0:0] WD_48_R0 ;
  logic [0:0] WD_48_X0 ;
  logic [0:0] WD_48_C0 ;
  logic [0:0] WD_47_R0 ;
  logic [0:0] WD_47_X0 ;
  logic [0:0] WD_47_C0 ;
  logic [0:0] WD_46_R0 ;
  logic [0:0] WD_46_X0 ;
  logic [0:0] WD_46_C0 ;
  logic [0:0] WD_45_R0 ;
  logic [0:0] WD_45_X0 ;
  logic [0:0] WD_45_C0 ;
  logic [0:0] WD_44_R0 ;
  logic [0:0] WD_44_X0 ;
  logic [0:0] WD_44_C0 ;
  logic [0:0] WD_43_R0 ;
  logic [0:0] WD_43_X0 ;
  logic [0:0] WD_43_C0 ;
  logic [0:0] WD_42_R0 ;
  logic [0:0] WD_42_X0 ;
  logic [0:0] WD_42_C0 ;
  logic [0:0] WD_41_R0 ;
  logic [0:0] WD_41_X0 ;
  logic [0:0] WD_41_C0 ;
  logic [0:0] WD_40_R0 ;
  logic [0:0] WD_40_X0 ;
  logic [0:0] WD_40_C0 ;
  logic [0:0] WD_39_R0 ;
  logic [0:0] WD_39_X0 ;
  logic [0:0] WD_39_C0 ;
  logic [0:0] WD_38_R0 ;
  logic [0:0] WD_38_X0 ;
  logic [0:0] WD_38_C0 ;
  logic [0:0] WD_37_R0 ;
  logic [0:0] WD_37_X0 ;
  logic [0:0] WD_37_C0 ;
  logic [0:0] WD_36_R0 ;
  logic [0:0] WD_36_X0 ;
  logic [0:0] WD_36_C0 ;
  logic [0:0] WD_35_R0 ;
  logic [0:0] WD_35_X0 ;
  logic [0:0] WD_35_C0 ;
  logic [0:0] WD_34_R0 ;
  logic [0:0] WD_34_X0 ;
  logic [0:0] WD_34_C0 ;
  logic [0:0] WD_33_R0 ;
  logic [0:0] WD_33_X0 ;
  logic [0:0] WD_33_C0 ;
  logic [0:0] WD_32_R0 ;
  logic [0:0] WD_32_X0 ;
  logic [0:0] WD_32_C0 ;
  logic [0:0] WD_31_R0 ;
  logic [0:0] WD_31_X0 ;
  logic [0:0] WD_31_C0 ;
  logic [0:0] WD_30_R0 ;
  logic [0:0] WD_30_X0 ;
  logic [0:0] WD_30_C0 ;
  logic [0:0] WD_29_R0 ;
  logic [0:0] WD_29_X0 ;
  logic [0:0] WD_29_C0 ;
  logic [0:0] WD_28_R0 ;
  logic [0:0] WD_28_X0 ;
  logic [0:0] WD_28_C0 ;
  logic [0:0] WD_27_R0 ;
  logic [0:0] WD_27_X0 ;
  logic [0:0] WD_27_C0 ;
  logic [0:0] WD_26_R0 ;
  logic [0:0] WD_26_X0 ;
  logic [0:0] WD_26_C0 ;
  logic [0:0] WD_25_R0 ;
  logic [0:0] WD_25_X0 ;
  logic [0:0] WD_25_C0 ;
  logic [0:0] WD_24_R0 ;
  logic [0:0] WD_24_X0 ;
  logic [0:0] WD_24_C0 ;
  logic [0:0] WD_23_R0 ;
  logic [0:0] WD_23_X0 ;
  logic [0:0] WD_23_C0 ;
  logic [0:0] WD_22_R0 ;
  logic [0:0] WD_22_X0 ;
  logic [0:0] WD_22_C0 ;
  logic [0:0] WD_21_R0 ;
  logic [0:0] WD_21_X0 ;
  logic [0:0] WD_21_C0 ;
  logic [0:0] WD_20_R0 ;
  logic [0:0] WD_20_X0 ;
  logic [0:0] WD_20_C0 ;
  logic [0:0] WD_19_R0 ;
  logic [0:0] WD_19_X0 ;
  logic [0:0] WD_19_C0 ;
  logic [0:0] WD_18_R0 ;
  logic [0:0] WD_18_X0 ;
  logic [0:0] WD_18_C0 ;
  logic [0:0] WD_17_R0 ;
  logic [0:0] WD_17_X0 ;
  logic [0:0] WD_17_C0 ;
  logic [0:0] WD_16_R0 ;
  logic [0:0] WD_16_X0 ;
  logic [0:0] WD_16_C0 ;
  logic [0:0] WD_15_R0 ;
  logic [0:0] WD_15_X0 ;
  logic [0:0] WD_15_C0 ;
  logic [0:0] WD_14_R0 ;
  logic [0:0] WD_14_X0 ;
  logic [0:0] WD_14_C0 ;
  logic [0:0] WD_13_R0 ;
  logic [0:0] WD_13_X0 ;
  logic [0:0] WD_13_C0 ;
  logic [0:0] WD_12_R0 ;
  logic [0:0] WD_12_X0 ;
  logic [0:0] WD_12_C0 ;
  logic [0:0] WD_11_R0 ;
  logic [0:0] WD_11_X0 ;
  logic [0:0] WD_11_C0 ;
  logic [0:0] WD_10_R0 ;
  logic [0:0] WD_10_X0 ;
  logic [0:0] WD_10_C0 ;
  logic [0:0] WD_9_R0 ;
  logic [0:0] WD_9_X0 ;
  logic [0:0] WD_9_C0 ;
  logic [0:0] WD_8_R0 ;
  logic [0:0] WD_8_X0 ;
  logic [0:0] WD_8_C0 ;
  logic [0:0] WD_7_R0 ;
  logic [0:0] WD_7_X0 ;
  logic [0:0] WD_7_C0 ;
  logic [0:0] WD_6_R0 ;
  logic [0:0] WD_6_X0 ;
  logic [0:0] WD_6_C0 ;
  logic [0:0] WD_5_R0 ;
  logic [0:0] WD_5_X0 ;
  logic [0:0] WD_5_C0 ;
  logic [0:0] WD_4_R0 ;
  logic [0:0] WD_4_X0 ;
  logic [0:0] WD_4_C0 ;
  logic [0:0] WD_3_R0 ;
  logic [0:0] WD_3_X0 ;
  logic [0:0] WD_3_C0 ;
  logic [0:0] WD_2_R0 ;
  logic [0:0] WD_2_X0 ;
  logic [0:0] WD_2_C0 ;
  logic [0:0] WD_1_R0 ;
  logic [0:0] WD_1_X0 ;
  logic [0:0] WD_1_C0 ;
  logic [0:0] WD_0_R0 ;
  logic [0:0] WD_0_X0 ;
  logic [0:0] WD_0_C0 ;
  logic [0:0] WE_R0 ;
  logic [0:0] WE_X0 ;
  logic [0:0] WE_C0 ;
// module: RAM_BANK_RAMPDP_160X82_GL_M2_D2
  RAM_BANK_RAMPDP_160X82_GL_M2_D2 ITOP (
    .IDDQ_T (  IDDQ_T  ),
    .IDDQ_R (  IDDQ_R0  ),
    .IDDQ_X (  IDDQ_X0  ),
    .IDDQ_C (  IDDQ_C0  ),
    .IDDQ_S (  IDDQ_S  ),
    .RA_T ( {  RADR_7_T , RADR_6_T , RADR_5_T , RADR_4_T , RADR_3_T , RADR_2_T , RADR_1_T , RADR_0_T  } ),
    .RA_R ( {  RADR_7_R0 , RADR_6_R0 , RADR_5_R0 , RADR_4_R0 , RADR_3_R0 , RADR_2_R0 , RADR_1_R0 , RADR_0_R0  } ),
    .RA_X ( {  RADR_7_X0 , RADR_6_X0 , RADR_5_X0 , RADR_4_X0 , RADR_3_X0 , RADR_2_X0 , RADR_1_X0 , RADR_0_X0  } ),
    .RA_C ( {  RADR_7_C0 , RADR_6_C0 , RADR_5_C0 , RADR_4_C0 , RADR_3_C0 , RADR_2_C0 , RADR_1_C0 , RADR_0_C0  } ),
    .RA_S ( {  RADR_7_S , RADR_6_S , RADR_5_S , RADR_4_S , RADR_3_S , RADR_2_S , RADR_1_S , RADR_0_S  } ),
    .RE_T (  RE_T  ),
    .RE_R (  RE_R0  ),
    .RE_X (  RE_X0  ),
    .RE_C (  RE_C0  ),
    .RE_S (  RE_S  ),
    .RET_EN_T (  RET_EN_T  ),
    .RET_EN_R (  RET_EN_R0  ),
    .RET_EN_X (  RET_EN_X0  ),
    .RET_EN_C (  RET_EN_C0  ),
    .RET_EN_S (  RET_EN_S  ),
    .SLEEP_EN_T ( {  SLEEP_EN_7_T , SLEEP_EN_6_T , SLEEP_EN_5_T , SLEEP_EN_4_T , SLEEP_EN_3_T , SLEEP_EN_2_T , SLEEP_EN_1_T , SLEEP_EN_0_T  } ),
    .SLEEP_EN_R ( {  SLEEP_EN_7_R82 , SLEEP_EN_6_R0 , SLEEP_EN_5_R0 , SLEEP_EN_4_R0 , SLEEP_EN_3_R0 , SLEEP_EN_2_R0 , SLEEP_EN_1_R0 , SLEEP_EN_0_R0  } ),
    .SLEEP_EN_X ( {  SLEEP_EN_7_X82 , SLEEP_EN_6_X0 , SLEEP_EN_5_X0 , SLEEP_EN_4_X0 , SLEEP_EN_3_X0 , SLEEP_EN_2_X0 , SLEEP_EN_1_X0 , SLEEP_EN_0_X0  } ),
    .SLEEP_EN_C ( {  SLEEP_EN_7_C82 , SLEEP_EN_6_C0 , SLEEP_EN_5_C0 , SLEEP_EN_4_C0 , SLEEP_EN_3_C0 , SLEEP_EN_2_C0 , SLEEP_EN_1_C0 , SLEEP_EN_0_C0  } ),
    .SLEEP_EN_S ( {  SLEEP_EN_7_S , SLEEP_EN_6_S , SLEEP_EN_5_S , SLEEP_EN_4_S , SLEEP_EN_3_S , SLEEP_EN_2_S , SLEEP_EN_1_S , SLEEP_EN_0_S  } ),
    .SVOP_T ( {  SVOP_7_T , SVOP_6_T , SVOP_5_T , SVOP_4_T , SVOP_3_T , SVOP_2_T , SVOP_1_T , SVOP_0_T  } ),
    .SVOP_R ( {  SVOP_7_R0 , SVOP_6_R0 , SVOP_5_R0 , SVOP_4_R0 , SVOP_3_R0 , SVOP_2_R0 , SVOP_1_R0 , SVOP_0_R0  } ),
    .SVOP_X ( {  SVOP_7_X0 , SVOP_6_X0 , SVOP_5_X0 , SVOP_4_X0 , SVOP_3_X0 , SVOP_2_X0 , SVOP_1_X0 , SVOP_0_X0  } ),
    .SVOP_C ( {  SVOP_7_C0 , SVOP_6_C0 , SVOP_5_C0 , SVOP_4_C0 , SVOP_3_C0 , SVOP_2_C0 , SVOP_1_C0 , SVOP_0_C0  } ),
    .SVOP_S ( {  SVOP_7_S , SVOP_6_S , SVOP_5_S , SVOP_4_S , SVOP_3_S , SVOP_2_S , SVOP_1_S , SVOP_0_S  } ),
    .WA_T ( {  WADR_7_T , WADR_6_T , WADR_5_T , WADR_4_T , WADR_3_T , WADR_2_T , WADR_1_T , WADR_0_T  } ),
    .WA_R ( {  WADR_7_R0 , WADR_6_R0 , WADR_5_R0 , WADR_4_R0 , WADR_3_R0 , WADR_2_R0 , WADR_1_R0 , WADR_0_R0  } ),
    .WA_X ( {  WADR_7_X0 , WADR_6_X0 , WADR_5_X0 , WADR_4_X0 , WADR_3_X0 , WADR_2_X0 , WADR_1_X0 , WADR_0_X0  } ),
    .WA_C ( {  WADR_7_C0 , WADR_6_C0 , WADR_5_C0 , WADR_4_C0 , WADR_3_C0 , WADR_2_C0 , WADR_1_C0 , WADR_0_C0  } ),
    .WA_S ( {  WADR_7_S , WADR_6_S , WADR_5_S , WADR_4_S , WADR_3_S , WADR_2_S , WADR_1_S , WADR_0_S  } ),
    .WD_T ( {  WD_81_T , WD_80_T , WD_79_T , WD_78_T , WD_77_T , WD_76_T , WD_75_T , WD_74_T , WD_73_T , WD_72_T , WD_71_T , WD_70_T , WD_69_T , WD_68_T , WD_67_T , WD_66_T , WD_65_T , WD_64_T , WD_63_T , WD_62_T , WD_61_T , WD_60_T , WD_59_T , WD_58_T , WD_57_T , WD_56_T , WD_55_T , WD_54_T , WD_53_T , WD_52_T , WD_51_T , WD_50_T , WD_49_T , WD_48_T , WD_47_T , WD_46_T , WD_45_T , WD_44_T , WD_43_T , WD_42_T , WD_41_T , WD_40_T , WD_39_T , WD_38_T , WD_37_T , WD_36_T , WD_35_T , WD_34_T , WD_33_T , WD_32_T , WD_31_T , WD_30_T , WD_29_T , WD_28_T , WD_27_T , WD_26_T , WD_25_T , WD_24_T , WD_23_T , WD_22_T , WD_21_T , WD_20_T , WD_19_T , WD_18_T , WD_17_T , WD_16_T , WD_15_T , WD_14_T , WD_13_T , WD_12_T , WD_11_T , WD_10_T , WD_9_T , WD_8_T , WD_7_T , WD_6_T , WD_5_T , WD_4_T , WD_3_T , WD_2_T , WD_1_T , WD_0_T  } ),
    .WD_R ( {  WD_81_R0 , WD_80_R0 , WD_79_R0 , WD_78_R0 , WD_77_R0 , WD_76_R0 , WD_75_R0 , WD_74_R0 , WD_73_R0 , WD_72_R0 , WD_71_R0 , WD_70_R0 , WD_69_R0 , WD_68_R0 , WD_67_R0 , WD_66_R0 , WD_65_R0 , WD_64_R0 , WD_63_R0 , WD_62_R0 , WD_61_R0 , WD_60_R0 , WD_59_R0 , WD_58_R0 , WD_57_R0 , WD_56_R0 , WD_55_R0 , WD_54_R0 , WD_53_R0 , WD_52_R0 , WD_51_R0 , WD_50_R0 , WD_49_R0 , WD_48_R0 , WD_47_R0 , WD_46_R0 , WD_45_R0 , WD_44_R0 , WD_43_R0 , WD_42_R0 , WD_41_R0 , WD_40_R0 , WD_39_R0 , WD_38_R0 , WD_37_R0 , WD_36_R0 , WD_35_R0 , WD_34_R0 , WD_33_R0 , WD_32_R0 , WD_31_R0 , WD_30_R0 , WD_29_R0 , WD_28_R0 , WD_27_R0 , WD_26_R0 , WD_25_R0 , WD_24_R0 , WD_23_R0 , WD_22_R0 , WD_21_R0 , WD_20_R0 , WD_19_R0 , WD_18_R0 , WD_17_R0 , WD_16_R0 , WD_15_R0 , WD_14_R0 , WD_13_R0 , WD_12_R0 , WD_11_R0 , WD_10_R0 , WD_9_R0 , WD_8_R0 , WD_7_R0 , WD_6_R0 , WD_5_R0 , WD_4_R0 , WD_3_R0 , WD_2_R0 , WD_1_R0 , WD_0_R0  } ),
    .WD_X ( {  WD_81_X0 , WD_80_X0 , WD_79_X0 , WD_78_X0 , WD_77_X0 , WD_76_X0 , WD_75_X0 , WD_74_X0 , WD_73_X0 , WD_72_X0 , WD_71_X0 , WD_70_X0 , WD_69_X0 , WD_68_X0 , WD_67_X0 , WD_66_X0 , WD_65_X0 , WD_64_X0 , WD_63_X0 , WD_62_X0 , WD_61_X0 , WD_60_X0 , WD_59_X0 , WD_58_X0 , WD_57_X0 , WD_56_X0 , WD_55_X0 , WD_54_X0 , WD_53_X0 , WD_52_X0 , WD_51_X0 , WD_50_X0 , WD_49_X0 , WD_48_X0 , WD_47_X0 , WD_46_X0 , WD_45_X0 , WD_44_X0 , WD_43_X0 , WD_42_X0 , WD_41_X0 , WD_40_X0 , WD_39_X0 , WD_38_X0 , WD_37_X0 , WD_36_X0 , WD_35_X0 , WD_34_X0 , WD_33_X0 , WD_32_X0 , WD_31_X0 , WD_30_X0 , WD_29_X0 , WD_28_X0 , WD_27_X0 , WD_26_X0 , WD_25_X0 , WD_24_X0 , WD_23_X0 , WD_22_X0 , WD_21_X0 , WD_20_X0 , WD_19_X0 , WD_18_X0 , WD_17_X0 , WD_16_X0 , WD_15_X0 , WD_14_X0 , WD_13_X0 , WD_12_X0 , WD_11_X0 , WD_10_X0 , WD_9_X0 , WD_8_X0 , WD_7_X0 , WD_6_X0 , WD_5_X0 , WD_4_X0 , WD_3_X0 , WD_2_X0 , WD_1_X0 , WD_0_X0  } ),
    .WD_C ( {  WD_81_C0 , WD_80_C0 , WD_79_C0 , WD_78_C0 , WD_77_C0 , WD_76_C0 , WD_75_C0 , WD_74_C0 , WD_73_C0 , WD_72_C0 , WD_71_C0 , WD_70_C0 , WD_69_C0 , WD_68_C0 , WD_67_C0 , WD_66_C0 , WD_65_C0 , WD_64_C0 , WD_63_C0 , WD_62_C0 , WD_61_C0 , WD_60_C0 , WD_59_C0 , WD_58_C0 , WD_57_C0 , WD_56_C0 , WD_55_C0 , WD_54_C0 , WD_53_C0 , WD_52_C0 , WD_51_C0 , WD_50_C0 , WD_49_C0 , WD_48_C0 , WD_47_C0 , WD_46_C0 , WD_45_C0 , WD_44_C0 , WD_43_C0 , WD_42_C0 , WD_41_C0 , WD_40_C0 , WD_39_C0 , WD_38_C0 , WD_37_C0 , WD_36_C0 , WD_35_C0 , WD_34_C0 , WD_33_C0 , WD_32_C0 , WD_31_C0 , WD_30_C0 , WD_29_C0 , WD_28_C0 , WD_27_C0 , WD_26_C0 , WD_25_C0 , WD_24_C0 , WD_23_C0 , WD_22_C0 , WD_21_C0 , WD_20_C0 , WD_19_C0 , WD_18_C0 , WD_17_C0 , WD_16_C0 , WD_15_C0 , WD_14_C0 , WD_13_C0 , WD_12_C0 , WD_11_C0 , WD_10_C0 , WD_9_C0 , WD_8_C0 , WD_7_C0 , WD_6_C0 , WD_5_C0 , WD_4_C0 , WD_3_C0 , WD_2_C0 , WD_1_C0 , WD_0_C0  } ),
    .WD_S ( {  WD_81_S , WD_80_S , WD_79_S , WD_78_S , WD_77_S , WD_76_S , WD_75_S , WD_74_S , WD_73_S , WD_72_S , WD_71_S , WD_70_S , WD_69_S , WD_68_S , WD_67_S , WD_66_S , WD_65_S , WD_64_S , WD_63_S , WD_62_S , WD_61_S , WD_60_S , WD_59_S , WD_58_S , WD_57_S , WD_56_S , WD_55_S , WD_54_S , WD_53_S , WD_52_S , WD_51_S , WD_50_S , WD_49_S , WD_48_S , WD_47_S , WD_46_S , WD_45_S , WD_44_S , WD_43_S , WD_42_S , WD_41_S , WD_40_S , WD_39_S , WD_38_S , WD_37_S , WD_36_S , WD_35_S , WD_34_S , WD_33_S , WD_32_S , WD_31_S , WD_30_S , WD_29_S , WD_28_S , WD_27_S , WD_26_S , WD_25_S , WD_24_S , WD_23_S , WD_22_S , WD_21_S , WD_20_S , WD_19_S , WD_18_S , WD_17_S , WD_16_S , WD_15_S , WD_14_S , WD_13_S , WD_12_S , WD_11_S , WD_10_S , WD_9_S , WD_8_S , WD_7_S , WD_6_S , WD_5_S , WD_4_S , WD_3_S , WD_2_S , WD_1_S , WD_0_S  } ),
    .WE_T (  WE_T  ),
    .WE_R (  WE_R0  ),
    .WE_X (  WE_X0  ),
    .WE_C (  WE_C0  ),
    .WE_S (  WE_S  ),
    .clobber_array_T (  1'h0  ),
    .clobber_array_R (  nouse_zy0  ),
    .clobber_array_X (  nouse_zy1  ),
    .clobber_array_C (  nouse_zy2  ),
    .clobber_array_S ( 1'h0 ),
    .clobber_flops_T (  1'h0  ),
    .clobber_flops_R (  nouse_zy3  ),
    .clobber_flops_X (  nouse_zy4  ),
    .clobber_flops_C (  nouse_zy5  ),
    .clobber_flops_S ( 1'h0 ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .rst_zy(rst_zy),
    .RD_T (  RD_T  ),
    .RD_R0 (  RD_R  ),
    .RD_X0 (  RD_X  ),
    .RD_C0 (  RD_C  ),
    .RD_S ( RD_S ),
    .RE ( RE ),
    .clobber_flops ( 1'b0 ),
    .RD ( RD ),
    .RET_EN ( RET_EN ),
    .RA ( { RADR_7, RADR_6, RADR_5, RADR_4, RADR_3, RADR_2, RADR_1, RADR_0 } ),
    .WE ( WE ),
    .WA ( { WADR_7, WADR_6, WADR_5, WADR_4, WADR_3, WADR_2, WADR_1, WADR_0 } ),
    .CLK ( CLK ),
    .IDDQ ( IDDQ ),
    .SLEEP_EN ( { SLEEP_EN_7, SLEEP_EN_6, SLEEP_EN_5, SLEEP_EN_4, SLEEP_EN_3, SLEEP_EN_2, SLEEP_EN_1, SLEEP_EN_0 } ),
    .clobber_array ( 1'b0 ),
    .SVOP ( { SVOP_7, SVOP_6, SVOP_5, SVOP_4, SVOP_3, SVOP_2, SVOP_1, SVOP_0 } ),
    .WD ( { WD_81, WD_80, WD_79, WD_78, WD_77, WD_76, WD_75, WD_74, WD_73, WD_72, WD_71, WD_70, WD_69, WD_68, WD_67, WD_66, WD_65, WD_64, WD_63, WD_62, WD_61, WD_60, WD_59, WD_58, WD_57, WD_56, WD_55, WD_54, WD_53, WD_52, WD_51, WD_50, WD_49, WD_48, WD_47, WD_46, WD_45, WD_44, WD_43, WD_42, WD_41, WD_40, WD_39, WD_38, WD_37, WD_36, WD_35, WD_34, WD_33, WD_32, WD_31, WD_30, WD_29, WD_28, WD_27, WD_26, WD_25, WD_24, WD_23, WD_22, WD_21, WD_20, WD_19, WD_18, WD_17, WD_16, WD_15, WD_14, WD_13, WD_12, WD_11, WD_10, WD_9, WD_8, WD_7, WD_6, WD_5, WD_4, WD_3, WD_2, WD_1, WD_0 } )
  );
  logic [1-1:0] nouse_zy0 ;
  logic [1-1:0] nouse_zy1 ;
  logic [1-1:0] nouse_zy2 ;
  logic [1-1:0] nouse_zy3 ;
  logic [1-1:0] nouse_zy4 ;
  logic [1-1:0] nouse_zy5 ;
  assign GND = 1'b0;
  assign GND_T = 0 ;
  assign GND_S = 14'b1 ;
  assign RA = { RADR_7, RADR_6, RADR_5, RADR_4, RADR_3, RADR_2, RADR_1, RADR_0 };
  assign RA_T = {  RADR_7_T , RADR_6_T , RADR_5_T , RADR_4_T , RADR_3_T , RADR_2_T , RADR_1_T , RADR_0_T  };
  logic [13:0] RA_S ;
  assign RA_S = 0 ;
  logic [0:0] RADR_7_R1 ;
  logic [0:0] RADR_7_X1 ;
  logic [0:0] RADR_7_C1 ;
  assign RADR_7_R1 = RA_R [7:7] ;
  assign RADR_7_X1 = RA_X [7:7] ;
  assign RADR_7_C1 = RA_C [7:7] ;
  logic [0:0] RADR_6_R1 ;
  logic [0:0] RADR_6_X1 ;
  logic [0:0] RADR_6_C1 ;
  assign RADR_6_R1 = RA_R [6:6] ;
  assign RADR_6_X1 = RA_X [6:6] ;
  assign RADR_6_C1 = RA_C [6:6] ;
  logic [0:0] RADR_5_R1 ;
  logic [0:0] RADR_5_X1 ;
  logic [0:0] RADR_5_C1 ;
  assign RADR_5_R1 = RA_R [5:5] ;
  assign RADR_5_X1 = RA_X [5:5] ;
  assign RADR_5_C1 = RA_C [5:5] ;
  logic [0:0] RADR_4_R1 ;
  logic [0:0] RADR_4_X1 ;
  logic [0:0] RADR_4_C1 ;
  assign RADR_4_R1 = RA_R [4:4] ;
  assign RADR_4_X1 = RA_X [4:4] ;
  assign RADR_4_C1 = RA_C [4:4] ;
  logic [0:0] RADR_3_R1 ;
  logic [0:0] RADR_3_X1 ;
  logic [0:0] RADR_3_C1 ;
  assign RADR_3_R1 = RA_R [3:3] ;
  assign RADR_3_X1 = RA_X [3:3] ;
  assign RADR_3_C1 = RA_C [3:3] ;
  logic [0:0] RADR_2_R1 ;
  logic [0:0] RADR_2_X1 ;
  logic [0:0] RADR_2_C1 ;
  assign RADR_2_R1 = RA_R [2:2] ;
  assign RADR_2_X1 = RA_X [2:2] ;
  assign RADR_2_C1 = RA_C [2:2] ;
  logic [0:0] RADR_1_R1 ;
  logic [0:0] RADR_1_X1 ;
  logic [0:0] RADR_1_C1 ;
  assign RADR_1_R1 = RA_R [1:1] ;
  assign RADR_1_X1 = RA_X [1:1] ;
  assign RADR_1_C1 = RA_C [1:1] ;
  logic [0:0] RADR_0_R1 ;
  logic [0:0] RADR_0_X1 ;
  logic [0:0] RADR_0_C1 ;
  assign RADR_0_R1 = RA_R [0:0] ;
  assign RADR_0_X1 = RA_X [0:0] ;
  assign RADR_0_C1 = RA_C [0:0] ;
  assign SLEEP_EN = { SLEEP_EN_7, SLEEP_EN_6, SLEEP_EN_5, SLEEP_EN_4, SLEEP_EN_3, SLEEP_EN_2, SLEEP_EN_1, SLEEP_EN_0 };
  assign SLEEP_EN_T = {  SLEEP_EN_7_T , SLEEP_EN_6_T , SLEEP_EN_5_T , SLEEP_EN_4_T , SLEEP_EN_3_T , SLEEP_EN_2_T , SLEEP_EN_1_T , SLEEP_EN_0_T  };
  logic [13:0] SLEEP_EN_S ;
  assign SLEEP_EN_S = 0 ;
  logic [0:0] SLEEP_EN_7_R83 ;
  logic [0:0] SLEEP_EN_7_X83 ;
  logic [0:0] SLEEP_EN_7_C83 ;
  assign SLEEP_EN_7_R83 = SLEEP_EN_R [7:7] ;
  assign SLEEP_EN_7_X83 = SLEEP_EN_X [7:7] ;
  assign SLEEP_EN_7_C83 = SLEEP_EN_C [7:7] ;
  logic [0:0] SLEEP_EN_6_R1 ;
  logic [0:0] SLEEP_EN_6_X1 ;
  logic [0:0] SLEEP_EN_6_C1 ;
  assign SLEEP_EN_6_R1 = SLEEP_EN_R [6:6] ;
  assign SLEEP_EN_6_X1 = SLEEP_EN_X [6:6] ;
  assign SLEEP_EN_6_C1 = SLEEP_EN_C [6:6] ;
  logic [0:0] SLEEP_EN_5_R1 ;
  logic [0:0] SLEEP_EN_5_X1 ;
  logic [0:0] SLEEP_EN_5_C1 ;
  assign SLEEP_EN_5_R1 = SLEEP_EN_R [5:5] ;
  assign SLEEP_EN_5_X1 = SLEEP_EN_X [5:5] ;
  assign SLEEP_EN_5_C1 = SLEEP_EN_C [5:5] ;
  logic [0:0] SLEEP_EN_4_R1 ;
  logic [0:0] SLEEP_EN_4_X1 ;
  logic [0:0] SLEEP_EN_4_C1 ;
  assign SLEEP_EN_4_R1 = SLEEP_EN_R [4:4] ;
  assign SLEEP_EN_4_X1 = SLEEP_EN_X [4:4] ;
  assign SLEEP_EN_4_C1 = SLEEP_EN_C [4:4] ;
  logic [0:0] SLEEP_EN_3_R1 ;
  logic [0:0] SLEEP_EN_3_X1 ;
  logic [0:0] SLEEP_EN_3_C1 ;
  assign SLEEP_EN_3_R1 = SLEEP_EN_R [3:3] ;
  assign SLEEP_EN_3_X1 = SLEEP_EN_X [3:3] ;
  assign SLEEP_EN_3_C1 = SLEEP_EN_C [3:3] ;
  logic [0:0] SLEEP_EN_2_R1 ;
  logic [0:0] SLEEP_EN_2_X1 ;
  logic [0:0] SLEEP_EN_2_C1 ;
  assign SLEEP_EN_2_R1 = SLEEP_EN_R [2:2] ;
  assign SLEEP_EN_2_X1 = SLEEP_EN_X [2:2] ;
  assign SLEEP_EN_2_C1 = SLEEP_EN_C [2:2] ;
  logic [0:0] SLEEP_EN_1_R1 ;
  logic [0:0] SLEEP_EN_1_X1 ;
  logic [0:0] SLEEP_EN_1_C1 ;
  assign SLEEP_EN_1_R1 = SLEEP_EN_R [1:1] ;
  assign SLEEP_EN_1_X1 = SLEEP_EN_X [1:1] ;
  assign SLEEP_EN_1_C1 = SLEEP_EN_C [1:1] ;
  logic [0:0] SLEEP_EN_0_R1 ;
  logic [0:0] SLEEP_EN_0_X1 ;
  logic [0:0] SLEEP_EN_0_C1 ;
  assign SLEEP_EN_0_R1 = SLEEP_EN_R [0:0] ;
  assign SLEEP_EN_0_X1 = SLEEP_EN_X [0:0] ;
  assign SLEEP_EN_0_C1 = SLEEP_EN_C [0:0] ;
  assign SVOP = { SVOP_7, SVOP_6, SVOP_5, SVOP_4, SVOP_3, SVOP_2, SVOP_1, SVOP_0 };
  assign SVOP_T = {  SVOP_7_T , SVOP_6_T , SVOP_5_T , SVOP_4_T , SVOP_3_T , SVOP_2_T , SVOP_1_T , SVOP_0_T  };
  logic [13:0] SVOP_S ;
  assign SVOP_S = 0 ;
  logic [0:0] SVOP_7_R1 ;
  logic [0:0] SVOP_7_X1 ;
  logic [0:0] SVOP_7_C1 ;
  assign SVOP_7_R1 = SVOP_R [7:7] ;
  assign SVOP_7_X1 = SVOP_X [7:7] ;
  assign SVOP_7_C1 = SVOP_C [7:7] ;
  logic [0:0] SVOP_6_R1 ;
  logic [0:0] SVOP_6_X1 ;
  logic [0:0] SVOP_6_C1 ;
  assign SVOP_6_R1 = SVOP_R [6:6] ;
  assign SVOP_6_X1 = SVOP_X [6:6] ;
  assign SVOP_6_C1 = SVOP_C [6:6] ;
  logic [0:0] SVOP_5_R1 ;
  logic [0:0] SVOP_5_X1 ;
  logic [0:0] SVOP_5_C1 ;
  assign SVOP_5_R1 = SVOP_R [5:5] ;
  assign SVOP_5_X1 = SVOP_X [5:5] ;
  assign SVOP_5_C1 = SVOP_C [5:5] ;
  logic [0:0] SVOP_4_R1 ;
  logic [0:0] SVOP_4_X1 ;
  logic [0:0] SVOP_4_C1 ;
  assign SVOP_4_R1 = SVOP_R [4:4] ;
  assign SVOP_4_X1 = SVOP_X [4:4] ;
  assign SVOP_4_C1 = SVOP_C [4:4] ;
  logic [0:0] SVOP_3_R1 ;
  logic [0:0] SVOP_3_X1 ;
  logic [0:0] SVOP_3_C1 ;
  assign SVOP_3_R1 = SVOP_R [3:3] ;
  assign SVOP_3_X1 = SVOP_X [3:3] ;
  assign SVOP_3_C1 = SVOP_C [3:3] ;
  logic [0:0] SVOP_2_R1 ;
  logic [0:0] SVOP_2_X1 ;
  logic [0:0] SVOP_2_C1 ;
  assign SVOP_2_R1 = SVOP_R [2:2] ;
  assign SVOP_2_X1 = SVOP_X [2:2] ;
  assign SVOP_2_C1 = SVOP_C [2:2] ;
  logic [0:0] SVOP_1_R1 ;
  logic [0:0] SVOP_1_X1 ;
  logic [0:0] SVOP_1_C1 ;
  assign SVOP_1_R1 = SVOP_R [1:1] ;
  assign SVOP_1_X1 = SVOP_X [1:1] ;
  assign SVOP_1_C1 = SVOP_C [1:1] ;
  logic [0:0] SVOP_0_R1 ;
  logic [0:0] SVOP_0_X1 ;
  logic [0:0] SVOP_0_C1 ;
  assign SVOP_0_R1 = SVOP_R [0:0] ;
  assign SVOP_0_X1 = SVOP_X [0:0] ;
  assign SVOP_0_C1 = SVOP_C [0:0] ;
  assign VDD = 1'b1;
  assign VDD_T = 0 ;
  assign VDD_S = 14'b1 ;
  assign WA = { WADR_7, WADR_6, WADR_5, WADR_4, WADR_3, WADR_2, WADR_1, WADR_0 };
  assign WA_T = {  WADR_7_T , WADR_6_T , WADR_5_T , WADR_4_T , WADR_3_T , WADR_2_T , WADR_1_T , WADR_0_T  };
  logic [13:0] WA_S ;
  assign WA_S = 0 ;
  logic [0:0] WADR_7_R1 ;
  logic [0:0] WADR_7_X1 ;
  logic [0:0] WADR_7_C1 ;
  assign WADR_7_R1 = WA_R [7:7] ;
  assign WADR_7_X1 = WA_X [7:7] ;
  assign WADR_7_C1 = WA_C [7:7] ;
  logic [0:0] WADR_6_R1 ;
  logic [0:0] WADR_6_X1 ;
  logic [0:0] WADR_6_C1 ;
  assign WADR_6_R1 = WA_R [6:6] ;
  assign WADR_6_X1 = WA_X [6:6] ;
  assign WADR_6_C1 = WA_C [6:6] ;
  logic [0:0] WADR_5_R1 ;
  logic [0:0] WADR_5_X1 ;
  logic [0:0] WADR_5_C1 ;
  assign WADR_5_R1 = WA_R [5:5] ;
  assign WADR_5_X1 = WA_X [5:5] ;
  assign WADR_5_C1 = WA_C [5:5] ;
  logic [0:0] WADR_4_R1 ;
  logic [0:0] WADR_4_X1 ;
  logic [0:0] WADR_4_C1 ;
  assign WADR_4_R1 = WA_R [4:4] ;
  assign WADR_4_X1 = WA_X [4:4] ;
  assign WADR_4_C1 = WA_C [4:4] ;
  logic [0:0] WADR_3_R1 ;
  logic [0:0] WADR_3_X1 ;
  logic [0:0] WADR_3_C1 ;
  assign WADR_3_R1 = WA_R [3:3] ;
  assign WADR_3_X1 = WA_X [3:3] ;
  assign WADR_3_C1 = WA_C [3:3] ;
  logic [0:0] WADR_2_R1 ;
  logic [0:0] WADR_2_X1 ;
  logic [0:0] WADR_2_C1 ;
  assign WADR_2_R1 = WA_R [2:2] ;
  assign WADR_2_X1 = WA_X [2:2] ;
  assign WADR_2_C1 = WA_C [2:2] ;
  logic [0:0] WADR_1_R1 ;
  logic [0:0] WADR_1_X1 ;
  logic [0:0] WADR_1_C1 ;
  assign WADR_1_R1 = WA_R [1:1] ;
  assign WADR_1_X1 = WA_X [1:1] ;
  assign WADR_1_C1 = WA_C [1:1] ;
  logic [0:0] WADR_0_R1 ;
  logic [0:0] WADR_0_X1 ;
  logic [0:0] WADR_0_C1 ;
  assign WADR_0_R1 = WA_R [0:0] ;
  assign WADR_0_X1 = WA_X [0:0] ;
  assign WADR_0_C1 = WA_C [0:0] ;
  assign WD = { WD_81, WD_80, WD_79, WD_78, WD_77, WD_76, WD_75, WD_74, WD_73, WD_72, WD_71, WD_70, WD_69, WD_68, WD_67, WD_66, WD_65, WD_64, WD_63, WD_62, WD_61, WD_60, WD_59, WD_58, WD_57, WD_56, WD_55, WD_54, WD_53, WD_52, WD_51, WD_50, WD_49, WD_48, WD_47, WD_46, WD_45, WD_44, WD_43, WD_42, WD_41, WD_40, WD_39, WD_38, WD_37, WD_36, WD_35, WD_34, WD_33, WD_32, WD_31, WD_30, WD_29, WD_28, WD_27, WD_26, WD_25, WD_24, WD_23, WD_22, WD_21, WD_20, WD_19, WD_18, WD_17, WD_16, WD_15, WD_14, WD_13, WD_12, WD_11, WD_10, WD_9, WD_8, WD_7, WD_6, WD_5, WD_4, WD_3, WD_2, WD_1, WD_0 };
  assign WD_T = {  WD_81_T , WD_80_T , WD_79_T , WD_78_T , WD_77_T , WD_76_T , WD_75_T , WD_74_T , WD_73_T , WD_72_T , WD_71_T , WD_70_T , WD_69_T , WD_68_T , WD_67_T , WD_66_T , WD_65_T , WD_64_T , WD_63_T , WD_62_T , WD_61_T , WD_60_T , WD_59_T , WD_58_T , WD_57_T , WD_56_T , WD_55_T , WD_54_T , WD_53_T , WD_52_T , WD_51_T , WD_50_T , WD_49_T , WD_48_T , WD_47_T , WD_46_T , WD_45_T , WD_44_T , WD_43_T , WD_42_T , WD_41_T , WD_40_T , WD_39_T , WD_38_T , WD_37_T , WD_36_T , WD_35_T , WD_34_T , WD_33_T , WD_32_T , WD_31_T , WD_30_T , WD_29_T , WD_28_T , WD_27_T , WD_26_T , WD_25_T , WD_24_T , WD_23_T , WD_22_T , WD_21_T , WD_20_T , WD_19_T , WD_18_T , WD_17_T , WD_16_T , WD_15_T , WD_14_T , WD_13_T , WD_12_T , WD_11_T , WD_10_T , WD_9_T , WD_8_T , WD_7_T , WD_6_T , WD_5_T , WD_4_T , WD_3_T , WD_2_T , WD_1_T , WD_0_T  };
  logic [13:0] WD_S ;
  assign WD_S = 0 ;
  logic [0:0] WD_81_R1 ;
  logic [0:0] WD_81_X1 ;
  logic [0:0] WD_81_C1 ;
  assign WD_81_R1 = WD_R [81:81] ;
  assign WD_81_X1 = WD_X [81:81] ;
  assign WD_81_C1 = WD_C [81:81] ;
  logic [0:0] WD_80_R1 ;
  logic [0:0] WD_80_X1 ;
  logic [0:0] WD_80_C1 ;
  assign WD_80_R1 = WD_R [80:80] ;
  assign WD_80_X1 = WD_X [80:80] ;
  assign WD_80_C1 = WD_C [80:80] ;
  logic [0:0] WD_79_R1 ;
  logic [0:0] WD_79_X1 ;
  logic [0:0] WD_79_C1 ;
  assign WD_79_R1 = WD_R [79:79] ;
  assign WD_79_X1 = WD_X [79:79] ;
  assign WD_79_C1 = WD_C [79:79] ;
  logic [0:0] WD_78_R1 ;
  logic [0:0] WD_78_X1 ;
  logic [0:0] WD_78_C1 ;
  assign WD_78_R1 = WD_R [78:78] ;
  assign WD_78_X1 = WD_X [78:78] ;
  assign WD_78_C1 = WD_C [78:78] ;
  logic [0:0] WD_77_R1 ;
  logic [0:0] WD_77_X1 ;
  logic [0:0] WD_77_C1 ;
  assign WD_77_R1 = WD_R [77:77] ;
  assign WD_77_X1 = WD_X [77:77] ;
  assign WD_77_C1 = WD_C [77:77] ;
  logic [0:0] WD_76_R1 ;
  logic [0:0] WD_76_X1 ;
  logic [0:0] WD_76_C1 ;
  assign WD_76_R1 = WD_R [76:76] ;
  assign WD_76_X1 = WD_X [76:76] ;
  assign WD_76_C1 = WD_C [76:76] ;
  logic [0:0] WD_75_R1 ;
  logic [0:0] WD_75_X1 ;
  logic [0:0] WD_75_C1 ;
  assign WD_75_R1 = WD_R [75:75] ;
  assign WD_75_X1 = WD_X [75:75] ;
  assign WD_75_C1 = WD_C [75:75] ;
  logic [0:0] WD_74_R1 ;
  logic [0:0] WD_74_X1 ;
  logic [0:0] WD_74_C1 ;
  assign WD_74_R1 = WD_R [74:74] ;
  assign WD_74_X1 = WD_X [74:74] ;
  assign WD_74_C1 = WD_C [74:74] ;
  logic [0:0] WD_73_R1 ;
  logic [0:0] WD_73_X1 ;
  logic [0:0] WD_73_C1 ;
  assign WD_73_R1 = WD_R [73:73] ;
  assign WD_73_X1 = WD_X [73:73] ;
  assign WD_73_C1 = WD_C [73:73] ;
  logic [0:0] WD_72_R1 ;
  logic [0:0] WD_72_X1 ;
  logic [0:0] WD_72_C1 ;
  assign WD_72_R1 = WD_R [72:72] ;
  assign WD_72_X1 = WD_X [72:72] ;
  assign WD_72_C1 = WD_C [72:72] ;
  logic [0:0] WD_71_R1 ;
  logic [0:0] WD_71_X1 ;
  logic [0:0] WD_71_C1 ;
  assign WD_71_R1 = WD_R [71:71] ;
  assign WD_71_X1 = WD_X [71:71] ;
  assign WD_71_C1 = WD_C [71:71] ;
  logic [0:0] WD_70_R1 ;
  logic [0:0] WD_70_X1 ;
  logic [0:0] WD_70_C1 ;
  assign WD_70_R1 = WD_R [70:70] ;
  assign WD_70_X1 = WD_X [70:70] ;
  assign WD_70_C1 = WD_C [70:70] ;
  logic [0:0] WD_69_R1 ;
  logic [0:0] WD_69_X1 ;
  logic [0:0] WD_69_C1 ;
  assign WD_69_R1 = WD_R [69:69] ;
  assign WD_69_X1 = WD_X [69:69] ;
  assign WD_69_C1 = WD_C [69:69] ;
  logic [0:0] WD_68_R1 ;
  logic [0:0] WD_68_X1 ;
  logic [0:0] WD_68_C1 ;
  assign WD_68_R1 = WD_R [68:68] ;
  assign WD_68_X1 = WD_X [68:68] ;
  assign WD_68_C1 = WD_C [68:68] ;
  logic [0:0] WD_67_R1 ;
  logic [0:0] WD_67_X1 ;
  logic [0:0] WD_67_C1 ;
  assign WD_67_R1 = WD_R [67:67] ;
  assign WD_67_X1 = WD_X [67:67] ;
  assign WD_67_C1 = WD_C [67:67] ;
  logic [0:0] WD_66_R1 ;
  logic [0:0] WD_66_X1 ;
  logic [0:0] WD_66_C1 ;
  assign WD_66_R1 = WD_R [66:66] ;
  assign WD_66_X1 = WD_X [66:66] ;
  assign WD_66_C1 = WD_C [66:66] ;
  logic [0:0] WD_65_R1 ;
  logic [0:0] WD_65_X1 ;
  logic [0:0] WD_65_C1 ;
  assign WD_65_R1 = WD_R [65:65] ;
  assign WD_65_X1 = WD_X [65:65] ;
  assign WD_65_C1 = WD_C [65:65] ;
  logic [0:0] WD_64_R1 ;
  logic [0:0] WD_64_X1 ;
  logic [0:0] WD_64_C1 ;
  assign WD_64_R1 = WD_R [64:64] ;
  assign WD_64_X1 = WD_X [64:64] ;
  assign WD_64_C1 = WD_C [64:64] ;
  logic [0:0] WD_63_R1 ;
  logic [0:0] WD_63_X1 ;
  logic [0:0] WD_63_C1 ;
  assign WD_63_R1 = WD_R [63:63] ;
  assign WD_63_X1 = WD_X [63:63] ;
  assign WD_63_C1 = WD_C [63:63] ;
  logic [0:0] WD_62_R1 ;
  logic [0:0] WD_62_X1 ;
  logic [0:0] WD_62_C1 ;
  assign WD_62_R1 = WD_R [62:62] ;
  assign WD_62_X1 = WD_X [62:62] ;
  assign WD_62_C1 = WD_C [62:62] ;
  logic [0:0] WD_61_R1 ;
  logic [0:0] WD_61_X1 ;
  logic [0:0] WD_61_C1 ;
  assign WD_61_R1 = WD_R [61:61] ;
  assign WD_61_X1 = WD_X [61:61] ;
  assign WD_61_C1 = WD_C [61:61] ;
  logic [0:0] WD_60_R1 ;
  logic [0:0] WD_60_X1 ;
  logic [0:0] WD_60_C1 ;
  assign WD_60_R1 = WD_R [60:60] ;
  assign WD_60_X1 = WD_X [60:60] ;
  assign WD_60_C1 = WD_C [60:60] ;
  logic [0:0] WD_59_R1 ;
  logic [0:0] WD_59_X1 ;
  logic [0:0] WD_59_C1 ;
  assign WD_59_R1 = WD_R [59:59] ;
  assign WD_59_X1 = WD_X [59:59] ;
  assign WD_59_C1 = WD_C [59:59] ;
  logic [0:0] WD_58_R1 ;
  logic [0:0] WD_58_X1 ;
  logic [0:0] WD_58_C1 ;
  assign WD_58_R1 = WD_R [58:58] ;
  assign WD_58_X1 = WD_X [58:58] ;
  assign WD_58_C1 = WD_C [58:58] ;
  logic [0:0] WD_57_R1 ;
  logic [0:0] WD_57_X1 ;
  logic [0:0] WD_57_C1 ;
  assign WD_57_R1 = WD_R [57:57] ;
  assign WD_57_X1 = WD_X [57:57] ;
  assign WD_57_C1 = WD_C [57:57] ;
  logic [0:0] WD_56_R1 ;
  logic [0:0] WD_56_X1 ;
  logic [0:0] WD_56_C1 ;
  assign WD_56_R1 = WD_R [56:56] ;
  assign WD_56_X1 = WD_X [56:56] ;
  assign WD_56_C1 = WD_C [56:56] ;
  logic [0:0] WD_55_R1 ;
  logic [0:0] WD_55_X1 ;
  logic [0:0] WD_55_C1 ;
  assign WD_55_R1 = WD_R [55:55] ;
  assign WD_55_X1 = WD_X [55:55] ;
  assign WD_55_C1 = WD_C [55:55] ;
  logic [0:0] WD_54_R1 ;
  logic [0:0] WD_54_X1 ;
  logic [0:0] WD_54_C1 ;
  assign WD_54_R1 = WD_R [54:54] ;
  assign WD_54_X1 = WD_X [54:54] ;
  assign WD_54_C1 = WD_C [54:54] ;
  logic [0:0] WD_53_R1 ;
  logic [0:0] WD_53_X1 ;
  logic [0:0] WD_53_C1 ;
  assign WD_53_R1 = WD_R [53:53] ;
  assign WD_53_X1 = WD_X [53:53] ;
  assign WD_53_C1 = WD_C [53:53] ;
  logic [0:0] WD_52_R1 ;
  logic [0:0] WD_52_X1 ;
  logic [0:0] WD_52_C1 ;
  assign WD_52_R1 = WD_R [52:52] ;
  assign WD_52_X1 = WD_X [52:52] ;
  assign WD_52_C1 = WD_C [52:52] ;
  logic [0:0] WD_51_R1 ;
  logic [0:0] WD_51_X1 ;
  logic [0:0] WD_51_C1 ;
  assign WD_51_R1 = WD_R [51:51] ;
  assign WD_51_X1 = WD_X [51:51] ;
  assign WD_51_C1 = WD_C [51:51] ;
  logic [0:0] WD_50_R1 ;
  logic [0:0] WD_50_X1 ;
  logic [0:0] WD_50_C1 ;
  assign WD_50_R1 = WD_R [50:50] ;
  assign WD_50_X1 = WD_X [50:50] ;
  assign WD_50_C1 = WD_C [50:50] ;
  logic [0:0] WD_49_R1 ;
  logic [0:0] WD_49_X1 ;
  logic [0:0] WD_49_C1 ;
  assign WD_49_R1 = WD_R [49:49] ;
  assign WD_49_X1 = WD_X [49:49] ;
  assign WD_49_C1 = WD_C [49:49] ;
  logic [0:0] WD_48_R1 ;
  logic [0:0] WD_48_X1 ;
  logic [0:0] WD_48_C1 ;
  assign WD_48_R1 = WD_R [48:48] ;
  assign WD_48_X1 = WD_X [48:48] ;
  assign WD_48_C1 = WD_C [48:48] ;
  logic [0:0] WD_47_R1 ;
  logic [0:0] WD_47_X1 ;
  logic [0:0] WD_47_C1 ;
  assign WD_47_R1 = WD_R [47:47] ;
  assign WD_47_X1 = WD_X [47:47] ;
  assign WD_47_C1 = WD_C [47:47] ;
  logic [0:0] WD_46_R1 ;
  logic [0:0] WD_46_X1 ;
  logic [0:0] WD_46_C1 ;
  assign WD_46_R1 = WD_R [46:46] ;
  assign WD_46_X1 = WD_X [46:46] ;
  assign WD_46_C1 = WD_C [46:46] ;
  logic [0:0] WD_45_R1 ;
  logic [0:0] WD_45_X1 ;
  logic [0:0] WD_45_C1 ;
  assign WD_45_R1 = WD_R [45:45] ;
  assign WD_45_X1 = WD_X [45:45] ;
  assign WD_45_C1 = WD_C [45:45] ;
  logic [0:0] WD_44_R1 ;
  logic [0:0] WD_44_X1 ;
  logic [0:0] WD_44_C1 ;
  assign WD_44_R1 = WD_R [44:44] ;
  assign WD_44_X1 = WD_X [44:44] ;
  assign WD_44_C1 = WD_C [44:44] ;
  logic [0:0] WD_43_R1 ;
  logic [0:0] WD_43_X1 ;
  logic [0:0] WD_43_C1 ;
  assign WD_43_R1 = WD_R [43:43] ;
  assign WD_43_X1 = WD_X [43:43] ;
  assign WD_43_C1 = WD_C [43:43] ;
  logic [0:0] WD_42_R1 ;
  logic [0:0] WD_42_X1 ;
  logic [0:0] WD_42_C1 ;
  assign WD_42_R1 = WD_R [42:42] ;
  assign WD_42_X1 = WD_X [42:42] ;
  assign WD_42_C1 = WD_C [42:42] ;
  logic [0:0] WD_41_R1 ;
  logic [0:0] WD_41_X1 ;
  logic [0:0] WD_41_C1 ;
  assign WD_41_R1 = WD_R [41:41] ;
  assign WD_41_X1 = WD_X [41:41] ;
  assign WD_41_C1 = WD_C [41:41] ;
  logic [0:0] WD_40_R1 ;
  logic [0:0] WD_40_X1 ;
  logic [0:0] WD_40_C1 ;
  assign WD_40_R1 = WD_R [40:40] ;
  assign WD_40_X1 = WD_X [40:40] ;
  assign WD_40_C1 = WD_C [40:40] ;
  logic [0:0] WD_39_R1 ;
  logic [0:0] WD_39_X1 ;
  logic [0:0] WD_39_C1 ;
  assign WD_39_R1 = WD_R [39:39] ;
  assign WD_39_X1 = WD_X [39:39] ;
  assign WD_39_C1 = WD_C [39:39] ;
  logic [0:0] WD_38_R1 ;
  logic [0:0] WD_38_X1 ;
  logic [0:0] WD_38_C1 ;
  assign WD_38_R1 = WD_R [38:38] ;
  assign WD_38_X1 = WD_X [38:38] ;
  assign WD_38_C1 = WD_C [38:38] ;
  logic [0:0] WD_37_R1 ;
  logic [0:0] WD_37_X1 ;
  logic [0:0] WD_37_C1 ;
  assign WD_37_R1 = WD_R [37:37] ;
  assign WD_37_X1 = WD_X [37:37] ;
  assign WD_37_C1 = WD_C [37:37] ;
  logic [0:0] WD_36_R1 ;
  logic [0:0] WD_36_X1 ;
  logic [0:0] WD_36_C1 ;
  assign WD_36_R1 = WD_R [36:36] ;
  assign WD_36_X1 = WD_X [36:36] ;
  assign WD_36_C1 = WD_C [36:36] ;
  logic [0:0] WD_35_R1 ;
  logic [0:0] WD_35_X1 ;
  logic [0:0] WD_35_C1 ;
  assign WD_35_R1 = WD_R [35:35] ;
  assign WD_35_X1 = WD_X [35:35] ;
  assign WD_35_C1 = WD_C [35:35] ;
  logic [0:0] WD_34_R1 ;
  logic [0:0] WD_34_X1 ;
  logic [0:0] WD_34_C1 ;
  assign WD_34_R1 = WD_R [34:34] ;
  assign WD_34_X1 = WD_X [34:34] ;
  assign WD_34_C1 = WD_C [34:34] ;
  logic [0:0] WD_33_R1 ;
  logic [0:0] WD_33_X1 ;
  logic [0:0] WD_33_C1 ;
  assign WD_33_R1 = WD_R [33:33] ;
  assign WD_33_X1 = WD_X [33:33] ;
  assign WD_33_C1 = WD_C [33:33] ;
  logic [0:0] WD_32_R1 ;
  logic [0:0] WD_32_X1 ;
  logic [0:0] WD_32_C1 ;
  assign WD_32_R1 = WD_R [32:32] ;
  assign WD_32_X1 = WD_X [32:32] ;
  assign WD_32_C1 = WD_C [32:32] ;
  logic [0:0] WD_31_R1 ;
  logic [0:0] WD_31_X1 ;
  logic [0:0] WD_31_C1 ;
  assign WD_31_R1 = WD_R [31:31] ;
  assign WD_31_X1 = WD_X [31:31] ;
  assign WD_31_C1 = WD_C [31:31] ;
  logic [0:0] WD_30_R1 ;
  logic [0:0] WD_30_X1 ;
  logic [0:0] WD_30_C1 ;
  assign WD_30_R1 = WD_R [30:30] ;
  assign WD_30_X1 = WD_X [30:30] ;
  assign WD_30_C1 = WD_C [30:30] ;
  logic [0:0] WD_29_R1 ;
  logic [0:0] WD_29_X1 ;
  logic [0:0] WD_29_C1 ;
  assign WD_29_R1 = WD_R [29:29] ;
  assign WD_29_X1 = WD_X [29:29] ;
  assign WD_29_C1 = WD_C [29:29] ;
  logic [0:0] WD_28_R1 ;
  logic [0:0] WD_28_X1 ;
  logic [0:0] WD_28_C1 ;
  assign WD_28_R1 = WD_R [28:28] ;
  assign WD_28_X1 = WD_X [28:28] ;
  assign WD_28_C1 = WD_C [28:28] ;
  logic [0:0] WD_27_R1 ;
  logic [0:0] WD_27_X1 ;
  logic [0:0] WD_27_C1 ;
  assign WD_27_R1 = WD_R [27:27] ;
  assign WD_27_X1 = WD_X [27:27] ;
  assign WD_27_C1 = WD_C [27:27] ;
  logic [0:0] WD_26_R1 ;
  logic [0:0] WD_26_X1 ;
  logic [0:0] WD_26_C1 ;
  assign WD_26_R1 = WD_R [26:26] ;
  assign WD_26_X1 = WD_X [26:26] ;
  assign WD_26_C1 = WD_C [26:26] ;
  logic [0:0] WD_25_R1 ;
  logic [0:0] WD_25_X1 ;
  logic [0:0] WD_25_C1 ;
  assign WD_25_R1 = WD_R [25:25] ;
  assign WD_25_X1 = WD_X [25:25] ;
  assign WD_25_C1 = WD_C [25:25] ;
  logic [0:0] WD_24_R1 ;
  logic [0:0] WD_24_X1 ;
  logic [0:0] WD_24_C1 ;
  assign WD_24_R1 = WD_R [24:24] ;
  assign WD_24_X1 = WD_X [24:24] ;
  assign WD_24_C1 = WD_C [24:24] ;
  logic [0:0] WD_23_R1 ;
  logic [0:0] WD_23_X1 ;
  logic [0:0] WD_23_C1 ;
  assign WD_23_R1 = WD_R [23:23] ;
  assign WD_23_X1 = WD_X [23:23] ;
  assign WD_23_C1 = WD_C [23:23] ;
  logic [0:0] WD_22_R1 ;
  logic [0:0] WD_22_X1 ;
  logic [0:0] WD_22_C1 ;
  assign WD_22_R1 = WD_R [22:22] ;
  assign WD_22_X1 = WD_X [22:22] ;
  assign WD_22_C1 = WD_C [22:22] ;
  logic [0:0] WD_21_R1 ;
  logic [0:0] WD_21_X1 ;
  logic [0:0] WD_21_C1 ;
  assign WD_21_R1 = WD_R [21:21] ;
  assign WD_21_X1 = WD_X [21:21] ;
  assign WD_21_C1 = WD_C [21:21] ;
  logic [0:0] WD_20_R1 ;
  logic [0:0] WD_20_X1 ;
  logic [0:0] WD_20_C1 ;
  assign WD_20_R1 = WD_R [20:20] ;
  assign WD_20_X1 = WD_X [20:20] ;
  assign WD_20_C1 = WD_C [20:20] ;
  logic [0:0] WD_19_R1 ;
  logic [0:0] WD_19_X1 ;
  logic [0:0] WD_19_C1 ;
  assign WD_19_R1 = WD_R [19:19] ;
  assign WD_19_X1 = WD_X [19:19] ;
  assign WD_19_C1 = WD_C [19:19] ;
  logic [0:0] WD_18_R1 ;
  logic [0:0] WD_18_X1 ;
  logic [0:0] WD_18_C1 ;
  assign WD_18_R1 = WD_R [18:18] ;
  assign WD_18_X1 = WD_X [18:18] ;
  assign WD_18_C1 = WD_C [18:18] ;
  logic [0:0] WD_17_R1 ;
  logic [0:0] WD_17_X1 ;
  logic [0:0] WD_17_C1 ;
  assign WD_17_R1 = WD_R [17:17] ;
  assign WD_17_X1 = WD_X [17:17] ;
  assign WD_17_C1 = WD_C [17:17] ;
  logic [0:0] WD_16_R1 ;
  logic [0:0] WD_16_X1 ;
  logic [0:0] WD_16_C1 ;
  assign WD_16_R1 = WD_R [16:16] ;
  assign WD_16_X1 = WD_X [16:16] ;
  assign WD_16_C1 = WD_C [16:16] ;
  logic [0:0] WD_15_R1 ;
  logic [0:0] WD_15_X1 ;
  logic [0:0] WD_15_C1 ;
  assign WD_15_R1 = WD_R [15:15] ;
  assign WD_15_X1 = WD_X [15:15] ;
  assign WD_15_C1 = WD_C [15:15] ;
  logic [0:0] WD_14_R1 ;
  logic [0:0] WD_14_X1 ;
  logic [0:0] WD_14_C1 ;
  assign WD_14_R1 = WD_R [14:14] ;
  assign WD_14_X1 = WD_X [14:14] ;
  assign WD_14_C1 = WD_C [14:14] ;
  logic [0:0] WD_13_R1 ;
  logic [0:0] WD_13_X1 ;
  logic [0:0] WD_13_C1 ;
  assign WD_13_R1 = WD_R [13:13] ;
  assign WD_13_X1 = WD_X [13:13] ;
  assign WD_13_C1 = WD_C [13:13] ;
  logic [0:0] WD_12_R1 ;
  logic [0:0] WD_12_X1 ;
  logic [0:0] WD_12_C1 ;
  assign WD_12_R1 = WD_R [12:12] ;
  assign WD_12_X1 = WD_X [12:12] ;
  assign WD_12_C1 = WD_C [12:12] ;
  logic [0:0] WD_11_R1 ;
  logic [0:0] WD_11_X1 ;
  logic [0:0] WD_11_C1 ;
  assign WD_11_R1 = WD_R [11:11] ;
  assign WD_11_X1 = WD_X [11:11] ;
  assign WD_11_C1 = WD_C [11:11] ;
  logic [0:0] WD_10_R1 ;
  logic [0:0] WD_10_X1 ;
  logic [0:0] WD_10_C1 ;
  assign WD_10_R1 = WD_R [10:10] ;
  assign WD_10_X1 = WD_X [10:10] ;
  assign WD_10_C1 = WD_C [10:10] ;
  logic [0:0] WD_9_R1 ;
  logic [0:0] WD_9_X1 ;
  logic [0:0] WD_9_C1 ;
  assign WD_9_R1 = WD_R [9:9] ;
  assign WD_9_X1 = WD_X [9:9] ;
  assign WD_9_C1 = WD_C [9:9] ;
  logic [0:0] WD_8_R1 ;
  logic [0:0] WD_8_X1 ;
  logic [0:0] WD_8_C1 ;
  assign WD_8_R1 = WD_R [8:8] ;
  assign WD_8_X1 = WD_X [8:8] ;
  assign WD_8_C1 = WD_C [8:8] ;
  logic [0:0] WD_7_R1 ;
  logic [0:0] WD_7_X1 ;
  logic [0:0] WD_7_C1 ;
  assign WD_7_R1 = WD_R [7:7] ;
  assign WD_7_X1 = WD_X [7:7] ;
  assign WD_7_C1 = WD_C [7:7] ;
  logic [0:0] WD_6_R1 ;
  logic [0:0] WD_6_X1 ;
  logic [0:0] WD_6_C1 ;
  assign WD_6_R1 = WD_R [6:6] ;
  assign WD_6_X1 = WD_X [6:6] ;
  assign WD_6_C1 = WD_C [6:6] ;
  logic [0:0] WD_5_R1 ;
  logic [0:0] WD_5_X1 ;
  logic [0:0] WD_5_C1 ;
  assign WD_5_R1 = WD_R [5:5] ;
  assign WD_5_X1 = WD_X [5:5] ;
  assign WD_5_C1 = WD_C [5:5] ;
  logic [0:0] WD_4_R1 ;
  logic [0:0] WD_4_X1 ;
  logic [0:0] WD_4_C1 ;
  assign WD_4_R1 = WD_R [4:4] ;
  assign WD_4_X1 = WD_X [4:4] ;
  assign WD_4_C1 = WD_C [4:4] ;
  logic [0:0] WD_3_R1 ;
  logic [0:0] WD_3_X1 ;
  logic [0:0] WD_3_C1 ;
  assign WD_3_R1 = WD_R [3:3] ;
  assign WD_3_X1 = WD_X [3:3] ;
  assign WD_3_C1 = WD_C [3:3] ;
  logic [0:0] WD_2_R1 ;
  logic [0:0] WD_2_X1 ;
  logic [0:0] WD_2_C1 ;
  assign WD_2_R1 = WD_R [2:2] ;
  assign WD_2_X1 = WD_X [2:2] ;
  assign WD_2_C1 = WD_C [2:2] ;
  logic [0:0] WD_1_R1 ;
  logic [0:0] WD_1_X1 ;
  logic [0:0] WD_1_C1 ;
  assign WD_1_R1 = WD_R [1:1] ;
  assign WD_1_X1 = WD_X [1:1] ;
  assign WD_1_C1 = WD_C [1:1] ;
  logic [0:0] WD_0_R1 ;
  logic [0:0] WD_0_X1 ;
  logic [0:0] WD_0_C1 ;
  assign WD_0_R1 = WD_R [0:0] ;
  assign WD_0_X1 = WD_X [0:0] ;
  assign WD_0_C1 = WD_C [0:0] ;
  assign clamp_rd = SLEEP_EN_7;
  logic [0:0] SLEEP_EN_7_C84 ;
  logic [0:0] SLEEP_EN_7_R84 ;
  logic [0:0] SLEEP_EN_7_X84 ;
  assign clamp_rd_T = SLEEP_EN_7_T ;
  assign SLEEP_EN_7_C84 = clamp_rd_C ;
  assign SLEEP_EN_7_R84 = clamp_rd_R ;
  assign SLEEP_EN_7_X84 = clamp_rd_X ;
  assign clamp_rd_S = SLEEP_EN_7_S ;
  assign clobber_array = 1'b0;
  assign clobber_array_T = 0 ;
  assign clobber_array_S = 14'b1 ;
  assign clobber_flops = 1'b0;
  assign clobber_flops_T = 0 ;
  assign clobber_flops_S = 14'b1 ;
  assign clobber_x = 1'b0;
  assign clobber_x_T = 0 ;
  assign clobber_x_S = 14'b1 ;
  assign WE_C = ( WE_C0 );
  assign WD_0_C = ( WD_0_C0 ) | ( WD_0_C1 );
  assign WD_1_C = ( WD_1_C0 ) | ( WD_1_C1 );
  assign WD_2_C = ( WD_2_C0 ) | ( WD_2_C1 );
  assign WD_3_C = ( WD_3_C0 ) | ( WD_3_C1 );
  assign WD_4_C = ( WD_4_C0 ) | ( WD_4_C1 );
  assign WD_5_C = ( WD_5_C0 ) | ( WD_5_C1 );
  assign WD_6_C = ( WD_6_C0 ) | ( WD_6_C1 );
  assign WD_7_C = ( WD_7_C0 ) | ( WD_7_C1 );
  assign WD_8_C = ( WD_8_C0 ) | ( WD_8_C1 );
  assign WD_9_C = ( WD_9_C0 ) | ( WD_9_C1 );
  assign WD_10_C = ( WD_10_C0 ) | ( WD_10_C1 );
  assign WD_11_C = ( WD_11_C0 ) | ( WD_11_C1 );
  assign WD_12_C = ( WD_12_C0 ) | ( WD_12_C1 );
  assign WD_13_C = ( WD_13_C0 ) | ( WD_13_C1 );
  assign WD_14_C = ( WD_14_C0 ) | ( WD_14_C1 );
  assign WD_15_C = ( WD_15_C0 ) | ( WD_15_C1 );
  assign WD_16_C = ( WD_16_C0 ) | ( WD_16_C1 );
  assign WD_17_C = ( WD_17_C0 ) | ( WD_17_C1 );
  assign WD_18_C = ( WD_18_C0 ) | ( WD_18_C1 );
  assign WD_19_C = ( WD_19_C0 ) | ( WD_19_C1 );
  assign WD_20_C = ( WD_20_C0 ) | ( WD_20_C1 );
  assign WD_21_C = ( WD_21_C0 ) | ( WD_21_C1 );
  assign WD_22_C = ( WD_22_C0 ) | ( WD_22_C1 );
  assign WD_23_C = ( WD_23_C0 ) | ( WD_23_C1 );
  assign WD_24_C = ( WD_24_C0 ) | ( WD_24_C1 );
  assign WD_25_C = ( WD_25_C0 ) | ( WD_25_C1 );
  assign WD_26_C = ( WD_26_C0 ) | ( WD_26_C1 );
  assign WD_27_C = ( WD_27_C0 ) | ( WD_27_C1 );
  assign WD_28_C = ( WD_28_C0 ) | ( WD_28_C1 );
  assign WD_29_C = ( WD_29_C0 ) | ( WD_29_C1 );
  assign WD_30_C = ( WD_30_C0 ) | ( WD_30_C1 );
  assign WD_31_C = ( WD_31_C0 ) | ( WD_31_C1 );
  assign WD_32_C = ( WD_32_C0 ) | ( WD_32_C1 );
  assign WD_33_C = ( WD_33_C0 ) | ( WD_33_C1 );
  assign WD_34_C = ( WD_34_C0 ) | ( WD_34_C1 );
  assign WD_35_C = ( WD_35_C0 ) | ( WD_35_C1 );
  assign WD_36_C = ( WD_36_C0 ) | ( WD_36_C1 );
  assign WD_37_C = ( WD_37_C0 ) | ( WD_37_C1 );
  assign WD_38_C = ( WD_38_C0 ) | ( WD_38_C1 );
  assign WD_39_C = ( WD_39_C0 ) | ( WD_39_C1 );
  assign WD_40_C = ( WD_40_C0 ) | ( WD_40_C1 );
  assign WD_41_C = ( WD_41_C0 ) | ( WD_41_C1 );
  assign WD_42_C = ( WD_42_C0 ) | ( WD_42_C1 );
  assign WD_43_C = ( WD_43_C0 ) | ( WD_43_C1 );
  assign WD_44_C = ( WD_44_C0 ) | ( WD_44_C1 );
  assign WD_45_C = ( WD_45_C0 ) | ( WD_45_C1 );
  assign WD_46_C = ( WD_46_C0 ) | ( WD_46_C1 );
  assign WD_47_C = ( WD_47_C0 ) | ( WD_47_C1 );
  assign WD_48_C = ( WD_48_C0 ) | ( WD_48_C1 );
  assign WD_49_C = ( WD_49_C0 ) | ( WD_49_C1 );
  assign WD_50_C = ( WD_50_C0 ) | ( WD_50_C1 );
  assign WD_51_C = ( WD_51_C0 ) | ( WD_51_C1 );
  assign WD_52_C = ( WD_52_C0 ) | ( WD_52_C1 );
  assign WD_53_C = ( WD_53_C0 ) | ( WD_53_C1 );
  assign WD_54_C = ( WD_54_C0 ) | ( WD_54_C1 );
  assign WD_55_C = ( WD_55_C0 ) | ( WD_55_C1 );
  assign WD_56_C = ( WD_56_C0 ) | ( WD_56_C1 );
  assign WD_57_C = ( WD_57_C0 ) | ( WD_57_C1 );
  assign WD_58_C = ( WD_58_C0 ) | ( WD_58_C1 );
  assign WD_59_C = ( WD_59_C0 ) | ( WD_59_C1 );
  assign WD_60_C = ( WD_60_C0 ) | ( WD_60_C1 );
  assign WD_61_C = ( WD_61_C0 ) | ( WD_61_C1 );
  assign WD_62_C = ( WD_62_C0 ) | ( WD_62_C1 );
  assign WD_63_C = ( WD_63_C0 ) | ( WD_63_C1 );
  assign WD_64_C = ( WD_64_C0 ) | ( WD_64_C1 );
  assign WD_65_C = ( WD_65_C0 ) | ( WD_65_C1 );
  assign WD_66_C = ( WD_66_C0 ) | ( WD_66_C1 );
  assign WD_67_C = ( WD_67_C0 ) | ( WD_67_C1 );
  assign WD_68_C = ( WD_68_C0 ) | ( WD_68_C1 );
  assign WD_69_C = ( WD_69_C0 ) | ( WD_69_C1 );
  assign WD_70_C = ( WD_70_C0 ) | ( WD_70_C1 );
  assign WD_71_C = ( WD_71_C0 ) | ( WD_71_C1 );
  assign WD_72_C = ( WD_72_C0 ) | ( WD_72_C1 );
  assign WD_73_C = ( WD_73_C0 ) | ( WD_73_C1 );
  assign WD_74_C = ( WD_74_C0 ) | ( WD_74_C1 );
  assign WD_75_C = ( WD_75_C0 ) | ( WD_75_C1 );
  assign WD_76_C = ( WD_76_C0 ) | ( WD_76_C1 );
  assign WD_77_C = ( WD_77_C0 ) | ( WD_77_C1 );
  assign WD_78_C = ( WD_78_C0 ) | ( WD_78_C1 );
  assign WD_79_C = ( WD_79_C0 ) | ( WD_79_C1 );
  assign WD_80_C = ( WD_80_C0 ) | ( WD_80_C1 );
  assign WD_81_C = ( WD_81_C0 ) | ( WD_81_C1 );
  assign WADR_0_C = ( WADR_0_C0 ) | ( WADR_0_C1 );
  assign WADR_1_C = ( WADR_1_C0 ) | ( WADR_1_C1 );
  assign WADR_2_C = ( WADR_2_C0 ) | ( WADR_2_C1 );
  assign WADR_4_C = ( WADR_4_C0 ) | ( WADR_4_C1 );
  assign WADR_5_C = ( WADR_5_C0 ) | ( WADR_5_C1 );
  assign WADR_6_C = ( WADR_6_C0 ) | ( WADR_6_C1 );
  assign WADR_7_C = ( WADR_7_C0 ) | ( WADR_7_C1 );
  assign SVOP_0_C = ( SVOP_0_C0 ) | ( SVOP_0_C1 );
  assign SVOP_1_C = ( SVOP_1_C0 ) | ( SVOP_1_C1 );
  assign SVOP_2_C = ( SVOP_2_C0 ) | ( SVOP_2_C1 );
  assign SVOP_3_C = ( SVOP_3_C0 ) | ( SVOP_3_C1 );
  assign SVOP_4_C = ( SVOP_4_C0 ) | ( SVOP_4_C1 );
  assign SVOP_5_C = ( SVOP_5_C0 ) | ( SVOP_5_C1 );
  assign SVOP_6_C = ( SVOP_6_C0 ) | ( SVOP_6_C1 );
  assign SVOP_7_C = ( SVOP_7_C0 ) | ( SVOP_7_C1 );
  assign SLEEP_EN_0_C = ( SLEEP_EN_0_C0 ) | ( SLEEP_EN_0_C1 );
  assign SLEEP_EN_1_C = ( SLEEP_EN_1_C0 ) | ( SLEEP_EN_1_C1 );
  assign SLEEP_EN_2_C = ( SLEEP_EN_2_C0 ) | ( SLEEP_EN_2_C1 );
  assign SLEEP_EN_3_C = ( SLEEP_EN_3_C0 ) | ( SLEEP_EN_3_C1 );
  assign SLEEP_EN_4_C = ( SLEEP_EN_4_C0 ) | ( SLEEP_EN_4_C1 );
  assign SLEEP_EN_5_C = ( SLEEP_EN_5_C0 ) | ( SLEEP_EN_5_C1 );
  assign SLEEP_EN_6_C = ( SLEEP_EN_6_C0 ) | ( SLEEP_EN_6_C1 );
  assign RET_EN_C = ( RET_EN_C0 );
  assign RE_C = ( RE_C0 );
  assign RADR_0_C = ( RADR_0_C0 ) | ( RADR_0_C1 );
  assign RADR_1_C = ( RADR_1_C0 ) | ( RADR_1_C1 );
  assign RADR_2_C = ( RADR_2_C0 ) | ( RADR_2_C1 );
  assign RADR_3_C = ( RADR_3_C0 ) | ( RADR_3_C1 );
  assign RADR_4_C = ( RADR_4_C0 ) | ( RADR_4_C1 );
  assign RADR_5_C = ( RADR_5_C0 ) | ( RADR_5_C1 );
  assign RADR_6_C = ( RADR_6_C0 ) | ( RADR_6_C1 );
  assign RADR_7_C = ( RADR_7_C0 ) | ( RADR_7_C1 );
  assign IDDQ_C = ( IDDQ_C0 );
  assign fangyuan1_C = ( fangyuan1_C0 );
  assign SLEEP_EN_7_C = ( SLEEP_EN_7_C0 ) | ( SLEEP_EN_7_C1 ) | ( SLEEP_EN_7_C2 ) | ( SLEEP_EN_7_C3 ) | ( SLEEP_EN_7_C4 ) | ( SLEEP_EN_7_C5 ) | ( SLEEP_EN_7_C6 ) | ( SLEEP_EN_7_C7 ) | ( SLEEP_EN_7_C8 ) | ( SLEEP_EN_7_C9 ) | ( SLEEP_EN_7_C10 ) | ( SLEEP_EN_7_C11 ) | ( SLEEP_EN_7_C12 ) | ( SLEEP_EN_7_C13 ) | ( SLEEP_EN_7_C14 ) | ( SLEEP_EN_7_C15 ) | ( SLEEP_EN_7_C16 ) | ( SLEEP_EN_7_C17 ) | ( SLEEP_EN_7_C18 ) | ( SLEEP_EN_7_C19 ) | ( SLEEP_EN_7_C20 ) | ( SLEEP_EN_7_C21 ) | ( SLEEP_EN_7_C22 ) | ( SLEEP_EN_7_C23 ) | ( SLEEP_EN_7_C24 ) | ( SLEEP_EN_7_C25 ) | ( SLEEP_EN_7_C26 ) | ( SLEEP_EN_7_C27 ) | ( SLEEP_EN_7_C28 ) | ( SLEEP_EN_7_C29 ) | ( SLEEP_EN_7_C30 ) | ( SLEEP_EN_7_C31 ) | ( SLEEP_EN_7_C32 ) | ( SLEEP_EN_7_C33 ) | ( SLEEP_EN_7_C34 ) | ( SLEEP_EN_7_C35 ) | ( SLEEP_EN_7_C36 ) | ( SLEEP_EN_7_C37 ) | ( SLEEP_EN_7_C38 ) | ( SLEEP_EN_7_C39 ) | ( SLEEP_EN_7_C40 ) | ( SLEEP_EN_7_C41 ) | ( SLEEP_EN_7_C42 ) | ( SLEEP_EN_7_C43 ) | ( SLEEP_EN_7_C44 ) | ( SLEEP_EN_7_C45 ) | ( SLEEP_EN_7_C46 ) | ( SLEEP_EN_7_C47 ) | ( SLEEP_EN_7_C48 ) | ( SLEEP_EN_7_C49 ) | ( SLEEP_EN_7_C50 ) | ( SLEEP_EN_7_C51 ) | ( SLEEP_EN_7_C52 ) | ( SLEEP_EN_7_C53 ) | ( SLEEP_EN_7_C54 ) | ( SLEEP_EN_7_C55 ) | ( SLEEP_EN_7_C56 ) | ( SLEEP_EN_7_C57 ) | ( SLEEP_EN_7_C58 ) | ( SLEEP_EN_7_C59 ) | ( SLEEP_EN_7_C60 ) | ( SLEEP_EN_7_C61 ) | ( SLEEP_EN_7_C62 ) | ( SLEEP_EN_7_C63 ) | ( SLEEP_EN_7_C64 ) | ( SLEEP_EN_7_C65 ) | ( SLEEP_EN_7_C66 ) | ( SLEEP_EN_7_C67 ) | ( SLEEP_EN_7_C68 ) | ( SLEEP_EN_7_C69 ) | ( SLEEP_EN_7_C70 ) | ( SLEEP_EN_7_C71 ) | ( SLEEP_EN_7_C72 ) | ( SLEEP_EN_7_C73 ) | ( SLEEP_EN_7_C74 ) | ( SLEEP_EN_7_C75 ) | ( SLEEP_EN_7_C76 ) | ( SLEEP_EN_7_C77 ) | ( SLEEP_EN_7_C78 ) | ( SLEEP_EN_7_C79 ) | ( SLEEP_EN_7_C80 ) | ( SLEEP_EN_7_C81 ) | ( SLEEP_EN_7_C82 ) | ( SLEEP_EN_7_C83 ) | ( SLEEP_EN_7_C84 );
  assign _0__C = ( _0__C0 );
  assign RD_C = ( RD_C0 );
  assign RD_9_C = ( RD_9_C0 ) | ( RD_9_C1 );
  assign RD_81_C = ( RD_81_C0 ) | ( RD_81_C1 );
  assign RD_80_C = ( RD_80_C0 ) | ( RD_80_C1 );
  assign RD_8_C = ( RD_8_C0 ) | ( RD_8_C1 );
  assign RD_79_C = ( RD_79_C0 ) | ( RD_79_C1 );
  assign RD_78_C = ( RD_78_C0 ) | ( RD_78_C1 );
  assign RD_77_C = ( RD_77_C0 ) | ( RD_77_C1 );
  assign RD_76_C = ( RD_76_C0 ) | ( RD_76_C1 );
  assign RD_75_C = ( RD_75_C0 ) | ( RD_75_C1 );
  assign RD_74_C = ( RD_74_C0 ) | ( RD_74_C1 );
  assign RD_73_C = ( RD_73_C0 ) | ( RD_73_C1 );
  assign RD_72_C = ( RD_72_C0 ) | ( RD_72_C1 );
  assign RD_71_C = ( RD_71_C0 ) | ( RD_71_C1 );
  assign RD_70_C = ( RD_70_C0 ) | ( RD_70_C1 );
  assign RD_7_C = ( RD_7_C0 ) | ( RD_7_C1 );
  assign RD_69_C = ( RD_69_C0 ) | ( RD_69_C1 );
  assign RD_68_C = ( RD_68_C0 ) | ( RD_68_C1 );
  assign RD_67_C = ( RD_67_C0 ) | ( RD_67_C1 );
  assign RD_66_C = ( RD_66_C0 ) | ( RD_66_C1 );
  assign RD_65_C = ( RD_65_C0 ) | ( RD_65_C1 );
  assign RD_64_C = ( RD_64_C0 ) | ( RD_64_C1 );
  assign RD_63_C = ( RD_63_C0 ) | ( RD_63_C1 );
  assign RD_62_C = ( RD_62_C0 ) | ( RD_62_C1 );
  assign RD_61_C = ( RD_61_C0 ) | ( RD_61_C1 );
  assign RD_60_C = ( RD_60_C0 ) | ( RD_60_C1 );
  assign RD_6_C = ( RD_6_C0 ) | ( RD_6_C1 );
  assign RD_59_C = ( RD_59_C0 ) | ( RD_59_C1 );
  assign RD_58_C = ( RD_58_C0 ) | ( RD_58_C1 );
  assign RD_57_C = ( RD_57_C0 ) | ( RD_57_C1 );
  assign RD_56_C = ( RD_56_C0 ) | ( RD_56_C1 );
  assign RD_55_C = ( RD_55_C0 ) | ( RD_55_C1 );
  assign RD_54_C = ( RD_54_C0 ) | ( RD_54_C1 );
  assign RD_53_C = ( RD_53_C0 ) | ( RD_53_C1 );
  assign RD_52_C = ( RD_52_C0 ) | ( RD_52_C1 );
  assign RD_51_C = ( RD_51_C0 ) | ( RD_51_C1 );
  assign RD_50_C = ( RD_50_C0 ) | ( RD_50_C1 );
  assign RD_5_C = ( RD_5_C0 ) | ( RD_5_C1 );
  assign RD_49_C = ( RD_49_C0 ) | ( RD_49_C1 );
  assign RD_48_C = ( RD_48_C0 ) | ( RD_48_C1 );
  assign RD_47_C = ( RD_47_C0 ) | ( RD_47_C1 );
  assign RD_46_C = ( RD_46_C0 ) | ( RD_46_C1 );
  assign RD_45_C = ( RD_45_C0 ) | ( RD_45_C1 );
  assign RD_44_C = ( RD_44_C0 ) | ( RD_44_C1 );
  assign RD_43_C = ( RD_43_C0 ) | ( RD_43_C1 );
  assign RD_42_C = ( RD_42_C0 ) | ( RD_42_C1 );
  assign RD_41_C = ( RD_41_C0 ) | ( RD_41_C1 );
  assign RD_40_C = ( RD_40_C0 ) | ( RD_40_C1 );
  assign RD_4_C = ( RD_4_C0 ) | ( RD_4_C1 );
  assign RD_39_C = ( RD_39_C0 ) | ( RD_39_C1 );
  assign RD_38_C = ( RD_38_C0 ) | ( RD_38_C1 );
  assign RD_37_C = ( RD_37_C0 ) | ( RD_37_C1 );
  assign RD_36_C = ( RD_36_C0 ) | ( RD_36_C1 );
  assign RD_35_C = ( RD_35_C0 ) | ( RD_35_C1 );
  assign RD_34_C = ( RD_34_C0 ) | ( RD_34_C1 );
  assign RD_33_C = ( RD_33_C0 ) | ( RD_33_C1 );
  assign RD_32_C = ( RD_32_C0 ) | ( RD_32_C1 );
  assign RD_31_C = ( RD_31_C0 ) | ( RD_31_C1 );
  assign RD_30_C = ( RD_30_C0 ) | ( RD_30_C1 );
  assign RD_3_C = ( RD_3_C0 ) | ( RD_3_C1 );
  assign RD_29_C = ( RD_29_C0 ) | ( RD_29_C1 );
  assign RD_28_C = ( RD_28_C0 ) | ( RD_28_C1 );
  assign RD_27_C = ( RD_27_C0 ) | ( RD_27_C1 );
  assign RD_26_C = ( RD_26_C0 ) | ( RD_26_C1 );
  assign RD_25_C = ( RD_25_C0 ) | ( RD_25_C1 );
  assign WADR_3_C = ( WADR_3_C0 ) | ( WADR_3_C1 );
  assign RD_24_C = ( RD_24_C0 ) | ( RD_24_C1 );
  assign RD_23_C = ( RD_23_C0 ) | ( RD_23_C1 );
  assign RD_22_C = ( RD_22_C0 ) | ( RD_22_C1 );
  assign RD_21_C = ( RD_21_C0 ) | ( RD_21_C1 );
  assign RD_20_C = ( RD_20_C0 ) | ( RD_20_C1 );
  assign RD_2_C = ( RD_2_C0 ) | ( RD_2_C1 );
  assign RD_19_C = ( RD_19_C0 ) | ( RD_19_C1 );
  assign RD_18_C = ( RD_18_C0 ) | ( RD_18_C1 );
  assign RD_17_C = ( RD_17_C0 ) | ( RD_17_C1 );
  assign RD_16_C = ( RD_16_C0 ) | ( RD_16_C1 );
  assign RD_15_C = ( RD_15_C0 ) | ( RD_15_C1 );
  assign RD_14_C = ( RD_14_C0 ) | ( RD_14_C1 );
  assign RD_13_C = ( RD_13_C0 ) | ( RD_13_C1 );
  assign RD_12_C = ( RD_12_C0 ) | ( RD_12_C1 );
  assign RD_11_C = ( RD_11_C0 ) | ( RD_11_C1 );
  assign RD_10_C = ( RD_10_C0 ) | ( RD_10_C1 );
  assign RD_1_C = ( RD_1_C0 ) | ( RD_1_C1 );
  assign RD_0_C = ( RD_0_C0 ) | ( RD_0_C1 );
  assign WE_X = ( WE_X0 );
  assign WD_0_X = ( WD_0_X0 ) | ( WD_0_X1 );
  assign WD_1_X = ( WD_1_X0 ) | ( WD_1_X1 );
  assign WD_2_X = ( WD_2_X0 ) | ( WD_2_X1 );
  assign WD_3_X = ( WD_3_X0 ) | ( WD_3_X1 );
  assign WD_4_X = ( WD_4_X0 ) | ( WD_4_X1 );
  assign WD_5_X = ( WD_5_X0 ) | ( WD_5_X1 );
  assign WD_6_X = ( WD_6_X0 ) | ( WD_6_X1 );
  assign WD_7_X = ( WD_7_X0 ) | ( WD_7_X1 );
  assign WD_8_X = ( WD_8_X0 ) | ( WD_8_X1 );
  assign WD_9_X = ( WD_9_X0 ) | ( WD_9_X1 );
  assign WD_10_X = ( WD_10_X0 ) | ( WD_10_X1 );
  assign WD_11_X = ( WD_11_X0 ) | ( WD_11_X1 );
  assign WD_12_X = ( WD_12_X0 ) | ( WD_12_X1 );
  assign WD_13_X = ( WD_13_X0 ) | ( WD_13_X1 );
  assign WD_14_X = ( WD_14_X0 ) | ( WD_14_X1 );
  assign WD_15_X = ( WD_15_X0 ) | ( WD_15_X1 );
  assign WD_16_X = ( WD_16_X0 ) | ( WD_16_X1 );
  assign WD_17_X = ( WD_17_X0 ) | ( WD_17_X1 );
  assign WD_18_X = ( WD_18_X0 ) | ( WD_18_X1 );
  assign WD_19_X = ( WD_19_X0 ) | ( WD_19_X1 );
  assign WD_20_X = ( WD_20_X0 ) | ( WD_20_X1 );
  assign WD_21_X = ( WD_21_X0 ) | ( WD_21_X1 );
  assign WD_22_X = ( WD_22_X0 ) | ( WD_22_X1 );
  assign WD_23_X = ( WD_23_X0 ) | ( WD_23_X1 );
  assign WD_24_X = ( WD_24_X0 ) | ( WD_24_X1 );
  assign WD_25_X = ( WD_25_X0 ) | ( WD_25_X1 );
  assign WD_26_X = ( WD_26_X0 ) | ( WD_26_X1 );
  assign WD_27_X = ( WD_27_X0 ) | ( WD_27_X1 );
  assign WD_28_X = ( WD_28_X0 ) | ( WD_28_X1 );
  assign WD_29_X = ( WD_29_X0 ) | ( WD_29_X1 );
  assign WD_30_X = ( WD_30_X0 ) | ( WD_30_X1 );
  assign WD_31_X = ( WD_31_X0 ) | ( WD_31_X1 );
  assign WD_32_X = ( WD_32_X0 ) | ( WD_32_X1 );
  assign WD_33_X = ( WD_33_X0 ) | ( WD_33_X1 );
  assign WD_34_X = ( WD_34_X0 ) | ( WD_34_X1 );
  assign WD_35_X = ( WD_35_X0 ) | ( WD_35_X1 );
  assign WD_36_X = ( WD_36_X0 ) | ( WD_36_X1 );
  assign WD_37_X = ( WD_37_X0 ) | ( WD_37_X1 );
  assign WD_38_X = ( WD_38_X0 ) | ( WD_38_X1 );
  assign WD_39_X = ( WD_39_X0 ) | ( WD_39_X1 );
  assign WD_40_X = ( WD_40_X0 ) | ( WD_40_X1 );
  assign WD_41_X = ( WD_41_X0 ) | ( WD_41_X1 );
  assign WD_42_X = ( WD_42_X0 ) | ( WD_42_X1 );
  assign WD_43_X = ( WD_43_X0 ) | ( WD_43_X1 );
  assign WD_44_X = ( WD_44_X0 ) | ( WD_44_X1 );
  assign WD_45_X = ( WD_45_X0 ) | ( WD_45_X1 );
  assign WD_46_X = ( WD_46_X0 ) | ( WD_46_X1 );
  assign WD_47_X = ( WD_47_X0 ) | ( WD_47_X1 );
  assign WD_48_X = ( WD_48_X0 ) | ( WD_48_X1 );
  assign WD_49_X = ( WD_49_X0 ) | ( WD_49_X1 );
  assign WD_50_X = ( WD_50_X0 ) | ( WD_50_X1 );
  assign WD_51_X = ( WD_51_X0 ) | ( WD_51_X1 );
  assign WD_52_X = ( WD_52_X0 ) | ( WD_52_X1 );
  assign WD_53_X = ( WD_53_X0 ) | ( WD_53_X1 );
  assign WD_54_X = ( WD_54_X0 ) | ( WD_54_X1 );
  assign WD_55_X = ( WD_55_X0 ) | ( WD_55_X1 );
  assign WD_56_X = ( WD_56_X0 ) | ( WD_56_X1 );
  assign WD_57_X = ( WD_57_X0 ) | ( WD_57_X1 );
  assign WD_58_X = ( WD_58_X0 ) | ( WD_58_X1 );
  assign WD_59_X = ( WD_59_X0 ) | ( WD_59_X1 );
  assign WD_60_X = ( WD_60_X0 ) | ( WD_60_X1 );
  assign WD_61_X = ( WD_61_X0 ) | ( WD_61_X1 );
  assign WD_62_X = ( WD_62_X0 ) | ( WD_62_X1 );
  assign WD_63_X = ( WD_63_X0 ) | ( WD_63_X1 );
  assign WD_64_X = ( WD_64_X0 ) | ( WD_64_X1 );
  assign WD_65_X = ( WD_65_X0 ) | ( WD_65_X1 );
  assign WD_66_X = ( WD_66_X0 ) | ( WD_66_X1 );
  assign WD_67_X = ( WD_67_X0 ) | ( WD_67_X1 );
  assign WD_68_X = ( WD_68_X0 ) | ( WD_68_X1 );
  assign WD_69_X = ( WD_69_X0 ) | ( WD_69_X1 );
  assign WD_70_X = ( WD_70_X0 ) | ( WD_70_X1 );
  assign WD_71_X = ( WD_71_X0 ) | ( WD_71_X1 );
  assign WD_72_X = ( WD_72_X0 ) | ( WD_72_X1 );
  assign WD_73_X = ( WD_73_X0 ) | ( WD_73_X1 );
  assign WD_74_X = ( WD_74_X0 ) | ( WD_74_X1 );
  assign WD_75_X = ( WD_75_X0 ) | ( WD_75_X1 );
  assign WD_76_X = ( WD_76_X0 ) | ( WD_76_X1 );
  assign WD_77_X = ( WD_77_X0 ) | ( WD_77_X1 );
  assign WD_78_X = ( WD_78_X0 ) | ( WD_78_X1 );
  assign WD_79_X = ( WD_79_X0 ) | ( WD_79_X1 );
  assign WD_80_X = ( WD_80_X0 ) | ( WD_80_X1 );
  assign WD_81_X = ( WD_81_X0 ) | ( WD_81_X1 );
  assign WADR_0_X = ( WADR_0_X0 ) | ( WADR_0_X1 );
  assign WADR_1_X = ( WADR_1_X0 ) | ( WADR_1_X1 );
  assign WADR_2_X = ( WADR_2_X0 ) | ( WADR_2_X1 );
  assign WADR_4_X = ( WADR_4_X0 ) | ( WADR_4_X1 );
  assign WADR_5_X = ( WADR_5_X0 ) | ( WADR_5_X1 );
  assign WADR_6_X = ( WADR_6_X0 ) | ( WADR_6_X1 );
  assign WADR_7_X = ( WADR_7_X0 ) | ( WADR_7_X1 );
  assign SVOP_0_X = ( SVOP_0_X0 ) | ( SVOP_0_X1 );
  assign SVOP_1_X = ( SVOP_1_X0 ) | ( SVOP_1_X1 );
  assign SVOP_2_X = ( SVOP_2_X0 ) | ( SVOP_2_X1 );
  assign SVOP_3_X = ( SVOP_3_X0 ) | ( SVOP_3_X1 );
  assign SVOP_4_X = ( SVOP_4_X0 ) | ( SVOP_4_X1 );
  assign SVOP_5_X = ( SVOP_5_X0 ) | ( SVOP_5_X1 );
  assign SVOP_6_X = ( SVOP_6_X0 ) | ( SVOP_6_X1 );
  assign SVOP_7_X = ( SVOP_7_X0 ) | ( SVOP_7_X1 );
  assign SLEEP_EN_0_X = ( SLEEP_EN_0_X0 ) | ( SLEEP_EN_0_X1 );
  assign SLEEP_EN_1_X = ( SLEEP_EN_1_X0 ) | ( SLEEP_EN_1_X1 );
  assign SLEEP_EN_2_X = ( SLEEP_EN_2_X0 ) | ( SLEEP_EN_2_X1 );
  assign SLEEP_EN_3_X = ( SLEEP_EN_3_X0 ) | ( SLEEP_EN_3_X1 );
  assign SLEEP_EN_4_X = ( SLEEP_EN_4_X0 ) | ( SLEEP_EN_4_X1 );
  assign SLEEP_EN_5_X = ( SLEEP_EN_5_X0 ) | ( SLEEP_EN_5_X1 );
  assign SLEEP_EN_6_X = ( SLEEP_EN_6_X0 ) | ( SLEEP_EN_6_X1 );
  assign RET_EN_X = ( RET_EN_X0 );
  assign RE_X = ( RE_X0 );
  assign RADR_0_X = ( RADR_0_X0 ) | ( RADR_0_X1 );
  assign RADR_1_X = ( RADR_1_X0 ) | ( RADR_1_X1 );
  assign RADR_2_X = ( RADR_2_X0 ) | ( RADR_2_X1 );
  assign RADR_3_X = ( RADR_3_X0 ) | ( RADR_3_X1 );
  assign RADR_4_X = ( RADR_4_X0 ) | ( RADR_4_X1 );
  assign RADR_5_X = ( RADR_5_X0 ) | ( RADR_5_X1 );
  assign RADR_6_X = ( RADR_6_X0 ) | ( RADR_6_X1 );
  assign RADR_7_X = ( RADR_7_X0 ) | ( RADR_7_X1 );
  assign IDDQ_X = ( IDDQ_X0 );
  assign fangyuan1_X = ( fangyuan1_X0 );
  assign SLEEP_EN_7_X = ( SLEEP_EN_7_X0 ) | ( SLEEP_EN_7_X1 ) | ( SLEEP_EN_7_X2 ) | ( SLEEP_EN_7_X3 ) | ( SLEEP_EN_7_X4 ) | ( SLEEP_EN_7_X5 ) | ( SLEEP_EN_7_X6 ) | ( SLEEP_EN_7_X7 ) | ( SLEEP_EN_7_X8 ) | ( SLEEP_EN_7_X9 ) | ( SLEEP_EN_7_X10 ) | ( SLEEP_EN_7_X11 ) | ( SLEEP_EN_7_X12 ) | ( SLEEP_EN_7_X13 ) | ( SLEEP_EN_7_X14 ) | ( SLEEP_EN_7_X15 ) | ( SLEEP_EN_7_X16 ) | ( SLEEP_EN_7_X17 ) | ( SLEEP_EN_7_X18 ) | ( SLEEP_EN_7_X19 ) | ( SLEEP_EN_7_X20 ) | ( SLEEP_EN_7_X21 ) | ( SLEEP_EN_7_X22 ) | ( SLEEP_EN_7_X23 ) | ( SLEEP_EN_7_X24 ) | ( SLEEP_EN_7_X25 ) | ( SLEEP_EN_7_X26 ) | ( SLEEP_EN_7_X27 ) | ( SLEEP_EN_7_X28 ) | ( SLEEP_EN_7_X29 ) | ( SLEEP_EN_7_X30 ) | ( SLEEP_EN_7_X31 ) | ( SLEEP_EN_7_X32 ) | ( SLEEP_EN_7_X33 ) | ( SLEEP_EN_7_X34 ) | ( SLEEP_EN_7_X35 ) | ( SLEEP_EN_7_X36 ) | ( SLEEP_EN_7_X37 ) | ( SLEEP_EN_7_X38 ) | ( SLEEP_EN_7_X39 ) | ( SLEEP_EN_7_X40 ) | ( SLEEP_EN_7_X41 ) | ( SLEEP_EN_7_X42 ) | ( SLEEP_EN_7_X43 ) | ( SLEEP_EN_7_X44 ) | ( SLEEP_EN_7_X45 ) | ( SLEEP_EN_7_X46 ) | ( SLEEP_EN_7_X47 ) | ( SLEEP_EN_7_X48 ) | ( SLEEP_EN_7_X49 ) | ( SLEEP_EN_7_X50 ) | ( SLEEP_EN_7_X51 ) | ( SLEEP_EN_7_X52 ) | ( SLEEP_EN_7_X53 ) | ( SLEEP_EN_7_X54 ) | ( SLEEP_EN_7_X55 ) | ( SLEEP_EN_7_X56 ) | ( SLEEP_EN_7_X57 ) | ( SLEEP_EN_7_X58 ) | ( SLEEP_EN_7_X59 ) | ( SLEEP_EN_7_X60 ) | ( SLEEP_EN_7_X61 ) | ( SLEEP_EN_7_X62 ) | ( SLEEP_EN_7_X63 ) | ( SLEEP_EN_7_X64 ) | ( SLEEP_EN_7_X65 ) | ( SLEEP_EN_7_X66 ) | ( SLEEP_EN_7_X67 ) | ( SLEEP_EN_7_X68 ) | ( SLEEP_EN_7_X69 ) | ( SLEEP_EN_7_X70 ) | ( SLEEP_EN_7_X71 ) | ( SLEEP_EN_7_X72 ) | ( SLEEP_EN_7_X73 ) | ( SLEEP_EN_7_X74 ) | ( SLEEP_EN_7_X75 ) | ( SLEEP_EN_7_X76 ) | ( SLEEP_EN_7_X77 ) | ( SLEEP_EN_7_X78 ) | ( SLEEP_EN_7_X79 ) | ( SLEEP_EN_7_X80 ) | ( SLEEP_EN_7_X81 ) | ( SLEEP_EN_7_X82 ) | ( SLEEP_EN_7_X83 ) | ( SLEEP_EN_7_X84 );
  assign _0__X = ( _0__X0 );
  assign RD_X = ( RD_X0 );
  assign RD_9_X = ( RD_9_X0 ) | ( RD_9_X1 );
  assign RD_81_X = ( RD_81_X0 ) | ( RD_81_X1 );
  assign RD_80_X = ( RD_80_X0 ) | ( RD_80_X1 );
  assign RD_8_X = ( RD_8_X0 ) | ( RD_8_X1 );
  assign RD_79_X = ( RD_79_X0 ) | ( RD_79_X1 );
  assign RD_78_X = ( RD_78_X0 ) | ( RD_78_X1 );
  assign RD_77_X = ( RD_77_X0 ) | ( RD_77_X1 );
  assign RD_76_X = ( RD_76_X0 ) | ( RD_76_X1 );
  assign RD_75_X = ( RD_75_X0 ) | ( RD_75_X1 );
  assign RD_74_X = ( RD_74_X0 ) | ( RD_74_X1 );
  assign RD_73_X = ( RD_73_X0 ) | ( RD_73_X1 );
  assign RD_72_X = ( RD_72_X0 ) | ( RD_72_X1 );
  assign RD_71_X = ( RD_71_X0 ) | ( RD_71_X1 );
  assign RD_70_X = ( RD_70_X0 ) | ( RD_70_X1 );
  assign RD_7_X = ( RD_7_X0 ) | ( RD_7_X1 );
  assign RD_69_X = ( RD_69_X0 ) | ( RD_69_X1 );
  assign RD_68_X = ( RD_68_X0 ) | ( RD_68_X1 );
  assign RD_67_X = ( RD_67_X0 ) | ( RD_67_X1 );
  assign RD_66_X = ( RD_66_X0 ) | ( RD_66_X1 );
  assign RD_65_X = ( RD_65_X0 ) | ( RD_65_X1 );
  assign RD_64_X = ( RD_64_X0 ) | ( RD_64_X1 );
  assign RD_63_X = ( RD_63_X0 ) | ( RD_63_X1 );
  assign RD_62_X = ( RD_62_X0 ) | ( RD_62_X1 );
  assign RD_61_X = ( RD_61_X0 ) | ( RD_61_X1 );
  assign RD_60_X = ( RD_60_X0 ) | ( RD_60_X1 );
  assign RD_6_X = ( RD_6_X0 ) | ( RD_6_X1 );
  assign RD_59_X = ( RD_59_X0 ) | ( RD_59_X1 );
  assign RD_58_X = ( RD_58_X0 ) | ( RD_58_X1 );
  assign RD_57_X = ( RD_57_X0 ) | ( RD_57_X1 );
  assign RD_56_X = ( RD_56_X0 ) | ( RD_56_X1 );
  assign RD_55_X = ( RD_55_X0 ) | ( RD_55_X1 );
  assign RD_54_X = ( RD_54_X0 ) | ( RD_54_X1 );
  assign RD_53_X = ( RD_53_X0 ) | ( RD_53_X1 );
  assign RD_52_X = ( RD_52_X0 ) | ( RD_52_X1 );
  assign RD_51_X = ( RD_51_X0 ) | ( RD_51_X1 );
  assign RD_50_X = ( RD_50_X0 ) | ( RD_50_X1 );
  assign RD_5_X = ( RD_5_X0 ) | ( RD_5_X1 );
  assign RD_49_X = ( RD_49_X0 ) | ( RD_49_X1 );
  assign RD_48_X = ( RD_48_X0 ) | ( RD_48_X1 );
  assign RD_47_X = ( RD_47_X0 ) | ( RD_47_X1 );
  assign RD_46_X = ( RD_46_X0 ) | ( RD_46_X1 );
  assign RD_45_X = ( RD_45_X0 ) | ( RD_45_X1 );
  assign RD_44_X = ( RD_44_X0 ) | ( RD_44_X1 );
  assign RD_43_X = ( RD_43_X0 ) | ( RD_43_X1 );
  assign RD_42_X = ( RD_42_X0 ) | ( RD_42_X1 );
  assign RD_41_X = ( RD_41_X0 ) | ( RD_41_X1 );
  assign RD_40_X = ( RD_40_X0 ) | ( RD_40_X1 );
  assign RD_4_X = ( RD_4_X0 ) | ( RD_4_X1 );
  assign RD_39_X = ( RD_39_X0 ) | ( RD_39_X1 );
  assign RD_38_X = ( RD_38_X0 ) | ( RD_38_X1 );
  assign RD_37_X = ( RD_37_X0 ) | ( RD_37_X1 );
  assign RD_36_X = ( RD_36_X0 ) | ( RD_36_X1 );
  assign RD_35_X = ( RD_35_X0 ) | ( RD_35_X1 );
  assign RD_34_X = ( RD_34_X0 ) | ( RD_34_X1 );
  assign RD_33_X = ( RD_33_X0 ) | ( RD_33_X1 );
  assign RD_32_X = ( RD_32_X0 ) | ( RD_32_X1 );
  assign RD_31_X = ( RD_31_X0 ) | ( RD_31_X1 );
  assign RD_30_X = ( RD_30_X0 ) | ( RD_30_X1 );
  assign RD_3_X = ( RD_3_X0 ) | ( RD_3_X1 );
  assign RD_29_X = ( RD_29_X0 ) | ( RD_29_X1 );
  assign RD_28_X = ( RD_28_X0 ) | ( RD_28_X1 );
  assign RD_27_X = ( RD_27_X0 ) | ( RD_27_X1 );
  assign RD_26_X = ( RD_26_X0 ) | ( RD_26_X1 );
  assign RD_25_X = ( RD_25_X0 ) | ( RD_25_X1 );
  assign WADR_3_X = ( WADR_3_X0 ) | ( WADR_3_X1 );
  assign RD_24_X = ( RD_24_X0 ) | ( RD_24_X1 );
  assign RD_23_X = ( RD_23_X0 ) | ( RD_23_X1 );
  assign RD_22_X = ( RD_22_X0 ) | ( RD_22_X1 );
  assign RD_21_X = ( RD_21_X0 ) | ( RD_21_X1 );
  assign RD_20_X = ( RD_20_X0 ) | ( RD_20_X1 );
  assign RD_2_X = ( RD_2_X0 ) | ( RD_2_X1 );
  assign RD_19_X = ( RD_19_X0 ) | ( RD_19_X1 );
  assign RD_18_X = ( RD_18_X0 ) | ( RD_18_X1 );
  assign RD_17_X = ( RD_17_X0 ) | ( RD_17_X1 );
  assign RD_16_X = ( RD_16_X0 ) | ( RD_16_X1 );
  assign RD_15_X = ( RD_15_X0 ) | ( RD_15_X1 );
  assign RD_14_X = ( RD_14_X0 ) | ( RD_14_X1 );
  assign RD_13_X = ( RD_13_X0 ) | ( RD_13_X1 );
  assign RD_12_X = ( RD_12_X0 ) | ( RD_12_X1 );
  assign RD_11_X = ( RD_11_X0 ) | ( RD_11_X1 );
  assign RD_10_X = ( RD_10_X0 ) | ( RD_10_X1 );
  assign RD_1_X = ( RD_1_X0 ) | ( RD_1_X1 );
  assign RD_0_X = ( RD_0_X0 ) | ( RD_0_X1 );
  assign WE_R = ( WE_X0 & WE_R0 );
  assign WD_0_R = ( WD_0_X0 & WD_0_R0 ) | ( WD_0_X1 & WD_0_R1 );
  assign WD_1_R = ( WD_1_X0 & WD_1_R0 ) | ( WD_1_X1 & WD_1_R1 );
  assign WD_2_R = ( WD_2_X0 & WD_2_R0 ) | ( WD_2_X1 & WD_2_R1 );
  assign WD_3_R = ( WD_3_X0 & WD_3_R0 ) | ( WD_3_X1 & WD_3_R1 );
  assign WD_4_R = ( WD_4_X0 & WD_4_R0 ) | ( WD_4_X1 & WD_4_R1 );
  assign WD_5_R = ( WD_5_X0 & WD_5_R0 ) | ( WD_5_X1 & WD_5_R1 );
  assign WD_6_R = ( WD_6_X0 & WD_6_R0 ) | ( WD_6_X1 & WD_6_R1 );
  assign WD_7_R = ( WD_7_X0 & WD_7_R0 ) | ( WD_7_X1 & WD_7_R1 );
  assign WD_8_R = ( WD_8_X0 & WD_8_R0 ) | ( WD_8_X1 & WD_8_R1 );
  assign WD_9_R = ( WD_9_X0 & WD_9_R0 ) | ( WD_9_X1 & WD_9_R1 );
  assign WD_10_R = ( WD_10_X0 & WD_10_R0 ) | ( WD_10_X1 & WD_10_R1 );
  assign WD_11_R = ( WD_11_X0 & WD_11_R0 ) | ( WD_11_X1 & WD_11_R1 );
  assign WD_12_R = ( WD_12_X0 & WD_12_R0 ) | ( WD_12_X1 & WD_12_R1 );
  assign WD_13_R = ( WD_13_X0 & WD_13_R0 ) | ( WD_13_X1 & WD_13_R1 );
  assign WD_14_R = ( WD_14_X0 & WD_14_R0 ) | ( WD_14_X1 & WD_14_R1 );
  assign WD_15_R = ( WD_15_X0 & WD_15_R0 ) | ( WD_15_X1 & WD_15_R1 );
  assign WD_16_R = ( WD_16_X0 & WD_16_R0 ) | ( WD_16_X1 & WD_16_R1 );
  assign WD_17_R = ( WD_17_X0 & WD_17_R0 ) | ( WD_17_X1 & WD_17_R1 );
  assign WD_18_R = ( WD_18_X0 & WD_18_R0 ) | ( WD_18_X1 & WD_18_R1 );
  assign WD_19_R = ( WD_19_X0 & WD_19_R0 ) | ( WD_19_X1 & WD_19_R1 );
  assign WD_20_R = ( WD_20_X0 & WD_20_R0 ) | ( WD_20_X1 & WD_20_R1 );
  assign WD_21_R = ( WD_21_X0 & WD_21_R0 ) | ( WD_21_X1 & WD_21_R1 );
  assign WD_22_R = ( WD_22_X0 & WD_22_R0 ) | ( WD_22_X1 & WD_22_R1 );
  assign WD_23_R = ( WD_23_X0 & WD_23_R0 ) | ( WD_23_X1 & WD_23_R1 );
  assign WD_24_R = ( WD_24_X0 & WD_24_R0 ) | ( WD_24_X1 & WD_24_R1 );
  assign WD_25_R = ( WD_25_X0 & WD_25_R0 ) | ( WD_25_X1 & WD_25_R1 );
  assign WD_26_R = ( WD_26_X0 & WD_26_R0 ) | ( WD_26_X1 & WD_26_R1 );
  assign WD_27_R = ( WD_27_X0 & WD_27_R0 ) | ( WD_27_X1 & WD_27_R1 );
  assign WD_28_R = ( WD_28_X0 & WD_28_R0 ) | ( WD_28_X1 & WD_28_R1 );
  assign WD_29_R = ( WD_29_X0 & WD_29_R0 ) | ( WD_29_X1 & WD_29_R1 );
  assign WD_30_R = ( WD_30_X0 & WD_30_R0 ) | ( WD_30_X1 & WD_30_R1 );
  assign WD_31_R = ( WD_31_X0 & WD_31_R0 ) | ( WD_31_X1 & WD_31_R1 );
  assign WD_32_R = ( WD_32_X0 & WD_32_R0 ) | ( WD_32_X1 & WD_32_R1 );
  assign WD_33_R = ( WD_33_X0 & WD_33_R0 ) | ( WD_33_X1 & WD_33_R1 );
  assign WD_34_R = ( WD_34_X0 & WD_34_R0 ) | ( WD_34_X1 & WD_34_R1 );
  assign WD_35_R = ( WD_35_X0 & WD_35_R0 ) | ( WD_35_X1 & WD_35_R1 );
  assign WD_36_R = ( WD_36_X0 & WD_36_R0 ) | ( WD_36_X1 & WD_36_R1 );
  assign WD_37_R = ( WD_37_X0 & WD_37_R0 ) | ( WD_37_X1 & WD_37_R1 );
  assign WD_38_R = ( WD_38_X0 & WD_38_R0 ) | ( WD_38_X1 & WD_38_R1 );
  assign WD_39_R = ( WD_39_X0 & WD_39_R0 ) | ( WD_39_X1 & WD_39_R1 );
  assign WD_40_R = ( WD_40_X0 & WD_40_R0 ) | ( WD_40_X1 & WD_40_R1 );
  assign WD_41_R = ( WD_41_X0 & WD_41_R0 ) | ( WD_41_X1 & WD_41_R1 );
  assign WD_42_R = ( WD_42_X0 & WD_42_R0 ) | ( WD_42_X1 & WD_42_R1 );
  assign WD_43_R = ( WD_43_X0 & WD_43_R0 ) | ( WD_43_X1 & WD_43_R1 );
  assign WD_44_R = ( WD_44_X0 & WD_44_R0 ) | ( WD_44_X1 & WD_44_R1 );
  assign WD_45_R = ( WD_45_X0 & WD_45_R0 ) | ( WD_45_X1 & WD_45_R1 );
  assign WD_46_R = ( WD_46_X0 & WD_46_R0 ) | ( WD_46_X1 & WD_46_R1 );
  assign WD_47_R = ( WD_47_X0 & WD_47_R0 ) | ( WD_47_X1 & WD_47_R1 );
  assign WD_48_R = ( WD_48_X0 & WD_48_R0 ) | ( WD_48_X1 & WD_48_R1 );
  assign WD_49_R = ( WD_49_X0 & WD_49_R0 ) | ( WD_49_X1 & WD_49_R1 );
  assign WD_50_R = ( WD_50_X0 & WD_50_R0 ) | ( WD_50_X1 & WD_50_R1 );
  assign WD_51_R = ( WD_51_X0 & WD_51_R0 ) | ( WD_51_X1 & WD_51_R1 );
  assign WD_52_R = ( WD_52_X0 & WD_52_R0 ) | ( WD_52_X1 & WD_52_R1 );
  assign WD_53_R = ( WD_53_X0 & WD_53_R0 ) | ( WD_53_X1 & WD_53_R1 );
  assign WD_54_R = ( WD_54_X0 & WD_54_R0 ) | ( WD_54_X1 & WD_54_R1 );
  assign WD_55_R = ( WD_55_X0 & WD_55_R0 ) | ( WD_55_X1 & WD_55_R1 );
  assign WD_56_R = ( WD_56_X0 & WD_56_R0 ) | ( WD_56_X1 & WD_56_R1 );
  assign WD_57_R = ( WD_57_X0 & WD_57_R0 ) | ( WD_57_X1 & WD_57_R1 );
  assign WD_58_R = ( WD_58_X0 & WD_58_R0 ) | ( WD_58_X1 & WD_58_R1 );
  assign WD_59_R = ( WD_59_X0 & WD_59_R0 ) | ( WD_59_X1 & WD_59_R1 );
  assign WD_60_R = ( WD_60_X0 & WD_60_R0 ) | ( WD_60_X1 & WD_60_R1 );
  assign WD_61_R = ( WD_61_X0 & WD_61_R0 ) | ( WD_61_X1 & WD_61_R1 );
  assign WD_62_R = ( WD_62_X0 & WD_62_R0 ) | ( WD_62_X1 & WD_62_R1 );
  assign WD_63_R = ( WD_63_X0 & WD_63_R0 ) | ( WD_63_X1 & WD_63_R1 );
  assign WD_64_R = ( WD_64_X0 & WD_64_R0 ) | ( WD_64_X1 & WD_64_R1 );
  assign WD_65_R = ( WD_65_X0 & WD_65_R0 ) | ( WD_65_X1 & WD_65_R1 );
  assign WD_66_R = ( WD_66_X0 & WD_66_R0 ) | ( WD_66_X1 & WD_66_R1 );
  assign WD_67_R = ( WD_67_X0 & WD_67_R0 ) | ( WD_67_X1 & WD_67_R1 );
  assign WD_68_R = ( WD_68_X0 & WD_68_R0 ) | ( WD_68_X1 & WD_68_R1 );
  assign WD_69_R = ( WD_69_X0 & WD_69_R0 ) | ( WD_69_X1 & WD_69_R1 );
  assign WD_70_R = ( WD_70_X0 & WD_70_R0 ) | ( WD_70_X1 & WD_70_R1 );
  assign WD_71_R = ( WD_71_X0 & WD_71_R0 ) | ( WD_71_X1 & WD_71_R1 );
  assign WD_72_R = ( WD_72_X0 & WD_72_R0 ) | ( WD_72_X1 & WD_72_R1 );
  assign WD_73_R = ( WD_73_X0 & WD_73_R0 ) | ( WD_73_X1 & WD_73_R1 );
  assign WD_74_R = ( WD_74_X0 & WD_74_R0 ) | ( WD_74_X1 & WD_74_R1 );
  assign WD_75_R = ( WD_75_X0 & WD_75_R0 ) | ( WD_75_X1 & WD_75_R1 );
  assign WD_76_R = ( WD_76_X0 & WD_76_R0 ) | ( WD_76_X1 & WD_76_R1 );
  assign WD_77_R = ( WD_77_X0 & WD_77_R0 ) | ( WD_77_X1 & WD_77_R1 );
  assign WD_78_R = ( WD_78_X0 & WD_78_R0 ) | ( WD_78_X1 & WD_78_R1 );
  assign WD_79_R = ( WD_79_X0 & WD_79_R0 ) | ( WD_79_X1 & WD_79_R1 );
  assign WD_80_R = ( WD_80_X0 & WD_80_R0 ) | ( WD_80_X1 & WD_80_R1 );
  assign WD_81_R = ( WD_81_X0 & WD_81_R0 ) | ( WD_81_X1 & WD_81_R1 );
  assign WADR_0_R = ( WADR_0_X0 & WADR_0_R0 ) | ( WADR_0_X1 & WADR_0_R1 );
  assign WADR_1_R = ( WADR_1_X0 & WADR_1_R0 ) | ( WADR_1_X1 & WADR_1_R1 );
  assign WADR_2_R = ( WADR_2_X0 & WADR_2_R0 ) | ( WADR_2_X1 & WADR_2_R1 );
  assign WADR_4_R = ( WADR_4_X0 & WADR_4_R0 ) | ( WADR_4_X1 & WADR_4_R1 );
  assign WADR_5_R = ( WADR_5_X0 & WADR_5_R0 ) | ( WADR_5_X1 & WADR_5_R1 );
  assign WADR_6_R = ( WADR_6_X0 & WADR_6_R0 ) | ( WADR_6_X1 & WADR_6_R1 );
  assign WADR_7_R = ( WADR_7_X0 & WADR_7_R0 ) | ( WADR_7_X1 & WADR_7_R1 );
  assign SVOP_0_R = ( SVOP_0_X0 & SVOP_0_R0 ) | ( SVOP_0_X1 & SVOP_0_R1 );
  assign SVOP_1_R = ( SVOP_1_X0 & SVOP_1_R0 ) | ( SVOP_1_X1 & SVOP_1_R1 );
  assign SVOP_2_R = ( SVOP_2_X0 & SVOP_2_R0 ) | ( SVOP_2_X1 & SVOP_2_R1 );
  assign SVOP_3_R = ( SVOP_3_X0 & SVOP_3_R0 ) | ( SVOP_3_X1 & SVOP_3_R1 );
  assign SVOP_4_R = ( SVOP_4_X0 & SVOP_4_R0 ) | ( SVOP_4_X1 & SVOP_4_R1 );
  assign SVOP_5_R = ( SVOP_5_X0 & SVOP_5_R0 ) | ( SVOP_5_X1 & SVOP_5_R1 );
  assign SVOP_6_R = ( SVOP_6_X0 & SVOP_6_R0 ) | ( SVOP_6_X1 & SVOP_6_R1 );
  assign SVOP_7_R = ( SVOP_7_X0 & SVOP_7_R0 ) | ( SVOP_7_X1 & SVOP_7_R1 );
  assign SLEEP_EN_0_R = ( SLEEP_EN_0_X0 & SLEEP_EN_0_R0 ) | ( SLEEP_EN_0_X1 & SLEEP_EN_0_R1 );
  assign SLEEP_EN_1_R = ( SLEEP_EN_1_X0 & SLEEP_EN_1_R0 ) | ( SLEEP_EN_1_X1 & SLEEP_EN_1_R1 );
  assign SLEEP_EN_2_R = ( SLEEP_EN_2_X0 & SLEEP_EN_2_R0 ) | ( SLEEP_EN_2_X1 & SLEEP_EN_2_R1 );
  assign SLEEP_EN_3_R = ( SLEEP_EN_3_X0 & SLEEP_EN_3_R0 ) | ( SLEEP_EN_3_X1 & SLEEP_EN_3_R1 );
  assign SLEEP_EN_4_R = ( SLEEP_EN_4_X0 & SLEEP_EN_4_R0 ) | ( SLEEP_EN_4_X1 & SLEEP_EN_4_R1 );
  assign SLEEP_EN_5_R = ( SLEEP_EN_5_X0 & SLEEP_EN_5_R0 ) | ( SLEEP_EN_5_X1 & SLEEP_EN_5_R1 );
  assign SLEEP_EN_6_R = ( SLEEP_EN_6_X0 & SLEEP_EN_6_R0 ) | ( SLEEP_EN_6_X1 & SLEEP_EN_6_R1 );
  assign RET_EN_R = ( RET_EN_X0 & RET_EN_R0 );
  assign RE_R = ( RE_X0 & RE_R0 );
  assign RADR_0_R = ( RADR_0_X0 & RADR_0_R0 ) | ( RADR_0_X1 & RADR_0_R1 );
  assign RADR_1_R = ( RADR_1_X0 & RADR_1_R0 ) | ( RADR_1_X1 & RADR_1_R1 );
  assign RADR_2_R = ( RADR_2_X0 & RADR_2_R0 ) | ( RADR_2_X1 & RADR_2_R1 );
  assign RADR_3_R = ( RADR_3_X0 & RADR_3_R0 ) | ( RADR_3_X1 & RADR_3_R1 );
  assign RADR_4_R = ( RADR_4_X0 & RADR_4_R0 ) | ( RADR_4_X1 & RADR_4_R1 );
  assign RADR_5_R = ( RADR_5_X0 & RADR_5_R0 ) | ( RADR_5_X1 & RADR_5_R1 );
  assign RADR_6_R = ( RADR_6_X0 & RADR_6_R0 ) | ( RADR_6_X1 & RADR_6_R1 );
  assign RADR_7_R = ( RADR_7_X0 & RADR_7_R0 ) | ( RADR_7_X1 & RADR_7_R1 );
  assign IDDQ_R = ( IDDQ_X0 & IDDQ_R0 );
  assign fangyuan1_R = ( fangyuan1_X0 & fangyuan1_R0 );
  assign SLEEP_EN_7_R = ( SLEEP_EN_7_X0 & SLEEP_EN_7_R0 ) | ( SLEEP_EN_7_X1 & SLEEP_EN_7_R1 ) | ( SLEEP_EN_7_X2 & SLEEP_EN_7_R2 ) | ( SLEEP_EN_7_X3 & SLEEP_EN_7_R3 ) | ( SLEEP_EN_7_X4 & SLEEP_EN_7_R4 ) | ( SLEEP_EN_7_X5 & SLEEP_EN_7_R5 ) | ( SLEEP_EN_7_X6 & SLEEP_EN_7_R6 ) | ( SLEEP_EN_7_X7 & SLEEP_EN_7_R7 ) | ( SLEEP_EN_7_X8 & SLEEP_EN_7_R8 ) | ( SLEEP_EN_7_X9 & SLEEP_EN_7_R9 ) | ( SLEEP_EN_7_X10 & SLEEP_EN_7_R10 ) | ( SLEEP_EN_7_X11 & SLEEP_EN_7_R11 ) | ( SLEEP_EN_7_X12 & SLEEP_EN_7_R12 ) | ( SLEEP_EN_7_X13 & SLEEP_EN_7_R13 ) | ( SLEEP_EN_7_X14 & SLEEP_EN_7_R14 ) | ( SLEEP_EN_7_X15 & SLEEP_EN_7_R15 ) | ( SLEEP_EN_7_X16 & SLEEP_EN_7_R16 ) | ( SLEEP_EN_7_X17 & SLEEP_EN_7_R17 ) | ( SLEEP_EN_7_X18 & SLEEP_EN_7_R18 ) | ( SLEEP_EN_7_X19 & SLEEP_EN_7_R19 ) | ( SLEEP_EN_7_X20 & SLEEP_EN_7_R20 ) | ( SLEEP_EN_7_X21 & SLEEP_EN_7_R21 ) | ( SLEEP_EN_7_X22 & SLEEP_EN_7_R22 ) | ( SLEEP_EN_7_X23 & SLEEP_EN_7_R23 ) | ( SLEEP_EN_7_X24 & SLEEP_EN_7_R24 ) | ( SLEEP_EN_7_X25 & SLEEP_EN_7_R25 ) | ( SLEEP_EN_7_X26 & SLEEP_EN_7_R26 ) | ( SLEEP_EN_7_X27 & SLEEP_EN_7_R27 ) | ( SLEEP_EN_7_X28 & SLEEP_EN_7_R28 ) | ( SLEEP_EN_7_X29 & SLEEP_EN_7_R29 ) | ( SLEEP_EN_7_X30 & SLEEP_EN_7_R30 ) | ( SLEEP_EN_7_X31 & SLEEP_EN_7_R31 ) | ( SLEEP_EN_7_X32 & SLEEP_EN_7_R32 ) | ( SLEEP_EN_7_X33 & SLEEP_EN_7_R33 ) | ( SLEEP_EN_7_X34 & SLEEP_EN_7_R34 ) | ( SLEEP_EN_7_X35 & SLEEP_EN_7_R35 ) | ( SLEEP_EN_7_X36 & SLEEP_EN_7_R36 ) | ( SLEEP_EN_7_X37 & SLEEP_EN_7_R37 ) | ( SLEEP_EN_7_X38 & SLEEP_EN_7_R38 ) | ( SLEEP_EN_7_X39 & SLEEP_EN_7_R39 ) | ( SLEEP_EN_7_X40 & SLEEP_EN_7_R40 ) | ( SLEEP_EN_7_X41 & SLEEP_EN_7_R41 ) | ( SLEEP_EN_7_X42 & SLEEP_EN_7_R42 ) | ( SLEEP_EN_7_X43 & SLEEP_EN_7_R43 ) | ( SLEEP_EN_7_X44 & SLEEP_EN_7_R44 ) | ( SLEEP_EN_7_X45 & SLEEP_EN_7_R45 ) | ( SLEEP_EN_7_X46 & SLEEP_EN_7_R46 ) | ( SLEEP_EN_7_X47 & SLEEP_EN_7_R47 ) | ( SLEEP_EN_7_X48 & SLEEP_EN_7_R48 ) | ( SLEEP_EN_7_X49 & SLEEP_EN_7_R49 ) | ( SLEEP_EN_7_X50 & SLEEP_EN_7_R50 ) | ( SLEEP_EN_7_X51 & SLEEP_EN_7_R51 ) | ( SLEEP_EN_7_X52 & SLEEP_EN_7_R52 ) | ( SLEEP_EN_7_X53 & SLEEP_EN_7_R53 ) | ( SLEEP_EN_7_X54 & SLEEP_EN_7_R54 ) | ( SLEEP_EN_7_X55 & SLEEP_EN_7_R55 ) | ( SLEEP_EN_7_X56 & SLEEP_EN_7_R56 ) | ( SLEEP_EN_7_X57 & SLEEP_EN_7_R57 ) | ( SLEEP_EN_7_X58 & SLEEP_EN_7_R58 ) | ( SLEEP_EN_7_X59 & SLEEP_EN_7_R59 ) | ( SLEEP_EN_7_X60 & SLEEP_EN_7_R60 ) | ( SLEEP_EN_7_X61 & SLEEP_EN_7_R61 ) | ( SLEEP_EN_7_X62 & SLEEP_EN_7_R62 ) | ( SLEEP_EN_7_X63 & SLEEP_EN_7_R63 ) | ( SLEEP_EN_7_X64 & SLEEP_EN_7_R64 ) | ( SLEEP_EN_7_X65 & SLEEP_EN_7_R65 ) | ( SLEEP_EN_7_X66 & SLEEP_EN_7_R66 ) | ( SLEEP_EN_7_X67 & SLEEP_EN_7_R67 ) | ( SLEEP_EN_7_X68 & SLEEP_EN_7_R68 ) | ( SLEEP_EN_7_X69 & SLEEP_EN_7_R69 ) | ( SLEEP_EN_7_X70 & SLEEP_EN_7_R70 ) | ( SLEEP_EN_7_X71 & SLEEP_EN_7_R71 ) | ( SLEEP_EN_7_X72 & SLEEP_EN_7_R72 ) | ( SLEEP_EN_7_X73 & SLEEP_EN_7_R73 ) | ( SLEEP_EN_7_X74 & SLEEP_EN_7_R74 ) | ( SLEEP_EN_7_X75 & SLEEP_EN_7_R75 ) | ( SLEEP_EN_7_X76 & SLEEP_EN_7_R76 ) | ( SLEEP_EN_7_X77 & SLEEP_EN_7_R77 ) | ( SLEEP_EN_7_X78 & SLEEP_EN_7_R78 ) | ( SLEEP_EN_7_X79 & SLEEP_EN_7_R79 ) | ( SLEEP_EN_7_X80 & SLEEP_EN_7_R80 ) | ( SLEEP_EN_7_X81 & SLEEP_EN_7_R81 ) | ( SLEEP_EN_7_X82 & SLEEP_EN_7_R82 ) | ( SLEEP_EN_7_X83 & SLEEP_EN_7_R83 ) | ( SLEEP_EN_7_X84 & SLEEP_EN_7_R84 );
  assign _0__R = ( _0__X0 & _0__R0 );
  assign RD_R = ( RD_X0 & RD_R0 );
  assign RD_9_R = ( RD_9_X0 & RD_9_R0 ) | ( RD_9_X1 & RD_9_R1 );
  assign RD_81_R = ( RD_81_X0 & RD_81_R0 ) | ( RD_81_X1 & RD_81_R1 );
  assign RD_80_R = ( RD_80_X0 & RD_80_R0 ) | ( RD_80_X1 & RD_80_R1 );
  assign RD_8_R = ( RD_8_X0 & RD_8_R0 ) | ( RD_8_X1 & RD_8_R1 );
  assign RD_79_R = ( RD_79_X0 & RD_79_R0 ) | ( RD_79_X1 & RD_79_R1 );
  assign RD_78_R = ( RD_78_X0 & RD_78_R0 ) | ( RD_78_X1 & RD_78_R1 );
  assign RD_77_R = ( RD_77_X0 & RD_77_R0 ) | ( RD_77_X1 & RD_77_R1 );
  assign RD_76_R = ( RD_76_X0 & RD_76_R0 ) | ( RD_76_X1 & RD_76_R1 );
  assign RD_75_R = ( RD_75_X0 & RD_75_R0 ) | ( RD_75_X1 & RD_75_R1 );
  assign RD_74_R = ( RD_74_X0 & RD_74_R0 ) | ( RD_74_X1 & RD_74_R1 );
  assign RD_73_R = ( RD_73_X0 & RD_73_R0 ) | ( RD_73_X1 & RD_73_R1 );
  assign RD_72_R = ( RD_72_X0 & RD_72_R0 ) | ( RD_72_X1 & RD_72_R1 );
  assign RD_71_R = ( RD_71_X0 & RD_71_R0 ) | ( RD_71_X1 & RD_71_R1 );
  assign RD_70_R = ( RD_70_X0 & RD_70_R0 ) | ( RD_70_X1 & RD_70_R1 );
  assign RD_7_R = ( RD_7_X0 & RD_7_R0 ) | ( RD_7_X1 & RD_7_R1 );
  assign RD_69_R = ( RD_69_X0 & RD_69_R0 ) | ( RD_69_X1 & RD_69_R1 );
  assign RD_68_R = ( RD_68_X0 & RD_68_R0 ) | ( RD_68_X1 & RD_68_R1 );
  assign RD_67_R = ( RD_67_X0 & RD_67_R0 ) | ( RD_67_X1 & RD_67_R1 );
  assign RD_66_R = ( RD_66_X0 & RD_66_R0 ) | ( RD_66_X1 & RD_66_R1 );
  assign RD_65_R = ( RD_65_X0 & RD_65_R0 ) | ( RD_65_X1 & RD_65_R1 );
  assign RD_64_R = ( RD_64_X0 & RD_64_R0 ) | ( RD_64_X1 & RD_64_R1 );
  assign RD_63_R = ( RD_63_X0 & RD_63_R0 ) | ( RD_63_X1 & RD_63_R1 );
  assign RD_62_R = ( RD_62_X0 & RD_62_R0 ) | ( RD_62_X1 & RD_62_R1 );
  assign RD_61_R = ( RD_61_X0 & RD_61_R0 ) | ( RD_61_X1 & RD_61_R1 );
  assign RD_60_R = ( RD_60_X0 & RD_60_R0 ) | ( RD_60_X1 & RD_60_R1 );
  assign RD_6_R = ( RD_6_X0 & RD_6_R0 ) | ( RD_6_X1 & RD_6_R1 );
  assign RD_59_R = ( RD_59_X0 & RD_59_R0 ) | ( RD_59_X1 & RD_59_R1 );
  assign RD_58_R = ( RD_58_X0 & RD_58_R0 ) | ( RD_58_X1 & RD_58_R1 );
  assign RD_57_R = ( RD_57_X0 & RD_57_R0 ) | ( RD_57_X1 & RD_57_R1 );
  assign RD_56_R = ( RD_56_X0 & RD_56_R0 ) | ( RD_56_X1 & RD_56_R1 );
  assign RD_55_R = ( RD_55_X0 & RD_55_R0 ) | ( RD_55_X1 & RD_55_R1 );
  assign RD_54_R = ( RD_54_X0 & RD_54_R0 ) | ( RD_54_X1 & RD_54_R1 );
  assign RD_53_R = ( RD_53_X0 & RD_53_R0 ) | ( RD_53_X1 & RD_53_R1 );
  assign RD_52_R = ( RD_52_X0 & RD_52_R0 ) | ( RD_52_X1 & RD_52_R1 );
  assign RD_51_R = ( RD_51_X0 & RD_51_R0 ) | ( RD_51_X1 & RD_51_R1 );
  assign RD_50_R = ( RD_50_X0 & RD_50_R0 ) | ( RD_50_X1 & RD_50_R1 );
  assign RD_5_R = ( RD_5_X0 & RD_5_R0 ) | ( RD_5_X1 & RD_5_R1 );
  assign RD_49_R = ( RD_49_X0 & RD_49_R0 ) | ( RD_49_X1 & RD_49_R1 );
  assign RD_48_R = ( RD_48_X0 & RD_48_R0 ) | ( RD_48_X1 & RD_48_R1 );
  assign RD_47_R = ( RD_47_X0 & RD_47_R0 ) | ( RD_47_X1 & RD_47_R1 );
  assign RD_46_R = ( RD_46_X0 & RD_46_R0 ) | ( RD_46_X1 & RD_46_R1 );
  assign RD_45_R = ( RD_45_X0 & RD_45_R0 ) | ( RD_45_X1 & RD_45_R1 );
  assign RD_44_R = ( RD_44_X0 & RD_44_R0 ) | ( RD_44_X1 & RD_44_R1 );
  assign RD_43_R = ( RD_43_X0 & RD_43_R0 ) | ( RD_43_X1 & RD_43_R1 );
  assign RD_42_R = ( RD_42_X0 & RD_42_R0 ) | ( RD_42_X1 & RD_42_R1 );
  assign RD_41_R = ( RD_41_X0 & RD_41_R0 ) | ( RD_41_X1 & RD_41_R1 );
  assign RD_40_R = ( RD_40_X0 & RD_40_R0 ) | ( RD_40_X1 & RD_40_R1 );
  assign RD_4_R = ( RD_4_X0 & RD_4_R0 ) | ( RD_4_X1 & RD_4_R1 );
  assign RD_39_R = ( RD_39_X0 & RD_39_R0 ) | ( RD_39_X1 & RD_39_R1 );
  assign RD_38_R = ( RD_38_X0 & RD_38_R0 ) | ( RD_38_X1 & RD_38_R1 );
  assign RD_37_R = ( RD_37_X0 & RD_37_R0 ) | ( RD_37_X1 & RD_37_R1 );
  assign RD_36_R = ( RD_36_X0 & RD_36_R0 ) | ( RD_36_X1 & RD_36_R1 );
  assign RD_35_R = ( RD_35_X0 & RD_35_R0 ) | ( RD_35_X1 & RD_35_R1 );
  assign RD_34_R = ( RD_34_X0 & RD_34_R0 ) | ( RD_34_X1 & RD_34_R1 );
  assign RD_33_R = ( RD_33_X0 & RD_33_R0 ) | ( RD_33_X1 & RD_33_R1 );
  assign RD_32_R = ( RD_32_X0 & RD_32_R0 ) | ( RD_32_X1 & RD_32_R1 );
  assign RD_31_R = ( RD_31_X0 & RD_31_R0 ) | ( RD_31_X1 & RD_31_R1 );
  assign RD_30_R = ( RD_30_X0 & RD_30_R0 ) | ( RD_30_X1 & RD_30_R1 );
  assign RD_3_R = ( RD_3_X0 & RD_3_R0 ) | ( RD_3_X1 & RD_3_R1 );
  assign RD_29_R = ( RD_29_X0 & RD_29_R0 ) | ( RD_29_X1 & RD_29_R1 );
  assign RD_28_R = ( RD_28_X0 & RD_28_R0 ) | ( RD_28_X1 & RD_28_R1 );
  assign RD_27_R = ( RD_27_X0 & RD_27_R0 ) | ( RD_27_X1 & RD_27_R1 );
  assign RD_26_R = ( RD_26_X0 & RD_26_R0 ) | ( RD_26_X1 & RD_26_R1 );
  assign RD_25_R = ( RD_25_X0 & RD_25_R0 ) | ( RD_25_X1 & RD_25_R1 );
  assign WADR_3_R = ( WADR_3_X0 & WADR_3_R0 ) | ( WADR_3_X1 & WADR_3_R1 );
  assign RD_24_R = ( RD_24_X0 & RD_24_R0 ) | ( RD_24_X1 & RD_24_R1 );
  assign RD_23_R = ( RD_23_X0 & RD_23_R0 ) | ( RD_23_X1 & RD_23_R1 );
  assign RD_22_R = ( RD_22_X0 & RD_22_R0 ) | ( RD_22_X1 & RD_22_R1 );
  assign RD_21_R = ( RD_21_X0 & RD_21_R0 ) | ( RD_21_X1 & RD_21_R1 );
  assign RD_20_R = ( RD_20_X0 & RD_20_R0 ) | ( RD_20_X1 & RD_20_R1 );
  assign RD_2_R = ( RD_2_X0 & RD_2_R0 ) | ( RD_2_X1 & RD_2_R1 );
  assign RD_19_R = ( RD_19_X0 & RD_19_R0 ) | ( RD_19_X1 & RD_19_R1 );
  assign RD_18_R = ( RD_18_X0 & RD_18_R0 ) | ( RD_18_X1 & RD_18_R1 );
  assign RD_17_R = ( RD_17_X0 & RD_17_R0 ) | ( RD_17_X1 & RD_17_R1 );
  assign RD_16_R = ( RD_16_X0 & RD_16_R0 ) | ( RD_16_X1 & RD_16_R1 );
  assign RD_15_R = ( RD_15_X0 & RD_15_R0 ) | ( RD_15_X1 & RD_15_R1 );
  assign RD_14_R = ( RD_14_X0 & RD_14_R0 ) | ( RD_14_X1 & RD_14_R1 );
  assign RD_13_R = ( RD_13_X0 & RD_13_R0 ) | ( RD_13_X1 & RD_13_R1 );
  assign RD_12_R = ( RD_12_X0 & RD_12_R0 ) | ( RD_12_X1 & RD_12_R1 );
  assign RD_11_R = ( RD_11_X0 & RD_11_R0 ) | ( RD_11_X1 & RD_11_R1 );
  assign RD_10_R = ( RD_10_X0 & RD_10_R0 ) | ( RD_10_X1 & RD_10_R1 );
  assign RD_1_R = ( RD_1_X0 & RD_1_R0 ) | ( RD_1_X1 & RD_1_R1 );
  assign RD_0_R = ( RD_0_X0 & RD_0_R0 ) | ( RD_0_X1 & RD_0_R1 );
 // ground taints for floating regs
 // ground taints for unused wires
  assign { GND_R , GND_C , GND_X , RA_R , RA_C , RA_X , SLEEP_EN_R , SLEEP_EN_C , SLEEP_EN_X , SVOP_R , SVOP_C , SVOP_X , VDD_R , VDD_C , VDD_X , WA_R , WA_C , WA_X , WD_R , WD_C , WD_X , clamp_rd_R , clamp_rd_C , clamp_rd_X , clobber_array_R , clobber_array_C , clobber_array_X , clobber_flops_R , clobber_flops_C , clobber_flops_X , clobber_x_R , clobber_x_C , clobber_x_X , fangyuan0_R , fangyuan0_C , fangyuan0_X  } = 0;
 // ground taints for unused wire slices
endmodule
