module HLS_fp32_mul_core ( chn_a_rsc_vz , chn_a_rsc_z , chn_a_rsci_oswt , chn_b_rsc_vz , chn_b_rsc_z , chn_b_rsci_oswt , chn_o_rsc_vz , chn_o_rsci_oswt , nvdla_core_clk , nvdla_core_rstn , INSTR_IN_ZY , chn_a_rsc_lz_R0 , chn_a_rsc_lz_C0 , chn_a_rsc_lz_X0 , chn_a_rsc_vz_T , chn_a_rsc_vz_S , chn_a_rsc_z_T , chn_a_rsc_z_S , chn_a_rsci_oswt_T , chn_a_rsci_oswt_S , chn_a_rsci_oswt_unreg_pff_R0 , chn_a_rsci_oswt_unreg_pff_C0 , chn_a_rsci_oswt_unreg_pff_X0 , chn_b_rsc_lz_R0 , chn_b_rsc_lz_C0 , chn_b_rsc_lz_X0 , chn_b_rsc_vz_T , chn_b_rsc_vz_S , chn_b_rsc_z_T , chn_b_rsc_z_S , chn_b_rsci_oswt_T , chn_b_rsci_oswt_S , chn_o_rsc_lz_R0 , chn_o_rsc_lz_C0 , chn_o_rsc_lz_X0 , chn_o_rsc_vz_T , chn_o_rsc_vz_S , chn_o_rsc_z_R0 , chn_o_rsc_z_C0 , chn_o_rsc_z_X0 , chn_o_rsci_oswt_T , chn_o_rsci_oswt_S , chn_o_rsci_oswt_unreg_R0 , chn_o_rsci_oswt_unreg_C0 , chn_o_rsci_oswt_unreg_X0 , nvdla_core_clk_T , nvdla_core_clk_S , nvdla_core_rstn_T , nvdla_core_rstn_S , chn_a_rsc_lz , chn_a_rsci_oswt_unreg_pff , chn_b_rsc_lz , chn_o_rsc_lz , chn_o_rsc_z , chn_o_rsci_oswt_unreg , chn_a_rsc_lz_T , chn_a_rsc_lz_S , chn_a_rsc_vz_R , chn_a_rsc_vz_X , chn_a_rsc_vz_C , chn_a_rsc_z_R , chn_a_rsc_z_X , chn_a_rsc_z_C , chn_a_rsci_oswt_R , chn_a_rsci_oswt_X , chn_a_rsci_oswt_C , chn_a_rsci_oswt_unreg_pff_T , chn_a_rsci_oswt_unreg_pff_S , chn_b_rsc_lz_T , chn_b_rsc_lz_S , chn_b_rsc_vz_R , chn_b_rsc_vz_X , chn_b_rsc_vz_C , chn_b_rsc_z_R , chn_b_rsc_z_X , chn_b_rsc_z_C , chn_b_rsci_oswt_R , chn_b_rsci_oswt_X , chn_b_rsci_oswt_C , chn_o_rsc_lz_T , chn_o_rsc_lz_S , chn_o_rsc_vz_R , chn_o_rsc_vz_X , chn_o_rsc_vz_C , chn_o_rsc_z_T , chn_o_rsc_z_S , chn_o_rsci_oswt_R , chn_o_rsci_oswt_X , chn_o_rsci_oswt_C , chn_o_rsci_oswt_unreg_T , chn_o_rsci_oswt_unreg_S , nvdla_core_clk_R , nvdla_core_clk_X , nvdla_core_clk_C , nvdla_core_rstn_R , nvdla_core_rstn_X , nvdla_core_rstn_C );
  logic rst_zy;
  integer i;
  input INSTR_IN_ZY;
  logic _000_;
  logic _000__T ;
  logic _000__R ;
  logic _000__C ;
  logic _000__X ;
  logic [13:0] _000__S ;
  logic _001_;
  logic _001__T ;
  logic _001__R ;
  logic _001__C ;
  logic _001__X ;
  logic [13:0] _001__S ;
  logic _002_;
  logic _002__T ;
  logic _002__R ;
  logic _002__C ;
  logic _002__X ;
  logic [13:0] _002__S ;
  logic _003_;
  logic _003__T ;
  logic _003__R ;
  logic _003__C ;
  logic _003__X ;
  logic [13:0] _003__S ;
  logic [22:0] _004_;
  logic [22:0] _004__T ;
  logic [22:0] _004__R ;
  logic [22:0] _004__C ;
  logic [22:0] _004__X ;
  logic [13:0] _004__S ;
  logic [22:0] _005_;
  logic [22:0] _005__T ;
  logic [22:0] _005__R ;
  logic [22:0] _005__C ;
  logic [22:0] _005__X ;
  logic [13:0] _005__S ;
  logic [22:0] _006_;
  logic [22:0] _006__T ;
  logic [22:0] _006__R ;
  logic [22:0] _006__C ;
  logic [22:0] _006__X ;
  logic [13:0] _006__S ;
  logic [22:0] _007_;
  logic [22:0] _007__T ;
  logic [22:0] _007__R ;
  logic [22:0] _007__C ;
  logic [22:0] _007__X ;
  logic [13:0] _007__S ;
  logic [7:0] _008_;
  logic [7:0] _008__T ;
  logic [7:0] _008__R ;
  logic [7:0] _008__C ;
  logic [7:0] _008__X ;
  logic [13:0] _008__S ;
  logic _009_;
  logic _009__T ;
  logic _009__R ;
  logic _009__C ;
  logic _009__X ;
  logic [13:0] _009__S ;
  logic [7:0] _010_;
  logic [7:0] _010__T ;
  logic [7:0] _010__R ;
  logic [7:0] _010__C ;
  logic [7:0] _010__X ;
  logic [13:0] _010__S ;
  logic _011_;
  logic _011__T ;
  logic _011__R ;
  logic _011__C ;
  logic _011__X ;
  logic [13:0] _011__S ;
  logic _012_;
  logic _012__T ;
  logic _012__R ;
  logic _012__C ;
  logic _012__X ;
  logic [13:0] _012__S ;
  logic _013_;
  logic _013__T ;
  logic _013__R ;
  logic _013__C ;
  logic _013__X ;
  logic [13:0] _013__S ;
  logic _014_;
  logic _014__T ;
  logic _014__R ;
  logic _014__C ;
  logic _014__X ;
  logic [13:0] _014__S ;
  logic _015_;
  logic _015__T ;
  logic _015__R ;
  logic _015__C ;
  logic _015__X ;
  logic [13:0] _015__S ;
  logic _016_;
  logic _016__T ;
  logic _016__R ;
  logic _016__C ;
  logic _016__X ;
  logic [13:0] _016__S ;
  logic _017_;
  logic _017__T ;
  logic _017__R ;
  logic _017__C ;
  logic _017__X ;
  logic [13:0] _017__S ;
  logic _018_;
  logic _018__T ;
  logic _018__R ;
  logic _018__C ;
  logic _018__X ;
  logic [13:0] _018__S ;
  logic _019_;
  logic _019__T ;
  logic _019__R ;
  logic _019__C ;
  logic _019__X ;
  logic [13:0] _019__S ;
  logic [7:0] _020_;
  logic [7:0] _020__T ;
  logic [7:0] _020__R ;
  logic [7:0] _020__C ;
  logic [7:0] _020__X ;
  logic [13:0] _020__S ;
  logic [47:0] _021_;
  logic [47:0] _021__T ;
  logic [47:0] _021__R ;
  logic [47:0] _021__C ;
  logic [47:0] _021__X ;
  logic [13:0] _021__S ;
  logic [47:0] _022_;
  logic [47:0] _022__T ;
  logic [47:0] _022__R ;
  logic [47:0] _022__C ;
  logic [47:0] _022__X ;
  logic [13:0] _022__S ;
  logic [30:0] _023_;
  logic [30:0] _023__T ;
  logic [30:0] _023__R ;
  logic [30:0] _023__C ;
  logic [30:0] _023__X ;
  logic [13:0] _023__S ;
  logic [30:0] _024_;
  logic [30:0] _024__T ;
  logic [30:0] _024__R ;
  logic [30:0] _024__C ;
  logic [30:0] _024__X ;
  logic [13:0] _024__S ;
  logic _025_;
  logic _025__T ;
  logic _025__R ;
  logic _025__C ;
  logic _025__X ;
  logic [13:0] _025__S ;
  logic _026_;
  logic _026__T ;
  logic _026__R ;
  logic _026__C ;
  logic _026__X ;
  logic [13:0] _026__S ;
  logic _027_;
  logic _027__T ;
  logic _027__R ;
  logic _027__C ;
  logic _027__X ;
  logic [13:0] _027__S ;
  logic _028_;
  logic _028__T ;
  logic _028__R ;
  logic _028__C ;
  logic _028__X ;
  logic [13:0] _028__S ;
  logic [22:0] _029_;
  logic [22:0] _029__T ;
  logic [22:0] _029__R ;
  logic [22:0] _029__C ;
  logic [22:0] _029__X ;
  logic [13:0] _029__S ;
  logic [7:0] _030_;
  logic [7:0] _030__T ;
  logic [7:0] _030__R ;
  logic [7:0] _030__C ;
  logic [7:0] _030__X ;
  logic [13:0] _030__S ;
  logic _031_;
  logic _031__T ;
  logic _031__R ;
  logic _031__C ;
  logic _031__X ;
  logic [13:0] _031__S ;
  logic _032_;
  logic _032__T ;
  logic _032__R ;
  logic _032__C ;
  logic _032__X ;
  logic [13:0] _032__S ;
  logic _033_;
  logic _033__T ;
  logic _033__R ;
  logic _033__C ;
  logic _033__X ;
  logic [13:0] _033__S ;
  logic _034_;
  logic _034__T ;
  logic _034__R ;
  logic _034__C ;
  logic _034__X ;
  logic [13:0] _034__S ;
  logic _035_;
  logic _035__T ;
  logic _035__R ;
  logic _035__C ;
  logic _035__X ;
  logic [13:0] _035__S ;
  logic _036_;
  logic _036__T ;
  logic _036__R ;
  logic _036__C ;
  logic _036__X ;
  logic [13:0] _036__S ;
  logic _037_;
  logic _037__T ;
  logic _037__R ;
  logic _037__C ;
  logic _037__X ;
  logic [13:0] _037__S ;
  logic _038_;
  logic _038__T ;
  logic _038__R ;
  logic _038__C ;
  logic _038__X ;
  logic [13:0] _038__S ;
  logic [22:0] _039_;
  logic [22:0] _039__T ;
  logic [22:0] _039__R ;
  logic [22:0] _039__C ;
  logic [22:0] _039__X ;
  logic [13:0] _039__S ;
  logic [22:0] _040_;
  logic [22:0] _040__T ;
  logic [22:0] _040__R ;
  logic [22:0] _040__C ;
  logic [22:0] _040__X ;
  logic [13:0] _040__S ;
  logic [47:0] _041_;
  logic [47:0] _041__T ;
  logic [47:0] _041__R ;
  logic [47:0] _041__C ;
  logic [47:0] _041__X ;
  logic [13:0] _041__S ;
  logic [7:0] _042_;
  logic [7:0] _042__T ;
  logic [7:0] _042__R ;
  logic [7:0] _042__C ;
  logic [7:0] _042__X ;
  logic [13:0] _042__S ;
  logic [7:0] _043_;
  logic [7:0] _043__T ;
  logic [7:0] _043__R ;
  logic [7:0] _043__C ;
  logic [7:0] _043__X ;
  logic [13:0] _043__S ;
  logic _044_;
  logic _044__T ;
  logic _044__R ;
  logic _044__C ;
  logic _044__X ;
  logic [13:0] _044__S ;
  logic _045_;
  logic _045__T ;
  logic _045__R ;
  logic _045__C ;
  logic _045__X ;
  logic [13:0] _045__S ;
  logic _046_;
  logic _046__T ;
  logic _046__R ;
  logic _046__C ;
  logic _046__X ;
  logic [13:0] _046__S ;
  logic _047_;
  logic _047__T ;
  logic _047__R ;
  logic _047__C ;
  logic _047__X ;
  logic [13:0] _047__S ;
  logic _048_;
  logic _048__T ;
  logic _048__R ;
  logic _048__C ;
  logic _048__X ;
  logic [13:0] _048__S ;
  logic _049_;
  logic _049__T ;
  logic _049__R ;
  logic _049__C ;
  logic _049__X ;
  logic [13:0] _049__S ;
  logic _050_;
  logic _050__T ;
  logic _050__R ;
  logic _050__C ;
  logic _050__X ;
  logic [13:0] _050__S ;
  logic _051_;
  logic _051__T ;
  logic _051__R ;
  logic _051__C ;
  logic _051__X ;
  logic [13:0] _051__S ;
  logic _052_;
  logic _052__T ;
  logic _052__R ;
  logic _052__C ;
  logic _052__X ;
  logic [13:0] _052__S ;
  logic _053_;
  logic _053__T ;
  logic _053__R ;
  logic _053__C ;
  logic _053__X ;
  logic [13:0] _053__S ;
  logic _054_;
  logic _054__T ;
  logic _054__R ;
  logic _054__C ;
  logic _054__X ;
  logic [13:0] _054__S ;
  logic _055_;
  logic _055__T ;
  logic _055__R ;
  logic _055__C ;
  logic _055__X ;
  logic [13:0] _055__S ;
  logic _056_;
  logic _056__T ;
  logic _056__R ;
  logic _056__C ;
  logic _056__X ;
  logic [13:0] _056__S ;
  logic _057_;
  logic _057__T ;
  logic _057__R ;
  logic _057__C ;
  logic _057__X ;
  logic [13:0] _057__S ;
  logic _058_;
  logic _058__T ;
  logic _058__R ;
  logic _058__C ;
  logic _058__X ;
  logic [13:0] _058__S ;
  logic _059_;
  logic _059__T ;
  logic _059__R ;
  logic _059__C ;
  logic _059__X ;
  logic [13:0] _059__S ;
  logic _060_;
  logic _060__T ;
  logic _060__R ;
  logic _060__C ;
  logic _060__X ;
  logic [13:0] _060__S ;
  logic _061_;
  logic _061__T ;
  logic _061__R ;
  logic _061__C ;
  logic _061__X ;
  logic [13:0] _061__S ;
  logic _062_;
  logic _062__T ;
  logic _062__R ;
  logic _062__C ;
  logic _062__X ;
  logic [13:0] _062__S ;
  logic _063_;
  logic _063__T ;
  logic _063__R ;
  logic _063__C ;
  logic _063__X ;
  logic [13:0] _063__S ;
  logic _064_;
  logic _064__T ;
  logic _064__R ;
  logic _064__C ;
  logic _064__X ;
  logic [13:0] _064__S ;
  logic _065_;
  logic _065__T ;
  logic _065__R ;
  logic _065__C ;
  logic _065__X ;
  logic [13:0] _065__S ;
  logic _066_;
  logic _066__T ;
  logic _066__R ;
  logic _066__C ;
  logic _066__X ;
  logic [13:0] _066__S ;
  logic _067_;
  logic _067__T ;
  logic _067__R ;
  logic _067__C ;
  logic _067__X ;
  logic [13:0] _067__S ;
  logic _068_;
  logic _068__T ;
  logic _068__R ;
  logic _068__C ;
  logic _068__X ;
  logic [13:0] _068__S ;
  logic _069_;
  logic _069__T ;
  logic _069__R ;
  logic _069__C ;
  logic _069__X ;
  logic [13:0] _069__S ;
  logic _070_;
  logic _070__T ;
  logic _070__R ;
  logic _070__C ;
  logic _070__X ;
  logic [13:0] _070__S ;
  logic _071_;
  logic _071__T ;
  logic _071__R ;
  logic _071__C ;
  logic _071__X ;
  logic [13:0] _071__S ;
  logic _072_;
  logic _072__T ;
  logic _072__R ;
  logic _072__C ;
  logic _072__X ;
  logic [13:0] _072__S ;
  logic _073_;
  logic _073__T ;
  logic _073__R ;
  logic _073__C ;
  logic _073__X ;
  logic [13:0] _073__S ;
  logic _074_;
  logic _074__T ;
  logic _074__R ;
  logic _074__C ;
  logic _074__X ;
  logic [13:0] _074__S ;
  logic _075_;
  logic _075__T ;
  logic _075__R ;
  logic _075__C ;
  logic _075__X ;
  logic [13:0] _075__S ;
  logic _076_;
  logic _076__T ;
  logic _076__R ;
  logic _076__C ;
  logic _076__X ;
  logic [13:0] _076__S ;
  logic _077_;
  logic _077__T ;
  logic _077__R ;
  logic _077__C ;
  logic _077__X ;
  logic [13:0] _077__S ;
  logic _078_;
  logic _078__T ;
  logic _078__R ;
  logic _078__C ;
  logic _078__X ;
  logic [13:0] _078__S ;
  logic _079_;
  logic _079__T ;
  logic _079__R ;
  logic _079__C ;
  logic _079__X ;
  logic [13:0] _079__S ;
  logic _080_;
  logic _080__T ;
  logic _080__R ;
  logic _080__C ;
  logic _080__X ;
  logic [13:0] _080__S ;
  logic [7:0] _081_;
  logic [7:0] _081__T ;
  logic [7:0] _081__R ;
  logic [7:0] _081__C ;
  logic [7:0] _081__X ;
  logic [13:0] _081__S ;
  logic [7:0] _082_;
  logic [7:0] _082__T ;
  logic [7:0] _082__R ;
  logic [7:0] _082__C ;
  logic [7:0] _082__X ;
  logic [13:0] _082__S ;
  logic [7:0] _083_;
  logic [7:0] _083__T ;
  logic [7:0] _083__R ;
  logic [7:0] _083__C ;
  logic [7:0] _083__X ;
  logic [13:0] _083__S ;
  logic _084_;
  logic _084__T ;
  logic _084__R ;
  logic _084__C ;
  logic _084__X ;
  logic [13:0] _084__S ;
  logic _085_;
  logic _085__T ;
  logic _085__R ;
  logic _085__C ;
  logic _085__X ;
  logic [13:0] _085__S ;
  logic _086_;
  logic _086__T ;
  logic _086__R ;
  logic _086__C ;
  logic _086__X ;
  logic [13:0] _086__S ;
  logic _087_;
  logic _087__T ;
  logic _087__R ;
  logic _087__C ;
  logic _087__X ;
  logic [13:0] _087__S ;
  logic _088_;
  logic _088__T ;
  logic _088__R ;
  logic _088__C ;
  logic _088__X ;
  logic [13:0] _088__S ;
  logic _089_;
  logic _089__T ;
  logic _089__R ;
  logic _089__C ;
  logic _089__X ;
  logic [13:0] _089__S ;
  logic _090_;
  logic _090__T ;
  logic _090__R ;
  logic _090__C ;
  logic _090__X ;
  logic [13:0] _090__S ;
  logic _091_;
  logic _091__T ;
  logic _091__R ;
  logic _091__C ;
  logic _091__X ;
  logic [13:0] _091__S ;
  logic _092_;
  logic _092__T ;
  logic _092__R ;
  logic _092__C ;
  logic _092__X ;
  logic [13:0] _092__S ;
  logic _093_;
  logic _093__T ;
  logic _093__R ;
  logic _093__C ;
  logic _093__X ;
  logic [13:0] _093__S ;
  logic _094_;
  logic _094__T ;
  logic _094__R ;
  logic _094__C ;
  logic _094__X ;
  logic [13:0] _094__S ;
  logic _095_;
  logic _095__T ;
  logic _095__R ;
  logic _095__C ;
  logic _095__X ;
  logic [13:0] _095__S ;
  logic _096_;
  logic _096__T ;
  logic _096__R ;
  logic _096__C ;
  logic _096__X ;
  logic [13:0] _096__S ;
  logic _097_;
  logic _097__T ;
  logic _097__R ;
  logic _097__C ;
  logic _097__X ;
  logic [13:0] _097__S ;
  logic _098_;
  logic _098__T ;
  logic _098__R ;
  logic _098__C ;
  logic _098__X ;
  logic [13:0] _098__S ;
  logic _099_;
  logic _099__T ;
  logic _099__R ;
  logic _099__C ;
  logic _099__X ;
  logic [13:0] _099__S ;
  logic _100_;
  logic _100__T ;
  logic _100__R ;
  logic _100__C ;
  logic _100__X ;
  logic [13:0] _100__S ;
  logic _101_;
  logic _101__T ;
  logic _101__R ;
  logic _101__C ;
  logic _101__X ;
  logic [13:0] _101__S ;
  logic _102_;
  logic _102__T ;
  logic _102__R ;
  logic _102__C ;
  logic _102__X ;
  logic [13:0] _102__S ;
  logic _103_;
  logic _103__T ;
  logic _103__R ;
  logic _103__C ;
  logic _103__X ;
  logic [13:0] _103__S ;
  logic _104_;
  logic _104__T ;
  logic _104__R ;
  logic _104__C ;
  logic _104__X ;
  logic [13:0] _104__S ;
  logic _105_;
  logic _105__T ;
  logic _105__R ;
  logic _105__C ;
  logic _105__X ;
  logic [13:0] _105__S ;
  logic _106_;
  logic _106__T ;
  logic _106__R ;
  logic _106__C ;
  logic _106__X ;
  logic [13:0] _106__S ;
  logic _107_;
  logic _107__T ;
  logic _107__R ;
  logic _107__C ;
  logic _107__X ;
  logic [13:0] _107__S ;
  logic _108_;
  logic _108__T ;
  logic _108__R ;
  logic _108__C ;
  logic _108__X ;
  logic [13:0] _108__S ;
  logic _109_;
  logic _109__T ;
  logic _109__R ;
  logic _109__C ;
  logic _109__X ;
  logic [13:0] _109__S ;
  logic _110_;
  logic _110__T ;
  logic _110__R ;
  logic _110__C ;
  logic _110__X ;
  logic [13:0] _110__S ;
  logic _111_;
  logic _111__T ;
  logic _111__R ;
  logic _111__C ;
  logic _111__X ;
  logic [13:0] _111__S ;
  logic _112_;
  logic _112__T ;
  logic _112__R ;
  logic _112__C ;
  logic _112__X ;
  logic [13:0] _112__S ;
  logic _113_;
  logic _113__T ;
  logic _113__R ;
  logic _113__C ;
  logic _113__X ;
  logic [13:0] _113__S ;
  logic _114_;
  logic _114__T ;
  logic _114__R ;
  logic _114__C ;
  logic _114__X ;
  logic [13:0] _114__S ;
  logic _115_;
  logic _115__T ;
  logic _115__R ;
  logic _115__C ;
  logic _115__X ;
  logic [13:0] _115__S ;
  logic _116_;
  logic _116__T ;
  logic _116__R ;
  logic _116__C ;
  logic _116__X ;
  logic [13:0] _116__S ;
  logic _117_;
  logic _117__T ;
  logic _117__R ;
  logic _117__C ;
  logic _117__X ;
  logic [13:0] _117__S ;
  logic _118_;
  logic _118__T ;
  logic _118__R ;
  logic _118__C ;
  logic _118__X ;
  logic [13:0] _118__S ;
  logic _119_;
  logic _119__T ;
  logic _119__R ;
  logic _119__C ;
  logic _119__X ;
  logic [13:0] _119__S ;
  logic _120_;
  logic _120__T ;
  logic _120__R ;
  logic _120__C ;
  logic _120__X ;
  logic [13:0] _120__S ;
  logic _121_;
  logic _121__T ;
  logic _121__R ;
  logic _121__C ;
  logic _121__X ;
  logic [13:0] _121__S ;
  logic _122_;
  logic _122__T ;
  logic _122__R ;
  logic _122__C ;
  logic _122__X ;
  logic [13:0] _122__S ;
  logic _123_;
  logic _123__T ;
  logic _123__R ;
  logic _123__C ;
  logic _123__X ;
  logic [13:0] _123__S ;
  logic _124_;
  logic _124__T ;
  logic _124__R ;
  logic _124__C ;
  logic _124__X ;
  logic [13:0] _124__S ;
  logic _125_;
  logic _125__T ;
  logic _125__R ;
  logic _125__C ;
  logic _125__X ;
  logic [13:0] _125__S ;
  logic _126_;
  logic _126__T ;
  logic _126__R ;
  logic _126__C ;
  logic _126__X ;
  logic [13:0] _126__S ;
  logic _127_;
  logic _127__T ;
  logic _127__R ;
  logic _127__C ;
  logic _127__X ;
  logic [13:0] _127__S ;
  logic _128_;
  logic _128__T ;
  logic _128__R ;
  logic _128__C ;
  logic _128__X ;
  logic [13:0] _128__S ;
  logic _129_;
  logic _129__T ;
  logic _129__R ;
  logic _129__C ;
  logic _129__X ;
  logic [13:0] _129__S ;
  logic _130_;
  logic _130__T ;
  logic _130__R ;
  logic _130__C ;
  logic _130__X ;
  logic [13:0] _130__S ;
  logic _131_;
  logic _131__T ;
  logic _131__R ;
  logic _131__C ;
  logic _131__X ;
  logic [13:0] _131__S ;
  logic _132_;
  logic _132__T ;
  logic _132__R ;
  logic _132__C ;
  logic _132__X ;
  logic [13:0] _132__S ;
  logic _133_;
  logic _133__T ;
  logic _133__R ;
  logic _133__C ;
  logic _133__X ;
  logic [13:0] _133__S ;
  logic _134_;
  logic _134__T ;
  logic _134__R ;
  logic _134__C ;
  logic _134__X ;
  logic [13:0] _134__S ;
  logic _135_;
  logic _135__T ;
  logic _135__R ;
  logic _135__C ;
  logic _135__X ;
  logic [13:0] _135__S ;
  logic _136_;
  logic _136__T ;
  logic _136__R ;
  logic _136__C ;
  logic _136__X ;
  logic [13:0] _136__S ;
  logic _137_;
  logic _137__T ;
  logic _137__R ;
  logic _137__C ;
  logic _137__X ;
  logic [13:0] _137__S ;
  logic _138_;
  logic _138__T ;
  logic _138__R ;
  logic _138__C ;
  logic _138__X ;
  logic [13:0] _138__S ;
  logic _139_;
  logic _139__T ;
  logic _139__R ;
  logic _139__C ;
  logic _139__X ;
  logic [13:0] _139__S ;
  logic _140_;
  logic _140__T ;
  logic _140__R ;
  logic _140__C ;
  logic _140__X ;
  logic [13:0] _140__S ;
  logic _141_;
  logic _141__T ;
  logic _141__R ;
  logic _141__C ;
  logic _141__X ;
  logic [13:0] _141__S ;
  logic _142_;
  logic _142__T ;
  logic _142__R ;
  logic _142__C ;
  logic _142__X ;
  logic [13:0] _142__S ;
  logic _143_;
  logic _143__T ;
  logic _143__R ;
  logic _143__C ;
  logic _143__X ;
  logic [13:0] _143__S ;
  logic _144_;
  logic _144__T ;
  logic _144__R ;
  logic _144__C ;
  logic _144__X ;
  logic [13:0] _144__S ;
  logic _145_;
  logic _145__T ;
  logic _145__R ;
  logic _145__C ;
  logic _145__X ;
  logic [13:0] _145__S ;
  logic _146_;
  logic _146__T ;
  logic _146__R ;
  logic _146__C ;
  logic _146__X ;
  logic [13:0] _146__S ;
  logic _147_;
  logic _147__T ;
  logic _147__R ;
  logic _147__C ;
  logic _147__X ;
  logic [13:0] _147__S ;
  logic _148_;
  logic _148__T ;
  logic _148__R ;
  logic _148__C ;
  logic _148__X ;
  logic [13:0] _148__S ;
  logic _149_;
  logic _149__T ;
  logic _149__R ;
  logic _149__C ;
  logic _149__X ;
  logic [13:0] _149__S ;
  logic _150_;
  logic _150__T ;
  logic _150__R ;
  logic _150__C ;
  logic _150__X ;
  logic [13:0] _150__S ;
  logic _151_;
  logic _151__T ;
  logic _151__R ;
  logic _151__C ;
  logic _151__X ;
  logic [13:0] _151__S ;
  logic _152_;
  logic _152__T ;
  logic _152__R ;
  logic _152__C ;
  logic _152__X ;
  logic [13:0] _152__S ;
  logic _153_;
  logic _153__T ;
  logic _153__R ;
  logic _153__C ;
  logic _153__X ;
  logic [13:0] _153__S ;
  logic _154_;
  logic _154__T ;
  logic _154__R ;
  logic _154__C ;
  logic _154__X ;
  logic [13:0] _154__S ;
  logic _155_;
  logic _155__T ;
  logic _155__R ;
  logic _155__C ;
  logic _155__X ;
  logic [13:0] _155__S ;
  logic _156_;
  logic _156__T ;
  logic _156__R ;
  logic _156__C ;
  logic _156__X ;
  logic [13:0] _156__S ;
  logic _157_;
  logic _157__T ;
  logic _157__R ;
  logic _157__C ;
  logic _157__X ;
  logic [13:0] _157__S ;
  logic _158_;
  logic _158__T ;
  logic _158__R ;
  logic _158__C ;
  logic _158__X ;
  logic [13:0] _158__S ;
  logic _159_;
  logic _159__T ;
  logic _159__R ;
  logic _159__C ;
  logic _159__X ;
  logic [13:0] _159__S ;
  logic _160_;
  logic _160__T ;
  logic _160__R ;
  logic _160__C ;
  logic _160__X ;
  logic [13:0] _160__S ;
  logic _161_;
  logic _161__T ;
  logic _161__R ;
  logic _161__C ;
  logic _161__X ;
  logic [13:0] _161__S ;
  logic _162_;
  logic _162__T ;
  logic _162__R ;
  logic _162__C ;
  logic _162__X ;
  logic [13:0] _162__S ;
  logic _163_;
  logic _163__T ;
  logic _163__R ;
  logic _163__C ;
  logic _163__X ;
  logic [13:0] _163__S ;
  logic _164_;
  logic _164__T ;
  logic _164__R ;
  logic _164__C ;
  logic _164__X ;
  logic [13:0] _164__S ;
  logic _165_;
  logic _165__T ;
  logic _165__R ;
  logic _165__C ;
  logic _165__X ;
  logic [13:0] _165__S ;
  logic _166_;
  logic _166__T ;
  logic _166__R ;
  logic _166__C ;
  logic _166__X ;
  logic [13:0] _166__S ;
  logic [7:0] _167_;
  logic [7:0] _167__T ;
  logic [7:0] _167__R ;
  logic [7:0] _167__C ;
  logic [7:0] _167__X ;
  logic [13:0] _167__S ;
  logic _168_;
  logic _168__T ;
  logic _168__R ;
  logic _168__C ;
  logic _168__X ;
  logic [13:0] _168__S ;
  logic _169_;
  logic _169__T ;
  logic _169__R ;
  logic _169__C ;
  logic _169__X ;
  logic [13:0] _169__S ;
  logic _170_;
  logic _170__T ;
  logic _170__R ;
  logic _170__C ;
  logic _170__X ;
  logic [13:0] _170__S ;
  logic _171_;
  logic _171__T ;
  logic _171__R ;
  logic _171__C ;
  logic _171__X ;
  logic [13:0] _171__S ;
  logic _172_;
  logic _172__T ;
  logic _172__R ;
  logic _172__C ;
  logic _172__X ;
  logic [13:0] _172__S ;
  logic _173_;
  logic _173__T ;
  logic _173__R ;
  logic _173__C ;
  logic _173__X ;
  logic [13:0] _173__S ;
  logic _174_;
  logic _174__T ;
  logic _174__R ;
  logic _174__C ;
  logic _174__X ;
  logic [13:0] _174__S ;
  logic _175_;
  logic _175__T ;
  logic _175__R ;
  logic _175__C ;
  logic _175__X ;
  logic [13:0] _175__S ;
  logic _176_;
  logic _176__T ;
  logic _176__R ;
  logic _176__C ;
  logic _176__X ;
  logic [13:0] _176__S ;
  logic _177_;
  logic _177__T ;
  logic _177__R ;
  logic _177__C ;
  logic _177__X ;
  logic [13:0] _177__S ;
  logic _178_;
  logic _178__T ;
  logic _178__R ;
  logic _178__C ;
  logic _178__X ;
  logic [13:0] _178__S ;
  logic _179_;
  logic _179__T ;
  logic _179__R ;
  logic _179__C ;
  logic _179__X ;
  logic [13:0] _179__S ;
  logic _180_;
  logic _180__T ;
  logic _180__R ;
  logic _180__C ;
  logic _180__X ;
  logic [13:0] _180__S ;
  logic _181_;
  logic _181__T ;
  logic _181__R ;
  logic _181__C ;
  logic _181__X ;
  logic [13:0] _181__S ;
  logic _182_;
  logic _182__T ;
  logic _182__R ;
  logic _182__C ;
  logic _182__X ;
  logic [13:0] _182__S ;
  logic _183_;
  logic _183__T ;
  logic _183__R ;
  logic _183__C ;
  logic _183__X ;
  logic [13:0] _183__S ;
  logic _184_;
  logic _184__T ;
  logic _184__R ;
  logic _184__C ;
  logic _184__X ;
  logic [13:0] _184__S ;
  logic _185_;
  logic _185__T ;
  logic _185__R ;
  logic _185__C ;
  logic _185__X ;
  logic [13:0] _185__S ;
  logic _186_;
  logic _186__T ;
  logic _186__R ;
  logic _186__C ;
  logic _186__X ;
  logic [13:0] _186__S ;
  logic _187_;
  logic _187__T ;
  logic _187__R ;
  logic _187__C ;
  logic _187__X ;
  logic [13:0] _187__S ;
  logic _188_;
  logic _188__T ;
  logic _188__R ;
  logic _188__C ;
  logic _188__X ;
  logic [13:0] _188__S ;
  logic _189_;
  logic _189__T ;
  logic _189__R ;
  logic _189__C ;
  logic _189__X ;
  logic [13:0] _189__S ;
  logic _190_;
  logic _190__T ;
  logic _190__R ;
  logic _190__C ;
  logic _190__X ;
  logic [13:0] _190__S ;
  logic _191_;
  logic _191__T ;
  logic _191__R ;
  logic _191__C ;
  logic _191__X ;
  logic [13:0] _191__S ;
  logic _192_;
  logic _192__T ;
  logic _192__R ;
  logic _192__C ;
  logic _192__X ;
  logic [13:0] _192__S ;
  logic _193_;
  logic _193__T ;
  logic _193__R ;
  logic _193__C ;
  logic _193__X ;
  logic [13:0] _193__S ;
  logic _194_;
  logic _194__T ;
  logic _194__R ;
  logic _194__C ;
  logic _194__X ;
  logic [13:0] _194__S ;
  logic _195_;
  logic _195__T ;
  logic _195__R ;
  logic _195__C ;
  logic _195__X ;
  logic [13:0] _195__S ;
  logic _196_;
  logic _196__T ;
  logic _196__R ;
  logic _196__C ;
  logic _196__X ;
  logic [13:0] _196__S ;
  logic _197_;
  logic _197__T ;
  logic _197__R ;
  logic _197__C ;
  logic _197__X ;
  logic [13:0] _197__S ;
  logic _198_;
  logic _198__T ;
  logic _198__R ;
  logic _198__C ;
  logic _198__X ;
  logic [13:0] _198__S ;
  logic _199_;
  logic _199__T ;
  logic _199__R ;
  logic _199__C ;
  logic _199__X ;
  logic [13:0] _199__S ;
  logic _200_;
  logic _200__T ;
  logic _200__R ;
  logic _200__C ;
  logic _200__X ;
  logic [13:0] _200__S ;
  logic _201_;
  logic _201__T ;
  logic _201__R ;
  logic _201__C ;
  logic _201__X ;
  logic [13:0] _201__S ;
  logic _202_;
  logic _202__T ;
  logic _202__R ;
  logic _202__C ;
  logic _202__X ;
  logic [13:0] _202__S ;
  logic _203_;
  logic _203__T ;
  logic _203__R ;
  logic _203__C ;
  logic _203__X ;
  logic [13:0] _203__S ;
  logic _204_;
  logic _204__T ;
  logic _204__R ;
  logic _204__C ;
  logic _204__X ;
  logic [13:0] _204__S ;
  logic _205_;
  logic _205__T ;
  logic _205__R ;
  logic _205__C ;
  logic _205__X ;
  logic [13:0] _205__S ;
  logic _206_;
  logic _206__T ;
  logic _206__R ;
  logic _206__C ;
  logic _206__X ;
  logic [13:0] _206__S ;
  logic _207_;
  logic _207__T ;
  logic _207__R ;
  logic _207__C ;
  logic _207__X ;
  logic [13:0] _207__S ;
  logic FpBitsToFloat_8U_23U_1_and_nl;
  logic FpBitsToFloat_8U_23U_1_and_nl_T ;
  logic FpBitsToFloat_8U_23U_1_and_nl_R ;
  logic FpBitsToFloat_8U_23U_1_and_nl_C ;
  logic FpBitsToFloat_8U_23U_1_and_nl_X ;
  logic [13:0] FpBitsToFloat_8U_23U_1_and_nl_S ;
  logic [22:0] FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2;
  logic [22:0]  FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_T ;
  logic [22:0]  FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_PREV_VAL1 ;
  logic [22:0]  FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_PREV_VAL2 ;
  logic [22:0]  FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_R ;
  logic [22:0]  FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_X ;
  logic [22:0]  FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_C ;
  logic [13:0] FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_S ;
  logic FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_t_flag ;
  logic FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_r_flag ;
  assign FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_S = 602 ;
  logic [7:0] FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2;
  logic [7:0]  FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_T ;
  logic [7:0]  FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_PREV_VAL1 ;
  logic [7:0]  FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_PREV_VAL2 ;
  logic [7:0]  FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_R ;
  logic [7:0]  FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_X ;
  logic [7:0]  FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_C ;
  logic [13:0] FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_S ;
  logic FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_t_flag ;
  logic FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_r_flag ;
  assign FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_S = 603 ;
  logic [22:0] FpMantRNE_48U_24U_else_acc_nl;
  logic [22:0] FpMantRNE_48U_24U_else_acc_nl_T ;
  logic [22:0] FpMantRNE_48U_24U_else_acc_nl_R ;
  logic [22:0] FpMantRNE_48U_24U_else_acc_nl_C ;
  logic [22:0] FpMantRNE_48U_24U_else_acc_nl_X ;
  logic [13:0] FpMantRNE_48U_24U_else_acc_nl_S ;
  logic FpMantRNE_48U_24U_else_and_svs;
  logic FpMantRNE_48U_24U_else_and_svs_T ;
  logic FpMantRNE_48U_24U_else_and_svs_R ;
  logic FpMantRNE_48U_24U_else_and_svs_C ;
  logic FpMantRNE_48U_24U_else_and_svs_X ;
  logic [13:0] FpMantRNE_48U_24U_else_and_svs_S ;
  logic FpMantRNE_48U_24U_else_carry_sva;
  logic FpMantRNE_48U_24U_else_carry_sva_T ;
  logic FpMantRNE_48U_24U_else_carry_sva_R ;
  logic FpMantRNE_48U_24U_else_carry_sva_C ;
  logic FpMantRNE_48U_24U_else_carry_sva_X ;
  logic [13:0] FpMantRNE_48U_24U_else_carry_sva_S ;
  logic FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl;
  logic FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_T ;
  logic FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_R ;
  logic FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_C ;
  logic FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_X ;
  logic [13:0] FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_S ;
  logic FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp;
  logic FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_T ;
  logic FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_R ;
  logic FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_C ;
  logic FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_X ;
  logic [13:0] FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_S ;
  logic [7:0] FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1;
  logic [7:0] FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_T ;
  logic [7:0] FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_R ;
  logic [7:0] FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_C ;
  logic [7:0] FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_X ;
  logic [13:0] FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_S ;
  logic [22:0] FpMul_8U_23U_FpMul_8U_23U_FpMul_8U_23U_nor_1_nl;
  logic [22:0] FpMul_8U_23U_FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_T ;
  logic [22:0] FpMul_8U_23U_FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_R ;
  logic [22:0] FpMul_8U_23U_FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_C ;
  logic [22:0] FpMul_8U_23U_FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X ;
  logic [13:0] FpMul_8U_23U_FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_S ;
  logic [7:0] FpMul_8U_23U_FpMul_8U_23U_and_2_nl;
  logic [7:0] FpMul_8U_23U_FpMul_8U_23U_and_2_nl_T ;
  logic [7:0] FpMul_8U_23U_FpMul_8U_23U_and_2_nl_R ;
  logic [7:0] FpMul_8U_23U_FpMul_8U_23U_and_2_nl_C ;
  logic [7:0] FpMul_8U_23U_FpMul_8U_23U_and_2_nl_X ;
  logic [13:0] FpMul_8U_23U_FpMul_8U_23U_and_2_nl_S ;
  logic FpMul_8U_23U_FpMul_8U_23U_nor_1_nl;
  logic FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_T ;
  logic FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_R ;
  logic FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_C ;
  logic FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X ;
  logic [13:0] FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_S ;
  logic [8:0] FpMul_8U_23U_else_2_acc_1_nl;
  logic [8:0] FpMul_8U_23U_else_2_acc_1_nl_T ;
  logic [8:0] FpMul_8U_23U_else_2_acc_1_nl_R ;
  logic [8:0] FpMul_8U_23U_else_2_acc_1_nl_C ;
  logic [8:0] FpMul_8U_23U_else_2_acc_1_nl_X ;
  logic [13:0] FpMul_8U_23U_else_2_acc_1_nl_S ;
  logic [7:0] FpMul_8U_23U_else_2_else_acc_2_nl;
  logic [7:0] FpMul_8U_23U_else_2_else_acc_2_nl_T ;
  logic [7:0] FpMul_8U_23U_else_2_else_acc_2_nl_R ;
  logic [7:0] FpMul_8U_23U_else_2_else_acc_2_nl_C ;
  logic [7:0] FpMul_8U_23U_else_2_else_acc_2_nl_X ;
  logic [13:0] FpMul_8U_23U_else_2_else_acc_2_nl_S ;
  logic FpMul_8U_23U_else_2_else_if_if_acc_1_itm_7_1;
  logic FpMul_8U_23U_else_2_else_if_if_acc_1_itm_7_1_T ;
  logic FpMul_8U_23U_else_2_else_if_if_acc_1_itm_7_1_R ;
  logic FpMul_8U_23U_else_2_else_if_if_acc_1_itm_7_1_C ;
  logic FpMul_8U_23U_else_2_else_if_if_acc_1_itm_7_1_X ;
  logic [13:0] FpMul_8U_23U_else_2_else_if_if_acc_1_itm_7_1_S ;
  logic [7:0] FpMul_8U_23U_else_2_else_if_if_acc_1_nl;
  logic [7:0] FpMul_8U_23U_else_2_else_if_if_acc_1_nl_T ;
  logic [7:0] FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R ;
  logic [7:0] FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C ;
  logic [7:0] FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X ;
  logic [13:0] FpMul_8U_23U_else_2_else_if_if_acc_1_nl_S ;
  logic [7:0] FpMul_8U_23U_else_2_else_if_if_acc_nl;
  logic [7:0] FpMul_8U_23U_else_2_else_if_if_acc_nl_T ;
  logic [7:0] FpMul_8U_23U_else_2_else_if_if_acc_nl_R ;
  logic [7:0] FpMul_8U_23U_else_2_else_if_if_acc_nl_C ;
  logic [7:0] FpMul_8U_23U_else_2_else_if_if_acc_nl_X ;
  logic [13:0] FpMul_8U_23U_else_2_else_if_if_acc_nl_S ;
  logic FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2;
  logic  FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_T ;
  logic  FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_PREV_VAL1 ;
  logic  FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_PREV_VAL2 ;
  logic  FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_R ;
  logic  FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_X ;
  logic  FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_C ;
  logic [13:0] FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_S ;
  logic FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_t_flag ;
  logic FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_r_flag ;
  assign FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_S = 604 ;
  logic FpMul_8U_23U_else_2_if_acc_itm_8_1;
  logic FpMul_8U_23U_else_2_if_acc_itm_8_1_T ;
  logic FpMul_8U_23U_else_2_if_acc_itm_8_1_R ;
  logic FpMul_8U_23U_else_2_if_acc_itm_8_1_C ;
  logic FpMul_8U_23U_else_2_if_acc_itm_8_1_X ;
  logic [13:0] FpMul_8U_23U_else_2_if_acc_itm_8_1_S ;
  logic [8:0] FpMul_8U_23U_else_2_if_acc_nl;
  logic [8:0] FpMul_8U_23U_else_2_if_acc_nl_T ;
  logic [8:0] FpMul_8U_23U_else_2_if_acc_nl_R ;
  logic [8:0] FpMul_8U_23U_else_2_if_acc_nl_C ;
  logic [8:0] FpMul_8U_23U_else_2_if_acc_nl_X ;
  logic [13:0] FpMul_8U_23U_else_2_if_acc_nl_S ;
  logic [7:0] FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2;
  logic [7:0]  FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_T ;
  logic [7:0]  FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_PREV_VAL1 ;
  logic [7:0]  FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_PREV_VAL2 ;
  logic [7:0]  FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_R ;
  logic [7:0]  FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_X ;
  logic [7:0]  FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_C ;
  logic [13:0] FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_S ;
  logic FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_t_flag ;
  logic FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_r_flag ;
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_S = 605 ;
  logic FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs;
  logic  FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_T ;
  logic  FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_PREV_VAL1 ;
  logic  FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_PREV_VAL2 ;
  logic  FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_R ;
  logic  FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_X ;
  logic  FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_C ;
  logic [13:0] FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_S ;
  logic FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_t_flag ;
  logic FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_r_flag ;
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_S = 606 ;
  logic FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2;
  logic  FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_T ;
  logic  FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_PREV_VAL1 ;
  logic  FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_PREV_VAL2 ;
  logic  FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_R ;
  logic  FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_X ;
  logic  FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_C ;
  logic [13:0] FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_S ;
  logic FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_t_flag ;
  logic FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_r_flag ;
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_S = 607 ;
  logic FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2;
  logic  FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_T ;
  logic  FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_PREV_VAL1 ;
  logic  FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_PREV_VAL2 ;
  logic  FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_R ;
  logic  FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_X ;
  logic  FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_C ;
  logic [13:0] FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_S ;
  logic FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_t_flag ;
  logic FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_r_flag ;
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_S = 608 ;
  logic FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp;
  logic FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_T ;
  logic FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_R ;
  logic FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_C ;
  logic FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_X ;
  logic [13:0] FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_S ;
  logic FpMul_8U_23U_is_inf_lpi_1_dfm_2;
  logic FpMul_8U_23U_is_inf_lpi_1_dfm_2_T ;
  logic FpMul_8U_23U_is_inf_lpi_1_dfm_2_R ;
  logic FpMul_8U_23U_is_inf_lpi_1_dfm_2_C ;
  logic FpMul_8U_23U_is_inf_lpi_1_dfm_2_X ;
  logic [13:0] FpMul_8U_23U_is_inf_lpi_1_dfm_2_S ;
  logic FpMul_8U_23U_lor_1_lpi_1_dfm_3;
  logic  FpMul_8U_23U_lor_1_lpi_1_dfm_3_T ;
  logic  FpMul_8U_23U_lor_1_lpi_1_dfm_3_PREV_VAL1 ;
  logic  FpMul_8U_23U_lor_1_lpi_1_dfm_3_PREV_VAL2 ;
  logic  FpMul_8U_23U_lor_1_lpi_1_dfm_3_R ;
  logic  FpMul_8U_23U_lor_1_lpi_1_dfm_3_X ;
  logic  FpMul_8U_23U_lor_1_lpi_1_dfm_3_C ;
  logic [13:0] FpMul_8U_23U_lor_1_lpi_1_dfm_3_S ;
  logic FpMul_8U_23U_lor_1_lpi_1_dfm_3_t_flag ;
  logic FpMul_8U_23U_lor_1_lpi_1_dfm_3_r_flag ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_3_S = 609 ;
  logic FpMul_8U_23U_lor_1_lpi_1_dfm_4;
  logic  FpMul_8U_23U_lor_1_lpi_1_dfm_4_T ;
  logic  FpMul_8U_23U_lor_1_lpi_1_dfm_4_PREV_VAL1 ;
  logic  FpMul_8U_23U_lor_1_lpi_1_dfm_4_PREV_VAL2 ;
  logic  FpMul_8U_23U_lor_1_lpi_1_dfm_4_R ;
  logic  FpMul_8U_23U_lor_1_lpi_1_dfm_4_X ;
  logic  FpMul_8U_23U_lor_1_lpi_1_dfm_4_C ;
  logic [13:0] FpMul_8U_23U_lor_1_lpi_1_dfm_4_S ;
  logic FpMul_8U_23U_lor_1_lpi_1_dfm_4_t_flag ;
  logic FpMul_8U_23U_lor_1_lpi_1_dfm_4_r_flag ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_4_S = 610 ;
  logic FpMul_8U_23U_lor_1_lpi_1_dfm_st_3;
  logic  FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_T ;
  logic  FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_PREV_VAL1 ;
  logic  FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_PREV_VAL2 ;
  logic  FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_R ;
  logic  FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_X ;
  logic  FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_C ;
  logic [13:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_S ;
  logic FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_t_flag ;
  logic FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_r_flag ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_S = 611 ;
  logic FpMul_8U_23U_lor_1_lpi_1_dfm_st_4;
  logic  FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_T ;
  logic  FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_PREV_VAL1 ;
  logic  FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_PREV_VAL2 ;
  logic  FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_R ;
  logic  FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_X ;
  logic  FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_C ;
  logic [13:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_S ;
  logic FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_t_flag ;
  logic FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_r_flag ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_S = 612 ;
  logic FpMul_8U_23U_lor_2_lpi_1_dfm;
  logic FpMul_8U_23U_lor_2_lpi_1_dfm_T ;
  logic FpMul_8U_23U_lor_2_lpi_1_dfm_R ;
  logic FpMul_8U_23U_lor_2_lpi_1_dfm_C ;
  logic FpMul_8U_23U_lor_2_lpi_1_dfm_X ;
  logic [13:0] FpMul_8U_23U_lor_2_lpi_1_dfm_S ;
  logic FpMul_8U_23U_mux_10_itm_3;
  logic  FpMul_8U_23U_mux_10_itm_3_T ;
  logic  FpMul_8U_23U_mux_10_itm_3_PREV_VAL1 ;
  logic  FpMul_8U_23U_mux_10_itm_3_PREV_VAL2 ;
  logic  FpMul_8U_23U_mux_10_itm_3_R ;
  logic  FpMul_8U_23U_mux_10_itm_3_X ;
  logic  FpMul_8U_23U_mux_10_itm_3_C ;
  logic [13:0] FpMul_8U_23U_mux_10_itm_3_S ;
  logic FpMul_8U_23U_mux_10_itm_3_t_flag ;
  logic FpMul_8U_23U_mux_10_itm_3_r_flag ;
  assign FpMul_8U_23U_mux_10_itm_3_S = 613 ;
  logic FpMul_8U_23U_mux_10_itm_4;
  logic  FpMul_8U_23U_mux_10_itm_4_T ;
  logic  FpMul_8U_23U_mux_10_itm_4_PREV_VAL1 ;
  logic  FpMul_8U_23U_mux_10_itm_4_PREV_VAL2 ;
  logic  FpMul_8U_23U_mux_10_itm_4_R ;
  logic  FpMul_8U_23U_mux_10_itm_4_X ;
  logic  FpMul_8U_23U_mux_10_itm_4_C ;
  logic [13:0] FpMul_8U_23U_mux_10_itm_4_S ;
  logic FpMul_8U_23U_mux_10_itm_4_t_flag ;
  logic FpMul_8U_23U_mux_10_itm_4_r_flag ;
  assign FpMul_8U_23U_mux_10_itm_4_S = 614 ;
  logic [22:0] FpMul_8U_23U_nor_nl;
  logic [22:0] FpMul_8U_23U_nor_nl_T ;
  logic [22:0] FpMul_8U_23U_nor_nl_R ;
  logic [22:0] FpMul_8U_23U_nor_nl_C ;
  logic [22:0] FpMul_8U_23U_nor_nl_X ;
  logic [13:0] FpMul_8U_23U_nor_nl_S ;
  logic [7:0] FpMul_8U_23U_o_expo_lpi_1_dfm;
  logic [7:0] FpMul_8U_23U_o_expo_lpi_1_dfm_T ;
  logic [7:0] FpMul_8U_23U_o_expo_lpi_1_dfm_R ;
  logic [7:0] FpMul_8U_23U_o_expo_lpi_1_dfm_C ;
  logic [7:0] FpMul_8U_23U_o_expo_lpi_1_dfm_X ;
  logic [13:0] FpMul_8U_23U_o_expo_lpi_1_dfm_S ;
  logic [8:0] FpMul_8U_23U_oelse_1_acc_1_nl;
  logic [8:0] FpMul_8U_23U_oelse_1_acc_1_nl_T ;
  logic [8:0] FpMul_8U_23U_oelse_1_acc_1_nl_R ;
  logic [8:0] FpMul_8U_23U_oelse_1_acc_1_nl_C ;
  logic [8:0] FpMul_8U_23U_oelse_1_acc_1_nl_X ;
  logic [13:0] FpMul_8U_23U_oelse_1_acc_1_nl_S ;
  logic FpMul_8U_23U_oelse_1_acc_itm_9_1;
  logic FpMul_8U_23U_oelse_1_acc_itm_9_1_T ;
  logic FpMul_8U_23U_oelse_1_acc_itm_9_1_R ;
  logic FpMul_8U_23U_oelse_1_acc_itm_9_1_C ;
  logic FpMul_8U_23U_oelse_1_acc_itm_9_1_X ;
  logic [13:0] FpMul_8U_23U_oelse_1_acc_itm_9_1_S ;
  logic [9:0] FpMul_8U_23U_oelse_1_acc_nl;
  logic [9:0] FpMul_8U_23U_oelse_1_acc_nl_T ;
  logic [9:0] FpMul_8U_23U_oelse_1_acc_nl_R ;
  logic [9:0] FpMul_8U_23U_oelse_1_acc_nl_C ;
  logic [9:0] FpMul_8U_23U_oelse_1_acc_nl_X ;
  logic [13:0] FpMul_8U_23U_oelse_1_acc_nl_S ;
  logic FpMul_8U_23U_or_1_nl;
  logic FpMul_8U_23U_or_1_nl_T ;
  logic FpMul_8U_23U_or_1_nl_R ;
  logic FpMul_8U_23U_or_1_nl_C ;
  logic FpMul_8U_23U_or_1_nl_X ;
  logic [13:0] FpMul_8U_23U_or_1_nl_S ;
  logic FpMul_8U_23U_or_2_cse;
  logic FpMul_8U_23U_or_2_cse_T ;
  logic FpMul_8U_23U_or_2_cse_R ;
  logic FpMul_8U_23U_or_2_cse_C ;
  logic FpMul_8U_23U_or_2_cse_X ;
  logic [13:0] FpMul_8U_23U_or_2_cse_S ;
  logic [7:0] FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0;
  logic [7:0] FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_T ;
  logic [7:0] FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_R ;
  logic [7:0] FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_C ;
  logic [7:0] FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_X ;
  logic [13:0] FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_S ;
  logic [7:0] FpMul_8U_23U_p_expo_sva_5;
  logic [7:0]  FpMul_8U_23U_p_expo_sva_5_T ;
  logic [7:0]  FpMul_8U_23U_p_expo_sva_5_PREV_VAL1 ;
  logic [7:0]  FpMul_8U_23U_p_expo_sva_5_PREV_VAL2 ;
  logic [7:0]  FpMul_8U_23U_p_expo_sva_5_R ;
  logic [7:0]  FpMul_8U_23U_p_expo_sva_5_X ;
  logic [7:0]  FpMul_8U_23U_p_expo_sva_5_C ;
  logic [13:0] FpMul_8U_23U_p_expo_sva_5_S ;
  logic FpMul_8U_23U_p_expo_sva_5_t_flag ;
  logic FpMul_8U_23U_p_expo_sva_5_r_flag ;
  assign FpMul_8U_23U_p_expo_sva_5_S = 615 ;
  logic [45:0] FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0;
  logic [45:0] FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T ;
  logic [45:0] FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R ;
  logic [45:0] FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C ;
  logic [45:0] FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X ;
  logic [13:0] FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_S ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_mul_tmp;
  logic [47:0] FpMul_8U_23U_p_mant_p1_mul_tmp_T ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_mul_tmp_R ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_mul_tmp_C ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_mul_tmp_X ;
  logic [13:0] FpMul_8U_23U_p_mant_p1_mul_tmp_S ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_sva;
  logic [47:0]  FpMul_8U_23U_p_mant_p1_sva_T ;
  logic [47:0]  FpMul_8U_23U_p_mant_p1_sva_PREV_VAL1 ;
  logic [47:0]  FpMul_8U_23U_p_mant_p1_sva_PREV_VAL2 ;
  logic [47:0]  FpMul_8U_23U_p_mant_p1_sva_R ;
  logic [47:0]  FpMul_8U_23U_p_mant_p1_sva_X ;
  logic [47:0]  FpMul_8U_23U_p_mant_p1_sva_C ;
  logic [13:0] FpMul_8U_23U_p_mant_p1_sva_S ;
  logic FpMul_8U_23U_p_mant_p1_sva_t_flag ;
  logic FpMul_8U_23U_p_mant_p1_sva_r_flag ;
  assign FpMul_8U_23U_p_mant_p1_sva_S = 616 ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_sva_2;
  logic [47:0]  FpMul_8U_23U_p_mant_p1_sva_2_T ;
  logic [47:0]  FpMul_8U_23U_p_mant_p1_sva_2_PREV_VAL1 ;
  logic [47:0]  FpMul_8U_23U_p_mant_p1_sva_2_PREV_VAL2 ;
  logic [47:0]  FpMul_8U_23U_p_mant_p1_sva_2_R ;
  logic [47:0]  FpMul_8U_23U_p_mant_p1_sva_2_X ;
  logic [47:0]  FpMul_8U_23U_p_mant_p1_sva_2_C ;
  logic [13:0] FpMul_8U_23U_p_mant_p1_sva_2_S ;
  logic FpMul_8U_23U_p_mant_p1_sva_2_t_flag ;
  logic FpMul_8U_23U_p_mant_p1_sva_2_r_flag ;
  assign FpMul_8U_23U_p_mant_p1_sva_2_S = 617 ;
  logic [30:0] FpMul_8U_23U_ua_sva_1_30_0_1;
  logic [30:0]  FpMul_8U_23U_ua_sva_1_30_0_1_T ;
  logic [30:0]  FpMul_8U_23U_ua_sva_1_30_0_1_PREV_VAL1 ;
  logic [30:0]  FpMul_8U_23U_ua_sva_1_30_0_1_PREV_VAL2 ;
  logic [30:0]  FpMul_8U_23U_ua_sva_1_30_0_1_R ;
  logic [30:0]  FpMul_8U_23U_ua_sva_1_30_0_1_X ;
  logic [30:0]  FpMul_8U_23U_ua_sva_1_30_0_1_C ;
  logic [13:0] FpMul_8U_23U_ua_sva_1_30_0_1_S ;
  logic FpMul_8U_23U_ua_sva_1_30_0_1_t_flag ;
  logic FpMul_8U_23U_ua_sva_1_30_0_1_r_flag ;
  assign FpMul_8U_23U_ua_sva_1_30_0_1_S = 618 ;
  logic FpMul_8U_23U_ub_FpBitsToFloat_8U_23U_1_or_1_cse;
  logic FpMul_8U_23U_ub_FpBitsToFloat_8U_23U_1_or_1_cse_T ;
  logic FpMul_8U_23U_ub_FpBitsToFloat_8U_23U_1_or_1_cse_R ;
  logic FpMul_8U_23U_ub_FpBitsToFloat_8U_23U_1_or_1_cse_C ;
  logic FpMul_8U_23U_ub_FpBitsToFloat_8U_23U_1_or_1_cse_X ;
  logic [13:0] FpMul_8U_23U_ub_FpBitsToFloat_8U_23U_1_or_1_cse_S ;
  logic [30:0] FpMul_8U_23U_ub_sva_1_30_0_1;
  logic [30:0]  FpMul_8U_23U_ub_sva_1_30_0_1_T ;
  logic [30:0]  FpMul_8U_23U_ub_sva_1_30_0_1_PREV_VAL1 ;
  logic [30:0]  FpMul_8U_23U_ub_sva_1_30_0_1_PREV_VAL2 ;
  logic [30:0]  FpMul_8U_23U_ub_sva_1_30_0_1_R ;
  logic [30:0]  FpMul_8U_23U_ub_sva_1_30_0_1_X ;
  logic [30:0]  FpMul_8U_23U_ub_sva_1_30_0_1_C ;
  logic [13:0] FpMul_8U_23U_ub_sva_1_30_0_1_S ;
  logic FpMul_8U_23U_ub_sva_1_30_0_1_t_flag ;
  logic FpMul_8U_23U_ub_sva_1_30_0_1_r_flag ;
  assign FpMul_8U_23U_ub_sva_1_30_0_1_S = 619 ;
  logic FpMul_8U_23U_xor_1_nl;
  logic FpMul_8U_23U_xor_1_nl_T ;
  logic FpMul_8U_23U_xor_1_nl_R ;
  logic FpMul_8U_23U_xor_1_nl_C ;
  logic FpMul_8U_23U_xor_1_nl_X ;
  logic [13:0] FpMul_8U_23U_xor_1_nl_S ;
  logic IsNaN_8U_23U_1_aelse_and_cse;
  logic IsNaN_8U_23U_1_aelse_and_cse_T ;
  logic IsNaN_8U_23U_1_aelse_and_cse_R ;
  logic IsNaN_8U_23U_1_aelse_and_cse_C ;
  logic IsNaN_8U_23U_1_aelse_and_cse_X ;
  logic [13:0] IsNaN_8U_23U_1_aelse_and_cse_S ;
  logic IsNaN_8U_23U_1_land_lpi_1_dfm_3;
  logic  IsNaN_8U_23U_1_land_lpi_1_dfm_3_T ;
  logic  IsNaN_8U_23U_1_land_lpi_1_dfm_3_PREV_VAL1 ;
  logic  IsNaN_8U_23U_1_land_lpi_1_dfm_3_PREV_VAL2 ;
  logic  IsNaN_8U_23U_1_land_lpi_1_dfm_3_R ;
  logic  IsNaN_8U_23U_1_land_lpi_1_dfm_3_X ;
  logic  IsNaN_8U_23U_1_land_lpi_1_dfm_3_C ;
  logic [13:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_S ;
  logic IsNaN_8U_23U_1_land_lpi_1_dfm_3_t_flag ;
  logic IsNaN_8U_23U_1_land_lpi_1_dfm_3_r_flag ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_S = 620 ;
  logic IsNaN_8U_23U_1_land_lpi_1_dfm_4;
  logic  IsNaN_8U_23U_1_land_lpi_1_dfm_4_T ;
  logic  IsNaN_8U_23U_1_land_lpi_1_dfm_4_PREV_VAL1 ;
  logic  IsNaN_8U_23U_1_land_lpi_1_dfm_4_PREV_VAL2 ;
  logic  IsNaN_8U_23U_1_land_lpi_1_dfm_4_R ;
  logic  IsNaN_8U_23U_1_land_lpi_1_dfm_4_X ;
  logic  IsNaN_8U_23U_1_land_lpi_1_dfm_4_C ;
  logic [13:0] IsNaN_8U_23U_1_land_lpi_1_dfm_4_S ;
  logic IsNaN_8U_23U_1_land_lpi_1_dfm_4_t_flag ;
  logic IsNaN_8U_23U_1_land_lpi_1_dfm_4_r_flag ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_4_S = 621 ;
  logic IsNaN_8U_23U_1_nor_tmp;
  logic IsNaN_8U_23U_1_nor_tmp_T ;
  logic IsNaN_8U_23U_1_nor_tmp_R ;
  logic IsNaN_8U_23U_1_nor_tmp_C ;
  logic IsNaN_8U_23U_1_nor_tmp_X ;
  logic [13:0] IsNaN_8U_23U_1_nor_tmp_S ;
  logic IsNaN_8U_23U_aelse_and_cse;
  logic IsNaN_8U_23U_aelse_and_cse_T ;
  logic IsNaN_8U_23U_aelse_and_cse_R ;
  logic IsNaN_8U_23U_aelse_and_cse_C ;
  logic IsNaN_8U_23U_aelse_and_cse_X ;
  logic [13:0] IsNaN_8U_23U_aelse_and_cse_S ;
  logic IsNaN_8U_23U_land_lpi_1_dfm_4;
  logic  IsNaN_8U_23U_land_lpi_1_dfm_4_T ;
  logic  IsNaN_8U_23U_land_lpi_1_dfm_4_PREV_VAL1 ;
  logic  IsNaN_8U_23U_land_lpi_1_dfm_4_PREV_VAL2 ;
  logic  IsNaN_8U_23U_land_lpi_1_dfm_4_R ;
  logic  IsNaN_8U_23U_land_lpi_1_dfm_4_X ;
  logic  IsNaN_8U_23U_land_lpi_1_dfm_4_C ;
  logic [13:0] IsNaN_8U_23U_land_lpi_1_dfm_4_S ;
  logic IsNaN_8U_23U_land_lpi_1_dfm_4_t_flag ;
  logic IsNaN_8U_23U_land_lpi_1_dfm_4_r_flag ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_4_S = 622 ;
  logic IsNaN_8U_23U_land_lpi_1_dfm_st_3;
  logic  IsNaN_8U_23U_land_lpi_1_dfm_st_3_T ;
  logic  IsNaN_8U_23U_land_lpi_1_dfm_st_3_PREV_VAL1 ;
  logic  IsNaN_8U_23U_land_lpi_1_dfm_st_3_PREV_VAL2 ;
  logic  IsNaN_8U_23U_land_lpi_1_dfm_st_3_R ;
  logic  IsNaN_8U_23U_land_lpi_1_dfm_st_3_X ;
  logic  IsNaN_8U_23U_land_lpi_1_dfm_st_3_C ;
  logic [13:0] IsNaN_8U_23U_land_lpi_1_dfm_st_3_S ;
  logic IsNaN_8U_23U_land_lpi_1_dfm_st_3_t_flag ;
  logic IsNaN_8U_23U_land_lpi_1_dfm_st_3_r_flag ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_S = 623 ;
  logic IsNaN_8U_23U_nor_tmp;
  logic IsNaN_8U_23U_nor_tmp_T ;
  logic IsNaN_8U_23U_nor_tmp_R ;
  logic IsNaN_8U_23U_nor_tmp_C ;
  logic IsNaN_8U_23U_nor_tmp_X ;
  logic [13:0] IsNaN_8U_23U_nor_tmp_S ;
  logic and_10_nl;
  logic and_10_nl_T ;
  logic and_10_nl_R ;
  logic and_10_nl_C ;
  logic and_10_nl_X ;
  logic [13:0] and_10_nl_S ;
  logic and_11_nl;
  logic and_11_nl_T ;
  logic and_11_nl_R ;
  logic and_11_nl_C ;
  logic and_11_nl_X ;
  logic [13:0] and_11_nl_S ;
  logic and_41_rgt;
  logic and_41_rgt_T ;
  logic and_41_rgt_R ;
  logic and_41_rgt_C ;
  logic and_41_rgt_X ;
  logic [13:0] and_41_rgt_S ;
  logic and_45_rgt;
  logic and_45_rgt_T ;
  logic and_45_rgt_R ;
  logic and_45_rgt_C ;
  logic and_45_rgt_X ;
  logic [13:0] and_45_rgt_S ;
  logic and_54_rgt;
  logic and_54_rgt_T ;
  logic and_54_rgt_R ;
  logic and_54_rgt_C ;
  logic and_54_rgt_X ;
  logic [13:0] and_54_rgt_S ;
  logic and_64_rgt;
  logic and_64_rgt_T ;
  logic and_64_rgt_R ;
  logic and_64_rgt_C ;
  logic and_64_rgt_X ;
  logic [13:0] and_64_rgt_S ;
  logic and_65_rgt;
  logic and_65_rgt_T ;
  logic and_65_rgt_R ;
  logic and_65_rgt_C ;
  logic and_65_rgt_X ;
  logic [13:0] and_65_rgt_S ;
  logic and_90_nl;
  logic and_90_nl_T ;
  logic and_90_nl_R ;
  logic and_90_nl_C ;
  logic and_90_nl_X ;
  logic [13:0] and_90_nl_S ;
  logic and_91_nl;
  logic and_91_nl_T ;
  logic and_91_nl_R ;
  logic and_91_nl_C ;
  logic and_91_nl_X ;
  logic [13:0] and_91_nl_S ;
  logic and_93_nl;
  logic and_93_nl_T ;
  logic and_93_nl_R ;
  logic and_93_nl_C ;
  logic and_93_nl_X ;
  logic [13:0] and_93_nl_S ;
  logic and_95_nl;
  logic and_95_nl_T ;
  logic and_95_nl_R ;
  logic and_95_nl_C ;
  logic and_95_nl_X ;
  logic [13:0] and_95_nl_S ;
  logic and_cse;
  logic and_cse_T ;
  logic and_cse_R ;
  logic and_cse_C ;
  logic and_cse_X ;
  logic [13:0] and_cse_S ;
  logic and_dcpl_12;
  logic and_dcpl_12_T ;
  logic and_dcpl_12_R ;
  logic and_dcpl_12_C ;
  logic and_dcpl_12_X ;
  logic [13:0] and_dcpl_12_S ;
  logic and_dcpl_13;
  logic and_dcpl_13_T ;
  logic and_dcpl_13_R ;
  logic and_dcpl_13_C ;
  logic and_dcpl_13_X ;
  logic [13:0] and_dcpl_13_S ;
  logic and_dcpl_16;
  logic and_dcpl_16_T ;
  logic and_dcpl_16_R ;
  logic and_dcpl_16_C ;
  logic and_dcpl_16_X ;
  logic [13:0] and_dcpl_16_S ;
  logic and_dcpl_26;
  logic and_dcpl_26_T ;
  logic and_dcpl_26_R ;
  logic and_dcpl_26_C ;
  logic and_dcpl_26_X ;
  logic [13:0] and_dcpl_26_S ;
  logic and_dcpl_3;
  logic and_dcpl_3_T ;
  logic and_dcpl_3_R ;
  logic and_dcpl_3_C ;
  logic and_dcpl_3_X ;
  logic [13:0] and_dcpl_3_S ;
  logic and_dcpl_6;
  logic and_dcpl_6_T ;
  logic and_dcpl_6_R ;
  logic and_dcpl_6_C ;
  logic and_dcpl_6_X ;
  logic [13:0] and_dcpl_6_S ;
  logic asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl;
  logic asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl_T ;
  logic asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl_R ;
  logic asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl_C ;
  logic asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl_X ;
  logic [13:0] asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl_S ;
  output chn_a_rsc_lz;
  logic chn_a_rsc_lz ;
  output chn_a_rsc_lz_T ;
  logic chn_a_rsc_lz_T ;
  logic chn_a_rsc_lz_R ;
  logic chn_a_rsc_lz_C ;
  logic chn_a_rsc_lz_X ;
  logic [13:0] chn_a_rsc_lz_S ;
  input chn_a_rsc_lz_R0 ;
  input chn_a_rsc_lz_C0 ;
  input chn_a_rsc_lz_X0 ;
  output [13:0] chn_a_rsc_lz_S ;
  input chn_a_rsc_vz;
  input chn_a_rsc_vz_T ;
  input [13:0] chn_a_rsc_vz_S ;
  output chn_a_rsc_vz_R ;
  output chn_a_rsc_vz_X ;
  output chn_a_rsc_vz_C ;
  input [31:0] chn_a_rsc_z;
  input [31:0] chn_a_rsc_z_T ;
  input [13:0] chn_a_rsc_z_S ;
  output [31:0] chn_a_rsc_z_R ;
  output [31:0] chn_a_rsc_z_X ;
  output [31:0] chn_a_rsc_z_C ;
  logic chn_a_rsci_bawt;
  logic chn_a_rsci_bawt_T ;
  logic chn_a_rsci_bawt_R ;
  logic chn_a_rsci_bawt_C ;
  logic chn_a_rsci_bawt_X ;
  logic [13:0] chn_a_rsci_bawt_S ;
  logic [31:0] chn_a_rsci_d_mxwt;
  logic [31:0] chn_a_rsci_d_mxwt_T ;
  logic [31:0] chn_a_rsci_d_mxwt_R ;
  logic [31:0] chn_a_rsci_d_mxwt_C ;
  logic [31:0] chn_a_rsci_d_mxwt_X ;
  logic [13:0] chn_a_rsci_d_mxwt_S ;
  input chn_a_rsci_oswt;
  input chn_a_rsci_oswt_T ;
  input [13:0] chn_a_rsci_oswt_S ;
  output chn_a_rsci_oswt_R ;
  output chn_a_rsci_oswt_X ;
  output chn_a_rsci_oswt_C ;
  output chn_a_rsci_oswt_unreg_pff;
  logic chn_a_rsci_oswt_unreg_pff ;
  output chn_a_rsci_oswt_unreg_pff_T ;
  logic chn_a_rsci_oswt_unreg_pff_T ;
  logic chn_a_rsci_oswt_unreg_pff_R ;
  logic chn_a_rsci_oswt_unreg_pff_C ;
  logic chn_a_rsci_oswt_unreg_pff_X ;
  logic [13:0] chn_a_rsci_oswt_unreg_pff_S ;
  input chn_a_rsci_oswt_unreg_pff_R0 ;
  input chn_a_rsci_oswt_unreg_pff_C0 ;
  input chn_a_rsci_oswt_unreg_pff_X0 ;
  output [13:0] chn_a_rsci_oswt_unreg_pff_S ;
  logic chn_a_rsci_wen_comp;
  logic chn_a_rsci_wen_comp_T ;
  logic chn_a_rsci_wen_comp_R ;
  logic chn_a_rsci_wen_comp_C ;
  logic chn_a_rsci_wen_comp_X ;
  logic [13:0] chn_a_rsci_wen_comp_S ;
  output chn_b_rsc_lz;
  logic chn_b_rsc_lz ;
  output chn_b_rsc_lz_T ;
  logic chn_b_rsc_lz_T ;
  logic chn_b_rsc_lz_R ;
  logic chn_b_rsc_lz_C ;
  logic chn_b_rsc_lz_X ;
  logic [13:0] chn_b_rsc_lz_S ;
  input chn_b_rsc_lz_R0 ;
  input chn_b_rsc_lz_C0 ;
  input chn_b_rsc_lz_X0 ;
  output [13:0] chn_b_rsc_lz_S ;
  input chn_b_rsc_vz;
  input chn_b_rsc_vz_T ;
  input [13:0] chn_b_rsc_vz_S ;
  output chn_b_rsc_vz_R ;
  output chn_b_rsc_vz_X ;
  output chn_b_rsc_vz_C ;
  input [31:0] chn_b_rsc_z;
  input [31:0] chn_b_rsc_z_T ;
  input [13:0] chn_b_rsc_z_S ;
  output [31:0] chn_b_rsc_z_R ;
  output [31:0] chn_b_rsc_z_X ;
  output [31:0] chn_b_rsc_z_C ;
  logic chn_b_rsci_bawt;
  logic chn_b_rsci_bawt_T ;
  logic chn_b_rsci_bawt_R ;
  logic chn_b_rsci_bawt_C ;
  logic chn_b_rsci_bawt_X ;
  logic [13:0] chn_b_rsci_bawt_S ;
  logic [31:0] chn_b_rsci_d_mxwt;
  logic [31:0] chn_b_rsci_d_mxwt_T ;
  logic [31:0] chn_b_rsci_d_mxwt_R ;
  logic [31:0] chn_b_rsci_d_mxwt_C ;
  logic [31:0] chn_b_rsci_d_mxwt_X ;
  logic [13:0] chn_b_rsci_d_mxwt_S ;
  input chn_b_rsci_oswt;
  input chn_b_rsci_oswt_T ;
  input [13:0] chn_b_rsci_oswt_S ;
  output chn_b_rsci_oswt_R ;
  output chn_b_rsci_oswt_X ;
  output chn_b_rsci_oswt_C ;
  logic chn_b_rsci_wen_comp;
  logic chn_b_rsci_wen_comp_T ;
  logic chn_b_rsci_wen_comp_R ;
  logic chn_b_rsci_wen_comp_C ;
  logic chn_b_rsci_wen_comp_X ;
  logic [13:0] chn_b_rsci_wen_comp_S ;
  logic chn_o_and_cse;
  logic chn_o_and_cse_T ;
  logic chn_o_and_cse_R ;
  logic chn_o_and_cse_C ;
  logic chn_o_and_cse_X ;
  logic [13:0] chn_o_and_cse_S ;
  output chn_o_rsc_lz;
  logic chn_o_rsc_lz ;
  output chn_o_rsc_lz_T ;
  logic chn_o_rsc_lz_T ;
  logic chn_o_rsc_lz_R ;
  logic chn_o_rsc_lz_C ;
  logic chn_o_rsc_lz_X ;
  logic [13:0] chn_o_rsc_lz_S ;
  input chn_o_rsc_lz_R0 ;
  input chn_o_rsc_lz_C0 ;
  input chn_o_rsc_lz_X0 ;
  output [13:0] chn_o_rsc_lz_S ;
  input chn_o_rsc_vz;
  input chn_o_rsc_vz_T ;
  input [13:0] chn_o_rsc_vz_S ;
  output chn_o_rsc_vz_R ;
  output chn_o_rsc_vz_X ;
  output chn_o_rsc_vz_C ;
  output [31:0] chn_o_rsc_z;
  logic [31:0] chn_o_rsc_z ;
  output [31:0] chn_o_rsc_z_T ;
  logic [31:0] chn_o_rsc_z_T ;
  logic [31:0] chn_o_rsc_z_R ;
  logic [31:0] chn_o_rsc_z_C ;
  logic [31:0] chn_o_rsc_z_X ;
  logic [13:0] chn_o_rsc_z_S ;
  input [31:0] chn_o_rsc_z_R0 ;
  input [31:0] chn_o_rsc_z_C0 ;
  input [31:0] chn_o_rsc_z_X0 ;
  output [13:0] chn_o_rsc_z_S ;
  logic chn_o_rsci_bawt;
  logic chn_o_rsci_bawt_T ;
  logic chn_o_rsci_bawt_R ;
  logic chn_o_rsci_bawt_C ;
  logic chn_o_rsci_bawt_X ;
  logic [13:0] chn_o_rsci_bawt_S ;
  logic [22:0] chn_o_rsci_d_22_0;
  logic [22:0]  chn_o_rsci_d_22_0_T ;
  logic [22:0]  chn_o_rsci_d_22_0_PREV_VAL1 ;
  logic [22:0]  chn_o_rsci_d_22_0_PREV_VAL2 ;
  logic [22:0]  chn_o_rsci_d_22_0_R ;
  logic [22:0]  chn_o_rsci_d_22_0_X ;
  logic [22:0]  chn_o_rsci_d_22_0_C ;
  logic [13:0] chn_o_rsci_d_22_0_S ;
  logic chn_o_rsci_d_22_0_t_flag ;
  logic chn_o_rsci_d_22_0_r_flag ;
  assign chn_o_rsci_d_22_0_S = 624 ;
  logic [7:0] chn_o_rsci_d_30_23;
  logic [7:0]  chn_o_rsci_d_30_23_T ;
  logic [7:0]  chn_o_rsci_d_30_23_PREV_VAL1 ;
  logic [7:0]  chn_o_rsci_d_30_23_PREV_VAL2 ;
  logic [7:0]  chn_o_rsci_d_30_23_R ;
  logic [7:0]  chn_o_rsci_d_30_23_X ;
  logic [7:0]  chn_o_rsci_d_30_23_C ;
  logic [13:0] chn_o_rsci_d_30_23_S ;
  logic chn_o_rsci_d_30_23_t_flag ;
  logic chn_o_rsci_d_30_23_r_flag ;
  assign chn_o_rsci_d_30_23_S = 625 ;
  logic chn_o_rsci_d_30_23_mx0c1;
  logic chn_o_rsci_d_30_23_mx0c1_T ;
  logic chn_o_rsci_d_30_23_mx0c1_R ;
  logic chn_o_rsci_d_30_23_mx0c1_C ;
  logic chn_o_rsci_d_30_23_mx0c1_X ;
  logic [13:0] chn_o_rsci_d_30_23_mx0c1_S ;
  logic chn_o_rsci_d_31;
  logic  chn_o_rsci_d_31_T ;
  logic  chn_o_rsci_d_31_PREV_VAL1 ;
  logic  chn_o_rsci_d_31_PREV_VAL2 ;
  logic  chn_o_rsci_d_31_R ;
  logic  chn_o_rsci_d_31_X ;
  logic  chn_o_rsci_d_31_C ;
  logic [13:0] chn_o_rsci_d_31_S ;
  logic chn_o_rsci_d_31_t_flag ;
  logic chn_o_rsci_d_31_r_flag ;
  assign chn_o_rsci_d_31_S = 626 ;
  logic chn_o_rsci_iswt0;
  logic  chn_o_rsci_iswt0_T ;
  logic  chn_o_rsci_iswt0_PREV_VAL1 ;
  logic  chn_o_rsci_iswt0_PREV_VAL2 ;
  logic  chn_o_rsci_iswt0_R ;
  logic  chn_o_rsci_iswt0_X ;
  logic  chn_o_rsci_iswt0_C ;
  logic [13:0] chn_o_rsci_iswt0_S ;
  logic chn_o_rsci_iswt0_t_flag ;
  logic chn_o_rsci_iswt0_r_flag ;
  assign chn_o_rsci_iswt0_S = 627 ;
  input chn_o_rsci_oswt;
  input chn_o_rsci_oswt_T ;
  input [13:0] chn_o_rsci_oswt_S ;
  output chn_o_rsci_oswt_R ;
  output chn_o_rsci_oswt_X ;
  output chn_o_rsci_oswt_C ;
  output chn_o_rsci_oswt_unreg;
  logic chn_o_rsci_oswt_unreg ;
  output chn_o_rsci_oswt_unreg_T ;
  logic chn_o_rsci_oswt_unreg_T ;
  logic chn_o_rsci_oswt_unreg_R ;
  logic chn_o_rsci_oswt_unreg_C ;
  logic chn_o_rsci_oswt_unreg_X ;
  logic [13:0] chn_o_rsci_oswt_unreg_S ;
  input chn_o_rsci_oswt_unreg_R0 ;
  input chn_o_rsci_oswt_unreg_C0 ;
  input chn_o_rsci_oswt_unreg_X0 ;
  output [13:0] chn_o_rsci_oswt_unreg_S ;
  logic chn_o_rsci_wen_comp;
  logic chn_o_rsci_wen_comp_T ;
  logic chn_o_rsci_wen_comp_R ;
  logic chn_o_rsci_wen_comp_C ;
  logic chn_o_rsci_wen_comp_X ;
  logic [13:0] chn_o_rsci_wen_comp_S ;
  logic core_wen;
  logic core_wen_T ;
  logic core_wen_R ;
  logic core_wen_C ;
  logic core_wen_X ;
  logic [13:0] core_wen_S ;
  logic core_wten;
  logic core_wten_T ;
  logic core_wten_R ;
  logic core_wten_C ;
  logic core_wten_X ;
  logic [13:0] core_wten_S ;
  logic [1:0] fsm_output;
  logic [1:0] fsm_output_T ;
  logic [1:0] fsm_output_R ;
  logic [1:0] fsm_output_C ;
  logic [1:0] fsm_output_X ;
  logic [13:0] fsm_output_S ;
  logic main_stage_en_1;
  logic main_stage_en_1_T ;
  logic main_stage_en_1_R ;
  logic main_stage_en_1_C ;
  logic main_stage_en_1_X ;
  logic [13:0] main_stage_en_1_S ;
  logic main_stage_v_1;
  logic  main_stage_v_1_T ;
  logic  main_stage_v_1_PREV_VAL1 ;
  logic  main_stage_v_1_PREV_VAL2 ;
  logic  main_stage_v_1_R ;
  logic  main_stage_v_1_X ;
  logic  main_stage_v_1_C ;
  logic [13:0] main_stage_v_1_S ;
  logic main_stage_v_1_t_flag ;
  logic main_stage_v_1_r_flag ;
  assign main_stage_v_1_S = 628 ;
  logic main_stage_v_1_mx0c1;
  logic main_stage_v_1_mx0c1_T ;
  logic main_stage_v_1_mx0c1_R ;
  logic main_stage_v_1_mx0c1_C ;
  logic main_stage_v_1_mx0c1_X ;
  logic [13:0] main_stage_v_1_mx0c1_S ;
  logic main_stage_v_2;
  logic  main_stage_v_2_T ;
  logic  main_stage_v_2_PREV_VAL1 ;
  logic  main_stage_v_2_PREV_VAL2 ;
  logic  main_stage_v_2_R ;
  logic  main_stage_v_2_X ;
  logic  main_stage_v_2_C ;
  logic [13:0] main_stage_v_2_S ;
  logic main_stage_v_2_t_flag ;
  logic main_stage_v_2_r_flag ;
  assign main_stage_v_2_S = 629 ;
  logic main_stage_v_2_mx0c1;
  logic main_stage_v_2_mx0c1_T ;
  logic main_stage_v_2_mx0c1_R ;
  logic main_stage_v_2_mx0c1_C ;
  logic main_stage_v_2_mx0c1_X ;
  logic [13:0] main_stage_v_2_mx0c1_S ;
  logic mux_11_nl;
  logic mux_11_nl_T ;
  logic mux_11_nl_R ;
  logic mux_11_nl_C ;
  logic mux_11_nl_X ;
  logic [13:0] mux_11_nl_S ;
  logic mux_12_nl;
  logic mux_12_nl_T ;
  logic mux_12_nl_R ;
  logic mux_12_nl_C ;
  logic mux_12_nl_X ;
  logic [13:0] mux_12_nl_S ;
  logic mux_13_nl;
  logic mux_13_nl_T ;
  logic mux_13_nl_R ;
  logic mux_13_nl_C ;
  logic mux_13_nl_X ;
  logic [13:0] mux_13_nl_S ;
  logic mux_15_nl;
  logic mux_15_nl_T ;
  logic mux_15_nl_R ;
  logic mux_15_nl_C ;
  logic mux_15_nl_X ;
  logic [13:0] mux_15_nl_S ;
  logic mux_16_nl;
  logic mux_16_nl_T ;
  logic mux_16_nl_R ;
  logic mux_16_nl_C ;
  logic mux_16_nl_X ;
  logic [13:0] mux_16_nl_S ;
  logic mux_17_nl;
  logic mux_17_nl_T ;
  logic mux_17_nl_R ;
  logic mux_17_nl_C ;
  logic mux_17_nl_X ;
  logic [13:0] mux_17_nl_S ;
  logic mux_18_nl;
  logic mux_18_nl_T ;
  logic mux_18_nl_R ;
  logic mux_18_nl_C ;
  logic mux_18_nl_X ;
  logic [13:0] mux_18_nl_S ;
  logic mux_19_nl;
  logic mux_19_nl_T ;
  logic mux_19_nl_R ;
  logic mux_19_nl_C ;
  logic mux_19_nl_X ;
  logic [13:0] mux_19_nl_S ;
  logic mux_20_itm;
  logic mux_20_itm_T ;
  logic mux_20_itm_R ;
  logic mux_20_itm_C ;
  logic mux_20_itm_X ;
  logic [13:0] mux_20_itm_S ;
  logic mux_22_nl;
  logic mux_22_nl_T ;
  logic mux_22_nl_R ;
  logic mux_22_nl_C ;
  logic mux_22_nl_X ;
  logic [13:0] mux_22_nl_S ;
  logic mux_23_nl;
  logic mux_23_nl_T ;
  logic mux_23_nl_R ;
  logic mux_23_nl_C ;
  logic mux_23_nl_X ;
  logic [13:0] mux_23_nl_S ;
  logic mux_24_cse;
  logic mux_24_cse_T ;
  logic mux_24_cse_R ;
  logic mux_24_cse_C ;
  logic mux_24_cse_X ;
  logic [13:0] mux_24_cse_S ;
  logic mux_25_nl;
  logic mux_25_nl_T ;
  logic mux_25_nl_R ;
  logic mux_25_nl_C ;
  logic mux_25_nl_X ;
  logic [13:0] mux_25_nl_S ;
  logic mux_26_nl;
  logic mux_26_nl_T ;
  logic mux_26_nl_R ;
  logic mux_26_nl_C ;
  logic mux_26_nl_X ;
  logic [13:0] mux_26_nl_S ;
  logic mux_27_nl;
  logic mux_27_nl_T ;
  logic mux_27_nl_R ;
  logic mux_27_nl_C ;
  logic mux_27_nl_X ;
  logic [13:0] mux_27_nl_S ;
  logic mux_28_nl;
  logic mux_28_nl_T ;
  logic mux_28_nl_R ;
  logic mux_28_nl_C ;
  logic mux_28_nl_X ;
  logic [13:0] mux_28_nl_S ;
  logic mux_29_nl;
  logic mux_29_nl_T ;
  logic mux_29_nl_R ;
  logic mux_29_nl_C ;
  logic mux_29_nl_X ;
  logic [13:0] mux_29_nl_S ;
  logic mux_2_nl;
  logic mux_2_nl_T ;
  logic mux_2_nl_R ;
  logic mux_2_nl_C ;
  logic mux_2_nl_X ;
  logic [13:0] mux_2_nl_S ;
  logic mux_30_nl;
  logic mux_30_nl_T ;
  logic mux_30_nl_R ;
  logic mux_30_nl_C ;
  logic mux_30_nl_X ;
  logic [13:0] mux_30_nl_S ;
  logic mux_31_nl;
  logic mux_31_nl_T ;
  logic mux_31_nl_R ;
  logic mux_31_nl_C ;
  logic mux_31_nl_X ;
  logic [13:0] mux_31_nl_S ;
  logic mux_33_nl;
  logic mux_33_nl_T ;
  logic mux_33_nl_R ;
  logic mux_33_nl_C ;
  logic mux_33_nl_X ;
  logic [13:0] mux_33_nl_S ;
  logic [22:0] mux_34_nl;
  logic [22:0] mux_34_nl_T ;
  logic [22:0] mux_34_nl_R ;
  logic [22:0] mux_34_nl_C ;
  logic [22:0] mux_34_nl_X ;
  logic [13:0] mux_34_nl_S ;
  logic mux_3_nl;
  logic mux_3_nl_T ;
  logic mux_3_nl_R ;
  logic mux_3_nl_C ;
  logic mux_3_nl_X ;
  logic [13:0] mux_3_nl_S ;
  logic mux_5_nl;
  logic mux_5_nl_T ;
  logic mux_5_nl_R ;
  logic mux_5_nl_C ;
  logic mux_5_nl_X ;
  logic [13:0] mux_5_nl_S ;
  logic mux_6_nl;
  logic mux_6_nl_T ;
  logic mux_6_nl_R ;
  logic mux_6_nl_C ;
  logic mux_6_nl_X ;
  logic [13:0] mux_6_nl_S ;
  logic mux_7_nl;
  logic mux_7_nl_T ;
  logic mux_7_nl_R ;
  logic mux_7_nl_C ;
  logic mux_7_nl_X ;
  logic [13:0] mux_7_nl_S ;
  logic mux_8_nl;
  logic mux_8_nl_T ;
  logic mux_8_nl_R ;
  logic mux_8_nl_C ;
  logic mux_8_nl_X ;
  logic [13:0] mux_8_nl_S ;
  logic mux_tmp;
  logic mux_tmp_T ;
  logic mux_tmp_R ;
  logic mux_tmp_C ;
  logic mux_tmp_X ;
  logic [13:0] mux_tmp_S ;
  logic mux_tmp_1;
  logic mux_tmp_1_T ;
  logic mux_tmp_1_R ;
  logic mux_tmp_1_C ;
  logic mux_tmp_1_X ;
  logic [13:0] mux_tmp_1_S ;
  logic mux_tmp_10;
  logic mux_tmp_10_T ;
  logic mux_tmp_10_R ;
  logic mux_tmp_10_C ;
  logic mux_tmp_10_X ;
  logic [13:0] mux_tmp_10_S ;
  logic mux_tmp_14;
  logic mux_tmp_14_T ;
  logic mux_tmp_14_R ;
  logic mux_tmp_14_C ;
  logic mux_tmp_14_X ;
  logic [13:0] mux_tmp_14_S ;
  logic mux_tmp_4;
  logic mux_tmp_4_T ;
  logic mux_tmp_4_R ;
  logic mux_tmp_4_C ;
  logic mux_tmp_4_X ;
  logic [13:0] mux_tmp_4_S ;
  logic mux_tmp_9;
  logic mux_tmp_9_T ;
  logic mux_tmp_9_R ;
  logic mux_tmp_9_C ;
  logic mux_tmp_9_X ;
  logic [13:0] mux_tmp_9_S ;
  logic nand_6_nl;
  logic nand_6_nl_T ;
  logic nand_6_nl_R ;
  logic nand_6_nl_C ;
  logic nand_6_nl_X ;
  logic [13:0] nand_6_nl_S ;
  logic nand_8_cse;
  logic nand_8_cse_T ;
  logic nand_8_cse_R ;
  logic nand_8_cse_C ;
  logic nand_8_cse_X ;
  logic [13:0] nand_8_cse_S ;
  logic nand_cse;
  logic nand_cse_T ;
  logic nand_cse_R ;
  logic nand_cse_C ;
  logic nand_cse_X ;
  logic [13:0] nand_cse_S ;
  logic [23:0] nl_FpMantRNE_48U_24U_else_acc_nl;
  logic [23:0] nl_FpMantRNE_48U_24U_else_acc_nl_T ;
  logic [23:0] nl_FpMantRNE_48U_24U_else_acc_nl_R ;
  logic [23:0] nl_FpMantRNE_48U_24U_else_acc_nl_C ;
  logic [23:0] nl_FpMantRNE_48U_24U_else_acc_nl_X ;
  logic [13:0] nl_FpMantRNE_48U_24U_else_acc_nl_S ;
  logic [8:0] nl_FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1;
  logic [8:0] nl_FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_T ;
  logic [8:0] nl_FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_R ;
  logic [8:0] nl_FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_C ;
  logic [8:0] nl_FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_X ;
  logic [13:0] nl_FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_S ;
  logic [9:0] nl_FpMul_8U_23U_else_2_acc_1_nl;
  logic [9:0] nl_FpMul_8U_23U_else_2_acc_1_nl_T ;
  logic [9:0] nl_FpMul_8U_23U_else_2_acc_1_nl_R ;
  logic [9:0] nl_FpMul_8U_23U_else_2_acc_1_nl_C ;
  logic [9:0] nl_FpMul_8U_23U_else_2_acc_1_nl_X ;
  logic [13:0] nl_FpMul_8U_23U_else_2_acc_1_nl_S ;
  logic [8:0] nl_FpMul_8U_23U_else_2_else_acc_2_nl;
  logic [8:0] nl_FpMul_8U_23U_else_2_else_acc_2_nl_T ;
  logic [8:0] nl_FpMul_8U_23U_else_2_else_acc_2_nl_R ;
  logic [8:0] nl_FpMul_8U_23U_else_2_else_acc_2_nl_C ;
  logic [8:0] nl_FpMul_8U_23U_else_2_else_acc_2_nl_X ;
  logic [13:0] nl_FpMul_8U_23U_else_2_else_acc_2_nl_S ;
  logic [8:0] nl_FpMul_8U_23U_else_2_else_if_if_acc_1_nl;
  logic [8:0] nl_FpMul_8U_23U_else_2_else_if_if_acc_1_nl_T ;
  logic [8:0] nl_FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R ;
  logic [8:0] nl_FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C ;
  logic [8:0] nl_FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X ;
  logic [13:0] nl_FpMul_8U_23U_else_2_else_if_if_acc_1_nl_S ;
  logic [8:0] nl_FpMul_8U_23U_else_2_else_if_if_acc_nl;
  logic [8:0] nl_FpMul_8U_23U_else_2_else_if_if_acc_nl_T ;
  logic [8:0] nl_FpMul_8U_23U_else_2_else_if_if_acc_nl_R ;
  logic [8:0] nl_FpMul_8U_23U_else_2_else_if_if_acc_nl_C ;
  logic [8:0] nl_FpMul_8U_23U_else_2_else_if_if_acc_nl_X ;
  logic [13:0] nl_FpMul_8U_23U_else_2_else_if_if_acc_nl_S ;
  logic [9:0] nl_FpMul_8U_23U_else_2_if_acc_nl;
  logic [9:0] nl_FpMul_8U_23U_else_2_if_acc_nl_T ;
  logic [9:0] nl_FpMul_8U_23U_else_2_if_acc_nl_R ;
  logic [9:0] nl_FpMul_8U_23U_else_2_if_acc_nl_C ;
  logic [9:0] nl_FpMul_8U_23U_else_2_if_acc_nl_X ;
  logic [13:0] nl_FpMul_8U_23U_else_2_if_acc_nl_S ;
  logic [9:0] nl_FpMul_8U_23U_oelse_1_acc_1_nl;
  logic [9:0] nl_FpMul_8U_23U_oelse_1_acc_1_nl_T ;
  logic [9:0] nl_FpMul_8U_23U_oelse_1_acc_1_nl_R ;
  logic [9:0] nl_FpMul_8U_23U_oelse_1_acc_1_nl_C ;
  logic [9:0] nl_FpMul_8U_23U_oelse_1_acc_1_nl_X ;
  logic [13:0] nl_FpMul_8U_23U_oelse_1_acc_1_nl_S ;
  logic [10:0] nl_FpMul_8U_23U_oelse_1_acc_nl;
  logic [10:0] nl_FpMul_8U_23U_oelse_1_acc_nl_T ;
  logic [10:0] nl_FpMul_8U_23U_oelse_1_acc_nl_R ;
  logic [10:0] nl_FpMul_8U_23U_oelse_1_acc_nl_C ;
  logic [10:0] nl_FpMul_8U_23U_oelse_1_acc_nl_X ;
  logic [13:0] nl_FpMul_8U_23U_oelse_1_acc_nl_S ;
  logic [7:0] nl_FpMul_8U_23U_p_expo_sva_5;
  logic [7:0] nl_FpMul_8U_23U_p_expo_sva_5_T ;
  logic [7:0] nl_FpMul_8U_23U_p_expo_sva_5_R ;
  logic [7:0] nl_FpMul_8U_23U_p_expo_sva_5_C ;
  logic [7:0] nl_FpMul_8U_23U_p_expo_sva_5_X ;
  logic [13:0] nl_FpMul_8U_23U_p_expo_sva_5_S ;
  logic [31:0] nl_HLS_fp32_mul_core_chn_o_rsci_inst_chn_o_rsci_d;
  logic [31:0] nl_HLS_fp32_mul_core_chn_o_rsci_inst_chn_o_rsci_d_T ;
  logic [31:0] nl_HLS_fp32_mul_core_chn_o_rsci_inst_chn_o_rsci_d_R ;
  logic [31:0] nl_HLS_fp32_mul_core_chn_o_rsci_inst_chn_o_rsci_d_C ;
  logic [31:0] nl_HLS_fp32_mul_core_chn_o_rsci_inst_chn_o_rsci_d_X ;
  logic [13:0] nl_HLS_fp32_mul_core_chn_o_rsci_inst_chn_o_rsci_d_S ;
  logic nor_21_nl;
  logic nor_21_nl_T ;
  logic nor_21_nl_R ;
  logic nor_21_nl_C ;
  logic nor_21_nl_X ;
  logic [13:0] nor_21_nl_S ;
  logic nor_22_nl;
  logic nor_22_nl_T ;
  logic nor_22_nl_R ;
  logic nor_22_nl_C ;
  logic nor_22_nl_X ;
  logic [13:0] nor_22_nl_S ;
  logic nor_23_nl;
  logic nor_23_nl_T ;
  logic nor_23_nl_R ;
  logic nor_23_nl_C ;
  logic nor_23_nl_X ;
  logic [13:0] nor_23_nl_S ;
  logic nor_24_nl;
  logic nor_24_nl_T ;
  logic nor_24_nl_R ;
  logic nor_24_nl_C ;
  logic nor_24_nl_X ;
  logic [13:0] nor_24_nl_S ;
  logic nor_26_nl;
  logic nor_26_nl_T ;
  logic nor_26_nl_R ;
  logic nor_26_nl_C ;
  logic nor_26_nl_X ;
  logic [13:0] nor_26_nl_S ;
  logic nor_27_nl;
  logic nor_27_nl_T ;
  logic nor_27_nl_R ;
  logic nor_27_nl_C ;
  logic nor_27_nl_X ;
  logic [13:0] nor_27_nl_S ;
  logic nor_28_nl;
  logic nor_28_nl_T ;
  logic nor_28_nl_R ;
  logic nor_28_nl_C ;
  logic nor_28_nl_X ;
  logic [13:0] nor_28_nl_S ;
  logic nor_31_nl;
  logic nor_31_nl_T ;
  logic nor_31_nl_R ;
  logic nor_31_nl_C ;
  logic nor_31_nl_X ;
  logic [13:0] nor_31_nl_S ;
  logic nor_32_nl;
  logic nor_32_nl_T ;
  logic nor_32_nl_R ;
  logic nor_32_nl_C ;
  logic nor_32_nl_X ;
  logic [13:0] nor_32_nl_S ;
  logic nor_4_cse;
  logic nor_4_cse_T ;
  logic nor_4_cse_R ;
  logic nor_4_cse_C ;
  logic nor_4_cse_X ;
  logic [13:0] nor_4_cse_S ;
  logic nor_nl;
  logic nor_nl_T ;
  logic nor_nl_R ;
  logic nor_nl_C ;
  logic nor_nl_X ;
  logic [13:0] nor_nl_S ;
  logic not_tmp_9;
  logic not_tmp_9_T ;
  logic not_tmp_9_R ;
  logic not_tmp_9_C ;
  logic not_tmp_9_X ;
  logic [13:0] not_tmp_9_S ;
  input nvdla_core_clk;
  input nvdla_core_clk_T ;
  input [13:0] nvdla_core_clk_S ;
  output nvdla_core_clk_R ;
  output nvdla_core_clk_X ;
  output nvdla_core_clk_C ;
  input nvdla_core_rstn;
  input nvdla_core_rstn_T ;
  input [13:0] nvdla_core_rstn_S ;
  output nvdla_core_rstn_R ;
  output nvdla_core_rstn_X ;
  output nvdla_core_rstn_C ;
  logic or_10_cse;
  logic or_10_cse_T ;
  logic or_10_cse_R ;
  logic or_10_cse_C ;
  logic or_10_cse_X ;
  logic [13:0] or_10_cse_S ;
  logic or_1_nl;
  logic or_1_nl_T ;
  logic or_1_nl_R ;
  logic or_1_nl_C ;
  logic or_1_nl_X ;
  logic [13:0] or_1_nl_S ;
  logic or_22_nl;
  logic or_22_nl_T ;
  logic or_22_nl_R ;
  logic or_22_nl_C ;
  logic or_22_nl_X ;
  logic [13:0] or_22_nl_S ;
  logic or_25_nl;
  logic or_25_nl_T ;
  logic or_25_nl_R ;
  logic or_25_nl_C ;
  logic or_25_nl_X ;
  logic [13:0] or_25_nl_S ;
  logic or_29_cse;
  logic or_29_cse_T ;
  logic or_29_cse_R ;
  logic or_29_cse_C ;
  logic or_29_cse_X ;
  logic [13:0] or_29_cse_S ;
  logic or_33_nl;
  logic or_33_nl_T ;
  logic or_33_nl_R ;
  logic or_33_nl_C ;
  logic or_33_nl_X ;
  logic [13:0] or_33_nl_S ;
  logic or_39_nl;
  logic or_39_nl_T ;
  logic or_39_nl_R ;
  logic or_39_nl_C ;
  logic or_39_nl_X ;
  logic [13:0] or_39_nl_S ;
  logic or_3_nl;
  logic or_3_nl_T ;
  logic or_3_nl_R ;
  logic or_3_nl_C ;
  logic or_3_nl_X ;
  logic [13:0] or_3_nl_S ;
  logic or_45_cse;
  logic or_45_cse_T ;
  logic or_45_cse_R ;
  logic or_45_cse_C ;
  logic or_45_cse_X ;
  logic [13:0] or_45_cse_S ;
  logic or_65_cse;
  logic or_65_cse_T ;
  logic or_65_cse_R ;
  logic or_65_cse_C ;
  logic or_65_cse_X ;
  logic [13:0] or_65_cse_S ;
  logic or_7_nl;
  logic or_7_nl_T ;
  logic or_7_nl_R ;
  logic or_7_nl_C ;
  logic or_7_nl_X ;
  logic [13:0] or_7_nl_S ;
  logic or_nl;
  logic or_nl_T ;
  logic or_nl_R ;
  logic or_nl_C ;
  logic or_nl_X ;
  logic [13:0] or_nl_S ;
  logic or_tmp_24;
  logic or_tmp_24_T ;
  logic or_tmp_24_R ;
  logic or_tmp_24_C ;
  logic or_tmp_24_X ;
  logic [13:0] or_tmp_24_S ;
  logic or_tmp_32;
  logic or_tmp_32_T ;
  logic or_tmp_32_R ;
  logic or_tmp_32_C ;
  logic or_tmp_32_X ;
  logic [13:0] or_tmp_32_S ;
  logic or_tmp_36;
  logic or_tmp_36_T ;
  logic or_tmp_36_R ;
  logic or_tmp_36_C ;
  logic or_tmp_36_X ;
  logic [13:0] or_tmp_36_S ;
  logic or_tmp_51;
  logic or_tmp_51_T ;
  logic or_tmp_51_R ;
  logic or_tmp_51_C ;
  logic or_tmp_51_X ;
  logic [13:0] or_tmp_51_S ;
  logic or_tmp_55;
  logic or_tmp_55_T ;
  logic or_tmp_55_R ;
  logic or_tmp_55_C ;
  logic or_tmp_55_X ;
  logic [13:0] or_tmp_55_S ;
  logic or_tmp_59;
  logic or_tmp_59_T ;
  logic or_tmp_59_R ;
  logic or_tmp_59_C ;
  logic or_tmp_59_X ;
  logic [13:0] or_tmp_59_S ;
  logic or_tmp_65;
  logic or_tmp_65_T ;
  logic or_tmp_65_R ;
  logic or_tmp_65_C ;
  logic or_tmp_65_X ;
  logic [13:0] or_tmp_65_S ;
  logic reg_chn_b_rsci_iswt0_cse;
  logic  reg_chn_b_rsci_iswt0_cse_T ;
  logic  reg_chn_b_rsci_iswt0_cse_PREV_VAL1 ;
  logic  reg_chn_b_rsci_iswt0_cse_PREV_VAL2 ;
  logic  reg_chn_b_rsci_iswt0_cse_R ;
  logic  reg_chn_b_rsci_iswt0_cse_X ;
  logic  reg_chn_b_rsci_iswt0_cse_C ;
  logic [13:0] reg_chn_b_rsci_iswt0_cse_S ;
  logic reg_chn_b_rsci_iswt0_cse_t_flag ;
  logic reg_chn_b_rsci_iswt0_cse_r_flag ;
  assign reg_chn_b_rsci_iswt0_cse_S = 630 ;
  logic reg_chn_b_rsci_ld_core_psct_cse;
  logic  reg_chn_b_rsci_ld_core_psct_cse_T ;
  logic  reg_chn_b_rsci_ld_core_psct_cse_PREV_VAL1 ;
  logic  reg_chn_b_rsci_ld_core_psct_cse_PREV_VAL2 ;
  logic  reg_chn_b_rsci_ld_core_psct_cse_R ;
  logic  reg_chn_b_rsci_ld_core_psct_cse_X ;
  logic  reg_chn_b_rsci_ld_core_psct_cse_C ;
  logic [13:0] reg_chn_b_rsci_ld_core_psct_cse_S ;
  logic reg_chn_b_rsci_ld_core_psct_cse_t_flag ;
  logic reg_chn_b_rsci_ld_core_psct_cse_r_flag ;
  assign reg_chn_b_rsci_ld_core_psct_cse_S = 631 ;
  logic reg_chn_o_rsci_ld_core_psct_cse;
  logic  reg_chn_o_rsci_ld_core_psct_cse_T ;
  logic  reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL1 ;
  logic  reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL2 ;
  logic  reg_chn_o_rsci_ld_core_psct_cse_R ;
  logic  reg_chn_o_rsci_ld_core_psct_cse_X ;
  logic  reg_chn_o_rsci_ld_core_psct_cse_C ;
  logic [13:0] reg_chn_o_rsci_ld_core_psct_cse_S ;
  logic reg_chn_o_rsci_ld_core_psct_cse_t_flag ;
  logic reg_chn_o_rsci_ld_core_psct_cse_r_flag ;
  assign reg_chn_o_rsci_ld_core_psct_cse_S = 632 ;
  assign FpMantRNE_48U_24U_else_acc_nl = FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[45:23] + FpMantRNE_48U_24U_else_carry_sva;
  assign FpMantRNE_48U_24U_else_acc_nl_S = 0 ;
  logic [45:0] FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C0 ;
  logic [45:0] FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R0 ;
  logic [45:0] FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X0 ;
  logic [0:0] FpMantRNE_48U_24U_else_carry_sva_C0 ;
  logic [0:0] FpMantRNE_48U_24U_else_carry_sva_R0 ;
  logic [0:0] FpMantRNE_48U_24U_else_carry_sva_X0 ;
  assign FpMantRNE_48U_24U_else_acc_nl_T = FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [45:23] | FpMantRNE_48U_24U_else_carry_sva_T ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C0 [45:23] = FpMantRNE_48U_24U_else_acc_nl_C ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X0 [45:23] = FpMantRNE_48U_24U_else_acc_nl_X ;
  assign FpMantRNE_48U_24U_else_carry_sva_C0 = FpMantRNE_48U_24U_else_acc_nl_C ;
  assign FpMantRNE_48U_24U_else_carry_sva_X0 = FpMantRNE_48U_24U_else_acc_nl_X ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R0 [45:23] = FpMantRNE_48U_24U_else_acc_nl_R | ( FpMantRNE_48U_24U_else_acc_nl_C & FpMantRNE_48U_24U_else_carry_sva_T );
  assign FpMantRNE_48U_24U_else_carry_sva_R0 = FpMantRNE_48U_24U_else_acc_nl_R | ( FpMantRNE_48U_24U_else_acc_nl_C & FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [45:23] );
  assign FpMul_8U_23U_else_2_acc_1_nl = chn_a_rsci_d_mxwt[30:23] + chn_b_rsci_d_mxwt[30:23];
  assign FpMul_8U_23U_else_2_acc_1_nl_S = 0 ;
  logic [31:0] chn_a_rsci_d_mxwt_C0 ;
  logic [31:0] chn_a_rsci_d_mxwt_R0 ;
  logic [31:0] chn_a_rsci_d_mxwt_X0 ;
  logic [31:0] chn_b_rsci_d_mxwt_C0 ;
  logic [31:0] chn_b_rsci_d_mxwt_R0 ;
  logic [31:0] chn_b_rsci_d_mxwt_X0 ;
  assign FpMul_8U_23U_else_2_acc_1_nl_T = chn_a_rsci_d_mxwt_T [30:23] | chn_b_rsci_d_mxwt_T [30:23] ;
  assign chn_a_rsci_d_mxwt_C0 [30:23] = FpMul_8U_23U_else_2_acc_1_nl_C ;
  assign chn_a_rsci_d_mxwt_X0 [30:23] = FpMul_8U_23U_else_2_acc_1_nl_X ;
  assign chn_b_rsci_d_mxwt_C0 [30:23] = FpMul_8U_23U_else_2_acc_1_nl_C ;
  assign chn_b_rsci_d_mxwt_X0 [30:23] = FpMul_8U_23U_else_2_acc_1_nl_X ;
  assign chn_a_rsci_d_mxwt_R0 [30:23] = FpMul_8U_23U_else_2_acc_1_nl_R | ( FpMul_8U_23U_else_2_acc_1_nl_C & chn_b_rsci_d_mxwt_T [30:23] );
  assign chn_b_rsci_d_mxwt_R0 [30:23] = FpMul_8U_23U_else_2_acc_1_nl_R | ( FpMul_8U_23U_else_2_acc_1_nl_C & chn_a_rsci_d_mxwt_T [30:23] );
  assign FpMul_8U_23U_else_2_else_acc_2_nl = FpMul_8U_23U_ub_sva_1_30_0_1[30:23] + 8'b10000001;
  assign FpMul_8U_23U_else_2_else_acc_2_nl_S = 0 ;
  logic [30:0] FpMul_8U_23U_ub_sva_1_30_0_1_C0 ;
  logic [30:0] FpMul_8U_23U_ub_sva_1_30_0_1_R0 ;
  logic [30:0] FpMul_8U_23U_ub_sva_1_30_0_1_X0 ;
  assign FpMul_8U_23U_else_2_else_acc_2_nl_T = FpMul_8U_23U_ub_sva_1_30_0_1_T [30:23] ;
  assign FpMul_8U_23U_ub_sva_1_30_0_1_C0 [30:23] = FpMul_8U_23U_else_2_else_acc_2_nl_C ;
  assign FpMul_8U_23U_ub_sva_1_30_0_1_R0 [30:23] = FpMul_8U_23U_else_2_else_acc_2_nl_R ;
  assign FpMul_8U_23U_ub_sva_1_30_0_1_X0 [30:23] = FpMul_8U_23U_else_2_else_acc_2_nl_X ;
  assign nl_FpMul_8U_23U_p_expo_sva_5 = FpMul_8U_23U_else_2_else_acc_2_nl + FpMul_8U_23U_ua_sva_1_30_0_1[30:23];
  assign nl_FpMul_8U_23U_p_expo_sva_5_S = 0 ;
  logic [7:0] FpMul_8U_23U_else_2_else_acc_2_nl_C0 ;
  logic [7:0] FpMul_8U_23U_else_2_else_acc_2_nl_R0 ;
  logic [7:0] FpMul_8U_23U_else_2_else_acc_2_nl_X0 ;
  logic [30:0] FpMul_8U_23U_ua_sva_1_30_0_1_C0 ;
  logic [30:0] FpMul_8U_23U_ua_sva_1_30_0_1_R0 ;
  logic [30:0] FpMul_8U_23U_ua_sva_1_30_0_1_X0 ;
  assign nl_FpMul_8U_23U_p_expo_sva_5_T = FpMul_8U_23U_else_2_else_acc_2_nl_T | FpMul_8U_23U_ua_sva_1_30_0_1_T [30:23] ;
  assign FpMul_8U_23U_else_2_else_acc_2_nl_C0 = nl_FpMul_8U_23U_p_expo_sva_5_C ;
  assign FpMul_8U_23U_else_2_else_acc_2_nl_X0 = nl_FpMul_8U_23U_p_expo_sva_5_X ;
  assign FpMul_8U_23U_ua_sva_1_30_0_1_C0 [30:23] = nl_FpMul_8U_23U_p_expo_sva_5_C ;
  assign FpMul_8U_23U_ua_sva_1_30_0_1_X0 [30:23] = nl_FpMul_8U_23U_p_expo_sva_5_X ;
  assign FpMul_8U_23U_else_2_else_acc_2_nl_R0 = nl_FpMul_8U_23U_p_expo_sva_5_R | ( nl_FpMul_8U_23U_p_expo_sva_5_C & FpMul_8U_23U_ua_sva_1_30_0_1_T [30:23] );
  assign FpMul_8U_23U_ua_sva_1_30_0_1_R0 [30:23] = nl_FpMul_8U_23U_p_expo_sva_5_R | ( nl_FpMul_8U_23U_p_expo_sva_5_C & FpMul_8U_23U_else_2_else_acc_2_nl_T );
  assign FpMul_8U_23U_else_2_if_acc_nl = FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2 + 9'b101000001;
  assign FpMul_8U_23U_else_2_if_acc_nl_S = 0 ;
  logic [7:0] FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_C0 ;
  logic [7:0] FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_R0 ;
  logic [7:0] FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_X0 ;
  assign FpMul_8U_23U_else_2_if_acc_nl_T = FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_T ;
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_C0 = FpMul_8U_23U_else_2_if_acc_nl_C ;
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_R0 = FpMul_8U_23U_else_2_if_acc_nl_R ;
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_X0 = FpMul_8U_23U_else_2_if_acc_nl_X ;
  assign FpMul_8U_23U_oelse_1_acc_1_nl = chn_b_rsci_d_mxwt[30:23] + 9'b110000001;
  assign FpMul_8U_23U_oelse_1_acc_1_nl_S = 0 ;
  assign { chn_b_rsci_d_mxwt_R0 [0], chn_b_rsci_d_mxwt_R0 [1], chn_b_rsci_d_mxwt_R0 [2], chn_b_rsci_d_mxwt_R0 [3], chn_b_rsci_d_mxwt_R0 [4], chn_b_rsci_d_mxwt_R0 [5], chn_b_rsci_d_mxwt_R0 [6], chn_b_rsci_d_mxwt_R0 [7], chn_b_rsci_d_mxwt_R0 [8], chn_b_rsci_d_mxwt_R0 [9], chn_b_rsci_d_mxwt_R0 [10], chn_b_rsci_d_mxwt_R0 [11], chn_b_rsci_d_mxwt_R0 [12], chn_b_rsci_d_mxwt_R0 [13], chn_b_rsci_d_mxwt_R0 [14], chn_b_rsci_d_mxwt_R0 [15], chn_b_rsci_d_mxwt_R0 [16], chn_b_rsci_d_mxwt_R0 [17], chn_b_rsci_d_mxwt_R0 [18], chn_b_rsci_d_mxwt_R0 [19], chn_b_rsci_d_mxwt_R0 [20], chn_b_rsci_d_mxwt_R0 [21], chn_b_rsci_d_mxwt_R0 [22], chn_b_rsci_d_mxwt_R0 [31:31] } = 0;
  assign { chn_b_rsci_d_mxwt_X0 [0], chn_b_rsci_d_mxwt_X0 [1], chn_b_rsci_d_mxwt_X0 [2], chn_b_rsci_d_mxwt_X0 [3], chn_b_rsci_d_mxwt_X0 [4], chn_b_rsci_d_mxwt_X0 [5], chn_b_rsci_d_mxwt_X0 [6], chn_b_rsci_d_mxwt_X0 [7], chn_b_rsci_d_mxwt_X0 [8], chn_b_rsci_d_mxwt_X0 [9], chn_b_rsci_d_mxwt_X0 [10], chn_b_rsci_d_mxwt_X0 [11], chn_b_rsci_d_mxwt_X0 [12], chn_b_rsci_d_mxwt_X0 [13], chn_b_rsci_d_mxwt_X0 [14], chn_b_rsci_d_mxwt_X0 [15], chn_b_rsci_d_mxwt_X0 [16], chn_b_rsci_d_mxwt_X0 [17], chn_b_rsci_d_mxwt_X0 [18], chn_b_rsci_d_mxwt_X0 [19], chn_b_rsci_d_mxwt_X0 [20], chn_b_rsci_d_mxwt_X0 [21], chn_b_rsci_d_mxwt_X0 [22], chn_b_rsci_d_mxwt_X0 [31:31] } = 0;
  assign { chn_b_rsci_d_mxwt_C0 [0], chn_b_rsci_d_mxwt_C0 [1], chn_b_rsci_d_mxwt_C0 [2], chn_b_rsci_d_mxwt_C0 [3], chn_b_rsci_d_mxwt_C0 [4], chn_b_rsci_d_mxwt_C0 [5], chn_b_rsci_d_mxwt_C0 [6], chn_b_rsci_d_mxwt_C0 [7], chn_b_rsci_d_mxwt_C0 [8], chn_b_rsci_d_mxwt_C0 [9], chn_b_rsci_d_mxwt_C0 [10], chn_b_rsci_d_mxwt_C0 [11], chn_b_rsci_d_mxwt_C0 [12], chn_b_rsci_d_mxwt_C0 [13], chn_b_rsci_d_mxwt_C0 [14], chn_b_rsci_d_mxwt_C0 [15], chn_b_rsci_d_mxwt_C0 [16], chn_b_rsci_d_mxwt_C0 [17], chn_b_rsci_d_mxwt_C0 [18], chn_b_rsci_d_mxwt_C0 [19], chn_b_rsci_d_mxwt_C0 [20], chn_b_rsci_d_mxwt_C0 [21], chn_b_rsci_d_mxwt_C0 [22], chn_b_rsci_d_mxwt_C0 [31:31] } = 0;
  logic [31:0] chn_b_rsci_d_mxwt_C1 ;
  logic [31:0] chn_b_rsci_d_mxwt_R1 ;
  logic [31:0] chn_b_rsci_d_mxwt_X1 ;
  assign FpMul_8U_23U_oelse_1_acc_1_nl_T = chn_b_rsci_d_mxwt_T [30:23] ;
  assign chn_b_rsci_d_mxwt_C1 [30:23] = FpMul_8U_23U_oelse_1_acc_1_nl_C ;
  assign chn_b_rsci_d_mxwt_R1 [30:23] = FpMul_8U_23U_oelse_1_acc_1_nl_R ;
  assign chn_b_rsci_d_mxwt_X1 [30:23] = FpMul_8U_23U_oelse_1_acc_1_nl_X ;
  logic [9:0] fangyuan0;
  logic [9:0] fangyuan0_T ;
  logic [9:0] fangyuan0_R ;
  logic [9:0] fangyuan0_C ;
  logic [9:0] fangyuan0_X ;
  assign fangyuan0 = { FpMul_8U_23U_oelse_1_acc_1_nl[8], FpMul_8U_23U_oelse_1_acc_1_nl };
  assign fangyuan0_T = {  FpMul_8U_23U_oelse_1_acc_1_nl_T [8] , FpMul_8U_23U_oelse_1_acc_1_nl_T  };
  logic [13:0] fangyuan0_S ;
  assign fangyuan0_S = 0 ;
  logic [8:0] FpMul_8U_23U_oelse_1_acc_1_nl_R0 ;
  logic [8:0] FpMul_8U_23U_oelse_1_acc_1_nl_X0 ;
  logic [8:0] FpMul_8U_23U_oelse_1_acc_1_nl_C0 ;
  assign FpMul_8U_23U_oelse_1_acc_1_nl_R0 [8:8] = fangyuan0_R [9:9] ;
  assign FpMul_8U_23U_oelse_1_acc_1_nl_X0 [8:8] = fangyuan0_X [9:9] ;
  assign FpMul_8U_23U_oelse_1_acc_1_nl_C0 [8:8] = fangyuan0_C [9:9] ;
  assign { FpMul_8U_23U_oelse_1_acc_1_nl_R0 [0], FpMul_8U_23U_oelse_1_acc_1_nl_R0 [1], FpMul_8U_23U_oelse_1_acc_1_nl_R0 [2], FpMul_8U_23U_oelse_1_acc_1_nl_R0 [3], FpMul_8U_23U_oelse_1_acc_1_nl_R0 [4], FpMul_8U_23U_oelse_1_acc_1_nl_R0 [5], FpMul_8U_23U_oelse_1_acc_1_nl_R0 [6], FpMul_8U_23U_oelse_1_acc_1_nl_R0 [7] } = 0;
  assign { FpMul_8U_23U_oelse_1_acc_1_nl_X0 [0], FpMul_8U_23U_oelse_1_acc_1_nl_X0 [1], FpMul_8U_23U_oelse_1_acc_1_nl_X0 [2], FpMul_8U_23U_oelse_1_acc_1_nl_X0 [3], FpMul_8U_23U_oelse_1_acc_1_nl_X0 [4], FpMul_8U_23U_oelse_1_acc_1_nl_X0 [5], FpMul_8U_23U_oelse_1_acc_1_nl_X0 [6], FpMul_8U_23U_oelse_1_acc_1_nl_X0 [7] } = 0;
  assign { FpMul_8U_23U_oelse_1_acc_1_nl_C0 [0], FpMul_8U_23U_oelse_1_acc_1_nl_C0 [1], FpMul_8U_23U_oelse_1_acc_1_nl_C0 [2], FpMul_8U_23U_oelse_1_acc_1_nl_C0 [3], FpMul_8U_23U_oelse_1_acc_1_nl_C0 [4], FpMul_8U_23U_oelse_1_acc_1_nl_C0 [5], FpMul_8U_23U_oelse_1_acc_1_nl_C0 [6], FpMul_8U_23U_oelse_1_acc_1_nl_C0 [7] } = 0;
  logic [8:0] FpMul_8U_23U_oelse_1_acc_1_nl_R1 ;
  logic [8:0] FpMul_8U_23U_oelse_1_acc_1_nl_X1 ;
  logic [8:0] FpMul_8U_23U_oelse_1_acc_1_nl_C1 ;
  assign FpMul_8U_23U_oelse_1_acc_1_nl_R1 = fangyuan0_R [8:0] ;
  assign FpMul_8U_23U_oelse_1_acc_1_nl_X1 = fangyuan0_X [8:0] ;
  assign FpMul_8U_23U_oelse_1_acc_1_nl_C1 = fangyuan0_C [8:0] ;

  assign FpMul_8U_23U_oelse_1_acc_nl = fangyuan0 + chn_a_rsci_d_mxwt[30:23];
  assign FpMul_8U_23U_oelse_1_acc_nl_S = 0 ;
  assign { chn_a_rsci_d_mxwt_R0 [0], chn_a_rsci_d_mxwt_R0 [1], chn_a_rsci_d_mxwt_R0 [2], chn_a_rsci_d_mxwt_R0 [3], chn_a_rsci_d_mxwt_R0 [4], chn_a_rsci_d_mxwt_R0 [5], chn_a_rsci_d_mxwt_R0 [6], chn_a_rsci_d_mxwt_R0 [7], chn_a_rsci_d_mxwt_R0 [8], chn_a_rsci_d_mxwt_R0 [9], chn_a_rsci_d_mxwt_R0 [10], chn_a_rsci_d_mxwt_R0 [11], chn_a_rsci_d_mxwt_R0 [12], chn_a_rsci_d_mxwt_R0 [13], chn_a_rsci_d_mxwt_R0 [14], chn_a_rsci_d_mxwt_R0 [15], chn_a_rsci_d_mxwt_R0 [16], chn_a_rsci_d_mxwt_R0 [17], chn_a_rsci_d_mxwt_R0 [18], chn_a_rsci_d_mxwt_R0 [19], chn_a_rsci_d_mxwt_R0 [20], chn_a_rsci_d_mxwt_R0 [21], chn_a_rsci_d_mxwt_R0 [22], chn_a_rsci_d_mxwt_R0 [31:31] } = 0;
  assign { chn_a_rsci_d_mxwt_X0 [0], chn_a_rsci_d_mxwt_X0 [1], chn_a_rsci_d_mxwt_X0 [2], chn_a_rsci_d_mxwt_X0 [3], chn_a_rsci_d_mxwt_X0 [4], chn_a_rsci_d_mxwt_X0 [5], chn_a_rsci_d_mxwt_X0 [6], chn_a_rsci_d_mxwt_X0 [7], chn_a_rsci_d_mxwt_X0 [8], chn_a_rsci_d_mxwt_X0 [9], chn_a_rsci_d_mxwt_X0 [10], chn_a_rsci_d_mxwt_X0 [11], chn_a_rsci_d_mxwt_X0 [12], chn_a_rsci_d_mxwt_X0 [13], chn_a_rsci_d_mxwt_X0 [14], chn_a_rsci_d_mxwt_X0 [15], chn_a_rsci_d_mxwt_X0 [16], chn_a_rsci_d_mxwt_X0 [17], chn_a_rsci_d_mxwt_X0 [18], chn_a_rsci_d_mxwt_X0 [19], chn_a_rsci_d_mxwt_X0 [20], chn_a_rsci_d_mxwt_X0 [21], chn_a_rsci_d_mxwt_X0 [22], chn_a_rsci_d_mxwt_X0 [31:31] } = 0;
  assign { chn_a_rsci_d_mxwt_C0 [0], chn_a_rsci_d_mxwt_C0 [1], chn_a_rsci_d_mxwt_C0 [2], chn_a_rsci_d_mxwt_C0 [3], chn_a_rsci_d_mxwt_C0 [4], chn_a_rsci_d_mxwt_C0 [5], chn_a_rsci_d_mxwt_C0 [6], chn_a_rsci_d_mxwt_C0 [7], chn_a_rsci_d_mxwt_C0 [8], chn_a_rsci_d_mxwt_C0 [9], chn_a_rsci_d_mxwt_C0 [10], chn_a_rsci_d_mxwt_C0 [11], chn_a_rsci_d_mxwt_C0 [12], chn_a_rsci_d_mxwt_C0 [13], chn_a_rsci_d_mxwt_C0 [14], chn_a_rsci_d_mxwt_C0 [15], chn_a_rsci_d_mxwt_C0 [16], chn_a_rsci_d_mxwt_C0 [17], chn_a_rsci_d_mxwt_C0 [18], chn_a_rsci_d_mxwt_C0 [19], chn_a_rsci_d_mxwt_C0 [20], chn_a_rsci_d_mxwt_C0 [21], chn_a_rsci_d_mxwt_C0 [22], chn_a_rsci_d_mxwt_C0 [31:31] } = 0;
  logic [9:0] fangyuan0_C0 ;
  logic [9:0] fangyuan0_R0 ;
  logic [9:0] fangyuan0_X0 ;
  logic [31:0] chn_a_rsci_d_mxwt_C1 ;
  logic [31:0] chn_a_rsci_d_mxwt_R1 ;
  logic [31:0] chn_a_rsci_d_mxwt_X1 ;
  assign FpMul_8U_23U_oelse_1_acc_nl_T = fangyuan0_T | chn_a_rsci_d_mxwt_T [30:23] ;
  assign fangyuan0_C0 = FpMul_8U_23U_oelse_1_acc_nl_C ;
  assign fangyuan0_X0 = FpMul_8U_23U_oelse_1_acc_nl_X ;
  assign chn_a_rsci_d_mxwt_C1 [30:23] = FpMul_8U_23U_oelse_1_acc_nl_C ;
  assign chn_a_rsci_d_mxwt_X1 [30:23] = FpMul_8U_23U_oelse_1_acc_nl_X ;
  assign fangyuan0_R0 = FpMul_8U_23U_oelse_1_acc_nl_R | ( FpMul_8U_23U_oelse_1_acc_nl_C & chn_a_rsci_d_mxwt_T [30:23] );
  assign chn_a_rsci_d_mxwt_R1 [30:23] = FpMul_8U_23U_oelse_1_acc_nl_R | ( FpMul_8U_23U_oelse_1_acc_nl_C & fangyuan0_T );
  logic [7:0] fangyuan1;
  logic [7:0] fangyuan1_T ;
  logic [7:0] fangyuan1_R ;
  logic [7:0] fangyuan1_C ;
  logic [7:0] fangyuan1_X ;
  assign fangyuan1 = { 1'b1, FpMul_8U_23U_p_expo_sva_5[7:1] };
  assign fangyuan1_T = {  1'h0 , FpMul_8U_23U_p_expo_sva_5_T [7:1]  };
  logic [13:0] fangyuan1_S ;
  assign fangyuan1_S = 0 ;
  logic [7:0] FpMul_8U_23U_p_expo_sva_5_R0 ;
  logic [7:0] FpMul_8U_23U_p_expo_sva_5_X0 ;
  logic [7:0] FpMul_8U_23U_p_expo_sva_5_C0 ;
  assign FpMul_8U_23U_p_expo_sva_5_R0 [7:1] = fangyuan1_R [6:0] ;
  assign FpMul_8U_23U_p_expo_sva_5_X0 [7:1] = fangyuan1_X [6:0] ;
  assign FpMul_8U_23U_p_expo_sva_5_C0 [7:1] = fangyuan1_C [6:0] ;

  assign FpMul_8U_23U_else_2_else_if_if_acc_1_nl = fangyuan1 + 1'b1;
  assign FpMul_8U_23U_else_2_else_if_if_acc_1_nl_S = 0 ;
  logic [7:0] fangyuan1_C0 ;
  logic [7:0] fangyuan1_R0 ;
  logic [7:0] fangyuan1_X0 ;
  assign FpMul_8U_23U_else_2_else_if_if_acc_1_nl_T = fangyuan1_T ;
  assign fangyuan1_C0 = FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C ;
  assign fangyuan1_R0 = FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R ;
  assign fangyuan1_X0 = FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X ;
  assign FpMul_8U_23U_else_2_else_if_if_acc_nl = FpMul_8U_23U_p_expo_sva_5 + 1'b1;
  assign FpMul_8U_23U_else_2_else_if_if_acc_nl_S = 0 ;
  assign { FpMul_8U_23U_p_expo_sva_5_R0 [0] } = 0;
  assign { FpMul_8U_23U_p_expo_sva_5_X0 [0] } = 0;
  assign { FpMul_8U_23U_p_expo_sva_5_C0 [0] } = 0;
  logic [7:0] FpMul_8U_23U_p_expo_sva_5_C1 ;
  logic [7:0] FpMul_8U_23U_p_expo_sva_5_R1 ;
  logic [7:0] FpMul_8U_23U_p_expo_sva_5_X1 ;
  assign FpMul_8U_23U_else_2_else_if_if_acc_nl_T = FpMul_8U_23U_p_expo_sva_5_T ;
  assign FpMul_8U_23U_p_expo_sva_5_C1 = FpMul_8U_23U_else_2_else_if_if_acc_nl_C ;
  assign FpMul_8U_23U_p_expo_sva_5_R1 = FpMul_8U_23U_else_2_else_if_if_acc_nl_R ;
  assign FpMul_8U_23U_p_expo_sva_5_X1 = FpMul_8U_23U_else_2_else_if_if_acc_nl_X ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1 = FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0 + 1'b1;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_S = 0 ;
  logic [7:0] FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_C0 ;
  logic [7:0] FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_R0 ;
  logic [7:0] FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_X0 ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_T = FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_T ;
  assign FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_C0 = FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_C ;
  assign FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_R0 = FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_R ;
  assign FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_X0 = FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_X ;
  assign and_dcpl_12 = or_10_cse & main_stage_v_2;
  assign and_dcpl_12_S = 0 ;
  logic [0:0] or_10_cse_C0 ;
  logic [0:0] or_10_cse_R0 ;
  logic [0:0] or_10_cse_X0 ;
  logic [0:0] main_stage_v_2_C0 ;
  logic [0:0] main_stage_v_2_R0 ;
  logic [0:0] main_stage_v_2_X0 ;
  assign and_dcpl_12_T = or_10_cse_T | main_stage_v_2_T ;
  assign or_10_cse_C0 = and_dcpl_12_C ;
  assign or_10_cse_X0 = and_dcpl_12_X ;
  assign main_stage_v_2_C0 = and_dcpl_12_C ;
  assign main_stage_v_2_X0 = and_dcpl_12_X ;
  assign or_10_cse_R0 = ( and_dcpl_12_R | and_dcpl_12_C & main_stage_v_2_T ) & { 1{ main_stage_v_2 != 0 }} ;
  assign main_stage_v_2_R0 = ( and_dcpl_12_R | and_dcpl_12_C & or_10_cse_T ) & { 1{ or_10_cse != 0 }} ;
  assign main_stage_v_2_mx0c1 = and_dcpl_12 & _001_;
  assign main_stage_v_2_mx0c1_S = 0 ;
  logic [0:0] and_dcpl_12_C0 ;
  logic [0:0] and_dcpl_12_R0 ;
  logic [0:0] and_dcpl_12_X0 ;
  logic [0:0] _001__C0 ;
  logic [0:0] _001__R0 ;
  logic [0:0] _001__X0 ;
  assign main_stage_v_2_mx0c1_T = and_dcpl_12_T | _001__T ;
  assign and_dcpl_12_C0 = main_stage_v_2_mx0c1_C ;
  assign and_dcpl_12_X0 = main_stage_v_2_mx0c1_X ;
  assign _001__C0 = main_stage_v_2_mx0c1_C ;
  assign _001__X0 = main_stage_v_2_mx0c1_X ;
  assign and_dcpl_12_R0 = ( main_stage_v_2_mx0c1_R | main_stage_v_2_mx0c1_C & _001__T ) & { 1{ _001_ != 0 }} ;
  assign _001__R0 = ( main_stage_v_2_mx0c1_R | main_stage_v_2_mx0c1_C & and_dcpl_12_T ) & { 1{ and_dcpl_12 != 0 }} ;
  assign _044_ = _102_ & fsm_output[1];
  assign _044__S = 0 ;
  logic [0:0] _102__C0 ;
  logic [0:0] _102__R0 ;
  logic [0:0] _102__X0 ;
  logic [1:0] fsm_output_C0 ;
  logic [1:0] fsm_output_R0 ;
  logic [1:0] fsm_output_X0 ;
  assign _044__T = _102__T | fsm_output_T [1] ;
  assign _102__C0 = _044__C ;
  assign _102__X0 = _044__X ;
  assign fsm_output_C0 [1] = _044__C ;
  assign fsm_output_X0 [1] = _044__X ;
  assign _102__R0 = ( _044__R | _044__C & fsm_output_T [1] ) & { 1{ fsm_output[1] != 0 }} ;
  assign fsm_output_R0 [1] = ( _044__R | _044__C & _102__T ) & { 1{ _102_ != 0 }} ;
  assign _045_ = core_wen & or_tmp_59;
  assign _045__S = 0 ;
  logic [0:0] core_wen_C0 ;
  logic [0:0] core_wen_R0 ;
  logic [0:0] core_wen_X0 ;
  logic [0:0] or_tmp_59_C0 ;
  logic [0:0] or_tmp_59_R0 ;
  logic [0:0] or_tmp_59_X0 ;
  assign _045__T = core_wen_T | or_tmp_59_T ;
  assign core_wen_C0 = _045__C ;
  assign core_wen_X0 = _045__X ;
  assign or_tmp_59_C0 = _045__C ;
  assign or_tmp_59_X0 = _045__X ;
  assign core_wen_R0 = ( _045__R | _045__C & or_tmp_59_T ) & { 1{ or_tmp_59 != 0 }} ;
  assign or_tmp_59_R0 = ( _045__R | _045__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _046_ = and_dcpl_12 & IsNaN_8U_23U_land_lpi_1_dfm_4;
  assign _046__S = 0 ;
  logic [0:0] and_dcpl_12_C1 ;
  logic [0:0] and_dcpl_12_R1 ;
  logic [0:0] and_dcpl_12_X1 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_4_C0 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_4_R0 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_4_X0 ;
  assign _046__T = and_dcpl_12_T | IsNaN_8U_23U_land_lpi_1_dfm_4_T ;
  assign and_dcpl_12_C1 = _046__C ;
  assign and_dcpl_12_X1 = _046__X ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_4_C0 = _046__C ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_4_X0 = _046__X ;
  assign and_dcpl_12_R1 = ( _046__R | _046__C & IsNaN_8U_23U_land_lpi_1_dfm_4_T ) & { 1{ IsNaN_8U_23U_land_lpi_1_dfm_4 != 0 }} ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_4_R0 = ( _046__R | _046__C & and_dcpl_12_T ) & { 1{ and_dcpl_12 != 0 }} ;
  assign _047_ = core_wen & _139_;
  assign _047__S = 0 ;
  logic [0:0] core_wen_C1 ;
  logic [0:0] core_wen_R1 ;
  logic [0:0] core_wen_X1 ;
  logic [0:0] _139__C0 ;
  logic [0:0] _139__R0 ;
  logic [0:0] _139__X0 ;
  assign _047__T = core_wen_T | _139__T ;
  assign core_wen_C1 = _047__C ;
  assign core_wen_X1 = _047__X ;
  assign _139__C0 = _047__C ;
  assign _139__X0 = _047__X ;
  assign core_wen_R1 = ( _047__R | _047__C & _139__T ) & { 1{ _139_ != 0 }} ;
  assign _139__R0 = ( _047__R | _047__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _048_ = core_wen & _140_;
  assign _048__S = 0 ;
  logic [0:0] core_wen_C2 ;
  logic [0:0] core_wen_R2 ;
  logic [0:0] core_wen_X2 ;
  logic [0:0] _140__C0 ;
  logic [0:0] _140__R0 ;
  logic [0:0] _140__X0 ;
  assign _048__T = core_wen_T | _140__T ;
  assign core_wen_C2 = _048__C ;
  assign core_wen_X2 = _048__X ;
  assign _140__C0 = _048__C ;
  assign _140__X0 = _048__X ;
  assign core_wen_R2 = ( _048__R | _048__C & _140__T ) & { 1{ _140_ != 0 }} ;
  assign _140__R0 = ( _048__R | _048__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _049_ = core_wen & _141_;
  assign _049__S = 0 ;
  logic [0:0] core_wen_C3 ;
  logic [0:0] core_wen_R3 ;
  logic [0:0] core_wen_X3 ;
  logic [0:0] _141__C0 ;
  logic [0:0] _141__R0 ;
  logic [0:0] _141__X0 ;
  assign _049__T = core_wen_T | _141__T ;
  assign core_wen_C3 = _049__C ;
  assign core_wen_X3 = _049__X ;
  assign _141__C0 = _049__C ;
  assign _141__X0 = _049__X ;
  assign core_wen_R3 = ( _049__R | _049__C & _141__T ) & { 1{ _141_ != 0 }} ;
  assign _141__R0 = ( _049__R | _049__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _051_ = _050_ & _107_;
  assign _051__S = 0 ;
  logic [0:0] _050__C0 ;
  logic [0:0] _050__R0 ;
  logic [0:0] _050__X0 ;
  logic [0:0] _107__C0 ;
  logic [0:0] _107__R0 ;
  logic [0:0] _107__X0 ;
  assign _051__T = _050__T | _107__T ;
  assign _050__C0 = _051__C ;
  assign _050__X0 = _051__X ;
  assign _107__C0 = _051__C ;
  assign _107__X0 = _051__X ;
  assign _050__R0 = ( _051__R | _051__C & _107__T ) & { 1{ _107_ != 0 }} ;
  assign _107__R0 = ( _051__R | _051__C & _050__T ) & { 1{ _050_ != 0 }} ;
  assign _052_ = core_wen & _143_;
  assign _052__S = 0 ;
  logic [0:0] core_wen_C4 ;
  logic [0:0] core_wen_R4 ;
  logic [0:0] core_wen_X4 ;
  logic [0:0] _143__C0 ;
  logic [0:0] _143__R0 ;
  logic [0:0] _143__X0 ;
  assign _052__T = core_wen_T | _143__T ;
  assign core_wen_C4 = _052__C ;
  assign core_wen_X4 = _052__X ;
  assign _143__C0 = _052__C ;
  assign _143__X0 = _052__X ;
  assign core_wen_R4 = ( _052__R | _052__C & _143__T ) & { 1{ _143_ != 0 }} ;
  assign _143__R0 = ( _052__R | _052__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _053_ = _050_ & mux_3_nl;
  assign _053__S = 0 ;
  logic [0:0] _050__C1 ;
  logic [0:0] _050__R1 ;
  logic [0:0] _050__X1 ;
  logic [0:0] mux_3_nl_C0 ;
  logic [0:0] mux_3_nl_R0 ;
  logic [0:0] mux_3_nl_X0 ;
  assign _053__T = _050__T | mux_3_nl_T ;
  assign _050__C1 = _053__C ;
  assign _050__X1 = _053__X ;
  assign mux_3_nl_C0 = _053__C ;
  assign mux_3_nl_X0 = _053__X ;
  assign _050__R1 = ( _053__R | _053__C & mux_3_nl_T ) & { 1{ mux_3_nl != 0 }} ;
  assign mux_3_nl_R0 = ( _053__R | _053__C & _050__T ) & { 1{ _050_ != 0 }} ;
  assign _054_ = or_10_cse & _111_;
  assign _054__S = 0 ;
  logic [0:0] or_10_cse_C1 ;
  logic [0:0] or_10_cse_R1 ;
  logic [0:0] or_10_cse_X1 ;
  logic [0:0] _111__C0 ;
  logic [0:0] _111__R0 ;
  logic [0:0] _111__X0 ;
  assign _054__T = or_10_cse_T | _111__T ;
  assign or_10_cse_C1 = _054__C ;
  assign or_10_cse_X1 = _054__X ;
  assign _111__C0 = _054__C ;
  assign _111__X0 = _054__X ;
  assign or_10_cse_R1 = ( _054__R | _054__C & _111__T ) & { 1{ _111_ != 0 }} ;
  assign _111__R0 = ( _054__R | _054__C & or_10_cse_T ) & { 1{ or_10_cse != 0 }} ;
  assign _055_ = _054_ & FpMul_8U_23U_else_2_if_acc_nl[8];
  assign _055__S = 0 ;
  logic [0:0] _054__C0 ;
  logic [0:0] _054__R0 ;
  logic [0:0] _054__X0 ;
  logic [8:0] FpMul_8U_23U_else_2_if_acc_nl_C0 ;
  logic [8:0] FpMul_8U_23U_else_2_if_acc_nl_R0 ;
  logic [8:0] FpMul_8U_23U_else_2_if_acc_nl_X0 ;
  assign _055__T = _054__T | FpMul_8U_23U_else_2_if_acc_nl_T [8] ;
  assign _054__C0 = _055__C ;
  assign _054__X0 = _055__X ;
  assign FpMul_8U_23U_else_2_if_acc_nl_C0 [8] = _055__C ;
  assign FpMul_8U_23U_else_2_if_acc_nl_X0 [8] = _055__X ;
  assign _054__R0 = ( _055__R | _055__C & FpMul_8U_23U_else_2_if_acc_nl_T [8] ) & { 1{ FpMul_8U_23U_else_2_if_acc_nl[8] != 0 }} ;
  assign FpMul_8U_23U_else_2_if_acc_nl_R0 [8] = ( _055__R | _055__C & _054__T ) & { 1{ _054_ != 0 }} ;
  assign _056_ = core_wen & _144_;
  assign _056__S = 0 ;
  logic [0:0] core_wen_C5 ;
  logic [0:0] core_wen_R5 ;
  logic [0:0] core_wen_X5 ;
  logic [0:0] _144__C0 ;
  logic [0:0] _144__R0 ;
  logic [0:0] _144__X0 ;
  assign _056__T = core_wen_T | _144__T ;
  assign core_wen_C5 = _056__C ;
  assign core_wen_X5 = _056__X ;
  assign _144__C0 = _056__C ;
  assign _144__X0 = _056__X ;
  assign core_wen_R5 = ( _056__R | _056__C & _144__T ) & { 1{ _144_ != 0 }} ;
  assign _144__R0 = ( _056__R | _056__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _057_ = _056_ & mux_tmp_4;
  assign _057__S = 0 ;
  logic [0:0] _056__C0 ;
  logic [0:0] _056__R0 ;
  logic [0:0] _056__X0 ;
  logic [0:0] mux_tmp_4_C0 ;
  logic [0:0] mux_tmp_4_R0 ;
  logic [0:0] mux_tmp_4_X0 ;
  assign _057__T = _056__T | mux_tmp_4_T ;
  assign _056__C0 = _057__C ;
  assign _056__X0 = _057__X ;
  assign mux_tmp_4_C0 = _057__C ;
  assign mux_tmp_4_X0 = _057__X ;
  assign _056__R0 = ( _057__R | _057__C & mux_tmp_4_T ) & { 1{ mux_tmp_4 != 0 }} ;
  assign mux_tmp_4_R0 = ( _057__R | _057__C & _056__T ) & { 1{ _056_ != 0 }} ;
  assign _058_ = _050_ & mux_6_nl;
  assign _058__S = 0 ;
  logic [0:0] _050__C2 ;
  logic [0:0] _050__R2 ;
  logic [0:0] _050__X2 ;
  logic [0:0] mux_6_nl_C0 ;
  logic [0:0] mux_6_nl_R0 ;
  logic [0:0] mux_6_nl_X0 ;
  assign _058__T = _050__T | mux_6_nl_T ;
  assign _050__C2 = _058__C ;
  assign _050__X2 = _058__X ;
  assign mux_6_nl_C0 = _058__C ;
  assign mux_6_nl_X0 = _058__X ;
  assign _050__R2 = ( _058__R | _058__C & mux_6_nl_T ) & { 1{ mux_6_nl != 0 }} ;
  assign mux_6_nl_R0 = ( _058__R | _058__C & _050__T ) & { 1{ _050_ != 0 }} ;
  assign _059_ = _050_ & mux_8_nl;
  assign _059__S = 0 ;
  logic [0:0] _050__C3 ;
  logic [0:0] _050__R3 ;
  logic [0:0] _050__X3 ;
  logic [0:0] mux_8_nl_C0 ;
  logic [0:0] mux_8_nl_R0 ;
  logic [0:0] mux_8_nl_X0 ;
  assign _059__T = _050__T | mux_8_nl_T ;
  assign _050__C3 = _059__C ;
  assign _050__X3 = _059__X ;
  assign mux_8_nl_C0 = _059__C ;
  assign mux_8_nl_X0 = _059__X ;
  assign _050__R3 = ( _059__R | _059__C & mux_8_nl_T ) & { 1{ mux_8_nl != 0 }} ;
  assign mux_8_nl_R0 = ( _059__R | _059__C & _050__T ) & { 1{ _050_ != 0 }} ;
  assign _060_ = core_wen & FpMul_8U_23U_ub_FpBitsToFloat_8U_23U_1_or_1_cse;
  assign _060__S = 0 ;
  logic [0:0] core_wen_C6 ;
  logic [0:0] core_wen_R6 ;
  logic [0:0] core_wen_X6 ;
  logic [0:0] FpMul_8U_23U_ub_FpBitsToFloat_8U_23U_1_or_1_cse_C0 ;
  logic [0:0] FpMul_8U_23U_ub_FpBitsToFloat_8U_23U_1_or_1_cse_R0 ;
  logic [0:0] FpMul_8U_23U_ub_FpBitsToFloat_8U_23U_1_or_1_cse_X0 ;
  assign _060__T = core_wen_T | FpMul_8U_23U_ub_FpBitsToFloat_8U_23U_1_or_1_cse_T ;
  assign core_wen_C6 = _060__C ;
  assign core_wen_X6 = _060__X ;
  assign FpMul_8U_23U_ub_FpBitsToFloat_8U_23U_1_or_1_cse_C0 = _060__C ;
  assign FpMul_8U_23U_ub_FpBitsToFloat_8U_23U_1_or_1_cse_X0 = _060__X ;
  assign core_wen_R6 = ( _060__R | _060__C & FpMul_8U_23U_ub_FpBitsToFloat_8U_23U_1_or_1_cse_T ) & { 1{ FpMul_8U_23U_ub_FpBitsToFloat_8U_23U_1_or_1_cse != 0 }} ;
  assign FpMul_8U_23U_ub_FpBitsToFloat_8U_23U_1_or_1_cse_R0 = ( _060__R | _060__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _061_ = _060_ & mux_13_nl;
  assign _061__S = 0 ;
  logic [0:0] _060__C0 ;
  logic [0:0] _060__R0 ;
  logic [0:0] _060__X0 ;
  logic [0:0] mux_13_nl_C0 ;
  logic [0:0] mux_13_nl_R0 ;
  logic [0:0] mux_13_nl_X0 ;
  assign _061__T = _060__T | mux_13_nl_T ;
  assign _060__C0 = _061__C ;
  assign _060__X0 = _061__X ;
  assign mux_13_nl_C0 = _061__C ;
  assign mux_13_nl_X0 = _061__X ;
  assign _060__R0 = ( _061__R | _061__C & mux_13_nl_T ) & { 1{ mux_13_nl != 0 }} ;
  assign mux_13_nl_R0 = ( _061__R | _061__C & _060__T ) & { 1{ _060_ != 0 }} ;
  assign _062_ = _060_ & mux_17_nl;
  assign _062__S = 0 ;
  logic [0:0] _060__C1 ;
  logic [0:0] _060__R1 ;
  logic [0:0] _060__X1 ;
  logic [0:0] mux_17_nl_C0 ;
  logic [0:0] mux_17_nl_R0 ;
  logic [0:0] mux_17_nl_X0 ;
  assign _062__T = _060__T | mux_17_nl_T ;
  assign _060__C1 = _062__C ;
  assign _060__X1 = _062__X ;
  assign mux_17_nl_C0 = _062__C ;
  assign mux_17_nl_X0 = _062__X ;
  assign _060__R1 = ( _062__R | _062__C & mux_17_nl_T ) & { 1{ mux_17_nl != 0 }} ;
  assign mux_17_nl_R0 = ( _062__R | _062__C & _060__T ) & { 1{ _060_ != 0 }} ;
  assign _063_ = _050_ & _112_;
  assign _063__S = 0 ;
  logic [0:0] _050__C4 ;
  logic [0:0] _050__R4 ;
  logic [0:0] _050__X4 ;
  logic [0:0] _112__C0 ;
  logic [0:0] _112__R0 ;
  logic [0:0] _112__X0 ;
  assign _063__T = _050__T | _112__T ;
  assign _050__C4 = _063__C ;
  assign _050__X4 = _063__X ;
  assign _112__C0 = _063__C ;
  assign _112__X0 = _063__X ;
  assign _050__R4 = ( _063__R | _063__C & _112__T ) & { 1{ _112_ != 0 }} ;
  assign _112__R0 = ( _063__R | _063__C & _050__T ) & { 1{ _050_ != 0 }} ;
  assign _064_ = core_wen & _145_;
  assign _064__S = 0 ;
  logic [0:0] core_wen_C7 ;
  logic [0:0] core_wen_R7 ;
  logic [0:0] core_wen_X7 ;
  logic [0:0] _145__C0 ;
  logic [0:0] _145__R0 ;
  logic [0:0] _145__X0 ;
  assign _064__T = core_wen_T | _145__T ;
  assign core_wen_C7 = _064__C ;
  assign core_wen_X7 = _064__X ;
  assign _145__C0 = _064__C ;
  assign _145__X0 = _064__X ;
  assign core_wen_R7 = ( _064__R | _064__C & _145__T ) & { 1{ _145_ != 0 }} ;
  assign _145__R0 = ( _064__R | _064__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _065_ = _064_ & _112_;
  assign _065__S = 0 ;
  logic [0:0] _064__C0 ;
  logic [0:0] _064__R0 ;
  logic [0:0] _064__X0 ;
  logic [0:0] _112__C1 ;
  logic [0:0] _112__R1 ;
  logic [0:0] _112__X1 ;
  assign _065__T = _064__T | _112__T ;
  assign _064__C0 = _065__C ;
  assign _064__X0 = _065__X ;
  assign _112__C1 = _065__C ;
  assign _112__X1 = _065__X ;
  assign _064__R0 = ( _065__R | _065__C & _112__T ) & { 1{ _112_ != 0 }} ;
  assign _112__R1 = ( _065__R | _065__C & _064__T ) & { 1{ _064_ != 0 }} ;
  assign _066_ = core_wen & _113_;
  assign _066__S = 0 ;
  logic [0:0] core_wen_C8 ;
  logic [0:0] core_wen_R8 ;
  logic [0:0] core_wen_X8 ;
  logic [0:0] _113__C0 ;
  logic [0:0] _113__R0 ;
  logic [0:0] _113__X0 ;
  assign _066__T = core_wen_T | _113__T ;
  assign core_wen_C8 = _066__C ;
  assign core_wen_X8 = _066__X ;
  assign _113__C0 = _066__C ;
  assign _113__X0 = _066__X ;
  assign core_wen_R8 = ( _066__R | _066__C & _113__T ) & { 1{ _113_ != 0 }} ;
  assign _113__R0 = ( _066__R | _066__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _067_ = core_wen & _114_;
  assign _067__S = 0 ;
  logic [0:0] core_wen_C9 ;
  logic [0:0] core_wen_R9 ;
  logic [0:0] core_wen_X9 ;
  logic [0:0] _114__C0 ;
  logic [0:0] _114__R0 ;
  logic [0:0] _114__X0 ;
  assign _067__T = core_wen_T | _114__T ;
  assign core_wen_C9 = _067__C ;
  assign core_wen_X9 = _067__X ;
  assign _114__C0 = _067__C ;
  assign _114__X0 = _067__X ;
  assign core_wen_R9 = ( _067__R | _067__C & _114__T ) & { 1{ _114_ != 0 }} ;
  assign _114__R0 = ( _067__R | _067__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _068_ = _067_ & _115_;
  assign _068__S = 0 ;
  logic [0:0] _067__C0 ;
  logic [0:0] _067__R0 ;
  logic [0:0] _067__X0 ;
  logic [0:0] _115__C0 ;
  logic [0:0] _115__R0 ;
  logic [0:0] _115__X0 ;
  assign _068__T = _067__T | _115__T ;
  assign _067__C0 = _068__C ;
  assign _067__X0 = _068__X ;
  assign _115__C0 = _068__C ;
  assign _115__X0 = _068__X ;
  assign _067__R0 = ( _068__R | _068__C & _115__T ) & { 1{ _115_ != 0 }} ;
  assign _115__R0 = ( _068__R | _068__C & _067__T ) & { 1{ _067_ != 0 }} ;
  assign _069_ = _068_ & mux_tmp;
  assign _069__S = 0 ;
  logic [0:0] _068__C0 ;
  logic [0:0] _068__R0 ;
  logic [0:0] _068__X0 ;
  logic [0:0] mux_tmp_C0 ;
  logic [0:0] mux_tmp_R0 ;
  logic [0:0] mux_tmp_X0 ;
  assign _069__T = _068__T | mux_tmp_T ;
  assign _068__C0 = _069__C ;
  assign _068__X0 = _069__X ;
  assign mux_tmp_C0 = _069__C ;
  assign mux_tmp_X0 = _069__X ;
  assign _068__R0 = ( _069__R | _069__C & mux_tmp_T ) & { 1{ mux_tmp != 0 }} ;
  assign mux_tmp_R0 = ( _069__R | _069__C & _068__T ) & { 1{ _068_ != 0 }} ;
  assign _070_ = _050_ & mux_23_nl;
  assign _070__S = 0 ;
  logic [0:0] _050__C5 ;
  logic [0:0] _050__R5 ;
  logic [0:0] _050__X5 ;
  logic [0:0] mux_23_nl_C0 ;
  logic [0:0] mux_23_nl_R0 ;
  logic [0:0] mux_23_nl_X0 ;
  assign _070__T = _050__T | mux_23_nl_T ;
  assign _050__C5 = _070__C ;
  assign _050__X5 = _070__X ;
  assign mux_23_nl_C0 = _070__C ;
  assign mux_23_nl_X0 = _070__X ;
  assign _050__R5 = ( _070__R | _070__C & mux_23_nl_T ) & { 1{ mux_23_nl != 0 }} ;
  assign mux_23_nl_R0 = ( _070__R | _070__C & _050__T ) & { 1{ _050_ != 0 }} ;
  assign _071_ = core_wen & _149_;
  assign _071__S = 0 ;
  logic [0:0] core_wen_C10 ;
  logic [0:0] core_wen_R10 ;
  logic [0:0] core_wen_X10 ;
  logic [0:0] _149__C0 ;
  logic [0:0] _149__R0 ;
  logic [0:0] _149__X0 ;
  assign _071__T = core_wen_T | _149__T ;
  assign core_wen_C10 = _071__C ;
  assign core_wen_X10 = _071__X ;
  assign _149__C0 = _071__C ;
  assign _149__X0 = _071__X ;
  assign core_wen_R10 = ( _071__R | _071__C & _149__T ) & { 1{ _149_ != 0 }} ;
  assign _149__R0 = ( _071__R | _071__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _072_ = _071_ & mux_tmp_1;
  assign _072__S = 0 ;
  logic [0:0] _071__C0 ;
  logic [0:0] _071__R0 ;
  logic [0:0] _071__X0 ;
  logic [0:0] mux_tmp_1_C0 ;
  logic [0:0] mux_tmp_1_R0 ;
  logic [0:0] mux_tmp_1_X0 ;
  assign _072__T = _071__T | mux_tmp_1_T ;
  assign _071__C0 = _072__C ;
  assign _071__X0 = _072__X ;
  assign mux_tmp_1_C0 = _072__C ;
  assign mux_tmp_1_X0 = _072__X ;
  assign _071__R0 = ( _072__R | _072__C & mux_tmp_1_T ) & { 1{ mux_tmp_1 != 0 }} ;
  assign mux_tmp_1_R0 = ( _072__R | _072__C & _071__T ) & { 1{ _071_ != 0 }} ;
  assign _073_ = _050_ & mux_28_nl;
  assign _073__S = 0 ;
  logic [0:0] _050__C6 ;
  logic [0:0] _050__R6 ;
  logic [0:0] _050__X6 ;
  logic [0:0] mux_28_nl_C0 ;
  logic [0:0] mux_28_nl_R0 ;
  logic [0:0] mux_28_nl_X0 ;
  assign _073__T = _050__T | mux_28_nl_T ;
  assign _050__C6 = _073__C ;
  assign _050__X6 = _073__X ;
  assign mux_28_nl_C0 = _073__C ;
  assign mux_28_nl_X0 = _073__X ;
  assign _050__R6 = ( _073__R | _073__C & mux_28_nl_T ) & { 1{ mux_28_nl != 0 }} ;
  assign mux_28_nl_R0 = ( _073__R | _073__C & _050__T ) & { 1{ _050_ != 0 }} ;
  assign _074_ = _050_ & _116_;
  assign _074__S = 0 ;
  logic [0:0] _050__C7 ;
  logic [0:0] _050__R7 ;
  logic [0:0] _050__X7 ;
  logic [0:0] _116__C0 ;
  logic [0:0] _116__R0 ;
  logic [0:0] _116__X0 ;
  assign _074__T = _050__T | _116__T ;
  assign _050__C7 = _074__C ;
  assign _050__X7 = _074__X ;
  assign _116__C0 = _074__C ;
  assign _116__X0 = _074__X ;
  assign _050__R7 = ( _074__R | _074__C & _116__T ) & { 1{ _116_ != 0 }} ;
  assign _116__R0 = ( _074__R | _074__C & _050__T ) & { 1{ _050_ != 0 }} ;
  assign FpBitsToFloat_8U_23U_1_and_nl = _118_ & chn_o_rsci_d_30_23_mx0c1;
  assign FpBitsToFloat_8U_23U_1_and_nl_S = 0 ;
  logic [0:0] _118__C0 ;
  logic [0:0] _118__R0 ;
  logic [0:0] _118__X0 ;
  logic [0:0] chn_o_rsci_d_30_23_mx0c1_C0 ;
  logic [0:0] chn_o_rsci_d_30_23_mx0c1_R0 ;
  logic [0:0] chn_o_rsci_d_30_23_mx0c1_X0 ;
  assign FpBitsToFloat_8U_23U_1_and_nl_T = _118__T | chn_o_rsci_d_30_23_mx0c1_T ;
  assign _118__C0 = FpBitsToFloat_8U_23U_1_and_nl_C ;
  assign _118__X0 = FpBitsToFloat_8U_23U_1_and_nl_X ;
  assign chn_o_rsci_d_30_23_mx0c1_C0 = FpBitsToFloat_8U_23U_1_and_nl_C ;
  assign chn_o_rsci_d_30_23_mx0c1_X0 = FpBitsToFloat_8U_23U_1_and_nl_X ;
  assign _118__R0 = ( FpBitsToFloat_8U_23U_1_and_nl_R | FpBitsToFloat_8U_23U_1_and_nl_C & chn_o_rsci_d_30_23_mx0c1_T ) & { 1{ chn_o_rsci_d_30_23_mx0c1 != 0 }} ;
  assign chn_o_rsci_d_30_23_mx0c1_R0 = ( FpBitsToFloat_8U_23U_1_and_nl_R | FpBitsToFloat_8U_23U_1_and_nl_C & _118__T ) & { 1{ _118_ != 0 }} ;
  assign _075_ = FpMul_8U_23U_else_2_if_acc_nl[8] & _151_;
  assign _075__S = 0 ;
  assign { FpMul_8U_23U_else_2_if_acc_nl_R0 [0], FpMul_8U_23U_else_2_if_acc_nl_R0 [1], FpMul_8U_23U_else_2_if_acc_nl_R0 [2], FpMul_8U_23U_else_2_if_acc_nl_R0 [3], FpMul_8U_23U_else_2_if_acc_nl_R0 [4], FpMul_8U_23U_else_2_if_acc_nl_R0 [5], FpMul_8U_23U_else_2_if_acc_nl_R0 [6], FpMul_8U_23U_else_2_if_acc_nl_R0 [7] } = 0;
  assign { FpMul_8U_23U_else_2_if_acc_nl_X0 [0], FpMul_8U_23U_else_2_if_acc_nl_X0 [1], FpMul_8U_23U_else_2_if_acc_nl_X0 [2], FpMul_8U_23U_else_2_if_acc_nl_X0 [3], FpMul_8U_23U_else_2_if_acc_nl_X0 [4], FpMul_8U_23U_else_2_if_acc_nl_X0 [5], FpMul_8U_23U_else_2_if_acc_nl_X0 [6], FpMul_8U_23U_else_2_if_acc_nl_X0 [7] } = 0;
  assign { FpMul_8U_23U_else_2_if_acc_nl_C0 [0], FpMul_8U_23U_else_2_if_acc_nl_C0 [1], FpMul_8U_23U_else_2_if_acc_nl_C0 [2], FpMul_8U_23U_else_2_if_acc_nl_C0 [3], FpMul_8U_23U_else_2_if_acc_nl_C0 [4], FpMul_8U_23U_else_2_if_acc_nl_C0 [5], FpMul_8U_23U_else_2_if_acc_nl_C0 [6], FpMul_8U_23U_else_2_if_acc_nl_C0 [7] } = 0;
  logic [8:0] FpMul_8U_23U_else_2_if_acc_nl_C1 ;
  logic [8:0] FpMul_8U_23U_else_2_if_acc_nl_R1 ;
  logic [8:0] FpMul_8U_23U_else_2_if_acc_nl_X1 ;
  logic [0:0] _151__C0 ;
  logic [0:0] _151__R0 ;
  logic [0:0] _151__X0 ;
  assign _075__T = FpMul_8U_23U_else_2_if_acc_nl_T [8] | _151__T ;
  assign FpMul_8U_23U_else_2_if_acc_nl_C1 [8] = _075__C ;
  assign FpMul_8U_23U_else_2_if_acc_nl_X1 [8] = _075__X ;
  assign _151__C0 = _075__C ;
  assign _151__X0 = _075__X ;
  assign FpMul_8U_23U_else_2_if_acc_nl_R1 [8] = ( _075__R | _075__C & _151__T ) & { 1{ _151_ != 0 }} ;
  assign _151__R0 = ( _075__R | _075__C & FpMul_8U_23U_else_2_if_acc_nl_T [8] ) & { 1{ FpMul_8U_23U_else_2_if_acc_nl[8] != 0 }} ;
  assign and_10_nl = main_stage_v_1 & mux_tmp_10;
  assign and_10_nl_S = 0 ;
  logic [0:0] main_stage_v_1_C0 ;
  logic [0:0] main_stage_v_1_R0 ;
  logic [0:0] main_stage_v_1_X0 ;
  logic [0:0] mux_tmp_10_C0 ;
  logic [0:0] mux_tmp_10_R0 ;
  logic [0:0] mux_tmp_10_X0 ;
  assign and_10_nl_T = main_stage_v_1_T | mux_tmp_10_T ;
  assign main_stage_v_1_C0 = and_10_nl_C ;
  assign main_stage_v_1_X0 = and_10_nl_X ;
  assign mux_tmp_10_C0 = and_10_nl_C ;
  assign mux_tmp_10_X0 = and_10_nl_X ;
  assign main_stage_v_1_R0 = ( and_10_nl_R | and_10_nl_C & mux_tmp_10_T ) & { 1{ mux_tmp_10 != 0 }} ;
  assign mux_tmp_10_R0 = ( and_10_nl_R | and_10_nl_C & main_stage_v_1_T ) & { 1{ main_stage_v_1 != 0 }} ;
  assign and_11_nl = main_stage_v_1 & mux_tmp_14;
  assign and_11_nl_S = 0 ;
  logic [0:0] main_stage_v_1_C1 ;
  logic [0:0] main_stage_v_1_R1 ;
  logic [0:0] main_stage_v_1_X1 ;
  logic [0:0] mux_tmp_14_C0 ;
  logic [0:0] mux_tmp_14_R0 ;
  logic [0:0] mux_tmp_14_X0 ;
  assign and_11_nl_T = main_stage_v_1_T | mux_tmp_14_T ;
  assign main_stage_v_1_C1 = and_11_nl_C ;
  assign main_stage_v_1_X1 = and_11_nl_X ;
  assign mux_tmp_14_C0 = and_11_nl_C ;
  assign mux_tmp_14_X0 = and_11_nl_X ;
  assign main_stage_v_1_R1 = ( and_11_nl_R | and_11_nl_C & mux_tmp_14_T ) & { 1{ mux_tmp_14 != 0 }} ;
  assign mux_tmp_14_R0 = ( and_11_nl_R | and_11_nl_C & main_stage_v_1_T ) & { 1{ main_stage_v_1 != 0 }} ;
  assign and_93_nl = nand_8_cse & mux_24_cse;
  assign and_93_nl_S = 0 ;
  logic [0:0] nand_8_cse_C0 ;
  logic [0:0] nand_8_cse_R0 ;
  logic [0:0] nand_8_cse_X0 ;
  logic [0:0] mux_24_cse_C0 ;
  logic [0:0] mux_24_cse_R0 ;
  logic [0:0] mux_24_cse_X0 ;
  assign and_93_nl_T = nand_8_cse_T | mux_24_cse_T ;
  assign nand_8_cse_C0 = and_93_nl_C ;
  assign nand_8_cse_X0 = and_93_nl_X ;
  assign mux_24_cse_C0 = and_93_nl_C ;
  assign mux_24_cse_X0 = and_93_nl_X ;
  assign nand_8_cse_R0 = ( and_93_nl_R | and_93_nl_C & mux_24_cse_T ) & { 1{ mux_24_cse != 0 }} ;
  assign mux_24_cse_R0 = ( and_93_nl_R | and_93_nl_C & nand_8_cse_T ) & { 1{ nand_8_cse != 0 }} ;
  assign _076_ = _094_ & mux_24_cse;
  assign _076__S = 0 ;
  logic [0:0] _094__C0 ;
  logic [0:0] _094__R0 ;
  logic [0:0] _094__X0 ;
  logic [0:0] mux_24_cse_C1 ;
  logic [0:0] mux_24_cse_R1 ;
  logic [0:0] mux_24_cse_X1 ;
  assign _076__T = _094__T | mux_24_cse_T ;
  assign _094__C0 = _076__C ;
  assign _094__X0 = _076__X ;
  assign mux_24_cse_C1 = _076__C ;
  assign mux_24_cse_X1 = _076__X ;
  assign _094__R0 = ( _076__R | _076__C & mux_24_cse_T ) & { 1{ mux_24_cse != 0 }} ;
  assign mux_24_cse_R1 = ( _076__R | _076__C & _094__T ) & { 1{ _094_ != 0 }} ;
  assign _077_ = _164_ & main_stage_v_1;
  assign _077__S = 0 ;
  logic [0:0] _164__C0 ;
  logic [0:0] _164__R0 ;
  logic [0:0] _164__X0 ;
  logic [0:0] main_stage_v_1_C2 ;
  logic [0:0] main_stage_v_1_R2 ;
  logic [0:0] main_stage_v_1_X2 ;
  assign _077__T = _164__T | main_stage_v_1_T ;
  assign _164__C0 = _077__C ;
  assign _164__X0 = _077__X ;
  assign main_stage_v_1_C2 = _077__C ;
  assign main_stage_v_1_X2 = _077__X ;
  assign _164__R0 = ( _077__R | _077__C & main_stage_v_1_T ) & { 1{ main_stage_v_1 != 0 }} ;
  assign main_stage_v_1_R2 = ( _077__R | _077__C & _164__T ) & { 1{ _164_ != 0 }} ;
  assign _078_ = FpMul_8U_23U_xor_1_nl & and_65_rgt;
  assign _078__S = 0 ;
  logic [0:0] FpMul_8U_23U_xor_1_nl_C0 ;
  logic [0:0] FpMul_8U_23U_xor_1_nl_R0 ;
  logic [0:0] FpMul_8U_23U_xor_1_nl_X0 ;
  logic [0:0] and_65_rgt_C0 ;
  logic [0:0] and_65_rgt_R0 ;
  logic [0:0] and_65_rgt_X0 ;
  assign _078__T = FpMul_8U_23U_xor_1_nl_T | and_65_rgt_T ;
  assign FpMul_8U_23U_xor_1_nl_C0 = _078__C ;
  assign FpMul_8U_23U_xor_1_nl_X0 = _078__X ;
  assign and_65_rgt_C0 = _078__C ;
  assign and_65_rgt_X0 = _078__X ;
  assign FpMul_8U_23U_xor_1_nl_R0 = ( _078__R | _078__C & and_65_rgt_T ) & { 1{ and_65_rgt != 0 }} ;
  assign and_65_rgt_R0 = ( _078__R | _078__C & FpMul_8U_23U_xor_1_nl_T ) & { 1{ FpMul_8U_23U_xor_1_nl != 0 }} ;
  assign _079_ = chn_b_rsci_d_mxwt[31] & and_64_rgt;
  assign _079__S = 0 ;
  logic [0:0] and_64_rgt_C0 ;
  logic [0:0] and_64_rgt_R0 ;
  logic [0:0] and_64_rgt_X0 ;
  assign _079__T = chn_b_rsci_d_mxwt_T [31] | and_64_rgt_T ;
  assign chn_b_rsci_d_mxwt_C1 [31] = _079__C ;
  assign chn_b_rsci_d_mxwt_X1 [31] = _079__X ;
  assign and_64_rgt_C0 = _079__C ;
  assign and_64_rgt_X0 = _079__X ;
  assign chn_b_rsci_d_mxwt_R1 [31] = ( _079__R | _079__C & and_64_rgt_T ) & { 1{ and_64_rgt != 0 }} ;
  assign and_64_rgt_R0 = ( _079__R | _079__C & chn_b_rsci_d_mxwt_T [31] ) & { 1{ chn_b_rsci_d_mxwt[31] != 0 }} ;
  assign _080_ = chn_a_rsci_d_mxwt[31] & and_54_rgt;
  assign _080__S = 0 ;
  logic [0:0] and_54_rgt_C0 ;
  logic [0:0] and_54_rgt_R0 ;
  logic [0:0] and_54_rgt_X0 ;
  assign _080__T = chn_a_rsci_d_mxwt_T [31] | and_54_rgt_T ;
  assign chn_a_rsci_d_mxwt_C1 [31] = _080__C ;
  assign chn_a_rsci_d_mxwt_X1 [31] = _080__X ;
  assign and_54_rgt_C0 = _080__C ;
  assign and_54_rgt_X0 = _080__X ;
  assign chn_a_rsci_d_mxwt_R1 [31] = ( _080__R | _080__C & and_54_rgt_T ) & { 1{ and_54_rgt != 0 }} ;
  assign and_54_rgt_R0 = ( _080__R | _080__C & chn_a_rsci_d_mxwt_T [31] ) & { 1{ chn_a_rsci_d_mxwt[31] != 0 }} ;
  logic [7:0] fangyuan2;
  logic [7:0] fangyuan2_T ;
  logic [7:0] fangyuan2_R ;
  logic [7:0] fangyuan2_C ;
  logic [7:0] fangyuan2_X ;
  assign fangyuan2 = { FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl, FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl, FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl, FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl, FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl, FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl, FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl, FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl };
  assign fangyuan2_T = {  FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_T , FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_T , FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_T , FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_T , FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_T , FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_T , FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_T , FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_T  };
  logic [13:0] fangyuan2_S ;
  assign fangyuan2_S = 0 ;
  logic [0:0] FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_R0 ;
  logic [0:0] FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_X0 ;
  logic [0:0] FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_C0 ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_R0 = fangyuan2_R [7:7] ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_X0 = fangyuan2_X [7:7] ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_C0 = fangyuan2_C [7:7] ;
  logic [0:0] FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_R1 ;
  logic [0:0] FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_X1 ;
  logic [0:0] FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_C1 ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_R1 = fangyuan2_R [6:6] ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_X1 = fangyuan2_X [6:6] ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_C1 = fangyuan2_C [6:6] ;
  logic [0:0] FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_R2 ;
  logic [0:0] FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_X2 ;
  logic [0:0] FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_C2 ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_R2 = fangyuan2_R [5:5] ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_X2 = fangyuan2_X [5:5] ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_C2 = fangyuan2_C [5:5] ;
  logic [0:0] FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_R3 ;
  logic [0:0] FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_X3 ;
  logic [0:0] FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_C3 ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_R3 = fangyuan2_R [4:4] ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_X3 = fangyuan2_X [4:4] ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_C3 = fangyuan2_C [4:4] ;
  logic [0:0] FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_R4 ;
  logic [0:0] FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_X4 ;
  logic [0:0] FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_C4 ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_R4 = fangyuan2_R [3:3] ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_X4 = fangyuan2_X [3:3] ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_C4 = fangyuan2_C [3:3] ;
  logic [0:0] FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_R5 ;
  logic [0:0] FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_X5 ;
  logic [0:0] FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_C5 ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_R5 = fangyuan2_R [2:2] ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_X5 = fangyuan2_X [2:2] ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_C5 = fangyuan2_C [2:2] ;
  logic [0:0] FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_R6 ;
  logic [0:0] FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_X6 ;
  logic [0:0] FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_C6 ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_R6 = fangyuan2_R [1:1] ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_X6 = fangyuan2_X [1:1] ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_C6 = fangyuan2_C [1:1] ;
  logic [0:0] FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_R7 ;
  logic [0:0] FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_X7 ;
  logic [0:0] FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_C7 ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_R7 = fangyuan2_R [0:0] ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_X7 = fangyuan2_X [0:0] ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_C7 = fangyuan2_C [0:0] ;

  assign _081_ = FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1 & fangyuan2;
  assign _081__S = 0 ;
  logic [7:0] FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_C0 ;
  logic [7:0] FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_R0 ;
  logic [7:0] FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_X0 ;
  logic [7:0] fangyuan2_C0 ;
  logic [7:0] fangyuan2_R0 ;
  logic [7:0] fangyuan2_X0 ;
  assign _081__T = FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_T | fangyuan2_T ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_C0 = _081__C ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_X0 = _081__X ;
  assign fangyuan2_C0 = _081__C ;
  assign fangyuan2_X0 = _081__X ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_R0 = ( _081__R | _081__C & fangyuan2_T ) & { 8{ fangyuan2 != 0 }} ;
  assign fangyuan2_R0 = ( _081__R | _081__C & FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_T ) & { 8{ FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1 != 0 }} ;
  logic [7:0] fangyuan3;
  logic [7:0] fangyuan3_T ;
  logic [7:0] fangyuan3_R ;
  logic [7:0] fangyuan3_C ;
  logic [7:0] fangyuan3_X ;
  assign fangyuan3 = { FpMul_8U_23U_or_1_nl, FpMul_8U_23U_or_1_nl, FpMul_8U_23U_or_1_nl, FpMul_8U_23U_or_1_nl, FpMul_8U_23U_or_1_nl, FpMul_8U_23U_or_1_nl, FpMul_8U_23U_or_1_nl, FpMul_8U_23U_or_1_nl };
  assign fangyuan3_T = {  FpMul_8U_23U_or_1_nl_T , FpMul_8U_23U_or_1_nl_T , FpMul_8U_23U_or_1_nl_T , FpMul_8U_23U_or_1_nl_T , FpMul_8U_23U_or_1_nl_T , FpMul_8U_23U_or_1_nl_T , FpMul_8U_23U_or_1_nl_T , FpMul_8U_23U_or_1_nl_T  };
  logic [13:0] fangyuan3_S ;
  assign fangyuan3_S = 0 ;
  logic [0:0] FpMul_8U_23U_or_1_nl_R0 ;
  logic [0:0] FpMul_8U_23U_or_1_nl_X0 ;
  logic [0:0] FpMul_8U_23U_or_1_nl_C0 ;
  assign FpMul_8U_23U_or_1_nl_R0 = fangyuan3_R [7:7] ;
  assign FpMul_8U_23U_or_1_nl_X0 = fangyuan3_X [7:7] ;
  assign FpMul_8U_23U_or_1_nl_C0 = fangyuan3_C [7:7] ;
  logic [0:0] FpMul_8U_23U_or_1_nl_R1 ;
  logic [0:0] FpMul_8U_23U_or_1_nl_X1 ;
  logic [0:0] FpMul_8U_23U_or_1_nl_C1 ;
  assign FpMul_8U_23U_or_1_nl_R1 = fangyuan3_R [6:6] ;
  assign FpMul_8U_23U_or_1_nl_X1 = fangyuan3_X [6:6] ;
  assign FpMul_8U_23U_or_1_nl_C1 = fangyuan3_C [6:6] ;
  logic [0:0] FpMul_8U_23U_or_1_nl_R2 ;
  logic [0:0] FpMul_8U_23U_or_1_nl_X2 ;
  logic [0:0] FpMul_8U_23U_or_1_nl_C2 ;
  assign FpMul_8U_23U_or_1_nl_R2 = fangyuan3_R [5:5] ;
  assign FpMul_8U_23U_or_1_nl_X2 = fangyuan3_X [5:5] ;
  assign FpMul_8U_23U_or_1_nl_C2 = fangyuan3_C [5:5] ;
  logic [0:0] FpMul_8U_23U_or_1_nl_R3 ;
  logic [0:0] FpMul_8U_23U_or_1_nl_X3 ;
  logic [0:0] FpMul_8U_23U_or_1_nl_C3 ;
  assign FpMul_8U_23U_or_1_nl_R3 = fangyuan3_R [4:4] ;
  assign FpMul_8U_23U_or_1_nl_X3 = fangyuan3_X [4:4] ;
  assign FpMul_8U_23U_or_1_nl_C3 = fangyuan3_C [4:4] ;
  logic [0:0] FpMul_8U_23U_or_1_nl_R4 ;
  logic [0:0] FpMul_8U_23U_or_1_nl_X4 ;
  logic [0:0] FpMul_8U_23U_or_1_nl_C4 ;
  assign FpMul_8U_23U_or_1_nl_R4 = fangyuan3_R [3:3] ;
  assign FpMul_8U_23U_or_1_nl_X4 = fangyuan3_X [3:3] ;
  assign FpMul_8U_23U_or_1_nl_C4 = fangyuan3_C [3:3] ;
  logic [0:0] FpMul_8U_23U_or_1_nl_R5 ;
  logic [0:0] FpMul_8U_23U_or_1_nl_X5 ;
  logic [0:0] FpMul_8U_23U_or_1_nl_C5 ;
  assign FpMul_8U_23U_or_1_nl_R5 = fangyuan3_R [2:2] ;
  assign FpMul_8U_23U_or_1_nl_X5 = fangyuan3_X [2:2] ;
  assign FpMul_8U_23U_or_1_nl_C5 = fangyuan3_C [2:2] ;
  logic [0:0] FpMul_8U_23U_or_1_nl_R6 ;
  logic [0:0] FpMul_8U_23U_or_1_nl_X6 ;
  logic [0:0] FpMul_8U_23U_or_1_nl_C6 ;
  assign FpMul_8U_23U_or_1_nl_R6 = fangyuan3_R [1:1] ;
  assign FpMul_8U_23U_or_1_nl_X6 = fangyuan3_X [1:1] ;
  assign FpMul_8U_23U_or_1_nl_C6 = fangyuan3_C [1:1] ;
  logic [0:0] FpMul_8U_23U_or_1_nl_R7 ;
  logic [0:0] FpMul_8U_23U_or_1_nl_X7 ;
  logic [0:0] FpMul_8U_23U_or_1_nl_C7 ;
  assign FpMul_8U_23U_or_1_nl_R7 = fangyuan3_R [0:0] ;
  assign FpMul_8U_23U_or_1_nl_X7 = fangyuan3_X [0:0] ;
  assign FpMul_8U_23U_or_1_nl_C7 = fangyuan3_C [0:0] ;

  assign _082_ = 8'b11111110 & fangyuan3;
  assign _082__S = 0 ;
  logic [7:0] fangyuan3_C0 ;
  logic [7:0] fangyuan3_R0 ;
  logic [7:0] fangyuan3_X0 ;
  assign _082__T = fangyuan3_T ;
  assign fangyuan3_C0 = _082__C ;
  assign fangyuan3_R0 = _082__R ;
  assign fangyuan3_X0 = _082__X ;
  logic [7:0] fangyuan4;
  logic [7:0] fangyuan4_T ;
  logic [7:0] fangyuan4_R ;
  logic [7:0] fangyuan4_C ;
  logic [7:0] fangyuan4_X ;
  assign fangyuan4 = { FpMul_8U_23U_FpMul_8U_23U_nor_1_nl, FpMul_8U_23U_FpMul_8U_23U_nor_1_nl, FpMul_8U_23U_FpMul_8U_23U_nor_1_nl, FpMul_8U_23U_FpMul_8U_23U_nor_1_nl, FpMul_8U_23U_FpMul_8U_23U_nor_1_nl, FpMul_8U_23U_FpMul_8U_23U_nor_1_nl, FpMul_8U_23U_FpMul_8U_23U_nor_1_nl, FpMul_8U_23U_FpMul_8U_23U_nor_1_nl };
  assign fangyuan4_T = {  FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_T , FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_T , FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_T , FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_T , FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_T , FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_T , FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_T , FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_T  };
  logic [13:0] fangyuan4_S ;
  assign fangyuan4_S = 0 ;
  logic [0:0] FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_R0 ;
  logic [0:0] FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X0 ;
  logic [0:0] FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_C0 ;
  assign FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_R0 = fangyuan4_R [7:7] ;
  assign FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X0 = fangyuan4_X [7:7] ;
  assign FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_C0 = fangyuan4_C [7:7] ;
  logic [0:0] FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_R1 ;
  logic [0:0] FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X1 ;
  logic [0:0] FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_C1 ;
  assign FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_R1 = fangyuan4_R [6:6] ;
  assign FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X1 = fangyuan4_X [6:6] ;
  assign FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_C1 = fangyuan4_C [6:6] ;
  logic [0:0] FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_R2 ;
  logic [0:0] FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X2 ;
  logic [0:0] FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_C2 ;
  assign FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_R2 = fangyuan4_R [5:5] ;
  assign FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X2 = fangyuan4_X [5:5] ;
  assign FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_C2 = fangyuan4_C [5:5] ;
  logic [0:0] FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_R3 ;
  logic [0:0] FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X3 ;
  logic [0:0] FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_C3 ;
  assign FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_R3 = fangyuan4_R [4:4] ;
  assign FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X3 = fangyuan4_X [4:4] ;
  assign FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_C3 = fangyuan4_C [4:4] ;
  logic [0:0] FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_R4 ;
  logic [0:0] FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X4 ;
  logic [0:0] FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_C4 ;
  assign FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_R4 = fangyuan4_R [3:3] ;
  assign FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X4 = fangyuan4_X [3:3] ;
  assign FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_C4 = fangyuan4_C [3:3] ;
  logic [0:0] FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_R5 ;
  logic [0:0] FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X5 ;
  logic [0:0] FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_C5 ;
  assign FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_R5 = fangyuan4_R [2:2] ;
  assign FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X5 = fangyuan4_X [2:2] ;
  assign FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_C5 = fangyuan4_C [2:2] ;
  logic [0:0] FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_R6 ;
  logic [0:0] FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X6 ;
  logic [0:0] FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_C6 ;
  assign FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_R6 = fangyuan4_R [1:1] ;
  assign FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X6 = fangyuan4_X [1:1] ;
  assign FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_C6 = fangyuan4_C [1:1] ;
  logic [0:0] FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_R7 ;
  logic [0:0] FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X7 ;
  logic [0:0] FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_C7 ;
  assign FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_R7 = fangyuan4_R [0:0] ;
  assign FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X7 = fangyuan4_X [0:0] ;
  assign FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_C7 = fangyuan4_C [0:0] ;

  assign _083_ = FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0 & fangyuan4;
  assign _083__S = 0 ;
  logic [7:0] FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_C1 ;
  logic [7:0] FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_R1 ;
  logic [7:0] FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_X1 ;
  logic [7:0] fangyuan4_C0 ;
  logic [7:0] fangyuan4_R0 ;
  logic [7:0] fangyuan4_X0 ;
  assign _083__T = FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_T | fangyuan4_T ;
  assign FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_C1 = _083__C ;
  assign FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_X1 = _083__X ;
  assign fangyuan4_C0 = _083__C ;
  assign fangyuan4_X0 = _083__X ;
  assign FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_R1 = ( _083__R | _083__C & fangyuan4_T ) & { 8{ fangyuan4 != 0 }} ;
  assign fangyuan4_R0 = ( _083__R | _083__C & FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_T ) & { 8{ FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0 != 0 }} ;
  assign chn_o_and_cse = core_wen & _125_;
  assign chn_o_and_cse_S = 0 ;
  logic [0:0] core_wen_C11 ;
  logic [0:0] core_wen_R11 ;
  logic [0:0] core_wen_X11 ;
  logic [0:0] _125__C0 ;
  logic [0:0] _125__R0 ;
  logic [0:0] _125__X0 ;
  assign chn_o_and_cse_T = core_wen_T | _125__T ;
  assign core_wen_C11 = chn_o_and_cse_C ;
  assign core_wen_X11 = chn_o_and_cse_X ;
  assign _125__C0 = chn_o_and_cse_C ;
  assign _125__X0 = chn_o_and_cse_X ;
  assign core_wen_R11 = ( chn_o_and_cse_R | chn_o_and_cse_C & _125__T ) & { 1{ _125_ != 0 }} ;
  assign _125__R0 = ( chn_o_and_cse_R | chn_o_and_cse_C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _050_ = core_wen & _106_;
  assign _050__S = 0 ;
  logic [0:0] core_wen_C12 ;
  logic [0:0] core_wen_R12 ;
  logic [0:0] core_wen_X12 ;
  logic [0:0] _106__C0 ;
  logic [0:0] _106__R0 ;
  logic [0:0] _106__X0 ;
  assign _050__T = core_wen_T | _106__T ;
  assign core_wen_C12 = _050__C ;
  assign core_wen_X12 = _050__X ;
  assign _106__C0 = _050__C ;
  assign _106__X0 = _050__X ;
  assign core_wen_R12 = ( _050__R | _050__C & _106__T ) & { 1{ _106_ != 0 }} ;
  assign _106__R0 = ( _050__R | _050__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign IsNaN_8U_23U_aelse_and_cse = _050_ & mux_tmp_1;
  assign IsNaN_8U_23U_aelse_and_cse_S = 0 ;
  logic [0:0] _050__C8 ;
  logic [0:0] _050__R8 ;
  logic [0:0] _050__X8 ;
  logic [0:0] mux_tmp_1_C1 ;
  logic [0:0] mux_tmp_1_R1 ;
  logic [0:0] mux_tmp_1_X1 ;
  assign IsNaN_8U_23U_aelse_and_cse_T = _050__T | mux_tmp_1_T ;
  assign _050__C8 = IsNaN_8U_23U_aelse_and_cse_C ;
  assign _050__X8 = IsNaN_8U_23U_aelse_and_cse_X ;
  assign mux_tmp_1_C1 = IsNaN_8U_23U_aelse_and_cse_C ;
  assign mux_tmp_1_X1 = IsNaN_8U_23U_aelse_and_cse_X ;
  assign _050__R8 = ( IsNaN_8U_23U_aelse_and_cse_R | IsNaN_8U_23U_aelse_and_cse_C & mux_tmp_1_T ) & { 1{ mux_tmp_1 != 0 }} ;
  assign mux_tmp_1_R1 = ( IsNaN_8U_23U_aelse_and_cse_R | IsNaN_8U_23U_aelse_and_cse_C & _050__T ) & { 1{ _050_ != 0 }} ;
  assign and_41_rgt = or_10_cse & or_29_cse;
  assign and_41_rgt_S = 0 ;
  logic [0:0] or_10_cse_C2 ;
  logic [0:0] or_10_cse_R2 ;
  logic [0:0] or_10_cse_X2 ;
  logic [0:0] or_29_cse_C0 ;
  logic [0:0] or_29_cse_R0 ;
  logic [0:0] or_29_cse_X0 ;
  assign and_41_rgt_T = or_10_cse_T | or_29_cse_T ;
  assign or_10_cse_C2 = and_41_rgt_C ;
  assign or_10_cse_X2 = and_41_rgt_X ;
  assign or_29_cse_C0 = and_41_rgt_C ;
  assign or_29_cse_X0 = and_41_rgt_X ;
  assign or_10_cse_R2 = ( and_41_rgt_R | and_41_rgt_C & or_29_cse_T ) & { 1{ or_29_cse != 0 }} ;
  assign or_29_cse_R0 = ( and_41_rgt_R | and_41_rgt_C & or_10_cse_T ) & { 1{ or_10_cse != 0 }} ;
  assign _084_ = or_10_cse & _128_;
  assign _084__S = 0 ;
  logic [0:0] or_10_cse_C3 ;
  logic [0:0] or_10_cse_R3 ;
  logic [0:0] or_10_cse_X3 ;
  logic [0:0] _128__C0 ;
  logic [0:0] _128__R0 ;
  logic [0:0] _128__X0 ;
  assign _084__T = or_10_cse_T | _128__T ;
  assign or_10_cse_C3 = _084__C ;
  assign or_10_cse_X3 = _084__X ;
  assign _128__C0 = _084__C ;
  assign _128__X0 = _084__X ;
  assign or_10_cse_R3 = ( _084__R | _084__C & _128__T ) & { 1{ _128_ != 0 }} ;
  assign _128__R0 = ( _084__R | _084__C & or_10_cse_T ) & { 1{ or_10_cse != 0 }} ;
  assign IsNaN_8U_23U_1_aelse_and_cse = _050_ & mux_tmp_4;
  assign IsNaN_8U_23U_1_aelse_and_cse_S = 0 ;
  logic [0:0] _050__C9 ;
  logic [0:0] _050__R9 ;
  logic [0:0] _050__X9 ;
  logic [0:0] mux_tmp_4_C1 ;
  logic [0:0] mux_tmp_4_R1 ;
  logic [0:0] mux_tmp_4_X1 ;
  assign IsNaN_8U_23U_1_aelse_and_cse_T = _050__T | mux_tmp_4_T ;
  assign _050__C9 = IsNaN_8U_23U_1_aelse_and_cse_C ;
  assign _050__X9 = IsNaN_8U_23U_1_aelse_and_cse_X ;
  assign mux_tmp_4_C1 = IsNaN_8U_23U_1_aelse_and_cse_C ;
  assign mux_tmp_4_X1 = IsNaN_8U_23U_1_aelse_and_cse_X ;
  assign _050__R9 = ( IsNaN_8U_23U_1_aelse_and_cse_R | IsNaN_8U_23U_1_aelse_and_cse_C & mux_tmp_4_T ) & { 1{ mux_tmp_4 != 0 }} ;
  assign mux_tmp_4_R1 = ( IsNaN_8U_23U_1_aelse_and_cse_R | IsNaN_8U_23U_1_aelse_and_cse_C & _050__T ) & { 1{ _050_ != 0 }} ;
  assign and_45_rgt = or_10_cse & FpMul_8U_23U_lor_1_lpi_1_dfm_st_3;
  assign and_45_rgt_S = 0 ;
  logic [0:0] or_10_cse_C4 ;
  logic [0:0] or_10_cse_R4 ;
  logic [0:0] or_10_cse_X4 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_C0 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_R0 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_X0 ;
  assign and_45_rgt_T = or_10_cse_T | FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_T ;
  assign or_10_cse_C4 = and_45_rgt_C ;
  assign or_10_cse_X4 = and_45_rgt_X ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_C0 = and_45_rgt_C ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_X0 = and_45_rgt_X ;
  assign or_10_cse_R4 = ( and_45_rgt_R | and_45_rgt_C & FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_T ) & { 1{ FpMul_8U_23U_lor_1_lpi_1_dfm_st_3 != 0 }} ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_R0 = ( and_45_rgt_R | and_45_rgt_C & or_10_cse_T ) & { 1{ or_10_cse != 0 }} ;
  assign _085_ = or_10_cse & and_91_nl;
  assign _085__S = 0 ;
  logic [0:0] or_10_cse_C5 ;
  logic [0:0] or_10_cse_R5 ;
  logic [0:0] or_10_cse_X5 ;
  logic [0:0] and_91_nl_C0 ;
  logic [0:0] and_91_nl_R0 ;
  logic [0:0] and_91_nl_X0 ;
  assign _085__T = or_10_cse_T | and_91_nl_T ;
  assign or_10_cse_C5 = _085__C ;
  assign or_10_cse_X5 = _085__X ;
  assign and_91_nl_C0 = _085__C ;
  assign and_91_nl_X0 = _085__X ;
  assign or_10_cse_R5 = ( _085__R | _085__C & and_91_nl_T ) & { 1{ and_91_nl != 0 }} ;
  assign and_91_nl_R0 = ( _085__R | _085__C & or_10_cse_T ) & { 1{ or_10_cse != 0 }} ;
  assign and_54_rgt = _085_ & _097_;
  assign and_54_rgt_S = 0 ;
  logic [0:0] _085__C0 ;
  logic [0:0] _085__R0 ;
  logic [0:0] _085__X0 ;
  logic [0:0] _097__C0 ;
  logic [0:0] _097__R0 ;
  logic [0:0] _097__X0 ;
  assign and_54_rgt_T = _085__T | _097__T ;
  assign _085__C0 = and_54_rgt_C ;
  assign _085__X0 = and_54_rgt_X ;
  assign _097__C0 = and_54_rgt_C ;
  assign _097__X0 = and_54_rgt_X ;
  assign _085__R0 = ( and_54_rgt_R | and_54_rgt_C & _097__T ) & { 1{ _097_ != 0 }} ;
  assign _097__R0 = ( and_54_rgt_R | and_54_rgt_C & _085__T ) & { 1{ _085_ != 0 }} ;
  assign _086_ = _170_ & _094_;
  assign _086__S = 0 ;
  logic [0:0] _170__C0 ;
  logic [0:0] _170__R0 ;
  logic [0:0] _170__X0 ;
  logic [0:0] _094__C1 ;
  logic [0:0] _094__R1 ;
  logic [0:0] _094__X1 ;
  assign _086__T = _170__T | _094__T ;
  assign _170__C0 = _086__C ;
  assign _170__X0 = _086__X ;
  assign _094__C1 = _086__C ;
  assign _094__X1 = _086__X ;
  assign _170__R0 = ( _086__R | _086__C & _094__T ) & { 1{ _094_ != 0 }} ;
  assign _094__R1 = ( _086__R | _086__C & _170__T ) & { 1{ _170_ != 0 }} ;
  assign _087_ = _086_ & _098_;
  assign _087__S = 0 ;
  logic [0:0] _086__C0 ;
  logic [0:0] _086__R0 ;
  logic [0:0] _086__X0 ;
  logic [0:0] _098__C0 ;
  logic [0:0] _098__R0 ;
  logic [0:0] _098__X0 ;
  assign _087__T = _086__T | _098__T ;
  assign _086__C0 = _087__C ;
  assign _086__X0 = _087__X ;
  assign _098__C0 = _087__C ;
  assign _098__X0 = _087__X ;
  assign _086__R0 = ( _087__R | _087__C & _098__T ) & { 1{ _098_ != 0 }} ;
  assign _098__R0 = ( _087__R | _087__C & _086__T ) & { 1{ _086_ != 0 }} ;
  assign and_64_rgt = _087_ & or_10_cse;
  assign and_64_rgt_S = 0 ;
  logic [0:0] _087__C0 ;
  logic [0:0] _087__R0 ;
  logic [0:0] _087__X0 ;
  logic [0:0] or_10_cse_C6 ;
  logic [0:0] or_10_cse_R6 ;
  logic [0:0] or_10_cse_X6 ;
  assign and_64_rgt_T = _087__T | or_10_cse_T ;
  assign _087__C0 = and_64_rgt_C ;
  assign _087__X0 = and_64_rgt_X ;
  assign or_10_cse_C6 = and_64_rgt_C ;
  assign or_10_cse_X6 = and_64_rgt_X ;
  assign _087__R0 = ( and_64_rgt_R | and_64_rgt_C & or_10_cse_T ) & { 1{ or_10_cse != 0 }} ;
  assign or_10_cse_R6 = ( and_64_rgt_R | and_64_rgt_C & _087__T ) & { 1{ _087_ != 0 }} ;
  assign and_90_nl = nand_cse & or_tmp_55;
  assign and_90_nl_S = 0 ;
  logic [0:0] nand_cse_C0 ;
  logic [0:0] nand_cse_R0 ;
  logic [0:0] nand_cse_X0 ;
  logic [0:0] or_tmp_55_C0 ;
  logic [0:0] or_tmp_55_R0 ;
  logic [0:0] or_tmp_55_X0 ;
  assign and_90_nl_T = nand_cse_T | or_tmp_55_T ;
  assign nand_cse_C0 = and_90_nl_C ;
  assign nand_cse_X0 = and_90_nl_X ;
  assign or_tmp_55_C0 = and_90_nl_C ;
  assign or_tmp_55_X0 = and_90_nl_X ;
  assign nand_cse_R0 = ( and_90_nl_R | and_90_nl_C & or_tmp_55_T ) & { 1{ or_tmp_55 != 0 }} ;
  assign or_tmp_55_R0 = ( and_90_nl_R | and_90_nl_C & nand_cse_T ) & { 1{ nand_cse != 0 }} ;
  assign and_65_rgt = mux_33_nl & or_10_cse;
  assign and_65_rgt_S = 0 ;
  logic [0:0] mux_33_nl_C0 ;
  logic [0:0] mux_33_nl_R0 ;
  logic [0:0] mux_33_nl_X0 ;
  logic [0:0] or_10_cse_C7 ;
  logic [0:0] or_10_cse_R7 ;
  logic [0:0] or_10_cse_X7 ;
  assign and_65_rgt_T = mux_33_nl_T | or_10_cse_T ;
  assign mux_33_nl_C0 = and_65_rgt_C ;
  assign mux_33_nl_X0 = and_65_rgt_X ;
  assign or_10_cse_C7 = and_65_rgt_C ;
  assign or_10_cse_X7 = and_65_rgt_X ;
  assign mux_33_nl_R0 = ( and_65_rgt_R | and_65_rgt_C & or_10_cse_T ) & { 1{ or_10_cse != 0 }} ;
  assign or_10_cse_R7 = ( and_65_rgt_R | and_65_rgt_C & mux_33_nl_T ) & { 1{ mux_33_nl != 0 }} ;
  assign and_95_nl = nand_cse & and_cse;
  assign and_95_nl_S = 0 ;
  logic [0:0] nand_cse_C1 ;
  logic [0:0] nand_cse_R1 ;
  logic [0:0] nand_cse_X1 ;
  logic [0:0] and_cse_C0 ;
  logic [0:0] and_cse_R0 ;
  logic [0:0] and_cse_X0 ;
  assign and_95_nl_T = nand_cse_T | and_cse_T ;
  assign nand_cse_C1 = and_95_nl_C ;
  assign nand_cse_X1 = and_95_nl_X ;
  assign and_cse_C0 = and_95_nl_C ;
  assign and_cse_X0 = and_95_nl_X ;
  assign nand_cse_R1 = ( and_95_nl_R | and_95_nl_C & and_cse_T ) & { 1{ and_cse != 0 }} ;
  assign and_cse_R0 = ( and_95_nl_R | and_95_nl_C & nand_cse_T ) & { 1{ nand_cse != 0 }} ;
  assign asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl = FpMul_8U_23U_else_2_else_if_if_acc_1_nl[7] & FpMul_8U_23U_p_mant_p1_sva_2[47];
  assign asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl_S = 0 ;
  logic [7:0] FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C0 ;
  logic [7:0] FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R0 ;
  logic [7:0] FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X0 ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_sva_2_C0 ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_sva_2_R0 ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_sva_2_X0 ;
  assign asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl_T = FpMul_8U_23U_else_2_else_if_if_acc_1_nl_T [7] | FpMul_8U_23U_p_mant_p1_sva_2_T [47] ;
  assign FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C0 [7] = asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl_C ;
  assign FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X0 [7] = asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl_X ;
  assign FpMul_8U_23U_p_mant_p1_sva_2_C0 [47] = asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl_C ;
  assign FpMul_8U_23U_p_mant_p1_sva_2_X0 [47] = asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl_X ;
  assign FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R0 [7] = ( asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl_R | asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl_C & FpMul_8U_23U_p_mant_p1_sva_2_T [47] ) & { 1{ FpMul_8U_23U_p_mant_p1_sva_2[47] != 0 }} ;
  assign FpMul_8U_23U_p_mant_p1_sva_2_R0 [47] = ( asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl_R | asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl_C & FpMul_8U_23U_else_2_else_if_if_acc_1_nl_T [7] ) & { 1{ FpMul_8U_23U_else_2_else_if_if_acc_1_nl[7] != 0 }} ;
  assign FpMantRNE_48U_24U_else_and_svs = FpMantRNE_48U_24U_else_carry_sva & _095_;
  assign FpMantRNE_48U_24U_else_and_svs_S = 0 ;
  logic [0:0] FpMantRNE_48U_24U_else_carry_sva_C1 ;
  logic [0:0] FpMantRNE_48U_24U_else_carry_sva_R1 ;
  logic [0:0] FpMantRNE_48U_24U_else_carry_sva_X1 ;
  logic [0:0] _095__C0 ;
  logic [0:0] _095__R0 ;
  logic [0:0] _095__X0 ;
  assign FpMantRNE_48U_24U_else_and_svs_T = FpMantRNE_48U_24U_else_carry_sva_T | _095__T ;
  assign FpMantRNE_48U_24U_else_carry_sva_C1 = FpMantRNE_48U_24U_else_and_svs_C ;
  assign FpMantRNE_48U_24U_else_carry_sva_X1 = FpMantRNE_48U_24U_else_and_svs_X ;
  assign _095__C0 = FpMantRNE_48U_24U_else_and_svs_C ;
  assign _095__X0 = FpMantRNE_48U_24U_else_and_svs_X ;
  assign FpMantRNE_48U_24U_else_carry_sva_R1 = ( FpMantRNE_48U_24U_else_and_svs_R | FpMantRNE_48U_24U_else_and_svs_C & _095__T ) & { 1{ _095_ != 0 }} ;
  assign _095__R0 = ( FpMantRNE_48U_24U_else_and_svs_R | FpMantRNE_48U_24U_else_and_svs_C & FpMantRNE_48U_24U_else_carry_sva_T ) & { 1{ FpMantRNE_48U_24U_else_carry_sva != 0 }} ;
  assign _088_ = FpMul_8U_23U_p_mant_p1_sva_2[0] & FpMul_8U_23U_p_mant_p1_sva_2[47];
  assign _088__S = 0 ;
  assign { FpMul_8U_23U_p_mant_p1_sva_2_R0 [1], FpMul_8U_23U_p_mant_p1_sva_2_R0 [2], FpMul_8U_23U_p_mant_p1_sva_2_R0 [3], FpMul_8U_23U_p_mant_p1_sva_2_R0 [4], FpMul_8U_23U_p_mant_p1_sva_2_R0 [5], FpMul_8U_23U_p_mant_p1_sva_2_R0 [6], FpMul_8U_23U_p_mant_p1_sva_2_R0 [7], FpMul_8U_23U_p_mant_p1_sva_2_R0 [8], FpMul_8U_23U_p_mant_p1_sva_2_R0 [9], FpMul_8U_23U_p_mant_p1_sva_2_R0 [10], FpMul_8U_23U_p_mant_p1_sva_2_R0 [11], FpMul_8U_23U_p_mant_p1_sva_2_R0 [12], FpMul_8U_23U_p_mant_p1_sva_2_R0 [13], FpMul_8U_23U_p_mant_p1_sva_2_R0 [14], FpMul_8U_23U_p_mant_p1_sva_2_R0 [15], FpMul_8U_23U_p_mant_p1_sva_2_R0 [16], FpMul_8U_23U_p_mant_p1_sva_2_R0 [17], FpMul_8U_23U_p_mant_p1_sva_2_R0 [18], FpMul_8U_23U_p_mant_p1_sva_2_R0 [19], FpMul_8U_23U_p_mant_p1_sva_2_R0 [20], FpMul_8U_23U_p_mant_p1_sva_2_R0 [21], FpMul_8U_23U_p_mant_p1_sva_2_R0 [22], FpMul_8U_23U_p_mant_p1_sva_2_R0 [23], FpMul_8U_23U_p_mant_p1_sva_2_R0 [24], FpMul_8U_23U_p_mant_p1_sva_2_R0 [25], FpMul_8U_23U_p_mant_p1_sva_2_R0 [26], FpMul_8U_23U_p_mant_p1_sva_2_R0 [27], FpMul_8U_23U_p_mant_p1_sva_2_R0 [28], FpMul_8U_23U_p_mant_p1_sva_2_R0 [29], FpMul_8U_23U_p_mant_p1_sva_2_R0 [30], FpMul_8U_23U_p_mant_p1_sva_2_R0 [31], FpMul_8U_23U_p_mant_p1_sva_2_R0 [32], FpMul_8U_23U_p_mant_p1_sva_2_R0 [33], FpMul_8U_23U_p_mant_p1_sva_2_R0 [34], FpMul_8U_23U_p_mant_p1_sva_2_R0 [35], FpMul_8U_23U_p_mant_p1_sva_2_R0 [36], FpMul_8U_23U_p_mant_p1_sva_2_R0 [37], FpMul_8U_23U_p_mant_p1_sva_2_R0 [38], FpMul_8U_23U_p_mant_p1_sva_2_R0 [39], FpMul_8U_23U_p_mant_p1_sva_2_R0 [40], FpMul_8U_23U_p_mant_p1_sva_2_R0 [41], FpMul_8U_23U_p_mant_p1_sva_2_R0 [42], FpMul_8U_23U_p_mant_p1_sva_2_R0 [43], FpMul_8U_23U_p_mant_p1_sva_2_R0 [44], FpMul_8U_23U_p_mant_p1_sva_2_R0 [45], FpMul_8U_23U_p_mant_p1_sva_2_R0 [46] } = 0;
  assign { FpMul_8U_23U_p_mant_p1_sva_2_X0 [1], FpMul_8U_23U_p_mant_p1_sva_2_X0 [2], FpMul_8U_23U_p_mant_p1_sva_2_X0 [3], FpMul_8U_23U_p_mant_p1_sva_2_X0 [4], FpMul_8U_23U_p_mant_p1_sva_2_X0 [5], FpMul_8U_23U_p_mant_p1_sva_2_X0 [6], FpMul_8U_23U_p_mant_p1_sva_2_X0 [7], FpMul_8U_23U_p_mant_p1_sva_2_X0 [8], FpMul_8U_23U_p_mant_p1_sva_2_X0 [9], FpMul_8U_23U_p_mant_p1_sva_2_X0 [10], FpMul_8U_23U_p_mant_p1_sva_2_X0 [11], FpMul_8U_23U_p_mant_p1_sva_2_X0 [12], FpMul_8U_23U_p_mant_p1_sva_2_X0 [13], FpMul_8U_23U_p_mant_p1_sva_2_X0 [14], FpMul_8U_23U_p_mant_p1_sva_2_X0 [15], FpMul_8U_23U_p_mant_p1_sva_2_X0 [16], FpMul_8U_23U_p_mant_p1_sva_2_X0 [17], FpMul_8U_23U_p_mant_p1_sva_2_X0 [18], FpMul_8U_23U_p_mant_p1_sva_2_X0 [19], FpMul_8U_23U_p_mant_p1_sva_2_X0 [20], FpMul_8U_23U_p_mant_p1_sva_2_X0 [21], FpMul_8U_23U_p_mant_p1_sva_2_X0 [22], FpMul_8U_23U_p_mant_p1_sva_2_X0 [23], FpMul_8U_23U_p_mant_p1_sva_2_X0 [24], FpMul_8U_23U_p_mant_p1_sva_2_X0 [25], FpMul_8U_23U_p_mant_p1_sva_2_X0 [26], FpMul_8U_23U_p_mant_p1_sva_2_X0 [27], FpMul_8U_23U_p_mant_p1_sva_2_X0 [28], FpMul_8U_23U_p_mant_p1_sva_2_X0 [29], FpMul_8U_23U_p_mant_p1_sva_2_X0 [30], FpMul_8U_23U_p_mant_p1_sva_2_X0 [31], FpMul_8U_23U_p_mant_p1_sva_2_X0 [32], FpMul_8U_23U_p_mant_p1_sva_2_X0 [33], FpMul_8U_23U_p_mant_p1_sva_2_X0 [34], FpMul_8U_23U_p_mant_p1_sva_2_X0 [35], FpMul_8U_23U_p_mant_p1_sva_2_X0 [36], FpMul_8U_23U_p_mant_p1_sva_2_X0 [37], FpMul_8U_23U_p_mant_p1_sva_2_X0 [38], FpMul_8U_23U_p_mant_p1_sva_2_X0 [39], FpMul_8U_23U_p_mant_p1_sva_2_X0 [40], FpMul_8U_23U_p_mant_p1_sva_2_X0 [41], FpMul_8U_23U_p_mant_p1_sva_2_X0 [42], FpMul_8U_23U_p_mant_p1_sva_2_X0 [43], FpMul_8U_23U_p_mant_p1_sva_2_X0 [44], FpMul_8U_23U_p_mant_p1_sva_2_X0 [45], FpMul_8U_23U_p_mant_p1_sva_2_X0 [46] } = 0;
  assign { FpMul_8U_23U_p_mant_p1_sva_2_C0 [1], FpMul_8U_23U_p_mant_p1_sva_2_C0 [2], FpMul_8U_23U_p_mant_p1_sva_2_C0 [3], FpMul_8U_23U_p_mant_p1_sva_2_C0 [4], FpMul_8U_23U_p_mant_p1_sva_2_C0 [5], FpMul_8U_23U_p_mant_p1_sva_2_C0 [6], FpMul_8U_23U_p_mant_p1_sva_2_C0 [7], FpMul_8U_23U_p_mant_p1_sva_2_C0 [8], FpMul_8U_23U_p_mant_p1_sva_2_C0 [9], FpMul_8U_23U_p_mant_p1_sva_2_C0 [10], FpMul_8U_23U_p_mant_p1_sva_2_C0 [11], FpMul_8U_23U_p_mant_p1_sva_2_C0 [12], FpMul_8U_23U_p_mant_p1_sva_2_C0 [13], FpMul_8U_23U_p_mant_p1_sva_2_C0 [14], FpMul_8U_23U_p_mant_p1_sva_2_C0 [15], FpMul_8U_23U_p_mant_p1_sva_2_C0 [16], FpMul_8U_23U_p_mant_p1_sva_2_C0 [17], FpMul_8U_23U_p_mant_p1_sva_2_C0 [18], FpMul_8U_23U_p_mant_p1_sva_2_C0 [19], FpMul_8U_23U_p_mant_p1_sva_2_C0 [20], FpMul_8U_23U_p_mant_p1_sva_2_C0 [21], FpMul_8U_23U_p_mant_p1_sva_2_C0 [22], FpMul_8U_23U_p_mant_p1_sva_2_C0 [23], FpMul_8U_23U_p_mant_p1_sva_2_C0 [24], FpMul_8U_23U_p_mant_p1_sva_2_C0 [25], FpMul_8U_23U_p_mant_p1_sva_2_C0 [26], FpMul_8U_23U_p_mant_p1_sva_2_C0 [27], FpMul_8U_23U_p_mant_p1_sva_2_C0 [28], FpMul_8U_23U_p_mant_p1_sva_2_C0 [29], FpMul_8U_23U_p_mant_p1_sva_2_C0 [30], FpMul_8U_23U_p_mant_p1_sva_2_C0 [31], FpMul_8U_23U_p_mant_p1_sva_2_C0 [32], FpMul_8U_23U_p_mant_p1_sva_2_C0 [33], FpMul_8U_23U_p_mant_p1_sva_2_C0 [34], FpMul_8U_23U_p_mant_p1_sva_2_C0 [35], FpMul_8U_23U_p_mant_p1_sva_2_C0 [36], FpMul_8U_23U_p_mant_p1_sva_2_C0 [37], FpMul_8U_23U_p_mant_p1_sva_2_C0 [38], FpMul_8U_23U_p_mant_p1_sva_2_C0 [39], FpMul_8U_23U_p_mant_p1_sva_2_C0 [40], FpMul_8U_23U_p_mant_p1_sva_2_C0 [41], FpMul_8U_23U_p_mant_p1_sva_2_C0 [42], FpMul_8U_23U_p_mant_p1_sva_2_C0 [43], FpMul_8U_23U_p_mant_p1_sva_2_C0 [44], FpMul_8U_23U_p_mant_p1_sva_2_C0 [45], FpMul_8U_23U_p_mant_p1_sva_2_C0 [46] } = 0;
  logic [47:0] FpMul_8U_23U_p_mant_p1_sva_2_C1 ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_sva_2_R1 ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_sva_2_X1 ;
  assign _088__T = FpMul_8U_23U_p_mant_p1_sva_2_T [0] | FpMul_8U_23U_p_mant_p1_sva_2_T [47] ;
  assign FpMul_8U_23U_p_mant_p1_sva_2_C0 [0] = _088__C ;
  assign FpMul_8U_23U_p_mant_p1_sva_2_X0 [0] = _088__X ;
  assign FpMul_8U_23U_p_mant_p1_sva_2_C1 [47] = _088__C ;
  assign FpMul_8U_23U_p_mant_p1_sva_2_X1 [47] = _088__X ;
  assign FpMul_8U_23U_p_mant_p1_sva_2_R0 [0] = ( _088__R | _088__C & FpMul_8U_23U_p_mant_p1_sva_2_T [47] ) & { 1{ FpMul_8U_23U_p_mant_p1_sva_2[47] != 0 }} ;
  assign FpMul_8U_23U_p_mant_p1_sva_2_R1 [47] = ( _088__R | _088__C & FpMul_8U_23U_p_mant_p1_sva_2_T [0] ) & { 1{ FpMul_8U_23U_p_mant_p1_sva_2[0] != 0 }} ;
  assign FpMantRNE_48U_24U_else_carry_sva = FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[22] & _193_;
  assign FpMantRNE_48U_24U_else_carry_sva_S = 0 ;
  logic [0:0] _193__C0 ;
  logic [0:0] _193__R0 ;
  logic [0:0] _193__X0 ;
  assign FpMantRNE_48U_24U_else_carry_sva_T = FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [22] | _193__T ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C0 [22] = FpMantRNE_48U_24U_else_carry_sva_C ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X0 [22] = FpMantRNE_48U_24U_else_carry_sva_X ;
  assign _193__C0 = FpMantRNE_48U_24U_else_carry_sva_C ;
  assign _193__X0 = FpMantRNE_48U_24U_else_carry_sva_X ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R0 [22] = ( FpMantRNE_48U_24U_else_carry_sva_R | FpMantRNE_48U_24U_else_carry_sva_C & _193__T ) & { 1{ _193_ != 0 }} ;
  assign _193__R0 = ( FpMantRNE_48U_24U_else_carry_sva_R | FpMantRNE_48U_24U_else_carry_sva_C & FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [22] ) & { 1{ FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[22] != 0 }} ;
  assign _089_ = _004_[22] & FpMantRNE_48U_24U_else_and_svs;
  assign _089__S = 0 ;
  logic [22:0] _004__C0 ;
  logic [22:0] _004__R0 ;
  logic [22:0] _004__X0 ;
  logic [0:0] FpMantRNE_48U_24U_else_and_svs_C0 ;
  logic [0:0] FpMantRNE_48U_24U_else_and_svs_R0 ;
  logic [0:0] FpMantRNE_48U_24U_else_and_svs_X0 ;
  assign _089__T = _004__T [22] | FpMantRNE_48U_24U_else_and_svs_T ;
  assign _004__C0 [22] = _089__C ;
  assign _004__X0 [22] = _089__X ;
  assign FpMantRNE_48U_24U_else_and_svs_C0 = _089__C ;
  assign FpMantRNE_48U_24U_else_and_svs_X0 = _089__X ;
  assign _004__R0 [22] = ( _089__R | _089__C & FpMantRNE_48U_24U_else_and_svs_T ) & { 1{ FpMantRNE_48U_24U_else_and_svs != 0 }} ;
  assign FpMantRNE_48U_24U_else_and_svs_R0 = ( _089__R | _089__C & _004__T [22] ) & { 1{ _004_[22] != 0 }} ;
  assign _090_ = FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp & FpMantRNE_48U_24U_else_and_svs;
  assign _090__S = 0 ;
  logic [0:0] FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_C0 ;
  logic [0:0] FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_R0 ;
  logic [0:0] FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_X0 ;
  logic [0:0] FpMantRNE_48U_24U_else_and_svs_C1 ;
  logic [0:0] FpMantRNE_48U_24U_else_and_svs_R1 ;
  logic [0:0] FpMantRNE_48U_24U_else_and_svs_X1 ;
  assign _090__T = FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_T | FpMantRNE_48U_24U_else_and_svs_T ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_C0 = _090__C ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_X0 = _090__X ;
  assign FpMantRNE_48U_24U_else_and_svs_C1 = _090__C ;
  assign FpMantRNE_48U_24U_else_and_svs_X1 = _090__X ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_R0 = ( _090__R | _090__C & FpMantRNE_48U_24U_else_and_svs_T ) & { 1{ FpMantRNE_48U_24U_else_and_svs != 0 }} ;
  assign FpMantRNE_48U_24U_else_and_svs_R1 = ( _090__R | _090__C & FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_T ) & { 1{ FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp != 0 }} ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl = _090_ & _131_;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_S = 0 ;
  logic [0:0] _090__C0 ;
  logic [0:0] _090__R0 ;
  logic [0:0] _090__X0 ;
  logic [0:0] _131__C0 ;
  logic [0:0] _131__R0 ;
  logic [0:0] _131__X0 ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_T = _090__T | _131__T ;
  assign _090__C0 = FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_C ;
  assign _090__X0 = FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_X ;
  assign _131__C0 = FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_C ;
  assign _131__X0 = FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_X ;
  assign _090__R0 = ( FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_R | FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_C & _131__T ) & { 1{ _131_ != 0 }} ;
  assign _131__R0 = ( FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_R | FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_C & _090__T ) & { 1{ _090_ != 0 }} ;
  assign _091_ = _195_ & FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2;
  assign _091__S = 0 ;
  logic [0:0] _195__C0 ;
  logic [0:0] _195__R0 ;
  logic [0:0] _195__X0 ;
  logic [0:0] FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_C0 ;
  logic [0:0] FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_R0 ;
  logic [0:0] FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_X0 ;
  assign _091__T = _195__T | FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_T ;
  assign _195__C0 = _091__C ;
  assign _195__X0 = _091__X ;
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_C0 = _091__C ;
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_X0 = _091__X ;
  assign _195__R0 = ( _091__R | _091__C & FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_T ) & { 1{ FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2 != 0 }} ;
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_R0 = ( _091__R | _091__C & _195__T ) & { 1{ _195_ != 0 }} ;
  assign and_cse = chn_a_rsci_bawt & chn_b_rsci_bawt;
  assign and_cse_S = 0 ;
  logic [0:0] chn_a_rsci_bawt_C0 ;
  logic [0:0] chn_a_rsci_bawt_R0 ;
  logic [0:0] chn_a_rsci_bawt_X0 ;
  logic [0:0] chn_b_rsci_bawt_C0 ;
  logic [0:0] chn_b_rsci_bawt_R0 ;
  logic [0:0] chn_b_rsci_bawt_X0 ;
  assign and_cse_T = chn_a_rsci_bawt_T | chn_b_rsci_bawt_T ;
  assign chn_a_rsci_bawt_C0 = and_cse_C ;
  assign chn_a_rsci_bawt_X0 = and_cse_X ;
  assign chn_b_rsci_bawt_C0 = and_cse_C ;
  assign chn_b_rsci_bawt_X0 = and_cse_X ;
  assign chn_a_rsci_bawt_R0 = ( and_cse_R | and_cse_C & chn_b_rsci_bawt_T ) & { 1{ chn_b_rsci_bawt != 0 }} ;
  assign chn_b_rsci_bawt_R0 = ( and_cse_R | and_cse_C & chn_a_rsci_bawt_T ) & { 1{ chn_a_rsci_bawt != 0 }} ;
  assign main_stage_en_1 = and_cse & or_10_cse;
  assign main_stage_en_1_S = 0 ;
  logic [0:0] and_cse_C1 ;
  logic [0:0] and_cse_R1 ;
  logic [0:0] and_cse_X1 ;
  logic [0:0] or_10_cse_C8 ;
  logic [0:0] or_10_cse_R8 ;
  logic [0:0] or_10_cse_X8 ;
  assign main_stage_en_1_T = and_cse_T | or_10_cse_T ;
  assign and_cse_C1 = main_stage_en_1_C ;
  assign and_cse_X1 = main_stage_en_1_X ;
  assign or_10_cse_C8 = main_stage_en_1_C ;
  assign or_10_cse_X8 = main_stage_en_1_X ;
  assign and_cse_R1 = ( main_stage_en_1_R | main_stage_en_1_C & or_10_cse_T ) & { 1{ or_10_cse != 0 }} ;
  assign or_10_cse_R8 = ( main_stage_en_1_R | main_stage_en_1_C & and_cse_T ) & { 1{ and_cse != 0 }} ;
  assign and_dcpl_16 = main_stage_v_1 & or_10_cse;
  assign and_dcpl_16_S = 0 ;
  logic [0:0] main_stage_v_1_C3 ;
  logic [0:0] main_stage_v_1_R3 ;
  logic [0:0] main_stage_v_1_X3 ;
  logic [0:0] or_10_cse_C9 ;
  logic [0:0] or_10_cse_R9 ;
  logic [0:0] or_10_cse_X9 ;
  assign and_dcpl_16_T = main_stage_v_1_T | or_10_cse_T ;
  assign main_stage_v_1_C3 = and_dcpl_16_C ;
  assign main_stage_v_1_X3 = and_dcpl_16_X ;
  assign or_10_cse_C9 = and_dcpl_16_C ;
  assign or_10_cse_X9 = and_dcpl_16_X ;
  assign main_stage_v_1_R3 = ( and_dcpl_16_R | and_dcpl_16_C & or_10_cse_T ) & { 1{ or_10_cse != 0 }} ;
  assign or_10_cse_R9 = ( and_dcpl_16_R | and_dcpl_16_C & main_stage_v_1_T ) & { 1{ main_stage_v_1 != 0 }} ;
  assign and_dcpl_3 = chn_o_rsci_bawt & reg_chn_o_rsci_ld_core_psct_cse;
  assign and_dcpl_3_S = 0 ;
  logic [0:0] chn_o_rsci_bawt_C0 ;
  logic [0:0] chn_o_rsci_bawt_R0 ;
  logic [0:0] chn_o_rsci_bawt_X0 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C0 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R0 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X0 ;
  assign and_dcpl_3_T = chn_o_rsci_bawt_T | reg_chn_o_rsci_ld_core_psct_cse_T ;
  assign chn_o_rsci_bawt_C0 = and_dcpl_3_C ;
  assign chn_o_rsci_bawt_X0 = and_dcpl_3_X ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C0 = and_dcpl_3_C ;
  assign reg_chn_o_rsci_ld_core_psct_cse_X0 = and_dcpl_3_X ;
  assign chn_o_rsci_bawt_R0 = ( and_dcpl_3_R | and_dcpl_3_C & reg_chn_o_rsci_ld_core_psct_cse_T ) & { 1{ reg_chn_o_rsci_ld_core_psct_cse != 0 }} ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R0 = ( and_dcpl_3_R | and_dcpl_3_C & chn_o_rsci_bawt_T ) & { 1{ chn_o_rsci_bawt != 0 }} ;
  assign and_dcpl_6 = _137_ & reg_chn_o_rsci_ld_core_psct_cse;
  assign and_dcpl_6_S = 0 ;
  logic [0:0] _137__C0 ;
  logic [0:0] _137__R0 ;
  logic [0:0] _137__X0 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C1 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R1 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X1 ;
  assign and_dcpl_6_T = _137__T | reg_chn_o_rsci_ld_core_psct_cse_T ;
  assign _137__C0 = and_dcpl_6_C ;
  assign _137__X0 = and_dcpl_6_X ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C1 = and_dcpl_6_C ;
  assign reg_chn_o_rsci_ld_core_psct_cse_X1 = and_dcpl_6_X ;
  assign _137__R0 = ( and_dcpl_6_R | and_dcpl_6_C & reg_chn_o_rsci_ld_core_psct_cse_T ) & { 1{ reg_chn_o_rsci_ld_core_psct_cse != 0 }} ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R1 = ( and_dcpl_6_R | and_dcpl_6_C & _137__T ) & { 1{ _137_ != 0 }} ;
  assign and_dcpl_13 = and_dcpl_3 & _121_;
  assign and_dcpl_13_S = 0 ;
  logic [0:0] and_dcpl_3_C0 ;
  logic [0:0] and_dcpl_3_R0 ;
  logic [0:0] and_dcpl_3_X0 ;
  logic [0:0] _121__C0 ;
  logic [0:0] _121__R0 ;
  logic [0:0] _121__X0 ;
  assign and_dcpl_13_T = and_dcpl_3_T | _121__T ;
  assign and_dcpl_3_C0 = and_dcpl_13_C ;
  assign and_dcpl_3_X0 = and_dcpl_13_X ;
  assign _121__C0 = and_dcpl_13_C ;
  assign _121__X0 = and_dcpl_13_X ;
  assign and_dcpl_3_R0 = ( and_dcpl_13_R | and_dcpl_13_C & _121__T ) & { 1{ _121_ != 0 }} ;
  assign _121__R0 = ( and_dcpl_13_R | and_dcpl_13_C & and_dcpl_3_T ) & { 1{ and_dcpl_3 != 0 }} ;
  assign and_dcpl_26 = or_10_cse & IsNaN_8U_23U_land_lpi_1_dfm_st_3;
  assign and_dcpl_26_S = 0 ;
  logic [0:0] or_10_cse_C10 ;
  logic [0:0] or_10_cse_R10 ;
  logic [0:0] or_10_cse_X10 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_3_C0 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_3_R0 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_3_X0 ;
  assign and_dcpl_26_T = or_10_cse_T | IsNaN_8U_23U_land_lpi_1_dfm_st_3_T ;
  assign or_10_cse_C10 = and_dcpl_26_C ;
  assign or_10_cse_X10 = and_dcpl_26_X ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_C0 = and_dcpl_26_C ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_X0 = and_dcpl_26_X ;
  assign or_10_cse_R10 = ( and_dcpl_26_R | and_dcpl_26_C & IsNaN_8U_23U_land_lpi_1_dfm_st_3_T ) & { 1{ IsNaN_8U_23U_land_lpi_1_dfm_st_3 != 0 }} ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_R0 = ( and_dcpl_26_R | and_dcpl_26_C & or_10_cse_T ) & { 1{ or_10_cse != 0 }} ;
  assign _092_ = or_10_cse & chn_b_rsci_bawt;
  assign _092__S = 0 ;
  logic [0:0] or_10_cse_C11 ;
  logic [0:0] or_10_cse_R11 ;
  logic [0:0] or_10_cse_X11 ;
  logic [0:0] chn_b_rsci_bawt_C1 ;
  logic [0:0] chn_b_rsci_bawt_R1 ;
  logic [0:0] chn_b_rsci_bawt_X1 ;
  assign _092__T = or_10_cse_T | chn_b_rsci_bawt_T ;
  assign or_10_cse_C11 = _092__C ;
  assign or_10_cse_X11 = _092__X ;
  assign chn_b_rsci_bawt_C1 = _092__C ;
  assign chn_b_rsci_bawt_X1 = _092__X ;
  assign or_10_cse_R11 = ( _092__R | _092__C & chn_b_rsci_bawt_T ) & { 1{ chn_b_rsci_bawt != 0 }} ;
  assign chn_b_rsci_bawt_R1 = ( _092__R | _092__C & or_10_cse_T ) & { 1{ or_10_cse != 0 }} ;
  assign _093_ = _092_ & chn_a_rsci_bawt;
  assign _093__S = 0 ;
  logic [0:0] _092__C0 ;
  logic [0:0] _092__R0 ;
  logic [0:0] _092__X0 ;
  logic [0:0] chn_a_rsci_bawt_C1 ;
  logic [0:0] chn_a_rsci_bawt_R1 ;
  logic [0:0] chn_a_rsci_bawt_X1 ;
  assign _093__T = _092__T | chn_a_rsci_bawt_T ;
  assign _092__C0 = _093__C ;
  assign _092__X0 = _093__X ;
  assign chn_a_rsci_bawt_C1 = _093__C ;
  assign chn_a_rsci_bawt_X1 = _093__X ;
  assign _092__R0 = ( _093__R | _093__C & chn_a_rsci_bawt_T ) & { 1{ chn_a_rsci_bawt != 0 }} ;
  assign chn_a_rsci_bawt_R1 = ( _093__R | _093__C & _092__T ) & { 1{ _092_ != 0 }} ;
  assign or_tmp_65 = _093_ & fsm_output[1];
  assign or_tmp_65_S = 0 ;
  assign { fsm_output_R0 [0] } = 0;
  assign { fsm_output_X0 [0] } = 0;
  assign { fsm_output_C0 [0] } = 0;
  logic [0:0] _093__C0 ;
  logic [0:0] _093__R0 ;
  logic [0:0] _093__X0 ;
  logic [1:0] fsm_output_C1 ;
  logic [1:0] fsm_output_R1 ;
  logic [1:0] fsm_output_X1 ;
  assign or_tmp_65_T = _093__T | fsm_output_T [1] ;
  assign _093__C0 = or_tmp_65_C ;
  assign _093__X0 = or_tmp_65_X ;
  assign fsm_output_C1 [1] = or_tmp_65_C ;
  assign fsm_output_X1 [1] = or_tmp_65_X ;
  assign _093__R0 = ( or_tmp_65_R | or_tmp_65_C & fsm_output_T [1] ) & { 1{ fsm_output[1] != 0 }} ;
  assign fsm_output_R1 [1] = ( or_tmp_65_R | or_tmp_65_C & _093__T ) & { 1{ _093_ != 0 }} ;
  assign chn_o_rsci_d_30_23_mx0c1 = and_dcpl_12 & _138_;
  assign chn_o_rsci_d_30_23_mx0c1_S = 0 ;
  logic [0:0] and_dcpl_12_C2 ;
  logic [0:0] and_dcpl_12_R2 ;
  logic [0:0] and_dcpl_12_X2 ;
  logic [0:0] _138__C0 ;
  logic [0:0] _138__R0 ;
  logic [0:0] _138__X0 ;
  assign chn_o_rsci_d_30_23_mx0c1_T = and_dcpl_12_T | _138__T ;
  assign and_dcpl_12_C2 = chn_o_rsci_d_30_23_mx0c1_C ;
  assign and_dcpl_12_X2 = chn_o_rsci_d_30_23_mx0c1_X ;
  assign _138__C0 = chn_o_rsci_d_30_23_mx0c1_C ;
  assign _138__X0 = chn_o_rsci_d_30_23_mx0c1_X ;
  assign and_dcpl_12_R2 = ( chn_o_rsci_d_30_23_mx0c1_R | chn_o_rsci_d_30_23_mx0c1_C & _138__T ) & { 1{ _138_ != 0 }} ;
  assign _138__R0 = ( chn_o_rsci_d_30_23_mx0c1_R | chn_o_rsci_d_30_23_mx0c1_C & and_dcpl_12_T ) & { 1{ and_dcpl_12 != 0 }} ;
  assign main_stage_v_1_mx0c1 = and_dcpl_16 & _003_;
  assign main_stage_v_1_mx0c1_S = 0 ;
  logic [0:0] and_dcpl_16_C0 ;
  logic [0:0] and_dcpl_16_R0 ;
  logic [0:0] and_dcpl_16_X0 ;
  logic [0:0] _003__C0 ;
  logic [0:0] _003__R0 ;
  logic [0:0] _003__X0 ;
  assign main_stage_v_1_mx0c1_T = and_dcpl_16_T | _003__T ;
  assign and_dcpl_16_C0 = main_stage_v_1_mx0c1_C ;
  assign and_dcpl_16_X0 = main_stage_v_1_mx0c1_X ;
  assign _003__C0 = main_stage_v_1_mx0c1_C ;
  assign _003__X0 = main_stage_v_1_mx0c1_X ;
  assign and_dcpl_16_R0 = ( main_stage_v_1_mx0c1_R | main_stage_v_1_mx0c1_C & _003__T ) & { 1{ _003_ != 0 }} ;
  assign _003__R0 = ( main_stage_v_1_mx0c1_R | main_stage_v_1_mx0c1_C & and_dcpl_16_T ) & { 1{ and_dcpl_16 != 0 }} ;
  assign _094_ = chn_b_rsci_d_mxwt[30:23] == 8'b11111111;
  assign _094__S = 0 ;
  assign { chn_b_rsci_d_mxwt_R1 [0], chn_b_rsci_d_mxwt_R1 [1], chn_b_rsci_d_mxwt_R1 [2], chn_b_rsci_d_mxwt_R1 [3], chn_b_rsci_d_mxwt_R1 [4], chn_b_rsci_d_mxwt_R1 [5], chn_b_rsci_d_mxwt_R1 [6], chn_b_rsci_d_mxwt_R1 [7], chn_b_rsci_d_mxwt_R1 [8], chn_b_rsci_d_mxwt_R1 [9], chn_b_rsci_d_mxwt_R1 [10], chn_b_rsci_d_mxwt_R1 [11], chn_b_rsci_d_mxwt_R1 [12], chn_b_rsci_d_mxwt_R1 [13], chn_b_rsci_d_mxwt_R1 [14], chn_b_rsci_d_mxwt_R1 [15], chn_b_rsci_d_mxwt_R1 [16], chn_b_rsci_d_mxwt_R1 [17], chn_b_rsci_d_mxwt_R1 [18], chn_b_rsci_d_mxwt_R1 [19], chn_b_rsci_d_mxwt_R1 [20], chn_b_rsci_d_mxwt_R1 [21], chn_b_rsci_d_mxwt_R1 [22] } = 0;
  assign { chn_b_rsci_d_mxwt_X1 [0], chn_b_rsci_d_mxwt_X1 [1], chn_b_rsci_d_mxwt_X1 [2], chn_b_rsci_d_mxwt_X1 [3], chn_b_rsci_d_mxwt_X1 [4], chn_b_rsci_d_mxwt_X1 [5], chn_b_rsci_d_mxwt_X1 [6], chn_b_rsci_d_mxwt_X1 [7], chn_b_rsci_d_mxwt_X1 [8], chn_b_rsci_d_mxwt_X1 [9], chn_b_rsci_d_mxwt_X1 [10], chn_b_rsci_d_mxwt_X1 [11], chn_b_rsci_d_mxwt_X1 [12], chn_b_rsci_d_mxwt_X1 [13], chn_b_rsci_d_mxwt_X1 [14], chn_b_rsci_d_mxwt_X1 [15], chn_b_rsci_d_mxwt_X1 [16], chn_b_rsci_d_mxwt_X1 [17], chn_b_rsci_d_mxwt_X1 [18], chn_b_rsci_d_mxwt_X1 [19], chn_b_rsci_d_mxwt_X1 [20], chn_b_rsci_d_mxwt_X1 [21], chn_b_rsci_d_mxwt_X1 [22] } = 0;
  assign { chn_b_rsci_d_mxwt_C1 [0], chn_b_rsci_d_mxwt_C1 [1], chn_b_rsci_d_mxwt_C1 [2], chn_b_rsci_d_mxwt_C1 [3], chn_b_rsci_d_mxwt_C1 [4], chn_b_rsci_d_mxwt_C1 [5], chn_b_rsci_d_mxwt_C1 [6], chn_b_rsci_d_mxwt_C1 [7], chn_b_rsci_d_mxwt_C1 [8], chn_b_rsci_d_mxwt_C1 [9], chn_b_rsci_d_mxwt_C1 [10], chn_b_rsci_d_mxwt_C1 [11], chn_b_rsci_d_mxwt_C1 [12], chn_b_rsci_d_mxwt_C1 [13], chn_b_rsci_d_mxwt_C1 [14], chn_b_rsci_d_mxwt_C1 [15], chn_b_rsci_d_mxwt_C1 [16], chn_b_rsci_d_mxwt_C1 [17], chn_b_rsci_d_mxwt_C1 [18], chn_b_rsci_d_mxwt_C1 [19], chn_b_rsci_d_mxwt_C1 [20], chn_b_rsci_d_mxwt_C1 [21], chn_b_rsci_d_mxwt_C1 [22] } = 0;
  logic [31:0] chn_b_rsci_d_mxwt_C2 ;
  logic [31:0] chn_b_rsci_d_mxwt_R2 ;
  logic [31:0] chn_b_rsci_d_mxwt_X2 ;
  assign _094__T = | chn_b_rsci_d_mxwt_T [30:23] ;
  assign chn_b_rsci_d_mxwt_C2 [30:23] = { 8{ _094__C }} ;
  assign chn_b_rsci_d_mxwt_R2 [30:23] = { 8{ _094__R }} ;
  assign chn_b_rsci_d_mxwt_X2 [30:23] = { 8{ _094__X }} ;
  assign and_91_nl = chn_a_rsci_d_mxwt[30:23] == 8'b11111111;
  assign and_91_nl_S = 0 ;
  assign { chn_a_rsci_d_mxwt_R1 [0], chn_a_rsci_d_mxwt_R1 [1], chn_a_rsci_d_mxwt_R1 [2], chn_a_rsci_d_mxwt_R1 [3], chn_a_rsci_d_mxwt_R1 [4], chn_a_rsci_d_mxwt_R1 [5], chn_a_rsci_d_mxwt_R1 [6], chn_a_rsci_d_mxwt_R1 [7], chn_a_rsci_d_mxwt_R1 [8], chn_a_rsci_d_mxwt_R1 [9], chn_a_rsci_d_mxwt_R1 [10], chn_a_rsci_d_mxwt_R1 [11], chn_a_rsci_d_mxwt_R1 [12], chn_a_rsci_d_mxwt_R1 [13], chn_a_rsci_d_mxwt_R1 [14], chn_a_rsci_d_mxwt_R1 [15], chn_a_rsci_d_mxwt_R1 [16], chn_a_rsci_d_mxwt_R1 [17], chn_a_rsci_d_mxwt_R1 [18], chn_a_rsci_d_mxwt_R1 [19], chn_a_rsci_d_mxwt_R1 [20], chn_a_rsci_d_mxwt_R1 [21], chn_a_rsci_d_mxwt_R1 [22] } = 0;
  assign { chn_a_rsci_d_mxwt_X1 [0], chn_a_rsci_d_mxwt_X1 [1], chn_a_rsci_d_mxwt_X1 [2], chn_a_rsci_d_mxwt_X1 [3], chn_a_rsci_d_mxwt_X1 [4], chn_a_rsci_d_mxwt_X1 [5], chn_a_rsci_d_mxwt_X1 [6], chn_a_rsci_d_mxwt_X1 [7], chn_a_rsci_d_mxwt_X1 [8], chn_a_rsci_d_mxwt_X1 [9], chn_a_rsci_d_mxwt_X1 [10], chn_a_rsci_d_mxwt_X1 [11], chn_a_rsci_d_mxwt_X1 [12], chn_a_rsci_d_mxwt_X1 [13], chn_a_rsci_d_mxwt_X1 [14], chn_a_rsci_d_mxwt_X1 [15], chn_a_rsci_d_mxwt_X1 [16], chn_a_rsci_d_mxwt_X1 [17], chn_a_rsci_d_mxwt_X1 [18], chn_a_rsci_d_mxwt_X1 [19], chn_a_rsci_d_mxwt_X1 [20], chn_a_rsci_d_mxwt_X1 [21], chn_a_rsci_d_mxwt_X1 [22] } = 0;
  assign { chn_a_rsci_d_mxwt_C1 [0], chn_a_rsci_d_mxwt_C1 [1], chn_a_rsci_d_mxwt_C1 [2], chn_a_rsci_d_mxwt_C1 [3], chn_a_rsci_d_mxwt_C1 [4], chn_a_rsci_d_mxwt_C1 [5], chn_a_rsci_d_mxwt_C1 [6], chn_a_rsci_d_mxwt_C1 [7], chn_a_rsci_d_mxwt_C1 [8], chn_a_rsci_d_mxwt_C1 [9], chn_a_rsci_d_mxwt_C1 [10], chn_a_rsci_d_mxwt_C1 [11], chn_a_rsci_d_mxwt_C1 [12], chn_a_rsci_d_mxwt_C1 [13], chn_a_rsci_d_mxwt_C1 [14], chn_a_rsci_d_mxwt_C1 [15], chn_a_rsci_d_mxwt_C1 [16], chn_a_rsci_d_mxwt_C1 [17], chn_a_rsci_d_mxwt_C1 [18], chn_a_rsci_d_mxwt_C1 [19], chn_a_rsci_d_mxwt_C1 [20], chn_a_rsci_d_mxwt_C1 [21], chn_a_rsci_d_mxwt_C1 [22] } = 0;
  logic [31:0] chn_a_rsci_d_mxwt_C2 ;
  logic [31:0] chn_a_rsci_d_mxwt_R2 ;
  logic [31:0] chn_a_rsci_d_mxwt_X2 ;
  assign and_91_nl_T = | chn_a_rsci_d_mxwt_T [30:23] ;
  assign chn_a_rsci_d_mxwt_C2 [30:23] = { 8{ and_91_nl_C }} ;
  assign chn_a_rsci_d_mxwt_R2 [30:23] = { 8{ and_91_nl_R }} ;
  assign chn_a_rsci_d_mxwt_X2 [30:23] = { 8{ and_91_nl_X }} ;
  assign _004_[22] = FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1 == 8'b11111111;
  assign _004__S = 0 ;
  logic [7:0] FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_C1 ;
  logic [7:0] FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_R1 ;
  logic [7:0] FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_X1 ;
  assign _004__T [22] = | FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_T ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_C1 = { 8{ _004__C [22] }} ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_R1 = { 8{ _004__R [22] }} ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_X1 = { 8{ _004__X [22] }} ;
  assign _095_ = FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[45:23] == 23'b11111111111111111111111;
  assign _095__S = 0 ;
  assign { FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R0 [0], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R0 [1], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R0 [2], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R0 [3], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R0 [4], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R0 [5], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R0 [6], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R0 [7], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R0 [8], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R0 [9], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R0 [10], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R0 [11], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R0 [12], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R0 [13], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R0 [14], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R0 [15], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R0 [16], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R0 [17], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R0 [18], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R0 [19], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R0 [20], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R0 [21] } = 0;
  assign { FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X0 [0], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X0 [1], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X0 [2], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X0 [3], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X0 [4], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X0 [5], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X0 [6], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X0 [7], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X0 [8], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X0 [9], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X0 [10], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X0 [11], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X0 [12], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X0 [13], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X0 [14], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X0 [15], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X0 [16], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X0 [17], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X0 [18], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X0 [19], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X0 [20], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X0 [21] } = 0;
  assign { FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C0 [0], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C0 [1], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C0 [2], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C0 [3], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C0 [4], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C0 [5], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C0 [6], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C0 [7], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C0 [8], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C0 [9], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C0 [10], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C0 [11], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C0 [12], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C0 [13], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C0 [14], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C0 [15], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C0 [16], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C0 [17], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C0 [18], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C0 [19], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C0 [20], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C0 [21] } = 0;
  logic [45:0] FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C1 ;
  logic [45:0] FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R1 ;
  logic [45:0] FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X1 ;
  assign _095__T = | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [45:23] ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C1 [45:23] = { 23{ _095__C }} ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R1 [45:23] = { 23{ _095__R }} ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X1 [45:23] = { 23{ _095__X }} ;
  logic [23:0] fangyuan5;
  logic [23:0] fangyuan5_T ;
  logic [23:0] fangyuan5_R ;
  logic [23:0] fangyuan5_C ;
  logic [23:0] fangyuan5_X ;
  assign fangyuan5 = { 1'b1, FpMul_8U_23U_ua_sva_1_30_0_1[22:0] };
  assign fangyuan5_T = {  1'h0 , FpMul_8U_23U_ua_sva_1_30_0_1_T [22:0]  };
  logic [13:0] fangyuan5_S ;
  assign fangyuan5_S = 0 ;
  assign FpMul_8U_23U_ua_sva_1_30_0_1_R0 [22:0] = fangyuan5_R [22:0] ;
  assign FpMul_8U_23U_ua_sva_1_30_0_1_X0 [22:0] = fangyuan5_X [22:0] ;
  assign FpMul_8U_23U_ua_sva_1_30_0_1_C0 [22:0] = fangyuan5_C [22:0] ;
  logic [23:0] fangyuan6;
  logic [23:0] fangyuan6_T ;
  logic [23:0] fangyuan6_R ;
  logic [23:0] fangyuan6_C ;
  logic [23:0] fangyuan6_X ;
  assign fangyuan6 = { 1'b1, FpMul_8U_23U_ub_sva_1_30_0_1[22:0] };
  assign fangyuan6_T = {  1'h0 , FpMul_8U_23U_ub_sva_1_30_0_1_T [22:0]  };
  logic [13:0] fangyuan6_S ;
  assign fangyuan6_S = 0 ;
  assign FpMul_8U_23U_ub_sva_1_30_0_1_R0 [22:0] = fangyuan6_R [22:0] ;
  assign FpMul_8U_23U_ub_sva_1_30_0_1_X0 [22:0] = fangyuan6_X [22:0] ;
  assign FpMul_8U_23U_ub_sva_1_30_0_1_C0 [22:0] = fangyuan6_C [22:0] ;

  assign FpMul_8U_23U_p_mant_p1_mul_tmp = fangyuan5 * fangyuan6;
  assign FpMul_8U_23U_p_mant_p1_mul_tmp_S = 0 ;
  logic [23:0] fangyuan5_C0 ;
  logic [23:0] fangyuan5_R0 ;
  logic [23:0] fangyuan5_X0 ;
  logic [23:0] fangyuan6_C0 ;
  logic [23:0] fangyuan6_R0 ;
  logic [23:0] fangyuan6_X0 ;
  assign FpMul_8U_23U_p_mant_p1_mul_tmp_T = fangyuan5_T | fangyuan6_T ;
  assign fangyuan5_C0 = FpMul_8U_23U_p_mant_p1_mul_tmp_C ;
  assign fangyuan5_X0 = FpMul_8U_23U_p_mant_p1_mul_tmp_X ;
  assign fangyuan6_C0 = FpMul_8U_23U_p_mant_p1_mul_tmp_C ;
  assign fangyuan6_X0 = FpMul_8U_23U_p_mant_p1_mul_tmp_X ;
  assign fangyuan5_R0 = FpMul_8U_23U_p_mant_p1_mul_tmp_R | ( FpMul_8U_23U_p_mant_p1_mul_tmp_C & fangyuan6_T );
  assign fangyuan6_R0 = FpMul_8U_23U_p_mant_p1_mul_tmp_R | ( FpMul_8U_23U_p_mant_p1_mul_tmp_C & fangyuan5_T );
  assign _096_ = chn_a_rsci_d_mxwt[30:23] != 8'b11111111;
  assign _096__S = 0 ;
  assign { chn_a_rsci_d_mxwt_R2 [0], chn_a_rsci_d_mxwt_R2 [1], chn_a_rsci_d_mxwt_R2 [2], chn_a_rsci_d_mxwt_R2 [3], chn_a_rsci_d_mxwt_R2 [4], chn_a_rsci_d_mxwt_R2 [5], chn_a_rsci_d_mxwt_R2 [6], chn_a_rsci_d_mxwt_R2 [7], chn_a_rsci_d_mxwt_R2 [8], chn_a_rsci_d_mxwt_R2 [9], chn_a_rsci_d_mxwt_R2 [10], chn_a_rsci_d_mxwt_R2 [11], chn_a_rsci_d_mxwt_R2 [12], chn_a_rsci_d_mxwt_R2 [13], chn_a_rsci_d_mxwt_R2 [14], chn_a_rsci_d_mxwt_R2 [15], chn_a_rsci_d_mxwt_R2 [16], chn_a_rsci_d_mxwt_R2 [17], chn_a_rsci_d_mxwt_R2 [18], chn_a_rsci_d_mxwt_R2 [19], chn_a_rsci_d_mxwt_R2 [20], chn_a_rsci_d_mxwt_R2 [21], chn_a_rsci_d_mxwt_R2 [22], chn_a_rsci_d_mxwt_R2 [31:31] } = 0;
  assign { chn_a_rsci_d_mxwt_X2 [0], chn_a_rsci_d_mxwt_X2 [1], chn_a_rsci_d_mxwt_X2 [2], chn_a_rsci_d_mxwt_X2 [3], chn_a_rsci_d_mxwt_X2 [4], chn_a_rsci_d_mxwt_X2 [5], chn_a_rsci_d_mxwt_X2 [6], chn_a_rsci_d_mxwt_X2 [7], chn_a_rsci_d_mxwt_X2 [8], chn_a_rsci_d_mxwt_X2 [9], chn_a_rsci_d_mxwt_X2 [10], chn_a_rsci_d_mxwt_X2 [11], chn_a_rsci_d_mxwt_X2 [12], chn_a_rsci_d_mxwt_X2 [13], chn_a_rsci_d_mxwt_X2 [14], chn_a_rsci_d_mxwt_X2 [15], chn_a_rsci_d_mxwt_X2 [16], chn_a_rsci_d_mxwt_X2 [17], chn_a_rsci_d_mxwt_X2 [18], chn_a_rsci_d_mxwt_X2 [19], chn_a_rsci_d_mxwt_X2 [20], chn_a_rsci_d_mxwt_X2 [21], chn_a_rsci_d_mxwt_X2 [22], chn_a_rsci_d_mxwt_X2 [31:31] } = 0;
  assign { chn_a_rsci_d_mxwt_C2 [0], chn_a_rsci_d_mxwt_C2 [1], chn_a_rsci_d_mxwt_C2 [2], chn_a_rsci_d_mxwt_C2 [3], chn_a_rsci_d_mxwt_C2 [4], chn_a_rsci_d_mxwt_C2 [5], chn_a_rsci_d_mxwt_C2 [6], chn_a_rsci_d_mxwt_C2 [7], chn_a_rsci_d_mxwt_C2 [8], chn_a_rsci_d_mxwt_C2 [9], chn_a_rsci_d_mxwt_C2 [10], chn_a_rsci_d_mxwt_C2 [11], chn_a_rsci_d_mxwt_C2 [12], chn_a_rsci_d_mxwt_C2 [13], chn_a_rsci_d_mxwt_C2 [14], chn_a_rsci_d_mxwt_C2 [15], chn_a_rsci_d_mxwt_C2 [16], chn_a_rsci_d_mxwt_C2 [17], chn_a_rsci_d_mxwt_C2 [18], chn_a_rsci_d_mxwt_C2 [19], chn_a_rsci_d_mxwt_C2 [20], chn_a_rsci_d_mxwt_C2 [21], chn_a_rsci_d_mxwt_C2 [22], chn_a_rsci_d_mxwt_C2 [31:31] } = 0;
  logic [31:0] chn_a_rsci_d_mxwt_C3 ;
  logic [31:0] chn_a_rsci_d_mxwt_R3 ;
  logic [31:0] chn_a_rsci_d_mxwt_X3 ;
  assign _096__T = | chn_a_rsci_d_mxwt_T [30:23] ;
  assign chn_a_rsci_d_mxwt_C3 [30:23] = { 8{ _096__C }} ;
  assign chn_a_rsci_d_mxwt_R3 [30:23] = { 8{ _096__R }} ;
  assign chn_a_rsci_d_mxwt_X3 [30:23] = { 8{ _096__X }} ;
  assign _097_ = | chn_a_rsci_d_mxwt[22:0];
  assign _097__T = | chn_a_rsci_d_mxwt_T [22:0] ;
  assign chn_a_rsci_d_mxwt_C3 [22:0] = { 23{ _097__C }} ;
  assign chn_a_rsci_d_mxwt_X3 [22:0] = { 23{ _097__X }} ;
  assign chn_a_rsci_d_mxwt_R3 [22:0] = { 23{ _097__R }} & chn_a_rsci_d_mxwt[22:0] ;
  assign _097__S = 0 ;
  assign _098_ = | chn_b_rsci_d_mxwt[22:0];
  assign _098__T = | chn_b_rsci_d_mxwt_T [22:0] ;
  assign chn_b_rsci_d_mxwt_C2 [22:0] = { 23{ _098__C }} ;
  assign chn_b_rsci_d_mxwt_X2 [22:0] = { 23{ _098__X }} ;
  assign chn_b_rsci_d_mxwt_R2 [22:0] = { 23{ _098__R }} & chn_b_rsci_d_mxwt[22:0] ;
  assign _098__S = 0 ;
  assign _099_ = | chn_b_rsci_d_mxwt[30:0];
  assign { chn_b_rsci_d_mxwt_R2 [31:31] } = 0;
  assign { chn_b_rsci_d_mxwt_X2 [31:31] } = 0;
  assign { chn_b_rsci_d_mxwt_C2 [31:31] } = 0;
  logic [31:0] chn_b_rsci_d_mxwt_C3 ;
  logic [31:0] chn_b_rsci_d_mxwt_R3 ;
  logic [31:0] chn_b_rsci_d_mxwt_X3 ;
  assign _099__T = | chn_b_rsci_d_mxwt_T [30:0] ;
  assign chn_b_rsci_d_mxwt_C3 [30:0] = { 31{ _099__C }} ;
  assign chn_b_rsci_d_mxwt_X3 [30:0] = { 31{ _099__X }} ;
  assign chn_b_rsci_d_mxwt_R3 [30:0] = { 31{ _099__R }} & chn_b_rsci_d_mxwt[30:0] ;
  assign _099__S = 0 ;
  assign _100_ = | chn_a_rsci_d_mxwt[30:0];
  assign { chn_a_rsci_d_mxwt_R3 [31:31] } = 0;
  assign { chn_a_rsci_d_mxwt_X3 [31:31] } = 0;
  assign { chn_a_rsci_d_mxwt_C3 [31:31] } = 0;
  logic [31:0] chn_a_rsci_d_mxwt_C4 ;
  logic [31:0] chn_a_rsci_d_mxwt_R4 ;
  logic [31:0] chn_a_rsci_d_mxwt_X4 ;
  assign _100__T = | chn_a_rsci_d_mxwt_T [30:0] ;
  assign chn_a_rsci_d_mxwt_C4 [30:0] = { 31{ _100__C }} ;
  assign chn_a_rsci_d_mxwt_X4 [30:0] = { 31{ _100__X }} ;
  assign chn_a_rsci_d_mxwt_R4 [30:0] = { 31{ _100__R }} & chn_a_rsci_d_mxwt[30:0] ;
  assign _100__S = 0 ;
  assign _101_ = | FpMul_8U_23U_o_expo_lpi_1_dfm;
  logic [7:0] FpMul_8U_23U_o_expo_lpi_1_dfm_C0 ;
  logic [7:0] FpMul_8U_23U_o_expo_lpi_1_dfm_R0 ;
  logic [7:0] FpMul_8U_23U_o_expo_lpi_1_dfm_X0 ;
  assign _101__T = | FpMul_8U_23U_o_expo_lpi_1_dfm_T ;
  assign FpMul_8U_23U_o_expo_lpi_1_dfm_C0 = { 8{ _101__C }} ;
  assign FpMul_8U_23U_o_expo_lpi_1_dfm_X0 = { 8{ _101__X }} ;
  assign FpMul_8U_23U_o_expo_lpi_1_dfm_R0 = { 8{ _101__R }} & FpMul_8U_23U_o_expo_lpi_1_dfm ;
  assign _101__S = 0 ;
  assign _001_ = ~ main_stage_v_1;
  logic [0:0] main_stage_v_1_C4 ;
  logic [0:0] main_stage_v_1_R4 ;
  logic [0:0] main_stage_v_1_X4 ;
  assign _001__T = main_stage_v_1_T ;
  assign main_stage_v_1_C4 = _001__C ;
  assign main_stage_v_1_R4 = _001__R ;
  assign main_stage_v_1_X4 = _001__X ;
  assign _001__S = 0 ;
  assign _102_ = ~ main_stage_en_1;
  logic [0:0] main_stage_en_1_C0 ;
  logic [0:0] main_stage_en_1_R0 ;
  logic [0:0] main_stage_en_1_X0 ;
  assign _102__T = main_stage_en_1_T ;
  assign main_stage_en_1_C0 = _102__C ;
  assign main_stage_en_1_R0 = _102__R ;
  assign main_stage_en_1_X0 = _102__X ;
  assign _102__S = 0 ;
  assign _103_ = ~ _044_;
  logic [0:0] _044__C0 ;
  logic [0:0] _044__R0 ;
  logic [0:0] _044__X0 ;
  assign _103__T = _044__T ;
  assign _044__C0 = _103__C ;
  assign _044__R0 = _103__R ;
  assign _044__X0 = _103__X ;
  assign _103__S = 0 ;
  assign _104_ = ~ and_dcpl_13;
  logic [0:0] and_dcpl_13_C0 ;
  logic [0:0] and_dcpl_13_R0 ;
  logic [0:0] and_dcpl_13_X0 ;
  assign _104__T = and_dcpl_13_T ;
  assign and_dcpl_13_C0 = _104__C ;
  assign and_dcpl_13_R0 = _104__R ;
  assign and_dcpl_13_X0 = _104__X ;
  assign _104__S = 0 ;
  assign _105_ = ~ main_stage_v_1_mx0c1;
  logic [0:0] main_stage_v_1_mx0c1_C0 ;
  logic [0:0] main_stage_v_1_mx0c1_R0 ;
  logic [0:0] main_stage_v_1_mx0c1_X0 ;
  assign _105__T = main_stage_v_1_mx0c1_T ;
  assign main_stage_v_1_mx0c1_C0 = _105__C ;
  assign main_stage_v_1_mx0c1_R0 = _105__R ;
  assign main_stage_v_1_mx0c1_X0 = _105__X ;
  assign _105__S = 0 ;
  assign _106_ = ~ and_dcpl_6;
  logic [0:0] and_dcpl_6_C0 ;
  logic [0:0] and_dcpl_6_R0 ;
  logic [0:0] and_dcpl_6_X0 ;
  assign _106__T = and_dcpl_6_T ;
  assign and_dcpl_6_C0 = _106__C ;
  assign and_dcpl_6_R0 = _106__R ;
  assign and_dcpl_6_X0 = _106__X ;
  assign _106__S = 0 ;
  assign _107_ = ~ mux_tmp;
  logic [0:0] mux_tmp_C1 ;
  logic [0:0] mux_tmp_R1 ;
  logic [0:0] mux_tmp_X1 ;
  assign _107__T = mux_tmp_T ;
  assign mux_tmp_C1 = _107__C ;
  assign mux_tmp_R1 = _107__R ;
  assign mux_tmp_X1 = _107__X ;
  assign _107__S = 0 ;
  assign _108_ = ~ _142_;
  logic [0:0] _142__C0 ;
  logic [0:0] _142__R0 ;
  logic [0:0] _142__X0 ;
  assign _108__T = _142__T ;
  assign _142__C0 = _108__C ;
  assign _142__R0 = _108__R ;
  assign _142__X0 = _108__X ;
  assign _108__S = 0 ;
  assign _109_ = ~ or_tmp_55;
  logic [0:0] or_tmp_55_C1 ;
  logic [0:0] or_tmp_55_R1 ;
  logic [0:0] or_tmp_55_X1 ;
  assign _109__T = or_tmp_55_T ;
  assign or_tmp_55_C1 = _109__C ;
  assign or_tmp_55_R1 = _109__R ;
  assign or_tmp_55_X1 = _109__X ;
  assign _109__S = 0 ;
  assign _110_ = ~ main_stage_v_2_mx0c1;
  logic [0:0] main_stage_v_2_mx0c1_C0 ;
  logic [0:0] main_stage_v_2_mx0c1_R0 ;
  logic [0:0] main_stage_v_2_mx0c1_X0 ;
  assign _110__T = main_stage_v_2_mx0c1_T ;
  assign main_stage_v_2_mx0c1_C0 = _110__C ;
  assign main_stage_v_2_mx0c1_R0 = _110__R ;
  assign main_stage_v_2_mx0c1_X0 = _110__X ;
  assign _110__S = 0 ;
  assign _111_ = ~ FpMul_8U_23U_lor_1_lpi_1_dfm_st_3;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_C1 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_R1 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_X1 ;
  assign _111__T = FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_T ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_C1 = _111__C ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_R1 = _111__R ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_X1 = _111__X ;
  assign _111__S = 0 ;
  assign _112_ = ~ mux_20_itm;
  logic [0:0] mux_20_itm_C0 ;
  logic [0:0] mux_20_itm_R0 ;
  logic [0:0] mux_20_itm_X0 ;
  assign _112__T = mux_20_itm_T ;
  assign mux_20_itm_C0 = _112__C ;
  assign mux_20_itm_R0 = _112__R ;
  assign mux_20_itm_X0 = _112__X ;
  assign _112__S = 0 ;
  assign _113_ = ~ _147_;
  logic [0:0] _147__C0 ;
  logic [0:0] _147__R0 ;
  logic [0:0] _147__X0 ;
  assign _113__T = _147__T ;
  assign _147__C0 = _113__C ;
  assign _147__R0 = _113__R ;
  assign _147__X0 = _113__X ;
  assign _113__S = 0 ;
  assign _114_ = ~ fsm_output[0];
  assign _114__T = fsm_output_T [0] ;
  assign fsm_output_C1 [0] = _114__C ;
  assign fsm_output_R1 [0] = _114__R ;
  assign fsm_output_X1 [0] = _114__X ;
  assign _114__S = 0 ;
  assign _115_ = ~ or_65_cse;
  logic [0:0] or_65_cse_C0 ;
  logic [0:0] or_65_cse_R0 ;
  logic [0:0] or_65_cse_X0 ;
  assign _115__T = or_65_cse_T ;
  assign or_65_cse_C0 = _115__C ;
  assign or_65_cse_R0 = _115__R ;
  assign or_65_cse_X0 = _115__X ;
  assign _115__S = 0 ;
  assign _116_ = ~ mux_31_nl;
  logic [0:0] mux_31_nl_C0 ;
  logic [0:0] mux_31_nl_R0 ;
  logic [0:0] mux_31_nl_X0 ;
  assign _116__T = mux_31_nl_T ;
  assign mux_31_nl_C0 = _116__C ;
  assign mux_31_nl_R0 = _116__R ;
  assign mux_31_nl_X0 = _116__X ;
  assign _116__S = 0 ;
  assign _117_ = ~ FpMantRNE_48U_24U_else_and_svs;
  logic [0:0] FpMantRNE_48U_24U_else_and_svs_C2 ;
  logic [0:0] FpMantRNE_48U_24U_else_and_svs_R2 ;
  logic [0:0] FpMantRNE_48U_24U_else_and_svs_X2 ;
  assign _117__T = FpMantRNE_48U_24U_else_and_svs_T ;
  assign FpMantRNE_48U_24U_else_and_svs_C2 = _117__C ;
  assign FpMantRNE_48U_24U_else_and_svs_R2 = _117__R ;
  assign FpMantRNE_48U_24U_else_and_svs_X2 = _117__X ;
  assign _117__S = 0 ;
  assign FpMul_8U_23U_nor_nl = ~ _005_;
  logic [22:0] _005__C0 ;
  logic [22:0] _005__R0 ;
  logic [22:0] _005__X0 ;
  assign FpMul_8U_23U_nor_nl_T = _005__T ;
  assign _005__C0 = FpMul_8U_23U_nor_nl_C ;
  assign _005__R0 = FpMul_8U_23U_nor_nl_R ;
  assign _005__X0 = FpMul_8U_23U_nor_nl_X ;
  assign FpMul_8U_23U_nor_nl_S = 0 ;
  assign FpMul_8U_23U_FpMul_8U_23U_FpMul_8U_23U_nor_1_nl = ~ _006_;
  logic [22:0] _006__C0 ;
  logic [22:0] _006__R0 ;
  logic [22:0] _006__X0 ;
  assign FpMul_8U_23U_FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_T = _006__T ;
  assign _006__C0 = FpMul_8U_23U_FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_C ;
  assign _006__R0 = FpMul_8U_23U_FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_R ;
  assign _006__X0 = FpMul_8U_23U_FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X ;
  assign FpMul_8U_23U_FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_S = 0 ;
  assign _118_ = ~ IsNaN_8U_23U_1_land_lpi_1_dfm_4;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_4_C0 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_4_R0 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_4_X0 ;
  assign _118__T = IsNaN_8U_23U_1_land_lpi_1_dfm_4_T ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_4_C0 = _118__C ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_4_R0 = _118__R ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_4_X0 = _118__X ;
  assign _118__S = 0 ;
  assign _119_ = ~ _150_;
  logic [0:0] _150__C0 ;
  logic [0:0] _150__R0 ;
  logic [0:0] _150__X0 ;
  assign _119__T = _150__T ;
  assign _150__C0 = _119__C ;
  assign _150__R0 = _119__R ;
  assign _150__X0 = _119__X ;
  assign _119__S = 0 ;
  assign _120_ = ~ _075_;
  logic [0:0] _075__C0 ;
  logic [0:0] _075__R0 ;
  logic [0:0] _075__X0 ;
  assign _120__T = _075__T ;
  assign _075__C0 = _120__C ;
  assign _075__R0 = _120__R ;
  assign _075__X0 = _120__X ;
  assign _120__S = 0 ;
  assign nor_24_nl = ~ _152_;
  logic [0:0] _152__C0 ;
  logic [0:0] _152__R0 ;
  logic [0:0] _152__X0 ;
  assign nor_24_nl_T = _152__T ;
  assign _152__C0 = nor_24_nl_C ;
  assign _152__R0 = nor_24_nl_R ;
  assign _152__X0 = nor_24_nl_X ;
  assign nor_24_nl_S = 0 ;
  assign _121_ = ~ main_stage_v_2;
  logic [0:0] main_stage_v_2_C1 ;
  logic [0:0] main_stage_v_2_R1 ;
  logic [0:0] main_stage_v_2_X1 ;
  assign _121__T = main_stage_v_2_T ;
  assign main_stage_v_2_C1 = _121__C ;
  assign main_stage_v_2_R1 = _121__R ;
  assign main_stage_v_2_X1 = _121__X ;
  assign _121__S = 0 ;
  assign _122_ = ~ FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2;
  logic [0:0] FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_C0 ;
  logic [0:0] FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_R0 ;
  logic [0:0] FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_X0 ;
  assign _122__T = FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_T ;
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_C0 = _122__C ;
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_R0 = _122__R ;
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_X0 = _122__X ;
  assign _122__S = 0 ;
  assign nor_26_nl = ~ _154_;
  logic [0:0] _154__C0 ;
  logic [0:0] _154__R0 ;
  logic [0:0] _154__X0 ;
  assign nor_26_nl_T = _154__T ;
  assign _154__C0 = nor_26_nl_C ;
  assign _154__R0 = nor_26_nl_R ;
  assign _154__X0 = nor_26_nl_X ;
  assign nor_26_nl_S = 0 ;
  assign nor_27_nl = ~ _158_;
  logic [0:0] _158__C0 ;
  logic [0:0] _158__R0 ;
  logic [0:0] _158__X0 ;
  assign nor_27_nl_T = _158__T ;
  assign _158__C0 = nor_27_nl_C ;
  assign _158__R0 = nor_27_nl_R ;
  assign _158__X0 = nor_27_nl_X ;
  assign nor_27_nl_S = 0 ;
  assign _123_ = ~ FpMul_8U_23U_else_2_if_acc_nl[8];
  assign { FpMul_8U_23U_else_2_if_acc_nl_R1 [0], FpMul_8U_23U_else_2_if_acc_nl_R1 [1], FpMul_8U_23U_else_2_if_acc_nl_R1 [2], FpMul_8U_23U_else_2_if_acc_nl_R1 [3], FpMul_8U_23U_else_2_if_acc_nl_R1 [4], FpMul_8U_23U_else_2_if_acc_nl_R1 [5], FpMul_8U_23U_else_2_if_acc_nl_R1 [6], FpMul_8U_23U_else_2_if_acc_nl_R1 [7] } = 0;
  assign { FpMul_8U_23U_else_2_if_acc_nl_X1 [0], FpMul_8U_23U_else_2_if_acc_nl_X1 [1], FpMul_8U_23U_else_2_if_acc_nl_X1 [2], FpMul_8U_23U_else_2_if_acc_nl_X1 [3], FpMul_8U_23U_else_2_if_acc_nl_X1 [4], FpMul_8U_23U_else_2_if_acc_nl_X1 [5], FpMul_8U_23U_else_2_if_acc_nl_X1 [6], FpMul_8U_23U_else_2_if_acc_nl_X1 [7] } = 0;
  assign { FpMul_8U_23U_else_2_if_acc_nl_C1 [0], FpMul_8U_23U_else_2_if_acc_nl_C1 [1], FpMul_8U_23U_else_2_if_acc_nl_C1 [2], FpMul_8U_23U_else_2_if_acc_nl_C1 [3], FpMul_8U_23U_else_2_if_acc_nl_C1 [4], FpMul_8U_23U_else_2_if_acc_nl_C1 [5], FpMul_8U_23U_else_2_if_acc_nl_C1 [6], FpMul_8U_23U_else_2_if_acc_nl_C1 [7] } = 0;
  logic [8:0] FpMul_8U_23U_else_2_if_acc_nl_C2 ;
  logic [8:0] FpMul_8U_23U_else_2_if_acc_nl_R2 ;
  logic [8:0] FpMul_8U_23U_else_2_if_acc_nl_X2 ;
  assign _123__T = FpMul_8U_23U_else_2_if_acc_nl_T [8] ;
  assign FpMul_8U_23U_else_2_if_acc_nl_C2 [8] = _123__C ;
  assign FpMul_8U_23U_else_2_if_acc_nl_R2 [8] = _123__R ;
  assign FpMul_8U_23U_else_2_if_acc_nl_X2 [8] = _123__X ;
  assign _123__S = 0 ;
  assign nor_32_nl = ~ _159_;
  logic [0:0] _159__C0 ;
  logic [0:0] _159__R0 ;
  logic [0:0] _159__X0 ;
  assign nor_32_nl_T = _159__T ;
  assign _159__C0 = nor_32_nl_C ;
  assign _159__R0 = nor_32_nl_R ;
  assign _159__X0 = nor_32_nl_X ;
  assign nor_32_nl_S = 0 ;
  assign _000_ = ~ or_tmp_24;
  logic [0:0] or_tmp_24_C0 ;
  logic [0:0] or_tmp_24_R0 ;
  logic [0:0] or_tmp_24_X0 ;
  assign _000__T = or_tmp_24_T ;
  assign or_tmp_24_C0 = _000__C ;
  assign or_tmp_24_R0 = _000__R ;
  assign or_tmp_24_X0 = _000__X ;
  assign _000__S = 0 ;
  assign nor_23_nl = ~ _160_;
  logic [0:0] _160__C0 ;
  logic [0:0] _160__R0 ;
  logic [0:0] _160__X0 ;
  assign nor_23_nl_T = _160__T ;
  assign _160__C0 = nor_23_nl_C ;
  assign _160__R0 = nor_23_nl_R ;
  assign _160__X0 = nor_23_nl_X ;
  assign nor_23_nl_S = 0 ;
  assign nor_21_nl = ~ _162_;
  logic [0:0] _162__C0 ;
  logic [0:0] _162__R0 ;
  logic [0:0] _162__X0 ;
  assign nor_21_nl_T = _162__T ;
  assign _162__C0 = nor_21_nl_C ;
  assign _162__R0 = nor_21_nl_R ;
  assign _162__X0 = nor_21_nl_X ;
  assign nor_21_nl_S = 0 ;
  assign _124_ = ~ _076_;
  logic [0:0] _076__C0 ;
  logic [0:0] _076__R0 ;
  logic [0:0] _076__X0 ;
  assign _124__T = _076__T ;
  assign _076__C0 = _124__C ;
  assign _076__R0 = _124__R ;
  assign _076__X0 = _124__X ;
  assign _124__S = 0 ;
  assign nor_31_nl = ~ _163_;
  logic [0:0] _163__C0 ;
  logic [0:0] _163__R0 ;
  logic [0:0] _163__X0 ;
  assign nor_31_nl_T = _163__T ;
  assign _163__C0 = nor_31_nl_C ;
  assign _163__R0 = nor_31_nl_R ;
  assign _163__X0 = nor_31_nl_X ;
  assign nor_31_nl_S = 0 ;
  assign _002_ = ~ mux_27_nl;
  logic [0:0] mux_27_nl_C0 ;
  logic [0:0] mux_27_nl_R0 ;
  logic [0:0] mux_27_nl_X0 ;
  assign _002__T = mux_27_nl_T ;
  assign mux_27_nl_C0 = _002__C ;
  assign mux_27_nl_R0 = _002__R ;
  assign mux_27_nl_X0 = _002__X ;
  assign _002__S = 0 ;
  assign _003_ = ~ and_cse;
  logic [0:0] and_cse_C2 ;
  logic [0:0] and_cse_R2 ;
  logic [0:0] and_cse_X2 ;
  assign _003__T = and_cse_T ;
  assign and_cse_C2 = _003__C ;
  assign and_cse_R2 = _003__R ;
  assign and_cse_X2 = _003__X ;
  assign _003__S = 0 ;
  assign nand_6_nl = ~ _077_;
  logic [0:0] _077__C0 ;
  logic [0:0] _077__R0 ;
  logic [0:0] _077__X0 ;
  assign nand_6_nl_T = _077__T ;
  assign _077__C0 = nand_6_nl_C ;
  assign _077__R0 = nand_6_nl_R ;
  assign _077__X0 = nand_6_nl_X ;
  assign nand_6_nl_S = 0 ;
  assign _125_ = ~ _168_;
  logic [0:0] _168__C0 ;
  logic [0:0] _168__R0 ;
  logic [0:0] _168__X0 ;
  assign _125__T = _168__T ;
  assign _168__C0 = _125__C ;
  assign _168__R0 = _125__R ;
  assign _168__X0 = _125__X ;
  assign _125__S = 0 ;
  assign _126_ = ~ reg_chn_o_rsci_ld_core_psct_cse;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C2 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R2 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X2 ;
  assign _126__T = reg_chn_o_rsci_ld_core_psct_cse_T ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C2 = _126__C ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R2 = _126__R ;
  assign reg_chn_o_rsci_ld_core_psct_cse_X2 = _126__X ;
  assign _126__S = 0 ;
  assign _127_ = ~ IsNaN_8U_23U_1_land_lpi_1_dfm_3;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_C0 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_R0 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_X0 ;
  assign _127__T = IsNaN_8U_23U_1_land_lpi_1_dfm_3_T ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_C0 = _127__C ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_R0 = _127__R ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_X0 = _127__X ;
  assign _127__S = 0 ;
  assign nor_4_cse = ~ _169_;
  logic [0:0] _169__C0 ;
  logic [0:0] _169__R0 ;
  logic [0:0] _169__X0 ;
  assign nor_4_cse_T = _169__T ;
  assign _169__C0 = nor_4_cse_C ;
  assign _169__R0 = nor_4_cse_R ;
  assign _169__X0 = nor_4_cse_X ;
  assign nor_4_cse_S = 0 ;
  assign _128_ = ~ IsNaN_8U_23U_land_lpi_1_dfm_st_3;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_3_C1 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_3_R1 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_3_X1 ;
  assign _128__T = IsNaN_8U_23U_land_lpi_1_dfm_st_3_T ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_C1 = _128__C ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_R1 = _128__R ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_X1 = _128__X ;
  assign _128__S = 0 ;
  assign nand_8_cse = ~ _094_;
  logic [0:0] _094__C2 ;
  logic [0:0] _094__R2 ;
  logic [0:0] _094__X2 ;
  assign nand_8_cse_T = _094__T ;
  assign _094__C2 = nand_8_cse_C ;
  assign _094__R2 = nand_8_cse_R ;
  assign _094__X2 = nand_8_cse_X ;
  assign nand_8_cse_S = 0 ;
  assign nand_cse = ~ and_91_nl;
  logic [0:0] and_91_nl_C1 ;
  logic [0:0] and_91_nl_R1 ;
  logic [0:0] and_91_nl_X1 ;
  assign nand_cse_T = and_91_nl_T ;
  assign and_91_nl_C1 = nand_cse_C ;
  assign and_91_nl_R1 = nand_cse_R ;
  assign and_91_nl_X1 = nand_cse_X ;
  assign nand_cse_S = 0 ;
  assign IsNaN_8U_23U_nor_tmp = ~ _097_;
  logic [0:0] _097__C1 ;
  logic [0:0] _097__R1 ;
  logic [0:0] _097__X1 ;
  assign IsNaN_8U_23U_nor_tmp_T = _097__T ;
  assign _097__C1 = IsNaN_8U_23U_nor_tmp_C ;
  assign _097__R1 = IsNaN_8U_23U_nor_tmp_R ;
  assign _097__X1 = IsNaN_8U_23U_nor_tmp_X ;
  assign IsNaN_8U_23U_nor_tmp_S = 0 ;
  assign IsNaN_8U_23U_1_nor_tmp = ~ _098_;
  logic [0:0] _098__C1 ;
  logic [0:0] _098__R1 ;
  logic [0:0] _098__X1 ;
  assign IsNaN_8U_23U_1_nor_tmp_T = _098__T ;
  assign _098__C1 = IsNaN_8U_23U_1_nor_tmp_C ;
  assign _098__R1 = IsNaN_8U_23U_1_nor_tmp_R ;
  assign _098__X1 = IsNaN_8U_23U_1_nor_tmp_X ;
  assign IsNaN_8U_23U_1_nor_tmp_S = 0 ;
  assign _129_ = ~ _099_;
  logic [0:0] _099__C0 ;
  logic [0:0] _099__R0 ;
  logic [0:0] _099__X0 ;
  assign _129__T = _099__T ;
  assign _099__C0 = _129__C ;
  assign _099__R0 = _129__R ;
  assign _099__X0 = _129__X ;
  assign _129__S = 0 ;
  assign _130_ = ~ _100_;
  logic [0:0] _100__C0 ;
  logic [0:0] _100__R0 ;
  logic [0:0] _100__X0 ;
  assign _130__T = _100__T ;
  assign _100__C0 = _130__C ;
  assign _100__R0 = _130__R ;
  assign _100__X0 = _130__X ;
  assign _130__S = 0 ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp = ~ _004_[22];
  assign { _004__R0 [0], _004__R0 [1], _004__R0 [2], _004__R0 [3], _004__R0 [4], _004__R0 [5], _004__R0 [6], _004__R0 [7], _004__R0 [8], _004__R0 [9], _004__R0 [10], _004__R0 [11], _004__R0 [12], _004__R0 [13], _004__R0 [14], _004__R0 [15], _004__R0 [16], _004__R0 [17], _004__R0 [18], _004__R0 [19], _004__R0 [20], _004__R0 [21] } = 0;
  assign { _004__X0 [0], _004__X0 [1], _004__X0 [2], _004__X0 [3], _004__X0 [4], _004__X0 [5], _004__X0 [6], _004__X0 [7], _004__X0 [8], _004__X0 [9], _004__X0 [10], _004__X0 [11], _004__X0 [12], _004__X0 [13], _004__X0 [14], _004__X0 [15], _004__X0 [16], _004__X0 [17], _004__X0 [18], _004__X0 [19], _004__X0 [20], _004__X0 [21] } = 0;
  assign { _004__C0 [0], _004__C0 [1], _004__C0 [2], _004__C0 [3], _004__C0 [4], _004__C0 [5], _004__C0 [6], _004__C0 [7], _004__C0 [8], _004__C0 [9], _004__C0 [10], _004__C0 [11], _004__C0 [12], _004__C0 [13], _004__C0 [14], _004__C0 [15], _004__C0 [16], _004__C0 [17], _004__C0 [18], _004__C0 [19], _004__C0 [20], _004__C0 [21] } = 0;
  logic [22:0] _004__C1 ;
  logic [22:0] _004__R1 ;
  logic [22:0] _004__X1 ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_T = _004__T [22] ;
  assign _004__C1 [22] = FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_C ;
  assign _004__R1 [22] = FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_R ;
  assign _004__X1 [22] = FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_X ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_S = 0 ;
  assign FpMul_8U_23U_FpMul_8U_23U_nor_1_nl = ~ _194_;
  logic [0:0] _194__C0 ;
  logic [0:0] _194__R0 ;
  logic [0:0] _194__X0 ;
  assign FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_T = _194__T ;
  assign _194__C0 = FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_C ;
  assign _194__R0 = FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_R ;
  assign _194__X0 = FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X ;
  assign FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_S = 0 ;
  assign _132_ = ~ _101_;
  logic [0:0] _101__C0 ;
  logic [0:0] _101__R0 ;
  logic [0:0] _101__X0 ;
  assign _132__T = _101__T ;
  assign _101__C0 = _132__C ;
  assign _101__R0 = _132__R ;
  assign _101__X0 = _132__X ;
  assign _132__S = 0 ;
  assign _133_ = ~ FpMul_8U_23U_p_mant_p1_sva_2[47];
  assign { FpMul_8U_23U_p_mant_p1_sva_2_R1 [0], FpMul_8U_23U_p_mant_p1_sva_2_R1 [1], FpMul_8U_23U_p_mant_p1_sva_2_R1 [2], FpMul_8U_23U_p_mant_p1_sva_2_R1 [3], FpMul_8U_23U_p_mant_p1_sva_2_R1 [4], FpMul_8U_23U_p_mant_p1_sva_2_R1 [5], FpMul_8U_23U_p_mant_p1_sva_2_R1 [6], FpMul_8U_23U_p_mant_p1_sva_2_R1 [7], FpMul_8U_23U_p_mant_p1_sva_2_R1 [8], FpMul_8U_23U_p_mant_p1_sva_2_R1 [9], FpMul_8U_23U_p_mant_p1_sva_2_R1 [10], FpMul_8U_23U_p_mant_p1_sva_2_R1 [11], FpMul_8U_23U_p_mant_p1_sva_2_R1 [12], FpMul_8U_23U_p_mant_p1_sva_2_R1 [13], FpMul_8U_23U_p_mant_p1_sva_2_R1 [14], FpMul_8U_23U_p_mant_p1_sva_2_R1 [15], FpMul_8U_23U_p_mant_p1_sva_2_R1 [16], FpMul_8U_23U_p_mant_p1_sva_2_R1 [17], FpMul_8U_23U_p_mant_p1_sva_2_R1 [18], FpMul_8U_23U_p_mant_p1_sva_2_R1 [19], FpMul_8U_23U_p_mant_p1_sva_2_R1 [20], FpMul_8U_23U_p_mant_p1_sva_2_R1 [21], FpMul_8U_23U_p_mant_p1_sva_2_R1 [22], FpMul_8U_23U_p_mant_p1_sva_2_R1 [23], FpMul_8U_23U_p_mant_p1_sva_2_R1 [24], FpMul_8U_23U_p_mant_p1_sva_2_R1 [25], FpMul_8U_23U_p_mant_p1_sva_2_R1 [26], FpMul_8U_23U_p_mant_p1_sva_2_R1 [27], FpMul_8U_23U_p_mant_p1_sva_2_R1 [28], FpMul_8U_23U_p_mant_p1_sva_2_R1 [29], FpMul_8U_23U_p_mant_p1_sva_2_R1 [30], FpMul_8U_23U_p_mant_p1_sva_2_R1 [31], FpMul_8U_23U_p_mant_p1_sva_2_R1 [32], FpMul_8U_23U_p_mant_p1_sva_2_R1 [33], FpMul_8U_23U_p_mant_p1_sva_2_R1 [34], FpMul_8U_23U_p_mant_p1_sva_2_R1 [35], FpMul_8U_23U_p_mant_p1_sva_2_R1 [36], FpMul_8U_23U_p_mant_p1_sva_2_R1 [37], FpMul_8U_23U_p_mant_p1_sva_2_R1 [38], FpMul_8U_23U_p_mant_p1_sva_2_R1 [39], FpMul_8U_23U_p_mant_p1_sva_2_R1 [40], FpMul_8U_23U_p_mant_p1_sva_2_R1 [41], FpMul_8U_23U_p_mant_p1_sva_2_R1 [42], FpMul_8U_23U_p_mant_p1_sva_2_R1 [43], FpMul_8U_23U_p_mant_p1_sva_2_R1 [44], FpMul_8U_23U_p_mant_p1_sva_2_R1 [45], FpMul_8U_23U_p_mant_p1_sva_2_R1 [46] } = 0;
  assign { FpMul_8U_23U_p_mant_p1_sva_2_X1 [0], FpMul_8U_23U_p_mant_p1_sva_2_X1 [1], FpMul_8U_23U_p_mant_p1_sva_2_X1 [2], FpMul_8U_23U_p_mant_p1_sva_2_X1 [3], FpMul_8U_23U_p_mant_p1_sva_2_X1 [4], FpMul_8U_23U_p_mant_p1_sva_2_X1 [5], FpMul_8U_23U_p_mant_p1_sva_2_X1 [6], FpMul_8U_23U_p_mant_p1_sva_2_X1 [7], FpMul_8U_23U_p_mant_p1_sva_2_X1 [8], FpMul_8U_23U_p_mant_p1_sva_2_X1 [9], FpMul_8U_23U_p_mant_p1_sva_2_X1 [10], FpMul_8U_23U_p_mant_p1_sva_2_X1 [11], FpMul_8U_23U_p_mant_p1_sva_2_X1 [12], FpMul_8U_23U_p_mant_p1_sva_2_X1 [13], FpMul_8U_23U_p_mant_p1_sva_2_X1 [14], FpMul_8U_23U_p_mant_p1_sva_2_X1 [15], FpMul_8U_23U_p_mant_p1_sva_2_X1 [16], FpMul_8U_23U_p_mant_p1_sva_2_X1 [17], FpMul_8U_23U_p_mant_p1_sva_2_X1 [18], FpMul_8U_23U_p_mant_p1_sva_2_X1 [19], FpMul_8U_23U_p_mant_p1_sva_2_X1 [20], FpMul_8U_23U_p_mant_p1_sva_2_X1 [21], FpMul_8U_23U_p_mant_p1_sva_2_X1 [22], FpMul_8U_23U_p_mant_p1_sva_2_X1 [23], FpMul_8U_23U_p_mant_p1_sva_2_X1 [24], FpMul_8U_23U_p_mant_p1_sva_2_X1 [25], FpMul_8U_23U_p_mant_p1_sva_2_X1 [26], FpMul_8U_23U_p_mant_p1_sva_2_X1 [27], FpMul_8U_23U_p_mant_p1_sva_2_X1 [28], FpMul_8U_23U_p_mant_p1_sva_2_X1 [29], FpMul_8U_23U_p_mant_p1_sva_2_X1 [30], FpMul_8U_23U_p_mant_p1_sva_2_X1 [31], FpMul_8U_23U_p_mant_p1_sva_2_X1 [32], FpMul_8U_23U_p_mant_p1_sva_2_X1 [33], FpMul_8U_23U_p_mant_p1_sva_2_X1 [34], FpMul_8U_23U_p_mant_p1_sva_2_X1 [35], FpMul_8U_23U_p_mant_p1_sva_2_X1 [36], FpMul_8U_23U_p_mant_p1_sva_2_X1 [37], FpMul_8U_23U_p_mant_p1_sva_2_X1 [38], FpMul_8U_23U_p_mant_p1_sva_2_X1 [39], FpMul_8U_23U_p_mant_p1_sva_2_X1 [40], FpMul_8U_23U_p_mant_p1_sva_2_X1 [41], FpMul_8U_23U_p_mant_p1_sva_2_X1 [42], FpMul_8U_23U_p_mant_p1_sva_2_X1 [43], FpMul_8U_23U_p_mant_p1_sva_2_X1 [44], FpMul_8U_23U_p_mant_p1_sva_2_X1 [45], FpMul_8U_23U_p_mant_p1_sva_2_X1 [46] } = 0;
  assign { FpMul_8U_23U_p_mant_p1_sva_2_C1 [0], FpMul_8U_23U_p_mant_p1_sva_2_C1 [1], FpMul_8U_23U_p_mant_p1_sva_2_C1 [2], FpMul_8U_23U_p_mant_p1_sva_2_C1 [3], FpMul_8U_23U_p_mant_p1_sva_2_C1 [4], FpMul_8U_23U_p_mant_p1_sva_2_C1 [5], FpMul_8U_23U_p_mant_p1_sva_2_C1 [6], FpMul_8U_23U_p_mant_p1_sva_2_C1 [7], FpMul_8U_23U_p_mant_p1_sva_2_C1 [8], FpMul_8U_23U_p_mant_p1_sva_2_C1 [9], FpMul_8U_23U_p_mant_p1_sva_2_C1 [10], FpMul_8U_23U_p_mant_p1_sva_2_C1 [11], FpMul_8U_23U_p_mant_p1_sva_2_C1 [12], FpMul_8U_23U_p_mant_p1_sva_2_C1 [13], FpMul_8U_23U_p_mant_p1_sva_2_C1 [14], FpMul_8U_23U_p_mant_p1_sva_2_C1 [15], FpMul_8U_23U_p_mant_p1_sva_2_C1 [16], FpMul_8U_23U_p_mant_p1_sva_2_C1 [17], FpMul_8U_23U_p_mant_p1_sva_2_C1 [18], FpMul_8U_23U_p_mant_p1_sva_2_C1 [19], FpMul_8U_23U_p_mant_p1_sva_2_C1 [20], FpMul_8U_23U_p_mant_p1_sva_2_C1 [21], FpMul_8U_23U_p_mant_p1_sva_2_C1 [22], FpMul_8U_23U_p_mant_p1_sva_2_C1 [23], FpMul_8U_23U_p_mant_p1_sva_2_C1 [24], FpMul_8U_23U_p_mant_p1_sva_2_C1 [25], FpMul_8U_23U_p_mant_p1_sva_2_C1 [26], FpMul_8U_23U_p_mant_p1_sva_2_C1 [27], FpMul_8U_23U_p_mant_p1_sva_2_C1 [28], FpMul_8U_23U_p_mant_p1_sva_2_C1 [29], FpMul_8U_23U_p_mant_p1_sva_2_C1 [30], FpMul_8U_23U_p_mant_p1_sva_2_C1 [31], FpMul_8U_23U_p_mant_p1_sva_2_C1 [32], FpMul_8U_23U_p_mant_p1_sva_2_C1 [33], FpMul_8U_23U_p_mant_p1_sva_2_C1 [34], FpMul_8U_23U_p_mant_p1_sva_2_C1 [35], FpMul_8U_23U_p_mant_p1_sva_2_C1 [36], FpMul_8U_23U_p_mant_p1_sva_2_C1 [37], FpMul_8U_23U_p_mant_p1_sva_2_C1 [38], FpMul_8U_23U_p_mant_p1_sva_2_C1 [39], FpMul_8U_23U_p_mant_p1_sva_2_C1 [40], FpMul_8U_23U_p_mant_p1_sva_2_C1 [41], FpMul_8U_23U_p_mant_p1_sva_2_C1 [42], FpMul_8U_23U_p_mant_p1_sva_2_C1 [43], FpMul_8U_23U_p_mant_p1_sva_2_C1 [44], FpMul_8U_23U_p_mant_p1_sva_2_C1 [45], FpMul_8U_23U_p_mant_p1_sva_2_C1 [46] } = 0;
  logic [47:0] FpMul_8U_23U_p_mant_p1_sva_2_C2 ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_sva_2_R2 ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_sva_2_X2 ;
  assign _133__T = FpMul_8U_23U_p_mant_p1_sva_2_T [47] ;
  assign FpMul_8U_23U_p_mant_p1_sva_2_C2 [47] = _133__C ;
  assign FpMul_8U_23U_p_mant_p1_sva_2_R2 [47] = _133__R ;
  assign FpMul_8U_23U_p_mant_p1_sva_2_X2 [47] = _133__X ;
  assign _133__S = 0 ;
  assign FpMul_8U_23U_is_inf_lpi_1_dfm_2 = ~ _131_;
  logic [0:0] _131__C1 ;
  logic [0:0] _131__R1 ;
  logic [0:0] _131__X1 ;
  assign FpMul_8U_23U_is_inf_lpi_1_dfm_2_T = _131__T ;
  assign _131__C1 = FpMul_8U_23U_is_inf_lpi_1_dfm_2_C ;
  assign _131__R1 = FpMul_8U_23U_is_inf_lpi_1_dfm_2_R ;
  assign _131__X1 = FpMul_8U_23U_is_inf_lpi_1_dfm_2_X ;
  assign FpMul_8U_23U_is_inf_lpi_1_dfm_2_S = 0 ;
  assign nor_nl = ~ _198_;
  logic [0:0] _198__C0 ;
  logic [0:0] _198__R0 ;
  logic [0:0] _198__X0 ;
  assign nor_nl_T = _198__T ;
  assign _198__C0 = nor_nl_C ;
  assign _198__R0 = nor_nl_R ;
  assign _198__X0 = nor_nl_X ;
  assign nor_nl_S = 0 ;
  assign _134_ = ~ chn_a_rsci_bawt;
  logic [0:0] chn_a_rsci_bawt_C2 ;
  logic [0:0] chn_a_rsci_bawt_R2 ;
  logic [0:0] chn_a_rsci_bawt_X2 ;
  assign _134__T = chn_a_rsci_bawt_T ;
  assign chn_a_rsci_bawt_C2 = _134__C ;
  assign chn_a_rsci_bawt_R2 = _134__R ;
  assign chn_a_rsci_bawt_X2 = _134__X ;
  assign _134__S = 0 ;
  assign _135_ = ~ chn_b_rsci_bawt;
  logic [0:0] chn_b_rsci_bawt_C2 ;
  logic [0:0] chn_b_rsci_bawt_R2 ;
  logic [0:0] chn_b_rsci_bawt_X2 ;
  assign _135__T = chn_b_rsci_bawt_T ;
  assign chn_b_rsci_bawt_C2 = _135__C ;
  assign chn_b_rsci_bawt_R2 = _135__R ;
  assign chn_b_rsci_bawt_X2 = _135__X ;
  assign _135__S = 0 ;
  assign nor_28_nl = ~ _203_;
  logic [0:0] _203__C0 ;
  logic [0:0] _203__R0 ;
  logic [0:0] _203__X0 ;
  assign nor_28_nl_T = _203__T ;
  assign _203__C0 = nor_28_nl_C ;
  assign _203__R0 = nor_28_nl_R ;
  assign _203__X0 = nor_28_nl_X ;
  assign nor_28_nl_S = 0 ;
  assign not_tmp_9 = ~ and_dcpl_16;
  logic [0:0] and_dcpl_16_C1 ;
  logic [0:0] and_dcpl_16_R1 ;
  logic [0:0] and_dcpl_16_X1 ;
  assign not_tmp_9_T = and_dcpl_16_T ;
  assign and_dcpl_16_C1 = not_tmp_9_C ;
  assign and_dcpl_16_R1 = not_tmp_9_R ;
  assign and_dcpl_16_X1 = not_tmp_9_X ;
  assign not_tmp_9_S = 0 ;
  assign _136_ = ~ or_10_cse;
  logic [0:0] or_10_cse_C12 ;
  logic [0:0] or_10_cse_R12 ;
  logic [0:0] or_10_cse_X12 ;
  assign _136__T = or_10_cse_T ;
  assign or_10_cse_C12 = _136__C ;
  assign or_10_cse_R12 = _136__R ;
  assign or_10_cse_X12 = _136__X ;
  assign _136__S = 0 ;
  assign nor_22_nl = ~ _206_;
  logic [0:0] _206__C0 ;
  logic [0:0] _206__R0 ;
  logic [0:0] _206__X0 ;
  assign nor_22_nl_T = _206__T ;
  assign _206__C0 = nor_22_nl_C ;
  assign _206__R0 = nor_22_nl_R ;
  assign _206__X0 = nor_22_nl_X ;
  assign nor_22_nl_S = 0 ;
  assign _137_ = ~ chn_o_rsci_bawt;
  logic [0:0] chn_o_rsci_bawt_C1 ;
  logic [0:0] chn_o_rsci_bawt_R1 ;
  logic [0:0] chn_o_rsci_bawt_X1 ;
  assign _137__T = chn_o_rsci_bawt_T ;
  assign chn_o_rsci_bawt_C1 = _137__C ;
  assign chn_o_rsci_bawt_R1 = _137__R ;
  assign chn_o_rsci_bawt_X1 = _137__X ;
  assign _137__S = 0 ;
  assign _138_ = ~ IsNaN_8U_23U_land_lpi_1_dfm_4;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_4_C1 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_4_R1 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_4_X1 ;
  assign _138__T = IsNaN_8U_23U_land_lpi_1_dfm_4_T ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_4_C1 = _138__C ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_4_R1 = _138__R ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_4_X1 = _138__X ;
  assign _138__S = 0 ;
  assign _139_ = _046_ | chn_o_rsci_d_30_23_mx0c1;
  assign _139__S = 0 ;
  logic [0:0] _046__C0 ;
  logic [0:0] _046__R0 ;
  logic [0:0] _046__X0 ;
  logic [0:0] chn_o_rsci_d_30_23_mx0c1_C1 ;
  logic [0:0] chn_o_rsci_d_30_23_mx0c1_R1 ;
  logic [0:0] chn_o_rsci_d_30_23_mx0c1_X1 ;
  assign _139__T = _046__T | chn_o_rsci_d_30_23_mx0c1_T ;
  assign _046__C0 = _139__C ;
  assign _046__X0 = _139__X ;
  assign chn_o_rsci_d_30_23_mx0c1_C1 = _139__C ;
  assign chn_o_rsci_d_30_23_mx0c1_X1 = _139__X ;
  assign _046__R0 = ( _139__R | _139__C & chn_o_rsci_d_30_23_mx0c1_T ) & { 1{ chn_o_rsci_d_30_23_mx0c1 != 1'b1 }} ;
  assign chn_o_rsci_d_30_23_mx0c1_R1 = ( _139__R | _139__C & _046__T ) & { 1{ _046_ != 1'b1 }} ;
  assign _140_ = and_dcpl_12 | and_dcpl_13;
  assign _140__S = 0 ;
  logic [0:0] and_dcpl_12_C3 ;
  logic [0:0] and_dcpl_12_R3 ;
  logic [0:0] and_dcpl_12_X3 ;
  logic [0:0] and_dcpl_13_C1 ;
  logic [0:0] and_dcpl_13_R1 ;
  logic [0:0] and_dcpl_13_X1 ;
  assign _140__T = and_dcpl_12_T | and_dcpl_13_T ;
  assign and_dcpl_12_C3 = _140__C ;
  assign and_dcpl_12_X3 = _140__X ;
  assign and_dcpl_13_C1 = _140__C ;
  assign and_dcpl_13_X1 = _140__X ;
  assign and_dcpl_12_R3 = ( _140__R | _140__C & and_dcpl_13_T ) & { 1{ and_dcpl_13 != 1'b1 }} ;
  assign and_dcpl_13_R1 = ( _140__R | _140__C & and_dcpl_12_T ) & { 1{ and_dcpl_12 != 1'b1 }} ;
  assign _141_ = or_tmp_65 | main_stage_v_1_mx0c1;
  assign _141__S = 0 ;
  logic [0:0] or_tmp_65_C0 ;
  logic [0:0] or_tmp_65_R0 ;
  logic [0:0] or_tmp_65_X0 ;
  logic [0:0] main_stage_v_1_mx0c1_C1 ;
  logic [0:0] main_stage_v_1_mx0c1_R1 ;
  logic [0:0] main_stage_v_1_mx0c1_X1 ;
  assign _141__T = or_tmp_65_T | main_stage_v_1_mx0c1_T ;
  assign or_tmp_65_C0 = _141__C ;
  assign or_tmp_65_X0 = _141__X ;
  assign main_stage_v_1_mx0c1_C1 = _141__C ;
  assign main_stage_v_1_mx0c1_X1 = _141__X ;
  assign or_tmp_65_R0 = ( _141__R | _141__C & main_stage_v_1_mx0c1_T ) & { 1{ main_stage_v_1_mx0c1 != 1'b1 }} ;
  assign main_stage_v_1_mx0c1_R1 = ( _141__R | _141__C & or_tmp_65_T ) & { 1{ or_tmp_65 != 1'b1 }} ;
  assign _142_ = IsNaN_8U_23U_nor_tmp | nand_cse;
  assign _142__S = 0 ;
  logic [0:0] IsNaN_8U_23U_nor_tmp_C0 ;
  logic [0:0] IsNaN_8U_23U_nor_tmp_R0 ;
  logic [0:0] IsNaN_8U_23U_nor_tmp_X0 ;
  logic [0:0] nand_cse_C2 ;
  logic [0:0] nand_cse_R2 ;
  logic [0:0] nand_cse_X2 ;
  assign _142__T = IsNaN_8U_23U_nor_tmp_T | nand_cse_T ;
  assign IsNaN_8U_23U_nor_tmp_C0 = _142__C ;
  assign IsNaN_8U_23U_nor_tmp_X0 = _142__X ;
  assign nand_cse_C2 = _142__C ;
  assign nand_cse_X2 = _142__X ;
  assign IsNaN_8U_23U_nor_tmp_R0 = ( _142__R | _142__C & nand_cse_T ) & { 1{ nand_cse != 1'b1 }} ;
  assign nand_cse_R2 = ( _142__R | _142__C & IsNaN_8U_23U_nor_tmp_T ) & { 1{ IsNaN_8U_23U_nor_tmp != 1'b1 }} ;
  assign or_tmp_55 = IsNaN_8U_23U_1_nor_tmp | nand_8_cse;
  assign or_tmp_55_S = 0 ;
  logic [0:0] IsNaN_8U_23U_1_nor_tmp_C0 ;
  logic [0:0] IsNaN_8U_23U_1_nor_tmp_R0 ;
  logic [0:0] IsNaN_8U_23U_1_nor_tmp_X0 ;
  logic [0:0] nand_8_cse_C1 ;
  logic [0:0] nand_8_cse_R1 ;
  logic [0:0] nand_8_cse_X1 ;
  assign or_tmp_55_T = IsNaN_8U_23U_1_nor_tmp_T | nand_8_cse_T ;
  assign IsNaN_8U_23U_1_nor_tmp_C0 = or_tmp_55_C ;
  assign IsNaN_8U_23U_1_nor_tmp_X0 = or_tmp_55_X ;
  assign nand_8_cse_C1 = or_tmp_55_C ;
  assign nand_8_cse_X1 = or_tmp_55_X ;
  assign IsNaN_8U_23U_1_nor_tmp_R0 = ( or_tmp_55_R | or_tmp_55_C & nand_8_cse_T ) & { 1{ nand_8_cse != 1'b1 }} ;
  assign nand_8_cse_R1 = ( or_tmp_55_R | or_tmp_55_C & IsNaN_8U_23U_1_nor_tmp_T ) & { 1{ IsNaN_8U_23U_1_nor_tmp != 1'b1 }} ;
  assign _143_ = and_dcpl_16 | main_stage_v_2_mx0c1;
  assign _143__S = 0 ;
  logic [0:0] and_dcpl_16_C2 ;
  logic [0:0] and_dcpl_16_R2 ;
  logic [0:0] and_dcpl_16_X2 ;
  logic [0:0] main_stage_v_2_mx0c1_C1 ;
  logic [0:0] main_stage_v_2_mx0c1_R1 ;
  logic [0:0] main_stage_v_2_mx0c1_X1 ;
  assign _143__T = and_dcpl_16_T | main_stage_v_2_mx0c1_T ;
  assign and_dcpl_16_C2 = _143__C ;
  assign and_dcpl_16_X2 = _143__X ;
  assign main_stage_v_2_mx0c1_C1 = _143__C ;
  assign main_stage_v_2_mx0c1_X1 = _143__X ;
  assign and_dcpl_16_R2 = ( _143__R | _143__C & main_stage_v_2_mx0c1_T ) & { 1{ main_stage_v_2_mx0c1 != 1'b1 }} ;
  assign main_stage_v_2_mx0c1_R1 = ( _143__R | _143__C & and_dcpl_16_T ) & { 1{ and_dcpl_16 != 1'b1 }} ;
  assign _144_ = _055_ | and_41_rgt;
  assign _144__S = 0 ;
  logic [0:0] _055__C0 ;
  logic [0:0] _055__R0 ;
  logic [0:0] _055__X0 ;
  logic [0:0] and_41_rgt_C0 ;
  logic [0:0] and_41_rgt_R0 ;
  logic [0:0] and_41_rgt_X0 ;
  assign _144__T = _055__T | and_41_rgt_T ;
  assign _055__C0 = _144__C ;
  assign _055__X0 = _144__X ;
  assign and_41_rgt_C0 = _144__C ;
  assign and_41_rgt_X0 = _144__X ;
  assign _055__R0 = ( _144__R | _144__C & and_41_rgt_T ) & { 1{ and_41_rgt != 1'b1 }} ;
  assign and_41_rgt_R0 = ( _144__R | _144__C & _055__T ) & { 1{ _055_ != 1'b1 }} ;
  assign _145_ = _054_ | and_45_rgt;
  assign _145__S = 0 ;
  logic [0:0] _054__C1 ;
  logic [0:0] _054__R1 ;
  logic [0:0] _054__X1 ;
  logic [0:0] and_45_rgt_C0 ;
  logic [0:0] and_45_rgt_R0 ;
  logic [0:0] and_45_rgt_X0 ;
  assign _145__T = _054__T | and_45_rgt_T ;
  assign _054__C1 = _145__C ;
  assign _054__X1 = _145__X ;
  assign and_45_rgt_C0 = _145__C ;
  assign and_45_rgt_X0 = _145__X ;
  assign _054__R1 = ( _145__R | _145__C & and_45_rgt_T ) & { 1{ and_45_rgt != 1'b1 }} ;
  assign and_45_rgt_R0 = ( _145__R | _145__C & _054__T ) & { 1{ _054_ != 1'b1 }} ;
  assign _146_ = and_dcpl_6 | _001_;
  assign _146__S = 0 ;
  logic [0:0] and_dcpl_6_C1 ;
  logic [0:0] and_dcpl_6_R1 ;
  logic [0:0] and_dcpl_6_X1 ;
  logic [0:0] _001__C1 ;
  logic [0:0] _001__R1 ;
  logic [0:0] _001__X1 ;
  assign _146__T = and_dcpl_6_T | _001__T ;
  assign and_dcpl_6_C1 = _146__C ;
  assign and_dcpl_6_X1 = _146__X ;
  assign _001__C1 = _146__C ;
  assign _001__X1 = _146__X ;
  assign and_dcpl_6_R1 = ( _146__R | _146__C & _001__T ) & { 1{ _001_ != 1'b1 }} ;
  assign _001__R1 = ( _146__R | _146__C & and_dcpl_6_T ) & { 1{ and_dcpl_6 != 1'b1 }} ;
  assign _147_ = _146_ | or_29_cse;
  assign _147__S = 0 ;
  logic [0:0] _146__C0 ;
  logic [0:0] _146__R0 ;
  logic [0:0] _146__X0 ;
  logic [0:0] or_29_cse_C1 ;
  logic [0:0] or_29_cse_R1 ;
  logic [0:0] or_29_cse_X1 ;
  assign _147__T = _146__T | or_29_cse_T ;
  assign _146__C0 = _147__C ;
  assign _146__X0 = _147__X ;
  assign or_29_cse_C1 = _147__C ;
  assign or_29_cse_X1 = _147__X ;
  assign _146__R0 = ( _147__R | _147__C & or_29_cse_T ) & { 1{ or_29_cse != 1'b1 }} ;
  assign or_29_cse_R1 = ( _147__R | _147__C & _146__T ) & { 1{ _146_ != 1'b1 }} ;
  assign _148_ = and_54_rgt | and_64_rgt;
  assign _148__S = 0 ;
  logic [0:0] and_54_rgt_C1 ;
  logic [0:0] and_54_rgt_R1 ;
  logic [0:0] and_54_rgt_X1 ;
  logic [0:0] and_64_rgt_C1 ;
  logic [0:0] and_64_rgt_R1 ;
  logic [0:0] and_64_rgt_X1 ;
  assign _148__T = and_54_rgt_T | and_64_rgt_T ;
  assign and_54_rgt_C1 = _148__C ;
  assign and_54_rgt_X1 = _148__X ;
  assign and_64_rgt_C1 = _148__C ;
  assign and_64_rgt_X1 = _148__X ;
  assign and_54_rgt_R1 = ( _148__R | _148__C & and_64_rgt_T ) & { 1{ and_64_rgt != 1'b1 }} ;
  assign and_64_rgt_R1 = ( _148__R | _148__C & and_54_rgt_T ) & { 1{ and_54_rgt != 1'b1 }} ;
  assign _149_ = _148_ | and_65_rgt;
  assign _149__S = 0 ;
  logic [0:0] _148__C0 ;
  logic [0:0] _148__R0 ;
  logic [0:0] _148__X0 ;
  logic [0:0] and_65_rgt_C1 ;
  logic [0:0] and_65_rgt_R1 ;
  logic [0:0] and_65_rgt_X1 ;
  assign _149__T = _148__T | and_65_rgt_T ;
  assign _148__C0 = _149__C ;
  assign _148__X0 = _149__X ;
  assign and_65_rgt_C1 = _149__C ;
  assign and_65_rgt_X1 = _149__X ;
  assign _148__R0 = ( _149__R | _149__C & and_65_rgt_T ) & { 1{ and_65_rgt != 1'b1 }} ;
  assign and_65_rgt_R1 = ( _149__R | _149__C & _148__T ) & { 1{ _148_ != 1'b1 }} ;
  assign or_nl = FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp | _117_;
  assign or_nl_S = 0 ;
  logic [0:0] FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_C1 ;
  logic [0:0] FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_R1 ;
  logic [0:0] FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_X1 ;
  logic [0:0] _117__C0 ;
  logic [0:0] _117__R0 ;
  logic [0:0] _117__X0 ;
  assign or_nl_T = FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_T | _117__T ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_C1 = or_nl_C ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_X1 = or_nl_X ;
  assign _117__C0 = or_nl_C ;
  assign _117__X0 = or_nl_X ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_R1 = ( or_nl_R | or_nl_C & _117__T ) & { 1{ _117_ != 1'b1 }} ;
  assign _117__R0 = ( or_nl_R | or_nl_C & FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_T ) & { 1{ FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp != 1'b1 }} ;
  assign or_65_cse = _001_ | FpMul_8U_23U_lor_1_lpi_1_dfm_st_3;
  assign or_65_cse_S = 0 ;
  logic [0:0] _001__C2 ;
  logic [0:0] _001__R2 ;
  logic [0:0] _001__X2 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_C2 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_R2 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_X2 ;
  assign or_65_cse_T = _001__T | FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_T ;
  assign _001__C2 = or_65_cse_C ;
  assign _001__X2 = or_65_cse_X ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_C2 = or_65_cse_C ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_X2 = or_65_cse_X ;
  assign _001__R2 = ( or_65_cse_R | or_65_cse_C & FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_T ) & { 1{ FpMul_8U_23U_lor_1_lpi_1_dfm_st_3 != 1'b1 }} ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_R2 = ( or_65_cse_R | or_65_cse_C & _001__T ) & { 1{ _001_ != 1'b1 }} ;
  assign _150_ = IsNaN_8U_23U_land_lpi_1_dfm_st_3 | IsNaN_8U_23U_1_land_lpi_1_dfm_3;
  assign _150__S = 0 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_3_C2 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_3_R2 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_3_X2 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_C1 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_R1 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_X1 ;
  assign _150__T = IsNaN_8U_23U_land_lpi_1_dfm_st_3_T | IsNaN_8U_23U_1_land_lpi_1_dfm_3_T ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_C2 = _150__C ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_X2 = _150__X ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_C1 = _150__C ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_X1 = _150__X ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_R2 = ( _150__R | _150__C & IsNaN_8U_23U_1_land_lpi_1_dfm_3_T ) & { 1{ IsNaN_8U_23U_1_land_lpi_1_dfm_3 != 1'b1 }} ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_R1 = ( _150__R | _150__C & IsNaN_8U_23U_land_lpi_1_dfm_st_3_T ) & { 1{ IsNaN_8U_23U_land_lpi_1_dfm_st_3 != 1'b1 }} ;
  assign _151_ = FpMul_8U_23U_p_mant_p1_mul_tmp[47] | _119_;
  assign _151__S = 0 ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_mul_tmp_C0 ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_mul_tmp_R0 ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_mul_tmp_X0 ;
  logic [0:0] _119__C0 ;
  logic [0:0] _119__R0 ;
  logic [0:0] _119__X0 ;
  assign _151__T = FpMul_8U_23U_p_mant_p1_mul_tmp_T [47] | _119__T ;
  assign FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [47] = _151__C ;
  assign FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [47] = _151__X ;
  assign _119__C0 = _151__C ;
  assign _119__X0 = _151__X ;
  assign FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [47] = ( _151__R | _151__C & _119__T ) & { 1{ _119_ != 1'b1 }} ;
  assign _119__R0 = ( _151__R | _151__C & FpMul_8U_23U_p_mant_p1_mul_tmp_T [47] ) & { 1{ FpMul_8U_23U_p_mant_p1_mul_tmp[47] != 1'b1 }} ;
  assign _152_ = or_65_cse | _120_;
  assign _152__S = 0 ;
  logic [0:0] or_65_cse_C1 ;
  logic [0:0] or_65_cse_R1 ;
  logic [0:0] or_65_cse_X1 ;
  logic [0:0] _120__C0 ;
  logic [0:0] _120__R0 ;
  logic [0:0] _120__X0 ;
  assign _152__T = or_65_cse_T | _120__T ;
  assign or_65_cse_C1 = _152__C ;
  assign or_65_cse_X1 = _152__X ;
  assign _120__C0 = _152__C ;
  assign _120__X0 = _152__X ;
  assign or_65_cse_R1 = ( _152__R | _152__C & _120__T ) & { 1{ _120_ != 1'b1 }} ;
  assign _120__R0 = ( _152__R | _152__C & or_65_cse_T ) & { 1{ or_65_cse != 1'b1 }} ;
  assign _153_ = _121_ | FpMul_8U_23U_lor_1_lpi_1_dfm_st_4;
  assign _153__S = 0 ;
  logic [0:0] _121__C1 ;
  logic [0:0] _121__R1 ;
  logic [0:0] _121__X1 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_C0 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_R0 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_X0 ;
  assign _153__T = _121__T | FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_T ;
  assign _121__C1 = _153__C ;
  assign _121__X1 = _153__X ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_C0 = _153__C ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_X0 = _153__X ;
  assign _121__R1 = ( _153__R | _153__C & FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_T ) & { 1{ FpMul_8U_23U_lor_1_lpi_1_dfm_st_4 != 1'b1 }} ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_R0 = ( _153__R | _153__C & _121__T ) & { 1{ _121_ != 1'b1 }} ;
  assign _154_ = _153_ | _122_;
  assign _154__S = 0 ;
  logic [0:0] _153__C0 ;
  logic [0:0] _153__R0 ;
  logic [0:0] _153__X0 ;
  logic [0:0] _122__C0 ;
  logic [0:0] _122__R0 ;
  logic [0:0] _122__X0 ;
  assign _154__T = _153__T | _122__T ;
  assign _153__C0 = _154__C ;
  assign _153__X0 = _154__X ;
  assign _122__C0 = _154__C ;
  assign _122__X0 = _154__X ;
  assign _153__R0 = ( _154__R | _154__C & _122__T ) & { 1{ _122_ != 1'b1 }} ;
  assign _122__R0 = ( _154__R | _154__C & _153__T ) & { 1{ _153_ != 1'b1 }} ;
  assign _155_ = FpMul_8U_23U_or_2_cse | FpMul_8U_23U_p_mant_p1_sva_2[47];
  assign _155__S = 0 ;
  assign { FpMul_8U_23U_p_mant_p1_sva_2_R2 [0], FpMul_8U_23U_p_mant_p1_sva_2_R2 [1], FpMul_8U_23U_p_mant_p1_sva_2_R2 [2], FpMul_8U_23U_p_mant_p1_sva_2_R2 [3], FpMul_8U_23U_p_mant_p1_sva_2_R2 [4], FpMul_8U_23U_p_mant_p1_sva_2_R2 [5], FpMul_8U_23U_p_mant_p1_sva_2_R2 [6], FpMul_8U_23U_p_mant_p1_sva_2_R2 [7], FpMul_8U_23U_p_mant_p1_sva_2_R2 [8], FpMul_8U_23U_p_mant_p1_sva_2_R2 [9], FpMul_8U_23U_p_mant_p1_sva_2_R2 [10], FpMul_8U_23U_p_mant_p1_sva_2_R2 [11], FpMul_8U_23U_p_mant_p1_sva_2_R2 [12], FpMul_8U_23U_p_mant_p1_sva_2_R2 [13], FpMul_8U_23U_p_mant_p1_sva_2_R2 [14], FpMul_8U_23U_p_mant_p1_sva_2_R2 [15], FpMul_8U_23U_p_mant_p1_sva_2_R2 [16], FpMul_8U_23U_p_mant_p1_sva_2_R2 [17], FpMul_8U_23U_p_mant_p1_sva_2_R2 [18], FpMul_8U_23U_p_mant_p1_sva_2_R2 [19], FpMul_8U_23U_p_mant_p1_sva_2_R2 [20], FpMul_8U_23U_p_mant_p1_sva_2_R2 [21], FpMul_8U_23U_p_mant_p1_sva_2_R2 [22], FpMul_8U_23U_p_mant_p1_sva_2_R2 [23], FpMul_8U_23U_p_mant_p1_sva_2_R2 [24], FpMul_8U_23U_p_mant_p1_sva_2_R2 [25], FpMul_8U_23U_p_mant_p1_sva_2_R2 [26], FpMul_8U_23U_p_mant_p1_sva_2_R2 [27], FpMul_8U_23U_p_mant_p1_sva_2_R2 [28], FpMul_8U_23U_p_mant_p1_sva_2_R2 [29], FpMul_8U_23U_p_mant_p1_sva_2_R2 [30], FpMul_8U_23U_p_mant_p1_sva_2_R2 [31], FpMul_8U_23U_p_mant_p1_sva_2_R2 [32], FpMul_8U_23U_p_mant_p1_sva_2_R2 [33], FpMul_8U_23U_p_mant_p1_sva_2_R2 [34], FpMul_8U_23U_p_mant_p1_sva_2_R2 [35], FpMul_8U_23U_p_mant_p1_sva_2_R2 [36], FpMul_8U_23U_p_mant_p1_sva_2_R2 [37], FpMul_8U_23U_p_mant_p1_sva_2_R2 [38], FpMul_8U_23U_p_mant_p1_sva_2_R2 [39], FpMul_8U_23U_p_mant_p1_sva_2_R2 [40], FpMul_8U_23U_p_mant_p1_sva_2_R2 [41], FpMul_8U_23U_p_mant_p1_sva_2_R2 [42], FpMul_8U_23U_p_mant_p1_sva_2_R2 [43], FpMul_8U_23U_p_mant_p1_sva_2_R2 [44], FpMul_8U_23U_p_mant_p1_sva_2_R2 [45], FpMul_8U_23U_p_mant_p1_sva_2_R2 [46] } = 0;
  assign { FpMul_8U_23U_p_mant_p1_sva_2_X2 [0], FpMul_8U_23U_p_mant_p1_sva_2_X2 [1], FpMul_8U_23U_p_mant_p1_sva_2_X2 [2], FpMul_8U_23U_p_mant_p1_sva_2_X2 [3], FpMul_8U_23U_p_mant_p1_sva_2_X2 [4], FpMul_8U_23U_p_mant_p1_sva_2_X2 [5], FpMul_8U_23U_p_mant_p1_sva_2_X2 [6], FpMul_8U_23U_p_mant_p1_sva_2_X2 [7], FpMul_8U_23U_p_mant_p1_sva_2_X2 [8], FpMul_8U_23U_p_mant_p1_sva_2_X2 [9], FpMul_8U_23U_p_mant_p1_sva_2_X2 [10], FpMul_8U_23U_p_mant_p1_sva_2_X2 [11], FpMul_8U_23U_p_mant_p1_sva_2_X2 [12], FpMul_8U_23U_p_mant_p1_sva_2_X2 [13], FpMul_8U_23U_p_mant_p1_sva_2_X2 [14], FpMul_8U_23U_p_mant_p1_sva_2_X2 [15], FpMul_8U_23U_p_mant_p1_sva_2_X2 [16], FpMul_8U_23U_p_mant_p1_sva_2_X2 [17], FpMul_8U_23U_p_mant_p1_sva_2_X2 [18], FpMul_8U_23U_p_mant_p1_sva_2_X2 [19], FpMul_8U_23U_p_mant_p1_sva_2_X2 [20], FpMul_8U_23U_p_mant_p1_sva_2_X2 [21], FpMul_8U_23U_p_mant_p1_sva_2_X2 [22], FpMul_8U_23U_p_mant_p1_sva_2_X2 [23], FpMul_8U_23U_p_mant_p1_sva_2_X2 [24], FpMul_8U_23U_p_mant_p1_sva_2_X2 [25], FpMul_8U_23U_p_mant_p1_sva_2_X2 [26], FpMul_8U_23U_p_mant_p1_sva_2_X2 [27], FpMul_8U_23U_p_mant_p1_sva_2_X2 [28], FpMul_8U_23U_p_mant_p1_sva_2_X2 [29], FpMul_8U_23U_p_mant_p1_sva_2_X2 [30], FpMul_8U_23U_p_mant_p1_sva_2_X2 [31], FpMul_8U_23U_p_mant_p1_sva_2_X2 [32], FpMul_8U_23U_p_mant_p1_sva_2_X2 [33], FpMul_8U_23U_p_mant_p1_sva_2_X2 [34], FpMul_8U_23U_p_mant_p1_sva_2_X2 [35], FpMul_8U_23U_p_mant_p1_sva_2_X2 [36], FpMul_8U_23U_p_mant_p1_sva_2_X2 [37], FpMul_8U_23U_p_mant_p1_sva_2_X2 [38], FpMul_8U_23U_p_mant_p1_sva_2_X2 [39], FpMul_8U_23U_p_mant_p1_sva_2_X2 [40], FpMul_8U_23U_p_mant_p1_sva_2_X2 [41], FpMul_8U_23U_p_mant_p1_sva_2_X2 [42], FpMul_8U_23U_p_mant_p1_sva_2_X2 [43], FpMul_8U_23U_p_mant_p1_sva_2_X2 [44], FpMul_8U_23U_p_mant_p1_sva_2_X2 [45], FpMul_8U_23U_p_mant_p1_sva_2_X2 [46] } = 0;
  assign { FpMul_8U_23U_p_mant_p1_sva_2_C2 [0], FpMul_8U_23U_p_mant_p1_sva_2_C2 [1], FpMul_8U_23U_p_mant_p1_sva_2_C2 [2], FpMul_8U_23U_p_mant_p1_sva_2_C2 [3], FpMul_8U_23U_p_mant_p1_sva_2_C2 [4], FpMul_8U_23U_p_mant_p1_sva_2_C2 [5], FpMul_8U_23U_p_mant_p1_sva_2_C2 [6], FpMul_8U_23U_p_mant_p1_sva_2_C2 [7], FpMul_8U_23U_p_mant_p1_sva_2_C2 [8], FpMul_8U_23U_p_mant_p1_sva_2_C2 [9], FpMul_8U_23U_p_mant_p1_sva_2_C2 [10], FpMul_8U_23U_p_mant_p1_sva_2_C2 [11], FpMul_8U_23U_p_mant_p1_sva_2_C2 [12], FpMul_8U_23U_p_mant_p1_sva_2_C2 [13], FpMul_8U_23U_p_mant_p1_sva_2_C2 [14], FpMul_8U_23U_p_mant_p1_sva_2_C2 [15], FpMul_8U_23U_p_mant_p1_sva_2_C2 [16], FpMul_8U_23U_p_mant_p1_sva_2_C2 [17], FpMul_8U_23U_p_mant_p1_sva_2_C2 [18], FpMul_8U_23U_p_mant_p1_sva_2_C2 [19], FpMul_8U_23U_p_mant_p1_sva_2_C2 [20], FpMul_8U_23U_p_mant_p1_sva_2_C2 [21], FpMul_8U_23U_p_mant_p1_sva_2_C2 [22], FpMul_8U_23U_p_mant_p1_sva_2_C2 [23], FpMul_8U_23U_p_mant_p1_sva_2_C2 [24], FpMul_8U_23U_p_mant_p1_sva_2_C2 [25], FpMul_8U_23U_p_mant_p1_sva_2_C2 [26], FpMul_8U_23U_p_mant_p1_sva_2_C2 [27], FpMul_8U_23U_p_mant_p1_sva_2_C2 [28], FpMul_8U_23U_p_mant_p1_sva_2_C2 [29], FpMul_8U_23U_p_mant_p1_sva_2_C2 [30], FpMul_8U_23U_p_mant_p1_sva_2_C2 [31], FpMul_8U_23U_p_mant_p1_sva_2_C2 [32], FpMul_8U_23U_p_mant_p1_sva_2_C2 [33], FpMul_8U_23U_p_mant_p1_sva_2_C2 [34], FpMul_8U_23U_p_mant_p1_sva_2_C2 [35], FpMul_8U_23U_p_mant_p1_sva_2_C2 [36], FpMul_8U_23U_p_mant_p1_sva_2_C2 [37], FpMul_8U_23U_p_mant_p1_sva_2_C2 [38], FpMul_8U_23U_p_mant_p1_sva_2_C2 [39], FpMul_8U_23U_p_mant_p1_sva_2_C2 [40], FpMul_8U_23U_p_mant_p1_sva_2_C2 [41], FpMul_8U_23U_p_mant_p1_sva_2_C2 [42], FpMul_8U_23U_p_mant_p1_sva_2_C2 [43], FpMul_8U_23U_p_mant_p1_sva_2_C2 [44], FpMul_8U_23U_p_mant_p1_sva_2_C2 [45], FpMul_8U_23U_p_mant_p1_sva_2_C2 [46] } = 0;
  logic [0:0] FpMul_8U_23U_or_2_cse_C0 ;
  logic [0:0] FpMul_8U_23U_or_2_cse_R0 ;
  logic [0:0] FpMul_8U_23U_or_2_cse_X0 ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_sva_2_C3 ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_sva_2_R3 ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_sva_2_X3 ;
  assign _155__T = FpMul_8U_23U_or_2_cse_T | FpMul_8U_23U_p_mant_p1_sva_2_T [47] ;
  assign FpMul_8U_23U_or_2_cse_C0 = _155__C ;
  assign FpMul_8U_23U_or_2_cse_X0 = _155__X ;
  assign FpMul_8U_23U_p_mant_p1_sva_2_C3 [47] = _155__C ;
  assign FpMul_8U_23U_p_mant_p1_sva_2_X3 [47] = _155__X ;
  assign FpMul_8U_23U_or_2_cse_R0 = ( _155__R | _155__C & FpMul_8U_23U_p_mant_p1_sva_2_T [47] ) & { 1{ FpMul_8U_23U_p_mant_p1_sva_2[47] != 1'b1 }} ;
  assign FpMul_8U_23U_p_mant_p1_sva_2_R3 [47] = ( _155__R | _155__C & FpMul_8U_23U_or_2_cse_T ) & { 1{ FpMul_8U_23U_or_2_cse != 1'b1 }} ;
  assign _156_ = _155_ | _121_;
  assign _156__S = 0 ;
  logic [0:0] _155__C0 ;
  logic [0:0] _155__R0 ;
  logic [0:0] _155__X0 ;
  logic [0:0] _121__C2 ;
  logic [0:0] _121__R2 ;
  logic [0:0] _121__X2 ;
  assign _156__T = _155__T | _121__T ;
  assign _155__C0 = _156__C ;
  assign _155__X0 = _156__X ;
  assign _121__C2 = _156__C ;
  assign _121__X2 = _156__X ;
  assign _155__R0 = ( _156__R | _156__C & _121__T ) & { 1{ _121_ != 1'b1 }} ;
  assign _121__R2 = ( _156__R | _156__C & _155__T ) & { 1{ _155_ != 1'b1 }} ;
  assign _157_ = _156_ | FpMul_8U_23U_lor_1_lpi_1_dfm_st_4;
  assign _157__S = 0 ;
  logic [0:0] _156__C0 ;
  logic [0:0] _156__R0 ;
  logic [0:0] _156__X0 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_C1 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_R1 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_X1 ;
  assign _157__T = _156__T | FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_T ;
  assign _156__C0 = _157__C ;
  assign _156__X0 = _157__X ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_C1 = _157__C ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_X1 = _157__X ;
  assign _156__R0 = ( _157__R | _157__C & FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_T ) & { 1{ FpMul_8U_23U_lor_1_lpi_1_dfm_st_4 != 1'b1 }} ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_R1 = ( _157__R | _157__C & _156__T ) & { 1{ _156_ != 1'b1 }} ;
  assign _158_ = _157_ | _122_;
  assign _158__S = 0 ;
  logic [0:0] _157__C0 ;
  logic [0:0] _157__R0 ;
  logic [0:0] _157__X0 ;
  logic [0:0] _122__C1 ;
  logic [0:0] _122__R1 ;
  logic [0:0] _122__X1 ;
  assign _158__T = _157__T | _122__T ;
  assign _157__C0 = _158__C ;
  assign _157__X0 = _158__X ;
  assign _122__C1 = _158__C ;
  assign _122__X1 = _158__X ;
  assign _157__R0 = ( _158__R | _158__C & _122__T ) & { 1{ _122_ != 1'b1 }} ;
  assign _122__R1 = ( _158__R | _158__C & _157__T ) & { 1{ _157_ != 1'b1 }} ;
  assign or_29_cse = _123_ | FpMul_8U_23U_lor_1_lpi_1_dfm_st_3;
  assign or_29_cse_S = 0 ;
  logic [0:0] _123__C0 ;
  logic [0:0] _123__R0 ;
  logic [0:0] _123__X0 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_C3 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_R3 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_X3 ;
  assign or_29_cse_T = _123__T | FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_T ;
  assign _123__C0 = or_29_cse_C ;
  assign _123__X0 = or_29_cse_X ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_C3 = or_29_cse_C ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_X3 = or_29_cse_X ;
  assign _123__R0 = ( or_29_cse_R | or_29_cse_C & FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_T ) & { 1{ FpMul_8U_23U_lor_1_lpi_1_dfm_st_3 != 1'b1 }} ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_R3 = ( or_29_cse_R | or_29_cse_C & _123__T ) & { 1{ _123_ != 1'b1 }} ;
  assign _159_ = or_29_cse | not_tmp_9;
  assign _159__S = 0 ;
  logic [0:0] or_29_cse_C2 ;
  logic [0:0] or_29_cse_R2 ;
  logic [0:0] or_29_cse_X2 ;
  logic [0:0] not_tmp_9_C0 ;
  logic [0:0] not_tmp_9_R0 ;
  logic [0:0] not_tmp_9_X0 ;
  assign _159__T = or_29_cse_T | not_tmp_9_T ;
  assign or_29_cse_C2 = _159__C ;
  assign or_29_cse_X2 = _159__X ;
  assign not_tmp_9_C0 = _159__C ;
  assign not_tmp_9_X0 = _159__X ;
  assign or_29_cse_R2 = ( _159__R | _159__C & not_tmp_9_T ) & { 1{ not_tmp_9 != 1'b1 }} ;
  assign not_tmp_9_R0 = ( _159__R | _159__C & or_29_cse_T ) & { 1{ or_29_cse != 1'b1 }} ;
  assign or_25_nl = _122_ | FpMul_8U_23U_lor_1_lpi_1_dfm_st_4;
  assign or_25_nl_S = 0 ;
  logic [0:0] _122__C2 ;
  logic [0:0] _122__R2 ;
  logic [0:0] _122__X2 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_C2 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_R2 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_X2 ;
  assign or_25_nl_T = _122__T | FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_T ;
  assign _122__C2 = or_25_nl_C ;
  assign _122__X2 = or_25_nl_X ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_C2 = or_25_nl_C ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_X2 = or_25_nl_X ;
  assign _122__R2 = ( or_25_nl_R | or_25_nl_C & FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_T ) & { 1{ FpMul_8U_23U_lor_1_lpi_1_dfm_st_4 != 1'b1 }} ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_R2 = ( or_25_nl_R | or_25_nl_C & _122__T ) & { 1{ _122_ != 1'b1 }} ;
  assign _160_ = FpMul_8U_23U_lor_1_lpi_1_dfm_st_3 | not_tmp_9;
  assign _160__S = 0 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_C4 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_R4 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_X4 ;
  logic [0:0] not_tmp_9_C1 ;
  logic [0:0] not_tmp_9_R1 ;
  logic [0:0] not_tmp_9_X1 ;
  assign _160__T = FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_T | not_tmp_9_T ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_C4 = _160__C ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_X4 = _160__X ;
  assign not_tmp_9_C1 = _160__C ;
  assign not_tmp_9_X1 = _160__X ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_R4 = ( _160__R | _160__C & not_tmp_9_T ) & { 1{ not_tmp_9 != 1'b1 }} ;
  assign not_tmp_9_R1 = ( _160__R | _160__C & FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_T ) & { 1{ FpMul_8U_23U_lor_1_lpi_1_dfm_st_3 != 1'b1 }} ;
  assign or_33_nl = nor_4_cse | or_tmp_32;
  assign or_33_nl_S = 0 ;
  logic [0:0] nor_4_cse_C0 ;
  logic [0:0] nor_4_cse_R0 ;
  logic [0:0] nor_4_cse_X0 ;
  logic [0:0] or_tmp_32_C0 ;
  logic [0:0] or_tmp_32_R0 ;
  logic [0:0] or_tmp_32_X0 ;
  assign or_33_nl_T = nor_4_cse_T | or_tmp_32_T ;
  assign nor_4_cse_C0 = or_33_nl_C ;
  assign nor_4_cse_X0 = or_33_nl_X ;
  assign or_tmp_32_C0 = or_33_nl_C ;
  assign or_tmp_32_X0 = or_33_nl_X ;
  assign nor_4_cse_R0 = ( or_33_nl_R | or_33_nl_C & or_tmp_32_T ) & { 1{ or_tmp_32 != 1'b1 }} ;
  assign or_tmp_32_R0 = ( or_33_nl_R | or_33_nl_C & nor_4_cse_T ) & { 1{ nor_4_cse != 1'b1 }} ;
  assign _161_ = _001_ | IsNaN_8U_23U_land_lpi_1_dfm_st_3;
  assign _161__S = 0 ;
  logic [0:0] _001__C3 ;
  logic [0:0] _001__R3 ;
  logic [0:0] _001__X3 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_3_C3 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_3_R3 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_3_X3 ;
  assign _161__T = _001__T | IsNaN_8U_23U_land_lpi_1_dfm_st_3_T ;
  assign _001__C3 = _161__C ;
  assign _001__X3 = _161__X ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_C3 = _161__C ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_X3 = _161__X ;
  assign _001__R3 = ( _161__R | _161__C & IsNaN_8U_23U_land_lpi_1_dfm_st_3_T ) & { 1{ IsNaN_8U_23U_land_lpi_1_dfm_st_3 != 1'b1 }} ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_R3 = ( _161__R | _161__C & _001__T ) & { 1{ _001_ != 1'b1 }} ;
  assign _162_ = _161_ | IsNaN_8U_23U_1_land_lpi_1_dfm_3;
  assign _162__S = 0 ;
  logic [0:0] _161__C0 ;
  logic [0:0] _161__R0 ;
  logic [0:0] _161__X0 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_C2 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_R2 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_X2 ;
  assign _162__T = _161__T | IsNaN_8U_23U_1_land_lpi_1_dfm_3_T ;
  assign _161__C0 = _162__C ;
  assign _161__X0 = _162__X ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_C2 = _162__C ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_X2 = _162__X ;
  assign _161__R0 = ( _162__R | _162__C & IsNaN_8U_23U_1_land_lpi_1_dfm_3_T ) & { 1{ IsNaN_8U_23U_1_land_lpi_1_dfm_3 != 1'b1 }} ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_R2 = ( _162__R | _162__C & _161__T ) & { 1{ _161_ != 1'b1 }} ;
  assign _163_ = IsNaN_8U_23U_1_nor_tmp | _124_;
  assign _163__S = 0 ;
  logic [0:0] IsNaN_8U_23U_1_nor_tmp_C1 ;
  logic [0:0] IsNaN_8U_23U_1_nor_tmp_R1 ;
  logic [0:0] IsNaN_8U_23U_1_nor_tmp_X1 ;
  logic [0:0] _124__C0 ;
  logic [0:0] _124__R0 ;
  logic [0:0] _124__X0 ;
  assign _163__T = IsNaN_8U_23U_1_nor_tmp_T | _124__T ;
  assign IsNaN_8U_23U_1_nor_tmp_C1 = _163__C ;
  assign IsNaN_8U_23U_1_nor_tmp_X1 = _163__X ;
  assign _124__C0 = _163__C ;
  assign _124__X0 = _163__X ;
  assign IsNaN_8U_23U_1_nor_tmp_R1 = ( _163__R | _163__C & _124__T ) & { 1{ _124_ != 1'b1 }} ;
  assign _124__R0 = ( _163__R | _163__C & IsNaN_8U_23U_1_nor_tmp_T ) & { 1{ IsNaN_8U_23U_1_nor_tmp != 1'b1 }} ;
  assign _164_ = _111_ | IsNaN_8U_23U_land_lpi_1_dfm_st_3;
  assign _164__S = 0 ;
  logic [0:0] _111__C1 ;
  logic [0:0] _111__R1 ;
  logic [0:0] _111__X1 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_3_C4 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_3_R4 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_3_X4 ;
  assign _164__T = _111__T | IsNaN_8U_23U_land_lpi_1_dfm_st_3_T ;
  assign _111__C1 = _164__C ;
  assign _111__X1 = _164__X ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_C4 = _164__C ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_X4 = _164__X ;
  assign _111__R1 = ( _164__R | _164__C & IsNaN_8U_23U_land_lpi_1_dfm_st_3_T ) & { 1{ IsNaN_8U_23U_land_lpi_1_dfm_st_3 != 1'b1 }} ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_R4 = ( _164__R | _164__C & _111__T ) & { 1{ _111_ != 1'b1 }} ;
  assign _165_ = _078_ | _079_;
  assign _165__S = 0 ;
  logic [0:0] _078__C0 ;
  logic [0:0] _078__R0 ;
  logic [0:0] _078__X0 ;
  logic [0:0] _079__C0 ;
  logic [0:0] _079__R0 ;
  logic [0:0] _079__X0 ;
  assign _165__T = _078__T | _079__T ;
  assign _078__C0 = _165__C ;
  assign _078__X0 = _165__X ;
  assign _079__C0 = _165__C ;
  assign _079__X0 = _165__X ;
  assign _078__R0 = ( _165__R | _165__C & _079__T ) & { 1{ _079_ != 1'b1 }} ;
  assign _079__R0 = ( _165__R | _165__C & _078__T ) & { 1{ _078_ != 1'b1 }} ;
  assign _166_ = _165_ | _080_;
  assign _166__S = 0 ;
  logic [0:0] _165__C0 ;
  logic [0:0] _165__R0 ;
  logic [0:0] _165__X0 ;
  logic [0:0] _080__C0 ;
  logic [0:0] _080__R0 ;
  logic [0:0] _080__X0 ;
  assign _166__T = _165__T | _080__T ;
  assign _165__C0 = _166__C ;
  assign _165__X0 = _166__X ;
  assign _080__C0 = _166__C ;
  assign _080__X0 = _166__X ;
  assign _165__R0 = ( _166__R | _166__C & _080__T ) & { 1{ _080_ != 1'b1 }} ;
  assign _080__R0 = ( _166__R | _166__C & _165__T ) & { 1{ _165_ != 1'b1 }} ;
  assign _167_ = _081_ | _082_;
  assign _167__S = 0 ;
  logic [7:0] _081__C0 ;
  logic [7:0] _081__R0 ;
  logic [7:0] _081__X0 ;
  logic [7:0] _082__C0 ;
  logic [7:0] _082__R0 ;
  logic [7:0] _082__X0 ;
  assign _167__T = _081__T | _082__T ;
  assign _081__C0 = _167__C ;
  assign _081__X0 = _167__X ;
  assign _082__C0 = _167__C ;
  assign _082__X0 = _167__X ;
  assign _081__R0 = ( _167__R | _167__C & _082__T ) & { 8{ _082_ != 8'b11111111 }} ;
  assign _082__R0 = ( _167__R | _167__C & _081__T ) & { 8{ _081_ != 8'b11111111 }} ;
  assign FpMul_8U_23U_o_expo_lpi_1_dfm = _167_ | _083_;
  assign FpMul_8U_23U_o_expo_lpi_1_dfm_S = 0 ;
  logic [7:0] _167__C0 ;
  logic [7:0] _167__R0 ;
  logic [7:0] _167__X0 ;
  logic [7:0] _083__C0 ;
  logic [7:0] _083__R0 ;
  logic [7:0] _083__X0 ;
  assign FpMul_8U_23U_o_expo_lpi_1_dfm_T = _167__T | _083__T ;
  assign _167__C0 = FpMul_8U_23U_o_expo_lpi_1_dfm_C ;
  assign _167__X0 = FpMul_8U_23U_o_expo_lpi_1_dfm_X ;
  assign _083__C0 = FpMul_8U_23U_o_expo_lpi_1_dfm_C ;
  assign _083__X0 = FpMul_8U_23U_o_expo_lpi_1_dfm_X ;
  assign _167__R0 = ( FpMul_8U_23U_o_expo_lpi_1_dfm_R | FpMul_8U_23U_o_expo_lpi_1_dfm_C & _083__T ) & { 8{ _083_ != 8'b11111111 }} ;
  assign _083__R0 = ( FpMul_8U_23U_o_expo_lpi_1_dfm_R | FpMul_8U_23U_o_expo_lpi_1_dfm_C & _167__T ) & { 8{ _167_ != 8'b11111111 }} ;
  assign _168_ = and_dcpl_6 | _121_;
  assign _168__S = 0 ;
  logic [0:0] and_dcpl_6_C2 ;
  logic [0:0] and_dcpl_6_R2 ;
  logic [0:0] and_dcpl_6_X2 ;
  logic [0:0] _121__C3 ;
  logic [0:0] _121__R3 ;
  logic [0:0] _121__X3 ;
  assign _168__T = and_dcpl_6_T | _121__T ;
  assign and_dcpl_6_C2 = _168__C ;
  assign and_dcpl_6_X2 = _168__X ;
  assign _121__C3 = _168__C ;
  assign _121__X3 = _168__X ;
  assign and_dcpl_6_R2 = ( _168__R | _168__C & _121__T ) & { 1{ _121_ != 1'b1 }} ;
  assign _121__R3 = ( _168__R | _168__C & and_dcpl_6_T ) & { 1{ and_dcpl_6 != 1'b1 }} ;
  assign FpMul_8U_23U_or_2_cse = IsNaN_8U_23U_1_land_lpi_1_dfm_4 | IsNaN_8U_23U_land_lpi_1_dfm_4;
  assign FpMul_8U_23U_or_2_cse_S = 0 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_4_C1 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_4_R1 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_4_X1 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_4_C2 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_4_R2 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_4_X2 ;
  assign FpMul_8U_23U_or_2_cse_T = IsNaN_8U_23U_1_land_lpi_1_dfm_4_T | IsNaN_8U_23U_land_lpi_1_dfm_4_T ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_4_C1 = FpMul_8U_23U_or_2_cse_C ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_4_X1 = FpMul_8U_23U_or_2_cse_X ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_4_C2 = FpMul_8U_23U_or_2_cse_C ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_4_X2 = FpMul_8U_23U_or_2_cse_X ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_4_R1 = ( FpMul_8U_23U_or_2_cse_R | FpMul_8U_23U_or_2_cse_C & IsNaN_8U_23U_land_lpi_1_dfm_4_T ) & { 1{ IsNaN_8U_23U_land_lpi_1_dfm_4 != 1'b1 }} ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_4_R2 = ( FpMul_8U_23U_or_2_cse_R | FpMul_8U_23U_or_2_cse_C & IsNaN_8U_23U_1_land_lpi_1_dfm_4_T ) & { 1{ IsNaN_8U_23U_1_land_lpi_1_dfm_4 != 1'b1 }} ;
  assign or_10_cse = _126_ | chn_o_rsci_bawt;
  assign or_10_cse_S = 0 ;
  logic [0:0] _126__C0 ;
  logic [0:0] _126__R0 ;
  logic [0:0] _126__X0 ;
  logic [0:0] chn_o_rsci_bawt_C2 ;
  logic [0:0] chn_o_rsci_bawt_R2 ;
  logic [0:0] chn_o_rsci_bawt_X2 ;
  assign or_10_cse_T = _126__T | chn_o_rsci_bawt_T ;
  assign _126__C0 = or_10_cse_C ;
  assign _126__X0 = or_10_cse_X ;
  assign chn_o_rsci_bawt_C2 = or_10_cse_C ;
  assign chn_o_rsci_bawt_X2 = or_10_cse_X ;
  assign _126__R0 = ( or_10_cse_R | or_10_cse_C & chn_o_rsci_bawt_T ) & { 1{ chn_o_rsci_bawt != 1'b1 }} ;
  assign chn_o_rsci_bawt_R2 = ( or_10_cse_R | or_10_cse_C & _126__T ) & { 1{ _126_ != 1'b1 }} ;
  assign _169_ = IsNaN_8U_23U_land_lpi_1_dfm_st_3 | _127_;
  assign _169__S = 0 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_3_C5 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_3_R5 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_3_X5 ;
  logic [0:0] _127__C0 ;
  logic [0:0] _127__R0 ;
  logic [0:0] _127__X0 ;
  assign _169__T = IsNaN_8U_23U_land_lpi_1_dfm_st_3_T | _127__T ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_C5 = _169__C ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_X5 = _169__X ;
  assign _127__C0 = _169__C ;
  assign _127__X0 = _169__X ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_R5 = ( _169__R | _169__C & _127__T ) & { 1{ _127_ != 1'b1 }} ;
  assign _127__R0 = ( _169__R | _169__C & IsNaN_8U_23U_land_lpi_1_dfm_st_3_T ) & { 1{ IsNaN_8U_23U_land_lpi_1_dfm_st_3 != 1'b1 }} ;
  assign FpMul_8U_23U_ub_FpBitsToFloat_8U_23U_1_or_1_cse = _084_ | and_dcpl_26;
  assign FpMul_8U_23U_ub_FpBitsToFloat_8U_23U_1_or_1_cse_S = 0 ;
  logic [0:0] _084__C0 ;
  logic [0:0] _084__R0 ;
  logic [0:0] _084__X0 ;
  logic [0:0] and_dcpl_26_C0 ;
  logic [0:0] and_dcpl_26_R0 ;
  logic [0:0] and_dcpl_26_X0 ;
  assign FpMul_8U_23U_ub_FpBitsToFloat_8U_23U_1_or_1_cse_T = _084__T | and_dcpl_26_T ;
  assign _084__C0 = FpMul_8U_23U_ub_FpBitsToFloat_8U_23U_1_or_1_cse_C ;
  assign _084__X0 = FpMul_8U_23U_ub_FpBitsToFloat_8U_23U_1_or_1_cse_X ;
  assign and_dcpl_26_C0 = FpMul_8U_23U_ub_FpBitsToFloat_8U_23U_1_or_1_cse_C ;
  assign and_dcpl_26_X0 = FpMul_8U_23U_ub_FpBitsToFloat_8U_23U_1_or_1_cse_X ;
  assign _084__R0 = ( FpMul_8U_23U_ub_FpBitsToFloat_8U_23U_1_or_1_cse_R | FpMul_8U_23U_ub_FpBitsToFloat_8U_23U_1_or_1_cse_C & and_dcpl_26_T ) & { 1{ and_dcpl_26 != 1'b1 }} ;
  assign and_dcpl_26_R0 = ( FpMul_8U_23U_ub_FpBitsToFloat_8U_23U_1_or_1_cse_R | FpMul_8U_23U_ub_FpBitsToFloat_8U_23U_1_or_1_cse_C & _084__T ) & { 1{ _084_ != 1'b1 }} ;
  assign _170_ = _096_ | IsNaN_8U_23U_nor_tmp;
  assign _170__S = 0 ;
  logic [0:0] _096__C0 ;
  logic [0:0] _096__R0 ;
  logic [0:0] _096__X0 ;
  logic [0:0] IsNaN_8U_23U_nor_tmp_C1 ;
  logic [0:0] IsNaN_8U_23U_nor_tmp_R1 ;
  logic [0:0] IsNaN_8U_23U_nor_tmp_X1 ;
  assign _170__T = _096__T | IsNaN_8U_23U_nor_tmp_T ;
  assign _096__C0 = _170__C ;
  assign _096__X0 = _170__X ;
  assign IsNaN_8U_23U_nor_tmp_C1 = _170__C ;
  assign IsNaN_8U_23U_nor_tmp_X1 = _170__X ;
  assign _096__R0 = ( _170__R | _170__C & IsNaN_8U_23U_nor_tmp_T ) & { 1{ IsNaN_8U_23U_nor_tmp != 1'b1 }} ;
  assign IsNaN_8U_23U_nor_tmp_R1 = ( _170__R | _170__C & _096__T ) & { 1{ _096_ != 1'b1 }} ;
  assign or_45_cse = FpMul_8U_23U_oelse_1_acc_nl[9] | FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp;
  assign or_45_cse_S = 0 ;
  logic [9:0] FpMul_8U_23U_oelse_1_acc_nl_C0 ;
  logic [9:0] FpMul_8U_23U_oelse_1_acc_nl_R0 ;
  logic [9:0] FpMul_8U_23U_oelse_1_acc_nl_X0 ;
  logic [0:0] FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_C0 ;
  logic [0:0] FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_R0 ;
  logic [0:0] FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_X0 ;
  assign or_45_cse_T = FpMul_8U_23U_oelse_1_acc_nl_T [9] | FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_T ;
  assign FpMul_8U_23U_oelse_1_acc_nl_C0 [9] = or_45_cse_C ;
  assign FpMul_8U_23U_oelse_1_acc_nl_X0 [9] = or_45_cse_X ;
  assign FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_C0 = or_45_cse_C ;
  assign FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_X0 = or_45_cse_X ;
  assign FpMul_8U_23U_oelse_1_acc_nl_R0 [9] = ( or_45_cse_R | or_45_cse_C & FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_T ) & { 1{ FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp != 1'b1 }} ;
  assign FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_R0 = ( or_45_cse_R | or_45_cse_C & FpMul_8U_23U_oelse_1_acc_nl_T [9] ) & { 1{ FpMul_8U_23U_oelse_1_acc_nl[9] != 1'b1 }} ;
  assign FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp = _129_ | _130_;
  assign FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_S = 0 ;
  logic [0:0] _129__C0 ;
  logic [0:0] _129__R0 ;
  logic [0:0] _129__X0 ;
  logic [0:0] _130__C0 ;
  logic [0:0] _130__R0 ;
  logic [0:0] _130__X0 ;
  assign FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_T = _129__T | _130__T ;
  assign _129__C0 = FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_C ;
  assign _129__X0 = FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_X ;
  assign _130__C0 = FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_C ;
  assign _130__X0 = FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_X ;
  assign _129__R0 = ( FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_R | FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_C & _130__T ) & { 1{ _130_ != 1'b1 }} ;
  assign _130__R0 = ( FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_R | FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_C & _129__T ) & { 1{ _129_ != 1'b1 }} ;
  assign _171_ = _088_ | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[0];
  assign _171__S = 0 ;
  logic [0:0] _088__C0 ;
  logic [0:0] _088__R0 ;
  logic [0:0] _088__X0 ;
  assign _171__T = _088__T | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [0] ;
  assign _088__C0 = _171__C ;
  assign _088__X0 = _171__X ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C1 [0] = _171__C ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X1 [0] = _171__X ;
  assign _088__R0 = ( _171__R | _171__C & FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [0] ) & { 1{ FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[0] != 1'b1 }} ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R1 [0] = ( _171__R | _171__C & _088__T ) & { 1{ _088_ != 1'b1 }} ;
  assign _172_ = _171_ | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[1];
  assign _172__S = 0 ;
  logic [0:0] _171__C0 ;
  logic [0:0] _171__R0 ;
  logic [0:0] _171__X0 ;
  assign _172__T = _171__T | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [1] ;
  assign _171__C0 = _172__C ;
  assign _171__X0 = _172__X ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C1 [1] = _172__C ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X1 [1] = _172__X ;
  assign _171__R0 = ( _172__R | _172__C & FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [1] ) & { 1{ FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[1] != 1'b1 }} ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R1 [1] = ( _172__R | _172__C & _171__T ) & { 1{ _171_ != 1'b1 }} ;
  assign _173_ = _172_ | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[2];
  assign _173__S = 0 ;
  logic [0:0] _172__C0 ;
  logic [0:0] _172__R0 ;
  logic [0:0] _172__X0 ;
  assign _173__T = _172__T | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [2] ;
  assign _172__C0 = _173__C ;
  assign _172__X0 = _173__X ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C1 [2] = _173__C ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X1 [2] = _173__X ;
  assign _172__R0 = ( _173__R | _173__C & FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [2] ) & { 1{ FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[2] != 1'b1 }} ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R1 [2] = ( _173__R | _173__C & _172__T ) & { 1{ _172_ != 1'b1 }} ;
  assign _174_ = _173_ | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[3];
  assign _174__S = 0 ;
  logic [0:0] _173__C0 ;
  logic [0:0] _173__R0 ;
  logic [0:0] _173__X0 ;
  assign _174__T = _173__T | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [3] ;
  assign _173__C0 = _174__C ;
  assign _173__X0 = _174__X ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C1 [3] = _174__C ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X1 [3] = _174__X ;
  assign _173__R0 = ( _174__R | _174__C & FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [3] ) & { 1{ FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[3] != 1'b1 }} ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R1 [3] = ( _174__R | _174__C & _173__T ) & { 1{ _173_ != 1'b1 }} ;
  assign _175_ = _174_ | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[4];
  assign _175__S = 0 ;
  logic [0:0] _174__C0 ;
  logic [0:0] _174__R0 ;
  logic [0:0] _174__X0 ;
  assign _175__T = _174__T | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [4] ;
  assign _174__C0 = _175__C ;
  assign _174__X0 = _175__X ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C1 [4] = _175__C ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X1 [4] = _175__X ;
  assign _174__R0 = ( _175__R | _175__C & FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [4] ) & { 1{ FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[4] != 1'b1 }} ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R1 [4] = ( _175__R | _175__C & _174__T ) & { 1{ _174_ != 1'b1 }} ;
  assign _176_ = _175_ | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[5];
  assign _176__S = 0 ;
  logic [0:0] _175__C0 ;
  logic [0:0] _175__R0 ;
  logic [0:0] _175__X0 ;
  assign _176__T = _175__T | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [5] ;
  assign _175__C0 = _176__C ;
  assign _175__X0 = _176__X ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C1 [5] = _176__C ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X1 [5] = _176__X ;
  assign _175__R0 = ( _176__R | _176__C & FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [5] ) & { 1{ FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[5] != 1'b1 }} ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R1 [5] = ( _176__R | _176__C & _175__T ) & { 1{ _175_ != 1'b1 }} ;
  assign _177_ = _176_ | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[6];
  assign _177__S = 0 ;
  logic [0:0] _176__C0 ;
  logic [0:0] _176__R0 ;
  logic [0:0] _176__X0 ;
  assign _177__T = _176__T | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [6] ;
  assign _176__C0 = _177__C ;
  assign _176__X0 = _177__X ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C1 [6] = _177__C ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X1 [6] = _177__X ;
  assign _176__R0 = ( _177__R | _177__C & FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [6] ) & { 1{ FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[6] != 1'b1 }} ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R1 [6] = ( _177__R | _177__C & _176__T ) & { 1{ _176_ != 1'b1 }} ;
  assign _178_ = _177_ | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[7];
  assign _178__S = 0 ;
  logic [0:0] _177__C0 ;
  logic [0:0] _177__R0 ;
  logic [0:0] _177__X0 ;
  assign _178__T = _177__T | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [7] ;
  assign _177__C0 = _178__C ;
  assign _177__X0 = _178__X ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C1 [7] = _178__C ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X1 [7] = _178__X ;
  assign _177__R0 = ( _178__R | _178__C & FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [7] ) & { 1{ FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[7] != 1'b1 }} ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R1 [7] = ( _178__R | _178__C & _177__T ) & { 1{ _177_ != 1'b1 }} ;
  assign _179_ = _178_ | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[8];
  assign _179__S = 0 ;
  logic [0:0] _178__C0 ;
  logic [0:0] _178__R0 ;
  logic [0:0] _178__X0 ;
  assign _179__T = _178__T | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [8] ;
  assign _178__C0 = _179__C ;
  assign _178__X0 = _179__X ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C1 [8] = _179__C ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X1 [8] = _179__X ;
  assign _178__R0 = ( _179__R | _179__C & FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [8] ) & { 1{ FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[8] != 1'b1 }} ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R1 [8] = ( _179__R | _179__C & _178__T ) & { 1{ _178_ != 1'b1 }} ;
  assign _180_ = _179_ | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[9];
  assign _180__S = 0 ;
  logic [0:0] _179__C0 ;
  logic [0:0] _179__R0 ;
  logic [0:0] _179__X0 ;
  assign _180__T = _179__T | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [9] ;
  assign _179__C0 = _180__C ;
  assign _179__X0 = _180__X ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C1 [9] = _180__C ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X1 [9] = _180__X ;
  assign _179__R0 = ( _180__R | _180__C & FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [9] ) & { 1{ FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[9] != 1'b1 }} ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R1 [9] = ( _180__R | _180__C & _179__T ) & { 1{ _179_ != 1'b1 }} ;
  assign _181_ = _180_ | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[10];
  assign _181__S = 0 ;
  logic [0:0] _180__C0 ;
  logic [0:0] _180__R0 ;
  logic [0:0] _180__X0 ;
  assign _181__T = _180__T | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [10] ;
  assign _180__C0 = _181__C ;
  assign _180__X0 = _181__X ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C1 [10] = _181__C ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X1 [10] = _181__X ;
  assign _180__R0 = ( _181__R | _181__C & FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [10] ) & { 1{ FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[10] != 1'b1 }} ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R1 [10] = ( _181__R | _181__C & _180__T ) & { 1{ _180_ != 1'b1 }} ;
  assign _182_ = _181_ | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[11];
  assign _182__S = 0 ;
  logic [0:0] _181__C0 ;
  logic [0:0] _181__R0 ;
  logic [0:0] _181__X0 ;
  assign _182__T = _181__T | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [11] ;
  assign _181__C0 = _182__C ;
  assign _181__X0 = _182__X ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C1 [11] = _182__C ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X1 [11] = _182__X ;
  assign _181__R0 = ( _182__R | _182__C & FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [11] ) & { 1{ FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[11] != 1'b1 }} ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R1 [11] = ( _182__R | _182__C & _181__T ) & { 1{ _181_ != 1'b1 }} ;
  assign _183_ = _182_ | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[12];
  assign _183__S = 0 ;
  logic [0:0] _182__C0 ;
  logic [0:0] _182__R0 ;
  logic [0:0] _182__X0 ;
  assign _183__T = _182__T | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [12] ;
  assign _182__C0 = _183__C ;
  assign _182__X0 = _183__X ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C1 [12] = _183__C ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X1 [12] = _183__X ;
  assign _182__R0 = ( _183__R | _183__C & FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [12] ) & { 1{ FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[12] != 1'b1 }} ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R1 [12] = ( _183__R | _183__C & _182__T ) & { 1{ _182_ != 1'b1 }} ;
  assign _184_ = _183_ | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[13];
  assign _184__S = 0 ;
  logic [0:0] _183__C0 ;
  logic [0:0] _183__R0 ;
  logic [0:0] _183__X0 ;
  assign _184__T = _183__T | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [13] ;
  assign _183__C0 = _184__C ;
  assign _183__X0 = _184__X ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C1 [13] = _184__C ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X1 [13] = _184__X ;
  assign _183__R0 = ( _184__R | _184__C & FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [13] ) & { 1{ FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[13] != 1'b1 }} ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R1 [13] = ( _184__R | _184__C & _183__T ) & { 1{ _183_ != 1'b1 }} ;
  assign _185_ = _184_ | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[14];
  assign _185__S = 0 ;
  logic [0:0] _184__C0 ;
  logic [0:0] _184__R0 ;
  logic [0:0] _184__X0 ;
  assign _185__T = _184__T | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [14] ;
  assign _184__C0 = _185__C ;
  assign _184__X0 = _185__X ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C1 [14] = _185__C ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X1 [14] = _185__X ;
  assign _184__R0 = ( _185__R | _185__C & FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [14] ) & { 1{ FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[14] != 1'b1 }} ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R1 [14] = ( _185__R | _185__C & _184__T ) & { 1{ _184_ != 1'b1 }} ;
  assign _186_ = _185_ | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[15];
  assign _186__S = 0 ;
  logic [0:0] _185__C0 ;
  logic [0:0] _185__R0 ;
  logic [0:0] _185__X0 ;
  assign _186__T = _185__T | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [15] ;
  assign _185__C0 = _186__C ;
  assign _185__X0 = _186__X ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C1 [15] = _186__C ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X1 [15] = _186__X ;
  assign _185__R0 = ( _186__R | _186__C & FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [15] ) & { 1{ FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[15] != 1'b1 }} ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R1 [15] = ( _186__R | _186__C & _185__T ) & { 1{ _185_ != 1'b1 }} ;
  assign _187_ = _186_ | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[16];
  assign _187__S = 0 ;
  logic [0:0] _186__C0 ;
  logic [0:0] _186__R0 ;
  logic [0:0] _186__X0 ;
  assign _187__T = _186__T | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [16] ;
  assign _186__C0 = _187__C ;
  assign _186__X0 = _187__X ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C1 [16] = _187__C ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X1 [16] = _187__X ;
  assign _186__R0 = ( _187__R | _187__C & FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [16] ) & { 1{ FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[16] != 1'b1 }} ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R1 [16] = ( _187__R | _187__C & _186__T ) & { 1{ _186_ != 1'b1 }} ;
  assign _188_ = _187_ | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[17];
  assign _188__S = 0 ;
  logic [0:0] _187__C0 ;
  logic [0:0] _187__R0 ;
  logic [0:0] _187__X0 ;
  assign _188__T = _187__T | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [17] ;
  assign _187__C0 = _188__C ;
  assign _187__X0 = _188__X ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C1 [17] = _188__C ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X1 [17] = _188__X ;
  assign _187__R0 = ( _188__R | _188__C & FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [17] ) & { 1{ FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[17] != 1'b1 }} ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R1 [17] = ( _188__R | _188__C & _187__T ) & { 1{ _187_ != 1'b1 }} ;
  assign _189_ = _188_ | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[18];
  assign _189__S = 0 ;
  logic [0:0] _188__C0 ;
  logic [0:0] _188__R0 ;
  logic [0:0] _188__X0 ;
  assign _189__T = _188__T | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [18] ;
  assign _188__C0 = _189__C ;
  assign _188__X0 = _189__X ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C1 [18] = _189__C ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X1 [18] = _189__X ;
  assign _188__R0 = ( _189__R | _189__C & FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [18] ) & { 1{ FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[18] != 1'b1 }} ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R1 [18] = ( _189__R | _189__C & _188__T ) & { 1{ _188_ != 1'b1 }} ;
  assign _190_ = _189_ | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[19];
  assign _190__S = 0 ;
  logic [0:0] _189__C0 ;
  logic [0:0] _189__R0 ;
  logic [0:0] _189__X0 ;
  assign _190__T = _189__T | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [19] ;
  assign _189__C0 = _190__C ;
  assign _189__X0 = _190__X ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C1 [19] = _190__C ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X1 [19] = _190__X ;
  assign _189__R0 = ( _190__R | _190__C & FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [19] ) & { 1{ FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[19] != 1'b1 }} ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R1 [19] = ( _190__R | _190__C & _189__T ) & { 1{ _189_ != 1'b1 }} ;
  assign _191_ = _190_ | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[20];
  assign _191__S = 0 ;
  logic [0:0] _190__C0 ;
  logic [0:0] _190__R0 ;
  logic [0:0] _190__X0 ;
  assign _191__T = _190__T | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [20] ;
  assign _190__C0 = _191__C ;
  assign _190__X0 = _191__X ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C1 [20] = _191__C ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X1 [20] = _191__X ;
  assign _190__R0 = ( _191__R | _191__C & FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [20] ) & { 1{ FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[20] != 1'b1 }} ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R1 [20] = ( _191__R | _191__C & _190__T ) & { 1{ _190_ != 1'b1 }} ;
  assign _192_ = _191_ | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[21];
  assign _192__S = 0 ;
  logic [0:0] _191__C0 ;
  logic [0:0] _191__R0 ;
  logic [0:0] _191__X0 ;
  assign _192__T = _191__T | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [21] ;
  assign _191__C0 = _192__C ;
  assign _191__X0 = _192__X ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C1 [21] = _192__C ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X1 [21] = _192__X ;
  assign _191__R0 = ( _192__R | _192__C & FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [21] ) & { 1{ FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[21] != 1'b1 }} ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R1 [21] = ( _192__R | _192__C & _191__T ) & { 1{ _191_ != 1'b1 }} ;
  assign _193_ = _192_ | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[23];
  assign _193__S = 0 ;
  assign { FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R1 [22] } = 0;
  assign { FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X1 [22] } = 0;
  assign { FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C1 [22] } = 0;
  logic [0:0] _192__C0 ;
  logic [0:0] _192__R0 ;
  logic [0:0] _192__X0 ;
  logic [45:0] FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C2 ;
  logic [45:0] FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R2 ;
  logic [45:0] FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X2 ;
  assign _193__T = _192__T | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [23] ;
  assign _192__C0 = _193__C ;
  assign _192__X0 = _193__X ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C2 [23] = _193__C ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X2 [23] = _193__X ;
  assign _192__R0 = ( _193__R | _193__C & FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T [23] ) & { 1{ FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0[23] != 1'b1 }} ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R2 [23] = ( _193__R | _193__C & _192__T ) & { 1{ _192_ != 1'b1 }} ;
  assign _194_ = FpMantRNE_48U_24U_else_and_svs | FpMul_8U_23U_is_inf_lpi_1_dfm_2;
  assign _194__S = 0 ;
  logic [0:0] FpMantRNE_48U_24U_else_and_svs_C3 ;
  logic [0:0] FpMantRNE_48U_24U_else_and_svs_R3 ;
  logic [0:0] FpMantRNE_48U_24U_else_and_svs_X3 ;
  logic [0:0] FpMul_8U_23U_is_inf_lpi_1_dfm_2_C0 ;
  logic [0:0] FpMul_8U_23U_is_inf_lpi_1_dfm_2_R0 ;
  logic [0:0] FpMul_8U_23U_is_inf_lpi_1_dfm_2_X0 ;
  assign _194__T = FpMantRNE_48U_24U_else_and_svs_T | FpMul_8U_23U_is_inf_lpi_1_dfm_2_T ;
  assign FpMantRNE_48U_24U_else_and_svs_C3 = _194__C ;
  assign FpMantRNE_48U_24U_else_and_svs_X3 = _194__X ;
  assign FpMul_8U_23U_is_inf_lpi_1_dfm_2_C0 = _194__C ;
  assign FpMul_8U_23U_is_inf_lpi_1_dfm_2_X0 = _194__X ;
  assign FpMantRNE_48U_24U_else_and_svs_R3 = ( _194__R | _194__C & FpMul_8U_23U_is_inf_lpi_1_dfm_2_T ) & { 1{ FpMul_8U_23U_is_inf_lpi_1_dfm_2 != 1'b1 }} ;
  assign FpMul_8U_23U_is_inf_lpi_1_dfm_2_R0 = ( _194__R | _194__C & FpMantRNE_48U_24U_else_and_svs_T ) & { 1{ FpMantRNE_48U_24U_else_and_svs != 1'b1 }} ;
  assign FpMul_8U_23U_or_1_nl = _089_ | FpMul_8U_23U_is_inf_lpi_1_dfm_2;
  assign FpMul_8U_23U_or_1_nl_S = 0 ;
  logic [0:0] _089__C0 ;
  logic [0:0] _089__R0 ;
  logic [0:0] _089__X0 ;
  logic [0:0] FpMul_8U_23U_is_inf_lpi_1_dfm_2_C1 ;
  logic [0:0] FpMul_8U_23U_is_inf_lpi_1_dfm_2_R1 ;
  logic [0:0] FpMul_8U_23U_is_inf_lpi_1_dfm_2_X1 ;
  assign FpMul_8U_23U_or_1_nl_T = _089__T | FpMul_8U_23U_is_inf_lpi_1_dfm_2_T ;
  assign _089__C0 = FpMul_8U_23U_or_1_nl_C ;
  assign _089__X0 = FpMul_8U_23U_or_1_nl_X ;
  assign FpMul_8U_23U_is_inf_lpi_1_dfm_2_C1 = FpMul_8U_23U_or_1_nl_C ;
  assign FpMul_8U_23U_is_inf_lpi_1_dfm_2_X1 = FpMul_8U_23U_or_1_nl_X ;
  assign _089__R0 = ( FpMul_8U_23U_or_1_nl_R | FpMul_8U_23U_or_1_nl_C & FpMul_8U_23U_is_inf_lpi_1_dfm_2_T ) & { 1{ FpMul_8U_23U_is_inf_lpi_1_dfm_2 != 1'b1 }} ;
  assign FpMul_8U_23U_is_inf_lpi_1_dfm_2_R1 = ( FpMul_8U_23U_or_1_nl_R | FpMul_8U_23U_or_1_nl_C & _089__T ) & { 1{ _089_ != 1'b1 }} ;
  assign FpMul_8U_23U_lor_2_lpi_1_dfm = _132_ | FpMul_8U_23U_lor_1_lpi_1_dfm_4;
  assign FpMul_8U_23U_lor_2_lpi_1_dfm_S = 0 ;
  logic [0:0] _132__C0 ;
  logic [0:0] _132__R0 ;
  logic [0:0] _132__X0 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_4_C0 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_4_R0 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_4_X0 ;
  assign FpMul_8U_23U_lor_2_lpi_1_dfm_T = _132__T | FpMul_8U_23U_lor_1_lpi_1_dfm_4_T ;
  assign _132__C0 = FpMul_8U_23U_lor_2_lpi_1_dfm_C ;
  assign _132__X0 = FpMul_8U_23U_lor_2_lpi_1_dfm_X ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_4_C0 = FpMul_8U_23U_lor_2_lpi_1_dfm_C ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_4_X0 = FpMul_8U_23U_lor_2_lpi_1_dfm_X ;
  assign _132__R0 = ( FpMul_8U_23U_lor_2_lpi_1_dfm_R | FpMul_8U_23U_lor_2_lpi_1_dfm_C & FpMul_8U_23U_lor_1_lpi_1_dfm_4_T ) & { 1{ FpMul_8U_23U_lor_1_lpi_1_dfm_4 != 1'b1 }} ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_4_R0 = ( FpMul_8U_23U_lor_2_lpi_1_dfm_R | FpMul_8U_23U_lor_2_lpi_1_dfm_C & _132__T ) & { 1{ _132_ != 1'b1 }} ;
  assign _195_ = FpMul_8U_23U_else_2_else_if_if_acc_1_nl[7] | _133_;
  assign _195__S = 0 ;
  assign { FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R0 [0], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R0 [1], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R0 [2], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R0 [3], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R0 [4], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R0 [5], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R0 [6] } = 0;
  assign { FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X0 [0], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X0 [1], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X0 [2], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X0 [3], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X0 [4], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X0 [5], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X0 [6] } = 0;
  assign { FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C0 [0], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C0 [1], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C0 [2], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C0 [3], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C0 [4], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C0 [5], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C0 [6] } = 0;
  logic [7:0] FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C1 ;
  logic [7:0] FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R1 ;
  logic [7:0] FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X1 ;
  logic [0:0] _133__C0 ;
  logic [0:0] _133__R0 ;
  logic [0:0] _133__X0 ;
  assign _195__T = FpMul_8U_23U_else_2_else_if_if_acc_1_nl_T [7] | _133__T ;
  assign FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C1 [7] = _195__C ;
  assign FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X1 [7] = _195__X ;
  assign _133__C0 = _195__C ;
  assign _133__X0 = _195__X ;
  assign FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R1 [7] = ( _195__R | _195__C & _133__T ) & { 1{ _133_ != 1'b1 }} ;
  assign _133__R0 = ( _195__R | _195__C & FpMul_8U_23U_else_2_else_if_if_acc_1_nl_T [7] ) & { 1{ FpMul_8U_23U_else_2_else_if_if_acc_1_nl[7] != 1'b1 }} ;
  assign _131_ = _091_ | FpMul_8U_23U_lor_1_lpi_1_dfm_4;
  assign _131__S = 0 ;
  logic [0:0] _091__C0 ;
  logic [0:0] _091__R0 ;
  logic [0:0] _091__X0 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_4_C1 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_4_R1 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_4_X1 ;
  assign _131__T = _091__T | FpMul_8U_23U_lor_1_lpi_1_dfm_4_T ;
  assign _091__C0 = _131__C ;
  assign _091__X0 = _131__X ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_4_C1 = _131__C ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_4_X1 = _131__X ;
  assign _091__R0 = ( _131__R | _131__C & FpMul_8U_23U_lor_1_lpi_1_dfm_4_T ) & { 1{ FpMul_8U_23U_lor_1_lpi_1_dfm_4 != 1'b1 }} ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_4_R1 = ( _131__R | _131__C & _091__T ) & { 1{ _091_ != 1'b1 }} ;
  assign _196_ = or_65_cse | chn_o_rsci_bawt;
  assign _196__S = 0 ;
  logic [0:0] or_65_cse_C2 ;
  logic [0:0] or_65_cse_R2 ;
  logic [0:0] or_65_cse_X2 ;
  logic [0:0] chn_o_rsci_bawt_C3 ;
  logic [0:0] chn_o_rsci_bawt_R3 ;
  logic [0:0] chn_o_rsci_bawt_X3 ;
  assign _196__T = or_65_cse_T | chn_o_rsci_bawt_T ;
  assign or_65_cse_C2 = _196__C ;
  assign or_65_cse_X2 = _196__X ;
  assign chn_o_rsci_bawt_C3 = _196__C ;
  assign chn_o_rsci_bawt_X3 = _196__X ;
  assign or_65_cse_R2 = ( _196__R | _196__C & chn_o_rsci_bawt_T ) & { 1{ chn_o_rsci_bawt != 1'b1 }} ;
  assign chn_o_rsci_bawt_R3 = ( _196__R | _196__C & or_65_cse_T ) & { 1{ or_65_cse != 1'b1 }} ;
  assign or_3_nl = _196_ | _126_;
  assign or_3_nl_S = 0 ;
  logic [0:0] _196__C0 ;
  logic [0:0] _196__R0 ;
  logic [0:0] _196__X0 ;
  logic [0:0] _126__C1 ;
  logic [0:0] _126__R1 ;
  logic [0:0] _126__X1 ;
  assign or_3_nl_T = _196__T | _126__T ;
  assign _196__C0 = or_3_nl_C ;
  assign _196__X0 = or_3_nl_X ;
  assign _126__C1 = or_3_nl_C ;
  assign _126__X1 = or_3_nl_X ;
  assign _196__R0 = ( or_3_nl_R | or_3_nl_C & _126__T ) & { 1{ _126_ != 1'b1 }} ;
  assign _126__R1 = ( or_3_nl_R | or_3_nl_C & _196__T ) & { 1{ _196_ != 1'b1 }} ;
  assign _197_ = _115_ | chn_o_rsci_bawt;
  assign _197__S = 0 ;
  logic [0:0] _115__C1 ;
  logic [0:0] _115__R1 ;
  logic [0:0] _115__X1 ;
  logic [0:0] chn_o_rsci_bawt_C4 ;
  logic [0:0] chn_o_rsci_bawt_R4 ;
  logic [0:0] chn_o_rsci_bawt_X4 ;
  assign _197__T = _115__T | chn_o_rsci_bawt_T ;
  assign _115__C1 = _197__C ;
  assign _115__X1 = _197__X ;
  assign chn_o_rsci_bawt_C4 = _197__C ;
  assign chn_o_rsci_bawt_X4 = _197__X ;
  assign _115__R1 = ( _197__R | _197__C & chn_o_rsci_bawt_T ) & { 1{ chn_o_rsci_bawt != 1'b1 }} ;
  assign chn_o_rsci_bawt_R4 = ( _197__R | _197__C & _115__T ) & { 1{ _115_ != 1'b1 }} ;
  assign _198_ = _197_ | _126_;
  assign _198__S = 0 ;
  logic [0:0] _197__C0 ;
  logic [0:0] _197__R0 ;
  logic [0:0] _197__X0 ;
  logic [0:0] _126__C2 ;
  logic [0:0] _126__R2 ;
  logic [0:0] _126__X2 ;
  assign _198__T = _197__T | _126__T ;
  assign _197__C0 = _198__C ;
  assign _197__X0 = _198__X ;
  assign _126__C2 = _198__C ;
  assign _126__X2 = _198__X ;
  assign _197__R0 = ( _198__R | _198__C & _126__T ) & { 1{ _126_ != 1'b1 }} ;
  assign _126__R2 = ( _198__R | _198__C & _197__T ) & { 1{ _197_ != 1'b1 }} ;
  assign _199_ = _134_ | _135_;
  assign _199__S = 0 ;
  logic [0:0] _134__C0 ;
  logic [0:0] _134__R0 ;
  logic [0:0] _134__X0 ;
  logic [0:0] _135__C0 ;
  logic [0:0] _135__R0 ;
  logic [0:0] _135__X0 ;
  assign _199__T = _134__T | _135__T ;
  assign _134__C0 = _199__C ;
  assign _134__X0 = _199__X ;
  assign _135__C0 = _199__C ;
  assign _135__X0 = _199__X ;
  assign _134__R0 = ( _199__R | _199__C & _135__T ) & { 1{ _135_ != 1'b1 }} ;
  assign _135__R0 = ( _199__R | _199__C & _134__T ) & { 1{ _134_ != 1'b1 }} ;
  assign _200_ = _199_ | FpMul_8U_23U_oelse_1_acc_nl[9];
  assign _200__S = 0 ;
  assign { FpMul_8U_23U_oelse_1_acc_nl_R0 [0], FpMul_8U_23U_oelse_1_acc_nl_R0 [1], FpMul_8U_23U_oelse_1_acc_nl_R0 [2], FpMul_8U_23U_oelse_1_acc_nl_R0 [3], FpMul_8U_23U_oelse_1_acc_nl_R0 [4], FpMul_8U_23U_oelse_1_acc_nl_R0 [5], FpMul_8U_23U_oelse_1_acc_nl_R0 [6], FpMul_8U_23U_oelse_1_acc_nl_R0 [7], FpMul_8U_23U_oelse_1_acc_nl_R0 [8] } = 0;
  assign { FpMul_8U_23U_oelse_1_acc_nl_X0 [0], FpMul_8U_23U_oelse_1_acc_nl_X0 [1], FpMul_8U_23U_oelse_1_acc_nl_X0 [2], FpMul_8U_23U_oelse_1_acc_nl_X0 [3], FpMul_8U_23U_oelse_1_acc_nl_X0 [4], FpMul_8U_23U_oelse_1_acc_nl_X0 [5], FpMul_8U_23U_oelse_1_acc_nl_X0 [6], FpMul_8U_23U_oelse_1_acc_nl_X0 [7], FpMul_8U_23U_oelse_1_acc_nl_X0 [8] } = 0;
  assign { FpMul_8U_23U_oelse_1_acc_nl_C0 [0], FpMul_8U_23U_oelse_1_acc_nl_C0 [1], FpMul_8U_23U_oelse_1_acc_nl_C0 [2], FpMul_8U_23U_oelse_1_acc_nl_C0 [3], FpMul_8U_23U_oelse_1_acc_nl_C0 [4], FpMul_8U_23U_oelse_1_acc_nl_C0 [5], FpMul_8U_23U_oelse_1_acc_nl_C0 [6], FpMul_8U_23U_oelse_1_acc_nl_C0 [7], FpMul_8U_23U_oelse_1_acc_nl_C0 [8] } = 0;
  logic [0:0] _199__C0 ;
  logic [0:0] _199__R0 ;
  logic [0:0] _199__X0 ;
  logic [9:0] FpMul_8U_23U_oelse_1_acc_nl_C1 ;
  logic [9:0] FpMul_8U_23U_oelse_1_acc_nl_R1 ;
  logic [9:0] FpMul_8U_23U_oelse_1_acc_nl_X1 ;
  assign _200__T = _199__T | FpMul_8U_23U_oelse_1_acc_nl_T [9] ;
  assign _199__C0 = _200__C ;
  assign _199__X0 = _200__X ;
  assign FpMul_8U_23U_oelse_1_acc_nl_C1 [9] = _200__C ;
  assign FpMul_8U_23U_oelse_1_acc_nl_X1 [9] = _200__X ;
  assign _199__R0 = ( _200__R | _200__C & FpMul_8U_23U_oelse_1_acc_nl_T [9] ) & { 1{ FpMul_8U_23U_oelse_1_acc_nl[9] != 1'b1 }} ;
  assign FpMul_8U_23U_oelse_1_acc_nl_R1 [9] = ( _200__R | _200__C & _199__T ) & { 1{ _199_ != 1'b1 }} ;
  assign or_1_nl = _200_ | FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp;
  assign or_1_nl_S = 0 ;
  logic [0:0] _200__C0 ;
  logic [0:0] _200__R0 ;
  logic [0:0] _200__X0 ;
  logic [0:0] FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_C1 ;
  logic [0:0] FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_R1 ;
  logic [0:0] FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_X1 ;
  assign or_1_nl_T = _200__T | FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_T ;
  assign _200__C0 = or_1_nl_C ;
  assign _200__X0 = or_1_nl_X ;
  assign FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_C1 = or_1_nl_C ;
  assign FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_X1 = or_1_nl_X ;
  assign _200__R0 = ( or_1_nl_R | or_1_nl_C & FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_T ) & { 1{ FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp != 1'b1 }} ;
  assign FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_R1 = ( or_1_nl_R | or_1_nl_C & _200__T ) & { 1{ _200_ != 1'b1 }} ;
  assign _201_ = main_stage_v_1 | chn_o_rsci_bawt;
  assign _201__S = 0 ;
  logic [0:0] main_stage_v_1_C5 ;
  logic [0:0] main_stage_v_1_R5 ;
  logic [0:0] main_stage_v_1_X5 ;
  logic [0:0] chn_o_rsci_bawt_C5 ;
  logic [0:0] chn_o_rsci_bawt_R5 ;
  logic [0:0] chn_o_rsci_bawt_X5 ;
  assign _201__T = main_stage_v_1_T | chn_o_rsci_bawt_T ;
  assign main_stage_v_1_C5 = _201__C ;
  assign main_stage_v_1_X5 = _201__X ;
  assign chn_o_rsci_bawt_C5 = _201__C ;
  assign chn_o_rsci_bawt_X5 = _201__X ;
  assign main_stage_v_1_R5 = ( _201__R | _201__C & chn_o_rsci_bawt_T ) & { 1{ chn_o_rsci_bawt != 1'b1 }} ;
  assign chn_o_rsci_bawt_R5 = ( _201__R | _201__C & main_stage_v_1_T ) & { 1{ main_stage_v_1 != 1'b1 }} ;
  assign or_7_nl = _201_ | _126_;
  assign or_7_nl_S = 0 ;
  logic [0:0] _201__C0 ;
  logic [0:0] _201__R0 ;
  logic [0:0] _201__X0 ;
  logic [0:0] _126__C3 ;
  logic [0:0] _126__R3 ;
  logic [0:0] _126__X3 ;
  assign or_7_nl_T = _201__T | _126__T ;
  assign _201__C0 = or_7_nl_C ;
  assign _201__X0 = or_7_nl_X ;
  assign _126__C3 = or_7_nl_C ;
  assign _126__X3 = or_7_nl_X ;
  assign _201__R0 = ( or_7_nl_R | or_7_nl_C & _126__T ) & { 1{ _126_ != 1'b1 }} ;
  assign _126__R3 = ( or_7_nl_R | or_7_nl_C & _201__T ) & { 1{ _201_ != 1'b1 }} ;
  assign _202_ = _001_ | chn_o_rsci_bawt;
  assign _202__S = 0 ;
  logic [0:0] _001__C4 ;
  logic [0:0] _001__R4 ;
  logic [0:0] _001__X4 ;
  logic [0:0] chn_o_rsci_bawt_C6 ;
  logic [0:0] chn_o_rsci_bawt_R6 ;
  logic [0:0] chn_o_rsci_bawt_X6 ;
  assign _202__T = _001__T | chn_o_rsci_bawt_T ;
  assign _001__C4 = _202__C ;
  assign _001__X4 = _202__X ;
  assign chn_o_rsci_bawt_C6 = _202__C ;
  assign chn_o_rsci_bawt_X6 = _202__X ;
  assign _001__R4 = ( _202__R | _202__C & chn_o_rsci_bawt_T ) & { 1{ chn_o_rsci_bawt != 1'b1 }} ;
  assign chn_o_rsci_bawt_R6 = ( _202__R | _202__C & _001__T ) & { 1{ _001_ != 1'b1 }} ;
  assign _203_ = _202_ | _126_;
  assign _203__S = 0 ;
  logic [0:0] _202__C0 ;
  logic [0:0] _202__R0 ;
  logic [0:0] _202__X0 ;
  logic [0:0] _126__C4 ;
  logic [0:0] _126__R4 ;
  logic [0:0] _126__X4 ;
  assign _203__T = _202__T | _126__T ;
  assign _202__C0 = _203__C ;
  assign _202__X0 = _203__X ;
  assign _126__C4 = _203__C ;
  assign _126__X4 = _203__X ;
  assign _202__R0 = ( _203__R | _203__C & _126__T ) & { 1{ _126_ != 1'b1 }} ;
  assign _126__R4 = ( _203__R | _203__C & _202__T ) & { 1{ _202_ != 1'b1 }} ;
  assign _204_ = _121_ | chn_o_rsci_bawt;
  assign _204__S = 0 ;
  logic [0:0] _121__C4 ;
  logic [0:0] _121__R4 ;
  logic [0:0] _121__X4 ;
  logic [0:0] chn_o_rsci_bawt_C7 ;
  logic [0:0] chn_o_rsci_bawt_R7 ;
  logic [0:0] chn_o_rsci_bawt_X7 ;
  assign _204__T = _121__T | chn_o_rsci_bawt_T ;
  assign _121__C4 = _204__C ;
  assign _121__X4 = _204__X ;
  assign chn_o_rsci_bawt_C7 = _204__C ;
  assign chn_o_rsci_bawt_X7 = _204__X ;
  assign _121__R4 = ( _204__R | _204__C & chn_o_rsci_bawt_T ) & { 1{ chn_o_rsci_bawt != 1'b1 }} ;
  assign chn_o_rsci_bawt_R7 = ( _204__R | _204__C & _121__T ) & { 1{ _121_ != 1'b1 }} ;
  assign or_tmp_24 = _204_ | _126_;
  assign or_tmp_24_S = 0 ;
  logic [0:0] _204__C0 ;
  logic [0:0] _204__R0 ;
  logic [0:0] _204__X0 ;
  logic [0:0] _126__C5 ;
  logic [0:0] _126__R5 ;
  logic [0:0] _126__X5 ;
  assign or_tmp_24_T = _204__T | _126__T ;
  assign _204__C0 = or_tmp_24_C ;
  assign _204__X0 = or_tmp_24_X ;
  assign _126__C5 = or_tmp_24_C ;
  assign _126__X5 = or_tmp_24_X ;
  assign _204__R0 = ( or_tmp_24_R | or_tmp_24_C & _126__T ) & { 1{ _126_ != 1'b1 }} ;
  assign _126__R5 = ( or_tmp_24_R | or_tmp_24_C & _204__T ) & { 1{ _204_ != 1'b1 }} ;
  assign _205_ = main_stage_v_2 | chn_o_rsci_bawt;
  assign _205__S = 0 ;
  logic [0:0] main_stage_v_2_C2 ;
  logic [0:0] main_stage_v_2_R2 ;
  logic [0:0] main_stage_v_2_X2 ;
  logic [0:0] chn_o_rsci_bawt_C8 ;
  logic [0:0] chn_o_rsci_bawt_R8 ;
  logic [0:0] chn_o_rsci_bawt_X8 ;
  assign _205__T = main_stage_v_2_T | chn_o_rsci_bawt_T ;
  assign main_stage_v_2_C2 = _205__C ;
  assign main_stage_v_2_X2 = _205__X ;
  assign chn_o_rsci_bawt_C8 = _205__C ;
  assign chn_o_rsci_bawt_X8 = _205__X ;
  assign main_stage_v_2_R2 = ( _205__R | _205__C & chn_o_rsci_bawt_T ) & { 1{ chn_o_rsci_bawt != 1'b1 }} ;
  assign chn_o_rsci_bawt_R8 = ( _205__R | _205__C & main_stage_v_2_T ) & { 1{ main_stage_v_2 != 1'b1 }} ;
  assign or_22_nl = _205_ | _126_;
  assign or_22_nl_S = 0 ;
  logic [0:0] _205__C0 ;
  logic [0:0] _205__R0 ;
  logic [0:0] _205__X0 ;
  logic [0:0] _126__C6 ;
  logic [0:0] _126__R6 ;
  logic [0:0] _126__X6 ;
  assign or_22_nl_T = _205__T | _126__T ;
  assign _205__C0 = or_22_nl_C ;
  assign _205__X0 = or_22_nl_X ;
  assign _126__C6 = or_22_nl_C ;
  assign _126__X6 = or_22_nl_X ;
  assign _205__R0 = ( or_22_nl_R | or_22_nl_C & _126__T ) & { 1{ _126_ != 1'b1 }} ;
  assign _126__R6 = ( or_22_nl_R | or_22_nl_C & _205__T ) & { 1{ _205_ != 1'b1 }} ;
  assign or_tmp_32 = _136_ | IsNaN_8U_23U_land_lpi_1_dfm_st_3;
  assign or_tmp_32_S = 0 ;
  logic [0:0] _136__C0 ;
  logic [0:0] _136__R0 ;
  logic [0:0] _136__X0 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_3_C6 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_3_R6 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_3_X6 ;
  assign or_tmp_32_T = _136__T | IsNaN_8U_23U_land_lpi_1_dfm_st_3_T ;
  assign _136__C0 = or_tmp_32_C ;
  assign _136__X0 = or_tmp_32_X ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_C6 = or_tmp_32_C ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_X6 = or_tmp_32_X ;
  assign _136__R0 = ( or_tmp_32_R | or_tmp_32_C & IsNaN_8U_23U_land_lpi_1_dfm_st_3_T ) & { 1{ IsNaN_8U_23U_land_lpi_1_dfm_st_3 != 1'b1 }} ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_R6 = ( or_tmp_32_R | or_tmp_32_C & _136__T ) & { 1{ _136_ != 1'b1 }} ;
  assign _206_ = reg_chn_o_rsci_ld_core_psct_cse | _128_;
  assign _206__S = 0 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C3 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R3 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X3 ;
  logic [0:0] _128__C1 ;
  logic [0:0] _128__R1 ;
  logic [0:0] _128__X1 ;
  assign _206__T = reg_chn_o_rsci_ld_core_psct_cse_T | _128__T ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C3 = _206__C ;
  assign reg_chn_o_rsci_ld_core_psct_cse_X3 = _206__X ;
  assign _128__C1 = _206__C ;
  assign _128__X1 = _206__X ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R3 = ( _206__R | _206__C & _128__T ) & { 1{ _128_ != 1'b1 }} ;
  assign _128__R1 = ( _206__R | _206__C & reg_chn_o_rsci_ld_core_psct_cse_T ) & { 1{ reg_chn_o_rsci_ld_core_psct_cse != 1'b1 }} ;
  assign or_tmp_36 = IsNaN_8U_23U_1_land_lpi_1_dfm_3 | or_tmp_32;
  assign or_tmp_36_S = 0 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_C3 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_R3 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_X3 ;
  logic [0:0] or_tmp_32_C1 ;
  logic [0:0] or_tmp_32_R1 ;
  logic [0:0] or_tmp_32_X1 ;
  assign or_tmp_36_T = IsNaN_8U_23U_1_land_lpi_1_dfm_3_T | or_tmp_32_T ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_C3 = or_tmp_36_C ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_X3 = or_tmp_36_X ;
  assign or_tmp_32_C1 = or_tmp_36_C ;
  assign or_tmp_32_X1 = or_tmp_36_X ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_R3 = ( or_tmp_36_R | or_tmp_36_C & or_tmp_32_T ) & { 1{ or_tmp_32 != 1'b1 }} ;
  assign or_tmp_32_R1 = ( or_tmp_36_R | or_tmp_36_C & IsNaN_8U_23U_1_land_lpi_1_dfm_3_T ) & { 1{ IsNaN_8U_23U_1_land_lpi_1_dfm_3 != 1'b1 }} ;
  assign _207_ = _001_ | IsNaN_8U_23U_1_land_lpi_1_dfm_3;
  assign _207__S = 0 ;
  logic [0:0] _001__C5 ;
  logic [0:0] _001__R5 ;
  logic [0:0] _001__X5 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_C4 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_R4 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_X4 ;
  assign _207__T = _001__T | IsNaN_8U_23U_1_land_lpi_1_dfm_3_T ;
  assign _001__C5 = _207__C ;
  assign _001__X5 = _207__X ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_C4 = _207__C ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_X4 = _207__X ;
  assign _001__R5 = ( _207__R | _207__C & IsNaN_8U_23U_1_land_lpi_1_dfm_3_T ) & { 1{ IsNaN_8U_23U_1_land_lpi_1_dfm_3 != 1'b1 }} ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_R4 = ( _207__R | _207__C & _001__T ) & { 1{ _001_ != 1'b1 }} ;
  assign or_39_nl = _207_ | or_tmp_32;
  assign or_39_nl_S = 0 ;
  logic [0:0] _207__C0 ;
  logic [0:0] _207__R0 ;
  logic [0:0] _207__X0 ;
  logic [0:0] or_tmp_32_C2 ;
  logic [0:0] or_tmp_32_R2 ;
  logic [0:0] or_tmp_32_X2 ;
  assign or_39_nl_T = _207__T | or_tmp_32_T ;
  assign _207__C0 = or_39_nl_C ;
  assign _207__X0 = or_39_nl_X ;
  assign or_tmp_32_C2 = or_39_nl_C ;
  assign or_tmp_32_X2 = or_39_nl_X ;
  assign _207__R0 = ( or_39_nl_R | or_39_nl_C & or_tmp_32_T ) & { 1{ or_tmp_32 != 1'b1 }} ;
  assign or_tmp_32_R2 = ( or_39_nl_R | or_39_nl_C & _207__T ) & { 1{ _207_ != 1'b1 }} ;
  assign or_tmp_51 = or_45_cse | _003_;
  assign or_tmp_51_S = 0 ;
  logic [0:0] or_45_cse_C0 ;
  logic [0:0] or_45_cse_R0 ;
  logic [0:0] or_45_cse_X0 ;
  logic [0:0] _003__C1 ;
  logic [0:0] _003__R1 ;
  logic [0:0] _003__X1 ;
  assign or_tmp_51_T = or_45_cse_T | _003__T ;
  assign or_45_cse_C0 = or_tmp_51_C ;
  assign or_45_cse_X0 = or_tmp_51_X ;
  assign _003__C1 = or_tmp_51_C ;
  assign _003__X1 = or_tmp_51_X ;
  assign or_45_cse_R0 = ( or_tmp_51_R | or_tmp_51_C & _003__T ) & { 1{ _003_ != 1'b1 }} ;
  assign _003__R1 = ( or_tmp_51_R | or_tmp_51_C & or_45_cse_T ) & { 1{ or_45_cse != 1'b1 }} ;
  assign or_tmp_59 = main_stage_en_1 | fsm_output[0];
  assign or_tmp_59_S = 0 ;
  logic [0:0] main_stage_en_1_C1 ;
  logic [0:0] main_stage_en_1_R1 ;
  logic [0:0] main_stage_en_1_X1 ;
  logic [1:0] fsm_output_C2 ;
  logic [1:0] fsm_output_R2 ;
  logic [1:0] fsm_output_X2 ;
  assign or_tmp_59_T = main_stage_en_1_T | fsm_output_T [0] ;
  assign main_stage_en_1_C1 = or_tmp_59_C ;
  assign main_stage_en_1_X1 = or_tmp_59_X ;
  assign fsm_output_C2 [0] = or_tmp_59_C ;
  assign fsm_output_X2 [0] = or_tmp_59_X ;
  assign main_stage_en_1_R1 = ( or_tmp_59_R | or_tmp_59_C & fsm_output_T [0] ) & { 1{ fsm_output[0] != 1'b1 }} ;
  assign fsm_output_R2 [0] = ( or_tmp_59_R | or_tmp_59_C & main_stage_en_1_T ) & { 1{ main_stage_en_1 != 1'b1 }} ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMul_8U_23U_ua_sva_1_30_0_1 <= 31'b0000000000000000000000000000000;
    else
      FpMul_8U_23U_ua_sva_1_30_0_1 <= _023_;
  logic [30:0] _023__X0 ;
  logic [30:0] _023__R0 ;
  logic [30:0] _023__C0 ;
  assign _023__X0 = { 31{ FpMul_8U_23U_ua_sva_1_30_0_1_S != _023__S }} ;
  assign _023__R0 = 0 ;
  assign _023__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_ua_sva_1_30_0_1_T 		<= !nvdla_core_rstn ? 0 : ( _023__T & _023__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_ua_sva_1_30_0_1_t_flag 	<= !nvdla_core_rstn ? 0 : FpMul_8U_23U_ua_sva_1_30_0_1_t_flag ? 1 : | _023__T & ( | _023__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_ua_sva_1_30_0_1_r_flag 	<= !nvdla_core_rstn ? 0 : FpMul_8U_23U_ua_sva_1_30_0_1_r_flag ? 1 : FpMul_8U_23U_ua_sva_1_30_0_1_t_flag ? 0 : ( | FpMul_8U_23U_ua_sva_1_30_0_1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMul_8U_23U_ub_sva_1_30_0_1 <= 31'b0000000000000000000000000000000;
    else
      FpMul_8U_23U_ub_sva_1_30_0_1 <= _024_;
  logic [30:0] _024__X0 ;
  logic [30:0] _024__R0 ;
  logic [30:0] _024__C0 ;
  assign _024__X0 = { 31{ FpMul_8U_23U_ub_sva_1_30_0_1_S != _024__S }} ;
  assign _024__R0 = 0 ;
  assign _024__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_ub_sva_1_30_0_1_T 		<= !nvdla_core_rstn ? 0 : ( _024__T & _024__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_ub_sva_1_30_0_1_t_flag 	<= !nvdla_core_rstn ? 0 : FpMul_8U_23U_ub_sva_1_30_0_1_t_flag ? 1 : | _024__T & ( | _024__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_ub_sva_1_30_0_1_r_flag 	<= !nvdla_core_rstn ? 0 : FpMul_8U_23U_ub_sva_1_30_0_1_r_flag ? 1 : FpMul_8U_23U_ub_sva_1_30_0_1_t_flag ? 0 : ( | FpMul_8U_23U_ub_sva_1_30_0_1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMul_8U_23U_mux_10_itm_3 <= 1'b0;
    else
      FpMul_8U_23U_mux_10_itm_3 <= _018_;
  logic [0:0] _018__X0 ;
  logic [0:0] _018__R0 ;
  logic [0:0] _018__C0 ;
  assign _018__X0 = { 1{ FpMul_8U_23U_mux_10_itm_3_S != _018__S }} ;
  assign _018__R0 = 0 ;
  assign _018__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_mux_10_itm_3_T 		<= !nvdla_core_rstn ? 0 : ( _018__T & _018__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_mux_10_itm_3_t_flag 	<= !nvdla_core_rstn ? 0 : FpMul_8U_23U_mux_10_itm_3_t_flag ? 1 : | _018__T & ( | _018__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_mux_10_itm_3_r_flag 	<= !nvdla_core_rstn ? 0 : FpMul_8U_23U_mux_10_itm_3_r_flag ? 1 : FpMul_8U_23U_mux_10_itm_3_t_flag ? 0 : ( | FpMul_8U_23U_mux_10_itm_3_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMul_8U_23U_lor_1_lpi_1_dfm_3 <= 1'b0;
    else
      FpMul_8U_23U_lor_1_lpi_1_dfm_3 <= _014_;
  logic [0:0] _014__X0 ;
  logic [0:0] _014__R0 ;
  logic [0:0] _014__C0 ;
  assign _014__X0 = { 1{ FpMul_8U_23U_lor_1_lpi_1_dfm_3_S != _014__S }} ;
  assign _014__R0 = 0 ;
  assign _014__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_lor_1_lpi_1_dfm_3_T 		<= !nvdla_core_rstn ? 0 : ( _014__T & _014__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_lor_1_lpi_1_dfm_3_t_flag 	<= !nvdla_core_rstn ? 0 : FpMul_8U_23U_lor_1_lpi_1_dfm_3_t_flag ? 1 : | _014__T & ( | _014__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_lor_1_lpi_1_dfm_3_r_flag 	<= !nvdla_core_rstn ? 0 : FpMul_8U_23U_lor_1_lpi_1_dfm_3_r_flag ? 1 : FpMul_8U_23U_lor_1_lpi_1_dfm_3_t_flag ? 0 : ( | FpMul_8U_23U_lor_1_lpi_1_dfm_3_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs <= 1'b0;
    else
      FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs <= _011_;
  logic [0:0] _011__X0 ;
  logic [0:0] _011__R0 ;
  logic [0:0] _011__C0 ;
  assign _011__X0 = { 1{ FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_S != _011__S }} ;
  assign _011__R0 = 0 ;
  assign _011__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_T 		<= !nvdla_core_rstn ? 0 : ( _011__T & _011__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_t_flag 	<= !nvdla_core_rstn ? 0 : FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_t_flag ? 1 : | _011__T & ( | _011__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_r_flag 	<= !nvdla_core_rstn ? 0 : FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_r_flag ? 1 : FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_t_flag ? 0 : ( | FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMul_8U_23U_p_mant_p1_sva <= 48'b000000000000000000000000000000000000000000000000;
    else
      FpMul_8U_23U_p_mant_p1_sva <= _021_;
  logic [47:0] _021__X0 ;
  logic [47:0] _021__R0 ;
  logic [47:0] _021__C0 ;
  assign _021__X0 = { 48{ FpMul_8U_23U_p_mant_p1_sva_S != _021__S }} ;
  assign _021__R0 = 0 ;
  assign _021__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_p_mant_p1_sva_T 		<= !nvdla_core_rstn ? 0 : ( _021__T & _021__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_p_mant_p1_sva_t_flag 	<= !nvdla_core_rstn ? 0 : FpMul_8U_23U_p_mant_p1_sva_t_flag ? 1 : | _021__T & ( | _021__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_p_mant_p1_sva_r_flag 	<= !nvdla_core_rstn ? 0 : FpMul_8U_23U_p_mant_p1_sva_r_flag ? 1 : FpMul_8U_23U_p_mant_p1_sva_t_flag ? 0 : ( | FpMul_8U_23U_p_mant_p1_sva_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2 <= 1'b0;
    else
      FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2 <= _012_;
  logic [0:0] _012__X0 ;
  logic [0:0] _012__R0 ;
  logic [0:0] _012__C0 ;
  assign _012__X0 = { 1{ FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_S != _012__S }} ;
  assign _012__R0 = 0 ;
  assign _012__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_T 		<= !nvdla_core_rstn ? 0 : ( _012__T & _012__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_t_flag 	<= !nvdla_core_rstn ? 0 : FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_t_flag ? 1 : | _012__T & ( | _012__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_r_flag 	<= !nvdla_core_rstn ? 0 : FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_r_flag ? 1 : FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_t_flag ? 0 : ( | FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMul_8U_23U_lor_1_lpi_1_dfm_4 <= 1'b0;
    else
      FpMul_8U_23U_lor_1_lpi_1_dfm_4 <= _015_;
  logic [0:0] _015__X0 ;
  logic [0:0] _015__R0 ;
  logic [0:0] _015__C0 ;
  assign _015__X0 = { 1{ FpMul_8U_23U_lor_1_lpi_1_dfm_4_S != _015__S }} ;
  assign _015__R0 = 0 ;
  assign _015__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_lor_1_lpi_1_dfm_4_T 		<= !nvdla_core_rstn ? 0 : ( _015__T & _015__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_lor_1_lpi_1_dfm_4_t_flag 	<= !nvdla_core_rstn ? 0 : FpMul_8U_23U_lor_1_lpi_1_dfm_4_t_flag ? 1 : | _015__T & ( | _015__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_lor_1_lpi_1_dfm_4_r_flag 	<= !nvdla_core_rstn ? 0 : FpMul_8U_23U_lor_1_lpi_1_dfm_4_r_flag ? 1 : FpMul_8U_23U_lor_1_lpi_1_dfm_4_t_flag ? 0 : ( | FpMul_8U_23U_lor_1_lpi_1_dfm_4_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2 <= 23'b00000000000000000000000;
    else
      FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2 <= _007_;
  logic [22:0] _007__X0 ;
  logic [22:0] _007__R0 ;
  logic [22:0] _007__C0 ;
  assign _007__X0 = { 23{ FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_S != _007__S }} ;
  assign _007__R0 = 0 ;
  assign _007__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_T 		<= !nvdla_core_rstn ? 0 : ( _007__T & _007__X0 );
  always @( posedge nvdla_core_clk )
      FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_t_flag 	<= !nvdla_core_rstn ? 0 : FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_t_flag ? 1 : | _007__T & ( | _007__X0 );
  always @( posedge nvdla_core_clk )
      FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_r_flag 	<= !nvdla_core_rstn ? 0 : FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_r_flag ? 1 : FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_t_flag ? 0 : ( | FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      IsNaN_8U_23U_1_land_lpi_1_dfm_4 <= 1'b0;
    else
      IsNaN_8U_23U_1_land_lpi_1_dfm_4 <= _026_;
  logic [0:0] _026__X0 ;
  logic [0:0] _026__R0 ;
  logic [0:0] _026__C0 ;
  assign _026__X0 = { 1{ IsNaN_8U_23U_1_land_lpi_1_dfm_4_S != _026__S }} ;
  assign _026__R0 = 0 ;
  assign _026__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_1_land_lpi_1_dfm_4_T 		<= !nvdla_core_rstn ? 0 : ( _026__T & _026__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_1_land_lpi_1_dfm_4_t_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_8U_23U_1_land_lpi_1_dfm_4_t_flag ? 1 : | _026__T & ( | _026__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_1_land_lpi_1_dfm_4_r_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_8U_23U_1_land_lpi_1_dfm_4_r_flag ? 1 : IsNaN_8U_23U_1_land_lpi_1_dfm_4_t_flag ? 0 : ( | IsNaN_8U_23U_1_land_lpi_1_dfm_4_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      IsNaN_8U_23U_land_lpi_1_dfm_4 <= 1'b0;
    else
      IsNaN_8U_23U_land_lpi_1_dfm_4 <= _027_;
  logic [0:0] _027__X0 ;
  logic [0:0] _027__R0 ;
  logic [0:0] _027__C0 ;
  assign _027__X0 = { 1{ IsNaN_8U_23U_land_lpi_1_dfm_4_S != _027__S }} ;
  assign _027__R0 = 0 ;
  assign _027__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_land_lpi_1_dfm_4_T 		<= !nvdla_core_rstn ? 0 : ( _027__T & _027__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_land_lpi_1_dfm_4_t_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_8U_23U_land_lpi_1_dfm_4_t_flag ? 1 : | _027__T & ( | _027__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_land_lpi_1_dfm_4_r_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_8U_23U_land_lpi_1_dfm_4_r_flag ? 1 : IsNaN_8U_23U_land_lpi_1_dfm_4_t_flag ? 0 : ( | IsNaN_8U_23U_land_lpi_1_dfm_4_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMul_8U_23U_mux_10_itm_4 <= 1'b0;
    else
      FpMul_8U_23U_mux_10_itm_4 <= _019_;
  logic [0:0] _019__X0 ;
  logic [0:0] _019__R0 ;
  logic [0:0] _019__C0 ;
  assign _019__X0 = { 1{ FpMul_8U_23U_mux_10_itm_4_S != _019__S }} ;
  assign _019__R0 = 0 ;
  assign _019__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_mux_10_itm_4_T 		<= !nvdla_core_rstn ? 0 : ( _019__T & _019__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_mux_10_itm_4_t_flag 	<= !nvdla_core_rstn ? 0 : FpMul_8U_23U_mux_10_itm_4_t_flag ? 1 : | _019__T & ( | _019__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_mux_10_itm_4_r_flag 	<= !nvdla_core_rstn ? 0 : FpMul_8U_23U_mux_10_itm_4_r_flag ? 1 : FpMul_8U_23U_mux_10_itm_4_t_flag ? 0 : ( | FpMul_8U_23U_mux_10_itm_4_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMul_8U_23U_lor_1_lpi_1_dfm_st_4 <= 1'b0;
    else
      FpMul_8U_23U_lor_1_lpi_1_dfm_st_4 <= _017_;
  logic [0:0] _017__X0 ;
  logic [0:0] _017__R0 ;
  logic [0:0] _017__C0 ;
  assign _017__X0 = { 1{ FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_S != _017__S }} ;
  assign _017__R0 = 0 ;
  assign _017__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_T 		<= !nvdla_core_rstn ? 0 : ( _017__T & _017__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_t_flag 	<= !nvdla_core_rstn ? 0 : FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_t_flag ? 1 : | _017__T & ( | _017__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_r_flag 	<= !nvdla_core_rstn ? 0 : FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_r_flag ? 1 : FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_t_flag ? 0 : ( | FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2 <= 8'b00000000;
    else
      FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2 <= _008_;
  logic [7:0] _008__X0 ;
  logic [7:0] _008__R0 ;
  logic [7:0] _008__C0 ;
  assign _008__X0 = { 8{ FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_S != _008__S }} ;
  assign _008__R0 = 0 ;
  assign _008__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_T 		<= !nvdla_core_rstn ? 0 : ( _008__T & _008__X0 );
  always @( posedge nvdla_core_clk )
      FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_t_flag 	<= !nvdla_core_rstn ? 0 : FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_t_flag ? 1 : | _008__T & ( | _008__X0 );
  always @( posedge nvdla_core_clk )
      FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_r_flag 	<= !nvdla_core_rstn ? 0 : FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_r_flag ? 1 : FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_t_flag ? 0 : ( | FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2 <= 1'b0;
    else
      FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2 <= _013_;
  logic [0:0] _013__X0 ;
  logic [0:0] _013__R0 ;
  logic [0:0] _013__C0 ;
  assign _013__X0 = { 1{ FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_S != _013__S }} ;
  assign _013__R0 = 0 ;
  assign _013__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_T 		<= !nvdla_core_rstn ? 0 : ( _013__T & _013__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_t_flag 	<= !nvdla_core_rstn ? 0 : FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_t_flag ? 1 : | _013__T & ( | _013__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_r_flag 	<= !nvdla_core_rstn ? 0 : FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_r_flag ? 1 : FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_t_flag ? 0 : ( | FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2 <= 1'b0;
    else
      FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2 <= _009_;
  logic [0:0] _009__X0 ;
  logic [0:0] _009__R0 ;
  logic [0:0] _009__C0 ;
  assign _009__X0 = { 1{ FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_S != _009__S }} ;
  assign _009__R0 = 0 ;
  assign _009__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_T 		<= !nvdla_core_rstn ? 0 : ( _009__T & _009__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_t_flag 	<= !nvdla_core_rstn ? 0 : FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_t_flag ? 1 : | _009__T & ( | _009__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_r_flag 	<= !nvdla_core_rstn ? 0 : FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_r_flag ? 1 : FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_t_flag ? 0 : ( | FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMul_8U_23U_p_mant_p1_sva_2 <= 48'b000000000000000000000000000000000000000000000000;
    else
      FpMul_8U_23U_p_mant_p1_sva_2 <= _022_;
  logic [47:0] _022__X0 ;
  logic [47:0] _022__R0 ;
  logic [47:0] _022__C0 ;
  assign _022__X0 = { 48{ FpMul_8U_23U_p_mant_p1_sva_2_S != _022__S }} ;
  assign _022__R0 = 0 ;
  assign _022__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_p_mant_p1_sva_2_T 		<= !nvdla_core_rstn ? 0 : ( _022__T & _022__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_p_mant_p1_sva_2_t_flag 	<= !nvdla_core_rstn ? 0 : FpMul_8U_23U_p_mant_p1_sva_2_t_flag ? 1 : | _022__T & ( | _022__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_p_mant_p1_sva_2_r_flag 	<= !nvdla_core_rstn ? 0 : FpMul_8U_23U_p_mant_p1_sva_2_r_flag ? 1 : FpMul_8U_23U_p_mant_p1_sva_2_t_flag ? 0 : ( | FpMul_8U_23U_p_mant_p1_sva_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMul_8U_23U_p_expo_sva_5 <= 8'b00000000;
    else
      FpMul_8U_23U_p_expo_sva_5 <= _020_;
  logic [7:0] _020__X0 ;
  logic [7:0] _020__R0 ;
  logic [7:0] _020__C0 ;
  assign _020__X0 = { 8{ FpMul_8U_23U_p_expo_sva_5_S != _020__S }} ;
  assign _020__R0 = 0 ;
  assign _020__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_p_expo_sva_5_T 		<= !nvdla_core_rstn ? 0 : ( _020__T & _020__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_p_expo_sva_5_t_flag 	<= !nvdla_core_rstn ? 0 : FpMul_8U_23U_p_expo_sva_5_t_flag ? 1 : | _020__T & ( | _020__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_p_expo_sva_5_r_flag 	<= !nvdla_core_rstn ? 0 : FpMul_8U_23U_p_expo_sva_5_r_flag ? 1 : FpMul_8U_23U_p_expo_sva_5_t_flag ? 0 : ( | FpMul_8U_23U_p_expo_sva_5_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      main_stage_v_2 <= 1'b0;
    else
      main_stage_v_2 <= _034_;
  logic [0:0] _034__X0 ;
  logic [0:0] _034__R0 ;
  logic [0:0] _034__C0 ;
  assign _034__X0 = { 1{ main_stage_v_2_S != _034__S }} ;
  assign _034__R0 = 0 ;
  assign _034__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      main_stage_v_2_T 		<= !nvdla_core_rstn ? 0 : ( _034__T & _034__X0 );
  always @( posedge nvdla_core_clk )
      main_stage_v_2_t_flag 	<= !nvdla_core_rstn ? 0 : main_stage_v_2_t_flag ? 1 : | _034__T & ( | _034__X0 );
  always @( posedge nvdla_core_clk )
      main_stage_v_2_r_flag 	<= !nvdla_core_rstn ? 0 : main_stage_v_2_r_flag ? 1 : main_stage_v_2_t_flag ? 0 : ( | main_stage_v_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      IsNaN_8U_23U_1_land_lpi_1_dfm_3 <= 1'b0;
    else
      IsNaN_8U_23U_1_land_lpi_1_dfm_3 <= _025_;
  logic [0:0] _025__X0 ;
  logic [0:0] _025__R0 ;
  logic [0:0] _025__C0 ;
  assign _025__X0 = { 1{ IsNaN_8U_23U_1_land_lpi_1_dfm_3_S != _025__S }} ;
  assign _025__R0 = 0 ;
  assign _025__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_1_land_lpi_1_dfm_3_T 		<= !nvdla_core_rstn ? 0 : ( _025__T & _025__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_1_land_lpi_1_dfm_3_t_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_8U_23U_1_land_lpi_1_dfm_3_t_flag ? 1 : | _025__T & ( | _025__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_1_land_lpi_1_dfm_3_r_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_8U_23U_1_land_lpi_1_dfm_3_r_flag ? 1 : IsNaN_8U_23U_1_land_lpi_1_dfm_3_t_flag ? 0 : ( | IsNaN_8U_23U_1_land_lpi_1_dfm_3_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMul_8U_23U_lor_1_lpi_1_dfm_st_3 <= 1'b0;
    else
      FpMul_8U_23U_lor_1_lpi_1_dfm_st_3 <= _016_;
  logic [0:0] _016__X0 ;
  logic [0:0] _016__R0 ;
  logic [0:0] _016__C0 ;
  assign _016__X0 = { 1{ FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_S != _016__S }} ;
  assign _016__R0 = 0 ;
  assign _016__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_T 		<= !nvdla_core_rstn ? 0 : ( _016__T & _016__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_t_flag 	<= !nvdla_core_rstn ? 0 : FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_t_flag ? 1 : | _016__T & ( | _016__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_r_flag 	<= !nvdla_core_rstn ? 0 : FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_r_flag ? 1 : FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_t_flag ? 0 : ( | FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      IsNaN_8U_23U_land_lpi_1_dfm_st_3 <= 1'b0;
    else
      IsNaN_8U_23U_land_lpi_1_dfm_st_3 <= _028_;
  logic [0:0] _028__X0 ;
  logic [0:0] _028__R0 ;
  logic [0:0] _028__C0 ;
  assign _028__X0 = { 1{ IsNaN_8U_23U_land_lpi_1_dfm_st_3_S != _028__S }} ;
  assign _028__R0 = 0 ;
  assign _028__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_land_lpi_1_dfm_st_3_T 		<= !nvdla_core_rstn ? 0 : ( _028__T & _028__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_land_lpi_1_dfm_st_3_t_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_8U_23U_land_lpi_1_dfm_st_3_t_flag ? 1 : | _028__T & ( | _028__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_land_lpi_1_dfm_st_3_r_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_8U_23U_land_lpi_1_dfm_st_3_r_flag ? 1 : IsNaN_8U_23U_land_lpi_1_dfm_st_3_t_flag ? 0 : ( | IsNaN_8U_23U_land_lpi_1_dfm_st_3_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2 <= 8'b00000000;
    else
      FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2 <= _010_;
  logic [7:0] _010__X0 ;
  logic [7:0] _010__R0 ;
  logic [7:0] _010__C0 ;
  assign _010__X0 = { 8{ FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_S != _010__S }} ;
  assign _010__R0 = 0 ;
  assign _010__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_T 		<= !nvdla_core_rstn ? 0 : ( _010__T & _010__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_t_flag 	<= !nvdla_core_rstn ? 0 : FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_t_flag ? 1 : | _010__T & ( | _010__X0 );
  always @( posedge nvdla_core_clk )
      FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_r_flag 	<= !nvdla_core_rstn ? 0 : FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_r_flag ? 1 : FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_t_flag ? 0 : ( | FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      main_stage_v_1 <= 1'b0;
    else
      main_stage_v_1 <= _033_;
  logic [0:0] _033__X0 ;
  logic [0:0] _033__R0 ;
  logic [0:0] _033__C0 ;
  assign _033__X0 = { 1{ main_stage_v_1_S != _033__S }} ;
  assign _033__R0 = 0 ;
  assign _033__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      main_stage_v_1_T 		<= !nvdla_core_rstn ? 0 : ( _033__T & _033__X0 );
  always @( posedge nvdla_core_clk )
      main_stage_v_1_t_flag 	<= !nvdla_core_rstn ? 0 : main_stage_v_1_t_flag ? 1 : | _033__T & ( | _033__X0 );
  always @( posedge nvdla_core_clk )
      main_stage_v_1_r_flag 	<= !nvdla_core_rstn ? 0 : main_stage_v_1_r_flag ? 1 : main_stage_v_1_t_flag ? 0 : ( | main_stage_v_1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      reg_chn_o_rsci_ld_core_psct_cse <= 1'b0;
    else
      reg_chn_o_rsci_ld_core_psct_cse <= _037_;
  logic [0:0] _037__X0 ;
  logic [0:0] _037__R0 ;
  logic [0:0] _037__C0 ;
  assign _037__X0 = { 1{ reg_chn_o_rsci_ld_core_psct_cse_S != _037__S }} ;
  assign _037__R0 = 0 ;
  assign _037__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      reg_chn_o_rsci_ld_core_psct_cse_T 		<= !nvdla_core_rstn ? 0 : ( _037__T & _037__X0 );
  always @( posedge nvdla_core_clk )
      reg_chn_o_rsci_ld_core_psct_cse_t_flag 	<= !nvdla_core_rstn ? 0 : reg_chn_o_rsci_ld_core_psct_cse_t_flag ? 1 : | _037__T & ( | _037__X0 );
  always @( posedge nvdla_core_clk )
      reg_chn_o_rsci_ld_core_psct_cse_r_flag 	<= !nvdla_core_rstn ? 0 : reg_chn_o_rsci_ld_core_psct_cse_r_flag ? 1 : reg_chn_o_rsci_ld_core_psct_cse_t_flag ? 0 : ( | reg_chn_o_rsci_ld_core_psct_cse_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_o_rsci_d_30_23 <= 8'b00000000;
    else
      chn_o_rsci_d_30_23 <= _030_;
  logic [7:0] _030__X0 ;
  logic [7:0] _030__R0 ;
  logic [7:0] _030__C0 ;
  assign _030__X0 = { 8{ chn_o_rsci_d_30_23_S != _030__S }} ;
  assign _030__R0 = 0 ;
  assign _030__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_30_23_T 		<= !nvdla_core_rstn ? 0 : ( _030__T & _030__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_30_23_t_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_30_23_t_flag ? 1 : | _030__T & ( | _030__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_30_23_r_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_30_23_r_flag ? 1 : chn_o_rsci_d_30_23_t_flag ? 0 : ( | chn_o_rsci_d_30_23_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_o_rsci_d_31 <= 1'b0;
    else
      chn_o_rsci_d_31 <= _031_;
  logic [0:0] _031__X0 ;
  logic [0:0] _031__R0 ;
  logic [0:0] _031__C0 ;
  assign _031__X0 = { 1{ chn_o_rsci_d_31_S != _031__S }} ;
  assign _031__R0 = 0 ;
  assign _031__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_31_T 		<= !nvdla_core_rstn ? 0 : ( _031__T & _031__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_31_t_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_31_t_flag ? 1 : | _031__T & ( | _031__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_31_r_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_31_r_flag ? 1 : chn_o_rsci_d_31_t_flag ? 0 : ( | chn_o_rsci_d_31_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_o_rsci_d_22_0 <= 23'b00000000000000000000000;
    else
      chn_o_rsci_d_22_0 <= _029_;
  logic [22:0] _029__X0 ;
  logic [22:0] _029__R0 ;
  logic [22:0] _029__C0 ;
  assign _029__X0 = { 23{ chn_o_rsci_d_22_0_S != _029__S }} ;
  assign _029__R0 = 0 ;
  assign _029__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_22_0_T 		<= !nvdla_core_rstn ? 0 : ( _029__T & _029__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_22_0_t_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_22_0_t_flag ? 1 : | _029__T & ( | _029__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_22_0_r_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_22_0_r_flag ? 1 : chn_o_rsci_d_22_0_t_flag ? 0 : ( | chn_o_rsci_d_22_0_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      reg_chn_b_rsci_ld_core_psct_cse <= 1'b0;
    else
      reg_chn_b_rsci_ld_core_psct_cse <= _036_;
  logic [0:0] _036__X0 ;
  logic [0:0] _036__R0 ;
  logic [0:0] _036__C0 ;
  assign _036__X0 = { 1{ reg_chn_b_rsci_ld_core_psct_cse_S != _036__S }} ;
  assign _036__R0 = 0 ;
  assign _036__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      reg_chn_b_rsci_ld_core_psct_cse_T 		<= !nvdla_core_rstn ? 0 : ( _036__T & _036__X0 );
  always @( posedge nvdla_core_clk )
      reg_chn_b_rsci_ld_core_psct_cse_t_flag 	<= !nvdla_core_rstn ? 0 : reg_chn_b_rsci_ld_core_psct_cse_t_flag ? 1 : | _036__T & ( | _036__X0 );
  always @( posedge nvdla_core_clk )
      reg_chn_b_rsci_ld_core_psct_cse_r_flag 	<= !nvdla_core_rstn ? 0 : reg_chn_b_rsci_ld_core_psct_cse_r_flag ? 1 : reg_chn_b_rsci_ld_core_psct_cse_t_flag ? 0 : ( | reg_chn_b_rsci_ld_core_psct_cse_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_o_rsci_iswt0 <= 1'b0;
    else
      chn_o_rsci_iswt0 <= _032_;
  logic [0:0] _032__X0 ;
  logic [0:0] _032__R0 ;
  logic [0:0] _032__C0 ;
  assign _032__X0 = { 1{ chn_o_rsci_iswt0_S != _032__S }} ;
  assign _032__R0 = 0 ;
  assign _032__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_o_rsci_iswt0_T 		<= !nvdla_core_rstn ? 0 : ( _032__T & _032__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_iswt0_t_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_iswt0_t_flag ? 1 : | _032__T & ( | _032__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_iswt0_r_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_iswt0_r_flag ? 1 : chn_o_rsci_iswt0_t_flag ? 0 : ( | chn_o_rsci_iswt0_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      reg_chn_b_rsci_iswt0_cse <= 1'b0;
    else
      reg_chn_b_rsci_iswt0_cse <= _035_;
  logic [0:0] _035__X0 ;
  logic [0:0] _035__R0 ;
  logic [0:0] _035__C0 ;
  assign _035__X0 = { 1{ reg_chn_b_rsci_iswt0_cse_S != _035__S }} ;
  assign _035__R0 = 0 ;
  assign _035__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      reg_chn_b_rsci_iswt0_cse_T 		<= !nvdla_core_rstn ? 0 : ( _035__T & _035__X0 );
  always @( posedge nvdla_core_clk )
      reg_chn_b_rsci_iswt0_cse_t_flag 	<= !nvdla_core_rstn ? 0 : reg_chn_b_rsci_iswt0_cse_t_flag ? 1 : | _035__T & ( | _035__X0 );
  always @( posedge nvdla_core_clk )
      reg_chn_b_rsci_iswt0_cse_r_flag 	<= !nvdla_core_rstn ? 0 : reg_chn_b_rsci_iswt0_cse_r_flag ? 1 : reg_chn_b_rsci_iswt0_cse_t_flag ? 0 : ( | reg_chn_b_rsci_iswt0_cse_R ) ;
  assign mux_31_nl = or_10_cse ? mux_30_nl : nand_6_nl;
  logic [0:0] or_10_cse_C13 ;
  logic [0:0] or_10_cse_R13 ;
  logic [0:0] or_10_cse_X13 ;
  assign or_10_cse_C13 = | mux_31_nl_C ;
  assign or_10_cse_X13 = | mux_31_nl_X ;
  assign mux_31_nl_T = or_10_cse ? ( { 1{ or_10_cse_T  }} | mux_30_nl_T ) : ( { 1{ or_10_cse_T  }} | nand_6_nl_T );
  assign mux_31_nl_S = or_10_cse ? mux_30_nl_S : nand_6_nl_S ;
  assign or_10_cse_R13 = ( | (mux_31_nl_R | ( mux_31_nl_C & ( { 1{ or_10_cse }} & mux_30_nl_T | { 1{ !or_10_cse }} & nand_6_nl_T )))) && mux_30_nl != nand_6_nl ;
  logic [0:0] mux_30_nl_C0 ;
  logic [0:0] mux_30_nl_R0 ;
  logic [0:0] mux_30_nl_X0 ;
  assign mux_30_nl_C0 = { 1{ or_10_cse }} ;
  assign mux_30_nl_R0 = { 1{ or_10_cse }} & ( mux_31_nl_R | ( { 1{ or_10_cse_T  }} & mux_31_nl_C ));
  assign mux_30_nl_X0 = { 1{ or_10_cse }} & mux_31_nl_X ;
  logic [0:0] nand_6_nl_C0 ;
  logic [0:0] nand_6_nl_R0 ;
  logic [0:0] nand_6_nl_X0 ;
  assign nand_6_nl_C0 = { 1{ !or_10_cse }} ;
  assign nand_6_nl_R0 = { 1{ !or_10_cse }} & ( mux_31_nl_R | ( { 1{ or_10_cse_T  }} & mux_31_nl_C ));
  assign nand_6_nl_X0 = { 1{ !or_10_cse }} & mux_31_nl_X ;
  assign mux_30_nl = _097_ ? mux_29_nl : or_tmp_51;
  logic [0:0] _097__C2 ;
  logic [0:0] _097__R2 ;
  logic [0:0] _097__X2 ;
  assign _097__C2 = | mux_30_nl_C ;
  assign _097__X2 = | mux_30_nl_X ;
  assign mux_30_nl_T = _097_ ? ( { 1{ _097__T  }} | mux_29_nl_T ) : ( { 1{ _097__T  }} | or_tmp_51_T );
  assign mux_30_nl_S = _097_ ? mux_29_nl_S : or_tmp_51_S ;
  assign _097__R2 = ( | (mux_30_nl_R | ( mux_30_nl_C & ( { 1{ _097_ }} & mux_29_nl_T | { 1{ !_097_ }} & or_tmp_51_T )))) && mux_29_nl != or_tmp_51 ;
  logic [0:0] mux_29_nl_C0 ;
  logic [0:0] mux_29_nl_R0 ;
  logic [0:0] mux_29_nl_X0 ;
  assign mux_29_nl_C0 = { 1{ _097_ }} ;
  assign mux_29_nl_R0 = { 1{ _097_ }} & ( mux_30_nl_R | ( { 1{ _097__T  }} & mux_30_nl_C ));
  assign mux_29_nl_X0 = { 1{ _097_ }} & mux_30_nl_X ;
  logic [0:0] or_tmp_51_C0 ;
  logic [0:0] or_tmp_51_R0 ;
  logic [0:0] or_tmp_51_X0 ;
  assign or_tmp_51_C0 = { 1{ !_097_ }} ;
  assign or_tmp_51_R0 = { 1{ !_097_ }} & ( mux_30_nl_R | ( { 1{ _097__T  }} & mux_30_nl_C ));
  assign or_tmp_51_X0 = { 1{ !_097_ }} & mux_30_nl_X ;
  assign mux_29_nl = and_91_nl ? _003_ : or_tmp_51;
  logic [0:0] and_91_nl_C2 ;
  logic [0:0] and_91_nl_R2 ;
  logic [0:0] and_91_nl_X2 ;
  assign and_91_nl_C2 = | mux_29_nl_C ;
  assign and_91_nl_X2 = | mux_29_nl_X ;
  assign mux_29_nl_T = and_91_nl ? ( { 1{ and_91_nl_T  }} | _003__T ) : ( { 1{ and_91_nl_T  }} | or_tmp_51_T );
  assign mux_29_nl_S = and_91_nl ? _003__S : or_tmp_51_S ;
  assign and_91_nl_R2 = ( | (mux_29_nl_R | ( mux_29_nl_C & ( { 1{ and_91_nl }} & _003__T | { 1{ !and_91_nl }} & or_tmp_51_T )))) && _003_ != or_tmp_51 ;
  logic [0:0] _003__C2 ;
  logic [0:0] _003__R2 ;
  logic [0:0] _003__X2 ;
  assign _003__C2 = { 1{ and_91_nl }} ;
  assign _003__R2 = { 1{ and_91_nl }} & ( mux_29_nl_R | ( { 1{ and_91_nl_T  }} & mux_29_nl_C ));
  assign _003__X2 = { 1{ and_91_nl }} & mux_29_nl_X ;
  logic [0:0] or_tmp_51_C1 ;
  logic [0:0] or_tmp_51_R1 ;
  logic [0:0] or_tmp_51_X1 ;
  assign or_tmp_51_C1 = { 1{ !and_91_nl }} ;
  assign or_tmp_51_R1 = { 1{ !and_91_nl }} & ( mux_29_nl_R | ( { 1{ and_91_nl_T  }} & mux_29_nl_C ));
  assign or_tmp_51_X1 = { 1{ !and_91_nl }} & mux_29_nl_X ;
  assign mux_28_nl = or_10_cse ? mux_25_nl : _002_;
  logic [0:0] or_10_cse_C14 ;
  logic [0:0] or_10_cse_R14 ;
  logic [0:0] or_10_cse_X14 ;
  assign or_10_cse_C14 = | mux_28_nl_C ;
  assign or_10_cse_X14 = | mux_28_nl_X ;
  assign mux_28_nl_T = or_10_cse ? ( { 1{ or_10_cse_T  }} | mux_25_nl_T ) : ( { 1{ or_10_cse_T  }} | _002__T );
  assign mux_28_nl_S = or_10_cse ? mux_25_nl_S : _002__S ;
  assign or_10_cse_R14 = ( | (mux_28_nl_R | ( mux_28_nl_C & ( { 1{ or_10_cse }} & mux_25_nl_T | { 1{ !or_10_cse }} & _002__T )))) && mux_25_nl != _002_ ;
  logic [0:0] mux_25_nl_C0 ;
  logic [0:0] mux_25_nl_R0 ;
  logic [0:0] mux_25_nl_X0 ;
  assign mux_25_nl_C0 = { 1{ or_10_cse }} ;
  assign mux_25_nl_R0 = { 1{ or_10_cse }} & ( mux_28_nl_R | ( { 1{ or_10_cse_T  }} & mux_28_nl_C ));
  assign mux_25_nl_X0 = { 1{ or_10_cse }} & mux_28_nl_X ;
  logic [0:0] _002__C0 ;
  logic [0:0] _002__R0 ;
  logic [0:0] _002__X0 ;
  assign _002__C0 = { 1{ !or_10_cse }} ;
  assign _002__R0 = { 1{ !or_10_cse }} & ( mux_28_nl_R | ( { 1{ or_10_cse_T  }} & mux_28_nl_C ));
  assign _002__X0 = { 1{ !or_10_cse }} & mux_28_nl_X ;
  assign mux_27_nl = IsNaN_8U_23U_land_lpi_1_dfm_st_3 ? or_65_cse : mux_26_nl;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_3_C7 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_3_R7 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_3_X7 ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_C7 = | mux_27_nl_C ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_X7 = | mux_27_nl_X ;
  assign mux_27_nl_T = IsNaN_8U_23U_land_lpi_1_dfm_st_3 ? ( { 1{ IsNaN_8U_23U_land_lpi_1_dfm_st_3_T  }} | or_65_cse_T ) : ( { 1{ IsNaN_8U_23U_land_lpi_1_dfm_st_3_T  }} | mux_26_nl_T );
  assign mux_27_nl_S = IsNaN_8U_23U_land_lpi_1_dfm_st_3 ? or_65_cse_S : mux_26_nl_S ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_R7 = ( | (mux_27_nl_R | ( mux_27_nl_C & ( { 1{ IsNaN_8U_23U_land_lpi_1_dfm_st_3 }} & or_65_cse_T | { 1{ !IsNaN_8U_23U_land_lpi_1_dfm_st_3 }} & mux_26_nl_T )))) && or_65_cse != mux_26_nl ;
  logic [0:0] or_65_cse_C3 ;
  logic [0:0] or_65_cse_R3 ;
  logic [0:0] or_65_cse_X3 ;
  assign or_65_cse_C3 = { 1{ IsNaN_8U_23U_land_lpi_1_dfm_st_3 }} ;
  assign or_65_cse_R3 = { 1{ IsNaN_8U_23U_land_lpi_1_dfm_st_3 }} & ( mux_27_nl_R | ( { 1{ IsNaN_8U_23U_land_lpi_1_dfm_st_3_T  }} & mux_27_nl_C ));
  assign or_65_cse_X3 = { 1{ IsNaN_8U_23U_land_lpi_1_dfm_st_3 }} & mux_27_nl_X ;
  logic [0:0] mux_26_nl_C0 ;
  logic [0:0] mux_26_nl_R0 ;
  logic [0:0] mux_26_nl_X0 ;
  assign mux_26_nl_C0 = { 1{ !IsNaN_8U_23U_land_lpi_1_dfm_st_3 }} ;
  assign mux_26_nl_R0 = { 1{ !IsNaN_8U_23U_land_lpi_1_dfm_st_3 }} & ( mux_27_nl_R | ( { 1{ IsNaN_8U_23U_land_lpi_1_dfm_st_3_T  }} & mux_27_nl_C ));
  assign mux_26_nl_X0 = { 1{ !IsNaN_8U_23U_land_lpi_1_dfm_st_3 }} & mux_27_nl_X ;
  assign mux_26_nl = IsNaN_8U_23U_1_land_lpi_1_dfm_3 ? _001_ : or_65_cse;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_C5 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_R5 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_X5 ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_C5 = | mux_26_nl_C ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_X5 = | mux_26_nl_X ;
  assign mux_26_nl_T = IsNaN_8U_23U_1_land_lpi_1_dfm_3 ? ( { 1{ IsNaN_8U_23U_1_land_lpi_1_dfm_3_T  }} | _001__T ) : ( { 1{ IsNaN_8U_23U_1_land_lpi_1_dfm_3_T  }} | or_65_cse_T );
  assign mux_26_nl_S = IsNaN_8U_23U_1_land_lpi_1_dfm_3 ? _001__S : or_65_cse_S ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_R5 = ( | (mux_26_nl_R | ( mux_26_nl_C & ( { 1{ IsNaN_8U_23U_1_land_lpi_1_dfm_3 }} & _001__T | { 1{ !IsNaN_8U_23U_1_land_lpi_1_dfm_3 }} & or_65_cse_T )))) && _001_ != or_65_cse ;
  logic [0:0] _001__C6 ;
  logic [0:0] _001__R6 ;
  logic [0:0] _001__X6 ;
  assign _001__C6 = { 1{ IsNaN_8U_23U_1_land_lpi_1_dfm_3 }} ;
  assign _001__R6 = { 1{ IsNaN_8U_23U_1_land_lpi_1_dfm_3 }} & ( mux_26_nl_R | ( { 1{ IsNaN_8U_23U_1_land_lpi_1_dfm_3_T  }} & mux_26_nl_C ));
  assign _001__X6 = { 1{ IsNaN_8U_23U_1_land_lpi_1_dfm_3 }} & mux_26_nl_X ;
  logic [0:0] or_65_cse_C4 ;
  logic [0:0] or_65_cse_R4 ;
  logic [0:0] or_65_cse_X4 ;
  assign or_65_cse_C4 = { 1{ !IsNaN_8U_23U_1_land_lpi_1_dfm_3 }} ;
  assign or_65_cse_R4 = { 1{ !IsNaN_8U_23U_1_land_lpi_1_dfm_3 }} & ( mux_26_nl_R | ( { 1{ IsNaN_8U_23U_1_land_lpi_1_dfm_3_T  }} & mux_26_nl_C ));
  assign or_65_cse_X4 = { 1{ !IsNaN_8U_23U_1_land_lpi_1_dfm_3 }} & mux_26_nl_X ;
  assign mux_25_nl = or_45_cse ? nor_31_nl : and_cse;
  logic [0:0] or_45_cse_C1 ;
  logic [0:0] or_45_cse_R1 ;
  logic [0:0] or_45_cse_X1 ;
  assign or_45_cse_C1 = | mux_25_nl_C ;
  assign or_45_cse_X1 = | mux_25_nl_X ;
  assign mux_25_nl_T = or_45_cse ? ( { 1{ or_45_cse_T  }} | nor_31_nl_T ) : ( { 1{ or_45_cse_T  }} | and_cse_T );
  assign mux_25_nl_S = or_45_cse ? nor_31_nl_S : and_cse_S ;
  assign or_45_cse_R1 = ( | (mux_25_nl_R | ( mux_25_nl_C & ( { 1{ or_45_cse }} & nor_31_nl_T | { 1{ !or_45_cse }} & and_cse_T )))) && nor_31_nl != and_cse ;
  logic [0:0] nor_31_nl_C0 ;
  logic [0:0] nor_31_nl_R0 ;
  logic [0:0] nor_31_nl_X0 ;
  assign nor_31_nl_C0 = { 1{ or_45_cse }} ;
  assign nor_31_nl_R0 = { 1{ or_45_cse }} & ( mux_25_nl_R | ( { 1{ or_45_cse_T  }} & mux_25_nl_C ));
  assign nor_31_nl_X0 = { 1{ or_45_cse }} & mux_25_nl_X ;
  logic [0:0] and_cse_C3 ;
  logic [0:0] and_cse_R3 ;
  logic [0:0] and_cse_X3 ;
  assign and_cse_C3 = { 1{ !or_45_cse }} ;
  assign and_cse_R3 = { 1{ !or_45_cse }} & ( mux_25_nl_R | ( { 1{ or_45_cse_T  }} & mux_25_nl_C ));
  assign and_cse_X3 = { 1{ !or_45_cse }} & mux_25_nl_X ;
  assign mux_23_nl = or_10_cse ? mux_22_nl : nor_21_nl;
  logic [0:0] or_10_cse_C15 ;
  logic [0:0] or_10_cse_R15 ;
  logic [0:0] or_10_cse_X15 ;
  assign or_10_cse_C15 = | mux_23_nl_C ;
  assign or_10_cse_X15 = | mux_23_nl_X ;
  assign mux_23_nl_T = or_10_cse ? ( { 1{ or_10_cse_T  }} | mux_22_nl_T ) : ( { 1{ or_10_cse_T  }} | nor_21_nl_T );
  assign mux_23_nl_S = or_10_cse ? mux_22_nl_S : nor_21_nl_S ;
  assign or_10_cse_R15 = ( | (mux_23_nl_R | ( mux_23_nl_C & ( { 1{ or_10_cse }} & mux_22_nl_T | { 1{ !or_10_cse }} & nor_21_nl_T )))) && mux_22_nl != nor_21_nl ;
  logic [0:0] mux_22_nl_C0 ;
  logic [0:0] mux_22_nl_R0 ;
  logic [0:0] mux_22_nl_X0 ;
  assign mux_22_nl_C0 = { 1{ or_10_cse }} ;
  assign mux_22_nl_R0 = { 1{ or_10_cse }} & ( mux_23_nl_R | ( { 1{ or_10_cse_T  }} & mux_23_nl_C ));
  assign mux_22_nl_X0 = { 1{ or_10_cse }} & mux_23_nl_X ;
  logic [0:0] nor_21_nl_C0 ;
  logic [0:0] nor_21_nl_R0 ;
  logic [0:0] nor_21_nl_X0 ;
  assign nor_21_nl_C0 = { 1{ !or_10_cse }} ;
  assign nor_21_nl_R0 = { 1{ !or_10_cse }} & ( mux_23_nl_R | ( { 1{ or_10_cse_T  }} & mux_23_nl_C ));
  assign nor_21_nl_X0 = { 1{ !or_10_cse }} & mux_23_nl_X ;
  assign mux_22_nl = _098_ ? and_93_nl : mux_24_cse;
  logic [0:0] _098__C2 ;
  logic [0:0] _098__R2 ;
  logic [0:0] _098__X2 ;
  assign _098__C2 = | mux_22_nl_C ;
  assign _098__X2 = | mux_22_nl_X ;
  assign mux_22_nl_T = _098_ ? ( { 1{ _098__T  }} | and_93_nl_T ) : ( { 1{ _098__T  }} | mux_24_cse_T );
  assign mux_22_nl_S = _098_ ? and_93_nl_S : mux_24_cse_S ;
  assign _098__R2 = ( | (mux_22_nl_R | ( mux_22_nl_C & ( { 1{ _098_ }} & and_93_nl_T | { 1{ !_098_ }} & mux_24_cse_T )))) && and_93_nl != mux_24_cse ;
  logic [0:0] and_93_nl_C0 ;
  logic [0:0] and_93_nl_R0 ;
  logic [0:0] and_93_nl_X0 ;
  assign and_93_nl_C0 = { 1{ _098_ }} ;
  assign and_93_nl_R0 = { 1{ _098_ }} & ( mux_22_nl_R | ( { 1{ _098__T  }} & mux_22_nl_C ));
  assign and_93_nl_X0 = { 1{ _098_ }} & mux_22_nl_X ;
  logic [0:0] mux_24_cse_C2 ;
  logic [0:0] mux_24_cse_R2 ;
  logic [0:0] mux_24_cse_X2 ;
  assign mux_24_cse_C2 = { 1{ !_098_ }} ;
  assign mux_24_cse_R2 = { 1{ !_098_ }} & ( mux_22_nl_R | ( { 1{ _098__T  }} & mux_22_nl_C ));
  assign mux_24_cse_X2 = { 1{ !_098_ }} & mux_22_nl_X ;
  assign mux_17_nl = FpMul_8U_23U_or_2_cse ? mux_16_nl : and_11_nl;
  logic [0:0] FpMul_8U_23U_or_2_cse_C1 ;
  logic [0:0] FpMul_8U_23U_or_2_cse_R1 ;
  logic [0:0] FpMul_8U_23U_or_2_cse_X1 ;
  assign FpMul_8U_23U_or_2_cse_C1 = | mux_17_nl_C ;
  assign FpMul_8U_23U_or_2_cse_X1 = | mux_17_nl_X ;
  assign mux_17_nl_T = FpMul_8U_23U_or_2_cse ? ( { 1{ FpMul_8U_23U_or_2_cse_T  }} | mux_16_nl_T ) : ( { 1{ FpMul_8U_23U_or_2_cse_T  }} | and_11_nl_T );
  assign mux_17_nl_S = FpMul_8U_23U_or_2_cse ? mux_16_nl_S : and_11_nl_S ;
  assign FpMul_8U_23U_or_2_cse_R1 = ( | (mux_17_nl_R | ( mux_17_nl_C & ( { 1{ FpMul_8U_23U_or_2_cse }} & mux_16_nl_T | { 1{ !FpMul_8U_23U_or_2_cse }} & and_11_nl_T )))) && mux_16_nl != and_11_nl ;
  logic [0:0] mux_16_nl_C0 ;
  logic [0:0] mux_16_nl_R0 ;
  logic [0:0] mux_16_nl_X0 ;
  assign mux_16_nl_C0 = { 1{ FpMul_8U_23U_or_2_cse }} ;
  assign mux_16_nl_R0 = { 1{ FpMul_8U_23U_or_2_cse }} & ( mux_17_nl_R | ( { 1{ FpMul_8U_23U_or_2_cse_T  }} & mux_17_nl_C ));
  assign mux_16_nl_X0 = { 1{ FpMul_8U_23U_or_2_cse }} & mux_17_nl_X ;
  logic [0:0] and_11_nl_C0 ;
  logic [0:0] and_11_nl_R0 ;
  logic [0:0] and_11_nl_X0 ;
  assign and_11_nl_C0 = { 1{ !FpMul_8U_23U_or_2_cse }} ;
  assign and_11_nl_R0 = { 1{ !FpMul_8U_23U_or_2_cse }} & ( mux_17_nl_R | ( { 1{ FpMul_8U_23U_or_2_cse_T  }} & mux_17_nl_C ));
  assign and_11_nl_X0 = { 1{ !FpMul_8U_23U_or_2_cse }} & mux_17_nl_X ;
  assign mux_16_nl = main_stage_v_1 ? mux_15_nl : _000_;
  logic [0:0] main_stage_v_1_C6 ;
  logic [0:0] main_stage_v_1_R6 ;
  logic [0:0] main_stage_v_1_X6 ;
  assign main_stage_v_1_C6 = | mux_16_nl_C ;
  assign main_stage_v_1_X6 = | mux_16_nl_X ;
  assign mux_16_nl_T = main_stage_v_1 ? ( { 1{ main_stage_v_1_T  }} | mux_15_nl_T ) : ( { 1{ main_stage_v_1_T  }} | _000__T );
  assign mux_16_nl_S = main_stage_v_1 ? mux_15_nl_S : _000__S ;
  assign main_stage_v_1_R6 = ( | (mux_16_nl_R | ( mux_16_nl_C & ( { 1{ main_stage_v_1 }} & mux_15_nl_T | { 1{ !main_stage_v_1 }} & _000__T )))) && mux_15_nl != _000_ ;
  logic [0:0] mux_15_nl_C0 ;
  logic [0:0] mux_15_nl_R0 ;
  logic [0:0] mux_15_nl_X0 ;
  assign mux_15_nl_C0 = { 1{ main_stage_v_1 }} ;
  assign mux_15_nl_R0 = { 1{ main_stage_v_1 }} & ( mux_16_nl_R | ( { 1{ main_stage_v_1_T  }} & mux_16_nl_C ));
  assign mux_15_nl_X0 = { 1{ main_stage_v_1 }} & mux_16_nl_X ;
  logic [0:0] _000__C0 ;
  logic [0:0] _000__R0 ;
  logic [0:0] _000__X0 ;
  assign _000__C0 = { 1{ !main_stage_v_1 }} ;
  assign _000__R0 = { 1{ !main_stage_v_1 }} & ( mux_16_nl_R | ( { 1{ main_stage_v_1_T  }} & mux_16_nl_C ));
  assign _000__X0 = { 1{ !main_stage_v_1 }} & mux_16_nl_X ;
  assign mux_15_nl = main_stage_v_2 ? or_tmp_36 : mux_tmp_14;
  logic [0:0] main_stage_v_2_C3 ;
  logic [0:0] main_stage_v_2_R3 ;
  logic [0:0] main_stage_v_2_X3 ;
  assign main_stage_v_2_C3 = | mux_15_nl_C ;
  assign main_stage_v_2_X3 = | mux_15_nl_X ;
  assign mux_15_nl_T = main_stage_v_2 ? ( { 1{ main_stage_v_2_T  }} | or_tmp_36_T ) : ( { 1{ main_stage_v_2_T  }} | mux_tmp_14_T );
  assign mux_15_nl_S = main_stage_v_2 ? or_tmp_36_S : mux_tmp_14_S ;
  assign main_stage_v_2_R3 = ( | (mux_15_nl_R | ( mux_15_nl_C & ( { 1{ main_stage_v_2 }} & or_tmp_36_T | { 1{ !main_stage_v_2 }} & mux_tmp_14_T )))) && or_tmp_36 != mux_tmp_14 ;
  logic [0:0] or_tmp_36_C0 ;
  logic [0:0] or_tmp_36_R0 ;
  logic [0:0] or_tmp_36_X0 ;
  assign or_tmp_36_C0 = { 1{ main_stage_v_2 }} ;
  assign or_tmp_36_R0 = { 1{ main_stage_v_2 }} & ( mux_15_nl_R | ( { 1{ main_stage_v_2_T  }} & mux_15_nl_C ));
  assign or_tmp_36_X0 = { 1{ main_stage_v_2 }} & mux_15_nl_X ;
  logic [0:0] mux_tmp_14_C1 ;
  logic [0:0] mux_tmp_14_R1 ;
  logic [0:0] mux_tmp_14_X1 ;
  assign mux_tmp_14_C1 = { 1{ !main_stage_v_2 }} ;
  assign mux_tmp_14_R1 = { 1{ !main_stage_v_2 }} & ( mux_15_nl_R | ( { 1{ main_stage_v_2_T  }} & mux_15_nl_C ));
  assign mux_tmp_14_X1 = { 1{ !main_stage_v_2 }} & mux_15_nl_X ;
  assign mux_13_nl = FpMul_8U_23U_or_2_cse ? mux_12_nl : and_10_nl;
  logic [0:0] FpMul_8U_23U_or_2_cse_C2 ;
  logic [0:0] FpMul_8U_23U_or_2_cse_R2 ;
  logic [0:0] FpMul_8U_23U_or_2_cse_X2 ;
  assign FpMul_8U_23U_or_2_cse_C2 = | mux_13_nl_C ;
  assign FpMul_8U_23U_or_2_cse_X2 = | mux_13_nl_X ;
  assign mux_13_nl_T = FpMul_8U_23U_or_2_cse ? ( { 1{ FpMul_8U_23U_or_2_cse_T  }} | mux_12_nl_T ) : ( { 1{ FpMul_8U_23U_or_2_cse_T  }} | and_10_nl_T );
  assign mux_13_nl_S = FpMul_8U_23U_or_2_cse ? mux_12_nl_S : and_10_nl_S ;
  assign FpMul_8U_23U_or_2_cse_R2 = ( | (mux_13_nl_R | ( mux_13_nl_C & ( { 1{ FpMul_8U_23U_or_2_cse }} & mux_12_nl_T | { 1{ !FpMul_8U_23U_or_2_cse }} & and_10_nl_T )))) && mux_12_nl != and_10_nl ;
  logic [0:0] mux_12_nl_C0 ;
  logic [0:0] mux_12_nl_R0 ;
  logic [0:0] mux_12_nl_X0 ;
  assign mux_12_nl_C0 = { 1{ FpMul_8U_23U_or_2_cse }} ;
  assign mux_12_nl_R0 = { 1{ FpMul_8U_23U_or_2_cse }} & ( mux_13_nl_R | ( { 1{ FpMul_8U_23U_or_2_cse_T  }} & mux_13_nl_C ));
  assign mux_12_nl_X0 = { 1{ FpMul_8U_23U_or_2_cse }} & mux_13_nl_X ;
  logic [0:0] and_10_nl_C0 ;
  logic [0:0] and_10_nl_R0 ;
  logic [0:0] and_10_nl_X0 ;
  assign and_10_nl_C0 = { 1{ !FpMul_8U_23U_or_2_cse }} ;
  assign and_10_nl_R0 = { 1{ !FpMul_8U_23U_or_2_cse }} & ( mux_13_nl_R | ( { 1{ FpMul_8U_23U_or_2_cse_T  }} & mux_13_nl_C ));
  assign and_10_nl_X0 = { 1{ !FpMul_8U_23U_or_2_cse }} & mux_13_nl_X ;
  assign mux_12_nl = main_stage_v_1 ? mux_11_nl : _000_;
  logic [0:0] main_stage_v_1_C7 ;
  logic [0:0] main_stage_v_1_R7 ;
  logic [0:0] main_stage_v_1_X7 ;
  assign main_stage_v_1_C7 = | mux_12_nl_C ;
  assign main_stage_v_1_X7 = | mux_12_nl_X ;
  assign mux_12_nl_T = main_stage_v_1 ? ( { 1{ main_stage_v_1_T  }} | mux_11_nl_T ) : ( { 1{ main_stage_v_1_T  }} | _000__T );
  assign mux_12_nl_S = main_stage_v_1 ? mux_11_nl_S : _000__S ;
  assign main_stage_v_1_R7 = ( | (mux_12_nl_R | ( mux_12_nl_C & ( { 1{ main_stage_v_1 }} & mux_11_nl_T | { 1{ !main_stage_v_1 }} & _000__T )))) && mux_11_nl != _000_ ;
  logic [0:0] mux_11_nl_C0 ;
  logic [0:0] mux_11_nl_R0 ;
  logic [0:0] mux_11_nl_X0 ;
  assign mux_11_nl_C0 = { 1{ main_stage_v_1 }} ;
  assign mux_11_nl_R0 = { 1{ main_stage_v_1 }} & ( mux_12_nl_R | ( { 1{ main_stage_v_1_T  }} & mux_12_nl_C ));
  assign mux_11_nl_X0 = { 1{ main_stage_v_1 }} & mux_12_nl_X ;
  logic [0:0] _000__C1 ;
  logic [0:0] _000__R1 ;
  logic [0:0] _000__X1 ;
  assign _000__C1 = { 1{ !main_stage_v_1 }} ;
  assign _000__R1 = { 1{ !main_stage_v_1 }} & ( mux_12_nl_R | ( { 1{ main_stage_v_1_T  }} & mux_12_nl_C ));
  assign _000__X1 = { 1{ !main_stage_v_1 }} & mux_12_nl_X ;
  assign mux_11_nl = main_stage_v_2 ? or_33_nl : mux_tmp_10;
  logic [0:0] main_stage_v_2_C4 ;
  logic [0:0] main_stage_v_2_R4 ;
  logic [0:0] main_stage_v_2_X4 ;
  assign main_stage_v_2_C4 = | mux_11_nl_C ;
  assign main_stage_v_2_X4 = | mux_11_nl_X ;
  assign mux_11_nl_T = main_stage_v_2 ? ( { 1{ main_stage_v_2_T  }} | or_33_nl_T ) : ( { 1{ main_stage_v_2_T  }} | mux_tmp_10_T );
  assign mux_11_nl_S = main_stage_v_2 ? or_33_nl_S : mux_tmp_10_S ;
  assign main_stage_v_2_R4 = ( | (mux_11_nl_R | ( mux_11_nl_C & ( { 1{ main_stage_v_2 }} & or_33_nl_T | { 1{ !main_stage_v_2 }} & mux_tmp_10_T )))) && or_33_nl != mux_tmp_10 ;
  logic [0:0] or_33_nl_C0 ;
  logic [0:0] or_33_nl_R0 ;
  logic [0:0] or_33_nl_X0 ;
  assign or_33_nl_C0 = { 1{ main_stage_v_2 }} ;
  assign or_33_nl_R0 = { 1{ main_stage_v_2 }} & ( mux_11_nl_R | ( { 1{ main_stage_v_2_T  }} & mux_11_nl_C ));
  assign or_33_nl_X0 = { 1{ main_stage_v_2 }} & mux_11_nl_X ;
  logic [0:0] mux_tmp_10_C1 ;
  logic [0:0] mux_tmp_10_R1 ;
  logic [0:0] mux_tmp_10_X1 ;
  assign mux_tmp_10_C1 = { 1{ !main_stage_v_2 }} ;
  assign mux_tmp_10_R1 = { 1{ !main_stage_v_2 }} & ( mux_11_nl_R | ( { 1{ main_stage_v_2_T  }} & mux_11_nl_C ));
  assign mux_tmp_10_X1 = { 1{ !main_stage_v_2 }} & mux_11_nl_X ;
  assign mux_8_nl = FpMul_8U_23U_lor_1_lpi_1_dfm_st_4 ? nor_23_nl : mux_7_nl;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_C3 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_R3 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_X3 ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_C3 = | mux_8_nl_C ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_X3 = | mux_8_nl_X ;
  assign mux_8_nl_T = FpMul_8U_23U_lor_1_lpi_1_dfm_st_4 ? ( { 1{ FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_T  }} | nor_23_nl_T ) : ( { 1{ FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_T  }} | mux_7_nl_T );
  assign mux_8_nl_S = FpMul_8U_23U_lor_1_lpi_1_dfm_st_4 ? nor_23_nl_S : mux_7_nl_S ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_R3 = ( | (mux_8_nl_R | ( mux_8_nl_C & ( { 1{ FpMul_8U_23U_lor_1_lpi_1_dfm_st_4 }} & nor_23_nl_T | { 1{ !FpMul_8U_23U_lor_1_lpi_1_dfm_st_4 }} & mux_7_nl_T )))) && nor_23_nl != mux_7_nl ;
  logic [0:0] nor_23_nl_C0 ;
  logic [0:0] nor_23_nl_R0 ;
  logic [0:0] nor_23_nl_X0 ;
  assign nor_23_nl_C0 = { 1{ FpMul_8U_23U_lor_1_lpi_1_dfm_st_4 }} ;
  assign nor_23_nl_R0 = { 1{ FpMul_8U_23U_lor_1_lpi_1_dfm_st_4 }} & ( mux_8_nl_R | ( { 1{ FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_T  }} & mux_8_nl_C ));
  assign nor_23_nl_X0 = { 1{ FpMul_8U_23U_lor_1_lpi_1_dfm_st_4 }} & mux_8_nl_X ;
  logic [0:0] mux_7_nl_C0 ;
  logic [0:0] mux_7_nl_R0 ;
  logic [0:0] mux_7_nl_X0 ;
  assign mux_7_nl_C0 = { 1{ !FpMul_8U_23U_lor_1_lpi_1_dfm_st_4 }} ;
  assign mux_7_nl_R0 = { 1{ !FpMul_8U_23U_lor_1_lpi_1_dfm_st_4 }} & ( mux_8_nl_R | ( { 1{ FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_T  }} & mux_8_nl_C ));
  assign mux_7_nl_X0 = { 1{ !FpMul_8U_23U_lor_1_lpi_1_dfm_st_4 }} & mux_8_nl_X ;
  assign mux_7_nl = FpMul_8U_23U_lor_1_lpi_1_dfm_st_3 ? _000_ : mux_tmp_4;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_C5 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_R5 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_X5 ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_C5 = | mux_7_nl_C ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_X5 = | mux_7_nl_X ;
  assign mux_7_nl_T = FpMul_8U_23U_lor_1_lpi_1_dfm_st_3 ? ( { 1{ FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_T  }} | _000__T ) : ( { 1{ FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_T  }} | mux_tmp_4_T );
  assign mux_7_nl_S = FpMul_8U_23U_lor_1_lpi_1_dfm_st_3 ? _000__S : mux_tmp_4_S ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_R5 = ( | (mux_7_nl_R | ( mux_7_nl_C & ( { 1{ FpMul_8U_23U_lor_1_lpi_1_dfm_st_3 }} & _000__T | { 1{ !FpMul_8U_23U_lor_1_lpi_1_dfm_st_3 }} & mux_tmp_4_T )))) && _000_ != mux_tmp_4 ;
  logic [0:0] _000__C2 ;
  logic [0:0] _000__R2 ;
  logic [0:0] _000__X2 ;
  assign _000__C2 = { 1{ FpMul_8U_23U_lor_1_lpi_1_dfm_st_3 }} ;
  assign _000__R2 = { 1{ FpMul_8U_23U_lor_1_lpi_1_dfm_st_3 }} & ( mux_7_nl_R | ( { 1{ FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_T  }} & mux_7_nl_C ));
  assign _000__X2 = { 1{ FpMul_8U_23U_lor_1_lpi_1_dfm_st_3 }} & mux_7_nl_X ;
  logic [0:0] mux_tmp_4_C2 ;
  logic [0:0] mux_tmp_4_R2 ;
  logic [0:0] mux_tmp_4_X2 ;
  assign mux_tmp_4_C2 = { 1{ !FpMul_8U_23U_lor_1_lpi_1_dfm_st_3 }} ;
  assign mux_tmp_4_R2 = { 1{ !FpMul_8U_23U_lor_1_lpi_1_dfm_st_3 }} & ( mux_7_nl_R | ( { 1{ FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_T  }} & mux_7_nl_C ));
  assign mux_tmp_4_X2 = { 1{ !FpMul_8U_23U_lor_1_lpi_1_dfm_st_3 }} & mux_7_nl_X ;
  assign mux_6_nl = or_25_nl ? nor_32_nl : mux_5_nl;
  logic [0:0] or_25_nl_C0 ;
  logic [0:0] or_25_nl_R0 ;
  logic [0:0] or_25_nl_X0 ;
  assign or_25_nl_C0 = | mux_6_nl_C ;
  assign or_25_nl_X0 = | mux_6_nl_X ;
  assign mux_6_nl_T = or_25_nl ? ( { 1{ or_25_nl_T  }} | nor_32_nl_T ) : ( { 1{ or_25_nl_T  }} | mux_5_nl_T );
  assign mux_6_nl_S = or_25_nl ? nor_32_nl_S : mux_5_nl_S ;
  assign or_25_nl_R0 = ( | (mux_6_nl_R | ( mux_6_nl_C & ( { 1{ or_25_nl }} & nor_32_nl_T | { 1{ !or_25_nl }} & mux_5_nl_T )))) && nor_32_nl != mux_5_nl ;
  logic [0:0] nor_32_nl_C0 ;
  logic [0:0] nor_32_nl_R0 ;
  logic [0:0] nor_32_nl_X0 ;
  assign nor_32_nl_C0 = { 1{ or_25_nl }} ;
  assign nor_32_nl_R0 = { 1{ or_25_nl }} & ( mux_6_nl_R | ( { 1{ or_25_nl_T  }} & mux_6_nl_C ));
  assign nor_32_nl_X0 = { 1{ or_25_nl }} & mux_6_nl_X ;
  logic [0:0] mux_5_nl_C0 ;
  logic [0:0] mux_5_nl_R0 ;
  logic [0:0] mux_5_nl_X0 ;
  assign mux_5_nl_C0 = { 1{ !or_25_nl }} ;
  assign mux_5_nl_R0 = { 1{ !or_25_nl }} & ( mux_6_nl_R | ( { 1{ or_25_nl_T  }} & mux_6_nl_C ));
  assign mux_5_nl_X0 = { 1{ !or_25_nl }} & mux_6_nl_X ;
  assign mux_5_nl = or_29_cse ? _000_ : mux_tmp_4;
  logic [0:0] or_29_cse_C3 ;
  logic [0:0] or_29_cse_R3 ;
  logic [0:0] or_29_cse_X3 ;
  assign or_29_cse_C3 = | mux_5_nl_C ;
  assign or_29_cse_X3 = | mux_5_nl_X ;
  assign mux_5_nl_T = or_29_cse ? ( { 1{ or_29_cse_T  }} | _000__T ) : ( { 1{ or_29_cse_T  }} | mux_tmp_4_T );
  assign mux_5_nl_S = or_29_cse ? _000__S : mux_tmp_4_S ;
  assign or_29_cse_R3 = ( | (mux_5_nl_R | ( mux_5_nl_C & ( { 1{ or_29_cse }} & _000__T | { 1{ !or_29_cse }} & mux_tmp_4_T )))) && _000_ != mux_tmp_4 ;
  logic [0:0] _000__C3 ;
  logic [0:0] _000__R3 ;
  logic [0:0] _000__X3 ;
  assign _000__C3 = { 1{ or_29_cse }} ;
  assign _000__R3 = { 1{ or_29_cse }} & ( mux_5_nl_R | ( { 1{ or_29_cse_T  }} & mux_5_nl_C ));
  assign _000__X3 = { 1{ or_29_cse }} & mux_5_nl_X ;
  logic [0:0] mux_tmp_4_C3 ;
  logic [0:0] mux_tmp_4_R3 ;
  logic [0:0] mux_tmp_4_X3 ;
  assign mux_tmp_4_C3 = { 1{ !or_29_cse }} ;
  assign mux_tmp_4_R3 = { 1{ !or_29_cse }} & ( mux_5_nl_R | ( { 1{ or_29_cse_T  }} & mux_5_nl_C ));
  assign mux_tmp_4_X3 = { 1{ !or_29_cse }} & mux_5_nl_X ;
  assign mux_3_nl = or_10_cse ? nor_24_nl : mux_2_nl;
  logic [0:0] or_10_cse_C16 ;
  logic [0:0] or_10_cse_R16 ;
  logic [0:0] or_10_cse_X16 ;
  assign or_10_cse_C16 = | mux_3_nl_C ;
  assign or_10_cse_X16 = | mux_3_nl_X ;
  assign mux_3_nl_T = or_10_cse ? ( { 1{ or_10_cse_T  }} | nor_24_nl_T ) : ( { 1{ or_10_cse_T  }} | mux_2_nl_T );
  assign mux_3_nl_S = or_10_cse ? nor_24_nl_S : mux_2_nl_S ;
  assign or_10_cse_R16 = ( | (mux_3_nl_R | ( mux_3_nl_C & ( { 1{ or_10_cse }} & nor_24_nl_T | { 1{ !or_10_cse }} & mux_2_nl_T )))) && nor_24_nl != mux_2_nl ;
  logic [0:0] nor_24_nl_C0 ;
  logic [0:0] nor_24_nl_R0 ;
  logic [0:0] nor_24_nl_X0 ;
  assign nor_24_nl_C0 = { 1{ or_10_cse }} ;
  assign nor_24_nl_R0 = { 1{ or_10_cse }} & ( mux_3_nl_R | ( { 1{ or_10_cse_T  }} & mux_3_nl_C ));
  assign nor_24_nl_X0 = { 1{ or_10_cse }} & mux_3_nl_X ;
  logic [0:0] mux_2_nl_C0 ;
  logic [0:0] mux_2_nl_R0 ;
  logic [0:0] mux_2_nl_X0 ;
  assign mux_2_nl_C0 = { 1{ !or_10_cse }} ;
  assign mux_2_nl_R0 = { 1{ !or_10_cse }} & ( mux_3_nl_R | ( { 1{ or_10_cse_T  }} & mux_3_nl_C ));
  assign mux_2_nl_X0 = { 1{ !or_10_cse }} & mux_3_nl_X ;
  assign mux_2_nl = FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2 ? nor_26_nl : nor_27_nl;
  logic [0:0] FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_C0 ;
  logic [0:0] FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_R0 ;
  logic [0:0] FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_X0 ;
  assign FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_C0 = | mux_2_nl_C ;
  assign FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_X0 = | mux_2_nl_X ;
  assign mux_2_nl_T = FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2 ? ( { 1{ FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_T  }} | nor_26_nl_T ) : ( { 1{ FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_T  }} | nor_27_nl_T );
  assign mux_2_nl_S = FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2 ? nor_26_nl_S : nor_27_nl_S ;
  assign FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_R0 = ( | (mux_2_nl_R | ( mux_2_nl_C & ( { 1{ FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2 }} & nor_26_nl_T | { 1{ !FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2 }} & nor_27_nl_T )))) && nor_26_nl != nor_27_nl ;
  logic [0:0] nor_26_nl_C0 ;
  logic [0:0] nor_26_nl_R0 ;
  logic [0:0] nor_26_nl_X0 ;
  assign nor_26_nl_C0 = { 1{ FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2 }} ;
  assign nor_26_nl_R0 = { 1{ FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2 }} & ( mux_2_nl_R | ( { 1{ FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_T  }} & mux_2_nl_C ));
  assign nor_26_nl_X0 = { 1{ FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2 }} & mux_2_nl_X ;
  logic [0:0] nor_27_nl_C0 ;
  logic [0:0] nor_27_nl_R0 ;
  logic [0:0] nor_27_nl_X0 ;
  assign nor_27_nl_C0 = { 1{ !FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2 }} ;
  assign nor_27_nl_R0 = { 1{ !FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2 }} & ( mux_2_nl_R | ( { 1{ FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_T  }} & mux_2_nl_C ));
  assign nor_27_nl_X0 = { 1{ !FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2 }} & mux_2_nl_X ;
  assign FpMul_8U_23U_FpMul_8U_23U_and_2_nl = FpMul_8U_23U_lor_2_lpi_1_dfm ? 8'b00000000 : FpMul_8U_23U_o_expo_lpi_1_dfm;
  logic [0:0] FpMul_8U_23U_lor_2_lpi_1_dfm_C0 ;
  logic [0:0] FpMul_8U_23U_lor_2_lpi_1_dfm_R0 ;
  logic [0:0] FpMul_8U_23U_lor_2_lpi_1_dfm_X0 ;
  assign FpMul_8U_23U_lor_2_lpi_1_dfm_C0 = | FpMul_8U_23U_FpMul_8U_23U_and_2_nl_C ;
  assign FpMul_8U_23U_lor_2_lpi_1_dfm_X0 = | FpMul_8U_23U_FpMul_8U_23U_and_2_nl_X ;
  logic [7:0] FpMul_8U_23U_o_expo_lpi_1_dfm_C1 ;
  logic [7:0] FpMul_8U_23U_o_expo_lpi_1_dfm_R1 ;
  logic [7:0] FpMul_8U_23U_o_expo_lpi_1_dfm_X1 ;
  assign FpMul_8U_23U_o_expo_lpi_1_dfm_C1 = { 8{ !FpMul_8U_23U_lor_2_lpi_1_dfm }};
  assign FpMul_8U_23U_o_expo_lpi_1_dfm_R1 = { 8{ !FpMul_8U_23U_lor_2_lpi_1_dfm }} & ( FpMul_8U_23U_FpMul_8U_23U_and_2_nl_R | ( { 8{ FpMul_8U_23U_lor_2_lpi_1_dfm_T  }} & FpMul_8U_23U_FpMul_8U_23U_and_2_nl_C ));
  assign FpMul_8U_23U_o_expo_lpi_1_dfm_X1 = { 8{ !FpMul_8U_23U_lor_2_lpi_1_dfm }} & FpMul_8U_23U_FpMul_8U_23U_and_2_nl_X ;
  assign FpMul_8U_23U_FpMul_8U_23U_and_2_nl_T = FpMul_8U_23U_lor_2_lpi_1_dfm ? { 8{ | FpMul_8U_23U_lor_2_lpi_1_dfm_T  }} : ( { 8{ | FpMul_8U_23U_lor_2_lpi_1_dfm_T  }} | FpMul_8U_23U_o_expo_lpi_1_dfm_T );
  assign FpMul_8U_23U_FpMul_8U_23U_and_2_nl_S = FpMul_8U_23U_lor_2_lpi_1_dfm ? FpMul_8U_23U_lor_2_lpi_1_dfm_S : FpMul_8U_23U_o_expo_lpi_1_dfm_S ;
  assign FpMul_8U_23U_lor_2_lpi_1_dfm_R0 = ( | (FpMul_8U_23U_FpMul_8U_23U_and_2_nl_R | ( { 8{ !FpMul_8U_23U_lor_2_lpi_1_dfm }} & FpMul_8U_23U_o_expo_lpi_1_dfm_T & FpMul_8U_23U_FpMul_8U_23U_and_2_nl_C ))) && 8'b00000000 != FpMul_8U_23U_o_expo_lpi_1_dfm ;
  assign _006_ = FpMul_8U_23U_lor_2_lpi_1_dfm ? 23'b11111111111111111111111 : FpMul_8U_23U_nor_nl;
  logic [0:0] FpMul_8U_23U_lor_2_lpi_1_dfm_C1 ;
  logic [0:0] FpMul_8U_23U_lor_2_lpi_1_dfm_R1 ;
  logic [0:0] FpMul_8U_23U_lor_2_lpi_1_dfm_X1 ;
  assign FpMul_8U_23U_lor_2_lpi_1_dfm_C1 = | _006__C ;
  assign FpMul_8U_23U_lor_2_lpi_1_dfm_X1 = | _006__X ;
  logic [22:0] FpMul_8U_23U_nor_nl_C0 ;
  logic [22:0] FpMul_8U_23U_nor_nl_R0 ;
  logic [22:0] FpMul_8U_23U_nor_nl_X0 ;
  assign FpMul_8U_23U_nor_nl_C0 = { 23{ !FpMul_8U_23U_lor_2_lpi_1_dfm }};
  assign FpMul_8U_23U_nor_nl_R0 = { 23{ !FpMul_8U_23U_lor_2_lpi_1_dfm }} & ( _006__R | ( { 23{ FpMul_8U_23U_lor_2_lpi_1_dfm_T  }} & _006__C ));
  assign FpMul_8U_23U_nor_nl_X0 = { 23{ !FpMul_8U_23U_lor_2_lpi_1_dfm }} & _006__X ;
  assign _006__T = FpMul_8U_23U_lor_2_lpi_1_dfm ? { 23{ | FpMul_8U_23U_lor_2_lpi_1_dfm_T  }} : ( { 23{ | FpMul_8U_23U_lor_2_lpi_1_dfm_T  }} | FpMul_8U_23U_nor_nl_T );
  assign _006__S = FpMul_8U_23U_lor_2_lpi_1_dfm ? FpMul_8U_23U_lor_2_lpi_1_dfm_S : FpMul_8U_23U_nor_nl_S ;
  assign FpMul_8U_23U_lor_2_lpi_1_dfm_R1 = ( | (_006__R | ( { 23{ !FpMul_8U_23U_lor_2_lpi_1_dfm }} & FpMul_8U_23U_nor_nl_T & _006__C ))) && 23'b11111111111111111111111 != FpMul_8U_23U_nor_nl ;
  assign _005_ = _131_ ? mux_34_nl : 23'b11111111111111111111111;
  logic [0:0] _131__C2 ;
  logic [0:0] _131__R2 ;
  logic [0:0] _131__X2 ;
  assign _131__C2 = | _005__C ;
  assign _131__X2 = | _005__X ;
  logic [22:0] mux_34_nl_C0 ;
  logic [22:0] mux_34_nl_R0 ;
  logic [22:0] mux_34_nl_X0 ;
  assign mux_34_nl_C0 = { 23{ _131_ }} ;
  assign mux_34_nl_R0 = { 23{ _131_ }} & ( _005__R | ( { 23{ _131__T  }} & _005__C ));
  assign mux_34_nl_X0 = { 23{ _131_ }} & _005__X ;
  assign _005__T = _131_ ? ( { 23{ | _131__T  }} | mux_34_nl_T ) : { 23{ | _131__T  }};
  assign _005__S = _131_ ? mux_34_nl_S : _131__S ;
  assign _131__R2 = ( | (_005__R | ( { 23{ _131_ }} & mux_34_nl_T & _005__C ))) && mux_34_nl != 23'b11111111111111111111111 ;
  logic [22:0] fangyuan7;
  logic [22:0] fangyuan7_T ;
  logic [22:0] fangyuan7_R ;
  logic [22:0] fangyuan7_C ;
  logic [22:0] fangyuan7_X ;
  assign fangyuan7 = { _004_[22], _004_[22], _004_[22], _004_[22], _004_[22], _004_[22], _004_[22], _004_[22], _004_[22], _004_[22], _004_[22], _004_[22], _004_[22], _004_[22], _004_[22], _004_[22], _004_[22], _004_[22], _004_[22], _004_[22], _004_[22], _004_[22], _004_[22] };
  assign fangyuan7_T = {  _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22]  };
  logic [13:0] fangyuan7_S ;
  assign fangyuan7_S = 0 ;
  assign { _004__R1 [0], _004__R1 [1], _004__R1 [2], _004__R1 [3], _004__R1 [4], _004__R1 [5], _004__R1 [6], _004__R1 [7], _004__R1 [8], _004__R1 [9], _004__R1 [10], _004__R1 [11], _004__R1 [12], _004__R1 [13], _004__R1 [14], _004__R1 [15], _004__R1 [16], _004__R1 [17], _004__R1 [18], _004__R1 [19], _004__R1 [20], _004__R1 [21] } = 0;
  assign { _004__X1 [0], _004__X1 [1], _004__X1 [2], _004__X1 [3], _004__X1 [4], _004__X1 [5], _004__X1 [6], _004__X1 [7], _004__X1 [8], _004__X1 [9], _004__X1 [10], _004__X1 [11], _004__X1 [12], _004__X1 [13], _004__X1 [14], _004__X1 [15], _004__X1 [16], _004__X1 [17], _004__X1 [18], _004__X1 [19], _004__X1 [20], _004__X1 [21] } = 0;
  assign { _004__C1 [0], _004__C1 [1], _004__C1 [2], _004__C1 [3], _004__C1 [4], _004__C1 [5], _004__C1 [6], _004__C1 [7], _004__C1 [8], _004__C1 [9], _004__C1 [10], _004__C1 [11], _004__C1 [12], _004__C1 [13], _004__C1 [14], _004__C1 [15], _004__C1 [16], _004__C1 [17], _004__C1 [18], _004__C1 [19], _004__C1 [20], _004__C1 [21] } = 0;
  logic [22:0] _004__R2 ;
  logic [22:0] _004__X2 ;
  logic [22:0] _004__C2 ;
  assign _004__R2 [22:22] = fangyuan7_R [22:22] ;
  assign _004__X2 [22:22] = fangyuan7_X [22:22] ;
  assign _004__C2 [22:22] = fangyuan7_C [22:22] ;
  assign { _004__R2 [0], _004__R2 [1], _004__R2 [2], _004__R2 [3], _004__R2 [4], _004__R2 [5], _004__R2 [6], _004__R2 [7], _004__R2 [8], _004__R2 [9], _004__R2 [10], _004__R2 [11], _004__R2 [12], _004__R2 [13], _004__R2 [14], _004__R2 [15], _004__R2 [16], _004__R2 [17], _004__R2 [18], _004__R2 [19], _004__R2 [20], _004__R2 [21] } = 0;
  assign { _004__X2 [0], _004__X2 [1], _004__X2 [2], _004__X2 [3], _004__X2 [4], _004__X2 [5], _004__X2 [6], _004__X2 [7], _004__X2 [8], _004__X2 [9], _004__X2 [10], _004__X2 [11], _004__X2 [12], _004__X2 [13], _004__X2 [14], _004__X2 [15], _004__X2 [16], _004__X2 [17], _004__X2 [18], _004__X2 [19], _004__X2 [20], _004__X2 [21] } = 0;
  assign { _004__C2 [0], _004__C2 [1], _004__C2 [2], _004__C2 [3], _004__C2 [4], _004__C2 [5], _004__C2 [6], _004__C2 [7], _004__C2 [8], _004__C2 [9], _004__C2 [10], _004__C2 [11], _004__C2 [12], _004__C2 [13], _004__C2 [14], _004__C2 [15], _004__C2 [16], _004__C2 [17], _004__C2 [18], _004__C2 [19], _004__C2 [20], _004__C2 [21] } = 0;
  logic [22:0] _004__R3 ;
  logic [22:0] _004__X3 ;
  logic [22:0] _004__C3 ;
  assign _004__R3 [22:22] = fangyuan7_R [21:21] ;
  assign _004__X3 [22:22] = fangyuan7_X [21:21] ;
  assign _004__C3 [22:22] = fangyuan7_C [21:21] ;
  assign { _004__R3 [0], _004__R3 [1], _004__R3 [2], _004__R3 [3], _004__R3 [4], _004__R3 [5], _004__R3 [6], _004__R3 [7], _004__R3 [8], _004__R3 [9], _004__R3 [10], _004__R3 [11], _004__R3 [12], _004__R3 [13], _004__R3 [14], _004__R3 [15], _004__R3 [16], _004__R3 [17], _004__R3 [18], _004__R3 [19], _004__R3 [20], _004__R3 [21] } = 0;
  assign { _004__X3 [0], _004__X3 [1], _004__X3 [2], _004__X3 [3], _004__X3 [4], _004__X3 [5], _004__X3 [6], _004__X3 [7], _004__X3 [8], _004__X3 [9], _004__X3 [10], _004__X3 [11], _004__X3 [12], _004__X3 [13], _004__X3 [14], _004__X3 [15], _004__X3 [16], _004__X3 [17], _004__X3 [18], _004__X3 [19], _004__X3 [20], _004__X3 [21] } = 0;
  assign { _004__C3 [0], _004__C3 [1], _004__C3 [2], _004__C3 [3], _004__C3 [4], _004__C3 [5], _004__C3 [6], _004__C3 [7], _004__C3 [8], _004__C3 [9], _004__C3 [10], _004__C3 [11], _004__C3 [12], _004__C3 [13], _004__C3 [14], _004__C3 [15], _004__C3 [16], _004__C3 [17], _004__C3 [18], _004__C3 [19], _004__C3 [20], _004__C3 [21] } = 0;
  logic [22:0] _004__R4 ;
  logic [22:0] _004__X4 ;
  logic [22:0] _004__C4 ;
  assign _004__R4 [22:22] = fangyuan7_R [20:20] ;
  assign _004__X4 [22:22] = fangyuan7_X [20:20] ;
  assign _004__C4 [22:22] = fangyuan7_C [20:20] ;
  assign { _004__R4 [0], _004__R4 [1], _004__R4 [2], _004__R4 [3], _004__R4 [4], _004__R4 [5], _004__R4 [6], _004__R4 [7], _004__R4 [8], _004__R4 [9], _004__R4 [10], _004__R4 [11], _004__R4 [12], _004__R4 [13], _004__R4 [14], _004__R4 [15], _004__R4 [16], _004__R4 [17], _004__R4 [18], _004__R4 [19], _004__R4 [20], _004__R4 [21] } = 0;
  assign { _004__X4 [0], _004__X4 [1], _004__X4 [2], _004__X4 [3], _004__X4 [4], _004__X4 [5], _004__X4 [6], _004__X4 [7], _004__X4 [8], _004__X4 [9], _004__X4 [10], _004__X4 [11], _004__X4 [12], _004__X4 [13], _004__X4 [14], _004__X4 [15], _004__X4 [16], _004__X4 [17], _004__X4 [18], _004__X4 [19], _004__X4 [20], _004__X4 [21] } = 0;
  assign { _004__C4 [0], _004__C4 [1], _004__C4 [2], _004__C4 [3], _004__C4 [4], _004__C4 [5], _004__C4 [6], _004__C4 [7], _004__C4 [8], _004__C4 [9], _004__C4 [10], _004__C4 [11], _004__C4 [12], _004__C4 [13], _004__C4 [14], _004__C4 [15], _004__C4 [16], _004__C4 [17], _004__C4 [18], _004__C4 [19], _004__C4 [20], _004__C4 [21] } = 0;
  logic [22:0] _004__R5 ;
  logic [22:0] _004__X5 ;
  logic [22:0] _004__C5 ;
  assign _004__R5 [22:22] = fangyuan7_R [19:19] ;
  assign _004__X5 [22:22] = fangyuan7_X [19:19] ;
  assign _004__C5 [22:22] = fangyuan7_C [19:19] ;
  assign { _004__R5 [0], _004__R5 [1], _004__R5 [2], _004__R5 [3], _004__R5 [4], _004__R5 [5], _004__R5 [6], _004__R5 [7], _004__R5 [8], _004__R5 [9], _004__R5 [10], _004__R5 [11], _004__R5 [12], _004__R5 [13], _004__R5 [14], _004__R5 [15], _004__R5 [16], _004__R5 [17], _004__R5 [18], _004__R5 [19], _004__R5 [20], _004__R5 [21] } = 0;
  assign { _004__X5 [0], _004__X5 [1], _004__X5 [2], _004__X5 [3], _004__X5 [4], _004__X5 [5], _004__X5 [6], _004__X5 [7], _004__X5 [8], _004__X5 [9], _004__X5 [10], _004__X5 [11], _004__X5 [12], _004__X5 [13], _004__X5 [14], _004__X5 [15], _004__X5 [16], _004__X5 [17], _004__X5 [18], _004__X5 [19], _004__X5 [20], _004__X5 [21] } = 0;
  assign { _004__C5 [0], _004__C5 [1], _004__C5 [2], _004__C5 [3], _004__C5 [4], _004__C5 [5], _004__C5 [6], _004__C5 [7], _004__C5 [8], _004__C5 [9], _004__C5 [10], _004__C5 [11], _004__C5 [12], _004__C5 [13], _004__C5 [14], _004__C5 [15], _004__C5 [16], _004__C5 [17], _004__C5 [18], _004__C5 [19], _004__C5 [20], _004__C5 [21] } = 0;
  logic [22:0] _004__R6 ;
  logic [22:0] _004__X6 ;
  logic [22:0] _004__C6 ;
  assign _004__R6 [22:22] = fangyuan7_R [18:18] ;
  assign _004__X6 [22:22] = fangyuan7_X [18:18] ;
  assign _004__C6 [22:22] = fangyuan7_C [18:18] ;
  assign { _004__R6 [0], _004__R6 [1], _004__R6 [2], _004__R6 [3], _004__R6 [4], _004__R6 [5], _004__R6 [6], _004__R6 [7], _004__R6 [8], _004__R6 [9], _004__R6 [10], _004__R6 [11], _004__R6 [12], _004__R6 [13], _004__R6 [14], _004__R6 [15], _004__R6 [16], _004__R6 [17], _004__R6 [18], _004__R6 [19], _004__R6 [20], _004__R6 [21] } = 0;
  assign { _004__X6 [0], _004__X6 [1], _004__X6 [2], _004__X6 [3], _004__X6 [4], _004__X6 [5], _004__X6 [6], _004__X6 [7], _004__X6 [8], _004__X6 [9], _004__X6 [10], _004__X6 [11], _004__X6 [12], _004__X6 [13], _004__X6 [14], _004__X6 [15], _004__X6 [16], _004__X6 [17], _004__X6 [18], _004__X6 [19], _004__X6 [20], _004__X6 [21] } = 0;
  assign { _004__C6 [0], _004__C6 [1], _004__C6 [2], _004__C6 [3], _004__C6 [4], _004__C6 [5], _004__C6 [6], _004__C6 [7], _004__C6 [8], _004__C6 [9], _004__C6 [10], _004__C6 [11], _004__C6 [12], _004__C6 [13], _004__C6 [14], _004__C6 [15], _004__C6 [16], _004__C6 [17], _004__C6 [18], _004__C6 [19], _004__C6 [20], _004__C6 [21] } = 0;
  logic [22:0] _004__R7 ;
  logic [22:0] _004__X7 ;
  logic [22:0] _004__C7 ;
  assign _004__R7 [22:22] = fangyuan7_R [17:17] ;
  assign _004__X7 [22:22] = fangyuan7_X [17:17] ;
  assign _004__C7 [22:22] = fangyuan7_C [17:17] ;
  assign { _004__R7 [0], _004__R7 [1], _004__R7 [2], _004__R7 [3], _004__R7 [4], _004__R7 [5], _004__R7 [6], _004__R7 [7], _004__R7 [8], _004__R7 [9], _004__R7 [10], _004__R7 [11], _004__R7 [12], _004__R7 [13], _004__R7 [14], _004__R7 [15], _004__R7 [16], _004__R7 [17], _004__R7 [18], _004__R7 [19], _004__R7 [20], _004__R7 [21] } = 0;
  assign { _004__X7 [0], _004__X7 [1], _004__X7 [2], _004__X7 [3], _004__X7 [4], _004__X7 [5], _004__X7 [6], _004__X7 [7], _004__X7 [8], _004__X7 [9], _004__X7 [10], _004__X7 [11], _004__X7 [12], _004__X7 [13], _004__X7 [14], _004__X7 [15], _004__X7 [16], _004__X7 [17], _004__X7 [18], _004__X7 [19], _004__X7 [20], _004__X7 [21] } = 0;
  assign { _004__C7 [0], _004__C7 [1], _004__C7 [2], _004__C7 [3], _004__C7 [4], _004__C7 [5], _004__C7 [6], _004__C7 [7], _004__C7 [8], _004__C7 [9], _004__C7 [10], _004__C7 [11], _004__C7 [12], _004__C7 [13], _004__C7 [14], _004__C7 [15], _004__C7 [16], _004__C7 [17], _004__C7 [18], _004__C7 [19], _004__C7 [20], _004__C7 [21] } = 0;
  logic [22:0] _004__R8 ;
  logic [22:0] _004__X8 ;
  logic [22:0] _004__C8 ;
  assign _004__R8 [22:22] = fangyuan7_R [16:16] ;
  assign _004__X8 [22:22] = fangyuan7_X [16:16] ;
  assign _004__C8 [22:22] = fangyuan7_C [16:16] ;
  assign { _004__R8 [0], _004__R8 [1], _004__R8 [2], _004__R8 [3], _004__R8 [4], _004__R8 [5], _004__R8 [6], _004__R8 [7], _004__R8 [8], _004__R8 [9], _004__R8 [10], _004__R8 [11], _004__R8 [12], _004__R8 [13], _004__R8 [14], _004__R8 [15], _004__R8 [16], _004__R8 [17], _004__R8 [18], _004__R8 [19], _004__R8 [20], _004__R8 [21] } = 0;
  assign { _004__X8 [0], _004__X8 [1], _004__X8 [2], _004__X8 [3], _004__X8 [4], _004__X8 [5], _004__X8 [6], _004__X8 [7], _004__X8 [8], _004__X8 [9], _004__X8 [10], _004__X8 [11], _004__X8 [12], _004__X8 [13], _004__X8 [14], _004__X8 [15], _004__X8 [16], _004__X8 [17], _004__X8 [18], _004__X8 [19], _004__X8 [20], _004__X8 [21] } = 0;
  assign { _004__C8 [0], _004__C8 [1], _004__C8 [2], _004__C8 [3], _004__C8 [4], _004__C8 [5], _004__C8 [6], _004__C8 [7], _004__C8 [8], _004__C8 [9], _004__C8 [10], _004__C8 [11], _004__C8 [12], _004__C8 [13], _004__C8 [14], _004__C8 [15], _004__C8 [16], _004__C8 [17], _004__C8 [18], _004__C8 [19], _004__C8 [20], _004__C8 [21] } = 0;
  logic [22:0] _004__R9 ;
  logic [22:0] _004__X9 ;
  logic [22:0] _004__C9 ;
  assign _004__R9 [22:22] = fangyuan7_R [15:15] ;
  assign _004__X9 [22:22] = fangyuan7_X [15:15] ;
  assign _004__C9 [22:22] = fangyuan7_C [15:15] ;
  assign { _004__R9 [0], _004__R9 [1], _004__R9 [2], _004__R9 [3], _004__R9 [4], _004__R9 [5], _004__R9 [6], _004__R9 [7], _004__R9 [8], _004__R9 [9], _004__R9 [10], _004__R9 [11], _004__R9 [12], _004__R9 [13], _004__R9 [14], _004__R9 [15], _004__R9 [16], _004__R9 [17], _004__R9 [18], _004__R9 [19], _004__R9 [20], _004__R9 [21] } = 0;
  assign { _004__X9 [0], _004__X9 [1], _004__X9 [2], _004__X9 [3], _004__X9 [4], _004__X9 [5], _004__X9 [6], _004__X9 [7], _004__X9 [8], _004__X9 [9], _004__X9 [10], _004__X9 [11], _004__X9 [12], _004__X9 [13], _004__X9 [14], _004__X9 [15], _004__X9 [16], _004__X9 [17], _004__X9 [18], _004__X9 [19], _004__X9 [20], _004__X9 [21] } = 0;
  assign { _004__C9 [0], _004__C9 [1], _004__C9 [2], _004__C9 [3], _004__C9 [4], _004__C9 [5], _004__C9 [6], _004__C9 [7], _004__C9 [8], _004__C9 [9], _004__C9 [10], _004__C9 [11], _004__C9 [12], _004__C9 [13], _004__C9 [14], _004__C9 [15], _004__C9 [16], _004__C9 [17], _004__C9 [18], _004__C9 [19], _004__C9 [20], _004__C9 [21] } = 0;
  logic [22:0] _004__R10 ;
  logic [22:0] _004__X10 ;
  logic [22:0] _004__C10 ;
  assign _004__R10 [22:22] = fangyuan7_R [14:14] ;
  assign _004__X10 [22:22] = fangyuan7_X [14:14] ;
  assign _004__C10 [22:22] = fangyuan7_C [14:14] ;
  assign { _004__R10 [0], _004__R10 [1], _004__R10 [2], _004__R10 [3], _004__R10 [4], _004__R10 [5], _004__R10 [6], _004__R10 [7], _004__R10 [8], _004__R10 [9], _004__R10 [10], _004__R10 [11], _004__R10 [12], _004__R10 [13], _004__R10 [14], _004__R10 [15], _004__R10 [16], _004__R10 [17], _004__R10 [18], _004__R10 [19], _004__R10 [20], _004__R10 [21] } = 0;
  assign { _004__X10 [0], _004__X10 [1], _004__X10 [2], _004__X10 [3], _004__X10 [4], _004__X10 [5], _004__X10 [6], _004__X10 [7], _004__X10 [8], _004__X10 [9], _004__X10 [10], _004__X10 [11], _004__X10 [12], _004__X10 [13], _004__X10 [14], _004__X10 [15], _004__X10 [16], _004__X10 [17], _004__X10 [18], _004__X10 [19], _004__X10 [20], _004__X10 [21] } = 0;
  assign { _004__C10 [0], _004__C10 [1], _004__C10 [2], _004__C10 [3], _004__C10 [4], _004__C10 [5], _004__C10 [6], _004__C10 [7], _004__C10 [8], _004__C10 [9], _004__C10 [10], _004__C10 [11], _004__C10 [12], _004__C10 [13], _004__C10 [14], _004__C10 [15], _004__C10 [16], _004__C10 [17], _004__C10 [18], _004__C10 [19], _004__C10 [20], _004__C10 [21] } = 0;
  logic [22:0] _004__R11 ;
  logic [22:0] _004__X11 ;
  logic [22:0] _004__C11 ;
  assign _004__R11 [22:22] = fangyuan7_R [13:13] ;
  assign _004__X11 [22:22] = fangyuan7_X [13:13] ;
  assign _004__C11 [22:22] = fangyuan7_C [13:13] ;
  assign { _004__R11 [0], _004__R11 [1], _004__R11 [2], _004__R11 [3], _004__R11 [4], _004__R11 [5], _004__R11 [6], _004__R11 [7], _004__R11 [8], _004__R11 [9], _004__R11 [10], _004__R11 [11], _004__R11 [12], _004__R11 [13], _004__R11 [14], _004__R11 [15], _004__R11 [16], _004__R11 [17], _004__R11 [18], _004__R11 [19], _004__R11 [20], _004__R11 [21] } = 0;
  assign { _004__X11 [0], _004__X11 [1], _004__X11 [2], _004__X11 [3], _004__X11 [4], _004__X11 [5], _004__X11 [6], _004__X11 [7], _004__X11 [8], _004__X11 [9], _004__X11 [10], _004__X11 [11], _004__X11 [12], _004__X11 [13], _004__X11 [14], _004__X11 [15], _004__X11 [16], _004__X11 [17], _004__X11 [18], _004__X11 [19], _004__X11 [20], _004__X11 [21] } = 0;
  assign { _004__C11 [0], _004__C11 [1], _004__C11 [2], _004__C11 [3], _004__C11 [4], _004__C11 [5], _004__C11 [6], _004__C11 [7], _004__C11 [8], _004__C11 [9], _004__C11 [10], _004__C11 [11], _004__C11 [12], _004__C11 [13], _004__C11 [14], _004__C11 [15], _004__C11 [16], _004__C11 [17], _004__C11 [18], _004__C11 [19], _004__C11 [20], _004__C11 [21] } = 0;
  logic [22:0] _004__R12 ;
  logic [22:0] _004__X12 ;
  logic [22:0] _004__C12 ;
  assign _004__R12 [22:22] = fangyuan7_R [12:12] ;
  assign _004__X12 [22:22] = fangyuan7_X [12:12] ;
  assign _004__C12 [22:22] = fangyuan7_C [12:12] ;
  assign { _004__R12 [0], _004__R12 [1], _004__R12 [2], _004__R12 [3], _004__R12 [4], _004__R12 [5], _004__R12 [6], _004__R12 [7], _004__R12 [8], _004__R12 [9], _004__R12 [10], _004__R12 [11], _004__R12 [12], _004__R12 [13], _004__R12 [14], _004__R12 [15], _004__R12 [16], _004__R12 [17], _004__R12 [18], _004__R12 [19], _004__R12 [20], _004__R12 [21] } = 0;
  assign { _004__X12 [0], _004__X12 [1], _004__X12 [2], _004__X12 [3], _004__X12 [4], _004__X12 [5], _004__X12 [6], _004__X12 [7], _004__X12 [8], _004__X12 [9], _004__X12 [10], _004__X12 [11], _004__X12 [12], _004__X12 [13], _004__X12 [14], _004__X12 [15], _004__X12 [16], _004__X12 [17], _004__X12 [18], _004__X12 [19], _004__X12 [20], _004__X12 [21] } = 0;
  assign { _004__C12 [0], _004__C12 [1], _004__C12 [2], _004__C12 [3], _004__C12 [4], _004__C12 [5], _004__C12 [6], _004__C12 [7], _004__C12 [8], _004__C12 [9], _004__C12 [10], _004__C12 [11], _004__C12 [12], _004__C12 [13], _004__C12 [14], _004__C12 [15], _004__C12 [16], _004__C12 [17], _004__C12 [18], _004__C12 [19], _004__C12 [20], _004__C12 [21] } = 0;
  logic [22:0] _004__R13 ;
  logic [22:0] _004__X13 ;
  logic [22:0] _004__C13 ;
  assign _004__R13 [22:22] = fangyuan7_R [11:11] ;
  assign _004__X13 [22:22] = fangyuan7_X [11:11] ;
  assign _004__C13 [22:22] = fangyuan7_C [11:11] ;
  assign { _004__R13 [0], _004__R13 [1], _004__R13 [2], _004__R13 [3], _004__R13 [4], _004__R13 [5], _004__R13 [6], _004__R13 [7], _004__R13 [8], _004__R13 [9], _004__R13 [10], _004__R13 [11], _004__R13 [12], _004__R13 [13], _004__R13 [14], _004__R13 [15], _004__R13 [16], _004__R13 [17], _004__R13 [18], _004__R13 [19], _004__R13 [20], _004__R13 [21] } = 0;
  assign { _004__X13 [0], _004__X13 [1], _004__X13 [2], _004__X13 [3], _004__X13 [4], _004__X13 [5], _004__X13 [6], _004__X13 [7], _004__X13 [8], _004__X13 [9], _004__X13 [10], _004__X13 [11], _004__X13 [12], _004__X13 [13], _004__X13 [14], _004__X13 [15], _004__X13 [16], _004__X13 [17], _004__X13 [18], _004__X13 [19], _004__X13 [20], _004__X13 [21] } = 0;
  assign { _004__C13 [0], _004__C13 [1], _004__C13 [2], _004__C13 [3], _004__C13 [4], _004__C13 [5], _004__C13 [6], _004__C13 [7], _004__C13 [8], _004__C13 [9], _004__C13 [10], _004__C13 [11], _004__C13 [12], _004__C13 [13], _004__C13 [14], _004__C13 [15], _004__C13 [16], _004__C13 [17], _004__C13 [18], _004__C13 [19], _004__C13 [20], _004__C13 [21] } = 0;
  logic [22:0] _004__R14 ;
  logic [22:0] _004__X14 ;
  logic [22:0] _004__C14 ;
  assign _004__R14 [22:22] = fangyuan7_R [10:10] ;
  assign _004__X14 [22:22] = fangyuan7_X [10:10] ;
  assign _004__C14 [22:22] = fangyuan7_C [10:10] ;
  assign { _004__R14 [0], _004__R14 [1], _004__R14 [2], _004__R14 [3], _004__R14 [4], _004__R14 [5], _004__R14 [6], _004__R14 [7], _004__R14 [8], _004__R14 [9], _004__R14 [10], _004__R14 [11], _004__R14 [12], _004__R14 [13], _004__R14 [14], _004__R14 [15], _004__R14 [16], _004__R14 [17], _004__R14 [18], _004__R14 [19], _004__R14 [20], _004__R14 [21] } = 0;
  assign { _004__X14 [0], _004__X14 [1], _004__X14 [2], _004__X14 [3], _004__X14 [4], _004__X14 [5], _004__X14 [6], _004__X14 [7], _004__X14 [8], _004__X14 [9], _004__X14 [10], _004__X14 [11], _004__X14 [12], _004__X14 [13], _004__X14 [14], _004__X14 [15], _004__X14 [16], _004__X14 [17], _004__X14 [18], _004__X14 [19], _004__X14 [20], _004__X14 [21] } = 0;
  assign { _004__C14 [0], _004__C14 [1], _004__C14 [2], _004__C14 [3], _004__C14 [4], _004__C14 [5], _004__C14 [6], _004__C14 [7], _004__C14 [8], _004__C14 [9], _004__C14 [10], _004__C14 [11], _004__C14 [12], _004__C14 [13], _004__C14 [14], _004__C14 [15], _004__C14 [16], _004__C14 [17], _004__C14 [18], _004__C14 [19], _004__C14 [20], _004__C14 [21] } = 0;
  logic [22:0] _004__R15 ;
  logic [22:0] _004__X15 ;
  logic [22:0] _004__C15 ;
  assign _004__R15 [22:22] = fangyuan7_R [9:9] ;
  assign _004__X15 [22:22] = fangyuan7_X [9:9] ;
  assign _004__C15 [22:22] = fangyuan7_C [9:9] ;
  assign { _004__R15 [0], _004__R15 [1], _004__R15 [2], _004__R15 [3], _004__R15 [4], _004__R15 [5], _004__R15 [6], _004__R15 [7], _004__R15 [8], _004__R15 [9], _004__R15 [10], _004__R15 [11], _004__R15 [12], _004__R15 [13], _004__R15 [14], _004__R15 [15], _004__R15 [16], _004__R15 [17], _004__R15 [18], _004__R15 [19], _004__R15 [20], _004__R15 [21] } = 0;
  assign { _004__X15 [0], _004__X15 [1], _004__X15 [2], _004__X15 [3], _004__X15 [4], _004__X15 [5], _004__X15 [6], _004__X15 [7], _004__X15 [8], _004__X15 [9], _004__X15 [10], _004__X15 [11], _004__X15 [12], _004__X15 [13], _004__X15 [14], _004__X15 [15], _004__X15 [16], _004__X15 [17], _004__X15 [18], _004__X15 [19], _004__X15 [20], _004__X15 [21] } = 0;
  assign { _004__C15 [0], _004__C15 [1], _004__C15 [2], _004__C15 [3], _004__C15 [4], _004__C15 [5], _004__C15 [6], _004__C15 [7], _004__C15 [8], _004__C15 [9], _004__C15 [10], _004__C15 [11], _004__C15 [12], _004__C15 [13], _004__C15 [14], _004__C15 [15], _004__C15 [16], _004__C15 [17], _004__C15 [18], _004__C15 [19], _004__C15 [20], _004__C15 [21] } = 0;
  logic [22:0] _004__R16 ;
  logic [22:0] _004__X16 ;
  logic [22:0] _004__C16 ;
  assign _004__R16 [22:22] = fangyuan7_R [8:8] ;
  assign _004__X16 [22:22] = fangyuan7_X [8:8] ;
  assign _004__C16 [22:22] = fangyuan7_C [8:8] ;
  assign { _004__R16 [0], _004__R16 [1], _004__R16 [2], _004__R16 [3], _004__R16 [4], _004__R16 [5], _004__R16 [6], _004__R16 [7], _004__R16 [8], _004__R16 [9], _004__R16 [10], _004__R16 [11], _004__R16 [12], _004__R16 [13], _004__R16 [14], _004__R16 [15], _004__R16 [16], _004__R16 [17], _004__R16 [18], _004__R16 [19], _004__R16 [20], _004__R16 [21] } = 0;
  assign { _004__X16 [0], _004__X16 [1], _004__X16 [2], _004__X16 [3], _004__X16 [4], _004__X16 [5], _004__X16 [6], _004__X16 [7], _004__X16 [8], _004__X16 [9], _004__X16 [10], _004__X16 [11], _004__X16 [12], _004__X16 [13], _004__X16 [14], _004__X16 [15], _004__X16 [16], _004__X16 [17], _004__X16 [18], _004__X16 [19], _004__X16 [20], _004__X16 [21] } = 0;
  assign { _004__C16 [0], _004__C16 [1], _004__C16 [2], _004__C16 [3], _004__C16 [4], _004__C16 [5], _004__C16 [6], _004__C16 [7], _004__C16 [8], _004__C16 [9], _004__C16 [10], _004__C16 [11], _004__C16 [12], _004__C16 [13], _004__C16 [14], _004__C16 [15], _004__C16 [16], _004__C16 [17], _004__C16 [18], _004__C16 [19], _004__C16 [20], _004__C16 [21] } = 0;
  logic [22:0] _004__R17 ;
  logic [22:0] _004__X17 ;
  logic [22:0] _004__C17 ;
  assign _004__R17 [22:22] = fangyuan7_R [7:7] ;
  assign _004__X17 [22:22] = fangyuan7_X [7:7] ;
  assign _004__C17 [22:22] = fangyuan7_C [7:7] ;
  assign { _004__R17 [0], _004__R17 [1], _004__R17 [2], _004__R17 [3], _004__R17 [4], _004__R17 [5], _004__R17 [6], _004__R17 [7], _004__R17 [8], _004__R17 [9], _004__R17 [10], _004__R17 [11], _004__R17 [12], _004__R17 [13], _004__R17 [14], _004__R17 [15], _004__R17 [16], _004__R17 [17], _004__R17 [18], _004__R17 [19], _004__R17 [20], _004__R17 [21] } = 0;
  assign { _004__X17 [0], _004__X17 [1], _004__X17 [2], _004__X17 [3], _004__X17 [4], _004__X17 [5], _004__X17 [6], _004__X17 [7], _004__X17 [8], _004__X17 [9], _004__X17 [10], _004__X17 [11], _004__X17 [12], _004__X17 [13], _004__X17 [14], _004__X17 [15], _004__X17 [16], _004__X17 [17], _004__X17 [18], _004__X17 [19], _004__X17 [20], _004__X17 [21] } = 0;
  assign { _004__C17 [0], _004__C17 [1], _004__C17 [2], _004__C17 [3], _004__C17 [4], _004__C17 [5], _004__C17 [6], _004__C17 [7], _004__C17 [8], _004__C17 [9], _004__C17 [10], _004__C17 [11], _004__C17 [12], _004__C17 [13], _004__C17 [14], _004__C17 [15], _004__C17 [16], _004__C17 [17], _004__C17 [18], _004__C17 [19], _004__C17 [20], _004__C17 [21] } = 0;
  logic [22:0] _004__R18 ;
  logic [22:0] _004__X18 ;
  logic [22:0] _004__C18 ;
  assign _004__R18 [22:22] = fangyuan7_R [6:6] ;
  assign _004__X18 [22:22] = fangyuan7_X [6:6] ;
  assign _004__C18 [22:22] = fangyuan7_C [6:6] ;
  assign { _004__R18 [0], _004__R18 [1], _004__R18 [2], _004__R18 [3], _004__R18 [4], _004__R18 [5], _004__R18 [6], _004__R18 [7], _004__R18 [8], _004__R18 [9], _004__R18 [10], _004__R18 [11], _004__R18 [12], _004__R18 [13], _004__R18 [14], _004__R18 [15], _004__R18 [16], _004__R18 [17], _004__R18 [18], _004__R18 [19], _004__R18 [20], _004__R18 [21] } = 0;
  assign { _004__X18 [0], _004__X18 [1], _004__X18 [2], _004__X18 [3], _004__X18 [4], _004__X18 [5], _004__X18 [6], _004__X18 [7], _004__X18 [8], _004__X18 [9], _004__X18 [10], _004__X18 [11], _004__X18 [12], _004__X18 [13], _004__X18 [14], _004__X18 [15], _004__X18 [16], _004__X18 [17], _004__X18 [18], _004__X18 [19], _004__X18 [20], _004__X18 [21] } = 0;
  assign { _004__C18 [0], _004__C18 [1], _004__C18 [2], _004__C18 [3], _004__C18 [4], _004__C18 [5], _004__C18 [6], _004__C18 [7], _004__C18 [8], _004__C18 [9], _004__C18 [10], _004__C18 [11], _004__C18 [12], _004__C18 [13], _004__C18 [14], _004__C18 [15], _004__C18 [16], _004__C18 [17], _004__C18 [18], _004__C18 [19], _004__C18 [20], _004__C18 [21] } = 0;
  logic [22:0] _004__R19 ;
  logic [22:0] _004__X19 ;
  logic [22:0] _004__C19 ;
  assign _004__R19 [22:22] = fangyuan7_R [5:5] ;
  assign _004__X19 [22:22] = fangyuan7_X [5:5] ;
  assign _004__C19 [22:22] = fangyuan7_C [5:5] ;
  assign { _004__R19 [0], _004__R19 [1], _004__R19 [2], _004__R19 [3], _004__R19 [4], _004__R19 [5], _004__R19 [6], _004__R19 [7], _004__R19 [8], _004__R19 [9], _004__R19 [10], _004__R19 [11], _004__R19 [12], _004__R19 [13], _004__R19 [14], _004__R19 [15], _004__R19 [16], _004__R19 [17], _004__R19 [18], _004__R19 [19], _004__R19 [20], _004__R19 [21] } = 0;
  assign { _004__X19 [0], _004__X19 [1], _004__X19 [2], _004__X19 [3], _004__X19 [4], _004__X19 [5], _004__X19 [6], _004__X19 [7], _004__X19 [8], _004__X19 [9], _004__X19 [10], _004__X19 [11], _004__X19 [12], _004__X19 [13], _004__X19 [14], _004__X19 [15], _004__X19 [16], _004__X19 [17], _004__X19 [18], _004__X19 [19], _004__X19 [20], _004__X19 [21] } = 0;
  assign { _004__C19 [0], _004__C19 [1], _004__C19 [2], _004__C19 [3], _004__C19 [4], _004__C19 [5], _004__C19 [6], _004__C19 [7], _004__C19 [8], _004__C19 [9], _004__C19 [10], _004__C19 [11], _004__C19 [12], _004__C19 [13], _004__C19 [14], _004__C19 [15], _004__C19 [16], _004__C19 [17], _004__C19 [18], _004__C19 [19], _004__C19 [20], _004__C19 [21] } = 0;
  logic [22:0] _004__R20 ;
  logic [22:0] _004__X20 ;
  logic [22:0] _004__C20 ;
  assign _004__R20 [22:22] = fangyuan7_R [4:4] ;
  assign _004__X20 [22:22] = fangyuan7_X [4:4] ;
  assign _004__C20 [22:22] = fangyuan7_C [4:4] ;
  assign { _004__R20 [0], _004__R20 [1], _004__R20 [2], _004__R20 [3], _004__R20 [4], _004__R20 [5], _004__R20 [6], _004__R20 [7], _004__R20 [8], _004__R20 [9], _004__R20 [10], _004__R20 [11], _004__R20 [12], _004__R20 [13], _004__R20 [14], _004__R20 [15], _004__R20 [16], _004__R20 [17], _004__R20 [18], _004__R20 [19], _004__R20 [20], _004__R20 [21] } = 0;
  assign { _004__X20 [0], _004__X20 [1], _004__X20 [2], _004__X20 [3], _004__X20 [4], _004__X20 [5], _004__X20 [6], _004__X20 [7], _004__X20 [8], _004__X20 [9], _004__X20 [10], _004__X20 [11], _004__X20 [12], _004__X20 [13], _004__X20 [14], _004__X20 [15], _004__X20 [16], _004__X20 [17], _004__X20 [18], _004__X20 [19], _004__X20 [20], _004__X20 [21] } = 0;
  assign { _004__C20 [0], _004__C20 [1], _004__C20 [2], _004__C20 [3], _004__C20 [4], _004__C20 [5], _004__C20 [6], _004__C20 [7], _004__C20 [8], _004__C20 [9], _004__C20 [10], _004__C20 [11], _004__C20 [12], _004__C20 [13], _004__C20 [14], _004__C20 [15], _004__C20 [16], _004__C20 [17], _004__C20 [18], _004__C20 [19], _004__C20 [20], _004__C20 [21] } = 0;
  logic [22:0] _004__R21 ;
  logic [22:0] _004__X21 ;
  logic [22:0] _004__C21 ;
  assign _004__R21 [22:22] = fangyuan7_R [3:3] ;
  assign _004__X21 [22:22] = fangyuan7_X [3:3] ;
  assign _004__C21 [22:22] = fangyuan7_C [3:3] ;
  assign { _004__R21 [0], _004__R21 [1], _004__R21 [2], _004__R21 [3], _004__R21 [4], _004__R21 [5], _004__R21 [6], _004__R21 [7], _004__R21 [8], _004__R21 [9], _004__R21 [10], _004__R21 [11], _004__R21 [12], _004__R21 [13], _004__R21 [14], _004__R21 [15], _004__R21 [16], _004__R21 [17], _004__R21 [18], _004__R21 [19], _004__R21 [20], _004__R21 [21] } = 0;
  assign { _004__X21 [0], _004__X21 [1], _004__X21 [2], _004__X21 [3], _004__X21 [4], _004__X21 [5], _004__X21 [6], _004__X21 [7], _004__X21 [8], _004__X21 [9], _004__X21 [10], _004__X21 [11], _004__X21 [12], _004__X21 [13], _004__X21 [14], _004__X21 [15], _004__X21 [16], _004__X21 [17], _004__X21 [18], _004__X21 [19], _004__X21 [20], _004__X21 [21] } = 0;
  assign { _004__C21 [0], _004__C21 [1], _004__C21 [2], _004__C21 [3], _004__C21 [4], _004__C21 [5], _004__C21 [6], _004__C21 [7], _004__C21 [8], _004__C21 [9], _004__C21 [10], _004__C21 [11], _004__C21 [12], _004__C21 [13], _004__C21 [14], _004__C21 [15], _004__C21 [16], _004__C21 [17], _004__C21 [18], _004__C21 [19], _004__C21 [20], _004__C21 [21] } = 0;
  logic [22:0] _004__R22 ;
  logic [22:0] _004__X22 ;
  logic [22:0] _004__C22 ;
  assign _004__R22 [22:22] = fangyuan7_R [2:2] ;
  assign _004__X22 [22:22] = fangyuan7_X [2:2] ;
  assign _004__C22 [22:22] = fangyuan7_C [2:2] ;
  assign { _004__R22 [0], _004__R22 [1], _004__R22 [2], _004__R22 [3], _004__R22 [4], _004__R22 [5], _004__R22 [6], _004__R22 [7], _004__R22 [8], _004__R22 [9], _004__R22 [10], _004__R22 [11], _004__R22 [12], _004__R22 [13], _004__R22 [14], _004__R22 [15], _004__R22 [16], _004__R22 [17], _004__R22 [18], _004__R22 [19], _004__R22 [20], _004__R22 [21] } = 0;
  assign { _004__X22 [0], _004__X22 [1], _004__X22 [2], _004__X22 [3], _004__X22 [4], _004__X22 [5], _004__X22 [6], _004__X22 [7], _004__X22 [8], _004__X22 [9], _004__X22 [10], _004__X22 [11], _004__X22 [12], _004__X22 [13], _004__X22 [14], _004__X22 [15], _004__X22 [16], _004__X22 [17], _004__X22 [18], _004__X22 [19], _004__X22 [20], _004__X22 [21] } = 0;
  assign { _004__C22 [0], _004__C22 [1], _004__C22 [2], _004__C22 [3], _004__C22 [4], _004__C22 [5], _004__C22 [6], _004__C22 [7], _004__C22 [8], _004__C22 [9], _004__C22 [10], _004__C22 [11], _004__C22 [12], _004__C22 [13], _004__C22 [14], _004__C22 [15], _004__C22 [16], _004__C22 [17], _004__C22 [18], _004__C22 [19], _004__C22 [20], _004__C22 [21] } = 0;
  logic [22:0] _004__R23 ;
  logic [22:0] _004__X23 ;
  logic [22:0] _004__C23 ;
  assign _004__R23 [22:22] = fangyuan7_R [1:1] ;
  assign _004__X23 [22:22] = fangyuan7_X [1:1] ;
  assign _004__C23 [22:22] = fangyuan7_C [1:1] ;
  assign { _004__R23 [0], _004__R23 [1], _004__R23 [2], _004__R23 [3], _004__R23 [4], _004__R23 [5], _004__R23 [6], _004__R23 [7], _004__R23 [8], _004__R23 [9], _004__R23 [10], _004__R23 [11], _004__R23 [12], _004__R23 [13], _004__R23 [14], _004__R23 [15], _004__R23 [16], _004__R23 [17], _004__R23 [18], _004__R23 [19], _004__R23 [20], _004__R23 [21] } = 0;
  assign { _004__X23 [0], _004__X23 [1], _004__X23 [2], _004__X23 [3], _004__X23 [4], _004__X23 [5], _004__X23 [6], _004__X23 [7], _004__X23 [8], _004__X23 [9], _004__X23 [10], _004__X23 [11], _004__X23 [12], _004__X23 [13], _004__X23 [14], _004__X23 [15], _004__X23 [16], _004__X23 [17], _004__X23 [18], _004__X23 [19], _004__X23 [20], _004__X23 [21] } = 0;
  assign { _004__C23 [0], _004__C23 [1], _004__C23 [2], _004__C23 [3], _004__C23 [4], _004__C23 [5], _004__C23 [6], _004__C23 [7], _004__C23 [8], _004__C23 [9], _004__C23 [10], _004__C23 [11], _004__C23 [12], _004__C23 [13], _004__C23 [14], _004__C23 [15], _004__C23 [16], _004__C23 [17], _004__C23 [18], _004__C23 [19], _004__C23 [20], _004__C23 [21] } = 0;
  logic [22:0] _004__R24 ;
  logic [22:0] _004__X24 ;
  logic [22:0] _004__C24 ;
  assign _004__R24 [22:22] = fangyuan7_R [0:0] ;
  assign _004__X24 [22:22] = fangyuan7_X [0:0] ;
  assign _004__C24 [22:22] = fangyuan7_C [0:0] ;

  assign mux_34_nl = or_nl ? FpMantRNE_48U_24U_else_acc_nl : fangyuan7;
  logic [0:0] or_nl_C0 ;
  logic [0:0] or_nl_R0 ;
  logic [0:0] or_nl_X0 ;
  assign or_nl_C0 = | mux_34_nl_C ;
  assign or_nl_X0 = | mux_34_nl_X ;
  assign mux_34_nl_T = or_nl ? ( { 23{ or_nl_T  }} | FpMantRNE_48U_24U_else_acc_nl_T ) : ( { 23{ or_nl_T  }} | fangyuan7_T );
  assign mux_34_nl_S = or_nl ? FpMantRNE_48U_24U_else_acc_nl_S : fangyuan7_S ;
  assign or_nl_R0 = ( | (mux_34_nl_R | ( mux_34_nl_C & ( { 23{ or_nl }} & FpMantRNE_48U_24U_else_acc_nl_T | { 23{ !or_nl }} & fangyuan7_T )))) && FpMantRNE_48U_24U_else_acc_nl != fangyuan7 ;
  logic [22:0] FpMantRNE_48U_24U_else_acc_nl_C0 ;
  logic [22:0] FpMantRNE_48U_24U_else_acc_nl_R0 ;
  logic [22:0] FpMantRNE_48U_24U_else_acc_nl_X0 ;
  assign FpMantRNE_48U_24U_else_acc_nl_C0 = { 23{ or_nl }} ;
  assign FpMantRNE_48U_24U_else_acc_nl_R0 = { 23{ or_nl }} & ( mux_34_nl_R | ( { 23{ or_nl_T  }} & mux_34_nl_C ));
  assign FpMantRNE_48U_24U_else_acc_nl_X0 = { 23{ or_nl }} & mux_34_nl_X ;
  logic [22:0] fangyuan7_C0 ;
  logic [22:0] fangyuan7_R0 ;
  logic [22:0] fangyuan7_X0 ;
  assign fangyuan7_C0 = { 23{ !or_nl }} ;
  assign fangyuan7_R0 = { 23{ !or_nl }} & ( mux_34_nl_R | ( { 23{ or_nl_T  }} & mux_34_nl_C ));
  assign fangyuan7_X0 = { 23{ !or_nl }} & mux_34_nl_X ;
  assign mux_20_itm = FpMul_8U_23U_or_2_cse ? or_39_nl : mux_19_nl;
  logic [0:0] FpMul_8U_23U_or_2_cse_C3 ;
  logic [0:0] FpMul_8U_23U_or_2_cse_R3 ;
  logic [0:0] FpMul_8U_23U_or_2_cse_X3 ;
  assign FpMul_8U_23U_or_2_cse_C3 = | mux_20_itm_C ;
  assign FpMul_8U_23U_or_2_cse_X3 = | mux_20_itm_X ;
  assign mux_20_itm_T = FpMul_8U_23U_or_2_cse ? ( { 1{ FpMul_8U_23U_or_2_cse_T  }} | or_39_nl_T ) : ( { 1{ FpMul_8U_23U_or_2_cse_T  }} | mux_19_nl_T );
  assign mux_20_itm_S = FpMul_8U_23U_or_2_cse ? or_39_nl_S : mux_19_nl_S ;
  assign FpMul_8U_23U_or_2_cse_R3 = ( | (mux_20_itm_R | ( mux_20_itm_C & ( { 1{ FpMul_8U_23U_or_2_cse }} & or_39_nl_T | { 1{ !FpMul_8U_23U_or_2_cse }} & mux_19_nl_T )))) && or_39_nl != mux_19_nl ;
  logic [0:0] or_39_nl_C0 ;
  logic [0:0] or_39_nl_R0 ;
  logic [0:0] or_39_nl_X0 ;
  assign or_39_nl_C0 = { 1{ FpMul_8U_23U_or_2_cse }} ;
  assign or_39_nl_R0 = { 1{ FpMul_8U_23U_or_2_cse }} & ( mux_20_itm_R | ( { 1{ FpMul_8U_23U_or_2_cse_T  }} & mux_20_itm_C ));
  assign or_39_nl_X0 = { 1{ FpMul_8U_23U_or_2_cse }} & mux_20_itm_X ;
  logic [0:0] mux_19_nl_C0 ;
  logic [0:0] mux_19_nl_R0 ;
  logic [0:0] mux_19_nl_X0 ;
  assign mux_19_nl_C0 = { 1{ !FpMul_8U_23U_or_2_cse }} ;
  assign mux_19_nl_R0 = { 1{ !FpMul_8U_23U_or_2_cse }} & ( mux_20_itm_R | ( { 1{ FpMul_8U_23U_or_2_cse_T  }} & mux_20_itm_C ));
  assign mux_19_nl_X0 = { 1{ !FpMul_8U_23U_or_2_cse }} & mux_20_itm_X ;
  assign mux_19_nl = main_stage_v_1 ? mux_18_nl : or_tmp_24;
  logic [0:0] main_stage_v_1_C8 ;
  logic [0:0] main_stage_v_1_R8 ;
  logic [0:0] main_stage_v_1_X8 ;
  assign main_stage_v_1_C8 = | mux_19_nl_C ;
  assign main_stage_v_1_X8 = | mux_19_nl_X ;
  assign mux_19_nl_T = main_stage_v_1 ? ( { 1{ main_stage_v_1_T  }} | mux_18_nl_T ) : ( { 1{ main_stage_v_1_T  }} | or_tmp_24_T );
  assign mux_19_nl_S = main_stage_v_1 ? mux_18_nl_S : or_tmp_24_S ;
  assign main_stage_v_1_R8 = ( | (mux_19_nl_R | ( mux_19_nl_C & ( { 1{ main_stage_v_1 }} & mux_18_nl_T | { 1{ !main_stage_v_1 }} & or_tmp_24_T )))) && mux_18_nl != or_tmp_24 ;
  logic [0:0] mux_18_nl_C0 ;
  logic [0:0] mux_18_nl_R0 ;
  logic [0:0] mux_18_nl_X0 ;
  assign mux_18_nl_C0 = { 1{ main_stage_v_1 }} ;
  assign mux_18_nl_R0 = { 1{ main_stage_v_1 }} & ( mux_19_nl_R | ( { 1{ main_stage_v_1_T  }} & mux_19_nl_C ));
  assign mux_18_nl_X0 = { 1{ main_stage_v_1 }} & mux_19_nl_X ;
  logic [0:0] or_tmp_24_C1 ;
  logic [0:0] or_tmp_24_R1 ;
  logic [0:0] or_tmp_24_X1 ;
  assign or_tmp_24_C1 = { 1{ !main_stage_v_1 }} ;
  assign or_tmp_24_R1 = { 1{ !main_stage_v_1 }} & ( mux_19_nl_R | ( { 1{ main_stage_v_1_T  }} & mux_19_nl_C ));
  assign or_tmp_24_X1 = { 1{ !main_stage_v_1 }} & mux_19_nl_X ;
  assign mux_18_nl = main_stage_v_2 ? mux_tmp_14 : or_tmp_36;
  logic [0:0] main_stage_v_2_C5 ;
  logic [0:0] main_stage_v_2_R5 ;
  logic [0:0] main_stage_v_2_X5 ;
  assign main_stage_v_2_C5 = | mux_18_nl_C ;
  assign main_stage_v_2_X5 = | mux_18_nl_X ;
  assign mux_18_nl_T = main_stage_v_2 ? ( { 1{ main_stage_v_2_T  }} | mux_tmp_14_T ) : ( { 1{ main_stage_v_2_T  }} | or_tmp_36_T );
  assign mux_18_nl_S = main_stage_v_2 ? mux_tmp_14_S : or_tmp_36_S ;
  assign main_stage_v_2_R5 = ( | (mux_18_nl_R | ( mux_18_nl_C & ( { 1{ main_stage_v_2 }} & mux_tmp_14_T | { 1{ !main_stage_v_2 }} & or_tmp_36_T )))) && mux_tmp_14 != or_tmp_36 ;
  logic [0:0] mux_tmp_14_C2 ;
  logic [0:0] mux_tmp_14_R2 ;
  logic [0:0] mux_tmp_14_X2 ;
  assign mux_tmp_14_C2 = { 1{ main_stage_v_2 }} ;
  assign mux_tmp_14_R2 = { 1{ main_stage_v_2 }} & ( mux_18_nl_R | ( { 1{ main_stage_v_2_T  }} & mux_18_nl_C ));
  assign mux_tmp_14_X2 = { 1{ main_stage_v_2 }} & mux_18_nl_X ;
  logic [0:0] or_tmp_36_C1 ;
  logic [0:0] or_tmp_36_R1 ;
  logic [0:0] or_tmp_36_X1 ;
  assign or_tmp_36_C1 = { 1{ !main_stage_v_2 }} ;
  assign or_tmp_36_R1 = { 1{ !main_stage_v_2 }} & ( mux_18_nl_R | ( { 1{ main_stage_v_2_T  }} & mux_18_nl_C ));
  assign or_tmp_36_X1 = { 1{ !main_stage_v_2 }} & mux_18_nl_X ;
  assign mux_tmp_14 = IsNaN_8U_23U_1_land_lpi_1_dfm_3 ? or_10_cse : mux_tmp_9;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_C6 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_R6 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_X6 ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_C6 = | mux_tmp_14_C ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_X6 = | mux_tmp_14_X ;
  assign mux_tmp_14_T = IsNaN_8U_23U_1_land_lpi_1_dfm_3 ? ( { 1{ IsNaN_8U_23U_1_land_lpi_1_dfm_3_T  }} | or_10_cse_T ) : ( { 1{ IsNaN_8U_23U_1_land_lpi_1_dfm_3_T  }} | mux_tmp_9_T );
  assign mux_tmp_14_S = IsNaN_8U_23U_1_land_lpi_1_dfm_3 ? or_10_cse_S : mux_tmp_9_S ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_R6 = ( | (mux_tmp_14_R | ( mux_tmp_14_C & ( { 1{ IsNaN_8U_23U_1_land_lpi_1_dfm_3 }} & or_10_cse_T | { 1{ !IsNaN_8U_23U_1_land_lpi_1_dfm_3 }} & mux_tmp_9_T )))) && or_10_cse != mux_tmp_9 ;
  logic [0:0] or_10_cse_C17 ;
  logic [0:0] or_10_cse_R17 ;
  logic [0:0] or_10_cse_X17 ;
  assign or_10_cse_C17 = { 1{ IsNaN_8U_23U_1_land_lpi_1_dfm_3 }} ;
  assign or_10_cse_R17 = { 1{ IsNaN_8U_23U_1_land_lpi_1_dfm_3 }} & ( mux_tmp_14_R | ( { 1{ IsNaN_8U_23U_1_land_lpi_1_dfm_3_T  }} & mux_tmp_14_C ));
  assign or_10_cse_X17 = { 1{ IsNaN_8U_23U_1_land_lpi_1_dfm_3 }} & mux_tmp_14_X ;
  logic [0:0] mux_tmp_9_C0 ;
  logic [0:0] mux_tmp_9_R0 ;
  logic [0:0] mux_tmp_9_X0 ;
  assign mux_tmp_9_C0 = { 1{ !IsNaN_8U_23U_1_land_lpi_1_dfm_3 }} ;
  assign mux_tmp_9_R0 = { 1{ !IsNaN_8U_23U_1_land_lpi_1_dfm_3 }} & ( mux_tmp_14_R | ( { 1{ IsNaN_8U_23U_1_land_lpi_1_dfm_3_T  }} & mux_tmp_14_C ));
  assign mux_tmp_9_X0 = { 1{ !IsNaN_8U_23U_1_land_lpi_1_dfm_3 }} & mux_tmp_14_X ;
  assign mux_tmp_10 = _169_ ? mux_tmp_9 : or_10_cse;
  logic [0:0] _169__C1 ;
  logic [0:0] _169__R1 ;
  logic [0:0] _169__X1 ;
  assign _169__C1 = | mux_tmp_10_C ;
  assign _169__X1 = | mux_tmp_10_X ;
  assign mux_tmp_10_T = _169_ ? ( { 1{ _169__T  }} | mux_tmp_9_T ) : ( { 1{ _169__T  }} | or_10_cse_T );
  assign mux_tmp_10_S = _169_ ? mux_tmp_9_S : or_10_cse_S ;
  assign _169__R1 = ( | (mux_tmp_10_R | ( mux_tmp_10_C & ( { 1{ _169_ }} & mux_tmp_9_T | { 1{ !_169_ }} & or_10_cse_T )))) && mux_tmp_9 != or_10_cse ;
  logic [0:0] mux_tmp_9_C1 ;
  logic [0:0] mux_tmp_9_R1 ;
  logic [0:0] mux_tmp_9_X1 ;
  assign mux_tmp_9_C1 = { 1{ _169_ }} ;
  assign mux_tmp_9_R1 = { 1{ _169_ }} & ( mux_tmp_10_R | ( { 1{ _169__T  }} & mux_tmp_10_C ));
  assign mux_tmp_9_X1 = { 1{ _169_ }} & mux_tmp_10_X ;
  logic [0:0] or_10_cse_C18 ;
  logic [0:0] or_10_cse_R18 ;
  logic [0:0] or_10_cse_X18 ;
  assign or_10_cse_C18 = { 1{ !_169_ }} ;
  assign or_10_cse_R18 = { 1{ !_169_ }} & ( mux_tmp_10_R | ( { 1{ _169__T  }} & mux_tmp_10_C ));
  assign or_10_cse_X18 = { 1{ !_169_ }} & mux_tmp_10_X ;
  assign mux_tmp_9 = chn_o_rsci_bawt ? IsNaN_8U_23U_land_lpi_1_dfm_st_3 : nor_22_nl;
  logic [0:0] chn_o_rsci_bawt_C9 ;
  logic [0:0] chn_o_rsci_bawt_R9 ;
  logic [0:0] chn_o_rsci_bawt_X9 ;
  assign chn_o_rsci_bawt_C9 = | mux_tmp_9_C ;
  assign chn_o_rsci_bawt_X9 = | mux_tmp_9_X ;
  assign mux_tmp_9_T = chn_o_rsci_bawt ? ( { 1{ chn_o_rsci_bawt_T  }} | IsNaN_8U_23U_land_lpi_1_dfm_st_3_T ) : ( { 1{ chn_o_rsci_bawt_T  }} | nor_22_nl_T );
  assign mux_tmp_9_S = chn_o_rsci_bawt ? IsNaN_8U_23U_land_lpi_1_dfm_st_3_S : nor_22_nl_S ;
  assign chn_o_rsci_bawt_R9 = ( | (mux_tmp_9_R | ( mux_tmp_9_C & ( { 1{ chn_o_rsci_bawt }} & IsNaN_8U_23U_land_lpi_1_dfm_st_3_T | { 1{ !chn_o_rsci_bawt }} & nor_22_nl_T )))) && IsNaN_8U_23U_land_lpi_1_dfm_st_3 != nor_22_nl ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_3_C8 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_3_R8 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_3_X8 ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_C8 = { 1{ chn_o_rsci_bawt }} ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_R8 = { 1{ chn_o_rsci_bawt }} & ( mux_tmp_9_R | ( { 1{ chn_o_rsci_bawt_T  }} & mux_tmp_9_C ));
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_X8 = { 1{ chn_o_rsci_bawt }} & mux_tmp_9_X ;
  logic [0:0] nor_22_nl_C0 ;
  logic [0:0] nor_22_nl_R0 ;
  logic [0:0] nor_22_nl_X0 ;
  assign nor_22_nl_C0 = { 1{ !chn_o_rsci_bawt }} ;
  assign nor_22_nl_R0 = { 1{ !chn_o_rsci_bawt }} & ( mux_tmp_9_R | ( { 1{ chn_o_rsci_bawt_T  }} & mux_tmp_9_C ));
  assign nor_22_nl_X0 = { 1{ !chn_o_rsci_bawt }} & mux_tmp_9_X ;
  assign mux_tmp_4 = main_stage_v_1 ? or_22_nl : _000_;
  logic [0:0] main_stage_v_1_C9 ;
  logic [0:0] main_stage_v_1_R9 ;
  logic [0:0] main_stage_v_1_X9 ;
  assign main_stage_v_1_C9 = | mux_tmp_4_C ;
  assign main_stage_v_1_X9 = | mux_tmp_4_X ;
  assign mux_tmp_4_T = main_stage_v_1 ? ( { 1{ main_stage_v_1_T  }} | or_22_nl_T ) : ( { 1{ main_stage_v_1_T  }} | _000__T );
  assign mux_tmp_4_S = main_stage_v_1 ? or_22_nl_S : _000__S ;
  assign main_stage_v_1_R9 = ( | (mux_tmp_4_R | ( mux_tmp_4_C & ( { 1{ main_stage_v_1 }} & or_22_nl_T | { 1{ !main_stage_v_1 }} & _000__T )))) && or_22_nl != _000_ ;
  logic [0:0] or_22_nl_C0 ;
  logic [0:0] or_22_nl_R0 ;
  logic [0:0] or_22_nl_X0 ;
  assign or_22_nl_C0 = { 1{ main_stage_v_1 }} ;
  assign or_22_nl_R0 = { 1{ main_stage_v_1 }} & ( mux_tmp_4_R | ( { 1{ main_stage_v_1_T  }} & mux_tmp_4_C ));
  assign or_22_nl_X0 = { 1{ main_stage_v_1 }} & mux_tmp_4_X ;
  logic [0:0] _000__C4 ;
  logic [0:0] _000__R4 ;
  logic [0:0] _000__X4 ;
  assign _000__C4 = { 1{ !main_stage_v_1 }} ;
  assign _000__R4 = { 1{ !main_stage_v_1 }} & ( mux_tmp_4_R | ( { 1{ main_stage_v_1_T  }} & mux_tmp_4_C ));
  assign _000__X4 = { 1{ !main_stage_v_1 }} & mux_tmp_4_X ;
  assign mux_tmp_1 = and_cse ? or_7_nl : nor_28_nl;
  logic [0:0] and_cse_C4 ;
  logic [0:0] and_cse_R4 ;
  logic [0:0] and_cse_X4 ;
  assign and_cse_C4 = | mux_tmp_1_C ;
  assign and_cse_X4 = | mux_tmp_1_X ;
  assign mux_tmp_1_T = and_cse ? ( { 1{ and_cse_T  }} | or_7_nl_T ) : ( { 1{ and_cse_T  }} | nor_28_nl_T );
  assign mux_tmp_1_S = and_cse ? or_7_nl_S : nor_28_nl_S ;
  assign and_cse_R4 = ( | (mux_tmp_1_R | ( mux_tmp_1_C & ( { 1{ and_cse }} & or_7_nl_T | { 1{ !and_cse }} & nor_28_nl_T )))) && or_7_nl != nor_28_nl ;
  logic [0:0] or_7_nl_C0 ;
  logic [0:0] or_7_nl_R0 ;
  logic [0:0] or_7_nl_X0 ;
  assign or_7_nl_C0 = { 1{ and_cse }} ;
  assign or_7_nl_R0 = { 1{ and_cse }} & ( mux_tmp_1_R | ( { 1{ and_cse_T  }} & mux_tmp_1_C ));
  assign or_7_nl_X0 = { 1{ and_cse }} & mux_tmp_1_X ;
  logic [0:0] nor_28_nl_C0 ;
  logic [0:0] nor_28_nl_R0 ;
  logic [0:0] nor_28_nl_X0 ;
  assign nor_28_nl_C0 = { 1{ !and_cse }} ;
  assign nor_28_nl_R0 = { 1{ !and_cse }} & ( mux_tmp_1_R | ( { 1{ and_cse_T  }} & mux_tmp_1_C ));
  assign nor_28_nl_X0 = { 1{ !and_cse }} & mux_tmp_1_X ;
  assign mux_tmp = or_1_nl ? or_3_nl : nor_nl;
  logic [0:0] or_1_nl_C0 ;
  logic [0:0] or_1_nl_R0 ;
  logic [0:0] or_1_nl_X0 ;
  assign or_1_nl_C0 = | mux_tmp_C ;
  assign or_1_nl_X0 = | mux_tmp_X ;
  assign mux_tmp_T = or_1_nl ? ( { 1{ or_1_nl_T  }} | or_3_nl_T ) : ( { 1{ or_1_nl_T  }} | nor_nl_T );
  assign mux_tmp_S = or_1_nl ? or_3_nl_S : nor_nl_S ;
  assign or_1_nl_R0 = ( | (mux_tmp_R | ( mux_tmp_C & ( { 1{ or_1_nl }} & or_3_nl_T | { 1{ !or_1_nl }} & nor_nl_T )))) && or_3_nl != nor_nl ;
  logic [0:0] or_3_nl_C0 ;
  logic [0:0] or_3_nl_R0 ;
  logic [0:0] or_3_nl_X0 ;
  assign or_3_nl_C0 = { 1{ or_1_nl }} ;
  assign or_3_nl_R0 = { 1{ or_1_nl }} & ( mux_tmp_R | ( { 1{ or_1_nl_T  }} & mux_tmp_C ));
  assign or_3_nl_X0 = { 1{ or_1_nl }} & mux_tmp_X ;
  logic [0:0] nor_nl_C0 ;
  logic [0:0] nor_nl_R0 ;
  logic [0:0] nor_nl_X0 ;
  assign nor_nl_C0 = { 1{ !or_1_nl }} ;
  assign nor_nl_R0 = { 1{ !or_1_nl }} & ( mux_tmp_R | ( { 1{ or_1_nl_T  }} & mux_tmp_C ));
  assign nor_nl_X0 = { 1{ !or_1_nl }} & mux_tmp_X ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0 = FpMul_8U_23U_p_mant_p1_sva_2[47] ? FpMul_8U_23U_p_mant_p1_sva_2[46:1] : FpMul_8U_23U_p_mant_p1_sva_2[45:0];
  assign { FpMul_8U_23U_p_mant_p1_sva_2_R3 [0], FpMul_8U_23U_p_mant_p1_sva_2_R3 [1], FpMul_8U_23U_p_mant_p1_sva_2_R3 [2], FpMul_8U_23U_p_mant_p1_sva_2_R3 [3], FpMul_8U_23U_p_mant_p1_sva_2_R3 [4], FpMul_8U_23U_p_mant_p1_sva_2_R3 [5], FpMul_8U_23U_p_mant_p1_sva_2_R3 [6], FpMul_8U_23U_p_mant_p1_sva_2_R3 [7], FpMul_8U_23U_p_mant_p1_sva_2_R3 [8], FpMul_8U_23U_p_mant_p1_sva_2_R3 [9], FpMul_8U_23U_p_mant_p1_sva_2_R3 [10], FpMul_8U_23U_p_mant_p1_sva_2_R3 [11], FpMul_8U_23U_p_mant_p1_sva_2_R3 [12], FpMul_8U_23U_p_mant_p1_sva_2_R3 [13], FpMul_8U_23U_p_mant_p1_sva_2_R3 [14], FpMul_8U_23U_p_mant_p1_sva_2_R3 [15], FpMul_8U_23U_p_mant_p1_sva_2_R3 [16], FpMul_8U_23U_p_mant_p1_sva_2_R3 [17], FpMul_8U_23U_p_mant_p1_sva_2_R3 [18], FpMul_8U_23U_p_mant_p1_sva_2_R3 [19], FpMul_8U_23U_p_mant_p1_sva_2_R3 [20], FpMul_8U_23U_p_mant_p1_sva_2_R3 [21], FpMul_8U_23U_p_mant_p1_sva_2_R3 [22], FpMul_8U_23U_p_mant_p1_sva_2_R3 [23], FpMul_8U_23U_p_mant_p1_sva_2_R3 [24], FpMul_8U_23U_p_mant_p1_sva_2_R3 [25], FpMul_8U_23U_p_mant_p1_sva_2_R3 [26], FpMul_8U_23U_p_mant_p1_sva_2_R3 [27], FpMul_8U_23U_p_mant_p1_sva_2_R3 [28], FpMul_8U_23U_p_mant_p1_sva_2_R3 [29], FpMul_8U_23U_p_mant_p1_sva_2_R3 [30], FpMul_8U_23U_p_mant_p1_sva_2_R3 [31], FpMul_8U_23U_p_mant_p1_sva_2_R3 [32], FpMul_8U_23U_p_mant_p1_sva_2_R3 [33], FpMul_8U_23U_p_mant_p1_sva_2_R3 [34], FpMul_8U_23U_p_mant_p1_sva_2_R3 [35], FpMul_8U_23U_p_mant_p1_sva_2_R3 [36], FpMul_8U_23U_p_mant_p1_sva_2_R3 [37], FpMul_8U_23U_p_mant_p1_sva_2_R3 [38], FpMul_8U_23U_p_mant_p1_sva_2_R3 [39], FpMul_8U_23U_p_mant_p1_sva_2_R3 [40], FpMul_8U_23U_p_mant_p1_sva_2_R3 [41], FpMul_8U_23U_p_mant_p1_sva_2_R3 [42], FpMul_8U_23U_p_mant_p1_sva_2_R3 [43], FpMul_8U_23U_p_mant_p1_sva_2_R3 [44], FpMul_8U_23U_p_mant_p1_sva_2_R3 [45], FpMul_8U_23U_p_mant_p1_sva_2_R3 [46] } = 0;
  assign { FpMul_8U_23U_p_mant_p1_sva_2_X3 [0], FpMul_8U_23U_p_mant_p1_sva_2_X3 [1], FpMul_8U_23U_p_mant_p1_sva_2_X3 [2], FpMul_8U_23U_p_mant_p1_sva_2_X3 [3], FpMul_8U_23U_p_mant_p1_sva_2_X3 [4], FpMul_8U_23U_p_mant_p1_sva_2_X3 [5], FpMul_8U_23U_p_mant_p1_sva_2_X3 [6], FpMul_8U_23U_p_mant_p1_sva_2_X3 [7], FpMul_8U_23U_p_mant_p1_sva_2_X3 [8], FpMul_8U_23U_p_mant_p1_sva_2_X3 [9], FpMul_8U_23U_p_mant_p1_sva_2_X3 [10], FpMul_8U_23U_p_mant_p1_sva_2_X3 [11], FpMul_8U_23U_p_mant_p1_sva_2_X3 [12], FpMul_8U_23U_p_mant_p1_sva_2_X3 [13], FpMul_8U_23U_p_mant_p1_sva_2_X3 [14], FpMul_8U_23U_p_mant_p1_sva_2_X3 [15], FpMul_8U_23U_p_mant_p1_sva_2_X3 [16], FpMul_8U_23U_p_mant_p1_sva_2_X3 [17], FpMul_8U_23U_p_mant_p1_sva_2_X3 [18], FpMul_8U_23U_p_mant_p1_sva_2_X3 [19], FpMul_8U_23U_p_mant_p1_sva_2_X3 [20], FpMul_8U_23U_p_mant_p1_sva_2_X3 [21], FpMul_8U_23U_p_mant_p1_sva_2_X3 [22], FpMul_8U_23U_p_mant_p1_sva_2_X3 [23], FpMul_8U_23U_p_mant_p1_sva_2_X3 [24], FpMul_8U_23U_p_mant_p1_sva_2_X3 [25], FpMul_8U_23U_p_mant_p1_sva_2_X3 [26], FpMul_8U_23U_p_mant_p1_sva_2_X3 [27], FpMul_8U_23U_p_mant_p1_sva_2_X3 [28], FpMul_8U_23U_p_mant_p1_sva_2_X3 [29], FpMul_8U_23U_p_mant_p1_sva_2_X3 [30], FpMul_8U_23U_p_mant_p1_sva_2_X3 [31], FpMul_8U_23U_p_mant_p1_sva_2_X3 [32], FpMul_8U_23U_p_mant_p1_sva_2_X3 [33], FpMul_8U_23U_p_mant_p1_sva_2_X3 [34], FpMul_8U_23U_p_mant_p1_sva_2_X3 [35], FpMul_8U_23U_p_mant_p1_sva_2_X3 [36], FpMul_8U_23U_p_mant_p1_sva_2_X3 [37], FpMul_8U_23U_p_mant_p1_sva_2_X3 [38], FpMul_8U_23U_p_mant_p1_sva_2_X3 [39], FpMul_8U_23U_p_mant_p1_sva_2_X3 [40], FpMul_8U_23U_p_mant_p1_sva_2_X3 [41], FpMul_8U_23U_p_mant_p1_sva_2_X3 [42], FpMul_8U_23U_p_mant_p1_sva_2_X3 [43], FpMul_8U_23U_p_mant_p1_sva_2_X3 [44], FpMul_8U_23U_p_mant_p1_sva_2_X3 [45], FpMul_8U_23U_p_mant_p1_sva_2_X3 [46] } = 0;
  assign { FpMul_8U_23U_p_mant_p1_sva_2_C3 [0], FpMul_8U_23U_p_mant_p1_sva_2_C3 [1], FpMul_8U_23U_p_mant_p1_sva_2_C3 [2], FpMul_8U_23U_p_mant_p1_sva_2_C3 [3], FpMul_8U_23U_p_mant_p1_sva_2_C3 [4], FpMul_8U_23U_p_mant_p1_sva_2_C3 [5], FpMul_8U_23U_p_mant_p1_sva_2_C3 [6], FpMul_8U_23U_p_mant_p1_sva_2_C3 [7], FpMul_8U_23U_p_mant_p1_sva_2_C3 [8], FpMul_8U_23U_p_mant_p1_sva_2_C3 [9], FpMul_8U_23U_p_mant_p1_sva_2_C3 [10], FpMul_8U_23U_p_mant_p1_sva_2_C3 [11], FpMul_8U_23U_p_mant_p1_sva_2_C3 [12], FpMul_8U_23U_p_mant_p1_sva_2_C3 [13], FpMul_8U_23U_p_mant_p1_sva_2_C3 [14], FpMul_8U_23U_p_mant_p1_sva_2_C3 [15], FpMul_8U_23U_p_mant_p1_sva_2_C3 [16], FpMul_8U_23U_p_mant_p1_sva_2_C3 [17], FpMul_8U_23U_p_mant_p1_sva_2_C3 [18], FpMul_8U_23U_p_mant_p1_sva_2_C3 [19], FpMul_8U_23U_p_mant_p1_sva_2_C3 [20], FpMul_8U_23U_p_mant_p1_sva_2_C3 [21], FpMul_8U_23U_p_mant_p1_sva_2_C3 [22], FpMul_8U_23U_p_mant_p1_sva_2_C3 [23], FpMul_8U_23U_p_mant_p1_sva_2_C3 [24], FpMul_8U_23U_p_mant_p1_sva_2_C3 [25], FpMul_8U_23U_p_mant_p1_sva_2_C3 [26], FpMul_8U_23U_p_mant_p1_sva_2_C3 [27], FpMul_8U_23U_p_mant_p1_sva_2_C3 [28], FpMul_8U_23U_p_mant_p1_sva_2_C3 [29], FpMul_8U_23U_p_mant_p1_sva_2_C3 [30], FpMul_8U_23U_p_mant_p1_sva_2_C3 [31], FpMul_8U_23U_p_mant_p1_sva_2_C3 [32], FpMul_8U_23U_p_mant_p1_sva_2_C3 [33], FpMul_8U_23U_p_mant_p1_sva_2_C3 [34], FpMul_8U_23U_p_mant_p1_sva_2_C3 [35], FpMul_8U_23U_p_mant_p1_sva_2_C3 [36], FpMul_8U_23U_p_mant_p1_sva_2_C3 [37], FpMul_8U_23U_p_mant_p1_sva_2_C3 [38], FpMul_8U_23U_p_mant_p1_sva_2_C3 [39], FpMul_8U_23U_p_mant_p1_sva_2_C3 [40], FpMul_8U_23U_p_mant_p1_sva_2_C3 [41], FpMul_8U_23U_p_mant_p1_sva_2_C3 [42], FpMul_8U_23U_p_mant_p1_sva_2_C3 [43], FpMul_8U_23U_p_mant_p1_sva_2_C3 [44], FpMul_8U_23U_p_mant_p1_sva_2_C3 [45], FpMul_8U_23U_p_mant_p1_sva_2_C3 [46] } = 0;
  logic [47:0] FpMul_8U_23U_p_mant_p1_sva_2_C4 ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_sva_2_R4 ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_sva_2_X4 ;
  assign FpMul_8U_23U_p_mant_p1_sva_2_C4 [47] = | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C ;
  assign FpMul_8U_23U_p_mant_p1_sva_2_X4 [47] = | FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X ;
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_T = FpMul_8U_23U_p_mant_p1_sva_2[47] ? ( { 46{ FpMul_8U_23U_p_mant_p1_sva_2_T  [47] }} | FpMul_8U_23U_p_mant_p1_sva_2_T [46:1] ) : ( { 46{ FpMul_8U_23U_p_mant_p1_sva_2_T  [47] }} | FpMul_8U_23U_p_mant_p1_sva_2_T [45:0] );
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_S = FpMul_8U_23U_p_mant_p1_sva_2[47] ? FpMul_8U_23U_p_mant_p1_sva_2_S : FpMul_8U_23U_p_mant_p1_sva_2_S ;
  assign FpMul_8U_23U_p_mant_p1_sva_2_R4 [47] = ( | (FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R | ( FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C & ( { 46{ FpMul_8U_23U_p_mant_p1_sva_2[47] }} & FpMul_8U_23U_p_mant_p1_sva_2_T [46:1] | { 46{ !FpMul_8U_23U_p_mant_p1_sva_2[47] }} & FpMul_8U_23U_p_mant_p1_sva_2_T [45:0] )))) && FpMul_8U_23U_p_mant_p1_sva_2[46:1] != FpMul_8U_23U_p_mant_p1_sva_2[45:0] ;
  assign { FpMul_8U_23U_p_mant_p1_sva_2_R4 [0] } = 0;
  assign { FpMul_8U_23U_p_mant_p1_sva_2_X4 [0] } = 0;
  assign { FpMul_8U_23U_p_mant_p1_sva_2_C4 [0] } = 0;
  assign FpMul_8U_23U_p_mant_p1_sva_2_C4 [46:1] = { 46{ FpMul_8U_23U_p_mant_p1_sva_2[47] }} ;
  assign FpMul_8U_23U_p_mant_p1_sva_2_R4 [46:1] = { 46{ FpMul_8U_23U_p_mant_p1_sva_2[47] }} & ( FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R | ( { 46{ FpMul_8U_23U_p_mant_p1_sva_2_T  [47] }} & FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C ));
  assign FpMul_8U_23U_p_mant_p1_sva_2_X4 [46:1] = { 46{ FpMul_8U_23U_p_mant_p1_sva_2[47] }} & FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_sva_2_C5 ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_sva_2_R5 ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_sva_2_X5 ;
  assign FpMul_8U_23U_p_mant_p1_sva_2_C5 [45:0] = { 46{ !FpMul_8U_23U_p_mant_p1_sva_2[47] }} ;
  assign FpMul_8U_23U_p_mant_p1_sva_2_R5 [45:0] = { 46{ !FpMul_8U_23U_p_mant_p1_sva_2[47] }} & ( FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R | ( { 46{ FpMul_8U_23U_p_mant_p1_sva_2_T  [47] }} & FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C ));
  assign FpMul_8U_23U_p_mant_p1_sva_2_X5 [45:0] = { 46{ !FpMul_8U_23U_p_mant_p1_sva_2[47] }} & FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X ;
  assign FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0 = asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl ? FpMul_8U_23U_else_2_else_if_if_acc_nl : FpMul_8U_23U_p_expo_sva_5;
  logic [0:0] asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl_C0 ;
  logic [0:0] asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl_R0 ;
  logic [0:0] asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl_X0 ;
  assign asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl_C0 = | FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_C ;
  assign asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl_X0 = | FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_X ;
  assign FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_T = asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl ? ( { 8{ asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl_T  }} | FpMul_8U_23U_else_2_else_if_if_acc_nl_T ) : ( { 8{ asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl_T  }} | FpMul_8U_23U_p_expo_sva_5_T );
  assign FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_S = asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl ? FpMul_8U_23U_else_2_else_if_if_acc_nl_S : FpMul_8U_23U_p_expo_sva_5_S ;
  assign asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl_R0 = ( | (FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_R | ( FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_C & ( { 8{ asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl }} & FpMul_8U_23U_else_2_else_if_if_acc_nl_T | { 8{ !asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl }} & FpMul_8U_23U_p_expo_sva_5_T )))) && FpMul_8U_23U_else_2_else_if_if_acc_nl != FpMul_8U_23U_p_expo_sva_5 ;
  logic [7:0] FpMul_8U_23U_else_2_else_if_if_acc_nl_C0 ;
  logic [7:0] FpMul_8U_23U_else_2_else_if_if_acc_nl_R0 ;
  logic [7:0] FpMul_8U_23U_else_2_else_if_if_acc_nl_X0 ;
  assign FpMul_8U_23U_else_2_else_if_if_acc_nl_C0 = { 8{ asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl }} ;
  assign FpMul_8U_23U_else_2_else_if_if_acc_nl_R0 = { 8{ asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl }} & ( FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_R | ( { 8{ asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl_T  }} & FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_C ));
  assign FpMul_8U_23U_else_2_else_if_if_acc_nl_X0 = { 8{ asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl }} & FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_X ;
  logic [7:0] FpMul_8U_23U_p_expo_sva_5_C2 ;
  logic [7:0] FpMul_8U_23U_p_expo_sva_5_R2 ;
  logic [7:0] FpMul_8U_23U_p_expo_sva_5_X2 ;
  assign FpMul_8U_23U_p_expo_sva_5_C2 = { 8{ !asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl }} ;
  assign FpMul_8U_23U_p_expo_sva_5_R2 = { 8{ !asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl }} & ( FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_R | ( { 8{ asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl_T  }} & FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_C ));
  assign FpMul_8U_23U_p_expo_sva_5_X2 = { 8{ !asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl }} & FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_X ;
  assign mux_24_cse = _097_ ? and_95_nl : and_cse;
  logic [0:0] _097__C3 ;
  logic [0:0] _097__R3 ;
  logic [0:0] _097__X3 ;
  assign _097__C3 = | mux_24_cse_C ;
  assign _097__X3 = | mux_24_cse_X ;
  assign mux_24_cse_T = _097_ ? ( { 1{ _097__T  }} | and_95_nl_T ) : ( { 1{ _097__T  }} | and_cse_T );
  assign mux_24_cse_S = _097_ ? and_95_nl_S : and_cse_S ;
  assign _097__R3 = ( | (mux_24_cse_R | ( mux_24_cse_C & ( { 1{ _097_ }} & and_95_nl_T | { 1{ !_097_ }} & and_cse_T )))) && and_95_nl != and_cse ;
  logic [0:0] and_95_nl_C0 ;
  logic [0:0] and_95_nl_R0 ;
  logic [0:0] and_95_nl_X0 ;
  assign and_95_nl_C0 = { 1{ _097_ }} ;
  assign and_95_nl_R0 = { 1{ _097_ }} & ( mux_24_cse_R | ( { 1{ _097__T  }} & mux_24_cse_C ));
  assign and_95_nl_X0 = { 1{ _097_ }} & mux_24_cse_X ;
  logic [0:0] and_cse_C5 ;
  logic [0:0] and_cse_R5 ;
  logic [0:0] and_cse_X5 ;
  assign and_cse_C5 = { 1{ !_097_ }} ;
  assign and_cse_R5 = { 1{ !_097_ }} & ( mux_24_cse_R | ( { 1{ _097__T  }} & mux_24_cse_C ));
  assign and_cse_X5 = { 1{ !_097_ }} & mux_24_cse_X ;
  assign mux_33_nl = _097_ ? and_90_nl : or_tmp_55;
  logic [0:0] _097__C4 ;
  logic [0:0] _097__R4 ;
  logic [0:0] _097__X4 ;
  assign _097__C4 = | mux_33_nl_C ;
  assign _097__X4 = | mux_33_nl_X ;
  assign mux_33_nl_T = _097_ ? ( { 1{ _097__T  }} | and_90_nl_T ) : ( { 1{ _097__T  }} | or_tmp_55_T );
  assign mux_33_nl_S = _097_ ? and_90_nl_S : or_tmp_55_S ;
  assign _097__R4 = ( | (mux_33_nl_R | ( mux_33_nl_C & ( { 1{ _097_ }} & and_90_nl_T | { 1{ !_097_ }} & or_tmp_55_T )))) && and_90_nl != or_tmp_55 ;
  logic [0:0] and_90_nl_C0 ;
  logic [0:0] and_90_nl_R0 ;
  logic [0:0] and_90_nl_X0 ;
  assign and_90_nl_C0 = { 1{ _097_ }} ;
  assign and_90_nl_R0 = { 1{ _097_ }} & ( mux_33_nl_R | ( { 1{ _097__T  }} & mux_33_nl_C ));
  assign and_90_nl_X0 = { 1{ _097_ }} & mux_33_nl_X ;
  logic [0:0] or_tmp_55_C2 ;
  logic [0:0] or_tmp_55_R2 ;
  logic [0:0] or_tmp_55_X2 ;
  assign or_tmp_55_C2 = { 1{ !_097_ }} ;
  assign or_tmp_55_R2 = { 1{ !_097_ }} & ( mux_33_nl_R | ( { 1{ _097__T  }} & mux_33_nl_C ));
  assign or_tmp_55_X2 = { 1{ !_097_ }} & mux_33_nl_X ;
  assign _023_ = _074_ ? chn_a_rsci_d_mxwt[30:0] : FpMul_8U_23U_ua_sva_1_30_0_1;
  logic [0:0] _074__C0 ;
  logic [0:0] _074__R0 ;
  logic [0:0] _074__X0 ;
  assign _074__C0 = | _023__C ;
  assign _074__X0 = | _023__X ;
  assign _023__T = _074_ ? ( { 31{ _074__T  }} | chn_a_rsci_d_mxwt_T [30:0] ) : ( { 31{ _074__T  }} | FpMul_8U_23U_ua_sva_1_30_0_1_T );
  assign _023__S = _074_ ? chn_a_rsci_d_mxwt_S : FpMul_8U_23U_ua_sva_1_30_0_1_S ;
  assign _074__R0 = ( | (_023__R | ( _023__C & ( { 31{ _074_ }} & chn_a_rsci_d_mxwt_T [30:0] | { 31{ !_074_ }} & FpMul_8U_23U_ua_sva_1_30_0_1_T )))) && chn_a_rsci_d_mxwt[30:0] != FpMul_8U_23U_ua_sva_1_30_0_1 ;
  assign { chn_a_rsci_d_mxwt_R4 [31:31] } = 0;
  assign { chn_a_rsci_d_mxwt_X4 [31:31] } = 0;
  assign { chn_a_rsci_d_mxwt_C4 [31:31] } = 0;
  logic [31:0] chn_a_rsci_d_mxwt_C5 ;
  logic [31:0] chn_a_rsci_d_mxwt_R5 ;
  logic [31:0] chn_a_rsci_d_mxwt_X5 ;
  assign chn_a_rsci_d_mxwt_C5 [30:0] = { 31{ _074_ }} ;
  assign chn_a_rsci_d_mxwt_R5 [30:0] = { 31{ _074_ }} & ( _023__R | ( { 31{ _074__T  }} & _023__C ));
  assign chn_a_rsci_d_mxwt_X5 [30:0] = { 31{ _074_ }} & _023__X ;
  logic [30:0] FpMul_8U_23U_ua_sva_1_30_0_1_C1 ;
  logic [30:0] FpMul_8U_23U_ua_sva_1_30_0_1_R1 ;
  logic [30:0] FpMul_8U_23U_ua_sva_1_30_0_1_X1 ;
  assign FpMul_8U_23U_ua_sva_1_30_0_1_C1 = { 31{ !_074_ }} ;
  assign FpMul_8U_23U_ua_sva_1_30_0_1_R1 = { 31{ !_074_ }} & ( _023__R | ( { 31{ _074__T  }} & _023__C ));
  assign FpMul_8U_23U_ua_sva_1_30_0_1_X1 = { 31{ !_074_ }} & _023__X ;
  assign _024_ = _073_ ? chn_b_rsci_d_mxwt[30:0] : FpMul_8U_23U_ub_sva_1_30_0_1;
  logic [0:0] _073__C0 ;
  logic [0:0] _073__R0 ;
  logic [0:0] _073__X0 ;
  assign _073__C0 = | _024__C ;
  assign _073__X0 = | _024__X ;
  assign _024__T = _073_ ? ( { 31{ _073__T  }} | chn_b_rsci_d_mxwt_T [30:0] ) : ( { 31{ _073__T  }} | FpMul_8U_23U_ub_sva_1_30_0_1_T );
  assign _024__S = _073_ ? chn_b_rsci_d_mxwt_S : FpMul_8U_23U_ub_sva_1_30_0_1_S ;
  assign _073__R0 = ( | (_024__R | ( _024__C & ( { 31{ _073_ }} & chn_b_rsci_d_mxwt_T [30:0] | { 31{ !_073_ }} & FpMul_8U_23U_ub_sva_1_30_0_1_T )))) && chn_b_rsci_d_mxwt[30:0] != FpMul_8U_23U_ub_sva_1_30_0_1 ;
  assign { chn_b_rsci_d_mxwt_R3 [31:31] } = 0;
  assign { chn_b_rsci_d_mxwt_X3 [31:31] } = 0;
  assign { chn_b_rsci_d_mxwt_C3 [31:31] } = 0;
  logic [31:0] chn_b_rsci_d_mxwt_C4 ;
  logic [31:0] chn_b_rsci_d_mxwt_R4 ;
  logic [31:0] chn_b_rsci_d_mxwt_X4 ;
  assign chn_b_rsci_d_mxwt_C4 [30:0] = { 31{ _073_ }} ;
  assign chn_b_rsci_d_mxwt_R4 [30:0] = { 31{ _073_ }} & ( _024__R | ( { 31{ _073__T  }} & _024__C ));
  assign chn_b_rsci_d_mxwt_X4 [30:0] = { 31{ _073_ }} & _024__X ;
  logic [30:0] FpMul_8U_23U_ub_sva_1_30_0_1_C1 ;
  logic [30:0] FpMul_8U_23U_ub_sva_1_30_0_1_R1 ;
  logic [30:0] FpMul_8U_23U_ub_sva_1_30_0_1_X1 ;
  assign FpMul_8U_23U_ub_sva_1_30_0_1_C1 = { 31{ !_073_ }} ;
  assign FpMul_8U_23U_ub_sva_1_30_0_1_R1 = { 31{ !_073_ }} & ( _024__R | ( { 31{ _073__T  }} & _024__C ));
  assign FpMul_8U_23U_ub_sva_1_30_0_1_X1 = { 31{ !_073_ }} & _024__X ;
  assign _018_ = _072_ ? _166_ : FpMul_8U_23U_mux_10_itm_3;
  logic [0:0] _072__C0 ;
  logic [0:0] _072__R0 ;
  logic [0:0] _072__X0 ;
  assign _072__C0 = | _018__C ;
  assign _072__X0 = | _018__X ;
  assign _018__T = _072_ ? ( { 1{ _072__T  }} | _166__T ) : ( { 1{ _072__T  }} | FpMul_8U_23U_mux_10_itm_3_T );
  assign _018__S = _072_ ? _166__S : FpMul_8U_23U_mux_10_itm_3_S ;
  assign _072__R0 = ( | (_018__R | ( _018__C & ( { 1{ _072_ }} & _166__T | { 1{ !_072_ }} & FpMul_8U_23U_mux_10_itm_3_T )))) && _166_ != FpMul_8U_23U_mux_10_itm_3 ;
  logic [0:0] _166__C0 ;
  logic [0:0] _166__R0 ;
  logic [0:0] _166__X0 ;
  assign _166__C0 = { 1{ _072_ }} ;
  assign _166__R0 = { 1{ _072_ }} & ( _018__R | ( { 1{ _072__T  }} & _018__C ));
  assign _166__X0 = { 1{ _072_ }} & _018__X ;
  logic [0:0] FpMul_8U_23U_mux_10_itm_3_C0 ;
  logic [0:0] FpMul_8U_23U_mux_10_itm_3_R0 ;
  logic [0:0] FpMul_8U_23U_mux_10_itm_3_X0 ;
  assign FpMul_8U_23U_mux_10_itm_3_C0 = { 1{ !_072_ }} ;
  assign FpMul_8U_23U_mux_10_itm_3_R0 = { 1{ !_072_ }} & ( _018__R | ( { 1{ _072__T  }} & _018__C ));
  assign FpMul_8U_23U_mux_10_itm_3_X0 = { 1{ !_072_ }} & _018__X ;
  assign _014_ = _070_ ? or_45_cse : FpMul_8U_23U_lor_1_lpi_1_dfm_3;
  logic [0:0] _070__C0 ;
  logic [0:0] _070__R0 ;
  logic [0:0] _070__X0 ;
  assign _070__C0 = | _014__C ;
  assign _070__X0 = | _014__X ;
  assign _014__T = _070_ ? ( { 1{ _070__T  }} | or_45_cse_T ) : ( { 1{ _070__T  }} | FpMul_8U_23U_lor_1_lpi_1_dfm_3_T );
  assign _014__S = _070_ ? or_45_cse_S : FpMul_8U_23U_lor_1_lpi_1_dfm_3_S ;
  assign _070__R0 = ( | (_014__R | ( _014__C & ( { 1{ _070_ }} & or_45_cse_T | { 1{ !_070_ }} & FpMul_8U_23U_lor_1_lpi_1_dfm_3_T )))) && or_45_cse != FpMul_8U_23U_lor_1_lpi_1_dfm_3 ;
  logic [0:0] or_45_cse_C2 ;
  logic [0:0] or_45_cse_R2 ;
  logic [0:0] or_45_cse_X2 ;
  assign or_45_cse_C2 = { 1{ _070_ }} ;
  assign or_45_cse_R2 = { 1{ _070_ }} & ( _014__R | ( { 1{ _070__T  }} & _014__C ));
  assign or_45_cse_X2 = { 1{ _070_ }} & _014__X ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_3_C0 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_3_R0 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_3_X0 ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_3_C0 = { 1{ !_070_ }} ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_3_R0 = { 1{ !_070_ }} & ( _014__R | ( { 1{ _070__T  }} & _014__C ));
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_3_X0 = { 1{ !_070_ }} & _014__X ;
  assign _011_ = _069_ ? FpMul_8U_23U_else_2_if_acc_nl[8] : FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs;
  logic [0:0] _069__C0 ;
  logic [0:0] _069__R0 ;
  logic [0:0] _069__X0 ;
  assign _069__C0 = | _011__C ;
  assign _069__X0 = | _011__X ;
  assign _011__T = _069_ ? ( { 1{ _069__T  }} | FpMul_8U_23U_else_2_if_acc_nl_T [8] ) : ( { 1{ _069__T  }} | FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_T );
  assign _011__S = _069_ ? FpMul_8U_23U_else_2_if_acc_nl_S : FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_S ;
  assign _069__R0 = ( | (_011__R | ( _011__C & ( { 1{ _069_ }} & FpMul_8U_23U_else_2_if_acc_nl_T [8] | { 1{ !_069_ }} & FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_T )))) && FpMul_8U_23U_else_2_if_acc_nl[8] != FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs ;
  assign { FpMul_8U_23U_else_2_if_acc_nl_R2 [0], FpMul_8U_23U_else_2_if_acc_nl_R2 [1], FpMul_8U_23U_else_2_if_acc_nl_R2 [2], FpMul_8U_23U_else_2_if_acc_nl_R2 [3], FpMul_8U_23U_else_2_if_acc_nl_R2 [4], FpMul_8U_23U_else_2_if_acc_nl_R2 [5], FpMul_8U_23U_else_2_if_acc_nl_R2 [6], FpMul_8U_23U_else_2_if_acc_nl_R2 [7] } = 0;
  assign { FpMul_8U_23U_else_2_if_acc_nl_X2 [0], FpMul_8U_23U_else_2_if_acc_nl_X2 [1], FpMul_8U_23U_else_2_if_acc_nl_X2 [2], FpMul_8U_23U_else_2_if_acc_nl_X2 [3], FpMul_8U_23U_else_2_if_acc_nl_X2 [4], FpMul_8U_23U_else_2_if_acc_nl_X2 [5], FpMul_8U_23U_else_2_if_acc_nl_X2 [6], FpMul_8U_23U_else_2_if_acc_nl_X2 [7] } = 0;
  assign { FpMul_8U_23U_else_2_if_acc_nl_C2 [0], FpMul_8U_23U_else_2_if_acc_nl_C2 [1], FpMul_8U_23U_else_2_if_acc_nl_C2 [2], FpMul_8U_23U_else_2_if_acc_nl_C2 [3], FpMul_8U_23U_else_2_if_acc_nl_C2 [4], FpMul_8U_23U_else_2_if_acc_nl_C2 [5], FpMul_8U_23U_else_2_if_acc_nl_C2 [6], FpMul_8U_23U_else_2_if_acc_nl_C2 [7] } = 0;
  logic [8:0] FpMul_8U_23U_else_2_if_acc_nl_C3 ;
  logic [8:0] FpMul_8U_23U_else_2_if_acc_nl_R3 ;
  logic [8:0] FpMul_8U_23U_else_2_if_acc_nl_X3 ;
  assign FpMul_8U_23U_else_2_if_acc_nl_C3 [8] = { 1{ _069_ }} ;
  assign FpMul_8U_23U_else_2_if_acc_nl_R3 [8] = { 1{ _069_ }} & ( _011__R | ( { 1{ _069__T  }} & _011__C ));
  assign FpMul_8U_23U_else_2_if_acc_nl_X3 [8] = { 1{ _069_ }} & _011__X ;
  logic [0:0] FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_C0 ;
  logic [0:0] FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_R0 ;
  logic [0:0] FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_X0 ;
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_C0 = { 1{ !_069_ }} ;
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_R0 = { 1{ !_069_ }} & ( _011__R | ( { 1{ _069__T  }} & _011__C ));
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_X0 = { 1{ !_069_ }} & _011__X ;
  assign _021_ = _066_ ? FpMul_8U_23U_p_mant_p1_mul_tmp : FpMul_8U_23U_p_mant_p1_sva;
  logic [0:0] _066__C0 ;
  logic [0:0] _066__R0 ;
  logic [0:0] _066__X0 ;
  assign _066__C0 = | _021__C ;
  assign _066__X0 = | _021__X ;
  assign _021__T = _066_ ? ( { 48{ _066__T  }} | FpMul_8U_23U_p_mant_p1_mul_tmp_T ) : ( { 48{ _066__T  }} | FpMul_8U_23U_p_mant_p1_sva_T );
  assign _021__S = _066_ ? FpMul_8U_23U_p_mant_p1_mul_tmp_S : FpMul_8U_23U_p_mant_p1_sva_S ;
  assign _066__R0 = ( | (_021__R | ( _021__C & ( { 48{ _066_ }} & FpMul_8U_23U_p_mant_p1_mul_tmp_T | { 48{ !_066_ }} & FpMul_8U_23U_p_mant_p1_sva_T )))) && FpMul_8U_23U_p_mant_p1_mul_tmp != FpMul_8U_23U_p_mant_p1_sva ;
  assign { FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [0], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [1], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [2], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [3], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [4], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [5], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [6], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [7], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [8], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [9], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [10], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [11], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [12], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [13], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [14], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [15], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [16], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [17], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [18], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [19], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [20], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [21], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [22], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [23], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [24], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [25], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [26], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [27], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [28], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [29], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [30], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [31], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [32], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [33], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [34], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [35], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [36], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [37], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [38], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [39], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [40], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [41], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [42], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [43], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [44], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [45], FpMul_8U_23U_p_mant_p1_mul_tmp_R0 [46] } = 0;
  assign { FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [0], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [1], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [2], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [3], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [4], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [5], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [6], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [7], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [8], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [9], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [10], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [11], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [12], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [13], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [14], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [15], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [16], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [17], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [18], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [19], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [20], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [21], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [22], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [23], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [24], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [25], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [26], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [27], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [28], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [29], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [30], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [31], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [32], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [33], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [34], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [35], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [36], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [37], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [38], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [39], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [40], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [41], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [42], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [43], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [44], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [45], FpMul_8U_23U_p_mant_p1_mul_tmp_X0 [46] } = 0;
  assign { FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [0], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [1], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [2], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [3], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [4], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [5], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [6], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [7], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [8], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [9], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [10], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [11], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [12], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [13], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [14], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [15], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [16], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [17], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [18], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [19], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [20], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [21], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [22], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [23], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [24], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [25], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [26], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [27], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [28], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [29], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [30], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [31], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [32], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [33], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [34], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [35], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [36], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [37], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [38], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [39], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [40], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [41], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [42], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [43], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [44], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [45], FpMul_8U_23U_p_mant_p1_mul_tmp_C0 [46] } = 0;
  logic [47:0] FpMul_8U_23U_p_mant_p1_mul_tmp_C1 ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_mul_tmp_R1 ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_mul_tmp_X1 ;
  assign FpMul_8U_23U_p_mant_p1_mul_tmp_C1 = { 48{ _066_ }} ;
  assign FpMul_8U_23U_p_mant_p1_mul_tmp_R1 = { 48{ _066_ }} & ( _021__R | ( { 48{ _066__T  }} & _021__C ));
  assign FpMul_8U_23U_p_mant_p1_mul_tmp_X1 = { 48{ _066_ }} & _021__X ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_sva_C0 ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_sva_R0 ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_sva_X0 ;
  assign FpMul_8U_23U_p_mant_p1_sva_C0 = { 48{ !_066_ }} ;
  assign FpMul_8U_23U_p_mant_p1_sva_R0 = { 48{ !_066_ }} & ( _021__R | ( { 48{ _066__T  }} & _021__C ));
  assign FpMul_8U_23U_p_mant_p1_sva_X0 = { 48{ !_066_ }} & _021__X ;
  assign _038_ = and_45_rgt ? FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs : FpMul_8U_23U_else_2_if_acc_nl[8];
  logic [0:0] and_45_rgt_C1 ;
  logic [0:0] and_45_rgt_R1 ;
  logic [0:0] and_45_rgt_X1 ;
  assign and_45_rgt_C1 = | _038__C ;
  assign and_45_rgt_X1 = | _038__X ;
  assign _038__T = and_45_rgt ? ( { 1{ and_45_rgt_T  }} | FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_T ) : ( { 1{ and_45_rgt_T  }} | FpMul_8U_23U_else_2_if_acc_nl_T [8] );
  assign _038__S = and_45_rgt ? FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_S : FpMul_8U_23U_else_2_if_acc_nl_S ;
  assign and_45_rgt_R1 = ( | (_038__R | ( _038__C & ( { 1{ and_45_rgt }} & FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_T | { 1{ !and_45_rgt }} & FpMul_8U_23U_else_2_if_acc_nl_T [8] )))) && FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs != FpMul_8U_23U_else_2_if_acc_nl[8] ;
  assign { FpMul_8U_23U_else_2_if_acc_nl_R3 [0], FpMul_8U_23U_else_2_if_acc_nl_R3 [1], FpMul_8U_23U_else_2_if_acc_nl_R3 [2], FpMul_8U_23U_else_2_if_acc_nl_R3 [3], FpMul_8U_23U_else_2_if_acc_nl_R3 [4], FpMul_8U_23U_else_2_if_acc_nl_R3 [5], FpMul_8U_23U_else_2_if_acc_nl_R3 [6], FpMul_8U_23U_else_2_if_acc_nl_R3 [7] } = 0;
  assign { FpMul_8U_23U_else_2_if_acc_nl_X3 [0], FpMul_8U_23U_else_2_if_acc_nl_X3 [1], FpMul_8U_23U_else_2_if_acc_nl_X3 [2], FpMul_8U_23U_else_2_if_acc_nl_X3 [3], FpMul_8U_23U_else_2_if_acc_nl_X3 [4], FpMul_8U_23U_else_2_if_acc_nl_X3 [5], FpMul_8U_23U_else_2_if_acc_nl_X3 [6], FpMul_8U_23U_else_2_if_acc_nl_X3 [7] } = 0;
  assign { FpMul_8U_23U_else_2_if_acc_nl_C3 [0], FpMul_8U_23U_else_2_if_acc_nl_C3 [1], FpMul_8U_23U_else_2_if_acc_nl_C3 [2], FpMul_8U_23U_else_2_if_acc_nl_C3 [3], FpMul_8U_23U_else_2_if_acc_nl_C3 [4], FpMul_8U_23U_else_2_if_acc_nl_C3 [5], FpMul_8U_23U_else_2_if_acc_nl_C3 [6], FpMul_8U_23U_else_2_if_acc_nl_C3 [7] } = 0;
  logic [0:0] FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_C1 ;
  logic [0:0] FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_R1 ;
  logic [0:0] FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_X1 ;
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_C1 = { 1{ and_45_rgt }} ;
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_R1 = { 1{ and_45_rgt }} & ( _038__R | ( { 1{ and_45_rgt_T  }} & _038__C ));
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_X1 = { 1{ and_45_rgt }} & _038__X ;
  logic [8:0] FpMul_8U_23U_else_2_if_acc_nl_C4 ;
  logic [8:0] FpMul_8U_23U_else_2_if_acc_nl_R4 ;
  logic [8:0] FpMul_8U_23U_else_2_if_acc_nl_X4 ;
  assign FpMul_8U_23U_else_2_if_acc_nl_C4 [8] = { 1{ !and_45_rgt }} ;
  assign FpMul_8U_23U_else_2_if_acc_nl_R4 [8] = { 1{ !and_45_rgt }} & ( _038__R | ( { 1{ and_45_rgt_T  }} & _038__C ));
  assign FpMul_8U_23U_else_2_if_acc_nl_X4 [8] = { 1{ !and_45_rgt }} & _038__X ;
  assign _012_ = _065_ ? _038_ : FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2;
  logic [0:0] _065__C0 ;
  logic [0:0] _065__R0 ;
  logic [0:0] _065__X0 ;
  assign _065__C0 = | _012__C ;
  assign _065__X0 = | _012__X ;
  assign _012__T = _065_ ? ( { 1{ _065__T  }} | _038__T ) : ( { 1{ _065__T  }} | FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_T );
  assign _012__S = _065_ ? _038__S : FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_S ;
  assign _065__R0 = ( | (_012__R | ( _012__C & ( { 1{ _065_ }} & _038__T | { 1{ !_065_ }} & FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_T )))) && _038_ != FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2 ;
  logic [0:0] _038__C0 ;
  logic [0:0] _038__R0 ;
  logic [0:0] _038__X0 ;
  assign _038__C0 = { 1{ _065_ }} ;
  assign _038__R0 = { 1{ _065_ }} & ( _012__R | ( { 1{ _065__T  }} & _012__C ));
  assign _038__X0 = { 1{ _065_ }} & _012__X ;
  logic [0:0] FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_C1 ;
  logic [0:0] FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_R1 ;
  logic [0:0] FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_X1 ;
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_C1 = { 1{ !_065_ }} ;
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_R1 = { 1{ !_065_ }} & ( _012__R | ( { 1{ _065__T  }} & _012__C ));
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_X1 = { 1{ !_065_ }} & _012__X ;
  assign _015_ = _063_ ? FpMul_8U_23U_lor_1_lpi_1_dfm_3 : FpMul_8U_23U_lor_1_lpi_1_dfm_4;
  logic [0:0] _063__C0 ;
  logic [0:0] _063__R0 ;
  logic [0:0] _063__X0 ;
  assign _063__C0 = | _015__C ;
  assign _063__X0 = | _015__X ;
  assign _015__T = _063_ ? ( { 1{ _063__T  }} | FpMul_8U_23U_lor_1_lpi_1_dfm_3_T ) : ( { 1{ _063__T  }} | FpMul_8U_23U_lor_1_lpi_1_dfm_4_T );
  assign _015__S = _063_ ? FpMul_8U_23U_lor_1_lpi_1_dfm_3_S : FpMul_8U_23U_lor_1_lpi_1_dfm_4_S ;
  assign _063__R0 = ( | (_015__R | ( _015__C & ( { 1{ _063_ }} & FpMul_8U_23U_lor_1_lpi_1_dfm_3_T | { 1{ !_063_ }} & FpMul_8U_23U_lor_1_lpi_1_dfm_4_T )))) && FpMul_8U_23U_lor_1_lpi_1_dfm_3 != FpMul_8U_23U_lor_1_lpi_1_dfm_4 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_3_C1 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_3_R1 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_3_X1 ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_3_C1 = { 1{ _063_ }} ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_3_R1 = { 1{ _063_ }} & ( _015__R | ( { 1{ _063__T  }} & _015__C ));
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_3_X1 = { 1{ _063_ }} & _015__X ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_4_C2 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_4_R2 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_4_X2 ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_4_C2 = { 1{ !_063_ }} ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_4_R2 = { 1{ !_063_ }} & ( _015__R | ( { 1{ _063__T  }} & _015__C ));
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_4_X2 = { 1{ !_063_ }} & _015__X ;
  assign _040_ = and_dcpl_26 ? FpMul_8U_23U_ua_sva_1_30_0_1[22:0] : FpMul_8U_23U_ub_sva_1_30_0_1[22:0];
  logic [0:0] and_dcpl_26_C1 ;
  logic [0:0] and_dcpl_26_R1 ;
  logic [0:0] and_dcpl_26_X1 ;
  assign and_dcpl_26_C1 = | _040__C ;
  assign and_dcpl_26_X1 = | _040__X ;
  assign _040__T = and_dcpl_26 ? ( { 23{ and_dcpl_26_T  }} | FpMul_8U_23U_ua_sva_1_30_0_1_T [22:0] ) : ( { 23{ and_dcpl_26_T  }} | FpMul_8U_23U_ub_sva_1_30_0_1_T [22:0] );
  assign _040__S = and_dcpl_26 ? FpMul_8U_23U_ua_sva_1_30_0_1_S : FpMul_8U_23U_ub_sva_1_30_0_1_S ;
  assign and_dcpl_26_R1 = ( | (_040__R | ( _040__C & ( { 23{ and_dcpl_26 }} & FpMul_8U_23U_ua_sva_1_30_0_1_T [22:0] | { 23{ !and_dcpl_26 }} & FpMul_8U_23U_ub_sva_1_30_0_1_T [22:0] )))) && FpMul_8U_23U_ua_sva_1_30_0_1[22:0] != FpMul_8U_23U_ub_sva_1_30_0_1[22:0] ;
  logic [30:0] FpMul_8U_23U_ua_sva_1_30_0_1_C2 ;
  logic [30:0] FpMul_8U_23U_ua_sva_1_30_0_1_R2 ;
  logic [30:0] FpMul_8U_23U_ua_sva_1_30_0_1_X2 ;
  assign FpMul_8U_23U_ua_sva_1_30_0_1_C2 [22:0] = { 23{ and_dcpl_26 }} ;
  assign FpMul_8U_23U_ua_sva_1_30_0_1_R2 [22:0] = { 23{ and_dcpl_26 }} & ( _040__R | ( { 23{ and_dcpl_26_T  }} & _040__C ));
  assign FpMul_8U_23U_ua_sva_1_30_0_1_X2 [22:0] = { 23{ and_dcpl_26 }} & _040__X ;
  logic [30:0] FpMul_8U_23U_ub_sva_1_30_0_1_C2 ;
  logic [30:0] FpMul_8U_23U_ub_sva_1_30_0_1_R2 ;
  logic [30:0] FpMul_8U_23U_ub_sva_1_30_0_1_X2 ;
  assign FpMul_8U_23U_ub_sva_1_30_0_1_C2 [22:0] = { 23{ !and_dcpl_26 }} ;
  assign FpMul_8U_23U_ub_sva_1_30_0_1_R2 [22:0] = { 23{ !and_dcpl_26 }} & ( _040__R | ( { 23{ and_dcpl_26_T  }} & _040__C ));
  assign FpMul_8U_23U_ub_sva_1_30_0_1_X2 [22:0] = { 23{ !and_dcpl_26 }} & _040__X ;
  assign _007_ = _062_ ? _040_ : FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2;
  logic [0:0] _062__C0 ;
  logic [0:0] _062__R0 ;
  logic [0:0] _062__X0 ;
  assign _062__C0 = | _007__C ;
  assign _062__X0 = | _007__X ;
  assign _007__T = _062_ ? ( { 23{ _062__T  }} | _040__T ) : ( { 23{ _062__T  }} | FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_T );
  assign _007__S = _062_ ? _040__S : FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_S ;
  assign _062__R0 = ( | (_007__R | ( _007__C & ( { 23{ _062_ }} & _040__T | { 23{ !_062_ }} & FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_T )))) && _040_ != FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2 ;
  logic [22:0] _040__C0 ;
  logic [22:0] _040__R0 ;
  logic [22:0] _040__X0 ;
  assign _040__C0 = { 23{ _062_ }} ;
  assign _040__R0 = { 23{ _062_ }} & ( _007__R | ( { 23{ _062__T  }} & _007__C ));
  assign _040__X0 = { 23{ _062_ }} & _007__X ;
  logic [22:0] FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_C0 ;
  logic [22:0] FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_R0 ;
  logic [22:0] FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_X0 ;
  assign FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_C0 = { 23{ !_062_ }} ;
  assign FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_R0 = { 23{ !_062_ }} & ( _007__R | ( { 23{ _062__T  }} & _007__C ));
  assign FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_X0 = { 23{ !_062_ }} & _007__X ;
  assign _017_ = IsNaN_8U_23U_1_aelse_and_cse ? FpMul_8U_23U_lor_1_lpi_1_dfm_st_3 : FpMul_8U_23U_lor_1_lpi_1_dfm_st_4;
  logic [0:0] IsNaN_8U_23U_1_aelse_and_cse_C0 ;
  logic [0:0] IsNaN_8U_23U_1_aelse_and_cse_R0 ;
  logic [0:0] IsNaN_8U_23U_1_aelse_and_cse_X0 ;
  assign IsNaN_8U_23U_1_aelse_and_cse_C0 = | _017__C ;
  assign IsNaN_8U_23U_1_aelse_and_cse_X0 = | _017__X ;
  assign _017__T = IsNaN_8U_23U_1_aelse_and_cse ? ( { 1{ IsNaN_8U_23U_1_aelse_and_cse_T  }} | FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_T ) : ( { 1{ IsNaN_8U_23U_1_aelse_and_cse_T  }} | FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_T );
  assign _017__S = IsNaN_8U_23U_1_aelse_and_cse ? FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_S : FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_S ;
  assign IsNaN_8U_23U_1_aelse_and_cse_R0 = ( | (_017__R | ( _017__C & ( { 1{ IsNaN_8U_23U_1_aelse_and_cse }} & FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_T | { 1{ !IsNaN_8U_23U_1_aelse_and_cse }} & FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_T )))) && FpMul_8U_23U_lor_1_lpi_1_dfm_st_3 != FpMul_8U_23U_lor_1_lpi_1_dfm_st_4 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_C6 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_R6 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_X6 ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_C6 = { 1{ IsNaN_8U_23U_1_aelse_and_cse }} ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_R6 = { 1{ IsNaN_8U_23U_1_aelse_and_cse }} & ( _017__R | ( { 1{ IsNaN_8U_23U_1_aelse_and_cse_T  }} & _017__C ));
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_X6 = { 1{ IsNaN_8U_23U_1_aelse_and_cse }} & _017__X ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_C4 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_R4 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_X4 ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_C4 = { 1{ !IsNaN_8U_23U_1_aelse_and_cse }} ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_R4 = { 1{ !IsNaN_8U_23U_1_aelse_and_cse }} & ( _017__R | ( { 1{ IsNaN_8U_23U_1_aelse_and_cse_T  }} & _017__C ));
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_X4 = { 1{ !IsNaN_8U_23U_1_aelse_and_cse }} & _017__X ;
  assign _019_ = IsNaN_8U_23U_1_aelse_and_cse ? FpMul_8U_23U_mux_10_itm_3 : FpMul_8U_23U_mux_10_itm_4;
  logic [0:0] IsNaN_8U_23U_1_aelse_and_cse_C1 ;
  logic [0:0] IsNaN_8U_23U_1_aelse_and_cse_R1 ;
  logic [0:0] IsNaN_8U_23U_1_aelse_and_cse_X1 ;
  assign IsNaN_8U_23U_1_aelse_and_cse_C1 = | _019__C ;
  assign IsNaN_8U_23U_1_aelse_and_cse_X1 = | _019__X ;
  assign _019__T = IsNaN_8U_23U_1_aelse_and_cse ? ( { 1{ IsNaN_8U_23U_1_aelse_and_cse_T  }} | FpMul_8U_23U_mux_10_itm_3_T ) : ( { 1{ IsNaN_8U_23U_1_aelse_and_cse_T  }} | FpMul_8U_23U_mux_10_itm_4_T );
  assign _019__S = IsNaN_8U_23U_1_aelse_and_cse ? FpMul_8U_23U_mux_10_itm_3_S : FpMul_8U_23U_mux_10_itm_4_S ;
  assign IsNaN_8U_23U_1_aelse_and_cse_R1 = ( | (_019__R | ( _019__C & ( { 1{ IsNaN_8U_23U_1_aelse_and_cse }} & FpMul_8U_23U_mux_10_itm_3_T | { 1{ !IsNaN_8U_23U_1_aelse_and_cse }} & FpMul_8U_23U_mux_10_itm_4_T )))) && FpMul_8U_23U_mux_10_itm_3 != FpMul_8U_23U_mux_10_itm_4 ;
  logic [0:0] FpMul_8U_23U_mux_10_itm_3_C1 ;
  logic [0:0] FpMul_8U_23U_mux_10_itm_3_R1 ;
  logic [0:0] FpMul_8U_23U_mux_10_itm_3_X1 ;
  assign FpMul_8U_23U_mux_10_itm_3_C1 = { 1{ IsNaN_8U_23U_1_aelse_and_cse }} ;
  assign FpMul_8U_23U_mux_10_itm_3_R1 = { 1{ IsNaN_8U_23U_1_aelse_and_cse }} & ( _019__R | ( { 1{ IsNaN_8U_23U_1_aelse_and_cse_T  }} & _019__C ));
  assign FpMul_8U_23U_mux_10_itm_3_X1 = { 1{ IsNaN_8U_23U_1_aelse_and_cse }} & _019__X ;
  logic [0:0] FpMul_8U_23U_mux_10_itm_4_C0 ;
  logic [0:0] FpMul_8U_23U_mux_10_itm_4_R0 ;
  logic [0:0] FpMul_8U_23U_mux_10_itm_4_X0 ;
  assign FpMul_8U_23U_mux_10_itm_4_C0 = { 1{ !IsNaN_8U_23U_1_aelse_and_cse }} ;
  assign FpMul_8U_23U_mux_10_itm_4_R0 = { 1{ !IsNaN_8U_23U_1_aelse_and_cse }} & ( _019__R | ( { 1{ IsNaN_8U_23U_1_aelse_and_cse_T  }} & _019__C ));
  assign FpMul_8U_23U_mux_10_itm_4_X0 = { 1{ !IsNaN_8U_23U_1_aelse_and_cse }} & _019__X ;
  assign _027_ = IsNaN_8U_23U_1_aelse_and_cse ? IsNaN_8U_23U_land_lpi_1_dfm_st_3 : IsNaN_8U_23U_land_lpi_1_dfm_4;
  logic [0:0] IsNaN_8U_23U_1_aelse_and_cse_C2 ;
  logic [0:0] IsNaN_8U_23U_1_aelse_and_cse_R2 ;
  logic [0:0] IsNaN_8U_23U_1_aelse_and_cse_X2 ;
  assign IsNaN_8U_23U_1_aelse_and_cse_C2 = | _027__C ;
  assign IsNaN_8U_23U_1_aelse_and_cse_X2 = | _027__X ;
  assign _027__T = IsNaN_8U_23U_1_aelse_and_cse ? ( { 1{ IsNaN_8U_23U_1_aelse_and_cse_T  }} | IsNaN_8U_23U_land_lpi_1_dfm_st_3_T ) : ( { 1{ IsNaN_8U_23U_1_aelse_and_cse_T  }} | IsNaN_8U_23U_land_lpi_1_dfm_4_T );
  assign _027__S = IsNaN_8U_23U_1_aelse_and_cse ? IsNaN_8U_23U_land_lpi_1_dfm_st_3_S : IsNaN_8U_23U_land_lpi_1_dfm_4_S ;
  assign IsNaN_8U_23U_1_aelse_and_cse_R2 = ( | (_027__R | ( _027__C & ( { 1{ IsNaN_8U_23U_1_aelse_and_cse }} & IsNaN_8U_23U_land_lpi_1_dfm_st_3_T | { 1{ !IsNaN_8U_23U_1_aelse_and_cse }} & IsNaN_8U_23U_land_lpi_1_dfm_4_T )))) && IsNaN_8U_23U_land_lpi_1_dfm_st_3 != IsNaN_8U_23U_land_lpi_1_dfm_4 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_3_C9 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_3_R9 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_3_X9 ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_C9 = { 1{ IsNaN_8U_23U_1_aelse_and_cse }} ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_R9 = { 1{ IsNaN_8U_23U_1_aelse_and_cse }} & ( _027__R | ( { 1{ IsNaN_8U_23U_1_aelse_and_cse_T  }} & _027__C ));
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_X9 = { 1{ IsNaN_8U_23U_1_aelse_and_cse }} & _027__X ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_4_C3 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_4_R3 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_4_X3 ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_4_C3 = { 1{ !IsNaN_8U_23U_1_aelse_and_cse }} ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_4_R3 = { 1{ !IsNaN_8U_23U_1_aelse_and_cse }} & ( _027__R | ( { 1{ IsNaN_8U_23U_1_aelse_and_cse_T  }} & _027__C ));
  assign IsNaN_8U_23U_land_lpi_1_dfm_4_X3 = { 1{ !IsNaN_8U_23U_1_aelse_and_cse }} & _027__X ;
  assign _026_ = IsNaN_8U_23U_1_aelse_and_cse ? IsNaN_8U_23U_1_land_lpi_1_dfm_3 : IsNaN_8U_23U_1_land_lpi_1_dfm_4;
  logic [0:0] IsNaN_8U_23U_1_aelse_and_cse_C3 ;
  logic [0:0] IsNaN_8U_23U_1_aelse_and_cse_R3 ;
  logic [0:0] IsNaN_8U_23U_1_aelse_and_cse_X3 ;
  assign IsNaN_8U_23U_1_aelse_and_cse_C3 = | _026__C ;
  assign IsNaN_8U_23U_1_aelse_and_cse_X3 = | _026__X ;
  assign _026__T = IsNaN_8U_23U_1_aelse_and_cse ? ( { 1{ IsNaN_8U_23U_1_aelse_and_cse_T  }} | IsNaN_8U_23U_1_land_lpi_1_dfm_3_T ) : ( { 1{ IsNaN_8U_23U_1_aelse_and_cse_T  }} | IsNaN_8U_23U_1_land_lpi_1_dfm_4_T );
  assign _026__S = IsNaN_8U_23U_1_aelse_and_cse ? IsNaN_8U_23U_1_land_lpi_1_dfm_3_S : IsNaN_8U_23U_1_land_lpi_1_dfm_4_S ;
  assign IsNaN_8U_23U_1_aelse_and_cse_R3 = ( | (_026__R | ( _026__C & ( { 1{ IsNaN_8U_23U_1_aelse_and_cse }} & IsNaN_8U_23U_1_land_lpi_1_dfm_3_T | { 1{ !IsNaN_8U_23U_1_aelse_and_cse }} & IsNaN_8U_23U_1_land_lpi_1_dfm_4_T )))) && IsNaN_8U_23U_1_land_lpi_1_dfm_3 != IsNaN_8U_23U_1_land_lpi_1_dfm_4 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_C7 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_R7 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_X7 ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_C7 = { 1{ IsNaN_8U_23U_1_aelse_and_cse }} ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_R7 = { 1{ IsNaN_8U_23U_1_aelse_and_cse }} & ( _026__R | ( { 1{ IsNaN_8U_23U_1_aelse_and_cse_T  }} & _026__C ));
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_X7 = { 1{ IsNaN_8U_23U_1_aelse_and_cse }} & _026__X ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_4_C2 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_4_R2 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_4_X2 ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_4_C2 = { 1{ !IsNaN_8U_23U_1_aelse_and_cse }} ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_4_R2 = { 1{ !IsNaN_8U_23U_1_aelse_and_cse }} & ( _026__R | ( { 1{ IsNaN_8U_23U_1_aelse_and_cse_T  }} & _026__C ));
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_4_X2 = { 1{ !IsNaN_8U_23U_1_aelse_and_cse }} & _026__X ;
  assign _043_ = and_dcpl_26 ? FpMul_8U_23U_ua_sva_1_30_0_1[30:23] : FpMul_8U_23U_ub_sva_1_30_0_1[30:23];
  logic [0:0] and_dcpl_26_C2 ;
  logic [0:0] and_dcpl_26_R2 ;
  logic [0:0] and_dcpl_26_X2 ;
  assign and_dcpl_26_C2 = | _043__C ;
  assign and_dcpl_26_X2 = | _043__X ;
  assign _043__T = and_dcpl_26 ? ( { 8{ and_dcpl_26_T  }} | FpMul_8U_23U_ua_sva_1_30_0_1_T [30:23] ) : ( { 8{ and_dcpl_26_T  }} | FpMul_8U_23U_ub_sva_1_30_0_1_T [30:23] );
  assign _043__S = and_dcpl_26 ? FpMul_8U_23U_ua_sva_1_30_0_1_S : FpMul_8U_23U_ub_sva_1_30_0_1_S ;
  assign and_dcpl_26_R2 = ( | (_043__R | ( _043__C & ( { 8{ and_dcpl_26 }} & FpMul_8U_23U_ua_sva_1_30_0_1_T [30:23] | { 8{ !and_dcpl_26 }} & FpMul_8U_23U_ub_sva_1_30_0_1_T [30:23] )))) && FpMul_8U_23U_ua_sva_1_30_0_1[30:23] != FpMul_8U_23U_ub_sva_1_30_0_1[30:23] ;
  assign FpMul_8U_23U_ua_sva_1_30_0_1_C2 [30:23] = { 8{ and_dcpl_26 }} ;
  assign FpMul_8U_23U_ua_sva_1_30_0_1_R2 [30:23] = { 8{ and_dcpl_26 }} & ( _043__R | ( { 8{ and_dcpl_26_T  }} & _043__C ));
  assign FpMul_8U_23U_ua_sva_1_30_0_1_X2 [30:23] = { 8{ and_dcpl_26 }} & _043__X ;
  assign FpMul_8U_23U_ub_sva_1_30_0_1_C2 [30:23] = { 8{ !and_dcpl_26 }} ;
  assign FpMul_8U_23U_ub_sva_1_30_0_1_R2 [30:23] = { 8{ !and_dcpl_26 }} & ( _043__R | ( { 8{ and_dcpl_26_T  }} & _043__C ));
  assign FpMul_8U_23U_ub_sva_1_30_0_1_X2 [30:23] = { 8{ !and_dcpl_26 }} & _043__X ;
  assign _008_ = _061_ ? _043_ : FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2;
  logic [0:0] _061__C0 ;
  logic [0:0] _061__R0 ;
  logic [0:0] _061__X0 ;
  assign _061__C0 = | _008__C ;
  assign _061__X0 = | _008__X ;
  assign _008__T = _061_ ? ( { 8{ _061__T  }} | _043__T ) : ( { 8{ _061__T  }} | FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_T );
  assign _008__S = _061_ ? _043__S : FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_S ;
  assign _061__R0 = ( | (_008__R | ( _008__C & ( { 8{ _061_ }} & _043__T | { 8{ !_061_ }} & FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_T )))) && _043_ != FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2 ;
  logic [7:0] _043__C0 ;
  logic [7:0] _043__R0 ;
  logic [7:0] _043__X0 ;
  assign _043__C0 = { 8{ _061_ }} ;
  assign _043__R0 = { 8{ _061_ }} & ( _008__R | ( { 8{ _061__T  }} & _008__C ));
  assign _043__X0 = { 8{ _061_ }} & _008__X ;
  logic [7:0] FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_C0 ;
  logic [7:0] FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_R0 ;
  logic [7:0] FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_X0 ;
  assign FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_C0 = { 8{ !_061_ }} ;
  assign FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_R0 = { 8{ !_061_ }} & ( _008__R | ( { 8{ _061__T  }} & _008__C ));
  assign FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_X0 = { 8{ !_061_ }} & _008__X ;
  assign _013_ = _059_ ? FpMul_8U_23U_else_2_if_acc_nl[8] : FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2;
  logic [0:0] _059__C0 ;
  logic [0:0] _059__R0 ;
  logic [0:0] _059__X0 ;
  assign _059__C0 = | _013__C ;
  assign _059__X0 = | _013__X ;
  assign _013__T = _059_ ? ( { 1{ _059__T  }} | FpMul_8U_23U_else_2_if_acc_nl_T [8] ) : ( { 1{ _059__T  }} | FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_T );
  assign _013__S = _059_ ? FpMul_8U_23U_else_2_if_acc_nl_S : FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_S ;
  assign _059__R0 = ( | (_013__R | ( _013__C & ( { 1{ _059_ }} & FpMul_8U_23U_else_2_if_acc_nl_T [8] | { 1{ !_059_ }} & FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_T )))) && FpMul_8U_23U_else_2_if_acc_nl[8] != FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2 ;
  assign { FpMul_8U_23U_else_2_if_acc_nl_R4 [0], FpMul_8U_23U_else_2_if_acc_nl_R4 [1], FpMul_8U_23U_else_2_if_acc_nl_R4 [2], FpMul_8U_23U_else_2_if_acc_nl_R4 [3], FpMul_8U_23U_else_2_if_acc_nl_R4 [4], FpMul_8U_23U_else_2_if_acc_nl_R4 [5], FpMul_8U_23U_else_2_if_acc_nl_R4 [6], FpMul_8U_23U_else_2_if_acc_nl_R4 [7] } = 0;
  assign { FpMul_8U_23U_else_2_if_acc_nl_X4 [0], FpMul_8U_23U_else_2_if_acc_nl_X4 [1], FpMul_8U_23U_else_2_if_acc_nl_X4 [2], FpMul_8U_23U_else_2_if_acc_nl_X4 [3], FpMul_8U_23U_else_2_if_acc_nl_X4 [4], FpMul_8U_23U_else_2_if_acc_nl_X4 [5], FpMul_8U_23U_else_2_if_acc_nl_X4 [6], FpMul_8U_23U_else_2_if_acc_nl_X4 [7] } = 0;
  assign { FpMul_8U_23U_else_2_if_acc_nl_C4 [0], FpMul_8U_23U_else_2_if_acc_nl_C4 [1], FpMul_8U_23U_else_2_if_acc_nl_C4 [2], FpMul_8U_23U_else_2_if_acc_nl_C4 [3], FpMul_8U_23U_else_2_if_acc_nl_C4 [4], FpMul_8U_23U_else_2_if_acc_nl_C4 [5], FpMul_8U_23U_else_2_if_acc_nl_C4 [6], FpMul_8U_23U_else_2_if_acc_nl_C4 [7] } = 0;
  logic [8:0] FpMul_8U_23U_else_2_if_acc_nl_C5 ;
  logic [8:0] FpMul_8U_23U_else_2_if_acc_nl_R5 ;
  logic [8:0] FpMul_8U_23U_else_2_if_acc_nl_X5 ;
  assign FpMul_8U_23U_else_2_if_acc_nl_C5 [8] = { 1{ _059_ }} ;
  assign FpMul_8U_23U_else_2_if_acc_nl_R5 [8] = { 1{ _059_ }} & ( _013__R | ( { 1{ _059__T  }} & _013__C ));
  assign FpMul_8U_23U_else_2_if_acc_nl_X5 [8] = { 1{ _059_ }} & _013__X ;
  logic [0:0] FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_C1 ;
  logic [0:0] FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_R1 ;
  logic [0:0] FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_X1 ;
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_C1 = { 1{ !_059_ }} ;
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_R1 = { 1{ !_059_ }} & ( _013__R | ( { 1{ _059__T  }} & _013__C ));
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_X1 = { 1{ !_059_ }} & _013__X ;
  assign _009_ = _058_ ? FpMul_8U_23U_p_mant_p1_mul_tmp[47] : FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2;
  logic [0:0] _058__C0 ;
  logic [0:0] _058__R0 ;
  logic [0:0] _058__X0 ;
  assign _058__C0 = | _009__C ;
  assign _058__X0 = | _009__X ;
  assign _009__T = _058_ ? ( { 1{ _058__T  }} | FpMul_8U_23U_p_mant_p1_mul_tmp_T [47] ) : ( { 1{ _058__T  }} | FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_T );
  assign _009__S = _058_ ? FpMul_8U_23U_p_mant_p1_mul_tmp_S : FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_S ;
  assign _058__R0 = ( | (_009__R | ( _009__C & ( { 1{ _058_ }} & FpMul_8U_23U_p_mant_p1_mul_tmp_T [47] | { 1{ !_058_ }} & FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_T )))) && FpMul_8U_23U_p_mant_p1_mul_tmp[47] != FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2 ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_mul_tmp_C2 ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_mul_tmp_R2 ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_mul_tmp_X2 ;
  assign FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [47] = { 1{ _058_ }} ;
  assign FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [47] = { 1{ _058_ }} & ( _009__R | ( { 1{ _058__T  }} & _009__C ));
  assign FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [47] = { 1{ _058_ }} & _009__X ;
  logic [0:0] FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_C1 ;
  logic [0:0] FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_R1 ;
  logic [0:0] FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_X1 ;
  assign FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_C1 = { 1{ !_058_ }} ;
  assign FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_R1 = { 1{ !_058_ }} & ( _009__R | ( { 1{ _058__T  }} & _009__C ));
  assign FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_X1 = { 1{ !_058_ }} & _009__X ;
  assign _041_ = and_41_rgt ? FpMul_8U_23U_p_mant_p1_sva : FpMul_8U_23U_p_mant_p1_mul_tmp;
  logic [0:0] and_41_rgt_C1 ;
  logic [0:0] and_41_rgt_R1 ;
  logic [0:0] and_41_rgt_X1 ;
  assign and_41_rgt_C1 = | _041__C ;
  assign and_41_rgt_X1 = | _041__X ;
  assign _041__T = and_41_rgt ? ( { 48{ and_41_rgt_T  }} | FpMul_8U_23U_p_mant_p1_sva_T ) : ( { 48{ and_41_rgt_T  }} | FpMul_8U_23U_p_mant_p1_mul_tmp_T );
  assign _041__S = and_41_rgt ? FpMul_8U_23U_p_mant_p1_sva_S : FpMul_8U_23U_p_mant_p1_mul_tmp_S ;
  assign and_41_rgt_R1 = ( | (_041__R | ( _041__C & ( { 48{ and_41_rgt }} & FpMul_8U_23U_p_mant_p1_sva_T | { 48{ !and_41_rgt }} & FpMul_8U_23U_p_mant_p1_mul_tmp_T )))) && FpMul_8U_23U_p_mant_p1_sva != FpMul_8U_23U_p_mant_p1_mul_tmp ;
  assign { FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [0], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [1], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [2], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [3], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [4], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [5], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [6], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [7], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [8], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [9], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [10], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [11], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [12], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [13], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [14], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [15], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [16], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [17], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [18], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [19], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [20], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [21], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [22], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [23], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [24], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [25], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [26], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [27], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [28], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [29], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [30], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [31], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [32], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [33], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [34], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [35], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [36], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [37], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [38], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [39], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [40], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [41], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [42], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [43], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [44], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [45], FpMul_8U_23U_p_mant_p1_mul_tmp_R2 [46] } = 0;
  assign { FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [0], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [1], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [2], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [3], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [4], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [5], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [6], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [7], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [8], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [9], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [10], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [11], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [12], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [13], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [14], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [15], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [16], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [17], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [18], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [19], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [20], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [21], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [22], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [23], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [24], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [25], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [26], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [27], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [28], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [29], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [30], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [31], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [32], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [33], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [34], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [35], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [36], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [37], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [38], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [39], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [40], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [41], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [42], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [43], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [44], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [45], FpMul_8U_23U_p_mant_p1_mul_tmp_X2 [46] } = 0;
  assign { FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [0], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [1], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [2], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [3], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [4], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [5], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [6], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [7], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [8], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [9], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [10], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [11], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [12], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [13], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [14], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [15], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [16], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [17], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [18], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [19], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [20], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [21], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [22], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [23], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [24], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [25], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [26], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [27], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [28], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [29], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [30], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [31], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [32], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [33], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [34], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [35], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [36], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [37], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [38], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [39], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [40], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [41], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [42], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [43], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [44], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [45], FpMul_8U_23U_p_mant_p1_mul_tmp_C2 [46] } = 0;
  logic [47:0] FpMul_8U_23U_p_mant_p1_sva_C1 ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_sva_R1 ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_sva_X1 ;
  assign FpMul_8U_23U_p_mant_p1_sva_C1 = { 48{ and_41_rgt }} ;
  assign FpMul_8U_23U_p_mant_p1_sva_R1 = { 48{ and_41_rgt }} & ( _041__R | ( { 48{ and_41_rgt_T  }} & _041__C ));
  assign FpMul_8U_23U_p_mant_p1_sva_X1 = { 48{ and_41_rgt }} & _041__X ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_mul_tmp_C3 ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_mul_tmp_R3 ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_mul_tmp_X3 ;
  assign FpMul_8U_23U_p_mant_p1_mul_tmp_C3 = { 48{ !and_41_rgt }} ;
  assign FpMul_8U_23U_p_mant_p1_mul_tmp_R3 = { 48{ !and_41_rgt }} & ( _041__R | ( { 48{ and_41_rgt_T  }} & _041__C ));
  assign FpMul_8U_23U_p_mant_p1_mul_tmp_X3 = { 48{ !and_41_rgt }} & _041__X ;
  assign _022_ = _057_ ? _041_ : FpMul_8U_23U_p_mant_p1_sva_2;
  logic [0:0] _057__C0 ;
  logic [0:0] _057__R0 ;
  logic [0:0] _057__X0 ;
  assign _057__C0 = | _022__C ;
  assign _057__X0 = | _022__X ;
  assign _022__T = _057_ ? ( { 48{ _057__T  }} | _041__T ) : ( { 48{ _057__T  }} | FpMul_8U_23U_p_mant_p1_sva_2_T );
  assign _022__S = _057_ ? _041__S : FpMul_8U_23U_p_mant_p1_sva_2_S ;
  assign _057__R0 = ( | (_022__R | ( _022__C & ( { 48{ _057_ }} & _041__T | { 48{ !_057_ }} & FpMul_8U_23U_p_mant_p1_sva_2_T )))) && _041_ != FpMul_8U_23U_p_mant_p1_sva_2 ;
  assign { FpMul_8U_23U_p_mant_p1_sva_2_R5 [47:46] } = 0;
  assign { FpMul_8U_23U_p_mant_p1_sva_2_X5 [47:46] } = 0;
  assign { FpMul_8U_23U_p_mant_p1_sva_2_C5 [47:46] } = 0;
  logic [47:0] _041__C0 ;
  logic [47:0] _041__R0 ;
  logic [47:0] _041__X0 ;
  assign _041__C0 = { 48{ _057_ }} ;
  assign _041__R0 = { 48{ _057_ }} & ( _022__R | ( { 48{ _057__T  }} & _022__C ));
  assign _041__X0 = { 48{ _057_ }} & _022__X ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_sva_2_C6 ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_sva_2_R6 ;
  logic [47:0] FpMul_8U_23U_p_mant_p1_sva_2_X6 ;
  assign FpMul_8U_23U_p_mant_p1_sva_2_C6 = { 48{ !_057_ }} ;
  assign FpMul_8U_23U_p_mant_p1_sva_2_R6 = { 48{ !_057_ }} & ( _022__R | ( { 48{ _057__T  }} & _022__C ));
  assign FpMul_8U_23U_p_mant_p1_sva_2_X6 = { 48{ !_057_ }} & _022__X ;
  assign _020_ = _053_ ? nl_FpMul_8U_23U_p_expo_sva_5 : FpMul_8U_23U_p_expo_sva_5;
  logic [0:0] _053__C0 ;
  logic [0:0] _053__R0 ;
  logic [0:0] _053__X0 ;
  assign _053__C0 = | _020__C ;
  assign _053__X0 = | _020__X ;
  assign _020__T = _053_ ? ( { 8{ _053__T  }} | nl_FpMul_8U_23U_p_expo_sva_5_T ) : ( { 8{ _053__T  }} | FpMul_8U_23U_p_expo_sva_5_T );
  assign _020__S = _053_ ? nl_FpMul_8U_23U_p_expo_sva_5_S : FpMul_8U_23U_p_expo_sva_5_S ;
  assign _053__R0 = ( | (_020__R | ( _020__C & ( { 8{ _053_ }} & nl_FpMul_8U_23U_p_expo_sva_5_T | { 8{ !_053_ }} & FpMul_8U_23U_p_expo_sva_5_T )))) && nl_FpMul_8U_23U_p_expo_sva_5 != FpMul_8U_23U_p_expo_sva_5 ;
  logic [7:0] nl_FpMul_8U_23U_p_expo_sva_5_C0 ;
  logic [7:0] nl_FpMul_8U_23U_p_expo_sva_5_R0 ;
  logic [7:0] nl_FpMul_8U_23U_p_expo_sva_5_X0 ;
  assign nl_FpMul_8U_23U_p_expo_sva_5_C0 = { 8{ _053_ }} ;
  assign nl_FpMul_8U_23U_p_expo_sva_5_R0 = { 8{ _053_ }} & ( _020__R | ( { 8{ _053__T  }} & _020__C ));
  assign nl_FpMul_8U_23U_p_expo_sva_5_X0 = { 8{ _053_ }} & _020__X ;
  logic [7:0] FpMul_8U_23U_p_expo_sva_5_C3 ;
  logic [7:0] FpMul_8U_23U_p_expo_sva_5_R3 ;
  logic [7:0] FpMul_8U_23U_p_expo_sva_5_X3 ;
  assign FpMul_8U_23U_p_expo_sva_5_C3 = { 8{ !_053_ }} ;
  assign FpMul_8U_23U_p_expo_sva_5_R3 = { 8{ !_053_ }} & ( _020__R | ( { 8{ _053__T  }} & _020__C ));
  assign FpMul_8U_23U_p_expo_sva_5_X3 = { 8{ !_053_ }} & _020__X ;
  assign _034_ = _052_ ? _110_ : main_stage_v_2;
  logic [0:0] _052__C0 ;
  logic [0:0] _052__R0 ;
  logic [0:0] _052__X0 ;
  assign _052__C0 = | _034__C ;
  assign _052__X0 = | _034__X ;
  assign _034__T = _052_ ? ( { 1{ _052__T  }} | _110__T ) : ( { 1{ _052__T  }} | main_stage_v_2_T );
  assign _034__S = _052_ ? _110__S : main_stage_v_2_S ;
  assign _052__R0 = ( | (_034__R | ( _034__C & ( { 1{ _052_ }} & _110__T | { 1{ !_052_ }} & main_stage_v_2_T )))) && _110_ != main_stage_v_2 ;
  logic [0:0] _110__C0 ;
  logic [0:0] _110__R0 ;
  logic [0:0] _110__X0 ;
  assign _110__C0 = { 1{ _052_ }} ;
  assign _110__R0 = { 1{ _052_ }} & ( _034__R | ( { 1{ _052__T  }} & _034__C ));
  assign _110__X0 = { 1{ _052_ }} & _034__X ;
  logic [0:0] main_stage_v_2_C6 ;
  logic [0:0] main_stage_v_2_R6 ;
  logic [0:0] main_stage_v_2_X6 ;
  assign main_stage_v_2_C6 = { 1{ !_052_ }} ;
  assign main_stage_v_2_R6 = { 1{ !_052_ }} & ( _034__R | ( { 1{ _052__T  }} & _034__C ));
  assign main_stage_v_2_X6 = { 1{ !_052_ }} & _034__X ;
  assign _028_ = IsNaN_8U_23U_aelse_and_cse ? _108_ : IsNaN_8U_23U_land_lpi_1_dfm_st_3;
  logic [0:0] IsNaN_8U_23U_aelse_and_cse_C0 ;
  logic [0:0] IsNaN_8U_23U_aelse_and_cse_R0 ;
  logic [0:0] IsNaN_8U_23U_aelse_and_cse_X0 ;
  assign IsNaN_8U_23U_aelse_and_cse_C0 = | _028__C ;
  assign IsNaN_8U_23U_aelse_and_cse_X0 = | _028__X ;
  assign _028__T = IsNaN_8U_23U_aelse_and_cse ? ( { 1{ IsNaN_8U_23U_aelse_and_cse_T  }} | _108__T ) : ( { 1{ IsNaN_8U_23U_aelse_and_cse_T  }} | IsNaN_8U_23U_land_lpi_1_dfm_st_3_T );
  assign _028__S = IsNaN_8U_23U_aelse_and_cse ? _108__S : IsNaN_8U_23U_land_lpi_1_dfm_st_3_S ;
  assign IsNaN_8U_23U_aelse_and_cse_R0 = ( | (_028__R | ( _028__C & ( { 1{ IsNaN_8U_23U_aelse_and_cse }} & _108__T | { 1{ !IsNaN_8U_23U_aelse_and_cse }} & IsNaN_8U_23U_land_lpi_1_dfm_st_3_T )))) && _108_ != IsNaN_8U_23U_land_lpi_1_dfm_st_3 ;
  logic [0:0] _108__C0 ;
  logic [0:0] _108__R0 ;
  logic [0:0] _108__X0 ;
  assign _108__C0 = { 1{ IsNaN_8U_23U_aelse_and_cse }} ;
  assign _108__R0 = { 1{ IsNaN_8U_23U_aelse_and_cse }} & ( _028__R | ( { 1{ IsNaN_8U_23U_aelse_and_cse_T  }} & _028__C ));
  assign _108__X0 = { 1{ IsNaN_8U_23U_aelse_and_cse }} & _028__X ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_3_C10 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_3_R10 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_st_3_X10 ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_C10 = { 1{ !IsNaN_8U_23U_aelse_and_cse }} ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_R10 = { 1{ !IsNaN_8U_23U_aelse_and_cse }} & ( _028__R | ( { 1{ IsNaN_8U_23U_aelse_and_cse_T  }} & _028__C ));
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_X10 = { 1{ !IsNaN_8U_23U_aelse_and_cse }} & _028__X ;
  assign _016_ = IsNaN_8U_23U_aelse_and_cse ? or_45_cse : FpMul_8U_23U_lor_1_lpi_1_dfm_st_3;
  logic [0:0] IsNaN_8U_23U_aelse_and_cse_C1 ;
  logic [0:0] IsNaN_8U_23U_aelse_and_cse_R1 ;
  logic [0:0] IsNaN_8U_23U_aelse_and_cse_X1 ;
  assign IsNaN_8U_23U_aelse_and_cse_C1 = | _016__C ;
  assign IsNaN_8U_23U_aelse_and_cse_X1 = | _016__X ;
  assign _016__T = IsNaN_8U_23U_aelse_and_cse ? ( { 1{ IsNaN_8U_23U_aelse_and_cse_T  }} | or_45_cse_T ) : ( { 1{ IsNaN_8U_23U_aelse_and_cse_T  }} | FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_T );
  assign _016__S = IsNaN_8U_23U_aelse_and_cse ? or_45_cse_S : FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_S ;
  assign IsNaN_8U_23U_aelse_and_cse_R1 = ( | (_016__R | ( _016__C & ( { 1{ IsNaN_8U_23U_aelse_and_cse }} & or_45_cse_T | { 1{ !IsNaN_8U_23U_aelse_and_cse }} & FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_T )))) && or_45_cse != FpMul_8U_23U_lor_1_lpi_1_dfm_st_3 ;
  logic [0:0] or_45_cse_C3 ;
  logic [0:0] or_45_cse_R3 ;
  logic [0:0] or_45_cse_X3 ;
  assign or_45_cse_C3 = { 1{ IsNaN_8U_23U_aelse_and_cse }} ;
  assign or_45_cse_R3 = { 1{ IsNaN_8U_23U_aelse_and_cse }} & ( _016__R | ( { 1{ IsNaN_8U_23U_aelse_and_cse_T  }} & _016__C ));
  assign or_45_cse_X3 = { 1{ IsNaN_8U_23U_aelse_and_cse }} & _016__X ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_C7 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_R7 ;
  logic [0:0] FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_X7 ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_C7 = { 1{ !IsNaN_8U_23U_aelse_and_cse }} ;
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_R7 = { 1{ !IsNaN_8U_23U_aelse_and_cse }} & ( _016__R | ( { 1{ IsNaN_8U_23U_aelse_and_cse_T  }} & _016__C ));
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_X7 = { 1{ !IsNaN_8U_23U_aelse_and_cse }} & _016__X ;
  assign _025_ = IsNaN_8U_23U_aelse_and_cse ? _109_ : IsNaN_8U_23U_1_land_lpi_1_dfm_3;
  logic [0:0] IsNaN_8U_23U_aelse_and_cse_C2 ;
  logic [0:0] IsNaN_8U_23U_aelse_and_cse_R2 ;
  logic [0:0] IsNaN_8U_23U_aelse_and_cse_X2 ;
  assign IsNaN_8U_23U_aelse_and_cse_C2 = | _025__C ;
  assign IsNaN_8U_23U_aelse_and_cse_X2 = | _025__X ;
  assign _025__T = IsNaN_8U_23U_aelse_and_cse ? ( { 1{ IsNaN_8U_23U_aelse_and_cse_T  }} | _109__T ) : ( { 1{ IsNaN_8U_23U_aelse_and_cse_T  }} | IsNaN_8U_23U_1_land_lpi_1_dfm_3_T );
  assign _025__S = IsNaN_8U_23U_aelse_and_cse ? _109__S : IsNaN_8U_23U_1_land_lpi_1_dfm_3_S ;
  assign IsNaN_8U_23U_aelse_and_cse_R2 = ( | (_025__R | ( _025__C & ( { 1{ IsNaN_8U_23U_aelse_and_cse }} & _109__T | { 1{ !IsNaN_8U_23U_aelse_and_cse }} & IsNaN_8U_23U_1_land_lpi_1_dfm_3_T )))) && _109_ != IsNaN_8U_23U_1_land_lpi_1_dfm_3 ;
  logic [0:0] _109__C0 ;
  logic [0:0] _109__R0 ;
  logic [0:0] _109__X0 ;
  assign _109__C0 = { 1{ IsNaN_8U_23U_aelse_and_cse }} ;
  assign _109__R0 = { 1{ IsNaN_8U_23U_aelse_and_cse }} & ( _025__R | ( { 1{ IsNaN_8U_23U_aelse_and_cse_T  }} & _025__C ));
  assign _109__X0 = { 1{ IsNaN_8U_23U_aelse_and_cse }} & _025__X ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_C8 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_R8 ;
  logic [0:0] IsNaN_8U_23U_1_land_lpi_1_dfm_3_X8 ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_C8 = { 1{ !IsNaN_8U_23U_aelse_and_cse }} ;
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_R8 = { 1{ !IsNaN_8U_23U_aelse_and_cse }} & ( _025__R | ( { 1{ IsNaN_8U_23U_aelse_and_cse_T  }} & _025__C ));
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_X8 = { 1{ !IsNaN_8U_23U_aelse_and_cse }} & _025__X ;
  assign _010_ = _051_ ? FpMul_8U_23U_else_2_acc_1_nl[8:1] : FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2;
  logic [0:0] _051__C0 ;
  logic [0:0] _051__R0 ;
  logic [0:0] _051__X0 ;
  assign _051__C0 = | _010__C ;
  assign _051__X0 = | _010__X ;
  assign _010__T = _051_ ? ( { 8{ _051__T  }} | FpMul_8U_23U_else_2_acc_1_nl_T [8:1] ) : ( { 8{ _051__T  }} | FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_T );
  assign _010__S = _051_ ? FpMul_8U_23U_else_2_acc_1_nl_S : FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_S ;
  assign _051__R0 = ( | (_010__R | ( _010__C & ( { 8{ _051_ }} & FpMul_8U_23U_else_2_acc_1_nl_T [8:1] | { 8{ !_051_ }} & FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_T )))) && FpMul_8U_23U_else_2_acc_1_nl[8:1] != FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2 ;
  logic [8:0] FpMul_8U_23U_else_2_acc_1_nl_C0 ;
  logic [8:0] FpMul_8U_23U_else_2_acc_1_nl_R0 ;
  logic [8:0] FpMul_8U_23U_else_2_acc_1_nl_X0 ;
  assign FpMul_8U_23U_else_2_acc_1_nl_C0 [8:1] = { 8{ _051_ }} ;
  assign FpMul_8U_23U_else_2_acc_1_nl_R0 [8:1] = { 8{ _051_ }} & ( _010__R | ( { 8{ _051__T  }} & _010__C ));
  assign FpMul_8U_23U_else_2_acc_1_nl_X0 [8:1] = { 8{ _051_ }} & _010__X ;
  logic [7:0] FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_C1 ;
  logic [7:0] FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_R1 ;
  logic [7:0] FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_X1 ;
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_C1 = { 8{ !_051_ }} ;
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_R1 = { 8{ !_051_ }} & ( _010__R | ( { 8{ _051__T  }} & _010__C ));
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_X1 = { 8{ !_051_ }} & _010__X ;
  assign _033_ = _049_ ? _105_ : main_stage_v_1;
  logic [0:0] _049__C0 ;
  logic [0:0] _049__R0 ;
  logic [0:0] _049__X0 ;
  assign _049__C0 = | _033__C ;
  assign _049__X0 = | _033__X ;
  assign _033__T = _049_ ? ( { 1{ _049__T  }} | _105__T ) : ( { 1{ _049__T  }} | main_stage_v_1_T );
  assign _033__S = _049_ ? _105__S : main_stage_v_1_S ;
  assign _049__R0 = ( | (_033__R | ( _033__C & ( { 1{ _049_ }} & _105__T | { 1{ !_049_ }} & main_stage_v_1_T )))) && _105_ != main_stage_v_1 ;
  logic [0:0] _105__C0 ;
  logic [0:0] _105__R0 ;
  logic [0:0] _105__X0 ;
  assign _105__C0 = { 1{ _049_ }} ;
  assign _105__R0 = { 1{ _049_ }} & ( _033__R | ( { 1{ _049__T  }} & _033__C ));
  assign _105__X0 = { 1{ _049_ }} & _033__X ;
  logic [0:0] main_stage_v_1_C10 ;
  logic [0:0] main_stage_v_1_R10 ;
  logic [0:0] main_stage_v_1_X10 ;
  assign main_stage_v_1_C10 = { 1{ !_049_ }} ;
  assign main_stage_v_1_R10 = { 1{ !_049_ }} & ( _033__R | ( { 1{ _049__T  }} & _033__C ));
  assign main_stage_v_1_X10 = { 1{ !_049_ }} & _033__X ;
  assign _037_ = _048_ ? _104_ : reg_chn_o_rsci_ld_core_psct_cse;
  logic [0:0] _048__C0 ;
  logic [0:0] _048__R0 ;
  logic [0:0] _048__X0 ;
  assign _048__C0 = | _037__C ;
  assign _048__X0 = | _037__X ;
  assign _037__T = _048_ ? ( { 1{ _048__T  }} | _104__T ) : ( { 1{ _048__T  }} | reg_chn_o_rsci_ld_core_psct_cse_T );
  assign _037__S = _048_ ? _104__S : reg_chn_o_rsci_ld_core_psct_cse_S ;
  assign _048__R0 = ( | (_037__R | ( _037__C & ( { 1{ _048_ }} & _104__T | { 1{ !_048_ }} & reg_chn_o_rsci_ld_core_psct_cse_T )))) && _104_ != reg_chn_o_rsci_ld_core_psct_cse ;
  logic [0:0] _104__C0 ;
  logic [0:0] _104__R0 ;
  logic [0:0] _104__X0 ;
  assign _104__C0 = { 1{ _048_ }} ;
  assign _104__R0 = { 1{ _048_ }} & ( _037__R | ( { 1{ _048__T  }} & _037__C ));
  assign _104__X0 = { 1{ _048_ }} & _037__X ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C4 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R4 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X4 ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C4 = { 1{ !_048_ }} ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R4 = { 1{ !_048_ }} & ( _037__R | ( { 1{ _048__T  }} & _037__C ));
  assign reg_chn_o_rsci_ld_core_psct_cse_X4 = { 1{ !_048_ }} & _037__X ;
  assign _042_ = FpBitsToFloat_8U_23U_1_and_nl ? FpMul_8U_23U_FpMul_8U_23U_and_2_nl : FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2;
  logic [0:0] FpBitsToFloat_8U_23U_1_and_nl_C0 ;
  logic [0:0] FpBitsToFloat_8U_23U_1_and_nl_R0 ;
  logic [0:0] FpBitsToFloat_8U_23U_1_and_nl_X0 ;
  assign FpBitsToFloat_8U_23U_1_and_nl_C0 = | _042__C ;
  assign FpBitsToFloat_8U_23U_1_and_nl_X0 = | _042__X ;
  assign _042__T = FpBitsToFloat_8U_23U_1_and_nl ? ( { 8{ FpBitsToFloat_8U_23U_1_and_nl_T  }} | FpMul_8U_23U_FpMul_8U_23U_and_2_nl_T ) : ( { 8{ FpBitsToFloat_8U_23U_1_and_nl_T  }} | FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_T );
  assign _042__S = FpBitsToFloat_8U_23U_1_and_nl ? FpMul_8U_23U_FpMul_8U_23U_and_2_nl_S : FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_S ;
  assign FpBitsToFloat_8U_23U_1_and_nl_R0 = ( | (_042__R | ( _042__C & ( { 8{ FpBitsToFloat_8U_23U_1_and_nl }} & FpMul_8U_23U_FpMul_8U_23U_and_2_nl_T | { 8{ !FpBitsToFloat_8U_23U_1_and_nl }} & FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_T )))) && FpMul_8U_23U_FpMul_8U_23U_and_2_nl != FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2 ;
  logic [7:0] FpMul_8U_23U_FpMul_8U_23U_and_2_nl_C0 ;
  logic [7:0] FpMul_8U_23U_FpMul_8U_23U_and_2_nl_R0 ;
  logic [7:0] FpMul_8U_23U_FpMul_8U_23U_and_2_nl_X0 ;
  assign FpMul_8U_23U_FpMul_8U_23U_and_2_nl_C0 = { 8{ FpBitsToFloat_8U_23U_1_and_nl }} ;
  assign FpMul_8U_23U_FpMul_8U_23U_and_2_nl_R0 = { 8{ FpBitsToFloat_8U_23U_1_and_nl }} & ( _042__R | ( { 8{ FpBitsToFloat_8U_23U_1_and_nl_T  }} & _042__C ));
  assign FpMul_8U_23U_FpMul_8U_23U_and_2_nl_X0 = { 8{ FpBitsToFloat_8U_23U_1_and_nl }} & _042__X ;
  logic [7:0] FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_C1 ;
  logic [7:0] FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_R1 ;
  logic [7:0] FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_X1 ;
  assign FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_C1 = { 8{ !FpBitsToFloat_8U_23U_1_and_nl }} ;
  assign FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_R1 = { 8{ !FpBitsToFloat_8U_23U_1_and_nl }} & ( _042__R | ( { 8{ FpBitsToFloat_8U_23U_1_and_nl_T  }} & _042__C ));
  assign FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_X1 = { 8{ !FpBitsToFloat_8U_23U_1_and_nl }} & _042__X ;
  assign _030_ = _047_ ? _042_ : chn_o_rsci_d_30_23;
  logic [0:0] _047__C0 ;
  logic [0:0] _047__R0 ;
  logic [0:0] _047__X0 ;
  assign _047__C0 = | _030__C ;
  assign _047__X0 = | _030__X ;
  assign _030__T = _047_ ? ( { 8{ _047__T  }} | _042__T ) : ( { 8{ _047__T  }} | chn_o_rsci_d_30_23_T );
  assign _030__S = _047_ ? _042__S : chn_o_rsci_d_30_23_S ;
  assign _047__R0 = ( | (_030__R | ( _030__C & ( { 8{ _047_ }} & _042__T | { 8{ !_047_ }} & chn_o_rsci_d_30_23_T )))) && _042_ != chn_o_rsci_d_30_23 ;
  logic [7:0] _042__C0 ;
  logic [7:0] _042__R0 ;
  logic [7:0] _042__X0 ;
  assign _042__C0 = { 8{ _047_ }} ;
  assign _042__R0 = { 8{ _047_ }} & ( _030__R | ( { 8{ _047__T  }} & _030__C ));
  assign _042__X0 = { 8{ _047_ }} & _030__X ;
  logic [7:0] chn_o_rsci_d_30_23_C0 ;
  logic [7:0] chn_o_rsci_d_30_23_R0 ;
  logic [7:0] chn_o_rsci_d_30_23_X0 ;
  assign chn_o_rsci_d_30_23_C0 = { 8{ !_047_ }} ;
  assign chn_o_rsci_d_30_23_R0 = { 8{ !_047_ }} & ( _030__R | ( { 8{ _047__T  }} & _030__C ));
  assign chn_o_rsci_d_30_23_X0 = { 8{ !_047_ }} & _030__X ;
  assign _039_ = FpMul_8U_23U_or_2_cse ? FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2 : FpMul_8U_23U_FpMul_8U_23U_FpMul_8U_23U_nor_1_nl;
  logic [0:0] FpMul_8U_23U_or_2_cse_C4 ;
  logic [0:0] FpMul_8U_23U_or_2_cse_R4 ;
  logic [0:0] FpMul_8U_23U_or_2_cse_X4 ;
  assign FpMul_8U_23U_or_2_cse_C4 = | _039__C ;
  assign FpMul_8U_23U_or_2_cse_X4 = | _039__X ;
  assign _039__T = FpMul_8U_23U_or_2_cse ? ( { 23{ FpMul_8U_23U_or_2_cse_T  }} | FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_T ) : ( { 23{ FpMul_8U_23U_or_2_cse_T  }} | FpMul_8U_23U_FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_T );
  assign _039__S = FpMul_8U_23U_or_2_cse ? FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_S : FpMul_8U_23U_FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_S ;
  assign FpMul_8U_23U_or_2_cse_R4 = ( | (_039__R | ( _039__C & ( { 23{ FpMul_8U_23U_or_2_cse }} & FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_T | { 23{ !FpMul_8U_23U_or_2_cse }} & FpMul_8U_23U_FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_T )))) && FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2 != FpMul_8U_23U_FpMul_8U_23U_FpMul_8U_23U_nor_1_nl ;
  logic [22:0] FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_C1 ;
  logic [22:0] FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_R1 ;
  logic [22:0] FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_X1 ;
  assign FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_C1 = { 23{ FpMul_8U_23U_or_2_cse }} ;
  assign FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_R1 = { 23{ FpMul_8U_23U_or_2_cse }} & ( _039__R | ( { 23{ FpMul_8U_23U_or_2_cse_T  }} & _039__C ));
  assign FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_X1 = { 23{ FpMul_8U_23U_or_2_cse }} & _039__X ;
  logic [22:0] FpMul_8U_23U_FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_C0 ;
  logic [22:0] FpMul_8U_23U_FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_R0 ;
  logic [22:0] FpMul_8U_23U_FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X0 ;
  assign FpMul_8U_23U_FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_C0 = { 23{ !FpMul_8U_23U_or_2_cse }} ;
  assign FpMul_8U_23U_FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_R0 = { 23{ !FpMul_8U_23U_or_2_cse }} & ( _039__R | ( { 23{ FpMul_8U_23U_or_2_cse_T  }} & _039__C ));
  assign FpMul_8U_23U_FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X0 = { 23{ !FpMul_8U_23U_or_2_cse }} & _039__X ;
  assign _029_ = chn_o_and_cse ? _039_ : chn_o_rsci_d_22_0;
  logic [0:0] chn_o_and_cse_C0 ;
  logic [0:0] chn_o_and_cse_R0 ;
  logic [0:0] chn_o_and_cse_X0 ;
  assign chn_o_and_cse_C0 = | _029__C ;
  assign chn_o_and_cse_X0 = | _029__X ;
  assign _029__T = chn_o_and_cse ? ( { 23{ chn_o_and_cse_T  }} | _039__T ) : ( { 23{ chn_o_and_cse_T  }} | chn_o_rsci_d_22_0_T );
  assign _029__S = chn_o_and_cse ? _039__S : chn_o_rsci_d_22_0_S ;
  assign chn_o_and_cse_R0 = ( | (_029__R | ( _029__C & ( { 23{ chn_o_and_cse }} & _039__T | { 23{ !chn_o_and_cse }} & chn_o_rsci_d_22_0_T )))) && _039_ != chn_o_rsci_d_22_0 ;
  logic [22:0] _039__C0 ;
  logic [22:0] _039__R0 ;
  logic [22:0] _039__X0 ;
  assign _039__C0 = { 23{ chn_o_and_cse }} ;
  assign _039__R0 = { 23{ chn_o_and_cse }} & ( _029__R | ( { 23{ chn_o_and_cse_T  }} & _029__C ));
  assign _039__X0 = { 23{ chn_o_and_cse }} & _029__X ;
  logic [22:0] chn_o_rsci_d_22_0_C0 ;
  logic [22:0] chn_o_rsci_d_22_0_R0 ;
  logic [22:0] chn_o_rsci_d_22_0_X0 ;
  assign chn_o_rsci_d_22_0_C0 = { 23{ !chn_o_and_cse }} ;
  assign chn_o_rsci_d_22_0_R0 = { 23{ !chn_o_and_cse }} & ( _029__R | ( { 23{ chn_o_and_cse_T  }} & _029__C ));
  assign chn_o_rsci_d_22_0_X0 = { 23{ !chn_o_and_cse }} & _029__X ;
  assign _031_ = chn_o_and_cse ? FpMul_8U_23U_mux_10_itm_4 : chn_o_rsci_d_31;
  logic [0:0] chn_o_and_cse_C1 ;
  logic [0:0] chn_o_and_cse_R1 ;
  logic [0:0] chn_o_and_cse_X1 ;
  assign chn_o_and_cse_C1 = | _031__C ;
  assign chn_o_and_cse_X1 = | _031__X ;
  assign _031__T = chn_o_and_cse ? ( { 1{ chn_o_and_cse_T  }} | FpMul_8U_23U_mux_10_itm_4_T ) : ( { 1{ chn_o_and_cse_T  }} | chn_o_rsci_d_31_T );
  assign _031__S = chn_o_and_cse ? FpMul_8U_23U_mux_10_itm_4_S : chn_o_rsci_d_31_S ;
  assign chn_o_and_cse_R1 = ( | (_031__R | ( _031__C & ( { 1{ chn_o_and_cse }} & FpMul_8U_23U_mux_10_itm_4_T | { 1{ !chn_o_and_cse }} & chn_o_rsci_d_31_T )))) && FpMul_8U_23U_mux_10_itm_4 != chn_o_rsci_d_31 ;
  logic [0:0] FpMul_8U_23U_mux_10_itm_4_C1 ;
  logic [0:0] FpMul_8U_23U_mux_10_itm_4_R1 ;
  logic [0:0] FpMul_8U_23U_mux_10_itm_4_X1 ;
  assign FpMul_8U_23U_mux_10_itm_4_C1 = { 1{ chn_o_and_cse }} ;
  assign FpMul_8U_23U_mux_10_itm_4_R1 = { 1{ chn_o_and_cse }} & ( _031__R | ( { 1{ chn_o_and_cse_T  }} & _031__C ));
  assign FpMul_8U_23U_mux_10_itm_4_X1 = { 1{ chn_o_and_cse }} & _031__X ;
  logic [0:0] chn_o_rsci_d_31_C0 ;
  logic [0:0] chn_o_rsci_d_31_R0 ;
  logic [0:0] chn_o_rsci_d_31_X0 ;
  assign chn_o_rsci_d_31_C0 = { 1{ !chn_o_and_cse }} ;
  assign chn_o_rsci_d_31_R0 = { 1{ !chn_o_and_cse }} & ( _031__R | ( { 1{ chn_o_and_cse_T  }} & _031__C ));
  assign chn_o_rsci_d_31_X0 = { 1{ !chn_o_and_cse }} & _031__X ;
  assign _036_ = _045_ ? or_tmp_59 : reg_chn_b_rsci_ld_core_psct_cse;
  logic [0:0] _045__C0 ;
  logic [0:0] _045__R0 ;
  logic [0:0] _045__X0 ;
  assign _045__C0 = | _036__C ;
  assign _045__X0 = | _036__X ;
  assign _036__T = _045_ ? ( { 1{ _045__T  }} | or_tmp_59_T ) : ( { 1{ _045__T  }} | reg_chn_b_rsci_ld_core_psct_cse_T );
  assign _036__S = _045_ ? or_tmp_59_S : reg_chn_b_rsci_ld_core_psct_cse_S ;
  assign _045__R0 = ( | (_036__R | ( _036__C & ( { 1{ _045_ }} & or_tmp_59_T | { 1{ !_045_ }} & reg_chn_b_rsci_ld_core_psct_cse_T )))) && or_tmp_59 != reg_chn_b_rsci_ld_core_psct_cse ;
  logic [0:0] or_tmp_59_C1 ;
  logic [0:0] or_tmp_59_R1 ;
  logic [0:0] or_tmp_59_X1 ;
  assign or_tmp_59_C1 = { 1{ _045_ }} ;
  assign or_tmp_59_R1 = { 1{ _045_ }} & ( _036__R | ( { 1{ _045__T  }} & _036__C ));
  assign or_tmp_59_X1 = { 1{ _045_ }} & _036__X ;
  logic [0:0] reg_chn_b_rsci_ld_core_psct_cse_C0 ;
  logic [0:0] reg_chn_b_rsci_ld_core_psct_cse_R0 ;
  logic [0:0] reg_chn_b_rsci_ld_core_psct_cse_X0 ;
  assign reg_chn_b_rsci_ld_core_psct_cse_C0 = { 1{ !_045_ }} ;
  assign reg_chn_b_rsci_ld_core_psct_cse_R0 = { 1{ !_045_ }} & ( _036__R | ( { 1{ _045__T  }} & _036__C ));
  assign reg_chn_b_rsci_ld_core_psct_cse_X0 = { 1{ !_045_ }} & _036__X ;
  assign _035_ = core_wen ? _103_ : reg_chn_b_rsci_iswt0_cse;
  logic [0:0] core_wen_C13 ;
  logic [0:0] core_wen_R13 ;
  logic [0:0] core_wen_X13 ;
  assign core_wen_C13 = | _035__C ;
  assign core_wen_X13 = | _035__X ;
  assign _035__T = core_wen ? ( { 1{ core_wen_T  }} | _103__T ) : ( { 1{ core_wen_T  }} | reg_chn_b_rsci_iswt0_cse_T );
  assign _035__S = core_wen ? _103__S : reg_chn_b_rsci_iswt0_cse_S ;
  assign core_wen_R13 = ( | (_035__R | ( _035__C & ( { 1{ core_wen }} & _103__T | { 1{ !core_wen }} & reg_chn_b_rsci_iswt0_cse_T )))) && _103_ != reg_chn_b_rsci_iswt0_cse ;
  logic [0:0] _103__C0 ;
  logic [0:0] _103__R0 ;
  logic [0:0] _103__X0 ;
  assign _103__C0 = { 1{ core_wen }} ;
  assign _103__R0 = { 1{ core_wen }} & ( _035__R | ( { 1{ core_wen_T  }} & _035__C ));
  assign _103__X0 = { 1{ core_wen }} & _035__X ;
  logic [0:0] reg_chn_b_rsci_iswt0_cse_C0 ;
  logic [0:0] reg_chn_b_rsci_iswt0_cse_R0 ;
  logic [0:0] reg_chn_b_rsci_iswt0_cse_X0 ;
  assign reg_chn_b_rsci_iswt0_cse_C0 = { 1{ !core_wen }} ;
  assign reg_chn_b_rsci_iswt0_cse_R0 = { 1{ !core_wen }} & ( _035__R | ( { 1{ core_wen_T  }} & _035__C ));
  assign reg_chn_b_rsci_iswt0_cse_X0 = { 1{ !core_wen }} & _035__X ;
  assign _032_ = core_wen ? and_dcpl_12 : chn_o_rsci_iswt0;
  logic [0:0] core_wen_C14 ;
  logic [0:0] core_wen_R14 ;
  logic [0:0] core_wen_X14 ;
  assign core_wen_C14 = | _032__C ;
  assign core_wen_X14 = | _032__X ;
  assign _032__T = core_wen ? ( { 1{ core_wen_T  }} | and_dcpl_12_T ) : ( { 1{ core_wen_T  }} | chn_o_rsci_iswt0_T );
  assign _032__S = core_wen ? and_dcpl_12_S : chn_o_rsci_iswt0_S ;
  assign core_wen_R14 = ( | (_032__R | ( _032__C & ( { 1{ core_wen }} & and_dcpl_12_T | { 1{ !core_wen }} & chn_o_rsci_iswt0_T )))) && and_dcpl_12 != chn_o_rsci_iswt0 ;
  logic [0:0] and_dcpl_12_C4 ;
  logic [0:0] and_dcpl_12_R4 ;
  logic [0:0] and_dcpl_12_X4 ;
  assign and_dcpl_12_C4 = { 1{ core_wen }} ;
  assign and_dcpl_12_R4 = { 1{ core_wen }} & ( _032__R | ( { 1{ core_wen_T  }} & _032__C ));
  assign and_dcpl_12_X4 = { 1{ core_wen }} & _032__X ;
  logic [0:0] chn_o_rsci_iswt0_C0 ;
  logic [0:0] chn_o_rsci_iswt0_R0 ;
  logic [0:0] chn_o_rsci_iswt0_X0 ;
  assign chn_o_rsci_iswt0_C0 = { 1{ !core_wen }} ;
  assign chn_o_rsci_iswt0_R0 = { 1{ !core_wen }} & ( _032__R | ( { 1{ core_wen_T  }} & _032__C ));
  assign chn_o_rsci_iswt0_X0 = { 1{ !core_wen }} & _032__X ;
  assign FpMul_8U_23U_xor_1_nl = chn_a_rsci_d_mxwt[31] ^ chn_b_rsci_d_mxwt[31];
  assign FpMul_8U_23U_xor_1_nl_S = 0 ;
  assign FpMul_8U_23U_xor_1_nl_T = chn_a_rsci_d_mxwt_T [31] | chn_b_rsci_d_mxwt_T [31] ;
  assign chn_a_rsci_d_mxwt_C5 [31] = FpMul_8U_23U_xor_1_nl_C ;
  assign chn_a_rsci_d_mxwt_X5 [31] = FpMul_8U_23U_xor_1_nl_X ;
  assign chn_b_rsci_d_mxwt_C4 [31] = FpMul_8U_23U_xor_1_nl_C ;
  assign chn_b_rsci_d_mxwt_X4 [31] = FpMul_8U_23U_xor_1_nl_X ;
  assign chn_a_rsci_d_mxwt_R5 [31] = FpMul_8U_23U_xor_1_nl_R | ( FpMul_8U_23U_xor_1_nl_C & chn_b_rsci_d_mxwt_T [31] );
  assign chn_b_rsci_d_mxwt_R4 [31] = FpMul_8U_23U_xor_1_nl_R | ( FpMul_8U_23U_xor_1_nl_C & chn_a_rsci_d_mxwt_T [31] );
  logic [0:0] chn_a_rsc_vz_R0 ;
  logic [0:0] chn_a_rsc_vz_X0 ;
  logic [0:0] chn_a_rsc_vz_C0 ;
  logic [31:0] chn_a_rsc_z_R0 ;
  logic [31:0] chn_a_rsc_z_X0 ;
  logic [31:0] chn_a_rsc_z_C0 ;
  logic [0:0] reg_chn_b_rsci_iswt0_cse_R1 ;
  logic [0:0] reg_chn_b_rsci_iswt0_cse_X1 ;
  logic [0:0] reg_chn_b_rsci_iswt0_cse_C1 ;
  logic [0:0] reg_chn_b_rsci_ld_core_psct_cse_R1 ;
  logic [0:0] reg_chn_b_rsci_ld_core_psct_cse_X1 ;
  logic [0:0] reg_chn_b_rsci_ld_core_psct_cse_C1 ;
  logic [0:0] chn_a_rsci_oswt_R0 ;
  logic [0:0] chn_a_rsci_oswt_X0 ;
  logic [0:0] chn_a_rsci_oswt_C0 ;
  logic [0:0] core_wen_R15 ;
  logic [0:0] core_wen_X15 ;
  logic [0:0] core_wen_C15 ;
  logic [0:0] core_wten_R0 ;
  logic [0:0] core_wten_X0 ;
  logic [0:0] core_wten_C0 ;
  logic [0:0] nvdla_core_rstn_R0 ;
  logic [0:0] nvdla_core_rstn_X0 ;
  logic [0:0] nvdla_core_rstn_C0 ;
// module: HLS_fp32_mul_core_chn_a_rsci
  HLS_fp32_mul_core_chn_a_rsci HLS_fp32_mul_core_chn_a_rsci_inst (
    .chn_a_rsc_vz_T (  chn_a_rsc_vz_T  ),
    .chn_a_rsc_vz_R (  chn_a_rsc_vz_R0  ),
    .chn_a_rsc_vz_X (  chn_a_rsc_vz_X0  ),
    .chn_a_rsc_vz_C (  chn_a_rsc_vz_C0  ),
    .chn_a_rsc_vz_S (  chn_a_rsc_vz_S  ),
    .chn_a_rsc_z_T (  chn_a_rsc_z_T  ),
    .chn_a_rsc_z_R (  chn_a_rsc_z_R0  ),
    .chn_a_rsc_z_X (  chn_a_rsc_z_X0  ),
    .chn_a_rsc_z_C (  chn_a_rsc_z_C0  ),
    .chn_a_rsc_z_S (  chn_a_rsc_z_S  ),
    .chn_a_rsci_iswt0_T (  reg_chn_b_rsci_iswt0_cse_T  ),
    .chn_a_rsci_iswt0_R (  reg_chn_b_rsci_iswt0_cse_R1  ),
    .chn_a_rsci_iswt0_X (  reg_chn_b_rsci_iswt0_cse_X1  ),
    .chn_a_rsci_iswt0_C (  reg_chn_b_rsci_iswt0_cse_C1  ),
    .chn_a_rsci_iswt0_S (  reg_chn_b_rsci_iswt0_cse_S  ),
    .chn_a_rsci_ld_core_psct_T (  reg_chn_b_rsci_ld_core_psct_cse_T  ),
    .chn_a_rsci_ld_core_psct_R (  reg_chn_b_rsci_ld_core_psct_cse_R1  ),
    .chn_a_rsci_ld_core_psct_X (  reg_chn_b_rsci_ld_core_psct_cse_X1  ),
    .chn_a_rsci_ld_core_psct_C (  reg_chn_b_rsci_ld_core_psct_cse_C1  ),
    .chn_a_rsci_ld_core_psct_S (  reg_chn_b_rsci_ld_core_psct_cse_S  ),
    .chn_a_rsci_oswt_T (  chn_a_rsci_oswt_T  ),
    .chn_a_rsci_oswt_R (  chn_a_rsci_oswt_R0  ),
    .chn_a_rsci_oswt_X (  chn_a_rsci_oswt_X0  ),
    .chn_a_rsci_oswt_C (  chn_a_rsci_oswt_C0  ),
    .chn_a_rsci_oswt_S (  chn_a_rsci_oswt_S  ),
    .core_wen_T (  core_wen_T  ),
    .core_wen_R (  core_wen_R15  ),
    .core_wen_X (  core_wen_X15  ),
    .core_wen_C (  core_wen_C15  ),
    .core_wen_S (  core_wen_S  ),
    .core_wten_T (  core_wten_T  ),
    .core_wten_R (  core_wten_R0  ),
    .core_wten_X (  core_wten_X0  ),
    .core_wten_C (  core_wten_C0  ),
    .core_wten_S (  core_wten_S  ),
    .nvdla_core_rstn_T (  nvdla_core_rstn_T  ),
    .nvdla_core_rstn_R (  nvdla_core_rstn_R0  ),
    .nvdla_core_rstn_X (  nvdla_core_rstn_X0  ),
    .nvdla_core_rstn_C (  nvdla_core_rstn_C0  ),
    .nvdla_core_rstn_S (  nvdla_core_rstn_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .chn_a_rsc_lz_T (  chn_a_rsc_lz_T  ),
    .chn_a_rsc_lz_R0 (  chn_a_rsc_lz_R  ),
    .chn_a_rsc_lz_X0 (  chn_a_rsc_lz_X  ),
    .chn_a_rsc_lz_C0 (  chn_a_rsc_lz_C  ),
    .chn_a_rsc_lz_S ( chn_a_rsc_lz_S ),
    .chn_a_rsci_bawt_T (  chn_a_rsci_bawt_T  ),
    .chn_a_rsci_bawt_R0 (  chn_a_rsci_bawt_R  ),
    .chn_a_rsci_bawt_X0 (  chn_a_rsci_bawt_X  ),
    .chn_a_rsci_bawt_C0 (  chn_a_rsci_bawt_C  ),
    .chn_a_rsci_bawt_S ( chn_a_rsci_bawt_S ),
    .chn_a_rsci_d_mxwt_T (  chn_a_rsci_d_mxwt_T  ),
    .chn_a_rsci_d_mxwt_R0 (  chn_a_rsci_d_mxwt_R  ),
    .chn_a_rsci_d_mxwt_X0 (  chn_a_rsci_d_mxwt_X  ),
    .chn_a_rsci_d_mxwt_C0 (  chn_a_rsci_d_mxwt_C  ),
    .chn_a_rsci_d_mxwt_S ( chn_a_rsci_d_mxwt_S ),
    .chn_a_rsci_wen_comp_T (  chn_a_rsci_wen_comp_T  ),
    .chn_a_rsci_wen_comp_R0 (  chn_a_rsci_wen_comp_R  ),
    .chn_a_rsci_wen_comp_X0 (  chn_a_rsci_wen_comp_X  ),
    .chn_a_rsci_wen_comp_C0 (  chn_a_rsci_wen_comp_C  ),
    .chn_a_rsci_wen_comp_S ( chn_a_rsci_wen_comp_S ),
    .nvdla_core_clk ( nvdla_core_clk ),
    .chn_a_rsci_d_mxwt ( chn_a_rsci_d_mxwt ),
    .core_wten ( core_wten ),
    .chn_a_rsci_bawt ( chn_a_rsci_bawt ),
    .chn_a_rsc_z ( chn_a_rsc_z ),
    .chn_a_rsc_lz ( chn_a_rsc_lz ),
    .chn_a_rsc_vz ( chn_a_rsc_vz ),
    .chn_a_rsci_ld_core_psct ( reg_chn_b_rsci_ld_core_psct_cse ),
    .chn_a_rsci_oswt ( chn_a_rsci_oswt ),
    .nvdla_core_rstn ( nvdla_core_rstn ),
    .chn_a_rsci_wen_comp ( chn_a_rsci_wen_comp ),
    .chn_a_rsci_iswt0 ( reg_chn_b_rsci_iswt0_cse ),
    .core_wen ( core_wen )
  );
  logic [0:0] chn_b_rsc_vz_R0 ;
  logic [0:0] chn_b_rsc_vz_X0 ;
  logic [0:0] chn_b_rsc_vz_C0 ;
  logic [31:0] chn_b_rsc_z_R0 ;
  logic [31:0] chn_b_rsc_z_X0 ;
  logic [31:0] chn_b_rsc_z_C0 ;
  logic [0:0] reg_chn_b_rsci_iswt0_cse_R2 ;
  logic [0:0] reg_chn_b_rsci_iswt0_cse_X2 ;
  logic [0:0] reg_chn_b_rsci_iswt0_cse_C2 ;
  logic [0:0] reg_chn_b_rsci_ld_core_psct_cse_R2 ;
  logic [0:0] reg_chn_b_rsci_ld_core_psct_cse_X2 ;
  logic [0:0] reg_chn_b_rsci_ld_core_psct_cse_C2 ;
  logic [0:0] chn_b_rsci_oswt_R0 ;
  logic [0:0] chn_b_rsci_oswt_X0 ;
  logic [0:0] chn_b_rsci_oswt_C0 ;
  logic [0:0] core_wen_R16 ;
  logic [0:0] core_wen_X16 ;
  logic [0:0] core_wen_C16 ;
  logic [0:0] core_wten_R1 ;
  logic [0:0] core_wten_X1 ;
  logic [0:0] core_wten_C1 ;
  logic [0:0] nvdla_core_rstn_R1 ;
  logic [0:0] nvdla_core_rstn_X1 ;
  logic [0:0] nvdla_core_rstn_C1 ;
// module: HLS_fp32_mul_core_chn_b_rsci
  HLS_fp32_mul_core_chn_b_rsci HLS_fp32_mul_core_chn_b_rsci_inst (
    .chn_b_rsc_vz_T (  chn_b_rsc_vz_T  ),
    .chn_b_rsc_vz_R (  chn_b_rsc_vz_R0  ),
    .chn_b_rsc_vz_X (  chn_b_rsc_vz_X0  ),
    .chn_b_rsc_vz_C (  chn_b_rsc_vz_C0  ),
    .chn_b_rsc_vz_S (  chn_b_rsc_vz_S  ),
    .chn_b_rsc_z_T (  chn_b_rsc_z_T  ),
    .chn_b_rsc_z_R (  chn_b_rsc_z_R0  ),
    .chn_b_rsc_z_X (  chn_b_rsc_z_X0  ),
    .chn_b_rsc_z_C (  chn_b_rsc_z_C0  ),
    .chn_b_rsc_z_S (  chn_b_rsc_z_S  ),
    .chn_b_rsci_iswt0_T (  reg_chn_b_rsci_iswt0_cse_T  ),
    .chn_b_rsci_iswt0_R (  reg_chn_b_rsci_iswt0_cse_R2  ),
    .chn_b_rsci_iswt0_X (  reg_chn_b_rsci_iswt0_cse_X2  ),
    .chn_b_rsci_iswt0_C (  reg_chn_b_rsci_iswt0_cse_C2  ),
    .chn_b_rsci_iswt0_S (  reg_chn_b_rsci_iswt0_cse_S  ),
    .chn_b_rsci_ld_core_psct_T (  reg_chn_b_rsci_ld_core_psct_cse_T  ),
    .chn_b_rsci_ld_core_psct_R (  reg_chn_b_rsci_ld_core_psct_cse_R2  ),
    .chn_b_rsci_ld_core_psct_X (  reg_chn_b_rsci_ld_core_psct_cse_X2  ),
    .chn_b_rsci_ld_core_psct_C (  reg_chn_b_rsci_ld_core_psct_cse_C2  ),
    .chn_b_rsci_ld_core_psct_S (  reg_chn_b_rsci_ld_core_psct_cse_S  ),
    .chn_b_rsci_oswt_T (  chn_b_rsci_oswt_T  ),
    .chn_b_rsci_oswt_R (  chn_b_rsci_oswt_R0  ),
    .chn_b_rsci_oswt_X (  chn_b_rsci_oswt_X0  ),
    .chn_b_rsci_oswt_C (  chn_b_rsci_oswt_C0  ),
    .chn_b_rsci_oswt_S (  chn_b_rsci_oswt_S  ),
    .core_wen_T (  core_wen_T  ),
    .core_wen_R (  core_wen_R16  ),
    .core_wen_X (  core_wen_X16  ),
    .core_wen_C (  core_wen_C16  ),
    .core_wen_S (  core_wen_S  ),
    .core_wten_T (  core_wten_T  ),
    .core_wten_R (  core_wten_R1  ),
    .core_wten_X (  core_wten_X1  ),
    .core_wten_C (  core_wten_C1  ),
    .core_wten_S (  core_wten_S  ),
    .nvdla_core_rstn_T (  nvdla_core_rstn_T  ),
    .nvdla_core_rstn_R (  nvdla_core_rstn_R1  ),
    .nvdla_core_rstn_X (  nvdla_core_rstn_X1  ),
    .nvdla_core_rstn_C (  nvdla_core_rstn_C1  ),
    .nvdla_core_rstn_S (  nvdla_core_rstn_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .chn_b_rsc_lz_T (  chn_b_rsc_lz_T  ),
    .chn_b_rsc_lz_R0 (  chn_b_rsc_lz_R  ),
    .chn_b_rsc_lz_X0 (  chn_b_rsc_lz_X  ),
    .chn_b_rsc_lz_C0 (  chn_b_rsc_lz_C  ),
    .chn_b_rsc_lz_S ( chn_b_rsc_lz_S ),
    .chn_b_rsci_bawt_T (  chn_b_rsci_bawt_T  ),
    .chn_b_rsci_bawt_R0 (  chn_b_rsci_bawt_R  ),
    .chn_b_rsci_bawt_X0 (  chn_b_rsci_bawt_X  ),
    .chn_b_rsci_bawt_C0 (  chn_b_rsci_bawt_C  ),
    .chn_b_rsci_bawt_S ( chn_b_rsci_bawt_S ),
    .chn_b_rsci_d_mxwt_T (  chn_b_rsci_d_mxwt_T  ),
    .chn_b_rsci_d_mxwt_R0 (  chn_b_rsci_d_mxwt_R  ),
    .chn_b_rsci_d_mxwt_X0 (  chn_b_rsci_d_mxwt_X  ),
    .chn_b_rsci_d_mxwt_C0 (  chn_b_rsci_d_mxwt_C  ),
    .chn_b_rsci_d_mxwt_S ( chn_b_rsci_d_mxwt_S ),
    .chn_b_rsci_wen_comp_T (  chn_b_rsci_wen_comp_T  ),
    .chn_b_rsci_wen_comp_R0 (  chn_b_rsci_wen_comp_R  ),
    .chn_b_rsci_wen_comp_X0 (  chn_b_rsci_wen_comp_X  ),
    .chn_b_rsci_wen_comp_C0 (  chn_b_rsci_wen_comp_C  ),
    .chn_b_rsci_wen_comp_S ( chn_b_rsci_wen_comp_S ),
    .nvdla_core_rstn ( nvdla_core_rstn ),
    .chn_b_rsc_z ( chn_b_rsc_z ),
    .chn_b_rsci_d_mxwt ( chn_b_rsci_d_mxwt ),
    .nvdla_core_clk ( nvdla_core_clk ),
    .chn_b_rsci_iswt0 ( reg_chn_b_rsci_iswt0_cse ),
    .chn_b_rsc_lz ( chn_b_rsc_lz ),
    .chn_b_rsci_bawt ( chn_b_rsci_bawt ),
    .chn_b_rsc_vz ( chn_b_rsc_vz ),
    .chn_b_rsci_wen_comp ( chn_b_rsci_wen_comp ),
    .chn_b_rsci_ld_core_psct ( reg_chn_b_rsci_ld_core_psct_cse ),
    .chn_b_rsci_oswt ( chn_b_rsci_oswt ),
    .core_wen ( core_wen ),
    .core_wten ( core_wten )
  );
  logic [0:0] chn_o_rsc_vz_R0 ;
  logic [0:0] chn_o_rsc_vz_X0 ;
  logic [0:0] chn_o_rsc_vz_C0 ;
  logic [0:0] chn_o_rsci_d_31_R1 ;
  logic [0:0] chn_o_rsci_d_31_X1 ;
  logic [0:0] chn_o_rsci_d_31_C1 ;
  logic [7:0] chn_o_rsci_d_30_23_R1 ;
  logic [7:0] chn_o_rsci_d_30_23_X1 ;
  logic [7:0] chn_o_rsci_d_30_23_C1 ;
  logic [22:0] chn_o_rsci_d_22_0_R1 ;
  logic [22:0] chn_o_rsci_d_22_0_X1 ;
  logic [22:0] chn_o_rsci_d_22_0_C1 ;
  logic [0:0] chn_o_rsci_iswt0_R1 ;
  logic [0:0] chn_o_rsci_iswt0_X1 ;
  logic [0:0] chn_o_rsci_iswt0_C1 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R5 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X5 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C5 ;
  logic [0:0] chn_o_rsci_oswt_R0 ;
  logic [0:0] chn_o_rsci_oswt_X0 ;
  logic [0:0] chn_o_rsci_oswt_C0 ;
  logic [0:0] core_wen_R17 ;
  logic [0:0] core_wen_X17 ;
  logic [0:0] core_wen_C17 ;
  logic [0:0] core_wten_R2 ;
  logic [0:0] core_wten_X2 ;
  logic [0:0] core_wten_C2 ;
  logic [0:0] nvdla_core_rstn_R2 ;
  logic [0:0] nvdla_core_rstn_X2 ;
  logic [0:0] nvdla_core_rstn_C2 ;
// module: HLS_fp32_mul_core_chn_o_rsci
  HLS_fp32_mul_core_chn_o_rsci HLS_fp32_mul_core_chn_o_rsci_inst (
    .chn_o_rsc_vz_T (  chn_o_rsc_vz_T  ),
    .chn_o_rsc_vz_R (  chn_o_rsc_vz_R0  ),
    .chn_o_rsc_vz_X (  chn_o_rsc_vz_X0  ),
    .chn_o_rsc_vz_C (  chn_o_rsc_vz_C0  ),
    .chn_o_rsc_vz_S (  chn_o_rsc_vz_S  ),
    .chn_o_rsci_d_T ( {  chn_o_rsci_d_31_T , chn_o_rsci_d_30_23_T , chn_o_rsci_d_22_0_T  } ),
    .chn_o_rsci_d_R ( {  chn_o_rsci_d_31_R1 , chn_o_rsci_d_30_23_R1 , chn_o_rsci_d_22_0_R1  } ),
    .chn_o_rsci_d_X ( {  chn_o_rsci_d_31_X1 , chn_o_rsci_d_30_23_X1 , chn_o_rsci_d_22_0_X1  } ),
    .chn_o_rsci_d_C ( {  chn_o_rsci_d_31_C1 , chn_o_rsci_d_30_23_C1 , chn_o_rsci_d_22_0_C1  } ),
    .chn_o_rsci_d_S ( {  chn_o_rsci_d_31_S , chn_o_rsci_d_30_23_S , chn_o_rsci_d_22_0_S  } ),
    .chn_o_rsci_iswt0_T (  chn_o_rsci_iswt0_T  ),
    .chn_o_rsci_iswt0_R (  chn_o_rsci_iswt0_R1  ),
    .chn_o_rsci_iswt0_X (  chn_o_rsci_iswt0_X1  ),
    .chn_o_rsci_iswt0_C (  chn_o_rsci_iswt0_C1  ),
    .chn_o_rsci_iswt0_S (  chn_o_rsci_iswt0_S  ),
    .chn_o_rsci_ld_core_psct_T (  reg_chn_o_rsci_ld_core_psct_cse_T  ),
    .chn_o_rsci_ld_core_psct_R (  reg_chn_o_rsci_ld_core_psct_cse_R5  ),
    .chn_o_rsci_ld_core_psct_X (  reg_chn_o_rsci_ld_core_psct_cse_X5  ),
    .chn_o_rsci_ld_core_psct_C (  reg_chn_o_rsci_ld_core_psct_cse_C5  ),
    .chn_o_rsci_ld_core_psct_S (  reg_chn_o_rsci_ld_core_psct_cse_S  ),
    .chn_o_rsci_oswt_T (  chn_o_rsci_oswt_T  ),
    .chn_o_rsci_oswt_R (  chn_o_rsci_oswt_R0  ),
    .chn_o_rsci_oswt_X (  chn_o_rsci_oswt_X0  ),
    .chn_o_rsci_oswt_C (  chn_o_rsci_oswt_C0  ),
    .chn_o_rsci_oswt_S (  chn_o_rsci_oswt_S  ),
    .core_wen_T (  core_wen_T  ),
    .core_wen_R (  core_wen_R17  ),
    .core_wen_X (  core_wen_X17  ),
    .core_wen_C (  core_wen_C17  ),
    .core_wen_S (  core_wen_S  ),
    .core_wten_T (  core_wten_T  ),
    .core_wten_R (  core_wten_R2  ),
    .core_wten_X (  core_wten_X2  ),
    .core_wten_C (  core_wten_C2  ),
    .core_wten_S (  core_wten_S  ),
    .nvdla_core_rstn_T (  nvdla_core_rstn_T  ),
    .nvdla_core_rstn_R (  nvdla_core_rstn_R2  ),
    .nvdla_core_rstn_X (  nvdla_core_rstn_X2  ),
    .nvdla_core_rstn_C (  nvdla_core_rstn_C2  ),
    .nvdla_core_rstn_S (  nvdla_core_rstn_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .chn_o_rsc_lz_T (  chn_o_rsc_lz_T  ),
    .chn_o_rsc_lz_R0 (  chn_o_rsc_lz_R  ),
    .chn_o_rsc_lz_X0 (  chn_o_rsc_lz_X  ),
    .chn_o_rsc_lz_C0 (  chn_o_rsc_lz_C  ),
    .chn_o_rsc_lz_S ( chn_o_rsc_lz_S ),
    .chn_o_rsc_z_T (  chn_o_rsc_z_T  ),
    .chn_o_rsc_z_R0 (  chn_o_rsc_z_R  ),
    .chn_o_rsc_z_X0 (  chn_o_rsc_z_X  ),
    .chn_o_rsc_z_C0 (  chn_o_rsc_z_C  ),
    .chn_o_rsc_z_S ( chn_o_rsc_z_S ),
    .chn_o_rsci_bawt_T (  chn_o_rsci_bawt_T  ),
    .chn_o_rsci_bawt_R0 (  chn_o_rsci_bawt_R  ),
    .chn_o_rsci_bawt_X0 (  chn_o_rsci_bawt_X  ),
    .chn_o_rsci_bawt_C0 (  chn_o_rsci_bawt_C  ),
    .chn_o_rsci_bawt_S ( chn_o_rsci_bawt_S ),
    .chn_o_rsci_wen_comp_T (  chn_o_rsci_wen_comp_T  ),
    .chn_o_rsci_wen_comp_R0 (  chn_o_rsci_wen_comp_R  ),
    .chn_o_rsci_wen_comp_X0 (  chn_o_rsci_wen_comp_X  ),
    .chn_o_rsci_wen_comp_C0 (  chn_o_rsci_wen_comp_C  ),
    .chn_o_rsci_wen_comp_S ( chn_o_rsci_wen_comp_S ),
    .nvdla_core_rstn ( nvdla_core_rstn ),
    .nvdla_core_clk ( nvdla_core_clk ),
    .chn_o_rsci_d ( { chn_o_rsci_d_31, chn_o_rsci_d_30_23, chn_o_rsci_d_22_0 } ),
    .core_wten ( core_wten ),
    .chn_o_rsc_z ( chn_o_rsc_z ),
    .core_wen ( core_wen ),
    .chn_o_rsc_lz ( chn_o_rsc_lz ),
    .chn_o_rsci_ld_core_psct ( reg_chn_o_rsci_ld_core_psct_cse ),
    .chn_o_rsci_bawt ( chn_o_rsci_bawt ),
    .chn_o_rsc_vz ( chn_o_rsc_vz ),
    .chn_o_rsci_wen_comp ( chn_o_rsci_wen_comp ),
    .chn_o_rsci_iswt0 ( chn_o_rsci_iswt0 ),
    .chn_o_rsci_oswt ( chn_o_rsci_oswt )
  );
  logic [0:0] core_wen_R18 ;
  logic [0:0] core_wen_X18 ;
  logic [0:0] core_wen_C18 ;
  logic [0:0] nvdla_core_rstn_R3 ;
  logic [0:0] nvdla_core_rstn_X3 ;
  logic [0:0] nvdla_core_rstn_C3 ;
// module: HLS_fp32_mul_core_core_fsm
  HLS_fp32_mul_core_core_fsm HLS_fp32_mul_core_core_fsm_inst (
    .core_wen_T (  core_wen_T  ),
    .core_wen_R (  core_wen_R18  ),
    .core_wen_X (  core_wen_X18  ),
    .core_wen_C (  core_wen_C18  ),
    .core_wen_S (  core_wen_S  ),
    .nvdla_core_rstn_T (  nvdla_core_rstn_T  ),
    .nvdla_core_rstn_R (  nvdla_core_rstn_R3  ),
    .nvdla_core_rstn_X (  nvdla_core_rstn_X3  ),
    .nvdla_core_rstn_C (  nvdla_core_rstn_C3  ),
    .nvdla_core_rstn_S (  nvdla_core_rstn_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .fsm_output_T (  fsm_output_T  ),
    .fsm_output_R0 (  fsm_output_R  ),
    .fsm_output_X0 (  fsm_output_X  ),
    .fsm_output_C0 (  fsm_output_C  ),
    .fsm_output_S ( fsm_output_S ),
    .nvdla_core_clk ( nvdla_core_clk ),
    .nvdla_core_rstn ( nvdla_core_rstn ),
    .core_wen ( core_wen ),
    .fsm_output ( fsm_output )
  );
  logic [0:0] chn_a_rsci_wen_comp_R0 ;
  logic [0:0] chn_a_rsci_wen_comp_X0 ;
  logic [0:0] chn_a_rsci_wen_comp_C0 ;
  logic [0:0] chn_b_rsci_wen_comp_R0 ;
  logic [0:0] chn_b_rsci_wen_comp_X0 ;
  logic [0:0] chn_b_rsci_wen_comp_C0 ;
  logic [0:0] chn_o_rsci_wen_comp_R0 ;
  logic [0:0] chn_o_rsci_wen_comp_X0 ;
  logic [0:0] chn_o_rsci_wen_comp_C0 ;
  logic [0:0] nvdla_core_rstn_R4 ;
  logic [0:0] nvdla_core_rstn_X4 ;
  logic [0:0] nvdla_core_rstn_C4 ;
// module: HLS_fp32_mul_core_staller
  HLS_fp32_mul_core_staller HLS_fp32_mul_core_staller_inst (
    .chn_a_rsci_wen_comp_T (  chn_a_rsci_wen_comp_T  ),
    .chn_a_rsci_wen_comp_R (  chn_a_rsci_wen_comp_R0  ),
    .chn_a_rsci_wen_comp_X (  chn_a_rsci_wen_comp_X0  ),
    .chn_a_rsci_wen_comp_C (  chn_a_rsci_wen_comp_C0  ),
    .chn_a_rsci_wen_comp_S (  chn_a_rsci_wen_comp_S  ),
    .chn_b_rsci_wen_comp_T (  chn_b_rsci_wen_comp_T  ),
    .chn_b_rsci_wen_comp_R (  chn_b_rsci_wen_comp_R0  ),
    .chn_b_rsci_wen_comp_X (  chn_b_rsci_wen_comp_X0  ),
    .chn_b_rsci_wen_comp_C (  chn_b_rsci_wen_comp_C0  ),
    .chn_b_rsci_wen_comp_S (  chn_b_rsci_wen_comp_S  ),
    .chn_o_rsci_wen_comp_T (  chn_o_rsci_wen_comp_T  ),
    .chn_o_rsci_wen_comp_R (  chn_o_rsci_wen_comp_R0  ),
    .chn_o_rsci_wen_comp_X (  chn_o_rsci_wen_comp_X0  ),
    .chn_o_rsci_wen_comp_C (  chn_o_rsci_wen_comp_C0  ),
    .chn_o_rsci_wen_comp_S (  chn_o_rsci_wen_comp_S  ),
    .nvdla_core_rstn_T (  nvdla_core_rstn_T  ),
    .nvdla_core_rstn_R (  nvdla_core_rstn_R4  ),
    .nvdla_core_rstn_X (  nvdla_core_rstn_X4  ),
    .nvdla_core_rstn_C (  nvdla_core_rstn_C4  ),
    .nvdla_core_rstn_S (  nvdla_core_rstn_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .core_wen_T (  core_wen_T  ),
    .core_wen_R0 (  core_wen_R  ),
    .core_wen_X0 (  core_wen_X  ),
    .core_wen_C0 (  core_wen_C  ),
    .core_wen_S ( core_wen_S ),
    .core_wten_T (  core_wten_T  ),
    .core_wten_R0 (  core_wten_R  ),
    .core_wten_X0 (  core_wten_X  ),
    .core_wten_C0 (  core_wten_C  ),
    .core_wten_S ( core_wten_S ),
    .nvdla_core_clk ( nvdla_core_clk ),
    .chn_b_rsci_wen_comp ( chn_b_rsci_wen_comp ),
    .core_wten ( core_wten ),
    .nvdla_core_rstn ( nvdla_core_rstn ),
    .chn_a_rsci_wen_comp ( chn_a_rsci_wen_comp ),
    .chn_o_rsci_wen_comp ( chn_o_rsci_wen_comp ),
    .core_wen ( core_wen )
  );
  assign _004_[21:0] = { _004_[22], _004_[22], _004_[22], _004_[22], _004_[22], _004_[22], _004_[22], _004_[22], _004_[22], _004_[22], _004_[22], _004_[22], _004_[22], _004_[22], _004_[22], _004_[22], _004_[22], _004_[22], _004_[22], _004_[22], _004_[22], _004_[22] };
  assign _004__T [21:0] = {  _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22] , _004__T [22]  };
  logic [13:0] _004__S ;
  assign _004__S = 0 ;
  assign { _004__R24 [0], _004__R24 [1], _004__R24 [2], _004__R24 [3], _004__R24 [4], _004__R24 [5], _004__R24 [6], _004__R24 [7], _004__R24 [8], _004__R24 [9], _004__R24 [10], _004__R24 [11], _004__R24 [12], _004__R24 [13], _004__R24 [14], _004__R24 [15], _004__R24 [16], _004__R24 [17], _004__R24 [18], _004__R24 [19], _004__R24 [20], _004__R24 [21] } = 0;
  assign { _004__X24 [0], _004__X24 [1], _004__X24 [2], _004__X24 [3], _004__X24 [4], _004__X24 [5], _004__X24 [6], _004__X24 [7], _004__X24 [8], _004__X24 [9], _004__X24 [10], _004__X24 [11], _004__X24 [12], _004__X24 [13], _004__X24 [14], _004__X24 [15], _004__X24 [16], _004__X24 [17], _004__X24 [18], _004__X24 [19], _004__X24 [20], _004__X24 [21] } = 0;
  assign { _004__C24 [0], _004__C24 [1], _004__C24 [2], _004__C24 [3], _004__C24 [4], _004__C24 [5], _004__C24 [6], _004__C24 [7], _004__C24 [8], _004__C24 [9], _004__C24 [10], _004__C24 [11], _004__C24 [12], _004__C24 [13], _004__C24 [14], _004__C24 [15], _004__C24 [16], _004__C24 [17], _004__C24 [18], _004__C24 [19], _004__C24 [20], _004__C24 [21] } = 0;
  logic [22:0] _004__R25 ;
  logic [22:0] _004__X25 ;
  logic [22:0] _004__C25 ;
  assign _004__R25 [22:22] = _004__R [21:21] ;
  assign _004__X25 [22:22] = _004__X [21:21] ;
  assign _004__C25 [22:22] = _004__C [21:21] ;
  assign { _004__R25 [0], _004__R25 [1], _004__R25 [2], _004__R25 [3], _004__R25 [4], _004__R25 [5], _004__R25 [6], _004__R25 [7], _004__R25 [8], _004__R25 [9], _004__R25 [10], _004__R25 [11], _004__R25 [12], _004__R25 [13], _004__R25 [14], _004__R25 [15], _004__R25 [16], _004__R25 [17], _004__R25 [18], _004__R25 [19], _004__R25 [20], _004__R25 [21] } = 0;
  assign { _004__X25 [0], _004__X25 [1], _004__X25 [2], _004__X25 [3], _004__X25 [4], _004__X25 [5], _004__X25 [6], _004__X25 [7], _004__X25 [8], _004__X25 [9], _004__X25 [10], _004__X25 [11], _004__X25 [12], _004__X25 [13], _004__X25 [14], _004__X25 [15], _004__X25 [16], _004__X25 [17], _004__X25 [18], _004__X25 [19], _004__X25 [20], _004__X25 [21] } = 0;
  assign { _004__C25 [0], _004__C25 [1], _004__C25 [2], _004__C25 [3], _004__C25 [4], _004__C25 [5], _004__C25 [6], _004__C25 [7], _004__C25 [8], _004__C25 [9], _004__C25 [10], _004__C25 [11], _004__C25 [12], _004__C25 [13], _004__C25 [14], _004__C25 [15], _004__C25 [16], _004__C25 [17], _004__C25 [18], _004__C25 [19], _004__C25 [20], _004__C25 [21] } = 0;
  logic [22:0] _004__R26 ;
  logic [22:0] _004__X26 ;
  logic [22:0] _004__C26 ;
  assign _004__R26 [22:22] = _004__R [20:20] ;
  assign _004__X26 [22:22] = _004__X [20:20] ;
  assign _004__C26 [22:22] = _004__C [20:20] ;
  assign { _004__R26 [0], _004__R26 [1], _004__R26 [2], _004__R26 [3], _004__R26 [4], _004__R26 [5], _004__R26 [6], _004__R26 [7], _004__R26 [8], _004__R26 [9], _004__R26 [10], _004__R26 [11], _004__R26 [12], _004__R26 [13], _004__R26 [14], _004__R26 [15], _004__R26 [16], _004__R26 [17], _004__R26 [18], _004__R26 [19], _004__R26 [20], _004__R26 [21] } = 0;
  assign { _004__X26 [0], _004__X26 [1], _004__X26 [2], _004__X26 [3], _004__X26 [4], _004__X26 [5], _004__X26 [6], _004__X26 [7], _004__X26 [8], _004__X26 [9], _004__X26 [10], _004__X26 [11], _004__X26 [12], _004__X26 [13], _004__X26 [14], _004__X26 [15], _004__X26 [16], _004__X26 [17], _004__X26 [18], _004__X26 [19], _004__X26 [20], _004__X26 [21] } = 0;
  assign { _004__C26 [0], _004__C26 [1], _004__C26 [2], _004__C26 [3], _004__C26 [4], _004__C26 [5], _004__C26 [6], _004__C26 [7], _004__C26 [8], _004__C26 [9], _004__C26 [10], _004__C26 [11], _004__C26 [12], _004__C26 [13], _004__C26 [14], _004__C26 [15], _004__C26 [16], _004__C26 [17], _004__C26 [18], _004__C26 [19], _004__C26 [20], _004__C26 [21] } = 0;
  logic [22:0] _004__R27 ;
  logic [22:0] _004__X27 ;
  logic [22:0] _004__C27 ;
  assign _004__R27 [22:22] = _004__R [19:19] ;
  assign _004__X27 [22:22] = _004__X [19:19] ;
  assign _004__C27 [22:22] = _004__C [19:19] ;
  assign { _004__R27 [0], _004__R27 [1], _004__R27 [2], _004__R27 [3], _004__R27 [4], _004__R27 [5], _004__R27 [6], _004__R27 [7], _004__R27 [8], _004__R27 [9], _004__R27 [10], _004__R27 [11], _004__R27 [12], _004__R27 [13], _004__R27 [14], _004__R27 [15], _004__R27 [16], _004__R27 [17], _004__R27 [18], _004__R27 [19], _004__R27 [20], _004__R27 [21] } = 0;
  assign { _004__X27 [0], _004__X27 [1], _004__X27 [2], _004__X27 [3], _004__X27 [4], _004__X27 [5], _004__X27 [6], _004__X27 [7], _004__X27 [8], _004__X27 [9], _004__X27 [10], _004__X27 [11], _004__X27 [12], _004__X27 [13], _004__X27 [14], _004__X27 [15], _004__X27 [16], _004__X27 [17], _004__X27 [18], _004__X27 [19], _004__X27 [20], _004__X27 [21] } = 0;
  assign { _004__C27 [0], _004__C27 [1], _004__C27 [2], _004__C27 [3], _004__C27 [4], _004__C27 [5], _004__C27 [6], _004__C27 [7], _004__C27 [8], _004__C27 [9], _004__C27 [10], _004__C27 [11], _004__C27 [12], _004__C27 [13], _004__C27 [14], _004__C27 [15], _004__C27 [16], _004__C27 [17], _004__C27 [18], _004__C27 [19], _004__C27 [20], _004__C27 [21] } = 0;
  logic [22:0] _004__R28 ;
  logic [22:0] _004__X28 ;
  logic [22:0] _004__C28 ;
  assign _004__R28 [22:22] = _004__R [18:18] ;
  assign _004__X28 [22:22] = _004__X [18:18] ;
  assign _004__C28 [22:22] = _004__C [18:18] ;
  assign { _004__R28 [0], _004__R28 [1], _004__R28 [2], _004__R28 [3], _004__R28 [4], _004__R28 [5], _004__R28 [6], _004__R28 [7], _004__R28 [8], _004__R28 [9], _004__R28 [10], _004__R28 [11], _004__R28 [12], _004__R28 [13], _004__R28 [14], _004__R28 [15], _004__R28 [16], _004__R28 [17], _004__R28 [18], _004__R28 [19], _004__R28 [20], _004__R28 [21] } = 0;
  assign { _004__X28 [0], _004__X28 [1], _004__X28 [2], _004__X28 [3], _004__X28 [4], _004__X28 [5], _004__X28 [6], _004__X28 [7], _004__X28 [8], _004__X28 [9], _004__X28 [10], _004__X28 [11], _004__X28 [12], _004__X28 [13], _004__X28 [14], _004__X28 [15], _004__X28 [16], _004__X28 [17], _004__X28 [18], _004__X28 [19], _004__X28 [20], _004__X28 [21] } = 0;
  assign { _004__C28 [0], _004__C28 [1], _004__C28 [2], _004__C28 [3], _004__C28 [4], _004__C28 [5], _004__C28 [6], _004__C28 [7], _004__C28 [8], _004__C28 [9], _004__C28 [10], _004__C28 [11], _004__C28 [12], _004__C28 [13], _004__C28 [14], _004__C28 [15], _004__C28 [16], _004__C28 [17], _004__C28 [18], _004__C28 [19], _004__C28 [20], _004__C28 [21] } = 0;
  logic [22:0] _004__R29 ;
  logic [22:0] _004__X29 ;
  logic [22:0] _004__C29 ;
  assign _004__R29 [22:22] = _004__R [17:17] ;
  assign _004__X29 [22:22] = _004__X [17:17] ;
  assign _004__C29 [22:22] = _004__C [17:17] ;
  assign { _004__R29 [0], _004__R29 [1], _004__R29 [2], _004__R29 [3], _004__R29 [4], _004__R29 [5], _004__R29 [6], _004__R29 [7], _004__R29 [8], _004__R29 [9], _004__R29 [10], _004__R29 [11], _004__R29 [12], _004__R29 [13], _004__R29 [14], _004__R29 [15], _004__R29 [16], _004__R29 [17], _004__R29 [18], _004__R29 [19], _004__R29 [20], _004__R29 [21] } = 0;
  assign { _004__X29 [0], _004__X29 [1], _004__X29 [2], _004__X29 [3], _004__X29 [4], _004__X29 [5], _004__X29 [6], _004__X29 [7], _004__X29 [8], _004__X29 [9], _004__X29 [10], _004__X29 [11], _004__X29 [12], _004__X29 [13], _004__X29 [14], _004__X29 [15], _004__X29 [16], _004__X29 [17], _004__X29 [18], _004__X29 [19], _004__X29 [20], _004__X29 [21] } = 0;
  assign { _004__C29 [0], _004__C29 [1], _004__C29 [2], _004__C29 [3], _004__C29 [4], _004__C29 [5], _004__C29 [6], _004__C29 [7], _004__C29 [8], _004__C29 [9], _004__C29 [10], _004__C29 [11], _004__C29 [12], _004__C29 [13], _004__C29 [14], _004__C29 [15], _004__C29 [16], _004__C29 [17], _004__C29 [18], _004__C29 [19], _004__C29 [20], _004__C29 [21] } = 0;
  logic [22:0] _004__R30 ;
  logic [22:0] _004__X30 ;
  logic [22:0] _004__C30 ;
  assign _004__R30 [22:22] = _004__R [16:16] ;
  assign _004__X30 [22:22] = _004__X [16:16] ;
  assign _004__C30 [22:22] = _004__C [16:16] ;
  assign { _004__R30 [0], _004__R30 [1], _004__R30 [2], _004__R30 [3], _004__R30 [4], _004__R30 [5], _004__R30 [6], _004__R30 [7], _004__R30 [8], _004__R30 [9], _004__R30 [10], _004__R30 [11], _004__R30 [12], _004__R30 [13], _004__R30 [14], _004__R30 [15], _004__R30 [16], _004__R30 [17], _004__R30 [18], _004__R30 [19], _004__R30 [20], _004__R30 [21] } = 0;
  assign { _004__X30 [0], _004__X30 [1], _004__X30 [2], _004__X30 [3], _004__X30 [4], _004__X30 [5], _004__X30 [6], _004__X30 [7], _004__X30 [8], _004__X30 [9], _004__X30 [10], _004__X30 [11], _004__X30 [12], _004__X30 [13], _004__X30 [14], _004__X30 [15], _004__X30 [16], _004__X30 [17], _004__X30 [18], _004__X30 [19], _004__X30 [20], _004__X30 [21] } = 0;
  assign { _004__C30 [0], _004__C30 [1], _004__C30 [2], _004__C30 [3], _004__C30 [4], _004__C30 [5], _004__C30 [6], _004__C30 [7], _004__C30 [8], _004__C30 [9], _004__C30 [10], _004__C30 [11], _004__C30 [12], _004__C30 [13], _004__C30 [14], _004__C30 [15], _004__C30 [16], _004__C30 [17], _004__C30 [18], _004__C30 [19], _004__C30 [20], _004__C30 [21] } = 0;
  logic [22:0] _004__R31 ;
  logic [22:0] _004__X31 ;
  logic [22:0] _004__C31 ;
  assign _004__R31 [22:22] = _004__R [15:15] ;
  assign _004__X31 [22:22] = _004__X [15:15] ;
  assign _004__C31 [22:22] = _004__C [15:15] ;
  assign { _004__R31 [0], _004__R31 [1], _004__R31 [2], _004__R31 [3], _004__R31 [4], _004__R31 [5], _004__R31 [6], _004__R31 [7], _004__R31 [8], _004__R31 [9], _004__R31 [10], _004__R31 [11], _004__R31 [12], _004__R31 [13], _004__R31 [14], _004__R31 [15], _004__R31 [16], _004__R31 [17], _004__R31 [18], _004__R31 [19], _004__R31 [20], _004__R31 [21] } = 0;
  assign { _004__X31 [0], _004__X31 [1], _004__X31 [2], _004__X31 [3], _004__X31 [4], _004__X31 [5], _004__X31 [6], _004__X31 [7], _004__X31 [8], _004__X31 [9], _004__X31 [10], _004__X31 [11], _004__X31 [12], _004__X31 [13], _004__X31 [14], _004__X31 [15], _004__X31 [16], _004__X31 [17], _004__X31 [18], _004__X31 [19], _004__X31 [20], _004__X31 [21] } = 0;
  assign { _004__C31 [0], _004__C31 [1], _004__C31 [2], _004__C31 [3], _004__C31 [4], _004__C31 [5], _004__C31 [6], _004__C31 [7], _004__C31 [8], _004__C31 [9], _004__C31 [10], _004__C31 [11], _004__C31 [12], _004__C31 [13], _004__C31 [14], _004__C31 [15], _004__C31 [16], _004__C31 [17], _004__C31 [18], _004__C31 [19], _004__C31 [20], _004__C31 [21] } = 0;
  logic [22:0] _004__R32 ;
  logic [22:0] _004__X32 ;
  logic [22:0] _004__C32 ;
  assign _004__R32 [22:22] = _004__R [14:14] ;
  assign _004__X32 [22:22] = _004__X [14:14] ;
  assign _004__C32 [22:22] = _004__C [14:14] ;
  assign { _004__R32 [0], _004__R32 [1], _004__R32 [2], _004__R32 [3], _004__R32 [4], _004__R32 [5], _004__R32 [6], _004__R32 [7], _004__R32 [8], _004__R32 [9], _004__R32 [10], _004__R32 [11], _004__R32 [12], _004__R32 [13], _004__R32 [14], _004__R32 [15], _004__R32 [16], _004__R32 [17], _004__R32 [18], _004__R32 [19], _004__R32 [20], _004__R32 [21] } = 0;
  assign { _004__X32 [0], _004__X32 [1], _004__X32 [2], _004__X32 [3], _004__X32 [4], _004__X32 [5], _004__X32 [6], _004__X32 [7], _004__X32 [8], _004__X32 [9], _004__X32 [10], _004__X32 [11], _004__X32 [12], _004__X32 [13], _004__X32 [14], _004__X32 [15], _004__X32 [16], _004__X32 [17], _004__X32 [18], _004__X32 [19], _004__X32 [20], _004__X32 [21] } = 0;
  assign { _004__C32 [0], _004__C32 [1], _004__C32 [2], _004__C32 [3], _004__C32 [4], _004__C32 [5], _004__C32 [6], _004__C32 [7], _004__C32 [8], _004__C32 [9], _004__C32 [10], _004__C32 [11], _004__C32 [12], _004__C32 [13], _004__C32 [14], _004__C32 [15], _004__C32 [16], _004__C32 [17], _004__C32 [18], _004__C32 [19], _004__C32 [20], _004__C32 [21] } = 0;
  logic [22:0] _004__R33 ;
  logic [22:0] _004__X33 ;
  logic [22:0] _004__C33 ;
  assign _004__R33 [22:22] = _004__R [13:13] ;
  assign _004__X33 [22:22] = _004__X [13:13] ;
  assign _004__C33 [22:22] = _004__C [13:13] ;
  assign { _004__R33 [0], _004__R33 [1], _004__R33 [2], _004__R33 [3], _004__R33 [4], _004__R33 [5], _004__R33 [6], _004__R33 [7], _004__R33 [8], _004__R33 [9], _004__R33 [10], _004__R33 [11], _004__R33 [12], _004__R33 [13], _004__R33 [14], _004__R33 [15], _004__R33 [16], _004__R33 [17], _004__R33 [18], _004__R33 [19], _004__R33 [20], _004__R33 [21] } = 0;
  assign { _004__X33 [0], _004__X33 [1], _004__X33 [2], _004__X33 [3], _004__X33 [4], _004__X33 [5], _004__X33 [6], _004__X33 [7], _004__X33 [8], _004__X33 [9], _004__X33 [10], _004__X33 [11], _004__X33 [12], _004__X33 [13], _004__X33 [14], _004__X33 [15], _004__X33 [16], _004__X33 [17], _004__X33 [18], _004__X33 [19], _004__X33 [20], _004__X33 [21] } = 0;
  assign { _004__C33 [0], _004__C33 [1], _004__C33 [2], _004__C33 [3], _004__C33 [4], _004__C33 [5], _004__C33 [6], _004__C33 [7], _004__C33 [8], _004__C33 [9], _004__C33 [10], _004__C33 [11], _004__C33 [12], _004__C33 [13], _004__C33 [14], _004__C33 [15], _004__C33 [16], _004__C33 [17], _004__C33 [18], _004__C33 [19], _004__C33 [20], _004__C33 [21] } = 0;
  logic [22:0] _004__R34 ;
  logic [22:0] _004__X34 ;
  logic [22:0] _004__C34 ;
  assign _004__R34 [22:22] = _004__R [12:12] ;
  assign _004__X34 [22:22] = _004__X [12:12] ;
  assign _004__C34 [22:22] = _004__C [12:12] ;
  assign { _004__R34 [0], _004__R34 [1], _004__R34 [2], _004__R34 [3], _004__R34 [4], _004__R34 [5], _004__R34 [6], _004__R34 [7], _004__R34 [8], _004__R34 [9], _004__R34 [10], _004__R34 [11], _004__R34 [12], _004__R34 [13], _004__R34 [14], _004__R34 [15], _004__R34 [16], _004__R34 [17], _004__R34 [18], _004__R34 [19], _004__R34 [20], _004__R34 [21] } = 0;
  assign { _004__X34 [0], _004__X34 [1], _004__X34 [2], _004__X34 [3], _004__X34 [4], _004__X34 [5], _004__X34 [6], _004__X34 [7], _004__X34 [8], _004__X34 [9], _004__X34 [10], _004__X34 [11], _004__X34 [12], _004__X34 [13], _004__X34 [14], _004__X34 [15], _004__X34 [16], _004__X34 [17], _004__X34 [18], _004__X34 [19], _004__X34 [20], _004__X34 [21] } = 0;
  assign { _004__C34 [0], _004__C34 [1], _004__C34 [2], _004__C34 [3], _004__C34 [4], _004__C34 [5], _004__C34 [6], _004__C34 [7], _004__C34 [8], _004__C34 [9], _004__C34 [10], _004__C34 [11], _004__C34 [12], _004__C34 [13], _004__C34 [14], _004__C34 [15], _004__C34 [16], _004__C34 [17], _004__C34 [18], _004__C34 [19], _004__C34 [20], _004__C34 [21] } = 0;
  logic [22:0] _004__R35 ;
  logic [22:0] _004__X35 ;
  logic [22:0] _004__C35 ;
  assign _004__R35 [22:22] = _004__R [11:11] ;
  assign _004__X35 [22:22] = _004__X [11:11] ;
  assign _004__C35 [22:22] = _004__C [11:11] ;
  assign { _004__R35 [0], _004__R35 [1], _004__R35 [2], _004__R35 [3], _004__R35 [4], _004__R35 [5], _004__R35 [6], _004__R35 [7], _004__R35 [8], _004__R35 [9], _004__R35 [10], _004__R35 [11], _004__R35 [12], _004__R35 [13], _004__R35 [14], _004__R35 [15], _004__R35 [16], _004__R35 [17], _004__R35 [18], _004__R35 [19], _004__R35 [20], _004__R35 [21] } = 0;
  assign { _004__X35 [0], _004__X35 [1], _004__X35 [2], _004__X35 [3], _004__X35 [4], _004__X35 [5], _004__X35 [6], _004__X35 [7], _004__X35 [8], _004__X35 [9], _004__X35 [10], _004__X35 [11], _004__X35 [12], _004__X35 [13], _004__X35 [14], _004__X35 [15], _004__X35 [16], _004__X35 [17], _004__X35 [18], _004__X35 [19], _004__X35 [20], _004__X35 [21] } = 0;
  assign { _004__C35 [0], _004__C35 [1], _004__C35 [2], _004__C35 [3], _004__C35 [4], _004__C35 [5], _004__C35 [6], _004__C35 [7], _004__C35 [8], _004__C35 [9], _004__C35 [10], _004__C35 [11], _004__C35 [12], _004__C35 [13], _004__C35 [14], _004__C35 [15], _004__C35 [16], _004__C35 [17], _004__C35 [18], _004__C35 [19], _004__C35 [20], _004__C35 [21] } = 0;
  logic [22:0] _004__R36 ;
  logic [22:0] _004__X36 ;
  logic [22:0] _004__C36 ;
  assign _004__R36 [22:22] = _004__R [10:10] ;
  assign _004__X36 [22:22] = _004__X [10:10] ;
  assign _004__C36 [22:22] = _004__C [10:10] ;
  assign { _004__R36 [0], _004__R36 [1], _004__R36 [2], _004__R36 [3], _004__R36 [4], _004__R36 [5], _004__R36 [6], _004__R36 [7], _004__R36 [8], _004__R36 [9], _004__R36 [10], _004__R36 [11], _004__R36 [12], _004__R36 [13], _004__R36 [14], _004__R36 [15], _004__R36 [16], _004__R36 [17], _004__R36 [18], _004__R36 [19], _004__R36 [20], _004__R36 [21] } = 0;
  assign { _004__X36 [0], _004__X36 [1], _004__X36 [2], _004__X36 [3], _004__X36 [4], _004__X36 [5], _004__X36 [6], _004__X36 [7], _004__X36 [8], _004__X36 [9], _004__X36 [10], _004__X36 [11], _004__X36 [12], _004__X36 [13], _004__X36 [14], _004__X36 [15], _004__X36 [16], _004__X36 [17], _004__X36 [18], _004__X36 [19], _004__X36 [20], _004__X36 [21] } = 0;
  assign { _004__C36 [0], _004__C36 [1], _004__C36 [2], _004__C36 [3], _004__C36 [4], _004__C36 [5], _004__C36 [6], _004__C36 [7], _004__C36 [8], _004__C36 [9], _004__C36 [10], _004__C36 [11], _004__C36 [12], _004__C36 [13], _004__C36 [14], _004__C36 [15], _004__C36 [16], _004__C36 [17], _004__C36 [18], _004__C36 [19], _004__C36 [20], _004__C36 [21] } = 0;
  logic [22:0] _004__R37 ;
  logic [22:0] _004__X37 ;
  logic [22:0] _004__C37 ;
  assign _004__R37 [22:22] = _004__R [9:9] ;
  assign _004__X37 [22:22] = _004__X [9:9] ;
  assign _004__C37 [22:22] = _004__C [9:9] ;
  assign { _004__R37 [0], _004__R37 [1], _004__R37 [2], _004__R37 [3], _004__R37 [4], _004__R37 [5], _004__R37 [6], _004__R37 [7], _004__R37 [8], _004__R37 [9], _004__R37 [10], _004__R37 [11], _004__R37 [12], _004__R37 [13], _004__R37 [14], _004__R37 [15], _004__R37 [16], _004__R37 [17], _004__R37 [18], _004__R37 [19], _004__R37 [20], _004__R37 [21] } = 0;
  assign { _004__X37 [0], _004__X37 [1], _004__X37 [2], _004__X37 [3], _004__X37 [4], _004__X37 [5], _004__X37 [6], _004__X37 [7], _004__X37 [8], _004__X37 [9], _004__X37 [10], _004__X37 [11], _004__X37 [12], _004__X37 [13], _004__X37 [14], _004__X37 [15], _004__X37 [16], _004__X37 [17], _004__X37 [18], _004__X37 [19], _004__X37 [20], _004__X37 [21] } = 0;
  assign { _004__C37 [0], _004__C37 [1], _004__C37 [2], _004__C37 [3], _004__C37 [4], _004__C37 [5], _004__C37 [6], _004__C37 [7], _004__C37 [8], _004__C37 [9], _004__C37 [10], _004__C37 [11], _004__C37 [12], _004__C37 [13], _004__C37 [14], _004__C37 [15], _004__C37 [16], _004__C37 [17], _004__C37 [18], _004__C37 [19], _004__C37 [20], _004__C37 [21] } = 0;
  logic [22:0] _004__R38 ;
  logic [22:0] _004__X38 ;
  logic [22:0] _004__C38 ;
  assign _004__R38 [22:22] = _004__R [8:8] ;
  assign _004__X38 [22:22] = _004__X [8:8] ;
  assign _004__C38 [22:22] = _004__C [8:8] ;
  assign { _004__R38 [0], _004__R38 [1], _004__R38 [2], _004__R38 [3], _004__R38 [4], _004__R38 [5], _004__R38 [6], _004__R38 [7], _004__R38 [8], _004__R38 [9], _004__R38 [10], _004__R38 [11], _004__R38 [12], _004__R38 [13], _004__R38 [14], _004__R38 [15], _004__R38 [16], _004__R38 [17], _004__R38 [18], _004__R38 [19], _004__R38 [20], _004__R38 [21] } = 0;
  assign { _004__X38 [0], _004__X38 [1], _004__X38 [2], _004__X38 [3], _004__X38 [4], _004__X38 [5], _004__X38 [6], _004__X38 [7], _004__X38 [8], _004__X38 [9], _004__X38 [10], _004__X38 [11], _004__X38 [12], _004__X38 [13], _004__X38 [14], _004__X38 [15], _004__X38 [16], _004__X38 [17], _004__X38 [18], _004__X38 [19], _004__X38 [20], _004__X38 [21] } = 0;
  assign { _004__C38 [0], _004__C38 [1], _004__C38 [2], _004__C38 [3], _004__C38 [4], _004__C38 [5], _004__C38 [6], _004__C38 [7], _004__C38 [8], _004__C38 [9], _004__C38 [10], _004__C38 [11], _004__C38 [12], _004__C38 [13], _004__C38 [14], _004__C38 [15], _004__C38 [16], _004__C38 [17], _004__C38 [18], _004__C38 [19], _004__C38 [20], _004__C38 [21] } = 0;
  logic [22:0] _004__R39 ;
  logic [22:0] _004__X39 ;
  logic [22:0] _004__C39 ;
  assign _004__R39 [22:22] = _004__R [7:7] ;
  assign _004__X39 [22:22] = _004__X [7:7] ;
  assign _004__C39 [22:22] = _004__C [7:7] ;
  assign { _004__R39 [0], _004__R39 [1], _004__R39 [2], _004__R39 [3], _004__R39 [4], _004__R39 [5], _004__R39 [6], _004__R39 [7], _004__R39 [8], _004__R39 [9], _004__R39 [10], _004__R39 [11], _004__R39 [12], _004__R39 [13], _004__R39 [14], _004__R39 [15], _004__R39 [16], _004__R39 [17], _004__R39 [18], _004__R39 [19], _004__R39 [20], _004__R39 [21] } = 0;
  assign { _004__X39 [0], _004__X39 [1], _004__X39 [2], _004__X39 [3], _004__X39 [4], _004__X39 [5], _004__X39 [6], _004__X39 [7], _004__X39 [8], _004__X39 [9], _004__X39 [10], _004__X39 [11], _004__X39 [12], _004__X39 [13], _004__X39 [14], _004__X39 [15], _004__X39 [16], _004__X39 [17], _004__X39 [18], _004__X39 [19], _004__X39 [20], _004__X39 [21] } = 0;
  assign { _004__C39 [0], _004__C39 [1], _004__C39 [2], _004__C39 [3], _004__C39 [4], _004__C39 [5], _004__C39 [6], _004__C39 [7], _004__C39 [8], _004__C39 [9], _004__C39 [10], _004__C39 [11], _004__C39 [12], _004__C39 [13], _004__C39 [14], _004__C39 [15], _004__C39 [16], _004__C39 [17], _004__C39 [18], _004__C39 [19], _004__C39 [20], _004__C39 [21] } = 0;
  logic [22:0] _004__R40 ;
  logic [22:0] _004__X40 ;
  logic [22:0] _004__C40 ;
  assign _004__R40 [22:22] = _004__R [6:6] ;
  assign _004__X40 [22:22] = _004__X [6:6] ;
  assign _004__C40 [22:22] = _004__C [6:6] ;
  assign { _004__R40 [0], _004__R40 [1], _004__R40 [2], _004__R40 [3], _004__R40 [4], _004__R40 [5], _004__R40 [6], _004__R40 [7], _004__R40 [8], _004__R40 [9], _004__R40 [10], _004__R40 [11], _004__R40 [12], _004__R40 [13], _004__R40 [14], _004__R40 [15], _004__R40 [16], _004__R40 [17], _004__R40 [18], _004__R40 [19], _004__R40 [20], _004__R40 [21] } = 0;
  assign { _004__X40 [0], _004__X40 [1], _004__X40 [2], _004__X40 [3], _004__X40 [4], _004__X40 [5], _004__X40 [6], _004__X40 [7], _004__X40 [8], _004__X40 [9], _004__X40 [10], _004__X40 [11], _004__X40 [12], _004__X40 [13], _004__X40 [14], _004__X40 [15], _004__X40 [16], _004__X40 [17], _004__X40 [18], _004__X40 [19], _004__X40 [20], _004__X40 [21] } = 0;
  assign { _004__C40 [0], _004__C40 [1], _004__C40 [2], _004__C40 [3], _004__C40 [4], _004__C40 [5], _004__C40 [6], _004__C40 [7], _004__C40 [8], _004__C40 [9], _004__C40 [10], _004__C40 [11], _004__C40 [12], _004__C40 [13], _004__C40 [14], _004__C40 [15], _004__C40 [16], _004__C40 [17], _004__C40 [18], _004__C40 [19], _004__C40 [20], _004__C40 [21] } = 0;
  logic [22:0] _004__R41 ;
  logic [22:0] _004__X41 ;
  logic [22:0] _004__C41 ;
  assign _004__R41 [22:22] = _004__R [5:5] ;
  assign _004__X41 [22:22] = _004__X [5:5] ;
  assign _004__C41 [22:22] = _004__C [5:5] ;
  assign { _004__R41 [0], _004__R41 [1], _004__R41 [2], _004__R41 [3], _004__R41 [4], _004__R41 [5], _004__R41 [6], _004__R41 [7], _004__R41 [8], _004__R41 [9], _004__R41 [10], _004__R41 [11], _004__R41 [12], _004__R41 [13], _004__R41 [14], _004__R41 [15], _004__R41 [16], _004__R41 [17], _004__R41 [18], _004__R41 [19], _004__R41 [20], _004__R41 [21] } = 0;
  assign { _004__X41 [0], _004__X41 [1], _004__X41 [2], _004__X41 [3], _004__X41 [4], _004__X41 [5], _004__X41 [6], _004__X41 [7], _004__X41 [8], _004__X41 [9], _004__X41 [10], _004__X41 [11], _004__X41 [12], _004__X41 [13], _004__X41 [14], _004__X41 [15], _004__X41 [16], _004__X41 [17], _004__X41 [18], _004__X41 [19], _004__X41 [20], _004__X41 [21] } = 0;
  assign { _004__C41 [0], _004__C41 [1], _004__C41 [2], _004__C41 [3], _004__C41 [4], _004__C41 [5], _004__C41 [6], _004__C41 [7], _004__C41 [8], _004__C41 [9], _004__C41 [10], _004__C41 [11], _004__C41 [12], _004__C41 [13], _004__C41 [14], _004__C41 [15], _004__C41 [16], _004__C41 [17], _004__C41 [18], _004__C41 [19], _004__C41 [20], _004__C41 [21] } = 0;
  logic [22:0] _004__R42 ;
  logic [22:0] _004__X42 ;
  logic [22:0] _004__C42 ;
  assign _004__R42 [22:22] = _004__R [4:4] ;
  assign _004__X42 [22:22] = _004__X [4:4] ;
  assign _004__C42 [22:22] = _004__C [4:4] ;
  assign { _004__R42 [0], _004__R42 [1], _004__R42 [2], _004__R42 [3], _004__R42 [4], _004__R42 [5], _004__R42 [6], _004__R42 [7], _004__R42 [8], _004__R42 [9], _004__R42 [10], _004__R42 [11], _004__R42 [12], _004__R42 [13], _004__R42 [14], _004__R42 [15], _004__R42 [16], _004__R42 [17], _004__R42 [18], _004__R42 [19], _004__R42 [20], _004__R42 [21] } = 0;
  assign { _004__X42 [0], _004__X42 [1], _004__X42 [2], _004__X42 [3], _004__X42 [4], _004__X42 [5], _004__X42 [6], _004__X42 [7], _004__X42 [8], _004__X42 [9], _004__X42 [10], _004__X42 [11], _004__X42 [12], _004__X42 [13], _004__X42 [14], _004__X42 [15], _004__X42 [16], _004__X42 [17], _004__X42 [18], _004__X42 [19], _004__X42 [20], _004__X42 [21] } = 0;
  assign { _004__C42 [0], _004__C42 [1], _004__C42 [2], _004__C42 [3], _004__C42 [4], _004__C42 [5], _004__C42 [6], _004__C42 [7], _004__C42 [8], _004__C42 [9], _004__C42 [10], _004__C42 [11], _004__C42 [12], _004__C42 [13], _004__C42 [14], _004__C42 [15], _004__C42 [16], _004__C42 [17], _004__C42 [18], _004__C42 [19], _004__C42 [20], _004__C42 [21] } = 0;
  logic [22:0] _004__R43 ;
  logic [22:0] _004__X43 ;
  logic [22:0] _004__C43 ;
  assign _004__R43 [22:22] = _004__R [3:3] ;
  assign _004__X43 [22:22] = _004__X [3:3] ;
  assign _004__C43 [22:22] = _004__C [3:3] ;
  assign { _004__R43 [0], _004__R43 [1], _004__R43 [2], _004__R43 [3], _004__R43 [4], _004__R43 [5], _004__R43 [6], _004__R43 [7], _004__R43 [8], _004__R43 [9], _004__R43 [10], _004__R43 [11], _004__R43 [12], _004__R43 [13], _004__R43 [14], _004__R43 [15], _004__R43 [16], _004__R43 [17], _004__R43 [18], _004__R43 [19], _004__R43 [20], _004__R43 [21] } = 0;
  assign { _004__X43 [0], _004__X43 [1], _004__X43 [2], _004__X43 [3], _004__X43 [4], _004__X43 [5], _004__X43 [6], _004__X43 [7], _004__X43 [8], _004__X43 [9], _004__X43 [10], _004__X43 [11], _004__X43 [12], _004__X43 [13], _004__X43 [14], _004__X43 [15], _004__X43 [16], _004__X43 [17], _004__X43 [18], _004__X43 [19], _004__X43 [20], _004__X43 [21] } = 0;
  assign { _004__C43 [0], _004__C43 [1], _004__C43 [2], _004__C43 [3], _004__C43 [4], _004__C43 [5], _004__C43 [6], _004__C43 [7], _004__C43 [8], _004__C43 [9], _004__C43 [10], _004__C43 [11], _004__C43 [12], _004__C43 [13], _004__C43 [14], _004__C43 [15], _004__C43 [16], _004__C43 [17], _004__C43 [18], _004__C43 [19], _004__C43 [20], _004__C43 [21] } = 0;
  logic [22:0] _004__R44 ;
  logic [22:0] _004__X44 ;
  logic [22:0] _004__C44 ;
  assign _004__R44 [22:22] = _004__R [2:2] ;
  assign _004__X44 [22:22] = _004__X [2:2] ;
  assign _004__C44 [22:22] = _004__C [2:2] ;
  assign { _004__R44 [0], _004__R44 [1], _004__R44 [2], _004__R44 [3], _004__R44 [4], _004__R44 [5], _004__R44 [6], _004__R44 [7], _004__R44 [8], _004__R44 [9], _004__R44 [10], _004__R44 [11], _004__R44 [12], _004__R44 [13], _004__R44 [14], _004__R44 [15], _004__R44 [16], _004__R44 [17], _004__R44 [18], _004__R44 [19], _004__R44 [20], _004__R44 [21] } = 0;
  assign { _004__X44 [0], _004__X44 [1], _004__X44 [2], _004__X44 [3], _004__X44 [4], _004__X44 [5], _004__X44 [6], _004__X44 [7], _004__X44 [8], _004__X44 [9], _004__X44 [10], _004__X44 [11], _004__X44 [12], _004__X44 [13], _004__X44 [14], _004__X44 [15], _004__X44 [16], _004__X44 [17], _004__X44 [18], _004__X44 [19], _004__X44 [20], _004__X44 [21] } = 0;
  assign { _004__C44 [0], _004__C44 [1], _004__C44 [2], _004__C44 [3], _004__C44 [4], _004__C44 [5], _004__C44 [6], _004__C44 [7], _004__C44 [8], _004__C44 [9], _004__C44 [10], _004__C44 [11], _004__C44 [12], _004__C44 [13], _004__C44 [14], _004__C44 [15], _004__C44 [16], _004__C44 [17], _004__C44 [18], _004__C44 [19], _004__C44 [20], _004__C44 [21] } = 0;
  logic [22:0] _004__R45 ;
  logic [22:0] _004__X45 ;
  logic [22:0] _004__C45 ;
  assign _004__R45 [22:22] = _004__R [1:1] ;
  assign _004__X45 [22:22] = _004__X [1:1] ;
  assign _004__C45 [22:22] = _004__C [1:1] ;
  assign { _004__R45 [0], _004__R45 [1], _004__R45 [2], _004__R45 [3], _004__R45 [4], _004__R45 [5], _004__R45 [6], _004__R45 [7], _004__R45 [8], _004__R45 [9], _004__R45 [10], _004__R45 [11], _004__R45 [12], _004__R45 [13], _004__R45 [14], _004__R45 [15], _004__R45 [16], _004__R45 [17], _004__R45 [18], _004__R45 [19], _004__R45 [20], _004__R45 [21] } = 0;
  assign { _004__X45 [0], _004__X45 [1], _004__X45 [2], _004__X45 [3], _004__X45 [4], _004__X45 [5], _004__X45 [6], _004__X45 [7], _004__X45 [8], _004__X45 [9], _004__X45 [10], _004__X45 [11], _004__X45 [12], _004__X45 [13], _004__X45 [14], _004__X45 [15], _004__X45 [16], _004__X45 [17], _004__X45 [18], _004__X45 [19], _004__X45 [20], _004__X45 [21] } = 0;
  assign { _004__C45 [0], _004__C45 [1], _004__C45 [2], _004__C45 [3], _004__C45 [4], _004__C45 [5], _004__C45 [6], _004__C45 [7], _004__C45 [8], _004__C45 [9], _004__C45 [10], _004__C45 [11], _004__C45 [12], _004__C45 [13], _004__C45 [14], _004__C45 [15], _004__C45 [16], _004__C45 [17], _004__C45 [18], _004__C45 [19], _004__C45 [20], _004__C45 [21] } = 0;
  logic [22:0] _004__R46 ;
  logic [22:0] _004__X46 ;
  logic [22:0] _004__C46 ;
  assign _004__R46 [22:22] = _004__R [0:0] ;
  assign _004__X46 [22:22] = _004__X [0:0] ;
  assign _004__C46 [22:22] = _004__C [0:0] ;
  assign FpMul_8U_23U_else_2_else_if_if_acc_1_itm_7_1 = FpMul_8U_23U_else_2_else_if_if_acc_1_nl[7];
  assign { FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R1 [0], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R1 [1], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R1 [2], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R1 [3], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R1 [4], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R1 [5], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R1 [6] } = 0;
  assign { FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X1 [0], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X1 [1], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X1 [2], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X1 [3], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X1 [4], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X1 [5], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X1 [6] } = 0;
  assign { FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C1 [0], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C1 [1], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C1 [2], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C1 [3], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C1 [4], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C1 [5], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C1 [6] } = 0;
  logic [7:0] FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C2 ;
  logic [7:0] FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R2 ;
  logic [7:0] FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X2 ;
  assign FpMul_8U_23U_else_2_else_if_if_acc_1_itm_7_1_T = FpMul_8U_23U_else_2_else_if_if_acc_1_nl_T [7] ;
  assign FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C2 [7] = FpMul_8U_23U_else_2_else_if_if_acc_1_itm_7_1_C ;
  assign FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R2 [7] = FpMul_8U_23U_else_2_else_if_if_acc_1_itm_7_1_R ;
  assign FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X2 [7] = FpMul_8U_23U_else_2_else_if_if_acc_1_itm_7_1_X ;
  assign FpMul_8U_23U_else_2_else_if_if_acc_1_itm_7_1_S = FpMul_8U_23U_else_2_else_if_if_acc_1_nl_S ;
  assign FpMul_8U_23U_else_2_if_acc_itm_8_1 = FpMul_8U_23U_else_2_if_acc_nl[8];
  assign { FpMul_8U_23U_else_2_if_acc_nl_R5 [0], FpMul_8U_23U_else_2_if_acc_nl_R5 [1], FpMul_8U_23U_else_2_if_acc_nl_R5 [2], FpMul_8U_23U_else_2_if_acc_nl_R5 [3], FpMul_8U_23U_else_2_if_acc_nl_R5 [4], FpMul_8U_23U_else_2_if_acc_nl_R5 [5], FpMul_8U_23U_else_2_if_acc_nl_R5 [6], FpMul_8U_23U_else_2_if_acc_nl_R5 [7] } = 0;
  assign { FpMul_8U_23U_else_2_if_acc_nl_X5 [0], FpMul_8U_23U_else_2_if_acc_nl_X5 [1], FpMul_8U_23U_else_2_if_acc_nl_X5 [2], FpMul_8U_23U_else_2_if_acc_nl_X5 [3], FpMul_8U_23U_else_2_if_acc_nl_X5 [4], FpMul_8U_23U_else_2_if_acc_nl_X5 [5], FpMul_8U_23U_else_2_if_acc_nl_X5 [6], FpMul_8U_23U_else_2_if_acc_nl_X5 [7] } = 0;
  assign { FpMul_8U_23U_else_2_if_acc_nl_C5 [0], FpMul_8U_23U_else_2_if_acc_nl_C5 [1], FpMul_8U_23U_else_2_if_acc_nl_C5 [2], FpMul_8U_23U_else_2_if_acc_nl_C5 [3], FpMul_8U_23U_else_2_if_acc_nl_C5 [4], FpMul_8U_23U_else_2_if_acc_nl_C5 [5], FpMul_8U_23U_else_2_if_acc_nl_C5 [6], FpMul_8U_23U_else_2_if_acc_nl_C5 [7] } = 0;
  logic [8:0] FpMul_8U_23U_else_2_if_acc_nl_C6 ;
  logic [8:0] FpMul_8U_23U_else_2_if_acc_nl_R6 ;
  logic [8:0] FpMul_8U_23U_else_2_if_acc_nl_X6 ;
  assign FpMul_8U_23U_else_2_if_acc_itm_8_1_T = FpMul_8U_23U_else_2_if_acc_nl_T [8] ;
  assign FpMul_8U_23U_else_2_if_acc_nl_C6 [8] = FpMul_8U_23U_else_2_if_acc_itm_8_1_C ;
  assign FpMul_8U_23U_else_2_if_acc_nl_R6 [8] = FpMul_8U_23U_else_2_if_acc_itm_8_1_R ;
  assign FpMul_8U_23U_else_2_if_acc_nl_X6 [8] = FpMul_8U_23U_else_2_if_acc_itm_8_1_X ;
  assign FpMul_8U_23U_else_2_if_acc_itm_8_1_S = FpMul_8U_23U_else_2_if_acc_nl_S ;
  assign FpMul_8U_23U_oelse_1_acc_itm_9_1 = FpMul_8U_23U_oelse_1_acc_nl[9];
  assign { FpMul_8U_23U_oelse_1_acc_nl_R1 [0], FpMul_8U_23U_oelse_1_acc_nl_R1 [1], FpMul_8U_23U_oelse_1_acc_nl_R1 [2], FpMul_8U_23U_oelse_1_acc_nl_R1 [3], FpMul_8U_23U_oelse_1_acc_nl_R1 [4], FpMul_8U_23U_oelse_1_acc_nl_R1 [5], FpMul_8U_23U_oelse_1_acc_nl_R1 [6], FpMul_8U_23U_oelse_1_acc_nl_R1 [7], FpMul_8U_23U_oelse_1_acc_nl_R1 [8] } = 0;
  assign { FpMul_8U_23U_oelse_1_acc_nl_X1 [0], FpMul_8U_23U_oelse_1_acc_nl_X1 [1], FpMul_8U_23U_oelse_1_acc_nl_X1 [2], FpMul_8U_23U_oelse_1_acc_nl_X1 [3], FpMul_8U_23U_oelse_1_acc_nl_X1 [4], FpMul_8U_23U_oelse_1_acc_nl_X1 [5], FpMul_8U_23U_oelse_1_acc_nl_X1 [6], FpMul_8U_23U_oelse_1_acc_nl_X1 [7], FpMul_8U_23U_oelse_1_acc_nl_X1 [8] } = 0;
  assign { FpMul_8U_23U_oelse_1_acc_nl_C1 [0], FpMul_8U_23U_oelse_1_acc_nl_C1 [1], FpMul_8U_23U_oelse_1_acc_nl_C1 [2], FpMul_8U_23U_oelse_1_acc_nl_C1 [3], FpMul_8U_23U_oelse_1_acc_nl_C1 [4], FpMul_8U_23U_oelse_1_acc_nl_C1 [5], FpMul_8U_23U_oelse_1_acc_nl_C1 [6], FpMul_8U_23U_oelse_1_acc_nl_C1 [7], FpMul_8U_23U_oelse_1_acc_nl_C1 [8] } = 0;
  logic [9:0] FpMul_8U_23U_oelse_1_acc_nl_C2 ;
  logic [9:0] FpMul_8U_23U_oelse_1_acc_nl_R2 ;
  logic [9:0] FpMul_8U_23U_oelse_1_acc_nl_X2 ;
  assign FpMul_8U_23U_oelse_1_acc_itm_9_1_T = FpMul_8U_23U_oelse_1_acc_nl_T [9] ;
  assign FpMul_8U_23U_oelse_1_acc_nl_C2 [9] = FpMul_8U_23U_oelse_1_acc_itm_9_1_C ;
  assign FpMul_8U_23U_oelse_1_acc_nl_R2 [9] = FpMul_8U_23U_oelse_1_acc_itm_9_1_R ;
  assign FpMul_8U_23U_oelse_1_acc_nl_X2 [9] = FpMul_8U_23U_oelse_1_acc_itm_9_1_X ;
  assign FpMul_8U_23U_oelse_1_acc_itm_9_1_S = FpMul_8U_23U_oelse_1_acc_nl_S ;
  assign chn_a_rsci_oswt_unreg_pff = or_tmp_65;
  logic [0:0] or_tmp_65_C1 ;
  logic [0:0] or_tmp_65_R1 ;
  logic [0:0] or_tmp_65_X1 ;
  assign chn_a_rsci_oswt_unreg_pff_T = or_tmp_65_T ;
  assign or_tmp_65_C1 = chn_a_rsci_oswt_unreg_pff_C ;
  assign or_tmp_65_R1 = chn_a_rsci_oswt_unreg_pff_R ;
  assign or_tmp_65_X1 = chn_a_rsci_oswt_unreg_pff_X ;
  assign chn_a_rsci_oswt_unreg_pff_S = or_tmp_65_S ;
  assign chn_o_rsci_oswt_unreg = and_dcpl_3;
  logic [0:0] and_dcpl_3_C1 ;
  logic [0:0] and_dcpl_3_R1 ;
  logic [0:0] and_dcpl_3_X1 ;
  assign chn_o_rsci_oswt_unreg_T = and_dcpl_3_T ;
  assign and_dcpl_3_C1 = chn_o_rsci_oswt_unreg_C ;
  assign and_dcpl_3_R1 = chn_o_rsci_oswt_unreg_R ;
  assign and_dcpl_3_X1 = chn_o_rsci_oswt_unreg_X ;
  assign chn_o_rsci_oswt_unreg_S = and_dcpl_3_S ;
  assign nl_FpMantRNE_48U_24U_else_acc_nl[22:0] = FpMantRNE_48U_24U_else_acc_nl;
  logic [22:0] FpMantRNE_48U_24U_else_acc_nl_C1 ;
  logic [22:0] FpMantRNE_48U_24U_else_acc_nl_R1 ;
  logic [22:0] FpMantRNE_48U_24U_else_acc_nl_X1 ;
  assign nl_FpMantRNE_48U_24U_else_acc_nl_T [22:0] = FpMantRNE_48U_24U_else_acc_nl_T ;
  assign FpMantRNE_48U_24U_else_acc_nl_C1 = nl_FpMantRNE_48U_24U_else_acc_nl_C [22:0] ;
  assign FpMantRNE_48U_24U_else_acc_nl_R1 = nl_FpMantRNE_48U_24U_else_acc_nl_R [22:0] ;
  assign FpMantRNE_48U_24U_else_acc_nl_X1 = nl_FpMantRNE_48U_24U_else_acc_nl_X [22:0] ;
  assign nl_FpMantRNE_48U_24U_else_acc_nl_S = FpMantRNE_48U_24U_else_acc_nl_S ;
  assign nl_FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1[7:0] = FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1;
  logic [7:0] FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_C2 ;
  logic [7:0] FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_R2 ;
  logic [7:0] FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_X2 ;
  assign nl_FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_T [7:0] = FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_T ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_C2 = nl_FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_C [7:0] ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_R2 = nl_FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_R [7:0] ;
  assign FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_X2 = nl_FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_X [7:0] ;
  assign nl_FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_S = FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_S ;
  assign nl_FpMul_8U_23U_else_2_acc_1_nl[8:0] = FpMul_8U_23U_else_2_acc_1_nl;
  assign { FpMul_8U_23U_else_2_acc_1_nl_R0 [0] } = 0;
  assign { FpMul_8U_23U_else_2_acc_1_nl_X0 [0] } = 0;
  assign { FpMul_8U_23U_else_2_acc_1_nl_C0 [0] } = 0;
  logic [8:0] FpMul_8U_23U_else_2_acc_1_nl_C1 ;
  logic [8:0] FpMul_8U_23U_else_2_acc_1_nl_R1 ;
  logic [8:0] FpMul_8U_23U_else_2_acc_1_nl_X1 ;
  assign nl_FpMul_8U_23U_else_2_acc_1_nl_T [8:0] = FpMul_8U_23U_else_2_acc_1_nl_T ;
  assign FpMul_8U_23U_else_2_acc_1_nl_C1 = nl_FpMul_8U_23U_else_2_acc_1_nl_C [8:0] ;
  assign FpMul_8U_23U_else_2_acc_1_nl_R1 = nl_FpMul_8U_23U_else_2_acc_1_nl_R [8:0] ;
  assign FpMul_8U_23U_else_2_acc_1_nl_X1 = nl_FpMul_8U_23U_else_2_acc_1_nl_X [8:0] ;
  assign nl_FpMul_8U_23U_else_2_acc_1_nl_S = FpMul_8U_23U_else_2_acc_1_nl_S ;
  assign nl_FpMul_8U_23U_else_2_else_acc_2_nl[7:0] = FpMul_8U_23U_else_2_else_acc_2_nl;
  logic [7:0] FpMul_8U_23U_else_2_else_acc_2_nl_C1 ;
  logic [7:0] FpMul_8U_23U_else_2_else_acc_2_nl_R1 ;
  logic [7:0] FpMul_8U_23U_else_2_else_acc_2_nl_X1 ;
  assign nl_FpMul_8U_23U_else_2_else_acc_2_nl_T [7:0] = FpMul_8U_23U_else_2_else_acc_2_nl_T ;
  assign FpMul_8U_23U_else_2_else_acc_2_nl_C1 = nl_FpMul_8U_23U_else_2_else_acc_2_nl_C [7:0] ;
  assign FpMul_8U_23U_else_2_else_acc_2_nl_R1 = nl_FpMul_8U_23U_else_2_else_acc_2_nl_R [7:0] ;
  assign FpMul_8U_23U_else_2_else_acc_2_nl_X1 = nl_FpMul_8U_23U_else_2_else_acc_2_nl_X [7:0] ;
  assign nl_FpMul_8U_23U_else_2_else_acc_2_nl_S = FpMul_8U_23U_else_2_else_acc_2_nl_S ;
  assign nl_FpMul_8U_23U_else_2_else_if_if_acc_1_nl[7:0] = FpMul_8U_23U_else_2_else_if_if_acc_1_nl;
  assign { FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R2 [0], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R2 [1], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R2 [2], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R2 [3], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R2 [4], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R2 [5], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R2 [6] } = 0;
  assign { FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X2 [0], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X2 [1], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X2 [2], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X2 [3], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X2 [4], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X2 [5], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X2 [6] } = 0;
  assign { FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C2 [0], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C2 [1], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C2 [2], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C2 [3], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C2 [4], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C2 [5], FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C2 [6] } = 0;
  logic [7:0] FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C3 ;
  logic [7:0] FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R3 ;
  logic [7:0] FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X3 ;
  assign nl_FpMul_8U_23U_else_2_else_if_if_acc_1_nl_T [7:0] = FpMul_8U_23U_else_2_else_if_if_acc_1_nl_T ;
  assign FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C3 = nl_FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C [7:0] ;
  assign FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R3 = nl_FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R [7:0] ;
  assign FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X3 = nl_FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X [7:0] ;
  assign nl_FpMul_8U_23U_else_2_else_if_if_acc_1_nl_S = FpMul_8U_23U_else_2_else_if_if_acc_1_nl_S ;
  assign nl_FpMul_8U_23U_else_2_else_if_if_acc_nl[7:0] = FpMul_8U_23U_else_2_else_if_if_acc_nl;
  logic [7:0] FpMul_8U_23U_else_2_else_if_if_acc_nl_C1 ;
  logic [7:0] FpMul_8U_23U_else_2_else_if_if_acc_nl_R1 ;
  logic [7:0] FpMul_8U_23U_else_2_else_if_if_acc_nl_X1 ;
  assign nl_FpMul_8U_23U_else_2_else_if_if_acc_nl_T [7:0] = FpMul_8U_23U_else_2_else_if_if_acc_nl_T ;
  assign FpMul_8U_23U_else_2_else_if_if_acc_nl_C1 = nl_FpMul_8U_23U_else_2_else_if_if_acc_nl_C [7:0] ;
  assign FpMul_8U_23U_else_2_else_if_if_acc_nl_R1 = nl_FpMul_8U_23U_else_2_else_if_if_acc_nl_R [7:0] ;
  assign FpMul_8U_23U_else_2_else_if_if_acc_nl_X1 = nl_FpMul_8U_23U_else_2_else_if_if_acc_nl_X [7:0] ;
  assign nl_FpMul_8U_23U_else_2_else_if_if_acc_nl_S = FpMul_8U_23U_else_2_else_if_if_acc_nl_S ;
  assign nl_FpMul_8U_23U_else_2_if_acc_nl[8:0] = FpMul_8U_23U_else_2_if_acc_nl;
  assign { FpMul_8U_23U_else_2_if_acc_nl_R6 [0], FpMul_8U_23U_else_2_if_acc_nl_R6 [1], FpMul_8U_23U_else_2_if_acc_nl_R6 [2], FpMul_8U_23U_else_2_if_acc_nl_R6 [3], FpMul_8U_23U_else_2_if_acc_nl_R6 [4], FpMul_8U_23U_else_2_if_acc_nl_R6 [5], FpMul_8U_23U_else_2_if_acc_nl_R6 [6], FpMul_8U_23U_else_2_if_acc_nl_R6 [7] } = 0;
  assign { FpMul_8U_23U_else_2_if_acc_nl_X6 [0], FpMul_8U_23U_else_2_if_acc_nl_X6 [1], FpMul_8U_23U_else_2_if_acc_nl_X6 [2], FpMul_8U_23U_else_2_if_acc_nl_X6 [3], FpMul_8U_23U_else_2_if_acc_nl_X6 [4], FpMul_8U_23U_else_2_if_acc_nl_X6 [5], FpMul_8U_23U_else_2_if_acc_nl_X6 [6], FpMul_8U_23U_else_2_if_acc_nl_X6 [7] } = 0;
  assign { FpMul_8U_23U_else_2_if_acc_nl_C6 [0], FpMul_8U_23U_else_2_if_acc_nl_C6 [1], FpMul_8U_23U_else_2_if_acc_nl_C6 [2], FpMul_8U_23U_else_2_if_acc_nl_C6 [3], FpMul_8U_23U_else_2_if_acc_nl_C6 [4], FpMul_8U_23U_else_2_if_acc_nl_C6 [5], FpMul_8U_23U_else_2_if_acc_nl_C6 [6], FpMul_8U_23U_else_2_if_acc_nl_C6 [7] } = 0;
  logic [8:0] FpMul_8U_23U_else_2_if_acc_nl_C7 ;
  logic [8:0] FpMul_8U_23U_else_2_if_acc_nl_R7 ;
  logic [8:0] FpMul_8U_23U_else_2_if_acc_nl_X7 ;
  assign nl_FpMul_8U_23U_else_2_if_acc_nl_T [8:0] = FpMul_8U_23U_else_2_if_acc_nl_T ;
  assign FpMul_8U_23U_else_2_if_acc_nl_C7 = nl_FpMul_8U_23U_else_2_if_acc_nl_C [8:0] ;
  assign FpMul_8U_23U_else_2_if_acc_nl_R7 = nl_FpMul_8U_23U_else_2_if_acc_nl_R [8:0] ;
  assign FpMul_8U_23U_else_2_if_acc_nl_X7 = nl_FpMul_8U_23U_else_2_if_acc_nl_X [8:0] ;
  assign nl_FpMul_8U_23U_else_2_if_acc_nl_S = FpMul_8U_23U_else_2_if_acc_nl_S ;
  assign nl_FpMul_8U_23U_oelse_1_acc_1_nl[8:0] = FpMul_8U_23U_oelse_1_acc_1_nl;
  logic [8:0] FpMul_8U_23U_oelse_1_acc_1_nl_C2 ;
  logic [8:0] FpMul_8U_23U_oelse_1_acc_1_nl_R2 ;
  logic [8:0] FpMul_8U_23U_oelse_1_acc_1_nl_X2 ;
  assign nl_FpMul_8U_23U_oelse_1_acc_1_nl_T [8:0] = FpMul_8U_23U_oelse_1_acc_1_nl_T ;
  assign FpMul_8U_23U_oelse_1_acc_1_nl_C2 = nl_FpMul_8U_23U_oelse_1_acc_1_nl_C [8:0] ;
  assign FpMul_8U_23U_oelse_1_acc_1_nl_R2 = nl_FpMul_8U_23U_oelse_1_acc_1_nl_R [8:0] ;
  assign FpMul_8U_23U_oelse_1_acc_1_nl_X2 = nl_FpMul_8U_23U_oelse_1_acc_1_nl_X [8:0] ;
  assign nl_FpMul_8U_23U_oelse_1_acc_1_nl_S = FpMul_8U_23U_oelse_1_acc_1_nl_S ;
  assign nl_FpMul_8U_23U_oelse_1_acc_nl[9:0] = FpMul_8U_23U_oelse_1_acc_nl;
  assign { FpMul_8U_23U_oelse_1_acc_nl_R2 [0], FpMul_8U_23U_oelse_1_acc_nl_R2 [1], FpMul_8U_23U_oelse_1_acc_nl_R2 [2], FpMul_8U_23U_oelse_1_acc_nl_R2 [3], FpMul_8U_23U_oelse_1_acc_nl_R2 [4], FpMul_8U_23U_oelse_1_acc_nl_R2 [5], FpMul_8U_23U_oelse_1_acc_nl_R2 [6], FpMul_8U_23U_oelse_1_acc_nl_R2 [7], FpMul_8U_23U_oelse_1_acc_nl_R2 [8] } = 0;
  assign { FpMul_8U_23U_oelse_1_acc_nl_X2 [0], FpMul_8U_23U_oelse_1_acc_nl_X2 [1], FpMul_8U_23U_oelse_1_acc_nl_X2 [2], FpMul_8U_23U_oelse_1_acc_nl_X2 [3], FpMul_8U_23U_oelse_1_acc_nl_X2 [4], FpMul_8U_23U_oelse_1_acc_nl_X2 [5], FpMul_8U_23U_oelse_1_acc_nl_X2 [6], FpMul_8U_23U_oelse_1_acc_nl_X2 [7], FpMul_8U_23U_oelse_1_acc_nl_X2 [8] } = 0;
  assign { FpMul_8U_23U_oelse_1_acc_nl_C2 [0], FpMul_8U_23U_oelse_1_acc_nl_C2 [1], FpMul_8U_23U_oelse_1_acc_nl_C2 [2], FpMul_8U_23U_oelse_1_acc_nl_C2 [3], FpMul_8U_23U_oelse_1_acc_nl_C2 [4], FpMul_8U_23U_oelse_1_acc_nl_C2 [5], FpMul_8U_23U_oelse_1_acc_nl_C2 [6], FpMul_8U_23U_oelse_1_acc_nl_C2 [7], FpMul_8U_23U_oelse_1_acc_nl_C2 [8] } = 0;
  logic [9:0] FpMul_8U_23U_oelse_1_acc_nl_C3 ;
  logic [9:0] FpMul_8U_23U_oelse_1_acc_nl_R3 ;
  logic [9:0] FpMul_8U_23U_oelse_1_acc_nl_X3 ;
  assign nl_FpMul_8U_23U_oelse_1_acc_nl_T [9:0] = FpMul_8U_23U_oelse_1_acc_nl_T ;
  assign FpMul_8U_23U_oelse_1_acc_nl_C3 = nl_FpMul_8U_23U_oelse_1_acc_nl_C [9:0] ;
  assign FpMul_8U_23U_oelse_1_acc_nl_R3 = nl_FpMul_8U_23U_oelse_1_acc_nl_R [9:0] ;
  assign FpMul_8U_23U_oelse_1_acc_nl_X3 = nl_FpMul_8U_23U_oelse_1_acc_nl_X [9:0] ;
  assign nl_FpMul_8U_23U_oelse_1_acc_nl_S = FpMul_8U_23U_oelse_1_acc_nl_S ;
  assign nl_HLS_fp32_mul_core_chn_o_rsci_inst_chn_o_rsci_d = { chn_o_rsci_d_31, chn_o_rsci_d_30_23, chn_o_rsci_d_22_0 };
  assign nl_HLS_fp32_mul_core_chn_o_rsci_inst_chn_o_rsci_d_T = {  chn_o_rsci_d_31_T , chn_o_rsci_d_30_23_T , chn_o_rsci_d_22_0_T  };
  logic [13:0] nl_HLS_fp32_mul_core_chn_o_rsci_inst_chn_o_rsci_d_S ;
  assign nl_HLS_fp32_mul_core_chn_o_rsci_inst_chn_o_rsci_d_S = 0 ;
  logic [0:0] chn_o_rsci_d_31_R2 ;
  logic [0:0] chn_o_rsci_d_31_X2 ;
  logic [0:0] chn_o_rsci_d_31_C2 ;
  assign chn_o_rsci_d_31_R2 = nl_HLS_fp32_mul_core_chn_o_rsci_inst_chn_o_rsci_d_R [31:31] ;
  assign chn_o_rsci_d_31_X2 = nl_HLS_fp32_mul_core_chn_o_rsci_inst_chn_o_rsci_d_X [31:31] ;
  assign chn_o_rsci_d_31_C2 = nl_HLS_fp32_mul_core_chn_o_rsci_inst_chn_o_rsci_d_C [31:31] ;
  logic [7:0] chn_o_rsci_d_30_23_R2 ;
  logic [7:0] chn_o_rsci_d_30_23_X2 ;
  logic [7:0] chn_o_rsci_d_30_23_C2 ;
  assign chn_o_rsci_d_30_23_R2 = nl_HLS_fp32_mul_core_chn_o_rsci_inst_chn_o_rsci_d_R [30:23] ;
  assign chn_o_rsci_d_30_23_X2 = nl_HLS_fp32_mul_core_chn_o_rsci_inst_chn_o_rsci_d_X [30:23] ;
  assign chn_o_rsci_d_30_23_C2 = nl_HLS_fp32_mul_core_chn_o_rsci_inst_chn_o_rsci_d_C [30:23] ;
  logic [22:0] chn_o_rsci_d_22_0_R2 ;
  logic [22:0] chn_o_rsci_d_22_0_X2 ;
  logic [22:0] chn_o_rsci_d_22_0_C2 ;
  assign chn_o_rsci_d_22_0_R2 = nl_HLS_fp32_mul_core_chn_o_rsci_inst_chn_o_rsci_d_R [22:0] ;
  assign chn_o_rsci_d_22_0_X2 = nl_HLS_fp32_mul_core_chn_o_rsci_inst_chn_o_rsci_d_X [22:0] ;
  assign chn_o_rsci_d_22_0_C2 = nl_HLS_fp32_mul_core_chn_o_rsci_inst_chn_o_rsci_d_C [22:0] ;
  assign chn_o_rsci_wen_comp_C = ( chn_o_rsci_wen_comp_C0 );
  assign chn_b_rsci_wen_comp_C = ( chn_b_rsci_wen_comp_C0 );
  assign chn_a_rsci_wen_comp_C = ( chn_a_rsci_wen_comp_C0 );
  assign chn_o_rsci_oswt_C = ( chn_o_rsci_oswt_C0 );
  assign chn_o_rsc_vz_C = ( chn_o_rsc_vz_C0 );
  assign chn_b_rsci_oswt_C = ( chn_b_rsci_oswt_C0 );
  assign chn_b_rsc_z_C = ( chn_b_rsc_z_C0 );
  assign chn_b_rsc_vz_C = ( chn_b_rsc_vz_C0 );
  assign nvdla_core_rstn_C = ( nvdla_core_rstn_C0 ) | ( nvdla_core_rstn_C1 ) | ( nvdla_core_rstn_C2 ) | ( nvdla_core_rstn_C3 ) | ( nvdla_core_rstn_C4 );
  assign core_wten_C = ( core_wten_C0 ) | ( core_wten_C1 ) | ( core_wten_C2 );
  assign chn_a_rsci_oswt_C = ( chn_a_rsci_oswt_C0 );
  assign chn_a_rsc_z_C = ( chn_a_rsc_z_C0 );
  assign chn_a_rsc_vz_C = ( chn_a_rsc_vz_C0 );
  assign chn_o_rsci_iswt0_C = ( chn_o_rsci_iswt0_C0 ) | ( chn_o_rsci_iswt0_C1 );
  assign reg_chn_b_rsci_iswt0_cse_C = ( reg_chn_b_rsci_iswt0_cse_C0 ) | ( reg_chn_b_rsci_iswt0_cse_C1 ) | ( reg_chn_b_rsci_iswt0_cse_C2 );
  assign _103__C = ( _103__C0 );
  assign reg_chn_b_rsci_ld_core_psct_cse_C = ( reg_chn_b_rsci_ld_core_psct_cse_C0 ) | ( reg_chn_b_rsci_ld_core_psct_cse_C1 ) | ( reg_chn_b_rsci_ld_core_psct_cse_C2 );
  assign _045__C = ( _045__C0 );
  assign chn_o_rsci_d_31_C = ( chn_o_rsci_d_31_C0 ) | ( chn_o_rsci_d_31_C1 ) | ( chn_o_rsci_d_31_C2 );
  assign chn_o_rsci_d_22_0_C = ( chn_o_rsci_d_22_0_C0 ) | ( chn_o_rsci_d_22_0_C1 ) | ( chn_o_rsci_d_22_0_C2 );
  assign chn_o_and_cse_C = ( chn_o_and_cse_C0 ) | ( chn_o_and_cse_C1 );
  assign FpMul_8U_23U_FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_C = ( FpMul_8U_23U_FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_C0 );
  assign chn_o_rsci_d_30_23_C = ( chn_o_rsci_d_30_23_C0 ) | ( chn_o_rsci_d_30_23_C1 ) | ( chn_o_rsci_d_30_23_C2 );
  assign _042__C = ( _042__C0 );
  assign _047__C = ( _047__C0 );
  assign FpMul_8U_23U_FpMul_8U_23U_and_2_nl_C = ( FpMul_8U_23U_FpMul_8U_23U_and_2_nl_C0 );
  assign FpBitsToFloat_8U_23U_1_and_nl_C = ( FpBitsToFloat_8U_23U_1_and_nl_C0 );
  assign _104__C = ( _104__C0 );
  assign _048__C = ( _048__C0 );
  assign _105__C = ( _105__C0 );
  assign _049__C = ( _049__C0 );
  assign FpMul_8U_23U_else_2_acc_1_nl_C = ( FpMul_8U_23U_else_2_acc_1_nl_C0 ) | ( FpMul_8U_23U_else_2_acc_1_nl_C1 );
  assign _051__C = ( _051__C0 );
  assign _109__C = ( _109__C0 );
  assign _108__C = ( _108__C0 );
  assign IsNaN_8U_23U_aelse_and_cse_C = ( IsNaN_8U_23U_aelse_and_cse_C0 ) | ( IsNaN_8U_23U_aelse_and_cse_C1 ) | ( IsNaN_8U_23U_aelse_and_cse_C2 );
  assign _110__C = ( _110__C0 );
  assign _052__C = ( _052__C0 );
  assign nl_FpMul_8U_23U_p_expo_sva_5_C = ( nl_FpMul_8U_23U_p_expo_sva_5_C0 );
  assign _053__C = ( _053__C0 );
  assign _041__C = ( _041__C0 );
  assign _057__C = ( _057__C0 );
  assign _058__C = ( _058__C0 );
  assign _059__C = ( _059__C0 );
  assign FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_C = ( FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_C0 ) | ( FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_C1 );
  assign _043__C = ( _043__C0 );
  assign _061__C = ( _061__C0 );
  assign FpMul_8U_23U_mux_10_itm_4_C = ( FpMul_8U_23U_mux_10_itm_4_C0 ) | ( FpMul_8U_23U_mux_10_itm_4_C1 );
  assign IsNaN_8U_23U_1_aelse_and_cse_C = ( IsNaN_8U_23U_1_aelse_and_cse_C0 ) | ( IsNaN_8U_23U_1_aelse_and_cse_C1 ) | ( IsNaN_8U_23U_1_aelse_and_cse_C2 ) | ( IsNaN_8U_23U_1_aelse_and_cse_C3 );
  assign FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_C = ( FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_C0 ) | ( FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_C1 );
  assign _040__C = ( _040__C0 );
  assign _062__C = ( _062__C0 );
  assign _063__C = ( _063__C0 );
  assign _038__C = ( _038__C0 );
  assign _065__C = ( _065__C0 );
  assign FpMul_8U_23U_p_mant_p1_sva_C = ( FpMul_8U_23U_p_mant_p1_sva_C0 ) | ( FpMul_8U_23U_p_mant_p1_sva_C1 );
  assign _066__C = ( _066__C0 );
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_C = ( FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_C0 ) | ( FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_C1 );
  assign _069__C = ( _069__C0 );
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_3_C = ( FpMul_8U_23U_lor_1_lpi_1_dfm_3_C0 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_3_C1 );
  assign _070__C = ( _070__C0 );
  assign FpMul_8U_23U_mux_10_itm_3_C = ( FpMul_8U_23U_mux_10_itm_3_C0 ) | ( FpMul_8U_23U_mux_10_itm_3_C1 );
  assign _166__C = ( _166__C0 );
  assign _072__C = ( _072__C0 );
  assign _073__C = ( _073__C0 );
  assign _074__C = ( _074__C0 );
  assign and_90_nl_C = ( and_90_nl_C0 );
  assign and_95_nl_C = ( and_95_nl_C0 );
  assign FpMul_8U_23U_else_2_else_if_if_acc_nl_C = ( FpMul_8U_23U_else_2_else_if_if_acc_nl_C0 ) | ( FpMul_8U_23U_else_2_else_if_if_acc_nl_C1 );
  assign asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl_C = ( asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl_C0 );
  assign nor_nl_C = ( nor_nl_C0 );
  assign or_3_nl_C = ( or_3_nl_C0 );
  assign or_1_nl_C = ( or_1_nl_C0 );
  assign nor_28_nl_C = ( nor_28_nl_C0 );
  assign or_7_nl_C = ( or_7_nl_C0 );
  assign or_22_nl_C = ( or_22_nl_C0 );
  assign nor_22_nl_C = ( nor_22_nl_C0 );
  assign mux_tmp_9_C = ( mux_tmp_9_C0 ) | ( mux_tmp_9_C1 );
  assign mux_18_nl_C = ( mux_18_nl_C0 );
  assign mux_19_nl_C = ( mux_19_nl_C0 );
  assign or_39_nl_C = ( or_39_nl_C0 );
  assign fangyuan7_C = ( fangyuan7_C0 );
  assign FpMantRNE_48U_24U_else_acc_nl_C = ( FpMantRNE_48U_24U_else_acc_nl_C0 ) | ( FpMantRNE_48U_24U_else_acc_nl_C1 );
  assign or_nl_C = ( or_nl_C0 );
  assign mux_34_nl_C = ( mux_34_nl_C0 );
  assign FpMul_8U_23U_nor_nl_C = ( FpMul_8U_23U_nor_nl_C0 );
  assign FpMul_8U_23U_lor_2_lpi_1_dfm_C = ( FpMul_8U_23U_lor_2_lpi_1_dfm_C0 ) | ( FpMul_8U_23U_lor_2_lpi_1_dfm_C1 );
  assign nor_27_nl_C = ( nor_27_nl_C0 );
  assign nor_26_nl_C = ( nor_26_nl_C0 );
  assign FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_C = ( FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_C0 ) | ( FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_C1 );
  assign mux_2_nl_C = ( mux_2_nl_C0 );
  assign nor_24_nl_C = ( nor_24_nl_C0 );
  assign mux_5_nl_C = ( mux_5_nl_C0 );
  assign nor_32_nl_C = ( nor_32_nl_C0 );
  assign or_25_nl_C = ( or_25_nl_C0 );
  assign mux_7_nl_C = ( mux_7_nl_C0 );
  assign nor_23_nl_C = ( nor_23_nl_C0 );
  assign or_33_nl_C = ( or_33_nl_C0 );
  assign mux_11_nl_C = ( mux_11_nl_C0 );
  assign and_10_nl_C = ( and_10_nl_C0 );
  assign mux_12_nl_C = ( mux_12_nl_C0 );
  assign or_tmp_36_C = ( or_tmp_36_C0 ) | ( or_tmp_36_C1 );
  assign _000__C = ( _000__C0 ) | ( _000__C1 ) | ( _000__C2 ) | ( _000__C3 ) | ( _000__C4 );
  assign mux_15_nl_C = ( mux_15_nl_C0 );
  assign and_11_nl_C = ( and_11_nl_C0 );
  assign mux_16_nl_C = ( mux_16_nl_C0 );
  assign and_93_nl_C = ( and_93_nl_C0 );
  assign nor_21_nl_C = ( nor_21_nl_C0 );
  assign mux_22_nl_C = ( mux_22_nl_C0 );
  assign nor_31_nl_C = ( nor_31_nl_C0 );
  assign mux_26_nl_C = ( mux_26_nl_C0 );
  assign _002__C = ( _002__C0 );
  assign mux_25_nl_C = ( mux_25_nl_C0 );
  assign or_tmp_51_C = ( or_tmp_51_C0 ) | ( or_tmp_51_C1 );
  assign mux_29_nl_C = ( mux_29_nl_C0 );
  assign nand_6_nl_C = ( nand_6_nl_C0 );
  assign mux_30_nl_C = ( mux_30_nl_C0 );
  assign _035__C = ( _035__C0 );
  assign _032__C = ( _032__C0 );
  assign _036__C = ( _036__C0 );
  assign _029__C = ( _029__C0 );
  assign _031__C = ( _031__C0 );
  assign _030__C = ( _030__C0 );
  assign _037__C = ( _037__C0 );
  assign _033__C = ( _033__C0 );
  assign _010__C = ( _010__C0 );
  assign _028__C = ( _028__C0 );
  assign _016__C = ( _016__C0 );
  assign _025__C = ( _025__C0 );
  assign _034__C = ( _034__C0 );
  assign _020__C = ( _020__C0 );
  assign _022__C = ( _022__C0 );
  assign _009__C = ( _009__C0 );
  assign _013__C = ( _013__C0 );
  assign _008__C = ( _008__C0 );
  assign _017__C = ( _017__C0 );
  assign _019__C = ( _019__C0 );
  assign _027__C = ( _027__C0 );
  assign _026__C = ( _026__C0 );
  assign _007__C = ( _007__C0 );
  assign _015__C = ( _015__C0 );
  assign _012__C = ( _012__C0 );
  assign _021__C = ( _021__C0 );
  assign _011__C = ( _011__C0 );
  assign _014__C = ( _014__C0 );
  assign _018__C = ( _018__C0 );
  assign _024__C = ( _024__C0 );
  assign _023__C = ( _023__C0 );
  assign or_45_cse_C = ( or_45_cse_C0 ) | ( or_45_cse_C1 ) | ( or_45_cse_C2 ) | ( or_45_cse_C3 );
  assign _207__C = ( _207__C0 );
  assign _136__C = ( _136__C0 );
  assign _205__C = ( _205__C0 );
  assign _204__C = ( _204__C0 );
  assign _202__C = ( _202__C0 );
  assign _201__C = ( _201__C0 );
  assign _200__C = ( _200__C0 );
  assign _199__C = ( _199__C0 );
  assign _135__C = ( _135__C0 );
  assign _134__C = ( _134__C0 );
  assign _197__C = ( _197__C0 );
  assign _196__C = ( _196__C0 );
  assign _091__C = ( _091__C0 );
  assign _133__C = ( _133__C0 );
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_4_C = ( FpMul_8U_23U_lor_1_lpi_1_dfm_4_C0 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_4_C1 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_4_C2 );
  assign _132__C = ( _132__C0 );
  assign _089__C = ( _089__C0 );
  assign FpMul_8U_23U_is_inf_lpi_1_dfm_2_C = ( FpMul_8U_23U_is_inf_lpi_1_dfm_2_C0 ) | ( FpMul_8U_23U_is_inf_lpi_1_dfm_2_C1 );
  assign _191__C = ( _191__C0 );
  assign _190__C = ( _190__C0 );
  assign _189__C = ( _189__C0 );
  assign _188__C = ( _188__C0 );
  assign _187__C = ( _187__C0 );
  assign _186__C = ( _186__C0 );
  assign _185__C = ( _185__C0 );
  assign _184__C = ( _184__C0 );
  assign _183__C = ( _183__C0 );
  assign _182__C = ( _182__C0 );
  assign _181__C = ( _181__C0 );
  assign _180__C = ( _180__C0 );
  assign _179__C = ( _179__C0 );
  assign _178__C = ( _178__C0 );
  assign _177__C = ( _177__C0 );
  assign _176__C = ( _176__C0 );
  assign _175__C = ( _175__C0 );
  assign _174__C = ( _174__C0 );
  assign _173__C = ( _173__C0 );
  assign _172__C = ( _172__C0 );
  assign _171__C = ( _171__C0 );
  assign _088__C = ( _088__C0 );
  assign _130__C = ( _130__C0 );
  assign _129__C = ( _129__C0 );
  assign FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_C = ( FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_C0 ) | ( FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_C1 );
  assign FpMul_8U_23U_oelse_1_acc_nl_C = ( FpMul_8U_23U_oelse_1_acc_nl_C0 ) | ( FpMul_8U_23U_oelse_1_acc_nl_C1 ) | ( FpMul_8U_23U_oelse_1_acc_nl_C2 ) | ( FpMul_8U_23U_oelse_1_acc_nl_C3 );
  assign _096__C = ( _096__C0 );
  assign and_dcpl_26_C = ( and_dcpl_26_C0 ) | ( and_dcpl_26_C1 ) | ( and_dcpl_26_C2 );
  assign _084__C = ( _084__C0 );
  assign _127__C = ( _127__C0 );
  assign _126__C = ( _126__C0 ) | ( _126__C1 ) | ( _126__C2 ) | ( _126__C3 ) | ( _126__C4 ) | ( _126__C5 ) | ( _126__C6 );
  assign _083__C = ( _083__C0 );
  assign _167__C = ( _167__C0 );
  assign _082__C = ( _082__C0 );
  assign _081__C = ( _081__C0 );
  assign _192__C = ( _192__C0 );
  assign _080__C = ( _080__C0 );
  assign _165__C = ( _165__C0 );
  assign _079__C = ( _079__C0 );
  assign _078__C = ( _078__C0 );
  assign _124__C = ( _124__C0 );
  assign _161__C = ( _161__C0 );
  assign or_tmp_32_C = ( or_tmp_32_C0 ) | ( or_tmp_32_C1 ) | ( or_tmp_32_C2 );
  assign nor_4_cse_C = ( nor_4_cse_C0 );
  assign not_tmp_9_C = ( not_tmp_9_C0 ) | ( not_tmp_9_C1 );
  assign _123__C = ( _123__C0 );
  assign _157__C = ( _157__C0 );
  assign _156__C = ( _156__C0 );
  assign _155__C = ( _155__C0 );
  assign FpMul_8U_23U_or_2_cse_C = ( FpMul_8U_23U_or_2_cse_C0 ) | ( FpMul_8U_23U_or_2_cse_C1 ) | ( FpMul_8U_23U_or_2_cse_C2 ) | ( FpMul_8U_23U_or_2_cse_C3 ) | ( FpMul_8U_23U_or_2_cse_C4 );
  assign _122__C = ( _122__C0 ) | ( _122__C1 ) | ( _122__C2 );
  assign _153__C = ( _153__C0 );
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_C = ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_C0 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_C1 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_C2 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_C3 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_C4 );
  assign _120__C = ( _120__C0 );
  assign _119__C = ( _119__C0 );
  assign FpMul_8U_23U_p_mant_p1_mul_tmp_C = ( FpMul_8U_23U_p_mant_p1_mul_tmp_C0 ) | ( FpMul_8U_23U_p_mant_p1_mul_tmp_C1 ) | ( FpMul_8U_23U_p_mant_p1_mul_tmp_C2 ) | ( FpMul_8U_23U_p_mant_p1_mul_tmp_C3 );
  assign _117__C = ( _117__C0 );
  assign _148__C = ( _148__C0 );
  assign _146__C = ( _146__C0 );
  assign and_45_rgt_C = ( and_45_rgt_C0 ) | ( and_45_rgt_C1 );
  assign and_41_rgt_C = ( and_41_rgt_C0 ) | ( and_41_rgt_C1 );
  assign _055__C = ( _055__C0 );
  assign IsNaN_8U_23U_1_nor_tmp_C = ( IsNaN_8U_23U_1_nor_tmp_C0 ) | ( IsNaN_8U_23U_1_nor_tmp_C1 );
  assign IsNaN_8U_23U_nor_tmp_C = ( IsNaN_8U_23U_nor_tmp_C0 ) | ( IsNaN_8U_23U_nor_tmp_C1 );
  assign or_tmp_65_C = ( or_tmp_65_C0 ) | ( or_tmp_65_C1 );
  assign _046__C = ( _046__C0 );
  assign _206__C = ( _206__C0 );
  assign _203__C = ( _203__C0 );
  assign _198__C = ( _198__C0 );
  assign _101__C = ( _101__C0 );
  assign _194__C = ( _194__C0 );
  assign _100__C = ( _100__C0 );
  assign _099__C = ( _099__C0 );
  assign _169__C = ( _169__C0 ) | ( _169__C1 );
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_C = ( IsNaN_8U_23U_1_land_lpi_1_dfm_3_C0 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_3_C1 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_3_C2 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_3_C3 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_3_C4 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_3_C5 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_3_C6 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_3_C7 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_3_C8 );
  assign _168__C = ( _168__C0 );
  assign _077__C = ( _077__C0 );
  assign mux_27_nl_C = ( mux_27_nl_C0 );
  assign _163__C = ( _163__C0 );
  assign _076__C = ( _076__C0 );
  assign _162__C = ( _162__C0 );
  assign _160__C = ( _160__C0 );
  assign or_tmp_24_C = ( or_tmp_24_C0 ) | ( or_tmp_24_C1 );
  assign _159__C = ( _159__C0 );
  assign _158__C = ( _158__C0 );
  assign _154__C = ( _154__C0 );
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_C = ( FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_C0 ) | ( FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_C1 );
  assign _152__C = ( _152__C0 );
  assign _075__C = ( _075__C0 );
  assign _150__C = ( _150__C0 );
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_4_C = ( IsNaN_8U_23U_1_land_lpi_1_dfm_4_C0 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_4_C1 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_4_C2 );
  assign _006__C = ( _006__C0 );
  assign _005__C = ( _005__C0 );
  assign mux_31_nl_C = ( mux_31_nl_C0 );
  assign or_65_cse_C = ( or_65_cse_C0 ) | ( or_65_cse_C1 ) | ( or_65_cse_C2 ) | ( or_65_cse_C3 ) | ( or_65_cse_C4 );
  assign _147__C = ( _147__C0 );
  assign mux_20_itm_C = ( mux_20_itm_C0 );
  assign main_stage_v_2_mx0c1_C = ( main_stage_v_2_mx0c1_C0 ) | ( main_stage_v_2_mx0c1_C1 );
  assign _142__C = ( _142__C0 );
  assign and_dcpl_6_C = ( and_dcpl_6_C0 ) | ( and_dcpl_6_C1 ) | ( and_dcpl_6_C2 );
  assign main_stage_v_1_mx0c1_C = ( main_stage_v_1_mx0c1_C0 ) | ( main_stage_v_1_mx0c1_C1 );
  assign and_dcpl_13_C = ( and_dcpl_13_C0 ) | ( and_dcpl_13_C1 );
  assign _044__C = ( _044__C0 );
  assign main_stage_en_1_C = ( main_stage_en_1_C0 ) | ( main_stage_en_1_C1 );
  assign FpMul_8U_23U_o_expo_lpi_1_dfm_C = ( FpMul_8U_23U_o_expo_lpi_1_dfm_C0 ) | ( FpMul_8U_23U_o_expo_lpi_1_dfm_C1 );
  assign fangyuan6_C = ( fangyuan6_C0 );
  assign fangyuan5_C = ( fangyuan5_C0 );
  assign _003__C = ( _003__C0 ) | ( _003__C1 ) | ( _003__C2 );
  assign and_dcpl_16_C = ( and_dcpl_16_C0 ) | ( and_dcpl_16_C1 ) | ( and_dcpl_16_C2 );
  assign _138__C = ( _138__C0 );
  assign _093__C = ( _093__C0 );
  assign _092__C = ( _092__C0 );
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_C = ( IsNaN_8U_23U_land_lpi_1_dfm_st_3_C0 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_3_C1 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_3_C2 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_3_C3 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_3_C4 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_3_C5 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_3_C6 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_3_C7 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_3_C8 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_3_C9 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_3_C10 );
  assign _121__C = ( _121__C0 ) | ( _121__C1 ) | ( _121__C2 ) | ( _121__C3 ) | ( _121__C4 );
  assign and_dcpl_3_C = ( and_dcpl_3_C0 ) | ( and_dcpl_3_C1 );
  assign _137__C = ( _137__C0 );
  assign reg_chn_o_rsci_ld_core_psct_cse_C = ( reg_chn_o_rsci_ld_core_psct_cse_C0 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C1 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C2 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C3 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C4 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C5 );
  assign chn_o_rsci_bawt_C = ( chn_o_rsci_bawt_C0 ) | ( chn_o_rsci_bawt_C1 ) | ( chn_o_rsci_bawt_C2 ) | ( chn_o_rsci_bawt_C3 ) | ( chn_o_rsci_bawt_C4 ) | ( chn_o_rsci_bawt_C5 ) | ( chn_o_rsci_bawt_C6 ) | ( chn_o_rsci_bawt_C7 ) | ( chn_o_rsci_bawt_C8 ) | ( chn_o_rsci_bawt_C9 );
  assign chn_b_rsci_bawt_C = ( chn_b_rsci_bawt_C0 ) | ( chn_b_rsci_bawt_C1 ) | ( chn_b_rsci_bawt_C2 );
  assign chn_a_rsci_bawt_C = ( chn_a_rsci_bawt_C0 ) | ( chn_a_rsci_bawt_C1 ) | ( chn_a_rsci_bawt_C2 );
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_C = ( FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_C0 ) | ( FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_C1 );
  assign _195__C = ( _195__C0 );
  assign _131__C = ( _131__C0 ) | ( _131__C1 ) | ( _131__C2 );
  assign _090__C = ( _090__C0 );
  assign FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_C = ( FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_C0 ) | ( FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_C1 );
  assign FpMantRNE_48U_24U_else_and_svs_C = ( FpMantRNE_48U_24U_else_and_svs_C0 ) | ( FpMantRNE_48U_24U_else_and_svs_C1 ) | ( FpMantRNE_48U_24U_else_and_svs_C2 ) | ( FpMantRNE_48U_24U_else_and_svs_C3 );
  assign _004__C = ( _004__C0 ) | ( _004__C1 ) | ( _004__C2 ) | ( _004__C3 ) | ( _004__C4 ) | ( _004__C5 ) | ( _004__C6 ) | ( _004__C7 ) | ( _004__C8 ) | ( _004__C9 ) | ( _004__C10 ) | ( _004__C11 ) | ( _004__C12 ) | ( _004__C13 ) | ( _004__C14 ) | ( _004__C15 ) | ( _004__C16 ) | ( _004__C17 ) | ( _004__C18 ) | ( _004__C19 ) | ( _004__C20 ) | ( _004__C21 ) | ( _004__C22 ) | ( _004__C23 ) | ( _004__C24 ) | ( _004__C25 ) | ( _004__C26 ) | ( _004__C27 ) | ( _004__C28 ) | ( _004__C29 ) | ( _004__C30 ) | ( _004__C31 ) | ( _004__C32 ) | ( _004__C33 ) | ( _004__C34 ) | ( _004__C35 ) | ( _004__C36 ) | ( _004__C37 ) | ( _004__C38 ) | ( _004__C39 ) | ( _004__C40 ) | ( _004__C41 ) | ( _004__C42 ) | ( _004__C43 ) | ( _004__C44 ) | ( _004__C45 ) | ( _004__C46 );
  assign _193__C = ( _193__C0 );
  assign _095__C = ( _095__C0 );
  assign FpMul_8U_23U_p_mant_p1_sva_2_C = ( FpMul_8U_23U_p_mant_p1_sva_2_C0 ) | ( FpMul_8U_23U_p_mant_p1_sva_2_C1 ) | ( FpMul_8U_23U_p_mant_p1_sva_2_C2 ) | ( FpMul_8U_23U_p_mant_p1_sva_2_C3 ) | ( FpMul_8U_23U_p_mant_p1_sva_2_C4 ) | ( FpMul_8U_23U_p_mant_p1_sva_2_C5 ) | ( FpMul_8U_23U_p_mant_p1_sva_2_C6 );
  assign FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C = ( FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C0 ) | ( FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C1 ) | ( FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C2 ) | ( FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C3 );
  assign and_cse_C = ( and_cse_C0 ) | ( and_cse_C1 ) | ( and_cse_C2 ) | ( and_cse_C3 ) | ( and_cse_C4 ) | ( and_cse_C5 );
  assign mux_33_nl_C = ( mux_33_nl_C0 );
  assign or_tmp_55_C = ( or_tmp_55_C0 ) | ( or_tmp_55_C1 ) | ( or_tmp_55_C2 );
  assign nand_cse_C = ( nand_cse_C0 ) | ( nand_cse_C1 ) | ( nand_cse_C2 );
  assign _087__C = ( _087__C0 );
  assign _098__C = ( _098__C0 ) | ( _098__C1 ) | ( _098__C2 );
  assign _086__C = ( _086__C0 );
  assign _170__C = ( _170__C0 );
  assign _097__C = ( _097__C0 ) | ( _097__C1 ) | ( _097__C2 ) | ( _097__C3 ) | ( _097__C4 );
  assign _085__C = ( _085__C0 );
  assign and_91_nl_C = ( and_91_nl_C0 ) | ( and_91_nl_C1 ) | ( and_91_nl_C2 );
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_C = ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_C0 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_C1 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_C2 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_C3 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_C4 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_C5 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_C6 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_C7 );
  assign _128__C = ( _128__C0 ) | ( _128__C1 );
  assign or_29_cse_C = ( or_29_cse_C0 ) | ( or_29_cse_C1 ) | ( or_29_cse_C2 ) | ( or_29_cse_C3 );
  assign _106__C = ( _106__C0 );
  assign _125__C = ( _125__C0 );
  assign fangyuan4_C = ( fangyuan4_C0 );
  assign FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_C = ( FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_C0 ) | ( FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_C1 ) | ( FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_C2 ) | ( FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_C3 ) | ( FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_C4 ) | ( FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_C5 ) | ( FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_C6 ) | ( FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_C7 );
  assign fangyuan3_C = ( fangyuan3_C0 );
  assign FpMul_8U_23U_or_1_nl_C = ( FpMul_8U_23U_or_1_nl_C0 ) | ( FpMul_8U_23U_or_1_nl_C1 ) | ( FpMul_8U_23U_or_1_nl_C2 ) | ( FpMul_8U_23U_or_1_nl_C3 ) | ( FpMul_8U_23U_or_1_nl_C4 ) | ( FpMul_8U_23U_or_1_nl_C5 ) | ( FpMul_8U_23U_or_1_nl_C6 ) | ( FpMul_8U_23U_or_1_nl_C7 );
  assign fangyuan2_C = ( fangyuan2_C0 );
  assign FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_C = ( FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_C0 ) | ( FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_C1 ) | ( FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_C2 );
  assign FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_C = ( FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_C0 ) | ( FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_C1 ) | ( FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_C2 ) | ( FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_C3 ) | ( FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_C4 ) | ( FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_C5 ) | ( FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_C6 ) | ( FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_C7 );
  assign and_54_rgt_C = ( and_54_rgt_C0 ) | ( and_54_rgt_C1 );
  assign and_64_rgt_C = ( and_64_rgt_C0 ) | ( and_64_rgt_C1 );
  assign and_65_rgt_C = ( and_65_rgt_C0 ) | ( and_65_rgt_C1 );
  assign FpMul_8U_23U_xor_1_nl_C = ( FpMul_8U_23U_xor_1_nl_C0 );
  assign _164__C = ( _164__C0 );
  assign _094__C = ( _094__C0 ) | ( _094__C1 ) | ( _094__C2 );
  assign mux_24_cse_C = ( mux_24_cse_C0 ) | ( mux_24_cse_C1 ) | ( mux_24_cse_C2 );
  assign nand_8_cse_C = ( nand_8_cse_C0 ) | ( nand_8_cse_C1 );
  assign mux_tmp_14_C = ( mux_tmp_14_C0 ) | ( mux_tmp_14_C1 ) | ( mux_tmp_14_C2 );
  assign mux_tmp_10_C = ( mux_tmp_10_C0 ) | ( mux_tmp_10_C1 );
  assign main_stage_v_1_C = ( main_stage_v_1_C0 ) | ( main_stage_v_1_C1 ) | ( main_stage_v_1_C2 ) | ( main_stage_v_1_C3 ) | ( main_stage_v_1_C4 ) | ( main_stage_v_1_C5 ) | ( main_stage_v_1_C6 ) | ( main_stage_v_1_C7 ) | ( main_stage_v_1_C8 ) | ( main_stage_v_1_C9 ) | ( main_stage_v_1_C10 );
  assign _151__C = ( _151__C0 );
  assign chn_o_rsci_d_30_23_mx0c1_C = ( chn_o_rsci_d_30_23_mx0c1_C0 ) | ( chn_o_rsci_d_30_23_mx0c1_C1 );
  assign _118__C = ( _118__C0 );
  assign _116__C = ( _116__C0 );
  assign mux_28_nl_C = ( mux_28_nl_C0 );
  assign mux_tmp_1_C = ( mux_tmp_1_C0 ) | ( mux_tmp_1_C1 );
  assign _071__C = ( _071__C0 );
  assign _149__C = ( _149__C0 );
  assign mux_23_nl_C = ( mux_23_nl_C0 );
  assign mux_tmp_C = ( mux_tmp_C0 ) | ( mux_tmp_C1 );
  assign _068__C = ( _068__C0 );
  assign _115__C = ( _115__C0 ) | ( _115__C1 );
  assign _067__C = ( _067__C0 );
  assign _114__C = ( _114__C0 );
  assign _113__C = ( _113__C0 );
  assign _064__C = ( _064__C0 );
  assign _145__C = ( _145__C0 );
  assign _112__C = ( _112__C0 ) | ( _112__C1 );
  assign mux_17_nl_C = ( mux_17_nl_C0 );
  assign mux_13_nl_C = ( mux_13_nl_C0 );
  assign _060__C = ( _060__C0 ) | ( _060__C1 );
  assign FpMul_8U_23U_ub_FpBitsToFloat_8U_23U_1_or_1_cse_C = ( FpMul_8U_23U_ub_FpBitsToFloat_8U_23U_1_or_1_cse_C0 );
  assign mux_8_nl_C = ( mux_8_nl_C0 );
  assign mux_6_nl_C = ( mux_6_nl_C0 );
  assign mux_tmp_4_C = ( mux_tmp_4_C0 ) | ( mux_tmp_4_C1 ) | ( mux_tmp_4_C2 ) | ( mux_tmp_4_C3 );
  assign _056__C = ( _056__C0 );
  assign _144__C = ( _144__C0 );
  assign FpMul_8U_23U_else_2_if_acc_nl_C = ( FpMul_8U_23U_else_2_if_acc_nl_C0 ) | ( FpMul_8U_23U_else_2_if_acc_nl_C1 ) | ( FpMul_8U_23U_else_2_if_acc_nl_C2 ) | ( FpMul_8U_23U_else_2_if_acc_nl_C3 ) | ( FpMul_8U_23U_else_2_if_acc_nl_C4 ) | ( FpMul_8U_23U_else_2_if_acc_nl_C5 ) | ( FpMul_8U_23U_else_2_if_acc_nl_C6 ) | ( FpMul_8U_23U_else_2_if_acc_nl_C7 );
  assign _054__C = ( _054__C0 ) | ( _054__C1 );
  assign _111__C = ( _111__C0 ) | ( _111__C1 );
  assign mux_3_nl_C = ( mux_3_nl_C0 );
  assign _143__C = ( _143__C0 );
  assign _107__C = ( _107__C0 );
  assign _050__C = ( _050__C0 ) | ( _050__C1 ) | ( _050__C2 ) | ( _050__C3 ) | ( _050__C4 ) | ( _050__C5 ) | ( _050__C6 ) | ( _050__C7 ) | ( _050__C8 ) | ( _050__C9 );
  assign _141__C = ( _141__C0 );
  assign _140__C = ( _140__C0 );
  assign _139__C = ( _139__C0 );
  assign IsNaN_8U_23U_land_lpi_1_dfm_4_C = ( IsNaN_8U_23U_land_lpi_1_dfm_4_C0 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_4_C1 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_4_C2 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_4_C3 );
  assign or_tmp_59_C = ( or_tmp_59_C0 ) | ( or_tmp_59_C1 );
  assign core_wen_C = ( core_wen_C0 ) | ( core_wen_C1 ) | ( core_wen_C2 ) | ( core_wen_C3 ) | ( core_wen_C4 ) | ( core_wen_C5 ) | ( core_wen_C6 ) | ( core_wen_C7 ) | ( core_wen_C8 ) | ( core_wen_C9 ) | ( core_wen_C10 ) | ( core_wen_C11 ) | ( core_wen_C12 ) | ( core_wen_C13 ) | ( core_wen_C14 ) | ( core_wen_C15 ) | ( core_wen_C16 ) | ( core_wen_C17 ) | ( core_wen_C18 );
  assign fsm_output_C = ( fsm_output_C0 ) | ( fsm_output_C1 ) | ( fsm_output_C2 );
  assign _102__C = ( _102__C0 );
  assign _001__C = ( _001__C0 ) | ( _001__C1 ) | ( _001__C2 ) | ( _001__C3 ) | ( _001__C4 ) | ( _001__C5 ) | ( _001__C6 );
  assign and_dcpl_12_C = ( and_dcpl_12_C0 ) | ( and_dcpl_12_C1 ) | ( and_dcpl_12_C2 ) | ( and_dcpl_12_C3 ) | ( and_dcpl_12_C4 );
  assign main_stage_v_2_C = ( main_stage_v_2_C0 ) | ( main_stage_v_2_C1 ) | ( main_stage_v_2_C2 ) | ( main_stage_v_2_C3 ) | ( main_stage_v_2_C4 ) | ( main_stage_v_2_C5 ) | ( main_stage_v_2_C6 );
  assign or_10_cse_C = ( or_10_cse_C0 ) | ( or_10_cse_C1 ) | ( or_10_cse_C2 ) | ( or_10_cse_C3 ) | ( or_10_cse_C4 ) | ( or_10_cse_C5 ) | ( or_10_cse_C6 ) | ( or_10_cse_C7 ) | ( or_10_cse_C8 ) | ( or_10_cse_C9 ) | ( or_10_cse_C10 ) | ( or_10_cse_C11 ) | ( or_10_cse_C12 ) | ( or_10_cse_C13 ) | ( or_10_cse_C14 ) | ( or_10_cse_C15 ) | ( or_10_cse_C16 ) | ( or_10_cse_C17 ) | ( or_10_cse_C18 );
  assign FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_C = ( FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_C0 ) | ( FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_C1 );
  assign fangyuan1_C = ( fangyuan1_C0 );
  assign _039__C = ( _039__C0 );
  assign FpMul_8U_23U_p_expo_sva_5_C = ( FpMul_8U_23U_p_expo_sva_5_C0 ) | ( FpMul_8U_23U_p_expo_sva_5_C1 ) | ( FpMul_8U_23U_p_expo_sva_5_C2 ) | ( FpMul_8U_23U_p_expo_sva_5_C3 );
  assign fangyuan0_C = ( fangyuan0_C0 );
  assign FpMul_8U_23U_oelse_1_acc_1_nl_C = ( FpMul_8U_23U_oelse_1_acc_1_nl_C0 ) | ( FpMul_8U_23U_oelse_1_acc_1_nl_C1 ) | ( FpMul_8U_23U_oelse_1_acc_1_nl_C2 );
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_C = ( FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_C0 ) | ( FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_C1 );
  assign FpMul_8U_23U_ua_sva_1_30_0_1_C = ( FpMul_8U_23U_ua_sva_1_30_0_1_C0 ) | ( FpMul_8U_23U_ua_sva_1_30_0_1_C1 ) | ( FpMul_8U_23U_ua_sva_1_30_0_1_C2 );
  assign FpMul_8U_23U_else_2_else_acc_2_nl_C = ( FpMul_8U_23U_else_2_else_acc_2_nl_C0 ) | ( FpMul_8U_23U_else_2_else_acc_2_nl_C1 );
  assign FpMul_8U_23U_ub_sva_1_30_0_1_C = ( FpMul_8U_23U_ub_sva_1_30_0_1_C0 ) | ( FpMul_8U_23U_ub_sva_1_30_0_1_C1 ) | ( FpMul_8U_23U_ub_sva_1_30_0_1_C2 );
  assign chn_b_rsci_d_mxwt_C = ( chn_b_rsci_d_mxwt_C0 ) | ( chn_b_rsci_d_mxwt_C1 ) | ( chn_b_rsci_d_mxwt_C2 ) | ( chn_b_rsci_d_mxwt_C3 ) | ( chn_b_rsci_d_mxwt_C4 );
  assign chn_a_rsci_d_mxwt_C = ( chn_a_rsci_d_mxwt_C0 ) | ( chn_a_rsci_d_mxwt_C1 ) | ( chn_a_rsci_d_mxwt_C2 ) | ( chn_a_rsci_d_mxwt_C3 ) | ( chn_a_rsci_d_mxwt_C4 ) | ( chn_a_rsci_d_mxwt_C5 );
  assign FpMantRNE_48U_24U_else_carry_sva_C = ( FpMantRNE_48U_24U_else_carry_sva_C0 ) | ( FpMantRNE_48U_24U_else_carry_sva_C1 );
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C = ( FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C0 ) | ( FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C1 ) | ( FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C2 );
  assign chn_o_rsci_oswt_unreg_C = ( chn_o_rsci_oswt_unreg_C0 );
  assign chn_o_rsc_z_C = ( chn_o_rsc_z_C0 );
  assign chn_o_rsc_lz_C = ( chn_o_rsc_lz_C0 );
  assign chn_b_rsc_lz_C = ( chn_b_rsc_lz_C0 );
  assign chn_a_rsci_oswt_unreg_pff_C = ( chn_a_rsci_oswt_unreg_pff_C0 );
  assign chn_a_rsc_lz_C = ( chn_a_rsc_lz_C0 );
  assign chn_o_rsci_wen_comp_X = ( chn_o_rsci_wen_comp_X0 );
  assign chn_b_rsci_wen_comp_X = ( chn_b_rsci_wen_comp_X0 );
  assign chn_a_rsci_wen_comp_X = ( chn_a_rsci_wen_comp_X0 );
  assign chn_o_rsci_oswt_X = ( chn_o_rsci_oswt_X0 );
  assign chn_o_rsc_vz_X = ( chn_o_rsc_vz_X0 );
  assign chn_b_rsci_oswt_X = ( chn_b_rsci_oswt_X0 );
  assign chn_b_rsc_z_X = ( chn_b_rsc_z_X0 );
  assign chn_b_rsc_vz_X = ( chn_b_rsc_vz_X0 );
  assign nvdla_core_rstn_X = ( nvdla_core_rstn_X0 ) | ( nvdla_core_rstn_X1 ) | ( nvdla_core_rstn_X2 ) | ( nvdla_core_rstn_X3 ) | ( nvdla_core_rstn_X4 );
  assign core_wten_X = ( core_wten_X0 ) | ( core_wten_X1 ) | ( core_wten_X2 );
  assign chn_a_rsci_oswt_X = ( chn_a_rsci_oswt_X0 );
  assign chn_a_rsc_z_X = ( chn_a_rsc_z_X0 );
  assign chn_a_rsc_vz_X = ( chn_a_rsc_vz_X0 );
  assign chn_o_rsci_iswt0_X = ( chn_o_rsci_iswt0_X0 ) | ( chn_o_rsci_iswt0_X1 );
  assign reg_chn_b_rsci_iswt0_cse_X = ( reg_chn_b_rsci_iswt0_cse_X0 ) | ( reg_chn_b_rsci_iswt0_cse_X1 ) | ( reg_chn_b_rsci_iswt0_cse_X2 );
  assign _103__X = ( _103__X0 );
  assign reg_chn_b_rsci_ld_core_psct_cse_X = ( reg_chn_b_rsci_ld_core_psct_cse_X0 ) | ( reg_chn_b_rsci_ld_core_psct_cse_X1 ) | ( reg_chn_b_rsci_ld_core_psct_cse_X2 );
  assign _045__X = ( _045__X0 );
  assign chn_o_rsci_d_31_X = ( chn_o_rsci_d_31_X0 ) | ( chn_o_rsci_d_31_X1 ) | ( chn_o_rsci_d_31_X2 );
  assign chn_o_rsci_d_22_0_X = ( chn_o_rsci_d_22_0_X0 ) | ( chn_o_rsci_d_22_0_X1 ) | ( chn_o_rsci_d_22_0_X2 );
  assign chn_o_and_cse_X = ( chn_o_and_cse_X0 ) | ( chn_o_and_cse_X1 );
  assign FpMul_8U_23U_FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X = ( FpMul_8U_23U_FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X0 );
  assign chn_o_rsci_d_30_23_X = ( chn_o_rsci_d_30_23_X0 ) | ( chn_o_rsci_d_30_23_X1 ) | ( chn_o_rsci_d_30_23_X2 );
  assign _042__X = ( _042__X0 );
  assign _047__X = ( _047__X0 );
  assign FpMul_8U_23U_FpMul_8U_23U_and_2_nl_X = ( FpMul_8U_23U_FpMul_8U_23U_and_2_nl_X0 );
  assign FpBitsToFloat_8U_23U_1_and_nl_X = ( FpBitsToFloat_8U_23U_1_and_nl_X0 );
  assign _104__X = ( _104__X0 );
  assign _048__X = ( _048__X0 );
  assign _105__X = ( _105__X0 );
  assign _049__X = ( _049__X0 );
  assign FpMul_8U_23U_else_2_acc_1_nl_X = ( FpMul_8U_23U_else_2_acc_1_nl_X0 ) | ( FpMul_8U_23U_else_2_acc_1_nl_X1 );
  assign _051__X = ( _051__X0 );
  assign _109__X = ( _109__X0 );
  assign _108__X = ( _108__X0 );
  assign IsNaN_8U_23U_aelse_and_cse_X = ( IsNaN_8U_23U_aelse_and_cse_X0 ) | ( IsNaN_8U_23U_aelse_and_cse_X1 ) | ( IsNaN_8U_23U_aelse_and_cse_X2 );
  assign _110__X = ( _110__X0 );
  assign _052__X = ( _052__X0 );
  assign nl_FpMul_8U_23U_p_expo_sva_5_X = ( nl_FpMul_8U_23U_p_expo_sva_5_X0 );
  assign _053__X = ( _053__X0 );
  assign _041__X = ( _041__X0 );
  assign _057__X = ( _057__X0 );
  assign _058__X = ( _058__X0 );
  assign _059__X = ( _059__X0 );
  assign FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_X = ( FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_X0 ) | ( FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_X1 );
  assign _043__X = ( _043__X0 );
  assign _061__X = ( _061__X0 );
  assign FpMul_8U_23U_mux_10_itm_4_X = ( FpMul_8U_23U_mux_10_itm_4_X0 ) | ( FpMul_8U_23U_mux_10_itm_4_X1 );
  assign IsNaN_8U_23U_1_aelse_and_cse_X = ( IsNaN_8U_23U_1_aelse_and_cse_X0 ) | ( IsNaN_8U_23U_1_aelse_and_cse_X1 ) | ( IsNaN_8U_23U_1_aelse_and_cse_X2 ) | ( IsNaN_8U_23U_1_aelse_and_cse_X3 );
  assign FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_X = ( FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_X0 ) | ( FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_X1 );
  assign _040__X = ( _040__X0 );
  assign _062__X = ( _062__X0 );
  assign _063__X = ( _063__X0 );
  assign _038__X = ( _038__X0 );
  assign _065__X = ( _065__X0 );
  assign FpMul_8U_23U_p_mant_p1_sva_X = ( FpMul_8U_23U_p_mant_p1_sva_X0 ) | ( FpMul_8U_23U_p_mant_p1_sva_X1 );
  assign _066__X = ( _066__X0 );
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_X = ( FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_X0 ) | ( FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_X1 );
  assign _069__X = ( _069__X0 );
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_3_X = ( FpMul_8U_23U_lor_1_lpi_1_dfm_3_X0 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_3_X1 );
  assign _070__X = ( _070__X0 );
  assign FpMul_8U_23U_mux_10_itm_3_X = ( FpMul_8U_23U_mux_10_itm_3_X0 ) | ( FpMul_8U_23U_mux_10_itm_3_X1 );
  assign _166__X = ( _166__X0 );
  assign _072__X = ( _072__X0 );
  assign _073__X = ( _073__X0 );
  assign _074__X = ( _074__X0 );
  assign and_90_nl_X = ( and_90_nl_X0 );
  assign and_95_nl_X = ( and_95_nl_X0 );
  assign FpMul_8U_23U_else_2_else_if_if_acc_nl_X = ( FpMul_8U_23U_else_2_else_if_if_acc_nl_X0 ) | ( FpMul_8U_23U_else_2_else_if_if_acc_nl_X1 );
  assign asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl_X = ( asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl_X0 );
  assign nor_nl_X = ( nor_nl_X0 );
  assign or_3_nl_X = ( or_3_nl_X0 );
  assign or_1_nl_X = ( or_1_nl_X0 );
  assign nor_28_nl_X = ( nor_28_nl_X0 );
  assign or_7_nl_X = ( or_7_nl_X0 );
  assign or_22_nl_X = ( or_22_nl_X0 );
  assign nor_22_nl_X = ( nor_22_nl_X0 );
  assign mux_tmp_9_X = ( mux_tmp_9_X0 ) | ( mux_tmp_9_X1 );
  assign mux_18_nl_X = ( mux_18_nl_X0 );
  assign mux_19_nl_X = ( mux_19_nl_X0 );
  assign or_39_nl_X = ( or_39_nl_X0 );
  assign fangyuan7_X = ( fangyuan7_X0 );
  assign FpMantRNE_48U_24U_else_acc_nl_X = ( FpMantRNE_48U_24U_else_acc_nl_X0 ) | ( FpMantRNE_48U_24U_else_acc_nl_X1 );
  assign or_nl_X = ( or_nl_X0 );
  assign mux_34_nl_X = ( mux_34_nl_X0 );
  assign FpMul_8U_23U_nor_nl_X = ( FpMul_8U_23U_nor_nl_X0 );
  assign FpMul_8U_23U_lor_2_lpi_1_dfm_X = ( FpMul_8U_23U_lor_2_lpi_1_dfm_X0 ) | ( FpMul_8U_23U_lor_2_lpi_1_dfm_X1 );
  assign nor_27_nl_X = ( nor_27_nl_X0 );
  assign nor_26_nl_X = ( nor_26_nl_X0 );
  assign FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_X = ( FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_X0 ) | ( FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_X1 );
  assign mux_2_nl_X = ( mux_2_nl_X0 );
  assign nor_24_nl_X = ( nor_24_nl_X0 );
  assign mux_5_nl_X = ( mux_5_nl_X0 );
  assign nor_32_nl_X = ( nor_32_nl_X0 );
  assign or_25_nl_X = ( or_25_nl_X0 );
  assign mux_7_nl_X = ( mux_7_nl_X0 );
  assign nor_23_nl_X = ( nor_23_nl_X0 );
  assign or_33_nl_X = ( or_33_nl_X0 );
  assign mux_11_nl_X = ( mux_11_nl_X0 );
  assign and_10_nl_X = ( and_10_nl_X0 );
  assign mux_12_nl_X = ( mux_12_nl_X0 );
  assign or_tmp_36_X = ( or_tmp_36_X0 ) | ( or_tmp_36_X1 );
  assign _000__X = ( _000__X0 ) | ( _000__X1 ) | ( _000__X2 ) | ( _000__X3 ) | ( _000__X4 );
  assign mux_15_nl_X = ( mux_15_nl_X0 );
  assign and_11_nl_X = ( and_11_nl_X0 );
  assign mux_16_nl_X = ( mux_16_nl_X0 );
  assign and_93_nl_X = ( and_93_nl_X0 );
  assign nor_21_nl_X = ( nor_21_nl_X0 );
  assign mux_22_nl_X = ( mux_22_nl_X0 );
  assign nor_31_nl_X = ( nor_31_nl_X0 );
  assign mux_26_nl_X = ( mux_26_nl_X0 );
  assign _002__X = ( _002__X0 );
  assign mux_25_nl_X = ( mux_25_nl_X0 );
  assign or_tmp_51_X = ( or_tmp_51_X0 ) | ( or_tmp_51_X1 );
  assign mux_29_nl_X = ( mux_29_nl_X0 );
  assign nand_6_nl_X = ( nand_6_nl_X0 );
  assign mux_30_nl_X = ( mux_30_nl_X0 );
  assign _035__X = ( _035__X0 );
  assign _032__X = ( _032__X0 );
  assign _036__X = ( _036__X0 );
  assign _029__X = ( _029__X0 );
  assign _031__X = ( _031__X0 );
  assign _030__X = ( _030__X0 );
  assign _037__X = ( _037__X0 );
  assign _033__X = ( _033__X0 );
  assign _010__X = ( _010__X0 );
  assign _028__X = ( _028__X0 );
  assign _016__X = ( _016__X0 );
  assign _025__X = ( _025__X0 );
  assign _034__X = ( _034__X0 );
  assign _020__X = ( _020__X0 );
  assign _022__X = ( _022__X0 );
  assign _009__X = ( _009__X0 );
  assign _013__X = ( _013__X0 );
  assign _008__X = ( _008__X0 );
  assign _017__X = ( _017__X0 );
  assign _019__X = ( _019__X0 );
  assign _027__X = ( _027__X0 );
  assign _026__X = ( _026__X0 );
  assign _007__X = ( _007__X0 );
  assign _015__X = ( _015__X0 );
  assign _012__X = ( _012__X0 );
  assign _021__X = ( _021__X0 );
  assign _011__X = ( _011__X0 );
  assign _014__X = ( _014__X0 );
  assign _018__X = ( _018__X0 );
  assign _024__X = ( _024__X0 );
  assign _023__X = ( _023__X0 );
  assign or_45_cse_X = ( or_45_cse_X0 ) | ( or_45_cse_X1 ) | ( or_45_cse_X2 ) | ( or_45_cse_X3 );
  assign _207__X = ( _207__X0 );
  assign _136__X = ( _136__X0 );
  assign _205__X = ( _205__X0 );
  assign _204__X = ( _204__X0 );
  assign _202__X = ( _202__X0 );
  assign _201__X = ( _201__X0 );
  assign _200__X = ( _200__X0 );
  assign _199__X = ( _199__X0 );
  assign _135__X = ( _135__X0 );
  assign _134__X = ( _134__X0 );
  assign _197__X = ( _197__X0 );
  assign _196__X = ( _196__X0 );
  assign _091__X = ( _091__X0 );
  assign _133__X = ( _133__X0 );
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_4_X = ( FpMul_8U_23U_lor_1_lpi_1_dfm_4_X0 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_4_X1 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_4_X2 );
  assign _132__X = ( _132__X0 );
  assign _089__X = ( _089__X0 );
  assign FpMul_8U_23U_is_inf_lpi_1_dfm_2_X = ( FpMul_8U_23U_is_inf_lpi_1_dfm_2_X0 ) | ( FpMul_8U_23U_is_inf_lpi_1_dfm_2_X1 );
  assign _191__X = ( _191__X0 );
  assign _190__X = ( _190__X0 );
  assign _189__X = ( _189__X0 );
  assign _188__X = ( _188__X0 );
  assign _187__X = ( _187__X0 );
  assign _186__X = ( _186__X0 );
  assign _185__X = ( _185__X0 );
  assign _184__X = ( _184__X0 );
  assign _183__X = ( _183__X0 );
  assign _182__X = ( _182__X0 );
  assign _181__X = ( _181__X0 );
  assign _180__X = ( _180__X0 );
  assign _179__X = ( _179__X0 );
  assign _178__X = ( _178__X0 );
  assign _177__X = ( _177__X0 );
  assign _176__X = ( _176__X0 );
  assign _175__X = ( _175__X0 );
  assign _174__X = ( _174__X0 );
  assign _173__X = ( _173__X0 );
  assign _172__X = ( _172__X0 );
  assign _171__X = ( _171__X0 );
  assign _088__X = ( _088__X0 );
  assign _130__X = ( _130__X0 );
  assign _129__X = ( _129__X0 );
  assign FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_X = ( FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_X0 ) | ( FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_X1 );
  assign FpMul_8U_23U_oelse_1_acc_nl_X = ( FpMul_8U_23U_oelse_1_acc_nl_X0 ) | ( FpMul_8U_23U_oelse_1_acc_nl_X1 ) | ( FpMul_8U_23U_oelse_1_acc_nl_X2 ) | ( FpMul_8U_23U_oelse_1_acc_nl_X3 );
  assign _096__X = ( _096__X0 );
  assign and_dcpl_26_X = ( and_dcpl_26_X0 ) | ( and_dcpl_26_X1 ) | ( and_dcpl_26_X2 );
  assign _084__X = ( _084__X0 );
  assign _127__X = ( _127__X0 );
  assign _126__X = ( _126__X0 ) | ( _126__X1 ) | ( _126__X2 ) | ( _126__X3 ) | ( _126__X4 ) | ( _126__X5 ) | ( _126__X6 );
  assign _083__X = ( _083__X0 );
  assign _167__X = ( _167__X0 );
  assign _082__X = ( _082__X0 );
  assign _081__X = ( _081__X0 );
  assign _192__X = ( _192__X0 );
  assign _080__X = ( _080__X0 );
  assign _165__X = ( _165__X0 );
  assign _079__X = ( _079__X0 );
  assign _078__X = ( _078__X0 );
  assign _124__X = ( _124__X0 );
  assign _161__X = ( _161__X0 );
  assign or_tmp_32_X = ( or_tmp_32_X0 ) | ( or_tmp_32_X1 ) | ( or_tmp_32_X2 );
  assign nor_4_cse_X = ( nor_4_cse_X0 );
  assign not_tmp_9_X = ( not_tmp_9_X0 ) | ( not_tmp_9_X1 );
  assign _123__X = ( _123__X0 );
  assign _157__X = ( _157__X0 );
  assign _156__X = ( _156__X0 );
  assign _155__X = ( _155__X0 );
  assign FpMul_8U_23U_or_2_cse_X = ( FpMul_8U_23U_or_2_cse_X0 ) | ( FpMul_8U_23U_or_2_cse_X1 ) | ( FpMul_8U_23U_or_2_cse_X2 ) | ( FpMul_8U_23U_or_2_cse_X3 ) | ( FpMul_8U_23U_or_2_cse_X4 );
  assign _122__X = ( _122__X0 ) | ( _122__X1 ) | ( _122__X2 );
  assign _153__X = ( _153__X0 );
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_X = ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_X0 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_X1 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_X2 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_X3 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_X4 );
  assign _120__X = ( _120__X0 );
  assign _119__X = ( _119__X0 );
  assign FpMul_8U_23U_p_mant_p1_mul_tmp_X = ( FpMul_8U_23U_p_mant_p1_mul_tmp_X0 ) | ( FpMul_8U_23U_p_mant_p1_mul_tmp_X1 ) | ( FpMul_8U_23U_p_mant_p1_mul_tmp_X2 ) | ( FpMul_8U_23U_p_mant_p1_mul_tmp_X3 );
  assign _117__X = ( _117__X0 );
  assign _148__X = ( _148__X0 );
  assign _146__X = ( _146__X0 );
  assign and_45_rgt_X = ( and_45_rgt_X0 ) | ( and_45_rgt_X1 );
  assign and_41_rgt_X = ( and_41_rgt_X0 ) | ( and_41_rgt_X1 );
  assign _055__X = ( _055__X0 );
  assign IsNaN_8U_23U_1_nor_tmp_X = ( IsNaN_8U_23U_1_nor_tmp_X0 ) | ( IsNaN_8U_23U_1_nor_tmp_X1 );
  assign IsNaN_8U_23U_nor_tmp_X = ( IsNaN_8U_23U_nor_tmp_X0 ) | ( IsNaN_8U_23U_nor_tmp_X1 );
  assign or_tmp_65_X = ( or_tmp_65_X0 ) | ( or_tmp_65_X1 );
  assign _046__X = ( _046__X0 );
  assign _206__X = ( _206__X0 );
  assign _203__X = ( _203__X0 );
  assign _198__X = ( _198__X0 );
  assign _101__X = ( _101__X0 );
  assign _194__X = ( _194__X0 );
  assign _100__X = ( _100__X0 );
  assign _099__X = ( _099__X0 );
  assign _169__X = ( _169__X0 ) | ( _169__X1 );
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_X = ( IsNaN_8U_23U_1_land_lpi_1_dfm_3_X0 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_3_X1 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_3_X2 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_3_X3 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_3_X4 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_3_X5 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_3_X6 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_3_X7 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_3_X8 );
  assign _168__X = ( _168__X0 );
  assign _077__X = ( _077__X0 );
  assign mux_27_nl_X = ( mux_27_nl_X0 );
  assign _163__X = ( _163__X0 );
  assign _076__X = ( _076__X0 );
  assign _162__X = ( _162__X0 );
  assign _160__X = ( _160__X0 );
  assign or_tmp_24_X = ( or_tmp_24_X0 ) | ( or_tmp_24_X1 );
  assign _159__X = ( _159__X0 );
  assign _158__X = ( _158__X0 );
  assign _154__X = ( _154__X0 );
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_X = ( FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_X0 ) | ( FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_X1 );
  assign _152__X = ( _152__X0 );
  assign _075__X = ( _075__X0 );
  assign _150__X = ( _150__X0 );
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_4_X = ( IsNaN_8U_23U_1_land_lpi_1_dfm_4_X0 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_4_X1 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_4_X2 );
  assign _006__X = ( _006__X0 );
  assign _005__X = ( _005__X0 );
  assign mux_31_nl_X = ( mux_31_nl_X0 );
  assign or_65_cse_X = ( or_65_cse_X0 ) | ( or_65_cse_X1 ) | ( or_65_cse_X2 ) | ( or_65_cse_X3 ) | ( or_65_cse_X4 );
  assign _147__X = ( _147__X0 );
  assign mux_20_itm_X = ( mux_20_itm_X0 );
  assign main_stage_v_2_mx0c1_X = ( main_stage_v_2_mx0c1_X0 ) | ( main_stage_v_2_mx0c1_X1 );
  assign _142__X = ( _142__X0 );
  assign and_dcpl_6_X = ( and_dcpl_6_X0 ) | ( and_dcpl_6_X1 ) | ( and_dcpl_6_X2 );
  assign main_stage_v_1_mx0c1_X = ( main_stage_v_1_mx0c1_X0 ) | ( main_stage_v_1_mx0c1_X1 );
  assign and_dcpl_13_X = ( and_dcpl_13_X0 ) | ( and_dcpl_13_X1 );
  assign _044__X = ( _044__X0 );
  assign main_stage_en_1_X = ( main_stage_en_1_X0 ) | ( main_stage_en_1_X1 );
  assign FpMul_8U_23U_o_expo_lpi_1_dfm_X = ( FpMul_8U_23U_o_expo_lpi_1_dfm_X0 ) | ( FpMul_8U_23U_o_expo_lpi_1_dfm_X1 );
  assign fangyuan6_X = ( fangyuan6_X0 );
  assign fangyuan5_X = ( fangyuan5_X0 );
  assign _003__X = ( _003__X0 ) | ( _003__X1 ) | ( _003__X2 );
  assign and_dcpl_16_X = ( and_dcpl_16_X0 ) | ( and_dcpl_16_X1 ) | ( and_dcpl_16_X2 );
  assign _138__X = ( _138__X0 );
  assign _093__X = ( _093__X0 );
  assign _092__X = ( _092__X0 );
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_X = ( IsNaN_8U_23U_land_lpi_1_dfm_st_3_X0 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_3_X1 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_3_X2 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_3_X3 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_3_X4 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_3_X5 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_3_X6 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_3_X7 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_3_X8 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_3_X9 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_3_X10 );
  assign _121__X = ( _121__X0 ) | ( _121__X1 ) | ( _121__X2 ) | ( _121__X3 ) | ( _121__X4 );
  assign and_dcpl_3_X = ( and_dcpl_3_X0 ) | ( and_dcpl_3_X1 );
  assign _137__X = ( _137__X0 );
  assign reg_chn_o_rsci_ld_core_psct_cse_X = ( reg_chn_o_rsci_ld_core_psct_cse_X0 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X1 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X2 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X3 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X4 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X5 );
  assign chn_o_rsci_bawt_X = ( chn_o_rsci_bawt_X0 ) | ( chn_o_rsci_bawt_X1 ) | ( chn_o_rsci_bawt_X2 ) | ( chn_o_rsci_bawt_X3 ) | ( chn_o_rsci_bawt_X4 ) | ( chn_o_rsci_bawt_X5 ) | ( chn_o_rsci_bawt_X6 ) | ( chn_o_rsci_bawt_X7 ) | ( chn_o_rsci_bawt_X8 ) | ( chn_o_rsci_bawt_X9 );
  assign chn_b_rsci_bawt_X = ( chn_b_rsci_bawt_X0 ) | ( chn_b_rsci_bawt_X1 ) | ( chn_b_rsci_bawt_X2 );
  assign chn_a_rsci_bawt_X = ( chn_a_rsci_bawt_X0 ) | ( chn_a_rsci_bawt_X1 ) | ( chn_a_rsci_bawt_X2 );
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_X = ( FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_X0 ) | ( FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_X1 );
  assign _195__X = ( _195__X0 );
  assign _131__X = ( _131__X0 ) | ( _131__X1 ) | ( _131__X2 );
  assign _090__X = ( _090__X0 );
  assign FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_X = ( FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_X0 ) | ( FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_X1 );
  assign FpMantRNE_48U_24U_else_and_svs_X = ( FpMantRNE_48U_24U_else_and_svs_X0 ) | ( FpMantRNE_48U_24U_else_and_svs_X1 ) | ( FpMantRNE_48U_24U_else_and_svs_X2 ) | ( FpMantRNE_48U_24U_else_and_svs_X3 );
  assign _004__X = ( _004__X0 ) | ( _004__X1 ) | ( _004__X2 ) | ( _004__X3 ) | ( _004__X4 ) | ( _004__X5 ) | ( _004__X6 ) | ( _004__X7 ) | ( _004__X8 ) | ( _004__X9 ) | ( _004__X10 ) | ( _004__X11 ) | ( _004__X12 ) | ( _004__X13 ) | ( _004__X14 ) | ( _004__X15 ) | ( _004__X16 ) | ( _004__X17 ) | ( _004__X18 ) | ( _004__X19 ) | ( _004__X20 ) | ( _004__X21 ) | ( _004__X22 ) | ( _004__X23 ) | ( _004__X24 ) | ( _004__X25 ) | ( _004__X26 ) | ( _004__X27 ) | ( _004__X28 ) | ( _004__X29 ) | ( _004__X30 ) | ( _004__X31 ) | ( _004__X32 ) | ( _004__X33 ) | ( _004__X34 ) | ( _004__X35 ) | ( _004__X36 ) | ( _004__X37 ) | ( _004__X38 ) | ( _004__X39 ) | ( _004__X40 ) | ( _004__X41 ) | ( _004__X42 ) | ( _004__X43 ) | ( _004__X44 ) | ( _004__X45 ) | ( _004__X46 );
  assign _193__X = ( _193__X0 );
  assign _095__X = ( _095__X0 );
  assign FpMul_8U_23U_p_mant_p1_sva_2_X = ( FpMul_8U_23U_p_mant_p1_sva_2_X0 ) | ( FpMul_8U_23U_p_mant_p1_sva_2_X1 ) | ( FpMul_8U_23U_p_mant_p1_sva_2_X2 ) | ( FpMul_8U_23U_p_mant_p1_sva_2_X3 ) | ( FpMul_8U_23U_p_mant_p1_sva_2_X4 ) | ( FpMul_8U_23U_p_mant_p1_sva_2_X5 ) | ( FpMul_8U_23U_p_mant_p1_sva_2_X6 );
  assign FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X = ( FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X0 ) | ( FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X1 ) | ( FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X2 ) | ( FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X3 );
  assign and_cse_X = ( and_cse_X0 ) | ( and_cse_X1 ) | ( and_cse_X2 ) | ( and_cse_X3 ) | ( and_cse_X4 ) | ( and_cse_X5 );
  assign mux_33_nl_X = ( mux_33_nl_X0 );
  assign or_tmp_55_X = ( or_tmp_55_X0 ) | ( or_tmp_55_X1 ) | ( or_tmp_55_X2 );
  assign nand_cse_X = ( nand_cse_X0 ) | ( nand_cse_X1 ) | ( nand_cse_X2 );
  assign _087__X = ( _087__X0 );
  assign _098__X = ( _098__X0 ) | ( _098__X1 ) | ( _098__X2 );
  assign _086__X = ( _086__X0 );
  assign _170__X = ( _170__X0 );
  assign _097__X = ( _097__X0 ) | ( _097__X1 ) | ( _097__X2 ) | ( _097__X3 ) | ( _097__X4 );
  assign _085__X = ( _085__X0 );
  assign and_91_nl_X = ( and_91_nl_X0 ) | ( and_91_nl_X1 ) | ( and_91_nl_X2 );
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_X = ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_X0 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_X1 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_X2 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_X3 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_X4 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_X5 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_X6 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_X7 );
  assign _128__X = ( _128__X0 ) | ( _128__X1 );
  assign or_29_cse_X = ( or_29_cse_X0 ) | ( or_29_cse_X1 ) | ( or_29_cse_X2 ) | ( or_29_cse_X3 );
  assign _106__X = ( _106__X0 );
  assign _125__X = ( _125__X0 );
  assign fangyuan4_X = ( fangyuan4_X0 );
  assign FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X = ( FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X0 ) | ( FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X1 ) | ( FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X2 ) | ( FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X3 ) | ( FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X4 ) | ( FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X5 ) | ( FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X6 ) | ( FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X7 );
  assign fangyuan3_X = ( fangyuan3_X0 );
  assign FpMul_8U_23U_or_1_nl_X = ( FpMul_8U_23U_or_1_nl_X0 ) | ( FpMul_8U_23U_or_1_nl_X1 ) | ( FpMul_8U_23U_or_1_nl_X2 ) | ( FpMul_8U_23U_or_1_nl_X3 ) | ( FpMul_8U_23U_or_1_nl_X4 ) | ( FpMul_8U_23U_or_1_nl_X5 ) | ( FpMul_8U_23U_or_1_nl_X6 ) | ( FpMul_8U_23U_or_1_nl_X7 );
  assign fangyuan2_X = ( fangyuan2_X0 );
  assign FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_X = ( FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_X0 ) | ( FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_X1 ) | ( FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_X2 );
  assign FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_X = ( FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_X0 ) | ( FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_X1 ) | ( FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_X2 ) | ( FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_X3 ) | ( FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_X4 ) | ( FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_X5 ) | ( FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_X6 ) | ( FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_X7 );
  assign and_54_rgt_X = ( and_54_rgt_X0 ) | ( and_54_rgt_X1 );
  assign and_64_rgt_X = ( and_64_rgt_X0 ) | ( and_64_rgt_X1 );
  assign and_65_rgt_X = ( and_65_rgt_X0 ) | ( and_65_rgt_X1 );
  assign FpMul_8U_23U_xor_1_nl_X = ( FpMul_8U_23U_xor_1_nl_X0 );
  assign _164__X = ( _164__X0 );
  assign _094__X = ( _094__X0 ) | ( _094__X1 ) | ( _094__X2 );
  assign mux_24_cse_X = ( mux_24_cse_X0 ) | ( mux_24_cse_X1 ) | ( mux_24_cse_X2 );
  assign nand_8_cse_X = ( nand_8_cse_X0 ) | ( nand_8_cse_X1 );
  assign mux_tmp_14_X = ( mux_tmp_14_X0 ) | ( mux_tmp_14_X1 ) | ( mux_tmp_14_X2 );
  assign mux_tmp_10_X = ( mux_tmp_10_X0 ) | ( mux_tmp_10_X1 );
  assign main_stage_v_1_X = ( main_stage_v_1_X0 ) | ( main_stage_v_1_X1 ) | ( main_stage_v_1_X2 ) | ( main_stage_v_1_X3 ) | ( main_stage_v_1_X4 ) | ( main_stage_v_1_X5 ) | ( main_stage_v_1_X6 ) | ( main_stage_v_1_X7 ) | ( main_stage_v_1_X8 ) | ( main_stage_v_1_X9 ) | ( main_stage_v_1_X10 );
  assign _151__X = ( _151__X0 );
  assign chn_o_rsci_d_30_23_mx0c1_X = ( chn_o_rsci_d_30_23_mx0c1_X0 ) | ( chn_o_rsci_d_30_23_mx0c1_X1 );
  assign _118__X = ( _118__X0 );
  assign _116__X = ( _116__X0 );
  assign mux_28_nl_X = ( mux_28_nl_X0 );
  assign mux_tmp_1_X = ( mux_tmp_1_X0 ) | ( mux_tmp_1_X1 );
  assign _071__X = ( _071__X0 );
  assign _149__X = ( _149__X0 );
  assign mux_23_nl_X = ( mux_23_nl_X0 );
  assign mux_tmp_X = ( mux_tmp_X0 ) | ( mux_tmp_X1 );
  assign _068__X = ( _068__X0 );
  assign _115__X = ( _115__X0 ) | ( _115__X1 );
  assign _067__X = ( _067__X0 );
  assign _114__X = ( _114__X0 );
  assign _113__X = ( _113__X0 );
  assign _064__X = ( _064__X0 );
  assign _145__X = ( _145__X0 );
  assign _112__X = ( _112__X0 ) | ( _112__X1 );
  assign mux_17_nl_X = ( mux_17_nl_X0 );
  assign mux_13_nl_X = ( mux_13_nl_X0 );
  assign _060__X = ( _060__X0 ) | ( _060__X1 );
  assign FpMul_8U_23U_ub_FpBitsToFloat_8U_23U_1_or_1_cse_X = ( FpMul_8U_23U_ub_FpBitsToFloat_8U_23U_1_or_1_cse_X0 );
  assign mux_8_nl_X = ( mux_8_nl_X0 );
  assign mux_6_nl_X = ( mux_6_nl_X0 );
  assign mux_tmp_4_X = ( mux_tmp_4_X0 ) | ( mux_tmp_4_X1 ) | ( mux_tmp_4_X2 ) | ( mux_tmp_4_X3 );
  assign _056__X = ( _056__X0 );
  assign _144__X = ( _144__X0 );
  assign FpMul_8U_23U_else_2_if_acc_nl_X = ( FpMul_8U_23U_else_2_if_acc_nl_X0 ) | ( FpMul_8U_23U_else_2_if_acc_nl_X1 ) | ( FpMul_8U_23U_else_2_if_acc_nl_X2 ) | ( FpMul_8U_23U_else_2_if_acc_nl_X3 ) | ( FpMul_8U_23U_else_2_if_acc_nl_X4 ) | ( FpMul_8U_23U_else_2_if_acc_nl_X5 ) | ( FpMul_8U_23U_else_2_if_acc_nl_X6 ) | ( FpMul_8U_23U_else_2_if_acc_nl_X7 );
  assign _054__X = ( _054__X0 ) | ( _054__X1 );
  assign _111__X = ( _111__X0 ) | ( _111__X1 );
  assign mux_3_nl_X = ( mux_3_nl_X0 );
  assign _143__X = ( _143__X0 );
  assign _107__X = ( _107__X0 );
  assign _050__X = ( _050__X0 ) | ( _050__X1 ) | ( _050__X2 ) | ( _050__X3 ) | ( _050__X4 ) | ( _050__X5 ) | ( _050__X6 ) | ( _050__X7 ) | ( _050__X8 ) | ( _050__X9 );
  assign _141__X = ( _141__X0 );
  assign _140__X = ( _140__X0 );
  assign _139__X = ( _139__X0 );
  assign IsNaN_8U_23U_land_lpi_1_dfm_4_X = ( IsNaN_8U_23U_land_lpi_1_dfm_4_X0 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_4_X1 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_4_X2 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_4_X3 );
  assign or_tmp_59_X = ( or_tmp_59_X0 ) | ( or_tmp_59_X1 );
  assign core_wen_X = ( core_wen_X0 ) | ( core_wen_X1 ) | ( core_wen_X2 ) | ( core_wen_X3 ) | ( core_wen_X4 ) | ( core_wen_X5 ) | ( core_wen_X6 ) | ( core_wen_X7 ) | ( core_wen_X8 ) | ( core_wen_X9 ) | ( core_wen_X10 ) | ( core_wen_X11 ) | ( core_wen_X12 ) | ( core_wen_X13 ) | ( core_wen_X14 ) | ( core_wen_X15 ) | ( core_wen_X16 ) | ( core_wen_X17 ) | ( core_wen_X18 );
  assign fsm_output_X = ( fsm_output_X0 ) | ( fsm_output_X1 ) | ( fsm_output_X2 );
  assign _102__X = ( _102__X0 );
  assign _001__X = ( _001__X0 ) | ( _001__X1 ) | ( _001__X2 ) | ( _001__X3 ) | ( _001__X4 ) | ( _001__X5 ) | ( _001__X6 );
  assign and_dcpl_12_X = ( and_dcpl_12_X0 ) | ( and_dcpl_12_X1 ) | ( and_dcpl_12_X2 ) | ( and_dcpl_12_X3 ) | ( and_dcpl_12_X4 );
  assign main_stage_v_2_X = ( main_stage_v_2_X0 ) | ( main_stage_v_2_X1 ) | ( main_stage_v_2_X2 ) | ( main_stage_v_2_X3 ) | ( main_stage_v_2_X4 ) | ( main_stage_v_2_X5 ) | ( main_stage_v_2_X6 );
  assign or_10_cse_X = ( or_10_cse_X0 ) | ( or_10_cse_X1 ) | ( or_10_cse_X2 ) | ( or_10_cse_X3 ) | ( or_10_cse_X4 ) | ( or_10_cse_X5 ) | ( or_10_cse_X6 ) | ( or_10_cse_X7 ) | ( or_10_cse_X8 ) | ( or_10_cse_X9 ) | ( or_10_cse_X10 ) | ( or_10_cse_X11 ) | ( or_10_cse_X12 ) | ( or_10_cse_X13 ) | ( or_10_cse_X14 ) | ( or_10_cse_X15 ) | ( or_10_cse_X16 ) | ( or_10_cse_X17 ) | ( or_10_cse_X18 );
  assign FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_X = ( FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_X0 ) | ( FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_X1 );
  assign fangyuan1_X = ( fangyuan1_X0 );
  assign _039__X = ( _039__X0 );
  assign FpMul_8U_23U_p_expo_sva_5_X = ( FpMul_8U_23U_p_expo_sva_5_X0 ) | ( FpMul_8U_23U_p_expo_sva_5_X1 ) | ( FpMul_8U_23U_p_expo_sva_5_X2 ) | ( FpMul_8U_23U_p_expo_sva_5_X3 );
  assign fangyuan0_X = ( fangyuan0_X0 );
  assign FpMul_8U_23U_oelse_1_acc_1_nl_X = ( FpMul_8U_23U_oelse_1_acc_1_nl_X0 ) | ( FpMul_8U_23U_oelse_1_acc_1_nl_X1 ) | ( FpMul_8U_23U_oelse_1_acc_1_nl_X2 );
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_X = ( FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_X0 ) | ( FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_X1 );
  assign FpMul_8U_23U_ua_sva_1_30_0_1_X = ( FpMul_8U_23U_ua_sva_1_30_0_1_X0 ) | ( FpMul_8U_23U_ua_sva_1_30_0_1_X1 ) | ( FpMul_8U_23U_ua_sva_1_30_0_1_X2 );
  assign FpMul_8U_23U_else_2_else_acc_2_nl_X = ( FpMul_8U_23U_else_2_else_acc_2_nl_X0 ) | ( FpMul_8U_23U_else_2_else_acc_2_nl_X1 );
  assign FpMul_8U_23U_ub_sva_1_30_0_1_X = ( FpMul_8U_23U_ub_sva_1_30_0_1_X0 ) | ( FpMul_8U_23U_ub_sva_1_30_0_1_X1 ) | ( FpMul_8U_23U_ub_sva_1_30_0_1_X2 );
  assign chn_b_rsci_d_mxwt_X = ( chn_b_rsci_d_mxwt_X0 ) | ( chn_b_rsci_d_mxwt_X1 ) | ( chn_b_rsci_d_mxwt_X2 ) | ( chn_b_rsci_d_mxwt_X3 ) | ( chn_b_rsci_d_mxwt_X4 );
  assign chn_a_rsci_d_mxwt_X = ( chn_a_rsci_d_mxwt_X0 ) | ( chn_a_rsci_d_mxwt_X1 ) | ( chn_a_rsci_d_mxwt_X2 ) | ( chn_a_rsci_d_mxwt_X3 ) | ( chn_a_rsci_d_mxwt_X4 ) | ( chn_a_rsci_d_mxwt_X5 );
  assign FpMantRNE_48U_24U_else_carry_sva_X = ( FpMantRNE_48U_24U_else_carry_sva_X0 ) | ( FpMantRNE_48U_24U_else_carry_sva_X1 );
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X = ( FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X0 ) | ( FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X1 ) | ( FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X2 );
  assign chn_o_rsci_oswt_unreg_X = ( chn_o_rsci_oswt_unreg_X0 );
  assign chn_o_rsc_z_X = ( chn_o_rsc_z_X0 );
  assign chn_o_rsc_lz_X = ( chn_o_rsc_lz_X0 );
  assign chn_b_rsc_lz_X = ( chn_b_rsc_lz_X0 );
  assign chn_a_rsci_oswt_unreg_pff_X = ( chn_a_rsci_oswt_unreg_pff_X0 );
  assign chn_a_rsc_lz_X = ( chn_a_rsc_lz_X0 );
  assign chn_o_rsci_wen_comp_R = ( chn_o_rsci_wen_comp_X0 & chn_o_rsci_wen_comp_R0 );
  assign chn_b_rsci_wen_comp_R = ( chn_b_rsci_wen_comp_X0 & chn_b_rsci_wen_comp_R0 );
  assign chn_a_rsci_wen_comp_R = ( chn_a_rsci_wen_comp_X0 & chn_a_rsci_wen_comp_R0 );
  assign chn_o_rsci_oswt_R = ( chn_o_rsci_oswt_X0 & chn_o_rsci_oswt_R0 );
  assign chn_o_rsc_vz_R = ( chn_o_rsc_vz_X0 & chn_o_rsc_vz_R0 );
  assign chn_b_rsci_oswt_R = ( chn_b_rsci_oswt_X0 & chn_b_rsci_oswt_R0 );
  assign chn_b_rsc_z_R = ( chn_b_rsc_z_X0 & chn_b_rsc_z_R0 );
  assign chn_b_rsc_vz_R = ( chn_b_rsc_vz_X0 & chn_b_rsc_vz_R0 );
  assign nvdla_core_rstn_R = ( nvdla_core_rstn_X0 & nvdla_core_rstn_R0 ) | ( nvdla_core_rstn_X1 & nvdla_core_rstn_R1 ) | ( nvdla_core_rstn_X2 & nvdla_core_rstn_R2 ) | ( nvdla_core_rstn_X3 & nvdla_core_rstn_R3 ) | ( nvdla_core_rstn_X4 & nvdla_core_rstn_R4 );
  assign core_wten_R = ( core_wten_X0 & core_wten_R0 ) | ( core_wten_X1 & core_wten_R1 ) | ( core_wten_X2 & core_wten_R2 );
  assign chn_a_rsci_oswt_R = ( chn_a_rsci_oswt_X0 & chn_a_rsci_oswt_R0 );
  assign chn_a_rsc_z_R = ( chn_a_rsc_z_X0 & chn_a_rsc_z_R0 );
  assign chn_a_rsc_vz_R = ( chn_a_rsc_vz_X0 & chn_a_rsc_vz_R0 );
  assign chn_o_rsci_iswt0_R = ( chn_o_rsci_iswt0_X0 & chn_o_rsci_iswt0_R0 ) | ( chn_o_rsci_iswt0_X1 & chn_o_rsci_iswt0_R1 );
  assign reg_chn_b_rsci_iswt0_cse_R = ( reg_chn_b_rsci_iswt0_cse_X0 & reg_chn_b_rsci_iswt0_cse_R0 ) | ( reg_chn_b_rsci_iswt0_cse_X1 & reg_chn_b_rsci_iswt0_cse_R1 ) | ( reg_chn_b_rsci_iswt0_cse_X2 & reg_chn_b_rsci_iswt0_cse_R2 );
  assign _103__R = ( _103__X0 & _103__R0 );
  assign reg_chn_b_rsci_ld_core_psct_cse_R = ( reg_chn_b_rsci_ld_core_psct_cse_X0 & reg_chn_b_rsci_ld_core_psct_cse_R0 ) | ( reg_chn_b_rsci_ld_core_psct_cse_X1 & reg_chn_b_rsci_ld_core_psct_cse_R1 ) | ( reg_chn_b_rsci_ld_core_psct_cse_X2 & reg_chn_b_rsci_ld_core_psct_cse_R2 );
  assign _045__R = ( _045__X0 & _045__R0 );
  assign chn_o_rsci_d_31_R = ( chn_o_rsci_d_31_X0 & chn_o_rsci_d_31_R0 ) | ( chn_o_rsci_d_31_X1 & chn_o_rsci_d_31_R1 ) | ( chn_o_rsci_d_31_X2 & chn_o_rsci_d_31_R2 );
  assign chn_o_rsci_d_22_0_R = ( chn_o_rsci_d_22_0_X0 & chn_o_rsci_d_22_0_R0 ) | ( chn_o_rsci_d_22_0_X1 & chn_o_rsci_d_22_0_R1 ) | ( chn_o_rsci_d_22_0_X2 & chn_o_rsci_d_22_0_R2 );
  assign chn_o_and_cse_R = ( chn_o_and_cse_X0 & chn_o_and_cse_R0 ) | ( chn_o_and_cse_X1 & chn_o_and_cse_R1 );
  assign FpMul_8U_23U_FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_R = ( FpMul_8U_23U_FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X0 & FpMul_8U_23U_FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_R0 );
  assign chn_o_rsci_d_30_23_R = ( chn_o_rsci_d_30_23_X0 & chn_o_rsci_d_30_23_R0 ) | ( chn_o_rsci_d_30_23_X1 & chn_o_rsci_d_30_23_R1 ) | ( chn_o_rsci_d_30_23_X2 & chn_o_rsci_d_30_23_R2 );
  assign _042__R = ( _042__X0 & _042__R0 );
  assign _047__R = ( _047__X0 & _047__R0 );
  assign FpMul_8U_23U_FpMul_8U_23U_and_2_nl_R = ( FpMul_8U_23U_FpMul_8U_23U_and_2_nl_X0 & FpMul_8U_23U_FpMul_8U_23U_and_2_nl_R0 );
  assign FpBitsToFloat_8U_23U_1_and_nl_R = ( FpBitsToFloat_8U_23U_1_and_nl_X0 & FpBitsToFloat_8U_23U_1_and_nl_R0 );
  assign _104__R = ( _104__X0 & _104__R0 );
  assign _048__R = ( _048__X0 & _048__R0 );
  assign _105__R = ( _105__X0 & _105__R0 );
  assign _049__R = ( _049__X0 & _049__R0 );
  assign FpMul_8U_23U_else_2_acc_1_nl_R = ( FpMul_8U_23U_else_2_acc_1_nl_X0 & FpMul_8U_23U_else_2_acc_1_nl_R0 ) | ( FpMul_8U_23U_else_2_acc_1_nl_X1 & FpMul_8U_23U_else_2_acc_1_nl_R1 );
  assign _051__R = ( _051__X0 & _051__R0 );
  assign _109__R = ( _109__X0 & _109__R0 );
  assign _108__R = ( _108__X0 & _108__R0 );
  assign IsNaN_8U_23U_aelse_and_cse_R = ( IsNaN_8U_23U_aelse_and_cse_X0 & IsNaN_8U_23U_aelse_and_cse_R0 ) | ( IsNaN_8U_23U_aelse_and_cse_X1 & IsNaN_8U_23U_aelse_and_cse_R1 ) | ( IsNaN_8U_23U_aelse_and_cse_X2 & IsNaN_8U_23U_aelse_and_cse_R2 );
  assign _110__R = ( _110__X0 & _110__R0 );
  assign _052__R = ( _052__X0 & _052__R0 );
  assign nl_FpMul_8U_23U_p_expo_sva_5_R = ( nl_FpMul_8U_23U_p_expo_sva_5_X0 & nl_FpMul_8U_23U_p_expo_sva_5_R0 );
  assign _053__R = ( _053__X0 & _053__R0 );
  assign _041__R = ( _041__X0 & _041__R0 );
  assign _057__R = ( _057__X0 & _057__R0 );
  assign _058__R = ( _058__X0 & _058__R0 );
  assign _059__R = ( _059__X0 & _059__R0 );
  assign FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_R = ( FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_X0 & FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_R0 ) | ( FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_X1 & FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_R1 );
  assign _043__R = ( _043__X0 & _043__R0 );
  assign _061__R = ( _061__X0 & _061__R0 );
  assign FpMul_8U_23U_mux_10_itm_4_R = ( FpMul_8U_23U_mux_10_itm_4_X0 & FpMul_8U_23U_mux_10_itm_4_R0 ) | ( FpMul_8U_23U_mux_10_itm_4_X1 & FpMul_8U_23U_mux_10_itm_4_R1 );
  assign IsNaN_8U_23U_1_aelse_and_cse_R = ( IsNaN_8U_23U_1_aelse_and_cse_X0 & IsNaN_8U_23U_1_aelse_and_cse_R0 ) | ( IsNaN_8U_23U_1_aelse_and_cse_X1 & IsNaN_8U_23U_1_aelse_and_cse_R1 ) | ( IsNaN_8U_23U_1_aelse_and_cse_X2 & IsNaN_8U_23U_1_aelse_and_cse_R2 ) | ( IsNaN_8U_23U_1_aelse_and_cse_X3 & IsNaN_8U_23U_1_aelse_and_cse_R3 );
  assign FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_R = ( FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_X0 & FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_R0 ) | ( FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_X1 & FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_R1 );
  assign _040__R = ( _040__X0 & _040__R0 );
  assign _062__R = ( _062__X0 & _062__R0 );
  assign _063__R = ( _063__X0 & _063__R0 );
  assign _038__R = ( _038__X0 & _038__R0 );
  assign _065__R = ( _065__X0 & _065__R0 );
  assign FpMul_8U_23U_p_mant_p1_sva_R = ( FpMul_8U_23U_p_mant_p1_sva_X0 & FpMul_8U_23U_p_mant_p1_sva_R0 ) | ( FpMul_8U_23U_p_mant_p1_sva_X1 & FpMul_8U_23U_p_mant_p1_sva_R1 );
  assign _066__R = ( _066__X0 & _066__R0 );
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_R = ( FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_X0 & FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_R0 ) | ( FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_X1 & FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_R1 );
  assign _069__R = ( _069__X0 & _069__R0 );
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_3_R = ( FpMul_8U_23U_lor_1_lpi_1_dfm_3_X0 & FpMul_8U_23U_lor_1_lpi_1_dfm_3_R0 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_3_X1 & FpMul_8U_23U_lor_1_lpi_1_dfm_3_R1 );
  assign _070__R = ( _070__X0 & _070__R0 );
  assign FpMul_8U_23U_mux_10_itm_3_R = ( FpMul_8U_23U_mux_10_itm_3_X0 & FpMul_8U_23U_mux_10_itm_3_R0 ) | ( FpMul_8U_23U_mux_10_itm_3_X1 & FpMul_8U_23U_mux_10_itm_3_R1 );
  assign _166__R = ( _166__X0 & _166__R0 );
  assign _072__R = ( _072__X0 & _072__R0 );
  assign _073__R = ( _073__X0 & _073__R0 );
  assign _074__R = ( _074__X0 & _074__R0 );
  assign and_90_nl_R = ( and_90_nl_X0 & and_90_nl_R0 );
  assign and_95_nl_R = ( and_95_nl_X0 & and_95_nl_R0 );
  assign FpMul_8U_23U_else_2_else_if_if_acc_nl_R = ( FpMul_8U_23U_else_2_else_if_if_acc_nl_X0 & FpMul_8U_23U_else_2_else_if_if_acc_nl_R0 ) | ( FpMul_8U_23U_else_2_else_if_if_acc_nl_X1 & FpMul_8U_23U_else_2_else_if_if_acc_nl_R1 );
  assign asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl_R = ( asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl_X0 & asn_FpMul_8U_23U_p_expo_lpi_1_dfm_1_FpMul_8U_23U_else_2_else_and_nl_R0 );
  assign nor_nl_R = ( nor_nl_X0 & nor_nl_R0 );
  assign or_3_nl_R = ( or_3_nl_X0 & or_3_nl_R0 );
  assign or_1_nl_R = ( or_1_nl_X0 & or_1_nl_R0 );
  assign nor_28_nl_R = ( nor_28_nl_X0 & nor_28_nl_R0 );
  assign or_7_nl_R = ( or_7_nl_X0 & or_7_nl_R0 );
  assign or_22_nl_R = ( or_22_nl_X0 & or_22_nl_R0 );
  assign nor_22_nl_R = ( nor_22_nl_X0 & nor_22_nl_R0 );
  assign mux_tmp_9_R = ( mux_tmp_9_X0 & mux_tmp_9_R0 ) | ( mux_tmp_9_X1 & mux_tmp_9_R1 );
  assign mux_18_nl_R = ( mux_18_nl_X0 & mux_18_nl_R0 );
  assign mux_19_nl_R = ( mux_19_nl_X0 & mux_19_nl_R0 );
  assign or_39_nl_R = ( or_39_nl_X0 & or_39_nl_R0 );
  assign fangyuan7_R = ( fangyuan7_X0 & fangyuan7_R0 );
  assign FpMantRNE_48U_24U_else_acc_nl_R = ( FpMantRNE_48U_24U_else_acc_nl_X0 & FpMantRNE_48U_24U_else_acc_nl_R0 ) | ( FpMantRNE_48U_24U_else_acc_nl_X1 & FpMantRNE_48U_24U_else_acc_nl_R1 );
  assign or_nl_R = ( or_nl_X0 & or_nl_R0 );
  assign mux_34_nl_R = ( mux_34_nl_X0 & mux_34_nl_R0 );
  assign FpMul_8U_23U_nor_nl_R = ( FpMul_8U_23U_nor_nl_X0 & FpMul_8U_23U_nor_nl_R0 );
  assign FpMul_8U_23U_lor_2_lpi_1_dfm_R = ( FpMul_8U_23U_lor_2_lpi_1_dfm_X0 & FpMul_8U_23U_lor_2_lpi_1_dfm_R0 ) | ( FpMul_8U_23U_lor_2_lpi_1_dfm_X1 & FpMul_8U_23U_lor_2_lpi_1_dfm_R1 );
  assign nor_27_nl_R = ( nor_27_nl_X0 & nor_27_nl_R0 );
  assign nor_26_nl_R = ( nor_26_nl_X0 & nor_26_nl_R0 );
  assign FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_R = ( FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_X0 & FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_R0 ) | ( FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_X1 & FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_R1 );
  assign mux_2_nl_R = ( mux_2_nl_X0 & mux_2_nl_R0 );
  assign nor_24_nl_R = ( nor_24_nl_X0 & nor_24_nl_R0 );
  assign mux_5_nl_R = ( mux_5_nl_X0 & mux_5_nl_R0 );
  assign nor_32_nl_R = ( nor_32_nl_X0 & nor_32_nl_R0 );
  assign or_25_nl_R = ( or_25_nl_X0 & or_25_nl_R0 );
  assign mux_7_nl_R = ( mux_7_nl_X0 & mux_7_nl_R0 );
  assign nor_23_nl_R = ( nor_23_nl_X0 & nor_23_nl_R0 );
  assign or_33_nl_R = ( or_33_nl_X0 & or_33_nl_R0 );
  assign mux_11_nl_R = ( mux_11_nl_X0 & mux_11_nl_R0 );
  assign and_10_nl_R = ( and_10_nl_X0 & and_10_nl_R0 );
  assign mux_12_nl_R = ( mux_12_nl_X0 & mux_12_nl_R0 );
  assign or_tmp_36_R = ( or_tmp_36_X0 & or_tmp_36_R0 ) | ( or_tmp_36_X1 & or_tmp_36_R1 );
  assign _000__R = ( _000__X0 & _000__R0 ) | ( _000__X1 & _000__R1 ) | ( _000__X2 & _000__R2 ) | ( _000__X3 & _000__R3 ) | ( _000__X4 & _000__R4 );
  assign mux_15_nl_R = ( mux_15_nl_X0 & mux_15_nl_R0 );
  assign and_11_nl_R = ( and_11_nl_X0 & and_11_nl_R0 );
  assign mux_16_nl_R = ( mux_16_nl_X0 & mux_16_nl_R0 );
  assign and_93_nl_R = ( and_93_nl_X0 & and_93_nl_R0 );
  assign nor_21_nl_R = ( nor_21_nl_X0 & nor_21_nl_R0 );
  assign mux_22_nl_R = ( mux_22_nl_X0 & mux_22_nl_R0 );
  assign nor_31_nl_R = ( nor_31_nl_X0 & nor_31_nl_R0 );
  assign mux_26_nl_R = ( mux_26_nl_X0 & mux_26_nl_R0 );
  assign _002__R = ( _002__X0 & _002__R0 );
  assign mux_25_nl_R = ( mux_25_nl_X0 & mux_25_nl_R0 );
  assign or_tmp_51_R = ( or_tmp_51_X0 & or_tmp_51_R0 ) | ( or_tmp_51_X1 & or_tmp_51_R1 );
  assign mux_29_nl_R = ( mux_29_nl_X0 & mux_29_nl_R0 );
  assign nand_6_nl_R = ( nand_6_nl_X0 & nand_6_nl_R0 );
  assign mux_30_nl_R = ( mux_30_nl_X0 & mux_30_nl_R0 );
  assign _035__R = ( _035__X0 & _035__R0 );
  assign _032__R = ( _032__X0 & _032__R0 );
  assign _036__R = ( _036__X0 & _036__R0 );
  assign _029__R = ( _029__X0 & _029__R0 );
  assign _031__R = ( _031__X0 & _031__R0 );
  assign _030__R = ( _030__X0 & _030__R0 );
  assign _037__R = ( _037__X0 & _037__R0 );
  assign _033__R = ( _033__X0 & _033__R0 );
  assign _010__R = ( _010__X0 & _010__R0 );
  assign _028__R = ( _028__X0 & _028__R0 );
  assign _016__R = ( _016__X0 & _016__R0 );
  assign _025__R = ( _025__X0 & _025__R0 );
  assign _034__R = ( _034__X0 & _034__R0 );
  assign _020__R = ( _020__X0 & _020__R0 );
  assign _022__R = ( _022__X0 & _022__R0 );
  assign _009__R = ( _009__X0 & _009__R0 );
  assign _013__R = ( _013__X0 & _013__R0 );
  assign _008__R = ( _008__X0 & _008__R0 );
  assign _017__R = ( _017__X0 & _017__R0 );
  assign _019__R = ( _019__X0 & _019__R0 );
  assign _027__R = ( _027__X0 & _027__R0 );
  assign _026__R = ( _026__X0 & _026__R0 );
  assign _007__R = ( _007__X0 & _007__R0 );
  assign _015__R = ( _015__X0 & _015__R0 );
  assign _012__R = ( _012__X0 & _012__R0 );
  assign _021__R = ( _021__X0 & _021__R0 );
  assign _011__R = ( _011__X0 & _011__R0 );
  assign _014__R = ( _014__X0 & _014__R0 );
  assign _018__R = ( _018__X0 & _018__R0 );
  assign _024__R = ( _024__X0 & _024__R0 );
  assign _023__R = ( _023__X0 & _023__R0 );
  assign or_45_cse_R = ( or_45_cse_X0 & or_45_cse_R0 ) | ( or_45_cse_X1 & or_45_cse_R1 ) | ( or_45_cse_X2 & or_45_cse_R2 ) | ( or_45_cse_X3 & or_45_cse_R3 );
  assign _207__R = ( _207__X0 & _207__R0 );
  assign _136__R = ( _136__X0 & _136__R0 );
  assign _205__R = ( _205__X0 & _205__R0 );
  assign _204__R = ( _204__X0 & _204__R0 );
  assign _202__R = ( _202__X0 & _202__R0 );
  assign _201__R = ( _201__X0 & _201__R0 );
  assign _200__R = ( _200__X0 & _200__R0 );
  assign _199__R = ( _199__X0 & _199__R0 );
  assign _135__R = ( _135__X0 & _135__R0 );
  assign _134__R = ( _134__X0 & _134__R0 );
  assign _197__R = ( _197__X0 & _197__R0 );
  assign _196__R = ( _196__X0 & _196__R0 );
  assign _091__R = ( _091__X0 & _091__R0 );
  assign _133__R = ( _133__X0 & _133__R0 );
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_4_R = ( FpMul_8U_23U_lor_1_lpi_1_dfm_4_X0 & FpMul_8U_23U_lor_1_lpi_1_dfm_4_R0 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_4_X1 & FpMul_8U_23U_lor_1_lpi_1_dfm_4_R1 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_4_X2 & FpMul_8U_23U_lor_1_lpi_1_dfm_4_R2 );
  assign _132__R = ( _132__X0 & _132__R0 );
  assign _089__R = ( _089__X0 & _089__R0 );
  assign FpMul_8U_23U_is_inf_lpi_1_dfm_2_R = ( FpMul_8U_23U_is_inf_lpi_1_dfm_2_X0 & FpMul_8U_23U_is_inf_lpi_1_dfm_2_R0 ) | ( FpMul_8U_23U_is_inf_lpi_1_dfm_2_X1 & FpMul_8U_23U_is_inf_lpi_1_dfm_2_R1 );
  assign _191__R = ( _191__X0 & _191__R0 );
  assign _190__R = ( _190__X0 & _190__R0 );
  assign _189__R = ( _189__X0 & _189__R0 );
  assign _188__R = ( _188__X0 & _188__R0 );
  assign _187__R = ( _187__X0 & _187__R0 );
  assign _186__R = ( _186__X0 & _186__R0 );
  assign _185__R = ( _185__X0 & _185__R0 );
  assign _184__R = ( _184__X0 & _184__R0 );
  assign _183__R = ( _183__X0 & _183__R0 );
  assign _182__R = ( _182__X0 & _182__R0 );
  assign _181__R = ( _181__X0 & _181__R0 );
  assign _180__R = ( _180__X0 & _180__R0 );
  assign _179__R = ( _179__X0 & _179__R0 );
  assign _178__R = ( _178__X0 & _178__R0 );
  assign _177__R = ( _177__X0 & _177__R0 );
  assign _176__R = ( _176__X0 & _176__R0 );
  assign _175__R = ( _175__X0 & _175__R0 );
  assign _174__R = ( _174__X0 & _174__R0 );
  assign _173__R = ( _173__X0 & _173__R0 );
  assign _172__R = ( _172__X0 & _172__R0 );
  assign _171__R = ( _171__X0 & _171__R0 );
  assign _088__R = ( _088__X0 & _088__R0 );
  assign _130__R = ( _130__X0 & _130__R0 );
  assign _129__R = ( _129__X0 & _129__R0 );
  assign FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_R = ( FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_X0 & FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_R0 ) | ( FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_X1 & FpMul_8U_23U_if_2_FpMul_8U_23U_if_2_or_tmp_R1 );
  assign FpMul_8U_23U_oelse_1_acc_nl_R = ( FpMul_8U_23U_oelse_1_acc_nl_X0 & FpMul_8U_23U_oelse_1_acc_nl_R0 ) | ( FpMul_8U_23U_oelse_1_acc_nl_X1 & FpMul_8U_23U_oelse_1_acc_nl_R1 ) | ( FpMul_8U_23U_oelse_1_acc_nl_X2 & FpMul_8U_23U_oelse_1_acc_nl_R2 ) | ( FpMul_8U_23U_oelse_1_acc_nl_X3 & FpMul_8U_23U_oelse_1_acc_nl_R3 );
  assign _096__R = ( _096__X0 & _096__R0 );
  assign and_dcpl_26_R = ( and_dcpl_26_X0 & and_dcpl_26_R0 ) | ( and_dcpl_26_X1 & and_dcpl_26_R1 ) | ( and_dcpl_26_X2 & and_dcpl_26_R2 );
  assign _084__R = ( _084__X0 & _084__R0 );
  assign _127__R = ( _127__X0 & _127__R0 );
  assign _126__R = ( _126__X0 & _126__R0 ) | ( _126__X1 & _126__R1 ) | ( _126__X2 & _126__R2 ) | ( _126__X3 & _126__R3 ) | ( _126__X4 & _126__R4 ) | ( _126__X5 & _126__R5 ) | ( _126__X6 & _126__R6 );
  assign _083__R = ( _083__X0 & _083__R0 );
  assign _167__R = ( _167__X0 & _167__R0 );
  assign _082__R = ( _082__X0 & _082__R0 );
  assign _081__R = ( _081__X0 & _081__R0 );
  assign _192__R = ( _192__X0 & _192__R0 );
  assign _080__R = ( _080__X0 & _080__R0 );
  assign _165__R = ( _165__X0 & _165__R0 );
  assign _079__R = ( _079__X0 & _079__R0 );
  assign _078__R = ( _078__X0 & _078__R0 );
  assign _124__R = ( _124__X0 & _124__R0 );
  assign _161__R = ( _161__X0 & _161__R0 );
  assign or_tmp_32_R = ( or_tmp_32_X0 & or_tmp_32_R0 ) | ( or_tmp_32_X1 & or_tmp_32_R1 ) | ( or_tmp_32_X2 & or_tmp_32_R2 );
  assign nor_4_cse_R = ( nor_4_cse_X0 & nor_4_cse_R0 );
  assign not_tmp_9_R = ( not_tmp_9_X0 & not_tmp_9_R0 ) | ( not_tmp_9_X1 & not_tmp_9_R1 );
  assign _123__R = ( _123__X0 & _123__R0 );
  assign _157__R = ( _157__X0 & _157__R0 );
  assign _156__R = ( _156__X0 & _156__R0 );
  assign _155__R = ( _155__X0 & _155__R0 );
  assign FpMul_8U_23U_or_2_cse_R = ( FpMul_8U_23U_or_2_cse_X0 & FpMul_8U_23U_or_2_cse_R0 ) | ( FpMul_8U_23U_or_2_cse_X1 & FpMul_8U_23U_or_2_cse_R1 ) | ( FpMul_8U_23U_or_2_cse_X2 & FpMul_8U_23U_or_2_cse_R2 ) | ( FpMul_8U_23U_or_2_cse_X3 & FpMul_8U_23U_or_2_cse_R3 ) | ( FpMul_8U_23U_or_2_cse_X4 & FpMul_8U_23U_or_2_cse_R4 );
  assign _122__R = ( _122__X0 & _122__R0 ) | ( _122__X1 & _122__R1 ) | ( _122__X2 & _122__R2 );
  assign _153__R = ( _153__X0 & _153__R0 );
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_R = ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_X0 & FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_R0 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_X1 & FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_R1 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_X2 & FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_R2 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_X3 & FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_R3 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_X4 & FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_R4 );
  assign _120__R = ( _120__X0 & _120__R0 );
  assign _119__R = ( _119__X0 & _119__R0 );
  assign FpMul_8U_23U_p_mant_p1_mul_tmp_R = ( FpMul_8U_23U_p_mant_p1_mul_tmp_X0 & FpMul_8U_23U_p_mant_p1_mul_tmp_R0 ) | ( FpMul_8U_23U_p_mant_p1_mul_tmp_X1 & FpMul_8U_23U_p_mant_p1_mul_tmp_R1 ) | ( FpMul_8U_23U_p_mant_p1_mul_tmp_X2 & FpMul_8U_23U_p_mant_p1_mul_tmp_R2 ) | ( FpMul_8U_23U_p_mant_p1_mul_tmp_X3 & FpMul_8U_23U_p_mant_p1_mul_tmp_R3 );
  assign _117__R = ( _117__X0 & _117__R0 );
  assign _148__R = ( _148__X0 & _148__R0 );
  assign _146__R = ( _146__X0 & _146__R0 );
  assign and_45_rgt_R = ( and_45_rgt_X0 & and_45_rgt_R0 ) | ( and_45_rgt_X1 & and_45_rgt_R1 );
  assign and_41_rgt_R = ( and_41_rgt_X0 & and_41_rgt_R0 ) | ( and_41_rgt_X1 & and_41_rgt_R1 );
  assign _055__R = ( _055__X0 & _055__R0 );
  assign IsNaN_8U_23U_1_nor_tmp_R = ( IsNaN_8U_23U_1_nor_tmp_X0 & IsNaN_8U_23U_1_nor_tmp_R0 ) | ( IsNaN_8U_23U_1_nor_tmp_X1 & IsNaN_8U_23U_1_nor_tmp_R1 );
  assign IsNaN_8U_23U_nor_tmp_R = ( IsNaN_8U_23U_nor_tmp_X0 & IsNaN_8U_23U_nor_tmp_R0 ) | ( IsNaN_8U_23U_nor_tmp_X1 & IsNaN_8U_23U_nor_tmp_R1 );
  assign or_tmp_65_R = ( or_tmp_65_X0 & or_tmp_65_R0 ) | ( or_tmp_65_X1 & or_tmp_65_R1 );
  assign _046__R = ( _046__X0 & _046__R0 );
  assign _206__R = ( _206__X0 & _206__R0 );
  assign _203__R = ( _203__X0 & _203__R0 );
  assign _198__R = ( _198__X0 & _198__R0 );
  assign _101__R = ( _101__X0 & _101__R0 );
  assign _194__R = ( _194__X0 & _194__R0 );
  assign _100__R = ( _100__X0 & _100__R0 );
  assign _099__R = ( _099__X0 & _099__R0 );
  assign _169__R = ( _169__X0 & _169__R0 ) | ( _169__X1 & _169__R1 );
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_3_R = ( IsNaN_8U_23U_1_land_lpi_1_dfm_3_X0 & IsNaN_8U_23U_1_land_lpi_1_dfm_3_R0 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_3_X1 & IsNaN_8U_23U_1_land_lpi_1_dfm_3_R1 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_3_X2 & IsNaN_8U_23U_1_land_lpi_1_dfm_3_R2 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_3_X3 & IsNaN_8U_23U_1_land_lpi_1_dfm_3_R3 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_3_X4 & IsNaN_8U_23U_1_land_lpi_1_dfm_3_R4 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_3_X5 & IsNaN_8U_23U_1_land_lpi_1_dfm_3_R5 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_3_X6 & IsNaN_8U_23U_1_land_lpi_1_dfm_3_R6 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_3_X7 & IsNaN_8U_23U_1_land_lpi_1_dfm_3_R7 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_3_X8 & IsNaN_8U_23U_1_land_lpi_1_dfm_3_R8 );
  assign _168__R = ( _168__X0 & _168__R0 );
  assign _077__R = ( _077__X0 & _077__R0 );
  assign mux_27_nl_R = ( mux_27_nl_X0 & mux_27_nl_R0 );
  assign _163__R = ( _163__X0 & _163__R0 );
  assign _076__R = ( _076__X0 & _076__R0 );
  assign _162__R = ( _162__X0 & _162__R0 );
  assign _160__R = ( _160__X0 & _160__R0 );
  assign or_tmp_24_R = ( or_tmp_24_X0 & or_tmp_24_R0 ) | ( or_tmp_24_X1 & or_tmp_24_R1 );
  assign _159__R = ( _159__X0 & _159__R0 );
  assign _158__R = ( _158__X0 & _158__R0 );
  assign _154__R = ( _154__X0 & _154__R0 );
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_R = ( FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_X0 & FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_R0 ) | ( FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_X1 & FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_R1 );
  assign _152__R = ( _152__X0 & _152__R0 );
  assign _075__R = ( _075__X0 & _075__R0 );
  assign _150__R = ( _150__X0 & _150__R0 );
  assign IsNaN_8U_23U_1_land_lpi_1_dfm_4_R = ( IsNaN_8U_23U_1_land_lpi_1_dfm_4_X0 & IsNaN_8U_23U_1_land_lpi_1_dfm_4_R0 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_4_X1 & IsNaN_8U_23U_1_land_lpi_1_dfm_4_R1 ) | ( IsNaN_8U_23U_1_land_lpi_1_dfm_4_X2 & IsNaN_8U_23U_1_land_lpi_1_dfm_4_R2 );
  assign _006__R = ( _006__X0 & _006__R0 );
  assign _005__R = ( _005__X0 & _005__R0 );
  assign mux_31_nl_R = ( mux_31_nl_X0 & mux_31_nl_R0 );
  assign or_65_cse_R = ( or_65_cse_X0 & or_65_cse_R0 ) | ( or_65_cse_X1 & or_65_cse_R1 ) | ( or_65_cse_X2 & or_65_cse_R2 ) | ( or_65_cse_X3 & or_65_cse_R3 ) | ( or_65_cse_X4 & or_65_cse_R4 );
  assign _147__R = ( _147__X0 & _147__R0 );
  assign mux_20_itm_R = ( mux_20_itm_X0 & mux_20_itm_R0 );
  assign main_stage_v_2_mx0c1_R = ( main_stage_v_2_mx0c1_X0 & main_stage_v_2_mx0c1_R0 ) | ( main_stage_v_2_mx0c1_X1 & main_stage_v_2_mx0c1_R1 );
  assign _142__R = ( _142__X0 & _142__R0 );
  assign and_dcpl_6_R = ( and_dcpl_6_X0 & and_dcpl_6_R0 ) | ( and_dcpl_6_X1 & and_dcpl_6_R1 ) | ( and_dcpl_6_X2 & and_dcpl_6_R2 );
  assign main_stage_v_1_mx0c1_R = ( main_stage_v_1_mx0c1_X0 & main_stage_v_1_mx0c1_R0 ) | ( main_stage_v_1_mx0c1_X1 & main_stage_v_1_mx0c1_R1 );
  assign and_dcpl_13_R = ( and_dcpl_13_X0 & and_dcpl_13_R0 ) | ( and_dcpl_13_X1 & and_dcpl_13_R1 );
  assign _044__R = ( _044__X0 & _044__R0 );
  assign main_stage_en_1_R = ( main_stage_en_1_X0 & main_stage_en_1_R0 ) | ( main_stage_en_1_X1 & main_stage_en_1_R1 );
  assign FpMul_8U_23U_o_expo_lpi_1_dfm_R = ( FpMul_8U_23U_o_expo_lpi_1_dfm_X0 & FpMul_8U_23U_o_expo_lpi_1_dfm_R0 ) | ( FpMul_8U_23U_o_expo_lpi_1_dfm_X1 & FpMul_8U_23U_o_expo_lpi_1_dfm_R1 );
  assign fangyuan6_R = ( fangyuan6_X0 & fangyuan6_R0 );
  assign fangyuan5_R = ( fangyuan5_X0 & fangyuan5_R0 );
  assign _003__R = ( _003__X0 & _003__R0 ) | ( _003__X1 & _003__R1 ) | ( _003__X2 & _003__R2 );
  assign and_dcpl_16_R = ( and_dcpl_16_X0 & and_dcpl_16_R0 ) | ( and_dcpl_16_X1 & and_dcpl_16_R1 ) | ( and_dcpl_16_X2 & and_dcpl_16_R2 );
  assign _138__R = ( _138__X0 & _138__R0 );
  assign _093__R = ( _093__X0 & _093__R0 );
  assign _092__R = ( _092__X0 & _092__R0 );
  assign IsNaN_8U_23U_land_lpi_1_dfm_st_3_R = ( IsNaN_8U_23U_land_lpi_1_dfm_st_3_X0 & IsNaN_8U_23U_land_lpi_1_dfm_st_3_R0 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_3_X1 & IsNaN_8U_23U_land_lpi_1_dfm_st_3_R1 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_3_X2 & IsNaN_8U_23U_land_lpi_1_dfm_st_3_R2 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_3_X3 & IsNaN_8U_23U_land_lpi_1_dfm_st_3_R3 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_3_X4 & IsNaN_8U_23U_land_lpi_1_dfm_st_3_R4 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_3_X5 & IsNaN_8U_23U_land_lpi_1_dfm_st_3_R5 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_3_X6 & IsNaN_8U_23U_land_lpi_1_dfm_st_3_R6 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_3_X7 & IsNaN_8U_23U_land_lpi_1_dfm_st_3_R7 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_3_X8 & IsNaN_8U_23U_land_lpi_1_dfm_st_3_R8 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_3_X9 & IsNaN_8U_23U_land_lpi_1_dfm_st_3_R9 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_st_3_X10 & IsNaN_8U_23U_land_lpi_1_dfm_st_3_R10 );
  assign _121__R = ( _121__X0 & _121__R0 ) | ( _121__X1 & _121__R1 ) | ( _121__X2 & _121__R2 ) | ( _121__X3 & _121__R3 ) | ( _121__X4 & _121__R4 );
  assign and_dcpl_3_R = ( and_dcpl_3_X0 & and_dcpl_3_R0 ) | ( and_dcpl_3_X1 & and_dcpl_3_R1 );
  assign _137__R = ( _137__X0 & _137__R0 );
  assign reg_chn_o_rsci_ld_core_psct_cse_R = ( reg_chn_o_rsci_ld_core_psct_cse_X0 & reg_chn_o_rsci_ld_core_psct_cse_R0 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X1 & reg_chn_o_rsci_ld_core_psct_cse_R1 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X2 & reg_chn_o_rsci_ld_core_psct_cse_R2 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X3 & reg_chn_o_rsci_ld_core_psct_cse_R3 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X4 & reg_chn_o_rsci_ld_core_psct_cse_R4 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X5 & reg_chn_o_rsci_ld_core_psct_cse_R5 );
  assign chn_o_rsci_bawt_R = ( chn_o_rsci_bawt_X0 & chn_o_rsci_bawt_R0 ) | ( chn_o_rsci_bawt_X1 & chn_o_rsci_bawt_R1 ) | ( chn_o_rsci_bawt_X2 & chn_o_rsci_bawt_R2 ) | ( chn_o_rsci_bawt_X3 & chn_o_rsci_bawt_R3 ) | ( chn_o_rsci_bawt_X4 & chn_o_rsci_bawt_R4 ) | ( chn_o_rsci_bawt_X5 & chn_o_rsci_bawt_R5 ) | ( chn_o_rsci_bawt_X6 & chn_o_rsci_bawt_R6 ) | ( chn_o_rsci_bawt_X7 & chn_o_rsci_bawt_R7 ) | ( chn_o_rsci_bawt_X8 & chn_o_rsci_bawt_R8 ) | ( chn_o_rsci_bawt_X9 & chn_o_rsci_bawt_R9 );
  assign chn_b_rsci_bawt_R = ( chn_b_rsci_bawt_X0 & chn_b_rsci_bawt_R0 ) | ( chn_b_rsci_bawt_X1 & chn_b_rsci_bawt_R1 ) | ( chn_b_rsci_bawt_X2 & chn_b_rsci_bawt_R2 );
  assign chn_a_rsci_bawt_R = ( chn_a_rsci_bawt_X0 & chn_a_rsci_bawt_R0 ) | ( chn_a_rsci_bawt_X1 & chn_a_rsci_bawt_R1 ) | ( chn_a_rsci_bawt_X2 & chn_a_rsci_bawt_R2 );
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_R = ( FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_X0 & FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_R0 ) | ( FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_X1 & FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_R1 );
  assign _195__R = ( _195__X0 & _195__R0 );
  assign _131__R = ( _131__X0 & _131__R0 ) | ( _131__X1 & _131__R1 ) | ( _131__X2 & _131__R2 );
  assign _090__R = ( _090__X0 & _090__R0 );
  assign FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_R = ( FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_X0 & FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_R0 ) | ( FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_X1 & FpMantWidthDec_8U_47U_23U_0U_0U_if_1_unequal_tmp_R1 );
  assign FpMantRNE_48U_24U_else_and_svs_R = ( FpMantRNE_48U_24U_else_and_svs_X0 & FpMantRNE_48U_24U_else_and_svs_R0 ) | ( FpMantRNE_48U_24U_else_and_svs_X1 & FpMantRNE_48U_24U_else_and_svs_R1 ) | ( FpMantRNE_48U_24U_else_and_svs_X2 & FpMantRNE_48U_24U_else_and_svs_R2 ) | ( FpMantRNE_48U_24U_else_and_svs_X3 & FpMantRNE_48U_24U_else_and_svs_R3 );
  assign _004__R = ( _004__X0 & _004__R0 ) | ( _004__X1 & _004__R1 ) | ( _004__X2 & _004__R2 ) | ( _004__X3 & _004__R3 ) | ( _004__X4 & _004__R4 ) | ( _004__X5 & _004__R5 ) | ( _004__X6 & _004__R6 ) | ( _004__X7 & _004__R7 ) | ( _004__X8 & _004__R8 ) | ( _004__X9 & _004__R9 ) | ( _004__X10 & _004__R10 ) | ( _004__X11 & _004__R11 ) | ( _004__X12 & _004__R12 ) | ( _004__X13 & _004__R13 ) | ( _004__X14 & _004__R14 ) | ( _004__X15 & _004__R15 ) | ( _004__X16 & _004__R16 ) | ( _004__X17 & _004__R17 ) | ( _004__X18 & _004__R18 ) | ( _004__X19 & _004__R19 ) | ( _004__X20 & _004__R20 ) | ( _004__X21 & _004__R21 ) | ( _004__X22 & _004__R22 ) | ( _004__X23 & _004__R23 ) | ( _004__X24 & _004__R24 ) | ( _004__X25 & _004__R25 ) | ( _004__X26 & _004__R26 ) | ( _004__X27 & _004__R27 ) | ( _004__X28 & _004__R28 ) | ( _004__X29 & _004__R29 ) | ( _004__X30 & _004__R30 ) | ( _004__X31 & _004__R31 ) | ( _004__X32 & _004__R32 ) | ( _004__X33 & _004__R33 ) | ( _004__X34 & _004__R34 ) | ( _004__X35 & _004__R35 ) | ( _004__X36 & _004__R36 ) | ( _004__X37 & _004__R37 ) | ( _004__X38 & _004__R38 ) | ( _004__X39 & _004__R39 ) | ( _004__X40 & _004__R40 ) | ( _004__X41 & _004__R41 ) | ( _004__X42 & _004__R42 ) | ( _004__X43 & _004__R43 ) | ( _004__X44 & _004__R44 ) | ( _004__X45 & _004__R45 ) | ( _004__X46 & _004__R46 );
  assign _193__R = ( _193__X0 & _193__R0 );
  assign _095__R = ( _095__X0 & _095__R0 );
  assign FpMul_8U_23U_p_mant_p1_sva_2_R = ( FpMul_8U_23U_p_mant_p1_sva_2_X0 & FpMul_8U_23U_p_mant_p1_sva_2_R0 ) | ( FpMul_8U_23U_p_mant_p1_sva_2_X1 & FpMul_8U_23U_p_mant_p1_sva_2_R1 ) | ( FpMul_8U_23U_p_mant_p1_sva_2_X2 & FpMul_8U_23U_p_mant_p1_sva_2_R2 ) | ( FpMul_8U_23U_p_mant_p1_sva_2_X3 & FpMul_8U_23U_p_mant_p1_sva_2_R3 ) | ( FpMul_8U_23U_p_mant_p1_sva_2_X4 & FpMul_8U_23U_p_mant_p1_sva_2_R4 ) | ( FpMul_8U_23U_p_mant_p1_sva_2_X5 & FpMul_8U_23U_p_mant_p1_sva_2_R5 ) | ( FpMul_8U_23U_p_mant_p1_sva_2_X6 & FpMul_8U_23U_p_mant_p1_sva_2_R6 );
  assign FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R = ( FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X0 & FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R0 ) | ( FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X1 & FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R1 ) | ( FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X2 & FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R2 ) | ( FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X3 & FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R3 );
  assign and_cse_R = ( and_cse_X0 & and_cse_R0 ) | ( and_cse_X1 & and_cse_R1 ) | ( and_cse_X2 & and_cse_R2 ) | ( and_cse_X3 & and_cse_R3 ) | ( and_cse_X4 & and_cse_R4 ) | ( and_cse_X5 & and_cse_R5 );
  assign mux_33_nl_R = ( mux_33_nl_X0 & mux_33_nl_R0 );
  assign or_tmp_55_R = ( or_tmp_55_X0 & or_tmp_55_R0 ) | ( or_tmp_55_X1 & or_tmp_55_R1 ) | ( or_tmp_55_X2 & or_tmp_55_R2 );
  assign nand_cse_R = ( nand_cse_X0 & nand_cse_R0 ) | ( nand_cse_X1 & nand_cse_R1 ) | ( nand_cse_X2 & nand_cse_R2 );
  assign _087__R = ( _087__X0 & _087__R0 );
  assign _098__R = ( _098__X0 & _098__R0 ) | ( _098__X1 & _098__R1 ) | ( _098__X2 & _098__R2 );
  assign _086__R = ( _086__X0 & _086__R0 );
  assign _170__R = ( _170__X0 & _170__R0 );
  assign _097__R = ( _097__X0 & _097__R0 ) | ( _097__X1 & _097__R1 ) | ( _097__X2 & _097__R2 ) | ( _097__X3 & _097__R3 ) | ( _097__X4 & _097__R4 );
  assign _085__R = ( _085__X0 & _085__R0 );
  assign and_91_nl_R = ( and_91_nl_X0 & and_91_nl_R0 ) | ( and_91_nl_X1 & and_91_nl_R1 ) | ( and_91_nl_X2 & and_91_nl_R2 );
  assign FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_R = ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_X0 & FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_R0 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_X1 & FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_R1 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_X2 & FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_R2 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_X3 & FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_R3 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_X4 & FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_R4 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_X5 & FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_R5 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_X6 & FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_R6 ) | ( FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_X7 & FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_R7 );
  assign _128__R = ( _128__X0 & _128__R0 ) | ( _128__X1 & _128__R1 );
  assign or_29_cse_R = ( or_29_cse_X0 & or_29_cse_R0 ) | ( or_29_cse_X1 & or_29_cse_R1 ) | ( or_29_cse_X2 & or_29_cse_R2 ) | ( or_29_cse_X3 & or_29_cse_R3 );
  assign _106__R = ( _106__X0 & _106__R0 );
  assign _125__R = ( _125__X0 & _125__R0 );
  assign fangyuan4_R = ( fangyuan4_X0 & fangyuan4_R0 );
  assign FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_R = ( FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X0 & FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_R0 ) | ( FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X1 & FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_R1 ) | ( FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X2 & FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_R2 ) | ( FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X3 & FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_R3 ) | ( FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X4 & FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_R4 ) | ( FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X5 & FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_R5 ) | ( FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X6 & FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_R6 ) | ( FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_X7 & FpMul_8U_23U_FpMul_8U_23U_nor_1_nl_R7 );
  assign fangyuan3_R = ( fangyuan3_X0 & fangyuan3_R0 );
  assign FpMul_8U_23U_or_1_nl_R = ( FpMul_8U_23U_or_1_nl_X0 & FpMul_8U_23U_or_1_nl_R0 ) | ( FpMul_8U_23U_or_1_nl_X1 & FpMul_8U_23U_or_1_nl_R1 ) | ( FpMul_8U_23U_or_1_nl_X2 & FpMul_8U_23U_or_1_nl_R2 ) | ( FpMul_8U_23U_or_1_nl_X3 & FpMul_8U_23U_or_1_nl_R3 ) | ( FpMul_8U_23U_or_1_nl_X4 & FpMul_8U_23U_or_1_nl_R4 ) | ( FpMul_8U_23U_or_1_nl_X5 & FpMul_8U_23U_or_1_nl_R5 ) | ( FpMul_8U_23U_or_1_nl_X6 & FpMul_8U_23U_or_1_nl_R6 ) | ( FpMul_8U_23U_or_1_nl_X7 & FpMul_8U_23U_or_1_nl_R7 );
  assign fangyuan2_R = ( fangyuan2_X0 & fangyuan2_R0 );
  assign FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_R = ( FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_X0 & FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_R0 ) | ( FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_X1 & FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_R1 ) | ( FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_X2 & FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_R2 );
  assign FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_R = ( FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_X0 & FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_R0 ) | ( FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_X1 & FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_R1 ) | ( FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_X2 & FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_R2 ) | ( FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_X3 & FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_R3 ) | ( FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_X4 & FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_R4 ) | ( FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_X5 & FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_R5 ) | ( FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_X6 & FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_R6 ) | ( FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_X7 & FpMantWidthDec_8U_47U_23U_0U_0U_and_1_nl_R7 );
  assign and_54_rgt_R = ( and_54_rgt_X0 & and_54_rgt_R0 ) | ( and_54_rgt_X1 & and_54_rgt_R1 );
  assign and_64_rgt_R = ( and_64_rgt_X0 & and_64_rgt_R0 ) | ( and_64_rgt_X1 & and_64_rgt_R1 );
  assign and_65_rgt_R = ( and_65_rgt_X0 & and_65_rgt_R0 ) | ( and_65_rgt_X1 & and_65_rgt_R1 );
  assign FpMul_8U_23U_xor_1_nl_R = ( FpMul_8U_23U_xor_1_nl_X0 & FpMul_8U_23U_xor_1_nl_R0 );
  assign _164__R = ( _164__X0 & _164__R0 );
  assign _094__R = ( _094__X0 & _094__R0 ) | ( _094__X1 & _094__R1 ) | ( _094__X2 & _094__R2 );
  assign mux_24_cse_R = ( mux_24_cse_X0 & mux_24_cse_R0 ) | ( mux_24_cse_X1 & mux_24_cse_R1 ) | ( mux_24_cse_X2 & mux_24_cse_R2 );
  assign nand_8_cse_R = ( nand_8_cse_X0 & nand_8_cse_R0 ) | ( nand_8_cse_X1 & nand_8_cse_R1 );
  assign mux_tmp_14_R = ( mux_tmp_14_X0 & mux_tmp_14_R0 ) | ( mux_tmp_14_X1 & mux_tmp_14_R1 ) | ( mux_tmp_14_X2 & mux_tmp_14_R2 );
  assign mux_tmp_10_R = ( mux_tmp_10_X0 & mux_tmp_10_R0 ) | ( mux_tmp_10_X1 & mux_tmp_10_R1 );
  assign main_stage_v_1_R = ( main_stage_v_1_X0 & main_stage_v_1_R0 ) | ( main_stage_v_1_X1 & main_stage_v_1_R1 ) | ( main_stage_v_1_X2 & main_stage_v_1_R2 ) | ( main_stage_v_1_X3 & main_stage_v_1_R3 ) | ( main_stage_v_1_X4 & main_stage_v_1_R4 ) | ( main_stage_v_1_X5 & main_stage_v_1_R5 ) | ( main_stage_v_1_X6 & main_stage_v_1_R6 ) | ( main_stage_v_1_X7 & main_stage_v_1_R7 ) | ( main_stage_v_1_X8 & main_stage_v_1_R8 ) | ( main_stage_v_1_X9 & main_stage_v_1_R9 ) | ( main_stage_v_1_X10 & main_stage_v_1_R10 );
  assign _151__R = ( _151__X0 & _151__R0 );
  assign chn_o_rsci_d_30_23_mx0c1_R = ( chn_o_rsci_d_30_23_mx0c1_X0 & chn_o_rsci_d_30_23_mx0c1_R0 ) | ( chn_o_rsci_d_30_23_mx0c1_X1 & chn_o_rsci_d_30_23_mx0c1_R1 );
  assign _118__R = ( _118__X0 & _118__R0 );
  assign _116__R = ( _116__X0 & _116__R0 );
  assign mux_28_nl_R = ( mux_28_nl_X0 & mux_28_nl_R0 );
  assign mux_tmp_1_R = ( mux_tmp_1_X0 & mux_tmp_1_R0 ) | ( mux_tmp_1_X1 & mux_tmp_1_R1 );
  assign _071__R = ( _071__X0 & _071__R0 );
  assign _149__R = ( _149__X0 & _149__R0 );
  assign mux_23_nl_R = ( mux_23_nl_X0 & mux_23_nl_R0 );
  assign mux_tmp_R = ( mux_tmp_X0 & mux_tmp_R0 ) | ( mux_tmp_X1 & mux_tmp_R1 );
  assign _068__R = ( _068__X0 & _068__R0 );
  assign _115__R = ( _115__X0 & _115__R0 ) | ( _115__X1 & _115__R1 );
  assign _067__R = ( _067__X0 & _067__R0 );
  assign _114__R = ( _114__X0 & _114__R0 );
  assign _113__R = ( _113__X0 & _113__R0 );
  assign _064__R = ( _064__X0 & _064__R0 );
  assign _145__R = ( _145__X0 & _145__R0 );
  assign _112__R = ( _112__X0 & _112__R0 ) | ( _112__X1 & _112__R1 );
  assign mux_17_nl_R = ( mux_17_nl_X0 & mux_17_nl_R0 );
  assign mux_13_nl_R = ( mux_13_nl_X0 & mux_13_nl_R0 );
  assign _060__R = ( _060__X0 & _060__R0 ) | ( _060__X1 & _060__R1 );
  assign FpMul_8U_23U_ub_FpBitsToFloat_8U_23U_1_or_1_cse_R = ( FpMul_8U_23U_ub_FpBitsToFloat_8U_23U_1_or_1_cse_X0 & FpMul_8U_23U_ub_FpBitsToFloat_8U_23U_1_or_1_cse_R0 );
  assign mux_8_nl_R = ( mux_8_nl_X0 & mux_8_nl_R0 );
  assign mux_6_nl_R = ( mux_6_nl_X0 & mux_6_nl_R0 );
  assign mux_tmp_4_R = ( mux_tmp_4_X0 & mux_tmp_4_R0 ) | ( mux_tmp_4_X1 & mux_tmp_4_R1 ) | ( mux_tmp_4_X2 & mux_tmp_4_R2 ) | ( mux_tmp_4_X3 & mux_tmp_4_R3 );
  assign _056__R = ( _056__X0 & _056__R0 );
  assign _144__R = ( _144__X0 & _144__R0 );
  assign FpMul_8U_23U_else_2_if_acc_nl_R = ( FpMul_8U_23U_else_2_if_acc_nl_X0 & FpMul_8U_23U_else_2_if_acc_nl_R0 ) | ( FpMul_8U_23U_else_2_if_acc_nl_X1 & FpMul_8U_23U_else_2_if_acc_nl_R1 ) | ( FpMul_8U_23U_else_2_if_acc_nl_X2 & FpMul_8U_23U_else_2_if_acc_nl_R2 ) | ( FpMul_8U_23U_else_2_if_acc_nl_X3 & FpMul_8U_23U_else_2_if_acc_nl_R3 ) | ( FpMul_8U_23U_else_2_if_acc_nl_X4 & FpMul_8U_23U_else_2_if_acc_nl_R4 ) | ( FpMul_8U_23U_else_2_if_acc_nl_X5 & FpMul_8U_23U_else_2_if_acc_nl_R5 ) | ( FpMul_8U_23U_else_2_if_acc_nl_X6 & FpMul_8U_23U_else_2_if_acc_nl_R6 ) | ( FpMul_8U_23U_else_2_if_acc_nl_X7 & FpMul_8U_23U_else_2_if_acc_nl_R7 );
  assign _054__R = ( _054__X0 & _054__R0 ) | ( _054__X1 & _054__R1 );
  assign _111__R = ( _111__X0 & _111__R0 ) | ( _111__X1 & _111__R1 );
  assign mux_3_nl_R = ( mux_3_nl_X0 & mux_3_nl_R0 );
  assign _143__R = ( _143__X0 & _143__R0 );
  assign _107__R = ( _107__X0 & _107__R0 );
  assign _050__R = ( _050__X0 & _050__R0 ) | ( _050__X1 & _050__R1 ) | ( _050__X2 & _050__R2 ) | ( _050__X3 & _050__R3 ) | ( _050__X4 & _050__R4 ) | ( _050__X5 & _050__R5 ) | ( _050__X6 & _050__R6 ) | ( _050__X7 & _050__R7 ) | ( _050__X8 & _050__R8 ) | ( _050__X9 & _050__R9 );
  assign _141__R = ( _141__X0 & _141__R0 );
  assign _140__R = ( _140__X0 & _140__R0 );
  assign _139__R = ( _139__X0 & _139__R0 );
  assign IsNaN_8U_23U_land_lpi_1_dfm_4_R = ( IsNaN_8U_23U_land_lpi_1_dfm_4_X0 & IsNaN_8U_23U_land_lpi_1_dfm_4_R0 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_4_X1 & IsNaN_8U_23U_land_lpi_1_dfm_4_R1 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_4_X2 & IsNaN_8U_23U_land_lpi_1_dfm_4_R2 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_4_X3 & IsNaN_8U_23U_land_lpi_1_dfm_4_R3 );
  assign or_tmp_59_R = ( or_tmp_59_X0 & or_tmp_59_R0 ) | ( or_tmp_59_X1 & or_tmp_59_R1 );
  assign core_wen_R = ( core_wen_X0 & core_wen_R0 ) | ( core_wen_X1 & core_wen_R1 ) | ( core_wen_X2 & core_wen_R2 ) | ( core_wen_X3 & core_wen_R3 ) | ( core_wen_X4 & core_wen_R4 ) | ( core_wen_X5 & core_wen_R5 ) | ( core_wen_X6 & core_wen_R6 ) | ( core_wen_X7 & core_wen_R7 ) | ( core_wen_X8 & core_wen_R8 ) | ( core_wen_X9 & core_wen_R9 ) | ( core_wen_X10 & core_wen_R10 ) | ( core_wen_X11 & core_wen_R11 ) | ( core_wen_X12 & core_wen_R12 ) | ( core_wen_X13 & core_wen_R13 ) | ( core_wen_X14 & core_wen_R14 ) | ( core_wen_X15 & core_wen_R15 ) | ( core_wen_X16 & core_wen_R16 ) | ( core_wen_X17 & core_wen_R17 ) | ( core_wen_X18 & core_wen_R18 );
  assign fsm_output_R = ( fsm_output_X0 & fsm_output_R0 ) | ( fsm_output_X1 & fsm_output_R1 ) | ( fsm_output_X2 & fsm_output_R2 );
  assign _102__R = ( _102__X0 & _102__R0 );
  assign _001__R = ( _001__X0 & _001__R0 ) | ( _001__X1 & _001__R1 ) | ( _001__X2 & _001__R2 ) | ( _001__X3 & _001__R3 ) | ( _001__X4 & _001__R4 ) | ( _001__X5 & _001__R5 ) | ( _001__X6 & _001__R6 );
  assign and_dcpl_12_R = ( and_dcpl_12_X0 & and_dcpl_12_R0 ) | ( and_dcpl_12_X1 & and_dcpl_12_R1 ) | ( and_dcpl_12_X2 & and_dcpl_12_R2 ) | ( and_dcpl_12_X3 & and_dcpl_12_R3 ) | ( and_dcpl_12_X4 & and_dcpl_12_R4 );
  assign main_stage_v_2_R = ( main_stage_v_2_X0 & main_stage_v_2_R0 ) | ( main_stage_v_2_X1 & main_stage_v_2_R1 ) | ( main_stage_v_2_X2 & main_stage_v_2_R2 ) | ( main_stage_v_2_X3 & main_stage_v_2_R3 ) | ( main_stage_v_2_X4 & main_stage_v_2_R4 ) | ( main_stage_v_2_X5 & main_stage_v_2_R5 ) | ( main_stage_v_2_X6 & main_stage_v_2_R6 );
  assign or_10_cse_R = ( or_10_cse_X0 & or_10_cse_R0 ) | ( or_10_cse_X1 & or_10_cse_R1 ) | ( or_10_cse_X2 & or_10_cse_R2 ) | ( or_10_cse_X3 & or_10_cse_R3 ) | ( or_10_cse_X4 & or_10_cse_R4 ) | ( or_10_cse_X5 & or_10_cse_R5 ) | ( or_10_cse_X6 & or_10_cse_R6 ) | ( or_10_cse_X7 & or_10_cse_R7 ) | ( or_10_cse_X8 & or_10_cse_R8 ) | ( or_10_cse_X9 & or_10_cse_R9 ) | ( or_10_cse_X10 & or_10_cse_R10 ) | ( or_10_cse_X11 & or_10_cse_R11 ) | ( or_10_cse_X12 & or_10_cse_R12 ) | ( or_10_cse_X13 & or_10_cse_R13 ) | ( or_10_cse_X14 & or_10_cse_R14 ) | ( or_10_cse_X15 & or_10_cse_R15 ) | ( or_10_cse_X16 & or_10_cse_R16 ) | ( or_10_cse_X17 & or_10_cse_R17 ) | ( or_10_cse_X18 & or_10_cse_R18 );
  assign FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_R = ( FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_X0 & FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_R0 ) | ( FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_X1 & FpMul_8U_23U_p_expo_lpi_1_dfm_1_mx0_R1 );
  assign fangyuan1_R = ( fangyuan1_X0 & fangyuan1_R0 );
  assign _039__R = ( _039__X0 & _039__R0 );
  assign FpMul_8U_23U_p_expo_sva_5_R = ( FpMul_8U_23U_p_expo_sva_5_X0 & FpMul_8U_23U_p_expo_sva_5_R0 ) | ( FpMul_8U_23U_p_expo_sva_5_X1 & FpMul_8U_23U_p_expo_sva_5_R1 ) | ( FpMul_8U_23U_p_expo_sva_5_X2 & FpMul_8U_23U_p_expo_sva_5_R2 ) | ( FpMul_8U_23U_p_expo_sva_5_X3 & FpMul_8U_23U_p_expo_sva_5_R3 );
  assign fangyuan0_R = ( fangyuan0_X0 & fangyuan0_R0 );
  assign FpMul_8U_23U_oelse_1_acc_1_nl_R = ( FpMul_8U_23U_oelse_1_acc_1_nl_X0 & FpMul_8U_23U_oelse_1_acc_1_nl_R0 ) | ( FpMul_8U_23U_oelse_1_acc_1_nl_X1 & FpMul_8U_23U_oelse_1_acc_1_nl_R1 ) | ( FpMul_8U_23U_oelse_1_acc_1_nl_X2 & FpMul_8U_23U_oelse_1_acc_1_nl_R2 );
  assign FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_R = ( FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_X0 & FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_R0 ) | ( FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_X1 & FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_R1 );
  assign FpMul_8U_23U_ua_sva_1_30_0_1_R = ( FpMul_8U_23U_ua_sva_1_30_0_1_X0 & FpMul_8U_23U_ua_sva_1_30_0_1_R0 ) | ( FpMul_8U_23U_ua_sva_1_30_0_1_X1 & FpMul_8U_23U_ua_sva_1_30_0_1_R1 ) | ( FpMul_8U_23U_ua_sva_1_30_0_1_X2 & FpMul_8U_23U_ua_sva_1_30_0_1_R2 );
  assign FpMul_8U_23U_else_2_else_acc_2_nl_R = ( FpMul_8U_23U_else_2_else_acc_2_nl_X0 & FpMul_8U_23U_else_2_else_acc_2_nl_R0 ) | ( FpMul_8U_23U_else_2_else_acc_2_nl_X1 & FpMul_8U_23U_else_2_else_acc_2_nl_R1 );
  assign FpMul_8U_23U_ub_sva_1_30_0_1_R = ( FpMul_8U_23U_ub_sva_1_30_0_1_X0 & FpMul_8U_23U_ub_sva_1_30_0_1_R0 ) | ( FpMul_8U_23U_ub_sva_1_30_0_1_X1 & FpMul_8U_23U_ub_sva_1_30_0_1_R1 ) | ( FpMul_8U_23U_ub_sva_1_30_0_1_X2 & FpMul_8U_23U_ub_sva_1_30_0_1_R2 );
  assign chn_b_rsci_d_mxwt_R = ( chn_b_rsci_d_mxwt_X0 & chn_b_rsci_d_mxwt_R0 ) | ( chn_b_rsci_d_mxwt_X1 & chn_b_rsci_d_mxwt_R1 ) | ( chn_b_rsci_d_mxwt_X2 & chn_b_rsci_d_mxwt_R2 ) | ( chn_b_rsci_d_mxwt_X3 & chn_b_rsci_d_mxwt_R3 ) | ( chn_b_rsci_d_mxwt_X4 & chn_b_rsci_d_mxwt_R4 );
  assign chn_a_rsci_d_mxwt_R = ( chn_a_rsci_d_mxwt_X0 & chn_a_rsci_d_mxwt_R0 ) | ( chn_a_rsci_d_mxwt_X1 & chn_a_rsci_d_mxwt_R1 ) | ( chn_a_rsci_d_mxwt_X2 & chn_a_rsci_d_mxwt_R2 ) | ( chn_a_rsci_d_mxwt_X3 & chn_a_rsci_d_mxwt_R3 ) | ( chn_a_rsci_d_mxwt_X4 & chn_a_rsci_d_mxwt_R4 ) | ( chn_a_rsci_d_mxwt_X5 & chn_a_rsci_d_mxwt_R5 );
  assign FpMantRNE_48U_24U_else_carry_sva_R = ( FpMantRNE_48U_24U_else_carry_sva_X0 & FpMantRNE_48U_24U_else_carry_sva_R0 ) | ( FpMantRNE_48U_24U_else_carry_sva_X1 & FpMantRNE_48U_24U_else_carry_sva_R1 );
  assign FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R = ( FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X0 & FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R0 ) | ( FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X1 & FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R1 ) | ( FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X2 & FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R2 );
  assign chn_o_rsci_oswt_unreg_R = ( chn_o_rsci_oswt_unreg_X0 & chn_o_rsci_oswt_unreg_R0 );
  assign chn_o_rsc_z_R = ( chn_o_rsc_z_X0 & chn_o_rsc_z_R0 );
  assign chn_o_rsc_lz_R = ( chn_o_rsc_lz_X0 & chn_o_rsc_lz_R0 );
  assign chn_b_rsc_lz_R = ( chn_b_rsc_lz_X0 & chn_b_rsc_lz_R0 );
  assign chn_a_rsci_oswt_unreg_pff_R = ( chn_a_rsci_oswt_unreg_pff_X0 & chn_a_rsci_oswt_unreg_pff_R0 );
  assign chn_a_rsc_lz_R = ( chn_a_rsc_lz_X0 & chn_a_rsc_lz_R0 );
 // ground taints for floating regs
 // ground taints for unused wires
  assign { FpMul_8U_23U_else_2_else_if_if_acc_1_itm_7_1_R , FpMul_8U_23U_else_2_else_if_if_acc_1_itm_7_1_C , FpMul_8U_23U_else_2_else_if_if_acc_1_itm_7_1_X , FpMul_8U_23U_else_2_if_acc_itm_8_1_R , FpMul_8U_23U_else_2_if_acc_itm_8_1_C , FpMul_8U_23U_else_2_if_acc_itm_8_1_X , FpMul_8U_23U_oelse_1_acc_itm_9_1_R , FpMul_8U_23U_oelse_1_acc_itm_9_1_C , FpMul_8U_23U_oelse_1_acc_itm_9_1_X , nl_FpMantRNE_48U_24U_else_acc_nl_R , nl_FpMantRNE_48U_24U_else_acc_nl_C , nl_FpMantRNE_48U_24U_else_acc_nl_X , nl_FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_R , nl_FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_C , nl_FpMantWidthDec_8U_47U_23U_0U_0U_o_expo_sva_1_X , nl_FpMul_8U_23U_else_2_acc_1_nl_R , nl_FpMul_8U_23U_else_2_acc_1_nl_C , nl_FpMul_8U_23U_else_2_acc_1_nl_X , nl_FpMul_8U_23U_else_2_else_acc_2_nl_R , nl_FpMul_8U_23U_else_2_else_acc_2_nl_C , nl_FpMul_8U_23U_else_2_else_acc_2_nl_X , nl_FpMul_8U_23U_else_2_else_if_if_acc_1_nl_R , nl_FpMul_8U_23U_else_2_else_if_if_acc_1_nl_C , nl_FpMul_8U_23U_else_2_else_if_if_acc_1_nl_X , nl_FpMul_8U_23U_else_2_else_if_if_acc_nl_R , nl_FpMul_8U_23U_else_2_else_if_if_acc_nl_C , nl_FpMul_8U_23U_else_2_else_if_if_acc_nl_X , nl_FpMul_8U_23U_else_2_if_acc_nl_R , nl_FpMul_8U_23U_else_2_if_acc_nl_C , nl_FpMul_8U_23U_else_2_if_acc_nl_X , nl_FpMul_8U_23U_oelse_1_acc_1_nl_R , nl_FpMul_8U_23U_oelse_1_acc_1_nl_C , nl_FpMul_8U_23U_oelse_1_acc_1_nl_X , nl_FpMul_8U_23U_oelse_1_acc_nl_R , nl_FpMul_8U_23U_oelse_1_acc_nl_C , nl_FpMul_8U_23U_oelse_1_acc_nl_X , nl_HLS_fp32_mul_core_chn_o_rsci_inst_chn_o_rsci_d_R , nl_HLS_fp32_mul_core_chn_o_rsci_inst_chn_o_rsci_d_C , nl_HLS_fp32_mul_core_chn_o_rsci_inst_chn_o_rsci_d_X  } = 0;
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMul_8U_23U_ua_sva_1_30_0_1_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMul_8U_23U_ua_sva_1_30_0_1_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMul_8U_23U_ua_sva_1_30_0_1_PREV_VAL1 <= FpMul_8U_23U_ua_sva_1_30_0_1 ;
    if( INSTR_IN_ZY ) FpMul_8U_23U_ua_sva_1_30_0_1_PREV_VAL2 <= FpMul_8U_23U_ua_sva_1_30_0_1_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMul_8U_23U_ub_sva_1_30_0_1_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMul_8U_23U_ub_sva_1_30_0_1_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMul_8U_23U_ub_sva_1_30_0_1_PREV_VAL1 <= FpMul_8U_23U_ub_sva_1_30_0_1 ;
    if( INSTR_IN_ZY ) FpMul_8U_23U_ub_sva_1_30_0_1_PREV_VAL2 <= FpMul_8U_23U_ub_sva_1_30_0_1_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMul_8U_23U_mux_10_itm_3_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMul_8U_23U_mux_10_itm_3_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMul_8U_23U_mux_10_itm_3_PREV_VAL1 <= FpMul_8U_23U_mux_10_itm_3 ;
    if( INSTR_IN_ZY ) FpMul_8U_23U_mux_10_itm_3_PREV_VAL2 <= FpMul_8U_23U_mux_10_itm_3_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMul_8U_23U_lor_1_lpi_1_dfm_3_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMul_8U_23U_lor_1_lpi_1_dfm_3_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMul_8U_23U_lor_1_lpi_1_dfm_3_PREV_VAL1 <= FpMul_8U_23U_lor_1_lpi_1_dfm_3 ;
    if( INSTR_IN_ZY ) FpMul_8U_23U_lor_1_lpi_1_dfm_3_PREV_VAL2 <= FpMul_8U_23U_lor_1_lpi_1_dfm_3_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_PREV_VAL1 <= FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs ;
    if( INSTR_IN_ZY ) FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_PREV_VAL2 <= FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMul_8U_23U_p_mant_p1_sva_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMul_8U_23U_p_mant_p1_sva_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMul_8U_23U_p_mant_p1_sva_PREV_VAL1 <= FpMul_8U_23U_p_mant_p1_sva ;
    if( INSTR_IN_ZY ) FpMul_8U_23U_p_mant_p1_sva_PREV_VAL2 <= FpMul_8U_23U_p_mant_p1_sva_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_PREV_VAL1 <= FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2 ;
    if( INSTR_IN_ZY ) FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_PREV_VAL2 <= FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMul_8U_23U_lor_1_lpi_1_dfm_4_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMul_8U_23U_lor_1_lpi_1_dfm_4_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMul_8U_23U_lor_1_lpi_1_dfm_4_PREV_VAL1 <= FpMul_8U_23U_lor_1_lpi_1_dfm_4 ;
    if( INSTR_IN_ZY ) FpMul_8U_23U_lor_1_lpi_1_dfm_4_PREV_VAL2 <= FpMul_8U_23U_lor_1_lpi_1_dfm_4_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_PREV_VAL1 <= FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2 ;
    if( INSTR_IN_ZY ) FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_PREV_VAL2 <= FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) IsNaN_8U_23U_1_land_lpi_1_dfm_4_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) IsNaN_8U_23U_1_land_lpi_1_dfm_4_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) IsNaN_8U_23U_1_land_lpi_1_dfm_4_PREV_VAL1 <= IsNaN_8U_23U_1_land_lpi_1_dfm_4 ;
    if( INSTR_IN_ZY ) IsNaN_8U_23U_1_land_lpi_1_dfm_4_PREV_VAL2 <= IsNaN_8U_23U_1_land_lpi_1_dfm_4_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) IsNaN_8U_23U_land_lpi_1_dfm_4_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) IsNaN_8U_23U_land_lpi_1_dfm_4_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) IsNaN_8U_23U_land_lpi_1_dfm_4_PREV_VAL1 <= IsNaN_8U_23U_land_lpi_1_dfm_4 ;
    if( INSTR_IN_ZY ) IsNaN_8U_23U_land_lpi_1_dfm_4_PREV_VAL2 <= IsNaN_8U_23U_land_lpi_1_dfm_4_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMul_8U_23U_mux_10_itm_4_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMul_8U_23U_mux_10_itm_4_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMul_8U_23U_mux_10_itm_4_PREV_VAL1 <= FpMul_8U_23U_mux_10_itm_4 ;
    if( INSTR_IN_ZY ) FpMul_8U_23U_mux_10_itm_4_PREV_VAL2 <= FpMul_8U_23U_mux_10_itm_4_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_PREV_VAL1 <= FpMul_8U_23U_lor_1_lpi_1_dfm_st_4 ;
    if( INSTR_IN_ZY ) FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_PREV_VAL2 <= FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_PREV_VAL1 <= FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2 ;
    if( INSTR_IN_ZY ) FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_PREV_VAL2 <= FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_PREV_VAL1 <= FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2 ;
    if( INSTR_IN_ZY ) FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_PREV_VAL2 <= FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_PREV_VAL1 <= FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2 ;
    if( INSTR_IN_ZY ) FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_PREV_VAL2 <= FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMul_8U_23U_p_mant_p1_sva_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMul_8U_23U_p_mant_p1_sva_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMul_8U_23U_p_mant_p1_sva_2_PREV_VAL1 <= FpMul_8U_23U_p_mant_p1_sva_2 ;
    if( INSTR_IN_ZY ) FpMul_8U_23U_p_mant_p1_sva_2_PREV_VAL2 <= FpMul_8U_23U_p_mant_p1_sva_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMul_8U_23U_p_expo_sva_5_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMul_8U_23U_p_expo_sva_5_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMul_8U_23U_p_expo_sva_5_PREV_VAL1 <= FpMul_8U_23U_p_expo_sva_5 ;
    if( INSTR_IN_ZY ) FpMul_8U_23U_p_expo_sva_5_PREV_VAL2 <= FpMul_8U_23U_p_expo_sva_5_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) main_stage_v_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) main_stage_v_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) main_stage_v_2_PREV_VAL1 <= main_stage_v_2 ;
    if( INSTR_IN_ZY ) main_stage_v_2_PREV_VAL2 <= main_stage_v_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) IsNaN_8U_23U_1_land_lpi_1_dfm_3_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) IsNaN_8U_23U_1_land_lpi_1_dfm_3_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) IsNaN_8U_23U_1_land_lpi_1_dfm_3_PREV_VAL1 <= IsNaN_8U_23U_1_land_lpi_1_dfm_3 ;
    if( INSTR_IN_ZY ) IsNaN_8U_23U_1_land_lpi_1_dfm_3_PREV_VAL2 <= IsNaN_8U_23U_1_land_lpi_1_dfm_3_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_PREV_VAL1 <= FpMul_8U_23U_lor_1_lpi_1_dfm_st_3 ;
    if( INSTR_IN_ZY ) FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_PREV_VAL2 <= FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) IsNaN_8U_23U_land_lpi_1_dfm_st_3_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) IsNaN_8U_23U_land_lpi_1_dfm_st_3_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) IsNaN_8U_23U_land_lpi_1_dfm_st_3_PREV_VAL1 <= IsNaN_8U_23U_land_lpi_1_dfm_st_3 ;
    if( INSTR_IN_ZY ) IsNaN_8U_23U_land_lpi_1_dfm_st_3_PREV_VAL2 <= IsNaN_8U_23U_land_lpi_1_dfm_st_3_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_PREV_VAL1 <= FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2 ;
    if( INSTR_IN_ZY ) FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_PREV_VAL2 <= FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) main_stage_v_1_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) main_stage_v_1_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) main_stage_v_1_PREV_VAL1 <= main_stage_v_1 ;
    if( INSTR_IN_ZY ) main_stage_v_1_PREV_VAL2 <= main_stage_v_1_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL1 <= reg_chn_o_rsci_ld_core_psct_cse ;
    if( INSTR_IN_ZY ) reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL2 <= reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_o_rsci_d_30_23_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_o_rsci_d_30_23_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_30_23_PREV_VAL1 <= chn_o_rsci_d_30_23 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_30_23_PREV_VAL2 <= chn_o_rsci_d_30_23_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_o_rsci_d_31_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_o_rsci_d_31_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_31_PREV_VAL1 <= chn_o_rsci_d_31 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_31_PREV_VAL2 <= chn_o_rsci_d_31_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_o_rsci_d_22_0_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_o_rsci_d_22_0_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_22_0_PREV_VAL1 <= chn_o_rsci_d_22_0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_22_0_PREV_VAL2 <= chn_o_rsci_d_22_0_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) reg_chn_b_rsci_ld_core_psct_cse_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) reg_chn_b_rsci_ld_core_psct_cse_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) reg_chn_b_rsci_ld_core_psct_cse_PREV_VAL1 <= reg_chn_b_rsci_ld_core_psct_cse ;
    if( INSTR_IN_ZY ) reg_chn_b_rsci_ld_core_psct_cse_PREV_VAL2 <= reg_chn_b_rsci_ld_core_psct_cse_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_o_rsci_iswt0_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_o_rsci_iswt0_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_iswt0_PREV_VAL1 <= chn_o_rsci_iswt0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_iswt0_PREV_VAL2 <= chn_o_rsci_iswt0_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) reg_chn_b_rsci_iswt0_cse_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) reg_chn_b_rsci_iswt0_cse_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) reg_chn_b_rsci_iswt0_cse_PREV_VAL1 <= reg_chn_b_rsci_iswt0_cse ;
    if( INSTR_IN_ZY ) reg_chn_b_rsci_iswt0_cse_PREV_VAL2 <= reg_chn_b_rsci_iswt0_cse_PREV_VAL1 ;
  end
 // ground taints for unused wire slices
  assign { _004__R46 [0], _004__R46 [1], _004__R46 [2], _004__R46 [3], _004__R46 [4], _004__R46 [5], _004__R46 [6], _004__R46 [7], _004__R46 [8], _004__R46 [9], _004__R46 [10], _004__R46 [11], _004__R46 [12], _004__R46 [13], _004__R46 [14], _004__R46 [15], _004__R46 [16], _004__R46 [17], _004__R46 [18], _004__R46 [19], _004__R46 [20], _004__R46 [21] } = 0;
  assign { _004__X46 [0], _004__X46 [1], _004__X46 [2], _004__X46 [3], _004__X46 [4], _004__X46 [5], _004__X46 [6], _004__X46 [7], _004__X46 [8], _004__X46 [9], _004__X46 [10], _004__X46 [11], _004__X46 [12], _004__X46 [13], _004__X46 [14], _004__X46 [15], _004__X46 [16], _004__X46 [17], _004__X46 [18], _004__X46 [19], _004__X46 [20], _004__X46 [21] } = 0;
  assign { _004__C46 [0], _004__C46 [1], _004__C46 [2], _004__C46 [3], _004__C46 [4], _004__C46 [5], _004__C46 [6], _004__C46 [7], _004__C46 [8], _004__C46 [9], _004__C46 [10], _004__C46 [11], _004__C46 [12], _004__C46 [13], _004__C46 [14], _004__C46 [15], _004__C46 [16], _004__C46 [17], _004__C46 [18], _004__C46 [19], _004__C46 [20], _004__C46 [21] } = 0;
  assign { fsm_output_R2 [1:1] } = 0;
  assign { fsm_output_X2 [1:1] } = 0;
  assign { fsm_output_C2 [1:1] } = 0;
  assign { FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R2 [0], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R2 [1], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R2 [2], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R2 [3], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R2 [4], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R2 [5], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R2 [6], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R2 [7], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R2 [8], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R2 [9], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R2 [10], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R2 [11], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R2 [12], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R2 [13], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R2 [14], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R2 [15], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R2 [16], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R2 [17], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R2 [18], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R2 [19], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R2 [20], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R2 [21], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R2 [22], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_R2 [45:24] } = 0;
  assign { FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X2 [0], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X2 [1], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X2 [2], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X2 [3], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X2 [4], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X2 [5], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X2 [6], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X2 [7], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X2 [8], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X2 [9], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X2 [10], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X2 [11], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X2 [12], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X2 [13], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X2 [14], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X2 [15], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X2 [16], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X2 [17], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X2 [18], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X2 [19], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X2 [20], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X2 [21], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X2 [22], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_X2 [45:24] } = 0;
  assign { FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C2 [0], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C2 [1], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C2 [2], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C2 [3], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C2 [4], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C2 [5], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C2 [6], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C2 [7], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C2 [8], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C2 [9], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C2 [10], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C2 [11], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C2 [12], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C2 [13], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C2 [14], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C2 [15], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C2 [16], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C2 [17], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C2 [18], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C2 [19], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C2 [20], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C2 [21], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C2 [22], FpMul_8U_23U_p_mant_46_1_lpi_1_dfm_3_mx0_C2 [45:24] } = 0;
  assert property( FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_r_flag == 0 || FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_PREV_VAL1 == FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_22_0_itm_2_PREV_VAL2 );
  assert property( FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_r_flag == 0 || FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_PREV_VAL1 == FpBitsToFloat_8U_23U_1_slc_FpBitsToFloat_8U_23U_ubits_1_30_23_itm_2_PREV_VAL2 );
  assert property( FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_r_flag == 0 || FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_PREV_VAL1 == FpMul_8U_23U_else_2_else_slc_FpMul_8U_23U_p_mant_p1_47_itm_2_PREV_VAL2 );
  assert property( FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_r_flag == 0 || FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_PREV_VAL1 == FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_acc_1_sdt_8_1_itm_2_PREV_VAL2 );
  assert property( FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_r_flag == 0 || FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_PREV_VAL1 == FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_PREV_VAL2 );
  assert property( FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_r_flag == 0 || FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_PREV_VAL1 == FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_2_PREV_VAL2 );
  assert property( FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_r_flag == 0 || FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_PREV_VAL1 == FpMul_8U_23U_else_2_if_slc_FpMul_8U_23U_else_2_if_acc_8_svs_st_2_PREV_VAL2 );
  assert property( FpMul_8U_23U_lor_1_lpi_1_dfm_3_r_flag == 0 || FpMul_8U_23U_lor_1_lpi_1_dfm_3_PREV_VAL1 == FpMul_8U_23U_lor_1_lpi_1_dfm_3_PREV_VAL2 );
  assert property( FpMul_8U_23U_lor_1_lpi_1_dfm_4_r_flag == 0 || FpMul_8U_23U_lor_1_lpi_1_dfm_4_PREV_VAL1 == FpMul_8U_23U_lor_1_lpi_1_dfm_4_PREV_VAL2 );
  assert property( FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_r_flag == 0 || FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_PREV_VAL1 == FpMul_8U_23U_lor_1_lpi_1_dfm_st_3_PREV_VAL2 );
  assert property( FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_r_flag == 0 || FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_PREV_VAL1 == FpMul_8U_23U_lor_1_lpi_1_dfm_st_4_PREV_VAL2 );
  assert property( FpMul_8U_23U_mux_10_itm_3_r_flag == 0 || FpMul_8U_23U_mux_10_itm_3_PREV_VAL1 == FpMul_8U_23U_mux_10_itm_3_PREV_VAL2 );
  assert property( FpMul_8U_23U_mux_10_itm_4_r_flag == 0 || FpMul_8U_23U_mux_10_itm_4_PREV_VAL1 == FpMul_8U_23U_mux_10_itm_4_PREV_VAL2 );
  assert property( FpMul_8U_23U_p_expo_sva_5_r_flag == 0 || FpMul_8U_23U_p_expo_sva_5_PREV_VAL1 == FpMul_8U_23U_p_expo_sva_5_PREV_VAL2 );
  assert property( FpMul_8U_23U_p_mant_p1_sva_r_flag == 0 || FpMul_8U_23U_p_mant_p1_sva_PREV_VAL1 == FpMul_8U_23U_p_mant_p1_sva_PREV_VAL2 );
  assert property( FpMul_8U_23U_p_mant_p1_sva_2_r_flag == 0 || FpMul_8U_23U_p_mant_p1_sva_2_PREV_VAL1 == FpMul_8U_23U_p_mant_p1_sva_2_PREV_VAL2 );
  assert property( FpMul_8U_23U_ua_sva_1_30_0_1_r_flag == 0 || FpMul_8U_23U_ua_sva_1_30_0_1_PREV_VAL1 == FpMul_8U_23U_ua_sva_1_30_0_1_PREV_VAL2 );
  assert property( FpMul_8U_23U_ub_sva_1_30_0_1_r_flag == 0 || FpMul_8U_23U_ub_sva_1_30_0_1_PREV_VAL1 == FpMul_8U_23U_ub_sva_1_30_0_1_PREV_VAL2 );
  assert property( IsNaN_8U_23U_1_land_lpi_1_dfm_3_r_flag == 0 || IsNaN_8U_23U_1_land_lpi_1_dfm_3_PREV_VAL1 == IsNaN_8U_23U_1_land_lpi_1_dfm_3_PREV_VAL2 );
  assert property( IsNaN_8U_23U_1_land_lpi_1_dfm_4_r_flag == 0 || IsNaN_8U_23U_1_land_lpi_1_dfm_4_PREV_VAL1 == IsNaN_8U_23U_1_land_lpi_1_dfm_4_PREV_VAL2 );
  assert property( IsNaN_8U_23U_land_lpi_1_dfm_4_r_flag == 0 || IsNaN_8U_23U_land_lpi_1_dfm_4_PREV_VAL1 == IsNaN_8U_23U_land_lpi_1_dfm_4_PREV_VAL2 );
  assert property( IsNaN_8U_23U_land_lpi_1_dfm_st_3_r_flag == 0 || IsNaN_8U_23U_land_lpi_1_dfm_st_3_PREV_VAL1 == IsNaN_8U_23U_land_lpi_1_dfm_st_3_PREV_VAL2 );
  assert property( chn_o_rsci_d_22_0_r_flag == 0 || chn_o_rsci_d_22_0_PREV_VAL1 == chn_o_rsci_d_22_0_PREV_VAL2 );
  assert property( chn_o_rsci_d_30_23_r_flag == 0 || chn_o_rsci_d_30_23_PREV_VAL1 == chn_o_rsci_d_30_23_PREV_VAL2 );
  assert property( chn_o_rsci_d_31_r_flag == 0 || chn_o_rsci_d_31_PREV_VAL1 == chn_o_rsci_d_31_PREV_VAL2 );
  assert property( chn_o_rsci_iswt0_r_flag == 0 || chn_o_rsci_iswt0_PREV_VAL1 == chn_o_rsci_iswt0_PREV_VAL2 );
  assert property( main_stage_v_1_r_flag == 0 || main_stage_v_1_PREV_VAL1 == main_stage_v_1_PREV_VAL2 );
  assert property( main_stage_v_2_r_flag == 0 || main_stage_v_2_PREV_VAL1 == main_stage_v_2_PREV_VAL2 );
  assert property( reg_chn_b_rsci_iswt0_cse_r_flag == 0 || reg_chn_b_rsci_iswt0_cse_PREV_VAL1 == reg_chn_b_rsci_iswt0_cse_PREV_VAL2 );
  assert property( reg_chn_b_rsci_ld_core_psct_cse_r_flag == 0 || reg_chn_b_rsci_ld_core_psct_cse_PREV_VAL1 == reg_chn_b_rsci_ld_core_psct_cse_PREV_VAL2 );
  assert property( reg_chn_o_rsci_ld_core_psct_cse_r_flag == 0 || reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL1 == reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL2 );
  assign rst_zy = !nvdla_core_rstn ;
endmodule
