  logic [4:0] _0_;
  logic [4:0] _0__T ;
  logic [4:0] _0__R ;
  logic [4:0] _0__C ;
  logic [4:0] _0__X ;
  logic [13:0] _0__S ;
  logic [80:0] _1_;
  logic [80:0] _1__T ;
  logic [80:0] _1__R ;
  logic [80:0] _1__C ;
  logic [80:0] _1__X ;
  logic [13:0] _1__S ;
  logic [80:0] _2_;
  logic [80:0] _2__T ;
  logic [80:0] _2__R ;
  logic [80:0] _2__C ;
  logic [80:0] _2__X ;
  logic [13:0] _2__S ;
  input [64:0] a;
  input [64:0] a_T ;
  input [13:0] a_S ;
  output [64:0] a_R ;
  output [64:0] a_X ;
  output [64:0] a_C ;
  input [4:0] s;
  input [4:0] s_T ;
  input [13:0] s_S ;
  output [4:0] s_R ;
  output [4:0] s_X ;
  output [4:0] s_C ;
  output [80:0] z;
  logic [80:0] z ;
  output [80:0] z_T ;
  logic [80:0] z_T ;
  logic [80:0] z_R ;
  logic [80:0] z_C ;
  logic [80:0] z_X ;
  logic [13:0] z_S ;
  input [80:0] z_R0 ;
  input [80:0] z_C0 ;
  input [80:0] z_X0 ;
  output [13:0] z_S ;
  assign _0_ = ~ s;
  logic [4:0] s_C0 ;
  logic [4:0] s_R0 ;
  logic [4:0] s_X0 ;
  assign _0__T = s_T ;
  assign s_C0 = _0__C ;
  assign s_R0 = _0__R ;
  assign s_X0 = _0__X ;
  assign _0__S = 0 ;
  assign z = s[4] ? _1_ : _2_;
  logic [4:0] s_C1 ;
  logic [4:0] s_R1 ;
  logic [4:0] s_X1 ;
  assign s_C1 [4] = | z_C ;
  assign s_X1 [4] = | z_X ;
  assign z_T = s[4] ? ( { 81{ s_T  [4] }} | _1__T ) : ( { 81{ s_T  [4] }} | _2__T );
  assign z_S = s[4] ? _1__S : _2__S ;
  assign s_R1 [4] = ( | (z_R | ( z_C & ( { 81{ s[4] }} & _1__T | { 81{ !s[4] }} & _2__T )))) && _1_ != _2_ ;
  logic [80:0] _1__C0 ;
  logic [80:0] _1__R0 ;
  logic [80:0] _1__X0 ;
  assign _1__C0 = { 81{ s[4] }} ;
  assign _1__R0 = { 81{ s[4] }} & ( z_R | ( { 81{ s_T  [4] }} & z_C ));
  assign _1__X0 = { 81{ s[4] }} & z_X ;
  logic [80:0] _2__C0 ;
  logic [80:0] _2__R0 ;
  logic [80:0] _2__X0 ;
  assign _2__C0 = { 81{ !s[4] }} ;
  assign _2__R0 = { 81{ !s[4] }} & ( z_R | ( { 81{ s_T  [4] }} & z_C ));
  assign _2__X0 = { 81{ !s[4] }} & z_X ;
  logic [80:0] fangyuan0;
  logic [80:0] fangyuan0_T ;
  logic [80:0] fangyuan0_R ;
  logic [80:0] fangyuan0_C ;
  logic [80:0] fangyuan0_X ;
  assign fangyuan0 = { a[64], a[64], a[64], a[64], a[64], a[64], a[64], a[64], a[64], a[64], a[64], a[64], a[64], a[64], a[64], a, 1'b0 };
  assign fangyuan0_T = {  a_T [64] , a_T [64] , a_T [64] , a_T [64] , a_T [64] , a_T [64] , a_T [64] , a_T [64] , a_T [64] , a_T [64] , a_T [64] , a_T [64] , a_T [64] , a_T [64] , a_T [64] , a_T , 1'h0  };
  logic [13:0] fangyuan0_S ;
  assign fangyuan0_S = 0 ;
  logic [64:0] a_R0 ;
  logic [64:0] a_X0 ;
  logic [64:0] a_C0 ;
  assign a_R0 [64:64] = fangyuan0_R [80:80] ;
  assign a_X0 [64:64] = fangyuan0_X [80:80] ;
  assign a_C0 [64:64] = fangyuan0_C [80:80] ;
  assign { a_R0 [0], a_R0 [1], a_R0 [2], a_R0 [3], a_R0 [4], a_R0 [5], a_R0 [6], a_R0 [7], a_R0 [8], a_R0 [9], a_R0 [10], a_R0 [11], a_R0 [12], a_R0 [13], a_R0 [14], a_R0 [15], a_R0 [16], a_R0 [17], a_R0 [18], a_R0 [19], a_R0 [20], a_R0 [21], a_R0 [22], a_R0 [23], a_R0 [24], a_R0 [25], a_R0 [26], a_R0 [27], a_R0 [28], a_R0 [29], a_R0 [30], a_R0 [31], a_R0 [32], a_R0 [33], a_R0 [34], a_R0 [35], a_R0 [36], a_R0 [37], a_R0 [38], a_R0 [39], a_R0 [40], a_R0 [41], a_R0 [42], a_R0 [43], a_R0 [44], a_R0 [45], a_R0 [46], a_R0 [47], a_R0 [48], a_R0 [49], a_R0 [50], a_R0 [51], a_R0 [52], a_R0 [53], a_R0 [54], a_R0 [55], a_R0 [56], a_R0 [57], a_R0 [58], a_R0 [59], a_R0 [60], a_R0 [61], a_R0 [62], a_R0 [63] } = 0;
  assign { a_X0 [0], a_X0 [1], a_X0 [2], a_X0 [3], a_X0 [4], a_X0 [5], a_X0 [6], a_X0 [7], a_X0 [8], a_X0 [9], a_X0 [10], a_X0 [11], a_X0 [12], a_X0 [13], a_X0 [14], a_X0 [15], a_X0 [16], a_X0 [17], a_X0 [18], a_X0 [19], a_X0 [20], a_X0 [21], a_X0 [22], a_X0 [23], a_X0 [24], a_X0 [25], a_X0 [26], a_X0 [27], a_X0 [28], a_X0 [29], a_X0 [30], a_X0 [31], a_X0 [32], a_X0 [33], a_X0 [34], a_X0 [35], a_X0 [36], a_X0 [37], a_X0 [38], a_X0 [39], a_X0 [40], a_X0 [41], a_X0 [42], a_X0 [43], a_X0 [44], a_X0 [45], a_X0 [46], a_X0 [47], a_X0 [48], a_X0 [49], a_X0 [50], a_X0 [51], a_X0 [52], a_X0 [53], a_X0 [54], a_X0 [55], a_X0 [56], a_X0 [57], a_X0 [58], a_X0 [59], a_X0 [60], a_X0 [61], a_X0 [62], a_X0 [63] } = 0;
  assign { a_C0 [0], a_C0 [1], a_C0 [2], a_C0 [3], a_C0 [4], a_C0 [5], a_C0 [6], a_C0 [7], a_C0 [8], a_C0 [9], a_C0 [10], a_C0 [11], a_C0 [12], a_C0 [13], a_C0 [14], a_C0 [15], a_C0 [16], a_C0 [17], a_C0 [18], a_C0 [19], a_C0 [20], a_C0 [21], a_C0 [22], a_C0 [23], a_C0 [24], a_C0 [25], a_C0 [26], a_C0 [27], a_C0 [28], a_C0 [29], a_C0 [30], a_C0 [31], a_C0 [32], a_C0 [33], a_C0 [34], a_C0 [35], a_C0 [36], a_C0 [37], a_C0 [38], a_C0 [39], a_C0 [40], a_C0 [41], a_C0 [42], a_C0 [43], a_C0 [44], a_C0 [45], a_C0 [46], a_C0 [47], a_C0 [48], a_C0 [49], a_C0 [50], a_C0 [51], a_C0 [52], a_C0 [53], a_C0 [54], a_C0 [55], a_C0 [56], a_C0 [57], a_C0 [58], a_C0 [59], a_C0 [60], a_C0 [61], a_C0 [62], a_C0 [63] } = 0;
  logic [64:0] a_R1 ;
  logic [64:0] a_X1 ;
  logic [64:0] a_C1 ;
  assign a_R1 [64:64] = fangyuan0_R [79:79] ;
  assign a_X1 [64:64] = fangyuan0_X [79:79] ;
  assign a_C1 [64:64] = fangyuan0_C [79:79] ;
  assign { a_R1 [0], a_R1 [1], a_R1 [2], a_R1 [3], a_R1 [4], a_R1 [5], a_R1 [6], a_R1 [7], a_R1 [8], a_R1 [9], a_R1 [10], a_R1 [11], a_R1 [12], a_R1 [13], a_R1 [14], a_R1 [15], a_R1 [16], a_R1 [17], a_R1 [18], a_R1 [19], a_R1 [20], a_R1 [21], a_R1 [22], a_R1 [23], a_R1 [24], a_R1 [25], a_R1 [26], a_R1 [27], a_R1 [28], a_R1 [29], a_R1 [30], a_R1 [31], a_R1 [32], a_R1 [33], a_R1 [34], a_R1 [35], a_R1 [36], a_R1 [37], a_R1 [38], a_R1 [39], a_R1 [40], a_R1 [41], a_R1 [42], a_R1 [43], a_R1 [44], a_R1 [45], a_R1 [46], a_R1 [47], a_R1 [48], a_R1 [49], a_R1 [50], a_R1 [51], a_R1 [52], a_R1 [53], a_R1 [54], a_R1 [55], a_R1 [56], a_R1 [57], a_R1 [58], a_R1 [59], a_R1 [60], a_R1 [61], a_R1 [62], a_R1 [63] } = 0;
  assign { a_X1 [0], a_X1 [1], a_X1 [2], a_X1 [3], a_X1 [4], a_X1 [5], a_X1 [6], a_X1 [7], a_X1 [8], a_X1 [9], a_X1 [10], a_X1 [11], a_X1 [12], a_X1 [13], a_X1 [14], a_X1 [15], a_X1 [16], a_X1 [17], a_X1 [18], a_X1 [19], a_X1 [20], a_X1 [21], a_X1 [22], a_X1 [23], a_X1 [24], a_X1 [25], a_X1 [26], a_X1 [27], a_X1 [28], a_X1 [29], a_X1 [30], a_X1 [31], a_X1 [32], a_X1 [33], a_X1 [34], a_X1 [35], a_X1 [36], a_X1 [37], a_X1 [38], a_X1 [39], a_X1 [40], a_X1 [41], a_X1 [42], a_X1 [43], a_X1 [44], a_X1 [45], a_X1 [46], a_X1 [47], a_X1 [48], a_X1 [49], a_X1 [50], a_X1 [51], a_X1 [52], a_X1 [53], a_X1 [54], a_X1 [55], a_X1 [56], a_X1 [57], a_X1 [58], a_X1 [59], a_X1 [60], a_X1 [61], a_X1 [62], a_X1 [63] } = 0;
  assign { a_C1 [0], a_C1 [1], a_C1 [2], a_C1 [3], a_C1 [4], a_C1 [5], a_C1 [6], a_C1 [7], a_C1 [8], a_C1 [9], a_C1 [10], a_C1 [11], a_C1 [12], a_C1 [13], a_C1 [14], a_C1 [15], a_C1 [16], a_C1 [17], a_C1 [18], a_C1 [19], a_C1 [20], a_C1 [21], a_C1 [22], a_C1 [23], a_C1 [24], a_C1 [25], a_C1 [26], a_C1 [27], a_C1 [28], a_C1 [29], a_C1 [30], a_C1 [31], a_C1 [32], a_C1 [33], a_C1 [34], a_C1 [35], a_C1 [36], a_C1 [37], a_C1 [38], a_C1 [39], a_C1 [40], a_C1 [41], a_C1 [42], a_C1 [43], a_C1 [44], a_C1 [45], a_C1 [46], a_C1 [47], a_C1 [48], a_C1 [49], a_C1 [50], a_C1 [51], a_C1 [52], a_C1 [53], a_C1 [54], a_C1 [55], a_C1 [56], a_C1 [57], a_C1 [58], a_C1 [59], a_C1 [60], a_C1 [61], a_C1 [62], a_C1 [63] } = 0;
  logic [64:0] a_R2 ;
  logic [64:0] a_X2 ;
  logic [64:0] a_C2 ;
  assign a_R2 [64:64] = fangyuan0_R [78:78] ;
  assign a_X2 [64:64] = fangyuan0_X [78:78] ;
  assign a_C2 [64:64] = fangyuan0_C [78:78] ;
  assign { a_R2 [0], a_R2 [1], a_R2 [2], a_R2 [3], a_R2 [4], a_R2 [5], a_R2 [6], a_R2 [7], a_R2 [8], a_R2 [9], a_R2 [10], a_R2 [11], a_R2 [12], a_R2 [13], a_R2 [14], a_R2 [15], a_R2 [16], a_R2 [17], a_R2 [18], a_R2 [19], a_R2 [20], a_R2 [21], a_R2 [22], a_R2 [23], a_R2 [24], a_R2 [25], a_R2 [26], a_R2 [27], a_R2 [28], a_R2 [29], a_R2 [30], a_R2 [31], a_R2 [32], a_R2 [33], a_R2 [34], a_R2 [35], a_R2 [36], a_R2 [37], a_R2 [38], a_R2 [39], a_R2 [40], a_R2 [41], a_R2 [42], a_R2 [43], a_R2 [44], a_R2 [45], a_R2 [46], a_R2 [47], a_R2 [48], a_R2 [49], a_R2 [50], a_R2 [51], a_R2 [52], a_R2 [53], a_R2 [54], a_R2 [55], a_R2 [56], a_R2 [57], a_R2 [58], a_R2 [59], a_R2 [60], a_R2 [61], a_R2 [62], a_R2 [63] } = 0;
  assign { a_X2 [0], a_X2 [1], a_X2 [2], a_X2 [3], a_X2 [4], a_X2 [5], a_X2 [6], a_X2 [7], a_X2 [8], a_X2 [9], a_X2 [10], a_X2 [11], a_X2 [12], a_X2 [13], a_X2 [14], a_X2 [15], a_X2 [16], a_X2 [17], a_X2 [18], a_X2 [19], a_X2 [20], a_X2 [21], a_X2 [22], a_X2 [23], a_X2 [24], a_X2 [25], a_X2 [26], a_X2 [27], a_X2 [28], a_X2 [29], a_X2 [30], a_X2 [31], a_X2 [32], a_X2 [33], a_X2 [34], a_X2 [35], a_X2 [36], a_X2 [37], a_X2 [38], a_X2 [39], a_X2 [40], a_X2 [41], a_X2 [42], a_X2 [43], a_X2 [44], a_X2 [45], a_X2 [46], a_X2 [47], a_X2 [48], a_X2 [49], a_X2 [50], a_X2 [51], a_X2 [52], a_X2 [53], a_X2 [54], a_X2 [55], a_X2 [56], a_X2 [57], a_X2 [58], a_X2 [59], a_X2 [60], a_X2 [61], a_X2 [62], a_X2 [63] } = 0;
  assign { a_C2 [0], a_C2 [1], a_C2 [2], a_C2 [3], a_C2 [4], a_C2 [5], a_C2 [6], a_C2 [7], a_C2 [8], a_C2 [9], a_C2 [10], a_C2 [11], a_C2 [12], a_C2 [13], a_C2 [14], a_C2 [15], a_C2 [16], a_C2 [17], a_C2 [18], a_C2 [19], a_C2 [20], a_C2 [21], a_C2 [22], a_C2 [23], a_C2 [24], a_C2 [25], a_C2 [26], a_C2 [27], a_C2 [28], a_C2 [29], a_C2 [30], a_C2 [31], a_C2 [32], a_C2 [33], a_C2 [34], a_C2 [35], a_C2 [36], a_C2 [37], a_C2 [38], a_C2 [39], a_C2 [40], a_C2 [41], a_C2 [42], a_C2 [43], a_C2 [44], a_C2 [45], a_C2 [46], a_C2 [47], a_C2 [48], a_C2 [49], a_C2 [50], a_C2 [51], a_C2 [52], a_C2 [53], a_C2 [54], a_C2 [55], a_C2 [56], a_C2 [57], a_C2 [58], a_C2 [59], a_C2 [60], a_C2 [61], a_C2 [62], a_C2 [63] } = 0;
  logic [64:0] a_R3 ;
  logic [64:0] a_X3 ;
  logic [64:0] a_C3 ;
  assign a_R3 [64:64] = fangyuan0_R [77:77] ;
  assign a_X3 [64:64] = fangyuan0_X [77:77] ;
  assign a_C3 [64:64] = fangyuan0_C [77:77] ;
  assign { a_R3 [0], a_R3 [1], a_R3 [2], a_R3 [3], a_R3 [4], a_R3 [5], a_R3 [6], a_R3 [7], a_R3 [8], a_R3 [9], a_R3 [10], a_R3 [11], a_R3 [12], a_R3 [13], a_R3 [14], a_R3 [15], a_R3 [16], a_R3 [17], a_R3 [18], a_R3 [19], a_R3 [20], a_R3 [21], a_R3 [22], a_R3 [23], a_R3 [24], a_R3 [25], a_R3 [26], a_R3 [27], a_R3 [28], a_R3 [29], a_R3 [30], a_R3 [31], a_R3 [32], a_R3 [33], a_R3 [34], a_R3 [35], a_R3 [36], a_R3 [37], a_R3 [38], a_R3 [39], a_R3 [40], a_R3 [41], a_R3 [42], a_R3 [43], a_R3 [44], a_R3 [45], a_R3 [46], a_R3 [47], a_R3 [48], a_R3 [49], a_R3 [50], a_R3 [51], a_R3 [52], a_R3 [53], a_R3 [54], a_R3 [55], a_R3 [56], a_R3 [57], a_R3 [58], a_R3 [59], a_R3 [60], a_R3 [61], a_R3 [62], a_R3 [63] } = 0;
  assign { a_X3 [0], a_X3 [1], a_X3 [2], a_X3 [3], a_X3 [4], a_X3 [5], a_X3 [6], a_X3 [7], a_X3 [8], a_X3 [9], a_X3 [10], a_X3 [11], a_X3 [12], a_X3 [13], a_X3 [14], a_X3 [15], a_X3 [16], a_X3 [17], a_X3 [18], a_X3 [19], a_X3 [20], a_X3 [21], a_X3 [22], a_X3 [23], a_X3 [24], a_X3 [25], a_X3 [26], a_X3 [27], a_X3 [28], a_X3 [29], a_X3 [30], a_X3 [31], a_X3 [32], a_X3 [33], a_X3 [34], a_X3 [35], a_X3 [36], a_X3 [37], a_X3 [38], a_X3 [39], a_X3 [40], a_X3 [41], a_X3 [42], a_X3 [43], a_X3 [44], a_X3 [45], a_X3 [46], a_X3 [47], a_X3 [48], a_X3 [49], a_X3 [50], a_X3 [51], a_X3 [52], a_X3 [53], a_X3 [54], a_X3 [55], a_X3 [56], a_X3 [57], a_X3 [58], a_X3 [59], a_X3 [60], a_X3 [61], a_X3 [62], a_X3 [63] } = 0;
  assign { a_C3 [0], a_C3 [1], a_C3 [2], a_C3 [3], a_C3 [4], a_C3 [5], a_C3 [6], a_C3 [7], a_C3 [8], a_C3 [9], a_C3 [10], a_C3 [11], a_C3 [12], a_C3 [13], a_C3 [14], a_C3 [15], a_C3 [16], a_C3 [17], a_C3 [18], a_C3 [19], a_C3 [20], a_C3 [21], a_C3 [22], a_C3 [23], a_C3 [24], a_C3 [25], a_C3 [26], a_C3 [27], a_C3 [28], a_C3 [29], a_C3 [30], a_C3 [31], a_C3 [32], a_C3 [33], a_C3 [34], a_C3 [35], a_C3 [36], a_C3 [37], a_C3 [38], a_C3 [39], a_C3 [40], a_C3 [41], a_C3 [42], a_C3 [43], a_C3 [44], a_C3 [45], a_C3 [46], a_C3 [47], a_C3 [48], a_C3 [49], a_C3 [50], a_C3 [51], a_C3 [52], a_C3 [53], a_C3 [54], a_C3 [55], a_C3 [56], a_C3 [57], a_C3 [58], a_C3 [59], a_C3 [60], a_C3 [61], a_C3 [62], a_C3 [63] } = 0;
  logic [64:0] a_R4 ;
  logic [64:0] a_X4 ;
  logic [64:0] a_C4 ;
  assign a_R4 [64:64] = fangyuan0_R [76:76] ;
  assign a_X4 [64:64] = fangyuan0_X [76:76] ;
  assign a_C4 [64:64] = fangyuan0_C [76:76] ;
  assign { a_R4 [0], a_R4 [1], a_R4 [2], a_R4 [3], a_R4 [4], a_R4 [5], a_R4 [6], a_R4 [7], a_R4 [8], a_R4 [9], a_R4 [10], a_R4 [11], a_R4 [12], a_R4 [13], a_R4 [14], a_R4 [15], a_R4 [16], a_R4 [17], a_R4 [18], a_R4 [19], a_R4 [20], a_R4 [21], a_R4 [22], a_R4 [23], a_R4 [24], a_R4 [25], a_R4 [26], a_R4 [27], a_R4 [28], a_R4 [29], a_R4 [30], a_R4 [31], a_R4 [32], a_R4 [33], a_R4 [34], a_R4 [35], a_R4 [36], a_R4 [37], a_R4 [38], a_R4 [39], a_R4 [40], a_R4 [41], a_R4 [42], a_R4 [43], a_R4 [44], a_R4 [45], a_R4 [46], a_R4 [47], a_R4 [48], a_R4 [49], a_R4 [50], a_R4 [51], a_R4 [52], a_R4 [53], a_R4 [54], a_R4 [55], a_R4 [56], a_R4 [57], a_R4 [58], a_R4 [59], a_R4 [60], a_R4 [61], a_R4 [62], a_R4 [63] } = 0;
  assign { a_X4 [0], a_X4 [1], a_X4 [2], a_X4 [3], a_X4 [4], a_X4 [5], a_X4 [6], a_X4 [7], a_X4 [8], a_X4 [9], a_X4 [10], a_X4 [11], a_X4 [12], a_X4 [13], a_X4 [14], a_X4 [15], a_X4 [16], a_X4 [17], a_X4 [18], a_X4 [19], a_X4 [20], a_X4 [21], a_X4 [22], a_X4 [23], a_X4 [24], a_X4 [25], a_X4 [26], a_X4 [27], a_X4 [28], a_X4 [29], a_X4 [30], a_X4 [31], a_X4 [32], a_X4 [33], a_X4 [34], a_X4 [35], a_X4 [36], a_X4 [37], a_X4 [38], a_X4 [39], a_X4 [40], a_X4 [41], a_X4 [42], a_X4 [43], a_X4 [44], a_X4 [45], a_X4 [46], a_X4 [47], a_X4 [48], a_X4 [49], a_X4 [50], a_X4 [51], a_X4 [52], a_X4 [53], a_X4 [54], a_X4 [55], a_X4 [56], a_X4 [57], a_X4 [58], a_X4 [59], a_X4 [60], a_X4 [61], a_X4 [62], a_X4 [63] } = 0;
  assign { a_C4 [0], a_C4 [1], a_C4 [2], a_C4 [3], a_C4 [4], a_C4 [5], a_C4 [6], a_C4 [7], a_C4 [8], a_C4 [9], a_C4 [10], a_C4 [11], a_C4 [12], a_C4 [13], a_C4 [14], a_C4 [15], a_C4 [16], a_C4 [17], a_C4 [18], a_C4 [19], a_C4 [20], a_C4 [21], a_C4 [22], a_C4 [23], a_C4 [24], a_C4 [25], a_C4 [26], a_C4 [27], a_C4 [28], a_C4 [29], a_C4 [30], a_C4 [31], a_C4 [32], a_C4 [33], a_C4 [34], a_C4 [35], a_C4 [36], a_C4 [37], a_C4 [38], a_C4 [39], a_C4 [40], a_C4 [41], a_C4 [42], a_C4 [43], a_C4 [44], a_C4 [45], a_C4 [46], a_C4 [47], a_C4 [48], a_C4 [49], a_C4 [50], a_C4 [51], a_C4 [52], a_C4 [53], a_C4 [54], a_C4 [55], a_C4 [56], a_C4 [57], a_C4 [58], a_C4 [59], a_C4 [60], a_C4 [61], a_C4 [62], a_C4 [63] } = 0;
  logic [64:0] a_R5 ;
  logic [64:0] a_X5 ;
  logic [64:0] a_C5 ;
  assign a_R5 [64:64] = fangyuan0_R [75:75] ;
  assign a_X5 [64:64] = fangyuan0_X [75:75] ;
  assign a_C5 [64:64] = fangyuan0_C [75:75] ;
  assign { a_R5 [0], a_R5 [1], a_R5 [2], a_R5 [3], a_R5 [4], a_R5 [5], a_R5 [6], a_R5 [7], a_R5 [8], a_R5 [9], a_R5 [10], a_R5 [11], a_R5 [12], a_R5 [13], a_R5 [14], a_R5 [15], a_R5 [16], a_R5 [17], a_R5 [18], a_R5 [19], a_R5 [20], a_R5 [21], a_R5 [22], a_R5 [23], a_R5 [24], a_R5 [25], a_R5 [26], a_R5 [27], a_R5 [28], a_R5 [29], a_R5 [30], a_R5 [31], a_R5 [32], a_R5 [33], a_R5 [34], a_R5 [35], a_R5 [36], a_R5 [37], a_R5 [38], a_R5 [39], a_R5 [40], a_R5 [41], a_R5 [42], a_R5 [43], a_R5 [44], a_R5 [45], a_R5 [46], a_R5 [47], a_R5 [48], a_R5 [49], a_R5 [50], a_R5 [51], a_R5 [52], a_R5 [53], a_R5 [54], a_R5 [55], a_R5 [56], a_R5 [57], a_R5 [58], a_R5 [59], a_R5 [60], a_R5 [61], a_R5 [62], a_R5 [63] } = 0;
  assign { a_X5 [0], a_X5 [1], a_X5 [2], a_X5 [3], a_X5 [4], a_X5 [5], a_X5 [6], a_X5 [7], a_X5 [8], a_X5 [9], a_X5 [10], a_X5 [11], a_X5 [12], a_X5 [13], a_X5 [14], a_X5 [15], a_X5 [16], a_X5 [17], a_X5 [18], a_X5 [19], a_X5 [20], a_X5 [21], a_X5 [22], a_X5 [23], a_X5 [24], a_X5 [25], a_X5 [26], a_X5 [27], a_X5 [28], a_X5 [29], a_X5 [30], a_X5 [31], a_X5 [32], a_X5 [33], a_X5 [34], a_X5 [35], a_X5 [36], a_X5 [37], a_X5 [38], a_X5 [39], a_X5 [40], a_X5 [41], a_X5 [42], a_X5 [43], a_X5 [44], a_X5 [45], a_X5 [46], a_X5 [47], a_X5 [48], a_X5 [49], a_X5 [50], a_X5 [51], a_X5 [52], a_X5 [53], a_X5 [54], a_X5 [55], a_X5 [56], a_X5 [57], a_X5 [58], a_X5 [59], a_X5 [60], a_X5 [61], a_X5 [62], a_X5 [63] } = 0;
  assign { a_C5 [0], a_C5 [1], a_C5 [2], a_C5 [3], a_C5 [4], a_C5 [5], a_C5 [6], a_C5 [7], a_C5 [8], a_C5 [9], a_C5 [10], a_C5 [11], a_C5 [12], a_C5 [13], a_C5 [14], a_C5 [15], a_C5 [16], a_C5 [17], a_C5 [18], a_C5 [19], a_C5 [20], a_C5 [21], a_C5 [22], a_C5 [23], a_C5 [24], a_C5 [25], a_C5 [26], a_C5 [27], a_C5 [28], a_C5 [29], a_C5 [30], a_C5 [31], a_C5 [32], a_C5 [33], a_C5 [34], a_C5 [35], a_C5 [36], a_C5 [37], a_C5 [38], a_C5 [39], a_C5 [40], a_C5 [41], a_C5 [42], a_C5 [43], a_C5 [44], a_C5 [45], a_C5 [46], a_C5 [47], a_C5 [48], a_C5 [49], a_C5 [50], a_C5 [51], a_C5 [52], a_C5 [53], a_C5 [54], a_C5 [55], a_C5 [56], a_C5 [57], a_C5 [58], a_C5 [59], a_C5 [60], a_C5 [61], a_C5 [62], a_C5 [63] } = 0;
  logic [64:0] a_R6 ;
  logic [64:0] a_X6 ;
  logic [64:0] a_C6 ;
  assign a_R6 [64:64] = fangyuan0_R [74:74] ;
  assign a_X6 [64:64] = fangyuan0_X [74:74] ;
  assign a_C6 [64:64] = fangyuan0_C [74:74] ;
  assign { a_R6 [0], a_R6 [1], a_R6 [2], a_R6 [3], a_R6 [4], a_R6 [5], a_R6 [6], a_R6 [7], a_R6 [8], a_R6 [9], a_R6 [10], a_R6 [11], a_R6 [12], a_R6 [13], a_R6 [14], a_R6 [15], a_R6 [16], a_R6 [17], a_R6 [18], a_R6 [19], a_R6 [20], a_R6 [21], a_R6 [22], a_R6 [23], a_R6 [24], a_R6 [25], a_R6 [26], a_R6 [27], a_R6 [28], a_R6 [29], a_R6 [30], a_R6 [31], a_R6 [32], a_R6 [33], a_R6 [34], a_R6 [35], a_R6 [36], a_R6 [37], a_R6 [38], a_R6 [39], a_R6 [40], a_R6 [41], a_R6 [42], a_R6 [43], a_R6 [44], a_R6 [45], a_R6 [46], a_R6 [47], a_R6 [48], a_R6 [49], a_R6 [50], a_R6 [51], a_R6 [52], a_R6 [53], a_R6 [54], a_R6 [55], a_R6 [56], a_R6 [57], a_R6 [58], a_R6 [59], a_R6 [60], a_R6 [61], a_R6 [62], a_R6 [63] } = 0;
  assign { a_X6 [0], a_X6 [1], a_X6 [2], a_X6 [3], a_X6 [4], a_X6 [5], a_X6 [6], a_X6 [7], a_X6 [8], a_X6 [9], a_X6 [10], a_X6 [11], a_X6 [12], a_X6 [13], a_X6 [14], a_X6 [15], a_X6 [16], a_X6 [17], a_X6 [18], a_X6 [19], a_X6 [20], a_X6 [21], a_X6 [22], a_X6 [23], a_X6 [24], a_X6 [25], a_X6 [26], a_X6 [27], a_X6 [28], a_X6 [29], a_X6 [30], a_X6 [31], a_X6 [32], a_X6 [33], a_X6 [34], a_X6 [35], a_X6 [36], a_X6 [37], a_X6 [38], a_X6 [39], a_X6 [40], a_X6 [41], a_X6 [42], a_X6 [43], a_X6 [44], a_X6 [45], a_X6 [46], a_X6 [47], a_X6 [48], a_X6 [49], a_X6 [50], a_X6 [51], a_X6 [52], a_X6 [53], a_X6 [54], a_X6 [55], a_X6 [56], a_X6 [57], a_X6 [58], a_X6 [59], a_X6 [60], a_X6 [61], a_X6 [62], a_X6 [63] } = 0;
  assign { a_C6 [0], a_C6 [1], a_C6 [2], a_C6 [3], a_C6 [4], a_C6 [5], a_C6 [6], a_C6 [7], a_C6 [8], a_C6 [9], a_C6 [10], a_C6 [11], a_C6 [12], a_C6 [13], a_C6 [14], a_C6 [15], a_C6 [16], a_C6 [17], a_C6 [18], a_C6 [19], a_C6 [20], a_C6 [21], a_C6 [22], a_C6 [23], a_C6 [24], a_C6 [25], a_C6 [26], a_C6 [27], a_C6 [28], a_C6 [29], a_C6 [30], a_C6 [31], a_C6 [32], a_C6 [33], a_C6 [34], a_C6 [35], a_C6 [36], a_C6 [37], a_C6 [38], a_C6 [39], a_C6 [40], a_C6 [41], a_C6 [42], a_C6 [43], a_C6 [44], a_C6 [45], a_C6 [46], a_C6 [47], a_C6 [48], a_C6 [49], a_C6 [50], a_C6 [51], a_C6 [52], a_C6 [53], a_C6 [54], a_C6 [55], a_C6 [56], a_C6 [57], a_C6 [58], a_C6 [59], a_C6 [60], a_C6 [61], a_C6 [62], a_C6 [63] } = 0;
  logic [64:0] a_R7 ;
  logic [64:0] a_X7 ;
  logic [64:0] a_C7 ;
  assign a_R7 [64:64] = fangyuan0_R [73:73] ;
  assign a_X7 [64:64] = fangyuan0_X [73:73] ;
  assign a_C7 [64:64] = fangyuan0_C [73:73] ;
  assign { a_R7 [0], a_R7 [1], a_R7 [2], a_R7 [3], a_R7 [4], a_R7 [5], a_R7 [6], a_R7 [7], a_R7 [8], a_R7 [9], a_R7 [10], a_R7 [11], a_R7 [12], a_R7 [13], a_R7 [14], a_R7 [15], a_R7 [16], a_R7 [17], a_R7 [18], a_R7 [19], a_R7 [20], a_R7 [21], a_R7 [22], a_R7 [23], a_R7 [24], a_R7 [25], a_R7 [26], a_R7 [27], a_R7 [28], a_R7 [29], a_R7 [30], a_R7 [31], a_R7 [32], a_R7 [33], a_R7 [34], a_R7 [35], a_R7 [36], a_R7 [37], a_R7 [38], a_R7 [39], a_R7 [40], a_R7 [41], a_R7 [42], a_R7 [43], a_R7 [44], a_R7 [45], a_R7 [46], a_R7 [47], a_R7 [48], a_R7 [49], a_R7 [50], a_R7 [51], a_R7 [52], a_R7 [53], a_R7 [54], a_R7 [55], a_R7 [56], a_R7 [57], a_R7 [58], a_R7 [59], a_R7 [60], a_R7 [61], a_R7 [62], a_R7 [63] } = 0;
  assign { a_X7 [0], a_X7 [1], a_X7 [2], a_X7 [3], a_X7 [4], a_X7 [5], a_X7 [6], a_X7 [7], a_X7 [8], a_X7 [9], a_X7 [10], a_X7 [11], a_X7 [12], a_X7 [13], a_X7 [14], a_X7 [15], a_X7 [16], a_X7 [17], a_X7 [18], a_X7 [19], a_X7 [20], a_X7 [21], a_X7 [22], a_X7 [23], a_X7 [24], a_X7 [25], a_X7 [26], a_X7 [27], a_X7 [28], a_X7 [29], a_X7 [30], a_X7 [31], a_X7 [32], a_X7 [33], a_X7 [34], a_X7 [35], a_X7 [36], a_X7 [37], a_X7 [38], a_X7 [39], a_X7 [40], a_X7 [41], a_X7 [42], a_X7 [43], a_X7 [44], a_X7 [45], a_X7 [46], a_X7 [47], a_X7 [48], a_X7 [49], a_X7 [50], a_X7 [51], a_X7 [52], a_X7 [53], a_X7 [54], a_X7 [55], a_X7 [56], a_X7 [57], a_X7 [58], a_X7 [59], a_X7 [60], a_X7 [61], a_X7 [62], a_X7 [63] } = 0;
  assign { a_C7 [0], a_C7 [1], a_C7 [2], a_C7 [3], a_C7 [4], a_C7 [5], a_C7 [6], a_C7 [7], a_C7 [8], a_C7 [9], a_C7 [10], a_C7 [11], a_C7 [12], a_C7 [13], a_C7 [14], a_C7 [15], a_C7 [16], a_C7 [17], a_C7 [18], a_C7 [19], a_C7 [20], a_C7 [21], a_C7 [22], a_C7 [23], a_C7 [24], a_C7 [25], a_C7 [26], a_C7 [27], a_C7 [28], a_C7 [29], a_C7 [30], a_C7 [31], a_C7 [32], a_C7 [33], a_C7 [34], a_C7 [35], a_C7 [36], a_C7 [37], a_C7 [38], a_C7 [39], a_C7 [40], a_C7 [41], a_C7 [42], a_C7 [43], a_C7 [44], a_C7 [45], a_C7 [46], a_C7 [47], a_C7 [48], a_C7 [49], a_C7 [50], a_C7 [51], a_C7 [52], a_C7 [53], a_C7 [54], a_C7 [55], a_C7 [56], a_C7 [57], a_C7 [58], a_C7 [59], a_C7 [60], a_C7 [61], a_C7 [62], a_C7 [63] } = 0;
  logic [64:0] a_R8 ;
  logic [64:0] a_X8 ;
  logic [64:0] a_C8 ;
  assign a_R8 [64:64] = fangyuan0_R [72:72] ;
  assign a_X8 [64:64] = fangyuan0_X [72:72] ;
  assign a_C8 [64:64] = fangyuan0_C [72:72] ;
  assign { a_R8 [0], a_R8 [1], a_R8 [2], a_R8 [3], a_R8 [4], a_R8 [5], a_R8 [6], a_R8 [7], a_R8 [8], a_R8 [9], a_R8 [10], a_R8 [11], a_R8 [12], a_R8 [13], a_R8 [14], a_R8 [15], a_R8 [16], a_R8 [17], a_R8 [18], a_R8 [19], a_R8 [20], a_R8 [21], a_R8 [22], a_R8 [23], a_R8 [24], a_R8 [25], a_R8 [26], a_R8 [27], a_R8 [28], a_R8 [29], a_R8 [30], a_R8 [31], a_R8 [32], a_R8 [33], a_R8 [34], a_R8 [35], a_R8 [36], a_R8 [37], a_R8 [38], a_R8 [39], a_R8 [40], a_R8 [41], a_R8 [42], a_R8 [43], a_R8 [44], a_R8 [45], a_R8 [46], a_R8 [47], a_R8 [48], a_R8 [49], a_R8 [50], a_R8 [51], a_R8 [52], a_R8 [53], a_R8 [54], a_R8 [55], a_R8 [56], a_R8 [57], a_R8 [58], a_R8 [59], a_R8 [60], a_R8 [61], a_R8 [62], a_R8 [63] } = 0;
  assign { a_X8 [0], a_X8 [1], a_X8 [2], a_X8 [3], a_X8 [4], a_X8 [5], a_X8 [6], a_X8 [7], a_X8 [8], a_X8 [9], a_X8 [10], a_X8 [11], a_X8 [12], a_X8 [13], a_X8 [14], a_X8 [15], a_X8 [16], a_X8 [17], a_X8 [18], a_X8 [19], a_X8 [20], a_X8 [21], a_X8 [22], a_X8 [23], a_X8 [24], a_X8 [25], a_X8 [26], a_X8 [27], a_X8 [28], a_X8 [29], a_X8 [30], a_X8 [31], a_X8 [32], a_X8 [33], a_X8 [34], a_X8 [35], a_X8 [36], a_X8 [37], a_X8 [38], a_X8 [39], a_X8 [40], a_X8 [41], a_X8 [42], a_X8 [43], a_X8 [44], a_X8 [45], a_X8 [46], a_X8 [47], a_X8 [48], a_X8 [49], a_X8 [50], a_X8 [51], a_X8 [52], a_X8 [53], a_X8 [54], a_X8 [55], a_X8 [56], a_X8 [57], a_X8 [58], a_X8 [59], a_X8 [60], a_X8 [61], a_X8 [62], a_X8 [63] } = 0;
  assign { a_C8 [0], a_C8 [1], a_C8 [2], a_C8 [3], a_C8 [4], a_C8 [5], a_C8 [6], a_C8 [7], a_C8 [8], a_C8 [9], a_C8 [10], a_C8 [11], a_C8 [12], a_C8 [13], a_C8 [14], a_C8 [15], a_C8 [16], a_C8 [17], a_C8 [18], a_C8 [19], a_C8 [20], a_C8 [21], a_C8 [22], a_C8 [23], a_C8 [24], a_C8 [25], a_C8 [26], a_C8 [27], a_C8 [28], a_C8 [29], a_C8 [30], a_C8 [31], a_C8 [32], a_C8 [33], a_C8 [34], a_C8 [35], a_C8 [36], a_C8 [37], a_C8 [38], a_C8 [39], a_C8 [40], a_C8 [41], a_C8 [42], a_C8 [43], a_C8 [44], a_C8 [45], a_C8 [46], a_C8 [47], a_C8 [48], a_C8 [49], a_C8 [50], a_C8 [51], a_C8 [52], a_C8 [53], a_C8 [54], a_C8 [55], a_C8 [56], a_C8 [57], a_C8 [58], a_C8 [59], a_C8 [60], a_C8 [61], a_C8 [62], a_C8 [63] } = 0;
  logic [64:0] a_R9 ;
  logic [64:0] a_X9 ;
  logic [64:0] a_C9 ;
  assign a_R9 [64:64] = fangyuan0_R [71:71] ;
  assign a_X9 [64:64] = fangyuan0_X [71:71] ;
  assign a_C9 [64:64] = fangyuan0_C [71:71] ;
  assign { a_R9 [0], a_R9 [1], a_R9 [2], a_R9 [3], a_R9 [4], a_R9 [5], a_R9 [6], a_R9 [7], a_R9 [8], a_R9 [9], a_R9 [10], a_R9 [11], a_R9 [12], a_R9 [13], a_R9 [14], a_R9 [15], a_R9 [16], a_R9 [17], a_R9 [18], a_R9 [19], a_R9 [20], a_R9 [21], a_R9 [22], a_R9 [23], a_R9 [24], a_R9 [25], a_R9 [26], a_R9 [27], a_R9 [28], a_R9 [29], a_R9 [30], a_R9 [31], a_R9 [32], a_R9 [33], a_R9 [34], a_R9 [35], a_R9 [36], a_R9 [37], a_R9 [38], a_R9 [39], a_R9 [40], a_R9 [41], a_R9 [42], a_R9 [43], a_R9 [44], a_R9 [45], a_R9 [46], a_R9 [47], a_R9 [48], a_R9 [49], a_R9 [50], a_R9 [51], a_R9 [52], a_R9 [53], a_R9 [54], a_R9 [55], a_R9 [56], a_R9 [57], a_R9 [58], a_R9 [59], a_R9 [60], a_R9 [61], a_R9 [62], a_R9 [63] } = 0;
  assign { a_X9 [0], a_X9 [1], a_X9 [2], a_X9 [3], a_X9 [4], a_X9 [5], a_X9 [6], a_X9 [7], a_X9 [8], a_X9 [9], a_X9 [10], a_X9 [11], a_X9 [12], a_X9 [13], a_X9 [14], a_X9 [15], a_X9 [16], a_X9 [17], a_X9 [18], a_X9 [19], a_X9 [20], a_X9 [21], a_X9 [22], a_X9 [23], a_X9 [24], a_X9 [25], a_X9 [26], a_X9 [27], a_X9 [28], a_X9 [29], a_X9 [30], a_X9 [31], a_X9 [32], a_X9 [33], a_X9 [34], a_X9 [35], a_X9 [36], a_X9 [37], a_X9 [38], a_X9 [39], a_X9 [40], a_X9 [41], a_X9 [42], a_X9 [43], a_X9 [44], a_X9 [45], a_X9 [46], a_X9 [47], a_X9 [48], a_X9 [49], a_X9 [50], a_X9 [51], a_X9 [52], a_X9 [53], a_X9 [54], a_X9 [55], a_X9 [56], a_X9 [57], a_X9 [58], a_X9 [59], a_X9 [60], a_X9 [61], a_X9 [62], a_X9 [63] } = 0;
  assign { a_C9 [0], a_C9 [1], a_C9 [2], a_C9 [3], a_C9 [4], a_C9 [5], a_C9 [6], a_C9 [7], a_C9 [8], a_C9 [9], a_C9 [10], a_C9 [11], a_C9 [12], a_C9 [13], a_C9 [14], a_C9 [15], a_C9 [16], a_C9 [17], a_C9 [18], a_C9 [19], a_C9 [20], a_C9 [21], a_C9 [22], a_C9 [23], a_C9 [24], a_C9 [25], a_C9 [26], a_C9 [27], a_C9 [28], a_C9 [29], a_C9 [30], a_C9 [31], a_C9 [32], a_C9 [33], a_C9 [34], a_C9 [35], a_C9 [36], a_C9 [37], a_C9 [38], a_C9 [39], a_C9 [40], a_C9 [41], a_C9 [42], a_C9 [43], a_C9 [44], a_C9 [45], a_C9 [46], a_C9 [47], a_C9 [48], a_C9 [49], a_C9 [50], a_C9 [51], a_C9 [52], a_C9 [53], a_C9 [54], a_C9 [55], a_C9 [56], a_C9 [57], a_C9 [58], a_C9 [59], a_C9 [60], a_C9 [61], a_C9 [62], a_C9 [63] } = 0;
  logic [64:0] a_R10 ;
  logic [64:0] a_X10 ;
  logic [64:0] a_C10 ;
  assign a_R10 [64:64] = fangyuan0_R [70:70] ;
  assign a_X10 [64:64] = fangyuan0_X [70:70] ;
  assign a_C10 [64:64] = fangyuan0_C [70:70] ;
  assign { a_R10 [0], a_R10 [1], a_R10 [2], a_R10 [3], a_R10 [4], a_R10 [5], a_R10 [6], a_R10 [7], a_R10 [8], a_R10 [9], a_R10 [10], a_R10 [11], a_R10 [12], a_R10 [13], a_R10 [14], a_R10 [15], a_R10 [16], a_R10 [17], a_R10 [18], a_R10 [19], a_R10 [20], a_R10 [21], a_R10 [22], a_R10 [23], a_R10 [24], a_R10 [25], a_R10 [26], a_R10 [27], a_R10 [28], a_R10 [29], a_R10 [30], a_R10 [31], a_R10 [32], a_R10 [33], a_R10 [34], a_R10 [35], a_R10 [36], a_R10 [37], a_R10 [38], a_R10 [39], a_R10 [40], a_R10 [41], a_R10 [42], a_R10 [43], a_R10 [44], a_R10 [45], a_R10 [46], a_R10 [47], a_R10 [48], a_R10 [49], a_R10 [50], a_R10 [51], a_R10 [52], a_R10 [53], a_R10 [54], a_R10 [55], a_R10 [56], a_R10 [57], a_R10 [58], a_R10 [59], a_R10 [60], a_R10 [61], a_R10 [62], a_R10 [63] } = 0;
  assign { a_X10 [0], a_X10 [1], a_X10 [2], a_X10 [3], a_X10 [4], a_X10 [5], a_X10 [6], a_X10 [7], a_X10 [8], a_X10 [9], a_X10 [10], a_X10 [11], a_X10 [12], a_X10 [13], a_X10 [14], a_X10 [15], a_X10 [16], a_X10 [17], a_X10 [18], a_X10 [19], a_X10 [20], a_X10 [21], a_X10 [22], a_X10 [23], a_X10 [24], a_X10 [25], a_X10 [26], a_X10 [27], a_X10 [28], a_X10 [29], a_X10 [30], a_X10 [31], a_X10 [32], a_X10 [33], a_X10 [34], a_X10 [35], a_X10 [36], a_X10 [37], a_X10 [38], a_X10 [39], a_X10 [40], a_X10 [41], a_X10 [42], a_X10 [43], a_X10 [44], a_X10 [45], a_X10 [46], a_X10 [47], a_X10 [48], a_X10 [49], a_X10 [50], a_X10 [51], a_X10 [52], a_X10 [53], a_X10 [54], a_X10 [55], a_X10 [56], a_X10 [57], a_X10 [58], a_X10 [59], a_X10 [60], a_X10 [61], a_X10 [62], a_X10 [63] } = 0;
  assign { a_C10 [0], a_C10 [1], a_C10 [2], a_C10 [3], a_C10 [4], a_C10 [5], a_C10 [6], a_C10 [7], a_C10 [8], a_C10 [9], a_C10 [10], a_C10 [11], a_C10 [12], a_C10 [13], a_C10 [14], a_C10 [15], a_C10 [16], a_C10 [17], a_C10 [18], a_C10 [19], a_C10 [20], a_C10 [21], a_C10 [22], a_C10 [23], a_C10 [24], a_C10 [25], a_C10 [26], a_C10 [27], a_C10 [28], a_C10 [29], a_C10 [30], a_C10 [31], a_C10 [32], a_C10 [33], a_C10 [34], a_C10 [35], a_C10 [36], a_C10 [37], a_C10 [38], a_C10 [39], a_C10 [40], a_C10 [41], a_C10 [42], a_C10 [43], a_C10 [44], a_C10 [45], a_C10 [46], a_C10 [47], a_C10 [48], a_C10 [49], a_C10 [50], a_C10 [51], a_C10 [52], a_C10 [53], a_C10 [54], a_C10 [55], a_C10 [56], a_C10 [57], a_C10 [58], a_C10 [59], a_C10 [60], a_C10 [61], a_C10 [62], a_C10 [63] } = 0;
  logic [64:0] a_R11 ;
  logic [64:0] a_X11 ;
  logic [64:0] a_C11 ;
  assign a_R11 [64:64] = fangyuan0_R [69:69] ;
  assign a_X11 [64:64] = fangyuan0_X [69:69] ;
  assign a_C11 [64:64] = fangyuan0_C [69:69] ;
  assign { a_R11 [0], a_R11 [1], a_R11 [2], a_R11 [3], a_R11 [4], a_R11 [5], a_R11 [6], a_R11 [7], a_R11 [8], a_R11 [9], a_R11 [10], a_R11 [11], a_R11 [12], a_R11 [13], a_R11 [14], a_R11 [15], a_R11 [16], a_R11 [17], a_R11 [18], a_R11 [19], a_R11 [20], a_R11 [21], a_R11 [22], a_R11 [23], a_R11 [24], a_R11 [25], a_R11 [26], a_R11 [27], a_R11 [28], a_R11 [29], a_R11 [30], a_R11 [31], a_R11 [32], a_R11 [33], a_R11 [34], a_R11 [35], a_R11 [36], a_R11 [37], a_R11 [38], a_R11 [39], a_R11 [40], a_R11 [41], a_R11 [42], a_R11 [43], a_R11 [44], a_R11 [45], a_R11 [46], a_R11 [47], a_R11 [48], a_R11 [49], a_R11 [50], a_R11 [51], a_R11 [52], a_R11 [53], a_R11 [54], a_R11 [55], a_R11 [56], a_R11 [57], a_R11 [58], a_R11 [59], a_R11 [60], a_R11 [61], a_R11 [62], a_R11 [63] } = 0;
  assign { a_X11 [0], a_X11 [1], a_X11 [2], a_X11 [3], a_X11 [4], a_X11 [5], a_X11 [6], a_X11 [7], a_X11 [8], a_X11 [9], a_X11 [10], a_X11 [11], a_X11 [12], a_X11 [13], a_X11 [14], a_X11 [15], a_X11 [16], a_X11 [17], a_X11 [18], a_X11 [19], a_X11 [20], a_X11 [21], a_X11 [22], a_X11 [23], a_X11 [24], a_X11 [25], a_X11 [26], a_X11 [27], a_X11 [28], a_X11 [29], a_X11 [30], a_X11 [31], a_X11 [32], a_X11 [33], a_X11 [34], a_X11 [35], a_X11 [36], a_X11 [37], a_X11 [38], a_X11 [39], a_X11 [40], a_X11 [41], a_X11 [42], a_X11 [43], a_X11 [44], a_X11 [45], a_X11 [46], a_X11 [47], a_X11 [48], a_X11 [49], a_X11 [50], a_X11 [51], a_X11 [52], a_X11 [53], a_X11 [54], a_X11 [55], a_X11 [56], a_X11 [57], a_X11 [58], a_X11 [59], a_X11 [60], a_X11 [61], a_X11 [62], a_X11 [63] } = 0;
  assign { a_C11 [0], a_C11 [1], a_C11 [2], a_C11 [3], a_C11 [4], a_C11 [5], a_C11 [6], a_C11 [7], a_C11 [8], a_C11 [9], a_C11 [10], a_C11 [11], a_C11 [12], a_C11 [13], a_C11 [14], a_C11 [15], a_C11 [16], a_C11 [17], a_C11 [18], a_C11 [19], a_C11 [20], a_C11 [21], a_C11 [22], a_C11 [23], a_C11 [24], a_C11 [25], a_C11 [26], a_C11 [27], a_C11 [28], a_C11 [29], a_C11 [30], a_C11 [31], a_C11 [32], a_C11 [33], a_C11 [34], a_C11 [35], a_C11 [36], a_C11 [37], a_C11 [38], a_C11 [39], a_C11 [40], a_C11 [41], a_C11 [42], a_C11 [43], a_C11 [44], a_C11 [45], a_C11 [46], a_C11 [47], a_C11 [48], a_C11 [49], a_C11 [50], a_C11 [51], a_C11 [52], a_C11 [53], a_C11 [54], a_C11 [55], a_C11 [56], a_C11 [57], a_C11 [58], a_C11 [59], a_C11 [60], a_C11 [61], a_C11 [62], a_C11 [63] } = 0;
  logic [64:0] a_R12 ;
  logic [64:0] a_X12 ;
  logic [64:0] a_C12 ;
  assign a_R12 [64:64] = fangyuan0_R [68:68] ;
  assign a_X12 [64:64] = fangyuan0_X [68:68] ;
  assign a_C12 [64:64] = fangyuan0_C [68:68] ;
  assign { a_R12 [0], a_R12 [1], a_R12 [2], a_R12 [3], a_R12 [4], a_R12 [5], a_R12 [6], a_R12 [7], a_R12 [8], a_R12 [9], a_R12 [10], a_R12 [11], a_R12 [12], a_R12 [13], a_R12 [14], a_R12 [15], a_R12 [16], a_R12 [17], a_R12 [18], a_R12 [19], a_R12 [20], a_R12 [21], a_R12 [22], a_R12 [23], a_R12 [24], a_R12 [25], a_R12 [26], a_R12 [27], a_R12 [28], a_R12 [29], a_R12 [30], a_R12 [31], a_R12 [32], a_R12 [33], a_R12 [34], a_R12 [35], a_R12 [36], a_R12 [37], a_R12 [38], a_R12 [39], a_R12 [40], a_R12 [41], a_R12 [42], a_R12 [43], a_R12 [44], a_R12 [45], a_R12 [46], a_R12 [47], a_R12 [48], a_R12 [49], a_R12 [50], a_R12 [51], a_R12 [52], a_R12 [53], a_R12 [54], a_R12 [55], a_R12 [56], a_R12 [57], a_R12 [58], a_R12 [59], a_R12 [60], a_R12 [61], a_R12 [62], a_R12 [63] } = 0;
  assign { a_X12 [0], a_X12 [1], a_X12 [2], a_X12 [3], a_X12 [4], a_X12 [5], a_X12 [6], a_X12 [7], a_X12 [8], a_X12 [9], a_X12 [10], a_X12 [11], a_X12 [12], a_X12 [13], a_X12 [14], a_X12 [15], a_X12 [16], a_X12 [17], a_X12 [18], a_X12 [19], a_X12 [20], a_X12 [21], a_X12 [22], a_X12 [23], a_X12 [24], a_X12 [25], a_X12 [26], a_X12 [27], a_X12 [28], a_X12 [29], a_X12 [30], a_X12 [31], a_X12 [32], a_X12 [33], a_X12 [34], a_X12 [35], a_X12 [36], a_X12 [37], a_X12 [38], a_X12 [39], a_X12 [40], a_X12 [41], a_X12 [42], a_X12 [43], a_X12 [44], a_X12 [45], a_X12 [46], a_X12 [47], a_X12 [48], a_X12 [49], a_X12 [50], a_X12 [51], a_X12 [52], a_X12 [53], a_X12 [54], a_X12 [55], a_X12 [56], a_X12 [57], a_X12 [58], a_X12 [59], a_X12 [60], a_X12 [61], a_X12 [62], a_X12 [63] } = 0;
  assign { a_C12 [0], a_C12 [1], a_C12 [2], a_C12 [3], a_C12 [4], a_C12 [5], a_C12 [6], a_C12 [7], a_C12 [8], a_C12 [9], a_C12 [10], a_C12 [11], a_C12 [12], a_C12 [13], a_C12 [14], a_C12 [15], a_C12 [16], a_C12 [17], a_C12 [18], a_C12 [19], a_C12 [20], a_C12 [21], a_C12 [22], a_C12 [23], a_C12 [24], a_C12 [25], a_C12 [26], a_C12 [27], a_C12 [28], a_C12 [29], a_C12 [30], a_C12 [31], a_C12 [32], a_C12 [33], a_C12 [34], a_C12 [35], a_C12 [36], a_C12 [37], a_C12 [38], a_C12 [39], a_C12 [40], a_C12 [41], a_C12 [42], a_C12 [43], a_C12 [44], a_C12 [45], a_C12 [46], a_C12 [47], a_C12 [48], a_C12 [49], a_C12 [50], a_C12 [51], a_C12 [52], a_C12 [53], a_C12 [54], a_C12 [55], a_C12 [56], a_C12 [57], a_C12 [58], a_C12 [59], a_C12 [60], a_C12 [61], a_C12 [62], a_C12 [63] } = 0;
  logic [64:0] a_R13 ;
  logic [64:0] a_X13 ;
  logic [64:0] a_C13 ;
  assign a_R13 [64:64] = fangyuan0_R [67:67] ;
  assign a_X13 [64:64] = fangyuan0_X [67:67] ;
  assign a_C13 [64:64] = fangyuan0_C [67:67] ;
  assign { a_R13 [0], a_R13 [1], a_R13 [2], a_R13 [3], a_R13 [4], a_R13 [5], a_R13 [6], a_R13 [7], a_R13 [8], a_R13 [9], a_R13 [10], a_R13 [11], a_R13 [12], a_R13 [13], a_R13 [14], a_R13 [15], a_R13 [16], a_R13 [17], a_R13 [18], a_R13 [19], a_R13 [20], a_R13 [21], a_R13 [22], a_R13 [23], a_R13 [24], a_R13 [25], a_R13 [26], a_R13 [27], a_R13 [28], a_R13 [29], a_R13 [30], a_R13 [31], a_R13 [32], a_R13 [33], a_R13 [34], a_R13 [35], a_R13 [36], a_R13 [37], a_R13 [38], a_R13 [39], a_R13 [40], a_R13 [41], a_R13 [42], a_R13 [43], a_R13 [44], a_R13 [45], a_R13 [46], a_R13 [47], a_R13 [48], a_R13 [49], a_R13 [50], a_R13 [51], a_R13 [52], a_R13 [53], a_R13 [54], a_R13 [55], a_R13 [56], a_R13 [57], a_R13 [58], a_R13 [59], a_R13 [60], a_R13 [61], a_R13 [62], a_R13 [63] } = 0;
  assign { a_X13 [0], a_X13 [1], a_X13 [2], a_X13 [3], a_X13 [4], a_X13 [5], a_X13 [6], a_X13 [7], a_X13 [8], a_X13 [9], a_X13 [10], a_X13 [11], a_X13 [12], a_X13 [13], a_X13 [14], a_X13 [15], a_X13 [16], a_X13 [17], a_X13 [18], a_X13 [19], a_X13 [20], a_X13 [21], a_X13 [22], a_X13 [23], a_X13 [24], a_X13 [25], a_X13 [26], a_X13 [27], a_X13 [28], a_X13 [29], a_X13 [30], a_X13 [31], a_X13 [32], a_X13 [33], a_X13 [34], a_X13 [35], a_X13 [36], a_X13 [37], a_X13 [38], a_X13 [39], a_X13 [40], a_X13 [41], a_X13 [42], a_X13 [43], a_X13 [44], a_X13 [45], a_X13 [46], a_X13 [47], a_X13 [48], a_X13 [49], a_X13 [50], a_X13 [51], a_X13 [52], a_X13 [53], a_X13 [54], a_X13 [55], a_X13 [56], a_X13 [57], a_X13 [58], a_X13 [59], a_X13 [60], a_X13 [61], a_X13 [62], a_X13 [63] } = 0;
  assign { a_C13 [0], a_C13 [1], a_C13 [2], a_C13 [3], a_C13 [4], a_C13 [5], a_C13 [6], a_C13 [7], a_C13 [8], a_C13 [9], a_C13 [10], a_C13 [11], a_C13 [12], a_C13 [13], a_C13 [14], a_C13 [15], a_C13 [16], a_C13 [17], a_C13 [18], a_C13 [19], a_C13 [20], a_C13 [21], a_C13 [22], a_C13 [23], a_C13 [24], a_C13 [25], a_C13 [26], a_C13 [27], a_C13 [28], a_C13 [29], a_C13 [30], a_C13 [31], a_C13 [32], a_C13 [33], a_C13 [34], a_C13 [35], a_C13 [36], a_C13 [37], a_C13 [38], a_C13 [39], a_C13 [40], a_C13 [41], a_C13 [42], a_C13 [43], a_C13 [44], a_C13 [45], a_C13 [46], a_C13 [47], a_C13 [48], a_C13 [49], a_C13 [50], a_C13 [51], a_C13 [52], a_C13 [53], a_C13 [54], a_C13 [55], a_C13 [56], a_C13 [57], a_C13 [58], a_C13 [59], a_C13 [60], a_C13 [61], a_C13 [62], a_C13 [63] } = 0;
  logic [64:0] a_R14 ;
  logic [64:0] a_X14 ;
  logic [64:0] a_C14 ;
  assign a_R14 [64:64] = fangyuan0_R [66:66] ;
  assign a_X14 [64:64] = fangyuan0_X [66:66] ;
  assign a_C14 [64:64] = fangyuan0_C [66:66] ;
  assign { a_R14 [0], a_R14 [1], a_R14 [2], a_R14 [3], a_R14 [4], a_R14 [5], a_R14 [6], a_R14 [7], a_R14 [8], a_R14 [9], a_R14 [10], a_R14 [11], a_R14 [12], a_R14 [13], a_R14 [14], a_R14 [15], a_R14 [16], a_R14 [17], a_R14 [18], a_R14 [19], a_R14 [20], a_R14 [21], a_R14 [22], a_R14 [23], a_R14 [24], a_R14 [25], a_R14 [26], a_R14 [27], a_R14 [28], a_R14 [29], a_R14 [30], a_R14 [31], a_R14 [32], a_R14 [33], a_R14 [34], a_R14 [35], a_R14 [36], a_R14 [37], a_R14 [38], a_R14 [39], a_R14 [40], a_R14 [41], a_R14 [42], a_R14 [43], a_R14 [44], a_R14 [45], a_R14 [46], a_R14 [47], a_R14 [48], a_R14 [49], a_R14 [50], a_R14 [51], a_R14 [52], a_R14 [53], a_R14 [54], a_R14 [55], a_R14 [56], a_R14 [57], a_R14 [58], a_R14 [59], a_R14 [60], a_R14 [61], a_R14 [62], a_R14 [63] } = 0;
  assign { a_X14 [0], a_X14 [1], a_X14 [2], a_X14 [3], a_X14 [4], a_X14 [5], a_X14 [6], a_X14 [7], a_X14 [8], a_X14 [9], a_X14 [10], a_X14 [11], a_X14 [12], a_X14 [13], a_X14 [14], a_X14 [15], a_X14 [16], a_X14 [17], a_X14 [18], a_X14 [19], a_X14 [20], a_X14 [21], a_X14 [22], a_X14 [23], a_X14 [24], a_X14 [25], a_X14 [26], a_X14 [27], a_X14 [28], a_X14 [29], a_X14 [30], a_X14 [31], a_X14 [32], a_X14 [33], a_X14 [34], a_X14 [35], a_X14 [36], a_X14 [37], a_X14 [38], a_X14 [39], a_X14 [40], a_X14 [41], a_X14 [42], a_X14 [43], a_X14 [44], a_X14 [45], a_X14 [46], a_X14 [47], a_X14 [48], a_X14 [49], a_X14 [50], a_X14 [51], a_X14 [52], a_X14 [53], a_X14 [54], a_X14 [55], a_X14 [56], a_X14 [57], a_X14 [58], a_X14 [59], a_X14 [60], a_X14 [61], a_X14 [62], a_X14 [63] } = 0;
  assign { a_C14 [0], a_C14 [1], a_C14 [2], a_C14 [3], a_C14 [4], a_C14 [5], a_C14 [6], a_C14 [7], a_C14 [8], a_C14 [9], a_C14 [10], a_C14 [11], a_C14 [12], a_C14 [13], a_C14 [14], a_C14 [15], a_C14 [16], a_C14 [17], a_C14 [18], a_C14 [19], a_C14 [20], a_C14 [21], a_C14 [22], a_C14 [23], a_C14 [24], a_C14 [25], a_C14 [26], a_C14 [27], a_C14 [28], a_C14 [29], a_C14 [30], a_C14 [31], a_C14 [32], a_C14 [33], a_C14 [34], a_C14 [35], a_C14 [36], a_C14 [37], a_C14 [38], a_C14 [39], a_C14 [40], a_C14 [41], a_C14 [42], a_C14 [43], a_C14 [44], a_C14 [45], a_C14 [46], a_C14 [47], a_C14 [48], a_C14 [49], a_C14 [50], a_C14 [51], a_C14 [52], a_C14 [53], a_C14 [54], a_C14 [55], a_C14 [56], a_C14 [57], a_C14 [58], a_C14 [59], a_C14 [60], a_C14 [61], a_C14 [62], a_C14 [63] } = 0;
  logic [64:0] a_R15 ;
  logic [64:0] a_X15 ;
  logic [64:0] a_C15 ;
  assign a_R15 = fangyuan0_R [65:1] ;
  assign a_X15 = fangyuan0_X [65:1] ;
  assign a_C15 = fangyuan0_C [65:1] ;

  assign _1_ = fangyuan0 <<< _0_;
  assign _1__S = 0 ;
  logic [80:0] fangyuan0_C0 ;
  logic [80:0] fangyuan0_R0 ;
  logic [80:0] fangyuan0_X0 ;
  logic [4:0] _0__C0 ;
  logic [4:0] _0__R0 ;
  logic [4:0] _0__X0 ;
  assign _1__T = fangyuan0_T | _0__T ;
  assign fangyuan0_C0 = _1__C ;
  assign fangyuan0_X0 = _1__X ;
  assign _0__C0 = _1__C ;
  assign _0__X0 = _1__X ;
  assign fangyuan0_R0 = _1__R | ( _1__C & _0__T );
  assign _0__R0 = _1__R | ( _1__C & fangyuan0_T );
 assign _2_ = a >>> s;
 assign _2__S = 0 ;
  assign { s_R1 [0], s_R1 [1], s_R1 [2], s_R1 [3] } = 0;
  assign { s_X1 [0], s_X1 [1], s_X1 [2], s_X1 [3] } = 0;
  assign { s_C1 [0], s_C1 [1], s_C1 [2], s_C1 [3] } = 0;
 logic [64:0] a_C16 ;
 logic [64:0] a_R16 ;
 logic [64:0] a_X16 ;
 logic [4:0] s_C2 ;
 logic [4:0] s_R2 ;
 logic [4:0] s_X2 ;
 assign _2__T = a_T | s_T ;
 assign a_C16 = _2__C ;
 assign a_X16 = _2__X ;
 assign s_C2 = _2__C ;
 assign s_X2 = _2__X ;
 assign a_R16 = _2__R | ( _2__C & s_T );
 assign s_R2 = _2__R | ( _2__C & a_T );
  assign _0__C = ( _0__C0 );
  assign fangyuan0_C = ( fangyuan0_C0 );
  assign a_C = ( a_C0 ) | ( a_C1 ) | ( a_C2 ) | ( a_C3 ) | ( a_C4 ) | ( a_C5 ) | ( a_C6 ) | ( a_C7 ) | ( a_C8 ) | ( a_C9 ) | ( a_C10 ) | ( a_C11 ) | ( a_C12 ) | ( a_C13 ) | ( a_C14 ) | ( a_C15 ) | ( a_C16 );
  assign _2__C = ( _2__C0 );
  assign _1__C = ( _1__C0 );
  assign s_C = ( s_C0 ) | ( s_C1 ) | ( s_C2 );
  assign z_C = ( z_C0 );
  assign _0__X = ( _0__X0 );
  assign fangyuan0_X = ( fangyuan0_X0 );
  assign a_X = ( a_X0 ) | ( a_X1 ) | ( a_X2 ) | ( a_X3 ) | ( a_X4 ) | ( a_X5 ) | ( a_X6 ) | ( a_X7 ) | ( a_X8 ) | ( a_X9 ) | ( a_X10 ) | ( a_X11 ) | ( a_X12 ) | ( a_X13 ) | ( a_X14 ) | ( a_X15 ) | ( a_X16 );
  assign _2__X = ( _2__X0 );
  assign _1__X = ( _1__X0 );
  assign s_X = ( s_X0 ) | ( s_X1 ) | ( s_X2 );
  assign z_X = ( z_X0 );
  assign _0__R = ( _0__X0 & _0__R0 );
  assign fangyuan0_R = ( fangyuan0_X0 & fangyuan0_R0 );
  assign a_R = ( a_X0 & a_R0 ) | ( a_X1 & a_R1 ) | ( a_X2 & a_R2 ) | ( a_X3 & a_R3 ) | ( a_X4 & a_R4 ) | ( a_X5 & a_R5 ) | ( a_X6 & a_R6 ) | ( a_X7 & a_R7 ) | ( a_X8 & a_R8 ) | ( a_X9 & a_R9 ) | ( a_X10 & a_R10 ) | ( a_X11 & a_R11 ) | ( a_X12 & a_R12 ) | ( a_X13 & a_R13 ) | ( a_X14 & a_R14 ) | ( a_X15 & a_R15 ) | ( a_X16 & a_R16 );
  assign _2__R = ( _2__X0 & _2__R0 );
  assign _1__R = ( _1__X0 & _1__R0 );
  assign s_R = ( s_X0 & s_R0 ) | ( s_X1 & s_R1 ) | ( s_X2 & s_R2 );
  assign z_R = ( z_X0 & z_R0 );
 // ground taints for floating regs
 // ground taints for unused wires
 // ground taints for unused wire slices
endmodule
