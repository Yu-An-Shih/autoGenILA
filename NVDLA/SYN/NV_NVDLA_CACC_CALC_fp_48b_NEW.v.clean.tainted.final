module NV_NVDLA_CACC_CALC_fp_48b ( in_data , in_op , in_op_valid , in_sel , in_valid , nvdla_core_clk , nvdla_core_rstn , INSTR_IN_ZY , in_data_T , in_data_S , in_op_T , in_op_S , in_op_valid_T , in_op_valid_S , in_sel_T , in_sel_S , in_valid_T , in_valid_S , nvdla_core_clk_T , nvdla_core_clk_S , nvdla_core_rstn_T , nvdla_core_rstn_S , out_final_data_R0 , out_final_data_C0 , out_final_data_X0 , out_final_valid_R0 , out_final_valid_C0 , out_final_valid_X0 , out_partial_data_R0 , out_partial_data_C0 , out_partial_data_X0 , out_partial_valid_R0 , out_partial_valid_C0 , out_partial_valid_X0 , out_final_data , out_final_valid , out_partial_data , out_partial_valid , in_data_R , in_data_X , in_data_C , in_op_R , in_op_X , in_op_C , in_op_valid_R , in_op_valid_X , in_op_valid_C , in_sel_R , in_sel_X , in_sel_C , in_valid_R , in_valid_X , in_valid_C , nvdla_core_clk_R , nvdla_core_clk_X , nvdla_core_clk_C , nvdla_core_rstn_R , nvdla_core_rstn_X , nvdla_core_rstn_C , out_final_data_T , out_final_data_S , out_final_valid_T , out_final_valid_S , out_partial_data_T , out_partial_data_S , out_partial_valid_T , out_partial_valid_S );
  logic rst_zy;
  integer i;
  input INSTR_IN_ZY;
  logic [39:0] _000_;
  logic [39:0] _000__T ;
  logic [39:0] _000__R ;
  logic [39:0] _000__C ;
  logic [39:0] _000__X ;
  logic [13:0] _000__S ;
  logic [7:0] _001_;
  logic [7:0] _001__T ;
  logic [7:0] _001__R ;
  logic [7:0] _001__C ;
  logic [7:0] _001__X ;
  logic [13:0] _001__S ;
  logic _002_;
  logic _002__T ;
  logic _002__R ;
  logic _002__C ;
  logic _002__X ;
  logic [13:0] _002__S ;
  logic [7:0] _003_;
  logic [7:0] _003__T ;
  logic [7:0] _003__R ;
  logic [7:0] _003__C ;
  logic [7:0] _003__X ;
  logic [13:0] _003__S ;
  logic [2:0] _004_;
  logic [2:0] _004__T ;
  logic [2:0] _004__R ;
  logic [2:0] _004__C ;
  logic [2:0] _004__X ;
  logic [13:0] _004__S ;
  logic [41:0] _005_;
  logic [41:0] _005__T ;
  logic [41:0] _005__R ;
  logic [41:0] _005__C ;
  logic [41:0] _005__X ;
  logic [13:0] _005__S ;
  logic _006_;
  logic _006__T ;
  logic _006__R ;
  logic _006__C ;
  logic _006__X ;
  logic [13:0] _006__S ;
  logic [39:0] _007_;
  logic [39:0] _007__T ;
  logic [39:0] _007__R ;
  logic [39:0] _007__C ;
  logic [39:0] _007__X ;
  logic [13:0] _007__S ;
  logic [31:0] _008_;
  logic [31:0] _008__T ;
  logic [31:0] _008__R ;
  logic [31:0] _008__C ;
  logic [31:0] _008__X ;
  logic [13:0] _008__S ;
  logic _009_;
  logic _009__T ;
  logic _009__R ;
  logic _009__C ;
  logic _009__X ;
  logic [13:0] _009__S ;
  logic _010_;
  logic _010__T ;
  logic _010__R ;
  logic _010__C ;
  logic _010__X ;
  logic [13:0] _010__S ;
  logic [7:0] _011_;
  logic [7:0] _011__T ;
  logic [7:0] _011__R ;
  logic [7:0] _011__C ;
  logic [7:0] _011__X ;
  logic [13:0] _011__S ;
  logic [39:0] _012_;
  logic [39:0] _012__T ;
  logic [39:0] _012__R ;
  logic [39:0] _012__C ;
  logic [39:0] _012__X ;
  logic [13:0] _012__S ;
  logic _013_;
  logic _013__T ;
  logic _013__R ;
  logic _013__C ;
  logic _013__X ;
  logic [13:0] _013__S ;
  logic [6:0] _014_;
  logic [6:0] _014__T ;
  logic [6:0] _014__R ;
  logic [6:0] _014__C ;
  logic [6:0] _014__X ;
  logic [13:0] _014__S ;
  logic [7:0] _015_;
  logic [7:0] _015__T ;
  logic [7:0] _015__R ;
  logic [7:0] _015__C ;
  logic [7:0] _015__X ;
  logic [13:0] _015__S ;
  logic [38:0] _016_;
  logic [38:0] _016__T ;
  logic [38:0] _016__R ;
  logic [38:0] _016__C ;
  logic [38:0] _016__X ;
  logic [13:0] _016__S ;
  logic [7:0] _017_;
  logic [7:0] _017__T ;
  logic [7:0] _017__R ;
  logic [7:0] _017__C ;
  logic [7:0] _017__X ;
  logic [13:0] _017__S ;
  logic _018_;
  logic _018__T ;
  logic _018__R ;
  logic _018__C ;
  logic _018__X ;
  logic [13:0] _018__S ;
  logic _019_;
  logic _019__T ;
  logic _019__R ;
  logic _019__C ;
  logic _019__X ;
  logic [13:0] _019__S ;
  logic _020_;
  logic _020__T ;
  logic _020__R ;
  logic _020__C ;
  logic _020__X ;
  logic [13:0] _020__S ;
  logic _021_;
  logic _021__T ;
  logic _021__R ;
  logic _021__C ;
  logic _021__X ;
  logic [13:0] _021__S ;
  logic _022_;
  logic _022__T ;
  logic _022__R ;
  logic _022__C ;
  logic _022__X ;
  logic [13:0] _022__S ;
  logic [8:0] _023_;
  logic [8:0] _023__T ;
  logic [8:0] _023__R ;
  logic [8:0] _023__C ;
  logic [8:0] _023__X ;
  logic [13:0] _023__S ;
  logic [44:0] _024_;
  logic [44:0] _024__T ;
  logic [44:0] _024__R ;
  logic [44:0] _024__C ;
  logic [44:0] _024__X ;
  logic [13:0] _024__S ;
  logic [40:0] _025_;
  logic [40:0] _025__T ;
  logic [40:0] _025__R ;
  logic [40:0] _025__C ;
  logic [40:0] _025__X ;
  logic [13:0] _025__S ;
  logic [7:0] _026_;
  logic [7:0] _026__T ;
  logic [7:0] _026__R ;
  logic [7:0] _026__C ;
  logic [7:0] _026__X ;
  logic [13:0] _026__S ;
  logic _027_;
  logic _027__T ;
  logic _027__R ;
  logic _027__C ;
  logic _027__X ;
  logic [13:0] _027__S ;
  logic _028_;
  logic _028__T ;
  logic _028__R ;
  logic _028__C ;
  logic _028__X ;
  logic [13:0] _028__S ;
  logic _029_;
  logic _029__T ;
  logic _029__R ;
  logic _029__C ;
  logic _029__X ;
  logic [13:0] _029__S ;
  logic _030_;
  logic _030__T ;
  logic _030__R ;
  logic _030__C ;
  logic _030__X ;
  logic [13:0] _030__S ;
  logic _031_;
  logic _031__T ;
  logic _031__R ;
  logic _031__C ;
  logic _031__X ;
  logic [13:0] _031__S ;
  logic _032_;
  logic _032__T ;
  logic _032__R ;
  logic _032__C ;
  logic _032__X ;
  logic [13:0] _032__S ;
  logic _033_;
  logic _033__T ;
  logic _033__R ;
  logic _033__C ;
  logic _033__X ;
  logic [13:0] _033__S ;
  logic _034_;
  logic _034__T ;
  logic _034__R ;
  logic _034__C ;
  logic _034__X ;
  logic [13:0] _034__S ;
  logic _035_;
  logic _035__T ;
  logic _035__R ;
  logic _035__C ;
  logic _035__X ;
  logic [13:0] _035__S ;
  logic _036_;
  logic _036__T ;
  logic _036__R ;
  logic _036__C ;
  logic _036__X ;
  logic [13:0] _036__S ;
  logic [38:0] _037_;
  logic [38:0] _037__T ;
  logic [38:0] _037__R ;
  logic [38:0] _037__C ;
  logic [38:0] _037__X ;
  logic [13:0] _037__S ;
  logic _038_;
  logic _038__T ;
  logic _038__R ;
  logic _038__C ;
  logic _038__X ;
  logic [13:0] _038__S ;
  logic _039_;
  logic _039__T ;
  logic _039__R ;
  logic _039__C ;
  logic _039__X ;
  logic [13:0] _039__S ;
  logic _040_;
  logic _040__T ;
  logic _040__R ;
  logic _040__C ;
  logic _040__X ;
  logic [13:0] _040__S ;
  logic _041_;
  logic _041__T ;
  logic _041__R ;
  logic _041__C ;
  logic _041__X ;
  logic [13:0] _041__S ;
  logic _042_;
  logic _042__T ;
  logic _042__R ;
  logic _042__C ;
  logic _042__X ;
  logic [13:0] _042__S ;
  logic _043_;
  logic _043__T ;
  logic _043__R ;
  logic _043__C ;
  logic _043__X ;
  logic [13:0] _043__S ;
  logic _044_;
  logic _044__T ;
  logic _044__R ;
  logic _044__C ;
  logic _044__X ;
  logic [13:0] _044__S ;
  logic _045_;
  logic _045__T ;
  logic _045__R ;
  logic _045__C ;
  logic _045__X ;
  logic [13:0] _045__S ;
  logic _046_;
  logic _046__T ;
  logic _046__R ;
  logic _046__C ;
  logic _046__X ;
  logic [13:0] _046__S ;
  logic _047_;
  logic _047__T ;
  logic _047__R ;
  logic _047__C ;
  logic _047__X ;
  logic [13:0] _047__S ;
  logic _048_;
  logic _048__T ;
  logic _048__R ;
  logic _048__C ;
  logic _048__X ;
  logic [13:0] _048__S ;
  logic [31:0] _049_;
  logic [31:0] _049__T ;
  logic [31:0] _049__R ;
  logic [31:0] _049__C ;
  logic [31:0] _049__X ;
  logic [13:0] _049__S ;
  logic [35:0] _050_;
  logic [35:0] _050__T ;
  logic [35:0] _050__R ;
  logic [35:0] _050__C ;
  logic [35:0] _050__X ;
  logic [13:0] _050__S ;
  logic [39:0] _051_;
  logic [39:0] _051__T ;
  logic [39:0] _051__R ;
  logic [39:0] _051__C ;
  logic [39:0] _051__X ;
  logic [13:0] _051__S ;
  logic [7:0] _052_;
  logic [7:0] _052__T ;
  logic [7:0] _052__R ;
  logic [7:0] _052__C ;
  logic [7:0] _052__X ;
  logic [13:0] _052__S ;
  logic [2:0] _053_;
  logic [2:0] _053__T ;
  logic [2:0] _053__R ;
  logic [2:0] _053__C ;
  logic [2:0] _053__X ;
  logic [13:0] _053__S ;
  logic [7:0] _054_;
  logic [7:0] _054__T ;
  logic [7:0] _054__R ;
  logic [7:0] _054__C ;
  logic [7:0] _054__X ;
  logic [13:0] _054__S ;
  logic [7:0] _055_;
  logic [7:0] _055__T ;
  logic [7:0] _055__R ;
  logic [7:0] _055__C ;
  logic [7:0] _055__X ;
  logic [13:0] _055__S ;
  logic [39:0] di_aligned_mant;
  logic [39:0]  di_aligned_mant_T ;
  logic [39:0]  di_aligned_mant_PREV_VAL1 ;
  logic [39:0]  di_aligned_mant_PREV_VAL2 ;
  logic [39:0]  di_aligned_mant_R ;
  logic [39:0]  di_aligned_mant_X ;
  logic [39:0]  di_aligned_mant_C ;
  logic [13:0] di_aligned_mant_S ;
  logic di_aligned_mant_t_flag ;
  logic di_aligned_mant_r_flag ;
  assign di_aligned_mant_S = 907 ;
  logic [39:0] di_aligned_mant_nxt;
  logic [39:0] di_aligned_mant_nxt_T ;
  logic [39:0] di_aligned_mant_nxt_R ;
  logic [39:0] di_aligned_mant_nxt_C ;
  logic [39:0] di_aligned_mant_nxt_X ;
  logic [13:0] di_aligned_mant_nxt_S ;
  logic [6:0] di_expm;
  logic [6:0] di_expm_T ;
  logic [6:0] di_expm_R ;
  logic [6:0] di_expm_C ;
  logic [6:0] di_expm_X ;
  logic [13:0] di_expm_S ;
  logic [5:0] di_expn;
  logic [5:0] di_expn_T ;
  logic [5:0] di_expn_R ;
  logic [5:0] di_expn_C ;
  logic [5:0] di_expn_X ;
  logic [13:0] di_expn_S ;
  logic [7:0] di_expo;
  logic [7:0] di_expo_T ;
  logic [7:0] di_expo_R ;
  logic [7:0] di_expo_C ;
  logic [7:0] di_expo_X ;
  logic [13:0] di_expo_S ;
  logic [7:0] di_expo_shift;
  logic [7:0] di_expo_shift_T ;
  logic [7:0] di_expo_shift_R ;
  logic [7:0] di_expo_shift_C ;
  logic [7:0] di_expo_shift_X ;
  logic [13:0] di_expo_shift_S ;
  logic [5:0] di_lead_num;
  logic [5:0] di_lead_num_T ;
  logic [5:0] di_lead_num_R ;
  logic [5:0] di_lead_num_C ;
  logic [5:0] di_lead_num_X ;
  logic [13:0] di_lead_num_S ;
  logic [35:0] di_manm;
  logic [35:0] di_manm_T ;
  logic [35:0] di_manm_R ;
  logic [35:0] di_manm_C ;
  logic [35:0] di_manm_X ;
  logic [13:0] di_manm_S ;
  logic [35:0] di_mans;
  logic [35:0] di_mans_T ;
  logic [35:0] di_mans_R ;
  logic [35:0] di_mans_C ;
  logic [35:0] di_mans_X ;
  logic [13:0] di_mans_S ;
  logic [35:0] di_mant;
  logic [35:0] di_mant_T ;
  logic [35:0] di_mant_R ;
  logic [35:0] di_mant_C ;
  logic [35:0] di_mant_X ;
  logic [13:0] di_mant_S ;
  logic [2:0] di_mant_cut;
  logic [2:0] di_mant_cut_T ;
  logic [2:0] di_mant_cut_R ;
  logic [2:0] di_mant_cut_C ;
  logic [2:0] di_mant_cut_X ;
  logic [13:0] di_mant_cut_S ;
  logic [39:0] di_mant_cutt;
  logic [39:0] di_mant_cutt_T ;
  logic [39:0] di_mant_cutt_R ;
  logic [39:0] di_mant_cutt_C ;
  logic [39:0] di_mant_cutt_X ;
  logic [13:0] di_mant_cutt_S ;
  logic [39:0] di_mant_ext;
  logic [39:0] di_mant_ext_T ;
  logic [39:0] di_mant_ext_R ;
  logic [39:0] di_mant_ext_C ;
  logic [39:0] di_mant_ext_X ;
  logic [13:0] di_mant_ext_S ;
  logic [37:0] di_mant_pre;
  logic [37:0] di_mant_pre_T ;
  logic [37:0] di_mant_pre_R ;
  logic [37:0] di_mant_pre_C ;
  logic [37:0] di_mant_pre_X ;
  logic [13:0] di_mant_pre_S ;
  logic [39:0] di_mant_shift;
  logic [39:0] di_mant_shift_T ;
  logic [39:0] di_mant_shift_R ;
  logic [39:0] di_mant_shift_C ;
  logic [39:0] di_mant_shift_X ;
  logic [13:0] di_mant_shift_S ;
  logic di_nan;
  logic di_nan_T ;
  logic di_nan_R ;
  logic di_nan_C ;
  logic di_nan_X ;
  logic [13:0] di_nan_S ;
  logic [43:0] di_pd;
  logic [43:0] di_pd_T ;
  logic [43:0] di_pd_R ;
  logic [43:0] di_pd_C ;
  logic [43:0] di_pd_X ;
  logic [13:0] di_pd_S ;
  logic di_sign;
  logic di_sign_T ;
  logic di_sign_R ;
  logic di_sign_C ;
  logic di_sign_X ;
  logic [13:0] di_sign_S ;
  logic [7:0] expo_nrml;
  logic [7:0] expo_nrml_T ;
  logic [7:0] expo_nrml_R ;
  logic [7:0] expo_nrml_C ;
  logic [7:0] expo_nrml_X ;
  logic [13:0] expo_nrml_S ;
  logic [7:0] expo_trans;
  logic [7:0]  expo_trans_T ;
  logic [7:0]  expo_trans_PREV_VAL1 ;
  logic [7:0]  expo_trans_PREV_VAL2 ;
  logic [7:0]  expo_trans_R ;
  logic [7:0]  expo_trans_X ;
  logic [7:0]  expo_trans_C ;
  logic [13:0] expo_trans_S ;
  logic expo_trans_t_flag ;
  logic expo_trans_r_flag ;
  assign expo_trans_S = 908 ;
  logic final_sel;
  logic  final_sel_T ;
  logic  final_sel_PREV_VAL1 ;
  logic  final_sel_PREV_VAL2 ;
  logic  final_sel_R ;
  logic  final_sel_X ;
  logic  final_sel_C ;
  logic [13:0] final_sel_S ;
  logic final_sel_t_flag ;
  logic final_sel_r_flag ;
  assign final_sel_S = 909 ;
  logic final_vld;
  logic  final_vld_T ;
  logic  final_vld_PREV_VAL1 ;
  logic  final_vld_PREV_VAL2 ;
  logic  final_vld_R ;
  logic  final_vld_X ;
  logic  final_vld_C ;
  logic [13:0] final_vld_S ;
  logic final_vld_t_flag ;
  logic final_vld_r_flag ;
  assign final_vld_S = 910 ;
  logic [7:0] fp32_expo_nmlz;
  logic [7:0] fp32_expo_nmlz_T ;
  logic [7:0] fp32_expo_nmlz_R ;
  logic [7:0] fp32_expo_nmlz_C ;
  logic [7:0] fp32_expo_nmlz_X ;
  logic [13:0] fp32_expo_nmlz_S ;
  logic [7:0] fp32_expo_raw;
  logic [7:0] fp32_expo_raw_T ;
  logic [7:0] fp32_expo_raw_R ;
  logic [7:0] fp32_expo_raw_C ;
  logic [7:0] fp32_expo_raw_X ;
  logic [13:0] fp32_expo_raw_S ;
  logic [7:0] fp32_expo_round;
  logic [7:0] fp32_expo_round_T ;
  logic [7:0] fp32_expo_round_R ;
  logic [7:0] fp32_expo_round_C ;
  logic [7:0] fp32_expo_round_X ;
  logic [13:0] fp32_expo_round_S ;
  logic fp32_mant_carry;
  logic fp32_mant_carry_T ;
  logic fp32_mant_carry_R ;
  logic fp32_mant_carry_C ;
  logic fp32_mant_carry_X ;
  logic [13:0] fp32_mant_carry_S ;
  logic [14:0] fp32_mant_cut;
  logic [14:0] fp32_mant_cut_T ;
  logic [14:0] fp32_mant_cut_R ;
  logic [14:0] fp32_mant_cut_C ;
  logic [14:0] fp32_mant_cut_X ;
  logic [13:0] fp32_mant_cut_S ;
  logic [23:0] fp32_mant_effect;
  logic [23:0] fp32_mant_effect_T ;
  logic [23:0] fp32_mant_effect_R ;
  logic [23:0] fp32_mant_effect_C ;
  logic [23:0] fp32_mant_effect_X ;
  logic [13:0] fp32_mant_effect_S ;
  logic [22:0] fp32_mant_nmlz;
  logic [22:0] fp32_mant_nmlz_T ;
  logic [22:0] fp32_mant_nmlz_R ;
  logic [22:0] fp32_mant_nmlz_C ;
  logic [22:0] fp32_mant_nmlz_X ;
  logic [13:0] fp32_mant_nmlz_S ;
  logic [22:0] fp32_mant_nmlz_tmp;
  logic [22:0] fp32_mant_nmlz_tmp_T ;
  logic [22:0] fp32_mant_nmlz_tmp_R ;
  logic [22:0] fp32_mant_nmlz_tmp_C ;
  logic [22:0] fp32_mant_nmlz_tmp_X ;
  logic [13:0] fp32_mant_nmlz_tmp_S ;
  logic fp32_mant_point5;
  logic fp32_mant_point5_T ;
  logic fp32_mant_point5_R ;
  logic fp32_mant_point5_C ;
  logic fp32_mant_point5_X ;
  logic [13:0] fp32_mant_point5_S ;
  logic [24:0] fp32_mant_round;
  logic [24:0] fp32_mant_round_T ;
  logic [24:0] fp32_mant_round_R ;
  logic [24:0] fp32_mant_round_C ;
  logic [24:0] fp32_mant_round_X ;
  logic [13:0] fp32_mant_round_S ;
  logic [31:0] fp32_result;
  logic [31:0] fp32_result_T ;
  logic [31:0] fp32_result_R ;
  logic [31:0] fp32_result_C ;
  logic [31:0] fp32_result_X ;
  logic [13:0] fp32_result_S ;
  logic [7:0] in_aligned_expo;
  logic [7:0]  in_aligned_expo_T ;
  logic [7:0]  in_aligned_expo_PREV_VAL1 ;
  logic [7:0]  in_aligned_expo_PREV_VAL2 ;
  logic [7:0]  in_aligned_expo_R ;
  logic [7:0]  in_aligned_expo_X ;
  logic [7:0]  in_aligned_expo_C ;
  logic [13:0] in_aligned_expo_S ;
  logic in_aligned_expo_t_flag ;
  logic in_aligned_expo_r_flag ;
  assign in_aligned_expo_S = 911 ;
  input [43:0] in_data;
  input [43:0] in_data_T ;
  input [13:0] in_data_S ;
  output [43:0] in_data_R ;
  output [43:0] in_data_X ;
  output [43:0] in_data_C ;
  logic [2:0] in_mant_cut;
  logic [2:0]  in_mant_cut_T ;
  logic [2:0]  in_mant_cut_PREV_VAL1 ;
  logic [2:0]  in_mant_cut_PREV_VAL2 ;
  logic [2:0]  in_mant_cut_R ;
  logic [2:0]  in_mant_cut_X ;
  logic [2:0]  in_mant_cut_C ;
  logic [13:0] in_mant_cut_S ;
  logic in_mant_cut_t_flag ;
  logic in_mant_cut_r_flag ;
  assign in_mant_cut_S = 912 ;
  logic [2:0] in_mant_cut_nxt;
  logic [2:0] in_mant_cut_nxt_T ;
  logic [2:0] in_mant_cut_nxt_R ;
  logic [2:0] in_mant_cut_nxt_C ;
  logic [2:0] in_mant_cut_nxt_X ;
  logic [13:0] in_mant_cut_nxt_S ;
  logic [47:0] in_mask_op;
  logic [47:0] in_mask_op_T ;
  logic [47:0] in_mask_op_R ;
  logic [47:0] in_mask_op_C ;
  logic [47:0] in_mask_op_X ;
  logic [13:0] in_mask_op_S ;
  logic in_nan;
  logic in_nan_T ;
  logic in_nan_R ;
  logic in_nan_C ;
  logic in_nan_X ;
  logic [13:0] in_nan_S ;
  logic in_nan_2d;
  logic  in_nan_2d_T ;
  logic  in_nan_2d_PREV_VAL1 ;
  logic  in_nan_2d_PREV_VAL2 ;
  logic  in_nan_2d_R ;
  logic  in_nan_2d_X ;
  logic  in_nan_2d_C ;
  logic [13:0] in_nan_2d_S ;
  logic in_nan_2d_t_flag ;
  logic in_nan_2d_r_flag ;
  assign in_nan_2d_S = 913 ;
  logic in_nan_d;
  logic  in_nan_d_T ;
  logic  in_nan_d_PREV_VAL1 ;
  logic  in_nan_d_PREV_VAL2 ;
  logic  in_nan_d_R ;
  logic  in_nan_d_X ;
  logic  in_nan_d_C ;
  logic [13:0] in_nan_d_S ;
  logic in_nan_d_t_flag ;
  logic in_nan_d_r_flag ;
  assign in_nan_d_S = 914 ;
  input [47:0] in_op;
  input [47:0] in_op_T ;
  input [13:0] in_op_S ;
  output [47:0] in_op_R ;
  output [47:0] in_op_X ;
  output [47:0] in_op_C ;
  input in_op_valid;
  input in_op_valid_T ;
  input [13:0] in_op_valid_S ;
  output in_op_valid_R ;
  output in_op_valid_X ;
  output in_op_valid_C ;
  input in_sel;
  input in_sel_T ;
  input [13:0] in_sel_S ;
  output in_sel_R ;
  output in_sel_X ;
  output in_sel_C ;
  input in_valid;
  input in_valid_T ;
  input [13:0] in_valid_S ;
  output in_valid_R ;
  output in_valid_X ;
  output in_valid_C ;
  logic [40:0] mant_sum;
  logic [40:0] mant_sum_T ;
  logic [40:0] mant_sum_R ;
  logic [40:0] mant_sum_C ;
  logic [40:0] mant_sum_X ;
  logic [13:0] mant_sum_S ;
  logic mant_sum_carry_neg;
  logic mant_sum_carry_neg_T ;
  logic mant_sum_carry_neg_R ;
  logic mant_sum_carry_neg_C ;
  logic mant_sum_carry_neg_X ;
  logic [13:0] mant_sum_carry_neg_S ;
  logic mant_sum_carry_pos;
  logic mant_sum_carry_pos_T ;
  logic mant_sum_carry_pos_R ;
  logic mant_sum_carry_pos_C ;
  logic mant_sum_carry_pos_X ;
  logic [13:0] mant_sum_carry_pos_S ;
  logic [44:0] mant_sum_comp;
  logic [44:0] mant_sum_comp_T ;
  logic [44:0] mant_sum_comp_R ;
  logic [44:0] mant_sum_comp_C ;
  logic [44:0] mant_sum_comp_X ;
  logic [13:0] mant_sum_comp_S ;
  logic [39:0] mant_sum_effect;
  logic [39:0] mant_sum_effect_T ;
  logic [39:0] mant_sum_effect_R ;
  logic [39:0] mant_sum_effect_C ;
  logic [39:0] mant_sum_effect_X ;
  logic [13:0] mant_sum_effect_S ;
  logic mant_sum_guard;
  logic mant_sum_guard_T ;
  logic mant_sum_guard_R ;
  logic mant_sum_guard_C ;
  logic mant_sum_guard_X ;
  logic [13:0] mant_sum_guard_S ;
  logic [41:0] mant_sum_ncmp;
  logic [41:0] mant_sum_ncmp_T ;
  logic [41:0] mant_sum_ncmp_R ;
  logic [41:0] mant_sum_ncmp_C ;
  logic [41:0] mant_sum_ncmp_X ;
  logic [13:0] mant_sum_ncmp_S ;
  logic mant_sum_point5;
  logic mant_sum_point5_T ;
  logic mant_sum_point5_R ;
  logic mant_sum_point5_C ;
  logic mant_sum_point5_X ;
  logic [13:0] mant_sum_point5_S ;
  logic [40:0] mant_sum_round;
  logic [40:0] mant_sum_round_T ;
  logic [40:0] mant_sum_round_R ;
  logic [40:0] mant_sum_round_C ;
  logic [40:0] mant_sum_round_X ;
  logic [13:0] mant_sum_round_S ;
  logic [43:0] mant_sum_scmp;
  logic [43:0] mant_sum_scmp_T ;
  logic [43:0] mant_sum_scmp_R ;
  logic [43:0] mant_sum_scmp_C ;
  logic [43:0] mant_sum_scmp_X ;
  logic [13:0] mant_sum_scmp_S ;
  logic mant_sum_sign;
  logic mant_sum_sign_T ;
  logic mant_sum_sign_R ;
  logic mant_sum_sign_C ;
  logic mant_sum_sign_X ;
  logic [13:0] mant_sum_sign_S ;
  logic mant_sum_stick;
  logic mant_sum_stick_T ;
  logic mant_sum_stick_R ;
  logic mant_sum_stick_C ;
  logic mant_sum_stick_X ;
  logic [13:0] mant_sum_stick_S ;
  logic [43:0] mant_sum_total;
  logic [43:0] mant_sum_total_T ;
  logic [43:0] mant_sum_total_R ;
  logic [43:0] mant_sum_total_C ;
  logic [43:0] mant_sum_total_X ;
  logic [13:0] mant_sum_total_S ;
  logic [41:0] mant_sum_trans;
  logic [41:0]  mant_sum_trans_T ;
  logic [41:0]  mant_sum_trans_PREV_VAL1 ;
  logic [41:0]  mant_sum_trans_PREV_VAL2 ;
  logic [41:0]  mant_sum_trans_R ;
  logic [41:0]  mant_sum_trans_X ;
  logic [41:0]  mant_sum_trans_C ;
  logic [13:0] mant_sum_trans_S ;
  logic mant_sum_trans_t_flag ;
  logic mant_sum_trans_r_flag ;
  assign mant_sum_trans_S = 915 ;
  logic [7:0] max_expo;
  logic [7:0] max_expo_T ;
  logic [7:0] max_expo_R ;
  logic [7:0] max_expo_C ;
  logic [7:0] max_expo_X ;
  logic [13:0] max_expo_S ;
  logic [5:0] msum_lead_num;
  logic [5:0] msum_lead_num_T ;
  logic [5:0] msum_lead_num_R ;
  logic [5:0] msum_lead_num_C ;
  logic [5:0] msum_lead_num_X ;
  logic [13:0] msum_lead_num_S ;
  logic msum_sel;
  logic  msum_sel_T ;
  logic  msum_sel_PREV_VAL1 ;
  logic  msum_sel_PREV_VAL2 ;
  logic  msum_sel_R ;
  logic  msum_sel_X ;
  logic  msum_sel_C ;
  logic [13:0] msum_sel_S ;
  logic msum_sel_t_flag ;
  logic msum_sel_r_flag ;
  assign msum_sel_S = 916 ;
  logic msum_vld;
  logic  msum_vld_T ;
  logic  msum_vld_PREV_VAL1 ;
  logic  msum_vld_PREV_VAL2 ;
  logic  msum_vld_R ;
  logic  msum_vld_X ;
  logic  msum_vld_C ;
  logic [13:0] msum_vld_S ;
  logic msum_vld_t_flag ;
  logic msum_vld_r_flag ;
  assign msum_vld_S = 917 ;
  input nvdla_core_clk;
  input nvdla_core_clk_T ;
  input [13:0] nvdla_core_clk_S ;
  output nvdla_core_clk_R ;
  output nvdla_core_clk_X ;
  output nvdla_core_clk_C ;
  input nvdla_core_rstn;
  input nvdla_core_rstn_T ;
  input [13:0] nvdla_core_rstn_S ;
  output nvdla_core_rstn_R ;
  output nvdla_core_rstn_X ;
  output nvdla_core_rstn_C ;
  logic [39:0] oi_aligned_mant;
  logic [39:0]  oi_aligned_mant_T ;
  logic [39:0]  oi_aligned_mant_PREV_VAL1 ;
  logic [39:0]  oi_aligned_mant_PREV_VAL2 ;
  logic [39:0]  oi_aligned_mant_R ;
  logic [39:0]  oi_aligned_mant_X ;
  logic [39:0]  oi_aligned_mant_C ;
  logic [13:0] oi_aligned_mant_S ;
  logic oi_aligned_mant_t_flag ;
  logic oi_aligned_mant_r_flag ;
  assign oi_aligned_mant_S = 918 ;
  logic [39:0] oi_aligned_mant_nxt;
  logic [39:0] oi_aligned_mant_nxt_T ;
  logic [39:0] oi_aligned_mant_nxt_R ;
  logic [39:0] oi_aligned_mant_nxt_C ;
  logic [39:0] oi_aligned_mant_nxt_X ;
  logic [13:0] oi_aligned_mant_nxt_S ;
  logic [7:0] oi_expn;
  logic [7:0] oi_expn_T ;
  logic [7:0] oi_expn_R ;
  logic [7:0] oi_expn_C ;
  logic [7:0] oi_expn_X ;
  logic [13:0] oi_expn_S ;
  logic [7:0] oi_expo;
  logic [7:0] oi_expo_T ;
  logic [7:0] oi_expo_R ;
  logic [7:0] oi_expo_C ;
  logic [7:0] oi_expo_X ;
  logic [13:0] oi_expo_S ;
  logic [7:0] oi_expo_shift;
  logic [7:0] oi_expo_shift_T ;
  logic [7:0] oi_expo_shift_R ;
  logic [7:0] oi_expo_shift_C ;
  logic [7:0] oi_expo_shift_X ;
  logic [13:0] oi_expo_shift_S ;
  logic [39:0] oi_mans;
  logic [39:0] oi_mans_T ;
  logic [39:0] oi_mans_R ;
  logic [39:0] oi_mans_C ;
  logic [39:0] oi_mans_X ;
  logic [13:0] oi_mans_S ;
  logic [39:0] oi_mant;
  logic [39:0] oi_mant_T ;
  logic [39:0] oi_mant_R ;
  logic [39:0] oi_mant_C ;
  logic [39:0] oi_mant_X ;
  logic [13:0] oi_mant_S ;
  logic [2:0] oi_mant_cut;
  logic [2:0] oi_mant_cut_T ;
  logic [2:0] oi_mant_cut_R ;
  logic [2:0] oi_mant_cut_C ;
  logic [2:0] oi_mant_cut_X ;
  logic [13:0] oi_mant_cut_S ;
  logic [39:0] oi_mant_cutt;
  logic [39:0] oi_mant_cutt_T ;
  logic [39:0] oi_mant_cutt_R ;
  logic [39:0] oi_mant_cutt_C ;
  logic [39:0] oi_mant_cutt_X ;
  logic [13:0] oi_mant_cutt_S ;
  logic [39:0] oi_mant_ext;
  logic [39:0] oi_mant_ext_T ;
  logic [39:0] oi_mant_ext_R ;
  logic [39:0] oi_mant_ext_C ;
  logic [39:0] oi_mant_ext_X ;
  logic [13:0] oi_mant_ext_S ;
  logic [39:0] oi_mant_shift;
  logic [39:0] oi_mant_shift_T ;
  logic [39:0] oi_mant_shift_R ;
  logic [39:0] oi_mant_shift_C ;
  logic [39:0] oi_mant_shift_X ;
  logic [13:0] oi_mant_shift_S ;
  logic oi_nan;
  logic oi_nan_T ;
  logic oi_nan_R ;
  logic oi_nan_C ;
  logic oi_nan_X ;
  logic [13:0] oi_nan_S ;
  logic [47:0] oi_pd;
  logic [47:0] oi_pd_T ;
  logic [47:0] oi_pd_R ;
  logic [47:0] oi_pd_C ;
  logic [47:0] oi_pd_X ;
  logic [13:0] oi_pd_S ;
  logic oi_sign;
  logic oi_sign_T ;
  logic oi_sign_R ;
  logic oi_sign_C ;
  logic oi_sign_X ;
  logic [13:0] oi_sign_S ;
  output [31:0] out_final_data;
  logic [31:0] out_final_data ;
  output [31:0] out_final_data_T ;
  logic [31:0] out_final_data_T ;
  logic [31:0] out_final_data_R ;
  logic [31:0] out_final_data_C ;
  logic [31:0] out_final_data_X ;
  logic [13:0] out_final_data_S ;
  input [31:0] out_final_data_R0 ;
  input [31:0] out_final_data_C0 ;
  input [31:0] out_final_data_X0 ;
  output [13:0] out_final_data_S ;
  logic [31:0] out_final_data;
  logic [31:0]  out_final_data_T ;
  logic [31:0]  out_final_data_PREV_VAL1 ;
  logic [31:0]  out_final_data_PREV_VAL2 ;
  logic out_final_data_t_flag ;
  logic out_final_data_r_flag ;
  assign out_final_data_S = 919 ;
  output out_final_valid;
  logic out_final_valid ;
  output out_final_valid_T ;
  logic out_final_valid_T ;
  logic out_final_valid_R ;
  logic out_final_valid_C ;
  logic out_final_valid_X ;
  logic [13:0] out_final_valid_S ;
  input out_final_valid_R0 ;
  input out_final_valid_C0 ;
  input out_final_valid_X0 ;
  output [13:0] out_final_valid_S ;
  logic out_final_valid;
  logic  out_final_valid_T ;
  logic  out_final_valid_PREV_VAL1 ;
  logic  out_final_valid_PREV_VAL2 ;
  logic out_final_valid_t_flag ;
  logic out_final_valid_r_flag ;
  assign out_final_valid_S = 920 ;
  output [47:0] out_partial_data;
  logic [47:0] out_partial_data ;
  output [47:0] out_partial_data_T ;
  logic [47:0] out_partial_data_T ;
  logic [47:0] out_partial_data_R ;
  logic [47:0] out_partial_data_C ;
  logic [47:0] out_partial_data_X ;
  logic [13:0] out_partial_data_S ;
  input [47:0] out_partial_data_R0 ;
  input [47:0] out_partial_data_C0 ;
  input [47:0] out_partial_data_X0 ;
  output [13:0] out_partial_data_S ;
  output out_partial_valid;
  logic out_partial_valid ;
  output out_partial_valid_T ;
  logic out_partial_valid_T ;
  logic out_partial_valid_R ;
  logic out_partial_valid_C ;
  logic out_partial_valid_X ;
  logic [13:0] out_partial_valid_S ;
  input out_partial_valid_R0 ;
  input out_partial_valid_C0 ;
  input out_partial_valid_X0 ;
  output [13:0] out_partial_valid_S ;
  logic out_partial_valid;
  logic  out_partial_valid_T ;
  logic  out_partial_valid_PREV_VAL1 ;
  logic  out_partial_valid_PREV_VAL2 ;
  logic out_partial_valid_t_flag ;
  logic out_partial_valid_r_flag ;
  assign out_partial_valid_S = 921 ;
  logic [7:0] partial_expo;
  logic [7:0] partial_expo_T ;
  logic [7:0] partial_expo_R ;
  logic [7:0] partial_expo_C ;
  logic [7:0] partial_expo_X ;
  logic [13:0] partial_expo_S ;
  logic [7:0] partial_expo_nmlz;
  logic [7:0] partial_expo_nmlz_T ;
  logic [7:0] partial_expo_nmlz_R ;
  logic [7:0] partial_expo_nmlz_C ;
  logic [7:0] partial_expo_nmlz_X ;
  logic [13:0] partial_expo_nmlz_S ;
  logic [7:0] partial_expo_nmlz_neg;
  logic [7:0] partial_expo_nmlz_neg_T ;
  logic [7:0] partial_expo_nmlz_neg_R ;
  logic [7:0] partial_expo_nmlz_neg_C ;
  logic [7:0] partial_expo_nmlz_neg_X ;
  logic [13:0] partial_expo_nmlz_neg_S ;
  logic [7:0] partial_expo_nmlz_pos;
  logic [7:0] partial_expo_nmlz_pos_T ;
  logic [7:0] partial_expo_nmlz_pos_R ;
  logic [7:0] partial_expo_nmlz_pos_C ;
  logic [7:0] partial_expo_nmlz_pos_X ;
  logic [13:0] partial_expo_nmlz_pos_S ;
  logic [7:0] partial_expo_nxt;
  logic [7:0] partial_expo_nxt_T ;
  logic [7:0] partial_expo_nxt_R ;
  logic [7:0] partial_expo_nxt_C ;
  logic [7:0] partial_expo_nxt_X ;
  logic [13:0] partial_expo_nxt_S ;
  logic [39:0] partial_mant;
  logic [39:0] partial_mant_T ;
  logic [39:0] partial_mant_R ;
  logic [39:0] partial_mant_C ;
  logic [39:0] partial_mant_X ;
  logic [13:0] partial_mant_S ;
  logic [38:0] partial_mant_abs;
  logic [38:0] partial_mant_abs_T ;
  logic [38:0] partial_mant_abs_R ;
  logic [38:0] partial_mant_abs_C ;
  logic [38:0] partial_mant_abs_X ;
  logic [13:0] partial_mant_abs_S ;
  logic [39:0] partial_mant_nmlz;
  logic [39:0] partial_mant_nmlz_T ;
  logic [39:0] partial_mant_nmlz_R ;
  logic [39:0] partial_mant_nmlz_C ;
  logic [39:0] partial_mant_nmlz_X ;
  logic [13:0] partial_mant_nmlz_S ;
  logic [40:0] partial_mant_nmlz_tmp;
  logic [40:0] partial_mant_nmlz_tmp_T ;
  logic [40:0] partial_mant_nmlz_tmp_R ;
  logic [40:0] partial_mant_nmlz_tmp_C ;
  logic [40:0] partial_mant_nmlz_tmp_X ;
  logic [13:0] partial_mant_nmlz_tmp_S ;
  logic [39:0] partial_mant_nxt;
  logic [39:0] partial_mant_nxt_T ;
  logic [39:0] partial_mant_nxt_R ;
  logic [39:0] partial_mant_nxt_C ;
  logic [39:0] partial_mant_nxt_X ;
  logic [13:0] partial_mant_nxt_S ;
  logic partial_nan;
  logic partial_nan_T ;
  logic partial_nan_R ;
  logic partial_nan_C ;
  logic partial_nan_X ;
  logic [13:0] partial_nan_S ;
  logic partial_neg2;
  logic partial_neg2_T ;
  logic partial_neg2_R ;
  logic partial_neg2_C ;
  logic partial_neg2_X ;
  logic [13:0] partial_neg2_S ;
  logic [47:0] partial_result;
  logic [47:0] partial_result_T ;
  logic [47:0] partial_result_R ;
  logic [47:0] partial_result_C ;
  logic [47:0] partial_result_X ;
  logic [13:0] partial_result_S ;
  logic [7:0] partial_result_expo;
  logic [7:0]  partial_result_expo_T ;
  logic [7:0]  partial_result_expo_PREV_VAL1 ;
  logic [7:0]  partial_result_expo_PREV_VAL2 ;
  logic [7:0]  partial_result_expo_R ;
  logic [7:0]  partial_result_expo_X ;
  logic [7:0]  partial_result_expo_C ;
  logic [13:0] partial_result_expo_S ;
  logic partial_result_expo_t_flag ;
  logic partial_result_expo_r_flag ;
  assign partial_result_expo_S = 922 ;
  logic [39:0] partial_result_mant;
  logic [39:0]  partial_result_mant_T ;
  logic [39:0]  partial_result_mant_PREV_VAL1 ;
  logic [39:0]  partial_result_mant_PREV_VAL2 ;
  logic [39:0]  partial_result_mant_R ;
  logic [39:0]  partial_result_mant_X ;
  logic [39:0]  partial_result_mant_C ;
  logic [13:0] partial_result_mant_S ;
  logic partial_result_mant_t_flag ;
  logic partial_result_mant_r_flag ;
  assign partial_result_mant_S = 923 ;
  logic [47:0] partial_result_out;
  logic [47:0] partial_result_out_T ;
  logic [47:0] partial_result_out_R ;
  logic [47:0] partial_result_out_C ;
  logic [47:0] partial_result_out_X ;
  logic [13:0] partial_result_out_S ;
  logic partial_sign;
  logic partial_sign_T ;
  logic partial_sign_R ;
  logic partial_sign_C ;
  logic partial_sign_X ;
  logic [13:0] partial_sign_S ;
  logic [38:0] partial_umant;
  logic [38:0] partial_umant_T ;
  logic [38:0] partial_umant_R ;
  logic [38:0] partial_umant_C ;
  logic [38:0] partial_umant_X ;
  logic [13:0] partial_umant_S ;
  logic [9:0] partial_umant_nan;
  logic [9:0] partial_umant_nan_T ;
  logic [9:0] partial_umant_nan_R ;
  logic [9:0] partial_umant_nan_C ;
  logic [9:0] partial_umant_nan_X ;
  logic [13:0] partial_umant_nan_S ;
  logic shift_sel;
  logic  shift_sel_T ;
  logic  shift_sel_PREV_VAL1 ;
  logic  shift_sel_PREV_VAL2 ;
  logic  shift_sel_R ;
  logic  shift_sel_X ;
  logic  shift_sel_C ;
  logic [13:0] shift_sel_S ;
  logic shift_sel_t_flag ;
  logic shift_sel_r_flag ;
  assign shift_sel_S = 924 ;
  logic shift_vld;
  logic  shift_vld_T ;
  logic  shift_vld_PREV_VAL1 ;
  logic  shift_vld_PREV_VAL2 ;
  logic  shift_vld_R ;
  logic  shift_vld_X ;
  logic  shift_vld_C ;
  logic [13:0] shift_vld_S ;
  logic shift_vld_t_flag ;
  logic shift_vld_r_flag ;
  assign shift_vld_S = 925 ;
  assign _014_ = in_data[43:38] + 6'b101111;
  assign _014__S = 0 ;
  logic [43:0] in_data_C0 ;
  logic [43:0] in_data_R0 ;
  logic [43:0] in_data_X0 ;
  assign _014__T = in_data_T [43:38] ;
  assign in_data_C0 [43:38] = _014__C ;
  assign in_data_R0 [43:38] = _014__R ;
  assign in_data_X0 [43:38] = _014__X ;
 assign mant_sum = di_aligned_mant + oi_aligned_mant;
 assign mant_sum_S = 0 ;
 logic [39:0] di_aligned_mant_C0 ;
 logic [39:0] di_aligned_mant_R0 ;
 logic [39:0] di_aligned_mant_X0 ;
 logic [39:0] oi_aligned_mant_C0 ;
 logic [39:0] oi_aligned_mant_R0 ;
 logic [39:0] oi_aligned_mant_X0 ;
 assign mant_sum_T = di_aligned_mant_T | oi_aligned_mant_T ;
 assign di_aligned_mant_C0 = mant_sum_C ;
 assign di_aligned_mant_X0 = mant_sum_X ;
 assign oi_aligned_mant_C0 = mant_sum_C ;
 assign oi_aligned_mant_X0 = mant_sum_X ;
 assign di_aligned_mant_R0 = mant_sum_R | ( mant_sum_C & oi_aligned_mant_T );
 assign oi_aligned_mant_R0 = mant_sum_R | ( mant_sum_C & di_aligned_mant_T );
  assign _015_ = in_aligned_expo + 1'b1;
  assign _015__S = 0 ;
  logic [7:0] in_aligned_expo_C0 ;
  logic [7:0] in_aligned_expo_R0 ;
  logic [7:0] in_aligned_expo_X0 ;
  assign _015__T = in_aligned_expo_T ;
  assign in_aligned_expo_C0 = _015__C ;
  assign in_aligned_expo_R0 = _015__R ;
  assign in_aligned_expo_X0 = _015__X ;
  logic [1:0] fangyuan0;
  logic [1:0] fangyuan0_T ;
  logic [1:0] fangyuan0_R ;
  logic [1:0] fangyuan0_C ;
  logic [1:0] fangyuan0_X ;
  assign fangyuan0 = { 1'b0, mant_sum_point5 };
  assign fangyuan0_T = {  1'h0 , mant_sum_point5_T  };
  logic [13:0] fangyuan0_S ;
  assign fangyuan0_S = 0 ;
  logic [0:0] mant_sum_point5_R0 ;
  logic [0:0] mant_sum_point5_X0 ;
  logic [0:0] mant_sum_point5_C0 ;
  assign mant_sum_point5_R0 = fangyuan0_R [0:0] ;
  assign mant_sum_point5_X0 = fangyuan0_X [0:0] ;
  assign mant_sum_point5_C0 = fangyuan0_C [0:0] ;

 assign mant_sum_round = mant_sum_trans[41:2] + fangyuan0;
 assign mant_sum_round_S = 0 ;
 logic [41:0] mant_sum_trans_C0 ;
 logic [41:0] mant_sum_trans_R0 ;
 logic [41:0] mant_sum_trans_X0 ;
 logic [1:0] fangyuan0_C0 ;
 logic [1:0] fangyuan0_R0 ;
 logic [1:0] fangyuan0_X0 ;
 assign mant_sum_round_T = mant_sum_trans_T [41:2] | fangyuan0_T ;
 assign mant_sum_trans_C0 [41:2] = mant_sum_round_C ;
 assign mant_sum_trans_X0 [41:2] = mant_sum_round_X ;
 assign fangyuan0_C0 = mant_sum_round_C ;
 assign fangyuan0_X0 = mant_sum_round_X ;
 assign mant_sum_trans_R0 [41:2] = mant_sum_round_R | ( mant_sum_round_C & fangyuan0_T );
 assign fangyuan0_R0 = mant_sum_round_R | ( mant_sum_round_C & mant_sum_trans_T [41:2] );
  assign partial_expo_nmlz_pos = expo_trans + mant_sum_carry_pos;
  assign partial_expo_nmlz_pos_S = 0 ;
  logic [7:0] expo_trans_C0 ;
  logic [7:0] expo_trans_R0 ;
  logic [7:0] expo_trans_X0 ;
  logic [0:0] mant_sum_carry_pos_C0 ;
  logic [0:0] mant_sum_carry_pos_R0 ;
  logic [0:0] mant_sum_carry_pos_X0 ;
  assign partial_expo_nmlz_pos_T = expo_trans_T | mant_sum_carry_pos_T ;
  assign expo_trans_C0 = partial_expo_nmlz_pos_C ;
  assign expo_trans_X0 = partial_expo_nmlz_pos_X ;
  assign mant_sum_carry_pos_C0 = partial_expo_nmlz_pos_C ;
  assign mant_sum_carry_pos_X0 = partial_expo_nmlz_pos_X ;
  assign expo_trans_R0 = partial_expo_nmlz_pos_R | ( partial_expo_nmlz_pos_C & mant_sum_carry_pos_T );
  assign mant_sum_carry_pos_R0 = partial_expo_nmlz_pos_R | ( partial_expo_nmlz_pos_C & expo_trans_T );
  assign _016_ = _037_ + 1'b1;
  assign _016__S = 0 ;
  logic [38:0] _037__C0 ;
  logic [38:0] _037__R0 ;
  logic [38:0] _037__X0 ;
  assign _016__T = _037__T ;
  assign _037__C0 = _016__C ;
  assign _037__R0 = _016__R ;
  assign _037__X0 = _016__X ;
  assign fp32_mant_round = partial_mant_abs[38:15] + partial_mant_abs[14];
  assign fp32_mant_round_S = 0 ;
  logic [38:0] partial_mant_abs_C0 ;
  logic [38:0] partial_mant_abs_R0 ;
  logic [38:0] partial_mant_abs_X0 ;
  assign fp32_mant_round_T = partial_mant_abs_T [38:15] | partial_mant_abs_T [14] ;
  assign partial_mant_abs_C0 [38:15] = fp32_mant_round_C ;
  assign partial_mant_abs_X0 [38:15] = fp32_mant_round_X ;
  assign partial_mant_abs_C0 [14] = fp32_mant_round_C ;
  assign partial_mant_abs_X0 [14] = fp32_mant_round_X ;
  assign partial_mant_abs_R0 [38:15] = fp32_mant_round_R | ( fp32_mant_round_C & partial_mant_abs_T [14] );
  assign partial_mant_abs_R0 [14] = fp32_mant_round_R | ( fp32_mant_round_C & partial_mant_abs_T [38:15] );
  assign _017_ = partial_result[47:40] + 7'b1000000;
  assign _017__S = 0 ;
  logic [47:0] partial_result_C0 ;
  logic [47:0] partial_result_R0 ;
  logic [47:0] partial_result_X0 ;
  assign _017__T = partial_result_T [47:40] ;
  assign partial_result_C0 [47:40] = _017__C ;
  assign partial_result_R0 [47:40] = _017__R ;
  assign partial_result_X0 [47:40] = _017__X ;
  assign fp32_expo_round = _017_ + _023_[0];
  assign fp32_expo_round_S = 0 ;
  logic [7:0] _017__C0 ;
  logic [7:0] _017__R0 ;
  logic [7:0] _017__X0 ;
  logic [8:0] _023__C0 ;
  logic [8:0] _023__R0 ;
  logic [8:0] _023__X0 ;
  assign fp32_expo_round_T = _017__T | _023__T [0] ;
  assign _017__C0 = fp32_expo_round_C ;
  assign _017__X0 = fp32_expo_round_X ;
  assign _023__C0 [0] = fp32_expo_round_C ;
  assign _023__X0 [0] = fp32_expo_round_X ;
  assign _017__R0 = fp32_expo_round_R | ( fp32_expo_round_C & _023__T [0] );
  assign _023__R0 [0] = fp32_expo_round_R | ( fp32_expo_round_C & _017__T );
  assign _013_ = in_valid & in_sel;
  assign _013__S = 0 ;
  logic [0:0] in_valid_C0 ;
  logic [0:0] in_valid_R0 ;
  logic [0:0] in_valid_X0 ;
  logic [0:0] in_sel_C0 ;
  logic [0:0] in_sel_R0 ;
  logic [0:0] in_sel_X0 ;
  assign _013__T = in_valid_T | in_sel_T ;
  assign in_valid_C0 = _013__C ;
  assign in_valid_X0 = _013__X ;
  assign in_sel_C0 = _013__C ;
  assign in_sel_X0 = _013__X ;
  assign in_valid_R0 = ( _013__R | _013__C & in_sel_T ) & { 1{ in_sel != 0 }} ;
  assign in_sel_R0 = ( _013__R | _013__C & in_valid_T ) & { 1{ in_valid != 0 }} ;
  assign _006_ = shift_vld & shift_sel;
  assign _006__S = 0 ;
  logic [0:0] shift_vld_C0 ;
  logic [0:0] shift_vld_R0 ;
  logic [0:0] shift_vld_X0 ;
  logic [0:0] shift_sel_C0 ;
  logic [0:0] shift_sel_R0 ;
  logic [0:0] shift_sel_X0 ;
  assign _006__T = shift_vld_T | shift_sel_T ;
  assign shift_vld_C0 = _006__C ;
  assign shift_vld_X0 = _006__X ;
  assign shift_sel_C0 = _006__C ;
  assign shift_sel_X0 = _006__X ;
  assign shift_vld_R0 = ( _006__R | _006__C & shift_sel_T ) & { 1{ shift_sel != 0 }} ;
  assign shift_sel_R0 = ( _006__R | _006__C & shift_vld_T ) & { 1{ shift_vld != 0 }} ;
  assign _002_ = msum_vld & msum_sel;
  assign _002__S = 0 ;
  logic [0:0] msum_vld_C0 ;
  logic [0:0] msum_vld_R0 ;
  logic [0:0] msum_vld_X0 ;
  logic [0:0] msum_sel_C0 ;
  logic [0:0] msum_sel_R0 ;
  logic [0:0] msum_sel_X0 ;
  assign _002__T = msum_vld_T | msum_sel_T ;
  assign msum_vld_C0 = _002__C ;
  assign msum_vld_X0 = _002__X ;
  assign msum_sel_C0 = _002__C ;
  assign msum_sel_X0 = _002__X ;
  assign msum_vld_R0 = ( _002__R | _002__C & msum_sel_T ) & { 1{ msum_sel != 0 }} ;
  assign msum_sel_R0 = ( _002__R | _002__C & msum_vld_T ) & { 1{ msum_vld != 0 }} ;
  assign _018_ = in_valid & _031_;
  assign _018__S = 0 ;
  logic [0:0] in_valid_C1 ;
  logic [0:0] in_valid_R1 ;
  logic [0:0] in_valid_X1 ;
  logic [0:0] _031__C0 ;
  logic [0:0] _031__R0 ;
  logic [0:0] _031__X0 ;
  assign _018__T = in_valid_T | _031__T ;
  assign in_valid_C1 = _018__C ;
  assign in_valid_X1 = _018__X ;
  assign _031__C0 = _018__C ;
  assign _031__X0 = _018__X ;
  assign in_valid_R1 = ( _018__R | _018__C & _031__T ) & { 1{ _031_ != 0 }} ;
  assign _031__R0 = ( _018__R | _018__C & in_valid_T ) & { 1{ in_valid != 0 }} ;
  assign _019_ = shift_vld & _032_;
  assign _019__S = 0 ;
  logic [0:0] shift_vld_C1 ;
  logic [0:0] shift_vld_R1 ;
  logic [0:0] shift_vld_X1 ;
  logic [0:0] _032__C0 ;
  logic [0:0] _032__R0 ;
  logic [0:0] _032__X0 ;
  assign _019__T = shift_vld_T | _032__T ;
  assign shift_vld_C1 = _019__C ;
  assign shift_vld_X1 = _019__X ;
  assign _032__C0 = _019__C ;
  assign _032__X0 = _019__X ;
  assign shift_vld_R1 = ( _019__R | _019__C & _032__T ) & { 1{ _032_ != 0 }} ;
  assign _032__R0 = ( _019__R | _019__C & shift_vld_T ) & { 1{ shift_vld != 0 }} ;
  assign mant_sum_point5 = mant_sum_trans[1] & _038_;
  assign mant_sum_point5_S = 0 ;
  logic [0:0] _038__C0 ;
  logic [0:0] _038__R0 ;
  logic [0:0] _038__X0 ;
  assign mant_sum_point5_T = mant_sum_trans_T [1] | _038__T ;
  assign mant_sum_trans_C0 [1] = mant_sum_point5_C ;
  assign mant_sum_trans_X0 [1] = mant_sum_point5_X ;
  assign _038__C0 = mant_sum_point5_C ;
  assign _038__X0 = mant_sum_point5_X ;
  assign mant_sum_trans_R0 [1] = ( mant_sum_point5_R | mant_sum_point5_C & _038__T ) & { 1{ _038_ != 0 }} ;
  assign _038__R0 = ( mant_sum_point5_R | mant_sum_point5_C & mant_sum_trans_T [1] ) & { 1{ mant_sum_trans[1] != 0 }} ;
  assign _020_ = _033_ & _039_;
  assign _020__S = 0 ;
  logic [0:0] _033__C0 ;
  logic [0:0] _033__R0 ;
  logic [0:0] _033__X0 ;
  logic [0:0] _039__C0 ;
  logic [0:0] _039__R0 ;
  logic [0:0] _039__X0 ;
  assign _020__T = _033__T | _039__T ;
  assign _033__C0 = _020__C ;
  assign _033__X0 = _020__X ;
  assign _039__C0 = _020__C ;
  assign _039__X0 = _020__X ;
  assign _033__R0 = ( _020__R | _020__C & _039__T ) & { 1{ _039_ != 0 }} ;
  assign _039__R0 = ( _020__R | _020__C & _033__T ) & { 1{ _033_ != 0 }} ;
  assign mant_sum_carry_pos = _020_ & mant_sum_point5;
  assign mant_sum_carry_pos_S = 0 ;
  logic [0:0] _020__C0 ;
  logic [0:0] _020__R0 ;
  logic [0:0] _020__X0 ;
  logic [0:0] mant_sum_point5_C1 ;
  logic [0:0] mant_sum_point5_R1 ;
  logic [0:0] mant_sum_point5_X1 ;
  assign mant_sum_carry_pos_T = _020__T | mant_sum_point5_T ;
  assign _020__C0 = mant_sum_carry_pos_C ;
  assign _020__X0 = mant_sum_carry_pos_X ;
  assign mant_sum_point5_C1 = mant_sum_carry_pos_C ;
  assign mant_sum_point5_X1 = mant_sum_carry_pos_X ;
  assign _020__R0 = ( mant_sum_carry_pos_R | mant_sum_carry_pos_C & mant_sum_point5_T ) & { 1{ mant_sum_point5 != 0 }} ;
  assign mant_sum_point5_R1 = ( mant_sum_carry_pos_R | mant_sum_carry_pos_C & _020__T ) & { 1{ _020_ != 0 }} ;
  assign _021_ = mant_sum_trans[41] & _034_;
  assign _021__S = 0 ;
  assign { mant_sum_trans_R0 [0] } = 0;
  assign { mant_sum_trans_X0 [0] } = 0;
  assign { mant_sum_trans_C0 [0] } = 0;
  logic [41:0] mant_sum_trans_C1 ;
  logic [41:0] mant_sum_trans_R1 ;
  logic [41:0] mant_sum_trans_X1 ;
  logic [0:0] _034__C0 ;
  logic [0:0] _034__R0 ;
  logic [0:0] _034__X0 ;
  assign _021__T = mant_sum_trans_T [41] | _034__T ;
  assign mant_sum_trans_C1 [41] = _021__C ;
  assign mant_sum_trans_X1 [41] = _021__X ;
  assign _034__C0 = _021__C ;
  assign _034__X0 = _021__X ;
  assign mant_sum_trans_R1 [41] = ( _021__R | _021__C & _034__T ) & { 1{ _034_ != 0 }} ;
  assign _034__R0 = ( _021__R | _021__C & mant_sum_trans_T [41] ) & { 1{ mant_sum_trans[41] != 0 }} ;
  assign _022_ = _021_ & _040_;
  assign _022__S = 0 ;
  logic [0:0] _021__C0 ;
  logic [0:0] _021__R0 ;
  logic [0:0] _021__X0 ;
  logic [0:0] _040__C0 ;
  logic [0:0] _040__R0 ;
  logic [0:0] _040__X0 ;
  assign _022__T = _021__T | _040__T ;
  assign _021__C0 = _022__C ;
  assign _021__X0 = _022__X ;
  assign _040__C0 = _022__C ;
  assign _040__X0 = _022__X ;
  assign _021__R0 = ( _022__R | _022__C & _040__T ) & { 1{ _040_ != 0 }} ;
  assign _040__R0 = ( _022__R | _022__C & _021__T ) & { 1{ _021_ != 0 }} ;
  assign mant_sum_carry_neg = _022_ & mant_sum_point5;
  assign mant_sum_carry_neg_S = 0 ;
  logic [0:0] _022__C0 ;
  logic [0:0] _022__R0 ;
  logic [0:0] _022__X0 ;
  logic [0:0] mant_sum_point5_C2 ;
  logic [0:0] mant_sum_point5_R2 ;
  logic [0:0] mant_sum_point5_X2 ;
  assign mant_sum_carry_neg_T = _022__T | mant_sum_point5_T ;
  assign _022__C0 = mant_sum_carry_neg_C ;
  assign _022__X0 = mant_sum_carry_neg_X ;
  assign mant_sum_point5_C2 = mant_sum_carry_neg_C ;
  assign mant_sum_point5_X2 = mant_sum_carry_neg_X ;
  assign _022__R0 = ( mant_sum_carry_neg_R | mant_sum_carry_neg_C & mant_sum_point5_T ) & { 1{ mant_sum_point5 != 0 }} ;
  assign mant_sum_point5_R2 = ( mant_sum_carry_neg_R | mant_sum_carry_neg_C & _022__T ) & { 1{ _022_ != 0 }} ;
  assign _010_ = msum_vld & _035_;
  assign _010__S = 0 ;
  logic [0:0] msum_vld_C1 ;
  logic [0:0] msum_vld_R1 ;
  logic [0:0] msum_vld_X1 ;
  logic [0:0] _035__C0 ;
  logic [0:0] _035__R0 ;
  logic [0:0] _035__X0 ;
  assign _010__T = msum_vld_T | _035__T ;
  assign msum_vld_C1 = _010__C ;
  assign msum_vld_X1 = _010__X ;
  assign _035__C0 = _010__C ;
  assign _035__X0 = _010__X ;
  assign msum_vld_R1 = ( _010__R | _010__C & _035__T ) & { 1{ _035_ != 0 }} ;
  assign _035__R0 = ( _010__R | _010__C & msum_vld_T ) & { 1{ msum_vld != 0 }} ;
  assign _009_ = final_sel & final_vld;
  assign _009__S = 0 ;
  logic [0:0] final_sel_C0 ;
  logic [0:0] final_sel_R0 ;
  logic [0:0] final_sel_X0 ;
  logic [0:0] final_vld_C0 ;
  logic [0:0] final_vld_R0 ;
  logic [0:0] final_vld_X0 ;
  assign _009__T = final_sel_T | final_vld_T ;
  assign final_sel_C0 = _009__C ;
  assign final_sel_X0 = _009__X ;
  assign final_vld_C0 = _009__C ;
  assign final_vld_X0 = _009__X ;
  assign final_sel_R0 = ( _009__R | _009__C & final_vld_T ) & { 1{ final_vld != 0 }} ;
  assign final_vld_R0 = ( _009__R | _009__C & final_sel_T ) & { 1{ final_sel != 0 }} ;
  assign partial_neg2 = partial_result[39] & _036_;
  assign partial_neg2_S = 0 ;
  logic [0:0] _036__C0 ;
  logic [0:0] _036__R0 ;
  logic [0:0] _036__X0 ;
  assign partial_neg2_T = partial_result_T [39] | _036__T ;
  assign partial_result_C0 [39] = partial_neg2_C ;
  assign partial_result_X0 [39] = partial_neg2_X ;
  assign _036__C0 = partial_neg2_C ;
  assign _036__X0 = partial_neg2_X ;
  assign partial_result_R0 [39] = ( partial_neg2_R | partial_neg2_C & _036__T ) & { 1{ _036_ != 0 }} ;
  assign _036__R0 = ( partial_neg2_R | partial_neg2_C & partial_result_T [39] ) & { 1{ partial_result[39] != 0 }} ;
  assign fp32_mant_carry = _041_ & partial_mant_abs[14];
  assign fp32_mant_carry_S = 0 ;
  assign { partial_mant_abs_R0 [0], partial_mant_abs_R0 [1], partial_mant_abs_R0 [2], partial_mant_abs_R0 [3], partial_mant_abs_R0 [4], partial_mant_abs_R0 [5], partial_mant_abs_R0 [6], partial_mant_abs_R0 [7], partial_mant_abs_R0 [8], partial_mant_abs_R0 [9], partial_mant_abs_R0 [10], partial_mant_abs_R0 [11], partial_mant_abs_R0 [12], partial_mant_abs_R0 [13] } = 0;
  assign { partial_mant_abs_X0 [0], partial_mant_abs_X0 [1], partial_mant_abs_X0 [2], partial_mant_abs_X0 [3], partial_mant_abs_X0 [4], partial_mant_abs_X0 [5], partial_mant_abs_X0 [6], partial_mant_abs_X0 [7], partial_mant_abs_X0 [8], partial_mant_abs_X0 [9], partial_mant_abs_X0 [10], partial_mant_abs_X0 [11], partial_mant_abs_X0 [12], partial_mant_abs_X0 [13] } = 0;
  assign { partial_mant_abs_C0 [0], partial_mant_abs_C0 [1], partial_mant_abs_C0 [2], partial_mant_abs_C0 [3], partial_mant_abs_C0 [4], partial_mant_abs_C0 [5], partial_mant_abs_C0 [6], partial_mant_abs_C0 [7], partial_mant_abs_C0 [8], partial_mant_abs_C0 [9], partial_mant_abs_C0 [10], partial_mant_abs_C0 [11], partial_mant_abs_C0 [12], partial_mant_abs_C0 [13] } = 0;
  logic [0:0] _041__C0 ;
  logic [0:0] _041__R0 ;
  logic [0:0] _041__X0 ;
  logic [38:0] partial_mant_abs_C1 ;
  logic [38:0] partial_mant_abs_R1 ;
  logic [38:0] partial_mant_abs_X1 ;
  assign fp32_mant_carry_T = _041__T | partial_mant_abs_T [14] ;
  assign _041__C0 = fp32_mant_carry_C ;
  assign _041__X0 = fp32_mant_carry_X ;
  assign partial_mant_abs_C1 [14] = fp32_mant_carry_C ;
  assign partial_mant_abs_X1 [14] = fp32_mant_carry_X ;
  assign _041__R0 = ( fp32_mant_carry_R | fp32_mant_carry_C & partial_mant_abs_T [14] ) & { 1{ partial_mant_abs[14] != 0 }} ;
  assign partial_mant_abs_R1 [14] = ( fp32_mant_carry_R | fp32_mant_carry_C & _041__T ) & { 1{ _041_ != 0 }} ;
  assign _027_ = di_expo_shift >= 6'b101000;
  assign _027__S = 0 ;
  logic [7:0] di_expo_shift_C0 ;
  logic [7:0] di_expo_shift_R0 ;
  logic [7:0] di_expo_shift_X0 ;
  assign _027__T = | di_expo_shift_T ;
  assign di_expo_shift_C0 = { 8{ _027__C }} ;
  assign di_expo_shift_R0 = { 8{ _027__R }} ;
  assign di_expo_shift_X0 = { 8{ _027__X }} ;
  assign _028_ = oi_expo_shift >= 6'b101000;
  assign _028__S = 0 ;
  logic [7:0] oi_expo_shift_C0 ;
  logic [7:0] oi_expo_shift_R0 ;
  logic [7:0] oi_expo_shift_X0 ;
  assign _028__T = | oi_expo_shift_T ;
  assign oi_expo_shift_C0 = { 8{ _028__C }} ;
  assign oi_expo_shift_R0 = { 8{ _028__R }} ;
  assign oi_expo_shift_X0 = { 8{ _028__X }} ;
  assign _029_ = di_expo > oi_expo;
  assign _029__S = 0 ;
  logic [7:0] di_expo_C0 ;
  logic [7:0] di_expo_R0 ;
  logic [7:0] di_expo_X0 ;
  logic [7:0] oi_expo_C0 ;
  logic [7:0] oi_expo_R0 ;
  logic [7:0] oi_expo_X0 ;
  assign _029__T = (| di_expo_T ) | (|oi_expo_T ) ;
  assign di_expo_C0 = { 8{ _029__C }} ;
  assign di_expo_R0 = { 8{ _029__R }} | ( { 8{ _029__C }} & oi_expo_T );
  assign di_expo_X0 = { 8{ _029__X }} ;
  assign oi_expo_C0 = { 8{ _029__C }} ;
  assign oi_expo_R0 = { 8{ _029__R }} | ( { 8{ _029__C }} & di_expo_T );
  assign oi_expo_X0 = { 8{ _029__X }} ;
  assign _030_ = di_expo < oi_expo;
  assign _030__S = 0 ;
  logic [7:0] di_expo_C1 ;
  logic [7:0] di_expo_R1 ;
  logic [7:0] di_expo_X1 ;
  logic [7:0] oi_expo_C1 ;
  logic [7:0] oi_expo_R1 ;
  logic [7:0] oi_expo_X1 ;
  assign _030__T = (| di_expo_T ) | (|oi_expo_T ) ;
  assign di_expo_C1 = { 8{ _030__C }} ;
  assign di_expo_R1 = { 8{ _030__R }} | ( { 8{ _030__C }} & oi_expo_T );
  assign di_expo_X1 = { 8{ _030__X }} ;
  assign oi_expo_C1 = { 8{ _030__C }} ;
  assign oi_expo_R1 = { 8{ _030__R }} | ( { 8{ _030__C }} & di_expo_T );
  assign oi_expo_X1 = { 8{ _030__X }} ;
  assign _031_ = ~ in_nan;
  logic [0:0] in_nan_C0 ;
  logic [0:0] in_nan_R0 ;
  logic [0:0] in_nan_X0 ;
  assign _031__T = in_nan_T ;
  assign in_nan_C0 = _031__C ;
  assign in_nan_R0 = _031__R ;
  assign in_nan_X0 = _031__X ;
  assign _031__S = 0 ;
  assign _032_ = ~ in_nan_d;
  logic [0:0] in_nan_d_C0 ;
  logic [0:0] in_nan_d_R0 ;
  logic [0:0] in_nan_d_X0 ;
  assign _032__T = in_nan_d_T ;
  assign in_nan_d_C0 = _032__C ;
  assign in_nan_d_R0 = _032__R ;
  assign in_nan_d_X0 = _032__X ;
  assign _032__S = 0 ;
  assign _033_ = ~ mant_sum_trans[41];
  assign { mant_sum_trans_R1 [0], mant_sum_trans_R1 [1], mant_sum_trans_R1 [2], mant_sum_trans_R1 [3], mant_sum_trans_R1 [4], mant_sum_trans_R1 [5], mant_sum_trans_R1 [6], mant_sum_trans_R1 [7], mant_sum_trans_R1 [8], mant_sum_trans_R1 [9], mant_sum_trans_R1 [10], mant_sum_trans_R1 [11], mant_sum_trans_R1 [12], mant_sum_trans_R1 [13], mant_sum_trans_R1 [14], mant_sum_trans_R1 [15], mant_sum_trans_R1 [16], mant_sum_trans_R1 [17], mant_sum_trans_R1 [18], mant_sum_trans_R1 [19], mant_sum_trans_R1 [20], mant_sum_trans_R1 [21], mant_sum_trans_R1 [22], mant_sum_trans_R1 [23], mant_sum_trans_R1 [24], mant_sum_trans_R1 [25], mant_sum_trans_R1 [26], mant_sum_trans_R1 [27], mant_sum_trans_R1 [28], mant_sum_trans_R1 [29], mant_sum_trans_R1 [30], mant_sum_trans_R1 [31], mant_sum_trans_R1 [32], mant_sum_trans_R1 [33], mant_sum_trans_R1 [34], mant_sum_trans_R1 [35], mant_sum_trans_R1 [36], mant_sum_trans_R1 [37], mant_sum_trans_R1 [38], mant_sum_trans_R1 [39], mant_sum_trans_R1 [40] } = 0;
  assign { mant_sum_trans_X1 [0], mant_sum_trans_X1 [1], mant_sum_trans_X1 [2], mant_sum_trans_X1 [3], mant_sum_trans_X1 [4], mant_sum_trans_X1 [5], mant_sum_trans_X1 [6], mant_sum_trans_X1 [7], mant_sum_trans_X1 [8], mant_sum_trans_X1 [9], mant_sum_trans_X1 [10], mant_sum_trans_X1 [11], mant_sum_trans_X1 [12], mant_sum_trans_X1 [13], mant_sum_trans_X1 [14], mant_sum_trans_X1 [15], mant_sum_trans_X1 [16], mant_sum_trans_X1 [17], mant_sum_trans_X1 [18], mant_sum_trans_X1 [19], mant_sum_trans_X1 [20], mant_sum_trans_X1 [21], mant_sum_trans_X1 [22], mant_sum_trans_X1 [23], mant_sum_trans_X1 [24], mant_sum_trans_X1 [25], mant_sum_trans_X1 [26], mant_sum_trans_X1 [27], mant_sum_trans_X1 [28], mant_sum_trans_X1 [29], mant_sum_trans_X1 [30], mant_sum_trans_X1 [31], mant_sum_trans_X1 [32], mant_sum_trans_X1 [33], mant_sum_trans_X1 [34], mant_sum_trans_X1 [35], mant_sum_trans_X1 [36], mant_sum_trans_X1 [37], mant_sum_trans_X1 [38], mant_sum_trans_X1 [39], mant_sum_trans_X1 [40] } = 0;
  assign { mant_sum_trans_C1 [0], mant_sum_trans_C1 [1], mant_sum_trans_C1 [2], mant_sum_trans_C1 [3], mant_sum_trans_C1 [4], mant_sum_trans_C1 [5], mant_sum_trans_C1 [6], mant_sum_trans_C1 [7], mant_sum_trans_C1 [8], mant_sum_trans_C1 [9], mant_sum_trans_C1 [10], mant_sum_trans_C1 [11], mant_sum_trans_C1 [12], mant_sum_trans_C1 [13], mant_sum_trans_C1 [14], mant_sum_trans_C1 [15], mant_sum_trans_C1 [16], mant_sum_trans_C1 [17], mant_sum_trans_C1 [18], mant_sum_trans_C1 [19], mant_sum_trans_C1 [20], mant_sum_trans_C1 [21], mant_sum_trans_C1 [22], mant_sum_trans_C1 [23], mant_sum_trans_C1 [24], mant_sum_trans_C1 [25], mant_sum_trans_C1 [26], mant_sum_trans_C1 [27], mant_sum_trans_C1 [28], mant_sum_trans_C1 [29], mant_sum_trans_C1 [30], mant_sum_trans_C1 [31], mant_sum_trans_C1 [32], mant_sum_trans_C1 [33], mant_sum_trans_C1 [34], mant_sum_trans_C1 [35], mant_sum_trans_C1 [36], mant_sum_trans_C1 [37], mant_sum_trans_C1 [38], mant_sum_trans_C1 [39], mant_sum_trans_C1 [40] } = 0;
  logic [41:0] mant_sum_trans_C2 ;
  logic [41:0] mant_sum_trans_R2 ;
  logic [41:0] mant_sum_trans_X2 ;
  assign _033__T = mant_sum_trans_T [41] ;
  assign mant_sum_trans_C2 [41] = _033__C ;
  assign mant_sum_trans_R2 [41] = _033__R ;
  assign mant_sum_trans_X2 [41] = _033__X ;
  assign _033__S = 0 ;
  assign _034_ = ~ mant_sum_trans[40];
  assign _034__T = mant_sum_trans_T [40] ;
  assign mant_sum_trans_C2 [40] = _034__C ;
  assign mant_sum_trans_R2 [40] = _034__R ;
  assign mant_sum_trans_X2 [40] = _034__X ;
  assign _034__S = 0 ;
  assign _035_ = ~ msum_sel;
  logic [0:0] msum_sel_C1 ;
  logic [0:0] msum_sel_R1 ;
  logic [0:0] msum_sel_X1 ;
  assign _035__T = msum_sel_T ;
  assign msum_sel_C1 = _035__C ;
  assign msum_sel_R1 = _035__R ;
  assign msum_sel_X1 = _035__X ;
  assign _035__S = 0 ;
  assign _036_ = ~ _047_;
  logic [0:0] _047__C0 ;
  logic [0:0] _047__R0 ;
  logic [0:0] _047__X0 ;
  assign _036__T = _047__T ;
  assign _047__C0 = _036__C ;
  assign _047__R0 = _036__R ;
  assign _047__X0 = _036__X ;
  assign _036__S = 0 ;
  assign _037_ = ~ partial_result[38:0];
  assign _037__T = partial_result_T [38:0] ;
  assign partial_result_C0 [38:0] = _037__C ;
  assign partial_result_R0 [38:0] = _037__R ;
  assign partial_result_X0 [38:0] = _037__X ;
  assign _037__S = 0 ;
  assign in_nan = di_nan | oi_nan;
  assign in_nan_S = 0 ;
  logic [0:0] di_nan_C0 ;
  logic [0:0] di_nan_R0 ;
  logic [0:0] di_nan_X0 ;
  logic [0:0] oi_nan_C0 ;
  logic [0:0] oi_nan_R0 ;
  logic [0:0] oi_nan_X0 ;
  assign in_nan_T = di_nan_T | oi_nan_T ;
  assign di_nan_C0 = in_nan_C ;
  assign di_nan_X0 = in_nan_X ;
  assign oi_nan_C0 = in_nan_C ;
  assign oi_nan_X0 = in_nan_X ;
  assign di_nan_R0 = ( in_nan_R | in_nan_C & oi_nan_T ) & { 1{ oi_nan != 1'b1 }} ;
  assign oi_nan_R0 = ( in_nan_R | in_nan_C & di_nan_T ) & { 1{ di_nan != 1'b1 }} ;
  assign _038_ = _033_ | mant_sum_trans[0];
  assign _038__S = 0 ;
  logic [0:0] _033__C1 ;
  logic [0:0] _033__R1 ;
  logic [0:0] _033__X1 ;
  assign _038__T = _033__T | mant_sum_trans_T [0] ;
  assign _033__C1 = _038__C ;
  assign _033__X1 = _038__X ;
  assign mant_sum_trans_C2 [0] = _038__C ;
  assign mant_sum_trans_X2 [0] = _038__X ;
  assign _033__R1 = ( _038__R | _038__C & mant_sum_trans_T [0] ) & { 1{ mant_sum_trans[0] != 1'b1 }} ;
  assign mant_sum_trans_R2 [0] = ( _038__R | _038__C & _033__T ) & { 1{ _033_ != 1'b1 }} ;
  assign _023_[0] = fp32_mant_carry | partial_neg2;
  assign _023__S = 0 ;
  logic [0:0] fp32_mant_carry_C0 ;
  logic [0:0] fp32_mant_carry_R0 ;
  logic [0:0] fp32_mant_carry_X0 ;
  logic [0:0] partial_neg2_C0 ;
  logic [0:0] partial_neg2_R0 ;
  logic [0:0] partial_neg2_X0 ;
  assign _023__T [0] = fp32_mant_carry_T | partial_neg2_T ;
  assign fp32_mant_carry_C0 = _023__C [0] ;
  assign fp32_mant_carry_X0 = _023__X [0] ;
  assign partial_neg2_C0 = _023__C [0] ;
  assign partial_neg2_X0 = _023__X [0] ;
  assign fp32_mant_carry_R0 = ( _023__R [0] | _023__C [0] & partial_neg2_T ) & { 1{ partial_neg2 != 1'b1 }} ;
  assign partial_neg2_R0 = ( _023__R [0] | _023__C [0] & fp32_mant_carry_T ) & { 1{ fp32_mant_carry != 1'b1 }} ;
  always @(posedge nvdla_core_clk)
      out_final_data <= _008_;
  logic [31:0] _008__X0 ;
  logic [31:0] _008__R0 ;
  logic [31:0] _008__C0 ;
  assign _008__X0 = { 32{ out_final_data_S != _008__S }} ;
  assign _008__R0 = 0 ;
  assign _008__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      out_final_data_T 		<= !nvdla_core_rstn ? 0 : ( _008__T & _008__X0 );
  always @( posedge nvdla_core_clk )
      out_final_data_t_flag 	<= !nvdla_core_rstn ? 0 : out_final_data_t_flag ? 1 : | _008__T & ( | _008__X0 );
  always @( posedge nvdla_core_clk )
      out_final_data_r_flag 	<= !nvdla_core_rstn ? 0 : out_final_data_r_flag ? 1 : out_final_data_t_flag ? 0 : ( | out_final_data_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      out_final_valid <= 1'b0;
    else
      out_final_valid <= _009_;
  logic [0:0] _009__X0 ;
  logic [0:0] _009__R0 ;
  logic [0:0] _009__C0 ;
  assign _009__X0 = { 1{ out_final_valid_S != _009__S }} ;
  assign _009__R0 = 0 ;
  assign _009__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      out_final_valid_T 		<= !nvdla_core_rstn ? 0 : ( _009__T & _009__X0 );
  always @( posedge nvdla_core_clk )
      out_final_valid_t_flag 	<= !nvdla_core_rstn ? 0 : out_final_valid_t_flag ? 1 : | _009__T & ( | _009__X0 );
  always @( posedge nvdla_core_clk )
      out_final_valid_r_flag 	<= !nvdla_core_rstn ? 0 : out_final_valid_r_flag ? 1 : out_final_valid_t_flag ? 0 : ( | out_final_valid_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      out_partial_valid <= 1'b0;
    else
      out_partial_valid <= _010_;
  logic [0:0] _010__X0 ;
  logic [0:0] _010__R0 ;
  logic [0:0] _010__C0 ;
  assign _010__X0 = { 1{ out_partial_valid_S != _010__S }} ;
  assign _010__R0 = 0 ;
  assign _010__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      out_partial_valid_T 		<= !nvdla_core_rstn ? 0 : ( _010__T & _010__X0 );
  always @( posedge nvdla_core_clk )
      out_partial_valid_t_flag 	<= !nvdla_core_rstn ? 0 : out_partial_valid_t_flag ? 1 : | _010__T & ( | _010__X0 );
  always @( posedge nvdla_core_clk )
      out_partial_valid_r_flag 	<= !nvdla_core_rstn ? 0 : out_partial_valid_r_flag ? 1 : out_partial_valid_t_flag ? 0 : ( | out_partial_valid_R ) ;
  always @(posedge nvdla_core_clk)
      partial_result_mant <= _012_;
  logic [39:0] _012__X0 ;
  logic [39:0] _012__R0 ;
  logic [39:0] _012__C0 ;
  assign _012__X0 = { 40{ partial_result_mant_S != _012__S }} ;
  assign _012__R0 = 0 ;
  assign _012__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      partial_result_mant_T 		<= !nvdla_core_rstn ? 0 : ( _012__T & _012__X0 );
  always @( posedge nvdla_core_clk )
      partial_result_mant_t_flag 	<= !nvdla_core_rstn ? 0 : partial_result_mant_t_flag ? 1 : | _012__T & ( | _012__X0 );
  always @( posedge nvdla_core_clk )
      partial_result_mant_r_flag 	<= !nvdla_core_rstn ? 0 : partial_result_mant_r_flag ? 1 : partial_result_mant_t_flag ? 0 : ( | partial_result_mant_R ) ;
  always @(posedge nvdla_core_clk)
      partial_result_expo <= _011_;
  logic [7:0] _011__X0 ;
  logic [7:0] _011__R0 ;
  logic [7:0] _011__C0 ;
  assign _011__X0 = { 8{ partial_result_expo_S != _011__S }} ;
  assign _011__R0 = 0 ;
  assign _011__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      partial_result_expo_T 		<= !nvdla_core_rstn ? 0 : ( _011__T & _011__X0 );
  always @( posedge nvdla_core_clk )
      partial_result_expo_t_flag 	<= !nvdla_core_rstn ? 0 : partial_result_expo_t_flag ? 1 : | _011__T & ( | _011__X0 );
  always @( posedge nvdla_core_clk )
      partial_result_expo_r_flag 	<= !nvdla_core_rstn ? 0 : partial_result_expo_r_flag ? 1 : partial_result_expo_t_flag ? 0 : ( | partial_result_expo_R ) ;
  always @(posedge nvdla_core_clk)
      mant_sum_trans <= _005_;
  logic [41:0] _005__X0 ;
  logic [41:0] _005__R0 ;
  logic [41:0] _005__C0 ;
  assign _005__X0 = { 42{ mant_sum_trans_S != _005__S }} ;
  assign _005__R0 = 0 ;
  assign _005__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      mant_sum_trans_T 		<= !nvdla_core_rstn ? 0 : ( _005__T & _005__X0 );
  always @( posedge nvdla_core_clk )
      mant_sum_trans_t_flag 	<= !nvdla_core_rstn ? 0 : mant_sum_trans_t_flag ? 1 : | _005__T & ( | _005__X0 );
  always @( posedge nvdla_core_clk )
      mant_sum_trans_r_flag 	<= !nvdla_core_rstn ? 0 : mant_sum_trans_r_flag ? 1 : mant_sum_trans_t_flag ? 0 : ( | mant_sum_trans_R ) ;
  always @(posedge nvdla_core_clk)
      expo_trans <= _001_;
  logic [7:0] _001__X0 ;
  logic [7:0] _001__R0 ;
  logic [7:0] _001__C0 ;
  assign _001__X0 = { 8{ expo_trans_S != _001__S }} ;
  assign _001__R0 = 0 ;
  assign _001__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      expo_trans_T 		<= !nvdla_core_rstn ? 0 : ( _001__T & _001__X0 );
  always @( posedge nvdla_core_clk )
      expo_trans_t_flag 	<= !nvdla_core_rstn ? 0 : expo_trans_t_flag ? 1 : | _001__T & ( | _001__X0 );
  always @( posedge nvdla_core_clk )
      expo_trans_r_flag 	<= !nvdla_core_rstn ? 0 : expo_trans_r_flag ? 1 : expo_trans_t_flag ? 0 : ( | expo_trans_R ) ;
  always @(posedge nvdla_core_clk)
      in_aligned_expo <= _003_;
  logic [7:0] _003__X0 ;
  logic [7:0] _003__R0 ;
  logic [7:0] _003__C0 ;
  assign _003__X0 = { 8{ in_aligned_expo_S != _003__S }} ;
  assign _003__R0 = 0 ;
  assign _003__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      in_aligned_expo_T 		<= !nvdla_core_rstn ? 0 : ( _003__T & _003__X0 );
  always @( posedge nvdla_core_clk )
      in_aligned_expo_t_flag 	<= !nvdla_core_rstn ? 0 : in_aligned_expo_t_flag ? 1 : | _003__T & ( | _003__X0 );
  always @( posedge nvdla_core_clk )
      in_aligned_expo_r_flag 	<= !nvdla_core_rstn ? 0 : in_aligned_expo_r_flag ? 1 : in_aligned_expo_t_flag ? 0 : ( | in_aligned_expo_R ) ;
  always @(posedge nvdla_core_clk)
      in_mant_cut <= _004_;
  logic [2:0] _004__X0 ;
  logic [2:0] _004__R0 ;
  logic [2:0] _004__C0 ;
  assign _004__X0 = { 3{ in_mant_cut_S != _004__S }} ;
  assign _004__R0 = 0 ;
  assign _004__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      in_mant_cut_T 		<= !nvdla_core_rstn ? 0 : ( _004__T & _004__X0 );
  always @( posedge nvdla_core_clk )
      in_mant_cut_t_flag 	<= !nvdla_core_rstn ? 0 : in_mant_cut_t_flag ? 1 : | _004__T & ( | _004__X0 );
  always @( posedge nvdla_core_clk )
      in_mant_cut_r_flag 	<= !nvdla_core_rstn ? 0 : in_mant_cut_r_flag ? 1 : in_mant_cut_t_flag ? 0 : ( | in_mant_cut_R ) ;
  always @(posedge nvdla_core_clk)
      oi_aligned_mant <= _007_;
  logic [39:0] _007__X0 ;
  logic [39:0] _007__R0 ;
  logic [39:0] _007__C0 ;
  assign _007__X0 = { 40{ oi_aligned_mant_S != _007__S }} ;
  assign _007__R0 = 0 ;
  assign _007__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      oi_aligned_mant_T 		<= !nvdla_core_rstn ? 0 : ( _007__T & _007__X0 );
  always @( posedge nvdla_core_clk )
      oi_aligned_mant_t_flag 	<= !nvdla_core_rstn ? 0 : oi_aligned_mant_t_flag ? 1 : | _007__T & ( | _007__X0 );
  always @( posedge nvdla_core_clk )
      oi_aligned_mant_r_flag 	<= !nvdla_core_rstn ? 0 : oi_aligned_mant_r_flag ? 1 : oi_aligned_mant_t_flag ? 0 : ( | oi_aligned_mant_R ) ;
  always @(posedge nvdla_core_clk)
      di_aligned_mant <= _000_;
  logic [39:0] _000__X0 ;
  logic [39:0] _000__R0 ;
  logic [39:0] _000__C0 ;
  assign _000__X0 = { 40{ di_aligned_mant_S != _000__S }} ;
  assign _000__R0 = 0 ;
  assign _000__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      di_aligned_mant_T 		<= !nvdla_core_rstn ? 0 : ( _000__T & _000__X0 );
  always @( posedge nvdla_core_clk )
      di_aligned_mant_t_flag 	<= !nvdla_core_rstn ? 0 : di_aligned_mant_t_flag ? 1 : | _000__T & ( | _000__X0 );
  always @( posedge nvdla_core_clk )
      di_aligned_mant_r_flag 	<= !nvdla_core_rstn ? 0 : di_aligned_mant_r_flag ? 1 : di_aligned_mant_t_flag ? 0 : ( | di_aligned_mant_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      in_nan_2d <= 1'b0;
    else
      in_nan_2d <= in_nan_d;
  logic [0:0] in_nan_d_X1 ;
  logic [0:0] in_nan_d_R1 ;
  logic [0:0] in_nan_d_C1 ;
  assign in_nan_d_X1 = { 1{ in_nan_2d_S != in_nan_d_S }} ;
  assign in_nan_d_R1 = 0 ;
  assign in_nan_d_C1 = 0 ;
  always @( posedge nvdla_core_clk )
      in_nan_2d_T 		<= !nvdla_core_rstn ? 0 : ( in_nan_d_T & in_nan_d_X1 );
  always @( posedge nvdla_core_clk )
      in_nan_2d_t_flag 	<= !nvdla_core_rstn ? 0 : in_nan_2d_t_flag ? 1 : | in_nan_d_T & ( | in_nan_d_X1 );
  always @( posedge nvdla_core_clk )
      in_nan_2d_r_flag 	<= !nvdla_core_rstn ? 0 : in_nan_2d_r_flag ? 1 : in_nan_2d_t_flag ? 0 : ( | in_nan_2d_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      in_nan_d <= 1'b0;
    else
      in_nan_d <= in_nan;
  logic [0:0] in_nan_X1 ;
  logic [0:0] in_nan_R1 ;
  logic [0:0] in_nan_C1 ;
  assign in_nan_X1 = { 1{ in_nan_d_S != in_nan_S }} ;
  assign in_nan_R1 = 0 ;
  assign in_nan_C1 = 0 ;
  always @( posedge nvdla_core_clk )
      in_nan_d_T 		<= !nvdla_core_rstn ? 0 : ( in_nan_T & in_nan_X1 );
  always @( posedge nvdla_core_clk )
      in_nan_d_t_flag 	<= !nvdla_core_rstn ? 0 : in_nan_d_t_flag ? 1 : | in_nan_T & ( | in_nan_X1 );
  always @( posedge nvdla_core_clk )
      in_nan_d_r_flag 	<= !nvdla_core_rstn ? 0 : in_nan_d_r_flag ? 1 : in_nan_d_t_flag ? 0 : ( | in_nan_d_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      final_sel <= 1'b0;
    else
      final_sel <= _002_;
  logic [0:0] _002__X0 ;
  logic [0:0] _002__R0 ;
  logic [0:0] _002__C0 ;
  assign _002__X0 = { 1{ final_sel_S != _002__S }} ;
  assign _002__R0 = 0 ;
  assign _002__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      final_sel_T 		<= !nvdla_core_rstn ? 0 : ( _002__T & _002__X0 );
  always @( posedge nvdla_core_clk )
      final_sel_t_flag 	<= !nvdla_core_rstn ? 0 : final_sel_t_flag ? 1 : | _002__T & ( | _002__X0 );
  always @( posedge nvdla_core_clk )
      final_sel_r_flag 	<= !nvdla_core_rstn ? 0 : final_sel_r_flag ? 1 : final_sel_t_flag ? 0 : ( | final_sel_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      msum_sel <= 1'b0;
    else
      msum_sel <= _006_;
  logic [0:0] _006__X0 ;
  logic [0:0] _006__R0 ;
  logic [0:0] _006__C0 ;
  assign _006__X0 = { 1{ msum_sel_S != _006__S }} ;
  assign _006__R0 = 0 ;
  assign _006__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      msum_sel_T 		<= !nvdla_core_rstn ? 0 : ( _006__T & _006__X0 );
  always @( posedge nvdla_core_clk )
      msum_sel_t_flag 	<= !nvdla_core_rstn ? 0 : msum_sel_t_flag ? 1 : | _006__T & ( | _006__X0 );
  always @( posedge nvdla_core_clk )
      msum_sel_r_flag 	<= !nvdla_core_rstn ? 0 : msum_sel_r_flag ? 1 : msum_sel_t_flag ? 0 : ( | msum_sel_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      shift_sel <= 1'b0;
    else
      shift_sel <= _013_;
  logic [0:0] _013__X0 ;
  logic [0:0] _013__R0 ;
  logic [0:0] _013__C0 ;
  assign _013__X0 = { 1{ shift_sel_S != _013__S }} ;
  assign _013__R0 = 0 ;
  assign _013__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      shift_sel_T 		<= !nvdla_core_rstn ? 0 : ( _013__T & _013__X0 );
  always @( posedge nvdla_core_clk )
      shift_sel_t_flag 	<= !nvdla_core_rstn ? 0 : shift_sel_t_flag ? 1 : | _013__T & ( | _013__X0 );
  always @( posedge nvdla_core_clk )
      shift_sel_r_flag 	<= !nvdla_core_rstn ? 0 : shift_sel_r_flag ? 1 : shift_sel_t_flag ? 0 : ( | shift_sel_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      final_vld <= 1'b0;
    else
      final_vld <= msum_vld;
  logic [0:0] msum_vld_X2 ;
  logic [0:0] msum_vld_R2 ;
  logic [0:0] msum_vld_C2 ;
  assign msum_vld_X2 = { 1{ final_vld_S != msum_vld_S }} ;
  assign msum_vld_R2 = 0 ;
  assign msum_vld_C2 = 0 ;
  always @( posedge nvdla_core_clk )
      final_vld_T 		<= !nvdla_core_rstn ? 0 : ( msum_vld_T & msum_vld_X2 );
  always @( posedge nvdla_core_clk )
      final_vld_t_flag 	<= !nvdla_core_rstn ? 0 : final_vld_t_flag ? 1 : | msum_vld_T & ( | msum_vld_X2 );
  always @( posedge nvdla_core_clk )
      final_vld_r_flag 	<= !nvdla_core_rstn ? 0 : final_vld_r_flag ? 1 : final_vld_t_flag ? 0 : ( | final_vld_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      msum_vld <= 1'b0;
    else
      msum_vld <= shift_vld;
  logic [0:0] shift_vld_X2 ;
  logic [0:0] shift_vld_R2 ;
  logic [0:0] shift_vld_C2 ;
  assign shift_vld_X2 = { 1{ msum_vld_S != shift_vld_S }} ;
  assign shift_vld_R2 = 0 ;
  assign shift_vld_C2 = 0 ;
  always @( posedge nvdla_core_clk )
      msum_vld_T 		<= !nvdla_core_rstn ? 0 : ( shift_vld_T & shift_vld_X2 );
  always @( posedge nvdla_core_clk )
      msum_vld_t_flag 	<= !nvdla_core_rstn ? 0 : msum_vld_t_flag ? 1 : | shift_vld_T & ( | shift_vld_X2 );
  always @( posedge nvdla_core_clk )
      msum_vld_r_flag 	<= !nvdla_core_rstn ? 0 : msum_vld_r_flag ? 1 : msum_vld_t_flag ? 0 : ( | msum_vld_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      shift_vld <= 1'b0;
    else
      shift_vld <= in_valid;
  logic [0:0] in_valid_X2 ;
  logic [0:0] in_valid_R2 ;
  logic [0:0] in_valid_C2 ;
  assign in_valid_X2 = { 1{ shift_vld_S != in_valid_S }} ;
  assign in_valid_R2 = 0 ;
  assign in_valid_C2 = 0 ;
  always @( posedge nvdla_core_clk )
      shift_vld_T 		<= !nvdla_core_rstn ? 0 : ( in_valid_T & in_valid_X2 );
  always @( posedge nvdla_core_clk )
      shift_vld_t_flag 	<= !nvdla_core_rstn ? 0 : shift_vld_t_flag ? 1 : | in_valid_T & ( | in_valid_X2 );
  always @( posedge nvdla_core_clk )
      shift_vld_r_flag 	<= !nvdla_core_rstn ? 0 : shift_vld_r_flag ? 1 : shift_vld_t_flag ? 0 : ( | shift_vld_R ) ;
  logic [31:0] fangyuan1;
  logic [31:0] fangyuan1_T ;
  logic [31:0] fangyuan1_R ;
  logic [31:0] fangyuan1_C ;
  logic [31:0] fangyuan1_X ;
  assign fangyuan1 = { partial_result[39], fp32_expo_nmlz, fp32_mant_nmlz };
  assign fangyuan1_T = {  partial_result_T [39] , fp32_expo_nmlz_T , fp32_mant_nmlz_T  };
  logic [13:0] fangyuan1_S ;
  assign fangyuan1_S = 0 ;
  logic [47:0] partial_result_R1 ;
  logic [47:0] partial_result_X1 ;
  logic [47:0] partial_result_C1 ;
  assign partial_result_R1 [39:39] = fangyuan1_R [31:31] ;
  assign partial_result_X1 [39:39] = fangyuan1_X [31:31] ;
  assign partial_result_C1 [39:39] = fangyuan1_C [31:31] ;
  logic [7:0] fp32_expo_nmlz_R0 ;
  logic [7:0] fp32_expo_nmlz_X0 ;
  logic [7:0] fp32_expo_nmlz_C0 ;
  assign fp32_expo_nmlz_R0 = fangyuan1_R [30:23] ;
  assign fp32_expo_nmlz_X0 = fangyuan1_X [30:23] ;
  assign fp32_expo_nmlz_C0 = fangyuan1_C [30:23] ;
  logic [22:0] fp32_mant_nmlz_R0 ;
  logic [22:0] fp32_mant_nmlz_X0 ;
  logic [22:0] fp32_mant_nmlz_C0 ;
  assign fp32_mant_nmlz_R0 = fangyuan1_R [22:0] ;
  assign fp32_mant_nmlz_X0 = fangyuan1_X [22:0] ;
  assign fp32_mant_nmlz_C0 = fangyuan1_C [22:0] ;

  assign _008_ = _009_ ? fangyuan1 : out_final_data;
  logic [0:0] _009__C1 ;
  logic [0:0] _009__R1 ;
  logic [0:0] _009__X1 ;
  assign _009__C1 = | _008__C ;
  assign _009__X1 = | _008__X ;
  assign _008__T = _009_ ? ( { 32{ _009__T  }} | fangyuan1_T ) : ( { 32{ _009__T  }} | out_final_data_T );
  assign _008__S = _009_ ? fangyuan1_S : out_final_data_S ;
  assign _009__R1 = ( | (_008__R | ( _008__C & ( { 32{ _009_ }} & fangyuan1_T | { 32{ !_009_ }} & out_final_data_T )))) && fangyuan1 != out_final_data ;
  logic [31:0] fangyuan1_C0 ;
  logic [31:0] fangyuan1_R0 ;
  logic [31:0] fangyuan1_X0 ;
  assign fangyuan1_C0 = { 32{ _009_ }} ;
  assign fangyuan1_R0 = { 32{ _009_ }} & ( _008__R | ( { 32{ _009__T  }} & _008__C ));
  assign fangyuan1_X0 = { 32{ _009_ }} & _008__X ;
  logic [31:0] out_final_data_C1 ;
  logic [31:0] out_final_data_R1 ;
  logic [31:0] out_final_data_X1 ;
  assign out_final_data_C1 = { 32{ !_009_ }} ;
  assign out_final_data_R1 = { 32{ !_009_ }} & ( _008__R | ( { 32{ _009__T  }} & _008__C ));
  assign out_final_data_X1 = { 32{ !_009_ }} & _008__X ;
  assign _012_ = msum_vld ? partial_mant_nmlz : partial_result_mant;
  logic [0:0] msum_vld_C3 ;
  logic [0:0] msum_vld_R3 ;
  logic [0:0] msum_vld_X3 ;
  assign msum_vld_C3 = | _012__C ;
  assign msum_vld_X3 = | _012__X ;
  assign _012__T = msum_vld ? ( { 40{ msum_vld_T  }} | partial_mant_nmlz_T ) : ( { 40{ msum_vld_T  }} | partial_result_mant_T );
  assign _012__S = msum_vld ? partial_mant_nmlz_S : partial_result_mant_S ;
  assign msum_vld_R3 = ( | (_012__R | ( _012__C & ( { 40{ msum_vld }} & partial_mant_nmlz_T | { 40{ !msum_vld }} & partial_result_mant_T )))) && partial_mant_nmlz != partial_result_mant ;
  logic [39:0] partial_mant_nmlz_C0 ;
  logic [39:0] partial_mant_nmlz_R0 ;
  logic [39:0] partial_mant_nmlz_X0 ;
  assign partial_mant_nmlz_C0 = { 40{ msum_vld }} ;
  assign partial_mant_nmlz_R0 = { 40{ msum_vld }} & ( _012__R | ( { 40{ msum_vld_T  }} & _012__C ));
  assign partial_mant_nmlz_X0 = { 40{ msum_vld }} & _012__X ;
  logic [39:0] partial_result_mant_C0 ;
  logic [39:0] partial_result_mant_R0 ;
  logic [39:0] partial_result_mant_X0 ;
  assign partial_result_mant_C0 = { 40{ !msum_vld }} ;
  assign partial_result_mant_R0 = { 40{ !msum_vld }} & ( _012__R | ( { 40{ msum_vld_T  }} & _012__C ));
  assign partial_result_mant_X0 = { 40{ !msum_vld }} & _012__X ;
  assign _011_ = msum_vld ? partial_expo_nxt : partial_result_expo;
  logic [0:0] msum_vld_C4 ;
  logic [0:0] msum_vld_R4 ;
  logic [0:0] msum_vld_X4 ;
  assign msum_vld_C4 = | _011__C ;
  assign msum_vld_X4 = | _011__X ;
  assign _011__T = msum_vld ? ( { 8{ msum_vld_T  }} | partial_expo_nxt_T ) : ( { 8{ msum_vld_T  }} | partial_result_expo_T );
  assign _011__S = msum_vld ? partial_expo_nxt_S : partial_result_expo_S ;
  assign msum_vld_R4 = ( | (_011__R | ( _011__C & ( { 8{ msum_vld }} & partial_expo_nxt_T | { 8{ !msum_vld }} & partial_result_expo_T )))) && partial_expo_nxt != partial_result_expo ;
  logic [7:0] partial_expo_nxt_C0 ;
  logic [7:0] partial_expo_nxt_R0 ;
  logic [7:0] partial_expo_nxt_X0 ;
  assign partial_expo_nxt_C0 = { 8{ msum_vld }} ;
  assign partial_expo_nxt_R0 = { 8{ msum_vld }} & ( _011__R | ( { 8{ msum_vld_T  }} & _011__C ));
  assign partial_expo_nxt_X0 = { 8{ msum_vld }} & _011__X ;
  logic [7:0] partial_result_expo_C0 ;
  logic [7:0] partial_result_expo_R0 ;
  logic [7:0] partial_result_expo_X0 ;
  assign partial_result_expo_C0 = { 8{ !msum_vld }} ;
  assign partial_result_expo_R0 = { 8{ !msum_vld }} & ( _011__R | ( { 8{ msum_vld_T  }} & _011__C ));
  assign partial_result_expo_X0 = { 8{ !msum_vld }} & _011__X ;
  assign _005_ = shift_vld ? mant_sum_ncmp : mant_sum_trans;
  logic [0:0] shift_vld_C3 ;
  logic [0:0] shift_vld_R3 ;
  logic [0:0] shift_vld_X3 ;
  assign shift_vld_C3 = | _005__C ;
  assign shift_vld_X3 = | _005__X ;
  assign _005__T = shift_vld ? ( { 42{ shift_vld_T  }} | mant_sum_ncmp_T ) : ( { 42{ shift_vld_T  }} | mant_sum_trans_T );
  assign _005__S = shift_vld ? mant_sum_ncmp_S : mant_sum_trans_S ;
  assign shift_vld_R3 = ( | (_005__R | ( _005__C & ( { 42{ shift_vld }} & mant_sum_ncmp_T | { 42{ !shift_vld }} & mant_sum_trans_T )))) && mant_sum_ncmp != mant_sum_trans ;
  assign { mant_sum_trans_R2 [1], mant_sum_trans_R2 [2], mant_sum_trans_R2 [3], mant_sum_trans_R2 [4], mant_sum_trans_R2 [5], mant_sum_trans_R2 [6], mant_sum_trans_R2 [7], mant_sum_trans_R2 [8], mant_sum_trans_R2 [9], mant_sum_trans_R2 [10], mant_sum_trans_R2 [11], mant_sum_trans_R2 [12], mant_sum_trans_R2 [13], mant_sum_trans_R2 [14], mant_sum_trans_R2 [15], mant_sum_trans_R2 [16], mant_sum_trans_R2 [17], mant_sum_trans_R2 [18], mant_sum_trans_R2 [19], mant_sum_trans_R2 [20], mant_sum_trans_R2 [21], mant_sum_trans_R2 [22], mant_sum_trans_R2 [23], mant_sum_trans_R2 [24], mant_sum_trans_R2 [25], mant_sum_trans_R2 [26], mant_sum_trans_R2 [27], mant_sum_trans_R2 [28], mant_sum_trans_R2 [29], mant_sum_trans_R2 [30], mant_sum_trans_R2 [31], mant_sum_trans_R2 [32], mant_sum_trans_R2 [33], mant_sum_trans_R2 [34], mant_sum_trans_R2 [35], mant_sum_trans_R2 [36], mant_sum_trans_R2 [37], mant_sum_trans_R2 [38], mant_sum_trans_R2 [39] } = 0;
  assign { mant_sum_trans_X2 [1], mant_sum_trans_X2 [2], mant_sum_trans_X2 [3], mant_sum_trans_X2 [4], mant_sum_trans_X2 [5], mant_sum_trans_X2 [6], mant_sum_trans_X2 [7], mant_sum_trans_X2 [8], mant_sum_trans_X2 [9], mant_sum_trans_X2 [10], mant_sum_trans_X2 [11], mant_sum_trans_X2 [12], mant_sum_trans_X2 [13], mant_sum_trans_X2 [14], mant_sum_trans_X2 [15], mant_sum_trans_X2 [16], mant_sum_trans_X2 [17], mant_sum_trans_X2 [18], mant_sum_trans_X2 [19], mant_sum_trans_X2 [20], mant_sum_trans_X2 [21], mant_sum_trans_X2 [22], mant_sum_trans_X2 [23], mant_sum_trans_X2 [24], mant_sum_trans_X2 [25], mant_sum_trans_X2 [26], mant_sum_trans_X2 [27], mant_sum_trans_X2 [28], mant_sum_trans_X2 [29], mant_sum_trans_X2 [30], mant_sum_trans_X2 [31], mant_sum_trans_X2 [32], mant_sum_trans_X2 [33], mant_sum_trans_X2 [34], mant_sum_trans_X2 [35], mant_sum_trans_X2 [36], mant_sum_trans_X2 [37], mant_sum_trans_X2 [38], mant_sum_trans_X2 [39] } = 0;
  assign { mant_sum_trans_C2 [1], mant_sum_trans_C2 [2], mant_sum_trans_C2 [3], mant_sum_trans_C2 [4], mant_sum_trans_C2 [5], mant_sum_trans_C2 [6], mant_sum_trans_C2 [7], mant_sum_trans_C2 [8], mant_sum_trans_C2 [9], mant_sum_trans_C2 [10], mant_sum_trans_C2 [11], mant_sum_trans_C2 [12], mant_sum_trans_C2 [13], mant_sum_trans_C2 [14], mant_sum_trans_C2 [15], mant_sum_trans_C2 [16], mant_sum_trans_C2 [17], mant_sum_trans_C2 [18], mant_sum_trans_C2 [19], mant_sum_trans_C2 [20], mant_sum_trans_C2 [21], mant_sum_trans_C2 [22], mant_sum_trans_C2 [23], mant_sum_trans_C2 [24], mant_sum_trans_C2 [25], mant_sum_trans_C2 [26], mant_sum_trans_C2 [27], mant_sum_trans_C2 [28], mant_sum_trans_C2 [29], mant_sum_trans_C2 [30], mant_sum_trans_C2 [31], mant_sum_trans_C2 [32], mant_sum_trans_C2 [33], mant_sum_trans_C2 [34], mant_sum_trans_C2 [35], mant_sum_trans_C2 [36], mant_sum_trans_C2 [37], mant_sum_trans_C2 [38], mant_sum_trans_C2 [39] } = 0;
  logic [41:0] mant_sum_ncmp_C0 ;
  logic [41:0] mant_sum_ncmp_R0 ;
  logic [41:0] mant_sum_ncmp_X0 ;
  assign mant_sum_ncmp_C0 = { 42{ shift_vld }} ;
  assign mant_sum_ncmp_R0 = { 42{ shift_vld }} & ( _005__R | ( { 42{ shift_vld_T  }} & _005__C ));
  assign mant_sum_ncmp_X0 = { 42{ shift_vld }} & _005__X ;
  logic [41:0] mant_sum_trans_C3 ;
  logic [41:0] mant_sum_trans_R3 ;
  logic [41:0] mant_sum_trans_X3 ;
  assign mant_sum_trans_C3 = { 42{ !shift_vld }} ;
  assign mant_sum_trans_R3 = { 42{ !shift_vld }} & ( _005__R | ( { 42{ shift_vld_T  }} & _005__C ));
  assign mant_sum_trans_X3 = { 42{ !shift_vld }} & _005__X ;
  assign _001_ = _019_ ? expo_nrml : expo_trans;
  logic [0:0] _019__C0 ;
  logic [0:0] _019__R0 ;
  logic [0:0] _019__X0 ;
  assign _019__C0 = | _001__C ;
  assign _019__X0 = | _001__X ;
  assign _001__T = _019_ ? ( { 8{ _019__T  }} | expo_nrml_T ) : ( { 8{ _019__T  }} | expo_trans_T );
  assign _001__S = _019_ ? expo_nrml_S : expo_trans_S ;
  assign _019__R0 = ( | (_001__R | ( _001__C & ( { 8{ _019_ }} & expo_nrml_T | { 8{ !_019_ }} & expo_trans_T )))) && expo_nrml != expo_trans ;
  logic [7:0] expo_nrml_C0 ;
  logic [7:0] expo_nrml_R0 ;
  logic [7:0] expo_nrml_X0 ;
  assign expo_nrml_C0 = { 8{ _019_ }} ;
  assign expo_nrml_R0 = { 8{ _019_ }} & ( _001__R | ( { 8{ _019__T  }} & _001__C ));
  assign expo_nrml_X0 = { 8{ _019_ }} & _001__X ;
  logic [7:0] expo_trans_C1 ;
  logic [7:0] expo_trans_R1 ;
  logic [7:0] expo_trans_X1 ;
  assign expo_trans_C1 = { 8{ !_019_ }} ;
  assign expo_trans_R1 = { 8{ !_019_ }} & ( _001__R | ( { 8{ _019__T  }} & _001__C ));
  assign expo_trans_X1 = { 8{ !_019_ }} & _001__X ;
  assign _003_ = _018_ ? max_expo : in_aligned_expo;
  logic [0:0] _018__C0 ;
  logic [0:0] _018__R0 ;
  logic [0:0] _018__X0 ;
  assign _018__C0 = | _003__C ;
  assign _018__X0 = | _003__X ;
  assign _003__T = _018_ ? ( { 8{ _018__T  }} | max_expo_T ) : ( { 8{ _018__T  }} | in_aligned_expo_T );
  assign _003__S = _018_ ? max_expo_S : in_aligned_expo_S ;
  assign _018__R0 = ( | (_003__R | ( _003__C & ( { 8{ _018_ }} & max_expo_T | { 8{ !_018_ }} & in_aligned_expo_T )))) && max_expo != in_aligned_expo ;
  logic [7:0] max_expo_C0 ;
  logic [7:0] max_expo_R0 ;
  logic [7:0] max_expo_X0 ;
  assign max_expo_C0 = { 8{ _018_ }} ;
  assign max_expo_R0 = { 8{ _018_ }} & ( _003__R | ( { 8{ _018__T  }} & _003__C ));
  assign max_expo_X0 = { 8{ _018_ }} & _003__X ;
  logic [7:0] in_aligned_expo_C1 ;
  logic [7:0] in_aligned_expo_R1 ;
  logic [7:0] in_aligned_expo_X1 ;
  assign in_aligned_expo_C1 = { 8{ !_018_ }} ;
  assign in_aligned_expo_R1 = { 8{ !_018_ }} & ( _003__R | ( { 8{ _018__T  }} & _003__C ));
  assign in_aligned_expo_X1 = { 8{ !_018_ }} & _003__X ;
  assign _004_ = _018_ ? in_mant_cut_nxt : in_mant_cut;
  logic [0:0] _018__C1 ;
  logic [0:0] _018__R1 ;
  logic [0:0] _018__X1 ;
  assign _018__C1 = | _004__C ;
  assign _018__X1 = | _004__X ;
  assign _004__T = _018_ ? ( { 3{ _018__T  }} | in_mant_cut_nxt_T ) : ( { 3{ _018__T  }} | in_mant_cut_T );
  assign _004__S = _018_ ? in_mant_cut_nxt_S : in_mant_cut_S ;
  assign _018__R1 = ( | (_004__R | ( _004__C & ( { 3{ _018_ }} & in_mant_cut_nxt_T | { 3{ !_018_ }} & in_mant_cut_T )))) && in_mant_cut_nxt != in_mant_cut ;
  logic [2:0] in_mant_cut_nxt_C0 ;
  logic [2:0] in_mant_cut_nxt_R0 ;
  logic [2:0] in_mant_cut_nxt_X0 ;
  assign in_mant_cut_nxt_C0 = { 3{ _018_ }} ;
  assign in_mant_cut_nxt_R0 = { 3{ _018_ }} & ( _004__R | ( { 3{ _018__T  }} & _004__C ));
  assign in_mant_cut_nxt_X0 = { 3{ _018_ }} & _004__X ;
  logic [2:0] in_mant_cut_C0 ;
  logic [2:0] in_mant_cut_R0 ;
  logic [2:0] in_mant_cut_X0 ;
  assign in_mant_cut_C0 = { 3{ !_018_ }} ;
  assign in_mant_cut_R0 = { 3{ !_018_ }} & ( _004__R | ( { 3{ _018__T  }} & _004__C ));
  assign in_mant_cut_X0 = { 3{ !_018_ }} & _004__X ;
  assign _007_ = in_valid ? oi_aligned_mant_nxt : oi_aligned_mant;
  logic [0:0] in_valid_C3 ;
  logic [0:0] in_valid_R3 ;
  logic [0:0] in_valid_X3 ;
  assign in_valid_C3 = | _007__C ;
  assign in_valid_X3 = | _007__X ;
  assign _007__T = in_valid ? ( { 40{ in_valid_T  }} | oi_aligned_mant_nxt_T ) : ( { 40{ in_valid_T  }} | oi_aligned_mant_T );
  assign _007__S = in_valid ? oi_aligned_mant_nxt_S : oi_aligned_mant_S ;
  assign in_valid_R3 = ( | (_007__R | ( _007__C & ( { 40{ in_valid }} & oi_aligned_mant_nxt_T | { 40{ !in_valid }} & oi_aligned_mant_T )))) && oi_aligned_mant_nxt != oi_aligned_mant ;
  logic [39:0] oi_aligned_mant_nxt_C0 ;
  logic [39:0] oi_aligned_mant_nxt_R0 ;
  logic [39:0] oi_aligned_mant_nxt_X0 ;
  assign oi_aligned_mant_nxt_C0 = { 40{ in_valid }} ;
  assign oi_aligned_mant_nxt_R0 = { 40{ in_valid }} & ( _007__R | ( { 40{ in_valid_T  }} & _007__C ));
  assign oi_aligned_mant_nxt_X0 = { 40{ in_valid }} & _007__X ;
  logic [39:0] oi_aligned_mant_C1 ;
  logic [39:0] oi_aligned_mant_R1 ;
  logic [39:0] oi_aligned_mant_X1 ;
  assign oi_aligned_mant_C1 = { 40{ !in_valid }} ;
  assign oi_aligned_mant_R1 = { 40{ !in_valid }} & ( _007__R | ( { 40{ in_valid_T  }} & _007__C ));
  assign oi_aligned_mant_X1 = { 40{ !in_valid }} & _007__X ;
  assign _000_ = in_valid ? di_aligned_mant_nxt : di_aligned_mant;
  logic [0:0] in_valid_C4 ;
  logic [0:0] in_valid_R4 ;
  logic [0:0] in_valid_X4 ;
  assign in_valid_C4 = | _000__C ;
  assign in_valid_X4 = | _000__X ;
  assign _000__T = in_valid ? ( { 40{ in_valid_T  }} | di_aligned_mant_nxt_T ) : ( { 40{ in_valid_T  }} | di_aligned_mant_T );
  assign _000__S = in_valid ? di_aligned_mant_nxt_S : di_aligned_mant_S ;
  assign in_valid_R4 = ( | (_000__R | ( _000__C & ( { 40{ in_valid }} & di_aligned_mant_nxt_T | { 40{ !in_valid }} & di_aligned_mant_T )))) && di_aligned_mant_nxt != di_aligned_mant ;
  logic [39:0] di_aligned_mant_nxt_C0 ;
  logic [39:0] di_aligned_mant_nxt_R0 ;
  logic [39:0] di_aligned_mant_nxt_X0 ;
  assign di_aligned_mant_nxt_C0 = { 40{ in_valid }} ;
  assign di_aligned_mant_nxt_R0 = { 40{ in_valid }} & ( _000__R | ( { 40{ in_valid_T  }} & _000__C ));
  assign di_aligned_mant_nxt_X0 = { 40{ in_valid }} & _000__X ;
  logic [39:0] di_aligned_mant_C1 ;
  logic [39:0] di_aligned_mant_R1 ;
  logic [39:0] di_aligned_mant_X1 ;
  assign di_aligned_mant_C1 = { 40{ !in_valid }} ;
  assign di_aligned_mant_R1 = { 40{ !in_valid }} & ( _000__R | ( { 40{ in_valid_T  }} & _000__C ));
  assign di_aligned_mant_X1 = { 40{ !in_valid }} & _000__X ;
  logic [5:0] fangyuan2;
  logic [5:0] fangyuan2_T ;
  logic [5:0] fangyuan2_R ;
  logic [5:0] fangyuan2_C ;
  logic [5:0] fangyuan2_X ;
  assign fangyuan2 = { in_data[38], in_data[39], in_data[40], in_data[41], in_data[42], in_data[43] };
  assign fangyuan2_T = {  in_data_T [38] , in_data_T [39] , in_data_T [40] , in_data_T [41] , in_data_T [42] , in_data_T [43]  };
  logic [13:0] fangyuan2_S ;
  assign fangyuan2_S = 0 ;
  assign { in_data_R0 [0], in_data_R0 [1], in_data_R0 [2], in_data_R0 [3], in_data_R0 [4], in_data_R0 [5], in_data_R0 [6], in_data_R0 [7], in_data_R0 [8], in_data_R0 [9], in_data_R0 [10], in_data_R0 [11], in_data_R0 [12], in_data_R0 [13], in_data_R0 [14], in_data_R0 [15], in_data_R0 [16], in_data_R0 [17], in_data_R0 [18], in_data_R0 [19], in_data_R0 [20], in_data_R0 [21], in_data_R0 [22], in_data_R0 [23], in_data_R0 [24], in_data_R0 [25], in_data_R0 [26], in_data_R0 [27], in_data_R0 [28], in_data_R0 [29], in_data_R0 [30], in_data_R0 [31], in_data_R0 [32], in_data_R0 [33], in_data_R0 [34], in_data_R0 [35], in_data_R0 [36], in_data_R0 [37] } = 0;
  assign { in_data_X0 [0], in_data_X0 [1], in_data_X0 [2], in_data_X0 [3], in_data_X0 [4], in_data_X0 [5], in_data_X0 [6], in_data_X0 [7], in_data_X0 [8], in_data_X0 [9], in_data_X0 [10], in_data_X0 [11], in_data_X0 [12], in_data_X0 [13], in_data_X0 [14], in_data_X0 [15], in_data_X0 [16], in_data_X0 [17], in_data_X0 [18], in_data_X0 [19], in_data_X0 [20], in_data_X0 [21], in_data_X0 [22], in_data_X0 [23], in_data_X0 [24], in_data_X0 [25], in_data_X0 [26], in_data_X0 [27], in_data_X0 [28], in_data_X0 [29], in_data_X0 [30], in_data_X0 [31], in_data_X0 [32], in_data_X0 [33], in_data_X0 [34], in_data_X0 [35], in_data_X0 [36], in_data_X0 [37] } = 0;
  assign { in_data_C0 [0], in_data_C0 [1], in_data_C0 [2], in_data_C0 [3], in_data_C0 [4], in_data_C0 [5], in_data_C0 [6], in_data_C0 [7], in_data_C0 [8], in_data_C0 [9], in_data_C0 [10], in_data_C0 [11], in_data_C0 [12], in_data_C0 [13], in_data_C0 [14], in_data_C0 [15], in_data_C0 [16], in_data_C0 [17], in_data_C0 [18], in_data_C0 [19], in_data_C0 [20], in_data_C0 [21], in_data_C0 [22], in_data_C0 [23], in_data_C0 [24], in_data_C0 [25], in_data_C0 [26], in_data_C0 [27], in_data_C0 [28], in_data_C0 [29], in_data_C0 [30], in_data_C0 [31], in_data_C0 [32], in_data_C0 [33], in_data_C0 [34], in_data_C0 [35], in_data_C0 [36], in_data_C0 [37] } = 0;
  logic [43:0] in_data_R1 ;
  logic [43:0] in_data_X1 ;
  logic [43:0] in_data_C1 ;
  assign in_data_R1 [38:38] = fangyuan2_R [5:5] ;
  assign in_data_X1 [38:38] = fangyuan2_X [5:5] ;
  assign in_data_C1 [38:38] = fangyuan2_C [5:5] ;
  assign in_data_R1 [39:39] = fangyuan2_R [4:4] ;
  assign in_data_X1 [39:39] = fangyuan2_X [4:4] ;
  assign in_data_C1 [39:39] = fangyuan2_C [4:4] ;
  assign in_data_R1 [40:40] = fangyuan2_R [3:3] ;
  assign in_data_X1 [40:40] = fangyuan2_X [3:3] ;
  assign in_data_C1 [40:40] = fangyuan2_C [3:3] ;
  assign in_data_R1 [41:41] = fangyuan2_R [2:2] ;
  assign in_data_X1 [41:41] = fangyuan2_X [2:2] ;
  assign in_data_C1 [41:41] = fangyuan2_C [2:2] ;
  assign in_data_R1 [42:42] = fangyuan2_R [1:1] ;
  assign in_data_X1 [42:42] = fangyuan2_X [1:1] ;
  assign in_data_C1 [42:42] = fangyuan2_C [1:1] ;
  assign in_data_R1 [43:43] = fangyuan2_R [0:0] ;
  assign in_data_X1 [43:43] = fangyuan2_X [0:0] ;
  assign in_data_C1 [43:43] = fangyuan2_C [0:0] ;

  assign di_nan = & fangyuan2;
  logic [5:0] fangyuan2_C0 ;
  logic [5:0] fangyuan2_R0 ;
  logic [5:0] fangyuan2_X0 ;
  assign di_nan_T = | fangyuan2_T ;
  assign fangyuan2_C0 = { 6{ di_nan_C }} ;
  assign fangyuan2_X0 = { 6{ di_nan_X }} ;
  assign fangyuan2_R0 = { 6{ di_nan_R }} & ~fangyuan2 ;
  assign di_nan_S = 0 ;
  logic [7:0] fangyuan3;
  logic [7:0] fangyuan3_T ;
  logic [7:0] fangyuan3_R ;
  logic [7:0] fangyuan3_C ;
  logic [7:0] fangyuan3_X ;
  assign fangyuan3 = { in_mask_op[40], in_mask_op[41], in_mask_op[42], in_mask_op[43], in_mask_op[44], in_mask_op[45], in_mask_op[46], in_mask_op[47] };
  assign fangyuan3_T = {  in_mask_op_T [40] , in_mask_op_T [41] , in_mask_op_T [42] , in_mask_op_T [43] , in_mask_op_T [44] , in_mask_op_T [45] , in_mask_op_T [46] , in_mask_op_T [47]  };
  logic [13:0] fangyuan3_S ;
  assign fangyuan3_S = 0 ;
  logic [47:0] in_mask_op_R0 ;
  logic [47:0] in_mask_op_X0 ;
  logic [47:0] in_mask_op_C0 ;
  assign in_mask_op_R0 [40:40] = fangyuan3_R [7:7] ;
  assign in_mask_op_X0 [40:40] = fangyuan3_X [7:7] ;
  assign in_mask_op_C0 [40:40] = fangyuan3_C [7:7] ;
  assign in_mask_op_R0 [41:41] = fangyuan3_R [6:6] ;
  assign in_mask_op_X0 [41:41] = fangyuan3_X [6:6] ;
  assign in_mask_op_C0 [41:41] = fangyuan3_C [6:6] ;
  assign in_mask_op_R0 [42:42] = fangyuan3_R [5:5] ;
  assign in_mask_op_X0 [42:42] = fangyuan3_X [5:5] ;
  assign in_mask_op_C0 [42:42] = fangyuan3_C [5:5] ;
  assign in_mask_op_R0 [43:43] = fangyuan3_R [4:4] ;
  assign in_mask_op_X0 [43:43] = fangyuan3_X [4:4] ;
  assign in_mask_op_C0 [43:43] = fangyuan3_C [4:4] ;
  assign in_mask_op_R0 [44:44] = fangyuan3_R [3:3] ;
  assign in_mask_op_X0 [44:44] = fangyuan3_X [3:3] ;
  assign in_mask_op_C0 [44:44] = fangyuan3_C [3:3] ;
  assign in_mask_op_R0 [45:45] = fangyuan3_R [2:2] ;
  assign in_mask_op_X0 [45:45] = fangyuan3_X [2:2] ;
  assign in_mask_op_C0 [45:45] = fangyuan3_C [2:2] ;
  assign in_mask_op_R0 [46:46] = fangyuan3_R [1:1] ;
  assign in_mask_op_X0 [46:46] = fangyuan3_X [1:1] ;
  assign in_mask_op_C0 [46:46] = fangyuan3_C [1:1] ;
  assign in_mask_op_R0 [47:47] = fangyuan3_R [0:0] ;
  assign in_mask_op_X0 [47:47] = fangyuan3_X [0:0] ;
  assign in_mask_op_C0 [47:47] = fangyuan3_C [0:0] ;

  assign oi_nan = & fangyuan3;
  logic [7:0] fangyuan3_C0 ;
  logic [7:0] fangyuan3_R0 ;
  logic [7:0] fangyuan3_X0 ;
  assign oi_nan_T = | fangyuan3_T ;
  assign fangyuan3_C0 = { 8{ oi_nan_C }} ;
  assign fangyuan3_X0 = { 8{ oi_nan_X }} ;
  assign fangyuan3_R0 = { 8{ oi_nan_R }} & ~fangyuan3 ;
  assign oi_nan_S = 0 ;
  logic [38:0] fangyuan4;
  logic [38:0] fangyuan4_T ;
  logic [38:0] fangyuan4_R ;
  logic [38:0] fangyuan4_C ;
  logic [38:0] fangyuan4_X ;
  assign fangyuan4 = { mant_sum_trans[2], mant_sum_trans[3], mant_sum_trans[4], mant_sum_trans[5], mant_sum_trans[6], mant_sum_trans[7], mant_sum_trans[8], mant_sum_trans[9], mant_sum_trans[10], mant_sum_trans[11], mant_sum_trans[12], mant_sum_trans[13], mant_sum_trans[14], mant_sum_trans[15], mant_sum_trans[16], mant_sum_trans[17], mant_sum_trans[18], mant_sum_trans[19], mant_sum_trans[20], mant_sum_trans[21], mant_sum_trans[22], mant_sum_trans[23], mant_sum_trans[24], mant_sum_trans[25], mant_sum_trans[26], mant_sum_trans[27], mant_sum_trans[28], mant_sum_trans[29], mant_sum_trans[30], mant_sum_trans[31], mant_sum_trans[32], mant_sum_trans[33], mant_sum_trans[34], mant_sum_trans[35], mant_sum_trans[36], mant_sum_trans[37], mant_sum_trans[38], mant_sum_trans[39], mant_sum_trans[40] };
  assign fangyuan4_T = {  mant_sum_trans_T [2] , mant_sum_trans_T [3] , mant_sum_trans_T [4] , mant_sum_trans_T [5] , mant_sum_trans_T [6] , mant_sum_trans_T [7] , mant_sum_trans_T [8] , mant_sum_trans_T [9] , mant_sum_trans_T [10] , mant_sum_trans_T [11] , mant_sum_trans_T [12] , mant_sum_trans_T [13] , mant_sum_trans_T [14] , mant_sum_trans_T [15] , mant_sum_trans_T [16] , mant_sum_trans_T [17] , mant_sum_trans_T [18] , mant_sum_trans_T [19] , mant_sum_trans_T [20] , mant_sum_trans_T [21] , mant_sum_trans_T [22] , mant_sum_trans_T [23] , mant_sum_trans_T [24] , mant_sum_trans_T [25] , mant_sum_trans_T [26] , mant_sum_trans_T [27] , mant_sum_trans_T [28] , mant_sum_trans_T [29] , mant_sum_trans_T [30] , mant_sum_trans_T [31] , mant_sum_trans_T [32] , mant_sum_trans_T [33] , mant_sum_trans_T [34] , mant_sum_trans_T [35] , mant_sum_trans_T [36] , mant_sum_trans_T [37] , mant_sum_trans_T [38] , mant_sum_trans_T [39] , mant_sum_trans_T [40]  };
  logic [13:0] fangyuan4_S ;
  assign fangyuan4_S = 0 ;
  logic [41:0] mant_sum_trans_R4 ;
  logic [41:0] mant_sum_trans_X4 ;
  logic [41:0] mant_sum_trans_C4 ;
  assign mant_sum_trans_R4 [2:2] = fangyuan4_R [38:38] ;
  assign mant_sum_trans_X4 [2:2] = fangyuan4_X [38:38] ;
  assign mant_sum_trans_C4 [2:2] = fangyuan4_C [38:38] ;
  assign mant_sum_trans_R4 [3:3] = fangyuan4_R [37:37] ;
  assign mant_sum_trans_X4 [3:3] = fangyuan4_X [37:37] ;
  assign mant_sum_trans_C4 [3:3] = fangyuan4_C [37:37] ;
  assign mant_sum_trans_R4 [4:4] = fangyuan4_R [36:36] ;
  assign mant_sum_trans_X4 [4:4] = fangyuan4_X [36:36] ;
  assign mant_sum_trans_C4 [4:4] = fangyuan4_C [36:36] ;
  assign mant_sum_trans_R4 [5:5] = fangyuan4_R [35:35] ;
  assign mant_sum_trans_X4 [5:5] = fangyuan4_X [35:35] ;
  assign mant_sum_trans_C4 [5:5] = fangyuan4_C [35:35] ;
  assign mant_sum_trans_R4 [6:6] = fangyuan4_R [34:34] ;
  assign mant_sum_trans_X4 [6:6] = fangyuan4_X [34:34] ;
  assign mant_sum_trans_C4 [6:6] = fangyuan4_C [34:34] ;
  assign mant_sum_trans_R4 [7:7] = fangyuan4_R [33:33] ;
  assign mant_sum_trans_X4 [7:7] = fangyuan4_X [33:33] ;
  assign mant_sum_trans_C4 [7:7] = fangyuan4_C [33:33] ;
  assign mant_sum_trans_R4 [8:8] = fangyuan4_R [32:32] ;
  assign mant_sum_trans_X4 [8:8] = fangyuan4_X [32:32] ;
  assign mant_sum_trans_C4 [8:8] = fangyuan4_C [32:32] ;
  assign mant_sum_trans_R4 [9:9] = fangyuan4_R [31:31] ;
  assign mant_sum_trans_X4 [9:9] = fangyuan4_X [31:31] ;
  assign mant_sum_trans_C4 [9:9] = fangyuan4_C [31:31] ;
  assign mant_sum_trans_R4 [10:10] = fangyuan4_R [30:30] ;
  assign mant_sum_trans_X4 [10:10] = fangyuan4_X [30:30] ;
  assign mant_sum_trans_C4 [10:10] = fangyuan4_C [30:30] ;
  assign mant_sum_trans_R4 [11:11] = fangyuan4_R [29:29] ;
  assign mant_sum_trans_X4 [11:11] = fangyuan4_X [29:29] ;
  assign mant_sum_trans_C4 [11:11] = fangyuan4_C [29:29] ;
  assign mant_sum_trans_R4 [12:12] = fangyuan4_R [28:28] ;
  assign mant_sum_trans_X4 [12:12] = fangyuan4_X [28:28] ;
  assign mant_sum_trans_C4 [12:12] = fangyuan4_C [28:28] ;
  assign mant_sum_trans_R4 [13:13] = fangyuan4_R [27:27] ;
  assign mant_sum_trans_X4 [13:13] = fangyuan4_X [27:27] ;
  assign mant_sum_trans_C4 [13:13] = fangyuan4_C [27:27] ;
  assign mant_sum_trans_R4 [14:14] = fangyuan4_R [26:26] ;
  assign mant_sum_trans_X4 [14:14] = fangyuan4_X [26:26] ;
  assign mant_sum_trans_C4 [14:14] = fangyuan4_C [26:26] ;
  assign mant_sum_trans_R4 [15:15] = fangyuan4_R [25:25] ;
  assign mant_sum_trans_X4 [15:15] = fangyuan4_X [25:25] ;
  assign mant_sum_trans_C4 [15:15] = fangyuan4_C [25:25] ;
  assign mant_sum_trans_R4 [16:16] = fangyuan4_R [24:24] ;
  assign mant_sum_trans_X4 [16:16] = fangyuan4_X [24:24] ;
  assign mant_sum_trans_C4 [16:16] = fangyuan4_C [24:24] ;
  assign mant_sum_trans_R4 [17:17] = fangyuan4_R [23:23] ;
  assign mant_sum_trans_X4 [17:17] = fangyuan4_X [23:23] ;
  assign mant_sum_trans_C4 [17:17] = fangyuan4_C [23:23] ;
  assign mant_sum_trans_R4 [18:18] = fangyuan4_R [22:22] ;
  assign mant_sum_trans_X4 [18:18] = fangyuan4_X [22:22] ;
  assign mant_sum_trans_C4 [18:18] = fangyuan4_C [22:22] ;
  assign mant_sum_trans_R4 [19:19] = fangyuan4_R [21:21] ;
  assign mant_sum_trans_X4 [19:19] = fangyuan4_X [21:21] ;
  assign mant_sum_trans_C4 [19:19] = fangyuan4_C [21:21] ;
  assign mant_sum_trans_R4 [20:20] = fangyuan4_R [20:20] ;
  assign mant_sum_trans_X4 [20:20] = fangyuan4_X [20:20] ;
  assign mant_sum_trans_C4 [20:20] = fangyuan4_C [20:20] ;
  assign mant_sum_trans_R4 [21:21] = fangyuan4_R [19:19] ;
  assign mant_sum_trans_X4 [21:21] = fangyuan4_X [19:19] ;
  assign mant_sum_trans_C4 [21:21] = fangyuan4_C [19:19] ;
  assign mant_sum_trans_R4 [22:22] = fangyuan4_R [18:18] ;
  assign mant_sum_trans_X4 [22:22] = fangyuan4_X [18:18] ;
  assign mant_sum_trans_C4 [22:22] = fangyuan4_C [18:18] ;
  assign mant_sum_trans_R4 [23:23] = fangyuan4_R [17:17] ;
  assign mant_sum_trans_X4 [23:23] = fangyuan4_X [17:17] ;
  assign mant_sum_trans_C4 [23:23] = fangyuan4_C [17:17] ;
  assign mant_sum_trans_R4 [24:24] = fangyuan4_R [16:16] ;
  assign mant_sum_trans_X4 [24:24] = fangyuan4_X [16:16] ;
  assign mant_sum_trans_C4 [24:24] = fangyuan4_C [16:16] ;
  assign mant_sum_trans_R4 [25:25] = fangyuan4_R [15:15] ;
  assign mant_sum_trans_X4 [25:25] = fangyuan4_X [15:15] ;
  assign mant_sum_trans_C4 [25:25] = fangyuan4_C [15:15] ;
  assign mant_sum_trans_R4 [26:26] = fangyuan4_R [14:14] ;
  assign mant_sum_trans_X4 [26:26] = fangyuan4_X [14:14] ;
  assign mant_sum_trans_C4 [26:26] = fangyuan4_C [14:14] ;
  assign mant_sum_trans_R4 [27:27] = fangyuan4_R [13:13] ;
  assign mant_sum_trans_X4 [27:27] = fangyuan4_X [13:13] ;
  assign mant_sum_trans_C4 [27:27] = fangyuan4_C [13:13] ;
  assign mant_sum_trans_R4 [28:28] = fangyuan4_R [12:12] ;
  assign mant_sum_trans_X4 [28:28] = fangyuan4_X [12:12] ;
  assign mant_sum_trans_C4 [28:28] = fangyuan4_C [12:12] ;
  assign mant_sum_trans_R4 [29:29] = fangyuan4_R [11:11] ;
  assign mant_sum_trans_X4 [29:29] = fangyuan4_X [11:11] ;
  assign mant_sum_trans_C4 [29:29] = fangyuan4_C [11:11] ;
  assign mant_sum_trans_R4 [30:30] = fangyuan4_R [10:10] ;
  assign mant_sum_trans_X4 [30:30] = fangyuan4_X [10:10] ;
  assign mant_sum_trans_C4 [30:30] = fangyuan4_C [10:10] ;
  assign mant_sum_trans_R4 [31:31] = fangyuan4_R [9:9] ;
  assign mant_sum_trans_X4 [31:31] = fangyuan4_X [9:9] ;
  assign mant_sum_trans_C4 [31:31] = fangyuan4_C [9:9] ;
  assign mant_sum_trans_R4 [32:32] = fangyuan4_R [8:8] ;
  assign mant_sum_trans_X4 [32:32] = fangyuan4_X [8:8] ;
  assign mant_sum_trans_C4 [32:32] = fangyuan4_C [8:8] ;
  assign mant_sum_trans_R4 [33:33] = fangyuan4_R [7:7] ;
  assign mant_sum_trans_X4 [33:33] = fangyuan4_X [7:7] ;
  assign mant_sum_trans_C4 [33:33] = fangyuan4_C [7:7] ;
  assign mant_sum_trans_R4 [34:34] = fangyuan4_R [6:6] ;
  assign mant_sum_trans_X4 [34:34] = fangyuan4_X [6:6] ;
  assign mant_sum_trans_C4 [34:34] = fangyuan4_C [6:6] ;
  assign mant_sum_trans_R4 [35:35] = fangyuan4_R [5:5] ;
  assign mant_sum_trans_X4 [35:35] = fangyuan4_X [5:5] ;
  assign mant_sum_trans_C4 [35:35] = fangyuan4_C [5:5] ;
  assign mant_sum_trans_R4 [36:36] = fangyuan4_R [4:4] ;
  assign mant_sum_trans_X4 [36:36] = fangyuan4_X [4:4] ;
  assign mant_sum_trans_C4 [36:36] = fangyuan4_C [4:4] ;
  assign mant_sum_trans_R4 [37:37] = fangyuan4_R [3:3] ;
  assign mant_sum_trans_X4 [37:37] = fangyuan4_X [3:3] ;
  assign mant_sum_trans_C4 [37:37] = fangyuan4_C [3:3] ;
  assign mant_sum_trans_R4 [38:38] = fangyuan4_R [2:2] ;
  assign mant_sum_trans_X4 [38:38] = fangyuan4_X [2:2] ;
  assign mant_sum_trans_C4 [38:38] = fangyuan4_C [2:2] ;
  assign mant_sum_trans_R4 [39:39] = fangyuan4_R [1:1] ;
  assign mant_sum_trans_X4 [39:39] = fangyuan4_X [1:1] ;
  assign mant_sum_trans_C4 [39:39] = fangyuan4_C [1:1] ;
  assign mant_sum_trans_R4 [40:40] = fangyuan4_R [0:0] ;
  assign mant_sum_trans_X4 [40:40] = fangyuan4_X [0:0] ;
  assign mant_sum_trans_C4 [40:40] = fangyuan4_C [0:0] ;

  assign _039_ = & fangyuan4;
  logic [38:0] fangyuan4_C0 ;
  logic [38:0] fangyuan4_R0 ;
  logic [38:0] fangyuan4_X0 ;
  assign _039__T = | fangyuan4_T ;
  assign fangyuan4_C0 = { 39{ _039__C }} ;
  assign fangyuan4_X0 = { 39{ _039__X }} ;
  assign fangyuan4_R0 = { 39{ _039__R }} & ~fangyuan4 ;
  assign _039__S = 0 ;
  logic [37:0] fangyuan5;
  logic [37:0] fangyuan5_T ;
  logic [37:0] fangyuan5_R ;
  logic [37:0] fangyuan5_C ;
  logic [37:0] fangyuan5_X ;
  assign fangyuan5 = { mant_sum_trans[2], mant_sum_trans[3], mant_sum_trans[4], mant_sum_trans[5], mant_sum_trans[6], mant_sum_trans[7], mant_sum_trans[8], mant_sum_trans[9], mant_sum_trans[10], mant_sum_trans[11], mant_sum_trans[12], mant_sum_trans[13], mant_sum_trans[14], mant_sum_trans[15], mant_sum_trans[16], mant_sum_trans[17], mant_sum_trans[18], mant_sum_trans[19], mant_sum_trans[20], mant_sum_trans[21], mant_sum_trans[22], mant_sum_trans[23], mant_sum_trans[24], mant_sum_trans[25], mant_sum_trans[26], mant_sum_trans[27], mant_sum_trans[28], mant_sum_trans[29], mant_sum_trans[30], mant_sum_trans[31], mant_sum_trans[32], mant_sum_trans[33], mant_sum_trans[34], mant_sum_trans[35], mant_sum_trans[36], mant_sum_trans[37], mant_sum_trans[38], mant_sum_trans[39] };
  assign fangyuan5_T = {  mant_sum_trans_T [2] , mant_sum_trans_T [3] , mant_sum_trans_T [4] , mant_sum_trans_T [5] , mant_sum_trans_T [6] , mant_sum_trans_T [7] , mant_sum_trans_T [8] , mant_sum_trans_T [9] , mant_sum_trans_T [10] , mant_sum_trans_T [11] , mant_sum_trans_T [12] , mant_sum_trans_T [13] , mant_sum_trans_T [14] , mant_sum_trans_T [15] , mant_sum_trans_T [16] , mant_sum_trans_T [17] , mant_sum_trans_T [18] , mant_sum_trans_T [19] , mant_sum_trans_T [20] , mant_sum_trans_T [21] , mant_sum_trans_T [22] , mant_sum_trans_T [23] , mant_sum_trans_T [24] , mant_sum_trans_T [25] , mant_sum_trans_T [26] , mant_sum_trans_T [27] , mant_sum_trans_T [28] , mant_sum_trans_T [29] , mant_sum_trans_T [30] , mant_sum_trans_T [31] , mant_sum_trans_T [32] , mant_sum_trans_T [33] , mant_sum_trans_T [34] , mant_sum_trans_T [35] , mant_sum_trans_T [36] , mant_sum_trans_T [37] , mant_sum_trans_T [38] , mant_sum_trans_T [39]  };
  logic [13:0] fangyuan5_S ;
  assign fangyuan5_S = 0 ;
  assign { mant_sum_trans_R4 [0], mant_sum_trans_R4 [1], mant_sum_trans_R4 [41:41] } = 0;
  assign { mant_sum_trans_X4 [0], mant_sum_trans_X4 [1], mant_sum_trans_X4 [41:41] } = 0;
  assign { mant_sum_trans_C4 [0], mant_sum_trans_C4 [1], mant_sum_trans_C4 [41:41] } = 0;
  logic [41:0] mant_sum_trans_R5 ;
  logic [41:0] mant_sum_trans_X5 ;
  logic [41:0] mant_sum_trans_C5 ;
  assign mant_sum_trans_R5 [2:2] = fangyuan5_R [37:37] ;
  assign mant_sum_trans_X5 [2:2] = fangyuan5_X [37:37] ;
  assign mant_sum_trans_C5 [2:2] = fangyuan5_C [37:37] ;
  assign mant_sum_trans_R5 [3:3] = fangyuan5_R [36:36] ;
  assign mant_sum_trans_X5 [3:3] = fangyuan5_X [36:36] ;
  assign mant_sum_trans_C5 [3:3] = fangyuan5_C [36:36] ;
  assign mant_sum_trans_R5 [4:4] = fangyuan5_R [35:35] ;
  assign mant_sum_trans_X5 [4:4] = fangyuan5_X [35:35] ;
  assign mant_sum_trans_C5 [4:4] = fangyuan5_C [35:35] ;
  assign mant_sum_trans_R5 [5:5] = fangyuan5_R [34:34] ;
  assign mant_sum_trans_X5 [5:5] = fangyuan5_X [34:34] ;
  assign mant_sum_trans_C5 [5:5] = fangyuan5_C [34:34] ;
  assign mant_sum_trans_R5 [6:6] = fangyuan5_R [33:33] ;
  assign mant_sum_trans_X5 [6:6] = fangyuan5_X [33:33] ;
  assign mant_sum_trans_C5 [6:6] = fangyuan5_C [33:33] ;
  assign mant_sum_trans_R5 [7:7] = fangyuan5_R [32:32] ;
  assign mant_sum_trans_X5 [7:7] = fangyuan5_X [32:32] ;
  assign mant_sum_trans_C5 [7:7] = fangyuan5_C [32:32] ;
  assign mant_sum_trans_R5 [8:8] = fangyuan5_R [31:31] ;
  assign mant_sum_trans_X5 [8:8] = fangyuan5_X [31:31] ;
  assign mant_sum_trans_C5 [8:8] = fangyuan5_C [31:31] ;
  assign mant_sum_trans_R5 [9:9] = fangyuan5_R [30:30] ;
  assign mant_sum_trans_X5 [9:9] = fangyuan5_X [30:30] ;
  assign mant_sum_trans_C5 [9:9] = fangyuan5_C [30:30] ;
  assign mant_sum_trans_R5 [10:10] = fangyuan5_R [29:29] ;
  assign mant_sum_trans_X5 [10:10] = fangyuan5_X [29:29] ;
  assign mant_sum_trans_C5 [10:10] = fangyuan5_C [29:29] ;
  assign mant_sum_trans_R5 [11:11] = fangyuan5_R [28:28] ;
  assign mant_sum_trans_X5 [11:11] = fangyuan5_X [28:28] ;
  assign mant_sum_trans_C5 [11:11] = fangyuan5_C [28:28] ;
  assign mant_sum_trans_R5 [12:12] = fangyuan5_R [27:27] ;
  assign mant_sum_trans_X5 [12:12] = fangyuan5_X [27:27] ;
  assign mant_sum_trans_C5 [12:12] = fangyuan5_C [27:27] ;
  assign mant_sum_trans_R5 [13:13] = fangyuan5_R [26:26] ;
  assign mant_sum_trans_X5 [13:13] = fangyuan5_X [26:26] ;
  assign mant_sum_trans_C5 [13:13] = fangyuan5_C [26:26] ;
  assign mant_sum_trans_R5 [14:14] = fangyuan5_R [25:25] ;
  assign mant_sum_trans_X5 [14:14] = fangyuan5_X [25:25] ;
  assign mant_sum_trans_C5 [14:14] = fangyuan5_C [25:25] ;
  assign mant_sum_trans_R5 [15:15] = fangyuan5_R [24:24] ;
  assign mant_sum_trans_X5 [15:15] = fangyuan5_X [24:24] ;
  assign mant_sum_trans_C5 [15:15] = fangyuan5_C [24:24] ;
  assign mant_sum_trans_R5 [16:16] = fangyuan5_R [23:23] ;
  assign mant_sum_trans_X5 [16:16] = fangyuan5_X [23:23] ;
  assign mant_sum_trans_C5 [16:16] = fangyuan5_C [23:23] ;
  assign mant_sum_trans_R5 [17:17] = fangyuan5_R [22:22] ;
  assign mant_sum_trans_X5 [17:17] = fangyuan5_X [22:22] ;
  assign mant_sum_trans_C5 [17:17] = fangyuan5_C [22:22] ;
  assign mant_sum_trans_R5 [18:18] = fangyuan5_R [21:21] ;
  assign mant_sum_trans_X5 [18:18] = fangyuan5_X [21:21] ;
  assign mant_sum_trans_C5 [18:18] = fangyuan5_C [21:21] ;
  assign mant_sum_trans_R5 [19:19] = fangyuan5_R [20:20] ;
  assign mant_sum_trans_X5 [19:19] = fangyuan5_X [20:20] ;
  assign mant_sum_trans_C5 [19:19] = fangyuan5_C [20:20] ;
  assign mant_sum_trans_R5 [20:20] = fangyuan5_R [19:19] ;
  assign mant_sum_trans_X5 [20:20] = fangyuan5_X [19:19] ;
  assign mant_sum_trans_C5 [20:20] = fangyuan5_C [19:19] ;
  assign mant_sum_trans_R5 [21:21] = fangyuan5_R [18:18] ;
  assign mant_sum_trans_X5 [21:21] = fangyuan5_X [18:18] ;
  assign mant_sum_trans_C5 [21:21] = fangyuan5_C [18:18] ;
  assign mant_sum_trans_R5 [22:22] = fangyuan5_R [17:17] ;
  assign mant_sum_trans_X5 [22:22] = fangyuan5_X [17:17] ;
  assign mant_sum_trans_C5 [22:22] = fangyuan5_C [17:17] ;
  assign mant_sum_trans_R5 [23:23] = fangyuan5_R [16:16] ;
  assign mant_sum_trans_X5 [23:23] = fangyuan5_X [16:16] ;
  assign mant_sum_trans_C5 [23:23] = fangyuan5_C [16:16] ;
  assign mant_sum_trans_R5 [24:24] = fangyuan5_R [15:15] ;
  assign mant_sum_trans_X5 [24:24] = fangyuan5_X [15:15] ;
  assign mant_sum_trans_C5 [24:24] = fangyuan5_C [15:15] ;
  assign mant_sum_trans_R5 [25:25] = fangyuan5_R [14:14] ;
  assign mant_sum_trans_X5 [25:25] = fangyuan5_X [14:14] ;
  assign mant_sum_trans_C5 [25:25] = fangyuan5_C [14:14] ;
  assign mant_sum_trans_R5 [26:26] = fangyuan5_R [13:13] ;
  assign mant_sum_trans_X5 [26:26] = fangyuan5_X [13:13] ;
  assign mant_sum_trans_C5 [26:26] = fangyuan5_C [13:13] ;
  assign mant_sum_trans_R5 [27:27] = fangyuan5_R [12:12] ;
  assign mant_sum_trans_X5 [27:27] = fangyuan5_X [12:12] ;
  assign mant_sum_trans_C5 [27:27] = fangyuan5_C [12:12] ;
  assign mant_sum_trans_R5 [28:28] = fangyuan5_R [11:11] ;
  assign mant_sum_trans_X5 [28:28] = fangyuan5_X [11:11] ;
  assign mant_sum_trans_C5 [28:28] = fangyuan5_C [11:11] ;
  assign mant_sum_trans_R5 [29:29] = fangyuan5_R [10:10] ;
  assign mant_sum_trans_X5 [29:29] = fangyuan5_X [10:10] ;
  assign mant_sum_trans_C5 [29:29] = fangyuan5_C [10:10] ;
  assign mant_sum_trans_R5 [30:30] = fangyuan5_R [9:9] ;
  assign mant_sum_trans_X5 [30:30] = fangyuan5_X [9:9] ;
  assign mant_sum_trans_C5 [30:30] = fangyuan5_C [9:9] ;
  assign mant_sum_trans_R5 [31:31] = fangyuan5_R [8:8] ;
  assign mant_sum_trans_X5 [31:31] = fangyuan5_X [8:8] ;
  assign mant_sum_trans_C5 [31:31] = fangyuan5_C [8:8] ;
  assign mant_sum_trans_R5 [32:32] = fangyuan5_R [7:7] ;
  assign mant_sum_trans_X5 [32:32] = fangyuan5_X [7:7] ;
  assign mant_sum_trans_C5 [32:32] = fangyuan5_C [7:7] ;
  assign mant_sum_trans_R5 [33:33] = fangyuan5_R [6:6] ;
  assign mant_sum_trans_X5 [33:33] = fangyuan5_X [6:6] ;
  assign mant_sum_trans_C5 [33:33] = fangyuan5_C [6:6] ;
  assign mant_sum_trans_R5 [34:34] = fangyuan5_R [5:5] ;
  assign mant_sum_trans_X5 [34:34] = fangyuan5_X [5:5] ;
  assign mant_sum_trans_C5 [34:34] = fangyuan5_C [5:5] ;
  assign mant_sum_trans_R5 [35:35] = fangyuan5_R [4:4] ;
  assign mant_sum_trans_X5 [35:35] = fangyuan5_X [4:4] ;
  assign mant_sum_trans_C5 [35:35] = fangyuan5_C [4:4] ;
  assign mant_sum_trans_R5 [36:36] = fangyuan5_R [3:3] ;
  assign mant_sum_trans_X5 [36:36] = fangyuan5_X [3:3] ;
  assign mant_sum_trans_C5 [36:36] = fangyuan5_C [3:3] ;
  assign mant_sum_trans_R5 [37:37] = fangyuan5_R [2:2] ;
  assign mant_sum_trans_X5 [37:37] = fangyuan5_X [2:2] ;
  assign mant_sum_trans_C5 [37:37] = fangyuan5_C [2:2] ;
  assign mant_sum_trans_R5 [38:38] = fangyuan5_R [1:1] ;
  assign mant_sum_trans_X5 [38:38] = fangyuan5_X [1:1] ;
  assign mant_sum_trans_C5 [38:38] = fangyuan5_C [1:1] ;
  assign mant_sum_trans_R5 [39:39] = fangyuan5_R [0:0] ;
  assign mant_sum_trans_X5 [39:39] = fangyuan5_X [0:0] ;
  assign mant_sum_trans_C5 [39:39] = fangyuan5_C [0:0] ;

  assign _040_ = & fangyuan5;
  logic [37:0] fangyuan5_C0 ;
  logic [37:0] fangyuan5_R0 ;
  logic [37:0] fangyuan5_X0 ;
  assign _040__T = | fangyuan5_T ;
  assign fangyuan5_C0 = { 38{ _040__C }} ;
  assign fangyuan5_X0 = { 38{ _040__X }} ;
  assign fangyuan5_R0 = { 38{ _040__R }} & ~fangyuan5 ;
  assign _040__S = 0 ;
  logic [7:0] fangyuan6;
  logic [7:0] fangyuan6_T ;
  logic [7:0] fangyuan6_R ;
  logic [7:0] fangyuan6_C ;
  logic [7:0] fangyuan6_X ;
  assign fangyuan6 = { partial_result[40], partial_result[41], partial_result[42], partial_result[43], partial_result[44], partial_result[45], partial_result[46], partial_result[47] };
  assign fangyuan6_T = {  partial_result_T [40] , partial_result_T [41] , partial_result_T [42] , partial_result_T [43] , partial_result_T [44] , partial_result_T [45] , partial_result_T [46] , partial_result_T [47]  };
  logic [13:0] fangyuan6_S ;
  assign fangyuan6_S = 0 ;
  assign partial_result_R1 [40:40] = fangyuan6_R [7:7] ;
  assign partial_result_X1 [40:40] = fangyuan6_X [7:7] ;
  assign partial_result_C1 [40:40] = fangyuan6_C [7:7] ;
  assign partial_result_R1 [41:41] = fangyuan6_R [6:6] ;
  assign partial_result_X1 [41:41] = fangyuan6_X [6:6] ;
  assign partial_result_C1 [41:41] = fangyuan6_C [6:6] ;
  assign partial_result_R1 [42:42] = fangyuan6_R [5:5] ;
  assign partial_result_X1 [42:42] = fangyuan6_X [5:5] ;
  assign partial_result_C1 [42:42] = fangyuan6_C [5:5] ;
  assign partial_result_R1 [43:43] = fangyuan6_R [4:4] ;
  assign partial_result_X1 [43:43] = fangyuan6_X [4:4] ;
  assign partial_result_C1 [43:43] = fangyuan6_C [4:4] ;
  assign partial_result_R1 [44:44] = fangyuan6_R [3:3] ;
  assign partial_result_X1 [44:44] = fangyuan6_X [3:3] ;
  assign partial_result_C1 [44:44] = fangyuan6_C [3:3] ;
  assign partial_result_R1 [45:45] = fangyuan6_R [2:2] ;
  assign partial_result_X1 [45:45] = fangyuan6_X [2:2] ;
  assign partial_result_C1 [45:45] = fangyuan6_C [2:2] ;
  assign partial_result_R1 [46:46] = fangyuan6_R [1:1] ;
  assign partial_result_X1 [46:46] = fangyuan6_X [1:1] ;
  assign partial_result_C1 [46:46] = fangyuan6_C [1:1] ;
  assign partial_result_R1 [47:47] = fangyuan6_R [0:0] ;
  assign partial_result_X1 [47:47] = fangyuan6_X [0:0] ;
  assign partial_result_C1 [47:47] = fangyuan6_C [0:0] ;

  assign partial_nan = & fangyuan6;
  logic [7:0] fangyuan6_C0 ;
  logic [7:0] fangyuan6_R0 ;
  logic [7:0] fangyuan6_X0 ;
  assign partial_nan_T = | fangyuan6_T ;
  assign fangyuan6_C0 = { 8{ partial_nan_C }} ;
  assign fangyuan6_X0 = { 8{ partial_nan_X }} ;
  assign fangyuan6_R0 = { 8{ partial_nan_R }} & ~fangyuan6 ;
  assign partial_nan_S = 0 ;
  logic [23:0] fangyuan7;
  logic [23:0] fangyuan7_T ;
  logic [23:0] fangyuan7_R ;
  logic [23:0] fangyuan7_C ;
  logic [23:0] fangyuan7_X ;
  assign fangyuan7 = { partial_mant_abs[15], partial_mant_abs[16], partial_mant_abs[17], partial_mant_abs[18], partial_mant_abs[19], partial_mant_abs[20], partial_mant_abs[21], partial_mant_abs[22], partial_mant_abs[23], partial_mant_abs[24], partial_mant_abs[25], partial_mant_abs[26], partial_mant_abs[27], partial_mant_abs[28], partial_mant_abs[29], partial_mant_abs[30], partial_mant_abs[31], partial_mant_abs[32], partial_mant_abs[33], partial_mant_abs[34], partial_mant_abs[35], partial_mant_abs[36], partial_mant_abs[37], partial_mant_abs[38] };
  assign fangyuan7_T = {  partial_mant_abs_T [15] , partial_mant_abs_T [16] , partial_mant_abs_T [17] , partial_mant_abs_T [18] , partial_mant_abs_T [19] , partial_mant_abs_T [20] , partial_mant_abs_T [21] , partial_mant_abs_T [22] , partial_mant_abs_T [23] , partial_mant_abs_T [24] , partial_mant_abs_T [25] , partial_mant_abs_T [26] , partial_mant_abs_T [27] , partial_mant_abs_T [28] , partial_mant_abs_T [29] , partial_mant_abs_T [30] , partial_mant_abs_T [31] , partial_mant_abs_T [32] , partial_mant_abs_T [33] , partial_mant_abs_T [34] , partial_mant_abs_T [35] , partial_mant_abs_T [36] , partial_mant_abs_T [37] , partial_mant_abs_T [38]  };
  logic [13:0] fangyuan7_S ;
  assign fangyuan7_S = 0 ;
  assign partial_mant_abs_R1 [15:15] = fangyuan7_R [23:23] ;
  assign partial_mant_abs_X1 [15:15] = fangyuan7_X [23:23] ;
  assign partial_mant_abs_C1 [15:15] = fangyuan7_C [23:23] ;
  assign partial_mant_abs_R1 [16:16] = fangyuan7_R [22:22] ;
  assign partial_mant_abs_X1 [16:16] = fangyuan7_X [22:22] ;
  assign partial_mant_abs_C1 [16:16] = fangyuan7_C [22:22] ;
  assign partial_mant_abs_R1 [17:17] = fangyuan7_R [21:21] ;
  assign partial_mant_abs_X1 [17:17] = fangyuan7_X [21:21] ;
  assign partial_mant_abs_C1 [17:17] = fangyuan7_C [21:21] ;
  assign partial_mant_abs_R1 [18:18] = fangyuan7_R [20:20] ;
  assign partial_mant_abs_X1 [18:18] = fangyuan7_X [20:20] ;
  assign partial_mant_abs_C1 [18:18] = fangyuan7_C [20:20] ;
  assign partial_mant_abs_R1 [19:19] = fangyuan7_R [19:19] ;
  assign partial_mant_abs_X1 [19:19] = fangyuan7_X [19:19] ;
  assign partial_mant_abs_C1 [19:19] = fangyuan7_C [19:19] ;
  assign partial_mant_abs_R1 [20:20] = fangyuan7_R [18:18] ;
  assign partial_mant_abs_X1 [20:20] = fangyuan7_X [18:18] ;
  assign partial_mant_abs_C1 [20:20] = fangyuan7_C [18:18] ;
  assign partial_mant_abs_R1 [21:21] = fangyuan7_R [17:17] ;
  assign partial_mant_abs_X1 [21:21] = fangyuan7_X [17:17] ;
  assign partial_mant_abs_C1 [21:21] = fangyuan7_C [17:17] ;
  assign partial_mant_abs_R1 [22:22] = fangyuan7_R [16:16] ;
  assign partial_mant_abs_X1 [22:22] = fangyuan7_X [16:16] ;
  assign partial_mant_abs_C1 [22:22] = fangyuan7_C [16:16] ;
  assign partial_mant_abs_R1 [23:23] = fangyuan7_R [15:15] ;
  assign partial_mant_abs_X1 [23:23] = fangyuan7_X [15:15] ;
  assign partial_mant_abs_C1 [23:23] = fangyuan7_C [15:15] ;
  assign partial_mant_abs_R1 [24:24] = fangyuan7_R [14:14] ;
  assign partial_mant_abs_X1 [24:24] = fangyuan7_X [14:14] ;
  assign partial_mant_abs_C1 [24:24] = fangyuan7_C [14:14] ;
  assign partial_mant_abs_R1 [25:25] = fangyuan7_R [13:13] ;
  assign partial_mant_abs_X1 [25:25] = fangyuan7_X [13:13] ;
  assign partial_mant_abs_C1 [25:25] = fangyuan7_C [13:13] ;
  assign partial_mant_abs_R1 [26:26] = fangyuan7_R [12:12] ;
  assign partial_mant_abs_X1 [26:26] = fangyuan7_X [12:12] ;
  assign partial_mant_abs_C1 [26:26] = fangyuan7_C [12:12] ;
  assign partial_mant_abs_R1 [27:27] = fangyuan7_R [11:11] ;
  assign partial_mant_abs_X1 [27:27] = fangyuan7_X [11:11] ;
  assign partial_mant_abs_C1 [27:27] = fangyuan7_C [11:11] ;
  assign partial_mant_abs_R1 [28:28] = fangyuan7_R [10:10] ;
  assign partial_mant_abs_X1 [28:28] = fangyuan7_X [10:10] ;
  assign partial_mant_abs_C1 [28:28] = fangyuan7_C [10:10] ;
  assign partial_mant_abs_R1 [29:29] = fangyuan7_R [9:9] ;
  assign partial_mant_abs_X1 [29:29] = fangyuan7_X [9:9] ;
  assign partial_mant_abs_C1 [29:29] = fangyuan7_C [9:9] ;
  assign partial_mant_abs_R1 [30:30] = fangyuan7_R [8:8] ;
  assign partial_mant_abs_X1 [30:30] = fangyuan7_X [8:8] ;
  assign partial_mant_abs_C1 [30:30] = fangyuan7_C [8:8] ;
  assign partial_mant_abs_R1 [31:31] = fangyuan7_R [7:7] ;
  assign partial_mant_abs_X1 [31:31] = fangyuan7_X [7:7] ;
  assign partial_mant_abs_C1 [31:31] = fangyuan7_C [7:7] ;
  assign partial_mant_abs_R1 [32:32] = fangyuan7_R [6:6] ;
  assign partial_mant_abs_X1 [32:32] = fangyuan7_X [6:6] ;
  assign partial_mant_abs_C1 [32:32] = fangyuan7_C [6:6] ;
  assign partial_mant_abs_R1 [33:33] = fangyuan7_R [5:5] ;
  assign partial_mant_abs_X1 [33:33] = fangyuan7_X [5:5] ;
  assign partial_mant_abs_C1 [33:33] = fangyuan7_C [5:5] ;
  assign partial_mant_abs_R1 [34:34] = fangyuan7_R [4:4] ;
  assign partial_mant_abs_X1 [34:34] = fangyuan7_X [4:4] ;
  assign partial_mant_abs_C1 [34:34] = fangyuan7_C [4:4] ;
  assign partial_mant_abs_R1 [35:35] = fangyuan7_R [3:3] ;
  assign partial_mant_abs_X1 [35:35] = fangyuan7_X [3:3] ;
  assign partial_mant_abs_C1 [35:35] = fangyuan7_C [3:3] ;
  assign partial_mant_abs_R1 [36:36] = fangyuan7_R [2:2] ;
  assign partial_mant_abs_X1 [36:36] = fangyuan7_X [2:2] ;
  assign partial_mant_abs_C1 [36:36] = fangyuan7_C [2:2] ;
  assign partial_mant_abs_R1 [37:37] = fangyuan7_R [1:1] ;
  assign partial_mant_abs_X1 [37:37] = fangyuan7_X [1:1] ;
  assign partial_mant_abs_C1 [37:37] = fangyuan7_C [1:1] ;
  assign partial_mant_abs_R1 [38:38] = fangyuan7_R [0:0] ;
  assign partial_mant_abs_X1 [38:38] = fangyuan7_X [0:0] ;
  assign partial_mant_abs_C1 [38:38] = fangyuan7_C [0:0] ;

  assign _041_ = & fangyuan7;
  logic [23:0] fangyuan7_C0 ;
  logic [23:0] fangyuan7_R0 ;
  logic [23:0] fangyuan7_X0 ;
  assign _041__T = | fangyuan7_T ;
  assign fangyuan7_C0 = { 24{ _041__C }} ;
  assign fangyuan7_X0 = { 24{ _041__X }} ;
  assign fangyuan7_R0 = { 24{ _041__R }} & ~fangyuan7 ;
  assign _041__S = 0 ;
  logic [37:0] fangyuan8;
  logic [37:0] fangyuan8_T ;
  logic [37:0] fangyuan8_R ;
  logic [37:0] fangyuan8_C ;
  logic [37:0] fangyuan8_X ;
  assign fangyuan8 = { in_data[0], in_data[1], in_data[2], in_data[3], in_data[4], in_data[5], in_data[6], in_data[7], in_data[8], in_data[9], in_data[10], in_data[11], in_data[12], in_data[13], in_data[14], in_data[15], in_data[16], in_data[17], in_data[18], in_data[19], in_data[20], in_data[21], in_data[22], in_data[23], in_data[24], in_data[25], in_data[26], in_data[27], in_data[28], in_data[29], in_data[30], in_data[31], in_data[32], in_data[33], in_data[34], in_data[35], in_data[36], in_data[37] };
  assign fangyuan8_T = {  in_data_T [0] , in_data_T [1] , in_data_T [2] , in_data_T [3] , in_data_T [4] , in_data_T [5] , in_data_T [6] , in_data_T [7] , in_data_T [8] , in_data_T [9] , in_data_T [10] , in_data_T [11] , in_data_T [12] , in_data_T [13] , in_data_T [14] , in_data_T [15] , in_data_T [16] , in_data_T [17] , in_data_T [18] , in_data_T [19] , in_data_T [20] , in_data_T [21] , in_data_T [22] , in_data_T [23] , in_data_T [24] , in_data_T [25] , in_data_T [26] , in_data_T [27] , in_data_T [28] , in_data_T [29] , in_data_T [30] , in_data_T [31] , in_data_T [32] , in_data_T [33] , in_data_T [34] , in_data_T [35] , in_data_T [36] , in_data_T [37]  };
  logic [13:0] fangyuan8_S ;
  assign fangyuan8_S = 0 ;
  assign in_data_R1 [0:0] = fangyuan8_R [37:37] ;
  assign in_data_X1 [0:0] = fangyuan8_X [37:37] ;
  assign in_data_C1 [0:0] = fangyuan8_C [37:37] ;
  assign in_data_R1 [1:1] = fangyuan8_R [36:36] ;
  assign in_data_X1 [1:1] = fangyuan8_X [36:36] ;
  assign in_data_C1 [1:1] = fangyuan8_C [36:36] ;
  assign in_data_R1 [2:2] = fangyuan8_R [35:35] ;
  assign in_data_X1 [2:2] = fangyuan8_X [35:35] ;
  assign in_data_C1 [2:2] = fangyuan8_C [35:35] ;
  assign in_data_R1 [3:3] = fangyuan8_R [34:34] ;
  assign in_data_X1 [3:3] = fangyuan8_X [34:34] ;
  assign in_data_C1 [3:3] = fangyuan8_C [34:34] ;
  assign in_data_R1 [4:4] = fangyuan8_R [33:33] ;
  assign in_data_X1 [4:4] = fangyuan8_X [33:33] ;
  assign in_data_C1 [4:4] = fangyuan8_C [33:33] ;
  assign in_data_R1 [5:5] = fangyuan8_R [32:32] ;
  assign in_data_X1 [5:5] = fangyuan8_X [32:32] ;
  assign in_data_C1 [5:5] = fangyuan8_C [32:32] ;
  assign in_data_R1 [6:6] = fangyuan8_R [31:31] ;
  assign in_data_X1 [6:6] = fangyuan8_X [31:31] ;
  assign in_data_C1 [6:6] = fangyuan8_C [31:31] ;
  assign in_data_R1 [7:7] = fangyuan8_R [30:30] ;
  assign in_data_X1 [7:7] = fangyuan8_X [30:30] ;
  assign in_data_C1 [7:7] = fangyuan8_C [30:30] ;
  assign in_data_R1 [8:8] = fangyuan8_R [29:29] ;
  assign in_data_X1 [8:8] = fangyuan8_X [29:29] ;
  assign in_data_C1 [8:8] = fangyuan8_C [29:29] ;
  assign in_data_R1 [9:9] = fangyuan8_R [28:28] ;
  assign in_data_X1 [9:9] = fangyuan8_X [28:28] ;
  assign in_data_C1 [9:9] = fangyuan8_C [28:28] ;
  assign in_data_R1 [10:10] = fangyuan8_R [27:27] ;
  assign in_data_X1 [10:10] = fangyuan8_X [27:27] ;
  assign in_data_C1 [10:10] = fangyuan8_C [27:27] ;
  assign in_data_R1 [11:11] = fangyuan8_R [26:26] ;
  assign in_data_X1 [11:11] = fangyuan8_X [26:26] ;
  assign in_data_C1 [11:11] = fangyuan8_C [26:26] ;
  assign in_data_R1 [12:12] = fangyuan8_R [25:25] ;
  assign in_data_X1 [12:12] = fangyuan8_X [25:25] ;
  assign in_data_C1 [12:12] = fangyuan8_C [25:25] ;
  assign in_data_R1 [13:13] = fangyuan8_R [24:24] ;
  assign in_data_X1 [13:13] = fangyuan8_X [24:24] ;
  assign in_data_C1 [13:13] = fangyuan8_C [24:24] ;
  assign in_data_R1 [14:14] = fangyuan8_R [23:23] ;
  assign in_data_X1 [14:14] = fangyuan8_X [23:23] ;
  assign in_data_C1 [14:14] = fangyuan8_C [23:23] ;
  assign in_data_R1 [15:15] = fangyuan8_R [22:22] ;
  assign in_data_X1 [15:15] = fangyuan8_X [22:22] ;
  assign in_data_C1 [15:15] = fangyuan8_C [22:22] ;
  assign in_data_R1 [16:16] = fangyuan8_R [21:21] ;
  assign in_data_X1 [16:16] = fangyuan8_X [21:21] ;
  assign in_data_C1 [16:16] = fangyuan8_C [21:21] ;
  assign in_data_R1 [17:17] = fangyuan8_R [20:20] ;
  assign in_data_X1 [17:17] = fangyuan8_X [20:20] ;
  assign in_data_C1 [17:17] = fangyuan8_C [20:20] ;
  assign in_data_R1 [18:18] = fangyuan8_R [19:19] ;
  assign in_data_X1 [18:18] = fangyuan8_X [19:19] ;
  assign in_data_C1 [18:18] = fangyuan8_C [19:19] ;
  assign in_data_R1 [19:19] = fangyuan8_R [18:18] ;
  assign in_data_X1 [19:19] = fangyuan8_X [18:18] ;
  assign in_data_C1 [19:19] = fangyuan8_C [18:18] ;
  assign in_data_R1 [20:20] = fangyuan8_R [17:17] ;
  assign in_data_X1 [20:20] = fangyuan8_X [17:17] ;
  assign in_data_C1 [20:20] = fangyuan8_C [17:17] ;
  assign in_data_R1 [21:21] = fangyuan8_R [16:16] ;
  assign in_data_X1 [21:21] = fangyuan8_X [16:16] ;
  assign in_data_C1 [21:21] = fangyuan8_C [16:16] ;
  assign in_data_R1 [22:22] = fangyuan8_R [15:15] ;
  assign in_data_X1 [22:22] = fangyuan8_X [15:15] ;
  assign in_data_C1 [22:22] = fangyuan8_C [15:15] ;
  assign in_data_R1 [23:23] = fangyuan8_R [14:14] ;
  assign in_data_X1 [23:23] = fangyuan8_X [14:14] ;
  assign in_data_C1 [23:23] = fangyuan8_C [14:14] ;
  assign in_data_R1 [24:24] = fangyuan8_R [13:13] ;
  assign in_data_X1 [24:24] = fangyuan8_X [13:13] ;
  assign in_data_C1 [24:24] = fangyuan8_C [13:13] ;
  assign in_data_R1 [25:25] = fangyuan8_R [12:12] ;
  assign in_data_X1 [25:25] = fangyuan8_X [12:12] ;
  assign in_data_C1 [25:25] = fangyuan8_C [12:12] ;
  assign in_data_R1 [26:26] = fangyuan8_R [11:11] ;
  assign in_data_X1 [26:26] = fangyuan8_X [11:11] ;
  assign in_data_C1 [26:26] = fangyuan8_C [11:11] ;
  assign in_data_R1 [27:27] = fangyuan8_R [10:10] ;
  assign in_data_X1 [27:27] = fangyuan8_X [10:10] ;
  assign in_data_C1 [27:27] = fangyuan8_C [10:10] ;
  assign in_data_R1 [28:28] = fangyuan8_R [9:9] ;
  assign in_data_X1 [28:28] = fangyuan8_X [9:9] ;
  assign in_data_C1 [28:28] = fangyuan8_C [9:9] ;
  assign in_data_R1 [29:29] = fangyuan8_R [8:8] ;
  assign in_data_X1 [29:29] = fangyuan8_X [8:8] ;
  assign in_data_C1 [29:29] = fangyuan8_C [8:8] ;
  assign in_data_R1 [30:30] = fangyuan8_R [7:7] ;
  assign in_data_X1 [30:30] = fangyuan8_X [7:7] ;
  assign in_data_C1 [30:30] = fangyuan8_C [7:7] ;
  assign in_data_R1 [31:31] = fangyuan8_R [6:6] ;
  assign in_data_X1 [31:31] = fangyuan8_X [6:6] ;
  assign in_data_C1 [31:31] = fangyuan8_C [6:6] ;
  assign in_data_R1 [32:32] = fangyuan8_R [5:5] ;
  assign in_data_X1 [32:32] = fangyuan8_X [5:5] ;
  assign in_data_C1 [32:32] = fangyuan8_C [5:5] ;
  assign in_data_R1 [33:33] = fangyuan8_R [4:4] ;
  assign in_data_X1 [33:33] = fangyuan8_X [4:4] ;
  assign in_data_C1 [33:33] = fangyuan8_C [4:4] ;
  assign in_data_R1 [34:34] = fangyuan8_R [3:3] ;
  assign in_data_X1 [34:34] = fangyuan8_X [3:3] ;
  assign in_data_C1 [34:34] = fangyuan8_C [3:3] ;
  assign in_data_R1 [35:35] = fangyuan8_R [2:2] ;
  assign in_data_X1 [35:35] = fangyuan8_X [2:2] ;
  assign in_data_C1 [35:35] = fangyuan8_C [2:2] ;
  assign in_data_R1 [36:36] = fangyuan8_R [1:1] ;
  assign in_data_X1 [36:36] = fangyuan8_X [1:1] ;
  assign in_data_C1 [36:36] = fangyuan8_C [1:1] ;
  assign in_data_R1 [37:37] = fangyuan8_R [0:0] ;
  assign in_data_X1 [37:37] = fangyuan8_X [0:0] ;
  assign in_data_C1 [37:37] = fangyuan8_C [0:0] ;

  assign _042_ = | fangyuan8;
  logic [37:0] fangyuan8_C0 ;
  logic [37:0] fangyuan8_R0 ;
  logic [37:0] fangyuan8_X0 ;
  assign _042__T = | fangyuan8_T ;
  assign fangyuan8_C0 = { 38{ _042__C }} ;
  assign fangyuan8_X0 = { 38{ _042__X }} ;
  assign fangyuan8_R0 = { 38{ _042__R }} & fangyuan8 ;
  assign _042__S = 0 ;
  logic [39:0] fangyuan9;
  logic [39:0] fangyuan9_T ;
  logic [39:0] fangyuan9_R ;
  logic [39:0] fangyuan9_C ;
  logic [39:0] fangyuan9_X ;
  assign fangyuan9 = { in_mask_op[0], in_mask_op[1], in_mask_op[2], in_mask_op[3], in_mask_op[4], in_mask_op[5], in_mask_op[6], in_mask_op[7], in_mask_op[8], in_mask_op[9], in_mask_op[10], in_mask_op[11], in_mask_op[12], in_mask_op[13], in_mask_op[14], in_mask_op[15], in_mask_op[16], in_mask_op[17], in_mask_op[18], in_mask_op[19], in_mask_op[20], in_mask_op[21], in_mask_op[22], in_mask_op[23], in_mask_op[24], in_mask_op[25], in_mask_op[26], in_mask_op[27], in_mask_op[28], in_mask_op[29], in_mask_op[30], in_mask_op[31], in_mask_op[32], in_mask_op[33], in_mask_op[34], in_mask_op[35], in_mask_op[36], in_mask_op[37], in_mask_op[38], in_mask_op[39] };
  assign fangyuan9_T = {  in_mask_op_T [0] , in_mask_op_T [1] , in_mask_op_T [2] , in_mask_op_T [3] , in_mask_op_T [4] , in_mask_op_T [5] , in_mask_op_T [6] , in_mask_op_T [7] , in_mask_op_T [8] , in_mask_op_T [9] , in_mask_op_T [10] , in_mask_op_T [11] , in_mask_op_T [12] , in_mask_op_T [13] , in_mask_op_T [14] , in_mask_op_T [15] , in_mask_op_T [16] , in_mask_op_T [17] , in_mask_op_T [18] , in_mask_op_T [19] , in_mask_op_T [20] , in_mask_op_T [21] , in_mask_op_T [22] , in_mask_op_T [23] , in_mask_op_T [24] , in_mask_op_T [25] , in_mask_op_T [26] , in_mask_op_T [27] , in_mask_op_T [28] , in_mask_op_T [29] , in_mask_op_T [30] , in_mask_op_T [31] , in_mask_op_T [32] , in_mask_op_T [33] , in_mask_op_T [34] , in_mask_op_T [35] , in_mask_op_T [36] , in_mask_op_T [37] , in_mask_op_T [38] , in_mask_op_T [39]  };
  logic [13:0] fangyuan9_S ;
  assign fangyuan9_S = 0 ;
  assign in_mask_op_R0 [0:0] = fangyuan9_R [39:39] ;
  assign in_mask_op_X0 [0:0] = fangyuan9_X [39:39] ;
  assign in_mask_op_C0 [0:0] = fangyuan9_C [39:39] ;
  assign in_mask_op_R0 [1:1] = fangyuan9_R [38:38] ;
  assign in_mask_op_X0 [1:1] = fangyuan9_X [38:38] ;
  assign in_mask_op_C0 [1:1] = fangyuan9_C [38:38] ;
  assign in_mask_op_R0 [2:2] = fangyuan9_R [37:37] ;
  assign in_mask_op_X0 [2:2] = fangyuan9_X [37:37] ;
  assign in_mask_op_C0 [2:2] = fangyuan9_C [37:37] ;
  assign in_mask_op_R0 [3:3] = fangyuan9_R [36:36] ;
  assign in_mask_op_X0 [3:3] = fangyuan9_X [36:36] ;
  assign in_mask_op_C0 [3:3] = fangyuan9_C [36:36] ;
  assign in_mask_op_R0 [4:4] = fangyuan9_R [35:35] ;
  assign in_mask_op_X0 [4:4] = fangyuan9_X [35:35] ;
  assign in_mask_op_C0 [4:4] = fangyuan9_C [35:35] ;
  assign in_mask_op_R0 [5:5] = fangyuan9_R [34:34] ;
  assign in_mask_op_X0 [5:5] = fangyuan9_X [34:34] ;
  assign in_mask_op_C0 [5:5] = fangyuan9_C [34:34] ;
  assign in_mask_op_R0 [6:6] = fangyuan9_R [33:33] ;
  assign in_mask_op_X0 [6:6] = fangyuan9_X [33:33] ;
  assign in_mask_op_C0 [6:6] = fangyuan9_C [33:33] ;
  assign in_mask_op_R0 [7:7] = fangyuan9_R [32:32] ;
  assign in_mask_op_X0 [7:7] = fangyuan9_X [32:32] ;
  assign in_mask_op_C0 [7:7] = fangyuan9_C [32:32] ;
  assign in_mask_op_R0 [8:8] = fangyuan9_R [31:31] ;
  assign in_mask_op_X0 [8:8] = fangyuan9_X [31:31] ;
  assign in_mask_op_C0 [8:8] = fangyuan9_C [31:31] ;
  assign in_mask_op_R0 [9:9] = fangyuan9_R [30:30] ;
  assign in_mask_op_X0 [9:9] = fangyuan9_X [30:30] ;
  assign in_mask_op_C0 [9:9] = fangyuan9_C [30:30] ;
  assign in_mask_op_R0 [10:10] = fangyuan9_R [29:29] ;
  assign in_mask_op_X0 [10:10] = fangyuan9_X [29:29] ;
  assign in_mask_op_C0 [10:10] = fangyuan9_C [29:29] ;
  assign in_mask_op_R0 [11:11] = fangyuan9_R [28:28] ;
  assign in_mask_op_X0 [11:11] = fangyuan9_X [28:28] ;
  assign in_mask_op_C0 [11:11] = fangyuan9_C [28:28] ;
  assign in_mask_op_R0 [12:12] = fangyuan9_R [27:27] ;
  assign in_mask_op_X0 [12:12] = fangyuan9_X [27:27] ;
  assign in_mask_op_C0 [12:12] = fangyuan9_C [27:27] ;
  assign in_mask_op_R0 [13:13] = fangyuan9_R [26:26] ;
  assign in_mask_op_X0 [13:13] = fangyuan9_X [26:26] ;
  assign in_mask_op_C0 [13:13] = fangyuan9_C [26:26] ;
  assign in_mask_op_R0 [14:14] = fangyuan9_R [25:25] ;
  assign in_mask_op_X0 [14:14] = fangyuan9_X [25:25] ;
  assign in_mask_op_C0 [14:14] = fangyuan9_C [25:25] ;
  assign in_mask_op_R0 [15:15] = fangyuan9_R [24:24] ;
  assign in_mask_op_X0 [15:15] = fangyuan9_X [24:24] ;
  assign in_mask_op_C0 [15:15] = fangyuan9_C [24:24] ;
  assign in_mask_op_R0 [16:16] = fangyuan9_R [23:23] ;
  assign in_mask_op_X0 [16:16] = fangyuan9_X [23:23] ;
  assign in_mask_op_C0 [16:16] = fangyuan9_C [23:23] ;
  assign in_mask_op_R0 [17:17] = fangyuan9_R [22:22] ;
  assign in_mask_op_X0 [17:17] = fangyuan9_X [22:22] ;
  assign in_mask_op_C0 [17:17] = fangyuan9_C [22:22] ;
  assign in_mask_op_R0 [18:18] = fangyuan9_R [21:21] ;
  assign in_mask_op_X0 [18:18] = fangyuan9_X [21:21] ;
  assign in_mask_op_C0 [18:18] = fangyuan9_C [21:21] ;
  assign in_mask_op_R0 [19:19] = fangyuan9_R [20:20] ;
  assign in_mask_op_X0 [19:19] = fangyuan9_X [20:20] ;
  assign in_mask_op_C0 [19:19] = fangyuan9_C [20:20] ;
  assign in_mask_op_R0 [20:20] = fangyuan9_R [19:19] ;
  assign in_mask_op_X0 [20:20] = fangyuan9_X [19:19] ;
  assign in_mask_op_C0 [20:20] = fangyuan9_C [19:19] ;
  assign in_mask_op_R0 [21:21] = fangyuan9_R [18:18] ;
  assign in_mask_op_X0 [21:21] = fangyuan9_X [18:18] ;
  assign in_mask_op_C0 [21:21] = fangyuan9_C [18:18] ;
  assign in_mask_op_R0 [22:22] = fangyuan9_R [17:17] ;
  assign in_mask_op_X0 [22:22] = fangyuan9_X [17:17] ;
  assign in_mask_op_C0 [22:22] = fangyuan9_C [17:17] ;
  assign in_mask_op_R0 [23:23] = fangyuan9_R [16:16] ;
  assign in_mask_op_X0 [23:23] = fangyuan9_X [16:16] ;
  assign in_mask_op_C0 [23:23] = fangyuan9_C [16:16] ;
  assign in_mask_op_R0 [24:24] = fangyuan9_R [15:15] ;
  assign in_mask_op_X0 [24:24] = fangyuan9_X [15:15] ;
  assign in_mask_op_C0 [24:24] = fangyuan9_C [15:15] ;
  assign in_mask_op_R0 [25:25] = fangyuan9_R [14:14] ;
  assign in_mask_op_X0 [25:25] = fangyuan9_X [14:14] ;
  assign in_mask_op_C0 [25:25] = fangyuan9_C [14:14] ;
  assign in_mask_op_R0 [26:26] = fangyuan9_R [13:13] ;
  assign in_mask_op_X0 [26:26] = fangyuan9_X [13:13] ;
  assign in_mask_op_C0 [26:26] = fangyuan9_C [13:13] ;
  assign in_mask_op_R0 [27:27] = fangyuan9_R [12:12] ;
  assign in_mask_op_X0 [27:27] = fangyuan9_X [12:12] ;
  assign in_mask_op_C0 [27:27] = fangyuan9_C [12:12] ;
  assign in_mask_op_R0 [28:28] = fangyuan9_R [11:11] ;
  assign in_mask_op_X0 [28:28] = fangyuan9_X [11:11] ;
  assign in_mask_op_C0 [28:28] = fangyuan9_C [11:11] ;
  assign in_mask_op_R0 [29:29] = fangyuan9_R [10:10] ;
  assign in_mask_op_X0 [29:29] = fangyuan9_X [10:10] ;
  assign in_mask_op_C0 [29:29] = fangyuan9_C [10:10] ;
  assign in_mask_op_R0 [30:30] = fangyuan9_R [9:9] ;
  assign in_mask_op_X0 [30:30] = fangyuan9_X [9:9] ;
  assign in_mask_op_C0 [30:30] = fangyuan9_C [9:9] ;
  assign in_mask_op_R0 [31:31] = fangyuan9_R [8:8] ;
  assign in_mask_op_X0 [31:31] = fangyuan9_X [8:8] ;
  assign in_mask_op_C0 [31:31] = fangyuan9_C [8:8] ;
  assign in_mask_op_R0 [32:32] = fangyuan9_R [7:7] ;
  assign in_mask_op_X0 [32:32] = fangyuan9_X [7:7] ;
  assign in_mask_op_C0 [32:32] = fangyuan9_C [7:7] ;
  assign in_mask_op_R0 [33:33] = fangyuan9_R [6:6] ;
  assign in_mask_op_X0 [33:33] = fangyuan9_X [6:6] ;
  assign in_mask_op_C0 [33:33] = fangyuan9_C [6:6] ;
  assign in_mask_op_R0 [34:34] = fangyuan9_R [5:5] ;
  assign in_mask_op_X0 [34:34] = fangyuan9_X [5:5] ;
  assign in_mask_op_C0 [34:34] = fangyuan9_C [5:5] ;
  assign in_mask_op_R0 [35:35] = fangyuan9_R [4:4] ;
  assign in_mask_op_X0 [35:35] = fangyuan9_X [4:4] ;
  assign in_mask_op_C0 [35:35] = fangyuan9_C [4:4] ;
  assign in_mask_op_R0 [36:36] = fangyuan9_R [3:3] ;
  assign in_mask_op_X0 [36:36] = fangyuan9_X [3:3] ;
  assign in_mask_op_C0 [36:36] = fangyuan9_C [3:3] ;
  assign in_mask_op_R0 [37:37] = fangyuan9_R [2:2] ;
  assign in_mask_op_X0 [37:37] = fangyuan9_X [2:2] ;
  assign in_mask_op_C0 [37:37] = fangyuan9_C [2:2] ;
  assign in_mask_op_R0 [38:38] = fangyuan9_R [1:1] ;
  assign in_mask_op_X0 [38:38] = fangyuan9_X [1:1] ;
  assign in_mask_op_C0 [38:38] = fangyuan9_C [1:1] ;
  assign in_mask_op_R0 [39:39] = fangyuan9_R [0:0] ;
  assign in_mask_op_X0 [39:39] = fangyuan9_X [0:0] ;
  assign in_mask_op_C0 [39:39] = fangyuan9_C [0:0] ;

  assign _043_ = | fangyuan9;
  logic [39:0] fangyuan9_C0 ;
  logic [39:0] fangyuan9_R0 ;
  logic [39:0] fangyuan9_X0 ;
  assign _043__T = | fangyuan9_T ;
  assign fangyuan9_C0 = { 40{ _043__C }} ;
  assign fangyuan9_X0 = { 40{ _043__X }} ;
  assign fangyuan9_R0 = { 40{ _043__R }} & fangyuan9 ;
  assign _043__S = 0 ;
  logic [37:0] fangyuan10;
  logic [37:0] fangyuan10_T ;
  logic [37:0] fangyuan10_R ;
  logic [37:0] fangyuan10_C ;
  logic [37:0] fangyuan10_X ;
  assign fangyuan10 = { di_mant_cutt[0], di_mant_cutt[1], di_mant_cutt[2], di_mant_cutt[3], di_mant_cutt[4], di_mant_cutt[5], di_mant_cutt[6], di_mant_cutt[7], di_mant_cutt[8], di_mant_cutt[9], di_mant_cutt[10], di_mant_cutt[11], di_mant_cutt[12], di_mant_cutt[13], di_mant_cutt[14], di_mant_cutt[15], di_mant_cutt[16], di_mant_cutt[17], di_mant_cutt[18], di_mant_cutt[19], di_mant_cutt[20], di_mant_cutt[21], di_mant_cutt[22], di_mant_cutt[23], di_mant_cutt[24], di_mant_cutt[25], di_mant_cutt[26], di_mant_cutt[27], di_mant_cutt[28], di_mant_cutt[29], di_mant_cutt[30], di_mant_cutt[31], di_mant_cutt[32], di_mant_cutt[33], di_mant_cutt[34], di_mant_cutt[35], di_mant_cutt[36], di_mant_cutt[37] };
  assign fangyuan10_T = {  di_mant_cutt_T [0] , di_mant_cutt_T [1] , di_mant_cutt_T [2] , di_mant_cutt_T [3] , di_mant_cutt_T [4] , di_mant_cutt_T [5] , di_mant_cutt_T [6] , di_mant_cutt_T [7] , di_mant_cutt_T [8] , di_mant_cutt_T [9] , di_mant_cutt_T [10] , di_mant_cutt_T [11] , di_mant_cutt_T [12] , di_mant_cutt_T [13] , di_mant_cutt_T [14] , di_mant_cutt_T [15] , di_mant_cutt_T [16] , di_mant_cutt_T [17] , di_mant_cutt_T [18] , di_mant_cutt_T [19] , di_mant_cutt_T [20] , di_mant_cutt_T [21] , di_mant_cutt_T [22] , di_mant_cutt_T [23] , di_mant_cutt_T [24] , di_mant_cutt_T [25] , di_mant_cutt_T [26] , di_mant_cutt_T [27] , di_mant_cutt_T [28] , di_mant_cutt_T [29] , di_mant_cutt_T [30] , di_mant_cutt_T [31] , di_mant_cutt_T [32] , di_mant_cutt_T [33] , di_mant_cutt_T [34] , di_mant_cutt_T [35] , di_mant_cutt_T [36] , di_mant_cutt_T [37]  };
  logic [13:0] fangyuan10_S ;
  assign fangyuan10_S = 0 ;
  logic [39:0] di_mant_cutt_R0 ;
  logic [39:0] di_mant_cutt_X0 ;
  logic [39:0] di_mant_cutt_C0 ;
  assign di_mant_cutt_R0 [0:0] = fangyuan10_R [37:37] ;
  assign di_mant_cutt_X0 [0:0] = fangyuan10_X [37:37] ;
  assign di_mant_cutt_C0 [0:0] = fangyuan10_C [37:37] ;
  assign di_mant_cutt_R0 [1:1] = fangyuan10_R [36:36] ;
  assign di_mant_cutt_X0 [1:1] = fangyuan10_X [36:36] ;
  assign di_mant_cutt_C0 [1:1] = fangyuan10_C [36:36] ;
  assign di_mant_cutt_R0 [2:2] = fangyuan10_R [35:35] ;
  assign di_mant_cutt_X0 [2:2] = fangyuan10_X [35:35] ;
  assign di_mant_cutt_C0 [2:2] = fangyuan10_C [35:35] ;
  assign di_mant_cutt_R0 [3:3] = fangyuan10_R [34:34] ;
  assign di_mant_cutt_X0 [3:3] = fangyuan10_X [34:34] ;
  assign di_mant_cutt_C0 [3:3] = fangyuan10_C [34:34] ;
  assign di_mant_cutt_R0 [4:4] = fangyuan10_R [33:33] ;
  assign di_mant_cutt_X0 [4:4] = fangyuan10_X [33:33] ;
  assign di_mant_cutt_C0 [4:4] = fangyuan10_C [33:33] ;
  assign di_mant_cutt_R0 [5:5] = fangyuan10_R [32:32] ;
  assign di_mant_cutt_X0 [5:5] = fangyuan10_X [32:32] ;
  assign di_mant_cutt_C0 [5:5] = fangyuan10_C [32:32] ;
  assign di_mant_cutt_R0 [6:6] = fangyuan10_R [31:31] ;
  assign di_mant_cutt_X0 [6:6] = fangyuan10_X [31:31] ;
  assign di_mant_cutt_C0 [6:6] = fangyuan10_C [31:31] ;
  assign di_mant_cutt_R0 [7:7] = fangyuan10_R [30:30] ;
  assign di_mant_cutt_X0 [7:7] = fangyuan10_X [30:30] ;
  assign di_mant_cutt_C0 [7:7] = fangyuan10_C [30:30] ;
  assign di_mant_cutt_R0 [8:8] = fangyuan10_R [29:29] ;
  assign di_mant_cutt_X0 [8:8] = fangyuan10_X [29:29] ;
  assign di_mant_cutt_C0 [8:8] = fangyuan10_C [29:29] ;
  assign di_mant_cutt_R0 [9:9] = fangyuan10_R [28:28] ;
  assign di_mant_cutt_X0 [9:9] = fangyuan10_X [28:28] ;
  assign di_mant_cutt_C0 [9:9] = fangyuan10_C [28:28] ;
  assign di_mant_cutt_R0 [10:10] = fangyuan10_R [27:27] ;
  assign di_mant_cutt_X0 [10:10] = fangyuan10_X [27:27] ;
  assign di_mant_cutt_C0 [10:10] = fangyuan10_C [27:27] ;
  assign di_mant_cutt_R0 [11:11] = fangyuan10_R [26:26] ;
  assign di_mant_cutt_X0 [11:11] = fangyuan10_X [26:26] ;
  assign di_mant_cutt_C0 [11:11] = fangyuan10_C [26:26] ;
  assign di_mant_cutt_R0 [12:12] = fangyuan10_R [25:25] ;
  assign di_mant_cutt_X0 [12:12] = fangyuan10_X [25:25] ;
  assign di_mant_cutt_C0 [12:12] = fangyuan10_C [25:25] ;
  assign di_mant_cutt_R0 [13:13] = fangyuan10_R [24:24] ;
  assign di_mant_cutt_X0 [13:13] = fangyuan10_X [24:24] ;
  assign di_mant_cutt_C0 [13:13] = fangyuan10_C [24:24] ;
  assign di_mant_cutt_R0 [14:14] = fangyuan10_R [23:23] ;
  assign di_mant_cutt_X0 [14:14] = fangyuan10_X [23:23] ;
  assign di_mant_cutt_C0 [14:14] = fangyuan10_C [23:23] ;
  assign di_mant_cutt_R0 [15:15] = fangyuan10_R [22:22] ;
  assign di_mant_cutt_X0 [15:15] = fangyuan10_X [22:22] ;
  assign di_mant_cutt_C0 [15:15] = fangyuan10_C [22:22] ;
  assign di_mant_cutt_R0 [16:16] = fangyuan10_R [21:21] ;
  assign di_mant_cutt_X0 [16:16] = fangyuan10_X [21:21] ;
  assign di_mant_cutt_C0 [16:16] = fangyuan10_C [21:21] ;
  assign di_mant_cutt_R0 [17:17] = fangyuan10_R [20:20] ;
  assign di_mant_cutt_X0 [17:17] = fangyuan10_X [20:20] ;
  assign di_mant_cutt_C0 [17:17] = fangyuan10_C [20:20] ;
  assign di_mant_cutt_R0 [18:18] = fangyuan10_R [19:19] ;
  assign di_mant_cutt_X0 [18:18] = fangyuan10_X [19:19] ;
  assign di_mant_cutt_C0 [18:18] = fangyuan10_C [19:19] ;
  assign di_mant_cutt_R0 [19:19] = fangyuan10_R [18:18] ;
  assign di_mant_cutt_X0 [19:19] = fangyuan10_X [18:18] ;
  assign di_mant_cutt_C0 [19:19] = fangyuan10_C [18:18] ;
  assign di_mant_cutt_R0 [20:20] = fangyuan10_R [17:17] ;
  assign di_mant_cutt_X0 [20:20] = fangyuan10_X [17:17] ;
  assign di_mant_cutt_C0 [20:20] = fangyuan10_C [17:17] ;
  assign di_mant_cutt_R0 [21:21] = fangyuan10_R [16:16] ;
  assign di_mant_cutt_X0 [21:21] = fangyuan10_X [16:16] ;
  assign di_mant_cutt_C0 [21:21] = fangyuan10_C [16:16] ;
  assign di_mant_cutt_R0 [22:22] = fangyuan10_R [15:15] ;
  assign di_mant_cutt_X0 [22:22] = fangyuan10_X [15:15] ;
  assign di_mant_cutt_C0 [22:22] = fangyuan10_C [15:15] ;
  assign di_mant_cutt_R0 [23:23] = fangyuan10_R [14:14] ;
  assign di_mant_cutt_X0 [23:23] = fangyuan10_X [14:14] ;
  assign di_mant_cutt_C0 [23:23] = fangyuan10_C [14:14] ;
  assign di_mant_cutt_R0 [24:24] = fangyuan10_R [13:13] ;
  assign di_mant_cutt_X0 [24:24] = fangyuan10_X [13:13] ;
  assign di_mant_cutt_C0 [24:24] = fangyuan10_C [13:13] ;
  assign di_mant_cutt_R0 [25:25] = fangyuan10_R [12:12] ;
  assign di_mant_cutt_X0 [25:25] = fangyuan10_X [12:12] ;
  assign di_mant_cutt_C0 [25:25] = fangyuan10_C [12:12] ;
  assign di_mant_cutt_R0 [26:26] = fangyuan10_R [11:11] ;
  assign di_mant_cutt_X0 [26:26] = fangyuan10_X [11:11] ;
  assign di_mant_cutt_C0 [26:26] = fangyuan10_C [11:11] ;
  assign di_mant_cutt_R0 [27:27] = fangyuan10_R [10:10] ;
  assign di_mant_cutt_X0 [27:27] = fangyuan10_X [10:10] ;
  assign di_mant_cutt_C0 [27:27] = fangyuan10_C [10:10] ;
  assign di_mant_cutt_R0 [28:28] = fangyuan10_R [9:9] ;
  assign di_mant_cutt_X0 [28:28] = fangyuan10_X [9:9] ;
  assign di_mant_cutt_C0 [28:28] = fangyuan10_C [9:9] ;
  assign di_mant_cutt_R0 [29:29] = fangyuan10_R [8:8] ;
  assign di_mant_cutt_X0 [29:29] = fangyuan10_X [8:8] ;
  assign di_mant_cutt_C0 [29:29] = fangyuan10_C [8:8] ;
  assign di_mant_cutt_R0 [30:30] = fangyuan10_R [7:7] ;
  assign di_mant_cutt_X0 [30:30] = fangyuan10_X [7:7] ;
  assign di_mant_cutt_C0 [30:30] = fangyuan10_C [7:7] ;
  assign di_mant_cutt_R0 [31:31] = fangyuan10_R [6:6] ;
  assign di_mant_cutt_X0 [31:31] = fangyuan10_X [6:6] ;
  assign di_mant_cutt_C0 [31:31] = fangyuan10_C [6:6] ;
  assign di_mant_cutt_R0 [32:32] = fangyuan10_R [5:5] ;
  assign di_mant_cutt_X0 [32:32] = fangyuan10_X [5:5] ;
  assign di_mant_cutt_C0 [32:32] = fangyuan10_C [5:5] ;
  assign di_mant_cutt_R0 [33:33] = fangyuan10_R [4:4] ;
  assign di_mant_cutt_X0 [33:33] = fangyuan10_X [4:4] ;
  assign di_mant_cutt_C0 [33:33] = fangyuan10_C [4:4] ;
  assign di_mant_cutt_R0 [34:34] = fangyuan10_R [3:3] ;
  assign di_mant_cutt_X0 [34:34] = fangyuan10_X [3:3] ;
  assign di_mant_cutt_C0 [34:34] = fangyuan10_C [3:3] ;
  assign di_mant_cutt_R0 [35:35] = fangyuan10_R [2:2] ;
  assign di_mant_cutt_X0 [35:35] = fangyuan10_X [2:2] ;
  assign di_mant_cutt_C0 [35:35] = fangyuan10_C [2:2] ;
  assign di_mant_cutt_R0 [36:36] = fangyuan10_R [1:1] ;
  assign di_mant_cutt_X0 [36:36] = fangyuan10_X [1:1] ;
  assign di_mant_cutt_C0 [36:36] = fangyuan10_C [1:1] ;
  assign di_mant_cutt_R0 [37:37] = fangyuan10_R [0:0] ;
  assign di_mant_cutt_X0 [37:37] = fangyuan10_X [0:0] ;
  assign di_mant_cutt_C0 [37:37] = fangyuan10_C [0:0] ;

  assign di_mant_cut[0] = | fangyuan10;
  logic [37:0] fangyuan10_C0 ;
  logic [37:0] fangyuan10_R0 ;
  logic [37:0] fangyuan10_X0 ;
  assign di_mant_cut_T [0] = | fangyuan10_T ;
  assign fangyuan10_C0 = { 38{ di_mant_cut_C [0] }} ;
  assign fangyuan10_X0 = { 38{ di_mant_cut_X [0] }} ;
  assign fangyuan10_R0 = { 38{ di_mant_cut_R [0] }} & fangyuan10 ;
  assign di_mant_cut_S = 0 ;
  logic [37:0] fangyuan11;
  logic [37:0] fangyuan11_T ;
  logic [37:0] fangyuan11_R ;
  logic [37:0] fangyuan11_C ;
  logic [37:0] fangyuan11_X ;
  assign fangyuan11 = { oi_mant_cutt[0], oi_mant_cutt[1], oi_mant_cutt[2], oi_mant_cutt[3], oi_mant_cutt[4], oi_mant_cutt[5], oi_mant_cutt[6], oi_mant_cutt[7], oi_mant_cutt[8], oi_mant_cutt[9], oi_mant_cutt[10], oi_mant_cutt[11], oi_mant_cutt[12], oi_mant_cutt[13], oi_mant_cutt[14], oi_mant_cutt[15], oi_mant_cutt[16], oi_mant_cutt[17], oi_mant_cutt[18], oi_mant_cutt[19], oi_mant_cutt[20], oi_mant_cutt[21], oi_mant_cutt[22], oi_mant_cutt[23], oi_mant_cutt[24], oi_mant_cutt[25], oi_mant_cutt[26], oi_mant_cutt[27], oi_mant_cutt[28], oi_mant_cutt[29], oi_mant_cutt[30], oi_mant_cutt[31], oi_mant_cutt[32], oi_mant_cutt[33], oi_mant_cutt[34], oi_mant_cutt[35], oi_mant_cutt[36], oi_mant_cutt[37] };
  assign fangyuan11_T = {  oi_mant_cutt_T [0] , oi_mant_cutt_T [1] , oi_mant_cutt_T [2] , oi_mant_cutt_T [3] , oi_mant_cutt_T [4] , oi_mant_cutt_T [5] , oi_mant_cutt_T [6] , oi_mant_cutt_T [7] , oi_mant_cutt_T [8] , oi_mant_cutt_T [9] , oi_mant_cutt_T [10] , oi_mant_cutt_T [11] , oi_mant_cutt_T [12] , oi_mant_cutt_T [13] , oi_mant_cutt_T [14] , oi_mant_cutt_T [15] , oi_mant_cutt_T [16] , oi_mant_cutt_T [17] , oi_mant_cutt_T [18] , oi_mant_cutt_T [19] , oi_mant_cutt_T [20] , oi_mant_cutt_T [21] , oi_mant_cutt_T [22] , oi_mant_cutt_T [23] , oi_mant_cutt_T [24] , oi_mant_cutt_T [25] , oi_mant_cutt_T [26] , oi_mant_cutt_T [27] , oi_mant_cutt_T [28] , oi_mant_cutt_T [29] , oi_mant_cutt_T [30] , oi_mant_cutt_T [31] , oi_mant_cutt_T [32] , oi_mant_cutt_T [33] , oi_mant_cutt_T [34] , oi_mant_cutt_T [35] , oi_mant_cutt_T [36] , oi_mant_cutt_T [37]  };
  logic [13:0] fangyuan11_S ;
  assign fangyuan11_S = 0 ;
  logic [39:0] oi_mant_cutt_R0 ;
  logic [39:0] oi_mant_cutt_X0 ;
  logic [39:0] oi_mant_cutt_C0 ;
  assign oi_mant_cutt_R0 [0:0] = fangyuan11_R [37:37] ;
  assign oi_mant_cutt_X0 [0:0] = fangyuan11_X [37:37] ;
  assign oi_mant_cutt_C0 [0:0] = fangyuan11_C [37:37] ;
  assign oi_mant_cutt_R0 [1:1] = fangyuan11_R [36:36] ;
  assign oi_mant_cutt_X0 [1:1] = fangyuan11_X [36:36] ;
  assign oi_mant_cutt_C0 [1:1] = fangyuan11_C [36:36] ;
  assign oi_mant_cutt_R0 [2:2] = fangyuan11_R [35:35] ;
  assign oi_mant_cutt_X0 [2:2] = fangyuan11_X [35:35] ;
  assign oi_mant_cutt_C0 [2:2] = fangyuan11_C [35:35] ;
  assign oi_mant_cutt_R0 [3:3] = fangyuan11_R [34:34] ;
  assign oi_mant_cutt_X0 [3:3] = fangyuan11_X [34:34] ;
  assign oi_mant_cutt_C0 [3:3] = fangyuan11_C [34:34] ;
  assign oi_mant_cutt_R0 [4:4] = fangyuan11_R [33:33] ;
  assign oi_mant_cutt_X0 [4:4] = fangyuan11_X [33:33] ;
  assign oi_mant_cutt_C0 [4:4] = fangyuan11_C [33:33] ;
  assign oi_mant_cutt_R0 [5:5] = fangyuan11_R [32:32] ;
  assign oi_mant_cutt_X0 [5:5] = fangyuan11_X [32:32] ;
  assign oi_mant_cutt_C0 [5:5] = fangyuan11_C [32:32] ;
  assign oi_mant_cutt_R0 [6:6] = fangyuan11_R [31:31] ;
  assign oi_mant_cutt_X0 [6:6] = fangyuan11_X [31:31] ;
  assign oi_mant_cutt_C0 [6:6] = fangyuan11_C [31:31] ;
  assign oi_mant_cutt_R0 [7:7] = fangyuan11_R [30:30] ;
  assign oi_mant_cutt_X0 [7:7] = fangyuan11_X [30:30] ;
  assign oi_mant_cutt_C0 [7:7] = fangyuan11_C [30:30] ;
  assign oi_mant_cutt_R0 [8:8] = fangyuan11_R [29:29] ;
  assign oi_mant_cutt_X0 [8:8] = fangyuan11_X [29:29] ;
  assign oi_mant_cutt_C0 [8:8] = fangyuan11_C [29:29] ;
  assign oi_mant_cutt_R0 [9:9] = fangyuan11_R [28:28] ;
  assign oi_mant_cutt_X0 [9:9] = fangyuan11_X [28:28] ;
  assign oi_mant_cutt_C0 [9:9] = fangyuan11_C [28:28] ;
  assign oi_mant_cutt_R0 [10:10] = fangyuan11_R [27:27] ;
  assign oi_mant_cutt_X0 [10:10] = fangyuan11_X [27:27] ;
  assign oi_mant_cutt_C0 [10:10] = fangyuan11_C [27:27] ;
  assign oi_mant_cutt_R0 [11:11] = fangyuan11_R [26:26] ;
  assign oi_mant_cutt_X0 [11:11] = fangyuan11_X [26:26] ;
  assign oi_mant_cutt_C0 [11:11] = fangyuan11_C [26:26] ;
  assign oi_mant_cutt_R0 [12:12] = fangyuan11_R [25:25] ;
  assign oi_mant_cutt_X0 [12:12] = fangyuan11_X [25:25] ;
  assign oi_mant_cutt_C0 [12:12] = fangyuan11_C [25:25] ;
  assign oi_mant_cutt_R0 [13:13] = fangyuan11_R [24:24] ;
  assign oi_mant_cutt_X0 [13:13] = fangyuan11_X [24:24] ;
  assign oi_mant_cutt_C0 [13:13] = fangyuan11_C [24:24] ;
  assign oi_mant_cutt_R0 [14:14] = fangyuan11_R [23:23] ;
  assign oi_mant_cutt_X0 [14:14] = fangyuan11_X [23:23] ;
  assign oi_mant_cutt_C0 [14:14] = fangyuan11_C [23:23] ;
  assign oi_mant_cutt_R0 [15:15] = fangyuan11_R [22:22] ;
  assign oi_mant_cutt_X0 [15:15] = fangyuan11_X [22:22] ;
  assign oi_mant_cutt_C0 [15:15] = fangyuan11_C [22:22] ;
  assign oi_mant_cutt_R0 [16:16] = fangyuan11_R [21:21] ;
  assign oi_mant_cutt_X0 [16:16] = fangyuan11_X [21:21] ;
  assign oi_mant_cutt_C0 [16:16] = fangyuan11_C [21:21] ;
  assign oi_mant_cutt_R0 [17:17] = fangyuan11_R [20:20] ;
  assign oi_mant_cutt_X0 [17:17] = fangyuan11_X [20:20] ;
  assign oi_mant_cutt_C0 [17:17] = fangyuan11_C [20:20] ;
  assign oi_mant_cutt_R0 [18:18] = fangyuan11_R [19:19] ;
  assign oi_mant_cutt_X0 [18:18] = fangyuan11_X [19:19] ;
  assign oi_mant_cutt_C0 [18:18] = fangyuan11_C [19:19] ;
  assign oi_mant_cutt_R0 [19:19] = fangyuan11_R [18:18] ;
  assign oi_mant_cutt_X0 [19:19] = fangyuan11_X [18:18] ;
  assign oi_mant_cutt_C0 [19:19] = fangyuan11_C [18:18] ;
  assign oi_mant_cutt_R0 [20:20] = fangyuan11_R [17:17] ;
  assign oi_mant_cutt_X0 [20:20] = fangyuan11_X [17:17] ;
  assign oi_mant_cutt_C0 [20:20] = fangyuan11_C [17:17] ;
  assign oi_mant_cutt_R0 [21:21] = fangyuan11_R [16:16] ;
  assign oi_mant_cutt_X0 [21:21] = fangyuan11_X [16:16] ;
  assign oi_mant_cutt_C0 [21:21] = fangyuan11_C [16:16] ;
  assign oi_mant_cutt_R0 [22:22] = fangyuan11_R [15:15] ;
  assign oi_mant_cutt_X0 [22:22] = fangyuan11_X [15:15] ;
  assign oi_mant_cutt_C0 [22:22] = fangyuan11_C [15:15] ;
  assign oi_mant_cutt_R0 [23:23] = fangyuan11_R [14:14] ;
  assign oi_mant_cutt_X0 [23:23] = fangyuan11_X [14:14] ;
  assign oi_mant_cutt_C0 [23:23] = fangyuan11_C [14:14] ;
  assign oi_mant_cutt_R0 [24:24] = fangyuan11_R [13:13] ;
  assign oi_mant_cutt_X0 [24:24] = fangyuan11_X [13:13] ;
  assign oi_mant_cutt_C0 [24:24] = fangyuan11_C [13:13] ;
  assign oi_mant_cutt_R0 [25:25] = fangyuan11_R [12:12] ;
  assign oi_mant_cutt_X0 [25:25] = fangyuan11_X [12:12] ;
  assign oi_mant_cutt_C0 [25:25] = fangyuan11_C [12:12] ;
  assign oi_mant_cutt_R0 [26:26] = fangyuan11_R [11:11] ;
  assign oi_mant_cutt_X0 [26:26] = fangyuan11_X [11:11] ;
  assign oi_mant_cutt_C0 [26:26] = fangyuan11_C [11:11] ;
  assign oi_mant_cutt_R0 [27:27] = fangyuan11_R [10:10] ;
  assign oi_mant_cutt_X0 [27:27] = fangyuan11_X [10:10] ;
  assign oi_mant_cutt_C0 [27:27] = fangyuan11_C [10:10] ;
  assign oi_mant_cutt_R0 [28:28] = fangyuan11_R [9:9] ;
  assign oi_mant_cutt_X0 [28:28] = fangyuan11_X [9:9] ;
  assign oi_mant_cutt_C0 [28:28] = fangyuan11_C [9:9] ;
  assign oi_mant_cutt_R0 [29:29] = fangyuan11_R [8:8] ;
  assign oi_mant_cutt_X0 [29:29] = fangyuan11_X [8:8] ;
  assign oi_mant_cutt_C0 [29:29] = fangyuan11_C [8:8] ;
  assign oi_mant_cutt_R0 [30:30] = fangyuan11_R [7:7] ;
  assign oi_mant_cutt_X0 [30:30] = fangyuan11_X [7:7] ;
  assign oi_mant_cutt_C0 [30:30] = fangyuan11_C [7:7] ;
  assign oi_mant_cutt_R0 [31:31] = fangyuan11_R [6:6] ;
  assign oi_mant_cutt_X0 [31:31] = fangyuan11_X [6:6] ;
  assign oi_mant_cutt_C0 [31:31] = fangyuan11_C [6:6] ;
  assign oi_mant_cutt_R0 [32:32] = fangyuan11_R [5:5] ;
  assign oi_mant_cutt_X0 [32:32] = fangyuan11_X [5:5] ;
  assign oi_mant_cutt_C0 [32:32] = fangyuan11_C [5:5] ;
  assign oi_mant_cutt_R0 [33:33] = fangyuan11_R [4:4] ;
  assign oi_mant_cutt_X0 [33:33] = fangyuan11_X [4:4] ;
  assign oi_mant_cutt_C0 [33:33] = fangyuan11_C [4:4] ;
  assign oi_mant_cutt_R0 [34:34] = fangyuan11_R [3:3] ;
  assign oi_mant_cutt_X0 [34:34] = fangyuan11_X [3:3] ;
  assign oi_mant_cutt_C0 [34:34] = fangyuan11_C [3:3] ;
  assign oi_mant_cutt_R0 [35:35] = fangyuan11_R [2:2] ;
  assign oi_mant_cutt_X0 [35:35] = fangyuan11_X [2:2] ;
  assign oi_mant_cutt_C0 [35:35] = fangyuan11_C [2:2] ;
  assign oi_mant_cutt_R0 [36:36] = fangyuan11_R [1:1] ;
  assign oi_mant_cutt_X0 [36:36] = fangyuan11_X [1:1] ;
  assign oi_mant_cutt_C0 [36:36] = fangyuan11_C [1:1] ;
  assign oi_mant_cutt_R0 [37:37] = fangyuan11_R [0:0] ;
  assign oi_mant_cutt_X0 [37:37] = fangyuan11_X [0:0] ;
  assign oi_mant_cutt_C0 [37:37] = fangyuan11_C [0:0] ;

  assign oi_mant_cut[0] = | fangyuan11;
  logic [37:0] fangyuan11_C0 ;
  logic [37:0] fangyuan11_R0 ;
  logic [37:0] fangyuan11_X0 ;
  assign oi_mant_cut_T [0] = | fangyuan11_T ;
  assign fangyuan11_C0 = { 38{ oi_mant_cut_C [0] }} ;
  assign fangyuan11_X0 = { 38{ oi_mant_cut_X [0] }} ;
  assign fangyuan11_R0 = { 38{ oi_mant_cut_R [0] }} & fangyuan11 ;
  assign oi_mant_cut_S = 0 ;
  logic [5:0] fangyuan12;
  logic [5:0] fangyuan12_T ;
  logic [5:0] fangyuan12_R ;
  logic [5:0] fangyuan12_C ;
  logic [5:0] fangyuan12_X ;
  assign fangyuan12 = { msum_lead_num[0], msum_lead_num[1], msum_lead_num[2], msum_lead_num[3], msum_lead_num[4], msum_lead_num[5] };
  assign fangyuan12_T = {  msum_lead_num_T [0] , msum_lead_num_T [1] , msum_lead_num_T [2] , msum_lead_num_T [3] , msum_lead_num_T [4] , msum_lead_num_T [5]  };
  logic [13:0] fangyuan12_S ;
  assign fangyuan12_S = 0 ;
  logic [5:0] msum_lead_num_R0 ;
  logic [5:0] msum_lead_num_X0 ;
  logic [5:0] msum_lead_num_C0 ;
  assign msum_lead_num_R0 [0:0] = fangyuan12_R [5:5] ;
  assign msum_lead_num_X0 [0:0] = fangyuan12_X [5:5] ;
  assign msum_lead_num_C0 [0:0] = fangyuan12_C [5:5] ;
  assign msum_lead_num_R0 [1:1] = fangyuan12_R [4:4] ;
  assign msum_lead_num_X0 [1:1] = fangyuan12_X [4:4] ;
  assign msum_lead_num_C0 [1:1] = fangyuan12_C [4:4] ;
  assign msum_lead_num_R0 [2:2] = fangyuan12_R [3:3] ;
  assign msum_lead_num_X0 [2:2] = fangyuan12_X [3:3] ;
  assign msum_lead_num_C0 [2:2] = fangyuan12_C [3:3] ;
  assign msum_lead_num_R0 [3:3] = fangyuan12_R [2:2] ;
  assign msum_lead_num_X0 [3:3] = fangyuan12_X [2:2] ;
  assign msum_lead_num_C0 [3:3] = fangyuan12_C [2:2] ;
  assign msum_lead_num_R0 [4:4] = fangyuan12_R [1:1] ;
  assign msum_lead_num_X0 [4:4] = fangyuan12_X [1:1] ;
  assign msum_lead_num_C0 [4:4] = fangyuan12_C [1:1] ;
  assign msum_lead_num_R0 [5:5] = fangyuan12_R [0:0] ;
  assign msum_lead_num_X0 [5:5] = fangyuan12_X [0:0] ;
  assign msum_lead_num_C0 [5:5] = fangyuan12_C [0:0] ;

  assign _044_ = | fangyuan12;
  logic [5:0] fangyuan12_C0 ;
  logic [5:0] fangyuan12_R0 ;
  logic [5:0] fangyuan12_X0 ;
  assign _044__T = | fangyuan12_T ;
  assign fangyuan12_C0 = { 6{ _044__C }} ;
  assign fangyuan12_X0 = { 6{ _044__X }} ;
  assign fangyuan12_R0 = { 6{ _044__R }} & fangyuan12 ;
  assign _044__S = 0 ;
  logic [2:0] fangyuan13;
  logic [2:0] fangyuan13_T ;
  logic [2:0] fangyuan13_R ;
  logic [2:0] fangyuan13_C ;
  logic [2:0] fangyuan13_X ;
  assign fangyuan13 = { mant_sum_scmp[0], mant_sum_scmp[1], mant_sum_scmp[2] };
  assign fangyuan13_T = {  mant_sum_scmp_T [0] , mant_sum_scmp_T [1] , mant_sum_scmp_T [2]  };
  logic [13:0] fangyuan13_S ;
  assign fangyuan13_S = 0 ;
  logic [43:0] mant_sum_scmp_R0 ;
  logic [43:0] mant_sum_scmp_X0 ;
  logic [43:0] mant_sum_scmp_C0 ;
  assign mant_sum_scmp_R0 [0:0] = fangyuan13_R [2:2] ;
  assign mant_sum_scmp_X0 [0:0] = fangyuan13_X [2:2] ;
  assign mant_sum_scmp_C0 [0:0] = fangyuan13_C [2:2] ;
  assign mant_sum_scmp_R0 [1:1] = fangyuan13_R [1:1] ;
  assign mant_sum_scmp_X0 [1:1] = fangyuan13_X [1:1] ;
  assign mant_sum_scmp_C0 [1:1] = fangyuan13_C [1:1] ;
  assign mant_sum_scmp_R0 [2:2] = fangyuan13_R [0:0] ;
  assign mant_sum_scmp_X0 [2:2] = fangyuan13_X [0:0] ;
  assign mant_sum_scmp_C0 [2:2] = fangyuan13_C [0:0] ;

  assign _045_ = | fangyuan13;
  logic [2:0] fangyuan13_C0 ;
  logic [2:0] fangyuan13_R0 ;
  logic [2:0] fangyuan13_X0 ;
  assign _045__T = | fangyuan13_T ;
  assign fangyuan13_C0 = { 3{ _045__C }} ;
  assign fangyuan13_X0 = { 3{ _045__X }} ;
  assign fangyuan13_R0 = { 3{ _045__R }} & fangyuan13 ;
  assign _045__S = 0 ;
  logic [39:0] fangyuan14;
  logic [39:0] fangyuan14_T ;
  logic [39:0] fangyuan14_R ;
  logic [39:0] fangyuan14_C ;
  logic [39:0] fangyuan14_X ;
  assign fangyuan14 = { partial_mant_nmlz[0], partial_mant_nmlz[1], partial_mant_nmlz[2], partial_mant_nmlz[3], partial_mant_nmlz[4], partial_mant_nmlz[5], partial_mant_nmlz[6], partial_mant_nmlz[7], partial_mant_nmlz[8], partial_mant_nmlz[9], partial_mant_nmlz[10], partial_mant_nmlz[11], partial_mant_nmlz[12], partial_mant_nmlz[13], partial_mant_nmlz[14], partial_mant_nmlz[15], partial_mant_nmlz[16], partial_mant_nmlz[17], partial_mant_nmlz[18], partial_mant_nmlz[19], partial_mant_nmlz[20], partial_mant_nmlz[21], partial_mant_nmlz[22], partial_mant_nmlz[23], partial_mant_nmlz[24], partial_mant_nmlz[25], partial_mant_nmlz[26], partial_mant_nmlz[27], partial_mant_nmlz[28], partial_mant_nmlz[29], partial_mant_nmlz[30], partial_mant_nmlz[31], partial_mant_nmlz[32], partial_mant_nmlz[33], partial_mant_nmlz[34], partial_mant_nmlz[35], partial_mant_nmlz[36], partial_mant_nmlz[37], partial_mant_nmlz[38], partial_mant_nmlz[39] };
  assign fangyuan14_T = {  partial_mant_nmlz_T [0] , partial_mant_nmlz_T [1] , partial_mant_nmlz_T [2] , partial_mant_nmlz_T [3] , partial_mant_nmlz_T [4] , partial_mant_nmlz_T [5] , partial_mant_nmlz_T [6] , partial_mant_nmlz_T [7] , partial_mant_nmlz_T [8] , partial_mant_nmlz_T [9] , partial_mant_nmlz_T [10] , partial_mant_nmlz_T [11] , partial_mant_nmlz_T [12] , partial_mant_nmlz_T [13] , partial_mant_nmlz_T [14] , partial_mant_nmlz_T [15] , partial_mant_nmlz_T [16] , partial_mant_nmlz_T [17] , partial_mant_nmlz_T [18] , partial_mant_nmlz_T [19] , partial_mant_nmlz_T [20] , partial_mant_nmlz_T [21] , partial_mant_nmlz_T [22] , partial_mant_nmlz_T [23] , partial_mant_nmlz_T [24] , partial_mant_nmlz_T [25] , partial_mant_nmlz_T [26] , partial_mant_nmlz_T [27] , partial_mant_nmlz_T [28] , partial_mant_nmlz_T [29] , partial_mant_nmlz_T [30] , partial_mant_nmlz_T [31] , partial_mant_nmlz_T [32] , partial_mant_nmlz_T [33] , partial_mant_nmlz_T [34] , partial_mant_nmlz_T [35] , partial_mant_nmlz_T [36] , partial_mant_nmlz_T [37] , partial_mant_nmlz_T [38] , partial_mant_nmlz_T [39]  };
  logic [13:0] fangyuan14_S ;
  assign fangyuan14_S = 0 ;
  logic [39:0] partial_mant_nmlz_R1 ;
  logic [39:0] partial_mant_nmlz_X1 ;
  logic [39:0] partial_mant_nmlz_C1 ;
  assign partial_mant_nmlz_R1 [0:0] = fangyuan14_R [39:39] ;
  assign partial_mant_nmlz_X1 [0:0] = fangyuan14_X [39:39] ;
  assign partial_mant_nmlz_C1 [0:0] = fangyuan14_C [39:39] ;
  assign partial_mant_nmlz_R1 [1:1] = fangyuan14_R [38:38] ;
  assign partial_mant_nmlz_X1 [1:1] = fangyuan14_X [38:38] ;
  assign partial_mant_nmlz_C1 [1:1] = fangyuan14_C [38:38] ;
  assign partial_mant_nmlz_R1 [2:2] = fangyuan14_R [37:37] ;
  assign partial_mant_nmlz_X1 [2:2] = fangyuan14_X [37:37] ;
  assign partial_mant_nmlz_C1 [2:2] = fangyuan14_C [37:37] ;
  assign partial_mant_nmlz_R1 [3:3] = fangyuan14_R [36:36] ;
  assign partial_mant_nmlz_X1 [3:3] = fangyuan14_X [36:36] ;
  assign partial_mant_nmlz_C1 [3:3] = fangyuan14_C [36:36] ;
  assign partial_mant_nmlz_R1 [4:4] = fangyuan14_R [35:35] ;
  assign partial_mant_nmlz_X1 [4:4] = fangyuan14_X [35:35] ;
  assign partial_mant_nmlz_C1 [4:4] = fangyuan14_C [35:35] ;
  assign partial_mant_nmlz_R1 [5:5] = fangyuan14_R [34:34] ;
  assign partial_mant_nmlz_X1 [5:5] = fangyuan14_X [34:34] ;
  assign partial_mant_nmlz_C1 [5:5] = fangyuan14_C [34:34] ;
  assign partial_mant_nmlz_R1 [6:6] = fangyuan14_R [33:33] ;
  assign partial_mant_nmlz_X1 [6:6] = fangyuan14_X [33:33] ;
  assign partial_mant_nmlz_C1 [6:6] = fangyuan14_C [33:33] ;
  assign partial_mant_nmlz_R1 [7:7] = fangyuan14_R [32:32] ;
  assign partial_mant_nmlz_X1 [7:7] = fangyuan14_X [32:32] ;
  assign partial_mant_nmlz_C1 [7:7] = fangyuan14_C [32:32] ;
  assign partial_mant_nmlz_R1 [8:8] = fangyuan14_R [31:31] ;
  assign partial_mant_nmlz_X1 [8:8] = fangyuan14_X [31:31] ;
  assign partial_mant_nmlz_C1 [8:8] = fangyuan14_C [31:31] ;
  assign partial_mant_nmlz_R1 [9:9] = fangyuan14_R [30:30] ;
  assign partial_mant_nmlz_X1 [9:9] = fangyuan14_X [30:30] ;
  assign partial_mant_nmlz_C1 [9:9] = fangyuan14_C [30:30] ;
  assign partial_mant_nmlz_R1 [10:10] = fangyuan14_R [29:29] ;
  assign partial_mant_nmlz_X1 [10:10] = fangyuan14_X [29:29] ;
  assign partial_mant_nmlz_C1 [10:10] = fangyuan14_C [29:29] ;
  assign partial_mant_nmlz_R1 [11:11] = fangyuan14_R [28:28] ;
  assign partial_mant_nmlz_X1 [11:11] = fangyuan14_X [28:28] ;
  assign partial_mant_nmlz_C1 [11:11] = fangyuan14_C [28:28] ;
  assign partial_mant_nmlz_R1 [12:12] = fangyuan14_R [27:27] ;
  assign partial_mant_nmlz_X1 [12:12] = fangyuan14_X [27:27] ;
  assign partial_mant_nmlz_C1 [12:12] = fangyuan14_C [27:27] ;
  assign partial_mant_nmlz_R1 [13:13] = fangyuan14_R [26:26] ;
  assign partial_mant_nmlz_X1 [13:13] = fangyuan14_X [26:26] ;
  assign partial_mant_nmlz_C1 [13:13] = fangyuan14_C [26:26] ;
  assign partial_mant_nmlz_R1 [14:14] = fangyuan14_R [25:25] ;
  assign partial_mant_nmlz_X1 [14:14] = fangyuan14_X [25:25] ;
  assign partial_mant_nmlz_C1 [14:14] = fangyuan14_C [25:25] ;
  assign partial_mant_nmlz_R1 [15:15] = fangyuan14_R [24:24] ;
  assign partial_mant_nmlz_X1 [15:15] = fangyuan14_X [24:24] ;
  assign partial_mant_nmlz_C1 [15:15] = fangyuan14_C [24:24] ;
  assign partial_mant_nmlz_R1 [16:16] = fangyuan14_R [23:23] ;
  assign partial_mant_nmlz_X1 [16:16] = fangyuan14_X [23:23] ;
  assign partial_mant_nmlz_C1 [16:16] = fangyuan14_C [23:23] ;
  assign partial_mant_nmlz_R1 [17:17] = fangyuan14_R [22:22] ;
  assign partial_mant_nmlz_X1 [17:17] = fangyuan14_X [22:22] ;
  assign partial_mant_nmlz_C1 [17:17] = fangyuan14_C [22:22] ;
  assign partial_mant_nmlz_R1 [18:18] = fangyuan14_R [21:21] ;
  assign partial_mant_nmlz_X1 [18:18] = fangyuan14_X [21:21] ;
  assign partial_mant_nmlz_C1 [18:18] = fangyuan14_C [21:21] ;
  assign partial_mant_nmlz_R1 [19:19] = fangyuan14_R [20:20] ;
  assign partial_mant_nmlz_X1 [19:19] = fangyuan14_X [20:20] ;
  assign partial_mant_nmlz_C1 [19:19] = fangyuan14_C [20:20] ;
  assign partial_mant_nmlz_R1 [20:20] = fangyuan14_R [19:19] ;
  assign partial_mant_nmlz_X1 [20:20] = fangyuan14_X [19:19] ;
  assign partial_mant_nmlz_C1 [20:20] = fangyuan14_C [19:19] ;
  assign partial_mant_nmlz_R1 [21:21] = fangyuan14_R [18:18] ;
  assign partial_mant_nmlz_X1 [21:21] = fangyuan14_X [18:18] ;
  assign partial_mant_nmlz_C1 [21:21] = fangyuan14_C [18:18] ;
  assign partial_mant_nmlz_R1 [22:22] = fangyuan14_R [17:17] ;
  assign partial_mant_nmlz_X1 [22:22] = fangyuan14_X [17:17] ;
  assign partial_mant_nmlz_C1 [22:22] = fangyuan14_C [17:17] ;
  assign partial_mant_nmlz_R1 [23:23] = fangyuan14_R [16:16] ;
  assign partial_mant_nmlz_X1 [23:23] = fangyuan14_X [16:16] ;
  assign partial_mant_nmlz_C1 [23:23] = fangyuan14_C [16:16] ;
  assign partial_mant_nmlz_R1 [24:24] = fangyuan14_R [15:15] ;
  assign partial_mant_nmlz_X1 [24:24] = fangyuan14_X [15:15] ;
  assign partial_mant_nmlz_C1 [24:24] = fangyuan14_C [15:15] ;
  assign partial_mant_nmlz_R1 [25:25] = fangyuan14_R [14:14] ;
  assign partial_mant_nmlz_X1 [25:25] = fangyuan14_X [14:14] ;
  assign partial_mant_nmlz_C1 [25:25] = fangyuan14_C [14:14] ;
  assign partial_mant_nmlz_R1 [26:26] = fangyuan14_R [13:13] ;
  assign partial_mant_nmlz_X1 [26:26] = fangyuan14_X [13:13] ;
  assign partial_mant_nmlz_C1 [26:26] = fangyuan14_C [13:13] ;
  assign partial_mant_nmlz_R1 [27:27] = fangyuan14_R [12:12] ;
  assign partial_mant_nmlz_X1 [27:27] = fangyuan14_X [12:12] ;
  assign partial_mant_nmlz_C1 [27:27] = fangyuan14_C [12:12] ;
  assign partial_mant_nmlz_R1 [28:28] = fangyuan14_R [11:11] ;
  assign partial_mant_nmlz_X1 [28:28] = fangyuan14_X [11:11] ;
  assign partial_mant_nmlz_C1 [28:28] = fangyuan14_C [11:11] ;
  assign partial_mant_nmlz_R1 [29:29] = fangyuan14_R [10:10] ;
  assign partial_mant_nmlz_X1 [29:29] = fangyuan14_X [10:10] ;
  assign partial_mant_nmlz_C1 [29:29] = fangyuan14_C [10:10] ;
  assign partial_mant_nmlz_R1 [30:30] = fangyuan14_R [9:9] ;
  assign partial_mant_nmlz_X1 [30:30] = fangyuan14_X [9:9] ;
  assign partial_mant_nmlz_C1 [30:30] = fangyuan14_C [9:9] ;
  assign partial_mant_nmlz_R1 [31:31] = fangyuan14_R [8:8] ;
  assign partial_mant_nmlz_X1 [31:31] = fangyuan14_X [8:8] ;
  assign partial_mant_nmlz_C1 [31:31] = fangyuan14_C [8:8] ;
  assign partial_mant_nmlz_R1 [32:32] = fangyuan14_R [7:7] ;
  assign partial_mant_nmlz_X1 [32:32] = fangyuan14_X [7:7] ;
  assign partial_mant_nmlz_C1 [32:32] = fangyuan14_C [7:7] ;
  assign partial_mant_nmlz_R1 [33:33] = fangyuan14_R [6:6] ;
  assign partial_mant_nmlz_X1 [33:33] = fangyuan14_X [6:6] ;
  assign partial_mant_nmlz_C1 [33:33] = fangyuan14_C [6:6] ;
  assign partial_mant_nmlz_R1 [34:34] = fangyuan14_R [5:5] ;
  assign partial_mant_nmlz_X1 [34:34] = fangyuan14_X [5:5] ;
  assign partial_mant_nmlz_C1 [34:34] = fangyuan14_C [5:5] ;
  assign partial_mant_nmlz_R1 [35:35] = fangyuan14_R [4:4] ;
  assign partial_mant_nmlz_X1 [35:35] = fangyuan14_X [4:4] ;
  assign partial_mant_nmlz_C1 [35:35] = fangyuan14_C [4:4] ;
  assign partial_mant_nmlz_R1 [36:36] = fangyuan14_R [3:3] ;
  assign partial_mant_nmlz_X1 [36:36] = fangyuan14_X [3:3] ;
  assign partial_mant_nmlz_C1 [36:36] = fangyuan14_C [3:3] ;
  assign partial_mant_nmlz_R1 [37:37] = fangyuan14_R [2:2] ;
  assign partial_mant_nmlz_X1 [37:37] = fangyuan14_X [2:2] ;
  assign partial_mant_nmlz_C1 [37:37] = fangyuan14_C [2:2] ;
  assign partial_mant_nmlz_R1 [38:38] = fangyuan14_R [1:1] ;
  assign partial_mant_nmlz_X1 [38:38] = fangyuan14_X [1:1] ;
  assign partial_mant_nmlz_C1 [38:38] = fangyuan14_C [1:1] ;
  assign partial_mant_nmlz_R1 [39:39] = fangyuan14_R [0:0] ;
  assign partial_mant_nmlz_X1 [39:39] = fangyuan14_X [0:0] ;
  assign partial_mant_nmlz_C1 [39:39] = fangyuan14_C [0:0] ;

  assign _046_ = | fangyuan14;
  logic [39:0] fangyuan14_C0 ;
  logic [39:0] fangyuan14_R0 ;
  logic [39:0] fangyuan14_X0 ;
  assign _046__T = | fangyuan14_T ;
  assign fangyuan14_C0 = { 40{ _046__C }} ;
  assign fangyuan14_X0 = { 40{ _046__X }} ;
  assign fangyuan14_R0 = { 40{ _046__R }} & fangyuan14 ;
  assign _046__S = 0 ;
  logic [38:0] fangyuan15;
  logic [38:0] fangyuan15_T ;
  logic [38:0] fangyuan15_R ;
  logic [38:0] fangyuan15_C ;
  logic [38:0] fangyuan15_X ;
  assign fangyuan15 = { partial_result[0], partial_result[1], partial_result[2], partial_result[3], partial_result[4], partial_result[5], partial_result[6], partial_result[7], partial_result[8], partial_result[9], partial_result[10], partial_result[11], partial_result[12], partial_result[13], partial_result[14], partial_result[15], partial_result[16], partial_result[17], partial_result[18], partial_result[19], partial_result[20], partial_result[21], partial_result[22], partial_result[23], partial_result[24], partial_result[25], partial_result[26], partial_result[27], partial_result[28], partial_result[29], partial_result[30], partial_result[31], partial_result[32], partial_result[33], partial_result[34], partial_result[35], partial_result[36], partial_result[37], partial_result[38] };
  assign fangyuan15_T = {  partial_result_T [0] , partial_result_T [1] , partial_result_T [2] , partial_result_T [3] , partial_result_T [4] , partial_result_T [5] , partial_result_T [6] , partial_result_T [7] , partial_result_T [8] , partial_result_T [9] , partial_result_T [10] , partial_result_T [11] , partial_result_T [12] , partial_result_T [13] , partial_result_T [14] , partial_result_T [15] , partial_result_T [16] , partial_result_T [17] , partial_result_T [18] , partial_result_T [19] , partial_result_T [20] , partial_result_T [21] , partial_result_T [22] , partial_result_T [23] , partial_result_T [24] , partial_result_T [25] , partial_result_T [26] , partial_result_T [27] , partial_result_T [28] , partial_result_T [29] , partial_result_T [30] , partial_result_T [31] , partial_result_T [32] , partial_result_T [33] , partial_result_T [34] , partial_result_T [35] , partial_result_T [36] , partial_result_T [37] , partial_result_T [38]  };
  logic [13:0] fangyuan15_S ;
  assign fangyuan15_S = 0 ;
  assign partial_result_R1 [0:0] = fangyuan15_R [38:38] ;
  assign partial_result_X1 [0:0] = fangyuan15_X [38:38] ;
  assign partial_result_C1 [0:0] = fangyuan15_C [38:38] ;
  assign partial_result_R1 [1:1] = fangyuan15_R [37:37] ;
  assign partial_result_X1 [1:1] = fangyuan15_X [37:37] ;
  assign partial_result_C1 [1:1] = fangyuan15_C [37:37] ;
  assign partial_result_R1 [2:2] = fangyuan15_R [36:36] ;
  assign partial_result_X1 [2:2] = fangyuan15_X [36:36] ;
  assign partial_result_C1 [2:2] = fangyuan15_C [36:36] ;
  assign partial_result_R1 [3:3] = fangyuan15_R [35:35] ;
  assign partial_result_X1 [3:3] = fangyuan15_X [35:35] ;
  assign partial_result_C1 [3:3] = fangyuan15_C [35:35] ;
  assign partial_result_R1 [4:4] = fangyuan15_R [34:34] ;
  assign partial_result_X1 [4:4] = fangyuan15_X [34:34] ;
  assign partial_result_C1 [4:4] = fangyuan15_C [34:34] ;
  assign partial_result_R1 [5:5] = fangyuan15_R [33:33] ;
  assign partial_result_X1 [5:5] = fangyuan15_X [33:33] ;
  assign partial_result_C1 [5:5] = fangyuan15_C [33:33] ;
  assign partial_result_R1 [6:6] = fangyuan15_R [32:32] ;
  assign partial_result_X1 [6:6] = fangyuan15_X [32:32] ;
  assign partial_result_C1 [6:6] = fangyuan15_C [32:32] ;
  assign partial_result_R1 [7:7] = fangyuan15_R [31:31] ;
  assign partial_result_X1 [7:7] = fangyuan15_X [31:31] ;
  assign partial_result_C1 [7:7] = fangyuan15_C [31:31] ;
  assign partial_result_R1 [8:8] = fangyuan15_R [30:30] ;
  assign partial_result_X1 [8:8] = fangyuan15_X [30:30] ;
  assign partial_result_C1 [8:8] = fangyuan15_C [30:30] ;
  assign partial_result_R1 [9:9] = fangyuan15_R [29:29] ;
  assign partial_result_X1 [9:9] = fangyuan15_X [29:29] ;
  assign partial_result_C1 [9:9] = fangyuan15_C [29:29] ;
  assign partial_result_R1 [10:10] = fangyuan15_R [28:28] ;
  assign partial_result_X1 [10:10] = fangyuan15_X [28:28] ;
  assign partial_result_C1 [10:10] = fangyuan15_C [28:28] ;
  assign partial_result_R1 [11:11] = fangyuan15_R [27:27] ;
  assign partial_result_X1 [11:11] = fangyuan15_X [27:27] ;
  assign partial_result_C1 [11:11] = fangyuan15_C [27:27] ;
  assign partial_result_R1 [12:12] = fangyuan15_R [26:26] ;
  assign partial_result_X1 [12:12] = fangyuan15_X [26:26] ;
  assign partial_result_C1 [12:12] = fangyuan15_C [26:26] ;
  assign partial_result_R1 [13:13] = fangyuan15_R [25:25] ;
  assign partial_result_X1 [13:13] = fangyuan15_X [25:25] ;
  assign partial_result_C1 [13:13] = fangyuan15_C [25:25] ;
  assign partial_result_R1 [14:14] = fangyuan15_R [24:24] ;
  assign partial_result_X1 [14:14] = fangyuan15_X [24:24] ;
  assign partial_result_C1 [14:14] = fangyuan15_C [24:24] ;
  assign partial_result_R1 [15:15] = fangyuan15_R [23:23] ;
  assign partial_result_X1 [15:15] = fangyuan15_X [23:23] ;
  assign partial_result_C1 [15:15] = fangyuan15_C [23:23] ;
  assign partial_result_R1 [16:16] = fangyuan15_R [22:22] ;
  assign partial_result_X1 [16:16] = fangyuan15_X [22:22] ;
  assign partial_result_C1 [16:16] = fangyuan15_C [22:22] ;
  assign partial_result_R1 [17:17] = fangyuan15_R [21:21] ;
  assign partial_result_X1 [17:17] = fangyuan15_X [21:21] ;
  assign partial_result_C1 [17:17] = fangyuan15_C [21:21] ;
  assign partial_result_R1 [18:18] = fangyuan15_R [20:20] ;
  assign partial_result_X1 [18:18] = fangyuan15_X [20:20] ;
  assign partial_result_C1 [18:18] = fangyuan15_C [20:20] ;
  assign partial_result_R1 [19:19] = fangyuan15_R [19:19] ;
  assign partial_result_X1 [19:19] = fangyuan15_X [19:19] ;
  assign partial_result_C1 [19:19] = fangyuan15_C [19:19] ;
  assign partial_result_R1 [20:20] = fangyuan15_R [18:18] ;
  assign partial_result_X1 [20:20] = fangyuan15_X [18:18] ;
  assign partial_result_C1 [20:20] = fangyuan15_C [18:18] ;
  assign partial_result_R1 [21:21] = fangyuan15_R [17:17] ;
  assign partial_result_X1 [21:21] = fangyuan15_X [17:17] ;
  assign partial_result_C1 [21:21] = fangyuan15_C [17:17] ;
  assign partial_result_R1 [22:22] = fangyuan15_R [16:16] ;
  assign partial_result_X1 [22:22] = fangyuan15_X [16:16] ;
  assign partial_result_C1 [22:22] = fangyuan15_C [16:16] ;
  assign partial_result_R1 [23:23] = fangyuan15_R [15:15] ;
  assign partial_result_X1 [23:23] = fangyuan15_X [15:15] ;
  assign partial_result_C1 [23:23] = fangyuan15_C [15:15] ;
  assign partial_result_R1 [24:24] = fangyuan15_R [14:14] ;
  assign partial_result_X1 [24:24] = fangyuan15_X [14:14] ;
  assign partial_result_C1 [24:24] = fangyuan15_C [14:14] ;
  assign partial_result_R1 [25:25] = fangyuan15_R [13:13] ;
  assign partial_result_X1 [25:25] = fangyuan15_X [13:13] ;
  assign partial_result_C1 [25:25] = fangyuan15_C [13:13] ;
  assign partial_result_R1 [26:26] = fangyuan15_R [12:12] ;
  assign partial_result_X1 [26:26] = fangyuan15_X [12:12] ;
  assign partial_result_C1 [26:26] = fangyuan15_C [12:12] ;
  assign partial_result_R1 [27:27] = fangyuan15_R [11:11] ;
  assign partial_result_X1 [27:27] = fangyuan15_X [11:11] ;
  assign partial_result_C1 [27:27] = fangyuan15_C [11:11] ;
  assign partial_result_R1 [28:28] = fangyuan15_R [10:10] ;
  assign partial_result_X1 [28:28] = fangyuan15_X [10:10] ;
  assign partial_result_C1 [28:28] = fangyuan15_C [10:10] ;
  assign partial_result_R1 [29:29] = fangyuan15_R [9:9] ;
  assign partial_result_X1 [29:29] = fangyuan15_X [9:9] ;
  assign partial_result_C1 [29:29] = fangyuan15_C [9:9] ;
  assign partial_result_R1 [30:30] = fangyuan15_R [8:8] ;
  assign partial_result_X1 [30:30] = fangyuan15_X [8:8] ;
  assign partial_result_C1 [30:30] = fangyuan15_C [8:8] ;
  assign partial_result_R1 [31:31] = fangyuan15_R [7:7] ;
  assign partial_result_X1 [31:31] = fangyuan15_X [7:7] ;
  assign partial_result_C1 [31:31] = fangyuan15_C [7:7] ;
  assign partial_result_R1 [32:32] = fangyuan15_R [6:6] ;
  assign partial_result_X1 [32:32] = fangyuan15_X [6:6] ;
  assign partial_result_C1 [32:32] = fangyuan15_C [6:6] ;
  assign partial_result_R1 [33:33] = fangyuan15_R [5:5] ;
  assign partial_result_X1 [33:33] = fangyuan15_X [5:5] ;
  assign partial_result_C1 [33:33] = fangyuan15_C [5:5] ;
  assign partial_result_R1 [34:34] = fangyuan15_R [4:4] ;
  assign partial_result_X1 [34:34] = fangyuan15_X [4:4] ;
  assign partial_result_C1 [34:34] = fangyuan15_C [4:4] ;
  assign partial_result_R1 [35:35] = fangyuan15_R [3:3] ;
  assign partial_result_X1 [35:35] = fangyuan15_X [3:3] ;
  assign partial_result_C1 [35:35] = fangyuan15_C [3:3] ;
  assign partial_result_R1 [36:36] = fangyuan15_R [2:2] ;
  assign partial_result_X1 [36:36] = fangyuan15_X [2:2] ;
  assign partial_result_C1 [36:36] = fangyuan15_C [2:2] ;
  assign partial_result_R1 [37:37] = fangyuan15_R [1:1] ;
  assign partial_result_X1 [37:37] = fangyuan15_X [1:1] ;
  assign partial_result_C1 [37:37] = fangyuan15_C [1:1] ;
  assign partial_result_R1 [38:38] = fangyuan15_R [0:0] ;
  assign partial_result_X1 [38:38] = fangyuan15_X [0:0] ;
  assign partial_result_C1 [38:38] = fangyuan15_C [0:0] ;

  assign _047_ = | fangyuan15;
  logic [38:0] fangyuan15_C0 ;
  logic [38:0] fangyuan15_R0 ;
  logic [38:0] fangyuan15_X0 ;
  assign _047__T = | fangyuan15_T ;
  assign fangyuan15_C0 = { 39{ _047__C }} ;
  assign fangyuan15_X0 = { 39{ _047__X }} ;
  assign fangyuan15_R0 = { 39{ _047__R }} & fangyuan15 ;
  assign _047__S = 0 ;
  logic [39:0] fangyuan16;
  logic [39:0] fangyuan16_T ;
  logic [39:0] fangyuan16_R ;
  logic [39:0] fangyuan16_C ;
  logic [39:0] fangyuan16_X ;
  assign fangyuan16 = { partial_result[0], partial_result[1], partial_result[2], partial_result[3], partial_result[4], partial_result[5], partial_result[6], partial_result[7], partial_result[8], partial_result[9], partial_result[10], partial_result[11], partial_result[12], partial_result[13], partial_result[14], partial_result[15], partial_result[16], partial_result[17], partial_result[18], partial_result[19], partial_result[20], partial_result[21], partial_result[22], partial_result[23], partial_result[24], partial_result[25], partial_result[26], partial_result[27], partial_result[28], partial_result[29], partial_result[30], partial_result[31], partial_result[32], partial_result[33], partial_result[34], partial_result[35], partial_result[36], partial_result[37], partial_result[38], partial_result[39] };
  assign fangyuan16_T = {  partial_result_T [0] , partial_result_T [1] , partial_result_T [2] , partial_result_T [3] , partial_result_T [4] , partial_result_T [5] , partial_result_T [6] , partial_result_T [7] , partial_result_T [8] , partial_result_T [9] , partial_result_T [10] , partial_result_T [11] , partial_result_T [12] , partial_result_T [13] , partial_result_T [14] , partial_result_T [15] , partial_result_T [16] , partial_result_T [17] , partial_result_T [18] , partial_result_T [19] , partial_result_T [20] , partial_result_T [21] , partial_result_T [22] , partial_result_T [23] , partial_result_T [24] , partial_result_T [25] , partial_result_T [26] , partial_result_T [27] , partial_result_T [28] , partial_result_T [29] , partial_result_T [30] , partial_result_T [31] , partial_result_T [32] , partial_result_T [33] , partial_result_T [34] , partial_result_T [35] , partial_result_T [36] , partial_result_T [37] , partial_result_T [38] , partial_result_T [39]  };
  logic [13:0] fangyuan16_S ;
  assign fangyuan16_S = 0 ;
  logic [47:0] partial_result_R2 ;
  logic [47:0] partial_result_X2 ;
  logic [47:0] partial_result_C2 ;
  assign partial_result_R2 [0:0] = fangyuan16_R [39:39] ;
  assign partial_result_X2 [0:0] = fangyuan16_X [39:39] ;
  assign partial_result_C2 [0:0] = fangyuan16_C [39:39] ;
  assign partial_result_R2 [1:1] = fangyuan16_R [38:38] ;
  assign partial_result_X2 [1:1] = fangyuan16_X [38:38] ;
  assign partial_result_C2 [1:1] = fangyuan16_C [38:38] ;
  assign partial_result_R2 [2:2] = fangyuan16_R [37:37] ;
  assign partial_result_X2 [2:2] = fangyuan16_X [37:37] ;
  assign partial_result_C2 [2:2] = fangyuan16_C [37:37] ;
  assign partial_result_R2 [3:3] = fangyuan16_R [36:36] ;
  assign partial_result_X2 [3:3] = fangyuan16_X [36:36] ;
  assign partial_result_C2 [3:3] = fangyuan16_C [36:36] ;
  assign partial_result_R2 [4:4] = fangyuan16_R [35:35] ;
  assign partial_result_X2 [4:4] = fangyuan16_X [35:35] ;
  assign partial_result_C2 [4:4] = fangyuan16_C [35:35] ;
  assign partial_result_R2 [5:5] = fangyuan16_R [34:34] ;
  assign partial_result_X2 [5:5] = fangyuan16_X [34:34] ;
  assign partial_result_C2 [5:5] = fangyuan16_C [34:34] ;
  assign partial_result_R2 [6:6] = fangyuan16_R [33:33] ;
  assign partial_result_X2 [6:6] = fangyuan16_X [33:33] ;
  assign partial_result_C2 [6:6] = fangyuan16_C [33:33] ;
  assign partial_result_R2 [7:7] = fangyuan16_R [32:32] ;
  assign partial_result_X2 [7:7] = fangyuan16_X [32:32] ;
  assign partial_result_C2 [7:7] = fangyuan16_C [32:32] ;
  assign partial_result_R2 [8:8] = fangyuan16_R [31:31] ;
  assign partial_result_X2 [8:8] = fangyuan16_X [31:31] ;
  assign partial_result_C2 [8:8] = fangyuan16_C [31:31] ;
  assign partial_result_R2 [9:9] = fangyuan16_R [30:30] ;
  assign partial_result_X2 [9:9] = fangyuan16_X [30:30] ;
  assign partial_result_C2 [9:9] = fangyuan16_C [30:30] ;
  assign partial_result_R2 [10:10] = fangyuan16_R [29:29] ;
  assign partial_result_X2 [10:10] = fangyuan16_X [29:29] ;
  assign partial_result_C2 [10:10] = fangyuan16_C [29:29] ;
  assign partial_result_R2 [11:11] = fangyuan16_R [28:28] ;
  assign partial_result_X2 [11:11] = fangyuan16_X [28:28] ;
  assign partial_result_C2 [11:11] = fangyuan16_C [28:28] ;
  assign partial_result_R2 [12:12] = fangyuan16_R [27:27] ;
  assign partial_result_X2 [12:12] = fangyuan16_X [27:27] ;
  assign partial_result_C2 [12:12] = fangyuan16_C [27:27] ;
  assign partial_result_R2 [13:13] = fangyuan16_R [26:26] ;
  assign partial_result_X2 [13:13] = fangyuan16_X [26:26] ;
  assign partial_result_C2 [13:13] = fangyuan16_C [26:26] ;
  assign partial_result_R2 [14:14] = fangyuan16_R [25:25] ;
  assign partial_result_X2 [14:14] = fangyuan16_X [25:25] ;
  assign partial_result_C2 [14:14] = fangyuan16_C [25:25] ;
  assign partial_result_R2 [15:15] = fangyuan16_R [24:24] ;
  assign partial_result_X2 [15:15] = fangyuan16_X [24:24] ;
  assign partial_result_C2 [15:15] = fangyuan16_C [24:24] ;
  assign partial_result_R2 [16:16] = fangyuan16_R [23:23] ;
  assign partial_result_X2 [16:16] = fangyuan16_X [23:23] ;
  assign partial_result_C2 [16:16] = fangyuan16_C [23:23] ;
  assign partial_result_R2 [17:17] = fangyuan16_R [22:22] ;
  assign partial_result_X2 [17:17] = fangyuan16_X [22:22] ;
  assign partial_result_C2 [17:17] = fangyuan16_C [22:22] ;
  assign partial_result_R2 [18:18] = fangyuan16_R [21:21] ;
  assign partial_result_X2 [18:18] = fangyuan16_X [21:21] ;
  assign partial_result_C2 [18:18] = fangyuan16_C [21:21] ;
  assign partial_result_R2 [19:19] = fangyuan16_R [20:20] ;
  assign partial_result_X2 [19:19] = fangyuan16_X [20:20] ;
  assign partial_result_C2 [19:19] = fangyuan16_C [20:20] ;
  assign partial_result_R2 [20:20] = fangyuan16_R [19:19] ;
  assign partial_result_X2 [20:20] = fangyuan16_X [19:19] ;
  assign partial_result_C2 [20:20] = fangyuan16_C [19:19] ;
  assign partial_result_R2 [21:21] = fangyuan16_R [18:18] ;
  assign partial_result_X2 [21:21] = fangyuan16_X [18:18] ;
  assign partial_result_C2 [21:21] = fangyuan16_C [18:18] ;
  assign partial_result_R2 [22:22] = fangyuan16_R [17:17] ;
  assign partial_result_X2 [22:22] = fangyuan16_X [17:17] ;
  assign partial_result_C2 [22:22] = fangyuan16_C [17:17] ;
  assign partial_result_R2 [23:23] = fangyuan16_R [16:16] ;
  assign partial_result_X2 [23:23] = fangyuan16_X [16:16] ;
  assign partial_result_C2 [23:23] = fangyuan16_C [16:16] ;
  assign partial_result_R2 [24:24] = fangyuan16_R [15:15] ;
  assign partial_result_X2 [24:24] = fangyuan16_X [15:15] ;
  assign partial_result_C2 [24:24] = fangyuan16_C [15:15] ;
  assign partial_result_R2 [25:25] = fangyuan16_R [14:14] ;
  assign partial_result_X2 [25:25] = fangyuan16_X [14:14] ;
  assign partial_result_C2 [25:25] = fangyuan16_C [14:14] ;
  assign partial_result_R2 [26:26] = fangyuan16_R [13:13] ;
  assign partial_result_X2 [26:26] = fangyuan16_X [13:13] ;
  assign partial_result_C2 [26:26] = fangyuan16_C [13:13] ;
  assign partial_result_R2 [27:27] = fangyuan16_R [12:12] ;
  assign partial_result_X2 [27:27] = fangyuan16_X [12:12] ;
  assign partial_result_C2 [27:27] = fangyuan16_C [12:12] ;
  assign partial_result_R2 [28:28] = fangyuan16_R [11:11] ;
  assign partial_result_X2 [28:28] = fangyuan16_X [11:11] ;
  assign partial_result_C2 [28:28] = fangyuan16_C [11:11] ;
  assign partial_result_R2 [29:29] = fangyuan16_R [10:10] ;
  assign partial_result_X2 [29:29] = fangyuan16_X [10:10] ;
  assign partial_result_C2 [29:29] = fangyuan16_C [10:10] ;
  assign partial_result_R2 [30:30] = fangyuan16_R [9:9] ;
  assign partial_result_X2 [30:30] = fangyuan16_X [9:9] ;
  assign partial_result_C2 [30:30] = fangyuan16_C [9:9] ;
  assign partial_result_R2 [31:31] = fangyuan16_R [8:8] ;
  assign partial_result_X2 [31:31] = fangyuan16_X [8:8] ;
  assign partial_result_C2 [31:31] = fangyuan16_C [8:8] ;
  assign partial_result_R2 [32:32] = fangyuan16_R [7:7] ;
  assign partial_result_X2 [32:32] = fangyuan16_X [7:7] ;
  assign partial_result_C2 [32:32] = fangyuan16_C [7:7] ;
  assign partial_result_R2 [33:33] = fangyuan16_R [6:6] ;
  assign partial_result_X2 [33:33] = fangyuan16_X [6:6] ;
  assign partial_result_C2 [33:33] = fangyuan16_C [6:6] ;
  assign partial_result_R2 [34:34] = fangyuan16_R [5:5] ;
  assign partial_result_X2 [34:34] = fangyuan16_X [5:5] ;
  assign partial_result_C2 [34:34] = fangyuan16_C [5:5] ;
  assign partial_result_R2 [35:35] = fangyuan16_R [4:4] ;
  assign partial_result_X2 [35:35] = fangyuan16_X [4:4] ;
  assign partial_result_C2 [35:35] = fangyuan16_C [4:4] ;
  assign partial_result_R2 [36:36] = fangyuan16_R [3:3] ;
  assign partial_result_X2 [36:36] = fangyuan16_X [3:3] ;
  assign partial_result_C2 [36:36] = fangyuan16_C [3:3] ;
  assign partial_result_R2 [37:37] = fangyuan16_R [2:2] ;
  assign partial_result_X2 [37:37] = fangyuan16_X [2:2] ;
  assign partial_result_C2 [37:37] = fangyuan16_C [2:2] ;
  assign partial_result_R2 [38:38] = fangyuan16_R [1:1] ;
  assign partial_result_X2 [38:38] = fangyuan16_X [1:1] ;
  assign partial_result_C2 [38:38] = fangyuan16_C [1:1] ;
  assign partial_result_R2 [39:39] = fangyuan16_R [0:0] ;
  assign partial_result_X2 [39:39] = fangyuan16_X [0:0] ;
  assign partial_result_C2 [39:39] = fangyuan16_C [0:0] ;

  assign _048_ = | fangyuan16;
  logic [39:0] fangyuan16_C0 ;
  logic [39:0] fangyuan16_R0 ;
  logic [39:0] fangyuan16_X0 ;
  assign _048__T = | fangyuan16_T ;
  assign fangyuan16_C0 = { 40{ _048__C }} ;
  assign fangyuan16_X0 = { 40{ _048__X }} ;
  assign fangyuan16_R0 = { 40{ _048__R }} & fangyuan16 ;
  assign _048__S = 0 ;
 assign di_manm = in_data[35:0] <<< di_lead_num;
 assign di_manm_S = 0 ;
 logic [43:0] in_data_C2 ;
 logic [43:0] in_data_R2 ;
 logic [43:0] in_data_X2 ;
 logic [5:0] di_lead_num_C0 ;
 logic [5:0] di_lead_num_R0 ;
 logic [5:0] di_lead_num_X0 ;
 assign di_manm_T = in_data_T [35:0] | di_lead_num_T ;
 assign in_data_C2 [35:0] = di_manm_C ;
 assign in_data_X2 [35:0] = di_manm_X ;
 assign di_lead_num_C0 = di_manm_C ;
 assign di_lead_num_X0 = di_manm_X ;
 assign in_data_R2 [35:0] = di_manm_R | ( di_manm_C & di_lead_num_T );
 assign di_lead_num_R0 = di_manm_R | ( di_manm_C & in_data_T [35:0] );
  logic [44:0] fangyuan17;
  logic [44:0] fangyuan17_T ;
  logic [44:0] fangyuan17_R ;
  logic [44:0] fangyuan17_C ;
  logic [44:0] fangyuan17_X ;
  assign fangyuan17 = { mant_sum, in_mant_cut, 1'b0 };
  assign fangyuan17_T = {  mant_sum_T , in_mant_cut_T , 1'h0  };
  logic [13:0] fangyuan17_S ;
  assign fangyuan17_S = 0 ;
  logic [40:0] mant_sum_R0 ;
  logic [40:0] mant_sum_X0 ;
  logic [40:0] mant_sum_C0 ;
  assign mant_sum_R0 = fangyuan17_R [44:4] ;
  assign mant_sum_X0 = fangyuan17_X [44:4] ;
  assign mant_sum_C0 = fangyuan17_C [44:4] ;
  logic [2:0] in_mant_cut_R1 ;
  logic [2:0] in_mant_cut_X1 ;
  logic [2:0] in_mant_cut_C1 ;
  assign in_mant_cut_R1 = fangyuan17_R [3:1] ;
  assign in_mant_cut_X1 = fangyuan17_X [3:1] ;
  assign in_mant_cut_C1 = fangyuan17_C [3:1] ;
  logic [31:0] fangyuan18;
  logic [31:0] fangyuan18_T ;
  logic [31:0] fangyuan18_R ;
  logic [31:0] fangyuan18_C ;
  logic [31:0] fangyuan18_X ;
  assign fangyuan18 = { _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[5:0] };
  assign fangyuan18_T = {  _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [5:0]  };
  logic [13:0] fangyuan18_S ;
  assign fangyuan18_S = 0 ;
  logic [31:0] _049__R0 ;
  logic [31:0] _049__X0 ;
  logic [31:0] _049__C0 ;
  assign _049__R0 [31:31] = fangyuan18_R [31:31] ;
  assign _049__X0 [31:31] = fangyuan18_X [31:31] ;
  assign _049__C0 [31:31] = fangyuan18_C [31:31] ;
  assign { _049__R0 [0], _049__R0 [1], _049__R0 [2], _049__R0 [3], _049__R0 [4], _049__R0 [5], _049__R0 [6], _049__R0 [7], _049__R0 [8], _049__R0 [9], _049__R0 [10], _049__R0 [11], _049__R0 [12], _049__R0 [13], _049__R0 [14], _049__R0 [15], _049__R0 [16], _049__R0 [17], _049__R0 [18], _049__R0 [19], _049__R0 [20], _049__R0 [21], _049__R0 [22], _049__R0 [23], _049__R0 [24], _049__R0 [25], _049__R0 [26], _049__R0 [27], _049__R0 [28], _049__R0 [29], _049__R0 [30] } = 0;
  assign { _049__X0 [0], _049__X0 [1], _049__X0 [2], _049__X0 [3], _049__X0 [4], _049__X0 [5], _049__X0 [6], _049__X0 [7], _049__X0 [8], _049__X0 [9], _049__X0 [10], _049__X0 [11], _049__X0 [12], _049__X0 [13], _049__X0 [14], _049__X0 [15], _049__X0 [16], _049__X0 [17], _049__X0 [18], _049__X0 [19], _049__X0 [20], _049__X0 [21], _049__X0 [22], _049__X0 [23], _049__X0 [24], _049__X0 [25], _049__X0 [26], _049__X0 [27], _049__X0 [28], _049__X0 [29], _049__X0 [30] } = 0;
  assign { _049__C0 [0], _049__C0 [1], _049__C0 [2], _049__C0 [3], _049__C0 [4], _049__C0 [5], _049__C0 [6], _049__C0 [7], _049__C0 [8], _049__C0 [9], _049__C0 [10], _049__C0 [11], _049__C0 [12], _049__C0 [13], _049__C0 [14], _049__C0 [15], _049__C0 [16], _049__C0 [17], _049__C0 [18], _049__C0 [19], _049__C0 [20], _049__C0 [21], _049__C0 [22], _049__C0 [23], _049__C0 [24], _049__C0 [25], _049__C0 [26], _049__C0 [27], _049__C0 [28], _049__C0 [29], _049__C0 [30] } = 0;
  logic [31:0] _049__R1 ;
  logic [31:0] _049__X1 ;
  logic [31:0] _049__C1 ;
  assign _049__R1 [31:31] = fangyuan18_R [30:30] ;
  assign _049__X1 [31:31] = fangyuan18_X [30:30] ;
  assign _049__C1 [31:31] = fangyuan18_C [30:30] ;
  assign { _049__R1 [0], _049__R1 [1], _049__R1 [2], _049__R1 [3], _049__R1 [4], _049__R1 [5], _049__R1 [6], _049__R1 [7], _049__R1 [8], _049__R1 [9], _049__R1 [10], _049__R1 [11], _049__R1 [12], _049__R1 [13], _049__R1 [14], _049__R1 [15], _049__R1 [16], _049__R1 [17], _049__R1 [18], _049__R1 [19], _049__R1 [20], _049__R1 [21], _049__R1 [22], _049__R1 [23], _049__R1 [24], _049__R1 [25], _049__R1 [26], _049__R1 [27], _049__R1 [28], _049__R1 [29], _049__R1 [30] } = 0;
  assign { _049__X1 [0], _049__X1 [1], _049__X1 [2], _049__X1 [3], _049__X1 [4], _049__X1 [5], _049__X1 [6], _049__X1 [7], _049__X1 [8], _049__X1 [9], _049__X1 [10], _049__X1 [11], _049__X1 [12], _049__X1 [13], _049__X1 [14], _049__X1 [15], _049__X1 [16], _049__X1 [17], _049__X1 [18], _049__X1 [19], _049__X1 [20], _049__X1 [21], _049__X1 [22], _049__X1 [23], _049__X1 [24], _049__X1 [25], _049__X1 [26], _049__X1 [27], _049__X1 [28], _049__X1 [29], _049__X1 [30] } = 0;
  assign { _049__C1 [0], _049__C1 [1], _049__C1 [2], _049__C1 [3], _049__C1 [4], _049__C1 [5], _049__C1 [6], _049__C1 [7], _049__C1 [8], _049__C1 [9], _049__C1 [10], _049__C1 [11], _049__C1 [12], _049__C1 [13], _049__C1 [14], _049__C1 [15], _049__C1 [16], _049__C1 [17], _049__C1 [18], _049__C1 [19], _049__C1 [20], _049__C1 [21], _049__C1 [22], _049__C1 [23], _049__C1 [24], _049__C1 [25], _049__C1 [26], _049__C1 [27], _049__C1 [28], _049__C1 [29], _049__C1 [30] } = 0;
  logic [31:0] _049__R2 ;
  logic [31:0] _049__X2 ;
  logic [31:0] _049__C2 ;
  assign _049__R2 [31:31] = fangyuan18_R [29:29] ;
  assign _049__X2 [31:31] = fangyuan18_X [29:29] ;
  assign _049__C2 [31:31] = fangyuan18_C [29:29] ;
  assign { _049__R2 [0], _049__R2 [1], _049__R2 [2], _049__R2 [3], _049__R2 [4], _049__R2 [5], _049__R2 [6], _049__R2 [7], _049__R2 [8], _049__R2 [9], _049__R2 [10], _049__R2 [11], _049__R2 [12], _049__R2 [13], _049__R2 [14], _049__R2 [15], _049__R2 [16], _049__R2 [17], _049__R2 [18], _049__R2 [19], _049__R2 [20], _049__R2 [21], _049__R2 [22], _049__R2 [23], _049__R2 [24], _049__R2 [25], _049__R2 [26], _049__R2 [27], _049__R2 [28], _049__R2 [29], _049__R2 [30] } = 0;
  assign { _049__X2 [0], _049__X2 [1], _049__X2 [2], _049__X2 [3], _049__X2 [4], _049__X2 [5], _049__X2 [6], _049__X2 [7], _049__X2 [8], _049__X2 [9], _049__X2 [10], _049__X2 [11], _049__X2 [12], _049__X2 [13], _049__X2 [14], _049__X2 [15], _049__X2 [16], _049__X2 [17], _049__X2 [18], _049__X2 [19], _049__X2 [20], _049__X2 [21], _049__X2 [22], _049__X2 [23], _049__X2 [24], _049__X2 [25], _049__X2 [26], _049__X2 [27], _049__X2 [28], _049__X2 [29], _049__X2 [30] } = 0;
  assign { _049__C2 [0], _049__C2 [1], _049__C2 [2], _049__C2 [3], _049__C2 [4], _049__C2 [5], _049__C2 [6], _049__C2 [7], _049__C2 [8], _049__C2 [9], _049__C2 [10], _049__C2 [11], _049__C2 [12], _049__C2 [13], _049__C2 [14], _049__C2 [15], _049__C2 [16], _049__C2 [17], _049__C2 [18], _049__C2 [19], _049__C2 [20], _049__C2 [21], _049__C2 [22], _049__C2 [23], _049__C2 [24], _049__C2 [25], _049__C2 [26], _049__C2 [27], _049__C2 [28], _049__C2 [29], _049__C2 [30] } = 0;
  logic [31:0] _049__R3 ;
  logic [31:0] _049__X3 ;
  logic [31:0] _049__C3 ;
  assign _049__R3 [31:31] = fangyuan18_R [28:28] ;
  assign _049__X3 [31:31] = fangyuan18_X [28:28] ;
  assign _049__C3 [31:31] = fangyuan18_C [28:28] ;
  assign { _049__R3 [0], _049__R3 [1], _049__R3 [2], _049__R3 [3], _049__R3 [4], _049__R3 [5], _049__R3 [6], _049__R3 [7], _049__R3 [8], _049__R3 [9], _049__R3 [10], _049__R3 [11], _049__R3 [12], _049__R3 [13], _049__R3 [14], _049__R3 [15], _049__R3 [16], _049__R3 [17], _049__R3 [18], _049__R3 [19], _049__R3 [20], _049__R3 [21], _049__R3 [22], _049__R3 [23], _049__R3 [24], _049__R3 [25], _049__R3 [26], _049__R3 [27], _049__R3 [28], _049__R3 [29], _049__R3 [30] } = 0;
  assign { _049__X3 [0], _049__X3 [1], _049__X3 [2], _049__X3 [3], _049__X3 [4], _049__X3 [5], _049__X3 [6], _049__X3 [7], _049__X3 [8], _049__X3 [9], _049__X3 [10], _049__X3 [11], _049__X3 [12], _049__X3 [13], _049__X3 [14], _049__X3 [15], _049__X3 [16], _049__X3 [17], _049__X3 [18], _049__X3 [19], _049__X3 [20], _049__X3 [21], _049__X3 [22], _049__X3 [23], _049__X3 [24], _049__X3 [25], _049__X3 [26], _049__X3 [27], _049__X3 [28], _049__X3 [29], _049__X3 [30] } = 0;
  assign { _049__C3 [0], _049__C3 [1], _049__C3 [2], _049__C3 [3], _049__C3 [4], _049__C3 [5], _049__C3 [6], _049__C3 [7], _049__C3 [8], _049__C3 [9], _049__C3 [10], _049__C3 [11], _049__C3 [12], _049__C3 [13], _049__C3 [14], _049__C3 [15], _049__C3 [16], _049__C3 [17], _049__C3 [18], _049__C3 [19], _049__C3 [20], _049__C3 [21], _049__C3 [22], _049__C3 [23], _049__C3 [24], _049__C3 [25], _049__C3 [26], _049__C3 [27], _049__C3 [28], _049__C3 [29], _049__C3 [30] } = 0;
  logic [31:0] _049__R4 ;
  logic [31:0] _049__X4 ;
  logic [31:0] _049__C4 ;
  assign _049__R4 [31:31] = fangyuan18_R [27:27] ;
  assign _049__X4 [31:31] = fangyuan18_X [27:27] ;
  assign _049__C4 [31:31] = fangyuan18_C [27:27] ;
  assign { _049__R4 [0], _049__R4 [1], _049__R4 [2], _049__R4 [3], _049__R4 [4], _049__R4 [5], _049__R4 [6], _049__R4 [7], _049__R4 [8], _049__R4 [9], _049__R4 [10], _049__R4 [11], _049__R4 [12], _049__R4 [13], _049__R4 [14], _049__R4 [15], _049__R4 [16], _049__R4 [17], _049__R4 [18], _049__R4 [19], _049__R4 [20], _049__R4 [21], _049__R4 [22], _049__R4 [23], _049__R4 [24], _049__R4 [25], _049__R4 [26], _049__R4 [27], _049__R4 [28], _049__R4 [29], _049__R4 [30] } = 0;
  assign { _049__X4 [0], _049__X4 [1], _049__X4 [2], _049__X4 [3], _049__X4 [4], _049__X4 [5], _049__X4 [6], _049__X4 [7], _049__X4 [8], _049__X4 [9], _049__X4 [10], _049__X4 [11], _049__X4 [12], _049__X4 [13], _049__X4 [14], _049__X4 [15], _049__X4 [16], _049__X4 [17], _049__X4 [18], _049__X4 [19], _049__X4 [20], _049__X4 [21], _049__X4 [22], _049__X4 [23], _049__X4 [24], _049__X4 [25], _049__X4 [26], _049__X4 [27], _049__X4 [28], _049__X4 [29], _049__X4 [30] } = 0;
  assign { _049__C4 [0], _049__C4 [1], _049__C4 [2], _049__C4 [3], _049__C4 [4], _049__C4 [5], _049__C4 [6], _049__C4 [7], _049__C4 [8], _049__C4 [9], _049__C4 [10], _049__C4 [11], _049__C4 [12], _049__C4 [13], _049__C4 [14], _049__C4 [15], _049__C4 [16], _049__C4 [17], _049__C4 [18], _049__C4 [19], _049__C4 [20], _049__C4 [21], _049__C4 [22], _049__C4 [23], _049__C4 [24], _049__C4 [25], _049__C4 [26], _049__C4 [27], _049__C4 [28], _049__C4 [29], _049__C4 [30] } = 0;
  logic [31:0] _049__R5 ;
  logic [31:0] _049__X5 ;
  logic [31:0] _049__C5 ;
  assign _049__R5 [31:31] = fangyuan18_R [26:26] ;
  assign _049__X5 [31:31] = fangyuan18_X [26:26] ;
  assign _049__C5 [31:31] = fangyuan18_C [26:26] ;
  assign { _049__R5 [0], _049__R5 [1], _049__R5 [2], _049__R5 [3], _049__R5 [4], _049__R5 [5], _049__R5 [6], _049__R5 [7], _049__R5 [8], _049__R5 [9], _049__R5 [10], _049__R5 [11], _049__R5 [12], _049__R5 [13], _049__R5 [14], _049__R5 [15], _049__R5 [16], _049__R5 [17], _049__R5 [18], _049__R5 [19], _049__R5 [20], _049__R5 [21], _049__R5 [22], _049__R5 [23], _049__R5 [24], _049__R5 [25], _049__R5 [26], _049__R5 [27], _049__R5 [28], _049__R5 [29], _049__R5 [30] } = 0;
  assign { _049__X5 [0], _049__X5 [1], _049__X5 [2], _049__X5 [3], _049__X5 [4], _049__X5 [5], _049__X5 [6], _049__X5 [7], _049__X5 [8], _049__X5 [9], _049__X5 [10], _049__X5 [11], _049__X5 [12], _049__X5 [13], _049__X5 [14], _049__X5 [15], _049__X5 [16], _049__X5 [17], _049__X5 [18], _049__X5 [19], _049__X5 [20], _049__X5 [21], _049__X5 [22], _049__X5 [23], _049__X5 [24], _049__X5 [25], _049__X5 [26], _049__X5 [27], _049__X5 [28], _049__X5 [29], _049__X5 [30] } = 0;
  assign { _049__C5 [0], _049__C5 [1], _049__C5 [2], _049__C5 [3], _049__C5 [4], _049__C5 [5], _049__C5 [6], _049__C5 [7], _049__C5 [8], _049__C5 [9], _049__C5 [10], _049__C5 [11], _049__C5 [12], _049__C5 [13], _049__C5 [14], _049__C5 [15], _049__C5 [16], _049__C5 [17], _049__C5 [18], _049__C5 [19], _049__C5 [20], _049__C5 [21], _049__C5 [22], _049__C5 [23], _049__C5 [24], _049__C5 [25], _049__C5 [26], _049__C5 [27], _049__C5 [28], _049__C5 [29], _049__C5 [30] } = 0;
  logic [31:0] _049__R6 ;
  logic [31:0] _049__X6 ;
  logic [31:0] _049__C6 ;
  assign _049__R6 [31:31] = fangyuan18_R [25:25] ;
  assign _049__X6 [31:31] = fangyuan18_X [25:25] ;
  assign _049__C6 [31:31] = fangyuan18_C [25:25] ;
  assign { _049__R6 [0], _049__R6 [1], _049__R6 [2], _049__R6 [3], _049__R6 [4], _049__R6 [5], _049__R6 [6], _049__R6 [7], _049__R6 [8], _049__R6 [9], _049__R6 [10], _049__R6 [11], _049__R6 [12], _049__R6 [13], _049__R6 [14], _049__R6 [15], _049__R6 [16], _049__R6 [17], _049__R6 [18], _049__R6 [19], _049__R6 [20], _049__R6 [21], _049__R6 [22], _049__R6 [23], _049__R6 [24], _049__R6 [25], _049__R6 [26], _049__R6 [27], _049__R6 [28], _049__R6 [29], _049__R6 [30] } = 0;
  assign { _049__X6 [0], _049__X6 [1], _049__X6 [2], _049__X6 [3], _049__X6 [4], _049__X6 [5], _049__X6 [6], _049__X6 [7], _049__X6 [8], _049__X6 [9], _049__X6 [10], _049__X6 [11], _049__X6 [12], _049__X6 [13], _049__X6 [14], _049__X6 [15], _049__X6 [16], _049__X6 [17], _049__X6 [18], _049__X6 [19], _049__X6 [20], _049__X6 [21], _049__X6 [22], _049__X6 [23], _049__X6 [24], _049__X6 [25], _049__X6 [26], _049__X6 [27], _049__X6 [28], _049__X6 [29], _049__X6 [30] } = 0;
  assign { _049__C6 [0], _049__C6 [1], _049__C6 [2], _049__C6 [3], _049__C6 [4], _049__C6 [5], _049__C6 [6], _049__C6 [7], _049__C6 [8], _049__C6 [9], _049__C6 [10], _049__C6 [11], _049__C6 [12], _049__C6 [13], _049__C6 [14], _049__C6 [15], _049__C6 [16], _049__C6 [17], _049__C6 [18], _049__C6 [19], _049__C6 [20], _049__C6 [21], _049__C6 [22], _049__C6 [23], _049__C6 [24], _049__C6 [25], _049__C6 [26], _049__C6 [27], _049__C6 [28], _049__C6 [29], _049__C6 [30] } = 0;
  logic [31:0] _049__R7 ;
  logic [31:0] _049__X7 ;
  logic [31:0] _049__C7 ;
  assign _049__R7 [31:31] = fangyuan18_R [24:24] ;
  assign _049__X7 [31:31] = fangyuan18_X [24:24] ;
  assign _049__C7 [31:31] = fangyuan18_C [24:24] ;
  assign { _049__R7 [0], _049__R7 [1], _049__R7 [2], _049__R7 [3], _049__R7 [4], _049__R7 [5], _049__R7 [6], _049__R7 [7], _049__R7 [8], _049__R7 [9], _049__R7 [10], _049__R7 [11], _049__R7 [12], _049__R7 [13], _049__R7 [14], _049__R7 [15], _049__R7 [16], _049__R7 [17], _049__R7 [18], _049__R7 [19], _049__R7 [20], _049__R7 [21], _049__R7 [22], _049__R7 [23], _049__R7 [24], _049__R7 [25], _049__R7 [26], _049__R7 [27], _049__R7 [28], _049__R7 [29], _049__R7 [30] } = 0;
  assign { _049__X7 [0], _049__X7 [1], _049__X7 [2], _049__X7 [3], _049__X7 [4], _049__X7 [5], _049__X7 [6], _049__X7 [7], _049__X7 [8], _049__X7 [9], _049__X7 [10], _049__X7 [11], _049__X7 [12], _049__X7 [13], _049__X7 [14], _049__X7 [15], _049__X7 [16], _049__X7 [17], _049__X7 [18], _049__X7 [19], _049__X7 [20], _049__X7 [21], _049__X7 [22], _049__X7 [23], _049__X7 [24], _049__X7 [25], _049__X7 [26], _049__X7 [27], _049__X7 [28], _049__X7 [29], _049__X7 [30] } = 0;
  assign { _049__C7 [0], _049__C7 [1], _049__C7 [2], _049__C7 [3], _049__C7 [4], _049__C7 [5], _049__C7 [6], _049__C7 [7], _049__C7 [8], _049__C7 [9], _049__C7 [10], _049__C7 [11], _049__C7 [12], _049__C7 [13], _049__C7 [14], _049__C7 [15], _049__C7 [16], _049__C7 [17], _049__C7 [18], _049__C7 [19], _049__C7 [20], _049__C7 [21], _049__C7 [22], _049__C7 [23], _049__C7 [24], _049__C7 [25], _049__C7 [26], _049__C7 [27], _049__C7 [28], _049__C7 [29], _049__C7 [30] } = 0;
  logic [31:0] _049__R8 ;
  logic [31:0] _049__X8 ;
  logic [31:0] _049__C8 ;
  assign _049__R8 [31:31] = fangyuan18_R [23:23] ;
  assign _049__X8 [31:31] = fangyuan18_X [23:23] ;
  assign _049__C8 [31:31] = fangyuan18_C [23:23] ;
  assign { _049__R8 [0], _049__R8 [1], _049__R8 [2], _049__R8 [3], _049__R8 [4], _049__R8 [5], _049__R8 [6], _049__R8 [7], _049__R8 [8], _049__R8 [9], _049__R8 [10], _049__R8 [11], _049__R8 [12], _049__R8 [13], _049__R8 [14], _049__R8 [15], _049__R8 [16], _049__R8 [17], _049__R8 [18], _049__R8 [19], _049__R8 [20], _049__R8 [21], _049__R8 [22], _049__R8 [23], _049__R8 [24], _049__R8 [25], _049__R8 [26], _049__R8 [27], _049__R8 [28], _049__R8 [29], _049__R8 [30] } = 0;
  assign { _049__X8 [0], _049__X8 [1], _049__X8 [2], _049__X8 [3], _049__X8 [4], _049__X8 [5], _049__X8 [6], _049__X8 [7], _049__X8 [8], _049__X8 [9], _049__X8 [10], _049__X8 [11], _049__X8 [12], _049__X8 [13], _049__X8 [14], _049__X8 [15], _049__X8 [16], _049__X8 [17], _049__X8 [18], _049__X8 [19], _049__X8 [20], _049__X8 [21], _049__X8 [22], _049__X8 [23], _049__X8 [24], _049__X8 [25], _049__X8 [26], _049__X8 [27], _049__X8 [28], _049__X8 [29], _049__X8 [30] } = 0;
  assign { _049__C8 [0], _049__C8 [1], _049__C8 [2], _049__C8 [3], _049__C8 [4], _049__C8 [5], _049__C8 [6], _049__C8 [7], _049__C8 [8], _049__C8 [9], _049__C8 [10], _049__C8 [11], _049__C8 [12], _049__C8 [13], _049__C8 [14], _049__C8 [15], _049__C8 [16], _049__C8 [17], _049__C8 [18], _049__C8 [19], _049__C8 [20], _049__C8 [21], _049__C8 [22], _049__C8 [23], _049__C8 [24], _049__C8 [25], _049__C8 [26], _049__C8 [27], _049__C8 [28], _049__C8 [29], _049__C8 [30] } = 0;
  logic [31:0] _049__R9 ;
  logic [31:0] _049__X9 ;
  logic [31:0] _049__C9 ;
  assign _049__R9 [31:31] = fangyuan18_R [22:22] ;
  assign _049__X9 [31:31] = fangyuan18_X [22:22] ;
  assign _049__C9 [31:31] = fangyuan18_C [22:22] ;
  assign { _049__R9 [0], _049__R9 [1], _049__R9 [2], _049__R9 [3], _049__R9 [4], _049__R9 [5], _049__R9 [6], _049__R9 [7], _049__R9 [8], _049__R9 [9], _049__R9 [10], _049__R9 [11], _049__R9 [12], _049__R9 [13], _049__R9 [14], _049__R9 [15], _049__R9 [16], _049__R9 [17], _049__R9 [18], _049__R9 [19], _049__R9 [20], _049__R9 [21], _049__R9 [22], _049__R9 [23], _049__R9 [24], _049__R9 [25], _049__R9 [26], _049__R9 [27], _049__R9 [28], _049__R9 [29], _049__R9 [30] } = 0;
  assign { _049__X9 [0], _049__X9 [1], _049__X9 [2], _049__X9 [3], _049__X9 [4], _049__X9 [5], _049__X9 [6], _049__X9 [7], _049__X9 [8], _049__X9 [9], _049__X9 [10], _049__X9 [11], _049__X9 [12], _049__X9 [13], _049__X9 [14], _049__X9 [15], _049__X9 [16], _049__X9 [17], _049__X9 [18], _049__X9 [19], _049__X9 [20], _049__X9 [21], _049__X9 [22], _049__X9 [23], _049__X9 [24], _049__X9 [25], _049__X9 [26], _049__X9 [27], _049__X9 [28], _049__X9 [29], _049__X9 [30] } = 0;
  assign { _049__C9 [0], _049__C9 [1], _049__C9 [2], _049__C9 [3], _049__C9 [4], _049__C9 [5], _049__C9 [6], _049__C9 [7], _049__C9 [8], _049__C9 [9], _049__C9 [10], _049__C9 [11], _049__C9 [12], _049__C9 [13], _049__C9 [14], _049__C9 [15], _049__C9 [16], _049__C9 [17], _049__C9 [18], _049__C9 [19], _049__C9 [20], _049__C9 [21], _049__C9 [22], _049__C9 [23], _049__C9 [24], _049__C9 [25], _049__C9 [26], _049__C9 [27], _049__C9 [28], _049__C9 [29], _049__C9 [30] } = 0;
  logic [31:0] _049__R10 ;
  logic [31:0] _049__X10 ;
  logic [31:0] _049__C10 ;
  assign _049__R10 [31:31] = fangyuan18_R [21:21] ;
  assign _049__X10 [31:31] = fangyuan18_X [21:21] ;
  assign _049__C10 [31:31] = fangyuan18_C [21:21] ;
  assign { _049__R10 [0], _049__R10 [1], _049__R10 [2], _049__R10 [3], _049__R10 [4], _049__R10 [5], _049__R10 [6], _049__R10 [7], _049__R10 [8], _049__R10 [9], _049__R10 [10], _049__R10 [11], _049__R10 [12], _049__R10 [13], _049__R10 [14], _049__R10 [15], _049__R10 [16], _049__R10 [17], _049__R10 [18], _049__R10 [19], _049__R10 [20], _049__R10 [21], _049__R10 [22], _049__R10 [23], _049__R10 [24], _049__R10 [25], _049__R10 [26], _049__R10 [27], _049__R10 [28], _049__R10 [29], _049__R10 [30] } = 0;
  assign { _049__X10 [0], _049__X10 [1], _049__X10 [2], _049__X10 [3], _049__X10 [4], _049__X10 [5], _049__X10 [6], _049__X10 [7], _049__X10 [8], _049__X10 [9], _049__X10 [10], _049__X10 [11], _049__X10 [12], _049__X10 [13], _049__X10 [14], _049__X10 [15], _049__X10 [16], _049__X10 [17], _049__X10 [18], _049__X10 [19], _049__X10 [20], _049__X10 [21], _049__X10 [22], _049__X10 [23], _049__X10 [24], _049__X10 [25], _049__X10 [26], _049__X10 [27], _049__X10 [28], _049__X10 [29], _049__X10 [30] } = 0;
  assign { _049__C10 [0], _049__C10 [1], _049__C10 [2], _049__C10 [3], _049__C10 [4], _049__C10 [5], _049__C10 [6], _049__C10 [7], _049__C10 [8], _049__C10 [9], _049__C10 [10], _049__C10 [11], _049__C10 [12], _049__C10 [13], _049__C10 [14], _049__C10 [15], _049__C10 [16], _049__C10 [17], _049__C10 [18], _049__C10 [19], _049__C10 [20], _049__C10 [21], _049__C10 [22], _049__C10 [23], _049__C10 [24], _049__C10 [25], _049__C10 [26], _049__C10 [27], _049__C10 [28], _049__C10 [29], _049__C10 [30] } = 0;
  logic [31:0] _049__R11 ;
  logic [31:0] _049__X11 ;
  logic [31:0] _049__C11 ;
  assign _049__R11 [31:31] = fangyuan18_R [20:20] ;
  assign _049__X11 [31:31] = fangyuan18_X [20:20] ;
  assign _049__C11 [31:31] = fangyuan18_C [20:20] ;
  assign { _049__R11 [0], _049__R11 [1], _049__R11 [2], _049__R11 [3], _049__R11 [4], _049__R11 [5], _049__R11 [6], _049__R11 [7], _049__R11 [8], _049__R11 [9], _049__R11 [10], _049__R11 [11], _049__R11 [12], _049__R11 [13], _049__R11 [14], _049__R11 [15], _049__R11 [16], _049__R11 [17], _049__R11 [18], _049__R11 [19], _049__R11 [20], _049__R11 [21], _049__R11 [22], _049__R11 [23], _049__R11 [24], _049__R11 [25], _049__R11 [26], _049__R11 [27], _049__R11 [28], _049__R11 [29], _049__R11 [30] } = 0;
  assign { _049__X11 [0], _049__X11 [1], _049__X11 [2], _049__X11 [3], _049__X11 [4], _049__X11 [5], _049__X11 [6], _049__X11 [7], _049__X11 [8], _049__X11 [9], _049__X11 [10], _049__X11 [11], _049__X11 [12], _049__X11 [13], _049__X11 [14], _049__X11 [15], _049__X11 [16], _049__X11 [17], _049__X11 [18], _049__X11 [19], _049__X11 [20], _049__X11 [21], _049__X11 [22], _049__X11 [23], _049__X11 [24], _049__X11 [25], _049__X11 [26], _049__X11 [27], _049__X11 [28], _049__X11 [29], _049__X11 [30] } = 0;
  assign { _049__C11 [0], _049__C11 [1], _049__C11 [2], _049__C11 [3], _049__C11 [4], _049__C11 [5], _049__C11 [6], _049__C11 [7], _049__C11 [8], _049__C11 [9], _049__C11 [10], _049__C11 [11], _049__C11 [12], _049__C11 [13], _049__C11 [14], _049__C11 [15], _049__C11 [16], _049__C11 [17], _049__C11 [18], _049__C11 [19], _049__C11 [20], _049__C11 [21], _049__C11 [22], _049__C11 [23], _049__C11 [24], _049__C11 [25], _049__C11 [26], _049__C11 [27], _049__C11 [28], _049__C11 [29], _049__C11 [30] } = 0;
  logic [31:0] _049__R12 ;
  logic [31:0] _049__X12 ;
  logic [31:0] _049__C12 ;
  assign _049__R12 [31:31] = fangyuan18_R [19:19] ;
  assign _049__X12 [31:31] = fangyuan18_X [19:19] ;
  assign _049__C12 [31:31] = fangyuan18_C [19:19] ;
  assign { _049__R12 [0], _049__R12 [1], _049__R12 [2], _049__R12 [3], _049__R12 [4], _049__R12 [5], _049__R12 [6], _049__R12 [7], _049__R12 [8], _049__R12 [9], _049__R12 [10], _049__R12 [11], _049__R12 [12], _049__R12 [13], _049__R12 [14], _049__R12 [15], _049__R12 [16], _049__R12 [17], _049__R12 [18], _049__R12 [19], _049__R12 [20], _049__R12 [21], _049__R12 [22], _049__R12 [23], _049__R12 [24], _049__R12 [25], _049__R12 [26], _049__R12 [27], _049__R12 [28], _049__R12 [29], _049__R12 [30] } = 0;
  assign { _049__X12 [0], _049__X12 [1], _049__X12 [2], _049__X12 [3], _049__X12 [4], _049__X12 [5], _049__X12 [6], _049__X12 [7], _049__X12 [8], _049__X12 [9], _049__X12 [10], _049__X12 [11], _049__X12 [12], _049__X12 [13], _049__X12 [14], _049__X12 [15], _049__X12 [16], _049__X12 [17], _049__X12 [18], _049__X12 [19], _049__X12 [20], _049__X12 [21], _049__X12 [22], _049__X12 [23], _049__X12 [24], _049__X12 [25], _049__X12 [26], _049__X12 [27], _049__X12 [28], _049__X12 [29], _049__X12 [30] } = 0;
  assign { _049__C12 [0], _049__C12 [1], _049__C12 [2], _049__C12 [3], _049__C12 [4], _049__C12 [5], _049__C12 [6], _049__C12 [7], _049__C12 [8], _049__C12 [9], _049__C12 [10], _049__C12 [11], _049__C12 [12], _049__C12 [13], _049__C12 [14], _049__C12 [15], _049__C12 [16], _049__C12 [17], _049__C12 [18], _049__C12 [19], _049__C12 [20], _049__C12 [21], _049__C12 [22], _049__C12 [23], _049__C12 [24], _049__C12 [25], _049__C12 [26], _049__C12 [27], _049__C12 [28], _049__C12 [29], _049__C12 [30] } = 0;
  logic [31:0] _049__R13 ;
  logic [31:0] _049__X13 ;
  logic [31:0] _049__C13 ;
  assign _049__R13 [31:31] = fangyuan18_R [18:18] ;
  assign _049__X13 [31:31] = fangyuan18_X [18:18] ;
  assign _049__C13 [31:31] = fangyuan18_C [18:18] ;
  assign { _049__R13 [0], _049__R13 [1], _049__R13 [2], _049__R13 [3], _049__R13 [4], _049__R13 [5], _049__R13 [6], _049__R13 [7], _049__R13 [8], _049__R13 [9], _049__R13 [10], _049__R13 [11], _049__R13 [12], _049__R13 [13], _049__R13 [14], _049__R13 [15], _049__R13 [16], _049__R13 [17], _049__R13 [18], _049__R13 [19], _049__R13 [20], _049__R13 [21], _049__R13 [22], _049__R13 [23], _049__R13 [24], _049__R13 [25], _049__R13 [26], _049__R13 [27], _049__R13 [28], _049__R13 [29], _049__R13 [30] } = 0;
  assign { _049__X13 [0], _049__X13 [1], _049__X13 [2], _049__X13 [3], _049__X13 [4], _049__X13 [5], _049__X13 [6], _049__X13 [7], _049__X13 [8], _049__X13 [9], _049__X13 [10], _049__X13 [11], _049__X13 [12], _049__X13 [13], _049__X13 [14], _049__X13 [15], _049__X13 [16], _049__X13 [17], _049__X13 [18], _049__X13 [19], _049__X13 [20], _049__X13 [21], _049__X13 [22], _049__X13 [23], _049__X13 [24], _049__X13 [25], _049__X13 [26], _049__X13 [27], _049__X13 [28], _049__X13 [29], _049__X13 [30] } = 0;
  assign { _049__C13 [0], _049__C13 [1], _049__C13 [2], _049__C13 [3], _049__C13 [4], _049__C13 [5], _049__C13 [6], _049__C13 [7], _049__C13 [8], _049__C13 [9], _049__C13 [10], _049__C13 [11], _049__C13 [12], _049__C13 [13], _049__C13 [14], _049__C13 [15], _049__C13 [16], _049__C13 [17], _049__C13 [18], _049__C13 [19], _049__C13 [20], _049__C13 [21], _049__C13 [22], _049__C13 [23], _049__C13 [24], _049__C13 [25], _049__C13 [26], _049__C13 [27], _049__C13 [28], _049__C13 [29], _049__C13 [30] } = 0;
  logic [31:0] _049__R14 ;
  logic [31:0] _049__X14 ;
  logic [31:0] _049__C14 ;
  assign _049__R14 [31:31] = fangyuan18_R [17:17] ;
  assign _049__X14 [31:31] = fangyuan18_X [17:17] ;
  assign _049__C14 [31:31] = fangyuan18_C [17:17] ;
  assign { _049__R14 [0], _049__R14 [1], _049__R14 [2], _049__R14 [3], _049__R14 [4], _049__R14 [5], _049__R14 [6], _049__R14 [7], _049__R14 [8], _049__R14 [9], _049__R14 [10], _049__R14 [11], _049__R14 [12], _049__R14 [13], _049__R14 [14], _049__R14 [15], _049__R14 [16], _049__R14 [17], _049__R14 [18], _049__R14 [19], _049__R14 [20], _049__R14 [21], _049__R14 [22], _049__R14 [23], _049__R14 [24], _049__R14 [25], _049__R14 [26], _049__R14 [27], _049__R14 [28], _049__R14 [29], _049__R14 [30] } = 0;
  assign { _049__X14 [0], _049__X14 [1], _049__X14 [2], _049__X14 [3], _049__X14 [4], _049__X14 [5], _049__X14 [6], _049__X14 [7], _049__X14 [8], _049__X14 [9], _049__X14 [10], _049__X14 [11], _049__X14 [12], _049__X14 [13], _049__X14 [14], _049__X14 [15], _049__X14 [16], _049__X14 [17], _049__X14 [18], _049__X14 [19], _049__X14 [20], _049__X14 [21], _049__X14 [22], _049__X14 [23], _049__X14 [24], _049__X14 [25], _049__X14 [26], _049__X14 [27], _049__X14 [28], _049__X14 [29], _049__X14 [30] } = 0;
  assign { _049__C14 [0], _049__C14 [1], _049__C14 [2], _049__C14 [3], _049__C14 [4], _049__C14 [5], _049__C14 [6], _049__C14 [7], _049__C14 [8], _049__C14 [9], _049__C14 [10], _049__C14 [11], _049__C14 [12], _049__C14 [13], _049__C14 [14], _049__C14 [15], _049__C14 [16], _049__C14 [17], _049__C14 [18], _049__C14 [19], _049__C14 [20], _049__C14 [21], _049__C14 [22], _049__C14 [23], _049__C14 [24], _049__C14 [25], _049__C14 [26], _049__C14 [27], _049__C14 [28], _049__C14 [29], _049__C14 [30] } = 0;
  logic [31:0] _049__R15 ;
  logic [31:0] _049__X15 ;
  logic [31:0] _049__C15 ;
  assign _049__R15 [31:31] = fangyuan18_R [16:16] ;
  assign _049__X15 [31:31] = fangyuan18_X [16:16] ;
  assign _049__C15 [31:31] = fangyuan18_C [16:16] ;
  assign { _049__R15 [0], _049__R15 [1], _049__R15 [2], _049__R15 [3], _049__R15 [4], _049__R15 [5], _049__R15 [6], _049__R15 [7], _049__R15 [8], _049__R15 [9], _049__R15 [10], _049__R15 [11], _049__R15 [12], _049__R15 [13], _049__R15 [14], _049__R15 [15], _049__R15 [16], _049__R15 [17], _049__R15 [18], _049__R15 [19], _049__R15 [20], _049__R15 [21], _049__R15 [22], _049__R15 [23], _049__R15 [24], _049__R15 [25], _049__R15 [26], _049__R15 [27], _049__R15 [28], _049__R15 [29], _049__R15 [30] } = 0;
  assign { _049__X15 [0], _049__X15 [1], _049__X15 [2], _049__X15 [3], _049__X15 [4], _049__X15 [5], _049__X15 [6], _049__X15 [7], _049__X15 [8], _049__X15 [9], _049__X15 [10], _049__X15 [11], _049__X15 [12], _049__X15 [13], _049__X15 [14], _049__X15 [15], _049__X15 [16], _049__X15 [17], _049__X15 [18], _049__X15 [19], _049__X15 [20], _049__X15 [21], _049__X15 [22], _049__X15 [23], _049__X15 [24], _049__X15 [25], _049__X15 [26], _049__X15 [27], _049__X15 [28], _049__X15 [29], _049__X15 [30] } = 0;
  assign { _049__C15 [0], _049__C15 [1], _049__C15 [2], _049__C15 [3], _049__C15 [4], _049__C15 [5], _049__C15 [6], _049__C15 [7], _049__C15 [8], _049__C15 [9], _049__C15 [10], _049__C15 [11], _049__C15 [12], _049__C15 [13], _049__C15 [14], _049__C15 [15], _049__C15 [16], _049__C15 [17], _049__C15 [18], _049__C15 [19], _049__C15 [20], _049__C15 [21], _049__C15 [22], _049__C15 [23], _049__C15 [24], _049__C15 [25], _049__C15 [26], _049__C15 [27], _049__C15 [28], _049__C15 [29], _049__C15 [30] } = 0;
  logic [31:0] _049__R16 ;
  logic [31:0] _049__X16 ;
  logic [31:0] _049__C16 ;
  assign _049__R16 [31:31] = fangyuan18_R [15:15] ;
  assign _049__X16 [31:31] = fangyuan18_X [15:15] ;
  assign _049__C16 [31:31] = fangyuan18_C [15:15] ;
  assign { _049__R16 [0], _049__R16 [1], _049__R16 [2], _049__R16 [3], _049__R16 [4], _049__R16 [5], _049__R16 [6], _049__R16 [7], _049__R16 [8], _049__R16 [9], _049__R16 [10], _049__R16 [11], _049__R16 [12], _049__R16 [13], _049__R16 [14], _049__R16 [15], _049__R16 [16], _049__R16 [17], _049__R16 [18], _049__R16 [19], _049__R16 [20], _049__R16 [21], _049__R16 [22], _049__R16 [23], _049__R16 [24], _049__R16 [25], _049__R16 [26], _049__R16 [27], _049__R16 [28], _049__R16 [29], _049__R16 [30] } = 0;
  assign { _049__X16 [0], _049__X16 [1], _049__X16 [2], _049__X16 [3], _049__X16 [4], _049__X16 [5], _049__X16 [6], _049__X16 [7], _049__X16 [8], _049__X16 [9], _049__X16 [10], _049__X16 [11], _049__X16 [12], _049__X16 [13], _049__X16 [14], _049__X16 [15], _049__X16 [16], _049__X16 [17], _049__X16 [18], _049__X16 [19], _049__X16 [20], _049__X16 [21], _049__X16 [22], _049__X16 [23], _049__X16 [24], _049__X16 [25], _049__X16 [26], _049__X16 [27], _049__X16 [28], _049__X16 [29], _049__X16 [30] } = 0;
  assign { _049__C16 [0], _049__C16 [1], _049__C16 [2], _049__C16 [3], _049__C16 [4], _049__C16 [5], _049__C16 [6], _049__C16 [7], _049__C16 [8], _049__C16 [9], _049__C16 [10], _049__C16 [11], _049__C16 [12], _049__C16 [13], _049__C16 [14], _049__C16 [15], _049__C16 [16], _049__C16 [17], _049__C16 [18], _049__C16 [19], _049__C16 [20], _049__C16 [21], _049__C16 [22], _049__C16 [23], _049__C16 [24], _049__C16 [25], _049__C16 [26], _049__C16 [27], _049__C16 [28], _049__C16 [29], _049__C16 [30] } = 0;
  logic [31:0] _049__R17 ;
  logic [31:0] _049__X17 ;
  logic [31:0] _049__C17 ;
  assign _049__R17 [31:31] = fangyuan18_R [14:14] ;
  assign _049__X17 [31:31] = fangyuan18_X [14:14] ;
  assign _049__C17 [31:31] = fangyuan18_C [14:14] ;
  assign { _049__R17 [0], _049__R17 [1], _049__R17 [2], _049__R17 [3], _049__R17 [4], _049__R17 [5], _049__R17 [6], _049__R17 [7], _049__R17 [8], _049__R17 [9], _049__R17 [10], _049__R17 [11], _049__R17 [12], _049__R17 [13], _049__R17 [14], _049__R17 [15], _049__R17 [16], _049__R17 [17], _049__R17 [18], _049__R17 [19], _049__R17 [20], _049__R17 [21], _049__R17 [22], _049__R17 [23], _049__R17 [24], _049__R17 [25], _049__R17 [26], _049__R17 [27], _049__R17 [28], _049__R17 [29], _049__R17 [30] } = 0;
  assign { _049__X17 [0], _049__X17 [1], _049__X17 [2], _049__X17 [3], _049__X17 [4], _049__X17 [5], _049__X17 [6], _049__X17 [7], _049__X17 [8], _049__X17 [9], _049__X17 [10], _049__X17 [11], _049__X17 [12], _049__X17 [13], _049__X17 [14], _049__X17 [15], _049__X17 [16], _049__X17 [17], _049__X17 [18], _049__X17 [19], _049__X17 [20], _049__X17 [21], _049__X17 [22], _049__X17 [23], _049__X17 [24], _049__X17 [25], _049__X17 [26], _049__X17 [27], _049__X17 [28], _049__X17 [29], _049__X17 [30] } = 0;
  assign { _049__C17 [0], _049__C17 [1], _049__C17 [2], _049__C17 [3], _049__C17 [4], _049__C17 [5], _049__C17 [6], _049__C17 [7], _049__C17 [8], _049__C17 [9], _049__C17 [10], _049__C17 [11], _049__C17 [12], _049__C17 [13], _049__C17 [14], _049__C17 [15], _049__C17 [16], _049__C17 [17], _049__C17 [18], _049__C17 [19], _049__C17 [20], _049__C17 [21], _049__C17 [22], _049__C17 [23], _049__C17 [24], _049__C17 [25], _049__C17 [26], _049__C17 [27], _049__C17 [28], _049__C17 [29], _049__C17 [30] } = 0;
  logic [31:0] _049__R18 ;
  logic [31:0] _049__X18 ;
  logic [31:0] _049__C18 ;
  assign _049__R18 [31:31] = fangyuan18_R [13:13] ;
  assign _049__X18 [31:31] = fangyuan18_X [13:13] ;
  assign _049__C18 [31:31] = fangyuan18_C [13:13] ;
  assign { _049__R18 [0], _049__R18 [1], _049__R18 [2], _049__R18 [3], _049__R18 [4], _049__R18 [5], _049__R18 [6], _049__R18 [7], _049__R18 [8], _049__R18 [9], _049__R18 [10], _049__R18 [11], _049__R18 [12], _049__R18 [13], _049__R18 [14], _049__R18 [15], _049__R18 [16], _049__R18 [17], _049__R18 [18], _049__R18 [19], _049__R18 [20], _049__R18 [21], _049__R18 [22], _049__R18 [23], _049__R18 [24], _049__R18 [25], _049__R18 [26], _049__R18 [27], _049__R18 [28], _049__R18 [29], _049__R18 [30] } = 0;
  assign { _049__X18 [0], _049__X18 [1], _049__X18 [2], _049__X18 [3], _049__X18 [4], _049__X18 [5], _049__X18 [6], _049__X18 [7], _049__X18 [8], _049__X18 [9], _049__X18 [10], _049__X18 [11], _049__X18 [12], _049__X18 [13], _049__X18 [14], _049__X18 [15], _049__X18 [16], _049__X18 [17], _049__X18 [18], _049__X18 [19], _049__X18 [20], _049__X18 [21], _049__X18 [22], _049__X18 [23], _049__X18 [24], _049__X18 [25], _049__X18 [26], _049__X18 [27], _049__X18 [28], _049__X18 [29], _049__X18 [30] } = 0;
  assign { _049__C18 [0], _049__C18 [1], _049__C18 [2], _049__C18 [3], _049__C18 [4], _049__C18 [5], _049__C18 [6], _049__C18 [7], _049__C18 [8], _049__C18 [9], _049__C18 [10], _049__C18 [11], _049__C18 [12], _049__C18 [13], _049__C18 [14], _049__C18 [15], _049__C18 [16], _049__C18 [17], _049__C18 [18], _049__C18 [19], _049__C18 [20], _049__C18 [21], _049__C18 [22], _049__C18 [23], _049__C18 [24], _049__C18 [25], _049__C18 [26], _049__C18 [27], _049__C18 [28], _049__C18 [29], _049__C18 [30] } = 0;
  logic [31:0] _049__R19 ;
  logic [31:0] _049__X19 ;
  logic [31:0] _049__C19 ;
  assign _049__R19 [31:31] = fangyuan18_R [12:12] ;
  assign _049__X19 [31:31] = fangyuan18_X [12:12] ;
  assign _049__C19 [31:31] = fangyuan18_C [12:12] ;
  assign { _049__R19 [0], _049__R19 [1], _049__R19 [2], _049__R19 [3], _049__R19 [4], _049__R19 [5], _049__R19 [6], _049__R19 [7], _049__R19 [8], _049__R19 [9], _049__R19 [10], _049__R19 [11], _049__R19 [12], _049__R19 [13], _049__R19 [14], _049__R19 [15], _049__R19 [16], _049__R19 [17], _049__R19 [18], _049__R19 [19], _049__R19 [20], _049__R19 [21], _049__R19 [22], _049__R19 [23], _049__R19 [24], _049__R19 [25], _049__R19 [26], _049__R19 [27], _049__R19 [28], _049__R19 [29], _049__R19 [30] } = 0;
  assign { _049__X19 [0], _049__X19 [1], _049__X19 [2], _049__X19 [3], _049__X19 [4], _049__X19 [5], _049__X19 [6], _049__X19 [7], _049__X19 [8], _049__X19 [9], _049__X19 [10], _049__X19 [11], _049__X19 [12], _049__X19 [13], _049__X19 [14], _049__X19 [15], _049__X19 [16], _049__X19 [17], _049__X19 [18], _049__X19 [19], _049__X19 [20], _049__X19 [21], _049__X19 [22], _049__X19 [23], _049__X19 [24], _049__X19 [25], _049__X19 [26], _049__X19 [27], _049__X19 [28], _049__X19 [29], _049__X19 [30] } = 0;
  assign { _049__C19 [0], _049__C19 [1], _049__C19 [2], _049__C19 [3], _049__C19 [4], _049__C19 [5], _049__C19 [6], _049__C19 [7], _049__C19 [8], _049__C19 [9], _049__C19 [10], _049__C19 [11], _049__C19 [12], _049__C19 [13], _049__C19 [14], _049__C19 [15], _049__C19 [16], _049__C19 [17], _049__C19 [18], _049__C19 [19], _049__C19 [20], _049__C19 [21], _049__C19 [22], _049__C19 [23], _049__C19 [24], _049__C19 [25], _049__C19 [26], _049__C19 [27], _049__C19 [28], _049__C19 [29], _049__C19 [30] } = 0;
  logic [31:0] _049__R20 ;
  logic [31:0] _049__X20 ;
  logic [31:0] _049__C20 ;
  assign _049__R20 [31:31] = fangyuan18_R [11:11] ;
  assign _049__X20 [31:31] = fangyuan18_X [11:11] ;
  assign _049__C20 [31:31] = fangyuan18_C [11:11] ;
  assign { _049__R20 [0], _049__R20 [1], _049__R20 [2], _049__R20 [3], _049__R20 [4], _049__R20 [5], _049__R20 [6], _049__R20 [7], _049__R20 [8], _049__R20 [9], _049__R20 [10], _049__R20 [11], _049__R20 [12], _049__R20 [13], _049__R20 [14], _049__R20 [15], _049__R20 [16], _049__R20 [17], _049__R20 [18], _049__R20 [19], _049__R20 [20], _049__R20 [21], _049__R20 [22], _049__R20 [23], _049__R20 [24], _049__R20 [25], _049__R20 [26], _049__R20 [27], _049__R20 [28], _049__R20 [29], _049__R20 [30] } = 0;
  assign { _049__X20 [0], _049__X20 [1], _049__X20 [2], _049__X20 [3], _049__X20 [4], _049__X20 [5], _049__X20 [6], _049__X20 [7], _049__X20 [8], _049__X20 [9], _049__X20 [10], _049__X20 [11], _049__X20 [12], _049__X20 [13], _049__X20 [14], _049__X20 [15], _049__X20 [16], _049__X20 [17], _049__X20 [18], _049__X20 [19], _049__X20 [20], _049__X20 [21], _049__X20 [22], _049__X20 [23], _049__X20 [24], _049__X20 [25], _049__X20 [26], _049__X20 [27], _049__X20 [28], _049__X20 [29], _049__X20 [30] } = 0;
  assign { _049__C20 [0], _049__C20 [1], _049__C20 [2], _049__C20 [3], _049__C20 [4], _049__C20 [5], _049__C20 [6], _049__C20 [7], _049__C20 [8], _049__C20 [9], _049__C20 [10], _049__C20 [11], _049__C20 [12], _049__C20 [13], _049__C20 [14], _049__C20 [15], _049__C20 [16], _049__C20 [17], _049__C20 [18], _049__C20 [19], _049__C20 [20], _049__C20 [21], _049__C20 [22], _049__C20 [23], _049__C20 [24], _049__C20 [25], _049__C20 [26], _049__C20 [27], _049__C20 [28], _049__C20 [29], _049__C20 [30] } = 0;
  logic [31:0] _049__R21 ;
  logic [31:0] _049__X21 ;
  logic [31:0] _049__C21 ;
  assign _049__R21 [31:31] = fangyuan18_R [10:10] ;
  assign _049__X21 [31:31] = fangyuan18_X [10:10] ;
  assign _049__C21 [31:31] = fangyuan18_C [10:10] ;
  assign { _049__R21 [0], _049__R21 [1], _049__R21 [2], _049__R21 [3], _049__R21 [4], _049__R21 [5], _049__R21 [6], _049__R21 [7], _049__R21 [8], _049__R21 [9], _049__R21 [10], _049__R21 [11], _049__R21 [12], _049__R21 [13], _049__R21 [14], _049__R21 [15], _049__R21 [16], _049__R21 [17], _049__R21 [18], _049__R21 [19], _049__R21 [20], _049__R21 [21], _049__R21 [22], _049__R21 [23], _049__R21 [24], _049__R21 [25], _049__R21 [26], _049__R21 [27], _049__R21 [28], _049__R21 [29], _049__R21 [30] } = 0;
  assign { _049__X21 [0], _049__X21 [1], _049__X21 [2], _049__X21 [3], _049__X21 [4], _049__X21 [5], _049__X21 [6], _049__X21 [7], _049__X21 [8], _049__X21 [9], _049__X21 [10], _049__X21 [11], _049__X21 [12], _049__X21 [13], _049__X21 [14], _049__X21 [15], _049__X21 [16], _049__X21 [17], _049__X21 [18], _049__X21 [19], _049__X21 [20], _049__X21 [21], _049__X21 [22], _049__X21 [23], _049__X21 [24], _049__X21 [25], _049__X21 [26], _049__X21 [27], _049__X21 [28], _049__X21 [29], _049__X21 [30] } = 0;
  assign { _049__C21 [0], _049__C21 [1], _049__C21 [2], _049__C21 [3], _049__C21 [4], _049__C21 [5], _049__C21 [6], _049__C21 [7], _049__C21 [8], _049__C21 [9], _049__C21 [10], _049__C21 [11], _049__C21 [12], _049__C21 [13], _049__C21 [14], _049__C21 [15], _049__C21 [16], _049__C21 [17], _049__C21 [18], _049__C21 [19], _049__C21 [20], _049__C21 [21], _049__C21 [22], _049__C21 [23], _049__C21 [24], _049__C21 [25], _049__C21 [26], _049__C21 [27], _049__C21 [28], _049__C21 [29], _049__C21 [30] } = 0;
  logic [31:0] _049__R22 ;
  logic [31:0] _049__X22 ;
  logic [31:0] _049__C22 ;
  assign _049__R22 [31:31] = fangyuan18_R [9:9] ;
  assign _049__X22 [31:31] = fangyuan18_X [9:9] ;
  assign _049__C22 [31:31] = fangyuan18_C [9:9] ;
  assign { _049__R22 [0], _049__R22 [1], _049__R22 [2], _049__R22 [3], _049__R22 [4], _049__R22 [5], _049__R22 [6], _049__R22 [7], _049__R22 [8], _049__R22 [9], _049__R22 [10], _049__R22 [11], _049__R22 [12], _049__R22 [13], _049__R22 [14], _049__R22 [15], _049__R22 [16], _049__R22 [17], _049__R22 [18], _049__R22 [19], _049__R22 [20], _049__R22 [21], _049__R22 [22], _049__R22 [23], _049__R22 [24], _049__R22 [25], _049__R22 [26], _049__R22 [27], _049__R22 [28], _049__R22 [29], _049__R22 [30] } = 0;
  assign { _049__X22 [0], _049__X22 [1], _049__X22 [2], _049__X22 [3], _049__X22 [4], _049__X22 [5], _049__X22 [6], _049__X22 [7], _049__X22 [8], _049__X22 [9], _049__X22 [10], _049__X22 [11], _049__X22 [12], _049__X22 [13], _049__X22 [14], _049__X22 [15], _049__X22 [16], _049__X22 [17], _049__X22 [18], _049__X22 [19], _049__X22 [20], _049__X22 [21], _049__X22 [22], _049__X22 [23], _049__X22 [24], _049__X22 [25], _049__X22 [26], _049__X22 [27], _049__X22 [28], _049__X22 [29], _049__X22 [30] } = 0;
  assign { _049__C22 [0], _049__C22 [1], _049__C22 [2], _049__C22 [3], _049__C22 [4], _049__C22 [5], _049__C22 [6], _049__C22 [7], _049__C22 [8], _049__C22 [9], _049__C22 [10], _049__C22 [11], _049__C22 [12], _049__C22 [13], _049__C22 [14], _049__C22 [15], _049__C22 [16], _049__C22 [17], _049__C22 [18], _049__C22 [19], _049__C22 [20], _049__C22 [21], _049__C22 [22], _049__C22 [23], _049__C22 [24], _049__C22 [25], _049__C22 [26], _049__C22 [27], _049__C22 [28], _049__C22 [29], _049__C22 [30] } = 0;
  logic [31:0] _049__R23 ;
  logic [31:0] _049__X23 ;
  logic [31:0] _049__C23 ;
  assign _049__R23 [31:31] = fangyuan18_R [8:8] ;
  assign _049__X23 [31:31] = fangyuan18_X [8:8] ;
  assign _049__C23 [31:31] = fangyuan18_C [8:8] ;
  assign { _049__R23 [0], _049__R23 [1], _049__R23 [2], _049__R23 [3], _049__R23 [4], _049__R23 [5], _049__R23 [6], _049__R23 [7], _049__R23 [8], _049__R23 [9], _049__R23 [10], _049__R23 [11], _049__R23 [12], _049__R23 [13], _049__R23 [14], _049__R23 [15], _049__R23 [16], _049__R23 [17], _049__R23 [18], _049__R23 [19], _049__R23 [20], _049__R23 [21], _049__R23 [22], _049__R23 [23], _049__R23 [24], _049__R23 [25], _049__R23 [26], _049__R23 [27], _049__R23 [28], _049__R23 [29], _049__R23 [30] } = 0;
  assign { _049__X23 [0], _049__X23 [1], _049__X23 [2], _049__X23 [3], _049__X23 [4], _049__X23 [5], _049__X23 [6], _049__X23 [7], _049__X23 [8], _049__X23 [9], _049__X23 [10], _049__X23 [11], _049__X23 [12], _049__X23 [13], _049__X23 [14], _049__X23 [15], _049__X23 [16], _049__X23 [17], _049__X23 [18], _049__X23 [19], _049__X23 [20], _049__X23 [21], _049__X23 [22], _049__X23 [23], _049__X23 [24], _049__X23 [25], _049__X23 [26], _049__X23 [27], _049__X23 [28], _049__X23 [29], _049__X23 [30] } = 0;
  assign { _049__C23 [0], _049__C23 [1], _049__C23 [2], _049__C23 [3], _049__C23 [4], _049__C23 [5], _049__C23 [6], _049__C23 [7], _049__C23 [8], _049__C23 [9], _049__C23 [10], _049__C23 [11], _049__C23 [12], _049__C23 [13], _049__C23 [14], _049__C23 [15], _049__C23 [16], _049__C23 [17], _049__C23 [18], _049__C23 [19], _049__C23 [20], _049__C23 [21], _049__C23 [22], _049__C23 [23], _049__C23 [24], _049__C23 [25], _049__C23 [26], _049__C23 [27], _049__C23 [28], _049__C23 [29], _049__C23 [30] } = 0;
  logic [31:0] _049__R24 ;
  logic [31:0] _049__X24 ;
  logic [31:0] _049__C24 ;
  assign _049__R24 [31:31] = fangyuan18_R [7:7] ;
  assign _049__X24 [31:31] = fangyuan18_X [7:7] ;
  assign _049__C24 [31:31] = fangyuan18_C [7:7] ;
  assign { _049__R24 [0], _049__R24 [1], _049__R24 [2], _049__R24 [3], _049__R24 [4], _049__R24 [5], _049__R24 [6], _049__R24 [7], _049__R24 [8], _049__R24 [9], _049__R24 [10], _049__R24 [11], _049__R24 [12], _049__R24 [13], _049__R24 [14], _049__R24 [15], _049__R24 [16], _049__R24 [17], _049__R24 [18], _049__R24 [19], _049__R24 [20], _049__R24 [21], _049__R24 [22], _049__R24 [23], _049__R24 [24], _049__R24 [25], _049__R24 [26], _049__R24 [27], _049__R24 [28], _049__R24 [29], _049__R24 [30] } = 0;
  assign { _049__X24 [0], _049__X24 [1], _049__X24 [2], _049__X24 [3], _049__X24 [4], _049__X24 [5], _049__X24 [6], _049__X24 [7], _049__X24 [8], _049__X24 [9], _049__X24 [10], _049__X24 [11], _049__X24 [12], _049__X24 [13], _049__X24 [14], _049__X24 [15], _049__X24 [16], _049__X24 [17], _049__X24 [18], _049__X24 [19], _049__X24 [20], _049__X24 [21], _049__X24 [22], _049__X24 [23], _049__X24 [24], _049__X24 [25], _049__X24 [26], _049__X24 [27], _049__X24 [28], _049__X24 [29], _049__X24 [30] } = 0;
  assign { _049__C24 [0], _049__C24 [1], _049__C24 [2], _049__C24 [3], _049__C24 [4], _049__C24 [5], _049__C24 [6], _049__C24 [7], _049__C24 [8], _049__C24 [9], _049__C24 [10], _049__C24 [11], _049__C24 [12], _049__C24 [13], _049__C24 [14], _049__C24 [15], _049__C24 [16], _049__C24 [17], _049__C24 [18], _049__C24 [19], _049__C24 [20], _049__C24 [21], _049__C24 [22], _049__C24 [23], _049__C24 [24], _049__C24 [25], _049__C24 [26], _049__C24 [27], _049__C24 [28], _049__C24 [29], _049__C24 [30] } = 0;
  logic [31:0] _049__R25 ;
  logic [31:0] _049__X25 ;
  logic [31:0] _049__C25 ;
  assign _049__R25 [31:31] = fangyuan18_R [6:6] ;
  assign _049__X25 [31:31] = fangyuan18_X [6:6] ;
  assign _049__C25 [31:31] = fangyuan18_C [6:6] ;
  assign _049__R25 [5:0] = fangyuan18_R [5:0] ;
  assign _049__X25 [5:0] = fangyuan18_X [5:0] ;
  assign _049__C25 [5:0] = fangyuan18_C [5:0] ;

 assign _024_[43:0] = fangyuan17 <<< fangyuan18;
 assign _024__S = 0 ;
 logic [44:0] fangyuan17_C0 ;
 logic [44:0] fangyuan17_R0 ;
 logic [44:0] fangyuan17_X0 ;
 logic [31:0] fangyuan18_C0 ;
 logic [31:0] fangyuan18_R0 ;
 logic [31:0] fangyuan18_X0 ;
 assign _024__T [43:0] = fangyuan17_T | fangyuan18_T ;
 assign fangyuan17_C0 = _024__C [43:0] ;
 assign fangyuan17_X0 = _024__X [43:0] ;
 assign fangyuan18_C0 = _024__C [43:0] ;
 assign fangyuan18_X0 = _024__X [43:0] ;
 assign fangyuan17_R0 = _024__R [43:0] | ( _024__C [43:0] & fangyuan18_T );
 assign fangyuan18_R0 = _024__R [43:0] | ( _024__C [43:0] & fangyuan17_T );
  logic [79:0] fangyuan19;
  logic [79:0] fangyuan19_T ;
  logic [79:0] fangyuan19_R ;
  logic [79:0] fangyuan19_C ;
  logic [79:0] fangyuan19_X ;
  assign fangyuan19 = { di_mant_shift, di_mant_cut[2:1], di_mant_cutt[37:0] };
  assign fangyuan19_T = {  di_mant_shift_T , di_mant_cut_T [2:1] , di_mant_cutt_T [37:0]  };
  logic [13:0] fangyuan19_S ;
  assign fangyuan19_S = 0 ;
  logic [39:0] di_mant_shift_R0 ;
  logic [39:0] di_mant_shift_X0 ;
  logic [39:0] di_mant_shift_C0 ;
  assign di_mant_shift_R0 = fangyuan19_R [79:40] ;
  assign di_mant_shift_X0 = fangyuan19_X [79:40] ;
  assign di_mant_shift_C0 = fangyuan19_C [79:40] ;
  logic [2:0] di_mant_cut_R0 ;
  logic [2:0] di_mant_cut_X0 ;
  logic [2:0] di_mant_cut_C0 ;
  assign di_mant_cut_R0 [2:1] = fangyuan19_R [39:38] ;
  assign di_mant_cut_X0 [2:1] = fangyuan19_X [39:38] ;
  assign di_mant_cut_C0 [2:1] = fangyuan19_C [39:38] ;
  assign { di_mant_cutt_R0 [39:38] } = 0;
  assign { di_mant_cutt_X0 [39:38] } = 0;
  assign { di_mant_cutt_C0 [39:38] } = 0;
  logic [39:0] di_mant_cutt_R1 ;
  logic [39:0] di_mant_cutt_X1 ;
  logic [39:0] di_mant_cutt_C1 ;
  assign di_mant_cutt_R1 [37:0] = fangyuan19_R [37:0] ;
  assign di_mant_cutt_X1 [37:0] = fangyuan19_X [37:0] ;
  assign di_mant_cutt_C1 [37:0] = fangyuan19_C [37:0] ;
  logic [79:0] fangyuan20;
  logic [79:0] fangyuan20_T ;
  logic [79:0] fangyuan20_R ;
  logic [79:0] fangyuan20_C ;
  logic [79:0] fangyuan20_X ;
  assign fangyuan20 = { di_mans, 44'b00000000000000000000000000000000000000000000 };
  assign fangyuan20_T = {  di_mans_T , 44'h0  };
  logic [13:0] fangyuan20_S ;
  assign fangyuan20_S = 0 ;
  logic [35:0] di_mans_R0 ;
  logic [35:0] di_mans_X0 ;
  logic [35:0] di_mans_C0 ;
  assign di_mans_R0 = fangyuan20_R [79:44] ;
  assign di_mans_X0 = fangyuan20_X [79:44] ;
  assign di_mans_C0 = fangyuan20_C [79:44] ;

 assign fangyuan19 = fangyuan20 >>> di_expo_shift;
 assign fangyuan19_S = 0 ;
 logic [79:0] fangyuan20_C0 ;
 logic [79:0] fangyuan20_R0 ;
 logic [79:0] fangyuan20_X0 ;
 logic [7:0] di_expo_shift_C1 ;
 logic [7:0] di_expo_shift_R1 ;
 logic [7:0] di_expo_shift_X1 ;
 assign fangyuan19_T = fangyuan20_T | di_expo_shift_T ;
 assign fangyuan20_C0 = fangyuan19_C ;
 assign fangyuan20_X0 = fangyuan19_X ;
 assign di_expo_shift_C1 = fangyuan19_C ;
 assign di_expo_shift_X1 = fangyuan19_X ;
 assign fangyuan20_R0 = fangyuan19_R | ( fangyuan19_C & di_expo_shift_T );
 assign di_expo_shift_R1 = fangyuan19_R | ( fangyuan19_C & fangyuan20_T );
  logic [79:0] fangyuan21;
  logic [79:0] fangyuan21_T ;
  logic [79:0] fangyuan21_R ;
  logic [79:0] fangyuan21_C ;
  logic [79:0] fangyuan21_X ;
  assign fangyuan21 = { oi_mant_shift, oi_mant_cut[2:1], oi_mant_cutt[37:0] };
  assign fangyuan21_T = {  oi_mant_shift_T , oi_mant_cut_T [2:1] , oi_mant_cutt_T [37:0]  };
  logic [13:0] fangyuan21_S ;
  assign fangyuan21_S = 0 ;
  logic [39:0] oi_mant_shift_R0 ;
  logic [39:0] oi_mant_shift_X0 ;
  logic [39:0] oi_mant_shift_C0 ;
  assign oi_mant_shift_R0 = fangyuan21_R [79:40] ;
  assign oi_mant_shift_X0 = fangyuan21_X [79:40] ;
  assign oi_mant_shift_C0 = fangyuan21_C [79:40] ;
  logic [2:0] oi_mant_cut_R0 ;
  logic [2:0] oi_mant_cut_X0 ;
  logic [2:0] oi_mant_cut_C0 ;
  assign oi_mant_cut_R0 [2:1] = fangyuan21_R [39:38] ;
  assign oi_mant_cut_X0 [2:1] = fangyuan21_X [39:38] ;
  assign oi_mant_cut_C0 [2:1] = fangyuan21_C [39:38] ;
  assign { oi_mant_cutt_R0 [39:38] } = 0;
  assign { oi_mant_cutt_X0 [39:38] } = 0;
  assign { oi_mant_cutt_C0 [39:38] } = 0;
  logic [39:0] oi_mant_cutt_R1 ;
  logic [39:0] oi_mant_cutt_X1 ;
  logic [39:0] oi_mant_cutt_C1 ;
  assign oi_mant_cutt_R1 [37:0] = fangyuan21_R [37:0] ;
  assign oi_mant_cutt_X1 [37:0] = fangyuan21_X [37:0] ;
  assign oi_mant_cutt_C1 [37:0] = fangyuan21_C [37:0] ;
  logic [79:0] fangyuan22;
  logic [79:0] fangyuan22_T ;
  logic [79:0] fangyuan22_R ;
  logic [79:0] fangyuan22_C ;
  logic [79:0] fangyuan22_X ;
  assign fangyuan22 = { oi_mant_ext, 40'b0000000000000000000000000000000000000000 };
  assign fangyuan22_T = {  oi_mant_ext_T , 40'h0  };
  logic [13:0] fangyuan22_S ;
  assign fangyuan22_S = 0 ;
  logic [39:0] oi_mant_ext_R0 ;
  logic [39:0] oi_mant_ext_X0 ;
  logic [39:0] oi_mant_ext_C0 ;
  assign oi_mant_ext_R0 = fangyuan22_R [79:40] ;
  assign oi_mant_ext_X0 = fangyuan22_X [79:40] ;
  assign oi_mant_ext_C0 = fangyuan22_C [79:40] ;

 assign fangyuan21 = fangyuan22 >>> oi_expo_shift;
 assign fangyuan21_S = 0 ;
 logic [79:0] fangyuan22_C0 ;
 logic [79:0] fangyuan22_R0 ;
 logic [79:0] fangyuan22_X0 ;
 logic [7:0] oi_expo_shift_C1 ;
 logic [7:0] oi_expo_shift_R1 ;
 logic [7:0] oi_expo_shift_X1 ;
 assign fangyuan21_T = fangyuan22_T | oi_expo_shift_T ;
 assign fangyuan22_C0 = fangyuan21_C ;
 assign fangyuan22_X0 = fangyuan21_X ;
 assign oi_expo_shift_C1 = fangyuan21_C ;
 assign oi_expo_shift_X1 = fangyuan21_X ;
 assign fangyuan22_R0 = fangyuan21_R | ( fangyuan21_C & oi_expo_shift_T );
 assign oi_expo_shift_R1 = fangyuan21_R | ( fangyuan21_C & fangyuan22_T );
  assign _025_[39:0] = mant_sum_round >>> mant_sum_carry_pos;
  assign _025__S = 0 ;
  logic [40:0] mant_sum_round_C0 ;
  logic [40:0] mant_sum_round_R0 ;
  logic [40:0] mant_sum_round_X0 ;
  logic [0:0] mant_sum_carry_pos_C1 ;
  logic [0:0] mant_sum_carry_pos_R1 ;
  logic [0:0] mant_sum_carry_pos_X1 ;
  assign _025__T [39:0] = mant_sum_round_T | mant_sum_carry_pos_T ;
  assign mant_sum_round_C0 = _025__C [39:0] ;
  assign mant_sum_round_X0 = _025__X [39:0] ;
  assign mant_sum_carry_pos_C1 = _025__C [39:0] ;
  assign mant_sum_carry_pos_X1 = _025__X [39:0] ;
  assign mant_sum_round_R0 = _025__R [39:0] | ( _025__C [39:0] & mant_sum_carry_pos_T );
  assign mant_sum_carry_pos_R1 = _025__R [39:0] | ( _025__C [39:0] & mant_sum_round_T );
 assign fp32_mant_nmlz_tmp = fp32_mant_round >>> fp32_mant_carry;
 assign fp32_mant_nmlz_tmp_S = 0 ;
 logic [24:0] fp32_mant_round_C0 ;
 logic [24:0] fp32_mant_round_R0 ;
 logic [24:0] fp32_mant_round_X0 ;
 logic [0:0] fp32_mant_carry_C1 ;
 logic [0:0] fp32_mant_carry_R1 ;
 logic [0:0] fp32_mant_carry_X1 ;
 assign fp32_mant_nmlz_tmp_T = fp32_mant_round_T | fp32_mant_carry_T ;
 assign fp32_mant_round_C0 = fp32_mant_nmlz_tmp_C ;
 assign fp32_mant_round_X0 = fp32_mant_nmlz_tmp_X ;
 assign fp32_mant_carry_C1 = fp32_mant_nmlz_tmp_C ;
 assign fp32_mant_carry_X1 = fp32_mant_nmlz_tmp_X ;
 assign fp32_mant_round_R0 = fp32_mant_nmlz_tmp_R | ( fp32_mant_nmlz_tmp_C & fp32_mant_carry_T );
 assign fp32_mant_carry_R1 = fp32_mant_nmlz_tmp_R | ( fp32_mant_nmlz_tmp_C & fp32_mant_round_T );
  assign di_expm = _014_ - di_lead_num;
  assign di_expm_S = 0 ;
  logic [6:0] _014__C0 ;
  logic [6:0] _014__R0 ;
  logic [6:0] _014__X0 ;
  logic [5:0] di_lead_num_C1 ;
  logic [5:0] di_lead_num_R1 ;
  logic [5:0] di_lead_num_X1 ;
  assign di_expm_T = _014__T | di_lead_num_T ;
  assign _014__C0 = di_expm_C ;
  assign _014__X0 = di_expm_X ;
  assign di_lead_num_C1 = di_expm_C ;
  assign di_lead_num_X1 = di_expm_X ;
  assign _014__R0 = di_expm_R | ( di_expm_C & di_lead_num_T );
  assign di_lead_num_R1 = di_expm_R | ( di_expm_C & _014__T );
  assign di_expo_shift = max_expo - di_expo;
  assign di_expo_shift_S = 0 ;
  logic [7:0] max_expo_C1 ;
  logic [7:0] max_expo_R1 ;
  logic [7:0] max_expo_X1 ;
  logic [7:0] di_expo_C2 ;
  logic [7:0] di_expo_R2 ;
  logic [7:0] di_expo_X2 ;
  assign di_expo_shift_T = max_expo_T | di_expo_T ;
  assign max_expo_C1 = di_expo_shift_C ;
  assign max_expo_X1 = di_expo_shift_X ;
  assign di_expo_C2 = di_expo_shift_C ;
  assign di_expo_X2 = di_expo_shift_X ;
  assign max_expo_R1 = di_expo_shift_R | ( di_expo_shift_C & di_expo_T );
  assign di_expo_R2 = di_expo_shift_R | ( di_expo_shift_C & max_expo_T );
  assign oi_expo_shift = max_expo - oi_expo;
  assign oi_expo_shift_S = 0 ;
  logic [7:0] max_expo_C2 ;
  logic [7:0] max_expo_R2 ;
  logic [7:0] max_expo_X2 ;
  logic [7:0] oi_expo_C2 ;
  logic [7:0] oi_expo_R2 ;
  logic [7:0] oi_expo_X2 ;
  assign oi_expo_shift_T = max_expo_T | oi_expo_T ;
  assign max_expo_C2 = oi_expo_shift_C ;
  assign max_expo_X2 = oi_expo_shift_X ;
  assign oi_expo_C2 = oi_expo_shift_C ;
  assign oi_expo_X2 = oi_expo_shift_X ;
  assign max_expo_R2 = oi_expo_shift_R | ( oi_expo_shift_C & oi_expo_T );
  assign oi_expo_R2 = oi_expo_shift_R | ( oi_expo_shift_C & max_expo_T );
  assign expo_nrml = _015_ - msum_lead_num;
  assign expo_nrml_S = 0 ;
  logic [7:0] _015__C0 ;
  logic [7:0] _015__R0 ;
  logic [7:0] _015__X0 ;
  logic [5:0] msum_lead_num_C1 ;
  logic [5:0] msum_lead_num_R1 ;
  logic [5:0] msum_lead_num_X1 ;
  assign expo_nrml_T = _015__T | msum_lead_num_T ;
  assign _015__C0 = expo_nrml_C ;
  assign _015__X0 = expo_nrml_X ;
  assign msum_lead_num_C1 = expo_nrml_C ;
  assign msum_lead_num_X1 = expo_nrml_X ;
  assign _015__R0 = expo_nrml_R | ( expo_nrml_C & msum_lead_num_T );
  assign msum_lead_num_R1 = expo_nrml_R | ( expo_nrml_C & _015__T );
  logic [6:0] fangyuan23;
  logic [6:0] fangyuan23_T ;
  logic [6:0] fangyuan23_R ;
  logic [6:0] fangyuan23_C ;
  logic [6:0] fangyuan23_X ;
  assign fangyuan23 = { _049_[31], _049_[5:0] };
  assign fangyuan23_T = {  _049__T [31] , _049__T [5:0]  };
  logic [13:0] fangyuan23_S ;
  assign fangyuan23_S = 0 ;
  assign { _049__R25 [6], _049__R25 [7], _049__R25 [8], _049__R25 [9], _049__R25 [10], _049__R25 [11], _049__R25 [12], _049__R25 [13], _049__R25 [14], _049__R25 [15], _049__R25 [16], _049__R25 [17], _049__R25 [18], _049__R25 [19], _049__R25 [20], _049__R25 [21], _049__R25 [22], _049__R25 [23], _049__R25 [24], _049__R25 [25], _049__R25 [26], _049__R25 [27], _049__R25 [28], _049__R25 [29], _049__R25 [30] } = 0;
  assign { _049__X25 [6], _049__X25 [7], _049__X25 [8], _049__X25 [9], _049__X25 [10], _049__X25 [11], _049__X25 [12], _049__X25 [13], _049__X25 [14], _049__X25 [15], _049__X25 [16], _049__X25 [17], _049__X25 [18], _049__X25 [19], _049__X25 [20], _049__X25 [21], _049__X25 [22], _049__X25 [23], _049__X25 [24], _049__X25 [25], _049__X25 [26], _049__X25 [27], _049__X25 [28], _049__X25 [29], _049__X25 [30] } = 0;
  assign { _049__C25 [6], _049__C25 [7], _049__C25 [8], _049__C25 [9], _049__C25 [10], _049__C25 [11], _049__C25 [12], _049__C25 [13], _049__C25 [14], _049__C25 [15], _049__C25 [16], _049__C25 [17], _049__C25 [18], _049__C25 [19], _049__C25 [20], _049__C25 [21], _049__C25 [22], _049__C25 [23], _049__C25 [24], _049__C25 [25], _049__C25 [26], _049__C25 [27], _049__C25 [28], _049__C25 [29], _049__C25 [30] } = 0;
  logic [31:0] _049__R26 ;
  logic [31:0] _049__X26 ;
  logic [31:0] _049__C26 ;
  assign _049__R26 [31:31] = fangyuan23_R [6:6] ;
  assign _049__X26 [31:31] = fangyuan23_X [6:6] ;
  assign _049__C26 [31:31] = fangyuan23_C [6:6] ;
  assign _049__R26 [5:0] = fangyuan23_R [5:0] ;
  assign _049__X26 [5:0] = fangyuan23_X [5:0] ;
  assign _049__C26 [5:0] = fangyuan23_C [5:0] ;

  assign fangyuan23 = msum_lead_num - 1'b1;
  assign fangyuan23_S = 0 ;
  logic [5:0] msum_lead_num_C2 ;
  logic [5:0] msum_lead_num_R2 ;
  logic [5:0] msum_lead_num_X2 ;
  assign fangyuan23_T = msum_lead_num_T ;
  assign msum_lead_num_C2 = fangyuan23_C ;
  assign msum_lead_num_R2 = fangyuan23_R ;
  assign msum_lead_num_X2 = fangyuan23_X ;
  assign partial_expo_nmlz_neg = expo_trans - mant_sum_carry_neg;
  assign partial_expo_nmlz_neg_S = 0 ;
  logic [7:0] expo_trans_C2 ;
  logic [7:0] expo_trans_R2 ;
  logic [7:0] expo_trans_X2 ;
  logic [0:0] mant_sum_carry_neg_C0 ;
  logic [0:0] mant_sum_carry_neg_R0 ;
  logic [0:0] mant_sum_carry_neg_X0 ;
  assign partial_expo_nmlz_neg_T = expo_trans_T | mant_sum_carry_neg_T ;
  assign expo_trans_C2 = partial_expo_nmlz_neg_C ;
  assign expo_trans_X2 = partial_expo_nmlz_neg_X ;
  assign mant_sum_carry_neg_C0 = partial_expo_nmlz_neg_C ;
  assign mant_sum_carry_neg_X0 = partial_expo_nmlz_neg_X ;
  assign expo_trans_R2 = partial_expo_nmlz_neg_R | ( partial_expo_nmlz_neg_C & mant_sum_carry_neg_T );
  assign mant_sum_carry_neg_R0 = partial_expo_nmlz_neg_R | ( partial_expo_nmlz_neg_C & expo_trans_T );
  assign in_mask_op = in_op_valid ? in_op : 48'b000000000000000000000000000000000000000000000000;
  logic [0:0] in_op_valid_C0 ;
  logic [0:0] in_op_valid_R0 ;
  logic [0:0] in_op_valid_X0 ;
  assign in_op_valid_C0 = | in_mask_op_C ;
  assign in_op_valid_X0 = | in_mask_op_X ;
  logic [47:0] in_op_C0 ;
  logic [47:0] in_op_R0 ;
  logic [47:0] in_op_X0 ;
  assign in_op_C0 = { 48{ in_op_valid }} ;
  assign in_op_R0 = { 48{ in_op_valid }} & ( in_mask_op_R | ( { 48{ in_op_valid_T  }} & in_mask_op_C ));
  assign in_op_X0 = { 48{ in_op_valid }} & in_mask_op_X ;
  assign in_mask_op_T = in_op_valid ? ( { 48{ | in_op_valid_T  }} | in_op_T ) : { 48{ | in_op_valid_T  }};
  assign in_mask_op_S = in_op_valid ? in_op_S : in_op_valid_S ;
  assign in_op_valid_R0 = ( | (in_mask_op_R | ( { 48{ in_op_valid }} & in_op_T & in_mask_op_C ))) && in_op != 48'b000000000000000000000000000000000000000000000000 ;
  logic [35:0] fangyuan24;
  logic [35:0] fangyuan24_T ;
  logic [35:0] fangyuan24_R ;
  logic [35:0] fangyuan24_C ;
  logic [35:0] fangyuan24_X ;
  assign fangyuan24 = { in_data[37:27], 25'b0000000000000000000000000 };
  assign fangyuan24_T = {  in_data_T [37:27] , 25'h0  };
  logic [13:0] fangyuan24_S ;
  assign fangyuan24_S = 0 ;
  assign { in_data_R2 [43:36] } = 0;
  assign { in_data_X2 [43:36] } = 0;
  assign { in_data_C2 [43:36] } = 0;
  logic [43:0] in_data_R3 ;
  logic [43:0] in_data_X3 ;
  logic [43:0] in_data_C3 ;
  assign in_data_R3 [37:27] = fangyuan24_R [35:25] ;
  assign in_data_X3 [37:27] = fangyuan24_X [35:25] ;
  assign in_data_C3 [37:27] = fangyuan24_C [35:25] ;

  assign _050_ = di_nan ? fangyuan24 : di_manm;
  logic [0:0] di_nan_C1 ;
  logic [0:0] di_nan_R1 ;
  logic [0:0] di_nan_X1 ;
  assign di_nan_C1 = | _050__C ;
  assign di_nan_X1 = | _050__X ;
  assign _050__T = di_nan ? ( { 36{ di_nan_T  }} | fangyuan24_T ) : ( { 36{ di_nan_T  }} | di_manm_T );
  assign _050__S = di_nan ? fangyuan24_S : di_manm_S ;
  assign di_nan_R1 = ( | (_050__R | ( _050__C & ( { 36{ di_nan }} & fangyuan24_T | { 36{ !di_nan }} & di_manm_T )))) && fangyuan24 != di_manm ;
  logic [35:0] fangyuan24_C0 ;
  logic [35:0] fangyuan24_R0 ;
  logic [35:0] fangyuan24_X0 ;
  assign fangyuan24_C0 = { 36{ di_nan }} ;
  assign fangyuan24_R0 = { 36{ di_nan }} & ( _050__R | ( { 36{ di_nan_T  }} & _050__C ));
  assign fangyuan24_X0 = { 36{ di_nan }} & _050__X ;
  logic [35:0] di_manm_C0 ;
  logic [35:0] di_manm_R0 ;
  logic [35:0] di_manm_X0 ;
  assign di_manm_C0 = { 36{ !di_nan }} ;
  assign di_manm_R0 = { 36{ !di_nan }} & ( _050__R | ( { 36{ di_nan_T  }} & _050__C ));
  assign di_manm_X0 = { 36{ !di_nan }} & _050__X ;
  assign di_mans = oi_nan ? 36'b000000000000000000000000000000000000 : _050_;
  logic [0:0] oi_nan_C1 ;
  logic [0:0] oi_nan_R1 ;
  logic [0:0] oi_nan_X1 ;
  assign oi_nan_C1 = | di_mans_C ;
  assign oi_nan_X1 = | di_mans_X ;
  logic [35:0] _050__C0 ;
  logic [35:0] _050__R0 ;
  logic [35:0] _050__X0 ;
  assign _050__C0 = { 36{ !oi_nan }};
  assign _050__R0 = { 36{ !oi_nan }} & ( di_mans_R | ( { 36{ oi_nan_T  }} & di_mans_C ));
  assign _050__X0 = { 36{ !oi_nan }} & di_mans_X ;
  assign di_mans_T = oi_nan ? { 36{ | oi_nan_T  }} : ( { 36{ | oi_nan_T  }} | _050__T );
  assign di_mans_S = oi_nan ? oi_nan_S : _050__S ;
  assign oi_nan_R1 = ( | (di_mans_R | ( { 36{ !oi_nan }} & _050__T & di_mans_C ))) && 36'b000000000000000000000000000000000000 != _050_ ;
  assign _051_ = di_nan ? 40'b0000000000000000000000000000000000000000 : in_mask_op[39:0];
  logic [0:0] di_nan_C2 ;
  logic [0:0] di_nan_R2 ;
  logic [0:0] di_nan_X2 ;
  assign di_nan_C2 = | _051__C ;
  assign di_nan_X2 = | _051__X ;
  logic [47:0] in_mask_op_C1 ;
  logic [47:0] in_mask_op_R1 ;
  logic [47:0] in_mask_op_X1 ;
  assign in_mask_op_C1 [39:0] = { 40{ !di_nan }};
  assign in_mask_op_R1 [39:0] = { 40{ !di_nan }} & ( _051__R | ( { 40{ di_nan_T  }} & _051__C ));
  assign in_mask_op_X1 [39:0] = { 40{ !di_nan }} & _051__X ;
  assign _051__T = di_nan ? { 40{ | di_nan_T  }} : ( { 40{ | di_nan_T  }} | in_mask_op_T [39:0] );
  assign _051__S = di_nan ? di_nan_S : in_mask_op_S ;
  assign di_nan_R2 = ( | (_051__R | ( { 40{ !di_nan }} & in_mask_op_T [39:0] & _051__C ))) && 40'b0000000000000000000000000000000000000000 != in_mask_op[39:0] ;
  logic [39:0] fangyuan25;
  logic [39:0] fangyuan25_T ;
  logic [39:0] fangyuan25_R ;
  logic [39:0] fangyuan25_C ;
  logic [39:0] fangyuan25_X ;
  assign fangyuan25 = { in_mask_op[39:29], 29'b00000000000000000000000000000 };
  assign fangyuan25_T = {  in_mask_op_T [39:29] , 29'h0  };
  logic [13:0] fangyuan25_S ;
  assign fangyuan25_S = 0 ;
  assign { in_mask_op_R1 [47:40] } = 0;
  assign { in_mask_op_X1 [47:40] } = 0;
  assign { in_mask_op_C1 [47:40] } = 0;
  logic [47:0] in_mask_op_R2 ;
  logic [47:0] in_mask_op_X2 ;
  logic [47:0] in_mask_op_C2 ;
  assign in_mask_op_R2 [39:29] = fangyuan25_R [39:29] ;
  assign in_mask_op_X2 [39:29] = fangyuan25_X [39:29] ;
  assign in_mask_op_C2 [39:29] = fangyuan25_C [39:29] ;

  assign oi_mant_ext = oi_nan ? fangyuan25 : _051_;
  logic [0:0] oi_nan_C2 ;
  logic [0:0] oi_nan_R2 ;
  logic [0:0] oi_nan_X2 ;
  assign oi_nan_C2 = | oi_mant_ext_C ;
  assign oi_nan_X2 = | oi_mant_ext_X ;
  assign oi_mant_ext_T = oi_nan ? ( { 40{ oi_nan_T  }} | fangyuan25_T ) : ( { 40{ oi_nan_T  }} | _051__T );
  assign oi_mant_ext_S = oi_nan ? fangyuan25_S : _051__S ;
  assign oi_nan_R2 = ( | (oi_mant_ext_R | ( oi_mant_ext_C & ( { 40{ oi_nan }} & fangyuan25_T | { 40{ !oi_nan }} & _051__T )))) && fangyuan25 != _051_ ;
  logic [39:0] fangyuan25_C0 ;
  logic [39:0] fangyuan25_R0 ;
  logic [39:0] fangyuan25_X0 ;
  assign fangyuan25_C0 = { 40{ oi_nan }} ;
  assign fangyuan25_R0 = { 40{ oi_nan }} & ( oi_mant_ext_R | ( { 40{ oi_nan_T  }} & oi_mant_ext_C ));
  assign fangyuan25_X0 = { 40{ oi_nan }} & oi_mant_ext_X ;
  logic [39:0] _051__C0 ;
  logic [39:0] _051__R0 ;
  logic [39:0] _051__X0 ;
  assign _051__C0 = { 40{ !oi_nan }} ;
  assign _051__R0 = { 40{ !oi_nan }} & ( oi_mant_ext_R | ( { 40{ oi_nan_T  }} & oi_mant_ext_C ));
  assign _051__X0 = { 40{ !oi_nan }} & oi_mant_ext_X ;
  assign _026_[6:0] = _042_ ? di_expm : 7'b0000000;
  logic [0:0] _042__C0 ;
  logic [0:0] _042__R0 ;
  logic [0:0] _042__X0 ;
  assign _042__C0 = | _026__C [6:0] ;
  assign _042__X0 = | _026__X [6:0] ;
  logic [6:0] di_expm_C0 ;
  logic [6:0] di_expm_R0 ;
  logic [6:0] di_expm_X0 ;
  assign di_expm_C0 = { 7{ _042_ }} ;
  assign di_expm_R0 = { 7{ _042_ }} & ( _026__R [6:0] | ( { 7{ _042__T  }} & _026__C [6:0] ));
  assign di_expm_X0 = { 7{ _042_ }} & _026__X [6:0] ;
  assign _026__T [6:0] = _042_ ? ( { 7{ | _042__T  }} | di_expm_T ) : { 7{ | _042__T  }};
  assign _026__S = _042_ ? di_expm_S : _042__S ;
  assign _042__R0 = ( | (_026__R [6:0] | ( { 7{ _042_ }} & di_expm_T & _026__C [6:0] ))) && di_expm != 7'b0000000 ;
  logic [7:0] fangyuan26;
  logic [7:0] fangyuan26_T ;
  logic [7:0] fangyuan26_R ;
  logic [7:0] fangyuan26_C ;
  logic [7:0] fangyuan26_X ;
  assign fangyuan26 = { 1'b0, _026_[6:0] };
  assign fangyuan26_T = {  1'h0 , _026__T [6:0]  };
  logic [13:0] fangyuan26_S ;
  assign fangyuan26_S = 0 ;
  logic [7:0] _026__R0 ;
  logic [7:0] _026__X0 ;
  logic [7:0] _026__C0 ;
  assign _026__R0 [6:0] = fangyuan26_R [6:0] ;
  assign _026__X0 [6:0] = fangyuan26_X [6:0] ;
  assign _026__C0 [6:0] = fangyuan26_C [6:0] ;

  assign di_expo = in_nan ? 8'b11111111 : fangyuan26;
  logic [0:0] in_nan_C2 ;
  logic [0:0] in_nan_R2 ;
  logic [0:0] in_nan_X2 ;
  assign in_nan_C2 = | di_expo_C ;
  assign in_nan_X2 = | di_expo_X ;
  logic [7:0] fangyuan26_C0 ;
  logic [7:0] fangyuan26_R0 ;
  logic [7:0] fangyuan26_X0 ;
  assign fangyuan26_C0 = { 8{ !in_nan }};
  assign fangyuan26_R0 = { 8{ !in_nan }} & ( di_expo_R | ( { 8{ in_nan_T  }} & di_expo_C ));
  assign fangyuan26_X0 = { 8{ !in_nan }} & di_expo_X ;
  assign di_expo_T = in_nan ? { 8{ | in_nan_T  }} : ( { 8{ | in_nan_T  }} | fangyuan26_T );
  assign di_expo_S = in_nan ? in_nan_S : fangyuan26_S ;
  assign in_nan_R2 = ( | (di_expo_R | ( { 8{ !in_nan }} & fangyuan26_T & di_expo_C ))) && 8'b11111111 != fangyuan26 ;
  assign _052_ = _043_ ? in_mask_op[47:40] : 8'b00000000;
  logic [0:0] _043__C0 ;
  logic [0:0] _043__R0 ;
  logic [0:0] _043__X0 ;
  assign _043__C0 = | _052__C ;
  assign _043__X0 = | _052__X ;
  assign in_mask_op_C2 [47:40] = { 8{ _043_ }} ;
  assign in_mask_op_R2 [47:40] = { 8{ _043_ }} & ( _052__R | ( { 8{ _043__T  }} & _052__C ));
  assign in_mask_op_X2 [47:40] = { 8{ _043_ }} & _052__X ;
  assign _052__T = _043_ ? ( { 8{ | _043__T  }} | in_mask_op_T [47:40] ) : { 8{ | _043__T  }};
  assign _052__S = _043_ ? in_mask_op_S : _043__S ;
  assign _043__R0 = ( | (_052__R | ( { 8{ _043_ }} & in_mask_op_T [47:40] & _052__C ))) && in_mask_op[47:40] != 8'b00000000 ;
  assign oi_expo = in_nan ? 8'b11111111 : _052_;
  logic [0:0] in_nan_C3 ;
  logic [0:0] in_nan_R3 ;
  logic [0:0] in_nan_X3 ;
  assign in_nan_C3 = | oi_expo_C ;
  assign in_nan_X3 = | oi_expo_X ;
  logic [7:0] _052__C0 ;
  logic [7:0] _052__R0 ;
  logic [7:0] _052__X0 ;
  assign _052__C0 = { 8{ !in_nan }};
  assign _052__R0 = { 8{ !in_nan }} & ( oi_expo_R | ( { 8{ in_nan_T  }} & oi_expo_C ));
  assign _052__X0 = { 8{ !in_nan }} & oi_expo_X ;
  assign oi_expo_T = in_nan ? { 8{ | in_nan_T  }} : ( { 8{ | in_nan_T  }} | _052__T );
  assign oi_expo_S = in_nan ? in_nan_S : _052__S ;
  assign in_nan_R3 = ( | (oi_expo_R | ( { 8{ !in_nan }} & _052__T & oi_expo_C ))) && 8'b11111111 != _052_ ;
  assign max_expo = _029_ ? di_expo : oi_expo;
  logic [0:0] _029__C0 ;
  logic [0:0] _029__R0 ;
  logic [0:0] _029__X0 ;
  assign _029__C0 = | max_expo_C ;
  assign _029__X0 = | max_expo_X ;
  assign max_expo_T = _029_ ? ( { 8{ _029__T  }} | di_expo_T ) : ( { 8{ _029__T  }} | oi_expo_T );
  assign max_expo_S = _029_ ? di_expo_S : oi_expo_S ;
  assign _029__R0 = ( | (max_expo_R | ( max_expo_C & ( { 8{ _029_ }} & di_expo_T | { 8{ !_029_ }} & oi_expo_T )))) && di_expo != oi_expo ;
  logic [7:0] di_expo_C3 ;
  logic [7:0] di_expo_R3 ;
  logic [7:0] di_expo_X3 ;
  assign di_expo_C3 = { 8{ _029_ }} ;
  assign di_expo_R3 = { 8{ _029_ }} & ( max_expo_R | ( { 8{ _029__T  }} & max_expo_C ));
  assign di_expo_X3 = { 8{ _029_ }} & max_expo_X ;
  logic [7:0] oi_expo_C3 ;
  logic [7:0] oi_expo_R3 ;
  logic [7:0] oi_expo_X3 ;
  assign oi_expo_C3 = { 8{ !_029_ }} ;
  assign oi_expo_R3 = { 8{ !_029_ }} & ( max_expo_R | ( { 8{ _029__T  }} & max_expo_C ));
  assign oi_expo_X3 = { 8{ !_029_ }} & max_expo_X ;
  logic [39:0] fangyuan27;
  logic [39:0] fangyuan27_T ;
  logic [39:0] fangyuan27_R ;
  logic [39:0] fangyuan27_C ;
  logic [39:0] fangyuan27_X ;
  assign fangyuan27 = { in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37], in_data[37] };
  assign fangyuan27_T = {  in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37] , in_data_T [37]  };
  logic [13:0] fangyuan27_S ;
  assign fangyuan27_S = 0 ;
  assign { in_data_R3 [0], in_data_R3 [1], in_data_R3 [2], in_data_R3 [3], in_data_R3 [4], in_data_R3 [5], in_data_R3 [6], in_data_R3 [7], in_data_R3 [8], in_data_R3 [9], in_data_R3 [10], in_data_R3 [11], in_data_R3 [12], in_data_R3 [13], in_data_R3 [14], in_data_R3 [15], in_data_R3 [16], in_data_R3 [17], in_data_R3 [18], in_data_R3 [19], in_data_R3 [20], in_data_R3 [21], in_data_R3 [22], in_data_R3 [23], in_data_R3 [24], in_data_R3 [25], in_data_R3 [26], in_data_R3 [43:38] } = 0;
  assign { in_data_X3 [0], in_data_X3 [1], in_data_X3 [2], in_data_X3 [3], in_data_X3 [4], in_data_X3 [5], in_data_X3 [6], in_data_X3 [7], in_data_X3 [8], in_data_X3 [9], in_data_X3 [10], in_data_X3 [11], in_data_X3 [12], in_data_X3 [13], in_data_X3 [14], in_data_X3 [15], in_data_X3 [16], in_data_X3 [17], in_data_X3 [18], in_data_X3 [19], in_data_X3 [20], in_data_X3 [21], in_data_X3 [22], in_data_X3 [23], in_data_X3 [24], in_data_X3 [25], in_data_X3 [26], in_data_X3 [43:38] } = 0;
  assign { in_data_C3 [0], in_data_C3 [1], in_data_C3 [2], in_data_C3 [3], in_data_C3 [4], in_data_C3 [5], in_data_C3 [6], in_data_C3 [7], in_data_C3 [8], in_data_C3 [9], in_data_C3 [10], in_data_C3 [11], in_data_C3 [12], in_data_C3 [13], in_data_C3 [14], in_data_C3 [15], in_data_C3 [16], in_data_C3 [17], in_data_C3 [18], in_data_C3 [19], in_data_C3 [20], in_data_C3 [21], in_data_C3 [22], in_data_C3 [23], in_data_C3 [24], in_data_C3 [25], in_data_C3 [26], in_data_C3 [43:38] } = 0;
  logic [43:0] in_data_R4 ;
  logic [43:0] in_data_X4 ;
  logic [43:0] in_data_C4 ;
  assign in_data_R4 [37:37] = fangyuan27_R [39:39] ;
  assign in_data_X4 [37:37] = fangyuan27_X [39:39] ;
  assign in_data_C4 [37:37] = fangyuan27_C [39:39] ;
  assign { in_data_R4 [0], in_data_R4 [1], in_data_R4 [2], in_data_R4 [3], in_data_R4 [4], in_data_R4 [5], in_data_R4 [6], in_data_R4 [7], in_data_R4 [8], in_data_R4 [9], in_data_R4 [10], in_data_R4 [11], in_data_R4 [12], in_data_R4 [13], in_data_R4 [14], in_data_R4 [15], in_data_R4 [16], in_data_R4 [17], in_data_R4 [18], in_data_R4 [19], in_data_R4 [20], in_data_R4 [21], in_data_R4 [22], in_data_R4 [23], in_data_R4 [24], in_data_R4 [25], in_data_R4 [26], in_data_R4 [27], in_data_R4 [28], in_data_R4 [29], in_data_R4 [30], in_data_R4 [31], in_data_R4 [32], in_data_R4 [33], in_data_R4 [34], in_data_R4 [35], in_data_R4 [36], in_data_R4 [43:38] } = 0;
  assign { in_data_X4 [0], in_data_X4 [1], in_data_X4 [2], in_data_X4 [3], in_data_X4 [4], in_data_X4 [5], in_data_X4 [6], in_data_X4 [7], in_data_X4 [8], in_data_X4 [9], in_data_X4 [10], in_data_X4 [11], in_data_X4 [12], in_data_X4 [13], in_data_X4 [14], in_data_X4 [15], in_data_X4 [16], in_data_X4 [17], in_data_X4 [18], in_data_X4 [19], in_data_X4 [20], in_data_X4 [21], in_data_X4 [22], in_data_X4 [23], in_data_X4 [24], in_data_X4 [25], in_data_X4 [26], in_data_X4 [27], in_data_X4 [28], in_data_X4 [29], in_data_X4 [30], in_data_X4 [31], in_data_X4 [32], in_data_X4 [33], in_data_X4 [34], in_data_X4 [35], in_data_X4 [36], in_data_X4 [43:38] } = 0;
  assign { in_data_C4 [0], in_data_C4 [1], in_data_C4 [2], in_data_C4 [3], in_data_C4 [4], in_data_C4 [5], in_data_C4 [6], in_data_C4 [7], in_data_C4 [8], in_data_C4 [9], in_data_C4 [10], in_data_C4 [11], in_data_C4 [12], in_data_C4 [13], in_data_C4 [14], in_data_C4 [15], in_data_C4 [16], in_data_C4 [17], in_data_C4 [18], in_data_C4 [19], in_data_C4 [20], in_data_C4 [21], in_data_C4 [22], in_data_C4 [23], in_data_C4 [24], in_data_C4 [25], in_data_C4 [26], in_data_C4 [27], in_data_C4 [28], in_data_C4 [29], in_data_C4 [30], in_data_C4 [31], in_data_C4 [32], in_data_C4 [33], in_data_C4 [34], in_data_C4 [35], in_data_C4 [36], in_data_C4 [43:38] } = 0;
  logic [43:0] in_data_R5 ;
  logic [43:0] in_data_X5 ;
  logic [43:0] in_data_C5 ;
  assign in_data_R5 [37:37] = fangyuan27_R [38:38] ;
  assign in_data_X5 [37:37] = fangyuan27_X [38:38] ;
  assign in_data_C5 [37:37] = fangyuan27_C [38:38] ;
  assign { in_data_R5 [0], in_data_R5 [1], in_data_R5 [2], in_data_R5 [3], in_data_R5 [4], in_data_R5 [5], in_data_R5 [6], in_data_R5 [7], in_data_R5 [8], in_data_R5 [9], in_data_R5 [10], in_data_R5 [11], in_data_R5 [12], in_data_R5 [13], in_data_R5 [14], in_data_R5 [15], in_data_R5 [16], in_data_R5 [17], in_data_R5 [18], in_data_R5 [19], in_data_R5 [20], in_data_R5 [21], in_data_R5 [22], in_data_R5 [23], in_data_R5 [24], in_data_R5 [25], in_data_R5 [26], in_data_R5 [27], in_data_R5 [28], in_data_R5 [29], in_data_R5 [30], in_data_R5 [31], in_data_R5 [32], in_data_R5 [33], in_data_R5 [34], in_data_R5 [35], in_data_R5 [36], in_data_R5 [43:38] } = 0;
  assign { in_data_X5 [0], in_data_X5 [1], in_data_X5 [2], in_data_X5 [3], in_data_X5 [4], in_data_X5 [5], in_data_X5 [6], in_data_X5 [7], in_data_X5 [8], in_data_X5 [9], in_data_X5 [10], in_data_X5 [11], in_data_X5 [12], in_data_X5 [13], in_data_X5 [14], in_data_X5 [15], in_data_X5 [16], in_data_X5 [17], in_data_X5 [18], in_data_X5 [19], in_data_X5 [20], in_data_X5 [21], in_data_X5 [22], in_data_X5 [23], in_data_X5 [24], in_data_X5 [25], in_data_X5 [26], in_data_X5 [27], in_data_X5 [28], in_data_X5 [29], in_data_X5 [30], in_data_X5 [31], in_data_X5 [32], in_data_X5 [33], in_data_X5 [34], in_data_X5 [35], in_data_X5 [36], in_data_X5 [43:38] } = 0;
  assign { in_data_C5 [0], in_data_C5 [1], in_data_C5 [2], in_data_C5 [3], in_data_C5 [4], in_data_C5 [5], in_data_C5 [6], in_data_C5 [7], in_data_C5 [8], in_data_C5 [9], in_data_C5 [10], in_data_C5 [11], in_data_C5 [12], in_data_C5 [13], in_data_C5 [14], in_data_C5 [15], in_data_C5 [16], in_data_C5 [17], in_data_C5 [18], in_data_C5 [19], in_data_C5 [20], in_data_C5 [21], in_data_C5 [22], in_data_C5 [23], in_data_C5 [24], in_data_C5 [25], in_data_C5 [26], in_data_C5 [27], in_data_C5 [28], in_data_C5 [29], in_data_C5 [30], in_data_C5 [31], in_data_C5 [32], in_data_C5 [33], in_data_C5 [34], in_data_C5 [35], in_data_C5 [36], in_data_C5 [43:38] } = 0;
  logic [43:0] in_data_R6 ;
  logic [43:0] in_data_X6 ;
  logic [43:0] in_data_C6 ;
  assign in_data_R6 [37:37] = fangyuan27_R [37:37] ;
  assign in_data_X6 [37:37] = fangyuan27_X [37:37] ;
  assign in_data_C6 [37:37] = fangyuan27_C [37:37] ;
  assign { in_data_R6 [0], in_data_R6 [1], in_data_R6 [2], in_data_R6 [3], in_data_R6 [4], in_data_R6 [5], in_data_R6 [6], in_data_R6 [7], in_data_R6 [8], in_data_R6 [9], in_data_R6 [10], in_data_R6 [11], in_data_R6 [12], in_data_R6 [13], in_data_R6 [14], in_data_R6 [15], in_data_R6 [16], in_data_R6 [17], in_data_R6 [18], in_data_R6 [19], in_data_R6 [20], in_data_R6 [21], in_data_R6 [22], in_data_R6 [23], in_data_R6 [24], in_data_R6 [25], in_data_R6 [26], in_data_R6 [27], in_data_R6 [28], in_data_R6 [29], in_data_R6 [30], in_data_R6 [31], in_data_R6 [32], in_data_R6 [33], in_data_R6 [34], in_data_R6 [35], in_data_R6 [36], in_data_R6 [43:38] } = 0;
  assign { in_data_X6 [0], in_data_X6 [1], in_data_X6 [2], in_data_X6 [3], in_data_X6 [4], in_data_X6 [5], in_data_X6 [6], in_data_X6 [7], in_data_X6 [8], in_data_X6 [9], in_data_X6 [10], in_data_X6 [11], in_data_X6 [12], in_data_X6 [13], in_data_X6 [14], in_data_X6 [15], in_data_X6 [16], in_data_X6 [17], in_data_X6 [18], in_data_X6 [19], in_data_X6 [20], in_data_X6 [21], in_data_X6 [22], in_data_X6 [23], in_data_X6 [24], in_data_X6 [25], in_data_X6 [26], in_data_X6 [27], in_data_X6 [28], in_data_X6 [29], in_data_X6 [30], in_data_X6 [31], in_data_X6 [32], in_data_X6 [33], in_data_X6 [34], in_data_X6 [35], in_data_X6 [36], in_data_X6 [43:38] } = 0;
  assign { in_data_C6 [0], in_data_C6 [1], in_data_C6 [2], in_data_C6 [3], in_data_C6 [4], in_data_C6 [5], in_data_C6 [6], in_data_C6 [7], in_data_C6 [8], in_data_C6 [9], in_data_C6 [10], in_data_C6 [11], in_data_C6 [12], in_data_C6 [13], in_data_C6 [14], in_data_C6 [15], in_data_C6 [16], in_data_C6 [17], in_data_C6 [18], in_data_C6 [19], in_data_C6 [20], in_data_C6 [21], in_data_C6 [22], in_data_C6 [23], in_data_C6 [24], in_data_C6 [25], in_data_C6 [26], in_data_C6 [27], in_data_C6 [28], in_data_C6 [29], in_data_C6 [30], in_data_C6 [31], in_data_C6 [32], in_data_C6 [33], in_data_C6 [34], in_data_C6 [35], in_data_C6 [36], in_data_C6 [43:38] } = 0;
  logic [43:0] in_data_R7 ;
  logic [43:0] in_data_X7 ;
  logic [43:0] in_data_C7 ;
  assign in_data_R7 [37:37] = fangyuan27_R [36:36] ;
  assign in_data_X7 [37:37] = fangyuan27_X [36:36] ;
  assign in_data_C7 [37:37] = fangyuan27_C [36:36] ;
  assign { in_data_R7 [0], in_data_R7 [1], in_data_R7 [2], in_data_R7 [3], in_data_R7 [4], in_data_R7 [5], in_data_R7 [6], in_data_R7 [7], in_data_R7 [8], in_data_R7 [9], in_data_R7 [10], in_data_R7 [11], in_data_R7 [12], in_data_R7 [13], in_data_R7 [14], in_data_R7 [15], in_data_R7 [16], in_data_R7 [17], in_data_R7 [18], in_data_R7 [19], in_data_R7 [20], in_data_R7 [21], in_data_R7 [22], in_data_R7 [23], in_data_R7 [24], in_data_R7 [25], in_data_R7 [26], in_data_R7 [27], in_data_R7 [28], in_data_R7 [29], in_data_R7 [30], in_data_R7 [31], in_data_R7 [32], in_data_R7 [33], in_data_R7 [34], in_data_R7 [35], in_data_R7 [36], in_data_R7 [43:38] } = 0;
  assign { in_data_X7 [0], in_data_X7 [1], in_data_X7 [2], in_data_X7 [3], in_data_X7 [4], in_data_X7 [5], in_data_X7 [6], in_data_X7 [7], in_data_X7 [8], in_data_X7 [9], in_data_X7 [10], in_data_X7 [11], in_data_X7 [12], in_data_X7 [13], in_data_X7 [14], in_data_X7 [15], in_data_X7 [16], in_data_X7 [17], in_data_X7 [18], in_data_X7 [19], in_data_X7 [20], in_data_X7 [21], in_data_X7 [22], in_data_X7 [23], in_data_X7 [24], in_data_X7 [25], in_data_X7 [26], in_data_X7 [27], in_data_X7 [28], in_data_X7 [29], in_data_X7 [30], in_data_X7 [31], in_data_X7 [32], in_data_X7 [33], in_data_X7 [34], in_data_X7 [35], in_data_X7 [36], in_data_X7 [43:38] } = 0;
  assign { in_data_C7 [0], in_data_C7 [1], in_data_C7 [2], in_data_C7 [3], in_data_C7 [4], in_data_C7 [5], in_data_C7 [6], in_data_C7 [7], in_data_C7 [8], in_data_C7 [9], in_data_C7 [10], in_data_C7 [11], in_data_C7 [12], in_data_C7 [13], in_data_C7 [14], in_data_C7 [15], in_data_C7 [16], in_data_C7 [17], in_data_C7 [18], in_data_C7 [19], in_data_C7 [20], in_data_C7 [21], in_data_C7 [22], in_data_C7 [23], in_data_C7 [24], in_data_C7 [25], in_data_C7 [26], in_data_C7 [27], in_data_C7 [28], in_data_C7 [29], in_data_C7 [30], in_data_C7 [31], in_data_C7 [32], in_data_C7 [33], in_data_C7 [34], in_data_C7 [35], in_data_C7 [36], in_data_C7 [43:38] } = 0;
  logic [43:0] in_data_R8 ;
  logic [43:0] in_data_X8 ;
  logic [43:0] in_data_C8 ;
  assign in_data_R8 [37:37] = fangyuan27_R [35:35] ;
  assign in_data_X8 [37:37] = fangyuan27_X [35:35] ;
  assign in_data_C8 [37:37] = fangyuan27_C [35:35] ;
  assign { in_data_R8 [0], in_data_R8 [1], in_data_R8 [2], in_data_R8 [3], in_data_R8 [4], in_data_R8 [5], in_data_R8 [6], in_data_R8 [7], in_data_R8 [8], in_data_R8 [9], in_data_R8 [10], in_data_R8 [11], in_data_R8 [12], in_data_R8 [13], in_data_R8 [14], in_data_R8 [15], in_data_R8 [16], in_data_R8 [17], in_data_R8 [18], in_data_R8 [19], in_data_R8 [20], in_data_R8 [21], in_data_R8 [22], in_data_R8 [23], in_data_R8 [24], in_data_R8 [25], in_data_R8 [26], in_data_R8 [27], in_data_R8 [28], in_data_R8 [29], in_data_R8 [30], in_data_R8 [31], in_data_R8 [32], in_data_R8 [33], in_data_R8 [34], in_data_R8 [35], in_data_R8 [36], in_data_R8 [43:38] } = 0;
  assign { in_data_X8 [0], in_data_X8 [1], in_data_X8 [2], in_data_X8 [3], in_data_X8 [4], in_data_X8 [5], in_data_X8 [6], in_data_X8 [7], in_data_X8 [8], in_data_X8 [9], in_data_X8 [10], in_data_X8 [11], in_data_X8 [12], in_data_X8 [13], in_data_X8 [14], in_data_X8 [15], in_data_X8 [16], in_data_X8 [17], in_data_X8 [18], in_data_X8 [19], in_data_X8 [20], in_data_X8 [21], in_data_X8 [22], in_data_X8 [23], in_data_X8 [24], in_data_X8 [25], in_data_X8 [26], in_data_X8 [27], in_data_X8 [28], in_data_X8 [29], in_data_X8 [30], in_data_X8 [31], in_data_X8 [32], in_data_X8 [33], in_data_X8 [34], in_data_X8 [35], in_data_X8 [36], in_data_X8 [43:38] } = 0;
  assign { in_data_C8 [0], in_data_C8 [1], in_data_C8 [2], in_data_C8 [3], in_data_C8 [4], in_data_C8 [5], in_data_C8 [6], in_data_C8 [7], in_data_C8 [8], in_data_C8 [9], in_data_C8 [10], in_data_C8 [11], in_data_C8 [12], in_data_C8 [13], in_data_C8 [14], in_data_C8 [15], in_data_C8 [16], in_data_C8 [17], in_data_C8 [18], in_data_C8 [19], in_data_C8 [20], in_data_C8 [21], in_data_C8 [22], in_data_C8 [23], in_data_C8 [24], in_data_C8 [25], in_data_C8 [26], in_data_C8 [27], in_data_C8 [28], in_data_C8 [29], in_data_C8 [30], in_data_C8 [31], in_data_C8 [32], in_data_C8 [33], in_data_C8 [34], in_data_C8 [35], in_data_C8 [36], in_data_C8 [43:38] } = 0;
  logic [43:0] in_data_R9 ;
  logic [43:0] in_data_X9 ;
  logic [43:0] in_data_C9 ;
  assign in_data_R9 [37:37] = fangyuan27_R [34:34] ;
  assign in_data_X9 [37:37] = fangyuan27_X [34:34] ;
  assign in_data_C9 [37:37] = fangyuan27_C [34:34] ;
  assign { in_data_R9 [0], in_data_R9 [1], in_data_R9 [2], in_data_R9 [3], in_data_R9 [4], in_data_R9 [5], in_data_R9 [6], in_data_R9 [7], in_data_R9 [8], in_data_R9 [9], in_data_R9 [10], in_data_R9 [11], in_data_R9 [12], in_data_R9 [13], in_data_R9 [14], in_data_R9 [15], in_data_R9 [16], in_data_R9 [17], in_data_R9 [18], in_data_R9 [19], in_data_R9 [20], in_data_R9 [21], in_data_R9 [22], in_data_R9 [23], in_data_R9 [24], in_data_R9 [25], in_data_R9 [26], in_data_R9 [27], in_data_R9 [28], in_data_R9 [29], in_data_R9 [30], in_data_R9 [31], in_data_R9 [32], in_data_R9 [33], in_data_R9 [34], in_data_R9 [35], in_data_R9 [36], in_data_R9 [43:38] } = 0;
  assign { in_data_X9 [0], in_data_X9 [1], in_data_X9 [2], in_data_X9 [3], in_data_X9 [4], in_data_X9 [5], in_data_X9 [6], in_data_X9 [7], in_data_X9 [8], in_data_X9 [9], in_data_X9 [10], in_data_X9 [11], in_data_X9 [12], in_data_X9 [13], in_data_X9 [14], in_data_X9 [15], in_data_X9 [16], in_data_X9 [17], in_data_X9 [18], in_data_X9 [19], in_data_X9 [20], in_data_X9 [21], in_data_X9 [22], in_data_X9 [23], in_data_X9 [24], in_data_X9 [25], in_data_X9 [26], in_data_X9 [27], in_data_X9 [28], in_data_X9 [29], in_data_X9 [30], in_data_X9 [31], in_data_X9 [32], in_data_X9 [33], in_data_X9 [34], in_data_X9 [35], in_data_X9 [36], in_data_X9 [43:38] } = 0;
  assign { in_data_C9 [0], in_data_C9 [1], in_data_C9 [2], in_data_C9 [3], in_data_C9 [4], in_data_C9 [5], in_data_C9 [6], in_data_C9 [7], in_data_C9 [8], in_data_C9 [9], in_data_C9 [10], in_data_C9 [11], in_data_C9 [12], in_data_C9 [13], in_data_C9 [14], in_data_C9 [15], in_data_C9 [16], in_data_C9 [17], in_data_C9 [18], in_data_C9 [19], in_data_C9 [20], in_data_C9 [21], in_data_C9 [22], in_data_C9 [23], in_data_C9 [24], in_data_C9 [25], in_data_C9 [26], in_data_C9 [27], in_data_C9 [28], in_data_C9 [29], in_data_C9 [30], in_data_C9 [31], in_data_C9 [32], in_data_C9 [33], in_data_C9 [34], in_data_C9 [35], in_data_C9 [36], in_data_C9 [43:38] } = 0;
  logic [43:0] in_data_R10 ;
  logic [43:0] in_data_X10 ;
  logic [43:0] in_data_C10 ;
  assign in_data_R10 [37:37] = fangyuan27_R [33:33] ;
  assign in_data_X10 [37:37] = fangyuan27_X [33:33] ;
  assign in_data_C10 [37:37] = fangyuan27_C [33:33] ;
  assign { in_data_R10 [0], in_data_R10 [1], in_data_R10 [2], in_data_R10 [3], in_data_R10 [4], in_data_R10 [5], in_data_R10 [6], in_data_R10 [7], in_data_R10 [8], in_data_R10 [9], in_data_R10 [10], in_data_R10 [11], in_data_R10 [12], in_data_R10 [13], in_data_R10 [14], in_data_R10 [15], in_data_R10 [16], in_data_R10 [17], in_data_R10 [18], in_data_R10 [19], in_data_R10 [20], in_data_R10 [21], in_data_R10 [22], in_data_R10 [23], in_data_R10 [24], in_data_R10 [25], in_data_R10 [26], in_data_R10 [27], in_data_R10 [28], in_data_R10 [29], in_data_R10 [30], in_data_R10 [31], in_data_R10 [32], in_data_R10 [33], in_data_R10 [34], in_data_R10 [35], in_data_R10 [36], in_data_R10 [43:38] } = 0;
  assign { in_data_X10 [0], in_data_X10 [1], in_data_X10 [2], in_data_X10 [3], in_data_X10 [4], in_data_X10 [5], in_data_X10 [6], in_data_X10 [7], in_data_X10 [8], in_data_X10 [9], in_data_X10 [10], in_data_X10 [11], in_data_X10 [12], in_data_X10 [13], in_data_X10 [14], in_data_X10 [15], in_data_X10 [16], in_data_X10 [17], in_data_X10 [18], in_data_X10 [19], in_data_X10 [20], in_data_X10 [21], in_data_X10 [22], in_data_X10 [23], in_data_X10 [24], in_data_X10 [25], in_data_X10 [26], in_data_X10 [27], in_data_X10 [28], in_data_X10 [29], in_data_X10 [30], in_data_X10 [31], in_data_X10 [32], in_data_X10 [33], in_data_X10 [34], in_data_X10 [35], in_data_X10 [36], in_data_X10 [43:38] } = 0;
  assign { in_data_C10 [0], in_data_C10 [1], in_data_C10 [2], in_data_C10 [3], in_data_C10 [4], in_data_C10 [5], in_data_C10 [6], in_data_C10 [7], in_data_C10 [8], in_data_C10 [9], in_data_C10 [10], in_data_C10 [11], in_data_C10 [12], in_data_C10 [13], in_data_C10 [14], in_data_C10 [15], in_data_C10 [16], in_data_C10 [17], in_data_C10 [18], in_data_C10 [19], in_data_C10 [20], in_data_C10 [21], in_data_C10 [22], in_data_C10 [23], in_data_C10 [24], in_data_C10 [25], in_data_C10 [26], in_data_C10 [27], in_data_C10 [28], in_data_C10 [29], in_data_C10 [30], in_data_C10 [31], in_data_C10 [32], in_data_C10 [33], in_data_C10 [34], in_data_C10 [35], in_data_C10 [36], in_data_C10 [43:38] } = 0;
  logic [43:0] in_data_R11 ;
  logic [43:0] in_data_X11 ;
  logic [43:0] in_data_C11 ;
  assign in_data_R11 [37:37] = fangyuan27_R [32:32] ;
  assign in_data_X11 [37:37] = fangyuan27_X [32:32] ;
  assign in_data_C11 [37:37] = fangyuan27_C [32:32] ;
  assign { in_data_R11 [0], in_data_R11 [1], in_data_R11 [2], in_data_R11 [3], in_data_R11 [4], in_data_R11 [5], in_data_R11 [6], in_data_R11 [7], in_data_R11 [8], in_data_R11 [9], in_data_R11 [10], in_data_R11 [11], in_data_R11 [12], in_data_R11 [13], in_data_R11 [14], in_data_R11 [15], in_data_R11 [16], in_data_R11 [17], in_data_R11 [18], in_data_R11 [19], in_data_R11 [20], in_data_R11 [21], in_data_R11 [22], in_data_R11 [23], in_data_R11 [24], in_data_R11 [25], in_data_R11 [26], in_data_R11 [27], in_data_R11 [28], in_data_R11 [29], in_data_R11 [30], in_data_R11 [31], in_data_R11 [32], in_data_R11 [33], in_data_R11 [34], in_data_R11 [35], in_data_R11 [36], in_data_R11 [43:38] } = 0;
  assign { in_data_X11 [0], in_data_X11 [1], in_data_X11 [2], in_data_X11 [3], in_data_X11 [4], in_data_X11 [5], in_data_X11 [6], in_data_X11 [7], in_data_X11 [8], in_data_X11 [9], in_data_X11 [10], in_data_X11 [11], in_data_X11 [12], in_data_X11 [13], in_data_X11 [14], in_data_X11 [15], in_data_X11 [16], in_data_X11 [17], in_data_X11 [18], in_data_X11 [19], in_data_X11 [20], in_data_X11 [21], in_data_X11 [22], in_data_X11 [23], in_data_X11 [24], in_data_X11 [25], in_data_X11 [26], in_data_X11 [27], in_data_X11 [28], in_data_X11 [29], in_data_X11 [30], in_data_X11 [31], in_data_X11 [32], in_data_X11 [33], in_data_X11 [34], in_data_X11 [35], in_data_X11 [36], in_data_X11 [43:38] } = 0;
  assign { in_data_C11 [0], in_data_C11 [1], in_data_C11 [2], in_data_C11 [3], in_data_C11 [4], in_data_C11 [5], in_data_C11 [6], in_data_C11 [7], in_data_C11 [8], in_data_C11 [9], in_data_C11 [10], in_data_C11 [11], in_data_C11 [12], in_data_C11 [13], in_data_C11 [14], in_data_C11 [15], in_data_C11 [16], in_data_C11 [17], in_data_C11 [18], in_data_C11 [19], in_data_C11 [20], in_data_C11 [21], in_data_C11 [22], in_data_C11 [23], in_data_C11 [24], in_data_C11 [25], in_data_C11 [26], in_data_C11 [27], in_data_C11 [28], in_data_C11 [29], in_data_C11 [30], in_data_C11 [31], in_data_C11 [32], in_data_C11 [33], in_data_C11 [34], in_data_C11 [35], in_data_C11 [36], in_data_C11 [43:38] } = 0;
  logic [43:0] in_data_R12 ;
  logic [43:0] in_data_X12 ;
  logic [43:0] in_data_C12 ;
  assign in_data_R12 [37:37] = fangyuan27_R [31:31] ;
  assign in_data_X12 [37:37] = fangyuan27_X [31:31] ;
  assign in_data_C12 [37:37] = fangyuan27_C [31:31] ;
  assign { in_data_R12 [0], in_data_R12 [1], in_data_R12 [2], in_data_R12 [3], in_data_R12 [4], in_data_R12 [5], in_data_R12 [6], in_data_R12 [7], in_data_R12 [8], in_data_R12 [9], in_data_R12 [10], in_data_R12 [11], in_data_R12 [12], in_data_R12 [13], in_data_R12 [14], in_data_R12 [15], in_data_R12 [16], in_data_R12 [17], in_data_R12 [18], in_data_R12 [19], in_data_R12 [20], in_data_R12 [21], in_data_R12 [22], in_data_R12 [23], in_data_R12 [24], in_data_R12 [25], in_data_R12 [26], in_data_R12 [27], in_data_R12 [28], in_data_R12 [29], in_data_R12 [30], in_data_R12 [31], in_data_R12 [32], in_data_R12 [33], in_data_R12 [34], in_data_R12 [35], in_data_R12 [36], in_data_R12 [43:38] } = 0;
  assign { in_data_X12 [0], in_data_X12 [1], in_data_X12 [2], in_data_X12 [3], in_data_X12 [4], in_data_X12 [5], in_data_X12 [6], in_data_X12 [7], in_data_X12 [8], in_data_X12 [9], in_data_X12 [10], in_data_X12 [11], in_data_X12 [12], in_data_X12 [13], in_data_X12 [14], in_data_X12 [15], in_data_X12 [16], in_data_X12 [17], in_data_X12 [18], in_data_X12 [19], in_data_X12 [20], in_data_X12 [21], in_data_X12 [22], in_data_X12 [23], in_data_X12 [24], in_data_X12 [25], in_data_X12 [26], in_data_X12 [27], in_data_X12 [28], in_data_X12 [29], in_data_X12 [30], in_data_X12 [31], in_data_X12 [32], in_data_X12 [33], in_data_X12 [34], in_data_X12 [35], in_data_X12 [36], in_data_X12 [43:38] } = 0;
  assign { in_data_C12 [0], in_data_C12 [1], in_data_C12 [2], in_data_C12 [3], in_data_C12 [4], in_data_C12 [5], in_data_C12 [6], in_data_C12 [7], in_data_C12 [8], in_data_C12 [9], in_data_C12 [10], in_data_C12 [11], in_data_C12 [12], in_data_C12 [13], in_data_C12 [14], in_data_C12 [15], in_data_C12 [16], in_data_C12 [17], in_data_C12 [18], in_data_C12 [19], in_data_C12 [20], in_data_C12 [21], in_data_C12 [22], in_data_C12 [23], in_data_C12 [24], in_data_C12 [25], in_data_C12 [26], in_data_C12 [27], in_data_C12 [28], in_data_C12 [29], in_data_C12 [30], in_data_C12 [31], in_data_C12 [32], in_data_C12 [33], in_data_C12 [34], in_data_C12 [35], in_data_C12 [36], in_data_C12 [43:38] } = 0;
  logic [43:0] in_data_R13 ;
  logic [43:0] in_data_X13 ;
  logic [43:0] in_data_C13 ;
  assign in_data_R13 [37:37] = fangyuan27_R [30:30] ;
  assign in_data_X13 [37:37] = fangyuan27_X [30:30] ;
  assign in_data_C13 [37:37] = fangyuan27_C [30:30] ;
  assign { in_data_R13 [0], in_data_R13 [1], in_data_R13 [2], in_data_R13 [3], in_data_R13 [4], in_data_R13 [5], in_data_R13 [6], in_data_R13 [7], in_data_R13 [8], in_data_R13 [9], in_data_R13 [10], in_data_R13 [11], in_data_R13 [12], in_data_R13 [13], in_data_R13 [14], in_data_R13 [15], in_data_R13 [16], in_data_R13 [17], in_data_R13 [18], in_data_R13 [19], in_data_R13 [20], in_data_R13 [21], in_data_R13 [22], in_data_R13 [23], in_data_R13 [24], in_data_R13 [25], in_data_R13 [26], in_data_R13 [27], in_data_R13 [28], in_data_R13 [29], in_data_R13 [30], in_data_R13 [31], in_data_R13 [32], in_data_R13 [33], in_data_R13 [34], in_data_R13 [35], in_data_R13 [36], in_data_R13 [43:38] } = 0;
  assign { in_data_X13 [0], in_data_X13 [1], in_data_X13 [2], in_data_X13 [3], in_data_X13 [4], in_data_X13 [5], in_data_X13 [6], in_data_X13 [7], in_data_X13 [8], in_data_X13 [9], in_data_X13 [10], in_data_X13 [11], in_data_X13 [12], in_data_X13 [13], in_data_X13 [14], in_data_X13 [15], in_data_X13 [16], in_data_X13 [17], in_data_X13 [18], in_data_X13 [19], in_data_X13 [20], in_data_X13 [21], in_data_X13 [22], in_data_X13 [23], in_data_X13 [24], in_data_X13 [25], in_data_X13 [26], in_data_X13 [27], in_data_X13 [28], in_data_X13 [29], in_data_X13 [30], in_data_X13 [31], in_data_X13 [32], in_data_X13 [33], in_data_X13 [34], in_data_X13 [35], in_data_X13 [36], in_data_X13 [43:38] } = 0;
  assign { in_data_C13 [0], in_data_C13 [1], in_data_C13 [2], in_data_C13 [3], in_data_C13 [4], in_data_C13 [5], in_data_C13 [6], in_data_C13 [7], in_data_C13 [8], in_data_C13 [9], in_data_C13 [10], in_data_C13 [11], in_data_C13 [12], in_data_C13 [13], in_data_C13 [14], in_data_C13 [15], in_data_C13 [16], in_data_C13 [17], in_data_C13 [18], in_data_C13 [19], in_data_C13 [20], in_data_C13 [21], in_data_C13 [22], in_data_C13 [23], in_data_C13 [24], in_data_C13 [25], in_data_C13 [26], in_data_C13 [27], in_data_C13 [28], in_data_C13 [29], in_data_C13 [30], in_data_C13 [31], in_data_C13 [32], in_data_C13 [33], in_data_C13 [34], in_data_C13 [35], in_data_C13 [36], in_data_C13 [43:38] } = 0;
  logic [43:0] in_data_R14 ;
  logic [43:0] in_data_X14 ;
  logic [43:0] in_data_C14 ;
  assign in_data_R14 [37:37] = fangyuan27_R [29:29] ;
  assign in_data_X14 [37:37] = fangyuan27_X [29:29] ;
  assign in_data_C14 [37:37] = fangyuan27_C [29:29] ;
  assign { in_data_R14 [0], in_data_R14 [1], in_data_R14 [2], in_data_R14 [3], in_data_R14 [4], in_data_R14 [5], in_data_R14 [6], in_data_R14 [7], in_data_R14 [8], in_data_R14 [9], in_data_R14 [10], in_data_R14 [11], in_data_R14 [12], in_data_R14 [13], in_data_R14 [14], in_data_R14 [15], in_data_R14 [16], in_data_R14 [17], in_data_R14 [18], in_data_R14 [19], in_data_R14 [20], in_data_R14 [21], in_data_R14 [22], in_data_R14 [23], in_data_R14 [24], in_data_R14 [25], in_data_R14 [26], in_data_R14 [27], in_data_R14 [28], in_data_R14 [29], in_data_R14 [30], in_data_R14 [31], in_data_R14 [32], in_data_R14 [33], in_data_R14 [34], in_data_R14 [35], in_data_R14 [36], in_data_R14 [43:38] } = 0;
  assign { in_data_X14 [0], in_data_X14 [1], in_data_X14 [2], in_data_X14 [3], in_data_X14 [4], in_data_X14 [5], in_data_X14 [6], in_data_X14 [7], in_data_X14 [8], in_data_X14 [9], in_data_X14 [10], in_data_X14 [11], in_data_X14 [12], in_data_X14 [13], in_data_X14 [14], in_data_X14 [15], in_data_X14 [16], in_data_X14 [17], in_data_X14 [18], in_data_X14 [19], in_data_X14 [20], in_data_X14 [21], in_data_X14 [22], in_data_X14 [23], in_data_X14 [24], in_data_X14 [25], in_data_X14 [26], in_data_X14 [27], in_data_X14 [28], in_data_X14 [29], in_data_X14 [30], in_data_X14 [31], in_data_X14 [32], in_data_X14 [33], in_data_X14 [34], in_data_X14 [35], in_data_X14 [36], in_data_X14 [43:38] } = 0;
  assign { in_data_C14 [0], in_data_C14 [1], in_data_C14 [2], in_data_C14 [3], in_data_C14 [4], in_data_C14 [5], in_data_C14 [6], in_data_C14 [7], in_data_C14 [8], in_data_C14 [9], in_data_C14 [10], in_data_C14 [11], in_data_C14 [12], in_data_C14 [13], in_data_C14 [14], in_data_C14 [15], in_data_C14 [16], in_data_C14 [17], in_data_C14 [18], in_data_C14 [19], in_data_C14 [20], in_data_C14 [21], in_data_C14 [22], in_data_C14 [23], in_data_C14 [24], in_data_C14 [25], in_data_C14 [26], in_data_C14 [27], in_data_C14 [28], in_data_C14 [29], in_data_C14 [30], in_data_C14 [31], in_data_C14 [32], in_data_C14 [33], in_data_C14 [34], in_data_C14 [35], in_data_C14 [36], in_data_C14 [43:38] } = 0;
  logic [43:0] in_data_R15 ;
  logic [43:0] in_data_X15 ;
  logic [43:0] in_data_C15 ;
  assign in_data_R15 [37:37] = fangyuan27_R [28:28] ;
  assign in_data_X15 [37:37] = fangyuan27_X [28:28] ;
  assign in_data_C15 [37:37] = fangyuan27_C [28:28] ;
  assign { in_data_R15 [0], in_data_R15 [1], in_data_R15 [2], in_data_R15 [3], in_data_R15 [4], in_data_R15 [5], in_data_R15 [6], in_data_R15 [7], in_data_R15 [8], in_data_R15 [9], in_data_R15 [10], in_data_R15 [11], in_data_R15 [12], in_data_R15 [13], in_data_R15 [14], in_data_R15 [15], in_data_R15 [16], in_data_R15 [17], in_data_R15 [18], in_data_R15 [19], in_data_R15 [20], in_data_R15 [21], in_data_R15 [22], in_data_R15 [23], in_data_R15 [24], in_data_R15 [25], in_data_R15 [26], in_data_R15 [27], in_data_R15 [28], in_data_R15 [29], in_data_R15 [30], in_data_R15 [31], in_data_R15 [32], in_data_R15 [33], in_data_R15 [34], in_data_R15 [35], in_data_R15 [36], in_data_R15 [43:38] } = 0;
  assign { in_data_X15 [0], in_data_X15 [1], in_data_X15 [2], in_data_X15 [3], in_data_X15 [4], in_data_X15 [5], in_data_X15 [6], in_data_X15 [7], in_data_X15 [8], in_data_X15 [9], in_data_X15 [10], in_data_X15 [11], in_data_X15 [12], in_data_X15 [13], in_data_X15 [14], in_data_X15 [15], in_data_X15 [16], in_data_X15 [17], in_data_X15 [18], in_data_X15 [19], in_data_X15 [20], in_data_X15 [21], in_data_X15 [22], in_data_X15 [23], in_data_X15 [24], in_data_X15 [25], in_data_X15 [26], in_data_X15 [27], in_data_X15 [28], in_data_X15 [29], in_data_X15 [30], in_data_X15 [31], in_data_X15 [32], in_data_X15 [33], in_data_X15 [34], in_data_X15 [35], in_data_X15 [36], in_data_X15 [43:38] } = 0;
  assign { in_data_C15 [0], in_data_C15 [1], in_data_C15 [2], in_data_C15 [3], in_data_C15 [4], in_data_C15 [5], in_data_C15 [6], in_data_C15 [7], in_data_C15 [8], in_data_C15 [9], in_data_C15 [10], in_data_C15 [11], in_data_C15 [12], in_data_C15 [13], in_data_C15 [14], in_data_C15 [15], in_data_C15 [16], in_data_C15 [17], in_data_C15 [18], in_data_C15 [19], in_data_C15 [20], in_data_C15 [21], in_data_C15 [22], in_data_C15 [23], in_data_C15 [24], in_data_C15 [25], in_data_C15 [26], in_data_C15 [27], in_data_C15 [28], in_data_C15 [29], in_data_C15 [30], in_data_C15 [31], in_data_C15 [32], in_data_C15 [33], in_data_C15 [34], in_data_C15 [35], in_data_C15 [36], in_data_C15 [43:38] } = 0;
  logic [43:0] in_data_R16 ;
  logic [43:0] in_data_X16 ;
  logic [43:0] in_data_C16 ;
  assign in_data_R16 [37:37] = fangyuan27_R [27:27] ;
  assign in_data_X16 [37:37] = fangyuan27_X [27:27] ;
  assign in_data_C16 [37:37] = fangyuan27_C [27:27] ;
  assign { in_data_R16 [0], in_data_R16 [1], in_data_R16 [2], in_data_R16 [3], in_data_R16 [4], in_data_R16 [5], in_data_R16 [6], in_data_R16 [7], in_data_R16 [8], in_data_R16 [9], in_data_R16 [10], in_data_R16 [11], in_data_R16 [12], in_data_R16 [13], in_data_R16 [14], in_data_R16 [15], in_data_R16 [16], in_data_R16 [17], in_data_R16 [18], in_data_R16 [19], in_data_R16 [20], in_data_R16 [21], in_data_R16 [22], in_data_R16 [23], in_data_R16 [24], in_data_R16 [25], in_data_R16 [26], in_data_R16 [27], in_data_R16 [28], in_data_R16 [29], in_data_R16 [30], in_data_R16 [31], in_data_R16 [32], in_data_R16 [33], in_data_R16 [34], in_data_R16 [35], in_data_R16 [36], in_data_R16 [43:38] } = 0;
  assign { in_data_X16 [0], in_data_X16 [1], in_data_X16 [2], in_data_X16 [3], in_data_X16 [4], in_data_X16 [5], in_data_X16 [6], in_data_X16 [7], in_data_X16 [8], in_data_X16 [9], in_data_X16 [10], in_data_X16 [11], in_data_X16 [12], in_data_X16 [13], in_data_X16 [14], in_data_X16 [15], in_data_X16 [16], in_data_X16 [17], in_data_X16 [18], in_data_X16 [19], in_data_X16 [20], in_data_X16 [21], in_data_X16 [22], in_data_X16 [23], in_data_X16 [24], in_data_X16 [25], in_data_X16 [26], in_data_X16 [27], in_data_X16 [28], in_data_X16 [29], in_data_X16 [30], in_data_X16 [31], in_data_X16 [32], in_data_X16 [33], in_data_X16 [34], in_data_X16 [35], in_data_X16 [36], in_data_X16 [43:38] } = 0;
  assign { in_data_C16 [0], in_data_C16 [1], in_data_C16 [2], in_data_C16 [3], in_data_C16 [4], in_data_C16 [5], in_data_C16 [6], in_data_C16 [7], in_data_C16 [8], in_data_C16 [9], in_data_C16 [10], in_data_C16 [11], in_data_C16 [12], in_data_C16 [13], in_data_C16 [14], in_data_C16 [15], in_data_C16 [16], in_data_C16 [17], in_data_C16 [18], in_data_C16 [19], in_data_C16 [20], in_data_C16 [21], in_data_C16 [22], in_data_C16 [23], in_data_C16 [24], in_data_C16 [25], in_data_C16 [26], in_data_C16 [27], in_data_C16 [28], in_data_C16 [29], in_data_C16 [30], in_data_C16 [31], in_data_C16 [32], in_data_C16 [33], in_data_C16 [34], in_data_C16 [35], in_data_C16 [36], in_data_C16 [43:38] } = 0;
  logic [43:0] in_data_R17 ;
  logic [43:0] in_data_X17 ;
  logic [43:0] in_data_C17 ;
  assign in_data_R17 [37:37] = fangyuan27_R [26:26] ;
  assign in_data_X17 [37:37] = fangyuan27_X [26:26] ;
  assign in_data_C17 [37:37] = fangyuan27_C [26:26] ;
  assign { in_data_R17 [0], in_data_R17 [1], in_data_R17 [2], in_data_R17 [3], in_data_R17 [4], in_data_R17 [5], in_data_R17 [6], in_data_R17 [7], in_data_R17 [8], in_data_R17 [9], in_data_R17 [10], in_data_R17 [11], in_data_R17 [12], in_data_R17 [13], in_data_R17 [14], in_data_R17 [15], in_data_R17 [16], in_data_R17 [17], in_data_R17 [18], in_data_R17 [19], in_data_R17 [20], in_data_R17 [21], in_data_R17 [22], in_data_R17 [23], in_data_R17 [24], in_data_R17 [25], in_data_R17 [26], in_data_R17 [27], in_data_R17 [28], in_data_R17 [29], in_data_R17 [30], in_data_R17 [31], in_data_R17 [32], in_data_R17 [33], in_data_R17 [34], in_data_R17 [35], in_data_R17 [36], in_data_R17 [43:38] } = 0;
  assign { in_data_X17 [0], in_data_X17 [1], in_data_X17 [2], in_data_X17 [3], in_data_X17 [4], in_data_X17 [5], in_data_X17 [6], in_data_X17 [7], in_data_X17 [8], in_data_X17 [9], in_data_X17 [10], in_data_X17 [11], in_data_X17 [12], in_data_X17 [13], in_data_X17 [14], in_data_X17 [15], in_data_X17 [16], in_data_X17 [17], in_data_X17 [18], in_data_X17 [19], in_data_X17 [20], in_data_X17 [21], in_data_X17 [22], in_data_X17 [23], in_data_X17 [24], in_data_X17 [25], in_data_X17 [26], in_data_X17 [27], in_data_X17 [28], in_data_X17 [29], in_data_X17 [30], in_data_X17 [31], in_data_X17 [32], in_data_X17 [33], in_data_X17 [34], in_data_X17 [35], in_data_X17 [36], in_data_X17 [43:38] } = 0;
  assign { in_data_C17 [0], in_data_C17 [1], in_data_C17 [2], in_data_C17 [3], in_data_C17 [4], in_data_C17 [5], in_data_C17 [6], in_data_C17 [7], in_data_C17 [8], in_data_C17 [9], in_data_C17 [10], in_data_C17 [11], in_data_C17 [12], in_data_C17 [13], in_data_C17 [14], in_data_C17 [15], in_data_C17 [16], in_data_C17 [17], in_data_C17 [18], in_data_C17 [19], in_data_C17 [20], in_data_C17 [21], in_data_C17 [22], in_data_C17 [23], in_data_C17 [24], in_data_C17 [25], in_data_C17 [26], in_data_C17 [27], in_data_C17 [28], in_data_C17 [29], in_data_C17 [30], in_data_C17 [31], in_data_C17 [32], in_data_C17 [33], in_data_C17 [34], in_data_C17 [35], in_data_C17 [36], in_data_C17 [43:38] } = 0;
  logic [43:0] in_data_R18 ;
  logic [43:0] in_data_X18 ;
  logic [43:0] in_data_C18 ;
  assign in_data_R18 [37:37] = fangyuan27_R [25:25] ;
  assign in_data_X18 [37:37] = fangyuan27_X [25:25] ;
  assign in_data_C18 [37:37] = fangyuan27_C [25:25] ;
  assign { in_data_R18 [0], in_data_R18 [1], in_data_R18 [2], in_data_R18 [3], in_data_R18 [4], in_data_R18 [5], in_data_R18 [6], in_data_R18 [7], in_data_R18 [8], in_data_R18 [9], in_data_R18 [10], in_data_R18 [11], in_data_R18 [12], in_data_R18 [13], in_data_R18 [14], in_data_R18 [15], in_data_R18 [16], in_data_R18 [17], in_data_R18 [18], in_data_R18 [19], in_data_R18 [20], in_data_R18 [21], in_data_R18 [22], in_data_R18 [23], in_data_R18 [24], in_data_R18 [25], in_data_R18 [26], in_data_R18 [27], in_data_R18 [28], in_data_R18 [29], in_data_R18 [30], in_data_R18 [31], in_data_R18 [32], in_data_R18 [33], in_data_R18 [34], in_data_R18 [35], in_data_R18 [36], in_data_R18 [43:38] } = 0;
  assign { in_data_X18 [0], in_data_X18 [1], in_data_X18 [2], in_data_X18 [3], in_data_X18 [4], in_data_X18 [5], in_data_X18 [6], in_data_X18 [7], in_data_X18 [8], in_data_X18 [9], in_data_X18 [10], in_data_X18 [11], in_data_X18 [12], in_data_X18 [13], in_data_X18 [14], in_data_X18 [15], in_data_X18 [16], in_data_X18 [17], in_data_X18 [18], in_data_X18 [19], in_data_X18 [20], in_data_X18 [21], in_data_X18 [22], in_data_X18 [23], in_data_X18 [24], in_data_X18 [25], in_data_X18 [26], in_data_X18 [27], in_data_X18 [28], in_data_X18 [29], in_data_X18 [30], in_data_X18 [31], in_data_X18 [32], in_data_X18 [33], in_data_X18 [34], in_data_X18 [35], in_data_X18 [36], in_data_X18 [43:38] } = 0;
  assign { in_data_C18 [0], in_data_C18 [1], in_data_C18 [2], in_data_C18 [3], in_data_C18 [4], in_data_C18 [5], in_data_C18 [6], in_data_C18 [7], in_data_C18 [8], in_data_C18 [9], in_data_C18 [10], in_data_C18 [11], in_data_C18 [12], in_data_C18 [13], in_data_C18 [14], in_data_C18 [15], in_data_C18 [16], in_data_C18 [17], in_data_C18 [18], in_data_C18 [19], in_data_C18 [20], in_data_C18 [21], in_data_C18 [22], in_data_C18 [23], in_data_C18 [24], in_data_C18 [25], in_data_C18 [26], in_data_C18 [27], in_data_C18 [28], in_data_C18 [29], in_data_C18 [30], in_data_C18 [31], in_data_C18 [32], in_data_C18 [33], in_data_C18 [34], in_data_C18 [35], in_data_C18 [36], in_data_C18 [43:38] } = 0;
  logic [43:0] in_data_R19 ;
  logic [43:0] in_data_X19 ;
  logic [43:0] in_data_C19 ;
  assign in_data_R19 [37:37] = fangyuan27_R [24:24] ;
  assign in_data_X19 [37:37] = fangyuan27_X [24:24] ;
  assign in_data_C19 [37:37] = fangyuan27_C [24:24] ;
  assign { in_data_R19 [0], in_data_R19 [1], in_data_R19 [2], in_data_R19 [3], in_data_R19 [4], in_data_R19 [5], in_data_R19 [6], in_data_R19 [7], in_data_R19 [8], in_data_R19 [9], in_data_R19 [10], in_data_R19 [11], in_data_R19 [12], in_data_R19 [13], in_data_R19 [14], in_data_R19 [15], in_data_R19 [16], in_data_R19 [17], in_data_R19 [18], in_data_R19 [19], in_data_R19 [20], in_data_R19 [21], in_data_R19 [22], in_data_R19 [23], in_data_R19 [24], in_data_R19 [25], in_data_R19 [26], in_data_R19 [27], in_data_R19 [28], in_data_R19 [29], in_data_R19 [30], in_data_R19 [31], in_data_R19 [32], in_data_R19 [33], in_data_R19 [34], in_data_R19 [35], in_data_R19 [36], in_data_R19 [43:38] } = 0;
  assign { in_data_X19 [0], in_data_X19 [1], in_data_X19 [2], in_data_X19 [3], in_data_X19 [4], in_data_X19 [5], in_data_X19 [6], in_data_X19 [7], in_data_X19 [8], in_data_X19 [9], in_data_X19 [10], in_data_X19 [11], in_data_X19 [12], in_data_X19 [13], in_data_X19 [14], in_data_X19 [15], in_data_X19 [16], in_data_X19 [17], in_data_X19 [18], in_data_X19 [19], in_data_X19 [20], in_data_X19 [21], in_data_X19 [22], in_data_X19 [23], in_data_X19 [24], in_data_X19 [25], in_data_X19 [26], in_data_X19 [27], in_data_X19 [28], in_data_X19 [29], in_data_X19 [30], in_data_X19 [31], in_data_X19 [32], in_data_X19 [33], in_data_X19 [34], in_data_X19 [35], in_data_X19 [36], in_data_X19 [43:38] } = 0;
  assign { in_data_C19 [0], in_data_C19 [1], in_data_C19 [2], in_data_C19 [3], in_data_C19 [4], in_data_C19 [5], in_data_C19 [6], in_data_C19 [7], in_data_C19 [8], in_data_C19 [9], in_data_C19 [10], in_data_C19 [11], in_data_C19 [12], in_data_C19 [13], in_data_C19 [14], in_data_C19 [15], in_data_C19 [16], in_data_C19 [17], in_data_C19 [18], in_data_C19 [19], in_data_C19 [20], in_data_C19 [21], in_data_C19 [22], in_data_C19 [23], in_data_C19 [24], in_data_C19 [25], in_data_C19 [26], in_data_C19 [27], in_data_C19 [28], in_data_C19 [29], in_data_C19 [30], in_data_C19 [31], in_data_C19 [32], in_data_C19 [33], in_data_C19 [34], in_data_C19 [35], in_data_C19 [36], in_data_C19 [43:38] } = 0;
  logic [43:0] in_data_R20 ;
  logic [43:0] in_data_X20 ;
  logic [43:0] in_data_C20 ;
  assign in_data_R20 [37:37] = fangyuan27_R [23:23] ;
  assign in_data_X20 [37:37] = fangyuan27_X [23:23] ;
  assign in_data_C20 [37:37] = fangyuan27_C [23:23] ;
  assign { in_data_R20 [0], in_data_R20 [1], in_data_R20 [2], in_data_R20 [3], in_data_R20 [4], in_data_R20 [5], in_data_R20 [6], in_data_R20 [7], in_data_R20 [8], in_data_R20 [9], in_data_R20 [10], in_data_R20 [11], in_data_R20 [12], in_data_R20 [13], in_data_R20 [14], in_data_R20 [15], in_data_R20 [16], in_data_R20 [17], in_data_R20 [18], in_data_R20 [19], in_data_R20 [20], in_data_R20 [21], in_data_R20 [22], in_data_R20 [23], in_data_R20 [24], in_data_R20 [25], in_data_R20 [26], in_data_R20 [27], in_data_R20 [28], in_data_R20 [29], in_data_R20 [30], in_data_R20 [31], in_data_R20 [32], in_data_R20 [33], in_data_R20 [34], in_data_R20 [35], in_data_R20 [36], in_data_R20 [43:38] } = 0;
  assign { in_data_X20 [0], in_data_X20 [1], in_data_X20 [2], in_data_X20 [3], in_data_X20 [4], in_data_X20 [5], in_data_X20 [6], in_data_X20 [7], in_data_X20 [8], in_data_X20 [9], in_data_X20 [10], in_data_X20 [11], in_data_X20 [12], in_data_X20 [13], in_data_X20 [14], in_data_X20 [15], in_data_X20 [16], in_data_X20 [17], in_data_X20 [18], in_data_X20 [19], in_data_X20 [20], in_data_X20 [21], in_data_X20 [22], in_data_X20 [23], in_data_X20 [24], in_data_X20 [25], in_data_X20 [26], in_data_X20 [27], in_data_X20 [28], in_data_X20 [29], in_data_X20 [30], in_data_X20 [31], in_data_X20 [32], in_data_X20 [33], in_data_X20 [34], in_data_X20 [35], in_data_X20 [36], in_data_X20 [43:38] } = 0;
  assign { in_data_C20 [0], in_data_C20 [1], in_data_C20 [2], in_data_C20 [3], in_data_C20 [4], in_data_C20 [5], in_data_C20 [6], in_data_C20 [7], in_data_C20 [8], in_data_C20 [9], in_data_C20 [10], in_data_C20 [11], in_data_C20 [12], in_data_C20 [13], in_data_C20 [14], in_data_C20 [15], in_data_C20 [16], in_data_C20 [17], in_data_C20 [18], in_data_C20 [19], in_data_C20 [20], in_data_C20 [21], in_data_C20 [22], in_data_C20 [23], in_data_C20 [24], in_data_C20 [25], in_data_C20 [26], in_data_C20 [27], in_data_C20 [28], in_data_C20 [29], in_data_C20 [30], in_data_C20 [31], in_data_C20 [32], in_data_C20 [33], in_data_C20 [34], in_data_C20 [35], in_data_C20 [36], in_data_C20 [43:38] } = 0;
  logic [43:0] in_data_R21 ;
  logic [43:0] in_data_X21 ;
  logic [43:0] in_data_C21 ;
  assign in_data_R21 [37:37] = fangyuan27_R [22:22] ;
  assign in_data_X21 [37:37] = fangyuan27_X [22:22] ;
  assign in_data_C21 [37:37] = fangyuan27_C [22:22] ;
  assign { in_data_R21 [0], in_data_R21 [1], in_data_R21 [2], in_data_R21 [3], in_data_R21 [4], in_data_R21 [5], in_data_R21 [6], in_data_R21 [7], in_data_R21 [8], in_data_R21 [9], in_data_R21 [10], in_data_R21 [11], in_data_R21 [12], in_data_R21 [13], in_data_R21 [14], in_data_R21 [15], in_data_R21 [16], in_data_R21 [17], in_data_R21 [18], in_data_R21 [19], in_data_R21 [20], in_data_R21 [21], in_data_R21 [22], in_data_R21 [23], in_data_R21 [24], in_data_R21 [25], in_data_R21 [26], in_data_R21 [27], in_data_R21 [28], in_data_R21 [29], in_data_R21 [30], in_data_R21 [31], in_data_R21 [32], in_data_R21 [33], in_data_R21 [34], in_data_R21 [35], in_data_R21 [36], in_data_R21 [43:38] } = 0;
  assign { in_data_X21 [0], in_data_X21 [1], in_data_X21 [2], in_data_X21 [3], in_data_X21 [4], in_data_X21 [5], in_data_X21 [6], in_data_X21 [7], in_data_X21 [8], in_data_X21 [9], in_data_X21 [10], in_data_X21 [11], in_data_X21 [12], in_data_X21 [13], in_data_X21 [14], in_data_X21 [15], in_data_X21 [16], in_data_X21 [17], in_data_X21 [18], in_data_X21 [19], in_data_X21 [20], in_data_X21 [21], in_data_X21 [22], in_data_X21 [23], in_data_X21 [24], in_data_X21 [25], in_data_X21 [26], in_data_X21 [27], in_data_X21 [28], in_data_X21 [29], in_data_X21 [30], in_data_X21 [31], in_data_X21 [32], in_data_X21 [33], in_data_X21 [34], in_data_X21 [35], in_data_X21 [36], in_data_X21 [43:38] } = 0;
  assign { in_data_C21 [0], in_data_C21 [1], in_data_C21 [2], in_data_C21 [3], in_data_C21 [4], in_data_C21 [5], in_data_C21 [6], in_data_C21 [7], in_data_C21 [8], in_data_C21 [9], in_data_C21 [10], in_data_C21 [11], in_data_C21 [12], in_data_C21 [13], in_data_C21 [14], in_data_C21 [15], in_data_C21 [16], in_data_C21 [17], in_data_C21 [18], in_data_C21 [19], in_data_C21 [20], in_data_C21 [21], in_data_C21 [22], in_data_C21 [23], in_data_C21 [24], in_data_C21 [25], in_data_C21 [26], in_data_C21 [27], in_data_C21 [28], in_data_C21 [29], in_data_C21 [30], in_data_C21 [31], in_data_C21 [32], in_data_C21 [33], in_data_C21 [34], in_data_C21 [35], in_data_C21 [36], in_data_C21 [43:38] } = 0;
  logic [43:0] in_data_R22 ;
  logic [43:0] in_data_X22 ;
  logic [43:0] in_data_C22 ;
  assign in_data_R22 [37:37] = fangyuan27_R [21:21] ;
  assign in_data_X22 [37:37] = fangyuan27_X [21:21] ;
  assign in_data_C22 [37:37] = fangyuan27_C [21:21] ;
  assign { in_data_R22 [0], in_data_R22 [1], in_data_R22 [2], in_data_R22 [3], in_data_R22 [4], in_data_R22 [5], in_data_R22 [6], in_data_R22 [7], in_data_R22 [8], in_data_R22 [9], in_data_R22 [10], in_data_R22 [11], in_data_R22 [12], in_data_R22 [13], in_data_R22 [14], in_data_R22 [15], in_data_R22 [16], in_data_R22 [17], in_data_R22 [18], in_data_R22 [19], in_data_R22 [20], in_data_R22 [21], in_data_R22 [22], in_data_R22 [23], in_data_R22 [24], in_data_R22 [25], in_data_R22 [26], in_data_R22 [27], in_data_R22 [28], in_data_R22 [29], in_data_R22 [30], in_data_R22 [31], in_data_R22 [32], in_data_R22 [33], in_data_R22 [34], in_data_R22 [35], in_data_R22 [36], in_data_R22 [43:38] } = 0;
  assign { in_data_X22 [0], in_data_X22 [1], in_data_X22 [2], in_data_X22 [3], in_data_X22 [4], in_data_X22 [5], in_data_X22 [6], in_data_X22 [7], in_data_X22 [8], in_data_X22 [9], in_data_X22 [10], in_data_X22 [11], in_data_X22 [12], in_data_X22 [13], in_data_X22 [14], in_data_X22 [15], in_data_X22 [16], in_data_X22 [17], in_data_X22 [18], in_data_X22 [19], in_data_X22 [20], in_data_X22 [21], in_data_X22 [22], in_data_X22 [23], in_data_X22 [24], in_data_X22 [25], in_data_X22 [26], in_data_X22 [27], in_data_X22 [28], in_data_X22 [29], in_data_X22 [30], in_data_X22 [31], in_data_X22 [32], in_data_X22 [33], in_data_X22 [34], in_data_X22 [35], in_data_X22 [36], in_data_X22 [43:38] } = 0;
  assign { in_data_C22 [0], in_data_C22 [1], in_data_C22 [2], in_data_C22 [3], in_data_C22 [4], in_data_C22 [5], in_data_C22 [6], in_data_C22 [7], in_data_C22 [8], in_data_C22 [9], in_data_C22 [10], in_data_C22 [11], in_data_C22 [12], in_data_C22 [13], in_data_C22 [14], in_data_C22 [15], in_data_C22 [16], in_data_C22 [17], in_data_C22 [18], in_data_C22 [19], in_data_C22 [20], in_data_C22 [21], in_data_C22 [22], in_data_C22 [23], in_data_C22 [24], in_data_C22 [25], in_data_C22 [26], in_data_C22 [27], in_data_C22 [28], in_data_C22 [29], in_data_C22 [30], in_data_C22 [31], in_data_C22 [32], in_data_C22 [33], in_data_C22 [34], in_data_C22 [35], in_data_C22 [36], in_data_C22 [43:38] } = 0;
  logic [43:0] in_data_R23 ;
  logic [43:0] in_data_X23 ;
  logic [43:0] in_data_C23 ;
  assign in_data_R23 [37:37] = fangyuan27_R [20:20] ;
  assign in_data_X23 [37:37] = fangyuan27_X [20:20] ;
  assign in_data_C23 [37:37] = fangyuan27_C [20:20] ;
  assign { in_data_R23 [0], in_data_R23 [1], in_data_R23 [2], in_data_R23 [3], in_data_R23 [4], in_data_R23 [5], in_data_R23 [6], in_data_R23 [7], in_data_R23 [8], in_data_R23 [9], in_data_R23 [10], in_data_R23 [11], in_data_R23 [12], in_data_R23 [13], in_data_R23 [14], in_data_R23 [15], in_data_R23 [16], in_data_R23 [17], in_data_R23 [18], in_data_R23 [19], in_data_R23 [20], in_data_R23 [21], in_data_R23 [22], in_data_R23 [23], in_data_R23 [24], in_data_R23 [25], in_data_R23 [26], in_data_R23 [27], in_data_R23 [28], in_data_R23 [29], in_data_R23 [30], in_data_R23 [31], in_data_R23 [32], in_data_R23 [33], in_data_R23 [34], in_data_R23 [35], in_data_R23 [36], in_data_R23 [43:38] } = 0;
  assign { in_data_X23 [0], in_data_X23 [1], in_data_X23 [2], in_data_X23 [3], in_data_X23 [4], in_data_X23 [5], in_data_X23 [6], in_data_X23 [7], in_data_X23 [8], in_data_X23 [9], in_data_X23 [10], in_data_X23 [11], in_data_X23 [12], in_data_X23 [13], in_data_X23 [14], in_data_X23 [15], in_data_X23 [16], in_data_X23 [17], in_data_X23 [18], in_data_X23 [19], in_data_X23 [20], in_data_X23 [21], in_data_X23 [22], in_data_X23 [23], in_data_X23 [24], in_data_X23 [25], in_data_X23 [26], in_data_X23 [27], in_data_X23 [28], in_data_X23 [29], in_data_X23 [30], in_data_X23 [31], in_data_X23 [32], in_data_X23 [33], in_data_X23 [34], in_data_X23 [35], in_data_X23 [36], in_data_X23 [43:38] } = 0;
  assign { in_data_C23 [0], in_data_C23 [1], in_data_C23 [2], in_data_C23 [3], in_data_C23 [4], in_data_C23 [5], in_data_C23 [6], in_data_C23 [7], in_data_C23 [8], in_data_C23 [9], in_data_C23 [10], in_data_C23 [11], in_data_C23 [12], in_data_C23 [13], in_data_C23 [14], in_data_C23 [15], in_data_C23 [16], in_data_C23 [17], in_data_C23 [18], in_data_C23 [19], in_data_C23 [20], in_data_C23 [21], in_data_C23 [22], in_data_C23 [23], in_data_C23 [24], in_data_C23 [25], in_data_C23 [26], in_data_C23 [27], in_data_C23 [28], in_data_C23 [29], in_data_C23 [30], in_data_C23 [31], in_data_C23 [32], in_data_C23 [33], in_data_C23 [34], in_data_C23 [35], in_data_C23 [36], in_data_C23 [43:38] } = 0;
  logic [43:0] in_data_R24 ;
  logic [43:0] in_data_X24 ;
  logic [43:0] in_data_C24 ;
  assign in_data_R24 [37:37] = fangyuan27_R [19:19] ;
  assign in_data_X24 [37:37] = fangyuan27_X [19:19] ;
  assign in_data_C24 [37:37] = fangyuan27_C [19:19] ;
  assign { in_data_R24 [0], in_data_R24 [1], in_data_R24 [2], in_data_R24 [3], in_data_R24 [4], in_data_R24 [5], in_data_R24 [6], in_data_R24 [7], in_data_R24 [8], in_data_R24 [9], in_data_R24 [10], in_data_R24 [11], in_data_R24 [12], in_data_R24 [13], in_data_R24 [14], in_data_R24 [15], in_data_R24 [16], in_data_R24 [17], in_data_R24 [18], in_data_R24 [19], in_data_R24 [20], in_data_R24 [21], in_data_R24 [22], in_data_R24 [23], in_data_R24 [24], in_data_R24 [25], in_data_R24 [26], in_data_R24 [27], in_data_R24 [28], in_data_R24 [29], in_data_R24 [30], in_data_R24 [31], in_data_R24 [32], in_data_R24 [33], in_data_R24 [34], in_data_R24 [35], in_data_R24 [36], in_data_R24 [43:38] } = 0;
  assign { in_data_X24 [0], in_data_X24 [1], in_data_X24 [2], in_data_X24 [3], in_data_X24 [4], in_data_X24 [5], in_data_X24 [6], in_data_X24 [7], in_data_X24 [8], in_data_X24 [9], in_data_X24 [10], in_data_X24 [11], in_data_X24 [12], in_data_X24 [13], in_data_X24 [14], in_data_X24 [15], in_data_X24 [16], in_data_X24 [17], in_data_X24 [18], in_data_X24 [19], in_data_X24 [20], in_data_X24 [21], in_data_X24 [22], in_data_X24 [23], in_data_X24 [24], in_data_X24 [25], in_data_X24 [26], in_data_X24 [27], in_data_X24 [28], in_data_X24 [29], in_data_X24 [30], in_data_X24 [31], in_data_X24 [32], in_data_X24 [33], in_data_X24 [34], in_data_X24 [35], in_data_X24 [36], in_data_X24 [43:38] } = 0;
  assign { in_data_C24 [0], in_data_C24 [1], in_data_C24 [2], in_data_C24 [3], in_data_C24 [4], in_data_C24 [5], in_data_C24 [6], in_data_C24 [7], in_data_C24 [8], in_data_C24 [9], in_data_C24 [10], in_data_C24 [11], in_data_C24 [12], in_data_C24 [13], in_data_C24 [14], in_data_C24 [15], in_data_C24 [16], in_data_C24 [17], in_data_C24 [18], in_data_C24 [19], in_data_C24 [20], in_data_C24 [21], in_data_C24 [22], in_data_C24 [23], in_data_C24 [24], in_data_C24 [25], in_data_C24 [26], in_data_C24 [27], in_data_C24 [28], in_data_C24 [29], in_data_C24 [30], in_data_C24 [31], in_data_C24 [32], in_data_C24 [33], in_data_C24 [34], in_data_C24 [35], in_data_C24 [36], in_data_C24 [43:38] } = 0;
  logic [43:0] in_data_R25 ;
  logic [43:0] in_data_X25 ;
  logic [43:0] in_data_C25 ;
  assign in_data_R25 [37:37] = fangyuan27_R [18:18] ;
  assign in_data_X25 [37:37] = fangyuan27_X [18:18] ;
  assign in_data_C25 [37:37] = fangyuan27_C [18:18] ;
  assign { in_data_R25 [0], in_data_R25 [1], in_data_R25 [2], in_data_R25 [3], in_data_R25 [4], in_data_R25 [5], in_data_R25 [6], in_data_R25 [7], in_data_R25 [8], in_data_R25 [9], in_data_R25 [10], in_data_R25 [11], in_data_R25 [12], in_data_R25 [13], in_data_R25 [14], in_data_R25 [15], in_data_R25 [16], in_data_R25 [17], in_data_R25 [18], in_data_R25 [19], in_data_R25 [20], in_data_R25 [21], in_data_R25 [22], in_data_R25 [23], in_data_R25 [24], in_data_R25 [25], in_data_R25 [26], in_data_R25 [27], in_data_R25 [28], in_data_R25 [29], in_data_R25 [30], in_data_R25 [31], in_data_R25 [32], in_data_R25 [33], in_data_R25 [34], in_data_R25 [35], in_data_R25 [36], in_data_R25 [43:38] } = 0;
  assign { in_data_X25 [0], in_data_X25 [1], in_data_X25 [2], in_data_X25 [3], in_data_X25 [4], in_data_X25 [5], in_data_X25 [6], in_data_X25 [7], in_data_X25 [8], in_data_X25 [9], in_data_X25 [10], in_data_X25 [11], in_data_X25 [12], in_data_X25 [13], in_data_X25 [14], in_data_X25 [15], in_data_X25 [16], in_data_X25 [17], in_data_X25 [18], in_data_X25 [19], in_data_X25 [20], in_data_X25 [21], in_data_X25 [22], in_data_X25 [23], in_data_X25 [24], in_data_X25 [25], in_data_X25 [26], in_data_X25 [27], in_data_X25 [28], in_data_X25 [29], in_data_X25 [30], in_data_X25 [31], in_data_X25 [32], in_data_X25 [33], in_data_X25 [34], in_data_X25 [35], in_data_X25 [36], in_data_X25 [43:38] } = 0;
  assign { in_data_C25 [0], in_data_C25 [1], in_data_C25 [2], in_data_C25 [3], in_data_C25 [4], in_data_C25 [5], in_data_C25 [6], in_data_C25 [7], in_data_C25 [8], in_data_C25 [9], in_data_C25 [10], in_data_C25 [11], in_data_C25 [12], in_data_C25 [13], in_data_C25 [14], in_data_C25 [15], in_data_C25 [16], in_data_C25 [17], in_data_C25 [18], in_data_C25 [19], in_data_C25 [20], in_data_C25 [21], in_data_C25 [22], in_data_C25 [23], in_data_C25 [24], in_data_C25 [25], in_data_C25 [26], in_data_C25 [27], in_data_C25 [28], in_data_C25 [29], in_data_C25 [30], in_data_C25 [31], in_data_C25 [32], in_data_C25 [33], in_data_C25 [34], in_data_C25 [35], in_data_C25 [36], in_data_C25 [43:38] } = 0;
  logic [43:0] in_data_R26 ;
  logic [43:0] in_data_X26 ;
  logic [43:0] in_data_C26 ;
  assign in_data_R26 [37:37] = fangyuan27_R [17:17] ;
  assign in_data_X26 [37:37] = fangyuan27_X [17:17] ;
  assign in_data_C26 [37:37] = fangyuan27_C [17:17] ;
  assign { in_data_R26 [0], in_data_R26 [1], in_data_R26 [2], in_data_R26 [3], in_data_R26 [4], in_data_R26 [5], in_data_R26 [6], in_data_R26 [7], in_data_R26 [8], in_data_R26 [9], in_data_R26 [10], in_data_R26 [11], in_data_R26 [12], in_data_R26 [13], in_data_R26 [14], in_data_R26 [15], in_data_R26 [16], in_data_R26 [17], in_data_R26 [18], in_data_R26 [19], in_data_R26 [20], in_data_R26 [21], in_data_R26 [22], in_data_R26 [23], in_data_R26 [24], in_data_R26 [25], in_data_R26 [26], in_data_R26 [27], in_data_R26 [28], in_data_R26 [29], in_data_R26 [30], in_data_R26 [31], in_data_R26 [32], in_data_R26 [33], in_data_R26 [34], in_data_R26 [35], in_data_R26 [36], in_data_R26 [43:38] } = 0;
  assign { in_data_X26 [0], in_data_X26 [1], in_data_X26 [2], in_data_X26 [3], in_data_X26 [4], in_data_X26 [5], in_data_X26 [6], in_data_X26 [7], in_data_X26 [8], in_data_X26 [9], in_data_X26 [10], in_data_X26 [11], in_data_X26 [12], in_data_X26 [13], in_data_X26 [14], in_data_X26 [15], in_data_X26 [16], in_data_X26 [17], in_data_X26 [18], in_data_X26 [19], in_data_X26 [20], in_data_X26 [21], in_data_X26 [22], in_data_X26 [23], in_data_X26 [24], in_data_X26 [25], in_data_X26 [26], in_data_X26 [27], in_data_X26 [28], in_data_X26 [29], in_data_X26 [30], in_data_X26 [31], in_data_X26 [32], in_data_X26 [33], in_data_X26 [34], in_data_X26 [35], in_data_X26 [36], in_data_X26 [43:38] } = 0;
  assign { in_data_C26 [0], in_data_C26 [1], in_data_C26 [2], in_data_C26 [3], in_data_C26 [4], in_data_C26 [5], in_data_C26 [6], in_data_C26 [7], in_data_C26 [8], in_data_C26 [9], in_data_C26 [10], in_data_C26 [11], in_data_C26 [12], in_data_C26 [13], in_data_C26 [14], in_data_C26 [15], in_data_C26 [16], in_data_C26 [17], in_data_C26 [18], in_data_C26 [19], in_data_C26 [20], in_data_C26 [21], in_data_C26 [22], in_data_C26 [23], in_data_C26 [24], in_data_C26 [25], in_data_C26 [26], in_data_C26 [27], in_data_C26 [28], in_data_C26 [29], in_data_C26 [30], in_data_C26 [31], in_data_C26 [32], in_data_C26 [33], in_data_C26 [34], in_data_C26 [35], in_data_C26 [36], in_data_C26 [43:38] } = 0;
  logic [43:0] in_data_R27 ;
  logic [43:0] in_data_X27 ;
  logic [43:0] in_data_C27 ;
  assign in_data_R27 [37:37] = fangyuan27_R [16:16] ;
  assign in_data_X27 [37:37] = fangyuan27_X [16:16] ;
  assign in_data_C27 [37:37] = fangyuan27_C [16:16] ;
  assign { in_data_R27 [0], in_data_R27 [1], in_data_R27 [2], in_data_R27 [3], in_data_R27 [4], in_data_R27 [5], in_data_R27 [6], in_data_R27 [7], in_data_R27 [8], in_data_R27 [9], in_data_R27 [10], in_data_R27 [11], in_data_R27 [12], in_data_R27 [13], in_data_R27 [14], in_data_R27 [15], in_data_R27 [16], in_data_R27 [17], in_data_R27 [18], in_data_R27 [19], in_data_R27 [20], in_data_R27 [21], in_data_R27 [22], in_data_R27 [23], in_data_R27 [24], in_data_R27 [25], in_data_R27 [26], in_data_R27 [27], in_data_R27 [28], in_data_R27 [29], in_data_R27 [30], in_data_R27 [31], in_data_R27 [32], in_data_R27 [33], in_data_R27 [34], in_data_R27 [35], in_data_R27 [36], in_data_R27 [43:38] } = 0;
  assign { in_data_X27 [0], in_data_X27 [1], in_data_X27 [2], in_data_X27 [3], in_data_X27 [4], in_data_X27 [5], in_data_X27 [6], in_data_X27 [7], in_data_X27 [8], in_data_X27 [9], in_data_X27 [10], in_data_X27 [11], in_data_X27 [12], in_data_X27 [13], in_data_X27 [14], in_data_X27 [15], in_data_X27 [16], in_data_X27 [17], in_data_X27 [18], in_data_X27 [19], in_data_X27 [20], in_data_X27 [21], in_data_X27 [22], in_data_X27 [23], in_data_X27 [24], in_data_X27 [25], in_data_X27 [26], in_data_X27 [27], in_data_X27 [28], in_data_X27 [29], in_data_X27 [30], in_data_X27 [31], in_data_X27 [32], in_data_X27 [33], in_data_X27 [34], in_data_X27 [35], in_data_X27 [36], in_data_X27 [43:38] } = 0;
  assign { in_data_C27 [0], in_data_C27 [1], in_data_C27 [2], in_data_C27 [3], in_data_C27 [4], in_data_C27 [5], in_data_C27 [6], in_data_C27 [7], in_data_C27 [8], in_data_C27 [9], in_data_C27 [10], in_data_C27 [11], in_data_C27 [12], in_data_C27 [13], in_data_C27 [14], in_data_C27 [15], in_data_C27 [16], in_data_C27 [17], in_data_C27 [18], in_data_C27 [19], in_data_C27 [20], in_data_C27 [21], in_data_C27 [22], in_data_C27 [23], in_data_C27 [24], in_data_C27 [25], in_data_C27 [26], in_data_C27 [27], in_data_C27 [28], in_data_C27 [29], in_data_C27 [30], in_data_C27 [31], in_data_C27 [32], in_data_C27 [33], in_data_C27 [34], in_data_C27 [35], in_data_C27 [36], in_data_C27 [43:38] } = 0;
  logic [43:0] in_data_R28 ;
  logic [43:0] in_data_X28 ;
  logic [43:0] in_data_C28 ;
  assign in_data_R28 [37:37] = fangyuan27_R [15:15] ;
  assign in_data_X28 [37:37] = fangyuan27_X [15:15] ;
  assign in_data_C28 [37:37] = fangyuan27_C [15:15] ;
  assign { in_data_R28 [0], in_data_R28 [1], in_data_R28 [2], in_data_R28 [3], in_data_R28 [4], in_data_R28 [5], in_data_R28 [6], in_data_R28 [7], in_data_R28 [8], in_data_R28 [9], in_data_R28 [10], in_data_R28 [11], in_data_R28 [12], in_data_R28 [13], in_data_R28 [14], in_data_R28 [15], in_data_R28 [16], in_data_R28 [17], in_data_R28 [18], in_data_R28 [19], in_data_R28 [20], in_data_R28 [21], in_data_R28 [22], in_data_R28 [23], in_data_R28 [24], in_data_R28 [25], in_data_R28 [26], in_data_R28 [27], in_data_R28 [28], in_data_R28 [29], in_data_R28 [30], in_data_R28 [31], in_data_R28 [32], in_data_R28 [33], in_data_R28 [34], in_data_R28 [35], in_data_R28 [36], in_data_R28 [43:38] } = 0;
  assign { in_data_X28 [0], in_data_X28 [1], in_data_X28 [2], in_data_X28 [3], in_data_X28 [4], in_data_X28 [5], in_data_X28 [6], in_data_X28 [7], in_data_X28 [8], in_data_X28 [9], in_data_X28 [10], in_data_X28 [11], in_data_X28 [12], in_data_X28 [13], in_data_X28 [14], in_data_X28 [15], in_data_X28 [16], in_data_X28 [17], in_data_X28 [18], in_data_X28 [19], in_data_X28 [20], in_data_X28 [21], in_data_X28 [22], in_data_X28 [23], in_data_X28 [24], in_data_X28 [25], in_data_X28 [26], in_data_X28 [27], in_data_X28 [28], in_data_X28 [29], in_data_X28 [30], in_data_X28 [31], in_data_X28 [32], in_data_X28 [33], in_data_X28 [34], in_data_X28 [35], in_data_X28 [36], in_data_X28 [43:38] } = 0;
  assign { in_data_C28 [0], in_data_C28 [1], in_data_C28 [2], in_data_C28 [3], in_data_C28 [4], in_data_C28 [5], in_data_C28 [6], in_data_C28 [7], in_data_C28 [8], in_data_C28 [9], in_data_C28 [10], in_data_C28 [11], in_data_C28 [12], in_data_C28 [13], in_data_C28 [14], in_data_C28 [15], in_data_C28 [16], in_data_C28 [17], in_data_C28 [18], in_data_C28 [19], in_data_C28 [20], in_data_C28 [21], in_data_C28 [22], in_data_C28 [23], in_data_C28 [24], in_data_C28 [25], in_data_C28 [26], in_data_C28 [27], in_data_C28 [28], in_data_C28 [29], in_data_C28 [30], in_data_C28 [31], in_data_C28 [32], in_data_C28 [33], in_data_C28 [34], in_data_C28 [35], in_data_C28 [36], in_data_C28 [43:38] } = 0;
  logic [43:0] in_data_R29 ;
  logic [43:0] in_data_X29 ;
  logic [43:0] in_data_C29 ;
  assign in_data_R29 [37:37] = fangyuan27_R [14:14] ;
  assign in_data_X29 [37:37] = fangyuan27_X [14:14] ;
  assign in_data_C29 [37:37] = fangyuan27_C [14:14] ;
  assign { in_data_R29 [0], in_data_R29 [1], in_data_R29 [2], in_data_R29 [3], in_data_R29 [4], in_data_R29 [5], in_data_R29 [6], in_data_R29 [7], in_data_R29 [8], in_data_R29 [9], in_data_R29 [10], in_data_R29 [11], in_data_R29 [12], in_data_R29 [13], in_data_R29 [14], in_data_R29 [15], in_data_R29 [16], in_data_R29 [17], in_data_R29 [18], in_data_R29 [19], in_data_R29 [20], in_data_R29 [21], in_data_R29 [22], in_data_R29 [23], in_data_R29 [24], in_data_R29 [25], in_data_R29 [26], in_data_R29 [27], in_data_R29 [28], in_data_R29 [29], in_data_R29 [30], in_data_R29 [31], in_data_R29 [32], in_data_R29 [33], in_data_R29 [34], in_data_R29 [35], in_data_R29 [36], in_data_R29 [43:38] } = 0;
  assign { in_data_X29 [0], in_data_X29 [1], in_data_X29 [2], in_data_X29 [3], in_data_X29 [4], in_data_X29 [5], in_data_X29 [6], in_data_X29 [7], in_data_X29 [8], in_data_X29 [9], in_data_X29 [10], in_data_X29 [11], in_data_X29 [12], in_data_X29 [13], in_data_X29 [14], in_data_X29 [15], in_data_X29 [16], in_data_X29 [17], in_data_X29 [18], in_data_X29 [19], in_data_X29 [20], in_data_X29 [21], in_data_X29 [22], in_data_X29 [23], in_data_X29 [24], in_data_X29 [25], in_data_X29 [26], in_data_X29 [27], in_data_X29 [28], in_data_X29 [29], in_data_X29 [30], in_data_X29 [31], in_data_X29 [32], in_data_X29 [33], in_data_X29 [34], in_data_X29 [35], in_data_X29 [36], in_data_X29 [43:38] } = 0;
  assign { in_data_C29 [0], in_data_C29 [1], in_data_C29 [2], in_data_C29 [3], in_data_C29 [4], in_data_C29 [5], in_data_C29 [6], in_data_C29 [7], in_data_C29 [8], in_data_C29 [9], in_data_C29 [10], in_data_C29 [11], in_data_C29 [12], in_data_C29 [13], in_data_C29 [14], in_data_C29 [15], in_data_C29 [16], in_data_C29 [17], in_data_C29 [18], in_data_C29 [19], in_data_C29 [20], in_data_C29 [21], in_data_C29 [22], in_data_C29 [23], in_data_C29 [24], in_data_C29 [25], in_data_C29 [26], in_data_C29 [27], in_data_C29 [28], in_data_C29 [29], in_data_C29 [30], in_data_C29 [31], in_data_C29 [32], in_data_C29 [33], in_data_C29 [34], in_data_C29 [35], in_data_C29 [36], in_data_C29 [43:38] } = 0;
  logic [43:0] in_data_R30 ;
  logic [43:0] in_data_X30 ;
  logic [43:0] in_data_C30 ;
  assign in_data_R30 [37:37] = fangyuan27_R [13:13] ;
  assign in_data_X30 [37:37] = fangyuan27_X [13:13] ;
  assign in_data_C30 [37:37] = fangyuan27_C [13:13] ;
  assign { in_data_R30 [0], in_data_R30 [1], in_data_R30 [2], in_data_R30 [3], in_data_R30 [4], in_data_R30 [5], in_data_R30 [6], in_data_R30 [7], in_data_R30 [8], in_data_R30 [9], in_data_R30 [10], in_data_R30 [11], in_data_R30 [12], in_data_R30 [13], in_data_R30 [14], in_data_R30 [15], in_data_R30 [16], in_data_R30 [17], in_data_R30 [18], in_data_R30 [19], in_data_R30 [20], in_data_R30 [21], in_data_R30 [22], in_data_R30 [23], in_data_R30 [24], in_data_R30 [25], in_data_R30 [26], in_data_R30 [27], in_data_R30 [28], in_data_R30 [29], in_data_R30 [30], in_data_R30 [31], in_data_R30 [32], in_data_R30 [33], in_data_R30 [34], in_data_R30 [35], in_data_R30 [36], in_data_R30 [43:38] } = 0;
  assign { in_data_X30 [0], in_data_X30 [1], in_data_X30 [2], in_data_X30 [3], in_data_X30 [4], in_data_X30 [5], in_data_X30 [6], in_data_X30 [7], in_data_X30 [8], in_data_X30 [9], in_data_X30 [10], in_data_X30 [11], in_data_X30 [12], in_data_X30 [13], in_data_X30 [14], in_data_X30 [15], in_data_X30 [16], in_data_X30 [17], in_data_X30 [18], in_data_X30 [19], in_data_X30 [20], in_data_X30 [21], in_data_X30 [22], in_data_X30 [23], in_data_X30 [24], in_data_X30 [25], in_data_X30 [26], in_data_X30 [27], in_data_X30 [28], in_data_X30 [29], in_data_X30 [30], in_data_X30 [31], in_data_X30 [32], in_data_X30 [33], in_data_X30 [34], in_data_X30 [35], in_data_X30 [36], in_data_X30 [43:38] } = 0;
  assign { in_data_C30 [0], in_data_C30 [1], in_data_C30 [2], in_data_C30 [3], in_data_C30 [4], in_data_C30 [5], in_data_C30 [6], in_data_C30 [7], in_data_C30 [8], in_data_C30 [9], in_data_C30 [10], in_data_C30 [11], in_data_C30 [12], in_data_C30 [13], in_data_C30 [14], in_data_C30 [15], in_data_C30 [16], in_data_C30 [17], in_data_C30 [18], in_data_C30 [19], in_data_C30 [20], in_data_C30 [21], in_data_C30 [22], in_data_C30 [23], in_data_C30 [24], in_data_C30 [25], in_data_C30 [26], in_data_C30 [27], in_data_C30 [28], in_data_C30 [29], in_data_C30 [30], in_data_C30 [31], in_data_C30 [32], in_data_C30 [33], in_data_C30 [34], in_data_C30 [35], in_data_C30 [36], in_data_C30 [43:38] } = 0;
  logic [43:0] in_data_R31 ;
  logic [43:0] in_data_X31 ;
  logic [43:0] in_data_C31 ;
  assign in_data_R31 [37:37] = fangyuan27_R [12:12] ;
  assign in_data_X31 [37:37] = fangyuan27_X [12:12] ;
  assign in_data_C31 [37:37] = fangyuan27_C [12:12] ;
  assign { in_data_R31 [0], in_data_R31 [1], in_data_R31 [2], in_data_R31 [3], in_data_R31 [4], in_data_R31 [5], in_data_R31 [6], in_data_R31 [7], in_data_R31 [8], in_data_R31 [9], in_data_R31 [10], in_data_R31 [11], in_data_R31 [12], in_data_R31 [13], in_data_R31 [14], in_data_R31 [15], in_data_R31 [16], in_data_R31 [17], in_data_R31 [18], in_data_R31 [19], in_data_R31 [20], in_data_R31 [21], in_data_R31 [22], in_data_R31 [23], in_data_R31 [24], in_data_R31 [25], in_data_R31 [26], in_data_R31 [27], in_data_R31 [28], in_data_R31 [29], in_data_R31 [30], in_data_R31 [31], in_data_R31 [32], in_data_R31 [33], in_data_R31 [34], in_data_R31 [35], in_data_R31 [36], in_data_R31 [43:38] } = 0;
  assign { in_data_X31 [0], in_data_X31 [1], in_data_X31 [2], in_data_X31 [3], in_data_X31 [4], in_data_X31 [5], in_data_X31 [6], in_data_X31 [7], in_data_X31 [8], in_data_X31 [9], in_data_X31 [10], in_data_X31 [11], in_data_X31 [12], in_data_X31 [13], in_data_X31 [14], in_data_X31 [15], in_data_X31 [16], in_data_X31 [17], in_data_X31 [18], in_data_X31 [19], in_data_X31 [20], in_data_X31 [21], in_data_X31 [22], in_data_X31 [23], in_data_X31 [24], in_data_X31 [25], in_data_X31 [26], in_data_X31 [27], in_data_X31 [28], in_data_X31 [29], in_data_X31 [30], in_data_X31 [31], in_data_X31 [32], in_data_X31 [33], in_data_X31 [34], in_data_X31 [35], in_data_X31 [36], in_data_X31 [43:38] } = 0;
  assign { in_data_C31 [0], in_data_C31 [1], in_data_C31 [2], in_data_C31 [3], in_data_C31 [4], in_data_C31 [5], in_data_C31 [6], in_data_C31 [7], in_data_C31 [8], in_data_C31 [9], in_data_C31 [10], in_data_C31 [11], in_data_C31 [12], in_data_C31 [13], in_data_C31 [14], in_data_C31 [15], in_data_C31 [16], in_data_C31 [17], in_data_C31 [18], in_data_C31 [19], in_data_C31 [20], in_data_C31 [21], in_data_C31 [22], in_data_C31 [23], in_data_C31 [24], in_data_C31 [25], in_data_C31 [26], in_data_C31 [27], in_data_C31 [28], in_data_C31 [29], in_data_C31 [30], in_data_C31 [31], in_data_C31 [32], in_data_C31 [33], in_data_C31 [34], in_data_C31 [35], in_data_C31 [36], in_data_C31 [43:38] } = 0;
  logic [43:0] in_data_R32 ;
  logic [43:0] in_data_X32 ;
  logic [43:0] in_data_C32 ;
  assign in_data_R32 [37:37] = fangyuan27_R [11:11] ;
  assign in_data_X32 [37:37] = fangyuan27_X [11:11] ;
  assign in_data_C32 [37:37] = fangyuan27_C [11:11] ;
  assign { in_data_R32 [0], in_data_R32 [1], in_data_R32 [2], in_data_R32 [3], in_data_R32 [4], in_data_R32 [5], in_data_R32 [6], in_data_R32 [7], in_data_R32 [8], in_data_R32 [9], in_data_R32 [10], in_data_R32 [11], in_data_R32 [12], in_data_R32 [13], in_data_R32 [14], in_data_R32 [15], in_data_R32 [16], in_data_R32 [17], in_data_R32 [18], in_data_R32 [19], in_data_R32 [20], in_data_R32 [21], in_data_R32 [22], in_data_R32 [23], in_data_R32 [24], in_data_R32 [25], in_data_R32 [26], in_data_R32 [27], in_data_R32 [28], in_data_R32 [29], in_data_R32 [30], in_data_R32 [31], in_data_R32 [32], in_data_R32 [33], in_data_R32 [34], in_data_R32 [35], in_data_R32 [36], in_data_R32 [43:38] } = 0;
  assign { in_data_X32 [0], in_data_X32 [1], in_data_X32 [2], in_data_X32 [3], in_data_X32 [4], in_data_X32 [5], in_data_X32 [6], in_data_X32 [7], in_data_X32 [8], in_data_X32 [9], in_data_X32 [10], in_data_X32 [11], in_data_X32 [12], in_data_X32 [13], in_data_X32 [14], in_data_X32 [15], in_data_X32 [16], in_data_X32 [17], in_data_X32 [18], in_data_X32 [19], in_data_X32 [20], in_data_X32 [21], in_data_X32 [22], in_data_X32 [23], in_data_X32 [24], in_data_X32 [25], in_data_X32 [26], in_data_X32 [27], in_data_X32 [28], in_data_X32 [29], in_data_X32 [30], in_data_X32 [31], in_data_X32 [32], in_data_X32 [33], in_data_X32 [34], in_data_X32 [35], in_data_X32 [36], in_data_X32 [43:38] } = 0;
  assign { in_data_C32 [0], in_data_C32 [1], in_data_C32 [2], in_data_C32 [3], in_data_C32 [4], in_data_C32 [5], in_data_C32 [6], in_data_C32 [7], in_data_C32 [8], in_data_C32 [9], in_data_C32 [10], in_data_C32 [11], in_data_C32 [12], in_data_C32 [13], in_data_C32 [14], in_data_C32 [15], in_data_C32 [16], in_data_C32 [17], in_data_C32 [18], in_data_C32 [19], in_data_C32 [20], in_data_C32 [21], in_data_C32 [22], in_data_C32 [23], in_data_C32 [24], in_data_C32 [25], in_data_C32 [26], in_data_C32 [27], in_data_C32 [28], in_data_C32 [29], in_data_C32 [30], in_data_C32 [31], in_data_C32 [32], in_data_C32 [33], in_data_C32 [34], in_data_C32 [35], in_data_C32 [36], in_data_C32 [43:38] } = 0;
  logic [43:0] in_data_R33 ;
  logic [43:0] in_data_X33 ;
  logic [43:0] in_data_C33 ;
  assign in_data_R33 [37:37] = fangyuan27_R [10:10] ;
  assign in_data_X33 [37:37] = fangyuan27_X [10:10] ;
  assign in_data_C33 [37:37] = fangyuan27_C [10:10] ;
  assign { in_data_R33 [0], in_data_R33 [1], in_data_R33 [2], in_data_R33 [3], in_data_R33 [4], in_data_R33 [5], in_data_R33 [6], in_data_R33 [7], in_data_R33 [8], in_data_R33 [9], in_data_R33 [10], in_data_R33 [11], in_data_R33 [12], in_data_R33 [13], in_data_R33 [14], in_data_R33 [15], in_data_R33 [16], in_data_R33 [17], in_data_R33 [18], in_data_R33 [19], in_data_R33 [20], in_data_R33 [21], in_data_R33 [22], in_data_R33 [23], in_data_R33 [24], in_data_R33 [25], in_data_R33 [26], in_data_R33 [27], in_data_R33 [28], in_data_R33 [29], in_data_R33 [30], in_data_R33 [31], in_data_R33 [32], in_data_R33 [33], in_data_R33 [34], in_data_R33 [35], in_data_R33 [36], in_data_R33 [43:38] } = 0;
  assign { in_data_X33 [0], in_data_X33 [1], in_data_X33 [2], in_data_X33 [3], in_data_X33 [4], in_data_X33 [5], in_data_X33 [6], in_data_X33 [7], in_data_X33 [8], in_data_X33 [9], in_data_X33 [10], in_data_X33 [11], in_data_X33 [12], in_data_X33 [13], in_data_X33 [14], in_data_X33 [15], in_data_X33 [16], in_data_X33 [17], in_data_X33 [18], in_data_X33 [19], in_data_X33 [20], in_data_X33 [21], in_data_X33 [22], in_data_X33 [23], in_data_X33 [24], in_data_X33 [25], in_data_X33 [26], in_data_X33 [27], in_data_X33 [28], in_data_X33 [29], in_data_X33 [30], in_data_X33 [31], in_data_X33 [32], in_data_X33 [33], in_data_X33 [34], in_data_X33 [35], in_data_X33 [36], in_data_X33 [43:38] } = 0;
  assign { in_data_C33 [0], in_data_C33 [1], in_data_C33 [2], in_data_C33 [3], in_data_C33 [4], in_data_C33 [5], in_data_C33 [6], in_data_C33 [7], in_data_C33 [8], in_data_C33 [9], in_data_C33 [10], in_data_C33 [11], in_data_C33 [12], in_data_C33 [13], in_data_C33 [14], in_data_C33 [15], in_data_C33 [16], in_data_C33 [17], in_data_C33 [18], in_data_C33 [19], in_data_C33 [20], in_data_C33 [21], in_data_C33 [22], in_data_C33 [23], in_data_C33 [24], in_data_C33 [25], in_data_C33 [26], in_data_C33 [27], in_data_C33 [28], in_data_C33 [29], in_data_C33 [30], in_data_C33 [31], in_data_C33 [32], in_data_C33 [33], in_data_C33 [34], in_data_C33 [35], in_data_C33 [36], in_data_C33 [43:38] } = 0;
  logic [43:0] in_data_R34 ;
  logic [43:0] in_data_X34 ;
  logic [43:0] in_data_C34 ;
  assign in_data_R34 [37:37] = fangyuan27_R [9:9] ;
  assign in_data_X34 [37:37] = fangyuan27_X [9:9] ;
  assign in_data_C34 [37:37] = fangyuan27_C [9:9] ;
  assign { in_data_R34 [0], in_data_R34 [1], in_data_R34 [2], in_data_R34 [3], in_data_R34 [4], in_data_R34 [5], in_data_R34 [6], in_data_R34 [7], in_data_R34 [8], in_data_R34 [9], in_data_R34 [10], in_data_R34 [11], in_data_R34 [12], in_data_R34 [13], in_data_R34 [14], in_data_R34 [15], in_data_R34 [16], in_data_R34 [17], in_data_R34 [18], in_data_R34 [19], in_data_R34 [20], in_data_R34 [21], in_data_R34 [22], in_data_R34 [23], in_data_R34 [24], in_data_R34 [25], in_data_R34 [26], in_data_R34 [27], in_data_R34 [28], in_data_R34 [29], in_data_R34 [30], in_data_R34 [31], in_data_R34 [32], in_data_R34 [33], in_data_R34 [34], in_data_R34 [35], in_data_R34 [36], in_data_R34 [43:38] } = 0;
  assign { in_data_X34 [0], in_data_X34 [1], in_data_X34 [2], in_data_X34 [3], in_data_X34 [4], in_data_X34 [5], in_data_X34 [6], in_data_X34 [7], in_data_X34 [8], in_data_X34 [9], in_data_X34 [10], in_data_X34 [11], in_data_X34 [12], in_data_X34 [13], in_data_X34 [14], in_data_X34 [15], in_data_X34 [16], in_data_X34 [17], in_data_X34 [18], in_data_X34 [19], in_data_X34 [20], in_data_X34 [21], in_data_X34 [22], in_data_X34 [23], in_data_X34 [24], in_data_X34 [25], in_data_X34 [26], in_data_X34 [27], in_data_X34 [28], in_data_X34 [29], in_data_X34 [30], in_data_X34 [31], in_data_X34 [32], in_data_X34 [33], in_data_X34 [34], in_data_X34 [35], in_data_X34 [36], in_data_X34 [43:38] } = 0;
  assign { in_data_C34 [0], in_data_C34 [1], in_data_C34 [2], in_data_C34 [3], in_data_C34 [4], in_data_C34 [5], in_data_C34 [6], in_data_C34 [7], in_data_C34 [8], in_data_C34 [9], in_data_C34 [10], in_data_C34 [11], in_data_C34 [12], in_data_C34 [13], in_data_C34 [14], in_data_C34 [15], in_data_C34 [16], in_data_C34 [17], in_data_C34 [18], in_data_C34 [19], in_data_C34 [20], in_data_C34 [21], in_data_C34 [22], in_data_C34 [23], in_data_C34 [24], in_data_C34 [25], in_data_C34 [26], in_data_C34 [27], in_data_C34 [28], in_data_C34 [29], in_data_C34 [30], in_data_C34 [31], in_data_C34 [32], in_data_C34 [33], in_data_C34 [34], in_data_C34 [35], in_data_C34 [36], in_data_C34 [43:38] } = 0;
  logic [43:0] in_data_R35 ;
  logic [43:0] in_data_X35 ;
  logic [43:0] in_data_C35 ;
  assign in_data_R35 [37:37] = fangyuan27_R [8:8] ;
  assign in_data_X35 [37:37] = fangyuan27_X [8:8] ;
  assign in_data_C35 [37:37] = fangyuan27_C [8:8] ;
  assign { in_data_R35 [0], in_data_R35 [1], in_data_R35 [2], in_data_R35 [3], in_data_R35 [4], in_data_R35 [5], in_data_R35 [6], in_data_R35 [7], in_data_R35 [8], in_data_R35 [9], in_data_R35 [10], in_data_R35 [11], in_data_R35 [12], in_data_R35 [13], in_data_R35 [14], in_data_R35 [15], in_data_R35 [16], in_data_R35 [17], in_data_R35 [18], in_data_R35 [19], in_data_R35 [20], in_data_R35 [21], in_data_R35 [22], in_data_R35 [23], in_data_R35 [24], in_data_R35 [25], in_data_R35 [26], in_data_R35 [27], in_data_R35 [28], in_data_R35 [29], in_data_R35 [30], in_data_R35 [31], in_data_R35 [32], in_data_R35 [33], in_data_R35 [34], in_data_R35 [35], in_data_R35 [36], in_data_R35 [43:38] } = 0;
  assign { in_data_X35 [0], in_data_X35 [1], in_data_X35 [2], in_data_X35 [3], in_data_X35 [4], in_data_X35 [5], in_data_X35 [6], in_data_X35 [7], in_data_X35 [8], in_data_X35 [9], in_data_X35 [10], in_data_X35 [11], in_data_X35 [12], in_data_X35 [13], in_data_X35 [14], in_data_X35 [15], in_data_X35 [16], in_data_X35 [17], in_data_X35 [18], in_data_X35 [19], in_data_X35 [20], in_data_X35 [21], in_data_X35 [22], in_data_X35 [23], in_data_X35 [24], in_data_X35 [25], in_data_X35 [26], in_data_X35 [27], in_data_X35 [28], in_data_X35 [29], in_data_X35 [30], in_data_X35 [31], in_data_X35 [32], in_data_X35 [33], in_data_X35 [34], in_data_X35 [35], in_data_X35 [36], in_data_X35 [43:38] } = 0;
  assign { in_data_C35 [0], in_data_C35 [1], in_data_C35 [2], in_data_C35 [3], in_data_C35 [4], in_data_C35 [5], in_data_C35 [6], in_data_C35 [7], in_data_C35 [8], in_data_C35 [9], in_data_C35 [10], in_data_C35 [11], in_data_C35 [12], in_data_C35 [13], in_data_C35 [14], in_data_C35 [15], in_data_C35 [16], in_data_C35 [17], in_data_C35 [18], in_data_C35 [19], in_data_C35 [20], in_data_C35 [21], in_data_C35 [22], in_data_C35 [23], in_data_C35 [24], in_data_C35 [25], in_data_C35 [26], in_data_C35 [27], in_data_C35 [28], in_data_C35 [29], in_data_C35 [30], in_data_C35 [31], in_data_C35 [32], in_data_C35 [33], in_data_C35 [34], in_data_C35 [35], in_data_C35 [36], in_data_C35 [43:38] } = 0;
  logic [43:0] in_data_R36 ;
  logic [43:0] in_data_X36 ;
  logic [43:0] in_data_C36 ;
  assign in_data_R36 [37:37] = fangyuan27_R [7:7] ;
  assign in_data_X36 [37:37] = fangyuan27_X [7:7] ;
  assign in_data_C36 [37:37] = fangyuan27_C [7:7] ;
  assign { in_data_R36 [0], in_data_R36 [1], in_data_R36 [2], in_data_R36 [3], in_data_R36 [4], in_data_R36 [5], in_data_R36 [6], in_data_R36 [7], in_data_R36 [8], in_data_R36 [9], in_data_R36 [10], in_data_R36 [11], in_data_R36 [12], in_data_R36 [13], in_data_R36 [14], in_data_R36 [15], in_data_R36 [16], in_data_R36 [17], in_data_R36 [18], in_data_R36 [19], in_data_R36 [20], in_data_R36 [21], in_data_R36 [22], in_data_R36 [23], in_data_R36 [24], in_data_R36 [25], in_data_R36 [26], in_data_R36 [27], in_data_R36 [28], in_data_R36 [29], in_data_R36 [30], in_data_R36 [31], in_data_R36 [32], in_data_R36 [33], in_data_R36 [34], in_data_R36 [35], in_data_R36 [36], in_data_R36 [43:38] } = 0;
  assign { in_data_X36 [0], in_data_X36 [1], in_data_X36 [2], in_data_X36 [3], in_data_X36 [4], in_data_X36 [5], in_data_X36 [6], in_data_X36 [7], in_data_X36 [8], in_data_X36 [9], in_data_X36 [10], in_data_X36 [11], in_data_X36 [12], in_data_X36 [13], in_data_X36 [14], in_data_X36 [15], in_data_X36 [16], in_data_X36 [17], in_data_X36 [18], in_data_X36 [19], in_data_X36 [20], in_data_X36 [21], in_data_X36 [22], in_data_X36 [23], in_data_X36 [24], in_data_X36 [25], in_data_X36 [26], in_data_X36 [27], in_data_X36 [28], in_data_X36 [29], in_data_X36 [30], in_data_X36 [31], in_data_X36 [32], in_data_X36 [33], in_data_X36 [34], in_data_X36 [35], in_data_X36 [36], in_data_X36 [43:38] } = 0;
  assign { in_data_C36 [0], in_data_C36 [1], in_data_C36 [2], in_data_C36 [3], in_data_C36 [4], in_data_C36 [5], in_data_C36 [6], in_data_C36 [7], in_data_C36 [8], in_data_C36 [9], in_data_C36 [10], in_data_C36 [11], in_data_C36 [12], in_data_C36 [13], in_data_C36 [14], in_data_C36 [15], in_data_C36 [16], in_data_C36 [17], in_data_C36 [18], in_data_C36 [19], in_data_C36 [20], in_data_C36 [21], in_data_C36 [22], in_data_C36 [23], in_data_C36 [24], in_data_C36 [25], in_data_C36 [26], in_data_C36 [27], in_data_C36 [28], in_data_C36 [29], in_data_C36 [30], in_data_C36 [31], in_data_C36 [32], in_data_C36 [33], in_data_C36 [34], in_data_C36 [35], in_data_C36 [36], in_data_C36 [43:38] } = 0;
  logic [43:0] in_data_R37 ;
  logic [43:0] in_data_X37 ;
  logic [43:0] in_data_C37 ;
  assign in_data_R37 [37:37] = fangyuan27_R [6:6] ;
  assign in_data_X37 [37:37] = fangyuan27_X [6:6] ;
  assign in_data_C37 [37:37] = fangyuan27_C [6:6] ;
  assign { in_data_R37 [0], in_data_R37 [1], in_data_R37 [2], in_data_R37 [3], in_data_R37 [4], in_data_R37 [5], in_data_R37 [6], in_data_R37 [7], in_data_R37 [8], in_data_R37 [9], in_data_R37 [10], in_data_R37 [11], in_data_R37 [12], in_data_R37 [13], in_data_R37 [14], in_data_R37 [15], in_data_R37 [16], in_data_R37 [17], in_data_R37 [18], in_data_R37 [19], in_data_R37 [20], in_data_R37 [21], in_data_R37 [22], in_data_R37 [23], in_data_R37 [24], in_data_R37 [25], in_data_R37 [26], in_data_R37 [27], in_data_R37 [28], in_data_R37 [29], in_data_R37 [30], in_data_R37 [31], in_data_R37 [32], in_data_R37 [33], in_data_R37 [34], in_data_R37 [35], in_data_R37 [36], in_data_R37 [43:38] } = 0;
  assign { in_data_X37 [0], in_data_X37 [1], in_data_X37 [2], in_data_X37 [3], in_data_X37 [4], in_data_X37 [5], in_data_X37 [6], in_data_X37 [7], in_data_X37 [8], in_data_X37 [9], in_data_X37 [10], in_data_X37 [11], in_data_X37 [12], in_data_X37 [13], in_data_X37 [14], in_data_X37 [15], in_data_X37 [16], in_data_X37 [17], in_data_X37 [18], in_data_X37 [19], in_data_X37 [20], in_data_X37 [21], in_data_X37 [22], in_data_X37 [23], in_data_X37 [24], in_data_X37 [25], in_data_X37 [26], in_data_X37 [27], in_data_X37 [28], in_data_X37 [29], in_data_X37 [30], in_data_X37 [31], in_data_X37 [32], in_data_X37 [33], in_data_X37 [34], in_data_X37 [35], in_data_X37 [36], in_data_X37 [43:38] } = 0;
  assign { in_data_C37 [0], in_data_C37 [1], in_data_C37 [2], in_data_C37 [3], in_data_C37 [4], in_data_C37 [5], in_data_C37 [6], in_data_C37 [7], in_data_C37 [8], in_data_C37 [9], in_data_C37 [10], in_data_C37 [11], in_data_C37 [12], in_data_C37 [13], in_data_C37 [14], in_data_C37 [15], in_data_C37 [16], in_data_C37 [17], in_data_C37 [18], in_data_C37 [19], in_data_C37 [20], in_data_C37 [21], in_data_C37 [22], in_data_C37 [23], in_data_C37 [24], in_data_C37 [25], in_data_C37 [26], in_data_C37 [27], in_data_C37 [28], in_data_C37 [29], in_data_C37 [30], in_data_C37 [31], in_data_C37 [32], in_data_C37 [33], in_data_C37 [34], in_data_C37 [35], in_data_C37 [36], in_data_C37 [43:38] } = 0;
  logic [43:0] in_data_R38 ;
  logic [43:0] in_data_X38 ;
  logic [43:0] in_data_C38 ;
  assign in_data_R38 [37:37] = fangyuan27_R [5:5] ;
  assign in_data_X38 [37:37] = fangyuan27_X [5:5] ;
  assign in_data_C38 [37:37] = fangyuan27_C [5:5] ;
  assign { in_data_R38 [0], in_data_R38 [1], in_data_R38 [2], in_data_R38 [3], in_data_R38 [4], in_data_R38 [5], in_data_R38 [6], in_data_R38 [7], in_data_R38 [8], in_data_R38 [9], in_data_R38 [10], in_data_R38 [11], in_data_R38 [12], in_data_R38 [13], in_data_R38 [14], in_data_R38 [15], in_data_R38 [16], in_data_R38 [17], in_data_R38 [18], in_data_R38 [19], in_data_R38 [20], in_data_R38 [21], in_data_R38 [22], in_data_R38 [23], in_data_R38 [24], in_data_R38 [25], in_data_R38 [26], in_data_R38 [27], in_data_R38 [28], in_data_R38 [29], in_data_R38 [30], in_data_R38 [31], in_data_R38 [32], in_data_R38 [33], in_data_R38 [34], in_data_R38 [35], in_data_R38 [36], in_data_R38 [43:38] } = 0;
  assign { in_data_X38 [0], in_data_X38 [1], in_data_X38 [2], in_data_X38 [3], in_data_X38 [4], in_data_X38 [5], in_data_X38 [6], in_data_X38 [7], in_data_X38 [8], in_data_X38 [9], in_data_X38 [10], in_data_X38 [11], in_data_X38 [12], in_data_X38 [13], in_data_X38 [14], in_data_X38 [15], in_data_X38 [16], in_data_X38 [17], in_data_X38 [18], in_data_X38 [19], in_data_X38 [20], in_data_X38 [21], in_data_X38 [22], in_data_X38 [23], in_data_X38 [24], in_data_X38 [25], in_data_X38 [26], in_data_X38 [27], in_data_X38 [28], in_data_X38 [29], in_data_X38 [30], in_data_X38 [31], in_data_X38 [32], in_data_X38 [33], in_data_X38 [34], in_data_X38 [35], in_data_X38 [36], in_data_X38 [43:38] } = 0;
  assign { in_data_C38 [0], in_data_C38 [1], in_data_C38 [2], in_data_C38 [3], in_data_C38 [4], in_data_C38 [5], in_data_C38 [6], in_data_C38 [7], in_data_C38 [8], in_data_C38 [9], in_data_C38 [10], in_data_C38 [11], in_data_C38 [12], in_data_C38 [13], in_data_C38 [14], in_data_C38 [15], in_data_C38 [16], in_data_C38 [17], in_data_C38 [18], in_data_C38 [19], in_data_C38 [20], in_data_C38 [21], in_data_C38 [22], in_data_C38 [23], in_data_C38 [24], in_data_C38 [25], in_data_C38 [26], in_data_C38 [27], in_data_C38 [28], in_data_C38 [29], in_data_C38 [30], in_data_C38 [31], in_data_C38 [32], in_data_C38 [33], in_data_C38 [34], in_data_C38 [35], in_data_C38 [36], in_data_C38 [43:38] } = 0;
  logic [43:0] in_data_R39 ;
  logic [43:0] in_data_X39 ;
  logic [43:0] in_data_C39 ;
  assign in_data_R39 [37:37] = fangyuan27_R [4:4] ;
  assign in_data_X39 [37:37] = fangyuan27_X [4:4] ;
  assign in_data_C39 [37:37] = fangyuan27_C [4:4] ;
  assign { in_data_R39 [0], in_data_R39 [1], in_data_R39 [2], in_data_R39 [3], in_data_R39 [4], in_data_R39 [5], in_data_R39 [6], in_data_R39 [7], in_data_R39 [8], in_data_R39 [9], in_data_R39 [10], in_data_R39 [11], in_data_R39 [12], in_data_R39 [13], in_data_R39 [14], in_data_R39 [15], in_data_R39 [16], in_data_R39 [17], in_data_R39 [18], in_data_R39 [19], in_data_R39 [20], in_data_R39 [21], in_data_R39 [22], in_data_R39 [23], in_data_R39 [24], in_data_R39 [25], in_data_R39 [26], in_data_R39 [27], in_data_R39 [28], in_data_R39 [29], in_data_R39 [30], in_data_R39 [31], in_data_R39 [32], in_data_R39 [33], in_data_R39 [34], in_data_R39 [35], in_data_R39 [36], in_data_R39 [43:38] } = 0;
  assign { in_data_X39 [0], in_data_X39 [1], in_data_X39 [2], in_data_X39 [3], in_data_X39 [4], in_data_X39 [5], in_data_X39 [6], in_data_X39 [7], in_data_X39 [8], in_data_X39 [9], in_data_X39 [10], in_data_X39 [11], in_data_X39 [12], in_data_X39 [13], in_data_X39 [14], in_data_X39 [15], in_data_X39 [16], in_data_X39 [17], in_data_X39 [18], in_data_X39 [19], in_data_X39 [20], in_data_X39 [21], in_data_X39 [22], in_data_X39 [23], in_data_X39 [24], in_data_X39 [25], in_data_X39 [26], in_data_X39 [27], in_data_X39 [28], in_data_X39 [29], in_data_X39 [30], in_data_X39 [31], in_data_X39 [32], in_data_X39 [33], in_data_X39 [34], in_data_X39 [35], in_data_X39 [36], in_data_X39 [43:38] } = 0;
  assign { in_data_C39 [0], in_data_C39 [1], in_data_C39 [2], in_data_C39 [3], in_data_C39 [4], in_data_C39 [5], in_data_C39 [6], in_data_C39 [7], in_data_C39 [8], in_data_C39 [9], in_data_C39 [10], in_data_C39 [11], in_data_C39 [12], in_data_C39 [13], in_data_C39 [14], in_data_C39 [15], in_data_C39 [16], in_data_C39 [17], in_data_C39 [18], in_data_C39 [19], in_data_C39 [20], in_data_C39 [21], in_data_C39 [22], in_data_C39 [23], in_data_C39 [24], in_data_C39 [25], in_data_C39 [26], in_data_C39 [27], in_data_C39 [28], in_data_C39 [29], in_data_C39 [30], in_data_C39 [31], in_data_C39 [32], in_data_C39 [33], in_data_C39 [34], in_data_C39 [35], in_data_C39 [36], in_data_C39 [43:38] } = 0;
  logic [43:0] in_data_R40 ;
  logic [43:0] in_data_X40 ;
  logic [43:0] in_data_C40 ;
  assign in_data_R40 [37:37] = fangyuan27_R [3:3] ;
  assign in_data_X40 [37:37] = fangyuan27_X [3:3] ;
  assign in_data_C40 [37:37] = fangyuan27_C [3:3] ;
  assign { in_data_R40 [0], in_data_R40 [1], in_data_R40 [2], in_data_R40 [3], in_data_R40 [4], in_data_R40 [5], in_data_R40 [6], in_data_R40 [7], in_data_R40 [8], in_data_R40 [9], in_data_R40 [10], in_data_R40 [11], in_data_R40 [12], in_data_R40 [13], in_data_R40 [14], in_data_R40 [15], in_data_R40 [16], in_data_R40 [17], in_data_R40 [18], in_data_R40 [19], in_data_R40 [20], in_data_R40 [21], in_data_R40 [22], in_data_R40 [23], in_data_R40 [24], in_data_R40 [25], in_data_R40 [26], in_data_R40 [27], in_data_R40 [28], in_data_R40 [29], in_data_R40 [30], in_data_R40 [31], in_data_R40 [32], in_data_R40 [33], in_data_R40 [34], in_data_R40 [35], in_data_R40 [36], in_data_R40 [43:38] } = 0;
  assign { in_data_X40 [0], in_data_X40 [1], in_data_X40 [2], in_data_X40 [3], in_data_X40 [4], in_data_X40 [5], in_data_X40 [6], in_data_X40 [7], in_data_X40 [8], in_data_X40 [9], in_data_X40 [10], in_data_X40 [11], in_data_X40 [12], in_data_X40 [13], in_data_X40 [14], in_data_X40 [15], in_data_X40 [16], in_data_X40 [17], in_data_X40 [18], in_data_X40 [19], in_data_X40 [20], in_data_X40 [21], in_data_X40 [22], in_data_X40 [23], in_data_X40 [24], in_data_X40 [25], in_data_X40 [26], in_data_X40 [27], in_data_X40 [28], in_data_X40 [29], in_data_X40 [30], in_data_X40 [31], in_data_X40 [32], in_data_X40 [33], in_data_X40 [34], in_data_X40 [35], in_data_X40 [36], in_data_X40 [43:38] } = 0;
  assign { in_data_C40 [0], in_data_C40 [1], in_data_C40 [2], in_data_C40 [3], in_data_C40 [4], in_data_C40 [5], in_data_C40 [6], in_data_C40 [7], in_data_C40 [8], in_data_C40 [9], in_data_C40 [10], in_data_C40 [11], in_data_C40 [12], in_data_C40 [13], in_data_C40 [14], in_data_C40 [15], in_data_C40 [16], in_data_C40 [17], in_data_C40 [18], in_data_C40 [19], in_data_C40 [20], in_data_C40 [21], in_data_C40 [22], in_data_C40 [23], in_data_C40 [24], in_data_C40 [25], in_data_C40 [26], in_data_C40 [27], in_data_C40 [28], in_data_C40 [29], in_data_C40 [30], in_data_C40 [31], in_data_C40 [32], in_data_C40 [33], in_data_C40 [34], in_data_C40 [35], in_data_C40 [36], in_data_C40 [43:38] } = 0;
  logic [43:0] in_data_R41 ;
  logic [43:0] in_data_X41 ;
  logic [43:0] in_data_C41 ;
  assign in_data_R41 [37:37] = fangyuan27_R [2:2] ;
  assign in_data_X41 [37:37] = fangyuan27_X [2:2] ;
  assign in_data_C41 [37:37] = fangyuan27_C [2:2] ;
  assign { in_data_R41 [0], in_data_R41 [1], in_data_R41 [2], in_data_R41 [3], in_data_R41 [4], in_data_R41 [5], in_data_R41 [6], in_data_R41 [7], in_data_R41 [8], in_data_R41 [9], in_data_R41 [10], in_data_R41 [11], in_data_R41 [12], in_data_R41 [13], in_data_R41 [14], in_data_R41 [15], in_data_R41 [16], in_data_R41 [17], in_data_R41 [18], in_data_R41 [19], in_data_R41 [20], in_data_R41 [21], in_data_R41 [22], in_data_R41 [23], in_data_R41 [24], in_data_R41 [25], in_data_R41 [26], in_data_R41 [27], in_data_R41 [28], in_data_R41 [29], in_data_R41 [30], in_data_R41 [31], in_data_R41 [32], in_data_R41 [33], in_data_R41 [34], in_data_R41 [35], in_data_R41 [36], in_data_R41 [43:38] } = 0;
  assign { in_data_X41 [0], in_data_X41 [1], in_data_X41 [2], in_data_X41 [3], in_data_X41 [4], in_data_X41 [5], in_data_X41 [6], in_data_X41 [7], in_data_X41 [8], in_data_X41 [9], in_data_X41 [10], in_data_X41 [11], in_data_X41 [12], in_data_X41 [13], in_data_X41 [14], in_data_X41 [15], in_data_X41 [16], in_data_X41 [17], in_data_X41 [18], in_data_X41 [19], in_data_X41 [20], in_data_X41 [21], in_data_X41 [22], in_data_X41 [23], in_data_X41 [24], in_data_X41 [25], in_data_X41 [26], in_data_X41 [27], in_data_X41 [28], in_data_X41 [29], in_data_X41 [30], in_data_X41 [31], in_data_X41 [32], in_data_X41 [33], in_data_X41 [34], in_data_X41 [35], in_data_X41 [36], in_data_X41 [43:38] } = 0;
  assign { in_data_C41 [0], in_data_C41 [1], in_data_C41 [2], in_data_C41 [3], in_data_C41 [4], in_data_C41 [5], in_data_C41 [6], in_data_C41 [7], in_data_C41 [8], in_data_C41 [9], in_data_C41 [10], in_data_C41 [11], in_data_C41 [12], in_data_C41 [13], in_data_C41 [14], in_data_C41 [15], in_data_C41 [16], in_data_C41 [17], in_data_C41 [18], in_data_C41 [19], in_data_C41 [20], in_data_C41 [21], in_data_C41 [22], in_data_C41 [23], in_data_C41 [24], in_data_C41 [25], in_data_C41 [26], in_data_C41 [27], in_data_C41 [28], in_data_C41 [29], in_data_C41 [30], in_data_C41 [31], in_data_C41 [32], in_data_C41 [33], in_data_C41 [34], in_data_C41 [35], in_data_C41 [36], in_data_C41 [43:38] } = 0;
  logic [43:0] in_data_R42 ;
  logic [43:0] in_data_X42 ;
  logic [43:0] in_data_C42 ;
  assign in_data_R42 [37:37] = fangyuan27_R [1:1] ;
  assign in_data_X42 [37:37] = fangyuan27_X [1:1] ;
  assign in_data_C42 [37:37] = fangyuan27_C [1:1] ;
  assign { in_data_R42 [0], in_data_R42 [1], in_data_R42 [2], in_data_R42 [3], in_data_R42 [4], in_data_R42 [5], in_data_R42 [6], in_data_R42 [7], in_data_R42 [8], in_data_R42 [9], in_data_R42 [10], in_data_R42 [11], in_data_R42 [12], in_data_R42 [13], in_data_R42 [14], in_data_R42 [15], in_data_R42 [16], in_data_R42 [17], in_data_R42 [18], in_data_R42 [19], in_data_R42 [20], in_data_R42 [21], in_data_R42 [22], in_data_R42 [23], in_data_R42 [24], in_data_R42 [25], in_data_R42 [26], in_data_R42 [27], in_data_R42 [28], in_data_R42 [29], in_data_R42 [30], in_data_R42 [31], in_data_R42 [32], in_data_R42 [33], in_data_R42 [34], in_data_R42 [35], in_data_R42 [36], in_data_R42 [43:38] } = 0;
  assign { in_data_X42 [0], in_data_X42 [1], in_data_X42 [2], in_data_X42 [3], in_data_X42 [4], in_data_X42 [5], in_data_X42 [6], in_data_X42 [7], in_data_X42 [8], in_data_X42 [9], in_data_X42 [10], in_data_X42 [11], in_data_X42 [12], in_data_X42 [13], in_data_X42 [14], in_data_X42 [15], in_data_X42 [16], in_data_X42 [17], in_data_X42 [18], in_data_X42 [19], in_data_X42 [20], in_data_X42 [21], in_data_X42 [22], in_data_X42 [23], in_data_X42 [24], in_data_X42 [25], in_data_X42 [26], in_data_X42 [27], in_data_X42 [28], in_data_X42 [29], in_data_X42 [30], in_data_X42 [31], in_data_X42 [32], in_data_X42 [33], in_data_X42 [34], in_data_X42 [35], in_data_X42 [36], in_data_X42 [43:38] } = 0;
  assign { in_data_C42 [0], in_data_C42 [1], in_data_C42 [2], in_data_C42 [3], in_data_C42 [4], in_data_C42 [5], in_data_C42 [6], in_data_C42 [7], in_data_C42 [8], in_data_C42 [9], in_data_C42 [10], in_data_C42 [11], in_data_C42 [12], in_data_C42 [13], in_data_C42 [14], in_data_C42 [15], in_data_C42 [16], in_data_C42 [17], in_data_C42 [18], in_data_C42 [19], in_data_C42 [20], in_data_C42 [21], in_data_C42 [22], in_data_C42 [23], in_data_C42 [24], in_data_C42 [25], in_data_C42 [26], in_data_C42 [27], in_data_C42 [28], in_data_C42 [29], in_data_C42 [30], in_data_C42 [31], in_data_C42 [32], in_data_C42 [33], in_data_C42 [34], in_data_C42 [35], in_data_C42 [36], in_data_C42 [43:38] } = 0;
  logic [43:0] in_data_R43 ;
  logic [43:0] in_data_X43 ;
  logic [43:0] in_data_C43 ;
  assign in_data_R43 [37:37] = fangyuan27_R [0:0] ;
  assign in_data_X43 [37:37] = fangyuan27_X [0:0] ;
  assign in_data_C43 [37:37] = fangyuan27_C [0:0] ;

  assign di_aligned_mant_nxt = _027_ ? fangyuan27 : di_mant_shift;
  logic [0:0] _027__C0 ;
  logic [0:0] _027__R0 ;
  logic [0:0] _027__X0 ;
  assign _027__C0 = | di_aligned_mant_nxt_C ;
  assign _027__X0 = | di_aligned_mant_nxt_X ;
  assign di_aligned_mant_nxt_T = _027_ ? ( { 40{ _027__T  }} | fangyuan27_T ) : ( { 40{ _027__T  }} | di_mant_shift_T );
  assign di_aligned_mant_nxt_S = _027_ ? fangyuan27_S : di_mant_shift_S ;
  assign _027__R0 = ( | (di_aligned_mant_nxt_R | ( di_aligned_mant_nxt_C & ( { 40{ _027_ }} & fangyuan27_T | { 40{ !_027_ }} & di_mant_shift_T )))) && fangyuan27 != di_mant_shift ;
  logic [39:0] fangyuan27_C0 ;
  logic [39:0] fangyuan27_R0 ;
  logic [39:0] fangyuan27_X0 ;
  assign fangyuan27_C0 = { 40{ _027_ }} ;
  assign fangyuan27_R0 = { 40{ _027_ }} & ( di_aligned_mant_nxt_R | ( { 40{ _027__T  }} & di_aligned_mant_nxt_C ));
  assign fangyuan27_X0 = { 40{ _027_ }} & di_aligned_mant_nxt_X ;
  logic [39:0] di_mant_shift_C1 ;
  logic [39:0] di_mant_shift_R1 ;
  logic [39:0] di_mant_shift_X1 ;
  assign di_mant_shift_C1 = { 40{ !_027_ }} ;
  assign di_mant_shift_R1 = { 40{ !_027_ }} & ( di_aligned_mant_nxt_R | ( { 40{ _027__T  }} & di_aligned_mant_nxt_C ));
  assign di_mant_shift_X1 = { 40{ !_027_ }} & di_aligned_mant_nxt_X ;
  logic [39:0] fangyuan28;
  logic [39:0] fangyuan28_T ;
  logic [39:0] fangyuan28_R ;
  logic [39:0] fangyuan28_C ;
  logic [39:0] fangyuan28_X ;
  assign fangyuan28 = { in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39], in_mask_op[39] };
  assign fangyuan28_T = {  in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39] , in_mask_op_T [39]  };
  logic [13:0] fangyuan28_S ;
  assign fangyuan28_S = 0 ;
  assign { in_mask_op_R2 [0], in_mask_op_R2 [1], in_mask_op_R2 [2], in_mask_op_R2 [3], in_mask_op_R2 [4], in_mask_op_R2 [5], in_mask_op_R2 [6], in_mask_op_R2 [7], in_mask_op_R2 [8], in_mask_op_R2 [9], in_mask_op_R2 [10], in_mask_op_R2 [11], in_mask_op_R2 [12], in_mask_op_R2 [13], in_mask_op_R2 [14], in_mask_op_R2 [15], in_mask_op_R2 [16], in_mask_op_R2 [17], in_mask_op_R2 [18], in_mask_op_R2 [19], in_mask_op_R2 [20], in_mask_op_R2 [21], in_mask_op_R2 [22], in_mask_op_R2 [23], in_mask_op_R2 [24], in_mask_op_R2 [25], in_mask_op_R2 [26], in_mask_op_R2 [27], in_mask_op_R2 [28] } = 0;
  assign { in_mask_op_X2 [0], in_mask_op_X2 [1], in_mask_op_X2 [2], in_mask_op_X2 [3], in_mask_op_X2 [4], in_mask_op_X2 [5], in_mask_op_X2 [6], in_mask_op_X2 [7], in_mask_op_X2 [8], in_mask_op_X2 [9], in_mask_op_X2 [10], in_mask_op_X2 [11], in_mask_op_X2 [12], in_mask_op_X2 [13], in_mask_op_X2 [14], in_mask_op_X2 [15], in_mask_op_X2 [16], in_mask_op_X2 [17], in_mask_op_X2 [18], in_mask_op_X2 [19], in_mask_op_X2 [20], in_mask_op_X2 [21], in_mask_op_X2 [22], in_mask_op_X2 [23], in_mask_op_X2 [24], in_mask_op_X2 [25], in_mask_op_X2 [26], in_mask_op_X2 [27], in_mask_op_X2 [28] } = 0;
  assign { in_mask_op_C2 [0], in_mask_op_C2 [1], in_mask_op_C2 [2], in_mask_op_C2 [3], in_mask_op_C2 [4], in_mask_op_C2 [5], in_mask_op_C2 [6], in_mask_op_C2 [7], in_mask_op_C2 [8], in_mask_op_C2 [9], in_mask_op_C2 [10], in_mask_op_C2 [11], in_mask_op_C2 [12], in_mask_op_C2 [13], in_mask_op_C2 [14], in_mask_op_C2 [15], in_mask_op_C2 [16], in_mask_op_C2 [17], in_mask_op_C2 [18], in_mask_op_C2 [19], in_mask_op_C2 [20], in_mask_op_C2 [21], in_mask_op_C2 [22], in_mask_op_C2 [23], in_mask_op_C2 [24], in_mask_op_C2 [25], in_mask_op_C2 [26], in_mask_op_C2 [27], in_mask_op_C2 [28] } = 0;
  logic [47:0] in_mask_op_R3 ;
  logic [47:0] in_mask_op_X3 ;
  logic [47:0] in_mask_op_C3 ;
  assign in_mask_op_R3 [39:39] = fangyuan28_R [39:39] ;
  assign in_mask_op_X3 [39:39] = fangyuan28_X [39:39] ;
  assign in_mask_op_C3 [39:39] = fangyuan28_C [39:39] ;
  assign { in_mask_op_R3 [0], in_mask_op_R3 [1], in_mask_op_R3 [2], in_mask_op_R3 [3], in_mask_op_R3 [4], in_mask_op_R3 [5], in_mask_op_R3 [6], in_mask_op_R3 [7], in_mask_op_R3 [8], in_mask_op_R3 [9], in_mask_op_R3 [10], in_mask_op_R3 [11], in_mask_op_R3 [12], in_mask_op_R3 [13], in_mask_op_R3 [14], in_mask_op_R3 [15], in_mask_op_R3 [16], in_mask_op_R3 [17], in_mask_op_R3 [18], in_mask_op_R3 [19], in_mask_op_R3 [20], in_mask_op_R3 [21], in_mask_op_R3 [22], in_mask_op_R3 [23], in_mask_op_R3 [24], in_mask_op_R3 [25], in_mask_op_R3 [26], in_mask_op_R3 [27], in_mask_op_R3 [28], in_mask_op_R3 [29], in_mask_op_R3 [30], in_mask_op_R3 [31], in_mask_op_R3 [32], in_mask_op_R3 [33], in_mask_op_R3 [34], in_mask_op_R3 [35], in_mask_op_R3 [36], in_mask_op_R3 [37], in_mask_op_R3 [38], in_mask_op_R3 [47:40] } = 0;
  assign { in_mask_op_X3 [0], in_mask_op_X3 [1], in_mask_op_X3 [2], in_mask_op_X3 [3], in_mask_op_X3 [4], in_mask_op_X3 [5], in_mask_op_X3 [6], in_mask_op_X3 [7], in_mask_op_X3 [8], in_mask_op_X3 [9], in_mask_op_X3 [10], in_mask_op_X3 [11], in_mask_op_X3 [12], in_mask_op_X3 [13], in_mask_op_X3 [14], in_mask_op_X3 [15], in_mask_op_X3 [16], in_mask_op_X3 [17], in_mask_op_X3 [18], in_mask_op_X3 [19], in_mask_op_X3 [20], in_mask_op_X3 [21], in_mask_op_X3 [22], in_mask_op_X3 [23], in_mask_op_X3 [24], in_mask_op_X3 [25], in_mask_op_X3 [26], in_mask_op_X3 [27], in_mask_op_X3 [28], in_mask_op_X3 [29], in_mask_op_X3 [30], in_mask_op_X3 [31], in_mask_op_X3 [32], in_mask_op_X3 [33], in_mask_op_X3 [34], in_mask_op_X3 [35], in_mask_op_X3 [36], in_mask_op_X3 [37], in_mask_op_X3 [38], in_mask_op_X3 [47:40] } = 0;
  assign { in_mask_op_C3 [0], in_mask_op_C3 [1], in_mask_op_C3 [2], in_mask_op_C3 [3], in_mask_op_C3 [4], in_mask_op_C3 [5], in_mask_op_C3 [6], in_mask_op_C3 [7], in_mask_op_C3 [8], in_mask_op_C3 [9], in_mask_op_C3 [10], in_mask_op_C3 [11], in_mask_op_C3 [12], in_mask_op_C3 [13], in_mask_op_C3 [14], in_mask_op_C3 [15], in_mask_op_C3 [16], in_mask_op_C3 [17], in_mask_op_C3 [18], in_mask_op_C3 [19], in_mask_op_C3 [20], in_mask_op_C3 [21], in_mask_op_C3 [22], in_mask_op_C3 [23], in_mask_op_C3 [24], in_mask_op_C3 [25], in_mask_op_C3 [26], in_mask_op_C3 [27], in_mask_op_C3 [28], in_mask_op_C3 [29], in_mask_op_C3 [30], in_mask_op_C3 [31], in_mask_op_C3 [32], in_mask_op_C3 [33], in_mask_op_C3 [34], in_mask_op_C3 [35], in_mask_op_C3 [36], in_mask_op_C3 [37], in_mask_op_C3 [38], in_mask_op_C3 [47:40] } = 0;
  logic [47:0] in_mask_op_R4 ;
  logic [47:0] in_mask_op_X4 ;
  logic [47:0] in_mask_op_C4 ;
  assign in_mask_op_R4 [39:39] = fangyuan28_R [38:38] ;
  assign in_mask_op_X4 [39:39] = fangyuan28_X [38:38] ;
  assign in_mask_op_C4 [39:39] = fangyuan28_C [38:38] ;
  assign { in_mask_op_R4 [0], in_mask_op_R4 [1], in_mask_op_R4 [2], in_mask_op_R4 [3], in_mask_op_R4 [4], in_mask_op_R4 [5], in_mask_op_R4 [6], in_mask_op_R4 [7], in_mask_op_R4 [8], in_mask_op_R4 [9], in_mask_op_R4 [10], in_mask_op_R4 [11], in_mask_op_R4 [12], in_mask_op_R4 [13], in_mask_op_R4 [14], in_mask_op_R4 [15], in_mask_op_R4 [16], in_mask_op_R4 [17], in_mask_op_R4 [18], in_mask_op_R4 [19], in_mask_op_R4 [20], in_mask_op_R4 [21], in_mask_op_R4 [22], in_mask_op_R4 [23], in_mask_op_R4 [24], in_mask_op_R4 [25], in_mask_op_R4 [26], in_mask_op_R4 [27], in_mask_op_R4 [28], in_mask_op_R4 [29], in_mask_op_R4 [30], in_mask_op_R4 [31], in_mask_op_R4 [32], in_mask_op_R4 [33], in_mask_op_R4 [34], in_mask_op_R4 [35], in_mask_op_R4 [36], in_mask_op_R4 [37], in_mask_op_R4 [38], in_mask_op_R4 [47:40] } = 0;
  assign { in_mask_op_X4 [0], in_mask_op_X4 [1], in_mask_op_X4 [2], in_mask_op_X4 [3], in_mask_op_X4 [4], in_mask_op_X4 [5], in_mask_op_X4 [6], in_mask_op_X4 [7], in_mask_op_X4 [8], in_mask_op_X4 [9], in_mask_op_X4 [10], in_mask_op_X4 [11], in_mask_op_X4 [12], in_mask_op_X4 [13], in_mask_op_X4 [14], in_mask_op_X4 [15], in_mask_op_X4 [16], in_mask_op_X4 [17], in_mask_op_X4 [18], in_mask_op_X4 [19], in_mask_op_X4 [20], in_mask_op_X4 [21], in_mask_op_X4 [22], in_mask_op_X4 [23], in_mask_op_X4 [24], in_mask_op_X4 [25], in_mask_op_X4 [26], in_mask_op_X4 [27], in_mask_op_X4 [28], in_mask_op_X4 [29], in_mask_op_X4 [30], in_mask_op_X4 [31], in_mask_op_X4 [32], in_mask_op_X4 [33], in_mask_op_X4 [34], in_mask_op_X4 [35], in_mask_op_X4 [36], in_mask_op_X4 [37], in_mask_op_X4 [38], in_mask_op_X4 [47:40] } = 0;
  assign { in_mask_op_C4 [0], in_mask_op_C4 [1], in_mask_op_C4 [2], in_mask_op_C4 [3], in_mask_op_C4 [4], in_mask_op_C4 [5], in_mask_op_C4 [6], in_mask_op_C4 [7], in_mask_op_C4 [8], in_mask_op_C4 [9], in_mask_op_C4 [10], in_mask_op_C4 [11], in_mask_op_C4 [12], in_mask_op_C4 [13], in_mask_op_C4 [14], in_mask_op_C4 [15], in_mask_op_C4 [16], in_mask_op_C4 [17], in_mask_op_C4 [18], in_mask_op_C4 [19], in_mask_op_C4 [20], in_mask_op_C4 [21], in_mask_op_C4 [22], in_mask_op_C4 [23], in_mask_op_C4 [24], in_mask_op_C4 [25], in_mask_op_C4 [26], in_mask_op_C4 [27], in_mask_op_C4 [28], in_mask_op_C4 [29], in_mask_op_C4 [30], in_mask_op_C4 [31], in_mask_op_C4 [32], in_mask_op_C4 [33], in_mask_op_C4 [34], in_mask_op_C4 [35], in_mask_op_C4 [36], in_mask_op_C4 [37], in_mask_op_C4 [38], in_mask_op_C4 [47:40] } = 0;
  logic [47:0] in_mask_op_R5 ;
  logic [47:0] in_mask_op_X5 ;
  logic [47:0] in_mask_op_C5 ;
  assign in_mask_op_R5 [39:39] = fangyuan28_R [37:37] ;
  assign in_mask_op_X5 [39:39] = fangyuan28_X [37:37] ;
  assign in_mask_op_C5 [39:39] = fangyuan28_C [37:37] ;
  assign { in_mask_op_R5 [0], in_mask_op_R5 [1], in_mask_op_R5 [2], in_mask_op_R5 [3], in_mask_op_R5 [4], in_mask_op_R5 [5], in_mask_op_R5 [6], in_mask_op_R5 [7], in_mask_op_R5 [8], in_mask_op_R5 [9], in_mask_op_R5 [10], in_mask_op_R5 [11], in_mask_op_R5 [12], in_mask_op_R5 [13], in_mask_op_R5 [14], in_mask_op_R5 [15], in_mask_op_R5 [16], in_mask_op_R5 [17], in_mask_op_R5 [18], in_mask_op_R5 [19], in_mask_op_R5 [20], in_mask_op_R5 [21], in_mask_op_R5 [22], in_mask_op_R5 [23], in_mask_op_R5 [24], in_mask_op_R5 [25], in_mask_op_R5 [26], in_mask_op_R5 [27], in_mask_op_R5 [28], in_mask_op_R5 [29], in_mask_op_R5 [30], in_mask_op_R5 [31], in_mask_op_R5 [32], in_mask_op_R5 [33], in_mask_op_R5 [34], in_mask_op_R5 [35], in_mask_op_R5 [36], in_mask_op_R5 [37], in_mask_op_R5 [38], in_mask_op_R5 [47:40] } = 0;
  assign { in_mask_op_X5 [0], in_mask_op_X5 [1], in_mask_op_X5 [2], in_mask_op_X5 [3], in_mask_op_X5 [4], in_mask_op_X5 [5], in_mask_op_X5 [6], in_mask_op_X5 [7], in_mask_op_X5 [8], in_mask_op_X5 [9], in_mask_op_X5 [10], in_mask_op_X5 [11], in_mask_op_X5 [12], in_mask_op_X5 [13], in_mask_op_X5 [14], in_mask_op_X5 [15], in_mask_op_X5 [16], in_mask_op_X5 [17], in_mask_op_X5 [18], in_mask_op_X5 [19], in_mask_op_X5 [20], in_mask_op_X5 [21], in_mask_op_X5 [22], in_mask_op_X5 [23], in_mask_op_X5 [24], in_mask_op_X5 [25], in_mask_op_X5 [26], in_mask_op_X5 [27], in_mask_op_X5 [28], in_mask_op_X5 [29], in_mask_op_X5 [30], in_mask_op_X5 [31], in_mask_op_X5 [32], in_mask_op_X5 [33], in_mask_op_X5 [34], in_mask_op_X5 [35], in_mask_op_X5 [36], in_mask_op_X5 [37], in_mask_op_X5 [38], in_mask_op_X5 [47:40] } = 0;
  assign { in_mask_op_C5 [0], in_mask_op_C5 [1], in_mask_op_C5 [2], in_mask_op_C5 [3], in_mask_op_C5 [4], in_mask_op_C5 [5], in_mask_op_C5 [6], in_mask_op_C5 [7], in_mask_op_C5 [8], in_mask_op_C5 [9], in_mask_op_C5 [10], in_mask_op_C5 [11], in_mask_op_C5 [12], in_mask_op_C5 [13], in_mask_op_C5 [14], in_mask_op_C5 [15], in_mask_op_C5 [16], in_mask_op_C5 [17], in_mask_op_C5 [18], in_mask_op_C5 [19], in_mask_op_C5 [20], in_mask_op_C5 [21], in_mask_op_C5 [22], in_mask_op_C5 [23], in_mask_op_C5 [24], in_mask_op_C5 [25], in_mask_op_C5 [26], in_mask_op_C5 [27], in_mask_op_C5 [28], in_mask_op_C5 [29], in_mask_op_C5 [30], in_mask_op_C5 [31], in_mask_op_C5 [32], in_mask_op_C5 [33], in_mask_op_C5 [34], in_mask_op_C5 [35], in_mask_op_C5 [36], in_mask_op_C5 [37], in_mask_op_C5 [38], in_mask_op_C5 [47:40] } = 0;
  logic [47:0] in_mask_op_R6 ;
  logic [47:0] in_mask_op_X6 ;
  logic [47:0] in_mask_op_C6 ;
  assign in_mask_op_R6 [39:39] = fangyuan28_R [36:36] ;
  assign in_mask_op_X6 [39:39] = fangyuan28_X [36:36] ;
  assign in_mask_op_C6 [39:39] = fangyuan28_C [36:36] ;
  assign { in_mask_op_R6 [0], in_mask_op_R6 [1], in_mask_op_R6 [2], in_mask_op_R6 [3], in_mask_op_R6 [4], in_mask_op_R6 [5], in_mask_op_R6 [6], in_mask_op_R6 [7], in_mask_op_R6 [8], in_mask_op_R6 [9], in_mask_op_R6 [10], in_mask_op_R6 [11], in_mask_op_R6 [12], in_mask_op_R6 [13], in_mask_op_R6 [14], in_mask_op_R6 [15], in_mask_op_R6 [16], in_mask_op_R6 [17], in_mask_op_R6 [18], in_mask_op_R6 [19], in_mask_op_R6 [20], in_mask_op_R6 [21], in_mask_op_R6 [22], in_mask_op_R6 [23], in_mask_op_R6 [24], in_mask_op_R6 [25], in_mask_op_R6 [26], in_mask_op_R6 [27], in_mask_op_R6 [28], in_mask_op_R6 [29], in_mask_op_R6 [30], in_mask_op_R6 [31], in_mask_op_R6 [32], in_mask_op_R6 [33], in_mask_op_R6 [34], in_mask_op_R6 [35], in_mask_op_R6 [36], in_mask_op_R6 [37], in_mask_op_R6 [38], in_mask_op_R6 [47:40] } = 0;
  assign { in_mask_op_X6 [0], in_mask_op_X6 [1], in_mask_op_X6 [2], in_mask_op_X6 [3], in_mask_op_X6 [4], in_mask_op_X6 [5], in_mask_op_X6 [6], in_mask_op_X6 [7], in_mask_op_X6 [8], in_mask_op_X6 [9], in_mask_op_X6 [10], in_mask_op_X6 [11], in_mask_op_X6 [12], in_mask_op_X6 [13], in_mask_op_X6 [14], in_mask_op_X6 [15], in_mask_op_X6 [16], in_mask_op_X6 [17], in_mask_op_X6 [18], in_mask_op_X6 [19], in_mask_op_X6 [20], in_mask_op_X6 [21], in_mask_op_X6 [22], in_mask_op_X6 [23], in_mask_op_X6 [24], in_mask_op_X6 [25], in_mask_op_X6 [26], in_mask_op_X6 [27], in_mask_op_X6 [28], in_mask_op_X6 [29], in_mask_op_X6 [30], in_mask_op_X6 [31], in_mask_op_X6 [32], in_mask_op_X6 [33], in_mask_op_X6 [34], in_mask_op_X6 [35], in_mask_op_X6 [36], in_mask_op_X6 [37], in_mask_op_X6 [38], in_mask_op_X6 [47:40] } = 0;
  assign { in_mask_op_C6 [0], in_mask_op_C6 [1], in_mask_op_C6 [2], in_mask_op_C6 [3], in_mask_op_C6 [4], in_mask_op_C6 [5], in_mask_op_C6 [6], in_mask_op_C6 [7], in_mask_op_C6 [8], in_mask_op_C6 [9], in_mask_op_C6 [10], in_mask_op_C6 [11], in_mask_op_C6 [12], in_mask_op_C6 [13], in_mask_op_C6 [14], in_mask_op_C6 [15], in_mask_op_C6 [16], in_mask_op_C6 [17], in_mask_op_C6 [18], in_mask_op_C6 [19], in_mask_op_C6 [20], in_mask_op_C6 [21], in_mask_op_C6 [22], in_mask_op_C6 [23], in_mask_op_C6 [24], in_mask_op_C6 [25], in_mask_op_C6 [26], in_mask_op_C6 [27], in_mask_op_C6 [28], in_mask_op_C6 [29], in_mask_op_C6 [30], in_mask_op_C6 [31], in_mask_op_C6 [32], in_mask_op_C6 [33], in_mask_op_C6 [34], in_mask_op_C6 [35], in_mask_op_C6 [36], in_mask_op_C6 [37], in_mask_op_C6 [38], in_mask_op_C6 [47:40] } = 0;
  logic [47:0] in_mask_op_R7 ;
  logic [47:0] in_mask_op_X7 ;
  logic [47:0] in_mask_op_C7 ;
  assign in_mask_op_R7 [39:39] = fangyuan28_R [35:35] ;
  assign in_mask_op_X7 [39:39] = fangyuan28_X [35:35] ;
  assign in_mask_op_C7 [39:39] = fangyuan28_C [35:35] ;
  assign { in_mask_op_R7 [0], in_mask_op_R7 [1], in_mask_op_R7 [2], in_mask_op_R7 [3], in_mask_op_R7 [4], in_mask_op_R7 [5], in_mask_op_R7 [6], in_mask_op_R7 [7], in_mask_op_R7 [8], in_mask_op_R7 [9], in_mask_op_R7 [10], in_mask_op_R7 [11], in_mask_op_R7 [12], in_mask_op_R7 [13], in_mask_op_R7 [14], in_mask_op_R7 [15], in_mask_op_R7 [16], in_mask_op_R7 [17], in_mask_op_R7 [18], in_mask_op_R7 [19], in_mask_op_R7 [20], in_mask_op_R7 [21], in_mask_op_R7 [22], in_mask_op_R7 [23], in_mask_op_R7 [24], in_mask_op_R7 [25], in_mask_op_R7 [26], in_mask_op_R7 [27], in_mask_op_R7 [28], in_mask_op_R7 [29], in_mask_op_R7 [30], in_mask_op_R7 [31], in_mask_op_R7 [32], in_mask_op_R7 [33], in_mask_op_R7 [34], in_mask_op_R7 [35], in_mask_op_R7 [36], in_mask_op_R7 [37], in_mask_op_R7 [38], in_mask_op_R7 [47:40] } = 0;
  assign { in_mask_op_X7 [0], in_mask_op_X7 [1], in_mask_op_X7 [2], in_mask_op_X7 [3], in_mask_op_X7 [4], in_mask_op_X7 [5], in_mask_op_X7 [6], in_mask_op_X7 [7], in_mask_op_X7 [8], in_mask_op_X7 [9], in_mask_op_X7 [10], in_mask_op_X7 [11], in_mask_op_X7 [12], in_mask_op_X7 [13], in_mask_op_X7 [14], in_mask_op_X7 [15], in_mask_op_X7 [16], in_mask_op_X7 [17], in_mask_op_X7 [18], in_mask_op_X7 [19], in_mask_op_X7 [20], in_mask_op_X7 [21], in_mask_op_X7 [22], in_mask_op_X7 [23], in_mask_op_X7 [24], in_mask_op_X7 [25], in_mask_op_X7 [26], in_mask_op_X7 [27], in_mask_op_X7 [28], in_mask_op_X7 [29], in_mask_op_X7 [30], in_mask_op_X7 [31], in_mask_op_X7 [32], in_mask_op_X7 [33], in_mask_op_X7 [34], in_mask_op_X7 [35], in_mask_op_X7 [36], in_mask_op_X7 [37], in_mask_op_X7 [38], in_mask_op_X7 [47:40] } = 0;
  assign { in_mask_op_C7 [0], in_mask_op_C7 [1], in_mask_op_C7 [2], in_mask_op_C7 [3], in_mask_op_C7 [4], in_mask_op_C7 [5], in_mask_op_C7 [6], in_mask_op_C7 [7], in_mask_op_C7 [8], in_mask_op_C7 [9], in_mask_op_C7 [10], in_mask_op_C7 [11], in_mask_op_C7 [12], in_mask_op_C7 [13], in_mask_op_C7 [14], in_mask_op_C7 [15], in_mask_op_C7 [16], in_mask_op_C7 [17], in_mask_op_C7 [18], in_mask_op_C7 [19], in_mask_op_C7 [20], in_mask_op_C7 [21], in_mask_op_C7 [22], in_mask_op_C7 [23], in_mask_op_C7 [24], in_mask_op_C7 [25], in_mask_op_C7 [26], in_mask_op_C7 [27], in_mask_op_C7 [28], in_mask_op_C7 [29], in_mask_op_C7 [30], in_mask_op_C7 [31], in_mask_op_C7 [32], in_mask_op_C7 [33], in_mask_op_C7 [34], in_mask_op_C7 [35], in_mask_op_C7 [36], in_mask_op_C7 [37], in_mask_op_C7 [38], in_mask_op_C7 [47:40] } = 0;
  logic [47:0] in_mask_op_R8 ;
  logic [47:0] in_mask_op_X8 ;
  logic [47:0] in_mask_op_C8 ;
  assign in_mask_op_R8 [39:39] = fangyuan28_R [34:34] ;
  assign in_mask_op_X8 [39:39] = fangyuan28_X [34:34] ;
  assign in_mask_op_C8 [39:39] = fangyuan28_C [34:34] ;
  assign { in_mask_op_R8 [0], in_mask_op_R8 [1], in_mask_op_R8 [2], in_mask_op_R8 [3], in_mask_op_R8 [4], in_mask_op_R8 [5], in_mask_op_R8 [6], in_mask_op_R8 [7], in_mask_op_R8 [8], in_mask_op_R8 [9], in_mask_op_R8 [10], in_mask_op_R8 [11], in_mask_op_R8 [12], in_mask_op_R8 [13], in_mask_op_R8 [14], in_mask_op_R8 [15], in_mask_op_R8 [16], in_mask_op_R8 [17], in_mask_op_R8 [18], in_mask_op_R8 [19], in_mask_op_R8 [20], in_mask_op_R8 [21], in_mask_op_R8 [22], in_mask_op_R8 [23], in_mask_op_R8 [24], in_mask_op_R8 [25], in_mask_op_R8 [26], in_mask_op_R8 [27], in_mask_op_R8 [28], in_mask_op_R8 [29], in_mask_op_R8 [30], in_mask_op_R8 [31], in_mask_op_R8 [32], in_mask_op_R8 [33], in_mask_op_R8 [34], in_mask_op_R8 [35], in_mask_op_R8 [36], in_mask_op_R8 [37], in_mask_op_R8 [38], in_mask_op_R8 [47:40] } = 0;
  assign { in_mask_op_X8 [0], in_mask_op_X8 [1], in_mask_op_X8 [2], in_mask_op_X8 [3], in_mask_op_X8 [4], in_mask_op_X8 [5], in_mask_op_X8 [6], in_mask_op_X8 [7], in_mask_op_X8 [8], in_mask_op_X8 [9], in_mask_op_X8 [10], in_mask_op_X8 [11], in_mask_op_X8 [12], in_mask_op_X8 [13], in_mask_op_X8 [14], in_mask_op_X8 [15], in_mask_op_X8 [16], in_mask_op_X8 [17], in_mask_op_X8 [18], in_mask_op_X8 [19], in_mask_op_X8 [20], in_mask_op_X8 [21], in_mask_op_X8 [22], in_mask_op_X8 [23], in_mask_op_X8 [24], in_mask_op_X8 [25], in_mask_op_X8 [26], in_mask_op_X8 [27], in_mask_op_X8 [28], in_mask_op_X8 [29], in_mask_op_X8 [30], in_mask_op_X8 [31], in_mask_op_X8 [32], in_mask_op_X8 [33], in_mask_op_X8 [34], in_mask_op_X8 [35], in_mask_op_X8 [36], in_mask_op_X8 [37], in_mask_op_X8 [38], in_mask_op_X8 [47:40] } = 0;
  assign { in_mask_op_C8 [0], in_mask_op_C8 [1], in_mask_op_C8 [2], in_mask_op_C8 [3], in_mask_op_C8 [4], in_mask_op_C8 [5], in_mask_op_C8 [6], in_mask_op_C8 [7], in_mask_op_C8 [8], in_mask_op_C8 [9], in_mask_op_C8 [10], in_mask_op_C8 [11], in_mask_op_C8 [12], in_mask_op_C8 [13], in_mask_op_C8 [14], in_mask_op_C8 [15], in_mask_op_C8 [16], in_mask_op_C8 [17], in_mask_op_C8 [18], in_mask_op_C8 [19], in_mask_op_C8 [20], in_mask_op_C8 [21], in_mask_op_C8 [22], in_mask_op_C8 [23], in_mask_op_C8 [24], in_mask_op_C8 [25], in_mask_op_C8 [26], in_mask_op_C8 [27], in_mask_op_C8 [28], in_mask_op_C8 [29], in_mask_op_C8 [30], in_mask_op_C8 [31], in_mask_op_C8 [32], in_mask_op_C8 [33], in_mask_op_C8 [34], in_mask_op_C8 [35], in_mask_op_C8 [36], in_mask_op_C8 [37], in_mask_op_C8 [38], in_mask_op_C8 [47:40] } = 0;
  logic [47:0] in_mask_op_R9 ;
  logic [47:0] in_mask_op_X9 ;
  logic [47:0] in_mask_op_C9 ;
  assign in_mask_op_R9 [39:39] = fangyuan28_R [33:33] ;
  assign in_mask_op_X9 [39:39] = fangyuan28_X [33:33] ;
  assign in_mask_op_C9 [39:39] = fangyuan28_C [33:33] ;
  assign { in_mask_op_R9 [0], in_mask_op_R9 [1], in_mask_op_R9 [2], in_mask_op_R9 [3], in_mask_op_R9 [4], in_mask_op_R9 [5], in_mask_op_R9 [6], in_mask_op_R9 [7], in_mask_op_R9 [8], in_mask_op_R9 [9], in_mask_op_R9 [10], in_mask_op_R9 [11], in_mask_op_R9 [12], in_mask_op_R9 [13], in_mask_op_R9 [14], in_mask_op_R9 [15], in_mask_op_R9 [16], in_mask_op_R9 [17], in_mask_op_R9 [18], in_mask_op_R9 [19], in_mask_op_R9 [20], in_mask_op_R9 [21], in_mask_op_R9 [22], in_mask_op_R9 [23], in_mask_op_R9 [24], in_mask_op_R9 [25], in_mask_op_R9 [26], in_mask_op_R9 [27], in_mask_op_R9 [28], in_mask_op_R9 [29], in_mask_op_R9 [30], in_mask_op_R9 [31], in_mask_op_R9 [32], in_mask_op_R9 [33], in_mask_op_R9 [34], in_mask_op_R9 [35], in_mask_op_R9 [36], in_mask_op_R9 [37], in_mask_op_R9 [38], in_mask_op_R9 [47:40] } = 0;
  assign { in_mask_op_X9 [0], in_mask_op_X9 [1], in_mask_op_X9 [2], in_mask_op_X9 [3], in_mask_op_X9 [4], in_mask_op_X9 [5], in_mask_op_X9 [6], in_mask_op_X9 [7], in_mask_op_X9 [8], in_mask_op_X9 [9], in_mask_op_X9 [10], in_mask_op_X9 [11], in_mask_op_X9 [12], in_mask_op_X9 [13], in_mask_op_X9 [14], in_mask_op_X9 [15], in_mask_op_X9 [16], in_mask_op_X9 [17], in_mask_op_X9 [18], in_mask_op_X9 [19], in_mask_op_X9 [20], in_mask_op_X9 [21], in_mask_op_X9 [22], in_mask_op_X9 [23], in_mask_op_X9 [24], in_mask_op_X9 [25], in_mask_op_X9 [26], in_mask_op_X9 [27], in_mask_op_X9 [28], in_mask_op_X9 [29], in_mask_op_X9 [30], in_mask_op_X9 [31], in_mask_op_X9 [32], in_mask_op_X9 [33], in_mask_op_X9 [34], in_mask_op_X9 [35], in_mask_op_X9 [36], in_mask_op_X9 [37], in_mask_op_X9 [38], in_mask_op_X9 [47:40] } = 0;
  assign { in_mask_op_C9 [0], in_mask_op_C9 [1], in_mask_op_C9 [2], in_mask_op_C9 [3], in_mask_op_C9 [4], in_mask_op_C9 [5], in_mask_op_C9 [6], in_mask_op_C9 [7], in_mask_op_C9 [8], in_mask_op_C9 [9], in_mask_op_C9 [10], in_mask_op_C9 [11], in_mask_op_C9 [12], in_mask_op_C9 [13], in_mask_op_C9 [14], in_mask_op_C9 [15], in_mask_op_C9 [16], in_mask_op_C9 [17], in_mask_op_C9 [18], in_mask_op_C9 [19], in_mask_op_C9 [20], in_mask_op_C9 [21], in_mask_op_C9 [22], in_mask_op_C9 [23], in_mask_op_C9 [24], in_mask_op_C9 [25], in_mask_op_C9 [26], in_mask_op_C9 [27], in_mask_op_C9 [28], in_mask_op_C9 [29], in_mask_op_C9 [30], in_mask_op_C9 [31], in_mask_op_C9 [32], in_mask_op_C9 [33], in_mask_op_C9 [34], in_mask_op_C9 [35], in_mask_op_C9 [36], in_mask_op_C9 [37], in_mask_op_C9 [38], in_mask_op_C9 [47:40] } = 0;
  logic [47:0] in_mask_op_R10 ;
  logic [47:0] in_mask_op_X10 ;
  logic [47:0] in_mask_op_C10 ;
  assign in_mask_op_R10 [39:39] = fangyuan28_R [32:32] ;
  assign in_mask_op_X10 [39:39] = fangyuan28_X [32:32] ;
  assign in_mask_op_C10 [39:39] = fangyuan28_C [32:32] ;
  assign { in_mask_op_R10 [0], in_mask_op_R10 [1], in_mask_op_R10 [2], in_mask_op_R10 [3], in_mask_op_R10 [4], in_mask_op_R10 [5], in_mask_op_R10 [6], in_mask_op_R10 [7], in_mask_op_R10 [8], in_mask_op_R10 [9], in_mask_op_R10 [10], in_mask_op_R10 [11], in_mask_op_R10 [12], in_mask_op_R10 [13], in_mask_op_R10 [14], in_mask_op_R10 [15], in_mask_op_R10 [16], in_mask_op_R10 [17], in_mask_op_R10 [18], in_mask_op_R10 [19], in_mask_op_R10 [20], in_mask_op_R10 [21], in_mask_op_R10 [22], in_mask_op_R10 [23], in_mask_op_R10 [24], in_mask_op_R10 [25], in_mask_op_R10 [26], in_mask_op_R10 [27], in_mask_op_R10 [28], in_mask_op_R10 [29], in_mask_op_R10 [30], in_mask_op_R10 [31], in_mask_op_R10 [32], in_mask_op_R10 [33], in_mask_op_R10 [34], in_mask_op_R10 [35], in_mask_op_R10 [36], in_mask_op_R10 [37], in_mask_op_R10 [38], in_mask_op_R10 [47:40] } = 0;
  assign { in_mask_op_X10 [0], in_mask_op_X10 [1], in_mask_op_X10 [2], in_mask_op_X10 [3], in_mask_op_X10 [4], in_mask_op_X10 [5], in_mask_op_X10 [6], in_mask_op_X10 [7], in_mask_op_X10 [8], in_mask_op_X10 [9], in_mask_op_X10 [10], in_mask_op_X10 [11], in_mask_op_X10 [12], in_mask_op_X10 [13], in_mask_op_X10 [14], in_mask_op_X10 [15], in_mask_op_X10 [16], in_mask_op_X10 [17], in_mask_op_X10 [18], in_mask_op_X10 [19], in_mask_op_X10 [20], in_mask_op_X10 [21], in_mask_op_X10 [22], in_mask_op_X10 [23], in_mask_op_X10 [24], in_mask_op_X10 [25], in_mask_op_X10 [26], in_mask_op_X10 [27], in_mask_op_X10 [28], in_mask_op_X10 [29], in_mask_op_X10 [30], in_mask_op_X10 [31], in_mask_op_X10 [32], in_mask_op_X10 [33], in_mask_op_X10 [34], in_mask_op_X10 [35], in_mask_op_X10 [36], in_mask_op_X10 [37], in_mask_op_X10 [38], in_mask_op_X10 [47:40] } = 0;
  assign { in_mask_op_C10 [0], in_mask_op_C10 [1], in_mask_op_C10 [2], in_mask_op_C10 [3], in_mask_op_C10 [4], in_mask_op_C10 [5], in_mask_op_C10 [6], in_mask_op_C10 [7], in_mask_op_C10 [8], in_mask_op_C10 [9], in_mask_op_C10 [10], in_mask_op_C10 [11], in_mask_op_C10 [12], in_mask_op_C10 [13], in_mask_op_C10 [14], in_mask_op_C10 [15], in_mask_op_C10 [16], in_mask_op_C10 [17], in_mask_op_C10 [18], in_mask_op_C10 [19], in_mask_op_C10 [20], in_mask_op_C10 [21], in_mask_op_C10 [22], in_mask_op_C10 [23], in_mask_op_C10 [24], in_mask_op_C10 [25], in_mask_op_C10 [26], in_mask_op_C10 [27], in_mask_op_C10 [28], in_mask_op_C10 [29], in_mask_op_C10 [30], in_mask_op_C10 [31], in_mask_op_C10 [32], in_mask_op_C10 [33], in_mask_op_C10 [34], in_mask_op_C10 [35], in_mask_op_C10 [36], in_mask_op_C10 [37], in_mask_op_C10 [38], in_mask_op_C10 [47:40] } = 0;
  logic [47:0] in_mask_op_R11 ;
  logic [47:0] in_mask_op_X11 ;
  logic [47:0] in_mask_op_C11 ;
  assign in_mask_op_R11 [39:39] = fangyuan28_R [31:31] ;
  assign in_mask_op_X11 [39:39] = fangyuan28_X [31:31] ;
  assign in_mask_op_C11 [39:39] = fangyuan28_C [31:31] ;
  assign { in_mask_op_R11 [0], in_mask_op_R11 [1], in_mask_op_R11 [2], in_mask_op_R11 [3], in_mask_op_R11 [4], in_mask_op_R11 [5], in_mask_op_R11 [6], in_mask_op_R11 [7], in_mask_op_R11 [8], in_mask_op_R11 [9], in_mask_op_R11 [10], in_mask_op_R11 [11], in_mask_op_R11 [12], in_mask_op_R11 [13], in_mask_op_R11 [14], in_mask_op_R11 [15], in_mask_op_R11 [16], in_mask_op_R11 [17], in_mask_op_R11 [18], in_mask_op_R11 [19], in_mask_op_R11 [20], in_mask_op_R11 [21], in_mask_op_R11 [22], in_mask_op_R11 [23], in_mask_op_R11 [24], in_mask_op_R11 [25], in_mask_op_R11 [26], in_mask_op_R11 [27], in_mask_op_R11 [28], in_mask_op_R11 [29], in_mask_op_R11 [30], in_mask_op_R11 [31], in_mask_op_R11 [32], in_mask_op_R11 [33], in_mask_op_R11 [34], in_mask_op_R11 [35], in_mask_op_R11 [36], in_mask_op_R11 [37], in_mask_op_R11 [38], in_mask_op_R11 [47:40] } = 0;
  assign { in_mask_op_X11 [0], in_mask_op_X11 [1], in_mask_op_X11 [2], in_mask_op_X11 [3], in_mask_op_X11 [4], in_mask_op_X11 [5], in_mask_op_X11 [6], in_mask_op_X11 [7], in_mask_op_X11 [8], in_mask_op_X11 [9], in_mask_op_X11 [10], in_mask_op_X11 [11], in_mask_op_X11 [12], in_mask_op_X11 [13], in_mask_op_X11 [14], in_mask_op_X11 [15], in_mask_op_X11 [16], in_mask_op_X11 [17], in_mask_op_X11 [18], in_mask_op_X11 [19], in_mask_op_X11 [20], in_mask_op_X11 [21], in_mask_op_X11 [22], in_mask_op_X11 [23], in_mask_op_X11 [24], in_mask_op_X11 [25], in_mask_op_X11 [26], in_mask_op_X11 [27], in_mask_op_X11 [28], in_mask_op_X11 [29], in_mask_op_X11 [30], in_mask_op_X11 [31], in_mask_op_X11 [32], in_mask_op_X11 [33], in_mask_op_X11 [34], in_mask_op_X11 [35], in_mask_op_X11 [36], in_mask_op_X11 [37], in_mask_op_X11 [38], in_mask_op_X11 [47:40] } = 0;
  assign { in_mask_op_C11 [0], in_mask_op_C11 [1], in_mask_op_C11 [2], in_mask_op_C11 [3], in_mask_op_C11 [4], in_mask_op_C11 [5], in_mask_op_C11 [6], in_mask_op_C11 [7], in_mask_op_C11 [8], in_mask_op_C11 [9], in_mask_op_C11 [10], in_mask_op_C11 [11], in_mask_op_C11 [12], in_mask_op_C11 [13], in_mask_op_C11 [14], in_mask_op_C11 [15], in_mask_op_C11 [16], in_mask_op_C11 [17], in_mask_op_C11 [18], in_mask_op_C11 [19], in_mask_op_C11 [20], in_mask_op_C11 [21], in_mask_op_C11 [22], in_mask_op_C11 [23], in_mask_op_C11 [24], in_mask_op_C11 [25], in_mask_op_C11 [26], in_mask_op_C11 [27], in_mask_op_C11 [28], in_mask_op_C11 [29], in_mask_op_C11 [30], in_mask_op_C11 [31], in_mask_op_C11 [32], in_mask_op_C11 [33], in_mask_op_C11 [34], in_mask_op_C11 [35], in_mask_op_C11 [36], in_mask_op_C11 [37], in_mask_op_C11 [38], in_mask_op_C11 [47:40] } = 0;
  logic [47:0] in_mask_op_R12 ;
  logic [47:0] in_mask_op_X12 ;
  logic [47:0] in_mask_op_C12 ;
  assign in_mask_op_R12 [39:39] = fangyuan28_R [30:30] ;
  assign in_mask_op_X12 [39:39] = fangyuan28_X [30:30] ;
  assign in_mask_op_C12 [39:39] = fangyuan28_C [30:30] ;
  assign { in_mask_op_R12 [0], in_mask_op_R12 [1], in_mask_op_R12 [2], in_mask_op_R12 [3], in_mask_op_R12 [4], in_mask_op_R12 [5], in_mask_op_R12 [6], in_mask_op_R12 [7], in_mask_op_R12 [8], in_mask_op_R12 [9], in_mask_op_R12 [10], in_mask_op_R12 [11], in_mask_op_R12 [12], in_mask_op_R12 [13], in_mask_op_R12 [14], in_mask_op_R12 [15], in_mask_op_R12 [16], in_mask_op_R12 [17], in_mask_op_R12 [18], in_mask_op_R12 [19], in_mask_op_R12 [20], in_mask_op_R12 [21], in_mask_op_R12 [22], in_mask_op_R12 [23], in_mask_op_R12 [24], in_mask_op_R12 [25], in_mask_op_R12 [26], in_mask_op_R12 [27], in_mask_op_R12 [28], in_mask_op_R12 [29], in_mask_op_R12 [30], in_mask_op_R12 [31], in_mask_op_R12 [32], in_mask_op_R12 [33], in_mask_op_R12 [34], in_mask_op_R12 [35], in_mask_op_R12 [36], in_mask_op_R12 [37], in_mask_op_R12 [38], in_mask_op_R12 [47:40] } = 0;
  assign { in_mask_op_X12 [0], in_mask_op_X12 [1], in_mask_op_X12 [2], in_mask_op_X12 [3], in_mask_op_X12 [4], in_mask_op_X12 [5], in_mask_op_X12 [6], in_mask_op_X12 [7], in_mask_op_X12 [8], in_mask_op_X12 [9], in_mask_op_X12 [10], in_mask_op_X12 [11], in_mask_op_X12 [12], in_mask_op_X12 [13], in_mask_op_X12 [14], in_mask_op_X12 [15], in_mask_op_X12 [16], in_mask_op_X12 [17], in_mask_op_X12 [18], in_mask_op_X12 [19], in_mask_op_X12 [20], in_mask_op_X12 [21], in_mask_op_X12 [22], in_mask_op_X12 [23], in_mask_op_X12 [24], in_mask_op_X12 [25], in_mask_op_X12 [26], in_mask_op_X12 [27], in_mask_op_X12 [28], in_mask_op_X12 [29], in_mask_op_X12 [30], in_mask_op_X12 [31], in_mask_op_X12 [32], in_mask_op_X12 [33], in_mask_op_X12 [34], in_mask_op_X12 [35], in_mask_op_X12 [36], in_mask_op_X12 [37], in_mask_op_X12 [38], in_mask_op_X12 [47:40] } = 0;
  assign { in_mask_op_C12 [0], in_mask_op_C12 [1], in_mask_op_C12 [2], in_mask_op_C12 [3], in_mask_op_C12 [4], in_mask_op_C12 [5], in_mask_op_C12 [6], in_mask_op_C12 [7], in_mask_op_C12 [8], in_mask_op_C12 [9], in_mask_op_C12 [10], in_mask_op_C12 [11], in_mask_op_C12 [12], in_mask_op_C12 [13], in_mask_op_C12 [14], in_mask_op_C12 [15], in_mask_op_C12 [16], in_mask_op_C12 [17], in_mask_op_C12 [18], in_mask_op_C12 [19], in_mask_op_C12 [20], in_mask_op_C12 [21], in_mask_op_C12 [22], in_mask_op_C12 [23], in_mask_op_C12 [24], in_mask_op_C12 [25], in_mask_op_C12 [26], in_mask_op_C12 [27], in_mask_op_C12 [28], in_mask_op_C12 [29], in_mask_op_C12 [30], in_mask_op_C12 [31], in_mask_op_C12 [32], in_mask_op_C12 [33], in_mask_op_C12 [34], in_mask_op_C12 [35], in_mask_op_C12 [36], in_mask_op_C12 [37], in_mask_op_C12 [38], in_mask_op_C12 [47:40] } = 0;
  logic [47:0] in_mask_op_R13 ;
  logic [47:0] in_mask_op_X13 ;
  logic [47:0] in_mask_op_C13 ;
  assign in_mask_op_R13 [39:39] = fangyuan28_R [29:29] ;
  assign in_mask_op_X13 [39:39] = fangyuan28_X [29:29] ;
  assign in_mask_op_C13 [39:39] = fangyuan28_C [29:29] ;
  assign { in_mask_op_R13 [0], in_mask_op_R13 [1], in_mask_op_R13 [2], in_mask_op_R13 [3], in_mask_op_R13 [4], in_mask_op_R13 [5], in_mask_op_R13 [6], in_mask_op_R13 [7], in_mask_op_R13 [8], in_mask_op_R13 [9], in_mask_op_R13 [10], in_mask_op_R13 [11], in_mask_op_R13 [12], in_mask_op_R13 [13], in_mask_op_R13 [14], in_mask_op_R13 [15], in_mask_op_R13 [16], in_mask_op_R13 [17], in_mask_op_R13 [18], in_mask_op_R13 [19], in_mask_op_R13 [20], in_mask_op_R13 [21], in_mask_op_R13 [22], in_mask_op_R13 [23], in_mask_op_R13 [24], in_mask_op_R13 [25], in_mask_op_R13 [26], in_mask_op_R13 [27], in_mask_op_R13 [28], in_mask_op_R13 [29], in_mask_op_R13 [30], in_mask_op_R13 [31], in_mask_op_R13 [32], in_mask_op_R13 [33], in_mask_op_R13 [34], in_mask_op_R13 [35], in_mask_op_R13 [36], in_mask_op_R13 [37], in_mask_op_R13 [38], in_mask_op_R13 [47:40] } = 0;
  assign { in_mask_op_X13 [0], in_mask_op_X13 [1], in_mask_op_X13 [2], in_mask_op_X13 [3], in_mask_op_X13 [4], in_mask_op_X13 [5], in_mask_op_X13 [6], in_mask_op_X13 [7], in_mask_op_X13 [8], in_mask_op_X13 [9], in_mask_op_X13 [10], in_mask_op_X13 [11], in_mask_op_X13 [12], in_mask_op_X13 [13], in_mask_op_X13 [14], in_mask_op_X13 [15], in_mask_op_X13 [16], in_mask_op_X13 [17], in_mask_op_X13 [18], in_mask_op_X13 [19], in_mask_op_X13 [20], in_mask_op_X13 [21], in_mask_op_X13 [22], in_mask_op_X13 [23], in_mask_op_X13 [24], in_mask_op_X13 [25], in_mask_op_X13 [26], in_mask_op_X13 [27], in_mask_op_X13 [28], in_mask_op_X13 [29], in_mask_op_X13 [30], in_mask_op_X13 [31], in_mask_op_X13 [32], in_mask_op_X13 [33], in_mask_op_X13 [34], in_mask_op_X13 [35], in_mask_op_X13 [36], in_mask_op_X13 [37], in_mask_op_X13 [38], in_mask_op_X13 [47:40] } = 0;
  assign { in_mask_op_C13 [0], in_mask_op_C13 [1], in_mask_op_C13 [2], in_mask_op_C13 [3], in_mask_op_C13 [4], in_mask_op_C13 [5], in_mask_op_C13 [6], in_mask_op_C13 [7], in_mask_op_C13 [8], in_mask_op_C13 [9], in_mask_op_C13 [10], in_mask_op_C13 [11], in_mask_op_C13 [12], in_mask_op_C13 [13], in_mask_op_C13 [14], in_mask_op_C13 [15], in_mask_op_C13 [16], in_mask_op_C13 [17], in_mask_op_C13 [18], in_mask_op_C13 [19], in_mask_op_C13 [20], in_mask_op_C13 [21], in_mask_op_C13 [22], in_mask_op_C13 [23], in_mask_op_C13 [24], in_mask_op_C13 [25], in_mask_op_C13 [26], in_mask_op_C13 [27], in_mask_op_C13 [28], in_mask_op_C13 [29], in_mask_op_C13 [30], in_mask_op_C13 [31], in_mask_op_C13 [32], in_mask_op_C13 [33], in_mask_op_C13 [34], in_mask_op_C13 [35], in_mask_op_C13 [36], in_mask_op_C13 [37], in_mask_op_C13 [38], in_mask_op_C13 [47:40] } = 0;
  logic [47:0] in_mask_op_R14 ;
  logic [47:0] in_mask_op_X14 ;
  logic [47:0] in_mask_op_C14 ;
  assign in_mask_op_R14 [39:39] = fangyuan28_R [28:28] ;
  assign in_mask_op_X14 [39:39] = fangyuan28_X [28:28] ;
  assign in_mask_op_C14 [39:39] = fangyuan28_C [28:28] ;
  assign { in_mask_op_R14 [0], in_mask_op_R14 [1], in_mask_op_R14 [2], in_mask_op_R14 [3], in_mask_op_R14 [4], in_mask_op_R14 [5], in_mask_op_R14 [6], in_mask_op_R14 [7], in_mask_op_R14 [8], in_mask_op_R14 [9], in_mask_op_R14 [10], in_mask_op_R14 [11], in_mask_op_R14 [12], in_mask_op_R14 [13], in_mask_op_R14 [14], in_mask_op_R14 [15], in_mask_op_R14 [16], in_mask_op_R14 [17], in_mask_op_R14 [18], in_mask_op_R14 [19], in_mask_op_R14 [20], in_mask_op_R14 [21], in_mask_op_R14 [22], in_mask_op_R14 [23], in_mask_op_R14 [24], in_mask_op_R14 [25], in_mask_op_R14 [26], in_mask_op_R14 [27], in_mask_op_R14 [28], in_mask_op_R14 [29], in_mask_op_R14 [30], in_mask_op_R14 [31], in_mask_op_R14 [32], in_mask_op_R14 [33], in_mask_op_R14 [34], in_mask_op_R14 [35], in_mask_op_R14 [36], in_mask_op_R14 [37], in_mask_op_R14 [38], in_mask_op_R14 [47:40] } = 0;
  assign { in_mask_op_X14 [0], in_mask_op_X14 [1], in_mask_op_X14 [2], in_mask_op_X14 [3], in_mask_op_X14 [4], in_mask_op_X14 [5], in_mask_op_X14 [6], in_mask_op_X14 [7], in_mask_op_X14 [8], in_mask_op_X14 [9], in_mask_op_X14 [10], in_mask_op_X14 [11], in_mask_op_X14 [12], in_mask_op_X14 [13], in_mask_op_X14 [14], in_mask_op_X14 [15], in_mask_op_X14 [16], in_mask_op_X14 [17], in_mask_op_X14 [18], in_mask_op_X14 [19], in_mask_op_X14 [20], in_mask_op_X14 [21], in_mask_op_X14 [22], in_mask_op_X14 [23], in_mask_op_X14 [24], in_mask_op_X14 [25], in_mask_op_X14 [26], in_mask_op_X14 [27], in_mask_op_X14 [28], in_mask_op_X14 [29], in_mask_op_X14 [30], in_mask_op_X14 [31], in_mask_op_X14 [32], in_mask_op_X14 [33], in_mask_op_X14 [34], in_mask_op_X14 [35], in_mask_op_X14 [36], in_mask_op_X14 [37], in_mask_op_X14 [38], in_mask_op_X14 [47:40] } = 0;
  assign { in_mask_op_C14 [0], in_mask_op_C14 [1], in_mask_op_C14 [2], in_mask_op_C14 [3], in_mask_op_C14 [4], in_mask_op_C14 [5], in_mask_op_C14 [6], in_mask_op_C14 [7], in_mask_op_C14 [8], in_mask_op_C14 [9], in_mask_op_C14 [10], in_mask_op_C14 [11], in_mask_op_C14 [12], in_mask_op_C14 [13], in_mask_op_C14 [14], in_mask_op_C14 [15], in_mask_op_C14 [16], in_mask_op_C14 [17], in_mask_op_C14 [18], in_mask_op_C14 [19], in_mask_op_C14 [20], in_mask_op_C14 [21], in_mask_op_C14 [22], in_mask_op_C14 [23], in_mask_op_C14 [24], in_mask_op_C14 [25], in_mask_op_C14 [26], in_mask_op_C14 [27], in_mask_op_C14 [28], in_mask_op_C14 [29], in_mask_op_C14 [30], in_mask_op_C14 [31], in_mask_op_C14 [32], in_mask_op_C14 [33], in_mask_op_C14 [34], in_mask_op_C14 [35], in_mask_op_C14 [36], in_mask_op_C14 [37], in_mask_op_C14 [38], in_mask_op_C14 [47:40] } = 0;
  logic [47:0] in_mask_op_R15 ;
  logic [47:0] in_mask_op_X15 ;
  logic [47:0] in_mask_op_C15 ;
  assign in_mask_op_R15 [39:39] = fangyuan28_R [27:27] ;
  assign in_mask_op_X15 [39:39] = fangyuan28_X [27:27] ;
  assign in_mask_op_C15 [39:39] = fangyuan28_C [27:27] ;
  assign { in_mask_op_R15 [0], in_mask_op_R15 [1], in_mask_op_R15 [2], in_mask_op_R15 [3], in_mask_op_R15 [4], in_mask_op_R15 [5], in_mask_op_R15 [6], in_mask_op_R15 [7], in_mask_op_R15 [8], in_mask_op_R15 [9], in_mask_op_R15 [10], in_mask_op_R15 [11], in_mask_op_R15 [12], in_mask_op_R15 [13], in_mask_op_R15 [14], in_mask_op_R15 [15], in_mask_op_R15 [16], in_mask_op_R15 [17], in_mask_op_R15 [18], in_mask_op_R15 [19], in_mask_op_R15 [20], in_mask_op_R15 [21], in_mask_op_R15 [22], in_mask_op_R15 [23], in_mask_op_R15 [24], in_mask_op_R15 [25], in_mask_op_R15 [26], in_mask_op_R15 [27], in_mask_op_R15 [28], in_mask_op_R15 [29], in_mask_op_R15 [30], in_mask_op_R15 [31], in_mask_op_R15 [32], in_mask_op_R15 [33], in_mask_op_R15 [34], in_mask_op_R15 [35], in_mask_op_R15 [36], in_mask_op_R15 [37], in_mask_op_R15 [38], in_mask_op_R15 [47:40] } = 0;
  assign { in_mask_op_X15 [0], in_mask_op_X15 [1], in_mask_op_X15 [2], in_mask_op_X15 [3], in_mask_op_X15 [4], in_mask_op_X15 [5], in_mask_op_X15 [6], in_mask_op_X15 [7], in_mask_op_X15 [8], in_mask_op_X15 [9], in_mask_op_X15 [10], in_mask_op_X15 [11], in_mask_op_X15 [12], in_mask_op_X15 [13], in_mask_op_X15 [14], in_mask_op_X15 [15], in_mask_op_X15 [16], in_mask_op_X15 [17], in_mask_op_X15 [18], in_mask_op_X15 [19], in_mask_op_X15 [20], in_mask_op_X15 [21], in_mask_op_X15 [22], in_mask_op_X15 [23], in_mask_op_X15 [24], in_mask_op_X15 [25], in_mask_op_X15 [26], in_mask_op_X15 [27], in_mask_op_X15 [28], in_mask_op_X15 [29], in_mask_op_X15 [30], in_mask_op_X15 [31], in_mask_op_X15 [32], in_mask_op_X15 [33], in_mask_op_X15 [34], in_mask_op_X15 [35], in_mask_op_X15 [36], in_mask_op_X15 [37], in_mask_op_X15 [38], in_mask_op_X15 [47:40] } = 0;
  assign { in_mask_op_C15 [0], in_mask_op_C15 [1], in_mask_op_C15 [2], in_mask_op_C15 [3], in_mask_op_C15 [4], in_mask_op_C15 [5], in_mask_op_C15 [6], in_mask_op_C15 [7], in_mask_op_C15 [8], in_mask_op_C15 [9], in_mask_op_C15 [10], in_mask_op_C15 [11], in_mask_op_C15 [12], in_mask_op_C15 [13], in_mask_op_C15 [14], in_mask_op_C15 [15], in_mask_op_C15 [16], in_mask_op_C15 [17], in_mask_op_C15 [18], in_mask_op_C15 [19], in_mask_op_C15 [20], in_mask_op_C15 [21], in_mask_op_C15 [22], in_mask_op_C15 [23], in_mask_op_C15 [24], in_mask_op_C15 [25], in_mask_op_C15 [26], in_mask_op_C15 [27], in_mask_op_C15 [28], in_mask_op_C15 [29], in_mask_op_C15 [30], in_mask_op_C15 [31], in_mask_op_C15 [32], in_mask_op_C15 [33], in_mask_op_C15 [34], in_mask_op_C15 [35], in_mask_op_C15 [36], in_mask_op_C15 [37], in_mask_op_C15 [38], in_mask_op_C15 [47:40] } = 0;
  logic [47:0] in_mask_op_R16 ;
  logic [47:0] in_mask_op_X16 ;
  logic [47:0] in_mask_op_C16 ;
  assign in_mask_op_R16 [39:39] = fangyuan28_R [26:26] ;
  assign in_mask_op_X16 [39:39] = fangyuan28_X [26:26] ;
  assign in_mask_op_C16 [39:39] = fangyuan28_C [26:26] ;
  assign { in_mask_op_R16 [0], in_mask_op_R16 [1], in_mask_op_R16 [2], in_mask_op_R16 [3], in_mask_op_R16 [4], in_mask_op_R16 [5], in_mask_op_R16 [6], in_mask_op_R16 [7], in_mask_op_R16 [8], in_mask_op_R16 [9], in_mask_op_R16 [10], in_mask_op_R16 [11], in_mask_op_R16 [12], in_mask_op_R16 [13], in_mask_op_R16 [14], in_mask_op_R16 [15], in_mask_op_R16 [16], in_mask_op_R16 [17], in_mask_op_R16 [18], in_mask_op_R16 [19], in_mask_op_R16 [20], in_mask_op_R16 [21], in_mask_op_R16 [22], in_mask_op_R16 [23], in_mask_op_R16 [24], in_mask_op_R16 [25], in_mask_op_R16 [26], in_mask_op_R16 [27], in_mask_op_R16 [28], in_mask_op_R16 [29], in_mask_op_R16 [30], in_mask_op_R16 [31], in_mask_op_R16 [32], in_mask_op_R16 [33], in_mask_op_R16 [34], in_mask_op_R16 [35], in_mask_op_R16 [36], in_mask_op_R16 [37], in_mask_op_R16 [38], in_mask_op_R16 [47:40] } = 0;
  assign { in_mask_op_X16 [0], in_mask_op_X16 [1], in_mask_op_X16 [2], in_mask_op_X16 [3], in_mask_op_X16 [4], in_mask_op_X16 [5], in_mask_op_X16 [6], in_mask_op_X16 [7], in_mask_op_X16 [8], in_mask_op_X16 [9], in_mask_op_X16 [10], in_mask_op_X16 [11], in_mask_op_X16 [12], in_mask_op_X16 [13], in_mask_op_X16 [14], in_mask_op_X16 [15], in_mask_op_X16 [16], in_mask_op_X16 [17], in_mask_op_X16 [18], in_mask_op_X16 [19], in_mask_op_X16 [20], in_mask_op_X16 [21], in_mask_op_X16 [22], in_mask_op_X16 [23], in_mask_op_X16 [24], in_mask_op_X16 [25], in_mask_op_X16 [26], in_mask_op_X16 [27], in_mask_op_X16 [28], in_mask_op_X16 [29], in_mask_op_X16 [30], in_mask_op_X16 [31], in_mask_op_X16 [32], in_mask_op_X16 [33], in_mask_op_X16 [34], in_mask_op_X16 [35], in_mask_op_X16 [36], in_mask_op_X16 [37], in_mask_op_X16 [38], in_mask_op_X16 [47:40] } = 0;
  assign { in_mask_op_C16 [0], in_mask_op_C16 [1], in_mask_op_C16 [2], in_mask_op_C16 [3], in_mask_op_C16 [4], in_mask_op_C16 [5], in_mask_op_C16 [6], in_mask_op_C16 [7], in_mask_op_C16 [8], in_mask_op_C16 [9], in_mask_op_C16 [10], in_mask_op_C16 [11], in_mask_op_C16 [12], in_mask_op_C16 [13], in_mask_op_C16 [14], in_mask_op_C16 [15], in_mask_op_C16 [16], in_mask_op_C16 [17], in_mask_op_C16 [18], in_mask_op_C16 [19], in_mask_op_C16 [20], in_mask_op_C16 [21], in_mask_op_C16 [22], in_mask_op_C16 [23], in_mask_op_C16 [24], in_mask_op_C16 [25], in_mask_op_C16 [26], in_mask_op_C16 [27], in_mask_op_C16 [28], in_mask_op_C16 [29], in_mask_op_C16 [30], in_mask_op_C16 [31], in_mask_op_C16 [32], in_mask_op_C16 [33], in_mask_op_C16 [34], in_mask_op_C16 [35], in_mask_op_C16 [36], in_mask_op_C16 [37], in_mask_op_C16 [38], in_mask_op_C16 [47:40] } = 0;
  logic [47:0] in_mask_op_R17 ;
  logic [47:0] in_mask_op_X17 ;
  logic [47:0] in_mask_op_C17 ;
  assign in_mask_op_R17 [39:39] = fangyuan28_R [25:25] ;
  assign in_mask_op_X17 [39:39] = fangyuan28_X [25:25] ;
  assign in_mask_op_C17 [39:39] = fangyuan28_C [25:25] ;
  assign { in_mask_op_R17 [0], in_mask_op_R17 [1], in_mask_op_R17 [2], in_mask_op_R17 [3], in_mask_op_R17 [4], in_mask_op_R17 [5], in_mask_op_R17 [6], in_mask_op_R17 [7], in_mask_op_R17 [8], in_mask_op_R17 [9], in_mask_op_R17 [10], in_mask_op_R17 [11], in_mask_op_R17 [12], in_mask_op_R17 [13], in_mask_op_R17 [14], in_mask_op_R17 [15], in_mask_op_R17 [16], in_mask_op_R17 [17], in_mask_op_R17 [18], in_mask_op_R17 [19], in_mask_op_R17 [20], in_mask_op_R17 [21], in_mask_op_R17 [22], in_mask_op_R17 [23], in_mask_op_R17 [24], in_mask_op_R17 [25], in_mask_op_R17 [26], in_mask_op_R17 [27], in_mask_op_R17 [28], in_mask_op_R17 [29], in_mask_op_R17 [30], in_mask_op_R17 [31], in_mask_op_R17 [32], in_mask_op_R17 [33], in_mask_op_R17 [34], in_mask_op_R17 [35], in_mask_op_R17 [36], in_mask_op_R17 [37], in_mask_op_R17 [38], in_mask_op_R17 [47:40] } = 0;
  assign { in_mask_op_X17 [0], in_mask_op_X17 [1], in_mask_op_X17 [2], in_mask_op_X17 [3], in_mask_op_X17 [4], in_mask_op_X17 [5], in_mask_op_X17 [6], in_mask_op_X17 [7], in_mask_op_X17 [8], in_mask_op_X17 [9], in_mask_op_X17 [10], in_mask_op_X17 [11], in_mask_op_X17 [12], in_mask_op_X17 [13], in_mask_op_X17 [14], in_mask_op_X17 [15], in_mask_op_X17 [16], in_mask_op_X17 [17], in_mask_op_X17 [18], in_mask_op_X17 [19], in_mask_op_X17 [20], in_mask_op_X17 [21], in_mask_op_X17 [22], in_mask_op_X17 [23], in_mask_op_X17 [24], in_mask_op_X17 [25], in_mask_op_X17 [26], in_mask_op_X17 [27], in_mask_op_X17 [28], in_mask_op_X17 [29], in_mask_op_X17 [30], in_mask_op_X17 [31], in_mask_op_X17 [32], in_mask_op_X17 [33], in_mask_op_X17 [34], in_mask_op_X17 [35], in_mask_op_X17 [36], in_mask_op_X17 [37], in_mask_op_X17 [38], in_mask_op_X17 [47:40] } = 0;
  assign { in_mask_op_C17 [0], in_mask_op_C17 [1], in_mask_op_C17 [2], in_mask_op_C17 [3], in_mask_op_C17 [4], in_mask_op_C17 [5], in_mask_op_C17 [6], in_mask_op_C17 [7], in_mask_op_C17 [8], in_mask_op_C17 [9], in_mask_op_C17 [10], in_mask_op_C17 [11], in_mask_op_C17 [12], in_mask_op_C17 [13], in_mask_op_C17 [14], in_mask_op_C17 [15], in_mask_op_C17 [16], in_mask_op_C17 [17], in_mask_op_C17 [18], in_mask_op_C17 [19], in_mask_op_C17 [20], in_mask_op_C17 [21], in_mask_op_C17 [22], in_mask_op_C17 [23], in_mask_op_C17 [24], in_mask_op_C17 [25], in_mask_op_C17 [26], in_mask_op_C17 [27], in_mask_op_C17 [28], in_mask_op_C17 [29], in_mask_op_C17 [30], in_mask_op_C17 [31], in_mask_op_C17 [32], in_mask_op_C17 [33], in_mask_op_C17 [34], in_mask_op_C17 [35], in_mask_op_C17 [36], in_mask_op_C17 [37], in_mask_op_C17 [38], in_mask_op_C17 [47:40] } = 0;
  logic [47:0] in_mask_op_R18 ;
  logic [47:0] in_mask_op_X18 ;
  logic [47:0] in_mask_op_C18 ;
  assign in_mask_op_R18 [39:39] = fangyuan28_R [24:24] ;
  assign in_mask_op_X18 [39:39] = fangyuan28_X [24:24] ;
  assign in_mask_op_C18 [39:39] = fangyuan28_C [24:24] ;
  assign { in_mask_op_R18 [0], in_mask_op_R18 [1], in_mask_op_R18 [2], in_mask_op_R18 [3], in_mask_op_R18 [4], in_mask_op_R18 [5], in_mask_op_R18 [6], in_mask_op_R18 [7], in_mask_op_R18 [8], in_mask_op_R18 [9], in_mask_op_R18 [10], in_mask_op_R18 [11], in_mask_op_R18 [12], in_mask_op_R18 [13], in_mask_op_R18 [14], in_mask_op_R18 [15], in_mask_op_R18 [16], in_mask_op_R18 [17], in_mask_op_R18 [18], in_mask_op_R18 [19], in_mask_op_R18 [20], in_mask_op_R18 [21], in_mask_op_R18 [22], in_mask_op_R18 [23], in_mask_op_R18 [24], in_mask_op_R18 [25], in_mask_op_R18 [26], in_mask_op_R18 [27], in_mask_op_R18 [28], in_mask_op_R18 [29], in_mask_op_R18 [30], in_mask_op_R18 [31], in_mask_op_R18 [32], in_mask_op_R18 [33], in_mask_op_R18 [34], in_mask_op_R18 [35], in_mask_op_R18 [36], in_mask_op_R18 [37], in_mask_op_R18 [38], in_mask_op_R18 [47:40] } = 0;
  assign { in_mask_op_X18 [0], in_mask_op_X18 [1], in_mask_op_X18 [2], in_mask_op_X18 [3], in_mask_op_X18 [4], in_mask_op_X18 [5], in_mask_op_X18 [6], in_mask_op_X18 [7], in_mask_op_X18 [8], in_mask_op_X18 [9], in_mask_op_X18 [10], in_mask_op_X18 [11], in_mask_op_X18 [12], in_mask_op_X18 [13], in_mask_op_X18 [14], in_mask_op_X18 [15], in_mask_op_X18 [16], in_mask_op_X18 [17], in_mask_op_X18 [18], in_mask_op_X18 [19], in_mask_op_X18 [20], in_mask_op_X18 [21], in_mask_op_X18 [22], in_mask_op_X18 [23], in_mask_op_X18 [24], in_mask_op_X18 [25], in_mask_op_X18 [26], in_mask_op_X18 [27], in_mask_op_X18 [28], in_mask_op_X18 [29], in_mask_op_X18 [30], in_mask_op_X18 [31], in_mask_op_X18 [32], in_mask_op_X18 [33], in_mask_op_X18 [34], in_mask_op_X18 [35], in_mask_op_X18 [36], in_mask_op_X18 [37], in_mask_op_X18 [38], in_mask_op_X18 [47:40] } = 0;
  assign { in_mask_op_C18 [0], in_mask_op_C18 [1], in_mask_op_C18 [2], in_mask_op_C18 [3], in_mask_op_C18 [4], in_mask_op_C18 [5], in_mask_op_C18 [6], in_mask_op_C18 [7], in_mask_op_C18 [8], in_mask_op_C18 [9], in_mask_op_C18 [10], in_mask_op_C18 [11], in_mask_op_C18 [12], in_mask_op_C18 [13], in_mask_op_C18 [14], in_mask_op_C18 [15], in_mask_op_C18 [16], in_mask_op_C18 [17], in_mask_op_C18 [18], in_mask_op_C18 [19], in_mask_op_C18 [20], in_mask_op_C18 [21], in_mask_op_C18 [22], in_mask_op_C18 [23], in_mask_op_C18 [24], in_mask_op_C18 [25], in_mask_op_C18 [26], in_mask_op_C18 [27], in_mask_op_C18 [28], in_mask_op_C18 [29], in_mask_op_C18 [30], in_mask_op_C18 [31], in_mask_op_C18 [32], in_mask_op_C18 [33], in_mask_op_C18 [34], in_mask_op_C18 [35], in_mask_op_C18 [36], in_mask_op_C18 [37], in_mask_op_C18 [38], in_mask_op_C18 [47:40] } = 0;
  logic [47:0] in_mask_op_R19 ;
  logic [47:0] in_mask_op_X19 ;
  logic [47:0] in_mask_op_C19 ;
  assign in_mask_op_R19 [39:39] = fangyuan28_R [23:23] ;
  assign in_mask_op_X19 [39:39] = fangyuan28_X [23:23] ;
  assign in_mask_op_C19 [39:39] = fangyuan28_C [23:23] ;
  assign { in_mask_op_R19 [0], in_mask_op_R19 [1], in_mask_op_R19 [2], in_mask_op_R19 [3], in_mask_op_R19 [4], in_mask_op_R19 [5], in_mask_op_R19 [6], in_mask_op_R19 [7], in_mask_op_R19 [8], in_mask_op_R19 [9], in_mask_op_R19 [10], in_mask_op_R19 [11], in_mask_op_R19 [12], in_mask_op_R19 [13], in_mask_op_R19 [14], in_mask_op_R19 [15], in_mask_op_R19 [16], in_mask_op_R19 [17], in_mask_op_R19 [18], in_mask_op_R19 [19], in_mask_op_R19 [20], in_mask_op_R19 [21], in_mask_op_R19 [22], in_mask_op_R19 [23], in_mask_op_R19 [24], in_mask_op_R19 [25], in_mask_op_R19 [26], in_mask_op_R19 [27], in_mask_op_R19 [28], in_mask_op_R19 [29], in_mask_op_R19 [30], in_mask_op_R19 [31], in_mask_op_R19 [32], in_mask_op_R19 [33], in_mask_op_R19 [34], in_mask_op_R19 [35], in_mask_op_R19 [36], in_mask_op_R19 [37], in_mask_op_R19 [38], in_mask_op_R19 [47:40] } = 0;
  assign { in_mask_op_X19 [0], in_mask_op_X19 [1], in_mask_op_X19 [2], in_mask_op_X19 [3], in_mask_op_X19 [4], in_mask_op_X19 [5], in_mask_op_X19 [6], in_mask_op_X19 [7], in_mask_op_X19 [8], in_mask_op_X19 [9], in_mask_op_X19 [10], in_mask_op_X19 [11], in_mask_op_X19 [12], in_mask_op_X19 [13], in_mask_op_X19 [14], in_mask_op_X19 [15], in_mask_op_X19 [16], in_mask_op_X19 [17], in_mask_op_X19 [18], in_mask_op_X19 [19], in_mask_op_X19 [20], in_mask_op_X19 [21], in_mask_op_X19 [22], in_mask_op_X19 [23], in_mask_op_X19 [24], in_mask_op_X19 [25], in_mask_op_X19 [26], in_mask_op_X19 [27], in_mask_op_X19 [28], in_mask_op_X19 [29], in_mask_op_X19 [30], in_mask_op_X19 [31], in_mask_op_X19 [32], in_mask_op_X19 [33], in_mask_op_X19 [34], in_mask_op_X19 [35], in_mask_op_X19 [36], in_mask_op_X19 [37], in_mask_op_X19 [38], in_mask_op_X19 [47:40] } = 0;
  assign { in_mask_op_C19 [0], in_mask_op_C19 [1], in_mask_op_C19 [2], in_mask_op_C19 [3], in_mask_op_C19 [4], in_mask_op_C19 [5], in_mask_op_C19 [6], in_mask_op_C19 [7], in_mask_op_C19 [8], in_mask_op_C19 [9], in_mask_op_C19 [10], in_mask_op_C19 [11], in_mask_op_C19 [12], in_mask_op_C19 [13], in_mask_op_C19 [14], in_mask_op_C19 [15], in_mask_op_C19 [16], in_mask_op_C19 [17], in_mask_op_C19 [18], in_mask_op_C19 [19], in_mask_op_C19 [20], in_mask_op_C19 [21], in_mask_op_C19 [22], in_mask_op_C19 [23], in_mask_op_C19 [24], in_mask_op_C19 [25], in_mask_op_C19 [26], in_mask_op_C19 [27], in_mask_op_C19 [28], in_mask_op_C19 [29], in_mask_op_C19 [30], in_mask_op_C19 [31], in_mask_op_C19 [32], in_mask_op_C19 [33], in_mask_op_C19 [34], in_mask_op_C19 [35], in_mask_op_C19 [36], in_mask_op_C19 [37], in_mask_op_C19 [38], in_mask_op_C19 [47:40] } = 0;
  logic [47:0] in_mask_op_R20 ;
  logic [47:0] in_mask_op_X20 ;
  logic [47:0] in_mask_op_C20 ;
  assign in_mask_op_R20 [39:39] = fangyuan28_R [22:22] ;
  assign in_mask_op_X20 [39:39] = fangyuan28_X [22:22] ;
  assign in_mask_op_C20 [39:39] = fangyuan28_C [22:22] ;
  assign { in_mask_op_R20 [0], in_mask_op_R20 [1], in_mask_op_R20 [2], in_mask_op_R20 [3], in_mask_op_R20 [4], in_mask_op_R20 [5], in_mask_op_R20 [6], in_mask_op_R20 [7], in_mask_op_R20 [8], in_mask_op_R20 [9], in_mask_op_R20 [10], in_mask_op_R20 [11], in_mask_op_R20 [12], in_mask_op_R20 [13], in_mask_op_R20 [14], in_mask_op_R20 [15], in_mask_op_R20 [16], in_mask_op_R20 [17], in_mask_op_R20 [18], in_mask_op_R20 [19], in_mask_op_R20 [20], in_mask_op_R20 [21], in_mask_op_R20 [22], in_mask_op_R20 [23], in_mask_op_R20 [24], in_mask_op_R20 [25], in_mask_op_R20 [26], in_mask_op_R20 [27], in_mask_op_R20 [28], in_mask_op_R20 [29], in_mask_op_R20 [30], in_mask_op_R20 [31], in_mask_op_R20 [32], in_mask_op_R20 [33], in_mask_op_R20 [34], in_mask_op_R20 [35], in_mask_op_R20 [36], in_mask_op_R20 [37], in_mask_op_R20 [38], in_mask_op_R20 [47:40] } = 0;
  assign { in_mask_op_X20 [0], in_mask_op_X20 [1], in_mask_op_X20 [2], in_mask_op_X20 [3], in_mask_op_X20 [4], in_mask_op_X20 [5], in_mask_op_X20 [6], in_mask_op_X20 [7], in_mask_op_X20 [8], in_mask_op_X20 [9], in_mask_op_X20 [10], in_mask_op_X20 [11], in_mask_op_X20 [12], in_mask_op_X20 [13], in_mask_op_X20 [14], in_mask_op_X20 [15], in_mask_op_X20 [16], in_mask_op_X20 [17], in_mask_op_X20 [18], in_mask_op_X20 [19], in_mask_op_X20 [20], in_mask_op_X20 [21], in_mask_op_X20 [22], in_mask_op_X20 [23], in_mask_op_X20 [24], in_mask_op_X20 [25], in_mask_op_X20 [26], in_mask_op_X20 [27], in_mask_op_X20 [28], in_mask_op_X20 [29], in_mask_op_X20 [30], in_mask_op_X20 [31], in_mask_op_X20 [32], in_mask_op_X20 [33], in_mask_op_X20 [34], in_mask_op_X20 [35], in_mask_op_X20 [36], in_mask_op_X20 [37], in_mask_op_X20 [38], in_mask_op_X20 [47:40] } = 0;
  assign { in_mask_op_C20 [0], in_mask_op_C20 [1], in_mask_op_C20 [2], in_mask_op_C20 [3], in_mask_op_C20 [4], in_mask_op_C20 [5], in_mask_op_C20 [6], in_mask_op_C20 [7], in_mask_op_C20 [8], in_mask_op_C20 [9], in_mask_op_C20 [10], in_mask_op_C20 [11], in_mask_op_C20 [12], in_mask_op_C20 [13], in_mask_op_C20 [14], in_mask_op_C20 [15], in_mask_op_C20 [16], in_mask_op_C20 [17], in_mask_op_C20 [18], in_mask_op_C20 [19], in_mask_op_C20 [20], in_mask_op_C20 [21], in_mask_op_C20 [22], in_mask_op_C20 [23], in_mask_op_C20 [24], in_mask_op_C20 [25], in_mask_op_C20 [26], in_mask_op_C20 [27], in_mask_op_C20 [28], in_mask_op_C20 [29], in_mask_op_C20 [30], in_mask_op_C20 [31], in_mask_op_C20 [32], in_mask_op_C20 [33], in_mask_op_C20 [34], in_mask_op_C20 [35], in_mask_op_C20 [36], in_mask_op_C20 [37], in_mask_op_C20 [38], in_mask_op_C20 [47:40] } = 0;
  logic [47:0] in_mask_op_R21 ;
  logic [47:0] in_mask_op_X21 ;
  logic [47:0] in_mask_op_C21 ;
  assign in_mask_op_R21 [39:39] = fangyuan28_R [21:21] ;
  assign in_mask_op_X21 [39:39] = fangyuan28_X [21:21] ;
  assign in_mask_op_C21 [39:39] = fangyuan28_C [21:21] ;
  assign { in_mask_op_R21 [0], in_mask_op_R21 [1], in_mask_op_R21 [2], in_mask_op_R21 [3], in_mask_op_R21 [4], in_mask_op_R21 [5], in_mask_op_R21 [6], in_mask_op_R21 [7], in_mask_op_R21 [8], in_mask_op_R21 [9], in_mask_op_R21 [10], in_mask_op_R21 [11], in_mask_op_R21 [12], in_mask_op_R21 [13], in_mask_op_R21 [14], in_mask_op_R21 [15], in_mask_op_R21 [16], in_mask_op_R21 [17], in_mask_op_R21 [18], in_mask_op_R21 [19], in_mask_op_R21 [20], in_mask_op_R21 [21], in_mask_op_R21 [22], in_mask_op_R21 [23], in_mask_op_R21 [24], in_mask_op_R21 [25], in_mask_op_R21 [26], in_mask_op_R21 [27], in_mask_op_R21 [28], in_mask_op_R21 [29], in_mask_op_R21 [30], in_mask_op_R21 [31], in_mask_op_R21 [32], in_mask_op_R21 [33], in_mask_op_R21 [34], in_mask_op_R21 [35], in_mask_op_R21 [36], in_mask_op_R21 [37], in_mask_op_R21 [38], in_mask_op_R21 [47:40] } = 0;
  assign { in_mask_op_X21 [0], in_mask_op_X21 [1], in_mask_op_X21 [2], in_mask_op_X21 [3], in_mask_op_X21 [4], in_mask_op_X21 [5], in_mask_op_X21 [6], in_mask_op_X21 [7], in_mask_op_X21 [8], in_mask_op_X21 [9], in_mask_op_X21 [10], in_mask_op_X21 [11], in_mask_op_X21 [12], in_mask_op_X21 [13], in_mask_op_X21 [14], in_mask_op_X21 [15], in_mask_op_X21 [16], in_mask_op_X21 [17], in_mask_op_X21 [18], in_mask_op_X21 [19], in_mask_op_X21 [20], in_mask_op_X21 [21], in_mask_op_X21 [22], in_mask_op_X21 [23], in_mask_op_X21 [24], in_mask_op_X21 [25], in_mask_op_X21 [26], in_mask_op_X21 [27], in_mask_op_X21 [28], in_mask_op_X21 [29], in_mask_op_X21 [30], in_mask_op_X21 [31], in_mask_op_X21 [32], in_mask_op_X21 [33], in_mask_op_X21 [34], in_mask_op_X21 [35], in_mask_op_X21 [36], in_mask_op_X21 [37], in_mask_op_X21 [38], in_mask_op_X21 [47:40] } = 0;
  assign { in_mask_op_C21 [0], in_mask_op_C21 [1], in_mask_op_C21 [2], in_mask_op_C21 [3], in_mask_op_C21 [4], in_mask_op_C21 [5], in_mask_op_C21 [6], in_mask_op_C21 [7], in_mask_op_C21 [8], in_mask_op_C21 [9], in_mask_op_C21 [10], in_mask_op_C21 [11], in_mask_op_C21 [12], in_mask_op_C21 [13], in_mask_op_C21 [14], in_mask_op_C21 [15], in_mask_op_C21 [16], in_mask_op_C21 [17], in_mask_op_C21 [18], in_mask_op_C21 [19], in_mask_op_C21 [20], in_mask_op_C21 [21], in_mask_op_C21 [22], in_mask_op_C21 [23], in_mask_op_C21 [24], in_mask_op_C21 [25], in_mask_op_C21 [26], in_mask_op_C21 [27], in_mask_op_C21 [28], in_mask_op_C21 [29], in_mask_op_C21 [30], in_mask_op_C21 [31], in_mask_op_C21 [32], in_mask_op_C21 [33], in_mask_op_C21 [34], in_mask_op_C21 [35], in_mask_op_C21 [36], in_mask_op_C21 [37], in_mask_op_C21 [38], in_mask_op_C21 [47:40] } = 0;
  logic [47:0] in_mask_op_R22 ;
  logic [47:0] in_mask_op_X22 ;
  logic [47:0] in_mask_op_C22 ;
  assign in_mask_op_R22 [39:39] = fangyuan28_R [20:20] ;
  assign in_mask_op_X22 [39:39] = fangyuan28_X [20:20] ;
  assign in_mask_op_C22 [39:39] = fangyuan28_C [20:20] ;
  assign { in_mask_op_R22 [0], in_mask_op_R22 [1], in_mask_op_R22 [2], in_mask_op_R22 [3], in_mask_op_R22 [4], in_mask_op_R22 [5], in_mask_op_R22 [6], in_mask_op_R22 [7], in_mask_op_R22 [8], in_mask_op_R22 [9], in_mask_op_R22 [10], in_mask_op_R22 [11], in_mask_op_R22 [12], in_mask_op_R22 [13], in_mask_op_R22 [14], in_mask_op_R22 [15], in_mask_op_R22 [16], in_mask_op_R22 [17], in_mask_op_R22 [18], in_mask_op_R22 [19], in_mask_op_R22 [20], in_mask_op_R22 [21], in_mask_op_R22 [22], in_mask_op_R22 [23], in_mask_op_R22 [24], in_mask_op_R22 [25], in_mask_op_R22 [26], in_mask_op_R22 [27], in_mask_op_R22 [28], in_mask_op_R22 [29], in_mask_op_R22 [30], in_mask_op_R22 [31], in_mask_op_R22 [32], in_mask_op_R22 [33], in_mask_op_R22 [34], in_mask_op_R22 [35], in_mask_op_R22 [36], in_mask_op_R22 [37], in_mask_op_R22 [38], in_mask_op_R22 [47:40] } = 0;
  assign { in_mask_op_X22 [0], in_mask_op_X22 [1], in_mask_op_X22 [2], in_mask_op_X22 [3], in_mask_op_X22 [4], in_mask_op_X22 [5], in_mask_op_X22 [6], in_mask_op_X22 [7], in_mask_op_X22 [8], in_mask_op_X22 [9], in_mask_op_X22 [10], in_mask_op_X22 [11], in_mask_op_X22 [12], in_mask_op_X22 [13], in_mask_op_X22 [14], in_mask_op_X22 [15], in_mask_op_X22 [16], in_mask_op_X22 [17], in_mask_op_X22 [18], in_mask_op_X22 [19], in_mask_op_X22 [20], in_mask_op_X22 [21], in_mask_op_X22 [22], in_mask_op_X22 [23], in_mask_op_X22 [24], in_mask_op_X22 [25], in_mask_op_X22 [26], in_mask_op_X22 [27], in_mask_op_X22 [28], in_mask_op_X22 [29], in_mask_op_X22 [30], in_mask_op_X22 [31], in_mask_op_X22 [32], in_mask_op_X22 [33], in_mask_op_X22 [34], in_mask_op_X22 [35], in_mask_op_X22 [36], in_mask_op_X22 [37], in_mask_op_X22 [38], in_mask_op_X22 [47:40] } = 0;
  assign { in_mask_op_C22 [0], in_mask_op_C22 [1], in_mask_op_C22 [2], in_mask_op_C22 [3], in_mask_op_C22 [4], in_mask_op_C22 [5], in_mask_op_C22 [6], in_mask_op_C22 [7], in_mask_op_C22 [8], in_mask_op_C22 [9], in_mask_op_C22 [10], in_mask_op_C22 [11], in_mask_op_C22 [12], in_mask_op_C22 [13], in_mask_op_C22 [14], in_mask_op_C22 [15], in_mask_op_C22 [16], in_mask_op_C22 [17], in_mask_op_C22 [18], in_mask_op_C22 [19], in_mask_op_C22 [20], in_mask_op_C22 [21], in_mask_op_C22 [22], in_mask_op_C22 [23], in_mask_op_C22 [24], in_mask_op_C22 [25], in_mask_op_C22 [26], in_mask_op_C22 [27], in_mask_op_C22 [28], in_mask_op_C22 [29], in_mask_op_C22 [30], in_mask_op_C22 [31], in_mask_op_C22 [32], in_mask_op_C22 [33], in_mask_op_C22 [34], in_mask_op_C22 [35], in_mask_op_C22 [36], in_mask_op_C22 [37], in_mask_op_C22 [38], in_mask_op_C22 [47:40] } = 0;
  logic [47:0] in_mask_op_R23 ;
  logic [47:0] in_mask_op_X23 ;
  logic [47:0] in_mask_op_C23 ;
  assign in_mask_op_R23 [39:39] = fangyuan28_R [19:19] ;
  assign in_mask_op_X23 [39:39] = fangyuan28_X [19:19] ;
  assign in_mask_op_C23 [39:39] = fangyuan28_C [19:19] ;
  assign { in_mask_op_R23 [0], in_mask_op_R23 [1], in_mask_op_R23 [2], in_mask_op_R23 [3], in_mask_op_R23 [4], in_mask_op_R23 [5], in_mask_op_R23 [6], in_mask_op_R23 [7], in_mask_op_R23 [8], in_mask_op_R23 [9], in_mask_op_R23 [10], in_mask_op_R23 [11], in_mask_op_R23 [12], in_mask_op_R23 [13], in_mask_op_R23 [14], in_mask_op_R23 [15], in_mask_op_R23 [16], in_mask_op_R23 [17], in_mask_op_R23 [18], in_mask_op_R23 [19], in_mask_op_R23 [20], in_mask_op_R23 [21], in_mask_op_R23 [22], in_mask_op_R23 [23], in_mask_op_R23 [24], in_mask_op_R23 [25], in_mask_op_R23 [26], in_mask_op_R23 [27], in_mask_op_R23 [28], in_mask_op_R23 [29], in_mask_op_R23 [30], in_mask_op_R23 [31], in_mask_op_R23 [32], in_mask_op_R23 [33], in_mask_op_R23 [34], in_mask_op_R23 [35], in_mask_op_R23 [36], in_mask_op_R23 [37], in_mask_op_R23 [38], in_mask_op_R23 [47:40] } = 0;
  assign { in_mask_op_X23 [0], in_mask_op_X23 [1], in_mask_op_X23 [2], in_mask_op_X23 [3], in_mask_op_X23 [4], in_mask_op_X23 [5], in_mask_op_X23 [6], in_mask_op_X23 [7], in_mask_op_X23 [8], in_mask_op_X23 [9], in_mask_op_X23 [10], in_mask_op_X23 [11], in_mask_op_X23 [12], in_mask_op_X23 [13], in_mask_op_X23 [14], in_mask_op_X23 [15], in_mask_op_X23 [16], in_mask_op_X23 [17], in_mask_op_X23 [18], in_mask_op_X23 [19], in_mask_op_X23 [20], in_mask_op_X23 [21], in_mask_op_X23 [22], in_mask_op_X23 [23], in_mask_op_X23 [24], in_mask_op_X23 [25], in_mask_op_X23 [26], in_mask_op_X23 [27], in_mask_op_X23 [28], in_mask_op_X23 [29], in_mask_op_X23 [30], in_mask_op_X23 [31], in_mask_op_X23 [32], in_mask_op_X23 [33], in_mask_op_X23 [34], in_mask_op_X23 [35], in_mask_op_X23 [36], in_mask_op_X23 [37], in_mask_op_X23 [38], in_mask_op_X23 [47:40] } = 0;
  assign { in_mask_op_C23 [0], in_mask_op_C23 [1], in_mask_op_C23 [2], in_mask_op_C23 [3], in_mask_op_C23 [4], in_mask_op_C23 [5], in_mask_op_C23 [6], in_mask_op_C23 [7], in_mask_op_C23 [8], in_mask_op_C23 [9], in_mask_op_C23 [10], in_mask_op_C23 [11], in_mask_op_C23 [12], in_mask_op_C23 [13], in_mask_op_C23 [14], in_mask_op_C23 [15], in_mask_op_C23 [16], in_mask_op_C23 [17], in_mask_op_C23 [18], in_mask_op_C23 [19], in_mask_op_C23 [20], in_mask_op_C23 [21], in_mask_op_C23 [22], in_mask_op_C23 [23], in_mask_op_C23 [24], in_mask_op_C23 [25], in_mask_op_C23 [26], in_mask_op_C23 [27], in_mask_op_C23 [28], in_mask_op_C23 [29], in_mask_op_C23 [30], in_mask_op_C23 [31], in_mask_op_C23 [32], in_mask_op_C23 [33], in_mask_op_C23 [34], in_mask_op_C23 [35], in_mask_op_C23 [36], in_mask_op_C23 [37], in_mask_op_C23 [38], in_mask_op_C23 [47:40] } = 0;
  logic [47:0] in_mask_op_R24 ;
  logic [47:0] in_mask_op_X24 ;
  logic [47:0] in_mask_op_C24 ;
  assign in_mask_op_R24 [39:39] = fangyuan28_R [18:18] ;
  assign in_mask_op_X24 [39:39] = fangyuan28_X [18:18] ;
  assign in_mask_op_C24 [39:39] = fangyuan28_C [18:18] ;
  assign { in_mask_op_R24 [0], in_mask_op_R24 [1], in_mask_op_R24 [2], in_mask_op_R24 [3], in_mask_op_R24 [4], in_mask_op_R24 [5], in_mask_op_R24 [6], in_mask_op_R24 [7], in_mask_op_R24 [8], in_mask_op_R24 [9], in_mask_op_R24 [10], in_mask_op_R24 [11], in_mask_op_R24 [12], in_mask_op_R24 [13], in_mask_op_R24 [14], in_mask_op_R24 [15], in_mask_op_R24 [16], in_mask_op_R24 [17], in_mask_op_R24 [18], in_mask_op_R24 [19], in_mask_op_R24 [20], in_mask_op_R24 [21], in_mask_op_R24 [22], in_mask_op_R24 [23], in_mask_op_R24 [24], in_mask_op_R24 [25], in_mask_op_R24 [26], in_mask_op_R24 [27], in_mask_op_R24 [28], in_mask_op_R24 [29], in_mask_op_R24 [30], in_mask_op_R24 [31], in_mask_op_R24 [32], in_mask_op_R24 [33], in_mask_op_R24 [34], in_mask_op_R24 [35], in_mask_op_R24 [36], in_mask_op_R24 [37], in_mask_op_R24 [38], in_mask_op_R24 [47:40] } = 0;
  assign { in_mask_op_X24 [0], in_mask_op_X24 [1], in_mask_op_X24 [2], in_mask_op_X24 [3], in_mask_op_X24 [4], in_mask_op_X24 [5], in_mask_op_X24 [6], in_mask_op_X24 [7], in_mask_op_X24 [8], in_mask_op_X24 [9], in_mask_op_X24 [10], in_mask_op_X24 [11], in_mask_op_X24 [12], in_mask_op_X24 [13], in_mask_op_X24 [14], in_mask_op_X24 [15], in_mask_op_X24 [16], in_mask_op_X24 [17], in_mask_op_X24 [18], in_mask_op_X24 [19], in_mask_op_X24 [20], in_mask_op_X24 [21], in_mask_op_X24 [22], in_mask_op_X24 [23], in_mask_op_X24 [24], in_mask_op_X24 [25], in_mask_op_X24 [26], in_mask_op_X24 [27], in_mask_op_X24 [28], in_mask_op_X24 [29], in_mask_op_X24 [30], in_mask_op_X24 [31], in_mask_op_X24 [32], in_mask_op_X24 [33], in_mask_op_X24 [34], in_mask_op_X24 [35], in_mask_op_X24 [36], in_mask_op_X24 [37], in_mask_op_X24 [38], in_mask_op_X24 [47:40] } = 0;
  assign { in_mask_op_C24 [0], in_mask_op_C24 [1], in_mask_op_C24 [2], in_mask_op_C24 [3], in_mask_op_C24 [4], in_mask_op_C24 [5], in_mask_op_C24 [6], in_mask_op_C24 [7], in_mask_op_C24 [8], in_mask_op_C24 [9], in_mask_op_C24 [10], in_mask_op_C24 [11], in_mask_op_C24 [12], in_mask_op_C24 [13], in_mask_op_C24 [14], in_mask_op_C24 [15], in_mask_op_C24 [16], in_mask_op_C24 [17], in_mask_op_C24 [18], in_mask_op_C24 [19], in_mask_op_C24 [20], in_mask_op_C24 [21], in_mask_op_C24 [22], in_mask_op_C24 [23], in_mask_op_C24 [24], in_mask_op_C24 [25], in_mask_op_C24 [26], in_mask_op_C24 [27], in_mask_op_C24 [28], in_mask_op_C24 [29], in_mask_op_C24 [30], in_mask_op_C24 [31], in_mask_op_C24 [32], in_mask_op_C24 [33], in_mask_op_C24 [34], in_mask_op_C24 [35], in_mask_op_C24 [36], in_mask_op_C24 [37], in_mask_op_C24 [38], in_mask_op_C24 [47:40] } = 0;
  logic [47:0] in_mask_op_R25 ;
  logic [47:0] in_mask_op_X25 ;
  logic [47:0] in_mask_op_C25 ;
  assign in_mask_op_R25 [39:39] = fangyuan28_R [17:17] ;
  assign in_mask_op_X25 [39:39] = fangyuan28_X [17:17] ;
  assign in_mask_op_C25 [39:39] = fangyuan28_C [17:17] ;
  assign { in_mask_op_R25 [0], in_mask_op_R25 [1], in_mask_op_R25 [2], in_mask_op_R25 [3], in_mask_op_R25 [4], in_mask_op_R25 [5], in_mask_op_R25 [6], in_mask_op_R25 [7], in_mask_op_R25 [8], in_mask_op_R25 [9], in_mask_op_R25 [10], in_mask_op_R25 [11], in_mask_op_R25 [12], in_mask_op_R25 [13], in_mask_op_R25 [14], in_mask_op_R25 [15], in_mask_op_R25 [16], in_mask_op_R25 [17], in_mask_op_R25 [18], in_mask_op_R25 [19], in_mask_op_R25 [20], in_mask_op_R25 [21], in_mask_op_R25 [22], in_mask_op_R25 [23], in_mask_op_R25 [24], in_mask_op_R25 [25], in_mask_op_R25 [26], in_mask_op_R25 [27], in_mask_op_R25 [28], in_mask_op_R25 [29], in_mask_op_R25 [30], in_mask_op_R25 [31], in_mask_op_R25 [32], in_mask_op_R25 [33], in_mask_op_R25 [34], in_mask_op_R25 [35], in_mask_op_R25 [36], in_mask_op_R25 [37], in_mask_op_R25 [38], in_mask_op_R25 [47:40] } = 0;
  assign { in_mask_op_X25 [0], in_mask_op_X25 [1], in_mask_op_X25 [2], in_mask_op_X25 [3], in_mask_op_X25 [4], in_mask_op_X25 [5], in_mask_op_X25 [6], in_mask_op_X25 [7], in_mask_op_X25 [8], in_mask_op_X25 [9], in_mask_op_X25 [10], in_mask_op_X25 [11], in_mask_op_X25 [12], in_mask_op_X25 [13], in_mask_op_X25 [14], in_mask_op_X25 [15], in_mask_op_X25 [16], in_mask_op_X25 [17], in_mask_op_X25 [18], in_mask_op_X25 [19], in_mask_op_X25 [20], in_mask_op_X25 [21], in_mask_op_X25 [22], in_mask_op_X25 [23], in_mask_op_X25 [24], in_mask_op_X25 [25], in_mask_op_X25 [26], in_mask_op_X25 [27], in_mask_op_X25 [28], in_mask_op_X25 [29], in_mask_op_X25 [30], in_mask_op_X25 [31], in_mask_op_X25 [32], in_mask_op_X25 [33], in_mask_op_X25 [34], in_mask_op_X25 [35], in_mask_op_X25 [36], in_mask_op_X25 [37], in_mask_op_X25 [38], in_mask_op_X25 [47:40] } = 0;
  assign { in_mask_op_C25 [0], in_mask_op_C25 [1], in_mask_op_C25 [2], in_mask_op_C25 [3], in_mask_op_C25 [4], in_mask_op_C25 [5], in_mask_op_C25 [6], in_mask_op_C25 [7], in_mask_op_C25 [8], in_mask_op_C25 [9], in_mask_op_C25 [10], in_mask_op_C25 [11], in_mask_op_C25 [12], in_mask_op_C25 [13], in_mask_op_C25 [14], in_mask_op_C25 [15], in_mask_op_C25 [16], in_mask_op_C25 [17], in_mask_op_C25 [18], in_mask_op_C25 [19], in_mask_op_C25 [20], in_mask_op_C25 [21], in_mask_op_C25 [22], in_mask_op_C25 [23], in_mask_op_C25 [24], in_mask_op_C25 [25], in_mask_op_C25 [26], in_mask_op_C25 [27], in_mask_op_C25 [28], in_mask_op_C25 [29], in_mask_op_C25 [30], in_mask_op_C25 [31], in_mask_op_C25 [32], in_mask_op_C25 [33], in_mask_op_C25 [34], in_mask_op_C25 [35], in_mask_op_C25 [36], in_mask_op_C25 [37], in_mask_op_C25 [38], in_mask_op_C25 [47:40] } = 0;
  logic [47:0] in_mask_op_R26 ;
  logic [47:0] in_mask_op_X26 ;
  logic [47:0] in_mask_op_C26 ;
  assign in_mask_op_R26 [39:39] = fangyuan28_R [16:16] ;
  assign in_mask_op_X26 [39:39] = fangyuan28_X [16:16] ;
  assign in_mask_op_C26 [39:39] = fangyuan28_C [16:16] ;
  assign { in_mask_op_R26 [0], in_mask_op_R26 [1], in_mask_op_R26 [2], in_mask_op_R26 [3], in_mask_op_R26 [4], in_mask_op_R26 [5], in_mask_op_R26 [6], in_mask_op_R26 [7], in_mask_op_R26 [8], in_mask_op_R26 [9], in_mask_op_R26 [10], in_mask_op_R26 [11], in_mask_op_R26 [12], in_mask_op_R26 [13], in_mask_op_R26 [14], in_mask_op_R26 [15], in_mask_op_R26 [16], in_mask_op_R26 [17], in_mask_op_R26 [18], in_mask_op_R26 [19], in_mask_op_R26 [20], in_mask_op_R26 [21], in_mask_op_R26 [22], in_mask_op_R26 [23], in_mask_op_R26 [24], in_mask_op_R26 [25], in_mask_op_R26 [26], in_mask_op_R26 [27], in_mask_op_R26 [28], in_mask_op_R26 [29], in_mask_op_R26 [30], in_mask_op_R26 [31], in_mask_op_R26 [32], in_mask_op_R26 [33], in_mask_op_R26 [34], in_mask_op_R26 [35], in_mask_op_R26 [36], in_mask_op_R26 [37], in_mask_op_R26 [38], in_mask_op_R26 [47:40] } = 0;
  assign { in_mask_op_X26 [0], in_mask_op_X26 [1], in_mask_op_X26 [2], in_mask_op_X26 [3], in_mask_op_X26 [4], in_mask_op_X26 [5], in_mask_op_X26 [6], in_mask_op_X26 [7], in_mask_op_X26 [8], in_mask_op_X26 [9], in_mask_op_X26 [10], in_mask_op_X26 [11], in_mask_op_X26 [12], in_mask_op_X26 [13], in_mask_op_X26 [14], in_mask_op_X26 [15], in_mask_op_X26 [16], in_mask_op_X26 [17], in_mask_op_X26 [18], in_mask_op_X26 [19], in_mask_op_X26 [20], in_mask_op_X26 [21], in_mask_op_X26 [22], in_mask_op_X26 [23], in_mask_op_X26 [24], in_mask_op_X26 [25], in_mask_op_X26 [26], in_mask_op_X26 [27], in_mask_op_X26 [28], in_mask_op_X26 [29], in_mask_op_X26 [30], in_mask_op_X26 [31], in_mask_op_X26 [32], in_mask_op_X26 [33], in_mask_op_X26 [34], in_mask_op_X26 [35], in_mask_op_X26 [36], in_mask_op_X26 [37], in_mask_op_X26 [38], in_mask_op_X26 [47:40] } = 0;
  assign { in_mask_op_C26 [0], in_mask_op_C26 [1], in_mask_op_C26 [2], in_mask_op_C26 [3], in_mask_op_C26 [4], in_mask_op_C26 [5], in_mask_op_C26 [6], in_mask_op_C26 [7], in_mask_op_C26 [8], in_mask_op_C26 [9], in_mask_op_C26 [10], in_mask_op_C26 [11], in_mask_op_C26 [12], in_mask_op_C26 [13], in_mask_op_C26 [14], in_mask_op_C26 [15], in_mask_op_C26 [16], in_mask_op_C26 [17], in_mask_op_C26 [18], in_mask_op_C26 [19], in_mask_op_C26 [20], in_mask_op_C26 [21], in_mask_op_C26 [22], in_mask_op_C26 [23], in_mask_op_C26 [24], in_mask_op_C26 [25], in_mask_op_C26 [26], in_mask_op_C26 [27], in_mask_op_C26 [28], in_mask_op_C26 [29], in_mask_op_C26 [30], in_mask_op_C26 [31], in_mask_op_C26 [32], in_mask_op_C26 [33], in_mask_op_C26 [34], in_mask_op_C26 [35], in_mask_op_C26 [36], in_mask_op_C26 [37], in_mask_op_C26 [38], in_mask_op_C26 [47:40] } = 0;
  logic [47:0] in_mask_op_R27 ;
  logic [47:0] in_mask_op_X27 ;
  logic [47:0] in_mask_op_C27 ;
  assign in_mask_op_R27 [39:39] = fangyuan28_R [15:15] ;
  assign in_mask_op_X27 [39:39] = fangyuan28_X [15:15] ;
  assign in_mask_op_C27 [39:39] = fangyuan28_C [15:15] ;
  assign { in_mask_op_R27 [0], in_mask_op_R27 [1], in_mask_op_R27 [2], in_mask_op_R27 [3], in_mask_op_R27 [4], in_mask_op_R27 [5], in_mask_op_R27 [6], in_mask_op_R27 [7], in_mask_op_R27 [8], in_mask_op_R27 [9], in_mask_op_R27 [10], in_mask_op_R27 [11], in_mask_op_R27 [12], in_mask_op_R27 [13], in_mask_op_R27 [14], in_mask_op_R27 [15], in_mask_op_R27 [16], in_mask_op_R27 [17], in_mask_op_R27 [18], in_mask_op_R27 [19], in_mask_op_R27 [20], in_mask_op_R27 [21], in_mask_op_R27 [22], in_mask_op_R27 [23], in_mask_op_R27 [24], in_mask_op_R27 [25], in_mask_op_R27 [26], in_mask_op_R27 [27], in_mask_op_R27 [28], in_mask_op_R27 [29], in_mask_op_R27 [30], in_mask_op_R27 [31], in_mask_op_R27 [32], in_mask_op_R27 [33], in_mask_op_R27 [34], in_mask_op_R27 [35], in_mask_op_R27 [36], in_mask_op_R27 [37], in_mask_op_R27 [38], in_mask_op_R27 [47:40] } = 0;
  assign { in_mask_op_X27 [0], in_mask_op_X27 [1], in_mask_op_X27 [2], in_mask_op_X27 [3], in_mask_op_X27 [4], in_mask_op_X27 [5], in_mask_op_X27 [6], in_mask_op_X27 [7], in_mask_op_X27 [8], in_mask_op_X27 [9], in_mask_op_X27 [10], in_mask_op_X27 [11], in_mask_op_X27 [12], in_mask_op_X27 [13], in_mask_op_X27 [14], in_mask_op_X27 [15], in_mask_op_X27 [16], in_mask_op_X27 [17], in_mask_op_X27 [18], in_mask_op_X27 [19], in_mask_op_X27 [20], in_mask_op_X27 [21], in_mask_op_X27 [22], in_mask_op_X27 [23], in_mask_op_X27 [24], in_mask_op_X27 [25], in_mask_op_X27 [26], in_mask_op_X27 [27], in_mask_op_X27 [28], in_mask_op_X27 [29], in_mask_op_X27 [30], in_mask_op_X27 [31], in_mask_op_X27 [32], in_mask_op_X27 [33], in_mask_op_X27 [34], in_mask_op_X27 [35], in_mask_op_X27 [36], in_mask_op_X27 [37], in_mask_op_X27 [38], in_mask_op_X27 [47:40] } = 0;
  assign { in_mask_op_C27 [0], in_mask_op_C27 [1], in_mask_op_C27 [2], in_mask_op_C27 [3], in_mask_op_C27 [4], in_mask_op_C27 [5], in_mask_op_C27 [6], in_mask_op_C27 [7], in_mask_op_C27 [8], in_mask_op_C27 [9], in_mask_op_C27 [10], in_mask_op_C27 [11], in_mask_op_C27 [12], in_mask_op_C27 [13], in_mask_op_C27 [14], in_mask_op_C27 [15], in_mask_op_C27 [16], in_mask_op_C27 [17], in_mask_op_C27 [18], in_mask_op_C27 [19], in_mask_op_C27 [20], in_mask_op_C27 [21], in_mask_op_C27 [22], in_mask_op_C27 [23], in_mask_op_C27 [24], in_mask_op_C27 [25], in_mask_op_C27 [26], in_mask_op_C27 [27], in_mask_op_C27 [28], in_mask_op_C27 [29], in_mask_op_C27 [30], in_mask_op_C27 [31], in_mask_op_C27 [32], in_mask_op_C27 [33], in_mask_op_C27 [34], in_mask_op_C27 [35], in_mask_op_C27 [36], in_mask_op_C27 [37], in_mask_op_C27 [38], in_mask_op_C27 [47:40] } = 0;
  logic [47:0] in_mask_op_R28 ;
  logic [47:0] in_mask_op_X28 ;
  logic [47:0] in_mask_op_C28 ;
  assign in_mask_op_R28 [39:39] = fangyuan28_R [14:14] ;
  assign in_mask_op_X28 [39:39] = fangyuan28_X [14:14] ;
  assign in_mask_op_C28 [39:39] = fangyuan28_C [14:14] ;
  assign { in_mask_op_R28 [0], in_mask_op_R28 [1], in_mask_op_R28 [2], in_mask_op_R28 [3], in_mask_op_R28 [4], in_mask_op_R28 [5], in_mask_op_R28 [6], in_mask_op_R28 [7], in_mask_op_R28 [8], in_mask_op_R28 [9], in_mask_op_R28 [10], in_mask_op_R28 [11], in_mask_op_R28 [12], in_mask_op_R28 [13], in_mask_op_R28 [14], in_mask_op_R28 [15], in_mask_op_R28 [16], in_mask_op_R28 [17], in_mask_op_R28 [18], in_mask_op_R28 [19], in_mask_op_R28 [20], in_mask_op_R28 [21], in_mask_op_R28 [22], in_mask_op_R28 [23], in_mask_op_R28 [24], in_mask_op_R28 [25], in_mask_op_R28 [26], in_mask_op_R28 [27], in_mask_op_R28 [28], in_mask_op_R28 [29], in_mask_op_R28 [30], in_mask_op_R28 [31], in_mask_op_R28 [32], in_mask_op_R28 [33], in_mask_op_R28 [34], in_mask_op_R28 [35], in_mask_op_R28 [36], in_mask_op_R28 [37], in_mask_op_R28 [38], in_mask_op_R28 [47:40] } = 0;
  assign { in_mask_op_X28 [0], in_mask_op_X28 [1], in_mask_op_X28 [2], in_mask_op_X28 [3], in_mask_op_X28 [4], in_mask_op_X28 [5], in_mask_op_X28 [6], in_mask_op_X28 [7], in_mask_op_X28 [8], in_mask_op_X28 [9], in_mask_op_X28 [10], in_mask_op_X28 [11], in_mask_op_X28 [12], in_mask_op_X28 [13], in_mask_op_X28 [14], in_mask_op_X28 [15], in_mask_op_X28 [16], in_mask_op_X28 [17], in_mask_op_X28 [18], in_mask_op_X28 [19], in_mask_op_X28 [20], in_mask_op_X28 [21], in_mask_op_X28 [22], in_mask_op_X28 [23], in_mask_op_X28 [24], in_mask_op_X28 [25], in_mask_op_X28 [26], in_mask_op_X28 [27], in_mask_op_X28 [28], in_mask_op_X28 [29], in_mask_op_X28 [30], in_mask_op_X28 [31], in_mask_op_X28 [32], in_mask_op_X28 [33], in_mask_op_X28 [34], in_mask_op_X28 [35], in_mask_op_X28 [36], in_mask_op_X28 [37], in_mask_op_X28 [38], in_mask_op_X28 [47:40] } = 0;
  assign { in_mask_op_C28 [0], in_mask_op_C28 [1], in_mask_op_C28 [2], in_mask_op_C28 [3], in_mask_op_C28 [4], in_mask_op_C28 [5], in_mask_op_C28 [6], in_mask_op_C28 [7], in_mask_op_C28 [8], in_mask_op_C28 [9], in_mask_op_C28 [10], in_mask_op_C28 [11], in_mask_op_C28 [12], in_mask_op_C28 [13], in_mask_op_C28 [14], in_mask_op_C28 [15], in_mask_op_C28 [16], in_mask_op_C28 [17], in_mask_op_C28 [18], in_mask_op_C28 [19], in_mask_op_C28 [20], in_mask_op_C28 [21], in_mask_op_C28 [22], in_mask_op_C28 [23], in_mask_op_C28 [24], in_mask_op_C28 [25], in_mask_op_C28 [26], in_mask_op_C28 [27], in_mask_op_C28 [28], in_mask_op_C28 [29], in_mask_op_C28 [30], in_mask_op_C28 [31], in_mask_op_C28 [32], in_mask_op_C28 [33], in_mask_op_C28 [34], in_mask_op_C28 [35], in_mask_op_C28 [36], in_mask_op_C28 [37], in_mask_op_C28 [38], in_mask_op_C28 [47:40] } = 0;
  logic [47:0] in_mask_op_R29 ;
  logic [47:0] in_mask_op_X29 ;
  logic [47:0] in_mask_op_C29 ;
  assign in_mask_op_R29 [39:39] = fangyuan28_R [13:13] ;
  assign in_mask_op_X29 [39:39] = fangyuan28_X [13:13] ;
  assign in_mask_op_C29 [39:39] = fangyuan28_C [13:13] ;
  assign { in_mask_op_R29 [0], in_mask_op_R29 [1], in_mask_op_R29 [2], in_mask_op_R29 [3], in_mask_op_R29 [4], in_mask_op_R29 [5], in_mask_op_R29 [6], in_mask_op_R29 [7], in_mask_op_R29 [8], in_mask_op_R29 [9], in_mask_op_R29 [10], in_mask_op_R29 [11], in_mask_op_R29 [12], in_mask_op_R29 [13], in_mask_op_R29 [14], in_mask_op_R29 [15], in_mask_op_R29 [16], in_mask_op_R29 [17], in_mask_op_R29 [18], in_mask_op_R29 [19], in_mask_op_R29 [20], in_mask_op_R29 [21], in_mask_op_R29 [22], in_mask_op_R29 [23], in_mask_op_R29 [24], in_mask_op_R29 [25], in_mask_op_R29 [26], in_mask_op_R29 [27], in_mask_op_R29 [28], in_mask_op_R29 [29], in_mask_op_R29 [30], in_mask_op_R29 [31], in_mask_op_R29 [32], in_mask_op_R29 [33], in_mask_op_R29 [34], in_mask_op_R29 [35], in_mask_op_R29 [36], in_mask_op_R29 [37], in_mask_op_R29 [38], in_mask_op_R29 [47:40] } = 0;
  assign { in_mask_op_X29 [0], in_mask_op_X29 [1], in_mask_op_X29 [2], in_mask_op_X29 [3], in_mask_op_X29 [4], in_mask_op_X29 [5], in_mask_op_X29 [6], in_mask_op_X29 [7], in_mask_op_X29 [8], in_mask_op_X29 [9], in_mask_op_X29 [10], in_mask_op_X29 [11], in_mask_op_X29 [12], in_mask_op_X29 [13], in_mask_op_X29 [14], in_mask_op_X29 [15], in_mask_op_X29 [16], in_mask_op_X29 [17], in_mask_op_X29 [18], in_mask_op_X29 [19], in_mask_op_X29 [20], in_mask_op_X29 [21], in_mask_op_X29 [22], in_mask_op_X29 [23], in_mask_op_X29 [24], in_mask_op_X29 [25], in_mask_op_X29 [26], in_mask_op_X29 [27], in_mask_op_X29 [28], in_mask_op_X29 [29], in_mask_op_X29 [30], in_mask_op_X29 [31], in_mask_op_X29 [32], in_mask_op_X29 [33], in_mask_op_X29 [34], in_mask_op_X29 [35], in_mask_op_X29 [36], in_mask_op_X29 [37], in_mask_op_X29 [38], in_mask_op_X29 [47:40] } = 0;
  assign { in_mask_op_C29 [0], in_mask_op_C29 [1], in_mask_op_C29 [2], in_mask_op_C29 [3], in_mask_op_C29 [4], in_mask_op_C29 [5], in_mask_op_C29 [6], in_mask_op_C29 [7], in_mask_op_C29 [8], in_mask_op_C29 [9], in_mask_op_C29 [10], in_mask_op_C29 [11], in_mask_op_C29 [12], in_mask_op_C29 [13], in_mask_op_C29 [14], in_mask_op_C29 [15], in_mask_op_C29 [16], in_mask_op_C29 [17], in_mask_op_C29 [18], in_mask_op_C29 [19], in_mask_op_C29 [20], in_mask_op_C29 [21], in_mask_op_C29 [22], in_mask_op_C29 [23], in_mask_op_C29 [24], in_mask_op_C29 [25], in_mask_op_C29 [26], in_mask_op_C29 [27], in_mask_op_C29 [28], in_mask_op_C29 [29], in_mask_op_C29 [30], in_mask_op_C29 [31], in_mask_op_C29 [32], in_mask_op_C29 [33], in_mask_op_C29 [34], in_mask_op_C29 [35], in_mask_op_C29 [36], in_mask_op_C29 [37], in_mask_op_C29 [38], in_mask_op_C29 [47:40] } = 0;
  logic [47:0] in_mask_op_R30 ;
  logic [47:0] in_mask_op_X30 ;
  logic [47:0] in_mask_op_C30 ;
  assign in_mask_op_R30 [39:39] = fangyuan28_R [12:12] ;
  assign in_mask_op_X30 [39:39] = fangyuan28_X [12:12] ;
  assign in_mask_op_C30 [39:39] = fangyuan28_C [12:12] ;
  assign { in_mask_op_R30 [0], in_mask_op_R30 [1], in_mask_op_R30 [2], in_mask_op_R30 [3], in_mask_op_R30 [4], in_mask_op_R30 [5], in_mask_op_R30 [6], in_mask_op_R30 [7], in_mask_op_R30 [8], in_mask_op_R30 [9], in_mask_op_R30 [10], in_mask_op_R30 [11], in_mask_op_R30 [12], in_mask_op_R30 [13], in_mask_op_R30 [14], in_mask_op_R30 [15], in_mask_op_R30 [16], in_mask_op_R30 [17], in_mask_op_R30 [18], in_mask_op_R30 [19], in_mask_op_R30 [20], in_mask_op_R30 [21], in_mask_op_R30 [22], in_mask_op_R30 [23], in_mask_op_R30 [24], in_mask_op_R30 [25], in_mask_op_R30 [26], in_mask_op_R30 [27], in_mask_op_R30 [28], in_mask_op_R30 [29], in_mask_op_R30 [30], in_mask_op_R30 [31], in_mask_op_R30 [32], in_mask_op_R30 [33], in_mask_op_R30 [34], in_mask_op_R30 [35], in_mask_op_R30 [36], in_mask_op_R30 [37], in_mask_op_R30 [38], in_mask_op_R30 [47:40] } = 0;
  assign { in_mask_op_X30 [0], in_mask_op_X30 [1], in_mask_op_X30 [2], in_mask_op_X30 [3], in_mask_op_X30 [4], in_mask_op_X30 [5], in_mask_op_X30 [6], in_mask_op_X30 [7], in_mask_op_X30 [8], in_mask_op_X30 [9], in_mask_op_X30 [10], in_mask_op_X30 [11], in_mask_op_X30 [12], in_mask_op_X30 [13], in_mask_op_X30 [14], in_mask_op_X30 [15], in_mask_op_X30 [16], in_mask_op_X30 [17], in_mask_op_X30 [18], in_mask_op_X30 [19], in_mask_op_X30 [20], in_mask_op_X30 [21], in_mask_op_X30 [22], in_mask_op_X30 [23], in_mask_op_X30 [24], in_mask_op_X30 [25], in_mask_op_X30 [26], in_mask_op_X30 [27], in_mask_op_X30 [28], in_mask_op_X30 [29], in_mask_op_X30 [30], in_mask_op_X30 [31], in_mask_op_X30 [32], in_mask_op_X30 [33], in_mask_op_X30 [34], in_mask_op_X30 [35], in_mask_op_X30 [36], in_mask_op_X30 [37], in_mask_op_X30 [38], in_mask_op_X30 [47:40] } = 0;
  assign { in_mask_op_C30 [0], in_mask_op_C30 [1], in_mask_op_C30 [2], in_mask_op_C30 [3], in_mask_op_C30 [4], in_mask_op_C30 [5], in_mask_op_C30 [6], in_mask_op_C30 [7], in_mask_op_C30 [8], in_mask_op_C30 [9], in_mask_op_C30 [10], in_mask_op_C30 [11], in_mask_op_C30 [12], in_mask_op_C30 [13], in_mask_op_C30 [14], in_mask_op_C30 [15], in_mask_op_C30 [16], in_mask_op_C30 [17], in_mask_op_C30 [18], in_mask_op_C30 [19], in_mask_op_C30 [20], in_mask_op_C30 [21], in_mask_op_C30 [22], in_mask_op_C30 [23], in_mask_op_C30 [24], in_mask_op_C30 [25], in_mask_op_C30 [26], in_mask_op_C30 [27], in_mask_op_C30 [28], in_mask_op_C30 [29], in_mask_op_C30 [30], in_mask_op_C30 [31], in_mask_op_C30 [32], in_mask_op_C30 [33], in_mask_op_C30 [34], in_mask_op_C30 [35], in_mask_op_C30 [36], in_mask_op_C30 [37], in_mask_op_C30 [38], in_mask_op_C30 [47:40] } = 0;
  logic [47:0] in_mask_op_R31 ;
  logic [47:0] in_mask_op_X31 ;
  logic [47:0] in_mask_op_C31 ;
  assign in_mask_op_R31 [39:39] = fangyuan28_R [11:11] ;
  assign in_mask_op_X31 [39:39] = fangyuan28_X [11:11] ;
  assign in_mask_op_C31 [39:39] = fangyuan28_C [11:11] ;
  assign { in_mask_op_R31 [0], in_mask_op_R31 [1], in_mask_op_R31 [2], in_mask_op_R31 [3], in_mask_op_R31 [4], in_mask_op_R31 [5], in_mask_op_R31 [6], in_mask_op_R31 [7], in_mask_op_R31 [8], in_mask_op_R31 [9], in_mask_op_R31 [10], in_mask_op_R31 [11], in_mask_op_R31 [12], in_mask_op_R31 [13], in_mask_op_R31 [14], in_mask_op_R31 [15], in_mask_op_R31 [16], in_mask_op_R31 [17], in_mask_op_R31 [18], in_mask_op_R31 [19], in_mask_op_R31 [20], in_mask_op_R31 [21], in_mask_op_R31 [22], in_mask_op_R31 [23], in_mask_op_R31 [24], in_mask_op_R31 [25], in_mask_op_R31 [26], in_mask_op_R31 [27], in_mask_op_R31 [28], in_mask_op_R31 [29], in_mask_op_R31 [30], in_mask_op_R31 [31], in_mask_op_R31 [32], in_mask_op_R31 [33], in_mask_op_R31 [34], in_mask_op_R31 [35], in_mask_op_R31 [36], in_mask_op_R31 [37], in_mask_op_R31 [38], in_mask_op_R31 [47:40] } = 0;
  assign { in_mask_op_X31 [0], in_mask_op_X31 [1], in_mask_op_X31 [2], in_mask_op_X31 [3], in_mask_op_X31 [4], in_mask_op_X31 [5], in_mask_op_X31 [6], in_mask_op_X31 [7], in_mask_op_X31 [8], in_mask_op_X31 [9], in_mask_op_X31 [10], in_mask_op_X31 [11], in_mask_op_X31 [12], in_mask_op_X31 [13], in_mask_op_X31 [14], in_mask_op_X31 [15], in_mask_op_X31 [16], in_mask_op_X31 [17], in_mask_op_X31 [18], in_mask_op_X31 [19], in_mask_op_X31 [20], in_mask_op_X31 [21], in_mask_op_X31 [22], in_mask_op_X31 [23], in_mask_op_X31 [24], in_mask_op_X31 [25], in_mask_op_X31 [26], in_mask_op_X31 [27], in_mask_op_X31 [28], in_mask_op_X31 [29], in_mask_op_X31 [30], in_mask_op_X31 [31], in_mask_op_X31 [32], in_mask_op_X31 [33], in_mask_op_X31 [34], in_mask_op_X31 [35], in_mask_op_X31 [36], in_mask_op_X31 [37], in_mask_op_X31 [38], in_mask_op_X31 [47:40] } = 0;
  assign { in_mask_op_C31 [0], in_mask_op_C31 [1], in_mask_op_C31 [2], in_mask_op_C31 [3], in_mask_op_C31 [4], in_mask_op_C31 [5], in_mask_op_C31 [6], in_mask_op_C31 [7], in_mask_op_C31 [8], in_mask_op_C31 [9], in_mask_op_C31 [10], in_mask_op_C31 [11], in_mask_op_C31 [12], in_mask_op_C31 [13], in_mask_op_C31 [14], in_mask_op_C31 [15], in_mask_op_C31 [16], in_mask_op_C31 [17], in_mask_op_C31 [18], in_mask_op_C31 [19], in_mask_op_C31 [20], in_mask_op_C31 [21], in_mask_op_C31 [22], in_mask_op_C31 [23], in_mask_op_C31 [24], in_mask_op_C31 [25], in_mask_op_C31 [26], in_mask_op_C31 [27], in_mask_op_C31 [28], in_mask_op_C31 [29], in_mask_op_C31 [30], in_mask_op_C31 [31], in_mask_op_C31 [32], in_mask_op_C31 [33], in_mask_op_C31 [34], in_mask_op_C31 [35], in_mask_op_C31 [36], in_mask_op_C31 [37], in_mask_op_C31 [38], in_mask_op_C31 [47:40] } = 0;
  logic [47:0] in_mask_op_R32 ;
  logic [47:0] in_mask_op_X32 ;
  logic [47:0] in_mask_op_C32 ;
  assign in_mask_op_R32 [39:39] = fangyuan28_R [10:10] ;
  assign in_mask_op_X32 [39:39] = fangyuan28_X [10:10] ;
  assign in_mask_op_C32 [39:39] = fangyuan28_C [10:10] ;
  assign { in_mask_op_R32 [0], in_mask_op_R32 [1], in_mask_op_R32 [2], in_mask_op_R32 [3], in_mask_op_R32 [4], in_mask_op_R32 [5], in_mask_op_R32 [6], in_mask_op_R32 [7], in_mask_op_R32 [8], in_mask_op_R32 [9], in_mask_op_R32 [10], in_mask_op_R32 [11], in_mask_op_R32 [12], in_mask_op_R32 [13], in_mask_op_R32 [14], in_mask_op_R32 [15], in_mask_op_R32 [16], in_mask_op_R32 [17], in_mask_op_R32 [18], in_mask_op_R32 [19], in_mask_op_R32 [20], in_mask_op_R32 [21], in_mask_op_R32 [22], in_mask_op_R32 [23], in_mask_op_R32 [24], in_mask_op_R32 [25], in_mask_op_R32 [26], in_mask_op_R32 [27], in_mask_op_R32 [28], in_mask_op_R32 [29], in_mask_op_R32 [30], in_mask_op_R32 [31], in_mask_op_R32 [32], in_mask_op_R32 [33], in_mask_op_R32 [34], in_mask_op_R32 [35], in_mask_op_R32 [36], in_mask_op_R32 [37], in_mask_op_R32 [38], in_mask_op_R32 [47:40] } = 0;
  assign { in_mask_op_X32 [0], in_mask_op_X32 [1], in_mask_op_X32 [2], in_mask_op_X32 [3], in_mask_op_X32 [4], in_mask_op_X32 [5], in_mask_op_X32 [6], in_mask_op_X32 [7], in_mask_op_X32 [8], in_mask_op_X32 [9], in_mask_op_X32 [10], in_mask_op_X32 [11], in_mask_op_X32 [12], in_mask_op_X32 [13], in_mask_op_X32 [14], in_mask_op_X32 [15], in_mask_op_X32 [16], in_mask_op_X32 [17], in_mask_op_X32 [18], in_mask_op_X32 [19], in_mask_op_X32 [20], in_mask_op_X32 [21], in_mask_op_X32 [22], in_mask_op_X32 [23], in_mask_op_X32 [24], in_mask_op_X32 [25], in_mask_op_X32 [26], in_mask_op_X32 [27], in_mask_op_X32 [28], in_mask_op_X32 [29], in_mask_op_X32 [30], in_mask_op_X32 [31], in_mask_op_X32 [32], in_mask_op_X32 [33], in_mask_op_X32 [34], in_mask_op_X32 [35], in_mask_op_X32 [36], in_mask_op_X32 [37], in_mask_op_X32 [38], in_mask_op_X32 [47:40] } = 0;
  assign { in_mask_op_C32 [0], in_mask_op_C32 [1], in_mask_op_C32 [2], in_mask_op_C32 [3], in_mask_op_C32 [4], in_mask_op_C32 [5], in_mask_op_C32 [6], in_mask_op_C32 [7], in_mask_op_C32 [8], in_mask_op_C32 [9], in_mask_op_C32 [10], in_mask_op_C32 [11], in_mask_op_C32 [12], in_mask_op_C32 [13], in_mask_op_C32 [14], in_mask_op_C32 [15], in_mask_op_C32 [16], in_mask_op_C32 [17], in_mask_op_C32 [18], in_mask_op_C32 [19], in_mask_op_C32 [20], in_mask_op_C32 [21], in_mask_op_C32 [22], in_mask_op_C32 [23], in_mask_op_C32 [24], in_mask_op_C32 [25], in_mask_op_C32 [26], in_mask_op_C32 [27], in_mask_op_C32 [28], in_mask_op_C32 [29], in_mask_op_C32 [30], in_mask_op_C32 [31], in_mask_op_C32 [32], in_mask_op_C32 [33], in_mask_op_C32 [34], in_mask_op_C32 [35], in_mask_op_C32 [36], in_mask_op_C32 [37], in_mask_op_C32 [38], in_mask_op_C32 [47:40] } = 0;
  logic [47:0] in_mask_op_R33 ;
  logic [47:0] in_mask_op_X33 ;
  logic [47:0] in_mask_op_C33 ;
  assign in_mask_op_R33 [39:39] = fangyuan28_R [9:9] ;
  assign in_mask_op_X33 [39:39] = fangyuan28_X [9:9] ;
  assign in_mask_op_C33 [39:39] = fangyuan28_C [9:9] ;
  assign { in_mask_op_R33 [0], in_mask_op_R33 [1], in_mask_op_R33 [2], in_mask_op_R33 [3], in_mask_op_R33 [4], in_mask_op_R33 [5], in_mask_op_R33 [6], in_mask_op_R33 [7], in_mask_op_R33 [8], in_mask_op_R33 [9], in_mask_op_R33 [10], in_mask_op_R33 [11], in_mask_op_R33 [12], in_mask_op_R33 [13], in_mask_op_R33 [14], in_mask_op_R33 [15], in_mask_op_R33 [16], in_mask_op_R33 [17], in_mask_op_R33 [18], in_mask_op_R33 [19], in_mask_op_R33 [20], in_mask_op_R33 [21], in_mask_op_R33 [22], in_mask_op_R33 [23], in_mask_op_R33 [24], in_mask_op_R33 [25], in_mask_op_R33 [26], in_mask_op_R33 [27], in_mask_op_R33 [28], in_mask_op_R33 [29], in_mask_op_R33 [30], in_mask_op_R33 [31], in_mask_op_R33 [32], in_mask_op_R33 [33], in_mask_op_R33 [34], in_mask_op_R33 [35], in_mask_op_R33 [36], in_mask_op_R33 [37], in_mask_op_R33 [38], in_mask_op_R33 [47:40] } = 0;
  assign { in_mask_op_X33 [0], in_mask_op_X33 [1], in_mask_op_X33 [2], in_mask_op_X33 [3], in_mask_op_X33 [4], in_mask_op_X33 [5], in_mask_op_X33 [6], in_mask_op_X33 [7], in_mask_op_X33 [8], in_mask_op_X33 [9], in_mask_op_X33 [10], in_mask_op_X33 [11], in_mask_op_X33 [12], in_mask_op_X33 [13], in_mask_op_X33 [14], in_mask_op_X33 [15], in_mask_op_X33 [16], in_mask_op_X33 [17], in_mask_op_X33 [18], in_mask_op_X33 [19], in_mask_op_X33 [20], in_mask_op_X33 [21], in_mask_op_X33 [22], in_mask_op_X33 [23], in_mask_op_X33 [24], in_mask_op_X33 [25], in_mask_op_X33 [26], in_mask_op_X33 [27], in_mask_op_X33 [28], in_mask_op_X33 [29], in_mask_op_X33 [30], in_mask_op_X33 [31], in_mask_op_X33 [32], in_mask_op_X33 [33], in_mask_op_X33 [34], in_mask_op_X33 [35], in_mask_op_X33 [36], in_mask_op_X33 [37], in_mask_op_X33 [38], in_mask_op_X33 [47:40] } = 0;
  assign { in_mask_op_C33 [0], in_mask_op_C33 [1], in_mask_op_C33 [2], in_mask_op_C33 [3], in_mask_op_C33 [4], in_mask_op_C33 [5], in_mask_op_C33 [6], in_mask_op_C33 [7], in_mask_op_C33 [8], in_mask_op_C33 [9], in_mask_op_C33 [10], in_mask_op_C33 [11], in_mask_op_C33 [12], in_mask_op_C33 [13], in_mask_op_C33 [14], in_mask_op_C33 [15], in_mask_op_C33 [16], in_mask_op_C33 [17], in_mask_op_C33 [18], in_mask_op_C33 [19], in_mask_op_C33 [20], in_mask_op_C33 [21], in_mask_op_C33 [22], in_mask_op_C33 [23], in_mask_op_C33 [24], in_mask_op_C33 [25], in_mask_op_C33 [26], in_mask_op_C33 [27], in_mask_op_C33 [28], in_mask_op_C33 [29], in_mask_op_C33 [30], in_mask_op_C33 [31], in_mask_op_C33 [32], in_mask_op_C33 [33], in_mask_op_C33 [34], in_mask_op_C33 [35], in_mask_op_C33 [36], in_mask_op_C33 [37], in_mask_op_C33 [38], in_mask_op_C33 [47:40] } = 0;
  logic [47:0] in_mask_op_R34 ;
  logic [47:0] in_mask_op_X34 ;
  logic [47:0] in_mask_op_C34 ;
  assign in_mask_op_R34 [39:39] = fangyuan28_R [8:8] ;
  assign in_mask_op_X34 [39:39] = fangyuan28_X [8:8] ;
  assign in_mask_op_C34 [39:39] = fangyuan28_C [8:8] ;
  assign { in_mask_op_R34 [0], in_mask_op_R34 [1], in_mask_op_R34 [2], in_mask_op_R34 [3], in_mask_op_R34 [4], in_mask_op_R34 [5], in_mask_op_R34 [6], in_mask_op_R34 [7], in_mask_op_R34 [8], in_mask_op_R34 [9], in_mask_op_R34 [10], in_mask_op_R34 [11], in_mask_op_R34 [12], in_mask_op_R34 [13], in_mask_op_R34 [14], in_mask_op_R34 [15], in_mask_op_R34 [16], in_mask_op_R34 [17], in_mask_op_R34 [18], in_mask_op_R34 [19], in_mask_op_R34 [20], in_mask_op_R34 [21], in_mask_op_R34 [22], in_mask_op_R34 [23], in_mask_op_R34 [24], in_mask_op_R34 [25], in_mask_op_R34 [26], in_mask_op_R34 [27], in_mask_op_R34 [28], in_mask_op_R34 [29], in_mask_op_R34 [30], in_mask_op_R34 [31], in_mask_op_R34 [32], in_mask_op_R34 [33], in_mask_op_R34 [34], in_mask_op_R34 [35], in_mask_op_R34 [36], in_mask_op_R34 [37], in_mask_op_R34 [38], in_mask_op_R34 [47:40] } = 0;
  assign { in_mask_op_X34 [0], in_mask_op_X34 [1], in_mask_op_X34 [2], in_mask_op_X34 [3], in_mask_op_X34 [4], in_mask_op_X34 [5], in_mask_op_X34 [6], in_mask_op_X34 [7], in_mask_op_X34 [8], in_mask_op_X34 [9], in_mask_op_X34 [10], in_mask_op_X34 [11], in_mask_op_X34 [12], in_mask_op_X34 [13], in_mask_op_X34 [14], in_mask_op_X34 [15], in_mask_op_X34 [16], in_mask_op_X34 [17], in_mask_op_X34 [18], in_mask_op_X34 [19], in_mask_op_X34 [20], in_mask_op_X34 [21], in_mask_op_X34 [22], in_mask_op_X34 [23], in_mask_op_X34 [24], in_mask_op_X34 [25], in_mask_op_X34 [26], in_mask_op_X34 [27], in_mask_op_X34 [28], in_mask_op_X34 [29], in_mask_op_X34 [30], in_mask_op_X34 [31], in_mask_op_X34 [32], in_mask_op_X34 [33], in_mask_op_X34 [34], in_mask_op_X34 [35], in_mask_op_X34 [36], in_mask_op_X34 [37], in_mask_op_X34 [38], in_mask_op_X34 [47:40] } = 0;
  assign { in_mask_op_C34 [0], in_mask_op_C34 [1], in_mask_op_C34 [2], in_mask_op_C34 [3], in_mask_op_C34 [4], in_mask_op_C34 [5], in_mask_op_C34 [6], in_mask_op_C34 [7], in_mask_op_C34 [8], in_mask_op_C34 [9], in_mask_op_C34 [10], in_mask_op_C34 [11], in_mask_op_C34 [12], in_mask_op_C34 [13], in_mask_op_C34 [14], in_mask_op_C34 [15], in_mask_op_C34 [16], in_mask_op_C34 [17], in_mask_op_C34 [18], in_mask_op_C34 [19], in_mask_op_C34 [20], in_mask_op_C34 [21], in_mask_op_C34 [22], in_mask_op_C34 [23], in_mask_op_C34 [24], in_mask_op_C34 [25], in_mask_op_C34 [26], in_mask_op_C34 [27], in_mask_op_C34 [28], in_mask_op_C34 [29], in_mask_op_C34 [30], in_mask_op_C34 [31], in_mask_op_C34 [32], in_mask_op_C34 [33], in_mask_op_C34 [34], in_mask_op_C34 [35], in_mask_op_C34 [36], in_mask_op_C34 [37], in_mask_op_C34 [38], in_mask_op_C34 [47:40] } = 0;
  logic [47:0] in_mask_op_R35 ;
  logic [47:0] in_mask_op_X35 ;
  logic [47:0] in_mask_op_C35 ;
  assign in_mask_op_R35 [39:39] = fangyuan28_R [7:7] ;
  assign in_mask_op_X35 [39:39] = fangyuan28_X [7:7] ;
  assign in_mask_op_C35 [39:39] = fangyuan28_C [7:7] ;
  assign { in_mask_op_R35 [0], in_mask_op_R35 [1], in_mask_op_R35 [2], in_mask_op_R35 [3], in_mask_op_R35 [4], in_mask_op_R35 [5], in_mask_op_R35 [6], in_mask_op_R35 [7], in_mask_op_R35 [8], in_mask_op_R35 [9], in_mask_op_R35 [10], in_mask_op_R35 [11], in_mask_op_R35 [12], in_mask_op_R35 [13], in_mask_op_R35 [14], in_mask_op_R35 [15], in_mask_op_R35 [16], in_mask_op_R35 [17], in_mask_op_R35 [18], in_mask_op_R35 [19], in_mask_op_R35 [20], in_mask_op_R35 [21], in_mask_op_R35 [22], in_mask_op_R35 [23], in_mask_op_R35 [24], in_mask_op_R35 [25], in_mask_op_R35 [26], in_mask_op_R35 [27], in_mask_op_R35 [28], in_mask_op_R35 [29], in_mask_op_R35 [30], in_mask_op_R35 [31], in_mask_op_R35 [32], in_mask_op_R35 [33], in_mask_op_R35 [34], in_mask_op_R35 [35], in_mask_op_R35 [36], in_mask_op_R35 [37], in_mask_op_R35 [38], in_mask_op_R35 [47:40] } = 0;
  assign { in_mask_op_X35 [0], in_mask_op_X35 [1], in_mask_op_X35 [2], in_mask_op_X35 [3], in_mask_op_X35 [4], in_mask_op_X35 [5], in_mask_op_X35 [6], in_mask_op_X35 [7], in_mask_op_X35 [8], in_mask_op_X35 [9], in_mask_op_X35 [10], in_mask_op_X35 [11], in_mask_op_X35 [12], in_mask_op_X35 [13], in_mask_op_X35 [14], in_mask_op_X35 [15], in_mask_op_X35 [16], in_mask_op_X35 [17], in_mask_op_X35 [18], in_mask_op_X35 [19], in_mask_op_X35 [20], in_mask_op_X35 [21], in_mask_op_X35 [22], in_mask_op_X35 [23], in_mask_op_X35 [24], in_mask_op_X35 [25], in_mask_op_X35 [26], in_mask_op_X35 [27], in_mask_op_X35 [28], in_mask_op_X35 [29], in_mask_op_X35 [30], in_mask_op_X35 [31], in_mask_op_X35 [32], in_mask_op_X35 [33], in_mask_op_X35 [34], in_mask_op_X35 [35], in_mask_op_X35 [36], in_mask_op_X35 [37], in_mask_op_X35 [38], in_mask_op_X35 [47:40] } = 0;
  assign { in_mask_op_C35 [0], in_mask_op_C35 [1], in_mask_op_C35 [2], in_mask_op_C35 [3], in_mask_op_C35 [4], in_mask_op_C35 [5], in_mask_op_C35 [6], in_mask_op_C35 [7], in_mask_op_C35 [8], in_mask_op_C35 [9], in_mask_op_C35 [10], in_mask_op_C35 [11], in_mask_op_C35 [12], in_mask_op_C35 [13], in_mask_op_C35 [14], in_mask_op_C35 [15], in_mask_op_C35 [16], in_mask_op_C35 [17], in_mask_op_C35 [18], in_mask_op_C35 [19], in_mask_op_C35 [20], in_mask_op_C35 [21], in_mask_op_C35 [22], in_mask_op_C35 [23], in_mask_op_C35 [24], in_mask_op_C35 [25], in_mask_op_C35 [26], in_mask_op_C35 [27], in_mask_op_C35 [28], in_mask_op_C35 [29], in_mask_op_C35 [30], in_mask_op_C35 [31], in_mask_op_C35 [32], in_mask_op_C35 [33], in_mask_op_C35 [34], in_mask_op_C35 [35], in_mask_op_C35 [36], in_mask_op_C35 [37], in_mask_op_C35 [38], in_mask_op_C35 [47:40] } = 0;
  logic [47:0] in_mask_op_R36 ;
  logic [47:0] in_mask_op_X36 ;
  logic [47:0] in_mask_op_C36 ;
  assign in_mask_op_R36 [39:39] = fangyuan28_R [6:6] ;
  assign in_mask_op_X36 [39:39] = fangyuan28_X [6:6] ;
  assign in_mask_op_C36 [39:39] = fangyuan28_C [6:6] ;
  assign { in_mask_op_R36 [0], in_mask_op_R36 [1], in_mask_op_R36 [2], in_mask_op_R36 [3], in_mask_op_R36 [4], in_mask_op_R36 [5], in_mask_op_R36 [6], in_mask_op_R36 [7], in_mask_op_R36 [8], in_mask_op_R36 [9], in_mask_op_R36 [10], in_mask_op_R36 [11], in_mask_op_R36 [12], in_mask_op_R36 [13], in_mask_op_R36 [14], in_mask_op_R36 [15], in_mask_op_R36 [16], in_mask_op_R36 [17], in_mask_op_R36 [18], in_mask_op_R36 [19], in_mask_op_R36 [20], in_mask_op_R36 [21], in_mask_op_R36 [22], in_mask_op_R36 [23], in_mask_op_R36 [24], in_mask_op_R36 [25], in_mask_op_R36 [26], in_mask_op_R36 [27], in_mask_op_R36 [28], in_mask_op_R36 [29], in_mask_op_R36 [30], in_mask_op_R36 [31], in_mask_op_R36 [32], in_mask_op_R36 [33], in_mask_op_R36 [34], in_mask_op_R36 [35], in_mask_op_R36 [36], in_mask_op_R36 [37], in_mask_op_R36 [38], in_mask_op_R36 [47:40] } = 0;
  assign { in_mask_op_X36 [0], in_mask_op_X36 [1], in_mask_op_X36 [2], in_mask_op_X36 [3], in_mask_op_X36 [4], in_mask_op_X36 [5], in_mask_op_X36 [6], in_mask_op_X36 [7], in_mask_op_X36 [8], in_mask_op_X36 [9], in_mask_op_X36 [10], in_mask_op_X36 [11], in_mask_op_X36 [12], in_mask_op_X36 [13], in_mask_op_X36 [14], in_mask_op_X36 [15], in_mask_op_X36 [16], in_mask_op_X36 [17], in_mask_op_X36 [18], in_mask_op_X36 [19], in_mask_op_X36 [20], in_mask_op_X36 [21], in_mask_op_X36 [22], in_mask_op_X36 [23], in_mask_op_X36 [24], in_mask_op_X36 [25], in_mask_op_X36 [26], in_mask_op_X36 [27], in_mask_op_X36 [28], in_mask_op_X36 [29], in_mask_op_X36 [30], in_mask_op_X36 [31], in_mask_op_X36 [32], in_mask_op_X36 [33], in_mask_op_X36 [34], in_mask_op_X36 [35], in_mask_op_X36 [36], in_mask_op_X36 [37], in_mask_op_X36 [38], in_mask_op_X36 [47:40] } = 0;
  assign { in_mask_op_C36 [0], in_mask_op_C36 [1], in_mask_op_C36 [2], in_mask_op_C36 [3], in_mask_op_C36 [4], in_mask_op_C36 [5], in_mask_op_C36 [6], in_mask_op_C36 [7], in_mask_op_C36 [8], in_mask_op_C36 [9], in_mask_op_C36 [10], in_mask_op_C36 [11], in_mask_op_C36 [12], in_mask_op_C36 [13], in_mask_op_C36 [14], in_mask_op_C36 [15], in_mask_op_C36 [16], in_mask_op_C36 [17], in_mask_op_C36 [18], in_mask_op_C36 [19], in_mask_op_C36 [20], in_mask_op_C36 [21], in_mask_op_C36 [22], in_mask_op_C36 [23], in_mask_op_C36 [24], in_mask_op_C36 [25], in_mask_op_C36 [26], in_mask_op_C36 [27], in_mask_op_C36 [28], in_mask_op_C36 [29], in_mask_op_C36 [30], in_mask_op_C36 [31], in_mask_op_C36 [32], in_mask_op_C36 [33], in_mask_op_C36 [34], in_mask_op_C36 [35], in_mask_op_C36 [36], in_mask_op_C36 [37], in_mask_op_C36 [38], in_mask_op_C36 [47:40] } = 0;
  logic [47:0] in_mask_op_R37 ;
  logic [47:0] in_mask_op_X37 ;
  logic [47:0] in_mask_op_C37 ;
  assign in_mask_op_R37 [39:39] = fangyuan28_R [5:5] ;
  assign in_mask_op_X37 [39:39] = fangyuan28_X [5:5] ;
  assign in_mask_op_C37 [39:39] = fangyuan28_C [5:5] ;
  assign { in_mask_op_R37 [0], in_mask_op_R37 [1], in_mask_op_R37 [2], in_mask_op_R37 [3], in_mask_op_R37 [4], in_mask_op_R37 [5], in_mask_op_R37 [6], in_mask_op_R37 [7], in_mask_op_R37 [8], in_mask_op_R37 [9], in_mask_op_R37 [10], in_mask_op_R37 [11], in_mask_op_R37 [12], in_mask_op_R37 [13], in_mask_op_R37 [14], in_mask_op_R37 [15], in_mask_op_R37 [16], in_mask_op_R37 [17], in_mask_op_R37 [18], in_mask_op_R37 [19], in_mask_op_R37 [20], in_mask_op_R37 [21], in_mask_op_R37 [22], in_mask_op_R37 [23], in_mask_op_R37 [24], in_mask_op_R37 [25], in_mask_op_R37 [26], in_mask_op_R37 [27], in_mask_op_R37 [28], in_mask_op_R37 [29], in_mask_op_R37 [30], in_mask_op_R37 [31], in_mask_op_R37 [32], in_mask_op_R37 [33], in_mask_op_R37 [34], in_mask_op_R37 [35], in_mask_op_R37 [36], in_mask_op_R37 [37], in_mask_op_R37 [38], in_mask_op_R37 [47:40] } = 0;
  assign { in_mask_op_X37 [0], in_mask_op_X37 [1], in_mask_op_X37 [2], in_mask_op_X37 [3], in_mask_op_X37 [4], in_mask_op_X37 [5], in_mask_op_X37 [6], in_mask_op_X37 [7], in_mask_op_X37 [8], in_mask_op_X37 [9], in_mask_op_X37 [10], in_mask_op_X37 [11], in_mask_op_X37 [12], in_mask_op_X37 [13], in_mask_op_X37 [14], in_mask_op_X37 [15], in_mask_op_X37 [16], in_mask_op_X37 [17], in_mask_op_X37 [18], in_mask_op_X37 [19], in_mask_op_X37 [20], in_mask_op_X37 [21], in_mask_op_X37 [22], in_mask_op_X37 [23], in_mask_op_X37 [24], in_mask_op_X37 [25], in_mask_op_X37 [26], in_mask_op_X37 [27], in_mask_op_X37 [28], in_mask_op_X37 [29], in_mask_op_X37 [30], in_mask_op_X37 [31], in_mask_op_X37 [32], in_mask_op_X37 [33], in_mask_op_X37 [34], in_mask_op_X37 [35], in_mask_op_X37 [36], in_mask_op_X37 [37], in_mask_op_X37 [38], in_mask_op_X37 [47:40] } = 0;
  assign { in_mask_op_C37 [0], in_mask_op_C37 [1], in_mask_op_C37 [2], in_mask_op_C37 [3], in_mask_op_C37 [4], in_mask_op_C37 [5], in_mask_op_C37 [6], in_mask_op_C37 [7], in_mask_op_C37 [8], in_mask_op_C37 [9], in_mask_op_C37 [10], in_mask_op_C37 [11], in_mask_op_C37 [12], in_mask_op_C37 [13], in_mask_op_C37 [14], in_mask_op_C37 [15], in_mask_op_C37 [16], in_mask_op_C37 [17], in_mask_op_C37 [18], in_mask_op_C37 [19], in_mask_op_C37 [20], in_mask_op_C37 [21], in_mask_op_C37 [22], in_mask_op_C37 [23], in_mask_op_C37 [24], in_mask_op_C37 [25], in_mask_op_C37 [26], in_mask_op_C37 [27], in_mask_op_C37 [28], in_mask_op_C37 [29], in_mask_op_C37 [30], in_mask_op_C37 [31], in_mask_op_C37 [32], in_mask_op_C37 [33], in_mask_op_C37 [34], in_mask_op_C37 [35], in_mask_op_C37 [36], in_mask_op_C37 [37], in_mask_op_C37 [38], in_mask_op_C37 [47:40] } = 0;
  logic [47:0] in_mask_op_R38 ;
  logic [47:0] in_mask_op_X38 ;
  logic [47:0] in_mask_op_C38 ;
  assign in_mask_op_R38 [39:39] = fangyuan28_R [4:4] ;
  assign in_mask_op_X38 [39:39] = fangyuan28_X [4:4] ;
  assign in_mask_op_C38 [39:39] = fangyuan28_C [4:4] ;
  assign { in_mask_op_R38 [0], in_mask_op_R38 [1], in_mask_op_R38 [2], in_mask_op_R38 [3], in_mask_op_R38 [4], in_mask_op_R38 [5], in_mask_op_R38 [6], in_mask_op_R38 [7], in_mask_op_R38 [8], in_mask_op_R38 [9], in_mask_op_R38 [10], in_mask_op_R38 [11], in_mask_op_R38 [12], in_mask_op_R38 [13], in_mask_op_R38 [14], in_mask_op_R38 [15], in_mask_op_R38 [16], in_mask_op_R38 [17], in_mask_op_R38 [18], in_mask_op_R38 [19], in_mask_op_R38 [20], in_mask_op_R38 [21], in_mask_op_R38 [22], in_mask_op_R38 [23], in_mask_op_R38 [24], in_mask_op_R38 [25], in_mask_op_R38 [26], in_mask_op_R38 [27], in_mask_op_R38 [28], in_mask_op_R38 [29], in_mask_op_R38 [30], in_mask_op_R38 [31], in_mask_op_R38 [32], in_mask_op_R38 [33], in_mask_op_R38 [34], in_mask_op_R38 [35], in_mask_op_R38 [36], in_mask_op_R38 [37], in_mask_op_R38 [38], in_mask_op_R38 [47:40] } = 0;
  assign { in_mask_op_X38 [0], in_mask_op_X38 [1], in_mask_op_X38 [2], in_mask_op_X38 [3], in_mask_op_X38 [4], in_mask_op_X38 [5], in_mask_op_X38 [6], in_mask_op_X38 [7], in_mask_op_X38 [8], in_mask_op_X38 [9], in_mask_op_X38 [10], in_mask_op_X38 [11], in_mask_op_X38 [12], in_mask_op_X38 [13], in_mask_op_X38 [14], in_mask_op_X38 [15], in_mask_op_X38 [16], in_mask_op_X38 [17], in_mask_op_X38 [18], in_mask_op_X38 [19], in_mask_op_X38 [20], in_mask_op_X38 [21], in_mask_op_X38 [22], in_mask_op_X38 [23], in_mask_op_X38 [24], in_mask_op_X38 [25], in_mask_op_X38 [26], in_mask_op_X38 [27], in_mask_op_X38 [28], in_mask_op_X38 [29], in_mask_op_X38 [30], in_mask_op_X38 [31], in_mask_op_X38 [32], in_mask_op_X38 [33], in_mask_op_X38 [34], in_mask_op_X38 [35], in_mask_op_X38 [36], in_mask_op_X38 [37], in_mask_op_X38 [38], in_mask_op_X38 [47:40] } = 0;
  assign { in_mask_op_C38 [0], in_mask_op_C38 [1], in_mask_op_C38 [2], in_mask_op_C38 [3], in_mask_op_C38 [4], in_mask_op_C38 [5], in_mask_op_C38 [6], in_mask_op_C38 [7], in_mask_op_C38 [8], in_mask_op_C38 [9], in_mask_op_C38 [10], in_mask_op_C38 [11], in_mask_op_C38 [12], in_mask_op_C38 [13], in_mask_op_C38 [14], in_mask_op_C38 [15], in_mask_op_C38 [16], in_mask_op_C38 [17], in_mask_op_C38 [18], in_mask_op_C38 [19], in_mask_op_C38 [20], in_mask_op_C38 [21], in_mask_op_C38 [22], in_mask_op_C38 [23], in_mask_op_C38 [24], in_mask_op_C38 [25], in_mask_op_C38 [26], in_mask_op_C38 [27], in_mask_op_C38 [28], in_mask_op_C38 [29], in_mask_op_C38 [30], in_mask_op_C38 [31], in_mask_op_C38 [32], in_mask_op_C38 [33], in_mask_op_C38 [34], in_mask_op_C38 [35], in_mask_op_C38 [36], in_mask_op_C38 [37], in_mask_op_C38 [38], in_mask_op_C38 [47:40] } = 0;
  logic [47:0] in_mask_op_R39 ;
  logic [47:0] in_mask_op_X39 ;
  logic [47:0] in_mask_op_C39 ;
  assign in_mask_op_R39 [39:39] = fangyuan28_R [3:3] ;
  assign in_mask_op_X39 [39:39] = fangyuan28_X [3:3] ;
  assign in_mask_op_C39 [39:39] = fangyuan28_C [3:3] ;
  assign { in_mask_op_R39 [0], in_mask_op_R39 [1], in_mask_op_R39 [2], in_mask_op_R39 [3], in_mask_op_R39 [4], in_mask_op_R39 [5], in_mask_op_R39 [6], in_mask_op_R39 [7], in_mask_op_R39 [8], in_mask_op_R39 [9], in_mask_op_R39 [10], in_mask_op_R39 [11], in_mask_op_R39 [12], in_mask_op_R39 [13], in_mask_op_R39 [14], in_mask_op_R39 [15], in_mask_op_R39 [16], in_mask_op_R39 [17], in_mask_op_R39 [18], in_mask_op_R39 [19], in_mask_op_R39 [20], in_mask_op_R39 [21], in_mask_op_R39 [22], in_mask_op_R39 [23], in_mask_op_R39 [24], in_mask_op_R39 [25], in_mask_op_R39 [26], in_mask_op_R39 [27], in_mask_op_R39 [28], in_mask_op_R39 [29], in_mask_op_R39 [30], in_mask_op_R39 [31], in_mask_op_R39 [32], in_mask_op_R39 [33], in_mask_op_R39 [34], in_mask_op_R39 [35], in_mask_op_R39 [36], in_mask_op_R39 [37], in_mask_op_R39 [38], in_mask_op_R39 [47:40] } = 0;
  assign { in_mask_op_X39 [0], in_mask_op_X39 [1], in_mask_op_X39 [2], in_mask_op_X39 [3], in_mask_op_X39 [4], in_mask_op_X39 [5], in_mask_op_X39 [6], in_mask_op_X39 [7], in_mask_op_X39 [8], in_mask_op_X39 [9], in_mask_op_X39 [10], in_mask_op_X39 [11], in_mask_op_X39 [12], in_mask_op_X39 [13], in_mask_op_X39 [14], in_mask_op_X39 [15], in_mask_op_X39 [16], in_mask_op_X39 [17], in_mask_op_X39 [18], in_mask_op_X39 [19], in_mask_op_X39 [20], in_mask_op_X39 [21], in_mask_op_X39 [22], in_mask_op_X39 [23], in_mask_op_X39 [24], in_mask_op_X39 [25], in_mask_op_X39 [26], in_mask_op_X39 [27], in_mask_op_X39 [28], in_mask_op_X39 [29], in_mask_op_X39 [30], in_mask_op_X39 [31], in_mask_op_X39 [32], in_mask_op_X39 [33], in_mask_op_X39 [34], in_mask_op_X39 [35], in_mask_op_X39 [36], in_mask_op_X39 [37], in_mask_op_X39 [38], in_mask_op_X39 [47:40] } = 0;
  assign { in_mask_op_C39 [0], in_mask_op_C39 [1], in_mask_op_C39 [2], in_mask_op_C39 [3], in_mask_op_C39 [4], in_mask_op_C39 [5], in_mask_op_C39 [6], in_mask_op_C39 [7], in_mask_op_C39 [8], in_mask_op_C39 [9], in_mask_op_C39 [10], in_mask_op_C39 [11], in_mask_op_C39 [12], in_mask_op_C39 [13], in_mask_op_C39 [14], in_mask_op_C39 [15], in_mask_op_C39 [16], in_mask_op_C39 [17], in_mask_op_C39 [18], in_mask_op_C39 [19], in_mask_op_C39 [20], in_mask_op_C39 [21], in_mask_op_C39 [22], in_mask_op_C39 [23], in_mask_op_C39 [24], in_mask_op_C39 [25], in_mask_op_C39 [26], in_mask_op_C39 [27], in_mask_op_C39 [28], in_mask_op_C39 [29], in_mask_op_C39 [30], in_mask_op_C39 [31], in_mask_op_C39 [32], in_mask_op_C39 [33], in_mask_op_C39 [34], in_mask_op_C39 [35], in_mask_op_C39 [36], in_mask_op_C39 [37], in_mask_op_C39 [38], in_mask_op_C39 [47:40] } = 0;
  logic [47:0] in_mask_op_R40 ;
  logic [47:0] in_mask_op_X40 ;
  logic [47:0] in_mask_op_C40 ;
  assign in_mask_op_R40 [39:39] = fangyuan28_R [2:2] ;
  assign in_mask_op_X40 [39:39] = fangyuan28_X [2:2] ;
  assign in_mask_op_C40 [39:39] = fangyuan28_C [2:2] ;
  assign { in_mask_op_R40 [0], in_mask_op_R40 [1], in_mask_op_R40 [2], in_mask_op_R40 [3], in_mask_op_R40 [4], in_mask_op_R40 [5], in_mask_op_R40 [6], in_mask_op_R40 [7], in_mask_op_R40 [8], in_mask_op_R40 [9], in_mask_op_R40 [10], in_mask_op_R40 [11], in_mask_op_R40 [12], in_mask_op_R40 [13], in_mask_op_R40 [14], in_mask_op_R40 [15], in_mask_op_R40 [16], in_mask_op_R40 [17], in_mask_op_R40 [18], in_mask_op_R40 [19], in_mask_op_R40 [20], in_mask_op_R40 [21], in_mask_op_R40 [22], in_mask_op_R40 [23], in_mask_op_R40 [24], in_mask_op_R40 [25], in_mask_op_R40 [26], in_mask_op_R40 [27], in_mask_op_R40 [28], in_mask_op_R40 [29], in_mask_op_R40 [30], in_mask_op_R40 [31], in_mask_op_R40 [32], in_mask_op_R40 [33], in_mask_op_R40 [34], in_mask_op_R40 [35], in_mask_op_R40 [36], in_mask_op_R40 [37], in_mask_op_R40 [38], in_mask_op_R40 [47:40] } = 0;
  assign { in_mask_op_X40 [0], in_mask_op_X40 [1], in_mask_op_X40 [2], in_mask_op_X40 [3], in_mask_op_X40 [4], in_mask_op_X40 [5], in_mask_op_X40 [6], in_mask_op_X40 [7], in_mask_op_X40 [8], in_mask_op_X40 [9], in_mask_op_X40 [10], in_mask_op_X40 [11], in_mask_op_X40 [12], in_mask_op_X40 [13], in_mask_op_X40 [14], in_mask_op_X40 [15], in_mask_op_X40 [16], in_mask_op_X40 [17], in_mask_op_X40 [18], in_mask_op_X40 [19], in_mask_op_X40 [20], in_mask_op_X40 [21], in_mask_op_X40 [22], in_mask_op_X40 [23], in_mask_op_X40 [24], in_mask_op_X40 [25], in_mask_op_X40 [26], in_mask_op_X40 [27], in_mask_op_X40 [28], in_mask_op_X40 [29], in_mask_op_X40 [30], in_mask_op_X40 [31], in_mask_op_X40 [32], in_mask_op_X40 [33], in_mask_op_X40 [34], in_mask_op_X40 [35], in_mask_op_X40 [36], in_mask_op_X40 [37], in_mask_op_X40 [38], in_mask_op_X40 [47:40] } = 0;
  assign { in_mask_op_C40 [0], in_mask_op_C40 [1], in_mask_op_C40 [2], in_mask_op_C40 [3], in_mask_op_C40 [4], in_mask_op_C40 [5], in_mask_op_C40 [6], in_mask_op_C40 [7], in_mask_op_C40 [8], in_mask_op_C40 [9], in_mask_op_C40 [10], in_mask_op_C40 [11], in_mask_op_C40 [12], in_mask_op_C40 [13], in_mask_op_C40 [14], in_mask_op_C40 [15], in_mask_op_C40 [16], in_mask_op_C40 [17], in_mask_op_C40 [18], in_mask_op_C40 [19], in_mask_op_C40 [20], in_mask_op_C40 [21], in_mask_op_C40 [22], in_mask_op_C40 [23], in_mask_op_C40 [24], in_mask_op_C40 [25], in_mask_op_C40 [26], in_mask_op_C40 [27], in_mask_op_C40 [28], in_mask_op_C40 [29], in_mask_op_C40 [30], in_mask_op_C40 [31], in_mask_op_C40 [32], in_mask_op_C40 [33], in_mask_op_C40 [34], in_mask_op_C40 [35], in_mask_op_C40 [36], in_mask_op_C40 [37], in_mask_op_C40 [38], in_mask_op_C40 [47:40] } = 0;
  logic [47:0] in_mask_op_R41 ;
  logic [47:0] in_mask_op_X41 ;
  logic [47:0] in_mask_op_C41 ;
  assign in_mask_op_R41 [39:39] = fangyuan28_R [1:1] ;
  assign in_mask_op_X41 [39:39] = fangyuan28_X [1:1] ;
  assign in_mask_op_C41 [39:39] = fangyuan28_C [1:1] ;
  assign { in_mask_op_R41 [0], in_mask_op_R41 [1], in_mask_op_R41 [2], in_mask_op_R41 [3], in_mask_op_R41 [4], in_mask_op_R41 [5], in_mask_op_R41 [6], in_mask_op_R41 [7], in_mask_op_R41 [8], in_mask_op_R41 [9], in_mask_op_R41 [10], in_mask_op_R41 [11], in_mask_op_R41 [12], in_mask_op_R41 [13], in_mask_op_R41 [14], in_mask_op_R41 [15], in_mask_op_R41 [16], in_mask_op_R41 [17], in_mask_op_R41 [18], in_mask_op_R41 [19], in_mask_op_R41 [20], in_mask_op_R41 [21], in_mask_op_R41 [22], in_mask_op_R41 [23], in_mask_op_R41 [24], in_mask_op_R41 [25], in_mask_op_R41 [26], in_mask_op_R41 [27], in_mask_op_R41 [28], in_mask_op_R41 [29], in_mask_op_R41 [30], in_mask_op_R41 [31], in_mask_op_R41 [32], in_mask_op_R41 [33], in_mask_op_R41 [34], in_mask_op_R41 [35], in_mask_op_R41 [36], in_mask_op_R41 [37], in_mask_op_R41 [38], in_mask_op_R41 [47:40] } = 0;
  assign { in_mask_op_X41 [0], in_mask_op_X41 [1], in_mask_op_X41 [2], in_mask_op_X41 [3], in_mask_op_X41 [4], in_mask_op_X41 [5], in_mask_op_X41 [6], in_mask_op_X41 [7], in_mask_op_X41 [8], in_mask_op_X41 [9], in_mask_op_X41 [10], in_mask_op_X41 [11], in_mask_op_X41 [12], in_mask_op_X41 [13], in_mask_op_X41 [14], in_mask_op_X41 [15], in_mask_op_X41 [16], in_mask_op_X41 [17], in_mask_op_X41 [18], in_mask_op_X41 [19], in_mask_op_X41 [20], in_mask_op_X41 [21], in_mask_op_X41 [22], in_mask_op_X41 [23], in_mask_op_X41 [24], in_mask_op_X41 [25], in_mask_op_X41 [26], in_mask_op_X41 [27], in_mask_op_X41 [28], in_mask_op_X41 [29], in_mask_op_X41 [30], in_mask_op_X41 [31], in_mask_op_X41 [32], in_mask_op_X41 [33], in_mask_op_X41 [34], in_mask_op_X41 [35], in_mask_op_X41 [36], in_mask_op_X41 [37], in_mask_op_X41 [38], in_mask_op_X41 [47:40] } = 0;
  assign { in_mask_op_C41 [0], in_mask_op_C41 [1], in_mask_op_C41 [2], in_mask_op_C41 [3], in_mask_op_C41 [4], in_mask_op_C41 [5], in_mask_op_C41 [6], in_mask_op_C41 [7], in_mask_op_C41 [8], in_mask_op_C41 [9], in_mask_op_C41 [10], in_mask_op_C41 [11], in_mask_op_C41 [12], in_mask_op_C41 [13], in_mask_op_C41 [14], in_mask_op_C41 [15], in_mask_op_C41 [16], in_mask_op_C41 [17], in_mask_op_C41 [18], in_mask_op_C41 [19], in_mask_op_C41 [20], in_mask_op_C41 [21], in_mask_op_C41 [22], in_mask_op_C41 [23], in_mask_op_C41 [24], in_mask_op_C41 [25], in_mask_op_C41 [26], in_mask_op_C41 [27], in_mask_op_C41 [28], in_mask_op_C41 [29], in_mask_op_C41 [30], in_mask_op_C41 [31], in_mask_op_C41 [32], in_mask_op_C41 [33], in_mask_op_C41 [34], in_mask_op_C41 [35], in_mask_op_C41 [36], in_mask_op_C41 [37], in_mask_op_C41 [38], in_mask_op_C41 [47:40] } = 0;
  logic [47:0] in_mask_op_R42 ;
  logic [47:0] in_mask_op_X42 ;
  logic [47:0] in_mask_op_C42 ;
  assign in_mask_op_R42 [39:39] = fangyuan28_R [0:0] ;
  assign in_mask_op_X42 [39:39] = fangyuan28_X [0:0] ;
  assign in_mask_op_C42 [39:39] = fangyuan28_C [0:0] ;

  assign oi_aligned_mant_nxt = _028_ ? fangyuan28 : oi_mant_shift;
  logic [0:0] _028__C0 ;
  logic [0:0] _028__R0 ;
  logic [0:0] _028__X0 ;
  assign _028__C0 = | oi_aligned_mant_nxt_C ;
  assign _028__X0 = | oi_aligned_mant_nxt_X ;
  assign oi_aligned_mant_nxt_T = _028_ ? ( { 40{ _028__T  }} | fangyuan28_T ) : ( { 40{ _028__T  }} | oi_mant_shift_T );
  assign oi_aligned_mant_nxt_S = _028_ ? fangyuan28_S : oi_mant_shift_S ;
  assign _028__R0 = ( | (oi_aligned_mant_nxt_R | ( oi_aligned_mant_nxt_C & ( { 40{ _028_ }} & fangyuan28_T | { 40{ !_028_ }} & oi_mant_shift_T )))) && fangyuan28 != oi_mant_shift ;
  logic [39:0] fangyuan28_C0 ;
  logic [39:0] fangyuan28_R0 ;
  logic [39:0] fangyuan28_X0 ;
  assign fangyuan28_C0 = { 40{ _028_ }} ;
  assign fangyuan28_R0 = { 40{ _028_ }} & ( oi_aligned_mant_nxt_R | ( { 40{ _028__T  }} & oi_aligned_mant_nxt_C ));
  assign fangyuan28_X0 = { 40{ _028_ }} & oi_aligned_mant_nxt_X ;
  logic [39:0] oi_mant_shift_C1 ;
  logic [39:0] oi_mant_shift_R1 ;
  logic [39:0] oi_mant_shift_X1 ;
  assign oi_mant_shift_C1 = { 40{ !_028_ }} ;
  assign oi_mant_shift_R1 = { 40{ !_028_ }} & ( oi_aligned_mant_nxt_R | ( { 40{ _028__T  }} & oi_aligned_mant_nxt_C ));
  assign oi_mant_shift_X1 = { 40{ !_028_ }} & oi_aligned_mant_nxt_X ;
  assign _053_ = _030_ ? di_mant_cut : 3'b000;
  logic [0:0] _030__C0 ;
  logic [0:0] _030__R0 ;
  logic [0:0] _030__X0 ;
  assign _030__C0 = | _053__C ;
  assign _030__X0 = | _053__X ;
  assign { di_mant_cut_R0 [0] } = 0;
  assign { di_mant_cut_X0 [0] } = 0;
  assign { di_mant_cut_C0 [0] } = 0;
  logic [2:0] di_mant_cut_C1 ;
  logic [2:0] di_mant_cut_R1 ;
  logic [2:0] di_mant_cut_X1 ;
  assign di_mant_cut_C1 = { 3{ _030_ }} ;
  assign di_mant_cut_R1 = { 3{ _030_ }} & ( _053__R | ( { 3{ _030__T  }} & _053__C ));
  assign di_mant_cut_X1 = { 3{ _030_ }} & _053__X ;
  assign _053__T = _030_ ? ( { 3{ | _030__T  }} | di_mant_cut_T ) : { 3{ | _030__T  }};
  assign _053__S = _030_ ? di_mant_cut_S : _030__S ;
  assign _030__R0 = ( | (_053__R | ( { 3{ _030_ }} & di_mant_cut_T & _053__C ))) && di_mant_cut != 3'b000 ;
  assign in_mant_cut_nxt = _029_ ? oi_mant_cut : _053_;
  logic [0:0] _029__C1 ;
  logic [0:0] _029__R1 ;
  logic [0:0] _029__X1 ;
  assign _029__C1 = | in_mant_cut_nxt_C ;
  assign _029__X1 = | in_mant_cut_nxt_X ;
  assign in_mant_cut_nxt_T = _029_ ? ( { 3{ _029__T  }} | oi_mant_cut_T ) : ( { 3{ _029__T  }} | _053__T );
  assign in_mant_cut_nxt_S = _029_ ? oi_mant_cut_S : _053__S ;
  assign _029__R1 = ( | (in_mant_cut_nxt_R | ( in_mant_cut_nxt_C & ( { 3{ _029_ }} & oi_mant_cut_T | { 3{ !_029_ }} & _053__T )))) && oi_mant_cut != _053_ ;
  assign { oi_mant_cut_R0 [0] } = 0;
  assign { oi_mant_cut_X0 [0] } = 0;
  assign { oi_mant_cut_C0 [0] } = 0;
  logic [2:0] oi_mant_cut_C1 ;
  logic [2:0] oi_mant_cut_R1 ;
  logic [2:0] oi_mant_cut_X1 ;
  assign oi_mant_cut_C1 = { 3{ _029_ }} ;
  assign oi_mant_cut_R1 = { 3{ _029_ }} & ( in_mant_cut_nxt_R | ( { 3{ _029__T  }} & in_mant_cut_nxt_C ));
  assign oi_mant_cut_X1 = { 3{ _029_ }} & in_mant_cut_nxt_X ;
  logic [2:0] _053__C0 ;
  logic [2:0] _053__R0 ;
  logic [2:0] _053__X0 ;
  assign _053__C0 = { 3{ !_029_ }} ;
  assign _053__R0 = { 3{ !_029_ }} & ( in_mant_cut_nxt_R | ( { 3{ _029__T  }} & in_mant_cut_nxt_C ));
  assign _053__X0 = { 3{ !_029_ }} & in_mant_cut_nxt_X ;
  logic [43:0] fangyuan29;
  logic [43:0] fangyuan29_T ;
  logic [43:0] fangyuan29_R ;
  logic [43:0] fangyuan29_C ;
  logic [43:0] fangyuan29_X ;
  assign fangyuan29 = { mant_sum, in_mant_cut };
  assign fangyuan29_T = {  mant_sum_T , in_mant_cut_T  };
  logic [13:0] fangyuan29_S ;
  assign fangyuan29_S = 0 ;
  logic [40:0] mant_sum_R1 ;
  logic [40:0] mant_sum_X1 ;
  logic [40:0] mant_sum_C1 ;
  assign mant_sum_R1 = fangyuan29_R [43:3] ;
  assign mant_sum_X1 = fangyuan29_X [43:3] ;
  assign mant_sum_C1 = fangyuan29_C [43:3] ;
  logic [2:0] in_mant_cut_R2 ;
  logic [2:0] in_mant_cut_X2 ;
  logic [2:0] in_mant_cut_C2 ;
  assign in_mant_cut_R2 = fangyuan29_R [2:0] ;
  assign in_mant_cut_X2 = fangyuan29_X [2:0] ;
  assign in_mant_cut_C2 = fangyuan29_C [2:0] ;

  assign mant_sum_scmp = _044_ ? _024_[43:0] : fangyuan29;
  logic [0:0] _044__C0 ;
  logic [0:0] _044__R0 ;
  logic [0:0] _044__X0 ;
  assign _044__C0 = | mant_sum_scmp_C ;
  assign _044__X0 = | mant_sum_scmp_X ;
  assign mant_sum_scmp_T = _044_ ? ( { 44{ _044__T  }} | _024__T [43:0] ) : ( { 44{ _044__T  }} | fangyuan29_T );
  assign mant_sum_scmp_S = _044_ ? _024__S : fangyuan29_S ;
  assign _044__R0 = ( | (mant_sum_scmp_R | ( mant_sum_scmp_C & ( { 44{ _044_ }} & _024__T [43:0] | { 44{ !_044_ }} & fangyuan29_T )))) && _024_[43:0] != fangyuan29 ;
  logic [44:0] _024__C0 ;
  logic [44:0] _024__R0 ;
  logic [44:0] _024__X0 ;
  assign _024__C0 [43:0] = { 44{ _044_ }} ;
  assign _024__R0 [43:0] = { 44{ _044_ }} & ( mant_sum_scmp_R | ( { 44{ _044__T  }} & mant_sum_scmp_C ));
  assign _024__X0 [43:0] = { 44{ _044_ }} & mant_sum_scmp_X ;
  logic [43:0] fangyuan29_C0 ;
  logic [43:0] fangyuan29_R0 ;
  logic [43:0] fangyuan29_X0 ;
  assign fangyuan29_C0 = { 44{ !_044_ }} ;
  assign fangyuan29_R0 = { 44{ !_044_ }} & ( mant_sum_scmp_R | ( { 44{ _044__T  }} & mant_sum_scmp_C ));
  assign fangyuan29_X0 = { 44{ !_044_ }} & mant_sum_scmp_X ;
  logic [41:0] fangyuan30;
  logic [41:0] fangyuan30_T ;
  logic [41:0] fangyuan30_R ;
  logic [41:0] fangyuan30_C ;
  logic [41:0] fangyuan30_X ;
  assign fangyuan30 = { mant_sum[39:0], 2'b00 };
  assign fangyuan30_T = {  mant_sum_T [39:0] , 2'h0  };
  logic [13:0] fangyuan30_S ;
  assign fangyuan30_S = 0 ;
  logic [40:0] mant_sum_R2 ;
  logic [40:0] mant_sum_X2 ;
  logic [40:0] mant_sum_C2 ;
  assign mant_sum_R2 [39:0] = fangyuan30_R [41:2] ;
  assign mant_sum_X2 [39:0] = fangyuan30_X [41:2] ;
  assign mant_sum_C2 [39:0] = fangyuan30_C [41:2] ;
  logic [41:0] fangyuan31;
  logic [41:0] fangyuan31_T ;
  logic [41:0] fangyuan31_R ;
  logic [41:0] fangyuan31_C ;
  logic [41:0] fangyuan31_X ;
  assign fangyuan31 = { mant_sum_scmp[43:3], _045_ };
  assign fangyuan31_T = {  mant_sum_scmp_T [43:3] , _045__T  };
  logic [13:0] fangyuan31_S ;
  assign fangyuan31_S = 0 ;
  assign mant_sum_scmp_R0 [43:3] = fangyuan31_R [41:1] ;
  assign mant_sum_scmp_X0 [43:3] = fangyuan31_X [41:1] ;
  assign mant_sum_scmp_C0 [43:3] = fangyuan31_C [41:1] ;
  logic [0:0] _045__R0 ;
  logic [0:0] _045__X0 ;
  logic [0:0] _045__C0 ;
  assign _045__R0 = fangyuan31_R [0:0] ;
  assign _045__X0 = fangyuan31_X [0:0] ;
  assign _045__C0 = fangyuan31_C [0:0] ;

  assign mant_sum_ncmp = in_nan_d ? fangyuan30 : fangyuan31;
  logic [0:0] in_nan_d_C2 ;
  logic [0:0] in_nan_d_R2 ;
  logic [0:0] in_nan_d_X2 ;
  assign in_nan_d_C2 = | mant_sum_ncmp_C ;
  assign in_nan_d_X2 = | mant_sum_ncmp_X ;
  assign mant_sum_ncmp_T = in_nan_d ? ( { 42{ in_nan_d_T  }} | fangyuan30_T ) : ( { 42{ in_nan_d_T  }} | fangyuan31_T );
  assign mant_sum_ncmp_S = in_nan_d ? fangyuan30_S : fangyuan31_S ;
  assign in_nan_d_R2 = ( | (mant_sum_ncmp_R | ( mant_sum_ncmp_C & ( { 42{ in_nan_d }} & fangyuan30_T | { 42{ !in_nan_d }} & fangyuan31_T )))) && fangyuan30 != fangyuan31 ;
  logic [41:0] fangyuan30_C0 ;
  logic [41:0] fangyuan30_R0 ;
  logic [41:0] fangyuan30_X0 ;
  assign fangyuan30_C0 = { 42{ in_nan_d }} ;
  assign fangyuan30_R0 = { 42{ in_nan_d }} & ( mant_sum_ncmp_R | ( { 42{ in_nan_d_T  }} & mant_sum_ncmp_C ));
  assign fangyuan30_X0 = { 42{ in_nan_d }} & mant_sum_ncmp_X ;
  logic [41:0] fangyuan31_C0 ;
  logic [41:0] fangyuan31_R0 ;
  logic [41:0] fangyuan31_X0 ;
  assign fangyuan31_C0 = { 42{ !in_nan_d }} ;
  assign fangyuan31_R0 = { 42{ !in_nan_d }} & ( mant_sum_ncmp_R | ( { 42{ in_nan_d_T  }} & mant_sum_ncmp_C ));
  assign fangyuan31_X0 = { 42{ !in_nan_d }} & mant_sum_ncmp_X ;
  logic [39:0] fangyuan32;
  logic [39:0] fangyuan32_T ;
  logic [39:0] fangyuan32_R ;
  logic [39:0] fangyuan32_C ;
  logic [39:0] fangyuan32_X ;
  assign fangyuan32 = { mant_sum_round[38:0], 1'b0 };
  assign fangyuan32_T = {  mant_sum_round_T [38:0] , 1'h0  };
  logic [13:0] fangyuan32_S ;
  assign fangyuan32_S = 0 ;
  logic [40:0] mant_sum_round_R1 ;
  logic [40:0] mant_sum_round_X1 ;
  logic [40:0] mant_sum_round_C1 ;
  assign mant_sum_round_R1 [38:0] = fangyuan32_R [39:1] ;
  assign mant_sum_round_X1 [38:0] = fangyuan32_X [39:1] ;
  assign mant_sum_round_C1 [38:0] = fangyuan32_C [39:1] ;

  assign partial_mant_nmlz = mant_sum_carry_neg ? fangyuan32 : _025_[39:0];
  logic [0:0] mant_sum_carry_neg_C1 ;
  logic [0:0] mant_sum_carry_neg_R1 ;
  logic [0:0] mant_sum_carry_neg_X1 ;
  assign mant_sum_carry_neg_C1 = | partial_mant_nmlz_C ;
  assign mant_sum_carry_neg_X1 = | partial_mant_nmlz_X ;
  assign partial_mant_nmlz_T = mant_sum_carry_neg ? ( { 40{ mant_sum_carry_neg_T  }} | fangyuan32_T ) : ( { 40{ mant_sum_carry_neg_T  }} | _025__T [39:0] );
  assign partial_mant_nmlz_S = mant_sum_carry_neg ? fangyuan32_S : _025__S ;
  assign mant_sum_carry_neg_R1 = ( | (partial_mant_nmlz_R | ( partial_mant_nmlz_C & ( { 40{ mant_sum_carry_neg }} & fangyuan32_T | { 40{ !mant_sum_carry_neg }} & _025__T [39:0] )))) && fangyuan32 != _025_[39:0] ;
  logic [39:0] fangyuan32_C0 ;
  logic [39:0] fangyuan32_R0 ;
  logic [39:0] fangyuan32_X0 ;
  assign fangyuan32_C0 = { 40{ mant_sum_carry_neg }} ;
  assign fangyuan32_R0 = { 40{ mant_sum_carry_neg }} & ( partial_mant_nmlz_R | ( { 40{ mant_sum_carry_neg_T  }} & partial_mant_nmlz_C ));
  assign fangyuan32_X0 = { 40{ mant_sum_carry_neg }} & partial_mant_nmlz_X ;
  logic [40:0] _025__C0 ;
  logic [40:0] _025__R0 ;
  logic [40:0] _025__X0 ;
  assign _025__C0 [39:0] = { 40{ !mant_sum_carry_neg }} ;
  assign _025__R0 [39:0] = { 40{ !mant_sum_carry_neg }} & ( partial_mant_nmlz_R | ( { 40{ mant_sum_carry_neg_T  }} & partial_mant_nmlz_C ));
  assign _025__X0 [39:0] = { 40{ !mant_sum_carry_neg }} & partial_mant_nmlz_X ;
  assign partial_expo_nmlz = mant_sum_carry_neg ? partial_expo_nmlz_neg : partial_expo_nmlz_pos;
  logic [0:0] mant_sum_carry_neg_C2 ;
  logic [0:0] mant_sum_carry_neg_R2 ;
  logic [0:0] mant_sum_carry_neg_X2 ;
  assign mant_sum_carry_neg_C2 = | partial_expo_nmlz_C ;
  assign mant_sum_carry_neg_X2 = | partial_expo_nmlz_X ;
  assign partial_expo_nmlz_T = mant_sum_carry_neg ? ( { 8{ mant_sum_carry_neg_T  }} | partial_expo_nmlz_neg_T ) : ( { 8{ mant_sum_carry_neg_T  }} | partial_expo_nmlz_pos_T );
  assign partial_expo_nmlz_S = mant_sum_carry_neg ? partial_expo_nmlz_neg_S : partial_expo_nmlz_pos_S ;
  assign mant_sum_carry_neg_R2 = ( | (partial_expo_nmlz_R | ( partial_expo_nmlz_C & ( { 8{ mant_sum_carry_neg }} & partial_expo_nmlz_neg_T | { 8{ !mant_sum_carry_neg }} & partial_expo_nmlz_pos_T )))) && partial_expo_nmlz_neg != partial_expo_nmlz_pos ;
  logic [7:0] partial_expo_nmlz_neg_C0 ;
  logic [7:0] partial_expo_nmlz_neg_R0 ;
  logic [7:0] partial_expo_nmlz_neg_X0 ;
  assign partial_expo_nmlz_neg_C0 = { 8{ mant_sum_carry_neg }} ;
  assign partial_expo_nmlz_neg_R0 = { 8{ mant_sum_carry_neg }} & ( partial_expo_nmlz_R | ( { 8{ mant_sum_carry_neg_T  }} & partial_expo_nmlz_C ));
  assign partial_expo_nmlz_neg_X0 = { 8{ mant_sum_carry_neg }} & partial_expo_nmlz_X ;
  logic [7:0] partial_expo_nmlz_pos_C0 ;
  logic [7:0] partial_expo_nmlz_pos_R0 ;
  logic [7:0] partial_expo_nmlz_pos_X0 ;
  assign partial_expo_nmlz_pos_C0 = { 8{ !mant_sum_carry_neg }} ;
  assign partial_expo_nmlz_pos_R0 = { 8{ !mant_sum_carry_neg }} & ( partial_expo_nmlz_R | ( { 8{ mant_sum_carry_neg_T  }} & partial_expo_nmlz_C ));
  assign partial_expo_nmlz_pos_X0 = { 8{ !mant_sum_carry_neg }} & partial_expo_nmlz_X ;
  assign _054_ = _046_ ? partial_expo_nmlz : 8'b00000000;
  logic [0:0] _046__C0 ;
  logic [0:0] _046__R0 ;
  logic [0:0] _046__X0 ;
  assign _046__C0 = | _054__C ;
  assign _046__X0 = | _054__X ;
  logic [7:0] partial_expo_nmlz_C0 ;
  logic [7:0] partial_expo_nmlz_R0 ;
  logic [7:0] partial_expo_nmlz_X0 ;
  assign partial_expo_nmlz_C0 = { 8{ _046_ }} ;
  assign partial_expo_nmlz_R0 = { 8{ _046_ }} & ( _054__R | ( { 8{ _046__T  }} & _054__C ));
  assign partial_expo_nmlz_X0 = { 8{ _046_ }} & _054__X ;
  assign _054__T = _046_ ? ( { 8{ | _046__T  }} | partial_expo_nmlz_T ) : { 8{ | _046__T  }};
  assign _054__S = _046_ ? partial_expo_nmlz_S : _046__S ;
  assign _046__R0 = ( | (_054__R | ( { 8{ _046_ }} & partial_expo_nmlz_T & _054__C ))) && partial_expo_nmlz != 8'b00000000 ;
  assign partial_expo_nxt = in_nan_2d ? 8'b11111111 : _054_;
  logic [0:0] in_nan_2d_C0 ;
  logic [0:0] in_nan_2d_R0 ;
  logic [0:0] in_nan_2d_X0 ;
  assign in_nan_2d_C0 = | partial_expo_nxt_C ;
  assign in_nan_2d_X0 = | partial_expo_nxt_X ;
  logic [7:0] _054__C0 ;
  logic [7:0] _054__R0 ;
  logic [7:0] _054__X0 ;
  assign _054__C0 = { 8{ !in_nan_2d }};
  assign _054__R0 = { 8{ !in_nan_2d }} & ( partial_expo_nxt_R | ( { 8{ in_nan_2d_T  }} & partial_expo_nxt_C ));
  assign _054__X0 = { 8{ !in_nan_2d }} & partial_expo_nxt_X ;
  assign partial_expo_nxt_T = in_nan_2d ? { 8{ | in_nan_2d_T  }} : ( { 8{ | in_nan_2d_T  }} | _054__T );
  assign partial_expo_nxt_S = in_nan_2d ? in_nan_2d_S : _054__S ;
  assign in_nan_2d_R0 = ( | (partial_expo_nxt_R | ( { 8{ !in_nan_2d }} & _054__T & partial_expo_nxt_C ))) && 8'b11111111 != _054_ ;
  logic [47:0] fangyuan33;
  logic [47:0] fangyuan33_T ;
  logic [47:0] fangyuan33_R ;
  logic [47:0] fangyuan33_C ;
  logic [47:0] fangyuan33_X ;
  assign fangyuan33 = { partial_result_expo, partial_result_mant };
  assign fangyuan33_T = {  partial_result_expo_T , partial_result_mant_T  };
  logic [13:0] fangyuan33_S ;
  assign fangyuan33_S = 0 ;
  logic [7:0] partial_result_expo_R1 ;
  logic [7:0] partial_result_expo_X1 ;
  logic [7:0] partial_result_expo_C1 ;
  assign partial_result_expo_R1 = fangyuan33_R [47:40] ;
  assign partial_result_expo_X1 = fangyuan33_X [47:40] ;
  assign partial_result_expo_C1 = fangyuan33_C [47:40] ;
  logic [39:0] partial_result_mant_R1 ;
  logic [39:0] partial_result_mant_X1 ;
  logic [39:0] partial_result_mant_C1 ;
  assign partial_result_mant_R1 = fangyuan33_R [39:0] ;
  assign partial_result_mant_X1 = fangyuan33_X [39:0] ;
  assign partial_result_mant_C1 = fangyuan33_C [39:0] ;

  assign partial_result = _009_ ? fangyuan33 : 48'b000000000000000000000000000000000000000000000000;
  logic [0:0] _009__C2 ;
  logic [0:0] _009__R2 ;
  logic [0:0] _009__X2 ;
  assign _009__C2 = | partial_result_C ;
  assign _009__X2 = | partial_result_X ;
  logic [47:0] fangyuan33_C0 ;
  logic [47:0] fangyuan33_R0 ;
  logic [47:0] fangyuan33_X0 ;
  assign fangyuan33_C0 = { 48{ _009_ }} ;
  assign fangyuan33_R0 = { 48{ _009_ }} & ( partial_result_R | ( { 48{ _009__T  }} & partial_result_C ));
  assign fangyuan33_X0 = { 48{ _009_ }} & partial_result_X ;
  assign partial_result_T = _009_ ? ( { 48{ | _009__T  }} | fangyuan33_T ) : { 48{ | _009__T  }};
  assign partial_result_S = _009_ ? fangyuan33_S : _009__S ;
  assign _009__R2 = ( | (partial_result_R | ( { 48{ _009_ }} & fangyuan33_T & partial_result_C ))) && fangyuan33 != 48'b000000000000000000000000000000000000000000000000 ;
  assign partial_mant_abs = partial_result[39] ? _016_ : partial_result[38:0];
  assign { partial_result_R2 [47:40] } = 0;
  assign { partial_result_X2 [47:40] } = 0;
  assign { partial_result_C2 [47:40] } = 0;
  logic [47:0] partial_result_C3 ;
  logic [47:0] partial_result_R3 ;
  logic [47:0] partial_result_X3 ;
  assign partial_result_C3 [39] = | partial_mant_abs_C ;
  assign partial_result_X3 [39] = | partial_mant_abs_X ;
  assign partial_mant_abs_T = partial_result[39] ? ( { 39{ partial_result_T  [39] }} | _016__T ) : ( { 39{ partial_result_T  [39] }} | partial_result_T [38:0] );
  assign partial_mant_abs_S = partial_result[39] ? _016__S : partial_result_S ;
  assign partial_result_R3 [39] = ( | (partial_mant_abs_R | ( partial_mant_abs_C & ( { 39{ partial_result[39] }} & _016__T | { 39{ !partial_result[39] }} & partial_result_T [38:0] )))) && _016_ != partial_result[38:0] ;
  logic [38:0] _016__C0 ;
  logic [38:0] _016__R0 ;
  logic [38:0] _016__X0 ;
  assign _016__C0 = { 39{ partial_result[39] }} ;
  assign _016__R0 = { 39{ partial_result[39] }} & ( partial_mant_abs_R | ( { 39{ partial_result_T  [39] }} & partial_mant_abs_C ));
  assign _016__X0 = { 39{ partial_result[39] }} & partial_mant_abs_X ;
  assign partial_result_C3 [38:0] = { 39{ !partial_result[39] }} ;
  assign partial_result_R3 [38:0] = { 39{ !partial_result[39] }} & ( partial_mant_abs_R | ( { 39{ partial_result_T  [39] }} & partial_mant_abs_C ));
  assign partial_result_X3 [38:0] = { 39{ !partial_result[39] }} & partial_mant_abs_X ;
  logic [22:0] fangyuan34;
  logic [22:0] fangyuan34_T ;
  logic [22:0] fangyuan34_R ;
  logic [22:0] fangyuan34_C ;
  logic [22:0] fangyuan34_X ;
  assign fangyuan34 = { 13'b0000000000000, partial_result[38:29] };
  assign fangyuan34_T = {  13'h0 , partial_result_T [38:29]  };
  logic [13:0] fangyuan34_S ;
  assign fangyuan34_S = 0 ;
  assign { partial_result_R3 [47:40] } = 0;
  assign { partial_result_X3 [47:40] } = 0;
  assign { partial_result_C3 [47:40] } = 0;
  logic [47:0] partial_result_R4 ;
  logic [47:0] partial_result_X4 ;
  logic [47:0] partial_result_C4 ;
  assign partial_result_R4 [38:29] = fangyuan34_R [9:0] ;
  assign partial_result_X4 [38:29] = fangyuan34_X [9:0] ;
  assign partial_result_C4 [38:29] = fangyuan34_C [9:0] ;

  assign fp32_mant_nmlz = partial_nan ? fangyuan34 : fp32_mant_nmlz_tmp;
  logic [0:0] partial_nan_C0 ;
  logic [0:0] partial_nan_R0 ;
  logic [0:0] partial_nan_X0 ;
  assign partial_nan_C0 = | fp32_mant_nmlz_C ;
  assign partial_nan_X0 = | fp32_mant_nmlz_X ;
  assign fp32_mant_nmlz_T = partial_nan ? ( { 23{ partial_nan_T  }} | fangyuan34_T ) : ( { 23{ partial_nan_T  }} | fp32_mant_nmlz_tmp_T );
  assign fp32_mant_nmlz_S = partial_nan ? fangyuan34_S : fp32_mant_nmlz_tmp_S ;
  assign partial_nan_R0 = ( | (fp32_mant_nmlz_R | ( fp32_mant_nmlz_C & ( { 23{ partial_nan }} & fangyuan34_T | { 23{ !partial_nan }} & fp32_mant_nmlz_tmp_T )))) && fangyuan34 != fp32_mant_nmlz_tmp ;
  logic [22:0] fangyuan34_C0 ;
  logic [22:0] fangyuan34_R0 ;
  logic [22:0] fangyuan34_X0 ;
  assign fangyuan34_C0 = { 23{ partial_nan }} ;
  assign fangyuan34_R0 = { 23{ partial_nan }} & ( fp32_mant_nmlz_R | ( { 23{ partial_nan_T  }} & fp32_mant_nmlz_C ));
  assign fangyuan34_X0 = { 23{ partial_nan }} & fp32_mant_nmlz_X ;
  logic [22:0] fp32_mant_nmlz_tmp_C0 ;
  logic [22:0] fp32_mant_nmlz_tmp_R0 ;
  logic [22:0] fp32_mant_nmlz_tmp_X0 ;
  assign fp32_mant_nmlz_tmp_C0 = { 23{ !partial_nan }} ;
  assign fp32_mant_nmlz_tmp_R0 = { 23{ !partial_nan }} & ( fp32_mant_nmlz_R | ( { 23{ partial_nan_T  }} & fp32_mant_nmlz_C ));
  assign fp32_mant_nmlz_tmp_X0 = { 23{ !partial_nan }} & fp32_mant_nmlz_X ;
  assign _055_ = partial_nan ? 8'b11111111 : fp32_expo_round;
  logic [0:0] partial_nan_C1 ;
  logic [0:0] partial_nan_R1 ;
  logic [0:0] partial_nan_X1 ;
  assign partial_nan_C1 = | _055__C ;
  assign partial_nan_X1 = | _055__X ;
  logic [7:0] fp32_expo_round_C0 ;
  logic [7:0] fp32_expo_round_R0 ;
  logic [7:0] fp32_expo_round_X0 ;
  assign fp32_expo_round_C0 = { 8{ !partial_nan }};
  assign fp32_expo_round_R0 = { 8{ !partial_nan }} & ( _055__R | ( { 8{ partial_nan_T  }} & _055__C ));
  assign fp32_expo_round_X0 = { 8{ !partial_nan }} & _055__X ;
  assign _055__T = partial_nan ? { 8{ | partial_nan_T  }} : ( { 8{ | partial_nan_T  }} | fp32_expo_round_T );
  assign _055__S = partial_nan ? partial_nan_S : fp32_expo_round_S ;
  assign partial_nan_R1 = ( | (_055__R | ( { 8{ !partial_nan }} & fp32_expo_round_T & _055__C ))) && 8'b11111111 != fp32_expo_round ;
  assign fp32_expo_nmlz = _048_ ? _055_ : 8'b00000000;
  logic [0:0] _048__C0 ;
  logic [0:0] _048__R0 ;
  logic [0:0] _048__X0 ;
  assign _048__C0 = | fp32_expo_nmlz_C ;
  assign _048__X0 = | fp32_expo_nmlz_X ;
  logic [7:0] _055__C0 ;
  logic [7:0] _055__R0 ;
  logic [7:0] _055__X0 ;
  assign _055__C0 = { 8{ _048_ }} ;
  assign _055__R0 = { 8{ _048_ }} & ( fp32_expo_nmlz_R | ( { 8{ _048__T  }} & fp32_expo_nmlz_C ));
  assign _055__X0 = { 8{ _048_ }} & fp32_expo_nmlz_X ;
  assign fp32_expo_nmlz_T = _048_ ? ( { 8{ | _048__T  }} | _055__T ) : { 8{ | _048__T  }};
  assign fp32_expo_nmlz_S = _048_ ? _055__S : _048__S ;
  assign _048__R0 = ( | (fp32_expo_nmlz_R | ( { 8{ _048_ }} & _055__T & fp32_expo_nmlz_C ))) && _055_ != 8'b00000000 ;
// module: \$paramod\NV_DW_lsd\a_width=36
  \$paramod\NV_DW_lsd\a_width=36 u0_dw_lsd (
    .a_T (  in_data_T [35:0]  ),
    .a_R (  in_data_R43 [35:0]  ),
    .a_X (  in_data_X43 [35:0]  ),
    .a_C (  in_data_C43 [35:0]  ),
    .a_S (  in_data_S [35:0]  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .rst_zy(rst_zy),
    .dec_T (),
    .dec_R0 (),
    .dec_X0 (),
    .dec_C0 (),
    .dec_S (),
    .enc_T (  di_lead_num_T  ),
    .enc_R0 (  di_lead_num_R  ),
    .enc_X0 (  di_lead_num_X  ),
    .enc_C0 (  di_lead_num_C  ),
    .enc_S ( di_lead_num_S ),
    .enc ( di_lead_num ),
    .a ( in_data[35:0] ),
    .dec (  )
  );
  assign { mant_sum_R2 [40:40] } = 0;
  assign { mant_sum_X2 [40:40] } = 0;
  assign { mant_sum_C2 [40:40] } = 0;
  logic [40:0] mant_sum_R3 ;
  logic [40:0] mant_sum_X3 ;
  logic [40:0] mant_sum_C3 ;
  logic [2:0] in_mant_cut_R3 ;
  logic [2:0] in_mant_cut_X3 ;
  logic [2:0] in_mant_cut_C3 ;
// module: \$paramod\NV_DW_lsd\a_width=44
  \$paramod\NV_DW_lsd\a_width=44 u1_dw_lsd (
    .a_T ( {  mant_sum_T , in_mant_cut_T  } ),
    .a_R ( {  mant_sum_R3 , in_mant_cut_R3  } ),
    .a_X ( {  mant_sum_X3 , in_mant_cut_X3  } ),
    .a_C ( {  mant_sum_C3 , in_mant_cut_C3  } ),
    .a_S ( {  mant_sum_S , in_mant_cut_S  } ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .rst_zy(rst_zy),
    .dec_T (),
    .dec_R0 (),
    .dec_X0 (),
    .dec_C0 (),
    .dec_S (),
    .enc_T (  msum_lead_num_T  ),
    .enc_R0 (  msum_lead_num_R  ),
    .enc_X0 (  msum_lead_num_X  ),
    .enc_C0 (  msum_lead_num_C  ),
    .enc_S ( msum_lead_num_S ),
    .enc ( msum_lead_num ),
    .a ( { mant_sum, in_mant_cut } ),
    .dec (  )
  );
  assign _023_[8:1] = 8'b00000000;
  assign _023__T [8:1] = 0 ;
  assign _023__S = 14'b1 ;
  assign _026_[7] = 1'b0;
  assign _026__T [7] = 0 ;
  assign _026__S = 14'b1 ;
  assign _049_[30:6] = { _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31], _049_[31] };
  assign _049__T [30:6] = {  _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31] , _049__T [31]  };
  logic [13:0] _049__S ;
  assign _049__S = 0 ;
  assign { _049__R26 [6], _049__R26 [7], _049__R26 [8], _049__R26 [9], _049__R26 [10], _049__R26 [11], _049__R26 [12], _049__R26 [13], _049__R26 [14], _049__R26 [15], _049__R26 [16], _049__R26 [17], _049__R26 [18], _049__R26 [19], _049__R26 [20], _049__R26 [21], _049__R26 [22], _049__R26 [23], _049__R26 [24], _049__R26 [25], _049__R26 [26], _049__R26 [27], _049__R26 [28], _049__R26 [29], _049__R26 [30] } = 0;
  assign { _049__X26 [6], _049__X26 [7], _049__X26 [8], _049__X26 [9], _049__X26 [10], _049__X26 [11], _049__X26 [12], _049__X26 [13], _049__X26 [14], _049__X26 [15], _049__X26 [16], _049__X26 [17], _049__X26 [18], _049__X26 [19], _049__X26 [20], _049__X26 [21], _049__X26 [22], _049__X26 [23], _049__X26 [24], _049__X26 [25], _049__X26 [26], _049__X26 [27], _049__X26 [28], _049__X26 [29], _049__X26 [30] } = 0;
  assign { _049__C26 [6], _049__C26 [7], _049__C26 [8], _049__C26 [9], _049__C26 [10], _049__C26 [11], _049__C26 [12], _049__C26 [13], _049__C26 [14], _049__C26 [15], _049__C26 [16], _049__C26 [17], _049__C26 [18], _049__C26 [19], _049__C26 [20], _049__C26 [21], _049__C26 [22], _049__C26 [23], _049__C26 [24], _049__C26 [25], _049__C26 [26], _049__C26 [27], _049__C26 [28], _049__C26 [29], _049__C26 [30] } = 0;
  logic [31:0] _049__R27 ;
  logic [31:0] _049__X27 ;
  logic [31:0] _049__C27 ;
  assign _049__R27 [31:31] = _049__R [30:30] ;
  assign _049__X27 [31:31] = _049__X [30:30] ;
  assign _049__C27 [31:31] = _049__C [30:30] ;
  assign { _049__R27 [0], _049__R27 [1], _049__R27 [2], _049__R27 [3], _049__R27 [4], _049__R27 [5], _049__R27 [6], _049__R27 [7], _049__R27 [8], _049__R27 [9], _049__R27 [10], _049__R27 [11], _049__R27 [12], _049__R27 [13], _049__R27 [14], _049__R27 [15], _049__R27 [16], _049__R27 [17], _049__R27 [18], _049__R27 [19], _049__R27 [20], _049__R27 [21], _049__R27 [22], _049__R27 [23], _049__R27 [24], _049__R27 [25], _049__R27 [26], _049__R27 [27], _049__R27 [28], _049__R27 [29], _049__R27 [30] } = 0;
  assign { _049__X27 [0], _049__X27 [1], _049__X27 [2], _049__X27 [3], _049__X27 [4], _049__X27 [5], _049__X27 [6], _049__X27 [7], _049__X27 [8], _049__X27 [9], _049__X27 [10], _049__X27 [11], _049__X27 [12], _049__X27 [13], _049__X27 [14], _049__X27 [15], _049__X27 [16], _049__X27 [17], _049__X27 [18], _049__X27 [19], _049__X27 [20], _049__X27 [21], _049__X27 [22], _049__X27 [23], _049__X27 [24], _049__X27 [25], _049__X27 [26], _049__X27 [27], _049__X27 [28], _049__X27 [29], _049__X27 [30] } = 0;
  assign { _049__C27 [0], _049__C27 [1], _049__C27 [2], _049__C27 [3], _049__C27 [4], _049__C27 [5], _049__C27 [6], _049__C27 [7], _049__C27 [8], _049__C27 [9], _049__C27 [10], _049__C27 [11], _049__C27 [12], _049__C27 [13], _049__C27 [14], _049__C27 [15], _049__C27 [16], _049__C27 [17], _049__C27 [18], _049__C27 [19], _049__C27 [20], _049__C27 [21], _049__C27 [22], _049__C27 [23], _049__C27 [24], _049__C27 [25], _049__C27 [26], _049__C27 [27], _049__C27 [28], _049__C27 [29], _049__C27 [30] } = 0;
  logic [31:0] _049__R28 ;
  logic [31:0] _049__X28 ;
  logic [31:0] _049__C28 ;
  assign _049__R28 [31:31] = _049__R [29:29] ;
  assign _049__X28 [31:31] = _049__X [29:29] ;
  assign _049__C28 [31:31] = _049__C [29:29] ;
  assign { _049__R28 [0], _049__R28 [1], _049__R28 [2], _049__R28 [3], _049__R28 [4], _049__R28 [5], _049__R28 [6], _049__R28 [7], _049__R28 [8], _049__R28 [9], _049__R28 [10], _049__R28 [11], _049__R28 [12], _049__R28 [13], _049__R28 [14], _049__R28 [15], _049__R28 [16], _049__R28 [17], _049__R28 [18], _049__R28 [19], _049__R28 [20], _049__R28 [21], _049__R28 [22], _049__R28 [23], _049__R28 [24], _049__R28 [25], _049__R28 [26], _049__R28 [27], _049__R28 [28], _049__R28 [29], _049__R28 [30] } = 0;
  assign { _049__X28 [0], _049__X28 [1], _049__X28 [2], _049__X28 [3], _049__X28 [4], _049__X28 [5], _049__X28 [6], _049__X28 [7], _049__X28 [8], _049__X28 [9], _049__X28 [10], _049__X28 [11], _049__X28 [12], _049__X28 [13], _049__X28 [14], _049__X28 [15], _049__X28 [16], _049__X28 [17], _049__X28 [18], _049__X28 [19], _049__X28 [20], _049__X28 [21], _049__X28 [22], _049__X28 [23], _049__X28 [24], _049__X28 [25], _049__X28 [26], _049__X28 [27], _049__X28 [28], _049__X28 [29], _049__X28 [30] } = 0;
  assign { _049__C28 [0], _049__C28 [1], _049__C28 [2], _049__C28 [3], _049__C28 [4], _049__C28 [5], _049__C28 [6], _049__C28 [7], _049__C28 [8], _049__C28 [9], _049__C28 [10], _049__C28 [11], _049__C28 [12], _049__C28 [13], _049__C28 [14], _049__C28 [15], _049__C28 [16], _049__C28 [17], _049__C28 [18], _049__C28 [19], _049__C28 [20], _049__C28 [21], _049__C28 [22], _049__C28 [23], _049__C28 [24], _049__C28 [25], _049__C28 [26], _049__C28 [27], _049__C28 [28], _049__C28 [29], _049__C28 [30] } = 0;
  logic [31:0] _049__R29 ;
  logic [31:0] _049__X29 ;
  logic [31:0] _049__C29 ;
  assign _049__R29 [31:31] = _049__R [28:28] ;
  assign _049__X29 [31:31] = _049__X [28:28] ;
  assign _049__C29 [31:31] = _049__C [28:28] ;
  assign { _049__R29 [0], _049__R29 [1], _049__R29 [2], _049__R29 [3], _049__R29 [4], _049__R29 [5], _049__R29 [6], _049__R29 [7], _049__R29 [8], _049__R29 [9], _049__R29 [10], _049__R29 [11], _049__R29 [12], _049__R29 [13], _049__R29 [14], _049__R29 [15], _049__R29 [16], _049__R29 [17], _049__R29 [18], _049__R29 [19], _049__R29 [20], _049__R29 [21], _049__R29 [22], _049__R29 [23], _049__R29 [24], _049__R29 [25], _049__R29 [26], _049__R29 [27], _049__R29 [28], _049__R29 [29], _049__R29 [30] } = 0;
  assign { _049__X29 [0], _049__X29 [1], _049__X29 [2], _049__X29 [3], _049__X29 [4], _049__X29 [5], _049__X29 [6], _049__X29 [7], _049__X29 [8], _049__X29 [9], _049__X29 [10], _049__X29 [11], _049__X29 [12], _049__X29 [13], _049__X29 [14], _049__X29 [15], _049__X29 [16], _049__X29 [17], _049__X29 [18], _049__X29 [19], _049__X29 [20], _049__X29 [21], _049__X29 [22], _049__X29 [23], _049__X29 [24], _049__X29 [25], _049__X29 [26], _049__X29 [27], _049__X29 [28], _049__X29 [29], _049__X29 [30] } = 0;
  assign { _049__C29 [0], _049__C29 [1], _049__C29 [2], _049__C29 [3], _049__C29 [4], _049__C29 [5], _049__C29 [6], _049__C29 [7], _049__C29 [8], _049__C29 [9], _049__C29 [10], _049__C29 [11], _049__C29 [12], _049__C29 [13], _049__C29 [14], _049__C29 [15], _049__C29 [16], _049__C29 [17], _049__C29 [18], _049__C29 [19], _049__C29 [20], _049__C29 [21], _049__C29 [22], _049__C29 [23], _049__C29 [24], _049__C29 [25], _049__C29 [26], _049__C29 [27], _049__C29 [28], _049__C29 [29], _049__C29 [30] } = 0;
  logic [31:0] _049__R30 ;
  logic [31:0] _049__X30 ;
  logic [31:0] _049__C30 ;
  assign _049__R30 [31:31] = _049__R [27:27] ;
  assign _049__X30 [31:31] = _049__X [27:27] ;
  assign _049__C30 [31:31] = _049__C [27:27] ;
  assign { _049__R30 [0], _049__R30 [1], _049__R30 [2], _049__R30 [3], _049__R30 [4], _049__R30 [5], _049__R30 [6], _049__R30 [7], _049__R30 [8], _049__R30 [9], _049__R30 [10], _049__R30 [11], _049__R30 [12], _049__R30 [13], _049__R30 [14], _049__R30 [15], _049__R30 [16], _049__R30 [17], _049__R30 [18], _049__R30 [19], _049__R30 [20], _049__R30 [21], _049__R30 [22], _049__R30 [23], _049__R30 [24], _049__R30 [25], _049__R30 [26], _049__R30 [27], _049__R30 [28], _049__R30 [29], _049__R30 [30] } = 0;
  assign { _049__X30 [0], _049__X30 [1], _049__X30 [2], _049__X30 [3], _049__X30 [4], _049__X30 [5], _049__X30 [6], _049__X30 [7], _049__X30 [8], _049__X30 [9], _049__X30 [10], _049__X30 [11], _049__X30 [12], _049__X30 [13], _049__X30 [14], _049__X30 [15], _049__X30 [16], _049__X30 [17], _049__X30 [18], _049__X30 [19], _049__X30 [20], _049__X30 [21], _049__X30 [22], _049__X30 [23], _049__X30 [24], _049__X30 [25], _049__X30 [26], _049__X30 [27], _049__X30 [28], _049__X30 [29], _049__X30 [30] } = 0;
  assign { _049__C30 [0], _049__C30 [1], _049__C30 [2], _049__C30 [3], _049__C30 [4], _049__C30 [5], _049__C30 [6], _049__C30 [7], _049__C30 [8], _049__C30 [9], _049__C30 [10], _049__C30 [11], _049__C30 [12], _049__C30 [13], _049__C30 [14], _049__C30 [15], _049__C30 [16], _049__C30 [17], _049__C30 [18], _049__C30 [19], _049__C30 [20], _049__C30 [21], _049__C30 [22], _049__C30 [23], _049__C30 [24], _049__C30 [25], _049__C30 [26], _049__C30 [27], _049__C30 [28], _049__C30 [29], _049__C30 [30] } = 0;
  logic [31:0] _049__R31 ;
  logic [31:0] _049__X31 ;
  logic [31:0] _049__C31 ;
  assign _049__R31 [31:31] = _049__R [26:26] ;
  assign _049__X31 [31:31] = _049__X [26:26] ;
  assign _049__C31 [31:31] = _049__C [26:26] ;
  assign { _049__R31 [0], _049__R31 [1], _049__R31 [2], _049__R31 [3], _049__R31 [4], _049__R31 [5], _049__R31 [6], _049__R31 [7], _049__R31 [8], _049__R31 [9], _049__R31 [10], _049__R31 [11], _049__R31 [12], _049__R31 [13], _049__R31 [14], _049__R31 [15], _049__R31 [16], _049__R31 [17], _049__R31 [18], _049__R31 [19], _049__R31 [20], _049__R31 [21], _049__R31 [22], _049__R31 [23], _049__R31 [24], _049__R31 [25], _049__R31 [26], _049__R31 [27], _049__R31 [28], _049__R31 [29], _049__R31 [30] } = 0;
  assign { _049__X31 [0], _049__X31 [1], _049__X31 [2], _049__X31 [3], _049__X31 [4], _049__X31 [5], _049__X31 [6], _049__X31 [7], _049__X31 [8], _049__X31 [9], _049__X31 [10], _049__X31 [11], _049__X31 [12], _049__X31 [13], _049__X31 [14], _049__X31 [15], _049__X31 [16], _049__X31 [17], _049__X31 [18], _049__X31 [19], _049__X31 [20], _049__X31 [21], _049__X31 [22], _049__X31 [23], _049__X31 [24], _049__X31 [25], _049__X31 [26], _049__X31 [27], _049__X31 [28], _049__X31 [29], _049__X31 [30] } = 0;
  assign { _049__C31 [0], _049__C31 [1], _049__C31 [2], _049__C31 [3], _049__C31 [4], _049__C31 [5], _049__C31 [6], _049__C31 [7], _049__C31 [8], _049__C31 [9], _049__C31 [10], _049__C31 [11], _049__C31 [12], _049__C31 [13], _049__C31 [14], _049__C31 [15], _049__C31 [16], _049__C31 [17], _049__C31 [18], _049__C31 [19], _049__C31 [20], _049__C31 [21], _049__C31 [22], _049__C31 [23], _049__C31 [24], _049__C31 [25], _049__C31 [26], _049__C31 [27], _049__C31 [28], _049__C31 [29], _049__C31 [30] } = 0;
  logic [31:0] _049__R32 ;
  logic [31:0] _049__X32 ;
  logic [31:0] _049__C32 ;
  assign _049__R32 [31:31] = _049__R [25:25] ;
  assign _049__X32 [31:31] = _049__X [25:25] ;
  assign _049__C32 [31:31] = _049__C [25:25] ;
  assign { _049__R32 [0], _049__R32 [1], _049__R32 [2], _049__R32 [3], _049__R32 [4], _049__R32 [5], _049__R32 [6], _049__R32 [7], _049__R32 [8], _049__R32 [9], _049__R32 [10], _049__R32 [11], _049__R32 [12], _049__R32 [13], _049__R32 [14], _049__R32 [15], _049__R32 [16], _049__R32 [17], _049__R32 [18], _049__R32 [19], _049__R32 [20], _049__R32 [21], _049__R32 [22], _049__R32 [23], _049__R32 [24], _049__R32 [25], _049__R32 [26], _049__R32 [27], _049__R32 [28], _049__R32 [29], _049__R32 [30] } = 0;
  assign { _049__X32 [0], _049__X32 [1], _049__X32 [2], _049__X32 [3], _049__X32 [4], _049__X32 [5], _049__X32 [6], _049__X32 [7], _049__X32 [8], _049__X32 [9], _049__X32 [10], _049__X32 [11], _049__X32 [12], _049__X32 [13], _049__X32 [14], _049__X32 [15], _049__X32 [16], _049__X32 [17], _049__X32 [18], _049__X32 [19], _049__X32 [20], _049__X32 [21], _049__X32 [22], _049__X32 [23], _049__X32 [24], _049__X32 [25], _049__X32 [26], _049__X32 [27], _049__X32 [28], _049__X32 [29], _049__X32 [30] } = 0;
  assign { _049__C32 [0], _049__C32 [1], _049__C32 [2], _049__C32 [3], _049__C32 [4], _049__C32 [5], _049__C32 [6], _049__C32 [7], _049__C32 [8], _049__C32 [9], _049__C32 [10], _049__C32 [11], _049__C32 [12], _049__C32 [13], _049__C32 [14], _049__C32 [15], _049__C32 [16], _049__C32 [17], _049__C32 [18], _049__C32 [19], _049__C32 [20], _049__C32 [21], _049__C32 [22], _049__C32 [23], _049__C32 [24], _049__C32 [25], _049__C32 [26], _049__C32 [27], _049__C32 [28], _049__C32 [29], _049__C32 [30] } = 0;
  logic [31:0] _049__R33 ;
  logic [31:0] _049__X33 ;
  logic [31:0] _049__C33 ;
  assign _049__R33 [31:31] = _049__R [24:24] ;
  assign _049__X33 [31:31] = _049__X [24:24] ;
  assign _049__C33 [31:31] = _049__C [24:24] ;
  assign { _049__R33 [0], _049__R33 [1], _049__R33 [2], _049__R33 [3], _049__R33 [4], _049__R33 [5], _049__R33 [6], _049__R33 [7], _049__R33 [8], _049__R33 [9], _049__R33 [10], _049__R33 [11], _049__R33 [12], _049__R33 [13], _049__R33 [14], _049__R33 [15], _049__R33 [16], _049__R33 [17], _049__R33 [18], _049__R33 [19], _049__R33 [20], _049__R33 [21], _049__R33 [22], _049__R33 [23], _049__R33 [24], _049__R33 [25], _049__R33 [26], _049__R33 [27], _049__R33 [28], _049__R33 [29], _049__R33 [30] } = 0;
  assign { _049__X33 [0], _049__X33 [1], _049__X33 [2], _049__X33 [3], _049__X33 [4], _049__X33 [5], _049__X33 [6], _049__X33 [7], _049__X33 [8], _049__X33 [9], _049__X33 [10], _049__X33 [11], _049__X33 [12], _049__X33 [13], _049__X33 [14], _049__X33 [15], _049__X33 [16], _049__X33 [17], _049__X33 [18], _049__X33 [19], _049__X33 [20], _049__X33 [21], _049__X33 [22], _049__X33 [23], _049__X33 [24], _049__X33 [25], _049__X33 [26], _049__X33 [27], _049__X33 [28], _049__X33 [29], _049__X33 [30] } = 0;
  assign { _049__C33 [0], _049__C33 [1], _049__C33 [2], _049__C33 [3], _049__C33 [4], _049__C33 [5], _049__C33 [6], _049__C33 [7], _049__C33 [8], _049__C33 [9], _049__C33 [10], _049__C33 [11], _049__C33 [12], _049__C33 [13], _049__C33 [14], _049__C33 [15], _049__C33 [16], _049__C33 [17], _049__C33 [18], _049__C33 [19], _049__C33 [20], _049__C33 [21], _049__C33 [22], _049__C33 [23], _049__C33 [24], _049__C33 [25], _049__C33 [26], _049__C33 [27], _049__C33 [28], _049__C33 [29], _049__C33 [30] } = 0;
  logic [31:0] _049__R34 ;
  logic [31:0] _049__X34 ;
  logic [31:0] _049__C34 ;
  assign _049__R34 [31:31] = _049__R [23:23] ;
  assign _049__X34 [31:31] = _049__X [23:23] ;
  assign _049__C34 [31:31] = _049__C [23:23] ;
  assign { _049__R34 [0], _049__R34 [1], _049__R34 [2], _049__R34 [3], _049__R34 [4], _049__R34 [5], _049__R34 [6], _049__R34 [7], _049__R34 [8], _049__R34 [9], _049__R34 [10], _049__R34 [11], _049__R34 [12], _049__R34 [13], _049__R34 [14], _049__R34 [15], _049__R34 [16], _049__R34 [17], _049__R34 [18], _049__R34 [19], _049__R34 [20], _049__R34 [21], _049__R34 [22], _049__R34 [23], _049__R34 [24], _049__R34 [25], _049__R34 [26], _049__R34 [27], _049__R34 [28], _049__R34 [29], _049__R34 [30] } = 0;
  assign { _049__X34 [0], _049__X34 [1], _049__X34 [2], _049__X34 [3], _049__X34 [4], _049__X34 [5], _049__X34 [6], _049__X34 [7], _049__X34 [8], _049__X34 [9], _049__X34 [10], _049__X34 [11], _049__X34 [12], _049__X34 [13], _049__X34 [14], _049__X34 [15], _049__X34 [16], _049__X34 [17], _049__X34 [18], _049__X34 [19], _049__X34 [20], _049__X34 [21], _049__X34 [22], _049__X34 [23], _049__X34 [24], _049__X34 [25], _049__X34 [26], _049__X34 [27], _049__X34 [28], _049__X34 [29], _049__X34 [30] } = 0;
  assign { _049__C34 [0], _049__C34 [1], _049__C34 [2], _049__C34 [3], _049__C34 [4], _049__C34 [5], _049__C34 [6], _049__C34 [7], _049__C34 [8], _049__C34 [9], _049__C34 [10], _049__C34 [11], _049__C34 [12], _049__C34 [13], _049__C34 [14], _049__C34 [15], _049__C34 [16], _049__C34 [17], _049__C34 [18], _049__C34 [19], _049__C34 [20], _049__C34 [21], _049__C34 [22], _049__C34 [23], _049__C34 [24], _049__C34 [25], _049__C34 [26], _049__C34 [27], _049__C34 [28], _049__C34 [29], _049__C34 [30] } = 0;
  logic [31:0] _049__R35 ;
  logic [31:0] _049__X35 ;
  logic [31:0] _049__C35 ;
  assign _049__R35 [31:31] = _049__R [22:22] ;
  assign _049__X35 [31:31] = _049__X [22:22] ;
  assign _049__C35 [31:31] = _049__C [22:22] ;
  assign { _049__R35 [0], _049__R35 [1], _049__R35 [2], _049__R35 [3], _049__R35 [4], _049__R35 [5], _049__R35 [6], _049__R35 [7], _049__R35 [8], _049__R35 [9], _049__R35 [10], _049__R35 [11], _049__R35 [12], _049__R35 [13], _049__R35 [14], _049__R35 [15], _049__R35 [16], _049__R35 [17], _049__R35 [18], _049__R35 [19], _049__R35 [20], _049__R35 [21], _049__R35 [22], _049__R35 [23], _049__R35 [24], _049__R35 [25], _049__R35 [26], _049__R35 [27], _049__R35 [28], _049__R35 [29], _049__R35 [30] } = 0;
  assign { _049__X35 [0], _049__X35 [1], _049__X35 [2], _049__X35 [3], _049__X35 [4], _049__X35 [5], _049__X35 [6], _049__X35 [7], _049__X35 [8], _049__X35 [9], _049__X35 [10], _049__X35 [11], _049__X35 [12], _049__X35 [13], _049__X35 [14], _049__X35 [15], _049__X35 [16], _049__X35 [17], _049__X35 [18], _049__X35 [19], _049__X35 [20], _049__X35 [21], _049__X35 [22], _049__X35 [23], _049__X35 [24], _049__X35 [25], _049__X35 [26], _049__X35 [27], _049__X35 [28], _049__X35 [29], _049__X35 [30] } = 0;
  assign { _049__C35 [0], _049__C35 [1], _049__C35 [2], _049__C35 [3], _049__C35 [4], _049__C35 [5], _049__C35 [6], _049__C35 [7], _049__C35 [8], _049__C35 [9], _049__C35 [10], _049__C35 [11], _049__C35 [12], _049__C35 [13], _049__C35 [14], _049__C35 [15], _049__C35 [16], _049__C35 [17], _049__C35 [18], _049__C35 [19], _049__C35 [20], _049__C35 [21], _049__C35 [22], _049__C35 [23], _049__C35 [24], _049__C35 [25], _049__C35 [26], _049__C35 [27], _049__C35 [28], _049__C35 [29], _049__C35 [30] } = 0;
  logic [31:0] _049__R36 ;
  logic [31:0] _049__X36 ;
  logic [31:0] _049__C36 ;
  assign _049__R36 [31:31] = _049__R [21:21] ;
  assign _049__X36 [31:31] = _049__X [21:21] ;
  assign _049__C36 [31:31] = _049__C [21:21] ;
  assign { _049__R36 [0], _049__R36 [1], _049__R36 [2], _049__R36 [3], _049__R36 [4], _049__R36 [5], _049__R36 [6], _049__R36 [7], _049__R36 [8], _049__R36 [9], _049__R36 [10], _049__R36 [11], _049__R36 [12], _049__R36 [13], _049__R36 [14], _049__R36 [15], _049__R36 [16], _049__R36 [17], _049__R36 [18], _049__R36 [19], _049__R36 [20], _049__R36 [21], _049__R36 [22], _049__R36 [23], _049__R36 [24], _049__R36 [25], _049__R36 [26], _049__R36 [27], _049__R36 [28], _049__R36 [29], _049__R36 [30] } = 0;
  assign { _049__X36 [0], _049__X36 [1], _049__X36 [2], _049__X36 [3], _049__X36 [4], _049__X36 [5], _049__X36 [6], _049__X36 [7], _049__X36 [8], _049__X36 [9], _049__X36 [10], _049__X36 [11], _049__X36 [12], _049__X36 [13], _049__X36 [14], _049__X36 [15], _049__X36 [16], _049__X36 [17], _049__X36 [18], _049__X36 [19], _049__X36 [20], _049__X36 [21], _049__X36 [22], _049__X36 [23], _049__X36 [24], _049__X36 [25], _049__X36 [26], _049__X36 [27], _049__X36 [28], _049__X36 [29], _049__X36 [30] } = 0;
  assign { _049__C36 [0], _049__C36 [1], _049__C36 [2], _049__C36 [3], _049__C36 [4], _049__C36 [5], _049__C36 [6], _049__C36 [7], _049__C36 [8], _049__C36 [9], _049__C36 [10], _049__C36 [11], _049__C36 [12], _049__C36 [13], _049__C36 [14], _049__C36 [15], _049__C36 [16], _049__C36 [17], _049__C36 [18], _049__C36 [19], _049__C36 [20], _049__C36 [21], _049__C36 [22], _049__C36 [23], _049__C36 [24], _049__C36 [25], _049__C36 [26], _049__C36 [27], _049__C36 [28], _049__C36 [29], _049__C36 [30] } = 0;
  logic [31:0] _049__R37 ;
  logic [31:0] _049__X37 ;
  logic [31:0] _049__C37 ;
  assign _049__R37 [31:31] = _049__R [20:20] ;
  assign _049__X37 [31:31] = _049__X [20:20] ;
  assign _049__C37 [31:31] = _049__C [20:20] ;
  assign { _049__R37 [0], _049__R37 [1], _049__R37 [2], _049__R37 [3], _049__R37 [4], _049__R37 [5], _049__R37 [6], _049__R37 [7], _049__R37 [8], _049__R37 [9], _049__R37 [10], _049__R37 [11], _049__R37 [12], _049__R37 [13], _049__R37 [14], _049__R37 [15], _049__R37 [16], _049__R37 [17], _049__R37 [18], _049__R37 [19], _049__R37 [20], _049__R37 [21], _049__R37 [22], _049__R37 [23], _049__R37 [24], _049__R37 [25], _049__R37 [26], _049__R37 [27], _049__R37 [28], _049__R37 [29], _049__R37 [30] } = 0;
  assign { _049__X37 [0], _049__X37 [1], _049__X37 [2], _049__X37 [3], _049__X37 [4], _049__X37 [5], _049__X37 [6], _049__X37 [7], _049__X37 [8], _049__X37 [9], _049__X37 [10], _049__X37 [11], _049__X37 [12], _049__X37 [13], _049__X37 [14], _049__X37 [15], _049__X37 [16], _049__X37 [17], _049__X37 [18], _049__X37 [19], _049__X37 [20], _049__X37 [21], _049__X37 [22], _049__X37 [23], _049__X37 [24], _049__X37 [25], _049__X37 [26], _049__X37 [27], _049__X37 [28], _049__X37 [29], _049__X37 [30] } = 0;
  assign { _049__C37 [0], _049__C37 [1], _049__C37 [2], _049__C37 [3], _049__C37 [4], _049__C37 [5], _049__C37 [6], _049__C37 [7], _049__C37 [8], _049__C37 [9], _049__C37 [10], _049__C37 [11], _049__C37 [12], _049__C37 [13], _049__C37 [14], _049__C37 [15], _049__C37 [16], _049__C37 [17], _049__C37 [18], _049__C37 [19], _049__C37 [20], _049__C37 [21], _049__C37 [22], _049__C37 [23], _049__C37 [24], _049__C37 [25], _049__C37 [26], _049__C37 [27], _049__C37 [28], _049__C37 [29], _049__C37 [30] } = 0;
  logic [31:0] _049__R38 ;
  logic [31:0] _049__X38 ;
  logic [31:0] _049__C38 ;
  assign _049__R38 [31:31] = _049__R [19:19] ;
  assign _049__X38 [31:31] = _049__X [19:19] ;
  assign _049__C38 [31:31] = _049__C [19:19] ;
  assign { _049__R38 [0], _049__R38 [1], _049__R38 [2], _049__R38 [3], _049__R38 [4], _049__R38 [5], _049__R38 [6], _049__R38 [7], _049__R38 [8], _049__R38 [9], _049__R38 [10], _049__R38 [11], _049__R38 [12], _049__R38 [13], _049__R38 [14], _049__R38 [15], _049__R38 [16], _049__R38 [17], _049__R38 [18], _049__R38 [19], _049__R38 [20], _049__R38 [21], _049__R38 [22], _049__R38 [23], _049__R38 [24], _049__R38 [25], _049__R38 [26], _049__R38 [27], _049__R38 [28], _049__R38 [29], _049__R38 [30] } = 0;
  assign { _049__X38 [0], _049__X38 [1], _049__X38 [2], _049__X38 [3], _049__X38 [4], _049__X38 [5], _049__X38 [6], _049__X38 [7], _049__X38 [8], _049__X38 [9], _049__X38 [10], _049__X38 [11], _049__X38 [12], _049__X38 [13], _049__X38 [14], _049__X38 [15], _049__X38 [16], _049__X38 [17], _049__X38 [18], _049__X38 [19], _049__X38 [20], _049__X38 [21], _049__X38 [22], _049__X38 [23], _049__X38 [24], _049__X38 [25], _049__X38 [26], _049__X38 [27], _049__X38 [28], _049__X38 [29], _049__X38 [30] } = 0;
  assign { _049__C38 [0], _049__C38 [1], _049__C38 [2], _049__C38 [3], _049__C38 [4], _049__C38 [5], _049__C38 [6], _049__C38 [7], _049__C38 [8], _049__C38 [9], _049__C38 [10], _049__C38 [11], _049__C38 [12], _049__C38 [13], _049__C38 [14], _049__C38 [15], _049__C38 [16], _049__C38 [17], _049__C38 [18], _049__C38 [19], _049__C38 [20], _049__C38 [21], _049__C38 [22], _049__C38 [23], _049__C38 [24], _049__C38 [25], _049__C38 [26], _049__C38 [27], _049__C38 [28], _049__C38 [29], _049__C38 [30] } = 0;
  logic [31:0] _049__R39 ;
  logic [31:0] _049__X39 ;
  logic [31:0] _049__C39 ;
  assign _049__R39 [31:31] = _049__R [18:18] ;
  assign _049__X39 [31:31] = _049__X [18:18] ;
  assign _049__C39 [31:31] = _049__C [18:18] ;
  assign { _049__R39 [0], _049__R39 [1], _049__R39 [2], _049__R39 [3], _049__R39 [4], _049__R39 [5], _049__R39 [6], _049__R39 [7], _049__R39 [8], _049__R39 [9], _049__R39 [10], _049__R39 [11], _049__R39 [12], _049__R39 [13], _049__R39 [14], _049__R39 [15], _049__R39 [16], _049__R39 [17], _049__R39 [18], _049__R39 [19], _049__R39 [20], _049__R39 [21], _049__R39 [22], _049__R39 [23], _049__R39 [24], _049__R39 [25], _049__R39 [26], _049__R39 [27], _049__R39 [28], _049__R39 [29], _049__R39 [30] } = 0;
  assign { _049__X39 [0], _049__X39 [1], _049__X39 [2], _049__X39 [3], _049__X39 [4], _049__X39 [5], _049__X39 [6], _049__X39 [7], _049__X39 [8], _049__X39 [9], _049__X39 [10], _049__X39 [11], _049__X39 [12], _049__X39 [13], _049__X39 [14], _049__X39 [15], _049__X39 [16], _049__X39 [17], _049__X39 [18], _049__X39 [19], _049__X39 [20], _049__X39 [21], _049__X39 [22], _049__X39 [23], _049__X39 [24], _049__X39 [25], _049__X39 [26], _049__X39 [27], _049__X39 [28], _049__X39 [29], _049__X39 [30] } = 0;
  assign { _049__C39 [0], _049__C39 [1], _049__C39 [2], _049__C39 [3], _049__C39 [4], _049__C39 [5], _049__C39 [6], _049__C39 [7], _049__C39 [8], _049__C39 [9], _049__C39 [10], _049__C39 [11], _049__C39 [12], _049__C39 [13], _049__C39 [14], _049__C39 [15], _049__C39 [16], _049__C39 [17], _049__C39 [18], _049__C39 [19], _049__C39 [20], _049__C39 [21], _049__C39 [22], _049__C39 [23], _049__C39 [24], _049__C39 [25], _049__C39 [26], _049__C39 [27], _049__C39 [28], _049__C39 [29], _049__C39 [30] } = 0;
  logic [31:0] _049__R40 ;
  logic [31:0] _049__X40 ;
  logic [31:0] _049__C40 ;
  assign _049__R40 [31:31] = _049__R [17:17] ;
  assign _049__X40 [31:31] = _049__X [17:17] ;
  assign _049__C40 [31:31] = _049__C [17:17] ;
  assign { _049__R40 [0], _049__R40 [1], _049__R40 [2], _049__R40 [3], _049__R40 [4], _049__R40 [5], _049__R40 [6], _049__R40 [7], _049__R40 [8], _049__R40 [9], _049__R40 [10], _049__R40 [11], _049__R40 [12], _049__R40 [13], _049__R40 [14], _049__R40 [15], _049__R40 [16], _049__R40 [17], _049__R40 [18], _049__R40 [19], _049__R40 [20], _049__R40 [21], _049__R40 [22], _049__R40 [23], _049__R40 [24], _049__R40 [25], _049__R40 [26], _049__R40 [27], _049__R40 [28], _049__R40 [29], _049__R40 [30] } = 0;
  assign { _049__X40 [0], _049__X40 [1], _049__X40 [2], _049__X40 [3], _049__X40 [4], _049__X40 [5], _049__X40 [6], _049__X40 [7], _049__X40 [8], _049__X40 [9], _049__X40 [10], _049__X40 [11], _049__X40 [12], _049__X40 [13], _049__X40 [14], _049__X40 [15], _049__X40 [16], _049__X40 [17], _049__X40 [18], _049__X40 [19], _049__X40 [20], _049__X40 [21], _049__X40 [22], _049__X40 [23], _049__X40 [24], _049__X40 [25], _049__X40 [26], _049__X40 [27], _049__X40 [28], _049__X40 [29], _049__X40 [30] } = 0;
  assign { _049__C40 [0], _049__C40 [1], _049__C40 [2], _049__C40 [3], _049__C40 [4], _049__C40 [5], _049__C40 [6], _049__C40 [7], _049__C40 [8], _049__C40 [9], _049__C40 [10], _049__C40 [11], _049__C40 [12], _049__C40 [13], _049__C40 [14], _049__C40 [15], _049__C40 [16], _049__C40 [17], _049__C40 [18], _049__C40 [19], _049__C40 [20], _049__C40 [21], _049__C40 [22], _049__C40 [23], _049__C40 [24], _049__C40 [25], _049__C40 [26], _049__C40 [27], _049__C40 [28], _049__C40 [29], _049__C40 [30] } = 0;
  logic [31:0] _049__R41 ;
  logic [31:0] _049__X41 ;
  logic [31:0] _049__C41 ;
  assign _049__R41 [31:31] = _049__R [16:16] ;
  assign _049__X41 [31:31] = _049__X [16:16] ;
  assign _049__C41 [31:31] = _049__C [16:16] ;
  assign { _049__R41 [0], _049__R41 [1], _049__R41 [2], _049__R41 [3], _049__R41 [4], _049__R41 [5], _049__R41 [6], _049__R41 [7], _049__R41 [8], _049__R41 [9], _049__R41 [10], _049__R41 [11], _049__R41 [12], _049__R41 [13], _049__R41 [14], _049__R41 [15], _049__R41 [16], _049__R41 [17], _049__R41 [18], _049__R41 [19], _049__R41 [20], _049__R41 [21], _049__R41 [22], _049__R41 [23], _049__R41 [24], _049__R41 [25], _049__R41 [26], _049__R41 [27], _049__R41 [28], _049__R41 [29], _049__R41 [30] } = 0;
  assign { _049__X41 [0], _049__X41 [1], _049__X41 [2], _049__X41 [3], _049__X41 [4], _049__X41 [5], _049__X41 [6], _049__X41 [7], _049__X41 [8], _049__X41 [9], _049__X41 [10], _049__X41 [11], _049__X41 [12], _049__X41 [13], _049__X41 [14], _049__X41 [15], _049__X41 [16], _049__X41 [17], _049__X41 [18], _049__X41 [19], _049__X41 [20], _049__X41 [21], _049__X41 [22], _049__X41 [23], _049__X41 [24], _049__X41 [25], _049__X41 [26], _049__X41 [27], _049__X41 [28], _049__X41 [29], _049__X41 [30] } = 0;
  assign { _049__C41 [0], _049__C41 [1], _049__C41 [2], _049__C41 [3], _049__C41 [4], _049__C41 [5], _049__C41 [6], _049__C41 [7], _049__C41 [8], _049__C41 [9], _049__C41 [10], _049__C41 [11], _049__C41 [12], _049__C41 [13], _049__C41 [14], _049__C41 [15], _049__C41 [16], _049__C41 [17], _049__C41 [18], _049__C41 [19], _049__C41 [20], _049__C41 [21], _049__C41 [22], _049__C41 [23], _049__C41 [24], _049__C41 [25], _049__C41 [26], _049__C41 [27], _049__C41 [28], _049__C41 [29], _049__C41 [30] } = 0;
  logic [31:0] _049__R42 ;
  logic [31:0] _049__X42 ;
  logic [31:0] _049__C42 ;
  assign _049__R42 [31:31] = _049__R [15:15] ;
  assign _049__X42 [31:31] = _049__X [15:15] ;
  assign _049__C42 [31:31] = _049__C [15:15] ;
  assign { _049__R42 [0], _049__R42 [1], _049__R42 [2], _049__R42 [3], _049__R42 [4], _049__R42 [5], _049__R42 [6], _049__R42 [7], _049__R42 [8], _049__R42 [9], _049__R42 [10], _049__R42 [11], _049__R42 [12], _049__R42 [13], _049__R42 [14], _049__R42 [15], _049__R42 [16], _049__R42 [17], _049__R42 [18], _049__R42 [19], _049__R42 [20], _049__R42 [21], _049__R42 [22], _049__R42 [23], _049__R42 [24], _049__R42 [25], _049__R42 [26], _049__R42 [27], _049__R42 [28], _049__R42 [29], _049__R42 [30] } = 0;
  assign { _049__X42 [0], _049__X42 [1], _049__X42 [2], _049__X42 [3], _049__X42 [4], _049__X42 [5], _049__X42 [6], _049__X42 [7], _049__X42 [8], _049__X42 [9], _049__X42 [10], _049__X42 [11], _049__X42 [12], _049__X42 [13], _049__X42 [14], _049__X42 [15], _049__X42 [16], _049__X42 [17], _049__X42 [18], _049__X42 [19], _049__X42 [20], _049__X42 [21], _049__X42 [22], _049__X42 [23], _049__X42 [24], _049__X42 [25], _049__X42 [26], _049__X42 [27], _049__X42 [28], _049__X42 [29], _049__X42 [30] } = 0;
  assign { _049__C42 [0], _049__C42 [1], _049__C42 [2], _049__C42 [3], _049__C42 [4], _049__C42 [5], _049__C42 [6], _049__C42 [7], _049__C42 [8], _049__C42 [9], _049__C42 [10], _049__C42 [11], _049__C42 [12], _049__C42 [13], _049__C42 [14], _049__C42 [15], _049__C42 [16], _049__C42 [17], _049__C42 [18], _049__C42 [19], _049__C42 [20], _049__C42 [21], _049__C42 [22], _049__C42 [23], _049__C42 [24], _049__C42 [25], _049__C42 [26], _049__C42 [27], _049__C42 [28], _049__C42 [29], _049__C42 [30] } = 0;
  logic [31:0] _049__R43 ;
  logic [31:0] _049__X43 ;
  logic [31:0] _049__C43 ;
  assign _049__R43 [31:31] = _049__R [14:14] ;
  assign _049__X43 [31:31] = _049__X [14:14] ;
  assign _049__C43 [31:31] = _049__C [14:14] ;
  assign { _049__R43 [0], _049__R43 [1], _049__R43 [2], _049__R43 [3], _049__R43 [4], _049__R43 [5], _049__R43 [6], _049__R43 [7], _049__R43 [8], _049__R43 [9], _049__R43 [10], _049__R43 [11], _049__R43 [12], _049__R43 [13], _049__R43 [14], _049__R43 [15], _049__R43 [16], _049__R43 [17], _049__R43 [18], _049__R43 [19], _049__R43 [20], _049__R43 [21], _049__R43 [22], _049__R43 [23], _049__R43 [24], _049__R43 [25], _049__R43 [26], _049__R43 [27], _049__R43 [28], _049__R43 [29], _049__R43 [30] } = 0;
  assign { _049__X43 [0], _049__X43 [1], _049__X43 [2], _049__X43 [3], _049__X43 [4], _049__X43 [5], _049__X43 [6], _049__X43 [7], _049__X43 [8], _049__X43 [9], _049__X43 [10], _049__X43 [11], _049__X43 [12], _049__X43 [13], _049__X43 [14], _049__X43 [15], _049__X43 [16], _049__X43 [17], _049__X43 [18], _049__X43 [19], _049__X43 [20], _049__X43 [21], _049__X43 [22], _049__X43 [23], _049__X43 [24], _049__X43 [25], _049__X43 [26], _049__X43 [27], _049__X43 [28], _049__X43 [29], _049__X43 [30] } = 0;
  assign { _049__C43 [0], _049__C43 [1], _049__C43 [2], _049__C43 [3], _049__C43 [4], _049__C43 [5], _049__C43 [6], _049__C43 [7], _049__C43 [8], _049__C43 [9], _049__C43 [10], _049__C43 [11], _049__C43 [12], _049__C43 [13], _049__C43 [14], _049__C43 [15], _049__C43 [16], _049__C43 [17], _049__C43 [18], _049__C43 [19], _049__C43 [20], _049__C43 [21], _049__C43 [22], _049__C43 [23], _049__C43 [24], _049__C43 [25], _049__C43 [26], _049__C43 [27], _049__C43 [28], _049__C43 [29], _049__C43 [30] } = 0;
  logic [31:0] _049__R44 ;
  logic [31:0] _049__X44 ;
  logic [31:0] _049__C44 ;
  assign _049__R44 [31:31] = _049__R [13:13] ;
  assign _049__X44 [31:31] = _049__X [13:13] ;
  assign _049__C44 [31:31] = _049__C [13:13] ;
  assign { _049__R44 [0], _049__R44 [1], _049__R44 [2], _049__R44 [3], _049__R44 [4], _049__R44 [5], _049__R44 [6], _049__R44 [7], _049__R44 [8], _049__R44 [9], _049__R44 [10], _049__R44 [11], _049__R44 [12], _049__R44 [13], _049__R44 [14], _049__R44 [15], _049__R44 [16], _049__R44 [17], _049__R44 [18], _049__R44 [19], _049__R44 [20], _049__R44 [21], _049__R44 [22], _049__R44 [23], _049__R44 [24], _049__R44 [25], _049__R44 [26], _049__R44 [27], _049__R44 [28], _049__R44 [29], _049__R44 [30] } = 0;
  assign { _049__X44 [0], _049__X44 [1], _049__X44 [2], _049__X44 [3], _049__X44 [4], _049__X44 [5], _049__X44 [6], _049__X44 [7], _049__X44 [8], _049__X44 [9], _049__X44 [10], _049__X44 [11], _049__X44 [12], _049__X44 [13], _049__X44 [14], _049__X44 [15], _049__X44 [16], _049__X44 [17], _049__X44 [18], _049__X44 [19], _049__X44 [20], _049__X44 [21], _049__X44 [22], _049__X44 [23], _049__X44 [24], _049__X44 [25], _049__X44 [26], _049__X44 [27], _049__X44 [28], _049__X44 [29], _049__X44 [30] } = 0;
  assign { _049__C44 [0], _049__C44 [1], _049__C44 [2], _049__C44 [3], _049__C44 [4], _049__C44 [5], _049__C44 [6], _049__C44 [7], _049__C44 [8], _049__C44 [9], _049__C44 [10], _049__C44 [11], _049__C44 [12], _049__C44 [13], _049__C44 [14], _049__C44 [15], _049__C44 [16], _049__C44 [17], _049__C44 [18], _049__C44 [19], _049__C44 [20], _049__C44 [21], _049__C44 [22], _049__C44 [23], _049__C44 [24], _049__C44 [25], _049__C44 [26], _049__C44 [27], _049__C44 [28], _049__C44 [29], _049__C44 [30] } = 0;
  logic [31:0] _049__R45 ;
  logic [31:0] _049__X45 ;
  logic [31:0] _049__C45 ;
  assign _049__R45 [31:31] = _049__R [12:12] ;
  assign _049__X45 [31:31] = _049__X [12:12] ;
  assign _049__C45 [31:31] = _049__C [12:12] ;
  assign { _049__R45 [0], _049__R45 [1], _049__R45 [2], _049__R45 [3], _049__R45 [4], _049__R45 [5], _049__R45 [6], _049__R45 [7], _049__R45 [8], _049__R45 [9], _049__R45 [10], _049__R45 [11], _049__R45 [12], _049__R45 [13], _049__R45 [14], _049__R45 [15], _049__R45 [16], _049__R45 [17], _049__R45 [18], _049__R45 [19], _049__R45 [20], _049__R45 [21], _049__R45 [22], _049__R45 [23], _049__R45 [24], _049__R45 [25], _049__R45 [26], _049__R45 [27], _049__R45 [28], _049__R45 [29], _049__R45 [30] } = 0;
  assign { _049__X45 [0], _049__X45 [1], _049__X45 [2], _049__X45 [3], _049__X45 [4], _049__X45 [5], _049__X45 [6], _049__X45 [7], _049__X45 [8], _049__X45 [9], _049__X45 [10], _049__X45 [11], _049__X45 [12], _049__X45 [13], _049__X45 [14], _049__X45 [15], _049__X45 [16], _049__X45 [17], _049__X45 [18], _049__X45 [19], _049__X45 [20], _049__X45 [21], _049__X45 [22], _049__X45 [23], _049__X45 [24], _049__X45 [25], _049__X45 [26], _049__X45 [27], _049__X45 [28], _049__X45 [29], _049__X45 [30] } = 0;
  assign { _049__C45 [0], _049__C45 [1], _049__C45 [2], _049__C45 [3], _049__C45 [4], _049__C45 [5], _049__C45 [6], _049__C45 [7], _049__C45 [8], _049__C45 [9], _049__C45 [10], _049__C45 [11], _049__C45 [12], _049__C45 [13], _049__C45 [14], _049__C45 [15], _049__C45 [16], _049__C45 [17], _049__C45 [18], _049__C45 [19], _049__C45 [20], _049__C45 [21], _049__C45 [22], _049__C45 [23], _049__C45 [24], _049__C45 [25], _049__C45 [26], _049__C45 [27], _049__C45 [28], _049__C45 [29], _049__C45 [30] } = 0;
  logic [31:0] _049__R46 ;
  logic [31:0] _049__X46 ;
  logic [31:0] _049__C46 ;
  assign _049__R46 [31:31] = _049__R [11:11] ;
  assign _049__X46 [31:31] = _049__X [11:11] ;
  assign _049__C46 [31:31] = _049__C [11:11] ;
  assign { _049__R46 [0], _049__R46 [1], _049__R46 [2], _049__R46 [3], _049__R46 [4], _049__R46 [5], _049__R46 [6], _049__R46 [7], _049__R46 [8], _049__R46 [9], _049__R46 [10], _049__R46 [11], _049__R46 [12], _049__R46 [13], _049__R46 [14], _049__R46 [15], _049__R46 [16], _049__R46 [17], _049__R46 [18], _049__R46 [19], _049__R46 [20], _049__R46 [21], _049__R46 [22], _049__R46 [23], _049__R46 [24], _049__R46 [25], _049__R46 [26], _049__R46 [27], _049__R46 [28], _049__R46 [29], _049__R46 [30] } = 0;
  assign { _049__X46 [0], _049__X46 [1], _049__X46 [2], _049__X46 [3], _049__X46 [4], _049__X46 [5], _049__X46 [6], _049__X46 [7], _049__X46 [8], _049__X46 [9], _049__X46 [10], _049__X46 [11], _049__X46 [12], _049__X46 [13], _049__X46 [14], _049__X46 [15], _049__X46 [16], _049__X46 [17], _049__X46 [18], _049__X46 [19], _049__X46 [20], _049__X46 [21], _049__X46 [22], _049__X46 [23], _049__X46 [24], _049__X46 [25], _049__X46 [26], _049__X46 [27], _049__X46 [28], _049__X46 [29], _049__X46 [30] } = 0;
  assign { _049__C46 [0], _049__C46 [1], _049__C46 [2], _049__C46 [3], _049__C46 [4], _049__C46 [5], _049__C46 [6], _049__C46 [7], _049__C46 [8], _049__C46 [9], _049__C46 [10], _049__C46 [11], _049__C46 [12], _049__C46 [13], _049__C46 [14], _049__C46 [15], _049__C46 [16], _049__C46 [17], _049__C46 [18], _049__C46 [19], _049__C46 [20], _049__C46 [21], _049__C46 [22], _049__C46 [23], _049__C46 [24], _049__C46 [25], _049__C46 [26], _049__C46 [27], _049__C46 [28], _049__C46 [29], _049__C46 [30] } = 0;
  logic [31:0] _049__R47 ;
  logic [31:0] _049__X47 ;
  logic [31:0] _049__C47 ;
  assign _049__R47 [31:31] = _049__R [10:10] ;
  assign _049__X47 [31:31] = _049__X [10:10] ;
  assign _049__C47 [31:31] = _049__C [10:10] ;
  assign { _049__R47 [0], _049__R47 [1], _049__R47 [2], _049__R47 [3], _049__R47 [4], _049__R47 [5], _049__R47 [6], _049__R47 [7], _049__R47 [8], _049__R47 [9], _049__R47 [10], _049__R47 [11], _049__R47 [12], _049__R47 [13], _049__R47 [14], _049__R47 [15], _049__R47 [16], _049__R47 [17], _049__R47 [18], _049__R47 [19], _049__R47 [20], _049__R47 [21], _049__R47 [22], _049__R47 [23], _049__R47 [24], _049__R47 [25], _049__R47 [26], _049__R47 [27], _049__R47 [28], _049__R47 [29], _049__R47 [30] } = 0;
  assign { _049__X47 [0], _049__X47 [1], _049__X47 [2], _049__X47 [3], _049__X47 [4], _049__X47 [5], _049__X47 [6], _049__X47 [7], _049__X47 [8], _049__X47 [9], _049__X47 [10], _049__X47 [11], _049__X47 [12], _049__X47 [13], _049__X47 [14], _049__X47 [15], _049__X47 [16], _049__X47 [17], _049__X47 [18], _049__X47 [19], _049__X47 [20], _049__X47 [21], _049__X47 [22], _049__X47 [23], _049__X47 [24], _049__X47 [25], _049__X47 [26], _049__X47 [27], _049__X47 [28], _049__X47 [29], _049__X47 [30] } = 0;
  assign { _049__C47 [0], _049__C47 [1], _049__C47 [2], _049__C47 [3], _049__C47 [4], _049__C47 [5], _049__C47 [6], _049__C47 [7], _049__C47 [8], _049__C47 [9], _049__C47 [10], _049__C47 [11], _049__C47 [12], _049__C47 [13], _049__C47 [14], _049__C47 [15], _049__C47 [16], _049__C47 [17], _049__C47 [18], _049__C47 [19], _049__C47 [20], _049__C47 [21], _049__C47 [22], _049__C47 [23], _049__C47 [24], _049__C47 [25], _049__C47 [26], _049__C47 [27], _049__C47 [28], _049__C47 [29], _049__C47 [30] } = 0;
  logic [31:0] _049__R48 ;
  logic [31:0] _049__X48 ;
  logic [31:0] _049__C48 ;
  assign _049__R48 [31:31] = _049__R [9:9] ;
  assign _049__X48 [31:31] = _049__X [9:9] ;
  assign _049__C48 [31:31] = _049__C [9:9] ;
  assign { _049__R48 [0], _049__R48 [1], _049__R48 [2], _049__R48 [3], _049__R48 [4], _049__R48 [5], _049__R48 [6], _049__R48 [7], _049__R48 [8], _049__R48 [9], _049__R48 [10], _049__R48 [11], _049__R48 [12], _049__R48 [13], _049__R48 [14], _049__R48 [15], _049__R48 [16], _049__R48 [17], _049__R48 [18], _049__R48 [19], _049__R48 [20], _049__R48 [21], _049__R48 [22], _049__R48 [23], _049__R48 [24], _049__R48 [25], _049__R48 [26], _049__R48 [27], _049__R48 [28], _049__R48 [29], _049__R48 [30] } = 0;
  assign { _049__X48 [0], _049__X48 [1], _049__X48 [2], _049__X48 [3], _049__X48 [4], _049__X48 [5], _049__X48 [6], _049__X48 [7], _049__X48 [8], _049__X48 [9], _049__X48 [10], _049__X48 [11], _049__X48 [12], _049__X48 [13], _049__X48 [14], _049__X48 [15], _049__X48 [16], _049__X48 [17], _049__X48 [18], _049__X48 [19], _049__X48 [20], _049__X48 [21], _049__X48 [22], _049__X48 [23], _049__X48 [24], _049__X48 [25], _049__X48 [26], _049__X48 [27], _049__X48 [28], _049__X48 [29], _049__X48 [30] } = 0;
  assign { _049__C48 [0], _049__C48 [1], _049__C48 [2], _049__C48 [3], _049__C48 [4], _049__C48 [5], _049__C48 [6], _049__C48 [7], _049__C48 [8], _049__C48 [9], _049__C48 [10], _049__C48 [11], _049__C48 [12], _049__C48 [13], _049__C48 [14], _049__C48 [15], _049__C48 [16], _049__C48 [17], _049__C48 [18], _049__C48 [19], _049__C48 [20], _049__C48 [21], _049__C48 [22], _049__C48 [23], _049__C48 [24], _049__C48 [25], _049__C48 [26], _049__C48 [27], _049__C48 [28], _049__C48 [29], _049__C48 [30] } = 0;
  logic [31:0] _049__R49 ;
  logic [31:0] _049__X49 ;
  logic [31:0] _049__C49 ;
  assign _049__R49 [31:31] = _049__R [8:8] ;
  assign _049__X49 [31:31] = _049__X [8:8] ;
  assign _049__C49 [31:31] = _049__C [8:8] ;
  assign { _049__R49 [0], _049__R49 [1], _049__R49 [2], _049__R49 [3], _049__R49 [4], _049__R49 [5], _049__R49 [6], _049__R49 [7], _049__R49 [8], _049__R49 [9], _049__R49 [10], _049__R49 [11], _049__R49 [12], _049__R49 [13], _049__R49 [14], _049__R49 [15], _049__R49 [16], _049__R49 [17], _049__R49 [18], _049__R49 [19], _049__R49 [20], _049__R49 [21], _049__R49 [22], _049__R49 [23], _049__R49 [24], _049__R49 [25], _049__R49 [26], _049__R49 [27], _049__R49 [28], _049__R49 [29], _049__R49 [30] } = 0;
  assign { _049__X49 [0], _049__X49 [1], _049__X49 [2], _049__X49 [3], _049__X49 [4], _049__X49 [5], _049__X49 [6], _049__X49 [7], _049__X49 [8], _049__X49 [9], _049__X49 [10], _049__X49 [11], _049__X49 [12], _049__X49 [13], _049__X49 [14], _049__X49 [15], _049__X49 [16], _049__X49 [17], _049__X49 [18], _049__X49 [19], _049__X49 [20], _049__X49 [21], _049__X49 [22], _049__X49 [23], _049__X49 [24], _049__X49 [25], _049__X49 [26], _049__X49 [27], _049__X49 [28], _049__X49 [29], _049__X49 [30] } = 0;
  assign { _049__C49 [0], _049__C49 [1], _049__C49 [2], _049__C49 [3], _049__C49 [4], _049__C49 [5], _049__C49 [6], _049__C49 [7], _049__C49 [8], _049__C49 [9], _049__C49 [10], _049__C49 [11], _049__C49 [12], _049__C49 [13], _049__C49 [14], _049__C49 [15], _049__C49 [16], _049__C49 [17], _049__C49 [18], _049__C49 [19], _049__C49 [20], _049__C49 [21], _049__C49 [22], _049__C49 [23], _049__C49 [24], _049__C49 [25], _049__C49 [26], _049__C49 [27], _049__C49 [28], _049__C49 [29], _049__C49 [30] } = 0;
  logic [31:0] _049__R50 ;
  logic [31:0] _049__X50 ;
  logic [31:0] _049__C50 ;
  assign _049__R50 [31:31] = _049__R [7:7] ;
  assign _049__X50 [31:31] = _049__X [7:7] ;
  assign _049__C50 [31:31] = _049__C [7:7] ;
  assign { _049__R50 [0], _049__R50 [1], _049__R50 [2], _049__R50 [3], _049__R50 [4], _049__R50 [5], _049__R50 [6], _049__R50 [7], _049__R50 [8], _049__R50 [9], _049__R50 [10], _049__R50 [11], _049__R50 [12], _049__R50 [13], _049__R50 [14], _049__R50 [15], _049__R50 [16], _049__R50 [17], _049__R50 [18], _049__R50 [19], _049__R50 [20], _049__R50 [21], _049__R50 [22], _049__R50 [23], _049__R50 [24], _049__R50 [25], _049__R50 [26], _049__R50 [27], _049__R50 [28], _049__R50 [29], _049__R50 [30] } = 0;
  assign { _049__X50 [0], _049__X50 [1], _049__X50 [2], _049__X50 [3], _049__X50 [4], _049__X50 [5], _049__X50 [6], _049__X50 [7], _049__X50 [8], _049__X50 [9], _049__X50 [10], _049__X50 [11], _049__X50 [12], _049__X50 [13], _049__X50 [14], _049__X50 [15], _049__X50 [16], _049__X50 [17], _049__X50 [18], _049__X50 [19], _049__X50 [20], _049__X50 [21], _049__X50 [22], _049__X50 [23], _049__X50 [24], _049__X50 [25], _049__X50 [26], _049__X50 [27], _049__X50 [28], _049__X50 [29], _049__X50 [30] } = 0;
  assign { _049__C50 [0], _049__C50 [1], _049__C50 [2], _049__C50 [3], _049__C50 [4], _049__C50 [5], _049__C50 [6], _049__C50 [7], _049__C50 [8], _049__C50 [9], _049__C50 [10], _049__C50 [11], _049__C50 [12], _049__C50 [13], _049__C50 [14], _049__C50 [15], _049__C50 [16], _049__C50 [17], _049__C50 [18], _049__C50 [19], _049__C50 [20], _049__C50 [21], _049__C50 [22], _049__C50 [23], _049__C50 [24], _049__C50 [25], _049__C50 [26], _049__C50 [27], _049__C50 [28], _049__C50 [29], _049__C50 [30] } = 0;
  logic [31:0] _049__R51 ;
  logic [31:0] _049__X51 ;
  logic [31:0] _049__C51 ;
  assign _049__R51 [31:31] = _049__R [6:6] ;
  assign _049__X51 [31:31] = _049__X [6:6] ;
  assign _049__C51 [31:31] = _049__C [6:6] ;
  assign di_expn = in_data[43:38];
  assign di_expn_T = in_data_T [43:38] ;
  assign in_data_C43 [43:38] = di_expn_C ;
  assign in_data_R43 [43:38] = di_expn_R ;
  assign in_data_X43 [43:38] = di_expn_X ;
  assign di_expn_S = in_data_S ;
  assign di_mant = in_data[35:0];
  assign { in_data_R43 [36] } = 0;
  assign { in_data_X43 [36] } = 0;
  assign { in_data_C43 [36] } = 0;
  logic [43:0] in_data_C44 ;
  logic [43:0] in_data_R44 ;
  logic [43:0] in_data_X44 ;
  assign di_mant_T = in_data_T [35:0] ;
  assign in_data_C44 [35:0] = di_mant_C ;
  assign in_data_R44 [35:0] = di_mant_R ;
  assign in_data_X44 [35:0] = di_mant_X ;
  assign di_mant_S = in_data_S ;
  assign di_mant_cutt[39:38] = di_mant_cut[2:1];
  logic [2:0] di_mant_cut_C2 ;
  logic [2:0] di_mant_cut_R2 ;
  logic [2:0] di_mant_cut_X2 ;
  assign di_mant_cutt_T [39:38] = di_mant_cut_T [2:1] ;
  assign di_mant_cut_C2 [2:1] = di_mant_cutt_C [39:38] ;
  assign di_mant_cut_R2 [2:1] = di_mant_cutt_R [39:38] ;
  assign di_mant_cut_X2 [2:1] = di_mant_cutt_X [39:38] ;
  assign di_mant_cutt_S = di_mant_cut_S ;
  assign di_mant_ext = { di_mans, 4'b0000 };
  assign di_mant_ext_T = {  di_mans_T , 4'h0  };
  logic [13:0] di_mant_ext_S ;
  assign di_mant_ext_S = 0 ;
  logic [35:0] di_mans_R1 ;
  logic [35:0] di_mans_X1 ;
  logic [35:0] di_mans_C1 ;
  assign di_mans_R1 = di_mant_ext_R [39:4] ;
  assign di_mans_X1 = di_mant_ext_X [39:4] ;
  assign di_mans_C1 = di_mant_ext_C [39:4] ;
  assign di_mant_pre = in_data[37:0];
  assign { in_data_R44 [43:36] } = 0;
  assign { in_data_X44 [43:36] } = 0;
  assign { in_data_C44 [43:36] } = 0;
  logic [43:0] in_data_C45 ;
  logic [43:0] in_data_R45 ;
  logic [43:0] in_data_X45 ;
  assign di_mant_pre_T = in_data_T [37:0] ;
  assign in_data_C45 [37:0] = di_mant_pre_C ;
  assign in_data_R45 [37:0] = di_mant_pre_R ;
  assign in_data_X45 [37:0] = di_mant_pre_X ;
  assign di_mant_pre_S = in_data_S ;
  assign di_pd = in_data;
  assign { in_data_R45 [43:38] } = 0;
  assign { in_data_X45 [43:38] } = 0;
  assign { in_data_C45 [43:38] } = 0;
  logic [43:0] in_data_C46 ;
  logic [43:0] in_data_R46 ;
  logic [43:0] in_data_X46 ;
  assign di_pd_T = in_data_T ;
  assign in_data_C46 = di_pd_C ;
  assign in_data_R46 = di_pd_R ;
  assign in_data_X46 = di_pd_X ;
  assign di_pd_S = in_data_S ;
  assign di_sign = in_data[37];
  logic [43:0] in_data_C47 ;
  logic [43:0] in_data_R47 ;
  logic [43:0] in_data_X47 ;
  assign di_sign_T = in_data_T [37] ;
  assign in_data_C47 [37] = di_sign_C ;
  assign in_data_R47 [37] = di_sign_R ;
  assign in_data_X47 [37] = di_sign_X ;
  assign di_sign_S = in_data_S ;
  assign fp32_expo_raw = partial_result[47:40];
  assign fp32_expo_raw_T = partial_result_T [47:40] ;
  assign partial_result_C4 [47:40] = fp32_expo_raw_C ;
  assign partial_result_R4 [47:40] = fp32_expo_raw_R ;
  assign partial_result_X4 [47:40] = fp32_expo_raw_X ;
  assign fp32_expo_raw_S = partial_result_S ;
  assign fp32_mant_cut = partial_mant_abs[14:0];
  assign { partial_mant_abs_R1 [0], partial_mant_abs_R1 [1], partial_mant_abs_R1 [2], partial_mant_abs_R1 [3], partial_mant_abs_R1 [4], partial_mant_abs_R1 [5], partial_mant_abs_R1 [6], partial_mant_abs_R1 [7], partial_mant_abs_R1 [8], partial_mant_abs_R1 [9], partial_mant_abs_R1 [10], partial_mant_abs_R1 [11], partial_mant_abs_R1 [12], partial_mant_abs_R1 [13] } = 0;
  assign { partial_mant_abs_X1 [0], partial_mant_abs_X1 [1], partial_mant_abs_X1 [2], partial_mant_abs_X1 [3], partial_mant_abs_X1 [4], partial_mant_abs_X1 [5], partial_mant_abs_X1 [6], partial_mant_abs_X1 [7], partial_mant_abs_X1 [8], partial_mant_abs_X1 [9], partial_mant_abs_X1 [10], partial_mant_abs_X1 [11], partial_mant_abs_X1 [12], partial_mant_abs_X1 [13] } = 0;
  assign { partial_mant_abs_C1 [0], partial_mant_abs_C1 [1], partial_mant_abs_C1 [2], partial_mant_abs_C1 [3], partial_mant_abs_C1 [4], partial_mant_abs_C1 [5], partial_mant_abs_C1 [6], partial_mant_abs_C1 [7], partial_mant_abs_C1 [8], partial_mant_abs_C1 [9], partial_mant_abs_C1 [10], partial_mant_abs_C1 [11], partial_mant_abs_C1 [12], partial_mant_abs_C1 [13] } = 0;
  logic [38:0] partial_mant_abs_C2 ;
  logic [38:0] partial_mant_abs_R2 ;
  logic [38:0] partial_mant_abs_X2 ;
  assign fp32_mant_cut_T = partial_mant_abs_T [14:0] ;
  assign partial_mant_abs_C2 [14:0] = fp32_mant_cut_C ;
  assign partial_mant_abs_R2 [14:0] = fp32_mant_cut_R ;
  assign partial_mant_abs_X2 [14:0] = fp32_mant_cut_X ;
  assign fp32_mant_cut_S = partial_mant_abs_S ;
  assign fp32_mant_effect = partial_mant_abs[38:15];
  assign fp32_mant_effect_T = partial_mant_abs_T [38:15] ;
  assign partial_mant_abs_C2 [38:15] = fp32_mant_effect_C ;
  assign partial_mant_abs_R2 [38:15] = fp32_mant_effect_R ;
  assign partial_mant_abs_X2 [38:15] = fp32_mant_effect_X ;
  assign fp32_mant_effect_S = partial_mant_abs_S ;
  assign fp32_mant_point5 = partial_mant_abs[14];
  logic [38:0] partial_mant_abs_C3 ;
  logic [38:0] partial_mant_abs_R3 ;
  logic [38:0] partial_mant_abs_X3 ;
  assign fp32_mant_point5_T = partial_mant_abs_T [14] ;
  assign partial_mant_abs_C3 [14] = fp32_mant_point5_C ;
  assign partial_mant_abs_R3 [14] = fp32_mant_point5_R ;
  assign partial_mant_abs_X3 [14] = fp32_mant_point5_X ;
  assign fp32_mant_point5_S = partial_mant_abs_S ;
  assign fp32_result = { partial_result[39], fp32_expo_nmlz, fp32_mant_nmlz };
  assign fp32_result_T = {  partial_result_T [39] , fp32_expo_nmlz_T , fp32_mant_nmlz_T  };
  logic [13:0] fp32_result_S ;
  assign fp32_result_S = 0 ;
  assign partial_result_R4 [39:39] = fp32_result_R [31:31] ;
  assign partial_result_X4 [39:39] = fp32_result_X [31:31] ;
  assign partial_result_C4 [39:39] = fp32_result_C [31:31] ;
  logic [7:0] fp32_expo_nmlz_R1 ;
  logic [7:0] fp32_expo_nmlz_X1 ;
  logic [7:0] fp32_expo_nmlz_C1 ;
  assign fp32_expo_nmlz_R1 = fp32_result_R [30:23] ;
  assign fp32_expo_nmlz_X1 = fp32_result_X [30:23] ;
  assign fp32_expo_nmlz_C1 = fp32_result_C [30:23] ;
  logic [22:0] fp32_mant_nmlz_R1 ;
  logic [22:0] fp32_mant_nmlz_X1 ;
  logic [22:0] fp32_mant_nmlz_C1 ;
  assign fp32_mant_nmlz_R1 = fp32_result_R [22:0] ;
  assign fp32_mant_nmlz_X1 = fp32_result_X [22:0] ;
  assign fp32_mant_nmlz_C1 = fp32_result_C [22:0] ;
  assign mant_sum_comp = { mant_sum, in_mant_cut, 1'b0 };
  assign mant_sum_comp_T = {  mant_sum_T , in_mant_cut_T , 1'h0  };
  logic [13:0] mant_sum_comp_S ;
  assign mant_sum_comp_S = 0 ;
  logic [40:0] mant_sum_R4 ;
  logic [40:0] mant_sum_X4 ;
  logic [40:0] mant_sum_C4 ;
  assign mant_sum_R4 = mant_sum_comp_R [44:4] ;
  assign mant_sum_X4 = mant_sum_comp_X [44:4] ;
  assign mant_sum_C4 = mant_sum_comp_C [44:4] ;
  logic [2:0] in_mant_cut_R4 ;
  logic [2:0] in_mant_cut_X4 ;
  logic [2:0] in_mant_cut_C4 ;
  assign in_mant_cut_R4 = mant_sum_comp_R [3:1] ;
  assign in_mant_cut_X4 = mant_sum_comp_X [3:1] ;
  assign in_mant_cut_C4 = mant_sum_comp_C [3:1] ;
  assign mant_sum_effect = mant_sum_trans[41:2];
  assign { mant_sum_trans_R5 [0], mant_sum_trans_R5 [1], mant_sum_trans_R5 [41:40] } = 0;
  assign { mant_sum_trans_X5 [0], mant_sum_trans_X5 [1], mant_sum_trans_X5 [41:40] } = 0;
  assign { mant_sum_trans_C5 [0], mant_sum_trans_C5 [1], mant_sum_trans_C5 [41:40] } = 0;
  logic [41:0] mant_sum_trans_C6 ;
  logic [41:0] mant_sum_trans_R6 ;
  logic [41:0] mant_sum_trans_X6 ;
  assign mant_sum_effect_T = mant_sum_trans_T [41:2] ;
  assign mant_sum_trans_C6 [41:2] = mant_sum_effect_C ;
  assign mant_sum_trans_R6 [41:2] = mant_sum_effect_R ;
  assign mant_sum_trans_X6 [41:2] = mant_sum_effect_X ;
  assign mant_sum_effect_S = mant_sum_trans_S ;
  assign mant_sum_guard = mant_sum_trans[1];
  assign mant_sum_guard_T = mant_sum_trans_T [1] ;
  assign mant_sum_trans_C6 [1] = mant_sum_guard_C ;
  assign mant_sum_trans_R6 [1] = mant_sum_guard_R ;
  assign mant_sum_trans_X6 [1] = mant_sum_guard_X ;
  assign mant_sum_guard_S = mant_sum_trans_S ;
  assign mant_sum_sign = mant_sum_trans[41];
  assign { mant_sum_trans_R6 [0] } = 0;
  assign { mant_sum_trans_X6 [0] } = 0;
  assign { mant_sum_trans_C6 [0] } = 0;
  logic [41:0] mant_sum_trans_C7 ;
  logic [41:0] mant_sum_trans_R7 ;
  logic [41:0] mant_sum_trans_X7 ;
  assign mant_sum_sign_T = mant_sum_trans_T [41] ;
  assign mant_sum_trans_C7 [41] = mant_sum_sign_C ;
  assign mant_sum_trans_R7 [41] = mant_sum_sign_R ;
  assign mant_sum_trans_X7 [41] = mant_sum_sign_X ;
  assign mant_sum_sign_S = mant_sum_trans_S ;
  assign mant_sum_stick = mant_sum_trans[0];
  assign mant_sum_stick_T = mant_sum_trans_T [0] ;
  assign mant_sum_trans_C7 [0] = mant_sum_stick_C ;
  assign mant_sum_trans_R7 [0] = mant_sum_stick_R ;
  assign mant_sum_trans_X7 [0] = mant_sum_stick_X ;
  assign mant_sum_stick_S = mant_sum_trans_S ;
  assign mant_sum_total = { mant_sum, in_mant_cut };
  assign mant_sum_total_T = {  mant_sum_T , in_mant_cut_T  };
  logic [13:0] mant_sum_total_S ;
  assign mant_sum_total_S = 0 ;
  logic [40:0] mant_sum_R5 ;
  logic [40:0] mant_sum_X5 ;
  logic [40:0] mant_sum_C5 ;
  assign mant_sum_R5 = mant_sum_total_R [43:3] ;
  assign mant_sum_X5 = mant_sum_total_X [43:3] ;
  assign mant_sum_C5 = mant_sum_total_C [43:3] ;
  logic [2:0] in_mant_cut_R5 ;
  logic [2:0] in_mant_cut_X5 ;
  logic [2:0] in_mant_cut_C5 ;
  assign in_mant_cut_R5 = mant_sum_total_R [2:0] ;
  assign in_mant_cut_X5 = mant_sum_total_X [2:0] ;
  assign in_mant_cut_C5 = mant_sum_total_C [2:0] ;
  assign oi_expn = in_mask_op[47:40];
  assign oi_expn_T = in_mask_op_T [47:40] ;
  assign in_mask_op_C42 [47:40] = oi_expn_C ;
  assign in_mask_op_R42 [47:40] = oi_expn_R ;
  assign in_mask_op_X42 [47:40] = oi_expn_X ;
  assign oi_expn_S = in_mask_op_S ;
  assign oi_mans = oi_mant_ext;
  logic [39:0] oi_mant_ext_C1 ;
  logic [39:0] oi_mant_ext_R1 ;
  logic [39:0] oi_mant_ext_X1 ;
  assign oi_mans_T = oi_mant_ext_T ;
  assign oi_mant_ext_C1 = oi_mans_C ;
  assign oi_mant_ext_R1 = oi_mans_R ;
  assign oi_mant_ext_X1 = oi_mans_X ;
  assign oi_mans_S = oi_mant_ext_S ;
  assign oi_mant = in_mask_op[39:0];
  assign { in_mask_op_R42 [0], in_mask_op_R42 [1], in_mask_op_R42 [2], in_mask_op_R42 [3], in_mask_op_R42 [4], in_mask_op_R42 [5], in_mask_op_R42 [6], in_mask_op_R42 [7], in_mask_op_R42 [8], in_mask_op_R42 [9], in_mask_op_R42 [10], in_mask_op_R42 [11], in_mask_op_R42 [12], in_mask_op_R42 [13], in_mask_op_R42 [14], in_mask_op_R42 [15], in_mask_op_R42 [16], in_mask_op_R42 [17], in_mask_op_R42 [18], in_mask_op_R42 [19], in_mask_op_R42 [20], in_mask_op_R42 [21], in_mask_op_R42 [22], in_mask_op_R42 [23], in_mask_op_R42 [24], in_mask_op_R42 [25], in_mask_op_R42 [26], in_mask_op_R42 [27], in_mask_op_R42 [28], in_mask_op_R42 [29], in_mask_op_R42 [30], in_mask_op_R42 [31], in_mask_op_R42 [32], in_mask_op_R42 [33], in_mask_op_R42 [34], in_mask_op_R42 [35], in_mask_op_R42 [36], in_mask_op_R42 [37], in_mask_op_R42 [38] } = 0;
  assign { in_mask_op_X42 [0], in_mask_op_X42 [1], in_mask_op_X42 [2], in_mask_op_X42 [3], in_mask_op_X42 [4], in_mask_op_X42 [5], in_mask_op_X42 [6], in_mask_op_X42 [7], in_mask_op_X42 [8], in_mask_op_X42 [9], in_mask_op_X42 [10], in_mask_op_X42 [11], in_mask_op_X42 [12], in_mask_op_X42 [13], in_mask_op_X42 [14], in_mask_op_X42 [15], in_mask_op_X42 [16], in_mask_op_X42 [17], in_mask_op_X42 [18], in_mask_op_X42 [19], in_mask_op_X42 [20], in_mask_op_X42 [21], in_mask_op_X42 [22], in_mask_op_X42 [23], in_mask_op_X42 [24], in_mask_op_X42 [25], in_mask_op_X42 [26], in_mask_op_X42 [27], in_mask_op_X42 [28], in_mask_op_X42 [29], in_mask_op_X42 [30], in_mask_op_X42 [31], in_mask_op_X42 [32], in_mask_op_X42 [33], in_mask_op_X42 [34], in_mask_op_X42 [35], in_mask_op_X42 [36], in_mask_op_X42 [37], in_mask_op_X42 [38] } = 0;
  assign { in_mask_op_C42 [0], in_mask_op_C42 [1], in_mask_op_C42 [2], in_mask_op_C42 [3], in_mask_op_C42 [4], in_mask_op_C42 [5], in_mask_op_C42 [6], in_mask_op_C42 [7], in_mask_op_C42 [8], in_mask_op_C42 [9], in_mask_op_C42 [10], in_mask_op_C42 [11], in_mask_op_C42 [12], in_mask_op_C42 [13], in_mask_op_C42 [14], in_mask_op_C42 [15], in_mask_op_C42 [16], in_mask_op_C42 [17], in_mask_op_C42 [18], in_mask_op_C42 [19], in_mask_op_C42 [20], in_mask_op_C42 [21], in_mask_op_C42 [22], in_mask_op_C42 [23], in_mask_op_C42 [24], in_mask_op_C42 [25], in_mask_op_C42 [26], in_mask_op_C42 [27], in_mask_op_C42 [28], in_mask_op_C42 [29], in_mask_op_C42 [30], in_mask_op_C42 [31], in_mask_op_C42 [32], in_mask_op_C42 [33], in_mask_op_C42 [34], in_mask_op_C42 [35], in_mask_op_C42 [36], in_mask_op_C42 [37], in_mask_op_C42 [38] } = 0;
  logic [47:0] in_mask_op_C43 ;
  logic [47:0] in_mask_op_R43 ;
  logic [47:0] in_mask_op_X43 ;
  assign oi_mant_T = in_mask_op_T [39:0] ;
  assign in_mask_op_C43 [39:0] = oi_mant_C ;
  assign in_mask_op_R43 [39:0] = oi_mant_R ;
  assign in_mask_op_X43 [39:0] = oi_mant_X ;
  assign oi_mant_S = in_mask_op_S ;
  assign oi_mant_cutt[39:38] = oi_mant_cut[2:1];
  logic [2:0] oi_mant_cut_C2 ;
  logic [2:0] oi_mant_cut_R2 ;
  logic [2:0] oi_mant_cut_X2 ;
  assign oi_mant_cutt_T [39:38] = oi_mant_cut_T [2:1] ;
  assign oi_mant_cut_C2 [2:1] = oi_mant_cutt_C [39:38] ;
  assign oi_mant_cut_R2 [2:1] = oi_mant_cutt_R [39:38] ;
  assign oi_mant_cut_X2 [2:1] = oi_mant_cutt_X [39:38] ;
  assign oi_mant_cutt_S = oi_mant_cut_S ;
  assign oi_pd = in_mask_op;
  assign { in_mask_op_R43 [47:40] } = 0;
  assign { in_mask_op_X43 [47:40] } = 0;
  assign { in_mask_op_C43 [47:40] } = 0;
  logic [47:0] in_mask_op_C44 ;
  logic [47:0] in_mask_op_R44 ;
  logic [47:0] in_mask_op_X44 ;
  assign oi_pd_T = in_mask_op_T ;
  assign in_mask_op_C44 = oi_pd_C ;
  assign in_mask_op_R44 = oi_pd_R ;
  assign in_mask_op_X44 = oi_pd_X ;
  assign oi_pd_S = in_mask_op_S ;
  assign oi_sign = in_mask_op[39];
  logic [47:0] in_mask_op_C45 ;
  logic [47:0] in_mask_op_R45 ;
  logic [47:0] in_mask_op_X45 ;
  assign oi_sign_T = in_mask_op_T [39] ;
  assign in_mask_op_C45 [39] = oi_sign_C ;
  assign in_mask_op_R45 [39] = oi_sign_R ;
  assign in_mask_op_X45 [39] = oi_sign_X ;
  assign oi_sign_S = in_mask_op_S ;
  assign out_partial_data = { partial_result_expo, partial_result_mant };
  assign out_partial_data_T = {  partial_result_expo_T , partial_result_mant_T  };
  logic [13:0] out_partial_data_S ;
  assign out_partial_data_S = 0 ;
  logic [7:0] partial_result_expo_R2 ;
  logic [7:0] partial_result_expo_X2 ;
  logic [7:0] partial_result_expo_C2 ;
  assign partial_result_expo_R2 = out_partial_data_R [47:40] ;
  assign partial_result_expo_X2 = out_partial_data_X [47:40] ;
  assign partial_result_expo_C2 = out_partial_data_C [47:40] ;
  logic [39:0] partial_result_mant_R2 ;
  logic [39:0] partial_result_mant_X2 ;
  logic [39:0] partial_result_mant_C2 ;
  assign partial_result_mant_R2 = out_partial_data_R [39:0] ;
  assign partial_result_mant_X2 = out_partial_data_X [39:0] ;
  assign partial_result_mant_C2 = out_partial_data_C [39:0] ;
  assign partial_expo = partial_result[47:40];
  assign { partial_result_R4 [0], partial_result_R4 [1], partial_result_R4 [2], partial_result_R4 [3], partial_result_R4 [4], partial_result_R4 [5], partial_result_R4 [6], partial_result_R4 [7], partial_result_R4 [8], partial_result_R4 [9], partial_result_R4 [10], partial_result_R4 [11], partial_result_R4 [12], partial_result_R4 [13], partial_result_R4 [14], partial_result_R4 [15], partial_result_R4 [16], partial_result_R4 [17], partial_result_R4 [18], partial_result_R4 [19], partial_result_R4 [20], partial_result_R4 [21], partial_result_R4 [22], partial_result_R4 [23], partial_result_R4 [24], partial_result_R4 [25], partial_result_R4 [26], partial_result_R4 [27], partial_result_R4 [28] } = 0;
  assign { partial_result_X4 [0], partial_result_X4 [1], partial_result_X4 [2], partial_result_X4 [3], partial_result_X4 [4], partial_result_X4 [5], partial_result_X4 [6], partial_result_X4 [7], partial_result_X4 [8], partial_result_X4 [9], partial_result_X4 [10], partial_result_X4 [11], partial_result_X4 [12], partial_result_X4 [13], partial_result_X4 [14], partial_result_X4 [15], partial_result_X4 [16], partial_result_X4 [17], partial_result_X4 [18], partial_result_X4 [19], partial_result_X4 [20], partial_result_X4 [21], partial_result_X4 [22], partial_result_X4 [23], partial_result_X4 [24], partial_result_X4 [25], partial_result_X4 [26], partial_result_X4 [27], partial_result_X4 [28] } = 0;
  assign { partial_result_C4 [0], partial_result_C4 [1], partial_result_C4 [2], partial_result_C4 [3], partial_result_C4 [4], partial_result_C4 [5], partial_result_C4 [6], partial_result_C4 [7], partial_result_C4 [8], partial_result_C4 [9], partial_result_C4 [10], partial_result_C4 [11], partial_result_C4 [12], partial_result_C4 [13], partial_result_C4 [14], partial_result_C4 [15], partial_result_C4 [16], partial_result_C4 [17], partial_result_C4 [18], partial_result_C4 [19], partial_result_C4 [20], partial_result_C4 [21], partial_result_C4 [22], partial_result_C4 [23], partial_result_C4 [24], partial_result_C4 [25], partial_result_C4 [26], partial_result_C4 [27], partial_result_C4 [28] } = 0;
  logic [47:0] partial_result_C5 ;
  logic [47:0] partial_result_R5 ;
  logic [47:0] partial_result_X5 ;
  assign partial_expo_T = partial_result_T [47:40] ;
  assign partial_result_C5 [47:40] = partial_expo_C ;
  assign partial_result_R5 [47:40] = partial_expo_R ;
  assign partial_result_X5 [47:40] = partial_expo_X ;
  assign partial_expo_S = partial_result_S ;
  assign partial_mant = partial_result[39:0];
  assign partial_mant_T = partial_result_T [39:0] ;
  assign partial_result_C5 [39:0] = partial_mant_C ;
  assign partial_result_R5 [39:0] = partial_mant_R ;
  assign partial_result_X5 [39:0] = partial_mant_X ;
  assign partial_mant_S = partial_result_S ;
  assign partial_mant_nmlz_tmp = { 1'bx, partial_mant_nmlz };
  assign partial_mant_nmlz_tmp_T = {  1'h0 , partial_mant_nmlz_T  };
  logic [13:0] partial_mant_nmlz_tmp_S ;
  assign partial_mant_nmlz_tmp_S = 0 ;
  logic [39:0] partial_mant_nmlz_R2 ;
  logic [39:0] partial_mant_nmlz_X2 ;
  logic [39:0] partial_mant_nmlz_C2 ;
  assign partial_mant_nmlz_R2 = partial_mant_nmlz_tmp_R [39:0] ;
  assign partial_mant_nmlz_X2 = partial_mant_nmlz_tmp_X [39:0] ;
  assign partial_mant_nmlz_C2 = partial_mant_nmlz_tmp_C [39:0] ;
  assign partial_mant_nxt = partial_mant_nmlz;
  logic [39:0] partial_mant_nmlz_C3 ;
  logic [39:0] partial_mant_nmlz_R3 ;
  logic [39:0] partial_mant_nmlz_X3 ;
  assign partial_mant_nxt_T = partial_mant_nmlz_T ;
  assign partial_mant_nmlz_C3 = partial_mant_nxt_C ;
  assign partial_mant_nmlz_R3 = partial_mant_nxt_R ;
  assign partial_mant_nmlz_X3 = partial_mant_nxt_X ;
  assign partial_mant_nxt_S = partial_mant_nmlz_S ;
  assign partial_result_out = { partial_result_expo, partial_result_mant };
  assign partial_result_out_T = {  partial_result_expo_T , partial_result_mant_T  };
  logic [13:0] partial_result_out_S ;
  assign partial_result_out_S = 0 ;
  logic [7:0] partial_result_expo_R3 ;
  logic [7:0] partial_result_expo_X3 ;
  logic [7:0] partial_result_expo_C3 ;
  assign partial_result_expo_R3 = partial_result_out_R [47:40] ;
  assign partial_result_expo_X3 = partial_result_out_X [47:40] ;
  assign partial_result_expo_C3 = partial_result_out_C [47:40] ;
  logic [39:0] partial_result_mant_R3 ;
  logic [39:0] partial_result_mant_X3 ;
  logic [39:0] partial_result_mant_C3 ;
  assign partial_result_mant_R3 = partial_result_out_R [39:0] ;
  assign partial_result_mant_X3 = partial_result_out_X [39:0] ;
  assign partial_result_mant_C3 = partial_result_out_C [39:0] ;
  assign partial_sign = partial_result[39];
  logic [47:0] partial_result_C6 ;
  logic [47:0] partial_result_R6 ;
  logic [47:0] partial_result_X6 ;
  assign partial_sign_T = partial_result_T [39] ;
  assign partial_result_C6 [39] = partial_sign_C ;
  assign partial_result_R6 [39] = partial_sign_R ;
  assign partial_result_X6 [39] = partial_sign_X ;
  assign partial_sign_S = partial_result_S ;
  assign partial_umant = partial_result[38:0];
  assign partial_umant_T = partial_result_T [38:0] ;
  assign partial_result_C6 [38:0] = partial_umant_C ;
  assign partial_result_R6 [38:0] = partial_umant_R ;
  assign partial_result_X6 [38:0] = partial_umant_X ;
  assign partial_umant_S = partial_result_S ;
  assign partial_umant_nan = partial_result[38:29];
  assign { partial_result_R6 [47:40] } = 0;
  assign { partial_result_X6 [47:40] } = 0;
  assign { partial_result_C6 [47:40] } = 0;
  logic [47:0] partial_result_C7 ;
  logic [47:0] partial_result_R7 ;
  logic [47:0] partial_result_X7 ;
  assign partial_umant_nan_T = partial_result_T [38:29] ;
  assign partial_result_C7 [38:29] = partial_umant_nan_C ;
  assign partial_result_R7 [38:29] = partial_umant_nan_R ;
  assign partial_result_X7 [38:29] = partial_umant_nan_X ;
  assign partial_umant_nan_S = partial_result_S ;
  assign _055__C = ( _055__C0 );
  assign _048__C = ( _048__C0 );
  assign fp32_expo_round_C = ( fp32_expo_round_C0 );
  assign fp32_mant_nmlz_tmp_C = ( fp32_mant_nmlz_tmp_C0 );
  assign fangyuan34_C = ( fangyuan34_C0 );
  assign partial_nan_C = ( partial_nan_C0 ) | ( partial_nan_C1 );
  assign _016__C = ( _016__C0 );
  assign fangyuan33_C = ( fangyuan33_C0 );
  assign _054__C = ( _054__C0 );
  assign in_nan_2d_C = ( in_nan_2d_C0 );
  assign partial_expo_nmlz_C = ( partial_expo_nmlz_C0 );
  assign _046__C = ( _046__C0 );
  assign partial_expo_nmlz_pos_C = ( partial_expo_nmlz_pos_C0 );
  assign partial_expo_nmlz_neg_C = ( partial_expo_nmlz_neg_C0 );
  assign _025__C = ( _025__C0 );
  assign fangyuan32_C = ( fangyuan32_C0 );
  assign fangyuan31_C = ( fangyuan31_C0 );
  assign fangyuan30_C = ( fangyuan30_C0 );
  assign _045__C = ( _045__C0 );
  assign fangyuan29_C = ( fangyuan29_C0 );
  assign _024__C = ( _024__C0 );
  assign _044__C = ( _044__C0 );
  assign _053__C = ( _053__C0 );
  assign _030__C = ( _030__C0 );
  assign fangyuan28_C = ( fangyuan28_C0 );
  assign _028__C = ( _028__C0 );
  assign fangyuan27_C = ( fangyuan27_C0 );
  assign _027__C = ( _027__C0 );
  assign _029__C = ( _029__C0 ) | ( _029__C1 );
  assign _052__C = ( _052__C0 );
  assign _043__C = ( _043__C0 );
  assign fangyuan26_C = ( fangyuan26_C0 );
  assign _026__C = ( _026__C0 );
  assign di_expm_C = ( di_expm_C0 );
  assign _042__C = ( _042__C0 );
  assign _051__C = ( _051__C0 );
  assign fangyuan25_C = ( fangyuan25_C0 );
  assign _050__C = ( _050__C0 );
  assign di_manm_C = ( di_manm_C0 );
  assign fangyuan24_C = ( fangyuan24_C0 );
  assign in_op_C = ( in_op_C0 );
  assign in_op_valid_C = ( in_op_valid_C0 );
  assign mant_sum_carry_neg_C = ( mant_sum_carry_neg_C0 ) | ( mant_sum_carry_neg_C1 ) | ( mant_sum_carry_neg_C2 );
  assign _015__C = ( _015__C0 );
  assign _014__C = ( _014__C0 );
  assign fp32_mant_round_C = ( fp32_mant_round_C0 );
  assign mant_sum_round_C = ( mant_sum_round_C0 ) | ( mant_sum_round_C1 );
  assign fangyuan22_C = ( fangyuan22_C0 );
  assign oi_mant_ext_C = ( oi_mant_ext_C0 ) | ( oi_mant_ext_C1 );
  assign oi_mant_cut_C = ( oi_mant_cut_C0 ) | ( oi_mant_cut_C1 ) | ( oi_mant_cut_C2 );
  assign oi_mant_shift_C = ( oi_mant_shift_C0 ) | ( oi_mant_shift_C1 );
  assign fangyuan20_C = ( fangyuan20_C0 );
  assign di_mans_C = ( di_mans_C0 ) | ( di_mans_C1 );
  assign di_mant_cut_C = ( di_mant_cut_C0 ) | ( di_mant_cut_C1 ) | ( di_mant_cut_C2 );
  assign di_mant_shift_C = ( di_mant_shift_C0 ) | ( di_mant_shift_C1 );
  assign fangyuan18_C = ( fangyuan18_C0 );
  assign fangyuan17_C = ( fangyuan17_C0 );
  assign _049__C = ( _049__C0 ) | ( _049__C1 ) | ( _049__C2 ) | ( _049__C3 ) | ( _049__C4 ) | ( _049__C5 ) | ( _049__C6 ) | ( _049__C7 ) | ( _049__C8 ) | ( _049__C9 ) | ( _049__C10 ) | ( _049__C11 ) | ( _049__C12 ) | ( _049__C13 ) | ( _049__C14 ) | ( _049__C15 ) | ( _049__C16 ) | ( _049__C17 ) | ( _049__C18 ) | ( _049__C19 ) | ( _049__C20 ) | ( _049__C21 ) | ( _049__C22 ) | ( _049__C23 ) | ( _049__C24 ) | ( _049__C25 ) | ( _049__C26 ) | ( _049__C27 ) | ( _049__C28 ) | ( _049__C29 ) | ( _049__C30 ) | ( _049__C31 ) | ( _049__C32 ) | ( _049__C33 ) | ( _049__C34 ) | ( _049__C35 ) | ( _049__C36 ) | ( _049__C37 ) | ( _049__C38 ) | ( _049__C39 ) | ( _049__C40 ) | ( _049__C41 ) | ( _049__C42 ) | ( _049__C43 ) | ( _049__C44 ) | ( _049__C45 ) | ( _049__C46 ) | ( _049__C47 ) | ( _049__C48 ) | ( _049__C49 ) | ( _049__C50 ) | ( _049__C51 );
  assign mant_sum_C = ( mant_sum_C0 ) | ( mant_sum_C1 ) | ( mant_sum_C2 ) | ( mant_sum_C3 ) | ( mant_sum_C4 ) | ( mant_sum_C5 );
  assign di_lead_num_C = ( di_lead_num_C0 ) | ( di_lead_num_C1 );
  assign fangyuan16_C = ( fangyuan16_C0 );
  assign fangyuan15_C = ( fangyuan15_C0 );
  assign fangyuan14_C = ( fangyuan14_C0 );
  assign fangyuan13_C = ( fangyuan13_C0 );
  assign mant_sum_scmp_C = ( mant_sum_scmp_C0 );
  assign fangyuan12_C = ( fangyuan12_C0 );
  assign msum_lead_num_C = ( msum_lead_num_C0 ) | ( msum_lead_num_C1 ) | ( msum_lead_num_C2 );
  assign fangyuan11_C = ( fangyuan11_C0 );
  assign oi_mant_cutt_C = ( oi_mant_cutt_C0 ) | ( oi_mant_cutt_C1 );
  assign fangyuan10_C = ( fangyuan10_C0 );
  assign di_mant_cutt_C = ( di_mant_cutt_C0 ) | ( di_mant_cutt_C1 );
  assign fangyuan9_C = ( fangyuan9_C0 );
  assign fangyuan8_C = ( fangyuan8_C0 );
  assign fangyuan7_C = ( fangyuan7_C0 );
  assign fangyuan6_C = ( fangyuan6_C0 );
  assign fangyuan5_C = ( fangyuan5_C0 );
  assign fangyuan4_C = ( fangyuan4_C0 );
  assign fangyuan3_C = ( fangyuan3_C0 );
  assign in_mask_op_C = ( in_mask_op_C0 ) | ( in_mask_op_C1 ) | ( in_mask_op_C2 ) | ( in_mask_op_C3 ) | ( in_mask_op_C4 ) | ( in_mask_op_C5 ) | ( in_mask_op_C6 ) | ( in_mask_op_C7 ) | ( in_mask_op_C8 ) | ( in_mask_op_C9 ) | ( in_mask_op_C10 ) | ( in_mask_op_C11 ) | ( in_mask_op_C12 ) | ( in_mask_op_C13 ) | ( in_mask_op_C14 ) | ( in_mask_op_C15 ) | ( in_mask_op_C16 ) | ( in_mask_op_C17 ) | ( in_mask_op_C18 ) | ( in_mask_op_C19 ) | ( in_mask_op_C20 ) | ( in_mask_op_C21 ) | ( in_mask_op_C22 ) | ( in_mask_op_C23 ) | ( in_mask_op_C24 ) | ( in_mask_op_C25 ) | ( in_mask_op_C26 ) | ( in_mask_op_C27 ) | ( in_mask_op_C28 ) | ( in_mask_op_C29 ) | ( in_mask_op_C30 ) | ( in_mask_op_C31 ) | ( in_mask_op_C32 ) | ( in_mask_op_C33 ) | ( in_mask_op_C34 ) | ( in_mask_op_C35 ) | ( in_mask_op_C36 ) | ( in_mask_op_C37 ) | ( in_mask_op_C38 ) | ( in_mask_op_C39 ) | ( in_mask_op_C40 ) | ( in_mask_op_C41 ) | ( in_mask_op_C42 ) | ( in_mask_op_C43 ) | ( in_mask_op_C44 ) | ( in_mask_op_C45 );
  assign fangyuan2_C = ( fangyuan2_C0 );
  assign di_aligned_mant_nxt_C = ( di_aligned_mant_nxt_C0 );
  assign oi_aligned_mant_nxt_C = ( oi_aligned_mant_nxt_C0 );
  assign in_mant_cut_C = ( in_mant_cut_C0 ) | ( in_mant_cut_C1 ) | ( in_mant_cut_C2 ) | ( in_mant_cut_C3 ) | ( in_mant_cut_C4 ) | ( in_mant_cut_C5 );
  assign in_mant_cut_nxt_C = ( in_mant_cut_nxt_C0 );
  assign max_expo_C = ( max_expo_C0 ) | ( max_expo_C1 ) | ( max_expo_C2 );
  assign _018__C = ( _018__C0 ) | ( _018__C1 );
  assign expo_nrml_C = ( expo_nrml_C0 );
  assign _019__C = ( _019__C0 );
  assign mant_sum_ncmp_C = ( mant_sum_ncmp_C0 );
  assign partial_result_expo_C = ( partial_result_expo_C0 ) | ( partial_result_expo_C1 ) | ( partial_result_expo_C2 ) | ( partial_result_expo_C3 );
  assign partial_expo_nxt_C = ( partial_expo_nxt_C0 );
  assign partial_result_mant_C = ( partial_result_mant_C0 ) | ( partial_result_mant_C1 ) | ( partial_result_mant_C2 ) | ( partial_result_mant_C3 );
  assign partial_mant_nmlz_C = ( partial_mant_nmlz_C0 ) | ( partial_mant_nmlz_C1 ) | ( partial_mant_nmlz_C2 ) | ( partial_mant_nmlz_C3 );
  assign fangyuan1_C = ( fangyuan1_C0 );
  assign fp32_mant_nmlz_C = ( fp32_mant_nmlz_C0 ) | ( fp32_mant_nmlz_C1 );
  assign fp32_expo_nmlz_C = ( fp32_expo_nmlz_C0 ) | ( fp32_expo_nmlz_C1 );
  assign _013__C = ( _013__C0 );
  assign _006__C = ( _006__C0 );
  assign _002__C = ( _002__C0 );
  assign _000__C = ( _000__C0 );
  assign _007__C = ( _007__C0 );
  assign _004__C = ( _004__C0 );
  assign _003__C = ( _003__C0 );
  assign _001__C = ( _001__C0 );
  assign _005__C = ( _005__C0 );
  assign _011__C = ( _011__C0 );
  assign _012__C = ( _012__C0 );
  assign _010__C = ( _010__C0 );
  assign _009__C = ( _009__C0 ) | ( _009__C1 ) | ( _009__C2 );
  assign _008__C = ( _008__C0 );
  assign partial_neg2_C = ( partial_neg2_C0 );
  assign fp32_mant_carry_C = ( fp32_mant_carry_C0 ) | ( fp32_mant_carry_C1 );
  assign oi_nan_C = ( oi_nan_C0 ) | ( oi_nan_C1 ) | ( oi_nan_C2 );
  assign di_nan_C = ( di_nan_C0 ) | ( di_nan_C1 ) | ( di_nan_C2 );
  assign _047__C = ( _047__C0 );
  assign in_nan_d_C = ( in_nan_d_C0 ) | ( in_nan_d_C1 ) | ( in_nan_d_C2 );
  assign in_nan_C = ( in_nan_C0 ) | ( in_nan_C1 ) | ( in_nan_C2 ) | ( in_nan_C3 );
  assign oi_expo_C = ( oi_expo_C0 ) | ( oi_expo_C1 ) | ( oi_expo_C2 ) | ( oi_expo_C3 );
  assign di_expo_C = ( di_expo_C0 ) | ( di_expo_C1 ) | ( di_expo_C2 ) | ( di_expo_C3 );
  assign oi_expo_shift_C = ( oi_expo_shift_C0 ) | ( oi_expo_shift_C1 );
  assign di_expo_shift_C = ( di_expo_shift_C0 ) | ( di_expo_shift_C1 );
  assign _041__C = ( _041__C0 );
  assign _036__C = ( _036__C0 );
  assign final_vld_C = ( final_vld_C0 );
  assign final_sel_C = ( final_sel_C0 );
  assign _035__C = ( _035__C0 );
  assign _022__C = ( _022__C0 );
  assign _040__C = ( _040__C0 );
  assign _021__C = ( _021__C0 );
  assign _034__C = ( _034__C0 );
  assign _020__C = ( _020__C0 );
  assign _039__C = ( _039__C0 );
  assign _033__C = ( _033__C0 ) | ( _033__C1 );
  assign _038__C = ( _038__C0 );
  assign _032__C = ( _032__C0 );
  assign _031__C = ( _031__C0 );
  assign msum_sel_C = ( msum_sel_C0 ) | ( msum_sel_C1 );
  assign msum_vld_C = ( msum_vld_C0 ) | ( msum_vld_C1 ) | ( msum_vld_C2 ) | ( msum_vld_C3 ) | ( msum_vld_C4 );
  assign shift_sel_C = ( shift_sel_C0 );
  assign shift_vld_C = ( shift_vld_C0 ) | ( shift_vld_C1 ) | ( shift_vld_C2 ) | ( shift_vld_C3 );
  assign in_sel_C = ( in_sel_C0 );
  assign in_valid_C = ( in_valid_C0 ) | ( in_valid_C1 ) | ( in_valid_C2 ) | ( in_valid_C3 ) | ( in_valid_C4 );
  assign _023__C = ( _023__C0 );
  assign _017__C = ( _017__C0 );
  assign partial_result_C = ( partial_result_C0 ) | ( partial_result_C1 ) | ( partial_result_C2 ) | ( partial_result_C3 ) | ( partial_result_C4 ) | ( partial_result_C5 ) | ( partial_result_C6 ) | ( partial_result_C7 );
  assign partial_mant_abs_C = ( partial_mant_abs_C0 ) | ( partial_mant_abs_C1 ) | ( partial_mant_abs_C2 ) | ( partial_mant_abs_C3 );
  assign _037__C = ( _037__C0 );
  assign mant_sum_carry_pos_C = ( mant_sum_carry_pos_C0 ) | ( mant_sum_carry_pos_C1 );
  assign expo_trans_C = ( expo_trans_C0 ) | ( expo_trans_C1 ) | ( expo_trans_C2 );
  assign fangyuan0_C = ( fangyuan0_C0 );
  assign mant_sum_trans_C = ( mant_sum_trans_C0 ) | ( mant_sum_trans_C1 ) | ( mant_sum_trans_C2 ) | ( mant_sum_trans_C3 ) | ( mant_sum_trans_C4 ) | ( mant_sum_trans_C5 ) | ( mant_sum_trans_C6 ) | ( mant_sum_trans_C7 );
  assign mant_sum_point5_C = ( mant_sum_point5_C0 ) | ( mant_sum_point5_C1 ) | ( mant_sum_point5_C2 );
  assign in_aligned_expo_C = ( in_aligned_expo_C0 ) | ( in_aligned_expo_C1 );
  assign oi_aligned_mant_C = ( oi_aligned_mant_C0 ) | ( oi_aligned_mant_C1 );
  assign di_aligned_mant_C = ( di_aligned_mant_C0 ) | ( di_aligned_mant_C1 );
  assign in_data_C = ( in_data_C0 ) | ( in_data_C1 ) | ( in_data_C2 ) | ( in_data_C3 ) | ( in_data_C4 ) | ( in_data_C5 ) | ( in_data_C6 ) | ( in_data_C7 ) | ( in_data_C8 ) | ( in_data_C9 ) | ( in_data_C10 ) | ( in_data_C11 ) | ( in_data_C12 ) | ( in_data_C13 ) | ( in_data_C14 ) | ( in_data_C15 ) | ( in_data_C16 ) | ( in_data_C17 ) | ( in_data_C18 ) | ( in_data_C19 ) | ( in_data_C20 ) | ( in_data_C21 ) | ( in_data_C22 ) | ( in_data_C23 ) | ( in_data_C24 ) | ( in_data_C25 ) | ( in_data_C26 ) | ( in_data_C27 ) | ( in_data_C28 ) | ( in_data_C29 ) | ( in_data_C30 ) | ( in_data_C31 ) | ( in_data_C32 ) | ( in_data_C33 ) | ( in_data_C34 ) | ( in_data_C35 ) | ( in_data_C36 ) | ( in_data_C37 ) | ( in_data_C38 ) | ( in_data_C39 ) | ( in_data_C40 ) | ( in_data_C41 ) | ( in_data_C42 ) | ( in_data_C43 ) | ( in_data_C44 ) | ( in_data_C45 ) | ( in_data_C46 ) | ( in_data_C47 );
  assign out_partial_valid_C = ( out_partial_valid_C0 );
  assign out_partial_data_C = ( out_partial_data_C0 );
  assign out_final_valid_C = ( out_final_valid_C0 );
  assign out_final_data_C = ( out_final_data_C0 ) | ( out_final_data_C1 );
  assign _055__X = ( _055__X0 );
  assign _048__X = ( _048__X0 );
  assign fp32_expo_round_X = ( fp32_expo_round_X0 );
  assign fp32_mant_nmlz_tmp_X = ( fp32_mant_nmlz_tmp_X0 );
  assign fangyuan34_X = ( fangyuan34_X0 );
  assign partial_nan_X = ( partial_nan_X0 ) | ( partial_nan_X1 );
  assign _016__X = ( _016__X0 );
  assign fangyuan33_X = ( fangyuan33_X0 );
  assign _054__X = ( _054__X0 );
  assign in_nan_2d_X = ( in_nan_2d_X0 );
  assign partial_expo_nmlz_X = ( partial_expo_nmlz_X0 );
  assign _046__X = ( _046__X0 );
  assign partial_expo_nmlz_pos_X = ( partial_expo_nmlz_pos_X0 );
  assign partial_expo_nmlz_neg_X = ( partial_expo_nmlz_neg_X0 );
  assign _025__X = ( _025__X0 );
  assign fangyuan32_X = ( fangyuan32_X0 );
  assign fangyuan31_X = ( fangyuan31_X0 );
  assign fangyuan30_X = ( fangyuan30_X0 );
  assign _045__X = ( _045__X0 );
  assign fangyuan29_X = ( fangyuan29_X0 );
  assign _024__X = ( _024__X0 );
  assign _044__X = ( _044__X0 );
  assign _053__X = ( _053__X0 );
  assign _030__X = ( _030__X0 );
  assign fangyuan28_X = ( fangyuan28_X0 );
  assign _028__X = ( _028__X0 );
  assign fangyuan27_X = ( fangyuan27_X0 );
  assign _027__X = ( _027__X0 );
  assign _029__X = ( _029__X0 ) | ( _029__X1 );
  assign _052__X = ( _052__X0 );
  assign _043__X = ( _043__X0 );
  assign fangyuan26_X = ( fangyuan26_X0 );
  assign _026__X = ( _026__X0 );
  assign di_expm_X = ( di_expm_X0 );
  assign _042__X = ( _042__X0 );
  assign _051__X = ( _051__X0 );
  assign fangyuan25_X = ( fangyuan25_X0 );
  assign _050__X = ( _050__X0 );
  assign di_manm_X = ( di_manm_X0 );
  assign fangyuan24_X = ( fangyuan24_X0 );
  assign in_op_X = ( in_op_X0 );
  assign in_op_valid_X = ( in_op_valid_X0 );
  assign mant_sum_carry_neg_X = ( mant_sum_carry_neg_X0 ) | ( mant_sum_carry_neg_X1 ) | ( mant_sum_carry_neg_X2 );
  assign _015__X = ( _015__X0 );
  assign _014__X = ( _014__X0 );
  assign fp32_mant_round_X = ( fp32_mant_round_X0 );
  assign mant_sum_round_X = ( mant_sum_round_X0 ) | ( mant_sum_round_X1 );
  assign fangyuan22_X = ( fangyuan22_X0 );
  assign oi_mant_ext_X = ( oi_mant_ext_X0 ) | ( oi_mant_ext_X1 );
  assign oi_mant_cut_X = ( oi_mant_cut_X0 ) | ( oi_mant_cut_X1 ) | ( oi_mant_cut_X2 );
  assign oi_mant_shift_X = ( oi_mant_shift_X0 ) | ( oi_mant_shift_X1 );
  assign fangyuan20_X = ( fangyuan20_X0 );
  assign di_mans_X = ( di_mans_X0 ) | ( di_mans_X1 );
  assign di_mant_cut_X = ( di_mant_cut_X0 ) | ( di_mant_cut_X1 ) | ( di_mant_cut_X2 );
  assign di_mant_shift_X = ( di_mant_shift_X0 ) | ( di_mant_shift_X1 );
  assign fangyuan18_X = ( fangyuan18_X0 );
  assign fangyuan17_X = ( fangyuan17_X0 );
  assign _049__X = ( _049__X0 ) | ( _049__X1 ) | ( _049__X2 ) | ( _049__X3 ) | ( _049__X4 ) | ( _049__X5 ) | ( _049__X6 ) | ( _049__X7 ) | ( _049__X8 ) | ( _049__X9 ) | ( _049__X10 ) | ( _049__X11 ) | ( _049__X12 ) | ( _049__X13 ) | ( _049__X14 ) | ( _049__X15 ) | ( _049__X16 ) | ( _049__X17 ) | ( _049__X18 ) | ( _049__X19 ) | ( _049__X20 ) | ( _049__X21 ) | ( _049__X22 ) | ( _049__X23 ) | ( _049__X24 ) | ( _049__X25 ) | ( _049__X26 ) | ( _049__X27 ) | ( _049__X28 ) | ( _049__X29 ) | ( _049__X30 ) | ( _049__X31 ) | ( _049__X32 ) | ( _049__X33 ) | ( _049__X34 ) | ( _049__X35 ) | ( _049__X36 ) | ( _049__X37 ) | ( _049__X38 ) | ( _049__X39 ) | ( _049__X40 ) | ( _049__X41 ) | ( _049__X42 ) | ( _049__X43 ) | ( _049__X44 ) | ( _049__X45 ) | ( _049__X46 ) | ( _049__X47 ) | ( _049__X48 ) | ( _049__X49 ) | ( _049__X50 ) | ( _049__X51 );
  assign mant_sum_X = ( mant_sum_X0 ) | ( mant_sum_X1 ) | ( mant_sum_X2 ) | ( mant_sum_X3 ) | ( mant_sum_X4 ) | ( mant_sum_X5 );
  assign di_lead_num_X = ( di_lead_num_X0 ) | ( di_lead_num_X1 );
  assign fangyuan16_X = ( fangyuan16_X0 );
  assign fangyuan15_X = ( fangyuan15_X0 );
  assign fangyuan14_X = ( fangyuan14_X0 );
  assign fangyuan13_X = ( fangyuan13_X0 );
  assign mant_sum_scmp_X = ( mant_sum_scmp_X0 );
  assign fangyuan12_X = ( fangyuan12_X0 );
  assign msum_lead_num_X = ( msum_lead_num_X0 ) | ( msum_lead_num_X1 ) | ( msum_lead_num_X2 );
  assign fangyuan11_X = ( fangyuan11_X0 );
  assign oi_mant_cutt_X = ( oi_mant_cutt_X0 ) | ( oi_mant_cutt_X1 );
  assign fangyuan10_X = ( fangyuan10_X0 );
  assign di_mant_cutt_X = ( di_mant_cutt_X0 ) | ( di_mant_cutt_X1 );
  assign fangyuan9_X = ( fangyuan9_X0 );
  assign fangyuan8_X = ( fangyuan8_X0 );
  assign fangyuan7_X = ( fangyuan7_X0 );
  assign fangyuan6_X = ( fangyuan6_X0 );
  assign fangyuan5_X = ( fangyuan5_X0 );
  assign fangyuan4_X = ( fangyuan4_X0 );
  assign fangyuan3_X = ( fangyuan3_X0 );
  assign in_mask_op_X = ( in_mask_op_X0 ) | ( in_mask_op_X1 ) | ( in_mask_op_X2 ) | ( in_mask_op_X3 ) | ( in_mask_op_X4 ) | ( in_mask_op_X5 ) | ( in_mask_op_X6 ) | ( in_mask_op_X7 ) | ( in_mask_op_X8 ) | ( in_mask_op_X9 ) | ( in_mask_op_X10 ) | ( in_mask_op_X11 ) | ( in_mask_op_X12 ) | ( in_mask_op_X13 ) | ( in_mask_op_X14 ) | ( in_mask_op_X15 ) | ( in_mask_op_X16 ) | ( in_mask_op_X17 ) | ( in_mask_op_X18 ) | ( in_mask_op_X19 ) | ( in_mask_op_X20 ) | ( in_mask_op_X21 ) | ( in_mask_op_X22 ) | ( in_mask_op_X23 ) | ( in_mask_op_X24 ) | ( in_mask_op_X25 ) | ( in_mask_op_X26 ) | ( in_mask_op_X27 ) | ( in_mask_op_X28 ) | ( in_mask_op_X29 ) | ( in_mask_op_X30 ) | ( in_mask_op_X31 ) | ( in_mask_op_X32 ) | ( in_mask_op_X33 ) | ( in_mask_op_X34 ) | ( in_mask_op_X35 ) | ( in_mask_op_X36 ) | ( in_mask_op_X37 ) | ( in_mask_op_X38 ) | ( in_mask_op_X39 ) | ( in_mask_op_X40 ) | ( in_mask_op_X41 ) | ( in_mask_op_X42 ) | ( in_mask_op_X43 ) | ( in_mask_op_X44 ) | ( in_mask_op_X45 );
  assign fangyuan2_X = ( fangyuan2_X0 );
  assign di_aligned_mant_nxt_X = ( di_aligned_mant_nxt_X0 );
  assign oi_aligned_mant_nxt_X = ( oi_aligned_mant_nxt_X0 );
  assign in_mant_cut_X = ( in_mant_cut_X0 ) | ( in_mant_cut_X1 ) | ( in_mant_cut_X2 ) | ( in_mant_cut_X3 ) | ( in_mant_cut_X4 ) | ( in_mant_cut_X5 );
  assign in_mant_cut_nxt_X = ( in_mant_cut_nxt_X0 );
  assign max_expo_X = ( max_expo_X0 ) | ( max_expo_X1 ) | ( max_expo_X2 );
  assign _018__X = ( _018__X0 ) | ( _018__X1 );
  assign expo_nrml_X = ( expo_nrml_X0 );
  assign _019__X = ( _019__X0 );
  assign mant_sum_ncmp_X = ( mant_sum_ncmp_X0 );
  assign partial_result_expo_X = ( partial_result_expo_X0 ) | ( partial_result_expo_X1 ) | ( partial_result_expo_X2 ) | ( partial_result_expo_X3 );
  assign partial_expo_nxt_X = ( partial_expo_nxt_X0 );
  assign partial_result_mant_X = ( partial_result_mant_X0 ) | ( partial_result_mant_X1 ) | ( partial_result_mant_X2 ) | ( partial_result_mant_X3 );
  assign partial_mant_nmlz_X = ( partial_mant_nmlz_X0 ) | ( partial_mant_nmlz_X1 ) | ( partial_mant_nmlz_X2 ) | ( partial_mant_nmlz_X3 );
  assign fangyuan1_X = ( fangyuan1_X0 );
  assign fp32_mant_nmlz_X = ( fp32_mant_nmlz_X0 ) | ( fp32_mant_nmlz_X1 );
  assign fp32_expo_nmlz_X = ( fp32_expo_nmlz_X0 ) | ( fp32_expo_nmlz_X1 );
  assign _013__X = ( _013__X0 );
  assign _006__X = ( _006__X0 );
  assign _002__X = ( _002__X0 );
  assign _000__X = ( _000__X0 );
  assign _007__X = ( _007__X0 );
  assign _004__X = ( _004__X0 );
  assign _003__X = ( _003__X0 );
  assign _001__X = ( _001__X0 );
  assign _005__X = ( _005__X0 );
  assign _011__X = ( _011__X0 );
  assign _012__X = ( _012__X0 );
  assign _010__X = ( _010__X0 );
  assign _009__X = ( _009__X0 ) | ( _009__X1 ) | ( _009__X2 );
  assign _008__X = ( _008__X0 );
  assign partial_neg2_X = ( partial_neg2_X0 );
  assign fp32_mant_carry_X = ( fp32_mant_carry_X0 ) | ( fp32_mant_carry_X1 );
  assign oi_nan_X = ( oi_nan_X0 ) | ( oi_nan_X1 ) | ( oi_nan_X2 );
  assign di_nan_X = ( di_nan_X0 ) | ( di_nan_X1 ) | ( di_nan_X2 );
  assign _047__X = ( _047__X0 );
  assign in_nan_d_X = ( in_nan_d_X0 ) | ( in_nan_d_X1 ) | ( in_nan_d_X2 );
  assign in_nan_X = ( in_nan_X0 ) | ( in_nan_X1 ) | ( in_nan_X2 ) | ( in_nan_X3 );
  assign oi_expo_X = ( oi_expo_X0 ) | ( oi_expo_X1 ) | ( oi_expo_X2 ) | ( oi_expo_X3 );
  assign di_expo_X = ( di_expo_X0 ) | ( di_expo_X1 ) | ( di_expo_X2 ) | ( di_expo_X3 );
  assign oi_expo_shift_X = ( oi_expo_shift_X0 ) | ( oi_expo_shift_X1 );
  assign di_expo_shift_X = ( di_expo_shift_X0 ) | ( di_expo_shift_X1 );
  assign _041__X = ( _041__X0 );
  assign _036__X = ( _036__X0 );
  assign final_vld_X = ( final_vld_X0 );
  assign final_sel_X = ( final_sel_X0 );
  assign _035__X = ( _035__X0 );
  assign _022__X = ( _022__X0 );
  assign _040__X = ( _040__X0 );
  assign _021__X = ( _021__X0 );
  assign _034__X = ( _034__X0 );
  assign _020__X = ( _020__X0 );
  assign _039__X = ( _039__X0 );
  assign _033__X = ( _033__X0 ) | ( _033__X1 );
  assign _038__X = ( _038__X0 );
  assign _032__X = ( _032__X0 );
  assign _031__X = ( _031__X0 );
  assign msum_sel_X = ( msum_sel_X0 ) | ( msum_sel_X1 );
  assign msum_vld_X = ( msum_vld_X0 ) | ( msum_vld_X1 ) | ( msum_vld_X2 ) | ( msum_vld_X3 ) | ( msum_vld_X4 );
  assign shift_sel_X = ( shift_sel_X0 );
  assign shift_vld_X = ( shift_vld_X0 ) | ( shift_vld_X1 ) | ( shift_vld_X2 ) | ( shift_vld_X3 );
  assign in_sel_X = ( in_sel_X0 );
  assign in_valid_X = ( in_valid_X0 ) | ( in_valid_X1 ) | ( in_valid_X2 ) | ( in_valid_X3 ) | ( in_valid_X4 );
  assign _023__X = ( _023__X0 );
  assign _017__X = ( _017__X0 );
  assign partial_result_X = ( partial_result_X0 ) | ( partial_result_X1 ) | ( partial_result_X2 ) | ( partial_result_X3 ) | ( partial_result_X4 ) | ( partial_result_X5 ) | ( partial_result_X6 ) | ( partial_result_X7 );
  assign partial_mant_abs_X = ( partial_mant_abs_X0 ) | ( partial_mant_abs_X1 ) | ( partial_mant_abs_X2 ) | ( partial_mant_abs_X3 );
  assign _037__X = ( _037__X0 );
  assign mant_sum_carry_pos_X = ( mant_sum_carry_pos_X0 ) | ( mant_sum_carry_pos_X1 );
  assign expo_trans_X = ( expo_trans_X0 ) | ( expo_trans_X1 ) | ( expo_trans_X2 );
  assign fangyuan0_X = ( fangyuan0_X0 );
  assign mant_sum_trans_X = ( mant_sum_trans_X0 ) | ( mant_sum_trans_X1 ) | ( mant_sum_trans_X2 ) | ( mant_sum_trans_X3 ) | ( mant_sum_trans_X4 ) | ( mant_sum_trans_X5 ) | ( mant_sum_trans_X6 ) | ( mant_sum_trans_X7 );
  assign mant_sum_point5_X = ( mant_sum_point5_X0 ) | ( mant_sum_point5_X1 ) | ( mant_sum_point5_X2 );
  assign in_aligned_expo_X = ( in_aligned_expo_X0 ) | ( in_aligned_expo_X1 );
  assign oi_aligned_mant_X = ( oi_aligned_mant_X0 ) | ( oi_aligned_mant_X1 );
  assign di_aligned_mant_X = ( di_aligned_mant_X0 ) | ( di_aligned_mant_X1 );
  assign in_data_X = ( in_data_X0 ) | ( in_data_X1 ) | ( in_data_X2 ) | ( in_data_X3 ) | ( in_data_X4 ) | ( in_data_X5 ) | ( in_data_X6 ) | ( in_data_X7 ) | ( in_data_X8 ) | ( in_data_X9 ) | ( in_data_X10 ) | ( in_data_X11 ) | ( in_data_X12 ) | ( in_data_X13 ) | ( in_data_X14 ) | ( in_data_X15 ) | ( in_data_X16 ) | ( in_data_X17 ) | ( in_data_X18 ) | ( in_data_X19 ) | ( in_data_X20 ) | ( in_data_X21 ) | ( in_data_X22 ) | ( in_data_X23 ) | ( in_data_X24 ) | ( in_data_X25 ) | ( in_data_X26 ) | ( in_data_X27 ) | ( in_data_X28 ) | ( in_data_X29 ) | ( in_data_X30 ) | ( in_data_X31 ) | ( in_data_X32 ) | ( in_data_X33 ) | ( in_data_X34 ) | ( in_data_X35 ) | ( in_data_X36 ) | ( in_data_X37 ) | ( in_data_X38 ) | ( in_data_X39 ) | ( in_data_X40 ) | ( in_data_X41 ) | ( in_data_X42 ) | ( in_data_X43 ) | ( in_data_X44 ) | ( in_data_X45 ) | ( in_data_X46 ) | ( in_data_X47 );
  assign out_partial_valid_X = ( out_partial_valid_X0 );
  assign out_partial_data_X = ( out_partial_data_X0 );
  assign out_final_valid_X = ( out_final_valid_X0 );
  assign out_final_data_X = ( out_final_data_X0 ) | ( out_final_data_X1 );
  assign _055__R = ( _055__X0 & _055__R0 );
  assign _048__R = ( _048__X0 & _048__R0 );
  assign fp32_expo_round_R = ( fp32_expo_round_X0 & fp32_expo_round_R0 );
  assign fp32_mant_nmlz_tmp_R = ( fp32_mant_nmlz_tmp_X0 & fp32_mant_nmlz_tmp_R0 );
  assign fangyuan34_R = ( fangyuan34_X0 & fangyuan34_R0 );
  assign partial_nan_R = ( partial_nan_X0 & partial_nan_R0 ) | ( partial_nan_X1 & partial_nan_R1 );
  assign _016__R = ( _016__X0 & _016__R0 );
  assign fangyuan33_R = ( fangyuan33_X0 & fangyuan33_R0 );
  assign _054__R = ( _054__X0 & _054__R0 );
  assign in_nan_2d_R = ( in_nan_2d_X0 & in_nan_2d_R0 );
  assign partial_expo_nmlz_R = ( partial_expo_nmlz_X0 & partial_expo_nmlz_R0 );
  assign _046__R = ( _046__X0 & _046__R0 );
  assign partial_expo_nmlz_pos_R = ( partial_expo_nmlz_pos_X0 & partial_expo_nmlz_pos_R0 );
  assign partial_expo_nmlz_neg_R = ( partial_expo_nmlz_neg_X0 & partial_expo_nmlz_neg_R0 );
  assign _025__R = ( _025__X0 & _025__R0 );
  assign fangyuan32_R = ( fangyuan32_X0 & fangyuan32_R0 );
  assign fangyuan31_R = ( fangyuan31_X0 & fangyuan31_R0 );
  assign fangyuan30_R = ( fangyuan30_X0 & fangyuan30_R0 );
  assign _045__R = ( _045__X0 & _045__R0 );
  assign fangyuan29_R = ( fangyuan29_X0 & fangyuan29_R0 );
  assign _024__R = ( _024__X0 & _024__R0 );
  assign _044__R = ( _044__X0 & _044__R0 );
  assign _053__R = ( _053__X0 & _053__R0 );
  assign _030__R = ( _030__X0 & _030__R0 );
  assign fangyuan28_R = ( fangyuan28_X0 & fangyuan28_R0 );
  assign _028__R = ( _028__X0 & _028__R0 );
  assign fangyuan27_R = ( fangyuan27_X0 & fangyuan27_R0 );
  assign _027__R = ( _027__X0 & _027__R0 );
  assign _029__R = ( _029__X0 & _029__R0 ) | ( _029__X1 & _029__R1 );
  assign _052__R = ( _052__X0 & _052__R0 );
  assign _043__R = ( _043__X0 & _043__R0 );
  assign fangyuan26_R = ( fangyuan26_X0 & fangyuan26_R0 );
  assign _026__R = ( _026__X0 & _026__R0 );
  assign di_expm_R = ( di_expm_X0 & di_expm_R0 );
  assign _042__R = ( _042__X0 & _042__R0 );
  assign _051__R = ( _051__X0 & _051__R0 );
  assign fangyuan25_R = ( fangyuan25_X0 & fangyuan25_R0 );
  assign _050__R = ( _050__X0 & _050__R0 );
  assign di_manm_R = ( di_manm_X0 & di_manm_R0 );
  assign fangyuan24_R = ( fangyuan24_X0 & fangyuan24_R0 );
  assign in_op_R = ( in_op_X0 & in_op_R0 );
  assign in_op_valid_R = ( in_op_valid_X0 & in_op_valid_R0 );
  assign mant_sum_carry_neg_R = ( mant_sum_carry_neg_X0 & mant_sum_carry_neg_R0 ) | ( mant_sum_carry_neg_X1 & mant_sum_carry_neg_R1 ) | ( mant_sum_carry_neg_X2 & mant_sum_carry_neg_R2 );
  assign _015__R = ( _015__X0 & _015__R0 );
  assign _014__R = ( _014__X0 & _014__R0 );
  assign fp32_mant_round_R = ( fp32_mant_round_X0 & fp32_mant_round_R0 );
  assign mant_sum_round_R = ( mant_sum_round_X0 & mant_sum_round_R0 ) | ( mant_sum_round_X1 & mant_sum_round_R1 );
  assign fangyuan22_R = ( fangyuan22_X0 & fangyuan22_R0 );
  assign oi_mant_ext_R = ( oi_mant_ext_X0 & oi_mant_ext_R0 ) | ( oi_mant_ext_X1 & oi_mant_ext_R1 );
  assign oi_mant_cut_R = ( oi_mant_cut_X0 & oi_mant_cut_R0 ) | ( oi_mant_cut_X1 & oi_mant_cut_R1 ) | ( oi_mant_cut_X2 & oi_mant_cut_R2 );
  assign oi_mant_shift_R = ( oi_mant_shift_X0 & oi_mant_shift_R0 ) | ( oi_mant_shift_X1 & oi_mant_shift_R1 );
  assign fangyuan20_R = ( fangyuan20_X0 & fangyuan20_R0 );
  assign di_mans_R = ( di_mans_X0 & di_mans_R0 ) | ( di_mans_X1 & di_mans_R1 );
  assign di_mant_cut_R = ( di_mant_cut_X0 & di_mant_cut_R0 ) | ( di_mant_cut_X1 & di_mant_cut_R1 ) | ( di_mant_cut_X2 & di_mant_cut_R2 );
  assign di_mant_shift_R = ( di_mant_shift_X0 & di_mant_shift_R0 ) | ( di_mant_shift_X1 & di_mant_shift_R1 );
  assign fangyuan18_R = ( fangyuan18_X0 & fangyuan18_R0 );
  assign fangyuan17_R = ( fangyuan17_X0 & fangyuan17_R0 );
  assign _049__R = ( _049__X0 & _049__R0 ) | ( _049__X1 & _049__R1 ) | ( _049__X2 & _049__R2 ) | ( _049__X3 & _049__R3 ) | ( _049__X4 & _049__R4 ) | ( _049__X5 & _049__R5 ) | ( _049__X6 & _049__R6 ) | ( _049__X7 & _049__R7 ) | ( _049__X8 & _049__R8 ) | ( _049__X9 & _049__R9 ) | ( _049__X10 & _049__R10 ) | ( _049__X11 & _049__R11 ) | ( _049__X12 & _049__R12 ) | ( _049__X13 & _049__R13 ) | ( _049__X14 & _049__R14 ) | ( _049__X15 & _049__R15 ) | ( _049__X16 & _049__R16 ) | ( _049__X17 & _049__R17 ) | ( _049__X18 & _049__R18 ) | ( _049__X19 & _049__R19 ) | ( _049__X20 & _049__R20 ) | ( _049__X21 & _049__R21 ) | ( _049__X22 & _049__R22 ) | ( _049__X23 & _049__R23 ) | ( _049__X24 & _049__R24 ) | ( _049__X25 & _049__R25 ) | ( _049__X26 & _049__R26 ) | ( _049__X27 & _049__R27 ) | ( _049__X28 & _049__R28 ) | ( _049__X29 & _049__R29 ) | ( _049__X30 & _049__R30 ) | ( _049__X31 & _049__R31 ) | ( _049__X32 & _049__R32 ) | ( _049__X33 & _049__R33 ) | ( _049__X34 & _049__R34 ) | ( _049__X35 & _049__R35 ) | ( _049__X36 & _049__R36 ) | ( _049__X37 & _049__R37 ) | ( _049__X38 & _049__R38 ) | ( _049__X39 & _049__R39 ) | ( _049__X40 & _049__R40 ) | ( _049__X41 & _049__R41 ) | ( _049__X42 & _049__R42 ) | ( _049__X43 & _049__R43 ) | ( _049__X44 & _049__R44 ) | ( _049__X45 & _049__R45 ) | ( _049__X46 & _049__R46 ) | ( _049__X47 & _049__R47 ) | ( _049__X48 & _049__R48 ) | ( _049__X49 & _049__R49 ) | ( _049__X50 & _049__R50 ) | ( _049__X51 & _049__R51 );
  assign mant_sum_R = ( mant_sum_X0 & mant_sum_R0 ) | ( mant_sum_X1 & mant_sum_R1 ) | ( mant_sum_X2 & mant_sum_R2 ) | ( mant_sum_X3 & mant_sum_R3 ) | ( mant_sum_X4 & mant_sum_R4 ) | ( mant_sum_X5 & mant_sum_R5 );
  assign di_lead_num_R = ( di_lead_num_X0 & di_lead_num_R0 ) | ( di_lead_num_X1 & di_lead_num_R1 );
  assign fangyuan16_R = ( fangyuan16_X0 & fangyuan16_R0 );
  assign fangyuan15_R = ( fangyuan15_X0 & fangyuan15_R0 );
  assign fangyuan14_R = ( fangyuan14_X0 & fangyuan14_R0 );
  assign fangyuan13_R = ( fangyuan13_X0 & fangyuan13_R0 );
  assign mant_sum_scmp_R = ( mant_sum_scmp_X0 & mant_sum_scmp_R0 );
  assign fangyuan12_R = ( fangyuan12_X0 & fangyuan12_R0 );
  assign msum_lead_num_R = ( msum_lead_num_X0 & msum_lead_num_R0 ) | ( msum_lead_num_X1 & msum_lead_num_R1 ) | ( msum_lead_num_X2 & msum_lead_num_R2 );
  assign fangyuan11_R = ( fangyuan11_X0 & fangyuan11_R0 );
  assign oi_mant_cutt_R = ( oi_mant_cutt_X0 & oi_mant_cutt_R0 ) | ( oi_mant_cutt_X1 & oi_mant_cutt_R1 );
  assign fangyuan10_R = ( fangyuan10_X0 & fangyuan10_R0 );
  assign di_mant_cutt_R = ( di_mant_cutt_X0 & di_mant_cutt_R0 ) | ( di_mant_cutt_X1 & di_mant_cutt_R1 );
  assign fangyuan9_R = ( fangyuan9_X0 & fangyuan9_R0 );
  assign fangyuan8_R = ( fangyuan8_X0 & fangyuan8_R0 );
  assign fangyuan7_R = ( fangyuan7_X0 & fangyuan7_R0 );
  assign fangyuan6_R = ( fangyuan6_X0 & fangyuan6_R0 );
  assign fangyuan5_R = ( fangyuan5_X0 & fangyuan5_R0 );
  assign fangyuan4_R = ( fangyuan4_X0 & fangyuan4_R0 );
  assign fangyuan3_R = ( fangyuan3_X0 & fangyuan3_R0 );
  assign in_mask_op_R = ( in_mask_op_X0 & in_mask_op_R0 ) | ( in_mask_op_X1 & in_mask_op_R1 ) | ( in_mask_op_X2 & in_mask_op_R2 ) | ( in_mask_op_X3 & in_mask_op_R3 ) | ( in_mask_op_X4 & in_mask_op_R4 ) | ( in_mask_op_X5 & in_mask_op_R5 ) | ( in_mask_op_X6 & in_mask_op_R6 ) | ( in_mask_op_X7 & in_mask_op_R7 ) | ( in_mask_op_X8 & in_mask_op_R8 ) | ( in_mask_op_X9 & in_mask_op_R9 ) | ( in_mask_op_X10 & in_mask_op_R10 ) | ( in_mask_op_X11 & in_mask_op_R11 ) | ( in_mask_op_X12 & in_mask_op_R12 ) | ( in_mask_op_X13 & in_mask_op_R13 ) | ( in_mask_op_X14 & in_mask_op_R14 ) | ( in_mask_op_X15 & in_mask_op_R15 ) | ( in_mask_op_X16 & in_mask_op_R16 ) | ( in_mask_op_X17 & in_mask_op_R17 ) | ( in_mask_op_X18 & in_mask_op_R18 ) | ( in_mask_op_X19 & in_mask_op_R19 ) | ( in_mask_op_X20 & in_mask_op_R20 ) | ( in_mask_op_X21 & in_mask_op_R21 ) | ( in_mask_op_X22 & in_mask_op_R22 ) | ( in_mask_op_X23 & in_mask_op_R23 ) | ( in_mask_op_X24 & in_mask_op_R24 ) | ( in_mask_op_X25 & in_mask_op_R25 ) | ( in_mask_op_X26 & in_mask_op_R26 ) | ( in_mask_op_X27 & in_mask_op_R27 ) | ( in_mask_op_X28 & in_mask_op_R28 ) | ( in_mask_op_X29 & in_mask_op_R29 ) | ( in_mask_op_X30 & in_mask_op_R30 ) | ( in_mask_op_X31 & in_mask_op_R31 ) | ( in_mask_op_X32 & in_mask_op_R32 ) | ( in_mask_op_X33 & in_mask_op_R33 ) | ( in_mask_op_X34 & in_mask_op_R34 ) | ( in_mask_op_X35 & in_mask_op_R35 ) | ( in_mask_op_X36 & in_mask_op_R36 ) | ( in_mask_op_X37 & in_mask_op_R37 ) | ( in_mask_op_X38 & in_mask_op_R38 ) | ( in_mask_op_X39 & in_mask_op_R39 ) | ( in_mask_op_X40 & in_mask_op_R40 ) | ( in_mask_op_X41 & in_mask_op_R41 ) | ( in_mask_op_X42 & in_mask_op_R42 ) | ( in_mask_op_X43 & in_mask_op_R43 ) | ( in_mask_op_X44 & in_mask_op_R44 ) | ( in_mask_op_X45 & in_mask_op_R45 );
  assign fangyuan2_R = ( fangyuan2_X0 & fangyuan2_R0 );
  assign di_aligned_mant_nxt_R = ( di_aligned_mant_nxt_X0 & di_aligned_mant_nxt_R0 );
  assign oi_aligned_mant_nxt_R = ( oi_aligned_mant_nxt_X0 & oi_aligned_mant_nxt_R0 );
  assign in_mant_cut_R = ( in_mant_cut_X0 & in_mant_cut_R0 ) | ( in_mant_cut_X1 & in_mant_cut_R1 ) | ( in_mant_cut_X2 & in_mant_cut_R2 ) | ( in_mant_cut_X3 & in_mant_cut_R3 ) | ( in_mant_cut_X4 & in_mant_cut_R4 ) | ( in_mant_cut_X5 & in_mant_cut_R5 );
  assign in_mant_cut_nxt_R = ( in_mant_cut_nxt_X0 & in_mant_cut_nxt_R0 );
  assign max_expo_R = ( max_expo_X0 & max_expo_R0 ) | ( max_expo_X1 & max_expo_R1 ) | ( max_expo_X2 & max_expo_R2 );
  assign _018__R = ( _018__X0 & _018__R0 ) | ( _018__X1 & _018__R1 );
  assign expo_nrml_R = ( expo_nrml_X0 & expo_nrml_R0 );
  assign _019__R = ( _019__X0 & _019__R0 );
  assign mant_sum_ncmp_R = ( mant_sum_ncmp_X0 & mant_sum_ncmp_R0 );
  assign partial_result_expo_R = ( partial_result_expo_X0 & partial_result_expo_R0 ) | ( partial_result_expo_X1 & partial_result_expo_R1 ) | ( partial_result_expo_X2 & partial_result_expo_R2 ) | ( partial_result_expo_X3 & partial_result_expo_R3 );
  assign partial_expo_nxt_R = ( partial_expo_nxt_X0 & partial_expo_nxt_R0 );
  assign partial_result_mant_R = ( partial_result_mant_X0 & partial_result_mant_R0 ) | ( partial_result_mant_X1 & partial_result_mant_R1 ) | ( partial_result_mant_X2 & partial_result_mant_R2 ) | ( partial_result_mant_X3 & partial_result_mant_R3 );
  assign partial_mant_nmlz_R = ( partial_mant_nmlz_X0 & partial_mant_nmlz_R0 ) | ( partial_mant_nmlz_X1 & partial_mant_nmlz_R1 ) | ( partial_mant_nmlz_X2 & partial_mant_nmlz_R2 ) | ( partial_mant_nmlz_X3 & partial_mant_nmlz_R3 );
  assign fangyuan1_R = ( fangyuan1_X0 & fangyuan1_R0 );
  assign fp32_mant_nmlz_R = ( fp32_mant_nmlz_X0 & fp32_mant_nmlz_R0 ) | ( fp32_mant_nmlz_X1 & fp32_mant_nmlz_R1 );
  assign fp32_expo_nmlz_R = ( fp32_expo_nmlz_X0 & fp32_expo_nmlz_R0 ) | ( fp32_expo_nmlz_X1 & fp32_expo_nmlz_R1 );
  assign _013__R = ( _013__X0 & _013__R0 );
  assign _006__R = ( _006__X0 & _006__R0 );
  assign _002__R = ( _002__X0 & _002__R0 );
  assign _000__R = ( _000__X0 & _000__R0 );
  assign _007__R = ( _007__X0 & _007__R0 );
  assign _004__R = ( _004__X0 & _004__R0 );
  assign _003__R = ( _003__X0 & _003__R0 );
  assign _001__R = ( _001__X0 & _001__R0 );
  assign _005__R = ( _005__X0 & _005__R0 );
  assign _011__R = ( _011__X0 & _011__R0 );
  assign _012__R = ( _012__X0 & _012__R0 );
  assign _010__R = ( _010__X0 & _010__R0 );
  assign _009__R = ( _009__X0 & _009__R0 ) | ( _009__X1 & _009__R1 ) | ( _009__X2 & _009__R2 );
  assign _008__R = ( _008__X0 & _008__R0 );
  assign partial_neg2_R = ( partial_neg2_X0 & partial_neg2_R0 );
  assign fp32_mant_carry_R = ( fp32_mant_carry_X0 & fp32_mant_carry_R0 ) | ( fp32_mant_carry_X1 & fp32_mant_carry_R1 );
  assign oi_nan_R = ( oi_nan_X0 & oi_nan_R0 ) | ( oi_nan_X1 & oi_nan_R1 ) | ( oi_nan_X2 & oi_nan_R2 );
  assign di_nan_R = ( di_nan_X0 & di_nan_R0 ) | ( di_nan_X1 & di_nan_R1 ) | ( di_nan_X2 & di_nan_R2 );
  assign _047__R = ( _047__X0 & _047__R0 );
  assign in_nan_d_R = ( in_nan_d_X0 & in_nan_d_R0 ) | ( in_nan_d_X1 & in_nan_d_R1 ) | ( in_nan_d_X2 & in_nan_d_R2 );
  assign in_nan_R = ( in_nan_X0 & in_nan_R0 ) | ( in_nan_X1 & in_nan_R1 ) | ( in_nan_X2 & in_nan_R2 ) | ( in_nan_X3 & in_nan_R3 );
  assign oi_expo_R = ( oi_expo_X0 & oi_expo_R0 ) | ( oi_expo_X1 & oi_expo_R1 ) | ( oi_expo_X2 & oi_expo_R2 ) | ( oi_expo_X3 & oi_expo_R3 );
  assign di_expo_R = ( di_expo_X0 & di_expo_R0 ) | ( di_expo_X1 & di_expo_R1 ) | ( di_expo_X2 & di_expo_R2 ) | ( di_expo_X3 & di_expo_R3 );
  assign oi_expo_shift_R = ( oi_expo_shift_X0 & oi_expo_shift_R0 ) | ( oi_expo_shift_X1 & oi_expo_shift_R1 );
  assign di_expo_shift_R = ( di_expo_shift_X0 & di_expo_shift_R0 ) | ( di_expo_shift_X1 & di_expo_shift_R1 );
  assign _041__R = ( _041__X0 & _041__R0 );
  assign _036__R = ( _036__X0 & _036__R0 );
  assign final_vld_R = ( final_vld_X0 & final_vld_R0 );
  assign final_sel_R = ( final_sel_X0 & final_sel_R0 );
  assign _035__R = ( _035__X0 & _035__R0 );
  assign _022__R = ( _022__X0 & _022__R0 );
  assign _040__R = ( _040__X0 & _040__R0 );
  assign _021__R = ( _021__X0 & _021__R0 );
  assign _034__R = ( _034__X0 & _034__R0 );
  assign _020__R = ( _020__X0 & _020__R0 );
  assign _039__R = ( _039__X0 & _039__R0 );
  assign _033__R = ( _033__X0 & _033__R0 ) | ( _033__X1 & _033__R1 );
  assign _038__R = ( _038__X0 & _038__R0 );
  assign _032__R = ( _032__X0 & _032__R0 );
  assign _031__R = ( _031__X0 & _031__R0 );
  assign msum_sel_R = ( msum_sel_X0 & msum_sel_R0 ) | ( msum_sel_X1 & msum_sel_R1 );
  assign msum_vld_R = ( msum_vld_X0 & msum_vld_R0 ) | ( msum_vld_X1 & msum_vld_R1 ) | ( msum_vld_X2 & msum_vld_R2 ) | ( msum_vld_X3 & msum_vld_R3 ) | ( msum_vld_X4 & msum_vld_R4 );
  assign shift_sel_R = ( shift_sel_X0 & shift_sel_R0 );
  assign shift_vld_R = ( shift_vld_X0 & shift_vld_R0 ) | ( shift_vld_X1 & shift_vld_R1 ) | ( shift_vld_X2 & shift_vld_R2 ) | ( shift_vld_X3 & shift_vld_R3 );
  assign in_sel_R = ( in_sel_X0 & in_sel_R0 );
  assign in_valid_R = ( in_valid_X0 & in_valid_R0 ) | ( in_valid_X1 & in_valid_R1 ) | ( in_valid_X2 & in_valid_R2 ) | ( in_valid_X3 & in_valid_R3 ) | ( in_valid_X4 & in_valid_R4 );
  assign _023__R = ( _023__X0 & _023__R0 );
  assign _017__R = ( _017__X0 & _017__R0 );
  assign partial_result_R = ( partial_result_X0 & partial_result_R0 ) | ( partial_result_X1 & partial_result_R1 ) | ( partial_result_X2 & partial_result_R2 ) | ( partial_result_X3 & partial_result_R3 ) | ( partial_result_X4 & partial_result_R4 ) | ( partial_result_X5 & partial_result_R5 ) | ( partial_result_X6 & partial_result_R6 ) | ( partial_result_X7 & partial_result_R7 );
  assign partial_mant_abs_R = ( partial_mant_abs_X0 & partial_mant_abs_R0 ) | ( partial_mant_abs_X1 & partial_mant_abs_R1 ) | ( partial_mant_abs_X2 & partial_mant_abs_R2 ) | ( partial_mant_abs_X3 & partial_mant_abs_R3 );
  assign _037__R = ( _037__X0 & _037__R0 );
  assign mant_sum_carry_pos_R = ( mant_sum_carry_pos_X0 & mant_sum_carry_pos_R0 ) | ( mant_sum_carry_pos_X1 & mant_sum_carry_pos_R1 );
  assign expo_trans_R = ( expo_trans_X0 & expo_trans_R0 ) | ( expo_trans_X1 & expo_trans_R1 ) | ( expo_trans_X2 & expo_trans_R2 );
  assign fangyuan0_R = ( fangyuan0_X0 & fangyuan0_R0 );
  assign mant_sum_trans_R = ( mant_sum_trans_X0 & mant_sum_trans_R0 ) | ( mant_sum_trans_X1 & mant_sum_trans_R1 ) | ( mant_sum_trans_X2 & mant_sum_trans_R2 ) | ( mant_sum_trans_X3 & mant_sum_trans_R3 ) | ( mant_sum_trans_X4 & mant_sum_trans_R4 ) | ( mant_sum_trans_X5 & mant_sum_trans_R5 ) | ( mant_sum_trans_X6 & mant_sum_trans_R6 ) | ( mant_sum_trans_X7 & mant_sum_trans_R7 );
  assign mant_sum_point5_R = ( mant_sum_point5_X0 & mant_sum_point5_R0 ) | ( mant_sum_point5_X1 & mant_sum_point5_R1 ) | ( mant_sum_point5_X2 & mant_sum_point5_R2 );
  assign in_aligned_expo_R = ( in_aligned_expo_X0 & in_aligned_expo_R0 ) | ( in_aligned_expo_X1 & in_aligned_expo_R1 );
  assign oi_aligned_mant_R = ( oi_aligned_mant_X0 & oi_aligned_mant_R0 ) | ( oi_aligned_mant_X1 & oi_aligned_mant_R1 );
  assign di_aligned_mant_R = ( di_aligned_mant_X0 & di_aligned_mant_R0 ) | ( di_aligned_mant_X1 & di_aligned_mant_R1 );
  assign in_data_R = ( in_data_X0 & in_data_R0 ) | ( in_data_X1 & in_data_R1 ) | ( in_data_X2 & in_data_R2 ) | ( in_data_X3 & in_data_R3 ) | ( in_data_X4 & in_data_R4 ) | ( in_data_X5 & in_data_R5 ) | ( in_data_X6 & in_data_R6 ) | ( in_data_X7 & in_data_R7 ) | ( in_data_X8 & in_data_R8 ) | ( in_data_X9 & in_data_R9 ) | ( in_data_X10 & in_data_R10 ) | ( in_data_X11 & in_data_R11 ) | ( in_data_X12 & in_data_R12 ) | ( in_data_X13 & in_data_R13 ) | ( in_data_X14 & in_data_R14 ) | ( in_data_X15 & in_data_R15 ) | ( in_data_X16 & in_data_R16 ) | ( in_data_X17 & in_data_R17 ) | ( in_data_X18 & in_data_R18 ) | ( in_data_X19 & in_data_R19 ) | ( in_data_X20 & in_data_R20 ) | ( in_data_X21 & in_data_R21 ) | ( in_data_X22 & in_data_R22 ) | ( in_data_X23 & in_data_R23 ) | ( in_data_X24 & in_data_R24 ) | ( in_data_X25 & in_data_R25 ) | ( in_data_X26 & in_data_R26 ) | ( in_data_X27 & in_data_R27 ) | ( in_data_X28 & in_data_R28 ) | ( in_data_X29 & in_data_R29 ) | ( in_data_X30 & in_data_R30 ) | ( in_data_X31 & in_data_R31 ) | ( in_data_X32 & in_data_R32 ) | ( in_data_X33 & in_data_R33 ) | ( in_data_X34 & in_data_R34 ) | ( in_data_X35 & in_data_R35 ) | ( in_data_X36 & in_data_R36 ) | ( in_data_X37 & in_data_R37 ) | ( in_data_X38 & in_data_R38 ) | ( in_data_X39 & in_data_R39 ) | ( in_data_X40 & in_data_R40 ) | ( in_data_X41 & in_data_R41 ) | ( in_data_X42 & in_data_R42 ) | ( in_data_X43 & in_data_R43 ) | ( in_data_X44 & in_data_R44 ) | ( in_data_X45 & in_data_R45 ) | ( in_data_X46 & in_data_R46 ) | ( in_data_X47 & in_data_R47 );
  assign out_partial_valid_R = ( out_partial_valid_X0 & out_partial_valid_R0 );
  assign out_partial_data_R = ( out_partial_data_X0 & out_partial_data_R0 );
  assign out_final_valid_R = ( out_final_valid_X0 & out_final_valid_R0 );
  assign out_final_data_R = ( out_final_data_X0 & out_final_data_R0 ) | ( out_final_data_X1 & out_final_data_R1 );
 // ground taints for floating regs
 // ground taints for unused wires
  assign { di_expn_R , di_expn_C , di_expn_X , di_mant_R , di_mant_C , di_mant_X , di_mant_ext_R , di_mant_ext_C , di_mant_ext_X , di_mant_pre_R , di_mant_pre_C , di_mant_pre_X , di_pd_R , di_pd_C , di_pd_X , di_sign_R , di_sign_C , di_sign_X , fangyuan19_R , fangyuan19_C , fangyuan19_X , fangyuan21_R , fangyuan21_C , fangyuan21_X , fangyuan23_R , fangyuan23_C , fangyuan23_X , fp32_expo_raw_R , fp32_expo_raw_C , fp32_expo_raw_X , fp32_mant_cut_R , fp32_mant_cut_C , fp32_mant_cut_X , fp32_mant_effect_R , fp32_mant_effect_C , fp32_mant_effect_X , fp32_mant_point5_R , fp32_mant_point5_C , fp32_mant_point5_X , fp32_result_R , fp32_result_C , fp32_result_X , mant_sum_comp_R , mant_sum_comp_C , mant_sum_comp_X , mant_sum_effect_R , mant_sum_effect_C , mant_sum_effect_X , mant_sum_guard_R , mant_sum_guard_C , mant_sum_guard_X , mant_sum_sign_R , mant_sum_sign_C , mant_sum_sign_X , mant_sum_stick_R , mant_sum_stick_C , mant_sum_stick_X , mant_sum_total_R , mant_sum_total_C , mant_sum_total_X , oi_expn_R , oi_expn_C , oi_expn_X , oi_mans_R , oi_mans_C , oi_mans_X , oi_mant_R , oi_mant_C , oi_mant_X , oi_pd_R , oi_pd_C , oi_pd_X , oi_sign_R , oi_sign_C , oi_sign_X , partial_expo_R , partial_expo_C , partial_expo_X , partial_mant_R , partial_mant_C , partial_mant_X , partial_mant_nmlz_tmp_R , partial_mant_nmlz_tmp_C , partial_mant_nmlz_tmp_X , partial_mant_nxt_R , partial_mant_nxt_C , partial_mant_nxt_X , partial_result_out_R , partial_result_out_C , partial_result_out_X , partial_sign_R , partial_sign_C , partial_sign_X , partial_umant_R , partial_umant_C , partial_umant_X , partial_umant_nan_R , partial_umant_nan_C , partial_umant_nan_X  } = 0;
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) out_final_data_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) out_final_data_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) out_final_data_PREV_VAL1 <= out_final_data ;
    if( INSTR_IN_ZY ) out_final_data_PREV_VAL2 <= out_final_data_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) out_final_valid_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) out_final_valid_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) out_final_valid_PREV_VAL1 <= out_final_valid ;
    if( INSTR_IN_ZY ) out_final_valid_PREV_VAL2 <= out_final_valid_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) out_partial_valid_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) out_partial_valid_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) out_partial_valid_PREV_VAL1 <= out_partial_valid ;
    if( INSTR_IN_ZY ) out_partial_valid_PREV_VAL2 <= out_partial_valid_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) partial_result_mant_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) partial_result_mant_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) partial_result_mant_PREV_VAL1 <= partial_result_mant ;
    if( INSTR_IN_ZY ) partial_result_mant_PREV_VAL2 <= partial_result_mant_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) partial_result_expo_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) partial_result_expo_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) partial_result_expo_PREV_VAL1 <= partial_result_expo ;
    if( INSTR_IN_ZY ) partial_result_expo_PREV_VAL2 <= partial_result_expo_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) mant_sum_trans_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) mant_sum_trans_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) mant_sum_trans_PREV_VAL1 <= mant_sum_trans ;
    if( INSTR_IN_ZY ) mant_sum_trans_PREV_VAL2 <= mant_sum_trans_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) expo_trans_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) expo_trans_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) expo_trans_PREV_VAL1 <= expo_trans ;
    if( INSTR_IN_ZY ) expo_trans_PREV_VAL2 <= expo_trans_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) in_aligned_expo_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) in_aligned_expo_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) in_aligned_expo_PREV_VAL1 <= in_aligned_expo ;
    if( INSTR_IN_ZY ) in_aligned_expo_PREV_VAL2 <= in_aligned_expo_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) in_mant_cut_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) in_mant_cut_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) in_mant_cut_PREV_VAL1 <= in_mant_cut ;
    if( INSTR_IN_ZY ) in_mant_cut_PREV_VAL2 <= in_mant_cut_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) oi_aligned_mant_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) oi_aligned_mant_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) oi_aligned_mant_PREV_VAL1 <= oi_aligned_mant ;
    if( INSTR_IN_ZY ) oi_aligned_mant_PREV_VAL2 <= oi_aligned_mant_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) di_aligned_mant_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) di_aligned_mant_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) di_aligned_mant_PREV_VAL1 <= di_aligned_mant ;
    if( INSTR_IN_ZY ) di_aligned_mant_PREV_VAL2 <= di_aligned_mant_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) in_nan_2d_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) in_nan_2d_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) in_nan_2d_PREV_VAL1 <= in_nan_2d ;
    if( INSTR_IN_ZY ) in_nan_2d_PREV_VAL2 <= in_nan_2d_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) in_nan_d_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) in_nan_d_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) in_nan_d_PREV_VAL1 <= in_nan_d ;
    if( INSTR_IN_ZY ) in_nan_d_PREV_VAL2 <= in_nan_d_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) final_sel_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) final_sel_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) final_sel_PREV_VAL1 <= final_sel ;
    if( INSTR_IN_ZY ) final_sel_PREV_VAL2 <= final_sel_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) msum_sel_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) msum_sel_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) msum_sel_PREV_VAL1 <= msum_sel ;
    if( INSTR_IN_ZY ) msum_sel_PREV_VAL2 <= msum_sel_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) shift_sel_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) shift_sel_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) shift_sel_PREV_VAL1 <= shift_sel ;
    if( INSTR_IN_ZY ) shift_sel_PREV_VAL2 <= shift_sel_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) final_vld_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) final_vld_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) final_vld_PREV_VAL1 <= final_vld ;
    if( INSTR_IN_ZY ) final_vld_PREV_VAL2 <= final_vld_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) msum_vld_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) msum_vld_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) msum_vld_PREV_VAL1 <= msum_vld ;
    if( INSTR_IN_ZY ) msum_vld_PREV_VAL2 <= msum_vld_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) shift_vld_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) shift_vld_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) shift_vld_PREV_VAL1 <= shift_vld ;
    if( INSTR_IN_ZY ) shift_vld_PREV_VAL2 <= shift_vld_PREV_VAL1 ;
  end
 // ground taints for unused wire slices
  assign { _025__R0 [40:40] } = 0;
  assign { _025__X0 [40:40] } = 0;
  assign { _025__C0 [40:40] } = 0;
  assign { _024__R0 [44:44] } = 0;
  assign { _024__X0 [44:44] } = 0;
  assign { _024__C0 [44:44] } = 0;
  assign { _026__R0 [7:7] } = 0;
  assign { _026__X0 [7:7] } = 0;
  assign { _026__C0 [7:7] } = 0;
  assign { mant_sum_round_R1 [40:39] } = 0;
  assign { mant_sum_round_X1 [40:39] } = 0;
  assign { mant_sum_round_C1 [40:39] } = 0;
  assign { oi_mant_cut_R2 [0] } = 0;
  assign { oi_mant_cut_X2 [0] } = 0;
  assign { oi_mant_cut_C2 [0] } = 0;
  assign { di_mant_cut_R2 [0] } = 0;
  assign { di_mant_cut_X2 [0] } = 0;
  assign { di_mant_cut_C2 [0] } = 0;
  assign { _049__R51 [0], _049__R51 [1], _049__R51 [2], _049__R51 [3], _049__R51 [4], _049__R51 [5], _049__R51 [6], _049__R51 [7], _049__R51 [8], _049__R51 [9], _049__R51 [10], _049__R51 [11], _049__R51 [12], _049__R51 [13], _049__R51 [14], _049__R51 [15], _049__R51 [16], _049__R51 [17], _049__R51 [18], _049__R51 [19], _049__R51 [20], _049__R51 [21], _049__R51 [22], _049__R51 [23], _049__R51 [24], _049__R51 [25], _049__R51 [26], _049__R51 [27], _049__R51 [28], _049__R51 [29], _049__R51 [30] } = 0;
  assign { _049__X51 [0], _049__X51 [1], _049__X51 [2], _049__X51 [3], _049__X51 [4], _049__X51 [5], _049__X51 [6], _049__X51 [7], _049__X51 [8], _049__X51 [9], _049__X51 [10], _049__X51 [11], _049__X51 [12], _049__X51 [13], _049__X51 [14], _049__X51 [15], _049__X51 [16], _049__X51 [17], _049__X51 [18], _049__X51 [19], _049__X51 [20], _049__X51 [21], _049__X51 [22], _049__X51 [23], _049__X51 [24], _049__X51 [25], _049__X51 [26], _049__X51 [27], _049__X51 [28], _049__X51 [29], _049__X51 [30] } = 0;
  assign { _049__C51 [0], _049__C51 [1], _049__C51 [2], _049__C51 [3], _049__C51 [4], _049__C51 [5], _049__C51 [6], _049__C51 [7], _049__C51 [8], _049__C51 [9], _049__C51 [10], _049__C51 [11], _049__C51 [12], _049__C51 [13], _049__C51 [14], _049__C51 [15], _049__C51 [16], _049__C51 [17], _049__C51 [18], _049__C51 [19], _049__C51 [20], _049__C51 [21], _049__C51 [22], _049__C51 [23], _049__C51 [24], _049__C51 [25], _049__C51 [26], _049__C51 [27], _049__C51 [28], _049__C51 [29], _049__C51 [30] } = 0;
  assign { oi_mant_cutt_R1 [39:38] } = 0;
  assign { oi_mant_cutt_X1 [39:38] } = 0;
  assign { oi_mant_cutt_C1 [39:38] } = 0;
  assign { di_mant_cutt_R1 [39:38] } = 0;
  assign { di_mant_cutt_X1 [39:38] } = 0;
  assign { di_mant_cutt_C1 [39:38] } = 0;
  assign { in_mask_op_R45 [0], in_mask_op_R45 [1], in_mask_op_R45 [2], in_mask_op_R45 [3], in_mask_op_R45 [4], in_mask_op_R45 [5], in_mask_op_R45 [6], in_mask_op_R45 [7], in_mask_op_R45 [8], in_mask_op_R45 [9], in_mask_op_R45 [10], in_mask_op_R45 [11], in_mask_op_R45 [12], in_mask_op_R45 [13], in_mask_op_R45 [14], in_mask_op_R45 [15], in_mask_op_R45 [16], in_mask_op_R45 [17], in_mask_op_R45 [18], in_mask_op_R45 [19], in_mask_op_R45 [20], in_mask_op_R45 [21], in_mask_op_R45 [22], in_mask_op_R45 [23], in_mask_op_R45 [24], in_mask_op_R45 [25], in_mask_op_R45 [26], in_mask_op_R45 [27], in_mask_op_R45 [28], in_mask_op_R45 [29], in_mask_op_R45 [30], in_mask_op_R45 [31], in_mask_op_R45 [32], in_mask_op_R45 [33], in_mask_op_R45 [34], in_mask_op_R45 [35], in_mask_op_R45 [36], in_mask_op_R45 [37], in_mask_op_R45 [38], in_mask_op_R45 [47:40] } = 0;
  assign { in_mask_op_X45 [0], in_mask_op_X45 [1], in_mask_op_X45 [2], in_mask_op_X45 [3], in_mask_op_X45 [4], in_mask_op_X45 [5], in_mask_op_X45 [6], in_mask_op_X45 [7], in_mask_op_X45 [8], in_mask_op_X45 [9], in_mask_op_X45 [10], in_mask_op_X45 [11], in_mask_op_X45 [12], in_mask_op_X45 [13], in_mask_op_X45 [14], in_mask_op_X45 [15], in_mask_op_X45 [16], in_mask_op_X45 [17], in_mask_op_X45 [18], in_mask_op_X45 [19], in_mask_op_X45 [20], in_mask_op_X45 [21], in_mask_op_X45 [22], in_mask_op_X45 [23], in_mask_op_X45 [24], in_mask_op_X45 [25], in_mask_op_X45 [26], in_mask_op_X45 [27], in_mask_op_X45 [28], in_mask_op_X45 [29], in_mask_op_X45 [30], in_mask_op_X45 [31], in_mask_op_X45 [32], in_mask_op_X45 [33], in_mask_op_X45 [34], in_mask_op_X45 [35], in_mask_op_X45 [36], in_mask_op_X45 [37], in_mask_op_X45 [38], in_mask_op_X45 [47:40] } = 0;
  assign { in_mask_op_C45 [0], in_mask_op_C45 [1], in_mask_op_C45 [2], in_mask_op_C45 [3], in_mask_op_C45 [4], in_mask_op_C45 [5], in_mask_op_C45 [6], in_mask_op_C45 [7], in_mask_op_C45 [8], in_mask_op_C45 [9], in_mask_op_C45 [10], in_mask_op_C45 [11], in_mask_op_C45 [12], in_mask_op_C45 [13], in_mask_op_C45 [14], in_mask_op_C45 [15], in_mask_op_C45 [16], in_mask_op_C45 [17], in_mask_op_C45 [18], in_mask_op_C45 [19], in_mask_op_C45 [20], in_mask_op_C45 [21], in_mask_op_C45 [22], in_mask_op_C45 [23], in_mask_op_C45 [24], in_mask_op_C45 [25], in_mask_op_C45 [26], in_mask_op_C45 [27], in_mask_op_C45 [28], in_mask_op_C45 [29], in_mask_op_C45 [30], in_mask_op_C45 [31], in_mask_op_C45 [32], in_mask_op_C45 [33], in_mask_op_C45 [34], in_mask_op_C45 [35], in_mask_op_C45 [36], in_mask_op_C45 [37], in_mask_op_C45 [38], in_mask_op_C45 [47:40] } = 0;
  assign { _023__R0 [8:1] } = 0;
  assign { _023__X0 [8:1] } = 0;
  assign { _023__C0 [8:1] } = 0;
  assign { partial_result_R7 [0], partial_result_R7 [1], partial_result_R7 [2], partial_result_R7 [3], partial_result_R7 [4], partial_result_R7 [5], partial_result_R7 [6], partial_result_R7 [7], partial_result_R7 [8], partial_result_R7 [9], partial_result_R7 [10], partial_result_R7 [11], partial_result_R7 [12], partial_result_R7 [13], partial_result_R7 [14], partial_result_R7 [15], partial_result_R7 [16], partial_result_R7 [17], partial_result_R7 [18], partial_result_R7 [19], partial_result_R7 [20], partial_result_R7 [21], partial_result_R7 [22], partial_result_R7 [23], partial_result_R7 [24], partial_result_R7 [25], partial_result_R7 [26], partial_result_R7 [27], partial_result_R7 [28], partial_result_R7 [47:39] } = 0;
  assign { partial_result_X7 [0], partial_result_X7 [1], partial_result_X7 [2], partial_result_X7 [3], partial_result_X7 [4], partial_result_X7 [5], partial_result_X7 [6], partial_result_X7 [7], partial_result_X7 [8], partial_result_X7 [9], partial_result_X7 [10], partial_result_X7 [11], partial_result_X7 [12], partial_result_X7 [13], partial_result_X7 [14], partial_result_X7 [15], partial_result_X7 [16], partial_result_X7 [17], partial_result_X7 [18], partial_result_X7 [19], partial_result_X7 [20], partial_result_X7 [21], partial_result_X7 [22], partial_result_X7 [23], partial_result_X7 [24], partial_result_X7 [25], partial_result_X7 [26], partial_result_X7 [27], partial_result_X7 [28], partial_result_X7 [47:39] } = 0;
  assign { partial_result_C7 [0], partial_result_C7 [1], partial_result_C7 [2], partial_result_C7 [3], partial_result_C7 [4], partial_result_C7 [5], partial_result_C7 [6], partial_result_C7 [7], partial_result_C7 [8], partial_result_C7 [9], partial_result_C7 [10], partial_result_C7 [11], partial_result_C7 [12], partial_result_C7 [13], partial_result_C7 [14], partial_result_C7 [15], partial_result_C7 [16], partial_result_C7 [17], partial_result_C7 [18], partial_result_C7 [19], partial_result_C7 [20], partial_result_C7 [21], partial_result_C7 [22], partial_result_C7 [23], partial_result_C7 [24], partial_result_C7 [25], partial_result_C7 [26], partial_result_C7 [27], partial_result_C7 [28], partial_result_C7 [47:39] } = 0;
  assign { partial_mant_abs_R3 [0], partial_mant_abs_R3 [1], partial_mant_abs_R3 [2], partial_mant_abs_R3 [3], partial_mant_abs_R3 [4], partial_mant_abs_R3 [5], partial_mant_abs_R3 [6], partial_mant_abs_R3 [7], partial_mant_abs_R3 [8], partial_mant_abs_R3 [9], partial_mant_abs_R3 [10], partial_mant_abs_R3 [11], partial_mant_abs_R3 [12], partial_mant_abs_R3 [13], partial_mant_abs_R3 [38:15] } = 0;
  assign { partial_mant_abs_X3 [0], partial_mant_abs_X3 [1], partial_mant_abs_X3 [2], partial_mant_abs_X3 [3], partial_mant_abs_X3 [4], partial_mant_abs_X3 [5], partial_mant_abs_X3 [6], partial_mant_abs_X3 [7], partial_mant_abs_X3 [8], partial_mant_abs_X3 [9], partial_mant_abs_X3 [10], partial_mant_abs_X3 [11], partial_mant_abs_X3 [12], partial_mant_abs_X3 [13], partial_mant_abs_X3 [38:15] } = 0;
  assign { partial_mant_abs_C3 [0], partial_mant_abs_C3 [1], partial_mant_abs_C3 [2], partial_mant_abs_C3 [3], partial_mant_abs_C3 [4], partial_mant_abs_C3 [5], partial_mant_abs_C3 [6], partial_mant_abs_C3 [7], partial_mant_abs_C3 [8], partial_mant_abs_C3 [9], partial_mant_abs_C3 [10], partial_mant_abs_C3 [11], partial_mant_abs_C3 [12], partial_mant_abs_C3 [13], partial_mant_abs_C3 [38:15] } = 0;
  assign { mant_sum_trans_R7 [1], mant_sum_trans_R7 [2], mant_sum_trans_R7 [3], mant_sum_trans_R7 [4], mant_sum_trans_R7 [5], mant_sum_trans_R7 [6], mant_sum_trans_R7 [7], mant_sum_trans_R7 [8], mant_sum_trans_R7 [9], mant_sum_trans_R7 [10], mant_sum_trans_R7 [11], mant_sum_trans_R7 [12], mant_sum_trans_R7 [13], mant_sum_trans_R7 [14], mant_sum_trans_R7 [15], mant_sum_trans_R7 [16], mant_sum_trans_R7 [17], mant_sum_trans_R7 [18], mant_sum_trans_R7 [19], mant_sum_trans_R7 [20], mant_sum_trans_R7 [21], mant_sum_trans_R7 [22], mant_sum_trans_R7 [23], mant_sum_trans_R7 [24], mant_sum_trans_R7 [25], mant_sum_trans_R7 [26], mant_sum_trans_R7 [27], mant_sum_trans_R7 [28], mant_sum_trans_R7 [29], mant_sum_trans_R7 [30], mant_sum_trans_R7 [31], mant_sum_trans_R7 [32], mant_sum_trans_R7 [33], mant_sum_trans_R7 [34], mant_sum_trans_R7 [35], mant_sum_trans_R7 [36], mant_sum_trans_R7 [37], mant_sum_trans_R7 [38], mant_sum_trans_R7 [39], mant_sum_trans_R7 [40] } = 0;
  assign { mant_sum_trans_X7 [1], mant_sum_trans_X7 [2], mant_sum_trans_X7 [3], mant_sum_trans_X7 [4], mant_sum_trans_X7 [5], mant_sum_trans_X7 [6], mant_sum_trans_X7 [7], mant_sum_trans_X7 [8], mant_sum_trans_X7 [9], mant_sum_trans_X7 [10], mant_sum_trans_X7 [11], mant_sum_trans_X7 [12], mant_sum_trans_X7 [13], mant_sum_trans_X7 [14], mant_sum_trans_X7 [15], mant_sum_trans_X7 [16], mant_sum_trans_X7 [17], mant_sum_trans_X7 [18], mant_sum_trans_X7 [19], mant_sum_trans_X7 [20], mant_sum_trans_X7 [21], mant_sum_trans_X7 [22], mant_sum_trans_X7 [23], mant_sum_trans_X7 [24], mant_sum_trans_X7 [25], mant_sum_trans_X7 [26], mant_sum_trans_X7 [27], mant_sum_trans_X7 [28], mant_sum_trans_X7 [29], mant_sum_trans_X7 [30], mant_sum_trans_X7 [31], mant_sum_trans_X7 [32], mant_sum_trans_X7 [33], mant_sum_trans_X7 [34], mant_sum_trans_X7 [35], mant_sum_trans_X7 [36], mant_sum_trans_X7 [37], mant_sum_trans_X7 [38], mant_sum_trans_X7 [39], mant_sum_trans_X7 [40] } = 0;
  assign { mant_sum_trans_C7 [1], mant_sum_trans_C7 [2], mant_sum_trans_C7 [3], mant_sum_trans_C7 [4], mant_sum_trans_C7 [5], mant_sum_trans_C7 [6], mant_sum_trans_C7 [7], mant_sum_trans_C7 [8], mant_sum_trans_C7 [9], mant_sum_trans_C7 [10], mant_sum_trans_C7 [11], mant_sum_trans_C7 [12], mant_sum_trans_C7 [13], mant_sum_trans_C7 [14], mant_sum_trans_C7 [15], mant_sum_trans_C7 [16], mant_sum_trans_C7 [17], mant_sum_trans_C7 [18], mant_sum_trans_C7 [19], mant_sum_trans_C7 [20], mant_sum_trans_C7 [21], mant_sum_trans_C7 [22], mant_sum_trans_C7 [23], mant_sum_trans_C7 [24], mant_sum_trans_C7 [25], mant_sum_trans_C7 [26], mant_sum_trans_C7 [27], mant_sum_trans_C7 [28], mant_sum_trans_C7 [29], mant_sum_trans_C7 [30], mant_sum_trans_C7 [31], mant_sum_trans_C7 [32], mant_sum_trans_C7 [33], mant_sum_trans_C7 [34], mant_sum_trans_C7 [35], mant_sum_trans_C7 [36], mant_sum_trans_C7 [37], mant_sum_trans_C7 [38], mant_sum_trans_C7 [39], mant_sum_trans_C7 [40] } = 0;
  assign { in_data_R47 [0], in_data_R47 [1], in_data_R47 [2], in_data_R47 [3], in_data_R47 [4], in_data_R47 [5], in_data_R47 [6], in_data_R47 [7], in_data_R47 [8], in_data_R47 [9], in_data_R47 [10], in_data_R47 [11], in_data_R47 [12], in_data_R47 [13], in_data_R47 [14], in_data_R47 [15], in_data_R47 [16], in_data_R47 [17], in_data_R47 [18], in_data_R47 [19], in_data_R47 [20], in_data_R47 [21], in_data_R47 [22], in_data_R47 [23], in_data_R47 [24], in_data_R47 [25], in_data_R47 [26], in_data_R47 [27], in_data_R47 [28], in_data_R47 [29], in_data_R47 [30], in_data_R47 [31], in_data_R47 [32], in_data_R47 [33], in_data_R47 [34], in_data_R47 [35], in_data_R47 [36], in_data_R47 [43:38] } = 0;
  assign { in_data_X47 [0], in_data_X47 [1], in_data_X47 [2], in_data_X47 [3], in_data_X47 [4], in_data_X47 [5], in_data_X47 [6], in_data_X47 [7], in_data_X47 [8], in_data_X47 [9], in_data_X47 [10], in_data_X47 [11], in_data_X47 [12], in_data_X47 [13], in_data_X47 [14], in_data_X47 [15], in_data_X47 [16], in_data_X47 [17], in_data_X47 [18], in_data_X47 [19], in_data_X47 [20], in_data_X47 [21], in_data_X47 [22], in_data_X47 [23], in_data_X47 [24], in_data_X47 [25], in_data_X47 [26], in_data_X47 [27], in_data_X47 [28], in_data_X47 [29], in_data_X47 [30], in_data_X47 [31], in_data_X47 [32], in_data_X47 [33], in_data_X47 [34], in_data_X47 [35], in_data_X47 [36], in_data_X47 [43:38] } = 0;
  assign { in_data_C47 [0], in_data_C47 [1], in_data_C47 [2], in_data_C47 [3], in_data_C47 [4], in_data_C47 [5], in_data_C47 [6], in_data_C47 [7], in_data_C47 [8], in_data_C47 [9], in_data_C47 [10], in_data_C47 [11], in_data_C47 [12], in_data_C47 [13], in_data_C47 [14], in_data_C47 [15], in_data_C47 [16], in_data_C47 [17], in_data_C47 [18], in_data_C47 [19], in_data_C47 [20], in_data_C47 [21], in_data_C47 [22], in_data_C47 [23], in_data_C47 [24], in_data_C47 [25], in_data_C47 [26], in_data_C47 [27], in_data_C47 [28], in_data_C47 [29], in_data_C47 [30], in_data_C47 [31], in_data_C47 [32], in_data_C47 [33], in_data_C47 [34], in_data_C47 [35], in_data_C47 [36], in_data_C47 [43:38] } = 0;
  assert property( di_aligned_mant_r_flag == 0 || di_aligned_mant_PREV_VAL1 == di_aligned_mant_PREV_VAL2 );
  assert property( expo_trans_r_flag == 0 || expo_trans_PREV_VAL1 == expo_trans_PREV_VAL2 );
  assert property( final_sel_r_flag == 0 || final_sel_PREV_VAL1 == final_sel_PREV_VAL2 );
  assert property( final_vld_r_flag == 0 || final_vld_PREV_VAL1 == final_vld_PREV_VAL2 );
  assert property( in_aligned_expo_r_flag == 0 || in_aligned_expo_PREV_VAL1 == in_aligned_expo_PREV_VAL2 );
  assert property( in_mant_cut_r_flag == 0 || in_mant_cut_PREV_VAL1 == in_mant_cut_PREV_VAL2 );
  assert property( in_nan_2d_r_flag == 0 || in_nan_2d_PREV_VAL1 == in_nan_2d_PREV_VAL2 );
  assert property( in_nan_d_r_flag == 0 || in_nan_d_PREV_VAL1 == in_nan_d_PREV_VAL2 );
  assert property( mant_sum_trans_r_flag == 0 || mant_sum_trans_PREV_VAL1 == mant_sum_trans_PREV_VAL2 );
  assert property( msum_sel_r_flag == 0 || msum_sel_PREV_VAL1 == msum_sel_PREV_VAL2 );
  assert property( msum_vld_r_flag == 0 || msum_vld_PREV_VAL1 == msum_vld_PREV_VAL2 );
  assert property( oi_aligned_mant_r_flag == 0 || oi_aligned_mant_PREV_VAL1 == oi_aligned_mant_PREV_VAL2 );
  assert property( out_final_data_r_flag == 0 || out_final_data_PREV_VAL1 == out_final_data_PREV_VAL2 );
  assert property( out_final_valid_r_flag == 0 || out_final_valid_PREV_VAL1 == out_final_valid_PREV_VAL2 );
  assert property( out_partial_valid_r_flag == 0 || out_partial_valid_PREV_VAL1 == out_partial_valid_PREV_VAL2 );
  assert property( partial_result_expo_r_flag == 0 || partial_result_expo_PREV_VAL1 == partial_result_expo_PREV_VAL2 );
  assert property( partial_result_mant_r_flag == 0 || partial_result_mant_PREV_VAL1 == partial_result_mant_PREV_VAL2 );
  assert property( shift_sel_r_flag == 0 || shift_sel_PREV_VAL1 == shift_sel_PREV_VAL2 );
  assert property( shift_vld_r_flag == 0 || shift_vld_PREV_VAL1 == shift_vld_PREV_VAL2 );
  assign rst_zy = !nvdla_core_rstn ;
endmodule
