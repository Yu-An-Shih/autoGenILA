  logic [4:0] _000_;
  logic [4:0] _000__T ;
  logic [4:0] _000__R ;
  logic [4:0] _000__C ;
  logic [4:0] _000__X ;
  logic [13:0] _000__S ;
  logic _001_;
  logic _001__T ;
  logic _001__R ;
  logic _001__C ;
  logic _001__X ;
  logic [13:0] _001__S ;
  logic _002_;
  logic _002__T ;
  logic _002__R ;
  logic _002__C ;
  logic _002__X ;
  logic [13:0] _002__S ;
  logic _003_;
  logic _003__T ;
  logic _003__R ;
  logic _003__C ;
  logic _003__X ;
  logic [13:0] _003__S ;
  logic [4:0] _004_;
  logic [4:0] _004__T ;
  logic [4:0] _004__R ;
  logic [4:0] _004__C ;
  logic [4:0] _004__X ;
  logic [13:0] _004__S ;
  logic [9:0] _005_;
  logic [9:0] _005__T ;
  logic [9:0] _005__R ;
  logic [9:0] _005__C ;
  logic [9:0] _005__X ;
  logic [13:0] _005__S ;
  logic _006_;
  logic _006__T ;
  logic _006__R ;
  logic _006__C ;
  logic _006__X ;
  logic [13:0] _006__S ;
  logic _007_;
  logic _007__T ;
  logic _007__R ;
  logic _007__C ;
  logic _007__X ;
  logic [13:0] _007__S ;
  logic [4:0] _008_;
  logic [4:0] _008__T ;
  logic [4:0] _008__R ;
  logic [4:0] _008__C ;
  logic [4:0] _008__X ;
  logic [13:0] _008__S ;
  logic _009_;
  logic _009__T ;
  logic _009__R ;
  logic _009__C ;
  logic _009__X ;
  logic [13:0] _009__S ;
  logic _010_;
  logic _010__T ;
  logic _010__R ;
  logic _010__C ;
  logic _010__X ;
  logic [13:0] _010__S ;
  logic _011_;
  logic _011__T ;
  logic _011__R ;
  logic _011__C ;
  logic _011__X ;
  logic [13:0] _011__S ;
  logic _012_;
  logic _012__T ;
  logic _012__R ;
  logic _012__C ;
  logic _012__X ;
  logic [13:0] _012__S ;
  logic _013_;
  logic _013__T ;
  logic _013__R ;
  logic _013__C ;
  logic _013__X ;
  logic [13:0] _013__S ;
  logic _014_;
  logic _014__T ;
  logic _014__R ;
  logic _014__C ;
  logic _014__X ;
  logic [13:0] _014__S ;
  logic _015_;
  logic _015__T ;
  logic _015__R ;
  logic _015__C ;
  logic _015__X ;
  logic [13:0] _015__S ;
  logic _016_;
  logic _016__T ;
  logic _016__R ;
  logic _016__C ;
  logic _016__X ;
  logic [13:0] _016__S ;
  logic _017_;
  logic _017__T ;
  logic _017__R ;
  logic _017__C ;
  logic _017__X ;
  logic [13:0] _017__S ;
  logic _018_;
  logic _018__T ;
  logic _018__R ;
  logic _018__C ;
  logic _018__X ;
  logic [13:0] _018__S ;
  logic [9:0] _019_;
  logic [9:0] _019__T ;
  logic [9:0] _019__R ;
  logic [9:0] _019__C ;
  logic [9:0] _019__X ;
  logic [13:0] _019__S ;
  logic [9:0] _020_;
  logic [9:0] _020__T ;
  logic [9:0] _020__R ;
  logic [9:0] _020__C ;
  logic [9:0] _020__X ;
  logic [13:0] _020__S ;
  logic [9:0] _021_;
  logic [9:0] _021__T ;
  logic [9:0] _021__R ;
  logic [9:0] _021__C ;
  logic [9:0] _021__X ;
  logic [13:0] _021__S ;
  logic _022_;
  logic _022__T ;
  logic _022__R ;
  logic _022__C ;
  logic _022__X ;
  logic [13:0] _022__S ;
  logic _023_;
  logic _023__T ;
  logic _023__R ;
  logic _023__C ;
  logic _023__X ;
  logic [13:0] _023__S ;
  logic _024_;
  logic _024__T ;
  logic _024__R ;
  logic _024__C ;
  logic _024__X ;
  logic [13:0] _024__S ;
  logic [5:0] _025_;
  logic [5:0] _025__T ;
  logic [5:0] _025__R ;
  logic [5:0] _025__C ;
  logic [5:0] _025__X ;
  logic [13:0] _025__S ;
  logic _026_;
  logic _026__T ;
  logic _026__R ;
  logic _026__C ;
  logic _026__X ;
  logic [13:0] _026__S ;
  logic _027_;
  logic _027__T ;
  logic _027__R ;
  logic _027__C ;
  logic _027__X ;
  logic [13:0] _027__S ;
  logic _028_;
  logic _028__T ;
  logic _028__R ;
  logic _028__C ;
  logic _028__X ;
  logic [13:0] _028__S ;
  logic _029_;
  logic _029__T ;
  logic _029__R ;
  logic _029__C ;
  logic _029__X ;
  logic [13:0] _029__S ;
  logic _030_;
  logic _030__T ;
  logic _030__R ;
  logic _030__C ;
  logic _030__X ;
  logic [13:0] _030__S ;
  logic _031_;
  logic _031__T ;
  logic _031__R ;
  logic _031__C ;
  logic _031__X ;
  logic [13:0] _031__S ;
  logic _032_;
  logic _032__T ;
  logic _032__R ;
  logic _032__C ;
  logic _032__X ;
  logic [13:0] _032__S ;
  logic _033_;
  logic _033__T ;
  logic _033__R ;
  logic _033__C ;
  logic _033__X ;
  logic [13:0] _033__S ;
  logic _034_;
  logic _034__T ;
  logic _034__R ;
  logic _034__C ;
  logic _034__X ;
  logic [13:0] _034__S ;
  logic _035_;
  logic _035__T ;
  logic _035__R ;
  logic _035__C ;
  logic _035__X ;
  logic [13:0] _035__S ;
  logic _036_;
  logic _036__T ;
  logic _036__R ;
  logic _036__C ;
  logic _036__X ;
  logic [13:0] _036__S ;
  logic _037_;
  logic _037__T ;
  logic _037__R ;
  logic _037__C ;
  logic _037__X ;
  logic [13:0] _037__S ;
  logic _038_;
  logic _038__T ;
  logic _038__R ;
  logic _038__C ;
  logic _038__X ;
  logic [13:0] _038__S ;
  logic _039_;
  logic _039__T ;
  logic _039__R ;
  logic _039__C ;
  logic _039__X ;
  logic [13:0] _039__S ;
  logic [4:0] _040_;
  logic [4:0] _040__T ;
  logic [4:0] _040__R ;
  logic [4:0] _040__C ;
  logic [4:0] _040__X ;
  logic [13:0] _040__S ;
  logic _041_;
  logic _041__T ;
  logic _041__R ;
  logic _041__C ;
  logic _041__X ;
  logic [13:0] _041__S ;
  logic _042_;
  logic _042__T ;
  logic _042__R ;
  logic _042__C ;
  logic _042__X ;
  logic [13:0] _042__S ;
  logic _043_;
  logic _043__T ;
  logic _043__R ;
  logic _043__C ;
  logic _043__X ;
  logic [13:0] _043__S ;
  logic _044_;
  logic _044__T ;
  logic _044__R ;
  logic _044__C ;
  logic _044__X ;
  logic [13:0] _044__S ;
  logic _045_;
  logic _045__T ;
  logic _045__R ;
  logic _045__C ;
  logic _045__X ;
  logic [13:0] _045__S ;
  logic _046_;
  logic _046__T ;
  logic _046__R ;
  logic _046__C ;
  logic _046__X ;
  logic [13:0] _046__S ;
  logic _047_;
  logic _047__T ;
  logic _047__R ;
  logic _047__C ;
  logic _047__X ;
  logic [13:0] _047__S ;
  logic _048_;
  logic _048__T ;
  logic _048__R ;
  logic _048__C ;
  logic _048__X ;
  logic [13:0] _048__S ;
  logic _049_;
  logic _049__T ;
  logic _049__R ;
  logic _049__C ;
  logic _049__X ;
  logic [13:0] _049__S ;
  logic _050_;
  logic _050__T ;
  logic _050__R ;
  logic _050__C ;
  logic _050__X ;
  logic [13:0] _050__S ;
  logic _051_;
  logic _051__T ;
  logic _051__R ;
  logic _051__C ;
  logic _051__X ;
  logic [13:0] _051__S ;
  logic _052_;
  logic _052__T ;
  logic _052__R ;
  logic _052__C ;
  logic _052__X ;
  logic [13:0] _052__S ;
  logic _053_;
  logic _053__T ;
  logic _053__R ;
  logic _053__C ;
  logic _053__X ;
  logic [13:0] _053__S ;
  logic [4:0] FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl;
  logic [4:0] FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_T ;
  logic [4:0] FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_R ;
  logic [4:0] FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_C ;
  logic [4:0] FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_X ;
  logic [13:0] FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_S ;
  logic FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_itm_4_1;
  logic FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_itm_4_1_T ;
  logic FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_itm_4_1_R ;
  logic FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_itm_4_1_C ;
  logic FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_itm_4_1_X ;
  logic [13:0] FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_itm_4_1_S ;
  logic [4:0] FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl;
  logic [4:0] FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_T ;
  logic [4:0] FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R ;
  logic [4:0] FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C ;
  logic [4:0] FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X ;
  logic [13:0] FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_S ;
  logic FpFractionToFloat_16U_6U_10U_if_else_if_acc_itm_5_1;
  logic FpFractionToFloat_16U_6U_10U_if_else_if_acc_itm_5_1_T ;
  logic FpFractionToFloat_16U_6U_10U_if_else_if_acc_itm_5_1_R ;
  logic FpFractionToFloat_16U_6U_10U_if_else_if_acc_itm_5_1_C ;
  logic FpFractionToFloat_16U_6U_10U_if_else_if_acc_itm_5_1_X ;
  logic [13:0] FpFractionToFloat_16U_6U_10U_if_else_if_acc_itm_5_1_S ;
  logic [5:0] FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl;
  logic [5:0] FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_T ;
  logic [5:0] FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R ;
  logic [5:0] FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C ;
  logic [5:0] FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X ;
  logic [13:0] FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_S ;
  logic FpFractionToFloat_16U_6U_10U_if_else_mux_1_nl;
  logic FpFractionToFloat_16U_6U_10U_if_else_mux_1_nl_T ;
  logic FpFractionToFloat_16U_6U_10U_if_else_mux_1_nl_R ;
  logic FpFractionToFloat_16U_6U_10U_if_else_mux_1_nl_C ;
  logic FpFractionToFloat_16U_6U_10U_if_else_mux_1_nl_X ;
  logic [13:0] FpFractionToFloat_16U_6U_10U_if_else_mux_1_nl_S ;
  logic [4:0] FpFractionToFloat_16U_6U_10U_nor_1_nl;
  logic [4:0] FpFractionToFloat_16U_6U_10U_nor_1_nl_T ;
  logic [4:0] FpFractionToFloat_16U_6U_10U_nor_1_nl_R ;
  logic [4:0] FpFractionToFloat_16U_6U_10U_nor_1_nl_C ;
  logic [4:0] FpFractionToFloat_16U_6U_10U_nor_1_nl_X ;
  logic [13:0] FpFractionToFloat_16U_6U_10U_nor_1_nl_S ;
  logic FpFractionToFloat_16U_6U_10U_unequal_tmp;
  logic FpFractionToFloat_16U_6U_10U_unequal_tmp_T ;
  logic FpFractionToFloat_16U_6U_10U_unequal_tmp_R ;
  logic FpFractionToFloat_16U_6U_10U_unequal_tmp_C ;
  logic FpFractionToFloat_16U_6U_10U_unequal_tmp_X ;
  logic [13:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_S ;
  logic [10:0] FpMantRNE_17U_11U_else_ac_int_cctor_sva;
  logic [10:0] FpMantRNE_17U_11U_else_ac_int_cctor_sva_T ;
  logic [10:0] FpMantRNE_17U_11U_else_ac_int_cctor_sva_R ;
  logic [10:0] FpMantRNE_17U_11U_else_ac_int_cctor_sva_C ;
  logic [10:0] FpMantRNE_17U_11U_else_ac_int_cctor_sva_X ;
  logic [13:0] FpMantRNE_17U_11U_else_ac_int_cctor_sva_S ;
  logic FpMantRNE_17U_11U_else_and_svs;
  logic  FpMantRNE_17U_11U_else_and_svs_T ;
  logic  FpMantRNE_17U_11U_else_and_svs_PREV_VAL1 ;
  logic  FpMantRNE_17U_11U_else_and_svs_PREV_VAL2 ;
  logic  FpMantRNE_17U_11U_else_and_svs_R ;
  logic  FpMantRNE_17U_11U_else_and_svs_X ;
  logic  FpMantRNE_17U_11U_else_and_svs_C ;
  logic [13:0] FpMantRNE_17U_11U_else_and_svs_S ;
  logic FpMantRNE_17U_11U_else_and_svs_t_flag ;
  logic FpMantRNE_17U_11U_else_and_svs_r_flag ;
  assign FpMantRNE_17U_11U_else_and_svs_S = 734 ;
  logic FpMantRNE_17U_11U_else_and_svs_mx0w0;
  logic FpMantRNE_17U_11U_else_and_svs_mx0w0_T ;
  logic FpMantRNE_17U_11U_else_and_svs_mx0w0_R ;
  logic FpMantRNE_17U_11U_else_and_svs_mx0w0_C ;
  logic FpMantRNE_17U_11U_else_and_svs_mx0w0_X ;
  logic [13:0] FpMantRNE_17U_11U_else_and_svs_mx0w0_S ;
  logic FpMantRNE_17U_11U_else_and_svs_mx1;
  logic FpMantRNE_17U_11U_else_and_svs_mx1_T ;
  logic FpMantRNE_17U_11U_else_and_svs_mx1_R ;
  logic FpMantRNE_17U_11U_else_and_svs_mx1_C ;
  logic FpMantRNE_17U_11U_else_and_svs_mx1_X ;
  logic [13:0] FpMantRNE_17U_11U_else_and_svs_mx1_S ;
  logic FpMantRNE_17U_11U_else_carry_sva;
  logic FpMantRNE_17U_11U_else_carry_sva_T ;
  logic FpMantRNE_17U_11U_else_carry_sva_R ;
  logic FpMantRNE_17U_11U_else_carry_sva_C ;
  logic FpMantRNE_17U_11U_else_carry_sva_X ;
  logic [13:0] FpMantRNE_17U_11U_else_carry_sva_S ;
  logic [16:0] FpMantRNE_17U_11U_i_data_sva;
  logic [16:0] FpMantRNE_17U_11U_i_data_sva_T ;
  logic [16:0] FpMantRNE_17U_11U_i_data_sva_R ;
  logic [16:0] FpMantRNE_17U_11U_i_data_sva_C ;
  logic [16:0] FpMantRNE_17U_11U_i_data_sva_X ;
  logic [13:0] FpMantRNE_17U_11U_i_data_sva_S ;
  logic and_4_mdf;
  logic and_4_mdf_T ;
  logic and_4_mdf_R ;
  logic and_4_mdf_C ;
  logic and_4_mdf_X ;
  logic [13:0] and_4_mdf_S ;
  logic and_52_nl;
  logic and_52_nl_T ;
  logic and_52_nl_R ;
  logic and_52_nl_C ;
  logic and_52_nl_X ;
  logic [13:0] and_52_nl_S ;
  logic and_53_nl;
  logic and_53_nl_T ;
  logic and_53_nl_R ;
  logic and_53_nl_C ;
  logic and_53_nl_X ;
  logic [13:0] and_53_nl_S ;
  logic and_dcpl_2;
  logic and_dcpl_2_T ;
  logic and_dcpl_2_R ;
  logic and_dcpl_2_C ;
  logic and_dcpl_2_X ;
  logic [13:0] and_dcpl_2_S ;
  logic and_dcpl_22;
  logic and_dcpl_22_T ;
  logic and_dcpl_22_R ;
  logic and_dcpl_22_C ;
  logic and_dcpl_22_X ;
  logic [13:0] and_dcpl_22_S ;
  logic and_dcpl_7;
  logic and_dcpl_7_T ;
  logic and_dcpl_7_R ;
  logic and_dcpl_7_C ;
  logic and_dcpl_7_X ;
  logic [13:0] and_dcpl_7_S ;
  logic [4:0] and_nl;
  logic [4:0] and_nl_T ;
  logic [4:0] and_nl_R ;
  logic [4:0] and_nl_C ;
  logic [4:0] and_nl_X ;
  logic [13:0] and_nl_S ;
  output chn_a_rsc_lz;
  logic chn_a_rsc_lz ;
  output chn_a_rsc_lz_T ;
  logic chn_a_rsc_lz_T ;
  logic chn_a_rsc_lz_R ;
  logic chn_a_rsc_lz_C ;
  logic chn_a_rsc_lz_X ;
  logic [13:0] chn_a_rsc_lz_S ;
  input chn_a_rsc_lz_R0 ;
  input chn_a_rsc_lz_C0 ;
  input chn_a_rsc_lz_X0 ;
  output [13:0] chn_a_rsc_lz_S ;
  input chn_a_rsc_vz;
  input chn_a_rsc_vz_T ;
  input [13:0] chn_a_rsc_vz_S ;
  output chn_a_rsc_vz_R ;
  output chn_a_rsc_vz_X ;
  output chn_a_rsc_vz_C ;
  input [15:0] chn_a_rsc_z;
  input [15:0] chn_a_rsc_z_T ;
  input [13:0] chn_a_rsc_z_S ;
  output [15:0] chn_a_rsc_z_R ;
  output [15:0] chn_a_rsc_z_X ;
  output [15:0] chn_a_rsc_z_C ;
  logic chn_a_rsci_bawt;
  logic chn_a_rsci_bawt_T ;
  logic chn_a_rsci_bawt_R ;
  logic chn_a_rsci_bawt_C ;
  logic chn_a_rsci_bawt_X ;
  logic [13:0] chn_a_rsci_bawt_S ;
  logic [15:0] chn_a_rsci_d_mxwt;
  logic [15:0] chn_a_rsci_d_mxwt_T ;
  logic [15:0] chn_a_rsci_d_mxwt_R ;
  logic [15:0] chn_a_rsci_d_mxwt_C ;
  logic [15:0] chn_a_rsci_d_mxwt_X ;
  logic [13:0] chn_a_rsci_d_mxwt_S ;
  logic chn_a_rsci_iswt0;
  logic  chn_a_rsci_iswt0_T ;
  logic  chn_a_rsci_iswt0_PREV_VAL1 ;
  logic  chn_a_rsci_iswt0_PREV_VAL2 ;
  logic  chn_a_rsci_iswt0_R ;
  logic  chn_a_rsci_iswt0_X ;
  logic  chn_a_rsci_iswt0_C ;
  logic [13:0] chn_a_rsci_iswt0_S ;
  logic chn_a_rsci_iswt0_t_flag ;
  logic chn_a_rsci_iswt0_r_flag ;
  assign chn_a_rsci_iswt0_S = 735 ;
  logic chn_a_rsci_ld_core_psct;
  logic  chn_a_rsci_ld_core_psct_T ;
  logic  chn_a_rsci_ld_core_psct_PREV_VAL1 ;
  logic  chn_a_rsci_ld_core_psct_PREV_VAL2 ;
  logic  chn_a_rsci_ld_core_psct_R ;
  logic  chn_a_rsci_ld_core_psct_X ;
  logic  chn_a_rsci_ld_core_psct_C ;
  logic [13:0] chn_a_rsci_ld_core_psct_S ;
  logic chn_a_rsci_ld_core_psct_t_flag ;
  logic chn_a_rsci_ld_core_psct_r_flag ;
  assign chn_a_rsci_ld_core_psct_S = 736 ;
  logic chn_a_rsci_ld_core_psct_mx0c0;
  logic chn_a_rsci_ld_core_psct_mx0c0_T ;
  logic chn_a_rsci_ld_core_psct_mx0c0_R ;
  logic chn_a_rsci_ld_core_psct_mx0c0_C ;
  logic chn_a_rsci_ld_core_psct_mx0c0_X ;
  logic [13:0] chn_a_rsci_ld_core_psct_mx0c0_S ;
  input chn_a_rsci_oswt;
  input chn_a_rsci_oswt_T ;
  input [13:0] chn_a_rsci_oswt_S ;
  output chn_a_rsci_oswt_R ;
  output chn_a_rsci_oswt_X ;
  output chn_a_rsci_oswt_C ;
  output chn_a_rsci_oswt_unreg;
  logic chn_a_rsci_oswt_unreg ;
  output chn_a_rsci_oswt_unreg_T ;
  logic chn_a_rsci_oswt_unreg_T ;
  logic chn_a_rsci_oswt_unreg_R ;
  logic chn_a_rsci_oswt_unreg_C ;
  logic chn_a_rsci_oswt_unreg_X ;
  logic [13:0] chn_a_rsci_oswt_unreg_S ;
  input chn_a_rsci_oswt_unreg_R0 ;
  input chn_a_rsci_oswt_unreg_C0 ;
  input chn_a_rsci_oswt_unreg_X0 ;
  output [13:0] chn_a_rsci_oswt_unreg_S ;
  logic chn_a_rsci_wen_comp;
  logic chn_a_rsci_wen_comp_T ;
  logic chn_a_rsci_wen_comp_R ;
  logic chn_a_rsci_wen_comp_C ;
  logic chn_a_rsci_wen_comp_X ;
  logic [13:0] chn_a_rsci_wen_comp_S ;
  output chn_o_rsc_lz;
  logic chn_o_rsc_lz ;
  output chn_o_rsc_lz_T ;
  logic chn_o_rsc_lz_T ;
  logic chn_o_rsc_lz_R ;
  logic chn_o_rsc_lz_C ;
  logic chn_o_rsc_lz_X ;
  logic [13:0] chn_o_rsc_lz_S ;
  input chn_o_rsc_lz_R0 ;
  input chn_o_rsc_lz_C0 ;
  input chn_o_rsc_lz_X0 ;
  output [13:0] chn_o_rsc_lz_S ;
  input chn_o_rsc_vz;
  input chn_o_rsc_vz_T ;
  input [13:0] chn_o_rsc_vz_S ;
  output chn_o_rsc_vz_R ;
  output chn_o_rsc_vz_X ;
  output chn_o_rsc_vz_C ;
  output [16:0] chn_o_rsc_z;
  logic [16:0] chn_o_rsc_z ;
  output [16:0] chn_o_rsc_z_T ;
  logic [16:0] chn_o_rsc_z_T ;
  logic [16:0] chn_o_rsc_z_R ;
  logic [16:0] chn_o_rsc_z_C ;
  logic [16:0] chn_o_rsc_z_X ;
  logic [13:0] chn_o_rsc_z_S ;
  input [16:0] chn_o_rsc_z_R0 ;
  input [16:0] chn_o_rsc_z_C0 ;
  input [16:0] chn_o_rsc_z_X0 ;
  output [13:0] chn_o_rsc_z_S ;
  logic chn_o_rsci_bawt;
  logic chn_o_rsci_bawt_T ;
  logic chn_o_rsci_bawt_R ;
  logic chn_o_rsci_bawt_C ;
  logic chn_o_rsci_bawt_X ;
  logic [13:0] chn_o_rsci_bawt_S ;
  logic [4:0] chn_o_rsci_d_14_10;
  logic [4:0]  chn_o_rsci_d_14_10_T ;
  logic [4:0]  chn_o_rsci_d_14_10_PREV_VAL1 ;
  logic [4:0]  chn_o_rsci_d_14_10_PREV_VAL2 ;
  logic [4:0]  chn_o_rsci_d_14_10_R ;
  logic [4:0]  chn_o_rsci_d_14_10_X ;
  logic [4:0]  chn_o_rsci_d_14_10_C ;
  logic [13:0] chn_o_rsci_d_14_10_S ;
  logic chn_o_rsci_d_14_10_t_flag ;
  logic chn_o_rsci_d_14_10_r_flag ;
  assign chn_o_rsci_d_14_10_S = 737 ;
  logic [9:0] chn_o_rsci_d_9_0;
  logic [9:0]  chn_o_rsci_d_9_0_T ;
  logic [9:0]  chn_o_rsci_d_9_0_PREV_VAL1 ;
  logic [9:0]  chn_o_rsci_d_9_0_PREV_VAL2 ;
  logic [9:0]  chn_o_rsci_d_9_0_R ;
  logic [9:0]  chn_o_rsci_d_9_0_X ;
  logic [9:0]  chn_o_rsci_d_9_0_C ;
  logic [13:0] chn_o_rsci_d_9_0_S ;
  logic chn_o_rsci_d_9_0_t_flag ;
  logic chn_o_rsci_d_9_0_r_flag ;
  assign chn_o_rsci_d_9_0_S = 738 ;
  input chn_o_rsci_oswt;
  input chn_o_rsci_oswt_T ;
  input [13:0] chn_o_rsci_oswt_S ;
  output chn_o_rsci_oswt_R ;
  output chn_o_rsci_oswt_X ;
  output chn_o_rsci_oswt_C ;
  output chn_o_rsci_oswt_unreg;
  logic chn_o_rsci_oswt_unreg ;
  output chn_o_rsci_oswt_unreg_T ;
  logic chn_o_rsci_oswt_unreg_T ;
  logic chn_o_rsci_oswt_unreg_R ;
  logic chn_o_rsci_oswt_unreg_C ;
  logic chn_o_rsci_oswt_unreg_X ;
  logic [13:0] chn_o_rsci_oswt_unreg_S ;
  input chn_o_rsci_oswt_unreg_R0 ;
  input chn_o_rsci_oswt_unreg_C0 ;
  input chn_o_rsci_oswt_unreg_X0 ;
  output [13:0] chn_o_rsci_oswt_unreg_S ;
  logic chn_o_rsci_wen_comp;
  logic chn_o_rsci_wen_comp_T ;
  logic chn_o_rsci_wen_comp_R ;
  logic chn_o_rsci_wen_comp_C ;
  logic chn_o_rsci_wen_comp_X ;
  logic [13:0] chn_o_rsci_wen_comp_S ;
  logic core_wen;
  logic core_wen_T ;
  logic core_wen_R ;
  logic core_wen_C ;
  logic core_wen_X ;
  logic [13:0] core_wen_S ;
  logic core_wten;
  logic core_wten_T ;
  logic core_wten_R ;
  logic core_wten_C ;
  logic core_wten_X ;
  logic [13:0] core_wten_S ;
  logic [1:0] fsm_output;
  logic [1:0] fsm_output_T ;
  logic [1:0] fsm_output_R ;
  logic [1:0] fsm_output_C ;
  logic [1:0] fsm_output_X ;
  logic [13:0] fsm_output_S ;
  logic [4:0] libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1;
  logic [4:0] libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_T ;
  logic [4:0] libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_R ;
  logic [4:0] libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_C ;
  logic [4:0] libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_X ;
  logic [13:0] libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_S ;
  logic [4:0] mux_3_nl;
  logic [4:0] mux_3_nl_T ;
  logic [4:0] mux_3_nl_R ;
  logic [4:0] mux_3_nl_C ;
  logic [4:0] mux_3_nl_X ;
  logic [13:0] mux_3_nl_S ;
  logic [9:0] mux_4_nl;
  logic [9:0] mux_4_nl_T ;
  logic [9:0] mux_4_nl_R ;
  logic [9:0] mux_4_nl_C ;
  logic [9:0] mux_4_nl_X ;
  logic [13:0] mux_4_nl_S ;
  logic mux_tmp;
  logic mux_tmp_T ;
  logic mux_tmp_R ;
  logic mux_tmp_C ;
  logic mux_tmp_X ;
  logic [13:0] mux_tmp_S ;
  logic nand_8_nl;
  logic nand_8_nl_T ;
  logic nand_8_nl_R ;
  logic nand_8_nl_C ;
  logic nand_8_nl_X ;
  logic [13:0] nand_8_nl_S ;
  logic [5:0] nl_FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl;
  logic [5:0] nl_FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_T ;
  logic [5:0] nl_FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_R ;
  logic [5:0] nl_FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_C ;
  logic [5:0] nl_FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_X ;
  logic [13:0] nl_FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_S ;
  logic [5:0] nl_FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl;
  logic [5:0] nl_FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_T ;
  logic [5:0] nl_FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R ;
  logic [5:0] nl_FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C ;
  logic [5:0] nl_FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X ;
  logic [13:0] nl_FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_S ;
  logic [6:0] nl_FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl;
  logic [6:0] nl_FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_T ;
  logic [6:0] nl_FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R ;
  logic [6:0] nl_FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C ;
  logic [6:0] nl_FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X ;
  logic [13:0] nl_FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_S ;
  logic [5:0] nl_FpFractionToFloat_16U_6U_10U_if_shifted_frac_p1_lshift_rg_s;
  logic [5:0] nl_FpFractionToFloat_16U_6U_10U_if_shifted_frac_p1_lshift_rg_s_T ;
  logic [5:0] nl_FpFractionToFloat_16U_6U_10U_if_shifted_frac_p1_lshift_rg_s_R ;
  logic [5:0] nl_FpFractionToFloat_16U_6U_10U_if_shifted_frac_p1_lshift_rg_s_C ;
  logic [5:0] nl_FpFractionToFloat_16U_6U_10U_if_shifted_frac_p1_lshift_rg_s_X ;
  logic [13:0] nl_FpFractionToFloat_16U_6U_10U_if_shifted_frac_p1_lshift_rg_s_S ;
  logic [11:0] nl_FpMantRNE_17U_11U_else_ac_int_cctor_sva;
  logic [11:0] nl_FpMantRNE_17U_11U_else_ac_int_cctor_sva_T ;
  logic [11:0] nl_FpMantRNE_17U_11U_else_ac_int_cctor_sva_R ;
  logic [11:0] nl_FpMantRNE_17U_11U_else_ac_int_cctor_sva_C ;
  logic [11:0] nl_FpMantRNE_17U_11U_else_ac_int_cctor_sva_X ;
  logic [13:0] nl_FpMantRNE_17U_11U_else_ac_int_cctor_sva_S ;
  logic [14:0] nl_HLS_uint16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d;
  logic [14:0] nl_HLS_uint16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_T ;
  logic [14:0] nl_HLS_uint16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_R ;
  logic [14:0] nl_HLS_uint16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_C ;
  logic [14:0] nl_HLS_uint16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_X ;
  logic [13:0] nl_HLS_uint16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_S ;
  logic nor_9_nl;
  logic nor_9_nl_T ;
  logic nor_9_nl_R ;
  logic nor_9_nl_C ;
  logic nor_9_nl_X ;
  logic [13:0] nor_9_nl_S ;
  logic not_41_nl;
  logic not_41_nl_T ;
  logic not_41_nl_R ;
  logic not_41_nl_C ;
  logic not_41_nl_X ;
  logic [13:0] not_41_nl_S ;
  input nvdla_core_clk;
  input nvdla_core_clk_T ;
  input [13:0] nvdla_core_clk_S ;
  output nvdla_core_clk_R ;
  output nvdla_core_clk_X ;
  output nvdla_core_clk_C ;
  input nvdla_core_rstn;
  input nvdla_core_rstn_T ;
  input [13:0] nvdla_core_rstn_S ;
  output nvdla_core_rstn_R ;
  output nvdla_core_rstn_X ;
  output nvdla_core_rstn_C ;
  logic or_cse;
  logic or_cse_T ;
  logic or_cse_R ;
  logic or_cse_C ;
  logic or_cse_X ;
  logic [13:0] or_cse_S ;
  logic or_dcpl_1;
  logic or_dcpl_1_T ;
  logic or_dcpl_1_R ;
  logic or_dcpl_1_C ;
  logic or_dcpl_1_X ;
  logic [13:0] or_dcpl_1_S ;
  logic or_tmp_7;
  logic or_tmp_7_T ;
  logic or_tmp_7_R ;
  logic or_tmp_7_C ;
  logic or_tmp_7_X ;
  logic [13:0] or_tmp_7_S ;
  logic reg_chn_o_rsci_iswt0_cse;
  logic  reg_chn_o_rsci_iswt0_cse_T ;
  logic  reg_chn_o_rsci_iswt0_cse_PREV_VAL1 ;
  logic  reg_chn_o_rsci_iswt0_cse_PREV_VAL2 ;
  logic  reg_chn_o_rsci_iswt0_cse_R ;
  logic  reg_chn_o_rsci_iswt0_cse_X ;
  logic  reg_chn_o_rsci_iswt0_cse_C ;
  logic [13:0] reg_chn_o_rsci_iswt0_cse_S ;
  logic reg_chn_o_rsci_iswt0_cse_t_flag ;
  logic reg_chn_o_rsci_iswt0_cse_r_flag ;
  assign reg_chn_o_rsci_iswt0_cse_S = 739 ;
  logic reg_chn_o_rsci_ld_core_psct_cse;
  logic  reg_chn_o_rsci_ld_core_psct_cse_T ;
  logic  reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL1 ;
  logic  reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL2 ;
  logic  reg_chn_o_rsci_ld_core_psct_cse_R ;
  logic  reg_chn_o_rsci_ld_core_psct_cse_X ;
  logic  reg_chn_o_rsci_ld_core_psct_cse_C ;
  logic [13:0] reg_chn_o_rsci_ld_core_psct_cse_S ;
  logic reg_chn_o_rsci_ld_core_psct_cse_t_flag ;
  logic reg_chn_o_rsci_ld_core_psct_cse_r_flag ;
  assign reg_chn_o_rsci_ld_core_psct_cse_S = 740 ;
  assign nl_FpFractionToFloat_16U_6U_10U_if_shifted_frac_p1_lshift_rg_s = libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1 + 1'b1;
  assign nl_FpFractionToFloat_16U_6U_10U_if_shifted_frac_p1_lshift_rg_s_S = 0 ;
  logic [4:0] libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_C0 ;
  logic [4:0] libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_R0 ;
  logic [4:0] libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_X0 ;
  assign nl_FpFractionToFloat_16U_6U_10U_if_shifted_frac_p1_lshift_rg_s_T = libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_T ;
  assign libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_C0 = nl_FpFractionToFloat_16U_6U_10U_if_shifted_frac_p1_lshift_rg_s_C ;
  assign libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_R0 = nl_FpFractionToFloat_16U_6U_10U_if_shifted_frac_p1_lshift_rg_s_R ;
  assign libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_X0 = nl_FpFractionToFloat_16U_6U_10U_if_shifted_frac_p1_lshift_rg_s_X ;
  logic [5:0] fangyuan0;
  logic [5:0] fangyuan0_T ;
  logic [5:0] fangyuan0_R ;
  logic [5:0] fangyuan0_C ;
  logic [5:0] fangyuan0_X ;
  assign fangyuan0 = { 1'b1, libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1 };
  assign fangyuan0_T = {  1'h0 , libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_T  };
  logic [13:0] fangyuan0_S ;
  assign fangyuan0_S = 0 ;
  logic [4:0] libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_R1 ;
  logic [4:0] libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_X1 ;
  logic [4:0] libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_C1 ;
  assign libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_R1 = fangyuan0_R [4:0] ;
  assign libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_X1 = fangyuan0_X [4:0] ;
  assign libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_C1 = fangyuan0_C [4:0] ;

  assign FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl = fangyuan0 + 1'b1;
  assign FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_S = 0 ;
  logic [5:0] fangyuan0_C0 ;
  logic [5:0] fangyuan0_R0 ;
  logic [5:0] fangyuan0_X0 ;
  assign FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_T = fangyuan0_T ;
  assign fangyuan0_C0 = FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C ;
  assign fangyuan0_R0 = FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R ;
  assign fangyuan0_X0 = FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X ;
  logic [4:0] fangyuan1;
  logic [4:0] fangyuan1_T ;
  logic [4:0] fangyuan1_R ;
  logic [4:0] fangyuan1_C ;
  logic [4:0] fangyuan1_X ;
  assign fangyuan1 = { 1'b1, libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1[4:1] };
  assign fangyuan1_T = {  1'h0 , libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_T [4:1]  };
  logic [13:0] fangyuan1_S ;
  assign fangyuan1_S = 0 ;
  logic [4:0] libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_R2 ;
  logic [4:0] libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_X2 ;
  logic [4:0] libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_C2 ;
  assign libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_R2 [4:1] = fangyuan1_R [3:0] ;
  assign libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_X2 [4:1] = fangyuan1_X [3:0] ;
  assign libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_C2 [4:1] = fangyuan1_C [3:0] ;

  assign FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl = fangyuan1 + 1'b1;
  assign FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_S = 0 ;
  logic [4:0] fangyuan1_C0 ;
  logic [4:0] fangyuan1_R0 ;
  logic [4:0] fangyuan1_X0 ;
  assign FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_T = fangyuan1_T ;
  assign fangyuan1_C0 = FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C ;
  assign fangyuan1_R0 = FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R ;
  assign fangyuan1_X0 = FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X ;
  assign FpMantRNE_17U_11U_else_ac_int_cctor_sva = FpMantRNE_17U_11U_i_data_sva[16:6] + FpMantRNE_17U_11U_else_carry_sva;
  assign FpMantRNE_17U_11U_else_ac_int_cctor_sva_S = 0 ;
  logic [16:0] FpMantRNE_17U_11U_i_data_sva_C0 ;
  logic [16:0] FpMantRNE_17U_11U_i_data_sva_R0 ;
  logic [16:0] FpMantRNE_17U_11U_i_data_sva_X0 ;
  logic [0:0] FpMantRNE_17U_11U_else_carry_sva_C0 ;
  logic [0:0] FpMantRNE_17U_11U_else_carry_sva_R0 ;
  logic [0:0] FpMantRNE_17U_11U_else_carry_sva_X0 ;
  assign FpMantRNE_17U_11U_else_ac_int_cctor_sva_T = FpMantRNE_17U_11U_i_data_sva_T [16:6] | FpMantRNE_17U_11U_else_carry_sva_T ;
  assign FpMantRNE_17U_11U_i_data_sva_C0 [16:6] = FpMantRNE_17U_11U_else_ac_int_cctor_sva_C ;
  assign FpMantRNE_17U_11U_i_data_sva_X0 [16:6] = FpMantRNE_17U_11U_else_ac_int_cctor_sva_X ;
  assign FpMantRNE_17U_11U_else_carry_sva_C0 = FpMantRNE_17U_11U_else_ac_int_cctor_sva_C ;
  assign FpMantRNE_17U_11U_else_carry_sva_X0 = FpMantRNE_17U_11U_else_ac_int_cctor_sva_X ;
  assign FpMantRNE_17U_11U_i_data_sva_R0 [16:6] = FpMantRNE_17U_11U_else_ac_int_cctor_sva_R | ( FpMantRNE_17U_11U_else_ac_int_cctor_sva_C & FpMantRNE_17U_11U_else_carry_sva_T );
  assign FpMantRNE_17U_11U_else_carry_sva_R0 = FpMantRNE_17U_11U_else_ac_int_cctor_sva_R | ( FpMantRNE_17U_11U_else_ac_int_cctor_sva_C & FpMantRNE_17U_11U_i_data_sva_T [16:6] );
  assign FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl = _025_[4:0] + 5'b11111;
  assign FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_S = 0 ;
  logic [5:0] _025__C0 ;
  logic [5:0] _025__R0 ;
  logic [5:0] _025__X0 ;
  assign FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_T = _025__T [4:0] ;
  assign _025__C0 [4:0] = FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_C ;
  assign _025__R0 [4:0] = FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_R ;
  assign _025__X0 [4:0] = FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_X ;
  assign _009_ = FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl[5] & FpMantRNE_17U_11U_else_and_svs_mx1;
  assign _009__S = 0 ;
  logic [5:0] FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C0 ;
  logic [5:0] FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R0 ;
  logic [5:0] FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X0 ;
  logic [0:0] FpMantRNE_17U_11U_else_and_svs_mx1_C0 ;
  logic [0:0] FpMantRNE_17U_11U_else_and_svs_mx1_R0 ;
  logic [0:0] FpMantRNE_17U_11U_else_and_svs_mx1_X0 ;
  assign _009__T = FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_T [5] | FpMantRNE_17U_11U_else_and_svs_mx1_T ;
  assign FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C0 [5] = _009__C ;
  assign FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X0 [5] = _009__X ;
  assign FpMantRNE_17U_11U_else_and_svs_mx1_C0 = _009__C ;
  assign FpMantRNE_17U_11U_else_and_svs_mx1_X0 = _009__X ;
  assign FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R0 [5] = ( _009__R | _009__C & FpMantRNE_17U_11U_else_and_svs_mx1_T ) & { 1{ FpMantRNE_17U_11U_else_and_svs_mx1 != 0 }} ;
  assign FpMantRNE_17U_11U_else_and_svs_mx1_R0 = ( _009__R | _009__C & FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_T [5] ) & { 1{ FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl[5] != 0 }} ;
  assign _010_ = FpMantRNE_17U_11U_else_and_svs_mx1 & _028_;
  assign _010__S = 0 ;
  logic [0:0] FpMantRNE_17U_11U_else_and_svs_mx1_C1 ;
  logic [0:0] FpMantRNE_17U_11U_else_and_svs_mx1_R1 ;
  logic [0:0] FpMantRNE_17U_11U_else_and_svs_mx1_X1 ;
  logic [0:0] _028__C0 ;
  logic [0:0] _028__R0 ;
  logic [0:0] _028__X0 ;
  assign _010__T = FpMantRNE_17U_11U_else_and_svs_mx1_T | _028__T ;
  assign FpMantRNE_17U_11U_else_and_svs_mx1_C1 = _010__C ;
  assign FpMantRNE_17U_11U_else_and_svs_mx1_X1 = _010__X ;
  assign _028__C0 = _010__C ;
  assign _028__X0 = _010__X ;
  assign FpMantRNE_17U_11U_else_and_svs_mx1_R1 = ( _010__R | _010__C & _028__T ) & { 1{ _028_ != 0 }} ;
  assign _028__R0 = ( _010__R | _010__C & FpMantRNE_17U_11U_else_and_svs_mx1_T ) & { 1{ FpMantRNE_17U_11U_else_and_svs_mx1 != 0 }} ;
  assign not_41_nl = _029_ & FpFractionToFloat_16U_6U_10U_unequal_tmp;
  assign not_41_nl_S = 0 ;
  logic [0:0] _029__C0 ;
  logic [0:0] _029__R0 ;
  logic [0:0] _029__X0 ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_C0 ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_R0 ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_X0 ;
  assign not_41_nl_T = _029__T | FpFractionToFloat_16U_6U_10U_unequal_tmp_T ;
  assign _029__C0 = not_41_nl_C ;
  assign _029__X0 = not_41_nl_X ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_C0 = not_41_nl_C ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_X0 = not_41_nl_X ;
  assign _029__R0 = ( not_41_nl_R | not_41_nl_C & FpFractionToFloat_16U_6U_10U_unequal_tmp_T ) & { 1{ FpFractionToFloat_16U_6U_10U_unequal_tmp != 0 }} ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_R0 = ( not_41_nl_R | not_41_nl_C & _029__T ) & { 1{ _029_ != 0 }} ;
  assign FpMantRNE_17U_11U_else_and_svs_mx0w0 = FpMantRNE_17U_11U_else_carry_sva & _026_;
  assign FpMantRNE_17U_11U_else_and_svs_mx0w0_S = 0 ;
  logic [0:0] FpMantRNE_17U_11U_else_carry_sva_C1 ;
  logic [0:0] FpMantRNE_17U_11U_else_carry_sva_R1 ;
  logic [0:0] FpMantRNE_17U_11U_else_carry_sva_X1 ;
  logic [0:0] _026__C0 ;
  logic [0:0] _026__R0 ;
  logic [0:0] _026__X0 ;
  assign FpMantRNE_17U_11U_else_and_svs_mx0w0_T = FpMantRNE_17U_11U_else_carry_sva_T | _026__T ;
  assign FpMantRNE_17U_11U_else_carry_sva_C1 = FpMantRNE_17U_11U_else_and_svs_mx0w0_C ;
  assign FpMantRNE_17U_11U_else_carry_sva_X1 = FpMantRNE_17U_11U_else_and_svs_mx0w0_X ;
  assign _026__C0 = FpMantRNE_17U_11U_else_and_svs_mx0w0_C ;
  assign _026__X0 = FpMantRNE_17U_11U_else_and_svs_mx0w0_X ;
  assign FpMantRNE_17U_11U_else_carry_sva_R1 = ( FpMantRNE_17U_11U_else_and_svs_mx0w0_R | FpMantRNE_17U_11U_else_and_svs_mx0w0_C & _026__T ) & { 1{ _026_ != 0 }} ;
  assign _026__R0 = ( FpMantRNE_17U_11U_else_and_svs_mx0w0_R | FpMantRNE_17U_11U_else_and_svs_mx0w0_C & FpMantRNE_17U_11U_else_carry_sva_T ) & { 1{ FpMantRNE_17U_11U_else_carry_sva != 0 }} ;
  assign FpMantRNE_17U_11U_else_carry_sva = FpMantRNE_17U_11U_i_data_sva[5] & _048_;
  assign FpMantRNE_17U_11U_else_carry_sva_S = 0 ;
  logic [0:0] _048__C0 ;
  logic [0:0] _048__R0 ;
  logic [0:0] _048__X0 ;
  assign FpMantRNE_17U_11U_else_carry_sva_T = FpMantRNE_17U_11U_i_data_sva_T [5] | _048__T ;
  assign FpMantRNE_17U_11U_i_data_sva_C0 [5] = FpMantRNE_17U_11U_else_carry_sva_C ;
  assign FpMantRNE_17U_11U_i_data_sva_X0 [5] = FpMantRNE_17U_11U_else_carry_sva_X ;
  assign _048__C0 = FpMantRNE_17U_11U_else_carry_sva_C ;
  assign _048__X0 = FpMantRNE_17U_11U_else_carry_sva_X ;
  assign FpMantRNE_17U_11U_i_data_sva_R0 [5] = ( FpMantRNE_17U_11U_else_carry_sva_R | FpMantRNE_17U_11U_else_carry_sva_C & _048__T ) & { 1{ _048_ != 0 }} ;
  assign _048__R0 = ( FpMantRNE_17U_11U_else_carry_sva_R | FpMantRNE_17U_11U_else_carry_sva_C & FpMantRNE_17U_11U_i_data_sva_T [5] ) & { 1{ FpMantRNE_17U_11U_i_data_sva[5] != 0 }} ;
  assign _011_ = FpFractionToFloat_16U_6U_10U_if_else_mux_1_nl & FpFractionToFloat_16U_6U_10U_unequal_tmp;
  assign _011__S = 0 ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_if_else_mux_1_nl_C0 ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_if_else_mux_1_nl_R0 ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_if_else_mux_1_nl_X0 ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_C1 ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_R1 ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_X1 ;
  assign _011__T = FpFractionToFloat_16U_6U_10U_if_else_mux_1_nl_T | FpFractionToFloat_16U_6U_10U_unequal_tmp_T ;
  assign FpFractionToFloat_16U_6U_10U_if_else_mux_1_nl_C0 = _011__C ;
  assign FpFractionToFloat_16U_6U_10U_if_else_mux_1_nl_X0 = _011__X ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_C1 = _011__C ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_X1 = _011__X ;
  assign FpFractionToFloat_16U_6U_10U_if_else_mux_1_nl_R0 = ( _011__R | _011__C & FpFractionToFloat_16U_6U_10U_unequal_tmp_T ) & { 1{ FpFractionToFloat_16U_6U_10U_unequal_tmp != 0 }} ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_R1 = ( _011__R | _011__C & FpFractionToFloat_16U_6U_10U_if_else_mux_1_nl_T ) & { 1{ FpFractionToFloat_16U_6U_10U_if_else_mux_1_nl != 0 }} ;
  assign and_4_mdf = chn_a_rsci_bawt & or_cse;
  assign and_4_mdf_S = 0 ;
  logic [0:0] chn_a_rsci_bawt_C0 ;
  logic [0:0] chn_a_rsci_bawt_R0 ;
  logic [0:0] chn_a_rsci_bawt_X0 ;
  logic [0:0] or_cse_C0 ;
  logic [0:0] or_cse_R0 ;
  logic [0:0] or_cse_X0 ;
  assign and_4_mdf_T = chn_a_rsci_bawt_T | or_cse_T ;
  assign chn_a_rsci_bawt_C0 = and_4_mdf_C ;
  assign chn_a_rsci_bawt_X0 = and_4_mdf_X ;
  assign or_cse_C0 = and_4_mdf_C ;
  assign or_cse_X0 = and_4_mdf_X ;
  assign chn_a_rsci_bawt_R0 = ( and_4_mdf_R | and_4_mdf_C & or_cse_T ) & { 1{ or_cse != 0 }} ;
  assign or_cse_R0 = ( and_4_mdf_R | and_4_mdf_C & chn_a_rsci_bawt_T ) & { 1{ chn_a_rsci_bawt != 0 }} ;
  assign and_dcpl_2 = chn_o_rsci_bawt & reg_chn_o_rsci_ld_core_psct_cse;
  assign and_dcpl_2_S = 0 ;
  logic [0:0] chn_o_rsci_bawt_C0 ;
  logic [0:0] chn_o_rsci_bawt_R0 ;
  logic [0:0] chn_o_rsci_bawt_X0 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C0 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R0 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X0 ;
  assign and_dcpl_2_T = chn_o_rsci_bawt_T | reg_chn_o_rsci_ld_core_psct_cse_T ;
  assign chn_o_rsci_bawt_C0 = and_dcpl_2_C ;
  assign chn_o_rsci_bawt_X0 = and_dcpl_2_X ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C0 = and_dcpl_2_C ;
  assign reg_chn_o_rsci_ld_core_psct_cse_X0 = and_dcpl_2_X ;
  assign chn_o_rsci_bawt_R0 = ( and_dcpl_2_R | and_dcpl_2_C & reg_chn_o_rsci_ld_core_psct_cse_T ) & { 1{ reg_chn_o_rsci_ld_core_psct_cse != 0 }} ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R0 = ( and_dcpl_2_R | and_dcpl_2_C & chn_o_rsci_bawt_T ) & { 1{ chn_o_rsci_bawt != 0 }} ;
  assign _012_ = _031_ & reg_chn_o_rsci_ld_core_psct_cse;
  assign _012__S = 0 ;
  logic [0:0] _031__C0 ;
  logic [0:0] _031__R0 ;
  logic [0:0] _031__X0 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C1 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R1 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X1 ;
  assign _012__T = _031__T | reg_chn_o_rsci_ld_core_psct_cse_T ;
  assign _031__C0 = _012__C ;
  assign _031__X0 = _012__X ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C1 = _012__C ;
  assign reg_chn_o_rsci_ld_core_psct_cse_X1 = _012__X ;
  assign _031__R0 = ( _012__R | _012__C & reg_chn_o_rsci_ld_core_psct_cse_T ) & { 1{ reg_chn_o_rsci_ld_core_psct_cse != 0 }} ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R1 = ( _012__R | _012__C & _031__T ) & { 1{ _031_ != 0 }} ;
  assign _013_ = _032_ & chn_a_rsci_bawt;
  assign _013__S = 0 ;
  logic [0:0] _032__C0 ;
  logic [0:0] _032__R0 ;
  logic [0:0] _032__X0 ;
  logic [0:0] chn_a_rsci_bawt_C1 ;
  logic [0:0] chn_a_rsci_bawt_R1 ;
  logic [0:0] chn_a_rsci_bawt_X1 ;
  assign _013__T = _032__T | chn_a_rsci_bawt_T ;
  assign _032__C0 = _013__C ;
  assign _032__X0 = _013__X ;
  assign chn_a_rsci_bawt_C1 = _013__C ;
  assign chn_a_rsci_bawt_X1 = _013__X ;
  assign _032__R0 = ( _013__R | _013__C & chn_a_rsci_bawt_T ) & { 1{ chn_a_rsci_bawt != 0 }} ;
  assign chn_a_rsci_bawt_R1 = ( _013__R | _013__C & _032__T ) & { 1{ _032_ != 0 }} ;
  assign and_dcpl_7 = and_dcpl_2 & _033_;
  assign and_dcpl_7_S = 0 ;
  logic [0:0] and_dcpl_2_C0 ;
  logic [0:0] and_dcpl_2_R0 ;
  logic [0:0] and_dcpl_2_X0 ;
  logic [0:0] _033__C0 ;
  logic [0:0] _033__R0 ;
  logic [0:0] _033__X0 ;
  assign and_dcpl_7_T = and_dcpl_2_T | _033__T ;
  assign and_dcpl_2_C0 = and_dcpl_7_C ;
  assign and_dcpl_2_X0 = and_dcpl_7_X ;
  assign _033__C0 = and_dcpl_7_C ;
  assign _033__X0 = and_dcpl_7_X ;
  assign and_dcpl_2_R0 = ( and_dcpl_7_R | and_dcpl_7_C & _033__T ) & { 1{ _033_ != 0 }} ;
  assign _033__R0 = ( and_dcpl_7_R | and_dcpl_7_C & and_dcpl_2_T ) & { 1{ and_dcpl_2 != 0 }} ;
  assign or_tmp_7 = and_4_mdf & fsm_output[1];
  assign or_tmp_7_S = 0 ;
  logic [0:0] and_4_mdf_C0 ;
  logic [0:0] and_4_mdf_R0 ;
  logic [0:0] and_4_mdf_X0 ;
  logic [1:0] fsm_output_C0 ;
  logic [1:0] fsm_output_R0 ;
  logic [1:0] fsm_output_X0 ;
  assign or_tmp_7_T = and_4_mdf_T | fsm_output_T [1] ;
  assign and_4_mdf_C0 = or_tmp_7_C ;
  assign and_4_mdf_X0 = or_tmp_7_X ;
  assign fsm_output_C0 [1] = or_tmp_7_C ;
  assign fsm_output_X0 [1] = or_tmp_7_X ;
  assign and_4_mdf_R0 = ( or_tmp_7_R | or_tmp_7_C & fsm_output_T [1] ) & { 1{ fsm_output[1] != 0 }} ;
  assign fsm_output_R0 [1] = ( or_tmp_7_R | or_tmp_7_C & and_4_mdf_T ) & { 1{ and_4_mdf != 0 }} ;
  assign _014_ = _034_ & fsm_output[1];
  assign _014__S = 0 ;
  assign { fsm_output_R0 [0] } = 0;
  assign { fsm_output_X0 [0] } = 0;
  assign { fsm_output_C0 [0] } = 0;
  logic [0:0] _034__C0 ;
  logic [0:0] _034__R0 ;
  logic [0:0] _034__X0 ;
  logic [1:0] fsm_output_C1 ;
  logic [1:0] fsm_output_R1 ;
  logic [1:0] fsm_output_X1 ;
  assign _014__T = _034__T | fsm_output_T [1] ;
  assign _034__C0 = _014__C ;
  assign _034__X0 = _014__X ;
  assign fsm_output_C1 [1] = _014__C ;
  assign fsm_output_X1 [1] = _014__X ;
  assign _034__R0 = ( _014__R | _014__C & fsm_output_T [1] ) & { 1{ fsm_output[1] != 0 }} ;
  assign fsm_output_R1 [1] = ( _014__R | _014__C & _034__T ) & { 1{ _034_ != 0 }} ;
  assign _015_ = core_wen & chn_a_rsci_ld_core_psct_mx0c0;
  assign _015__S = 0 ;
  logic [0:0] core_wen_C0 ;
  logic [0:0] core_wen_R0 ;
  logic [0:0] core_wen_X0 ;
  logic [0:0] chn_a_rsci_ld_core_psct_mx0c0_C0 ;
  logic [0:0] chn_a_rsci_ld_core_psct_mx0c0_R0 ;
  logic [0:0] chn_a_rsci_ld_core_psct_mx0c0_X0 ;
  assign _015__T = core_wen_T | chn_a_rsci_ld_core_psct_mx0c0_T ;
  assign core_wen_C0 = _015__C ;
  assign core_wen_X0 = _015__X ;
  assign chn_a_rsci_ld_core_psct_mx0c0_C0 = _015__C ;
  assign chn_a_rsci_ld_core_psct_mx0c0_X0 = _015__X ;
  assign core_wen_R0 = ( _015__R | _015__C & chn_a_rsci_ld_core_psct_mx0c0_T ) & { 1{ chn_a_rsci_ld_core_psct_mx0c0 != 0 }} ;
  assign chn_a_rsci_ld_core_psct_mx0c0_R0 = ( _015__R | _015__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _016_ = and_dcpl_2 & chn_a_rsci_bawt;
  assign _016__S = 0 ;
  logic [0:0] and_dcpl_2_C1 ;
  logic [0:0] and_dcpl_2_R1 ;
  logic [0:0] and_dcpl_2_X1 ;
  logic [0:0] chn_a_rsci_bawt_C2 ;
  logic [0:0] chn_a_rsci_bawt_R2 ;
  logic [0:0] chn_a_rsci_bawt_X2 ;
  assign _016__T = and_dcpl_2_T | chn_a_rsci_bawt_T ;
  assign and_dcpl_2_C1 = _016__C ;
  assign and_dcpl_2_X1 = _016__X ;
  assign chn_a_rsci_bawt_C2 = _016__C ;
  assign chn_a_rsci_bawt_X2 = _016__X ;
  assign and_dcpl_2_R1 = ( _016__R | _016__C & chn_a_rsci_bawt_T ) & { 1{ chn_a_rsci_bawt != 0 }} ;
  assign chn_a_rsci_bawt_R2 = ( _016__R | _016__C & and_dcpl_2_T ) & { 1{ and_dcpl_2 != 0 }} ;
  assign _017_ = _036_ & fsm_output[0];
  assign _017__S = 0 ;
  logic [0:0] _036__C0 ;
  logic [0:0] _036__R0 ;
  logic [0:0] _036__X0 ;
  assign _017__T = _036__T | fsm_output_T [0] ;
  assign _036__C0 = _017__C ;
  assign _036__X0 = _017__X ;
  assign fsm_output_C1 [0] = _017__C ;
  assign fsm_output_X1 [0] = _017__X ;
  assign _036__R0 = ( _017__R | _017__C & fsm_output_T [0] ) & { 1{ fsm_output[0] != 0 }} ;
  assign fsm_output_R1 [0] = ( _017__R | _017__C & _036__T ) & { 1{ _036_ != 0 }} ;
  assign _018_ = core_wen & _037_;
  assign _018__S = 0 ;
  logic [0:0] core_wen_C1 ;
  logic [0:0] core_wen_R1 ;
  logic [0:0] core_wen_X1 ;
  logic [0:0] _037__C0 ;
  logic [0:0] _037__R0 ;
  logic [0:0] _037__X0 ;
  assign _018__T = core_wen_T | _037__T ;
  assign core_wen_C1 = _018__C ;
  assign core_wen_X1 = _018__X ;
  assign _037__C0 = _018__C ;
  assign _037__X0 = _018__X ;
  assign core_wen_R1 = ( _018__R | _018__C & _037__T ) & { 1{ _037_ != 0 }} ;
  assign _037__R0 = ( _018__R | _018__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  logic [9:0] fangyuan2;
  logic [9:0] fangyuan2_T ;
  logic [9:0] fangyuan2_R ;
  logic [9:0] fangyuan2_C ;
  logic [9:0] fangyuan2_X ;
  assign fangyuan2 = { _038_, _038_, _038_, _038_, _038_, _038_, _038_, _038_, _038_, _038_ };
  assign fangyuan2_T = {  _038__T , _038__T , _038__T , _038__T , _038__T , _038__T , _038__T , _038__T , _038__T , _038__T  };
  logic [13:0] fangyuan2_S ;
  assign fangyuan2_S = 0 ;
  logic [0:0] _038__R0 ;
  logic [0:0] _038__X0 ;
  logic [0:0] _038__C0 ;
  assign _038__R0 = fangyuan2_R [9:9] ;
  assign _038__X0 = fangyuan2_X [9:9] ;
  assign _038__C0 = fangyuan2_C [9:9] ;
  logic [0:0] _038__R1 ;
  logic [0:0] _038__X1 ;
  logic [0:0] _038__C1 ;
  assign _038__R1 = fangyuan2_R [8:8] ;
  assign _038__X1 = fangyuan2_X [8:8] ;
  assign _038__C1 = fangyuan2_C [8:8] ;
  logic [0:0] _038__R2 ;
  logic [0:0] _038__X2 ;
  logic [0:0] _038__C2 ;
  assign _038__R2 = fangyuan2_R [7:7] ;
  assign _038__X2 = fangyuan2_X [7:7] ;
  assign _038__C2 = fangyuan2_C [7:7] ;
  logic [0:0] _038__R3 ;
  logic [0:0] _038__X3 ;
  logic [0:0] _038__C3 ;
  assign _038__R3 = fangyuan2_R [6:6] ;
  assign _038__X3 = fangyuan2_X [6:6] ;
  assign _038__C3 = fangyuan2_C [6:6] ;
  logic [0:0] _038__R4 ;
  logic [0:0] _038__X4 ;
  logic [0:0] _038__C4 ;
  assign _038__R4 = fangyuan2_R [5:5] ;
  assign _038__X4 = fangyuan2_X [5:5] ;
  assign _038__C4 = fangyuan2_C [5:5] ;
  logic [0:0] _038__R5 ;
  logic [0:0] _038__X5 ;
  logic [0:0] _038__C5 ;
  assign _038__R5 = fangyuan2_R [4:4] ;
  assign _038__X5 = fangyuan2_X [4:4] ;
  assign _038__C5 = fangyuan2_C [4:4] ;
  logic [0:0] _038__R6 ;
  logic [0:0] _038__X6 ;
  logic [0:0] _038__C6 ;
  assign _038__R6 = fangyuan2_R [3:3] ;
  assign _038__X6 = fangyuan2_X [3:3] ;
  assign _038__C6 = fangyuan2_C [3:3] ;
  logic [0:0] _038__R7 ;
  logic [0:0] _038__X7 ;
  logic [0:0] _038__C7 ;
  assign _038__R7 = fangyuan2_R [2:2] ;
  assign _038__X7 = fangyuan2_X [2:2] ;
  assign _038__C7 = fangyuan2_C [2:2] ;
  logic [0:0] _038__R8 ;
  logic [0:0] _038__X8 ;
  logic [0:0] _038__C8 ;
  assign _038__R8 = fangyuan2_R [1:1] ;
  assign _038__X8 = fangyuan2_X [1:1] ;
  assign _038__C8 = fangyuan2_C [1:1] ;
  logic [0:0] _038__R9 ;
  logic [0:0] _038__X9 ;
  logic [0:0] _038__C9 ;
  assign _038__R9 = fangyuan2_R [0:0] ;
  assign _038__X9 = fangyuan2_X [0:0] ;
  assign _038__C9 = fangyuan2_C [0:0] ;

  assign _019_ = mux_4_nl & fangyuan2;
  assign _019__S = 0 ;
  logic [9:0] mux_4_nl_C0 ;
  logic [9:0] mux_4_nl_R0 ;
  logic [9:0] mux_4_nl_X0 ;
  logic [9:0] fangyuan2_C0 ;
  logic [9:0] fangyuan2_R0 ;
  logic [9:0] fangyuan2_X0 ;
  assign _019__T = mux_4_nl_T | fangyuan2_T ;
  assign mux_4_nl_C0 = _019__C ;
  assign mux_4_nl_X0 = _019__X ;
  assign fangyuan2_C0 = _019__C ;
  assign fangyuan2_X0 = _019__X ;
  assign mux_4_nl_R0 = ( _019__R | _019__C & fangyuan2_T ) & { 10{ fangyuan2 != 0 }} ;
  assign fangyuan2_R0 = ( _019__R | _019__C & mux_4_nl_T ) & { 10{ mux_4_nl != 0 }} ;
  logic [9:0] fangyuan3;
  logic [9:0] fangyuan3_T ;
  logic [9:0] fangyuan3_R ;
  logic [9:0] fangyuan3_C ;
  logic [9:0] fangyuan3_X ;
  assign fangyuan3 = { FpFractionToFloat_16U_6U_10U_unequal_tmp, FpFractionToFloat_16U_6U_10U_unequal_tmp, FpFractionToFloat_16U_6U_10U_unequal_tmp, FpFractionToFloat_16U_6U_10U_unequal_tmp, FpFractionToFloat_16U_6U_10U_unequal_tmp, FpFractionToFloat_16U_6U_10U_unequal_tmp, FpFractionToFloat_16U_6U_10U_unequal_tmp, FpFractionToFloat_16U_6U_10U_unequal_tmp, FpFractionToFloat_16U_6U_10U_unequal_tmp, FpFractionToFloat_16U_6U_10U_unequal_tmp };
  assign fangyuan3_T = {  FpFractionToFloat_16U_6U_10U_unequal_tmp_T , FpFractionToFloat_16U_6U_10U_unequal_tmp_T , FpFractionToFloat_16U_6U_10U_unequal_tmp_T , FpFractionToFloat_16U_6U_10U_unequal_tmp_T , FpFractionToFloat_16U_6U_10U_unequal_tmp_T , FpFractionToFloat_16U_6U_10U_unequal_tmp_T , FpFractionToFloat_16U_6U_10U_unequal_tmp_T , FpFractionToFloat_16U_6U_10U_unequal_tmp_T , FpFractionToFloat_16U_6U_10U_unequal_tmp_T , FpFractionToFloat_16U_6U_10U_unequal_tmp_T  };
  logic [13:0] fangyuan3_S ;
  assign fangyuan3_S = 0 ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_R2 ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_X2 ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_C2 ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_R2 = fangyuan3_R [9:9] ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_X2 = fangyuan3_X [9:9] ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_C2 = fangyuan3_C [9:9] ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_R3 ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_X3 ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_C3 ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_R3 = fangyuan3_R [8:8] ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_X3 = fangyuan3_X [8:8] ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_C3 = fangyuan3_C [8:8] ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_R4 ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_X4 ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_C4 ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_R4 = fangyuan3_R [7:7] ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_X4 = fangyuan3_X [7:7] ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_C4 = fangyuan3_C [7:7] ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_R5 ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_X5 ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_C5 ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_R5 = fangyuan3_R [6:6] ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_X5 = fangyuan3_X [6:6] ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_C5 = fangyuan3_C [6:6] ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_R6 ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_X6 ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_C6 ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_R6 = fangyuan3_R [5:5] ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_X6 = fangyuan3_X [5:5] ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_C6 = fangyuan3_C [5:5] ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_R7 ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_X7 ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_C7 ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_R7 = fangyuan3_R [4:4] ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_X7 = fangyuan3_X [4:4] ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_C7 = fangyuan3_C [4:4] ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_R8 ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_X8 ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_C8 ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_R8 = fangyuan3_R [3:3] ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_X8 = fangyuan3_X [3:3] ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_C8 = fangyuan3_C [3:3] ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_R9 ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_X9 ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_C9 ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_R9 = fangyuan3_R [2:2] ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_X9 = fangyuan3_X [2:2] ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_C9 = fangyuan3_C [2:2] ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_R10 ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_X10 ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_C10 ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_R10 = fangyuan3_R [1:1] ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_X10 = fangyuan3_X [1:1] ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_C10 = fangyuan3_C [1:1] ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_R11 ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_X11 ;
  logic [0:0] FpFractionToFloat_16U_6U_10U_unequal_tmp_C11 ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_R11 = fangyuan3_R [0:0] ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_X11 = fangyuan3_X [0:0] ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_C11 = fangyuan3_C [0:0] ;

  assign _020_ = _019_ & fangyuan3;
  assign _020__S = 0 ;
  logic [9:0] _019__C0 ;
  logic [9:0] _019__R0 ;
  logic [9:0] _019__X0 ;
  logic [9:0] fangyuan3_C0 ;
  logic [9:0] fangyuan3_R0 ;
  logic [9:0] fangyuan3_X0 ;
  assign _020__T = _019__T | fangyuan3_T ;
  assign _019__C0 = _020__C ;
  assign _019__X0 = _020__X ;
  assign fangyuan3_C0 = _020__C ;
  assign fangyuan3_X0 = _020__X ;
  assign _019__R0 = ( _020__R | _020__C & fangyuan3_T ) & { 10{ fangyuan3 != 0 }} ;
  assign fangyuan3_R0 = ( _020__R | _020__C & _019__T ) & { 10{ _019_ != 0 }} ;
  logic [9:0] fangyuan4;
  logic [9:0] fangyuan4_T ;
  logic [9:0] fangyuan4_R ;
  logic [9:0] fangyuan4_C ;
  logic [9:0] fangyuan4_X ;
  assign fangyuan4 = { _011_, _011_, _011_, _011_, _011_, _011_, _011_, _011_, _011_, _011_ };
  assign fangyuan4_T = {  _011__T , _011__T , _011__T , _011__T , _011__T , _011__T , _011__T , _011__T , _011__T , _011__T  };
  logic [13:0] fangyuan4_S ;
  assign fangyuan4_S = 0 ;
  logic [0:0] _011__R0 ;
  logic [0:0] _011__X0 ;
  logic [0:0] _011__C0 ;
  assign _011__R0 = fangyuan4_R [9:9] ;
  assign _011__X0 = fangyuan4_X [9:9] ;
  assign _011__C0 = fangyuan4_C [9:9] ;
  logic [0:0] _011__R1 ;
  logic [0:0] _011__X1 ;
  logic [0:0] _011__C1 ;
  assign _011__R1 = fangyuan4_R [8:8] ;
  assign _011__X1 = fangyuan4_X [8:8] ;
  assign _011__C1 = fangyuan4_C [8:8] ;
  logic [0:0] _011__R2 ;
  logic [0:0] _011__X2 ;
  logic [0:0] _011__C2 ;
  assign _011__R2 = fangyuan4_R [7:7] ;
  assign _011__X2 = fangyuan4_X [7:7] ;
  assign _011__C2 = fangyuan4_C [7:7] ;
  logic [0:0] _011__R3 ;
  logic [0:0] _011__X3 ;
  logic [0:0] _011__C3 ;
  assign _011__R3 = fangyuan4_R [6:6] ;
  assign _011__X3 = fangyuan4_X [6:6] ;
  assign _011__C3 = fangyuan4_C [6:6] ;
  logic [0:0] _011__R4 ;
  logic [0:0] _011__X4 ;
  logic [0:0] _011__C4 ;
  assign _011__R4 = fangyuan4_R [5:5] ;
  assign _011__X4 = fangyuan4_X [5:5] ;
  assign _011__C4 = fangyuan4_C [5:5] ;
  logic [0:0] _011__R5 ;
  logic [0:0] _011__X5 ;
  logic [0:0] _011__C5 ;
  assign _011__R5 = fangyuan4_R [4:4] ;
  assign _011__X5 = fangyuan4_X [4:4] ;
  assign _011__C5 = fangyuan4_C [4:4] ;
  logic [0:0] _011__R6 ;
  logic [0:0] _011__X6 ;
  logic [0:0] _011__C6 ;
  assign _011__R6 = fangyuan4_R [3:3] ;
  assign _011__X6 = fangyuan4_X [3:3] ;
  assign _011__C6 = fangyuan4_C [3:3] ;
  logic [0:0] _011__R7 ;
  logic [0:0] _011__X7 ;
  logic [0:0] _011__C7 ;
  assign _011__R7 = fangyuan4_R [2:2] ;
  assign _011__X7 = fangyuan4_X [2:2] ;
  assign _011__C7 = fangyuan4_C [2:2] ;
  logic [0:0] _011__R8 ;
  logic [0:0] _011__X8 ;
  logic [0:0] _011__C8 ;
  assign _011__R8 = fangyuan4_R [1:1] ;
  assign _011__X8 = fangyuan4_X [1:1] ;
  assign _011__C8 = fangyuan4_C [1:1] ;
  logic [0:0] _011__R9 ;
  logic [0:0] _011__X9 ;
  logic [0:0] _011__C9 ;
  assign _011__R9 = fangyuan4_R [0:0] ;
  assign _011__X9 = fangyuan4_X [0:0] ;
  assign _011__C9 = fangyuan4_C [0:0] ;

  assign _021_ = _020_ & fangyuan4;
  assign _021__S = 0 ;
  logic [9:0] _020__C0 ;
  logic [9:0] _020__R0 ;
  logic [9:0] _020__X0 ;
  logic [9:0] fangyuan4_C0 ;
  logic [9:0] fangyuan4_R0 ;
  logic [9:0] fangyuan4_X0 ;
  assign _021__T = _020__T | fangyuan4_T ;
  assign _020__C0 = _021__C ;
  assign _020__X0 = _021__X ;
  assign fangyuan4_C0 = _021__C ;
  assign fangyuan4_X0 = _021__X ;
  assign _020__R0 = ( _021__R | _021__C & fangyuan4_T ) & { 10{ fangyuan4 != 0 }} ;
  assign fangyuan4_R0 = ( _021__R | _021__C & _020__T ) & { 10{ _020_ != 0 }} ;
  assign _022_ = core_wen & _039_;
  assign _022__S = 0 ;
  logic [0:0] core_wen_C2 ;
  logic [0:0] core_wen_R2 ;
  logic [0:0] core_wen_X2 ;
  logic [0:0] _039__C0 ;
  logic [0:0] _039__R0 ;
  logic [0:0] _039__X0 ;
  assign _022__T = core_wen_T | _039__T ;
  assign core_wen_C2 = _022__C ;
  assign core_wen_X2 = _022__X ;
  assign _039__C0 = _022__C ;
  assign _039__X0 = _022__X ;
  assign core_wen_R2 = ( _022__R | _022__C & _039__T ) & { 1{ _039_ != 0 }} ;
  assign _039__R0 = ( _022__R | _022__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _023_ = core_wen & _051_;
  assign _023__S = 0 ;
  logic [0:0] core_wen_C3 ;
  logic [0:0] core_wen_R3 ;
  logic [0:0] core_wen_X3 ;
  logic [0:0] _051__C0 ;
  logic [0:0] _051__R0 ;
  logic [0:0] _051__X0 ;
  assign _023__T = core_wen_T | _051__T ;
  assign core_wen_C3 = _023__C ;
  assign core_wen_X3 = _023__X ;
  assign _051__C0 = _023__C ;
  assign _051__X0 = _023__X ;
  assign core_wen_R3 = ( _023__R | _023__C & _051__T ) & { 1{ _051_ != 0 }} ;
  assign _051__R0 = ( _023__R | _023__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _024_ = core_wen & _042_;
  assign _024__S = 0 ;
  logic [0:0] core_wen_C4 ;
  logic [0:0] core_wen_R4 ;
  logic [0:0] core_wen_X4 ;
  logic [0:0] _042__C0 ;
  logic [0:0] _042__R0 ;
  logic [0:0] _042__X0 ;
  assign _024__T = core_wen_T | _042__T ;
  assign core_wen_C4 = _024__C ;
  assign core_wen_X4 = _024__X ;
  assign _042__C0 = _024__C ;
  assign _042__X0 = _024__X ;
  assign core_wen_R4 = ( _024__R | _024__C & _042__T ) & { 1{ _042_ != 0 }} ;
  assign _042__R0 = ( _024__R | _024__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign and_53_nl = FpMantRNE_17U_11U_else_and_svs_mx1 & _038_;
  assign and_53_nl_S = 0 ;
  logic [0:0] FpMantRNE_17U_11U_else_and_svs_mx1_C2 ;
  logic [0:0] FpMantRNE_17U_11U_else_and_svs_mx1_R2 ;
  logic [0:0] FpMantRNE_17U_11U_else_and_svs_mx1_X2 ;
  logic [0:0] _038__C10 ;
  logic [0:0] _038__R10 ;
  logic [0:0] _038__X10 ;
  assign and_53_nl_T = FpMantRNE_17U_11U_else_and_svs_mx1_T | _038__T ;
  assign FpMantRNE_17U_11U_else_and_svs_mx1_C2 = and_53_nl_C ;
  assign FpMantRNE_17U_11U_else_and_svs_mx1_X2 = and_53_nl_X ;
  assign _038__C10 = and_53_nl_C ;
  assign _038__X10 = and_53_nl_X ;
  assign FpMantRNE_17U_11U_else_and_svs_mx1_R2 = ( and_53_nl_R | and_53_nl_C & _038__T ) & { 1{ _038_ != 0 }} ;
  assign _038__R10 = ( and_53_nl_R | and_53_nl_C & FpMantRNE_17U_11U_else_and_svs_mx1_T ) & { 1{ FpMantRNE_17U_11U_else_and_svs_mx1 != 0 }} ;
  assign and_52_nl = FpMantRNE_17U_11U_else_and_svs_mx1 & not_41_nl;
  assign and_52_nl_S = 0 ;
  logic [0:0] FpMantRNE_17U_11U_else_and_svs_mx1_C3 ;
  logic [0:0] FpMantRNE_17U_11U_else_and_svs_mx1_R3 ;
  logic [0:0] FpMantRNE_17U_11U_else_and_svs_mx1_X3 ;
  logic [0:0] not_41_nl_C0 ;
  logic [0:0] not_41_nl_R0 ;
  logic [0:0] not_41_nl_X0 ;
  assign and_52_nl_T = FpMantRNE_17U_11U_else_and_svs_mx1_T | not_41_nl_T ;
  assign FpMantRNE_17U_11U_else_and_svs_mx1_C3 = and_52_nl_C ;
  assign FpMantRNE_17U_11U_else_and_svs_mx1_X3 = and_52_nl_X ;
  assign not_41_nl_C0 = and_52_nl_C ;
  assign not_41_nl_X0 = and_52_nl_X ;
  assign FpMantRNE_17U_11U_else_and_svs_mx1_R3 = ( and_52_nl_R | and_52_nl_C & not_41_nl_T ) & { 1{ not_41_nl != 0 }} ;
  assign not_41_nl_R0 = ( and_52_nl_R | and_52_nl_C & FpMantRNE_17U_11U_else_and_svs_mx1_T ) & { 1{ FpMantRNE_17U_11U_else_and_svs_mx1 != 0 }} ;
  assign _026_ = FpMantRNE_17U_11U_i_data_sva[16:6] == 11'b11111111111;
  assign _026__S = 0 ;
  assign { FpMantRNE_17U_11U_i_data_sva_R0 [0], FpMantRNE_17U_11U_i_data_sva_R0 [1], FpMantRNE_17U_11U_i_data_sva_R0 [2], FpMantRNE_17U_11U_i_data_sva_R0 [3], FpMantRNE_17U_11U_i_data_sva_R0 [4] } = 0;
  assign { FpMantRNE_17U_11U_i_data_sva_X0 [0], FpMantRNE_17U_11U_i_data_sva_X0 [1], FpMantRNE_17U_11U_i_data_sva_X0 [2], FpMantRNE_17U_11U_i_data_sva_X0 [3], FpMantRNE_17U_11U_i_data_sva_X0 [4] } = 0;
  assign { FpMantRNE_17U_11U_i_data_sva_C0 [0], FpMantRNE_17U_11U_i_data_sva_C0 [1], FpMantRNE_17U_11U_i_data_sva_C0 [2], FpMantRNE_17U_11U_i_data_sva_C0 [3], FpMantRNE_17U_11U_i_data_sva_C0 [4] } = 0;
  logic [16:0] FpMantRNE_17U_11U_i_data_sva_C1 ;
  logic [16:0] FpMantRNE_17U_11U_i_data_sva_R1 ;
  logic [16:0] FpMantRNE_17U_11U_i_data_sva_X1 ;
  assign _026__T = | FpMantRNE_17U_11U_i_data_sva_T [16:6] ;
  assign FpMantRNE_17U_11U_i_data_sva_C1 [16:6] = { 11{ _026__C }} ;
  assign FpMantRNE_17U_11U_i_data_sva_R1 [16:6] = { 11{ _026__R }} ;
  assign FpMantRNE_17U_11U_i_data_sva_X1 [16:6] = { 11{ _026__X }} ;
  assign and_dcpl_22 = ! chn_a_rsci_d_mxwt;
  logic [15:0] chn_a_rsci_d_mxwt_C0 ;
  logic [15:0] chn_a_rsci_d_mxwt_R0 ;
  logic [15:0] chn_a_rsci_d_mxwt_X0 ;
  assign and_dcpl_22_T = | chn_a_rsci_d_mxwt_T ;
  assign chn_a_rsci_d_mxwt_C0 = { 16{ and_dcpl_22_C }} ;
  assign chn_a_rsci_d_mxwt_X0 = { 16{ and_dcpl_22_X }} ;
  assign chn_a_rsci_d_mxwt_R0 = { 16{ and_dcpl_22_R }} ;
  assign and_dcpl_22_S = 0 ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp = | chn_a_rsci_d_mxwt;
  logic [15:0] chn_a_rsci_d_mxwt_C1 ;
  logic [15:0] chn_a_rsci_d_mxwt_R1 ;
  logic [15:0] chn_a_rsci_d_mxwt_X1 ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_T = | chn_a_rsci_d_mxwt_T ;
  assign chn_a_rsci_d_mxwt_C1 = { 16{ FpFractionToFloat_16U_6U_10U_unequal_tmp_C }} ;
  assign chn_a_rsci_d_mxwt_X1 = { 16{ FpFractionToFloat_16U_6U_10U_unequal_tmp_X }} ;
  assign chn_a_rsci_d_mxwt_R1 = { 16{ FpFractionToFloat_16U_6U_10U_unequal_tmp_R }} & chn_a_rsci_d_mxwt ;
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_S = 0 ;
  assign _027_ = ~ FpMantRNE_17U_11U_else_and_svs_mx1;
  logic [0:0] FpMantRNE_17U_11U_else_and_svs_mx1_C4 ;
  logic [0:0] FpMantRNE_17U_11U_else_and_svs_mx1_R4 ;
  logic [0:0] FpMantRNE_17U_11U_else_and_svs_mx1_X4 ;
  assign _027__T = FpMantRNE_17U_11U_else_and_svs_mx1_T ;
  assign FpMantRNE_17U_11U_else_and_svs_mx1_C4 = _027__C ;
  assign FpMantRNE_17U_11U_else_and_svs_mx1_R4 = _027__R ;
  assign FpMantRNE_17U_11U_else_and_svs_mx1_X4 = _027__X ;
  assign _027__S = 0 ;
  assign nor_9_nl = ~ _043_;
  logic [0:0] _043__C0 ;
  logic [0:0] _043__R0 ;
  logic [0:0] _043__X0 ;
  assign nor_9_nl_T = _043__T ;
  assign _043__C0 = nor_9_nl_C ;
  assign _043__R0 = nor_9_nl_R ;
  assign _043__X0 = nor_9_nl_X ;
  assign nor_9_nl_S = 0 ;
  assign nand_8_nl = ~ _009_;
  logic [0:0] _009__C0 ;
  logic [0:0] _009__R0 ;
  logic [0:0] _009__X0 ;
  assign nand_8_nl_T = _009__T ;
  assign _009__C0 = nand_8_nl_C ;
  assign _009__R0 = nand_8_nl_R ;
  assign _009__X0 = nand_8_nl_X ;
  assign nand_8_nl_S = 0 ;
  assign _028_ = ~ FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl[5];
  assign { FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R0 [0], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R0 [1], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R0 [2], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R0 [3], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R0 [4] } = 0;
  assign { FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X0 [0], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X0 [1], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X0 [2], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X0 [3], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X0 [4] } = 0;
  assign { FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C0 [0], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C0 [1], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C0 [2], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C0 [3], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C0 [4] } = 0;
  logic [5:0] FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C1 ;
  logic [5:0] FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R1 ;
  logic [5:0] FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X1 ;
  assign _028__T = FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_T [5] ;
  assign FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C1 [5] = _028__C ;
  assign FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R1 [5] = _028__R ;
  assign FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X1 [5] = _028__X ;
  assign _028__S = 0 ;
  assign _029_ = ~ _010_;
  logic [0:0] _010__C0 ;
  logic [0:0] _010__R0 ;
  logic [0:0] _010__X0 ;
  assign _029__T = _010__T ;
  assign _010__C0 = _029__C ;
  assign _010__R0 = _029__R ;
  assign _010__X0 = _029__X ;
  assign _029__S = 0 ;
  assign _030_ = ~ reg_chn_o_rsci_ld_core_psct_cse;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C2 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R2 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X2 ;
  assign _030__T = reg_chn_o_rsci_ld_core_psct_cse_T ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C2 = _030__C ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R2 = _030__R ;
  assign reg_chn_o_rsci_ld_core_psct_cse_X2 = _030__X ;
  assign _030__S = 0 ;
  assign _031_ = ~ chn_o_rsci_bawt;
  logic [0:0] chn_o_rsci_bawt_C1 ;
  logic [0:0] chn_o_rsci_bawt_R1 ;
  logic [0:0] chn_o_rsci_bawt_X1 ;
  assign _031__T = chn_o_rsci_bawt_T ;
  assign chn_o_rsci_bawt_C1 = _031__C ;
  assign chn_o_rsci_bawt_R1 = _031__R ;
  assign chn_o_rsci_bawt_X1 = _031__X ;
  assign _031__S = 0 ;
  assign _032_ = ~ _012_;
  logic [0:0] _012__C0 ;
  logic [0:0] _012__R0 ;
  logic [0:0] _012__X0 ;
  assign _032__T = _012__T ;
  assign _012__C0 = _032__C ;
  assign _012__R0 = _032__R ;
  assign _012__X0 = _032__X ;
  assign _032__S = 0 ;
  assign or_dcpl_1 = ~ _013_;
  logic [0:0] _013__C0 ;
  logic [0:0] _013__R0 ;
  logic [0:0] _013__X0 ;
  assign or_dcpl_1_T = _013__T ;
  assign _013__C0 = or_dcpl_1_C ;
  assign _013__R0 = or_dcpl_1_R ;
  assign _013__X0 = or_dcpl_1_X ;
  assign or_dcpl_1_S = 0 ;
  assign _033_ = ~ chn_a_rsci_bawt;
  logic [0:0] chn_a_rsci_bawt_C3 ;
  logic [0:0] chn_a_rsci_bawt_R3 ;
  logic [0:0] chn_a_rsci_bawt_X3 ;
  assign _033__T = chn_a_rsci_bawt_T ;
  assign chn_a_rsci_bawt_C3 = _033__C ;
  assign chn_a_rsci_bawt_R3 = _033__R ;
  assign chn_a_rsci_bawt_X3 = _033__X ;
  assign _033__S = 0 ;
  assign _034_ = ~ and_4_mdf;
  logic [0:0] and_4_mdf_C1 ;
  logic [0:0] and_4_mdf_R1 ;
  logic [0:0] and_4_mdf_X1 ;
  assign _034__T = and_4_mdf_T ;
  assign and_4_mdf_C1 = _034__C ;
  assign and_4_mdf_R1 = _034__R ;
  assign and_4_mdf_X1 = _034__X ;
  assign _034__S = 0 ;
  assign _035_ = ~ _014_;
  logic [0:0] _014__C0 ;
  logic [0:0] _014__R0 ;
  logic [0:0] _014__X0 ;
  assign _035__T = _014__T ;
  assign _014__C0 = _035__C ;
  assign _014__R0 = _035__R ;
  assign _014__X0 = _035__X ;
  assign _035__S = 0 ;
  assign _036_ = ~ _016_;
  logic [0:0] _016__C0 ;
  logic [0:0] _016__R0 ;
  logic [0:0] _016__X0 ;
  assign _036__T = _016__T ;
  assign _016__C0 = _036__C ;
  assign _016__R0 = _036__R ;
  assign _016__X0 = _036__X ;
  assign _036__S = 0 ;
  assign _037_ = ~ _049_;
  logic [0:0] _049__C0 ;
  logic [0:0] _049__R0 ;
  logic [0:0] _049__X0 ;
  assign _037__T = _049__T ;
  assign _049__C0 = _037__C ;
  assign _049__R0 = _037__R ;
  assign _049__X0 = _037__X ;
  assign _037__S = 0 ;
  assign _038_ = ~ mux_tmp;
  logic [0:0] mux_tmp_C0 ;
  logic [0:0] mux_tmp_R0 ;
  logic [0:0] mux_tmp_X0 ;
  assign _038__T = mux_tmp_T ;
  assign mux_tmp_C0 = _038__C ;
  assign mux_tmp_R0 = _038__R ;
  assign mux_tmp_X0 = _038__X ;
  assign _038__S = 0 ;
  assign _039_ = ~ _050_;
  logic [0:0] _050__C0 ;
  logic [0:0] _050__R0 ;
  logic [0:0] _050__X0 ;
  assign _039__T = _050__T ;
  assign _050__C0 = _039__C ;
  assign _050__R0 = _039__R ;
  assign _050__X0 = _039__X ;
  assign _039__S = 0 ;
  assign _040_ = ~ _008_;
  logic [4:0] _008__C0 ;
  logic [4:0] _008__R0 ;
  logic [4:0] _008__X0 ;
  assign _040__T = _008__T ;
  assign _008__C0 = _040__C ;
  assign _008__R0 = _040__R ;
  assign _008__X0 = _040__X ;
  assign _040__S = 0 ;
  assign _041_ = ~ and_dcpl_7;
  logic [0:0] and_dcpl_7_C0 ;
  logic [0:0] and_dcpl_7_R0 ;
  logic [0:0] and_dcpl_7_X0 ;
  assign _041__T = and_dcpl_7_T ;
  assign and_dcpl_7_C0 = _041__C ;
  assign and_dcpl_7_R0 = _041__R ;
  assign and_dcpl_7_X0 = _041__X ;
  assign _041__S = 0 ;
  assign _042_ = ~ _053_;
  logic [0:0] _053__C0 ;
  logic [0:0] _053__R0 ;
  logic [0:0] _053__X0 ;
  assign _042__T = _053__T ;
  assign _053__C0 = _042__C ;
  assign _053__R0 = _042__R ;
  assign _053__X0 = _042__X ;
  assign _042__S = 0 ;
  assign _025_[4:0] = ~ libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1;
  assign { libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_R2 [0] } = 0;
  assign { libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_X2 [0] } = 0;
  assign { libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_C2 [0] } = 0;
  logic [4:0] libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_C3 ;
  logic [4:0] libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_R3 ;
  logic [4:0] libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_X3 ;
  assign _025__T [4:0] = libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_T ;
  assign libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_C3 = _025__C [4:0] ;
  assign libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_R3 = _025__R [4:0] ;
  assign libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_X3 = _025__X [4:0] ;
  assign _025__S = 0 ;
  assign FpFractionToFloat_16U_6U_10U_nor_1_nl = ~ _000_;
  logic [4:0] _000__C0 ;
  logic [4:0] _000__R0 ;
  logic [4:0] _000__X0 ;
  assign FpFractionToFloat_16U_6U_10U_nor_1_nl_T = _000__T ;
  assign _000__C0 = FpFractionToFloat_16U_6U_10U_nor_1_nl_C ;
  assign _000__R0 = FpFractionToFloat_16U_6U_10U_nor_1_nl_R ;
  assign _000__X0 = FpFractionToFloat_16U_6U_10U_nor_1_nl_X ;
  assign FpFractionToFloat_16U_6U_10U_nor_1_nl_S = 0 ;
  assign _043_ = FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl[5] | _027_;
  assign _043__S = 0 ;
  assign { FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R1 [0], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R1 [1], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R1 [2], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R1 [3], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R1 [4] } = 0;
  assign { FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X1 [0], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X1 [1], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X1 [2], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X1 [3], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X1 [4] } = 0;
  assign { FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C1 [0], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C1 [1], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C1 [2], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C1 [3], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C1 [4] } = 0;
  logic [5:0] FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C2 ;
  logic [5:0] FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R2 ;
  logic [5:0] FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X2 ;
  logic [0:0] _027__C0 ;
  logic [0:0] _027__R0 ;
  logic [0:0] _027__X0 ;
  assign _043__T = FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_T [5] | _027__T ;
  assign FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C2 [5] = _043__C ;
  assign FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X2 [5] = _043__X ;
  assign _027__C0 = _043__C ;
  assign _027__X0 = _043__X ;
  assign FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R2 [5] = ( _043__R | _043__C & _027__T ) & { 1{ _027_ != 1'b1 }} ;
  assign _027__R0 = ( _043__R | _043__C & FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_T [5] ) & { 1{ FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl[5] != 1'b1 }} ;
  assign _044_ = FpMantRNE_17U_11U_i_data_sva[0] | FpMantRNE_17U_11U_i_data_sva[1];
  assign _044__S = 0 ;
  assign _044__T = FpMantRNE_17U_11U_i_data_sva_T [0] | FpMantRNE_17U_11U_i_data_sva_T [1] ;
  assign FpMantRNE_17U_11U_i_data_sva_C1 [0] = _044__C ;
  assign FpMantRNE_17U_11U_i_data_sva_X1 [0] = _044__X ;
  assign FpMantRNE_17U_11U_i_data_sva_C1 [1] = _044__C ;
  assign FpMantRNE_17U_11U_i_data_sva_X1 [1] = _044__X ;
  assign FpMantRNE_17U_11U_i_data_sva_R1 [0] = ( _044__R | _044__C & FpMantRNE_17U_11U_i_data_sva_T [1] ) & { 1{ FpMantRNE_17U_11U_i_data_sva[1] != 1'b1 }} ;
  assign FpMantRNE_17U_11U_i_data_sva_R1 [1] = ( _044__R | _044__C & FpMantRNE_17U_11U_i_data_sva_T [0] ) & { 1{ FpMantRNE_17U_11U_i_data_sva[0] != 1'b1 }} ;
  assign _045_ = _044_ | FpMantRNE_17U_11U_i_data_sva[2];
  assign _045__S = 0 ;
  logic [0:0] _044__C0 ;
  logic [0:0] _044__R0 ;
  logic [0:0] _044__X0 ;
  assign _045__T = _044__T | FpMantRNE_17U_11U_i_data_sva_T [2] ;
  assign _044__C0 = _045__C ;
  assign _044__X0 = _045__X ;
  assign FpMantRNE_17U_11U_i_data_sva_C1 [2] = _045__C ;
  assign FpMantRNE_17U_11U_i_data_sva_X1 [2] = _045__X ;
  assign _044__R0 = ( _045__R | _045__C & FpMantRNE_17U_11U_i_data_sva_T [2] ) & { 1{ FpMantRNE_17U_11U_i_data_sva[2] != 1'b1 }} ;
  assign FpMantRNE_17U_11U_i_data_sva_R1 [2] = ( _045__R | _045__C & _044__T ) & { 1{ _044_ != 1'b1 }} ;
  assign _046_ = _045_ | FpMantRNE_17U_11U_i_data_sva[3];
  assign _046__S = 0 ;
  logic [0:0] _045__C0 ;
  logic [0:0] _045__R0 ;
  logic [0:0] _045__X0 ;
  assign _046__T = _045__T | FpMantRNE_17U_11U_i_data_sva_T [3] ;
  assign _045__C0 = _046__C ;
  assign _045__X0 = _046__X ;
  assign FpMantRNE_17U_11U_i_data_sva_C1 [3] = _046__C ;
  assign FpMantRNE_17U_11U_i_data_sva_X1 [3] = _046__X ;
  assign _045__R0 = ( _046__R | _046__C & FpMantRNE_17U_11U_i_data_sva_T [3] ) & { 1{ FpMantRNE_17U_11U_i_data_sva[3] != 1'b1 }} ;
  assign FpMantRNE_17U_11U_i_data_sva_R1 [3] = ( _046__R | _046__C & _045__T ) & { 1{ _045_ != 1'b1 }} ;
  assign _047_ = _046_ | FpMantRNE_17U_11U_i_data_sva[4];
  assign _047__S = 0 ;
  logic [0:0] _046__C0 ;
  logic [0:0] _046__R0 ;
  logic [0:0] _046__X0 ;
  assign _047__T = _046__T | FpMantRNE_17U_11U_i_data_sva_T [4] ;
  assign _046__C0 = _047__C ;
  assign _046__X0 = _047__X ;
  assign FpMantRNE_17U_11U_i_data_sva_C1 [4] = _047__C ;
  assign FpMantRNE_17U_11U_i_data_sva_X1 [4] = _047__X ;
  assign _046__R0 = ( _047__R | _047__C & FpMantRNE_17U_11U_i_data_sva_T [4] ) & { 1{ FpMantRNE_17U_11U_i_data_sva[4] != 1'b1 }} ;
  assign FpMantRNE_17U_11U_i_data_sva_R1 [4] = ( _047__R | _047__C & _046__T ) & { 1{ _046_ != 1'b1 }} ;
  assign _048_ = _047_ | FpMantRNE_17U_11U_i_data_sva[6];
  assign _048__S = 0 ;
  assign { FpMantRNE_17U_11U_i_data_sva_R1 [5] } = 0;
  assign { FpMantRNE_17U_11U_i_data_sva_X1 [5] } = 0;
  assign { FpMantRNE_17U_11U_i_data_sva_C1 [5] } = 0;
  logic [0:0] _047__C0 ;
  logic [0:0] _047__R0 ;
  logic [0:0] _047__X0 ;
  logic [16:0] FpMantRNE_17U_11U_i_data_sva_C2 ;
  logic [16:0] FpMantRNE_17U_11U_i_data_sva_R2 ;
  logic [16:0] FpMantRNE_17U_11U_i_data_sva_X2 ;
  assign _048__T = _047__T | FpMantRNE_17U_11U_i_data_sva_T [6] ;
  assign _047__C0 = _048__C ;
  assign _047__X0 = _048__X ;
  assign FpMantRNE_17U_11U_i_data_sva_C2 [6] = _048__C ;
  assign FpMantRNE_17U_11U_i_data_sva_X2 [6] = _048__X ;
  assign _047__R0 = ( _048__R | _048__C & FpMantRNE_17U_11U_i_data_sva_T [6] ) & { 1{ FpMantRNE_17U_11U_i_data_sva[6] != 1'b1 }} ;
  assign FpMantRNE_17U_11U_i_data_sva_R2 [6] = ( _048__R | _048__C & _047__T ) & { 1{ _047_ != 1'b1 }} ;
  assign or_cse = chn_o_rsci_bawt | _030_;
  assign or_cse_S = 0 ;
  logic [0:0] chn_o_rsci_bawt_C2 ;
  logic [0:0] chn_o_rsci_bawt_R2 ;
  logic [0:0] chn_o_rsci_bawt_X2 ;
  logic [0:0] _030__C0 ;
  logic [0:0] _030__R0 ;
  logic [0:0] _030__X0 ;
  assign or_cse_T = chn_o_rsci_bawt_T | _030__T ;
  assign chn_o_rsci_bawt_C2 = or_cse_C ;
  assign chn_o_rsci_bawt_X2 = or_cse_X ;
  assign _030__C0 = or_cse_C ;
  assign _030__X0 = or_cse_X ;
  assign chn_o_rsci_bawt_R2 = ( or_cse_R | or_cse_C & _030__T ) & { 1{ _030_ != 1'b1 }} ;
  assign _030__R0 = ( or_cse_R | or_cse_C & chn_o_rsci_bawt_T ) & { 1{ chn_o_rsci_bawt != 1'b1 }} ;
  assign chn_a_rsci_ld_core_psct_mx0c0 = and_4_mdf | fsm_output[0];
  assign chn_a_rsci_ld_core_psct_mx0c0_S = 0 ;
  logic [0:0] and_4_mdf_C2 ;
  logic [0:0] and_4_mdf_R2 ;
  logic [0:0] and_4_mdf_X2 ;
  logic [1:0] fsm_output_C2 ;
  logic [1:0] fsm_output_R2 ;
  logic [1:0] fsm_output_X2 ;
  assign chn_a_rsci_ld_core_psct_mx0c0_T = and_4_mdf_T | fsm_output_T [0] ;
  assign and_4_mdf_C2 = chn_a_rsci_ld_core_psct_mx0c0_C ;
  assign and_4_mdf_X2 = chn_a_rsci_ld_core_psct_mx0c0_X ;
  assign fsm_output_C2 [0] = chn_a_rsci_ld_core_psct_mx0c0_C ;
  assign fsm_output_X2 [0] = chn_a_rsci_ld_core_psct_mx0c0_X ;
  assign and_4_mdf_R2 = ( chn_a_rsci_ld_core_psct_mx0c0_R | chn_a_rsci_ld_core_psct_mx0c0_C & fsm_output_T [0] ) & { 1{ fsm_output[0] != 1'b1 }} ;
  assign fsm_output_R2 [0] = ( chn_a_rsci_ld_core_psct_mx0c0_R | chn_a_rsci_ld_core_psct_mx0c0_C & and_4_mdf_T ) & { 1{ and_4_mdf != 1'b1 }} ;
  assign _049_ = or_dcpl_1 | _017_;
  assign _049__S = 0 ;
  logic [0:0] or_dcpl_1_C0 ;
  logic [0:0] or_dcpl_1_R0 ;
  logic [0:0] or_dcpl_1_X0 ;
  logic [0:0] _017__C0 ;
  logic [0:0] _017__R0 ;
  logic [0:0] _017__X0 ;
  assign _049__T = or_dcpl_1_T | _017__T ;
  assign or_dcpl_1_C0 = _049__C ;
  assign or_dcpl_1_X0 = _049__X ;
  assign _017__C0 = _049__C ;
  assign _017__X0 = _049__X ;
  assign or_dcpl_1_R0 = ( _049__R | _049__C & _017__T ) & { 1{ _017_ != 1'b1 }} ;
  assign _017__R0 = ( _049__R | _049__C & or_dcpl_1_T ) & { 1{ or_dcpl_1 != 1'b1 }} ;
  assign _050_ = or_dcpl_1 | fsm_output[0];
  assign _050__S = 0 ;
  assign { fsm_output_R2 [1:1] } = 0;
  assign { fsm_output_X2 [1:1] } = 0;
  assign { fsm_output_C2 [1:1] } = 0;
  logic [0:0] or_dcpl_1_C1 ;
  logic [0:0] or_dcpl_1_R1 ;
  logic [0:0] or_dcpl_1_X1 ;
  logic [1:0] fsm_output_C3 ;
  logic [1:0] fsm_output_R3 ;
  logic [1:0] fsm_output_X3 ;
  assign _050__T = or_dcpl_1_T | fsm_output_T [0] ;
  assign or_dcpl_1_C1 = _050__C ;
  assign or_dcpl_1_X1 = _050__X ;
  assign fsm_output_C3 [0] = _050__C ;
  assign fsm_output_X3 [0] = _050__X ;
  assign or_dcpl_1_R1 = ( _050__R | _050__C & fsm_output_T [0] ) & { 1{ fsm_output[0] != 1'b1 }} ;
  assign fsm_output_R3 [0] = ( _050__R | _050__C & or_dcpl_1_T ) & { 1{ or_dcpl_1 != 1'b1 }} ;
  assign _051_ = or_tmp_7 | and_dcpl_7;
  assign _051__S = 0 ;
  logic [0:0] or_tmp_7_C0 ;
  logic [0:0] or_tmp_7_R0 ;
  logic [0:0] or_tmp_7_X0 ;
  logic [0:0] and_dcpl_7_C1 ;
  logic [0:0] and_dcpl_7_R1 ;
  logic [0:0] and_dcpl_7_X1 ;
  assign _051__T = or_tmp_7_T | and_dcpl_7_T ;
  assign or_tmp_7_C0 = _051__C ;
  assign or_tmp_7_X0 = _051__X ;
  assign and_dcpl_7_C1 = _051__C ;
  assign and_dcpl_7_X1 = _051__X ;
  assign or_tmp_7_R0 = ( _051__R | _051__C & and_dcpl_7_T ) & { 1{ and_dcpl_7 != 1'b1 }} ;
  assign and_dcpl_7_R1 = ( _051__R | _051__C & or_tmp_7_T ) & { 1{ or_tmp_7 != 1'b1 }} ;
  assign _052_ = and_dcpl_22 | or_dcpl_1;
  assign _052__S = 0 ;
  logic [0:0] and_dcpl_22_C0 ;
  logic [0:0] and_dcpl_22_R0 ;
  logic [0:0] and_dcpl_22_X0 ;
  logic [0:0] or_dcpl_1_C2 ;
  logic [0:0] or_dcpl_1_R2 ;
  logic [0:0] or_dcpl_1_X2 ;
  assign _052__T = and_dcpl_22_T | or_dcpl_1_T ;
  assign and_dcpl_22_C0 = _052__C ;
  assign and_dcpl_22_X0 = _052__X ;
  assign or_dcpl_1_C2 = _052__C ;
  assign or_dcpl_1_X2 = _052__X ;
  assign and_dcpl_22_R0 = ( _052__R | _052__C & or_dcpl_1_T ) & { 1{ or_dcpl_1 != 1'b1 }} ;
  assign or_dcpl_1_R2 = ( _052__R | _052__C & and_dcpl_22_T ) & { 1{ and_dcpl_22 != 1'b1 }} ;
  assign _053_ = _052_ | fsm_output[0];
  assign _053__S = 0 ;
  assign { fsm_output_R3 [1:1] } = 0;
  assign { fsm_output_X3 [1:1] } = 0;
  assign { fsm_output_C3 [1:1] } = 0;
  logic [0:0] _052__C0 ;
  logic [0:0] _052__R0 ;
  logic [0:0] _052__X0 ;
  logic [1:0] fsm_output_C4 ;
  logic [1:0] fsm_output_R4 ;
  logic [1:0] fsm_output_X4 ;
  assign _053__T = _052__T | fsm_output_T [0] ;
  assign _052__C0 = _053__C ;
  assign _052__X0 = _053__X ;
  assign fsm_output_C4 [0] = _053__C ;
  assign fsm_output_X4 [0] = _053__X ;
  assign _052__R0 = ( _053__R | _053__C & fsm_output_T [0] ) & { 1{ fsm_output[0] != 1'b1 }} ;
  assign fsm_output_R4 [0] = ( _053__R | _053__C & _052__T ) & { 1{ _052_ != 1'b1 }} ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMantRNE_17U_11U_else_and_svs <= 1'b0;
    else
      FpMantRNE_17U_11U_else_and_svs <= _001_;
  logic [0:0] _001__X0 ;
  logic [0:0] _001__R0 ;
  logic [0:0] _001__C0 ;
  assign _001__X0 = { 1{ FpMantRNE_17U_11U_else_and_svs_S != _001__S }} ;
  assign _001__R0 = 0 ;
  assign _001__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMantRNE_17U_11U_else_and_svs_T 		<= !nvdla_core_rstn ? 0 : ( _001__T & _001__X0 );
  always @( posedge nvdla_core_clk )
      FpMantRNE_17U_11U_else_and_svs_t_flag 	<= !nvdla_core_rstn ? 0 : FpMantRNE_17U_11U_else_and_svs_t_flag ? 1 : | _001__T & ( | _001__X0 );
  always @( posedge nvdla_core_clk )
      FpMantRNE_17U_11U_else_and_svs_r_flag 	<= !nvdla_core_rstn ? 0 : FpMantRNE_17U_11U_else_and_svs_r_flag ? 1 : FpMantRNE_17U_11U_else_and_svs_t_flag ? 0 : ( | FpMantRNE_17U_11U_else_and_svs_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      reg_chn_o_rsci_ld_core_psct_cse <= 1'b0;
    else
      reg_chn_o_rsci_ld_core_psct_cse <= _007_;
  logic [0:0] _007__X0 ;
  logic [0:0] _007__R0 ;
  logic [0:0] _007__C0 ;
  assign _007__X0 = { 1{ reg_chn_o_rsci_ld_core_psct_cse_S != _007__S }} ;
  assign _007__R0 = 0 ;
  assign _007__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      reg_chn_o_rsci_ld_core_psct_cse_T 		<= !nvdla_core_rstn ? 0 : ( _007__T & _007__X0 );
  always @( posedge nvdla_core_clk )
      reg_chn_o_rsci_ld_core_psct_cse_t_flag 	<= !nvdla_core_rstn ? 0 : reg_chn_o_rsci_ld_core_psct_cse_t_flag ? 1 : | _007__T & ( | _007__X0 );
  always @( posedge nvdla_core_clk )
      reg_chn_o_rsci_ld_core_psct_cse_r_flag 	<= !nvdla_core_rstn ? 0 : reg_chn_o_rsci_ld_core_psct_cse_r_flag ? 1 : reg_chn_o_rsci_ld_core_psct_cse_t_flag ? 0 : ( | reg_chn_o_rsci_ld_core_psct_cse_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_o_rsci_d_14_10 <= 5'b00000;
    else
      chn_o_rsci_d_14_10 <= _004_;
  logic [4:0] _004__X0 ;
  logic [4:0] _004__R0 ;
  logic [4:0] _004__C0 ;
  assign _004__X0 = { 5{ chn_o_rsci_d_14_10_S != _004__S }} ;
  assign _004__R0 = 0 ;
  assign _004__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_14_10_T 		<= !nvdla_core_rstn ? 0 : ( _004__T & _004__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_14_10_t_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_14_10_t_flag ? 1 : | _004__T & ( | _004__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_14_10_r_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_14_10_r_flag ? 1 : chn_o_rsci_d_14_10_t_flag ? 0 : ( | chn_o_rsci_d_14_10_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_o_rsci_d_9_0 <= 10'b0000000000;
    else
      chn_o_rsci_d_9_0 <= _005_;
  logic [9:0] _005__X0 ;
  logic [9:0] _005__R0 ;
  logic [9:0] _005__C0 ;
  assign _005__X0 = { 10{ chn_o_rsci_d_9_0_S != _005__S }} ;
  assign _005__R0 = 0 ;
  assign _005__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_9_0_T 		<= !nvdla_core_rstn ? 0 : ( _005__T & _005__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_9_0_t_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_9_0_t_flag ? 1 : | _005__T & ( | _005__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_9_0_r_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_9_0_r_flag ? 1 : chn_o_rsci_d_9_0_t_flag ? 0 : ( | chn_o_rsci_d_9_0_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_a_rsci_ld_core_psct <= 1'b0;
    else
      chn_a_rsci_ld_core_psct <= _003_;
  logic [0:0] _003__X0 ;
  logic [0:0] _003__R0 ;
  logic [0:0] _003__C0 ;
  assign _003__X0 = { 1{ chn_a_rsci_ld_core_psct_S != _003__S }} ;
  assign _003__R0 = 0 ;
  assign _003__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_a_rsci_ld_core_psct_T 		<= !nvdla_core_rstn ? 0 : ( _003__T & _003__X0 );
  always @( posedge nvdla_core_clk )
      chn_a_rsci_ld_core_psct_t_flag 	<= !nvdla_core_rstn ? 0 : chn_a_rsci_ld_core_psct_t_flag ? 1 : | _003__T & ( | _003__X0 );
  always @( posedge nvdla_core_clk )
      chn_a_rsci_ld_core_psct_r_flag 	<= !nvdla_core_rstn ? 0 : chn_a_rsci_ld_core_psct_r_flag ? 1 : chn_a_rsci_ld_core_psct_t_flag ? 0 : ( | chn_a_rsci_ld_core_psct_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_a_rsci_iswt0 <= 1'b0;
    else
      chn_a_rsci_iswt0 <= _002_;
  logic [0:0] _002__X0 ;
  logic [0:0] _002__R0 ;
  logic [0:0] _002__C0 ;
  assign _002__X0 = { 1{ chn_a_rsci_iswt0_S != _002__S }} ;
  assign _002__R0 = 0 ;
  assign _002__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_a_rsci_iswt0_T 		<= !nvdla_core_rstn ? 0 : ( _002__T & _002__X0 );
  always @( posedge nvdla_core_clk )
      chn_a_rsci_iswt0_t_flag 	<= !nvdla_core_rstn ? 0 : chn_a_rsci_iswt0_t_flag ? 1 : | _002__T & ( | _002__X0 );
  always @( posedge nvdla_core_clk )
      chn_a_rsci_iswt0_r_flag 	<= !nvdla_core_rstn ? 0 : chn_a_rsci_iswt0_r_flag ? 1 : chn_a_rsci_iswt0_t_flag ? 0 : ( | chn_a_rsci_iswt0_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      reg_chn_o_rsci_iswt0_cse <= 1'b0;
    else
      reg_chn_o_rsci_iswt0_cse <= _006_;
  logic [0:0] _006__X0 ;
  logic [0:0] _006__R0 ;
  logic [0:0] _006__C0 ;
  assign _006__X0 = { 1{ reg_chn_o_rsci_iswt0_cse_S != _006__S }} ;
  assign _006__R0 = 0 ;
  assign _006__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      reg_chn_o_rsci_iswt0_cse_T 		<= !nvdla_core_rstn ? 0 : ( _006__T & _006__X0 );
  always @( posedge nvdla_core_clk )
      reg_chn_o_rsci_iswt0_cse_t_flag 	<= !nvdla_core_rstn ? 0 : reg_chn_o_rsci_iswt0_cse_t_flag ? 1 : | _006__T & ( | _006__X0 );
  always @( posedge nvdla_core_clk )
      reg_chn_o_rsci_iswt0_cse_r_flag 	<= !nvdla_core_rstn ? 0 : reg_chn_o_rsci_iswt0_cse_r_flag ? 1 : reg_chn_o_rsci_iswt0_cse_t_flag ? 0 : ( | reg_chn_o_rsci_iswt0_cse_R ) ;
  assign and_nl = not_41_nl ? mux_3_nl : 5'b00000;
  logic [0:0] not_41_nl_C1 ;
  logic [0:0] not_41_nl_R1 ;
  logic [0:0] not_41_nl_X1 ;
  assign not_41_nl_C1 = | and_nl_C ;
  assign not_41_nl_X1 = | and_nl_X ;
  logic [4:0] mux_3_nl_C0 ;
  logic [4:0] mux_3_nl_R0 ;
  logic [4:0] mux_3_nl_X0 ;
  assign mux_3_nl_C0 = { 5{ not_41_nl }} ;
  assign mux_3_nl_R0 = { 5{ not_41_nl }} & ( and_nl_R | ( { 5{ not_41_nl_T  }} & and_nl_C ));
  assign mux_3_nl_X0 = { 5{ not_41_nl }} & and_nl_X ;
  assign and_nl_T = not_41_nl ? ( { 5{ | not_41_nl_T  }} | mux_3_nl_T ) : { 5{ | not_41_nl_T  }};
  assign and_nl_S = not_41_nl ? mux_3_nl_S : not_41_nl_S ;
  assign not_41_nl_R1 = ( | (and_nl_R | ( { 5{ not_41_nl }} & mux_3_nl_T & and_nl_C ))) && mux_3_nl != 5'b00000 ;
  assign mux_3_nl = and_52_nl ? libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1 : FpFractionToFloat_16U_6U_10U_nor_1_nl;
  logic [0:0] and_52_nl_C0 ;
  logic [0:0] and_52_nl_R0 ;
  logic [0:0] and_52_nl_X0 ;
  assign and_52_nl_C0 = | mux_3_nl_C ;
  assign and_52_nl_X0 = | mux_3_nl_X ;
  assign mux_3_nl_T = and_52_nl ? ( { 5{ and_52_nl_T  }} | libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_T ) : ( { 5{ and_52_nl_T  }} | FpFractionToFloat_16U_6U_10U_nor_1_nl_T );
  assign mux_3_nl_S = and_52_nl ? libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_S : FpFractionToFloat_16U_6U_10U_nor_1_nl_S ;
  assign and_52_nl_R0 = ( | (mux_3_nl_R | ( mux_3_nl_C & ( { 5{ and_52_nl }} & libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_T | { 5{ !and_52_nl }} & FpFractionToFloat_16U_6U_10U_nor_1_nl_T )))) && libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1 != FpFractionToFloat_16U_6U_10U_nor_1_nl ;
  logic [4:0] libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_C4 ;
  logic [4:0] libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_R4 ;
  logic [4:0] libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_X4 ;
  assign libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_C4 = { 5{ and_52_nl }} ;
  assign libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_R4 = { 5{ and_52_nl }} & ( mux_3_nl_R | ( { 5{ and_52_nl_T  }} & mux_3_nl_C ));
  assign libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_X4 = { 5{ and_52_nl }} & mux_3_nl_X ;
  logic [4:0] FpFractionToFloat_16U_6U_10U_nor_1_nl_C0 ;
  logic [4:0] FpFractionToFloat_16U_6U_10U_nor_1_nl_R0 ;
  logic [4:0] FpFractionToFloat_16U_6U_10U_nor_1_nl_X0 ;
  assign FpFractionToFloat_16U_6U_10U_nor_1_nl_C0 = { 5{ !and_52_nl }} ;
  assign FpFractionToFloat_16U_6U_10U_nor_1_nl_R0 = { 5{ !and_52_nl }} & ( mux_3_nl_R | ( { 5{ and_52_nl_T  }} & mux_3_nl_C ));
  assign FpFractionToFloat_16U_6U_10U_nor_1_nl_X0 = { 5{ !and_52_nl }} & mux_3_nl_X ;
  assign _000_ = FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl[4] ? FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl : 5'b11111;
  logic [4:0] FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C0 ;
  logic [4:0] FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R0 ;
  logic [4:0] FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X0 ;
  assign FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C0 [4] = | _000__C ;
  assign FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X0 [4] = | _000__X ;
  logic [4:0] FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_C0 ;
  logic [4:0] FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_R0 ;
  logic [4:0] FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_X0 ;
  assign FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_C0 = { 5{ FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl[4] }} ;
  assign FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_R0 = { 5{ FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl[4] }} & ( _000__R | ( { 5{ FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_T  [4] }} & _000__C ));
  assign FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_X0 = { 5{ FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl[4] }} & _000__X ;
  assign _000__T = FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl[4] ? ( { 5{ | FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_T  [4] }} | FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_T ) : { 5{ | FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_T  [4] }};
  assign _000__S = FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl[4] ? FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_S : FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_S ;
  assign FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R0 [4] = ( | (_000__R | ( { 5{ FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl[4] }} & FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_T & _000__C ))) && FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl != 5'b11111 ;
  assign mux_4_nl = and_53_nl ? FpMantRNE_17U_11U_else_ac_int_cctor_sva[10:1] : FpMantRNE_17U_11U_else_ac_int_cctor_sva[9:0];
  logic [0:0] and_53_nl_C0 ;
  logic [0:0] and_53_nl_R0 ;
  logic [0:0] and_53_nl_X0 ;
  assign and_53_nl_C0 = | mux_4_nl_C ;
  assign and_53_nl_X0 = | mux_4_nl_X ;
  assign mux_4_nl_T = and_53_nl ? ( { 10{ and_53_nl_T  }} | FpMantRNE_17U_11U_else_ac_int_cctor_sva_T [10:1] ) : ( { 10{ and_53_nl_T  }} | FpMantRNE_17U_11U_else_ac_int_cctor_sva_T [9:0] );
  assign mux_4_nl_S = and_53_nl ? FpMantRNE_17U_11U_else_ac_int_cctor_sva_S : FpMantRNE_17U_11U_else_ac_int_cctor_sva_S ;
  assign and_53_nl_R0 = ( | (mux_4_nl_R | ( mux_4_nl_C & ( { 10{ and_53_nl }} & FpMantRNE_17U_11U_else_ac_int_cctor_sva_T [10:1] | { 10{ !and_53_nl }} & FpMantRNE_17U_11U_else_ac_int_cctor_sva_T [9:0] )))) && FpMantRNE_17U_11U_else_ac_int_cctor_sva[10:1] != FpMantRNE_17U_11U_else_ac_int_cctor_sva[9:0] ;
  assign { FpMantRNE_17U_11U_else_ac_int_cctor_sva_R0 [0] } = 0;
  assign { FpMantRNE_17U_11U_else_ac_int_cctor_sva_X0 [0] } = 0;
  assign { FpMantRNE_17U_11U_else_ac_int_cctor_sva_C0 [0] } = 0;
  logic [10:0] FpMantRNE_17U_11U_else_ac_int_cctor_sva_C0 ;
  logic [10:0] FpMantRNE_17U_11U_else_ac_int_cctor_sva_R0 ;
  logic [10:0] FpMantRNE_17U_11U_else_ac_int_cctor_sva_X0 ;
  assign FpMantRNE_17U_11U_else_ac_int_cctor_sva_C0 [10:1] = { 10{ and_53_nl }} ;
  assign FpMantRNE_17U_11U_else_ac_int_cctor_sva_R0 [10:1] = { 10{ and_53_nl }} & ( mux_4_nl_R | ( { 10{ and_53_nl_T  }} & mux_4_nl_C ));
  assign FpMantRNE_17U_11U_else_ac_int_cctor_sva_X0 [10:1] = { 10{ and_53_nl }} & mux_4_nl_X ;
  logic [10:0] FpMantRNE_17U_11U_else_ac_int_cctor_sva_C1 ;
  logic [10:0] FpMantRNE_17U_11U_else_ac_int_cctor_sva_R1 ;
  logic [10:0] FpMantRNE_17U_11U_else_ac_int_cctor_sva_X1 ;
  assign FpMantRNE_17U_11U_else_ac_int_cctor_sva_C1 [9:0] = { 10{ !and_53_nl }} ;
  assign FpMantRNE_17U_11U_else_ac_int_cctor_sva_R1 [9:0] = { 10{ !and_53_nl }} & ( mux_4_nl_R | ( { 10{ and_53_nl_T  }} & mux_4_nl_C ));
  assign FpMantRNE_17U_11U_else_ac_int_cctor_sva_X1 [9:0] = { 10{ !and_53_nl }} & mux_4_nl_X ;
  assign FpFractionToFloat_16U_6U_10U_if_else_mux_1_nl = FpMantRNE_17U_11U_else_and_svs_mx1 ? FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl[5] : FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl[4];
  logic [0:0] FpMantRNE_17U_11U_else_and_svs_mx1_C5 ;
  logic [0:0] FpMantRNE_17U_11U_else_and_svs_mx1_R5 ;
  logic [0:0] FpMantRNE_17U_11U_else_and_svs_mx1_X5 ;
  assign FpMantRNE_17U_11U_else_and_svs_mx1_C5 = | FpFractionToFloat_16U_6U_10U_if_else_mux_1_nl_C ;
  assign FpMantRNE_17U_11U_else_and_svs_mx1_X5 = | FpFractionToFloat_16U_6U_10U_if_else_mux_1_nl_X ;
  assign FpFractionToFloat_16U_6U_10U_if_else_mux_1_nl_T = FpMantRNE_17U_11U_else_and_svs_mx1 ? ( { 1{ FpMantRNE_17U_11U_else_and_svs_mx1_T  }} | FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_T [5] ) : ( { 1{ FpMantRNE_17U_11U_else_and_svs_mx1_T  }} | FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_T [4] );
  assign FpFractionToFloat_16U_6U_10U_if_else_mux_1_nl_S = FpMantRNE_17U_11U_else_and_svs_mx1 ? FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_S : FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_S ;
  assign FpMantRNE_17U_11U_else_and_svs_mx1_R5 = ( | (FpFractionToFloat_16U_6U_10U_if_else_mux_1_nl_R | ( FpFractionToFloat_16U_6U_10U_if_else_mux_1_nl_C & ( { 1{ FpMantRNE_17U_11U_else_and_svs_mx1 }} & FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_T [5] | { 1{ !FpMantRNE_17U_11U_else_and_svs_mx1 }} & FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_T [4] )))) && FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl[5] != FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl[4] ;
  assign { FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R2 [0], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R2 [1], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R2 [2], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R2 [3], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R2 [4] } = 0;
  assign { FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X2 [0], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X2 [1], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X2 [2], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X2 [3], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X2 [4] } = 0;
  assign { FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C2 [0], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C2 [1], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C2 [2], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C2 [3], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C2 [4] } = 0;
  assign { FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R0 [0], FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R0 [1], FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R0 [2], FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R0 [3] } = 0;
  assign { FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X0 [0], FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X0 [1], FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X0 [2], FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X0 [3] } = 0;
  assign { FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C0 [0], FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C0 [1], FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C0 [2], FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C0 [3] } = 0;
  logic [5:0] FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C3 ;
  logic [5:0] FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R3 ;
  logic [5:0] FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X3 ;
  assign FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C3 [5] = { 1{ FpMantRNE_17U_11U_else_and_svs_mx1 }} ;
  assign FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R3 [5] = { 1{ FpMantRNE_17U_11U_else_and_svs_mx1 }} & ( FpFractionToFloat_16U_6U_10U_if_else_mux_1_nl_R | ( { 1{ FpMantRNE_17U_11U_else_and_svs_mx1_T  }} & FpFractionToFloat_16U_6U_10U_if_else_mux_1_nl_C ));
  assign FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X3 [5] = { 1{ FpMantRNE_17U_11U_else_and_svs_mx1 }} & FpFractionToFloat_16U_6U_10U_if_else_mux_1_nl_X ;
  logic [4:0] FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C1 ;
  logic [4:0] FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R1 ;
  logic [4:0] FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X1 ;
  assign FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C1 [4] = { 1{ !FpMantRNE_17U_11U_else_and_svs_mx1 }} ;
  assign FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R1 [4] = { 1{ !FpMantRNE_17U_11U_else_and_svs_mx1 }} & ( FpFractionToFloat_16U_6U_10U_if_else_mux_1_nl_R | ( { 1{ FpMantRNE_17U_11U_else_and_svs_mx1_T  }} & FpFractionToFloat_16U_6U_10U_if_else_mux_1_nl_C ));
  assign FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X1 [4] = { 1{ !FpMantRNE_17U_11U_else_and_svs_mx1 }} & FpFractionToFloat_16U_6U_10U_if_else_mux_1_nl_X ;
  assign FpMantRNE_17U_11U_else_and_svs_mx1 = and_dcpl_22 ? FpMantRNE_17U_11U_else_and_svs : FpMantRNE_17U_11U_else_and_svs_mx0w0;
  logic [0:0] and_dcpl_22_C1 ;
  logic [0:0] and_dcpl_22_R1 ;
  logic [0:0] and_dcpl_22_X1 ;
  assign and_dcpl_22_C1 = | FpMantRNE_17U_11U_else_and_svs_mx1_C ;
  assign and_dcpl_22_X1 = | FpMantRNE_17U_11U_else_and_svs_mx1_X ;
  assign FpMantRNE_17U_11U_else_and_svs_mx1_T = and_dcpl_22 ? ( { 1{ and_dcpl_22_T  }} | FpMantRNE_17U_11U_else_and_svs_T ) : ( { 1{ and_dcpl_22_T  }} | FpMantRNE_17U_11U_else_and_svs_mx0w0_T );
  assign FpMantRNE_17U_11U_else_and_svs_mx1_S = and_dcpl_22 ? FpMantRNE_17U_11U_else_and_svs_S : FpMantRNE_17U_11U_else_and_svs_mx0w0_S ;
  assign and_dcpl_22_R1 = ( | (FpMantRNE_17U_11U_else_and_svs_mx1_R | ( FpMantRNE_17U_11U_else_and_svs_mx1_C & ( { 1{ and_dcpl_22 }} & FpMantRNE_17U_11U_else_and_svs_T | { 1{ !and_dcpl_22 }} & FpMantRNE_17U_11U_else_and_svs_mx0w0_T )))) && FpMantRNE_17U_11U_else_and_svs != FpMantRNE_17U_11U_else_and_svs_mx0w0 ;
  logic [0:0] FpMantRNE_17U_11U_else_and_svs_C0 ;
  logic [0:0] FpMantRNE_17U_11U_else_and_svs_R0 ;
  logic [0:0] FpMantRNE_17U_11U_else_and_svs_X0 ;
  assign FpMantRNE_17U_11U_else_and_svs_C0 = { 1{ and_dcpl_22 }} ;
  assign FpMantRNE_17U_11U_else_and_svs_R0 = { 1{ and_dcpl_22 }} & ( FpMantRNE_17U_11U_else_and_svs_mx1_R | ( { 1{ and_dcpl_22_T  }} & FpMantRNE_17U_11U_else_and_svs_mx1_C ));
  assign FpMantRNE_17U_11U_else_and_svs_X0 = { 1{ and_dcpl_22 }} & FpMantRNE_17U_11U_else_and_svs_mx1_X ;
  logic [0:0] FpMantRNE_17U_11U_else_and_svs_mx0w0_C0 ;
  logic [0:0] FpMantRNE_17U_11U_else_and_svs_mx0w0_R0 ;
  logic [0:0] FpMantRNE_17U_11U_else_and_svs_mx0w0_X0 ;
  assign FpMantRNE_17U_11U_else_and_svs_mx0w0_C0 = { 1{ !and_dcpl_22 }} ;
  assign FpMantRNE_17U_11U_else_and_svs_mx0w0_R0 = { 1{ !and_dcpl_22 }} & ( FpMantRNE_17U_11U_else_and_svs_mx1_R | ( { 1{ and_dcpl_22_T  }} & FpMantRNE_17U_11U_else_and_svs_mx1_C ));
  assign FpMantRNE_17U_11U_else_and_svs_mx0w0_X0 = { 1{ !and_dcpl_22 }} & FpMantRNE_17U_11U_else_and_svs_mx1_X ;
  assign mux_tmp = FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl[4] ? nor_9_nl : nand_8_nl;
  assign { FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R1 [0], FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R1 [1], FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R1 [2], FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R1 [3] } = 0;
  assign { FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X1 [0], FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X1 [1], FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X1 [2], FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X1 [3] } = 0;
  assign { FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C1 [0], FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C1 [1], FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C1 [2], FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C1 [3] } = 0;
  logic [4:0] FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C2 ;
  logic [4:0] FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R2 ;
  logic [4:0] FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X2 ;
  assign FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C2 [4] = | mux_tmp_C ;
  assign FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X2 [4] = | mux_tmp_X ;
  assign mux_tmp_T = FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl[4] ? ( { 1{ FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_T  [4] }} | nor_9_nl_T ) : ( { 1{ FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_T  [4] }} | nand_8_nl_T );
  assign mux_tmp_S = FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl[4] ? nor_9_nl_S : nand_8_nl_S ;
  assign FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R2 [4] = ( | (mux_tmp_R | ( mux_tmp_C & ( { 1{ FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl[4] }} & nor_9_nl_T | { 1{ !FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl[4] }} & nand_8_nl_T )))) && nor_9_nl != nand_8_nl ;
  logic [0:0] nor_9_nl_C0 ;
  logic [0:0] nor_9_nl_R0 ;
  logic [0:0] nor_9_nl_X0 ;
  assign nor_9_nl_C0 = { 1{ FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl[4] }} ;
  assign nor_9_nl_R0 = { 1{ FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl[4] }} & ( mux_tmp_R | ( { 1{ FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_T  [4] }} & mux_tmp_C ));
  assign nor_9_nl_X0 = { 1{ FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl[4] }} & mux_tmp_X ;
  logic [0:0] nand_8_nl_C0 ;
  logic [0:0] nand_8_nl_R0 ;
  logic [0:0] nand_8_nl_X0 ;
  assign nand_8_nl_C0 = { 1{ !FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl[4] }} ;
  assign nand_8_nl_R0 = { 1{ !FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl[4] }} & ( mux_tmp_R | ( { 1{ FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_T  [4] }} & mux_tmp_C ));
  assign nand_8_nl_X0 = { 1{ !FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl[4] }} & mux_tmp_X ;
  assign _001_ = _024_ ? FpMantRNE_17U_11U_else_and_svs_mx0w0 : FpMantRNE_17U_11U_else_and_svs;
  logic [0:0] _024__C0 ;
  logic [0:0] _024__R0 ;
  logic [0:0] _024__X0 ;
  assign _024__C0 = | _001__C ;
  assign _024__X0 = | _001__X ;
  assign _001__T = _024_ ? ( { 1{ _024__T  }} | FpMantRNE_17U_11U_else_and_svs_mx0w0_T ) : ( { 1{ _024__T  }} | FpMantRNE_17U_11U_else_and_svs_T );
  assign _001__S = _024_ ? FpMantRNE_17U_11U_else_and_svs_mx0w0_S : FpMantRNE_17U_11U_else_and_svs_S ;
  assign _024__R0 = ( | (_001__R | ( _001__C & ( { 1{ _024_ }} & FpMantRNE_17U_11U_else_and_svs_mx0w0_T | { 1{ !_024_ }} & FpMantRNE_17U_11U_else_and_svs_T )))) && FpMantRNE_17U_11U_else_and_svs_mx0w0 != FpMantRNE_17U_11U_else_and_svs ;
  logic [0:0] FpMantRNE_17U_11U_else_and_svs_mx0w0_C1 ;
  logic [0:0] FpMantRNE_17U_11U_else_and_svs_mx0w0_R1 ;
  logic [0:0] FpMantRNE_17U_11U_else_and_svs_mx0w0_X1 ;
  assign FpMantRNE_17U_11U_else_and_svs_mx0w0_C1 = { 1{ _024_ }} ;
  assign FpMantRNE_17U_11U_else_and_svs_mx0w0_R1 = { 1{ _024_ }} & ( _001__R | ( { 1{ _024__T  }} & _001__C ));
  assign FpMantRNE_17U_11U_else_and_svs_mx0w0_X1 = { 1{ _024_ }} & _001__X ;
  logic [0:0] FpMantRNE_17U_11U_else_and_svs_C1 ;
  logic [0:0] FpMantRNE_17U_11U_else_and_svs_R1 ;
  logic [0:0] FpMantRNE_17U_11U_else_and_svs_X1 ;
  assign FpMantRNE_17U_11U_else_and_svs_C1 = { 1{ !_024_ }} ;
  assign FpMantRNE_17U_11U_else_and_svs_R1 = { 1{ !_024_ }} & ( _001__R | ( { 1{ _024__T  }} & _001__C ));
  assign FpMantRNE_17U_11U_else_and_svs_X1 = { 1{ !_024_ }} & _001__X ;
  assign _007_ = _023_ ? _041_ : reg_chn_o_rsci_ld_core_psct_cse;
  logic [0:0] _023__C0 ;
  logic [0:0] _023__R0 ;
  logic [0:0] _023__X0 ;
  assign _023__C0 = | _007__C ;
  assign _023__X0 = | _007__X ;
  assign _007__T = _023_ ? ( { 1{ _023__T  }} | _041__T ) : ( { 1{ _023__T  }} | reg_chn_o_rsci_ld_core_psct_cse_T );
  assign _007__S = _023_ ? _041__S : reg_chn_o_rsci_ld_core_psct_cse_S ;
  assign _023__R0 = ( | (_007__R | ( _007__C & ( { 1{ _023_ }} & _041__T | { 1{ !_023_ }} & reg_chn_o_rsci_ld_core_psct_cse_T )))) && _041_ != reg_chn_o_rsci_ld_core_psct_cse ;
  logic [0:0] _041__C0 ;
  logic [0:0] _041__R0 ;
  logic [0:0] _041__X0 ;
  assign _041__C0 = { 1{ _023_ }} ;
  assign _041__R0 = { 1{ _023_ }} & ( _007__R | ( { 1{ _023__T  }} & _007__C ));
  assign _041__X0 = { 1{ _023_ }} & _007__X ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C3 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R3 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X3 ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C3 = { 1{ !_023_ }} ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R3 = { 1{ !_023_ }} & ( _007__R | ( { 1{ _023__T  }} & _007__C ));
  assign reg_chn_o_rsci_ld_core_psct_cse_X3 = { 1{ !_023_ }} & _007__X ;
  assign _008_ = _011_ ? and_nl : 5'b11111;
  logic [0:0] _011__C10 ;
  logic [0:0] _011__R10 ;
  logic [0:0] _011__X10 ;
  assign _011__C10 = | _008__C ;
  assign _011__X10 = | _008__X ;
  logic [4:0] and_nl_C0 ;
  logic [4:0] and_nl_R0 ;
  logic [4:0] and_nl_X0 ;
  assign and_nl_C0 = { 5{ _011_ }} ;
  assign and_nl_R0 = { 5{ _011_ }} & ( _008__R | ( { 5{ _011__T  }} & _008__C ));
  assign and_nl_X0 = { 5{ _011_ }} & _008__X ;
  assign _008__T = _011_ ? ( { 5{ | _011__T  }} | and_nl_T ) : { 5{ | _011__T  }};
  assign _008__S = _011_ ? and_nl_S : _011__S ;
  assign _011__R10 = ( | (_008__R | ( { 5{ _011_ }} & and_nl_T & _008__C ))) && and_nl != 5'b11111 ;
  assign _004_ = _022_ ? _040_ : chn_o_rsci_d_14_10;
  logic [0:0] _022__C0 ;
  logic [0:0] _022__R0 ;
  logic [0:0] _022__X0 ;
  assign _022__C0 = | _004__C ;
  assign _022__X0 = | _004__X ;
  assign _004__T = _022_ ? ( { 5{ _022__T  }} | _040__T ) : ( { 5{ _022__T  }} | chn_o_rsci_d_14_10_T );
  assign _004__S = _022_ ? _040__S : chn_o_rsci_d_14_10_S ;
  assign _022__R0 = ( | (_004__R | ( _004__C & ( { 5{ _022_ }} & _040__T | { 5{ !_022_ }} & chn_o_rsci_d_14_10_T )))) && _040_ != chn_o_rsci_d_14_10 ;
  logic [4:0] _040__C0 ;
  logic [4:0] _040__R0 ;
  logic [4:0] _040__X0 ;
  assign _040__C0 = { 5{ _022_ }} ;
  assign _040__R0 = { 5{ _022_ }} & ( _004__R | ( { 5{ _022__T  }} & _004__C ));
  assign _040__X0 = { 5{ _022_ }} & _004__X ;
  logic [4:0] chn_o_rsci_d_14_10_C0 ;
  logic [4:0] chn_o_rsci_d_14_10_R0 ;
  logic [4:0] chn_o_rsci_d_14_10_X0 ;
  assign chn_o_rsci_d_14_10_C0 = { 5{ !_022_ }} ;
  assign chn_o_rsci_d_14_10_R0 = { 5{ !_022_ }} & ( _004__R | ( { 5{ _022__T  }} & _004__C ));
  assign chn_o_rsci_d_14_10_X0 = { 5{ !_022_ }} & _004__X ;
  assign _005_ = _018_ ? _021_ : chn_o_rsci_d_9_0;
  logic [0:0] _018__C0 ;
  logic [0:0] _018__R0 ;
  logic [0:0] _018__X0 ;
  assign _018__C0 = | _005__C ;
  assign _018__X0 = | _005__X ;
  assign _005__T = _018_ ? ( { 10{ _018__T  }} | _021__T ) : ( { 10{ _018__T  }} | chn_o_rsci_d_9_0_T );
  assign _005__S = _018_ ? _021__S : chn_o_rsci_d_9_0_S ;
  assign _018__R0 = ( | (_005__R | ( _005__C & ( { 10{ _018_ }} & _021__T | { 10{ !_018_ }} & chn_o_rsci_d_9_0_T )))) && _021_ != chn_o_rsci_d_9_0 ;
  logic [9:0] _021__C0 ;
  logic [9:0] _021__R0 ;
  logic [9:0] _021__X0 ;
  assign _021__C0 = { 10{ _018_ }} ;
  assign _021__R0 = { 10{ _018_ }} & ( _005__R | ( { 10{ _018__T  }} & _005__C ));
  assign _021__X0 = { 10{ _018_ }} & _005__X ;
  logic [9:0] chn_o_rsci_d_9_0_C0 ;
  logic [9:0] chn_o_rsci_d_9_0_R0 ;
  logic [9:0] chn_o_rsci_d_9_0_X0 ;
  assign chn_o_rsci_d_9_0_C0 = { 10{ !_018_ }} ;
  assign chn_o_rsci_d_9_0_R0 = { 10{ !_018_ }} & ( _005__R | ( { 10{ _018__T  }} & _005__C ));
  assign chn_o_rsci_d_9_0_X0 = { 10{ !_018_ }} & _005__X ;
  assign _003_ = _015_ ? chn_a_rsci_ld_core_psct_mx0c0 : chn_a_rsci_ld_core_psct;
  logic [0:0] _015__C0 ;
  logic [0:0] _015__R0 ;
  logic [0:0] _015__X0 ;
  assign _015__C0 = | _003__C ;
  assign _015__X0 = | _003__X ;
  assign _003__T = _015_ ? ( { 1{ _015__T  }} | chn_a_rsci_ld_core_psct_mx0c0_T ) : ( { 1{ _015__T  }} | chn_a_rsci_ld_core_psct_T );
  assign _003__S = _015_ ? chn_a_rsci_ld_core_psct_mx0c0_S : chn_a_rsci_ld_core_psct_S ;
  assign _015__R0 = ( | (_003__R | ( _003__C & ( { 1{ _015_ }} & chn_a_rsci_ld_core_psct_mx0c0_T | { 1{ !_015_ }} & chn_a_rsci_ld_core_psct_T )))) && chn_a_rsci_ld_core_psct_mx0c0 != chn_a_rsci_ld_core_psct ;
  logic [0:0] chn_a_rsci_ld_core_psct_mx0c0_C1 ;
  logic [0:0] chn_a_rsci_ld_core_psct_mx0c0_R1 ;
  logic [0:0] chn_a_rsci_ld_core_psct_mx0c0_X1 ;
  assign chn_a_rsci_ld_core_psct_mx0c0_C1 = { 1{ _015_ }} ;
  assign chn_a_rsci_ld_core_psct_mx0c0_R1 = { 1{ _015_ }} & ( _003__R | ( { 1{ _015__T  }} & _003__C ));
  assign chn_a_rsci_ld_core_psct_mx0c0_X1 = { 1{ _015_ }} & _003__X ;
  logic [0:0] chn_a_rsci_ld_core_psct_C0 ;
  logic [0:0] chn_a_rsci_ld_core_psct_R0 ;
  logic [0:0] chn_a_rsci_ld_core_psct_X0 ;
  assign chn_a_rsci_ld_core_psct_C0 = { 1{ !_015_ }} ;
  assign chn_a_rsci_ld_core_psct_R0 = { 1{ !_015_ }} & ( _003__R | ( { 1{ _015__T  }} & _003__C ));
  assign chn_a_rsci_ld_core_psct_X0 = { 1{ !_015_ }} & _003__X ;
  assign _006_ = core_wen ? or_tmp_7 : reg_chn_o_rsci_iswt0_cse;
  logic [0:0] core_wen_C5 ;
  logic [0:0] core_wen_R5 ;
  logic [0:0] core_wen_X5 ;
  assign core_wen_C5 = | _006__C ;
  assign core_wen_X5 = | _006__X ;
  assign _006__T = core_wen ? ( { 1{ core_wen_T  }} | or_tmp_7_T ) : ( { 1{ core_wen_T  }} | reg_chn_o_rsci_iswt0_cse_T );
  assign _006__S = core_wen ? or_tmp_7_S : reg_chn_o_rsci_iswt0_cse_S ;
  assign core_wen_R5 = ( | (_006__R | ( _006__C & ( { 1{ core_wen }} & or_tmp_7_T | { 1{ !core_wen }} & reg_chn_o_rsci_iswt0_cse_T )))) && or_tmp_7 != reg_chn_o_rsci_iswt0_cse ;
  logic [0:0] or_tmp_7_C1 ;
  logic [0:0] or_tmp_7_R1 ;
  logic [0:0] or_tmp_7_X1 ;
  assign or_tmp_7_C1 = { 1{ core_wen }} ;
  assign or_tmp_7_R1 = { 1{ core_wen }} & ( _006__R | ( { 1{ core_wen_T  }} & _006__C ));
  assign or_tmp_7_X1 = { 1{ core_wen }} & _006__X ;
  logic [0:0] reg_chn_o_rsci_iswt0_cse_C0 ;
  logic [0:0] reg_chn_o_rsci_iswt0_cse_R0 ;
  logic [0:0] reg_chn_o_rsci_iswt0_cse_X0 ;
  assign reg_chn_o_rsci_iswt0_cse_C0 = { 1{ !core_wen }} ;
  assign reg_chn_o_rsci_iswt0_cse_R0 = { 1{ !core_wen }} & ( _006__R | ( { 1{ core_wen_T  }} & _006__C ));
  assign reg_chn_o_rsci_iswt0_cse_X0 = { 1{ !core_wen }} & _006__X ;
  assign _002_ = core_wen ? _035_ : chn_a_rsci_iswt0;
  logic [0:0] core_wen_C6 ;
  logic [0:0] core_wen_R6 ;
  logic [0:0] core_wen_X6 ;
  assign core_wen_C6 = | _002__C ;
  assign core_wen_X6 = | _002__X ;
  assign _002__T = core_wen ? ( { 1{ core_wen_T  }} | _035__T ) : ( { 1{ core_wen_T  }} | chn_a_rsci_iswt0_T );
  assign _002__S = core_wen ? _035__S : chn_a_rsci_iswt0_S ;
  assign core_wen_R6 = ( | (_002__R | ( _002__C & ( { 1{ core_wen }} & _035__T | { 1{ !core_wen }} & chn_a_rsci_iswt0_T )))) && _035_ != chn_a_rsci_iswt0 ;
  logic [0:0] _035__C0 ;
  logic [0:0] _035__R0 ;
  logic [0:0] _035__X0 ;
  assign _035__C0 = { 1{ core_wen }} ;
  assign _035__R0 = { 1{ core_wen }} & ( _002__R | ( { 1{ core_wen_T  }} & _002__C ));
  assign _035__X0 = { 1{ core_wen }} & _002__X ;
  logic [0:0] chn_a_rsci_iswt0_C0 ;
  logic [0:0] chn_a_rsci_iswt0_R0 ;
  logic [0:0] chn_a_rsci_iswt0_X0 ;
  assign chn_a_rsci_iswt0_C0 = { 1{ !core_wen }} ;
  assign chn_a_rsci_iswt0_R0 = { 1{ !core_wen }} & ( _002__R | ( { 1{ core_wen_T  }} & _002__C ));
  assign chn_a_rsci_iswt0_X0 = { 1{ !core_wen }} & _002__X ;
  logic [15:0] chn_a_rsci_d_mxwt_R2 ;
  logic [15:0] chn_a_rsci_d_mxwt_X2 ;
  logic [15:0] chn_a_rsci_d_mxwt_C2 ;
  logic [5:0] nl_FpFractionToFloat_16U_6U_10U_if_shifted_frac_p1_lshift_rg_s_R0 ;
  logic [5:0] nl_FpFractionToFloat_16U_6U_10U_if_shifted_frac_p1_lshift_rg_s_X0 ;
  logic [5:0] nl_FpFractionToFloat_16U_6U_10U_if_shifted_frac_p1_lshift_rg_s_C0 ;
// module: \$paramod\UINT16_TO_FP17_mgc_shift_l_v4\width_a=16\signd_a=0\width_s=6\width_z=17
  \$paramod\UINT16_TO_FP17_mgc_shift_l_v4\width_a=16\signd_a=0\width_s=6\width_z=17 FpFractionToFloat_16U_6U_10U_if_shifted_frac_p1_lshift_rg (
    .a_T (  chn_a_rsci_d_mxwt_T  ),
    .a_R (  chn_a_rsci_d_mxwt_R2  ),
    .a_X (  chn_a_rsci_d_mxwt_X2  ),
    .a_C (  chn_a_rsci_d_mxwt_C2  ),
    .a_S (  chn_a_rsci_d_mxwt_S  ),
    .s_T (  nl_FpFractionToFloat_16U_6U_10U_if_shifted_frac_p1_lshift_rg_s_T  ),
    .s_R (  nl_FpFractionToFloat_16U_6U_10U_if_shifted_frac_p1_lshift_rg_s_R0  ),
    .s_X (  nl_FpFractionToFloat_16U_6U_10U_if_shifted_frac_p1_lshift_rg_s_X0  ),
    .s_C (  nl_FpFractionToFloat_16U_6U_10U_if_shifted_frac_p1_lshift_rg_s_C0  ),
    .s_S (  nl_FpFractionToFloat_16U_6U_10U_if_shifted_frac_p1_lshift_rg_s_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .rst_zy(rst_zy),
    .z_T (  FpMantRNE_17U_11U_i_data_sva_T  ),
    .z_R0 (  FpMantRNE_17U_11U_i_data_sva_R  ),
    .z_X0 (  FpMantRNE_17U_11U_i_data_sva_X  ),
    .z_C0 (  FpMantRNE_17U_11U_i_data_sva_C  ),
    .z_S ( FpMantRNE_17U_11U_i_data_sva_S ),
    .z ( FpMantRNE_17U_11U_i_data_sva ),
    .a ( chn_a_rsci_d_mxwt ),
    .s ( nl_FpFractionToFloat_16U_6U_10U_if_shifted_frac_p1_lshift_rg_s )
  );
  logic [0:0] chn_a_rsc_vz_R0 ;
  logic [0:0] chn_a_rsc_vz_X0 ;
  logic [0:0] chn_a_rsc_vz_C0 ;
  logic [15:0] chn_a_rsc_z_R0 ;
  logic [15:0] chn_a_rsc_z_X0 ;
  logic [15:0] chn_a_rsc_z_C0 ;
  logic [0:0] chn_a_rsci_iswt0_R1 ;
  logic [0:0] chn_a_rsci_iswt0_X1 ;
  logic [0:0] chn_a_rsci_iswt0_C1 ;
  logic [0:0] chn_a_rsci_ld_core_psct_R1 ;
  logic [0:0] chn_a_rsci_ld_core_psct_X1 ;
  logic [0:0] chn_a_rsci_ld_core_psct_C1 ;
  logic [0:0] chn_a_rsci_oswt_R0 ;
  logic [0:0] chn_a_rsci_oswt_X0 ;
  logic [0:0] chn_a_rsci_oswt_C0 ;
  logic [0:0] core_wen_R7 ;
  logic [0:0] core_wen_X7 ;
  logic [0:0] core_wen_C7 ;
  logic [0:0] core_wten_R0 ;
  logic [0:0] core_wten_X0 ;
  logic [0:0] core_wten_C0 ;
  logic [0:0] nvdla_core_rstn_R0 ;
  logic [0:0] nvdla_core_rstn_X0 ;
  logic [0:0] nvdla_core_rstn_C0 ;
// module: HLS_uint16_to_fp17_core_chn_a_rsci
  HLS_uint16_to_fp17_core_chn_a_rsci HLS_uint16_to_fp17_core_chn_a_rsci_inst (
    .chn_a_rsc_vz_T (  chn_a_rsc_vz_T  ),
    .chn_a_rsc_vz_R (  chn_a_rsc_vz_R0  ),
    .chn_a_rsc_vz_X (  chn_a_rsc_vz_X0  ),
    .chn_a_rsc_vz_C (  chn_a_rsc_vz_C0  ),
    .chn_a_rsc_vz_S (  chn_a_rsc_vz_S  ),
    .chn_a_rsc_z_T (  chn_a_rsc_z_T  ),
    .chn_a_rsc_z_R (  chn_a_rsc_z_R0  ),
    .chn_a_rsc_z_X (  chn_a_rsc_z_X0  ),
    .chn_a_rsc_z_C (  chn_a_rsc_z_C0  ),
    .chn_a_rsc_z_S (  chn_a_rsc_z_S  ),
    .chn_a_rsci_iswt0_T (  chn_a_rsci_iswt0_T  ),
    .chn_a_rsci_iswt0_R (  chn_a_rsci_iswt0_R1  ),
    .chn_a_rsci_iswt0_X (  chn_a_rsci_iswt0_X1  ),
    .chn_a_rsci_iswt0_C (  chn_a_rsci_iswt0_C1  ),
    .chn_a_rsci_iswt0_S (  chn_a_rsci_iswt0_S  ),
    .chn_a_rsci_ld_core_psct_T (  chn_a_rsci_ld_core_psct_T  ),
    .chn_a_rsci_ld_core_psct_R (  chn_a_rsci_ld_core_psct_R1  ),
    .chn_a_rsci_ld_core_psct_X (  chn_a_rsci_ld_core_psct_X1  ),
    .chn_a_rsci_ld_core_psct_C (  chn_a_rsci_ld_core_psct_C1  ),
    .chn_a_rsci_ld_core_psct_S (  chn_a_rsci_ld_core_psct_S  ),
    .chn_a_rsci_oswt_T (  chn_a_rsci_oswt_T  ),
    .chn_a_rsci_oswt_R (  chn_a_rsci_oswt_R0  ),
    .chn_a_rsci_oswt_X (  chn_a_rsci_oswt_X0  ),
    .chn_a_rsci_oswt_C (  chn_a_rsci_oswt_C0  ),
    .chn_a_rsci_oswt_S (  chn_a_rsci_oswt_S  ),
    .core_wen_T (  core_wen_T  ),
    .core_wen_R (  core_wen_R7  ),
    .core_wen_X (  core_wen_X7  ),
    .core_wen_C (  core_wen_C7  ),
    .core_wen_S (  core_wen_S  ),
    .core_wten_T (  core_wten_T  ),
    .core_wten_R (  core_wten_R0  ),
    .core_wten_X (  core_wten_X0  ),
    .core_wten_C (  core_wten_C0  ),
    .core_wten_S (  core_wten_S  ),
    .nvdla_core_rstn_T (  nvdla_core_rstn_T  ),
    .nvdla_core_rstn_R (  nvdla_core_rstn_R0  ),
    .nvdla_core_rstn_X (  nvdla_core_rstn_X0  ),
    .nvdla_core_rstn_C (  nvdla_core_rstn_C0  ),
    .nvdla_core_rstn_S (  nvdla_core_rstn_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .chn_a_rsc_lz_T (  chn_a_rsc_lz_T  ),
    .chn_a_rsc_lz_R0 (  chn_a_rsc_lz_R  ),
    .chn_a_rsc_lz_X0 (  chn_a_rsc_lz_X  ),
    .chn_a_rsc_lz_C0 (  chn_a_rsc_lz_C  ),
    .chn_a_rsc_lz_S ( chn_a_rsc_lz_S ),
    .chn_a_rsci_bawt_T (  chn_a_rsci_bawt_T  ),
    .chn_a_rsci_bawt_R0 (  chn_a_rsci_bawt_R  ),
    .chn_a_rsci_bawt_X0 (  chn_a_rsci_bawt_X  ),
    .chn_a_rsci_bawt_C0 (  chn_a_rsci_bawt_C  ),
    .chn_a_rsci_bawt_S ( chn_a_rsci_bawt_S ),
    .chn_a_rsci_d_mxwt_T (  chn_a_rsci_d_mxwt_T  ),
    .chn_a_rsci_d_mxwt_R0 (  chn_a_rsci_d_mxwt_R  ),
    .chn_a_rsci_d_mxwt_X0 (  chn_a_rsci_d_mxwt_X  ),
    .chn_a_rsci_d_mxwt_C0 (  chn_a_rsci_d_mxwt_C  ),
    .chn_a_rsci_d_mxwt_S ( chn_a_rsci_d_mxwt_S ),
    .chn_a_rsci_wen_comp_T (  chn_a_rsci_wen_comp_T  ),
    .chn_a_rsci_wen_comp_R0 (  chn_a_rsci_wen_comp_R  ),
    .chn_a_rsci_wen_comp_X0 (  chn_a_rsci_wen_comp_X  ),
    .chn_a_rsci_wen_comp_C0 (  chn_a_rsci_wen_comp_C  ),
    .chn_a_rsci_wen_comp_S ( chn_a_rsci_wen_comp_S ),
    .nvdla_core_clk ( nvdla_core_clk ),
    .chn_a_rsci_d_mxwt ( chn_a_rsci_d_mxwt ),
    .core_wten ( core_wten ),
    .chn_a_rsci_bawt ( chn_a_rsci_bawt ),
    .chn_a_rsc_z ( chn_a_rsc_z ),
    .chn_a_rsc_lz ( chn_a_rsc_lz ),
    .chn_a_rsc_vz ( chn_a_rsc_vz ),
    .chn_a_rsci_ld_core_psct ( chn_a_rsci_ld_core_psct ),
    .chn_a_rsci_oswt ( chn_a_rsci_oswt ),
    .nvdla_core_rstn ( nvdla_core_rstn ),
    .chn_a_rsci_wen_comp ( chn_a_rsci_wen_comp ),
    .chn_a_rsci_iswt0 ( chn_a_rsci_iswt0 ),
    .core_wen ( core_wen )
  );
  logic [0:0] chn_o_rsc_vz_R0 ;
  logic [0:0] chn_o_rsc_vz_X0 ;
  logic [0:0] chn_o_rsc_vz_C0 ;
  logic [4:0] chn_o_rsci_d_14_10_R1 ;
  logic [4:0] chn_o_rsci_d_14_10_X1 ;
  logic [4:0] chn_o_rsci_d_14_10_C1 ;
  logic [9:0] chn_o_rsci_d_9_0_R1 ;
  logic [9:0] chn_o_rsci_d_9_0_X1 ;
  logic [9:0] chn_o_rsci_d_9_0_C1 ;
  logic [0:0] reg_chn_o_rsci_iswt0_cse_R1 ;
  logic [0:0] reg_chn_o_rsci_iswt0_cse_X1 ;
  logic [0:0] reg_chn_o_rsci_iswt0_cse_C1 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R4 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X4 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C4 ;
  logic [0:0] chn_o_rsci_oswt_R0 ;
  logic [0:0] chn_o_rsci_oswt_X0 ;
  logic [0:0] chn_o_rsci_oswt_C0 ;
  logic [0:0] core_wen_R8 ;
  logic [0:0] core_wen_X8 ;
  logic [0:0] core_wen_C8 ;
  logic [0:0] core_wten_R1 ;
  logic [0:0] core_wten_X1 ;
  logic [0:0] core_wten_C1 ;
  logic [0:0] nvdla_core_rstn_R1 ;
  logic [0:0] nvdla_core_rstn_X1 ;
  logic [0:0] nvdla_core_rstn_C1 ;
// module: HLS_uint16_to_fp17_core_chn_o_rsci
  HLS_uint16_to_fp17_core_chn_o_rsci HLS_uint16_to_fp17_core_chn_o_rsci_inst (
    .chn_o_rsc_vz_T (  chn_o_rsc_vz_T  ),
    .chn_o_rsc_vz_R (  chn_o_rsc_vz_R0  ),
    .chn_o_rsc_vz_X (  chn_o_rsc_vz_X0  ),
    .chn_o_rsc_vz_C (  chn_o_rsc_vz_C0  ),
    .chn_o_rsc_vz_S (  chn_o_rsc_vz_S  ),
    .chn_o_rsci_d_T ( {  2'h0 , chn_o_rsci_d_14_10_T , chn_o_rsci_d_9_0_T  } ),
    .chn_o_rsci_d_R ( {  nouse_zy0 , chn_o_rsci_d_14_10_R1 , chn_o_rsci_d_9_0_R1  } ),
    .chn_o_rsci_d_X ( {  nouse_zy1 , chn_o_rsci_d_14_10_X1 , chn_o_rsci_d_9_0_X1  } ),
    .chn_o_rsci_d_C ( {  nouse_zy2 , chn_o_rsci_d_14_10_C1 , chn_o_rsci_d_9_0_C1  } ),
    .chn_o_rsci_d_S ( {  2'h0 , chn_o_rsci_d_14_10_S , chn_o_rsci_d_9_0_S  } ),
    .chn_o_rsci_iswt0_T (  reg_chn_o_rsci_iswt0_cse_T  ),
    .chn_o_rsci_iswt0_R (  reg_chn_o_rsci_iswt0_cse_R1  ),
    .chn_o_rsci_iswt0_X (  reg_chn_o_rsci_iswt0_cse_X1  ),
    .chn_o_rsci_iswt0_C (  reg_chn_o_rsci_iswt0_cse_C1  ),
    .chn_o_rsci_iswt0_S (  reg_chn_o_rsci_iswt0_cse_S  ),
    .chn_o_rsci_ld_core_psct_T (  reg_chn_o_rsci_ld_core_psct_cse_T  ),
    .chn_o_rsci_ld_core_psct_R (  reg_chn_o_rsci_ld_core_psct_cse_R4  ),
    .chn_o_rsci_ld_core_psct_X (  reg_chn_o_rsci_ld_core_psct_cse_X4  ),
    .chn_o_rsci_ld_core_psct_C (  reg_chn_o_rsci_ld_core_psct_cse_C4  ),
    .chn_o_rsci_ld_core_psct_S (  reg_chn_o_rsci_ld_core_psct_cse_S  ),
    .chn_o_rsci_oswt_T (  chn_o_rsci_oswt_T  ),
    .chn_o_rsci_oswt_R (  chn_o_rsci_oswt_R0  ),
    .chn_o_rsci_oswt_X (  chn_o_rsci_oswt_X0  ),
    .chn_o_rsci_oswt_C (  chn_o_rsci_oswt_C0  ),
    .chn_o_rsci_oswt_S (  chn_o_rsci_oswt_S  ),
    .core_wen_T (  core_wen_T  ),
    .core_wen_R (  core_wen_R8  ),
    .core_wen_X (  core_wen_X8  ),
    .core_wen_C (  core_wen_C8  ),
    .core_wen_S (  core_wen_S  ),
    .core_wten_T (  core_wten_T  ),
    .core_wten_R (  core_wten_R1  ),
    .core_wten_X (  core_wten_X1  ),
    .core_wten_C (  core_wten_C1  ),
    .core_wten_S (  core_wten_S  ),
    .nvdla_core_rstn_T (  nvdla_core_rstn_T  ),
    .nvdla_core_rstn_R (  nvdla_core_rstn_R1  ),
    .nvdla_core_rstn_X (  nvdla_core_rstn_X1  ),
    .nvdla_core_rstn_C (  nvdla_core_rstn_C1  ),
    .nvdla_core_rstn_S (  nvdla_core_rstn_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .chn_o_rsc_lz_T (  chn_o_rsc_lz_T  ),
    .chn_o_rsc_lz_R0 (  chn_o_rsc_lz_R  ),
    .chn_o_rsc_lz_X0 (  chn_o_rsc_lz_X  ),
    .chn_o_rsc_lz_C0 (  chn_o_rsc_lz_C  ),
    .chn_o_rsc_lz_S ( chn_o_rsc_lz_S ),
    .chn_o_rsc_z_T (  chn_o_rsc_z_T  ),
    .chn_o_rsc_z_R0 (  chn_o_rsc_z_R  ),
    .chn_o_rsc_z_X0 (  chn_o_rsc_z_X  ),
    .chn_o_rsc_z_C0 (  chn_o_rsc_z_C  ),
    .chn_o_rsc_z_S ( chn_o_rsc_z_S ),
    .chn_o_rsci_bawt_T (  chn_o_rsci_bawt_T  ),
    .chn_o_rsci_bawt_R0 (  chn_o_rsci_bawt_R  ),
    .chn_o_rsci_bawt_X0 (  chn_o_rsci_bawt_X  ),
    .chn_o_rsci_bawt_C0 (  chn_o_rsci_bawt_C  ),
    .chn_o_rsci_bawt_S ( chn_o_rsci_bawt_S ),
    .chn_o_rsci_wen_comp_T (  chn_o_rsci_wen_comp_T  ),
    .chn_o_rsci_wen_comp_R0 (  chn_o_rsci_wen_comp_R  ),
    .chn_o_rsci_wen_comp_X0 (  chn_o_rsci_wen_comp_X  ),
    .chn_o_rsci_wen_comp_C0 (  chn_o_rsci_wen_comp_C  ),
    .chn_o_rsci_wen_comp_S ( chn_o_rsci_wen_comp_S ),
    .nvdla_core_rstn ( nvdla_core_rstn ),
    .nvdla_core_clk ( nvdla_core_clk ),
    .chn_o_rsci_d ( { 2'b00, chn_o_rsci_d_14_10, chn_o_rsci_d_9_0 } ),
    .core_wten ( core_wten ),
    .chn_o_rsc_z ( chn_o_rsc_z ),
    .core_wen ( core_wen ),
    .chn_o_rsc_lz ( chn_o_rsc_lz ),
    .chn_o_rsci_ld_core_psct ( reg_chn_o_rsci_ld_core_psct_cse ),
    .chn_o_rsci_bawt ( chn_o_rsci_bawt ),
    .chn_o_rsc_vz ( chn_o_rsc_vz ),
    .chn_o_rsci_wen_comp ( chn_o_rsci_wen_comp ),
    .chn_o_rsci_iswt0 ( reg_chn_o_rsci_iswt0_cse ),
    .chn_o_rsci_oswt ( chn_o_rsci_oswt )
  );
  logic [2-1:0] nouse_zy0 ;
  logic [2-1:0] nouse_zy1 ;
  logic [2-1:0] nouse_zy2 ;
  logic [0:0] core_wen_R9 ;
  logic [0:0] core_wen_X9 ;
  logic [0:0] core_wen_C9 ;
  logic [0:0] nvdla_core_rstn_R2 ;
  logic [0:0] nvdla_core_rstn_X2 ;
  logic [0:0] nvdla_core_rstn_C2 ;
// module: HLS_uint16_to_fp17_core_core_fsm
  HLS_uint16_to_fp17_core_core_fsm HLS_uint16_to_fp17_core_core_fsm_inst (
    .core_wen_T (  core_wen_T  ),
    .core_wen_R (  core_wen_R9  ),
    .core_wen_X (  core_wen_X9  ),
    .core_wen_C (  core_wen_C9  ),
    .core_wen_S (  core_wen_S  ),
    .nvdla_core_rstn_T (  nvdla_core_rstn_T  ),
    .nvdla_core_rstn_R (  nvdla_core_rstn_R2  ),
    .nvdla_core_rstn_X (  nvdla_core_rstn_X2  ),
    .nvdla_core_rstn_C (  nvdla_core_rstn_C2  ),
    .nvdla_core_rstn_S (  nvdla_core_rstn_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .fsm_output_T (  fsm_output_T  ),
    .fsm_output_R0 (  fsm_output_R  ),
    .fsm_output_X0 (  fsm_output_X  ),
    .fsm_output_C0 (  fsm_output_C  ),
    .fsm_output_S ( fsm_output_S ),
    .nvdla_core_clk ( nvdla_core_clk ),
    .nvdla_core_rstn ( nvdla_core_rstn ),
    .core_wen ( core_wen ),
    .fsm_output ( fsm_output )
  );
  logic [0:0] chn_a_rsci_wen_comp_R0 ;
  logic [0:0] chn_a_rsci_wen_comp_X0 ;
  logic [0:0] chn_a_rsci_wen_comp_C0 ;
  logic [0:0] chn_o_rsci_wen_comp_R0 ;
  logic [0:0] chn_o_rsci_wen_comp_X0 ;
  logic [0:0] chn_o_rsci_wen_comp_C0 ;
  logic [0:0] nvdla_core_rstn_R3 ;
  logic [0:0] nvdla_core_rstn_X3 ;
  logic [0:0] nvdla_core_rstn_C3 ;
// module: HLS_uint16_to_fp17_core_staller
  HLS_uint16_to_fp17_core_staller HLS_uint16_to_fp17_core_staller_inst (
    .chn_a_rsci_wen_comp_T (  chn_a_rsci_wen_comp_T  ),
    .chn_a_rsci_wen_comp_R (  chn_a_rsci_wen_comp_R0  ),
    .chn_a_rsci_wen_comp_X (  chn_a_rsci_wen_comp_X0  ),
    .chn_a_rsci_wen_comp_C (  chn_a_rsci_wen_comp_C0  ),
    .chn_a_rsci_wen_comp_S (  chn_a_rsci_wen_comp_S  ),
    .chn_o_rsci_wen_comp_T (  chn_o_rsci_wen_comp_T  ),
    .chn_o_rsci_wen_comp_R (  chn_o_rsci_wen_comp_R0  ),
    .chn_o_rsci_wen_comp_X (  chn_o_rsci_wen_comp_X0  ),
    .chn_o_rsci_wen_comp_C (  chn_o_rsci_wen_comp_C0  ),
    .chn_o_rsci_wen_comp_S (  chn_o_rsci_wen_comp_S  ),
    .nvdla_core_rstn_T (  nvdla_core_rstn_T  ),
    .nvdla_core_rstn_R (  nvdla_core_rstn_R3  ),
    .nvdla_core_rstn_X (  nvdla_core_rstn_X3  ),
    .nvdla_core_rstn_C (  nvdla_core_rstn_C3  ),
    .nvdla_core_rstn_S (  nvdla_core_rstn_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .core_wen_T (  core_wen_T  ),
    .core_wen_R0 (  core_wen_R  ),
    .core_wen_X0 (  core_wen_X  ),
    .core_wen_C0 (  core_wen_C  ),
    .core_wen_S ( core_wen_S ),
    .core_wten_T (  core_wten_T  ),
    .core_wten_R0 (  core_wten_R  ),
    .core_wten_X0 (  core_wten_X  ),
    .core_wten_C0 (  core_wten_C  ),
    .core_wten_S ( core_wten_S ),
    .chn_o_rsci_wen_comp ( chn_o_rsci_wen_comp ),
    .nvdla_core_rstn ( nvdla_core_rstn ),
    .chn_a_rsci_wen_comp ( chn_a_rsci_wen_comp ),
    .nvdla_core_clk ( nvdla_core_clk ),
    .core_wen ( core_wen ),
    .core_wten ( core_wten )
  );
  logic [15:0] chn_a_rsci_d_mxwt_R3 ;
  logic [15:0] chn_a_rsci_d_mxwt_X3 ;
  logic [15:0] chn_a_rsci_d_mxwt_C3 ;
// module: UINT16_TO_FP17_leading_sign_16_0
  UINT16_TO_FP17_leading_sign_16_0 leading_sign_16_0_rg (
    .mantissa_T (  chn_a_rsci_d_mxwt_T  ),
    .mantissa_R (  chn_a_rsci_d_mxwt_R3  ),
    .mantissa_X (  chn_a_rsci_d_mxwt_X3  ),
    .mantissa_C (  chn_a_rsci_d_mxwt_C3  ),
    .mantissa_S (  chn_a_rsci_d_mxwt_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .rst_zy(rst_zy),
    .rtn_T (  libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_T  ),
    .rtn_R0 (  libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_R  ),
    .rtn_X0 (  libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_X  ),
    .rtn_C0 (  libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_C  ),
    .rtn_S ( libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_S ),
    .rtn ( libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1 ),
    .mantissa ( chn_a_rsci_d_mxwt )
  );
  assign FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_itm_4_1 = FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl[4];
  assign { FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R2 [0], FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R2 [1], FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R2 [2], FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R2 [3] } = 0;
  assign { FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X2 [0], FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X2 [1], FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X2 [2], FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X2 [3] } = 0;
  assign { FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C2 [0], FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C2 [1], FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C2 [2], FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C2 [3] } = 0;
  logic [4:0] FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C3 ;
  logic [4:0] FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R3 ;
  logic [4:0] FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X3 ;
  assign FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_itm_4_1_T = FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_T [4] ;
  assign FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C3 [4] = FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_itm_4_1_C ;
  assign FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R3 [4] = FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_itm_4_1_R ;
  assign FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X3 [4] = FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_itm_4_1_X ;
  assign FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_itm_4_1_S = FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_S ;
  assign FpFractionToFloat_16U_6U_10U_if_else_if_acc_itm_5_1 = FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl[5];
  assign { FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R3 [0], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R3 [1], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R3 [2], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R3 [3], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R3 [4] } = 0;
  assign { FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X3 [0], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X3 [1], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X3 [2], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X3 [3], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X3 [4] } = 0;
  assign { FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C3 [0], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C3 [1], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C3 [2], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C3 [3], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C3 [4] } = 0;
  logic [5:0] FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C4 ;
  logic [5:0] FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R4 ;
  logic [5:0] FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X4 ;
  assign FpFractionToFloat_16U_6U_10U_if_else_if_acc_itm_5_1_T = FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_T [5] ;
  assign FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C4 [5] = FpFractionToFloat_16U_6U_10U_if_else_if_acc_itm_5_1_C ;
  assign FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R4 [5] = FpFractionToFloat_16U_6U_10U_if_else_if_acc_itm_5_1_R ;
  assign FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X4 [5] = FpFractionToFloat_16U_6U_10U_if_else_if_acc_itm_5_1_X ;
  assign FpFractionToFloat_16U_6U_10U_if_else_if_acc_itm_5_1_S = FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_S ;
  assign chn_a_rsci_oswt_unreg = or_tmp_7;
  logic [0:0] or_tmp_7_C2 ;
  logic [0:0] or_tmp_7_R2 ;
  logic [0:0] or_tmp_7_X2 ;
  assign chn_a_rsci_oswt_unreg_T = or_tmp_7_T ;
  assign or_tmp_7_C2 = chn_a_rsci_oswt_unreg_C ;
  assign or_tmp_7_R2 = chn_a_rsci_oswt_unreg_R ;
  assign or_tmp_7_X2 = chn_a_rsci_oswt_unreg_X ;
  assign chn_a_rsci_oswt_unreg_S = or_tmp_7_S ;
  assign chn_o_rsci_oswt_unreg = and_dcpl_2;
  logic [0:0] and_dcpl_2_C2 ;
  logic [0:0] and_dcpl_2_R2 ;
  logic [0:0] and_dcpl_2_X2 ;
  assign chn_o_rsci_oswt_unreg_T = and_dcpl_2_T ;
  assign and_dcpl_2_C2 = chn_o_rsci_oswt_unreg_C ;
  assign and_dcpl_2_R2 = chn_o_rsci_oswt_unreg_R ;
  assign and_dcpl_2_X2 = chn_o_rsci_oswt_unreg_X ;
  assign chn_o_rsci_oswt_unreg_S = and_dcpl_2_S ;
  assign nl_FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl[4:0] = FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl;
  logic [4:0] FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_C1 ;
  logic [4:0] FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_R1 ;
  logic [4:0] FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_X1 ;
  assign nl_FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_T [4:0] = FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_T ;
  assign FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_C1 = nl_FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_C [4:0] ;
  assign FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_R1 = nl_FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_R [4:0] ;
  assign FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_X1 = nl_FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_X [4:0] ;
  assign nl_FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_S = FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_S ;
  assign nl_FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl[4:0] = FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl;
  assign { FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R3 [0], FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R3 [1], FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R3 [2], FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R3 [3] } = 0;
  assign { FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X3 [0], FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X3 [1], FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X3 [2], FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X3 [3] } = 0;
  assign { FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C3 [0], FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C3 [1], FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C3 [2], FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C3 [3] } = 0;
  logic [4:0] FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C4 ;
  logic [4:0] FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R4 ;
  logic [4:0] FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X4 ;
  assign nl_FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_T [4:0] = FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_T ;
  assign FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C4 = nl_FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C [4:0] ;
  assign FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R4 = nl_FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R [4:0] ;
  assign FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X4 = nl_FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X [4:0] ;
  assign nl_FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_S = FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_S ;
  assign nl_FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl[5:0] = FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl;
  assign { FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R4 [0], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R4 [1], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R4 [2], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R4 [3], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R4 [4] } = 0;
  assign { FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X4 [0], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X4 [1], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X4 [2], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X4 [3], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X4 [4] } = 0;
  assign { FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C4 [0], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C4 [1], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C4 [2], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C4 [3], FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C4 [4] } = 0;
  logic [5:0] FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C5 ;
  logic [5:0] FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R5 ;
  logic [5:0] FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X5 ;
  assign nl_FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_T [5:0] = FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_T ;
  assign FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C5 = nl_FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C [5:0] ;
  assign FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R5 = nl_FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R [5:0] ;
  assign FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X5 = nl_FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X [5:0] ;
  assign nl_FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_S = FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_S ;
  assign nl_FpMantRNE_17U_11U_else_ac_int_cctor_sva[10:0] = FpMantRNE_17U_11U_else_ac_int_cctor_sva;
  assign { FpMantRNE_17U_11U_else_ac_int_cctor_sva_R1 [10:10] } = 0;
  assign { FpMantRNE_17U_11U_else_ac_int_cctor_sva_X1 [10:10] } = 0;
  assign { FpMantRNE_17U_11U_else_ac_int_cctor_sva_C1 [10:10] } = 0;
  logic [10:0] FpMantRNE_17U_11U_else_ac_int_cctor_sva_C2 ;
  logic [10:0] FpMantRNE_17U_11U_else_ac_int_cctor_sva_R2 ;
  logic [10:0] FpMantRNE_17U_11U_else_ac_int_cctor_sva_X2 ;
  assign nl_FpMantRNE_17U_11U_else_ac_int_cctor_sva_T [10:0] = FpMantRNE_17U_11U_else_ac_int_cctor_sva_T ;
  assign FpMantRNE_17U_11U_else_ac_int_cctor_sva_C2 = nl_FpMantRNE_17U_11U_else_ac_int_cctor_sva_C [10:0] ;
  assign FpMantRNE_17U_11U_else_ac_int_cctor_sva_R2 = nl_FpMantRNE_17U_11U_else_ac_int_cctor_sva_R [10:0] ;
  assign FpMantRNE_17U_11U_else_ac_int_cctor_sva_X2 = nl_FpMantRNE_17U_11U_else_ac_int_cctor_sva_X [10:0] ;
  assign nl_FpMantRNE_17U_11U_else_ac_int_cctor_sva_S = FpMantRNE_17U_11U_else_ac_int_cctor_sva_S ;
  assign nl_HLS_uint16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d = { chn_o_rsci_d_14_10, chn_o_rsci_d_9_0 };
  assign nl_HLS_uint16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_T = {  chn_o_rsci_d_14_10_T , chn_o_rsci_d_9_0_T  };
  logic [13:0] nl_HLS_uint16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_S ;
  assign nl_HLS_uint16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_S = 0 ;
  logic [4:0] chn_o_rsci_d_14_10_R2 ;
  logic [4:0] chn_o_rsci_d_14_10_X2 ;
  logic [4:0] chn_o_rsci_d_14_10_C2 ;
  assign chn_o_rsci_d_14_10_R2 = nl_HLS_uint16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_R [14:10] ;
  assign chn_o_rsci_d_14_10_X2 = nl_HLS_uint16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_X [14:10] ;
  assign chn_o_rsci_d_14_10_C2 = nl_HLS_uint16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_C [14:10] ;
  logic [9:0] chn_o_rsci_d_9_0_R2 ;
  logic [9:0] chn_o_rsci_d_9_0_X2 ;
  logic [9:0] chn_o_rsci_d_9_0_C2 ;
  assign chn_o_rsci_d_9_0_R2 = nl_HLS_uint16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_R [9:0] ;
  assign chn_o_rsci_d_9_0_X2 = nl_HLS_uint16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_X [9:0] ;
  assign chn_o_rsci_d_9_0_C2 = nl_HLS_uint16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_C [9:0] ;
  assign chn_o_rsci_wen_comp_C = ( chn_o_rsci_wen_comp_C0 );
  assign chn_a_rsci_wen_comp_C = ( chn_a_rsci_wen_comp_C0 );
  assign chn_o_rsci_oswt_C = ( chn_o_rsci_oswt_C0 );
  assign chn_o_rsc_vz_C = ( chn_o_rsc_vz_C0 );
  assign nvdla_core_rstn_C = ( nvdla_core_rstn_C0 ) | ( nvdla_core_rstn_C1 ) | ( nvdla_core_rstn_C2 ) | ( nvdla_core_rstn_C3 );
  assign core_wten_C = ( core_wten_C0 ) | ( core_wten_C1 );
  assign chn_a_rsci_oswt_C = ( chn_a_rsci_oswt_C0 );
  assign chn_a_rsc_z_C = ( chn_a_rsc_z_C0 );
  assign chn_a_rsc_vz_C = ( chn_a_rsc_vz_C0 );
  assign nl_FpFractionToFloat_16U_6U_10U_if_shifted_frac_p1_lshift_rg_s_C = ( nl_FpFractionToFloat_16U_6U_10U_if_shifted_frac_p1_lshift_rg_s_C0 );
  assign chn_a_rsci_iswt0_C = ( chn_a_rsci_iswt0_C0 ) | ( chn_a_rsci_iswt0_C1 );
  assign _035__C = ( _035__C0 );
  assign reg_chn_o_rsci_iswt0_cse_C = ( reg_chn_o_rsci_iswt0_cse_C0 ) | ( reg_chn_o_rsci_iswt0_cse_C1 );
  assign chn_a_rsci_ld_core_psct_C = ( chn_a_rsci_ld_core_psct_C0 ) | ( chn_a_rsci_ld_core_psct_C1 );
  assign _015__C = ( _015__C0 );
  assign chn_o_rsci_d_9_0_C = ( chn_o_rsci_d_9_0_C0 ) | ( chn_o_rsci_d_9_0_C1 ) | ( chn_o_rsci_d_9_0_C2 );
  assign _021__C = ( _021__C0 );
  assign _018__C = ( _018__C0 );
  assign chn_o_rsci_d_14_10_C = ( chn_o_rsci_d_14_10_C0 ) | ( chn_o_rsci_d_14_10_C1 ) | ( chn_o_rsci_d_14_10_C2 );
  assign _040__C = ( _040__C0 );
  assign _022__C = ( _022__C0 );
  assign and_nl_C = ( and_nl_C0 );
  assign _041__C = ( _041__C0 );
  assign _023__C = ( _023__C0 );
  assign _024__C = ( _024__C0 );
  assign nand_8_nl_C = ( nand_8_nl_C0 );
  assign nor_9_nl_C = ( nor_9_nl_C0 );
  assign FpMantRNE_17U_11U_else_and_svs_mx0w0_C = ( FpMantRNE_17U_11U_else_and_svs_mx0w0_C0 ) | ( FpMantRNE_17U_11U_else_and_svs_mx0w0_C1 );
  assign FpMantRNE_17U_11U_else_and_svs_C = ( FpMantRNE_17U_11U_else_and_svs_C0 ) | ( FpMantRNE_17U_11U_else_and_svs_C1 );
  assign FpMantRNE_17U_11U_else_ac_int_cctor_sva_C = ( FpMantRNE_17U_11U_else_ac_int_cctor_sva_C0 ) | ( FpMantRNE_17U_11U_else_ac_int_cctor_sva_C1 ) | ( FpMantRNE_17U_11U_else_ac_int_cctor_sva_C2 );
  assign and_53_nl_C = ( and_53_nl_C0 );
  assign FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_C = ( FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_C0 ) | ( FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_C1 );
  assign FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C = ( FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C0 ) | ( FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C1 ) | ( FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C2 ) | ( FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C3 ) | ( FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C4 );
  assign FpFractionToFloat_16U_6U_10U_nor_1_nl_C = ( FpFractionToFloat_16U_6U_10U_nor_1_nl_C0 );
  assign and_52_nl_C = ( and_52_nl_C0 );
  assign mux_3_nl_C = ( mux_3_nl_C0 );
  assign _006__C = ( _006__C0 );
  assign _002__C = ( _002__C0 );
  assign _003__C = ( _003__C0 );
  assign _005__C = ( _005__C0 );
  assign _004__C = ( _004__C0 );
  assign _007__C = ( _007__C0 );
  assign _001__C = ( _001__C0 );
  assign _052__C = ( _052__C0 );
  assign and_dcpl_22_C = ( and_dcpl_22_C0 ) | ( and_dcpl_22_C1 );
  assign or_tmp_7_C = ( or_tmp_7_C0 ) | ( or_tmp_7_C1 ) | ( or_tmp_7_C2 );
  assign _017__C = ( _017__C0 );
  assign or_dcpl_1_C = ( or_dcpl_1_C0 ) | ( or_dcpl_1_C1 ) | ( or_dcpl_1_C2 );
  assign _030__C = ( _030__C0 );
  assign _047__C = ( _047__C0 );
  assign _046__C = ( _046__C0 );
  assign _045__C = ( _045__C0 );
  assign _044__C = ( _044__C0 );
  assign _027__C = ( _027__C0 );
  assign _000__C = ( _000__C0 );
  assign _053__C = ( _053__C0 );
  assign and_dcpl_7_C = ( and_dcpl_7_C0 ) | ( and_dcpl_7_C1 );
  assign _008__C = ( _008__C0 );
  assign _050__C = ( _050__C0 );
  assign mux_tmp_C = ( mux_tmp_C0 );
  assign _049__C = ( _049__C0 );
  assign _016__C = ( _016__C0 );
  assign _014__C = ( _014__C0 );
  assign _013__C = ( _013__C0 );
  assign _012__C = ( _012__C0 );
  assign _010__C = ( _010__C0 );
  assign _009__C = ( _009__C0 );
  assign _043__C = ( _043__C0 );
  assign chn_a_rsci_d_mxwt_C = ( chn_a_rsci_d_mxwt_C0 ) | ( chn_a_rsci_d_mxwt_C1 ) | ( chn_a_rsci_d_mxwt_C2 ) | ( chn_a_rsci_d_mxwt_C3 );
  assign not_41_nl_C = ( not_41_nl_C0 ) | ( not_41_nl_C1 );
  assign _042__C = ( _042__C0 );
  assign _051__C = ( _051__C0 );
  assign _039__C = ( _039__C0 );
  assign fangyuan4_C = ( fangyuan4_C0 );
  assign _020__C = ( _020__C0 );
  assign _011__C = ( _011__C0 ) | ( _011__C1 ) | ( _011__C2 ) | ( _011__C3 ) | ( _011__C4 ) | ( _011__C5 ) | ( _011__C6 ) | ( _011__C7 ) | ( _011__C8 ) | ( _011__C9 ) | ( _011__C10 );
  assign fangyuan3_C = ( fangyuan3_C0 );
  assign _019__C = ( _019__C0 );
  assign fangyuan2_C = ( fangyuan2_C0 );
  assign mux_4_nl_C = ( mux_4_nl_C0 );
  assign _038__C = ( _038__C0 ) | ( _038__C1 ) | ( _038__C2 ) | ( _038__C3 ) | ( _038__C4 ) | ( _038__C5 ) | ( _038__C6 ) | ( _038__C7 ) | ( _038__C8 ) | ( _038__C9 ) | ( _038__C10 );
  assign _037__C = ( _037__C0 );
  assign _036__C = ( _036__C0 );
  assign chn_a_rsci_ld_core_psct_mx0c0_C = ( chn_a_rsci_ld_core_psct_mx0c0_C0 ) | ( chn_a_rsci_ld_core_psct_mx0c0_C1 );
  assign core_wen_C = ( core_wen_C0 ) | ( core_wen_C1 ) | ( core_wen_C2 ) | ( core_wen_C3 ) | ( core_wen_C4 ) | ( core_wen_C5 ) | ( core_wen_C6 ) | ( core_wen_C7 ) | ( core_wen_C8 ) | ( core_wen_C9 );
  assign _034__C = ( _034__C0 );
  assign fsm_output_C = ( fsm_output_C0 ) | ( fsm_output_C1 ) | ( fsm_output_C2 ) | ( fsm_output_C3 ) | ( fsm_output_C4 );
  assign and_4_mdf_C = ( and_4_mdf_C0 ) | ( and_4_mdf_C1 ) | ( and_4_mdf_C2 );
  assign _033__C = ( _033__C0 );
  assign and_dcpl_2_C = ( and_dcpl_2_C0 ) | ( and_dcpl_2_C1 ) | ( and_dcpl_2_C2 );
  assign _032__C = ( _032__C0 );
  assign _031__C = ( _031__C0 );
  assign reg_chn_o_rsci_ld_core_psct_cse_C = ( reg_chn_o_rsci_ld_core_psct_cse_C0 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C1 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C2 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C3 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C4 );
  assign chn_o_rsci_bawt_C = ( chn_o_rsci_bawt_C0 ) | ( chn_o_rsci_bawt_C1 ) | ( chn_o_rsci_bawt_C2 );
  assign or_cse_C = ( or_cse_C0 );
  assign chn_a_rsci_bawt_C = ( chn_a_rsci_bawt_C0 ) | ( chn_a_rsci_bawt_C1 ) | ( chn_a_rsci_bawt_C2 ) | ( chn_a_rsci_bawt_C3 );
  assign FpFractionToFloat_16U_6U_10U_if_else_mux_1_nl_C = ( FpFractionToFloat_16U_6U_10U_if_else_mux_1_nl_C0 );
  assign _048__C = ( _048__C0 );
  assign _026__C = ( _026__C0 );
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_C = ( FpFractionToFloat_16U_6U_10U_unequal_tmp_C0 ) | ( FpFractionToFloat_16U_6U_10U_unequal_tmp_C1 ) | ( FpFractionToFloat_16U_6U_10U_unequal_tmp_C2 ) | ( FpFractionToFloat_16U_6U_10U_unequal_tmp_C3 ) | ( FpFractionToFloat_16U_6U_10U_unequal_tmp_C4 ) | ( FpFractionToFloat_16U_6U_10U_unequal_tmp_C5 ) | ( FpFractionToFloat_16U_6U_10U_unequal_tmp_C6 ) | ( FpFractionToFloat_16U_6U_10U_unequal_tmp_C7 ) | ( FpFractionToFloat_16U_6U_10U_unequal_tmp_C8 ) | ( FpFractionToFloat_16U_6U_10U_unequal_tmp_C9 ) | ( FpFractionToFloat_16U_6U_10U_unequal_tmp_C10 ) | ( FpFractionToFloat_16U_6U_10U_unequal_tmp_C11 );
  assign _029__C = ( _029__C0 );
  assign _028__C = ( _028__C0 );
  assign FpMantRNE_17U_11U_else_and_svs_mx1_C = ( FpMantRNE_17U_11U_else_and_svs_mx1_C0 ) | ( FpMantRNE_17U_11U_else_and_svs_mx1_C1 ) | ( FpMantRNE_17U_11U_else_and_svs_mx1_C2 ) | ( FpMantRNE_17U_11U_else_and_svs_mx1_C3 ) | ( FpMantRNE_17U_11U_else_and_svs_mx1_C4 ) | ( FpMantRNE_17U_11U_else_and_svs_mx1_C5 );
  assign FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C = ( FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C0 ) | ( FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C1 ) | ( FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C2 ) | ( FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C3 ) | ( FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C4 ) | ( FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C5 );
  assign _025__C = ( _025__C0 );
  assign FpMantRNE_17U_11U_else_carry_sva_C = ( FpMantRNE_17U_11U_else_carry_sva_C0 ) | ( FpMantRNE_17U_11U_else_carry_sva_C1 );
  assign FpMantRNE_17U_11U_i_data_sva_C = ( FpMantRNE_17U_11U_i_data_sva_C0 ) | ( FpMantRNE_17U_11U_i_data_sva_C1 ) | ( FpMantRNE_17U_11U_i_data_sva_C2 );
  assign fangyuan1_C = ( fangyuan1_C0 );
  assign fangyuan0_C = ( fangyuan0_C0 );
  assign libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_C = ( libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_C0 ) | ( libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_C1 ) | ( libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_C2 ) | ( libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_C3 ) | ( libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_C4 );
  assign chn_o_rsci_oswt_unreg_C = ( chn_o_rsci_oswt_unreg_C0 );
  assign chn_o_rsc_z_C = ( chn_o_rsc_z_C0 );
  assign chn_o_rsc_lz_C = ( chn_o_rsc_lz_C0 );
  assign chn_a_rsci_oswt_unreg_C = ( chn_a_rsci_oswt_unreg_C0 );
  assign chn_a_rsc_lz_C = ( chn_a_rsc_lz_C0 );
  assign chn_o_rsci_wen_comp_X = ( chn_o_rsci_wen_comp_X0 );
  assign chn_a_rsci_wen_comp_X = ( chn_a_rsci_wen_comp_X0 );
  assign chn_o_rsci_oswt_X = ( chn_o_rsci_oswt_X0 );
  assign chn_o_rsc_vz_X = ( chn_o_rsc_vz_X0 );
  assign nvdla_core_rstn_X = ( nvdla_core_rstn_X0 ) | ( nvdla_core_rstn_X1 ) | ( nvdla_core_rstn_X2 ) | ( nvdla_core_rstn_X3 );
  assign core_wten_X = ( core_wten_X0 ) | ( core_wten_X1 );
  assign chn_a_rsci_oswt_X = ( chn_a_rsci_oswt_X0 );
  assign chn_a_rsc_z_X = ( chn_a_rsc_z_X0 );
  assign chn_a_rsc_vz_X = ( chn_a_rsc_vz_X0 );
  assign nl_FpFractionToFloat_16U_6U_10U_if_shifted_frac_p1_lshift_rg_s_X = ( nl_FpFractionToFloat_16U_6U_10U_if_shifted_frac_p1_lshift_rg_s_X0 );
  assign chn_a_rsci_iswt0_X = ( chn_a_rsci_iswt0_X0 ) | ( chn_a_rsci_iswt0_X1 );
  assign _035__X = ( _035__X0 );
  assign reg_chn_o_rsci_iswt0_cse_X = ( reg_chn_o_rsci_iswt0_cse_X0 ) | ( reg_chn_o_rsci_iswt0_cse_X1 );
  assign chn_a_rsci_ld_core_psct_X = ( chn_a_rsci_ld_core_psct_X0 ) | ( chn_a_rsci_ld_core_psct_X1 );
  assign _015__X = ( _015__X0 );
  assign chn_o_rsci_d_9_0_X = ( chn_o_rsci_d_9_0_X0 ) | ( chn_o_rsci_d_9_0_X1 ) | ( chn_o_rsci_d_9_0_X2 );
  assign _021__X = ( _021__X0 );
  assign _018__X = ( _018__X0 );
  assign chn_o_rsci_d_14_10_X = ( chn_o_rsci_d_14_10_X0 ) | ( chn_o_rsci_d_14_10_X1 ) | ( chn_o_rsci_d_14_10_X2 );
  assign _040__X = ( _040__X0 );
  assign _022__X = ( _022__X0 );
  assign and_nl_X = ( and_nl_X0 );
  assign _041__X = ( _041__X0 );
  assign _023__X = ( _023__X0 );
  assign _024__X = ( _024__X0 );
  assign nand_8_nl_X = ( nand_8_nl_X0 );
  assign nor_9_nl_X = ( nor_9_nl_X0 );
  assign FpMantRNE_17U_11U_else_and_svs_mx0w0_X = ( FpMantRNE_17U_11U_else_and_svs_mx0w0_X0 ) | ( FpMantRNE_17U_11U_else_and_svs_mx0w0_X1 );
  assign FpMantRNE_17U_11U_else_and_svs_X = ( FpMantRNE_17U_11U_else_and_svs_X0 ) | ( FpMantRNE_17U_11U_else_and_svs_X1 );
  assign FpMantRNE_17U_11U_else_ac_int_cctor_sva_X = ( FpMantRNE_17U_11U_else_ac_int_cctor_sva_X0 ) | ( FpMantRNE_17U_11U_else_ac_int_cctor_sva_X1 ) | ( FpMantRNE_17U_11U_else_ac_int_cctor_sva_X2 );
  assign and_53_nl_X = ( and_53_nl_X0 );
  assign FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_X = ( FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_X0 ) | ( FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_X1 );
  assign FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X = ( FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X0 ) | ( FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X1 ) | ( FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X2 ) | ( FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X3 ) | ( FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X4 );
  assign FpFractionToFloat_16U_6U_10U_nor_1_nl_X = ( FpFractionToFloat_16U_6U_10U_nor_1_nl_X0 );
  assign and_52_nl_X = ( and_52_nl_X0 );
  assign mux_3_nl_X = ( mux_3_nl_X0 );
  assign _006__X = ( _006__X0 );
  assign _002__X = ( _002__X0 );
  assign _003__X = ( _003__X0 );
  assign _005__X = ( _005__X0 );
  assign _004__X = ( _004__X0 );
  assign _007__X = ( _007__X0 );
  assign _001__X = ( _001__X0 );
  assign _052__X = ( _052__X0 );
  assign and_dcpl_22_X = ( and_dcpl_22_X0 ) | ( and_dcpl_22_X1 );
  assign or_tmp_7_X = ( or_tmp_7_X0 ) | ( or_tmp_7_X1 ) | ( or_tmp_7_X2 );
  assign _017__X = ( _017__X0 );
  assign or_dcpl_1_X = ( or_dcpl_1_X0 ) | ( or_dcpl_1_X1 ) | ( or_dcpl_1_X2 );
  assign _030__X = ( _030__X0 );
  assign _047__X = ( _047__X0 );
  assign _046__X = ( _046__X0 );
  assign _045__X = ( _045__X0 );
  assign _044__X = ( _044__X0 );
  assign _027__X = ( _027__X0 );
  assign _000__X = ( _000__X0 );
  assign _053__X = ( _053__X0 );
  assign and_dcpl_7_X = ( and_dcpl_7_X0 ) | ( and_dcpl_7_X1 );
  assign _008__X = ( _008__X0 );
  assign _050__X = ( _050__X0 );
  assign mux_tmp_X = ( mux_tmp_X0 );
  assign _049__X = ( _049__X0 );
  assign _016__X = ( _016__X0 );
  assign _014__X = ( _014__X0 );
  assign _013__X = ( _013__X0 );
  assign _012__X = ( _012__X0 );
  assign _010__X = ( _010__X0 );
  assign _009__X = ( _009__X0 );
  assign _043__X = ( _043__X0 );
  assign chn_a_rsci_d_mxwt_X = ( chn_a_rsci_d_mxwt_X0 ) | ( chn_a_rsci_d_mxwt_X1 ) | ( chn_a_rsci_d_mxwt_X2 ) | ( chn_a_rsci_d_mxwt_X3 );
  assign not_41_nl_X = ( not_41_nl_X0 ) | ( not_41_nl_X1 );
  assign _042__X = ( _042__X0 );
  assign _051__X = ( _051__X0 );
  assign _039__X = ( _039__X0 );
  assign fangyuan4_X = ( fangyuan4_X0 );
  assign _020__X = ( _020__X0 );
  assign _011__X = ( _011__X0 ) | ( _011__X1 ) | ( _011__X2 ) | ( _011__X3 ) | ( _011__X4 ) | ( _011__X5 ) | ( _011__X6 ) | ( _011__X7 ) | ( _011__X8 ) | ( _011__X9 ) | ( _011__X10 );
  assign fangyuan3_X = ( fangyuan3_X0 );
  assign _019__X = ( _019__X0 );
  assign fangyuan2_X = ( fangyuan2_X0 );
  assign mux_4_nl_X = ( mux_4_nl_X0 );
  assign _038__X = ( _038__X0 ) | ( _038__X1 ) | ( _038__X2 ) | ( _038__X3 ) | ( _038__X4 ) | ( _038__X5 ) | ( _038__X6 ) | ( _038__X7 ) | ( _038__X8 ) | ( _038__X9 ) | ( _038__X10 );
  assign _037__X = ( _037__X0 );
  assign _036__X = ( _036__X0 );
  assign chn_a_rsci_ld_core_psct_mx0c0_X = ( chn_a_rsci_ld_core_psct_mx0c0_X0 ) | ( chn_a_rsci_ld_core_psct_mx0c0_X1 );
  assign core_wen_X = ( core_wen_X0 ) | ( core_wen_X1 ) | ( core_wen_X2 ) | ( core_wen_X3 ) | ( core_wen_X4 ) | ( core_wen_X5 ) | ( core_wen_X6 ) | ( core_wen_X7 ) | ( core_wen_X8 ) | ( core_wen_X9 );
  assign _034__X = ( _034__X0 );
  assign fsm_output_X = ( fsm_output_X0 ) | ( fsm_output_X1 ) | ( fsm_output_X2 ) | ( fsm_output_X3 ) | ( fsm_output_X4 );
  assign and_4_mdf_X = ( and_4_mdf_X0 ) | ( and_4_mdf_X1 ) | ( and_4_mdf_X2 );
  assign _033__X = ( _033__X0 );
  assign and_dcpl_2_X = ( and_dcpl_2_X0 ) | ( and_dcpl_2_X1 ) | ( and_dcpl_2_X2 );
  assign _032__X = ( _032__X0 );
  assign _031__X = ( _031__X0 );
  assign reg_chn_o_rsci_ld_core_psct_cse_X = ( reg_chn_o_rsci_ld_core_psct_cse_X0 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X1 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X2 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X3 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X4 );
  assign chn_o_rsci_bawt_X = ( chn_o_rsci_bawt_X0 ) | ( chn_o_rsci_bawt_X1 ) | ( chn_o_rsci_bawt_X2 );
  assign or_cse_X = ( or_cse_X0 );
  assign chn_a_rsci_bawt_X = ( chn_a_rsci_bawt_X0 ) | ( chn_a_rsci_bawt_X1 ) | ( chn_a_rsci_bawt_X2 ) | ( chn_a_rsci_bawt_X3 );
  assign FpFractionToFloat_16U_6U_10U_if_else_mux_1_nl_X = ( FpFractionToFloat_16U_6U_10U_if_else_mux_1_nl_X0 );
  assign _048__X = ( _048__X0 );
  assign _026__X = ( _026__X0 );
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_X = ( FpFractionToFloat_16U_6U_10U_unequal_tmp_X0 ) | ( FpFractionToFloat_16U_6U_10U_unequal_tmp_X1 ) | ( FpFractionToFloat_16U_6U_10U_unequal_tmp_X2 ) | ( FpFractionToFloat_16U_6U_10U_unequal_tmp_X3 ) | ( FpFractionToFloat_16U_6U_10U_unequal_tmp_X4 ) | ( FpFractionToFloat_16U_6U_10U_unequal_tmp_X5 ) | ( FpFractionToFloat_16U_6U_10U_unequal_tmp_X6 ) | ( FpFractionToFloat_16U_6U_10U_unequal_tmp_X7 ) | ( FpFractionToFloat_16U_6U_10U_unequal_tmp_X8 ) | ( FpFractionToFloat_16U_6U_10U_unequal_tmp_X9 ) | ( FpFractionToFloat_16U_6U_10U_unequal_tmp_X10 ) | ( FpFractionToFloat_16U_6U_10U_unequal_tmp_X11 );
  assign _029__X = ( _029__X0 );
  assign _028__X = ( _028__X0 );
  assign FpMantRNE_17U_11U_else_and_svs_mx1_X = ( FpMantRNE_17U_11U_else_and_svs_mx1_X0 ) | ( FpMantRNE_17U_11U_else_and_svs_mx1_X1 ) | ( FpMantRNE_17U_11U_else_and_svs_mx1_X2 ) | ( FpMantRNE_17U_11U_else_and_svs_mx1_X3 ) | ( FpMantRNE_17U_11U_else_and_svs_mx1_X4 ) | ( FpMantRNE_17U_11U_else_and_svs_mx1_X5 );
  assign FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X = ( FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X0 ) | ( FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X1 ) | ( FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X2 ) | ( FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X3 ) | ( FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X4 ) | ( FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X5 );
  assign _025__X = ( _025__X0 );
  assign FpMantRNE_17U_11U_else_carry_sva_X = ( FpMantRNE_17U_11U_else_carry_sva_X0 ) | ( FpMantRNE_17U_11U_else_carry_sva_X1 );
  assign FpMantRNE_17U_11U_i_data_sva_X = ( FpMantRNE_17U_11U_i_data_sva_X0 ) | ( FpMantRNE_17U_11U_i_data_sva_X1 ) | ( FpMantRNE_17U_11U_i_data_sva_X2 );
  assign fangyuan1_X = ( fangyuan1_X0 );
  assign fangyuan0_X = ( fangyuan0_X0 );
  assign libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_X = ( libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_X0 ) | ( libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_X1 ) | ( libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_X2 ) | ( libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_X3 ) | ( libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_X4 );
  assign chn_o_rsci_oswt_unreg_X = ( chn_o_rsci_oswt_unreg_X0 );
  assign chn_o_rsc_z_X = ( chn_o_rsc_z_X0 );
  assign chn_o_rsc_lz_X = ( chn_o_rsc_lz_X0 );
  assign chn_a_rsci_oswt_unreg_X = ( chn_a_rsci_oswt_unreg_X0 );
  assign chn_a_rsc_lz_X = ( chn_a_rsc_lz_X0 );
  assign chn_o_rsci_wen_comp_R = ( chn_o_rsci_wen_comp_X0 & chn_o_rsci_wen_comp_R0 );
  assign chn_a_rsci_wen_comp_R = ( chn_a_rsci_wen_comp_X0 & chn_a_rsci_wen_comp_R0 );
  assign chn_o_rsci_oswt_R = ( chn_o_rsci_oswt_X0 & chn_o_rsci_oswt_R0 );
  assign chn_o_rsc_vz_R = ( chn_o_rsc_vz_X0 & chn_o_rsc_vz_R0 );
  assign nvdla_core_rstn_R = ( nvdla_core_rstn_X0 & nvdla_core_rstn_R0 ) | ( nvdla_core_rstn_X1 & nvdla_core_rstn_R1 ) | ( nvdla_core_rstn_X2 & nvdla_core_rstn_R2 ) | ( nvdla_core_rstn_X3 & nvdla_core_rstn_R3 );
  assign core_wten_R = ( core_wten_X0 & core_wten_R0 ) | ( core_wten_X1 & core_wten_R1 );
  assign chn_a_rsci_oswt_R = ( chn_a_rsci_oswt_X0 & chn_a_rsci_oswt_R0 );
  assign chn_a_rsc_z_R = ( chn_a_rsc_z_X0 & chn_a_rsc_z_R0 );
  assign chn_a_rsc_vz_R = ( chn_a_rsc_vz_X0 & chn_a_rsc_vz_R0 );
  assign nl_FpFractionToFloat_16U_6U_10U_if_shifted_frac_p1_lshift_rg_s_R = ( nl_FpFractionToFloat_16U_6U_10U_if_shifted_frac_p1_lshift_rg_s_X0 & nl_FpFractionToFloat_16U_6U_10U_if_shifted_frac_p1_lshift_rg_s_R0 );
  assign chn_a_rsci_iswt0_R = ( chn_a_rsci_iswt0_X0 & chn_a_rsci_iswt0_R0 ) | ( chn_a_rsci_iswt0_X1 & chn_a_rsci_iswt0_R1 );
  assign _035__R = ( _035__X0 & _035__R0 );
  assign reg_chn_o_rsci_iswt0_cse_R = ( reg_chn_o_rsci_iswt0_cse_X0 & reg_chn_o_rsci_iswt0_cse_R0 ) | ( reg_chn_o_rsci_iswt0_cse_X1 & reg_chn_o_rsci_iswt0_cse_R1 );
  assign chn_a_rsci_ld_core_psct_R = ( chn_a_rsci_ld_core_psct_X0 & chn_a_rsci_ld_core_psct_R0 ) | ( chn_a_rsci_ld_core_psct_X1 & chn_a_rsci_ld_core_psct_R1 );
  assign _015__R = ( _015__X0 & _015__R0 );
  assign chn_o_rsci_d_9_0_R = ( chn_o_rsci_d_9_0_X0 & chn_o_rsci_d_9_0_R0 ) | ( chn_o_rsci_d_9_0_X1 & chn_o_rsci_d_9_0_R1 ) | ( chn_o_rsci_d_9_0_X2 & chn_o_rsci_d_9_0_R2 );
  assign _021__R = ( _021__X0 & _021__R0 );
  assign _018__R = ( _018__X0 & _018__R0 );
  assign chn_o_rsci_d_14_10_R = ( chn_o_rsci_d_14_10_X0 & chn_o_rsci_d_14_10_R0 ) | ( chn_o_rsci_d_14_10_X1 & chn_o_rsci_d_14_10_R1 ) | ( chn_o_rsci_d_14_10_X2 & chn_o_rsci_d_14_10_R2 );
  assign _040__R = ( _040__X0 & _040__R0 );
  assign _022__R = ( _022__X0 & _022__R0 );
  assign and_nl_R = ( and_nl_X0 & and_nl_R0 );
  assign _041__R = ( _041__X0 & _041__R0 );
  assign _023__R = ( _023__X0 & _023__R0 );
  assign _024__R = ( _024__X0 & _024__R0 );
  assign nand_8_nl_R = ( nand_8_nl_X0 & nand_8_nl_R0 );
  assign nor_9_nl_R = ( nor_9_nl_X0 & nor_9_nl_R0 );
  assign FpMantRNE_17U_11U_else_and_svs_mx0w0_R = ( FpMantRNE_17U_11U_else_and_svs_mx0w0_X0 & FpMantRNE_17U_11U_else_and_svs_mx0w0_R0 ) | ( FpMantRNE_17U_11U_else_and_svs_mx0w0_X1 & FpMantRNE_17U_11U_else_and_svs_mx0w0_R1 );
  assign FpMantRNE_17U_11U_else_and_svs_R = ( FpMantRNE_17U_11U_else_and_svs_X0 & FpMantRNE_17U_11U_else_and_svs_R0 ) | ( FpMantRNE_17U_11U_else_and_svs_X1 & FpMantRNE_17U_11U_else_and_svs_R1 );
  assign FpMantRNE_17U_11U_else_ac_int_cctor_sva_R = ( FpMantRNE_17U_11U_else_ac_int_cctor_sva_X0 & FpMantRNE_17U_11U_else_ac_int_cctor_sva_R0 ) | ( FpMantRNE_17U_11U_else_ac_int_cctor_sva_X1 & FpMantRNE_17U_11U_else_ac_int_cctor_sva_R1 ) | ( FpMantRNE_17U_11U_else_ac_int_cctor_sva_X2 & FpMantRNE_17U_11U_else_ac_int_cctor_sva_R2 );
  assign and_53_nl_R = ( and_53_nl_X0 & and_53_nl_R0 );
  assign FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_R = ( FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_X0 & FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_R0 ) | ( FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_X1 & FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_R1 );
  assign FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R = ( FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X0 & FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R0 ) | ( FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X1 & FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R1 ) | ( FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X2 & FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R2 ) | ( FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X3 & FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R3 ) | ( FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X4 & FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R4 );
  assign FpFractionToFloat_16U_6U_10U_nor_1_nl_R = ( FpFractionToFloat_16U_6U_10U_nor_1_nl_X0 & FpFractionToFloat_16U_6U_10U_nor_1_nl_R0 );
  assign and_52_nl_R = ( and_52_nl_X0 & and_52_nl_R0 );
  assign mux_3_nl_R = ( mux_3_nl_X0 & mux_3_nl_R0 );
  assign _006__R = ( _006__X0 & _006__R0 );
  assign _002__R = ( _002__X0 & _002__R0 );
  assign _003__R = ( _003__X0 & _003__R0 );
  assign _005__R = ( _005__X0 & _005__R0 );
  assign _004__R = ( _004__X0 & _004__R0 );
  assign _007__R = ( _007__X0 & _007__R0 );
  assign _001__R = ( _001__X0 & _001__R0 );
  assign _052__R = ( _052__X0 & _052__R0 );
  assign and_dcpl_22_R = ( and_dcpl_22_X0 & and_dcpl_22_R0 ) | ( and_dcpl_22_X1 & and_dcpl_22_R1 );
  assign or_tmp_7_R = ( or_tmp_7_X0 & or_tmp_7_R0 ) | ( or_tmp_7_X1 & or_tmp_7_R1 ) | ( or_tmp_7_X2 & or_tmp_7_R2 );
  assign _017__R = ( _017__X0 & _017__R0 );
  assign or_dcpl_1_R = ( or_dcpl_1_X0 & or_dcpl_1_R0 ) | ( or_dcpl_1_X1 & or_dcpl_1_R1 ) | ( or_dcpl_1_X2 & or_dcpl_1_R2 );
  assign _030__R = ( _030__X0 & _030__R0 );
  assign _047__R = ( _047__X0 & _047__R0 );
  assign _046__R = ( _046__X0 & _046__R0 );
  assign _045__R = ( _045__X0 & _045__R0 );
  assign _044__R = ( _044__X0 & _044__R0 );
  assign _027__R = ( _027__X0 & _027__R0 );
  assign _000__R = ( _000__X0 & _000__R0 );
  assign _053__R = ( _053__X0 & _053__R0 );
  assign and_dcpl_7_R = ( and_dcpl_7_X0 & and_dcpl_7_R0 ) | ( and_dcpl_7_X1 & and_dcpl_7_R1 );
  assign _008__R = ( _008__X0 & _008__R0 );
  assign _050__R = ( _050__X0 & _050__R0 );
  assign mux_tmp_R = ( mux_tmp_X0 & mux_tmp_R0 );
  assign _049__R = ( _049__X0 & _049__R0 );
  assign _016__R = ( _016__X0 & _016__R0 );
  assign _014__R = ( _014__X0 & _014__R0 );
  assign _013__R = ( _013__X0 & _013__R0 );
  assign _012__R = ( _012__X0 & _012__R0 );
  assign _010__R = ( _010__X0 & _010__R0 );
  assign _009__R = ( _009__X0 & _009__R0 );
  assign _043__R = ( _043__X0 & _043__R0 );
  assign chn_a_rsci_d_mxwt_R = ( chn_a_rsci_d_mxwt_X0 & chn_a_rsci_d_mxwt_R0 ) | ( chn_a_rsci_d_mxwt_X1 & chn_a_rsci_d_mxwt_R1 ) | ( chn_a_rsci_d_mxwt_X2 & chn_a_rsci_d_mxwt_R2 ) | ( chn_a_rsci_d_mxwt_X3 & chn_a_rsci_d_mxwt_R3 );
  assign not_41_nl_R = ( not_41_nl_X0 & not_41_nl_R0 ) | ( not_41_nl_X1 & not_41_nl_R1 );
  assign _042__R = ( _042__X0 & _042__R0 );
  assign _051__R = ( _051__X0 & _051__R0 );
  assign _039__R = ( _039__X0 & _039__R0 );
  assign fangyuan4_R = ( fangyuan4_X0 & fangyuan4_R0 );
  assign _020__R = ( _020__X0 & _020__R0 );
  assign _011__R = ( _011__X0 & _011__R0 ) | ( _011__X1 & _011__R1 ) | ( _011__X2 & _011__R2 ) | ( _011__X3 & _011__R3 ) | ( _011__X4 & _011__R4 ) | ( _011__X5 & _011__R5 ) | ( _011__X6 & _011__R6 ) | ( _011__X7 & _011__R7 ) | ( _011__X8 & _011__R8 ) | ( _011__X9 & _011__R9 ) | ( _011__X10 & _011__R10 );
  assign fangyuan3_R = ( fangyuan3_X0 & fangyuan3_R0 );
  assign _019__R = ( _019__X0 & _019__R0 );
  assign fangyuan2_R = ( fangyuan2_X0 & fangyuan2_R0 );
  assign mux_4_nl_R = ( mux_4_nl_X0 & mux_4_nl_R0 );
  assign _038__R = ( _038__X0 & _038__R0 ) | ( _038__X1 & _038__R1 ) | ( _038__X2 & _038__R2 ) | ( _038__X3 & _038__R3 ) | ( _038__X4 & _038__R4 ) | ( _038__X5 & _038__R5 ) | ( _038__X6 & _038__R6 ) | ( _038__X7 & _038__R7 ) | ( _038__X8 & _038__R8 ) | ( _038__X9 & _038__R9 ) | ( _038__X10 & _038__R10 );
  assign _037__R = ( _037__X0 & _037__R0 );
  assign _036__R = ( _036__X0 & _036__R0 );
  assign chn_a_rsci_ld_core_psct_mx0c0_R = ( chn_a_rsci_ld_core_psct_mx0c0_X0 & chn_a_rsci_ld_core_psct_mx0c0_R0 ) | ( chn_a_rsci_ld_core_psct_mx0c0_X1 & chn_a_rsci_ld_core_psct_mx0c0_R1 );
  assign core_wen_R = ( core_wen_X0 & core_wen_R0 ) | ( core_wen_X1 & core_wen_R1 ) | ( core_wen_X2 & core_wen_R2 ) | ( core_wen_X3 & core_wen_R3 ) | ( core_wen_X4 & core_wen_R4 ) | ( core_wen_X5 & core_wen_R5 ) | ( core_wen_X6 & core_wen_R6 ) | ( core_wen_X7 & core_wen_R7 ) | ( core_wen_X8 & core_wen_R8 ) | ( core_wen_X9 & core_wen_R9 );
  assign _034__R = ( _034__X0 & _034__R0 );
  assign fsm_output_R = ( fsm_output_X0 & fsm_output_R0 ) | ( fsm_output_X1 & fsm_output_R1 ) | ( fsm_output_X2 & fsm_output_R2 ) | ( fsm_output_X3 & fsm_output_R3 ) | ( fsm_output_X4 & fsm_output_R4 );
  assign and_4_mdf_R = ( and_4_mdf_X0 & and_4_mdf_R0 ) | ( and_4_mdf_X1 & and_4_mdf_R1 ) | ( and_4_mdf_X2 & and_4_mdf_R2 );
  assign _033__R = ( _033__X0 & _033__R0 );
  assign and_dcpl_2_R = ( and_dcpl_2_X0 & and_dcpl_2_R0 ) | ( and_dcpl_2_X1 & and_dcpl_2_R1 ) | ( and_dcpl_2_X2 & and_dcpl_2_R2 );
  assign _032__R = ( _032__X0 & _032__R0 );
  assign _031__R = ( _031__X0 & _031__R0 );
  assign reg_chn_o_rsci_ld_core_psct_cse_R = ( reg_chn_o_rsci_ld_core_psct_cse_X0 & reg_chn_o_rsci_ld_core_psct_cse_R0 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X1 & reg_chn_o_rsci_ld_core_psct_cse_R1 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X2 & reg_chn_o_rsci_ld_core_psct_cse_R2 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X3 & reg_chn_o_rsci_ld_core_psct_cse_R3 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X4 & reg_chn_o_rsci_ld_core_psct_cse_R4 );
  assign chn_o_rsci_bawt_R = ( chn_o_rsci_bawt_X0 & chn_o_rsci_bawt_R0 ) | ( chn_o_rsci_bawt_X1 & chn_o_rsci_bawt_R1 ) | ( chn_o_rsci_bawt_X2 & chn_o_rsci_bawt_R2 );
  assign or_cse_R = ( or_cse_X0 & or_cse_R0 );
  assign chn_a_rsci_bawt_R = ( chn_a_rsci_bawt_X0 & chn_a_rsci_bawt_R0 ) | ( chn_a_rsci_bawt_X1 & chn_a_rsci_bawt_R1 ) | ( chn_a_rsci_bawt_X2 & chn_a_rsci_bawt_R2 ) | ( chn_a_rsci_bawt_X3 & chn_a_rsci_bawt_R3 );
  assign FpFractionToFloat_16U_6U_10U_if_else_mux_1_nl_R = ( FpFractionToFloat_16U_6U_10U_if_else_mux_1_nl_X0 & FpFractionToFloat_16U_6U_10U_if_else_mux_1_nl_R0 );
  assign _048__R = ( _048__X0 & _048__R0 );
  assign _026__R = ( _026__X0 & _026__R0 );
  assign FpFractionToFloat_16U_6U_10U_unequal_tmp_R = ( FpFractionToFloat_16U_6U_10U_unequal_tmp_X0 & FpFractionToFloat_16U_6U_10U_unequal_tmp_R0 ) | ( FpFractionToFloat_16U_6U_10U_unequal_tmp_X1 & FpFractionToFloat_16U_6U_10U_unequal_tmp_R1 ) | ( FpFractionToFloat_16U_6U_10U_unequal_tmp_X2 & FpFractionToFloat_16U_6U_10U_unequal_tmp_R2 ) | ( FpFractionToFloat_16U_6U_10U_unequal_tmp_X3 & FpFractionToFloat_16U_6U_10U_unequal_tmp_R3 ) | ( FpFractionToFloat_16U_6U_10U_unequal_tmp_X4 & FpFractionToFloat_16U_6U_10U_unequal_tmp_R4 ) | ( FpFractionToFloat_16U_6U_10U_unequal_tmp_X5 & FpFractionToFloat_16U_6U_10U_unequal_tmp_R5 ) | ( FpFractionToFloat_16U_6U_10U_unequal_tmp_X6 & FpFractionToFloat_16U_6U_10U_unequal_tmp_R6 ) | ( FpFractionToFloat_16U_6U_10U_unequal_tmp_X7 & FpFractionToFloat_16U_6U_10U_unequal_tmp_R7 ) | ( FpFractionToFloat_16U_6U_10U_unequal_tmp_X8 & FpFractionToFloat_16U_6U_10U_unequal_tmp_R8 ) | ( FpFractionToFloat_16U_6U_10U_unequal_tmp_X9 & FpFractionToFloat_16U_6U_10U_unequal_tmp_R9 ) | ( FpFractionToFloat_16U_6U_10U_unequal_tmp_X10 & FpFractionToFloat_16U_6U_10U_unequal_tmp_R10 ) | ( FpFractionToFloat_16U_6U_10U_unequal_tmp_X11 & FpFractionToFloat_16U_6U_10U_unequal_tmp_R11 );
  assign _029__R = ( _029__X0 & _029__R0 );
  assign _028__R = ( _028__X0 & _028__R0 );
  assign FpMantRNE_17U_11U_else_and_svs_mx1_R = ( FpMantRNE_17U_11U_else_and_svs_mx1_X0 & FpMantRNE_17U_11U_else_and_svs_mx1_R0 ) | ( FpMantRNE_17U_11U_else_and_svs_mx1_X1 & FpMantRNE_17U_11U_else_and_svs_mx1_R1 ) | ( FpMantRNE_17U_11U_else_and_svs_mx1_X2 & FpMantRNE_17U_11U_else_and_svs_mx1_R2 ) | ( FpMantRNE_17U_11U_else_and_svs_mx1_X3 & FpMantRNE_17U_11U_else_and_svs_mx1_R3 ) | ( FpMantRNE_17U_11U_else_and_svs_mx1_X4 & FpMantRNE_17U_11U_else_and_svs_mx1_R4 ) | ( FpMantRNE_17U_11U_else_and_svs_mx1_X5 & FpMantRNE_17U_11U_else_and_svs_mx1_R5 );
  assign FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R = ( FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X0 & FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R0 ) | ( FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X1 & FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R1 ) | ( FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X2 & FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R2 ) | ( FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X3 & FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R3 ) | ( FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X4 & FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R4 ) | ( FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X5 & FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R5 );
  assign _025__R = ( _025__X0 & _025__R0 );
  assign FpMantRNE_17U_11U_else_carry_sva_R = ( FpMantRNE_17U_11U_else_carry_sva_X0 & FpMantRNE_17U_11U_else_carry_sva_R0 ) | ( FpMantRNE_17U_11U_else_carry_sva_X1 & FpMantRNE_17U_11U_else_carry_sva_R1 );
  assign FpMantRNE_17U_11U_i_data_sva_R = ( FpMantRNE_17U_11U_i_data_sva_X0 & FpMantRNE_17U_11U_i_data_sva_R0 ) | ( FpMantRNE_17U_11U_i_data_sva_X1 & FpMantRNE_17U_11U_i_data_sva_R1 ) | ( FpMantRNE_17U_11U_i_data_sva_X2 & FpMantRNE_17U_11U_i_data_sva_R2 );
  assign fangyuan1_R = ( fangyuan1_X0 & fangyuan1_R0 );
  assign fangyuan0_R = ( fangyuan0_X0 & fangyuan0_R0 );
  assign libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_R = ( libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_X0 & libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_R0 ) | ( libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_X1 & libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_R1 ) | ( libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_X2 & libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_R2 ) | ( libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_X3 & libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_R3 ) | ( libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_X4 & libraries_leading_sign_16_0_584ce9c19228fa5400845cefe3e6770649bb_1_R4 );
  assign chn_o_rsci_oswt_unreg_R = ( chn_o_rsci_oswt_unreg_X0 & chn_o_rsci_oswt_unreg_R0 );
  assign chn_o_rsc_z_R = ( chn_o_rsc_z_X0 & chn_o_rsc_z_R0 );
  assign chn_o_rsc_lz_R = ( chn_o_rsc_lz_X0 & chn_o_rsc_lz_R0 );
  assign chn_a_rsci_oswt_unreg_R = ( chn_a_rsci_oswt_unreg_X0 & chn_a_rsci_oswt_unreg_R0 );
  assign chn_a_rsc_lz_R = ( chn_a_rsc_lz_X0 & chn_a_rsc_lz_R0 );
 // ground taints for floating regs
 // ground taints for unused wires
  assign { FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_itm_4_1_R , FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_itm_4_1_C , FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_itm_4_1_X , FpFractionToFloat_16U_6U_10U_if_else_if_acc_itm_5_1_R , FpFractionToFloat_16U_6U_10U_if_else_if_acc_itm_5_1_C , FpFractionToFloat_16U_6U_10U_if_else_if_acc_itm_5_1_X , nl_FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_R , nl_FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_C , nl_FpFractionToFloat_16U_6U_10U_if_else_else_else_acc_nl_X , nl_FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_R , nl_FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_C , nl_FpFractionToFloat_16U_6U_10U_if_else_else_if_acc_nl_X , nl_FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_R , nl_FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_C , nl_FpFractionToFloat_16U_6U_10U_if_else_if_acc_nl_X , nl_FpMantRNE_17U_11U_else_ac_int_cctor_sva_R , nl_FpMantRNE_17U_11U_else_ac_int_cctor_sva_C , nl_FpMantRNE_17U_11U_else_ac_int_cctor_sva_X , nl_HLS_uint16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_R , nl_HLS_uint16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_C , nl_HLS_uint16_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_X  } = 0;
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMantRNE_17U_11U_else_and_svs_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMantRNE_17U_11U_else_and_svs_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMantRNE_17U_11U_else_and_svs_PREV_VAL1 <= FpMantRNE_17U_11U_else_and_svs ;
    if( INSTR_IN_ZY ) FpMantRNE_17U_11U_else_and_svs_PREV_VAL2 <= FpMantRNE_17U_11U_else_and_svs_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL1 <= reg_chn_o_rsci_ld_core_psct_cse ;
    if( INSTR_IN_ZY ) reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL2 <= reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_o_rsci_d_14_10_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_o_rsci_d_14_10_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_14_10_PREV_VAL1 <= chn_o_rsci_d_14_10 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_14_10_PREV_VAL2 <= chn_o_rsci_d_14_10_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_o_rsci_d_9_0_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_o_rsci_d_9_0_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_9_0_PREV_VAL1 <= chn_o_rsci_d_9_0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_9_0_PREV_VAL2 <= chn_o_rsci_d_9_0_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_a_rsci_ld_core_psct_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_a_rsci_ld_core_psct_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_a_rsci_ld_core_psct_PREV_VAL1 <= chn_a_rsci_ld_core_psct ;
    if( INSTR_IN_ZY ) chn_a_rsci_ld_core_psct_PREV_VAL2 <= chn_a_rsci_ld_core_psct_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_a_rsci_iswt0_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_a_rsci_iswt0_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_a_rsci_iswt0_PREV_VAL1 <= chn_a_rsci_iswt0 ;
    if( INSTR_IN_ZY ) chn_a_rsci_iswt0_PREV_VAL2 <= chn_a_rsci_iswt0_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) reg_chn_o_rsci_iswt0_cse_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) reg_chn_o_rsci_iswt0_cse_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) reg_chn_o_rsci_iswt0_cse_PREV_VAL1 <= reg_chn_o_rsci_iswt0_cse ;
    if( INSTR_IN_ZY ) reg_chn_o_rsci_iswt0_cse_PREV_VAL2 <= reg_chn_o_rsci_iswt0_cse_PREV_VAL1 ;
  end
 // ground taints for unused wire slices
  assign { fsm_output_R4 [1:1] } = 0;
  assign { fsm_output_X4 [1:1] } = 0;
  assign { fsm_output_C4 [1:1] } = 0;
  assign { _025__R0 [5:5] } = 0;
  assign { _025__X0 [5:5] } = 0;
  assign { _025__C0 [5:5] } = 0;
  assign { FpMantRNE_17U_11U_i_data_sva_R2 [0], FpMantRNE_17U_11U_i_data_sva_R2 [1], FpMantRNE_17U_11U_i_data_sva_R2 [2], FpMantRNE_17U_11U_i_data_sva_R2 [3], FpMantRNE_17U_11U_i_data_sva_R2 [4], FpMantRNE_17U_11U_i_data_sva_R2 [5], FpMantRNE_17U_11U_i_data_sva_R2 [16:7] } = 0;
  assign { FpMantRNE_17U_11U_i_data_sva_X2 [0], FpMantRNE_17U_11U_i_data_sva_X2 [1], FpMantRNE_17U_11U_i_data_sva_X2 [2], FpMantRNE_17U_11U_i_data_sva_X2 [3], FpMantRNE_17U_11U_i_data_sva_X2 [4], FpMantRNE_17U_11U_i_data_sva_X2 [5], FpMantRNE_17U_11U_i_data_sva_X2 [16:7] } = 0;
  assign { FpMantRNE_17U_11U_i_data_sva_C2 [0], FpMantRNE_17U_11U_i_data_sva_C2 [1], FpMantRNE_17U_11U_i_data_sva_C2 [2], FpMantRNE_17U_11U_i_data_sva_C2 [3], FpMantRNE_17U_11U_i_data_sva_C2 [4], FpMantRNE_17U_11U_i_data_sva_C2 [5], FpMantRNE_17U_11U_i_data_sva_C2 [16:7] } = 0;
  assert property( FpMantRNE_17U_11U_else_and_svs_r_flag == 0 || FpMantRNE_17U_11U_else_and_svs_PREV_VAL1 == FpMantRNE_17U_11U_else_and_svs_PREV_VAL2 );
  assert property( chn_a_rsci_iswt0_r_flag == 0 || chn_a_rsci_iswt0_PREV_VAL1 == chn_a_rsci_iswt0_PREV_VAL2 );
  assert property( chn_a_rsci_ld_core_psct_r_flag == 0 || chn_a_rsci_ld_core_psct_PREV_VAL1 == chn_a_rsci_ld_core_psct_PREV_VAL2 );
  assert property( chn_o_rsci_d_14_10_r_flag == 0 || chn_o_rsci_d_14_10_PREV_VAL1 == chn_o_rsci_d_14_10_PREV_VAL2 );
  assert property( chn_o_rsci_d_9_0_r_flag == 0 || chn_o_rsci_d_9_0_PREV_VAL1 == chn_o_rsci_d_9_0_PREV_VAL2 );
  assert property( reg_chn_o_rsci_iswt0_cse_r_flag == 0 || reg_chn_o_rsci_iswt0_cse_PREV_VAL1 == reg_chn_o_rsci_iswt0_cse_PREV_VAL2 );
  assert property( reg_chn_o_rsci_ld_core_psct_cse_r_flag == 0 || reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL1 == reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL2 );
  assign rst_zy = !nvdla_core_rstn ;
endmodule
