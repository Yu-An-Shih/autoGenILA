module HLS_fp32_to_fp17_core ( chn_a_rsc_vz , chn_a_rsc_z , chn_a_rsci_oswt , chn_o_rsc_vz , chn_o_rsci_oswt , nvdla_core_clk , nvdla_core_rstn , INSTR_IN_ZY , chn_a_rsc_lz_R0 , chn_a_rsc_lz_C0 , chn_a_rsc_lz_X0 , chn_a_rsc_vz_T , chn_a_rsc_vz_S , chn_a_rsc_z_T , chn_a_rsc_z_S , chn_a_rsci_oswt_T , chn_a_rsci_oswt_S , chn_a_rsci_oswt_unreg_R0 , chn_a_rsci_oswt_unreg_C0 , chn_a_rsci_oswt_unreg_X0 , chn_o_rsc_lz_R0 , chn_o_rsc_lz_C0 , chn_o_rsc_lz_X0 , chn_o_rsc_vz_T , chn_o_rsc_vz_S , chn_o_rsc_z_R0 , chn_o_rsc_z_C0 , chn_o_rsc_z_X0 , chn_o_rsci_oswt_T , chn_o_rsci_oswt_S , chn_o_rsci_oswt_unreg_R0 , chn_o_rsci_oswt_unreg_C0 , chn_o_rsci_oswt_unreg_X0 , nvdla_core_clk_T , nvdla_core_clk_S , nvdla_core_rstn_T , nvdla_core_rstn_S , chn_a_rsc_lz , chn_a_rsci_oswt_unreg , chn_o_rsc_lz , chn_o_rsc_z , chn_o_rsci_oswt_unreg , chn_a_rsc_lz_T , chn_a_rsc_lz_S , chn_a_rsc_vz_R , chn_a_rsc_vz_X , chn_a_rsc_vz_C , chn_a_rsc_z_R , chn_a_rsc_z_X , chn_a_rsc_z_C , chn_a_rsci_oswt_R , chn_a_rsci_oswt_X , chn_a_rsci_oswt_C , chn_a_rsci_oswt_unreg_T , chn_a_rsci_oswt_unreg_S , chn_o_rsc_lz_T , chn_o_rsc_lz_S , chn_o_rsc_vz_R , chn_o_rsc_vz_X , chn_o_rsc_vz_C , chn_o_rsc_z_T , chn_o_rsc_z_S , chn_o_rsci_oswt_R , chn_o_rsci_oswt_X , chn_o_rsci_oswt_C , chn_o_rsci_oswt_unreg_T , chn_o_rsci_oswt_unreg_S , nvdla_core_clk_R , nvdla_core_clk_X , nvdla_core_clk_C , nvdla_core_rstn_R , nvdla_core_rstn_X , nvdla_core_rstn_C );
  logic rst_zy;
  integer i;
  input INSTR_IN_ZY;
  logic _000_;
  logic _000__T ;
  logic _000__R ;
  logic _000__C ;
  logic _000__X ;
  logic [13:0] _000__S ;
  logic _001_;
  logic _001__T ;
  logic _001__R ;
  logic _001__C ;
  logic _001__X ;
  logic [13:0] _001__S ;
  logic _002_;
  logic _002__T ;
  logic _002__R ;
  logic _002__C ;
  logic _002__X ;
  logic [13:0] _002__S ;
  logic [9:0] _003_;
  logic [9:0] _003__T ;
  logic [9:0] _003__R ;
  logic [9:0] _003__C ;
  logic [9:0] _003__X ;
  logic [13:0] _003__S ;
  logic [9:0] _004_;
  logic [9:0] _004__T ;
  logic [9:0] _004__R ;
  logic [9:0] _004__C ;
  logic [9:0] _004__X ;
  logic [13:0] _004__S ;
  logic _005_;
  logic _005__T ;
  logic _005__R ;
  logic _005__C ;
  logic _005__X ;
  logic [13:0] _005__S ;
  logic [10:0] _006_;
  logic [10:0] _006__T ;
  logic [10:0] _006__R ;
  logic [10:0] _006__C ;
  logic [10:0] _006__X ;
  logic [13:0] _006__S ;
  logic _007_;
  logic _007__T ;
  logic _007__R ;
  logic _007__C ;
  logic _007__X ;
  logic [13:0] _007__S ;
  logic _008_;
  logic _008__T ;
  logic _008__R ;
  logic _008__C ;
  logic _008__X ;
  logic [13:0] _008__S ;
  logic _009_;
  logic _009__T ;
  logic _009__R ;
  logic _009__C ;
  logic _009__X ;
  logic [13:0] _009__S ;
  logic _010_;
  logic _010__T ;
  logic _010__R ;
  logic _010__C ;
  logic _010__X ;
  logic [13:0] _010__S ;
  logic [4:0] _011_;
  logic [4:0] _011__T ;
  logic [4:0] _011__R ;
  logic [4:0] _011__C ;
  logic [4:0] _011__X ;
  logic [13:0] _011__S ;
  logic _012_;
  logic _012__T ;
  logic _012__R ;
  logic _012__C ;
  logic _012__X ;
  logic [13:0] _012__S ;
  logic [28:0] _013_;
  logic [28:0] _013__T ;
  logic [28:0] _013__R ;
  logic [28:0] _013__C ;
  logic [28:0] _013__X ;
  logic [13:0] _013__S ;
  logic _014_;
  logic _014__T ;
  logic _014__R ;
  logic _014__C ;
  logic _014__X ;
  logic [13:0] _014__S ;
  logic _015_;
  logic _015__T ;
  logic _015__R ;
  logic _015__C ;
  logic _015__X ;
  logic [13:0] _015__S ;
  logic [9:0] _016_;
  logic [9:0] _016__T ;
  logic [9:0] _016__R ;
  logic [9:0] _016__C ;
  logic [9:0] _016__X ;
  logic [13:0] _016__S ;
  logic [2:0] _017_;
  logic [2:0] _017__T ;
  logic [2:0] _017__R ;
  logic [2:0] _017__C ;
  logic [2:0] _017__X ;
  logic [13:0] _017__S ;
  logic _018_;
  logic _018__T ;
  logic _018__R ;
  logic _018__C ;
  logic _018__X ;
  logic [13:0] _018__S ;
  logic _019_;
  logic _019__T ;
  logic _019__R ;
  logic _019__C ;
  logic _019__X ;
  logic [13:0] _019__S ;
  logic _020_;
  logic _020__T ;
  logic _020__R ;
  logic _020__C ;
  logic _020__X ;
  logic [13:0] _020__S ;
  logic _021_;
  logic _021__T ;
  logic _021__R ;
  logic _021__C ;
  logic _021__X ;
  logic [13:0] _021__S ;
  logic _022_;
  logic _022__T ;
  logic _022__R ;
  logic _022__C ;
  logic _022__X ;
  logic [13:0] _022__S ;
  logic _023_;
  logic _023__T ;
  logic _023__R ;
  logic _023__C ;
  logic _023__X ;
  logic [13:0] _023__S ;
  logic _024_;
  logic _024__T ;
  logic _024__R ;
  logic _024__C ;
  logic _024__X ;
  logic [13:0] _024__S ;
  logic _025_;
  logic _025__T ;
  logic _025__R ;
  logic _025__C ;
  logic _025__X ;
  logic [13:0] _025__S ;
  logic _026_;
  logic _026__T ;
  logic _026__R ;
  logic _026__C ;
  logic _026__X ;
  logic [13:0] _026__S ;
  logic _027_;
  logic _027__T ;
  logic _027__R ;
  logic _027__C ;
  logic _027__X ;
  logic [13:0] _027__S ;
  logic _028_;
  logic _028__T ;
  logic _028__R ;
  logic _028__C ;
  logic _028__X ;
  logic [13:0] _028__S ;
  logic _029_;
  logic _029__T ;
  logic _029__R ;
  logic _029__C ;
  logic _029__X ;
  logic [13:0] _029__S ;
  logic _030_;
  logic _030__T ;
  logic _030__R ;
  logic _030__C ;
  logic _030__X ;
  logic [13:0] _030__S ;
  logic _031_;
  logic _031__T ;
  logic _031__R ;
  logic _031__C ;
  logic _031__X ;
  logic [13:0] _031__S ;
  logic _032_;
  logic _032__T ;
  logic _032__R ;
  logic _032__C ;
  logic _032__X ;
  logic [13:0] _032__S ;
  logic _033_;
  logic _033__T ;
  logic _033__R ;
  logic _033__C ;
  logic _033__X ;
  logic [13:0] _033__S ;
  logic _034_;
  logic _034__T ;
  logic _034__R ;
  logic _034__C ;
  logic _034__X ;
  logic [13:0] _034__S ;
  logic [4:0] _035_;
  logic [4:0] _035__T ;
  logic [4:0] _035__R ;
  logic [4:0] _035__C ;
  logic [4:0] _035__X ;
  logic [13:0] _035__S ;
  logic _036_;
  logic _036__T ;
  logic _036__R ;
  logic _036__C ;
  logic _036__X ;
  logic [13:0] _036__S ;
  logic _037_;
  logic _037__T ;
  logic _037__R ;
  logic _037__C ;
  logic _037__X ;
  logic [13:0] _037__S ;
  logic [9:0] _038_;
  logic [9:0] _038__T ;
  logic [9:0] _038__R ;
  logic [9:0] _038__C ;
  logic [9:0] _038__X ;
  logic [13:0] _038__S ;
  logic _039_;
  logic _039__T ;
  logic _039__R ;
  logic _039__C ;
  logic _039__X ;
  logic [13:0] _039__S ;
  logic _040_;
  logic _040__T ;
  logic _040__R ;
  logic _040__C ;
  logic _040__X ;
  logic [13:0] _040__S ;
  logic _041_;
  logic _041__T ;
  logic _041__R ;
  logic _041__C ;
  logic _041__X ;
  logic [13:0] _041__S ;
  logic _042_;
  logic _042__T ;
  logic _042__R ;
  logic _042__C ;
  logic _042__X ;
  logic [13:0] _042__S ;
  logic _043_;
  logic _043__T ;
  logic _043__R ;
  logic _043__C ;
  logic _043__X ;
  logic [13:0] _043__S ;
  logic _044_;
  logic _044__T ;
  logic _044__R ;
  logic _044__C ;
  logic _044__X ;
  logic [13:0] _044__S ;
  logic [9:0] _045_;
  logic [9:0] _045__T ;
  logic [9:0] _045__R ;
  logic [9:0] _045__C ;
  logic [9:0] _045__X ;
  logic [13:0] _045__S ;
  logic [9:0] _046_;
  logic [9:0] _046__T ;
  logic [9:0] _046__R ;
  logic [9:0] _046__C ;
  logic [9:0] _046__X ;
  logic [13:0] _046__S ;
  logic [4:0] _047_;
  logic [4:0] _047__T ;
  logic [4:0] _047__R ;
  logic [4:0] _047__C ;
  logic [4:0] _047__X ;
  logic [13:0] _047__S ;
  logic _048_;
  logic _048__T ;
  logic _048__R ;
  logic _048__C ;
  logic _048__X ;
  logic [13:0] _048__S ;
  logic _049_;
  logic _049__T ;
  logic _049__R ;
  logic _049__C ;
  logic _049__X ;
  logic [13:0] _049__S ;
  logic _050_;
  logic _050__T ;
  logic _050__R ;
  logic _050__C ;
  logic _050__X ;
  logic [13:0] _050__S ;
  logic _051_;
  logic _051__T ;
  logic _051__R ;
  logic _051__C ;
  logic _051__X ;
  logic [13:0] _051__S ;
  logic _052_;
  logic _052__T ;
  logic _052__R ;
  logic _052__C ;
  logic _052__X ;
  logic [13:0] _052__S ;
  logic _053_;
  logic _053__T ;
  logic _053__R ;
  logic _053__C ;
  logic _053__X ;
  logic [13:0] _053__S ;
  logic _054_;
  logic _054__T ;
  logic _054__R ;
  logic _054__C ;
  logic _054__X ;
  logic [13:0] _054__S ;
  logic _055_;
  logic _055__T ;
  logic _055__R ;
  logic _055__C ;
  logic _055__X ;
  logic [13:0] _055__S ;
  logic _056_;
  logic _056__T ;
  logic _056__R ;
  logic _056__C ;
  logic _056__X ;
  logic [13:0] _056__S ;
  logic _057_;
  logic _057__T ;
  logic _057__R ;
  logic _057__C ;
  logic _057__X ;
  logic [13:0] _057__S ;
  logic _058_;
  logic _058__T ;
  logic _058__R ;
  logic _058__C ;
  logic _058__X ;
  logic [13:0] _058__S ;
  logic _059_;
  logic _059__T ;
  logic _059__R ;
  logic _059__C ;
  logic _059__X ;
  logic [13:0] _059__S ;
  logic _060_;
  logic _060__T ;
  logic _060__R ;
  logic _060__C ;
  logic _060__X ;
  logic [13:0] _060__S ;
  logic _061_;
  logic _061__T ;
  logic _061__R ;
  logic _061__C ;
  logic _061__X ;
  logic [13:0] _061__S ;
  logic _062_;
  logic _062__T ;
  logic _062__R ;
  logic _062__C ;
  logic _062__X ;
  logic [13:0] _062__S ;
  logic _063_;
  logic _063__T ;
  logic _063__R ;
  logic _063__C ;
  logic _063__X ;
  logic [13:0] _063__S ;
  logic _064_;
  logic _064__T ;
  logic _064__R ;
  logic _064__C ;
  logic _064__X ;
  logic [13:0] _064__S ;
  logic _065_;
  logic _065__T ;
  logic _065__R ;
  logic _065__C ;
  logic _065__X ;
  logic [13:0] _065__S ;
  logic _066_;
  logic _066__T ;
  logic _066__R ;
  logic _066__C ;
  logic _066__X ;
  logic [13:0] _066__S ;
  logic _067_;
  logic _067__T ;
  logic _067__R ;
  logic _067__C ;
  logic _067__X ;
  logic [13:0] _067__S ;
  logic _068_;
  logic _068__T ;
  logic _068__R ;
  logic _068__C ;
  logic _068__X ;
  logic [13:0] _068__S ;
  logic _069_;
  logic _069__T ;
  logic _069__R ;
  logic _069__C ;
  logic _069__X ;
  logic [13:0] _069__S ;
  logic _070_;
  logic _070__T ;
  logic _070__R ;
  logic _070__C ;
  logic _070__X ;
  logic [13:0] _070__S ;
  logic _071_;
  logic _071__T ;
  logic _071__R ;
  logic _071__C ;
  logic _071__X ;
  logic [13:0] _071__S ;
  logic _072_;
  logic _072__T ;
  logic _072__R ;
  logic _072__C ;
  logic _072__X ;
  logic [13:0] _072__S ;
  logic _073_;
  logic _073__T ;
  logic _073__R ;
  logic _073__C ;
  logic _073__X ;
  logic [13:0] _073__S ;
  logic _074_;
  logic _074__T ;
  logic _074__R ;
  logic _074__C ;
  logic _074__X ;
  logic [13:0] _074__S ;
  logic _075_;
  logic _075__T ;
  logic _075__R ;
  logic _075__C ;
  logic _075__X ;
  logic [13:0] _075__S ;
  logic _076_;
  logic _076__T ;
  logic _076__R ;
  logic _076__C ;
  logic _076__X ;
  logic [13:0] _076__S ;
  logic _077_;
  logic _077__T ;
  logic _077__R ;
  logic _077__C ;
  logic _077__X ;
  logic [13:0] _077__S ;
  logic _078_;
  logic _078__T ;
  logic _078__R ;
  logic _078__C ;
  logic _078__X ;
  logic [13:0] _078__S ;
  logic _079_;
  logic _079__T ;
  logic _079__R ;
  logic _079__C ;
  logic _079__X ;
  logic [13:0] _079__S ;
  logic _080_;
  logic _080__T ;
  logic _080__R ;
  logic _080__C ;
  logic _080__X ;
  logic [13:0] _080__S ;
  logic _081_;
  logic _081__T ;
  logic _081__R ;
  logic _081__C ;
  logic _081__X ;
  logic [13:0] _081__S ;
  logic [4:0] _082_;
  logic [4:0] _082__T ;
  logic [4:0] _082__R ;
  logic [4:0] _082__C ;
  logic [4:0] _082__X ;
  logic [13:0] _082__S ;
  logic [4:0] _083_;
  logic [4:0] _083__T ;
  logic [4:0] _083__R ;
  logic [4:0] _083__C ;
  logic [4:0] _083__X ;
  logic [13:0] _083__S ;
  logic [4:0] _084_;
  logic [4:0] _084__T ;
  logic [4:0] _084__R ;
  logic [4:0] _084__C ;
  logic [4:0] _084__X ;
  logic [13:0] _084__S ;
  logic [4:0] _085_;
  logic [4:0] _085__T ;
  logic [4:0] _085__R ;
  logic [4:0] _085__C ;
  logic [4:0] _085__X ;
  logic [13:0] _085__S ;
  logic _086_;
  logic _086__T ;
  logic _086__R ;
  logic _086__C ;
  logic _086__X ;
  logic [13:0] _086__S ;
  logic _087_;
  logic _087__T ;
  logic _087__R ;
  logic _087__C ;
  logic _087__X ;
  logic [13:0] _087__S ;
  logic _088_;
  logic _088__T ;
  logic _088__R ;
  logic _088__C ;
  logic _088__X ;
  logic [13:0] _088__S ;
  logic _089_;
  logic _089__T ;
  logic _089__R ;
  logic _089__C ;
  logic _089__X ;
  logic [13:0] _089__S ;
  logic _090_;
  logic _090__T ;
  logic _090__R ;
  logic _090__C ;
  logic _090__X ;
  logic [13:0] _090__S ;
  logic _091_;
  logic _091__T ;
  logic _091__R ;
  logic _091__C ;
  logic _091__X ;
  logic [13:0] _091__S ;
  logic _092_;
  logic _092__T ;
  logic _092__R ;
  logic _092__C ;
  logic _092__X ;
  logic [13:0] _092__S ;
  logic _093_;
  logic _093__T ;
  logic _093__R ;
  logic _093__C ;
  logic _093__X ;
  logic [13:0] _093__S ;
  logic _094_;
  logic _094__T ;
  logic _094__R ;
  logic _094__C ;
  logic _094__X ;
  logic [13:0] _094__S ;
  logic _095_;
  logic _095__T ;
  logic _095__R ;
  logic _095__C ;
  logic _095__X ;
  logic [13:0] _095__S ;
  logic _096_;
  logic _096__T ;
  logic _096__R ;
  logic _096__C ;
  logic _096__X ;
  logic [13:0] _096__S ;
  logic _097_;
  logic _097__T ;
  logic _097__R ;
  logic _097__C ;
  logic _097__X ;
  logic [13:0] _097__S ;
  logic _098_;
  logic _098__T ;
  logic _098__R ;
  logic _098__C ;
  logic _098__X ;
  logic [13:0] _098__S ;
  logic _099_;
  logic _099__T ;
  logic _099__R ;
  logic _099__C ;
  logic _099__X ;
  logic [13:0] _099__S ;
  logic _100_;
  logic _100__T ;
  logic _100__R ;
  logic _100__C ;
  logic _100__X ;
  logic [13:0] _100__S ;
  logic _101_;
  logic _101__T ;
  logic _101__R ;
  logic _101__C ;
  logic _101__X ;
  logic [13:0] _101__S ;
  logic _102_;
  logic _102__T ;
  logic _102__R ;
  logic _102__C ;
  logic _102__X ;
  logic [13:0] _102__S ;
  logic _103_;
  logic _103__T ;
  logic _103__R ;
  logic _103__C ;
  logic _103__X ;
  logic [13:0] _103__S ;
  logic _104_;
  logic _104__T ;
  logic _104__R ;
  logic _104__C ;
  logic _104__X ;
  logic [13:0] _104__S ;
  logic _105_;
  logic _105__T ;
  logic _105__R ;
  logic _105__C ;
  logic _105__X ;
  logic [13:0] _105__S ;
  logic _106_;
  logic _106__T ;
  logic _106__R ;
  logic _106__C ;
  logic _106__X ;
  logic [13:0] _106__S ;
  logic _107_;
  logic _107__T ;
  logic _107__R ;
  logic _107__C ;
  logic _107__X ;
  logic [13:0] _107__S ;
  logic [3:0] _108_;
  logic [3:0] _108__T ;
  logic [3:0] _108__R ;
  logic [3:0] _108__C ;
  logic [3:0] _108__X ;
  logic [13:0] _108__S ;
  logic _109_;
  logic _109__T ;
  logic _109__R ;
  logic _109__C ;
  logic _109__X ;
  logic [13:0] _109__S ;
  logic _110_;
  logic _110__T ;
  logic _110__R ;
  logic _110__C ;
  logic _110__X ;
  logic [13:0] _110__S ;
  logic _111_;
  logic _111__T ;
  logic _111__R ;
  logic _111__C ;
  logic _111__X ;
  logic [13:0] _111__S ;
  logic _112_;
  logic _112__T ;
  logic _112__R ;
  logic _112__C ;
  logic _112__X ;
  logic [13:0] _112__S ;
  logic _113_;
  logic _113__T ;
  logic _113__R ;
  logic _113__C ;
  logic _113__X ;
  logic [13:0] _113__S ;
  logic _114_;
  logic _114__T ;
  logic _114__R ;
  logic _114__C ;
  logic _114__X ;
  logic [13:0] _114__S ;
  logic _115_;
  logic _115__T ;
  logic _115__R ;
  logic _115__C ;
  logic _115__X ;
  logic [13:0] _115__S ;
  logic _116_;
  logic _116__T ;
  logic _116__R ;
  logic _116__C ;
  logic _116__X ;
  logic [13:0] _116__S ;
  logic _117_;
  logic _117__T ;
  logic _117__R ;
  logic _117__C ;
  logic _117__X ;
  logic [13:0] _117__S ;
  logic _118_;
  logic _118__T ;
  logic _118__R ;
  logic _118__C ;
  logic _118__X ;
  logic [13:0] _118__S ;
  logic _119_;
  logic _119__T ;
  logic _119__R ;
  logic _119__C ;
  logic _119__X ;
  logic [13:0] _119__S ;
  logic _120_;
  logic _120__T ;
  logic _120__R ;
  logic _120__C ;
  logic _120__X ;
  logic [13:0] _120__S ;
  logic _121_;
  logic _121__T ;
  logic _121__R ;
  logic _121__C ;
  logic _121__X ;
  logic [13:0] _121__S ;
  logic _122_;
  logic _122__T ;
  logic _122__R ;
  logic _122__C ;
  logic _122__X ;
  logic [13:0] _122__S ;
  logic _123_;
  logic _123__T ;
  logic _123__R ;
  logic _123__C ;
  logic _123__X ;
  logic [13:0] _123__S ;
  logic _124_;
  logic _124__T ;
  logic _124__R ;
  logic _124__C ;
  logic _124__X ;
  logic [13:0] _124__S ;
  logic _125_;
  logic _125__T ;
  logic _125__R ;
  logic _125__C ;
  logic _125__X ;
  logic [13:0] _125__S ;
  logic _126_;
  logic _126__T ;
  logic _126__R ;
  logic _126__C ;
  logic _126__X ;
  logic [13:0] _126__S ;
  logic _127_;
  logic _127__T ;
  logic _127__R ;
  logic _127__C ;
  logic _127__X ;
  logic [13:0] _127__S ;
  logic _128_;
  logic _128__T ;
  logic _128__R ;
  logic _128__C ;
  logic _128__X ;
  logic [13:0] _128__S ;
  logic _129_;
  logic _129__T ;
  logic _129__R ;
  logic _129__C ;
  logic _129__X ;
  logic [13:0] _129__S ;
  logic _130_;
  logic _130__T ;
  logic _130__R ;
  logic _130__C ;
  logic _130__X ;
  logic [13:0] _130__S ;
  logic _131_;
  logic _131__T ;
  logic _131__R ;
  logic _131__C ;
  logic _131__X ;
  logic [13:0] _131__S ;
  logic _132_;
  logic _132__T ;
  logic _132__R ;
  logic _132__C ;
  logic _132__X ;
  logic [13:0] _132__S ;
  logic _133_;
  logic _133__T ;
  logic _133__R ;
  logic _133__C ;
  logic _133__X ;
  logic [13:0] _133__S ;
  logic _134_;
  logic _134__T ;
  logic _134__R ;
  logic _134__C ;
  logic _134__X ;
  logic [13:0] _134__S ;
  logic _135_;
  logic _135__T ;
  logic _135__R ;
  logic _135__C ;
  logic _135__X ;
  logic [13:0] _135__S ;
  logic _136_;
  logic _136__T ;
  logic _136__R ;
  logic _136__C ;
  logic _136__X ;
  logic [13:0] _136__S ;
  logic _137_;
  logic _137__T ;
  logic _137__R ;
  logic _137__C ;
  logic _137__X ;
  logic [13:0] _137__S ;
  logic _138_;
  logic _138__T ;
  logic _138__R ;
  logic _138__C ;
  logic _138__X ;
  logic [13:0] _138__S ;
  logic _139_;
  logic _139__T ;
  logic _139__R ;
  logic _139__C ;
  logic _139__X ;
  logic [13:0] _139__S ;
  logic _140_;
  logic _140__T ;
  logic _140__R ;
  logic _140__C ;
  logic _140__X ;
  logic [13:0] _140__S ;
  logic _141_;
  logic _141__T ;
  logic _141__R ;
  logic _141__C ;
  logic _141__X ;
  logic [13:0] _141__S ;
  logic _142_;
  logic _142__T ;
  logic _142__R ;
  logic _142__C ;
  logic _142__X ;
  logic [13:0] _142__S ;
  logic [7:0] _143_;
  logic [7:0] _143__T ;
  logic [7:0] _143__R ;
  logic [7:0] _143__C ;
  logic [7:0] _143__X ;
  logic [13:0] _143__S ;
  logic _144_;
  logic _144__T ;
  logic _144__R ;
  logic _144__C ;
  logic _144__X ;
  logic [13:0] _144__S ;
  logic _145_;
  logic _145__T ;
  logic _145__R ;
  logic _145__C ;
  logic _145__X ;
  logic [13:0] _145__S ;
  logic _146_;
  logic _146__T ;
  logic _146__R ;
  logic _146__C ;
  logic _146__X ;
  logic [13:0] _146__S ;
  logic _147_;
  logic _147__T ;
  logic _147__R ;
  logic _147__C ;
  logic _147__X ;
  logic [13:0] _147__S ;
  logic _148_;
  logic _148__T ;
  logic _148__R ;
  logic _148__C ;
  logic _148__X ;
  logic [13:0] _148__S ;
  logic _149_;
  logic _149__T ;
  logic _149__R ;
  logic _149__C ;
  logic _149__X ;
  logic [13:0] _149__S ;
  logic _150_;
  logic _150__T ;
  logic _150__R ;
  logic _150__C ;
  logic _150__X ;
  logic [13:0] _150__S ;
  logic _151_;
  logic _151__T ;
  logic _151__R ;
  logic _151__C ;
  logic _151__X ;
  logic [13:0] _151__S ;
  logic _152_;
  logic _152__T ;
  logic _152__R ;
  logic _152__C ;
  logic _152__X ;
  logic [13:0] _152__S ;
  logic _153_;
  logic _153__T ;
  logic _153__R ;
  logic _153__C ;
  logic _153__X ;
  logic [13:0] _153__S ;
  logic _154_;
  logic _154__T ;
  logic _154__R ;
  logic _154__C ;
  logic _154__X ;
  logic [13:0] _154__S ;
  logic _155_;
  logic _155__T ;
  logic _155__R ;
  logic _155__C ;
  logic _155__X ;
  logic [13:0] _155__S ;
  logic _156_;
  logic _156__T ;
  logic _156__R ;
  logic _156__C ;
  logic _156__X ;
  logic [13:0] _156__S ;
  logic _157_;
  logic _157__T ;
  logic _157__R ;
  logic _157__C ;
  logic _157__X ;
  logic [13:0] _157__S ;
  logic _158_;
  logic _158__T ;
  logic _158__R ;
  logic _158__C ;
  logic _158__X ;
  logic [13:0] _158__S ;
  logic _159_;
  logic _159__T ;
  logic _159__R ;
  logic _159__C ;
  logic _159__X ;
  logic [13:0] _159__S ;
  logic _160_;
  logic _160__T ;
  logic _160__R ;
  logic _160__C ;
  logic _160__X ;
  logic [13:0] _160__S ;
  logic _161_;
  logic _161__T ;
  logic _161__R ;
  logic _161__C ;
  logic _161__X ;
  logic [13:0] _161__S ;
  logic _162_;
  logic _162__T ;
  logic _162__R ;
  logic _162__C ;
  logic _162__X ;
  logic [13:0] _162__S ;
  logic _163_;
  logic _163__T ;
  logic _163__R ;
  logic _163__C ;
  logic _163__X ;
  logic [13:0] _163__S ;
  logic _164_;
  logic _164__T ;
  logic _164__R ;
  logic _164__C ;
  logic _164__X ;
  logic [13:0] _164__S ;
  logic _165_;
  logic _165__T ;
  logic _165__R ;
  logic _165__C ;
  logic _165__X ;
  logic [13:0] _165__S ;
  logic _166_;
  logic _166__T ;
  logic _166__R ;
  logic _166__C ;
  logic _166__X ;
  logic [13:0] _166__S ;
  logic _167_;
  logic _167__T ;
  logic _167__R ;
  logic _167__C ;
  logic _167__X ;
  logic [13:0] _167__S ;
  logic _168_;
  logic _168__T ;
  logic _168__R ;
  logic _168__C ;
  logic _168__X ;
  logic [13:0] _168__S ;
  logic _169_;
  logic _169__T ;
  logic _169__R ;
  logic _169__C ;
  logic _169__X ;
  logic [13:0] _169__S ;
  logic _170_;
  logic _170__T ;
  logic _170__R ;
  logic _170__C ;
  logic _170__X ;
  logic [13:0] _170__S ;
  logic _171_;
  logic _171__T ;
  logic _171__R ;
  logic _171__C ;
  logic _171__X ;
  logic [13:0] _171__S ;
  logic _172_;
  logic _172__T ;
  logic _172__R ;
  logic _172__C ;
  logic _172__X ;
  logic [13:0] _172__S ;
  logic _173_;
  logic _173__T ;
  logic _173__R ;
  logic _173__C ;
  logic _173__X ;
  logic [13:0] _173__S ;
  logic _174_;
  logic _174__T ;
  logic _174__R ;
  logic _174__C ;
  logic _174__X ;
  logic [13:0] _174__S ;
  logic _175_;
  logic _175__T ;
  logic _175__R ;
  logic _175__C ;
  logic _175__X ;
  logic [13:0] _175__S ;
  logic _176_;
  logic _176__T ;
  logic _176__R ;
  logic _176__C ;
  logic _176__X ;
  logic [13:0] _176__S ;
  logic _177_;
  logic _177__T ;
  logic _177__R ;
  logic _177__C ;
  logic _177__X ;
  logic [13:0] _177__S ;
  logic _178_;
  logic _178__T ;
  logic _178__R ;
  logic _178__C ;
  logic _178__X ;
  logic [13:0] _178__S ;
  logic _179_;
  logic _179__T ;
  logic _179__R ;
  logic _179__C ;
  logic _179__X ;
  logic [13:0] _179__S ;
  logic _180_;
  logic _180__T ;
  logic _180__R ;
  logic _180__C ;
  logic _180__X ;
  logic [13:0] _180__S ;
  logic _181_;
  logic _181__T ;
  logic _181__R ;
  logic _181__C ;
  logic _181__X ;
  logic [13:0] _181__S ;
  logic _182_;
  logic _182__T ;
  logic _182__R ;
  logic _182__C ;
  logic _182__X ;
  logic [13:0] _182__S ;
  logic _183_;
  logic _183__T ;
  logic _183__R ;
  logic _183__C ;
  logic _183__X ;
  logic [13:0] _183__S ;
  logic _184_;
  logic _184__T ;
  logic _184__R ;
  logic _184__C ;
  logic _184__X ;
  logic [13:0] _184__S ;
  logic _185_;
  logic _185__T ;
  logic _185__R ;
  logic _185__C ;
  logic _185__X ;
  logic [13:0] _185__S ;
  logic _186_;
  logic _186__T ;
  logic _186__R ;
  logic _186__C ;
  logic _186__X ;
  logic [13:0] _186__S ;
  logic _187_;
  logic _187__T ;
  logic _187__R ;
  logic _187__C ;
  logic _187__X ;
  logic [13:0] _187__S ;
  logic _188_;
  logic _188__T ;
  logic _188__R ;
  logic _188__C ;
  logic _188__X ;
  logic [13:0] _188__S ;
  logic _189_;
  logic _189__T ;
  logic _189__R ;
  logic _189__C ;
  logic _189__X ;
  logic [13:0] _189__S ;
  logic _190_;
  logic _190__T ;
  logic _190__R ;
  logic _190__C ;
  logic _190__X ;
  logic [13:0] _190__S ;
  logic _191_;
  logic _191__T ;
  logic _191__R ;
  logic _191__C ;
  logic _191__X ;
  logic [13:0] _191__S ;
  logic _192_;
  logic _192__T ;
  logic _192__R ;
  logic _192__C ;
  logic _192__X ;
  logic [13:0] _192__S ;
  logic _193_;
  logic _193__T ;
  logic _193__R ;
  logic _193__C ;
  logic _193__X ;
  logic [13:0] _193__S ;
  logic _194_;
  logic _194__T ;
  logic _194__R ;
  logic _194__C ;
  logic _194__X ;
  logic [13:0] _194__S ;
  logic [4:0] _195_;
  logic [4:0] _195__T ;
  logic [4:0] _195__R ;
  logic [4:0] _195__C ;
  logic [4:0] _195__X ;
  logic [13:0] _195__S ;
  logic [4:0] _196_;
  logic [4:0] _196__T ;
  logic [4:0] _196__R ;
  logic [4:0] _196__C ;
  logic [4:0] _196__X ;
  logic [13:0] _196__S ;
  logic [4:0] _197_;
  logic [4:0] _197__T ;
  logic [4:0] _197__R ;
  logic [4:0] _197__C ;
  logic [4:0] _197__X ;
  logic [13:0] _197__S ;
  logic _198_;
  logic _198__T ;
  logic _198__R ;
  logic _198__C ;
  logic _198__X ;
  logic [13:0] _198__S ;
  logic _199_;
  logic _199__T ;
  logic _199__R ;
  logic _199__C ;
  logic _199__X ;
  logic [13:0] _199__S ;
  logic _200_;
  logic _200__T ;
  logic _200__R ;
  logic _200__C ;
  logic _200__X ;
  logic [13:0] _200__S ;
  logic _201_;
  logic _201__T ;
  logic _201__R ;
  logic _201__C ;
  logic _201__X ;
  logic [13:0] _201__S ;
  logic _202_;
  logic _202__T ;
  logic _202__R ;
  logic _202__C ;
  logic _202__X ;
  logic [13:0] _202__S ;
  logic _203_;
  logic _203__T ;
  logic _203__R ;
  logic _203__C ;
  logic _203__X ;
  logic [13:0] _203__S ;
  logic _204_;
  logic _204__T ;
  logic _204__R ;
  logic _204__C ;
  logic _204__X ;
  logic [13:0] _204__S ;
  logic _205_;
  logic _205__T ;
  logic _205__R ;
  logic _205__C ;
  logic _205__X ;
  logic [13:0] _205__S ;
  logic _206_;
  logic _206__T ;
  logic _206__R ;
  logic _206__C ;
  logic _206__X ;
  logic [13:0] _206__S ;
  logic _207_;
  logic _207__T ;
  logic _207__R ;
  logic _207__C ;
  logic _207__X ;
  logic [13:0] _207__S ;
  logic _208_;
  logic _208__T ;
  logic _208__R ;
  logic _208__C ;
  logic _208__X ;
  logic [13:0] _208__S ;
  logic _209_;
  logic _209__T ;
  logic _209__R ;
  logic _209__C ;
  logic _209__X ;
  logic [13:0] _209__S ;
  logic _210_;
  logic _210__T ;
  logic _210__R ;
  logic _210__C ;
  logic _210__X ;
  logic [13:0] _210__S ;
  logic _211_;
  logic _211__T ;
  logic _211__R ;
  logic _211__C ;
  logic _211__X ;
  logic [13:0] _211__S ;
  logic _212_;
  logic _212__T ;
  logic _212__R ;
  logic _212__C ;
  logic _212__X ;
  logic [13:0] _212__S ;
  logic _213_;
  logic _213__T ;
  logic _213__R ;
  logic _213__C ;
  logic _213__X ;
  logic [13:0] _213__S ;
  logic _214_;
  logic _214__T ;
  logic _214__R ;
  logic _214__C ;
  logic _214__X ;
  logic [13:0] _214__S ;
  logic _215_;
  logic _215__T ;
  logic _215__R ;
  logic _215__C ;
  logic _215__X ;
  logic [13:0] _215__S ;
  logic _216_;
  logic _216__T ;
  logic _216__R ;
  logic _216__C ;
  logic _216__X ;
  logic [13:0] _216__S ;
  logic _217_;
  logic _217__T ;
  logic _217__R ;
  logic _217__C ;
  logic _217__X ;
  logic [13:0] _217__S ;
  logic _218_;
  logic _218__T ;
  logic _218__R ;
  logic _218__C ;
  logic _218__X ;
  logic [13:0] _218__S ;
  logic _219_;
  logic _219__T ;
  logic _219__R ;
  logic _219__C ;
  logic _219__X ;
  logic [13:0] _219__S ;
  logic _220_;
  logic _220__T ;
  logic _220__R ;
  logic _220__C ;
  logic _220__X ;
  logic [13:0] _220__S ;
  logic _221_;
  logic _221__T ;
  logic _221__R ;
  logic _221__C ;
  logic _221__X ;
  logic [13:0] _221__S ;
  logic _222_;
  logic _222__T ;
  logic _222__R ;
  logic _222__C ;
  logic _222__X ;
  logic [13:0] _222__S ;
  logic _223_;
  logic _223__T ;
  logic _223__R ;
  logic _223__C ;
  logic _223__X ;
  logic [13:0] _223__S ;
  logic _224_;
  logic _224__T ;
  logic _224__R ;
  logic _224__C ;
  logic _224__X ;
  logic [13:0] _224__S ;
  logic _225_;
  logic _225__T ;
  logic _225__R ;
  logic _225__C ;
  logic _225__X ;
  logic [13:0] _225__S ;
  logic _226_;
  logic _226__T ;
  logic _226__R ;
  logic _226__C ;
  logic _226__X ;
  logic [13:0] _226__S ;
  logic Fp32ToFp17_and_1_cse;
  logic Fp32ToFp17_and_1_cse_T ;
  logic Fp32ToFp17_and_1_cse_R ;
  logic Fp32ToFp17_and_1_cse_C ;
  logic Fp32ToFp17_and_1_cse_X ;
  logic [13:0] Fp32ToFp17_and_1_cse_S ;
  logic FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2;
  logic  FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_T ;
  logic  FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_PREV_VAL1 ;
  logic  FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_PREV_VAL2 ;
  logic  FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_R ;
  logic  FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_X ;
  logic  FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_C ;
  logic [13:0] FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_S ;
  logic FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_t_flag ;
  logic FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_r_flag ;
  assign FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_S = 689 ;
  logic [22:0] FpMantDecShiftRight_23U_8U_10U_guard_bits_22_0_sva;
  logic [22:0] FpMantDecShiftRight_23U_8U_10U_guard_bits_22_0_sva_T ;
  logic [22:0] FpMantDecShiftRight_23U_8U_10U_guard_bits_22_0_sva_R ;
  logic [22:0] FpMantDecShiftRight_23U_8U_10U_guard_bits_22_0_sva_C ;
  logic [22:0] FpMantDecShiftRight_23U_8U_10U_guard_bits_22_0_sva_X ;
  logic [13:0] FpMantDecShiftRight_23U_8U_10U_guard_bits_22_0_sva_S ;
  logic [4:0] FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva;
  logic [4:0] FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_T ;
  logic [4:0] FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_R ;
  logic [4:0] FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_C ;
  logic [4:0] FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_X ;
  logic [13:0] FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_S ;
  logic [23:0] FpMantDecShiftRight_23U_8U_10U_guard_mask_sva;
  logic [23:0] FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_T ;
  logic [23:0] FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_R ;
  logic [23:0] FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_C ;
  logic [23:0] FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_X ;
  logic [13:0] FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_S ;
  logic FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse;
  logic FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_T ;
  logic FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_R ;
  logic FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_C ;
  logic FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_X ;
  logic [13:0] FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_S ;
  logic [23:0] FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm;
  logic [23:0] FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_T ;
  logic [23:0] FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_R ;
  logic [23:0] FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_C ;
  logic [23:0] FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_X ;
  logic [13:0] FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_S ;
  logic [10:0] FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2;
  logic [10:0]  FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_T ;
  logic [10:0]  FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_PREV_VAL1 ;
  logic [10:0]  FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_PREV_VAL2 ;
  logic [10:0]  FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_R ;
  logic [10:0]  FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_X ;
  logic [10:0]  FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_C ;
  logic [13:0] FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_S ;
  logic FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_t_flag ;
  logic FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_r_flag ;
  assign FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_S = 690 ;
  logic [22:0] FpMantDecShiftRight_23U_8U_10U_least_bits_22_0_sva;
  logic [22:0] FpMantDecShiftRight_23U_8U_10U_least_bits_22_0_sva_T ;
  logic [22:0] FpMantDecShiftRight_23U_8U_10U_least_bits_22_0_sva_R ;
  logic [22:0] FpMantDecShiftRight_23U_8U_10U_least_bits_22_0_sva_C ;
  logic [22:0] FpMantDecShiftRight_23U_8U_10U_least_bits_22_0_sva_X ;
  logic [13:0] FpMantDecShiftRight_23U_8U_10U_least_bits_22_0_sva_S ;
  logic [23:0] FpMantDecShiftRight_23U_8U_10U_least_mask_sva;
  logic [23:0] FpMantDecShiftRight_23U_8U_10U_least_mask_sva_T ;
  logic [23:0] FpMantDecShiftRight_23U_8U_10U_least_mask_sva_R ;
  logic [23:0] FpMantDecShiftRight_23U_8U_10U_least_mask_sva_C ;
  logic [23:0] FpMantDecShiftRight_23U_8U_10U_least_mask_sva_X ;
  logic [13:0] FpMantDecShiftRight_23U_8U_10U_least_mask_sva_S ;
  logic [10:0] FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva;
  logic [10:0] FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_T ;
  logic [10:0] FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_R ;
  logic [10:0] FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_C ;
  logic [10:0] FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_X ;
  logic [13:0] FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_S ;
  logic [22:0] FpMantDecShiftRight_23U_8U_10U_stick_bits_22_0_sva;
  logic [22:0] FpMantDecShiftRight_23U_8U_10U_stick_bits_22_0_sva_T ;
  logic [22:0] FpMantDecShiftRight_23U_8U_10U_stick_bits_22_0_sva_R ;
  logic [22:0] FpMantDecShiftRight_23U_8U_10U_stick_bits_22_0_sva_C ;
  logic [22:0] FpMantDecShiftRight_23U_8U_10U_stick_bits_22_0_sva_X ;
  logic [13:0] FpMantDecShiftRight_23U_8U_10U_stick_bits_22_0_sva_S ;
  logic [22:0] FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl;
  logic [22:0] FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_T ;
  logic [22:0] FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_R ;
  logic [22:0] FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_C ;
  logic [22:0] FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_X ;
  logic [13:0] FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_S ;
  logic [9:0] FpMantRNE_24U_11U_else_acc_nl;
  logic [9:0] FpMantRNE_24U_11U_else_acc_nl_T ;
  logic [9:0] FpMantRNE_24U_11U_else_acc_nl_R ;
  logic [9:0] FpMantRNE_24U_11U_else_acc_nl_C ;
  logic [9:0] FpMantRNE_24U_11U_else_acc_nl_X ;
  logic [13:0] FpMantRNE_24U_11U_else_acc_nl_S ;
  logic FpMantRNE_24U_11U_else_and_svs;
  logic  FpMantRNE_24U_11U_else_and_svs_T ;
  logic  FpMantRNE_24U_11U_else_and_svs_PREV_VAL1 ;
  logic  FpMantRNE_24U_11U_else_and_svs_PREV_VAL2 ;
  logic  FpMantRNE_24U_11U_else_and_svs_R ;
  logic  FpMantRNE_24U_11U_else_and_svs_X ;
  logic  FpMantRNE_24U_11U_else_and_svs_C ;
  logic [13:0] FpMantRNE_24U_11U_else_and_svs_S ;
  logic FpMantRNE_24U_11U_else_and_svs_t_flag ;
  logic FpMantRNE_24U_11U_else_and_svs_r_flag ;
  assign FpMantRNE_24U_11U_else_and_svs_S = 691 ;
  logic FpMantRNE_24U_11U_else_and_svs_2;
  logic  FpMantRNE_24U_11U_else_and_svs_2_T ;
  logic  FpMantRNE_24U_11U_else_and_svs_2_PREV_VAL1 ;
  logic  FpMantRNE_24U_11U_else_and_svs_2_PREV_VAL2 ;
  logic  FpMantRNE_24U_11U_else_and_svs_2_R ;
  logic  FpMantRNE_24U_11U_else_and_svs_2_X ;
  logic  FpMantRNE_24U_11U_else_and_svs_2_C ;
  logic [13:0] FpMantRNE_24U_11U_else_and_svs_2_S ;
  logic FpMantRNE_24U_11U_else_and_svs_2_t_flag ;
  logic FpMantRNE_24U_11U_else_and_svs_2_r_flag ;
  assign FpMantRNE_24U_11U_else_and_svs_2_S = 692 ;
  logic FpMantRNE_24U_11U_else_and_svs_mx0w0;
  logic FpMantRNE_24U_11U_else_and_svs_mx0w0_T ;
  logic FpMantRNE_24U_11U_else_and_svs_mx0w0_R ;
  logic FpMantRNE_24U_11U_else_and_svs_mx0w0_C ;
  logic FpMantRNE_24U_11U_else_and_svs_mx0w0_X ;
  logic [13:0] FpMantRNE_24U_11U_else_and_svs_mx0w0_S ;
  logic FpMantRNE_24U_11U_else_and_svs_st_2;
  logic  FpMantRNE_24U_11U_else_and_svs_st_2_T ;
  logic  FpMantRNE_24U_11U_else_and_svs_st_2_PREV_VAL1 ;
  logic  FpMantRNE_24U_11U_else_and_svs_st_2_PREV_VAL2 ;
  logic  FpMantRNE_24U_11U_else_and_svs_st_2_R ;
  logic  FpMantRNE_24U_11U_else_and_svs_st_2_X ;
  logic  FpMantRNE_24U_11U_else_and_svs_st_2_C ;
  logic [13:0] FpMantRNE_24U_11U_else_and_svs_st_2_S ;
  logic FpMantRNE_24U_11U_else_and_svs_st_2_t_flag ;
  logic FpMantRNE_24U_11U_else_and_svs_st_2_r_flag ;
  assign FpMantRNE_24U_11U_else_and_svs_st_2_S = 693 ;
  logic FpMantRNE_24U_11U_else_carry_sva_2;
  logic  FpMantRNE_24U_11U_else_carry_sva_2_T ;
  logic  FpMantRNE_24U_11U_else_carry_sva_2_PREV_VAL1 ;
  logic  FpMantRNE_24U_11U_else_carry_sva_2_PREV_VAL2 ;
  logic  FpMantRNE_24U_11U_else_carry_sva_2_R ;
  logic  FpMantRNE_24U_11U_else_carry_sva_2_X ;
  logic  FpMantRNE_24U_11U_else_carry_sva_2_C ;
  logic [13:0] FpMantRNE_24U_11U_else_carry_sva_2_S ;
  logic FpMantRNE_24U_11U_else_carry_sva_2_t_flag ;
  logic FpMantRNE_24U_11U_else_carry_sva_2_r_flag ;
  assign FpMantRNE_24U_11U_else_carry_sva_2_S = 694 ;
  logic FpMantRNE_24U_11U_else_carry_sva_mx0w0;
  logic FpMantRNE_24U_11U_else_carry_sva_mx0w0_T ;
  logic FpMantRNE_24U_11U_else_carry_sva_mx0w0_R ;
  logic FpMantRNE_24U_11U_else_carry_sva_mx0w0_C ;
  logic FpMantRNE_24U_11U_else_carry_sva_mx0w0_X ;
  logic [13:0] FpMantRNE_24U_11U_else_carry_sva_mx0w0_S ;
  logic [4:0] FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1;
  logic [4:0]  FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_T ;
  logic [4:0]  FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_PREV_VAL1 ;
  logic [4:0]  FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_PREV_VAL2 ;
  logic [4:0]  FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_R ;
  logic [4:0]  FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_X ;
  logic [4:0]  FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_C ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_S ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_t_flag ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_r_flag ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_S = 695 ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_T ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_PREV_VAL1 ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_PREV_VAL2 ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_R ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_X ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_C ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_S ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_t_flag ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_r_flag ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_S = 696 ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_nor_ssc;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_nor_ssc_T ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_nor_ssc_R ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_nor_ssc_C ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_nor_ssc_X ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_nor_ssc_S ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_acc_itm_8_1;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_acc_itm_8_1_T ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_acc_itm_8_1_R ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_acc_itm_8_1_C ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_acc_itm_8_1_X ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_acc_itm_8_1_S ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_T ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_S ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_T ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_R ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_C ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_X ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_S ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_T ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_R ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_C ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_X ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_S ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_T ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_R ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_C ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_X ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_S ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_T ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_R ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_C ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_X ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_S ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_T ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_R ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_C ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_X ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_S ;
  logic [28:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1;
  logic [28:0]  FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_T ;
  logic [28:0]  FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_PREV_VAL1 ;
  logic [28:0]  FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_PREV_VAL2 ;
  logic [28:0]  FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R ;
  logic [28:0]  FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X ;
  logic [28:0]  FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_S ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_t_flag ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_r_flag ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_S = 697 ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_T ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_PREV_VAL1 ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_PREV_VAL2 ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_R ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_X ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_C ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_S ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_t_flag ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_r_flag ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_S = 698 ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_T ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_PREV_VAL1 ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_PREV_VAL2 ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_R ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_X ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_C ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_S ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_t_flag ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_r_flag ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_S = 699 ;
  logic [9:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1;
  logic [9:0]  FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_T ;
  logic [9:0]  FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_PREV_VAL1 ;
  logic [9:0]  FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_PREV_VAL2 ;
  logic [9:0]  FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_R ;
  logic [9:0]  FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_X ;
  logic [9:0]  FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_C ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_S ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_t_flag ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_r_flag ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_S = 700 ;
  logic [9:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_1_nl;
  logic [9:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_1_nl_T ;
  logic [9:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_1_nl_R ;
  logic [9:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_1_nl_C ;
  logic [9:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_1_nl_X ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_1_nl_S ;
  logic [4:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_and_nl;
  logic [4:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_and_nl_T ;
  logic [4:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_and_nl_R ;
  logic [4:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_and_nl_C ;
  logic [4:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_and_nl_X ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_and_nl_S ;
  logic [9:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_nl;
  logic [9:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_nl_T ;
  logic [9:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_nl_R ;
  logic [9:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_nl_C ;
  logic [9:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_nl_X ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_nl_S ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_T ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_R ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_C ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_X ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_S ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_itm_8_1;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_itm_8_1_T ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_itm_8_1_R ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_itm_8_1_C ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_itm_8_1_X ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_itm_8_1_S ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_T ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_S ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_else_mux_2_nl;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_else_mux_2_nl_T ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_else_mux_2_nl_R ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_else_mux_2_nl_C ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_else_mux_2_nl_X ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_else_mux_2_nl_S ;
  logic [2:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2;
  logic [2:0]  FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_T ;
  logic [2:0]  FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_PREV_VAL1 ;
  logic [2:0]  FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_PREV_VAL2 ;
  logic [2:0]  FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_R ;
  logic [2:0]  FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_X ;
  logic [2:0]  FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_C ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_S ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_t_flag ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_r_flag ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_S = 701 ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_T ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_PREV_VAL1 ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_PREV_VAL2 ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_R ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_X ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_C ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_S ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_t_flag ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_r_flag ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_S = 702 ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_T ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_PREV_VAL1 ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_PREV_VAL2 ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_R ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_X ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_C ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_S ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_t_flag ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_r_flag ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_S = 703 ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_T ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_PREV_VAL1 ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_PREV_VAL2 ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_R ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_X ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_C ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_S ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_t_flag ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_r_flag ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_S = 704 ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_T ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_PREV_VAL1 ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_PREV_VAL2 ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_R ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_X ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_C ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_S ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_t_flag ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_r_flag ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_S = 705 ;
  logic [9:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl;
  logic [9:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl_T ;
  logic [9:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl_R ;
  logic [9:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl_C ;
  logic [9:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl_X ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl_S ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_itm_7_1;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_itm_7_1_T ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_itm_7_1_R ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_itm_7_1_C ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_itm_7_1_X ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_itm_7_1_S ;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_T ;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R ;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C ;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_S ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_T ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_PREV_VAL1 ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_PREV_VAL2 ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_R ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_X ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_C ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_S ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_t_flag ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_r_flag ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_S = 706 ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_T ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_PREV_VAL1 ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_PREV_VAL2 ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_R ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_X ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_C ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_S ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_t_flag ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_r_flag ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_S = 707 ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_T ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_PREV_VAL1 ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_PREV_VAL2 ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_R ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_X ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_C ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_S ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_t_flag ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_r_flag ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_S = 708 ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_T ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_PREV_VAL1 ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_PREV_VAL2 ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_R ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_C ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_S ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_t_flag ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_r_flag ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_S = 709 ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_T ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_PREV_VAL1 ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_PREV_VAL2 ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_R ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_X ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_C ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_S ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_t_flag ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_r_flag ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_S = 710 ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_T ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_R ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_C ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_X ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_S ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_T ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_PREV_VAL1 ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_PREV_VAL2 ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_R ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_X ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_C ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_S ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_t_flag ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_r_flag ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_S = 711 ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_T ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_PREV_VAL1 ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_PREV_VAL2 ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_R ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_C ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_S ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_t_flag ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_r_flag ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_S = 712 ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_T ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_R ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_C ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_X ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_S ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_T ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_PREV_VAL1 ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_PREV_VAL2 ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_R ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_X ;
  logic  FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_C ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_S ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_t_flag ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_r_flag ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_S = 713 ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_T ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_R ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_C ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_X ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_S ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_T ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_R ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_C ;
  logic FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_X ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_S ;
  logic [5:0] FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3;
  logic [5:0] FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_T ;
  logic [5:0] FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_R ;
  logic [5:0] FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_C ;
  logic [5:0] FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_X ;
  logic [13:0] FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_S ;
  logic IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2;
  logic  IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_T ;
  logic  IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_PREV_VAL1 ;
  logic  IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_PREV_VAL2 ;
  logic  IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_R ;
  logic  IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_X ;
  logic  IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_C ;
  logic [13:0] IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_S ;
  logic IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_t_flag ;
  logic IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_r_flag ;
  assign IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_S = 714 ;
  logic IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp;
  logic IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_T ;
  logic IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_R ;
  logic IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_C ;
  logic IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_X ;
  logic [13:0] IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_S ;
  logic IsNaN_8U_23U_land_lpi_1_dfm_2;
  logic  IsNaN_8U_23U_land_lpi_1_dfm_2_T ;
  logic  IsNaN_8U_23U_land_lpi_1_dfm_2_PREV_VAL1 ;
  logic  IsNaN_8U_23U_land_lpi_1_dfm_2_PREV_VAL2 ;
  logic  IsNaN_8U_23U_land_lpi_1_dfm_2_R ;
  logic  IsNaN_8U_23U_land_lpi_1_dfm_2_X ;
  logic  IsNaN_8U_23U_land_lpi_1_dfm_2_C ;
  logic [13:0] IsNaN_8U_23U_land_lpi_1_dfm_2_S ;
  logic IsNaN_8U_23U_land_lpi_1_dfm_2_t_flag ;
  logic IsNaN_8U_23U_land_lpi_1_dfm_2_r_flag ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_2_S = 715 ;
  logic IsNaN_8U_23U_nor_itm_2;
  logic  IsNaN_8U_23U_nor_itm_2_T ;
  logic  IsNaN_8U_23U_nor_itm_2_PREV_VAL1 ;
  logic  IsNaN_8U_23U_nor_itm_2_PREV_VAL2 ;
  logic  IsNaN_8U_23U_nor_itm_2_R ;
  logic  IsNaN_8U_23U_nor_itm_2_X ;
  logic  IsNaN_8U_23U_nor_itm_2_C ;
  logic [13:0] IsNaN_8U_23U_nor_itm_2_S ;
  logic IsNaN_8U_23U_nor_itm_2_t_flag ;
  logic IsNaN_8U_23U_nor_itm_2_r_flag ;
  assign IsNaN_8U_23U_nor_itm_2_S = 716 ;
  logic IsNaN_8U_23U_nor_tmp;
  logic IsNaN_8U_23U_nor_tmp_T ;
  logic IsNaN_8U_23U_nor_tmp_R ;
  logic IsNaN_8U_23U_nor_tmp_C ;
  logic IsNaN_8U_23U_nor_tmp_X ;
  logic [13:0] IsNaN_8U_23U_nor_tmp_S ;
  logic and_14_nl;
  logic and_14_nl_T ;
  logic and_14_nl_R ;
  logic and_14_nl_C ;
  logic and_14_nl_X ;
  logic [13:0] and_14_nl_S ;
  logic and_42_cse;
  logic and_42_cse_T ;
  logic and_42_cse_R ;
  logic and_42_cse_C ;
  logic and_42_cse_X ;
  logic [13:0] and_42_cse_S ;
  logic and_48_rgt;
  logic and_48_rgt_T ;
  logic and_48_rgt_R ;
  logic and_48_rgt_C ;
  logic and_48_rgt_X ;
  logic [13:0] and_48_rgt_S ;
  logic and_50_rgt;
  logic and_50_rgt_T ;
  logic and_50_rgt_R ;
  logic and_50_rgt_C ;
  logic and_50_rgt_X ;
  logic [13:0] and_50_rgt_S ;
  logic and_53_rgt;
  logic and_53_rgt_T ;
  logic and_53_rgt_R ;
  logic and_53_rgt_C ;
  logic and_53_rgt_X ;
  logic [13:0] and_53_rgt_S ;
  logic and_76_nl;
  logic and_76_nl_T ;
  logic and_76_nl_R ;
  logic and_76_nl_C ;
  logic and_76_nl_X ;
  logic [13:0] and_76_nl_S ;
  logic and_77_cse;
  logic and_77_cse_T ;
  logic and_77_cse_R ;
  logic and_77_cse_C ;
  logic and_77_cse_X ;
  logic [13:0] and_77_cse_S ;
  logic and_80_nl;
  logic and_80_nl_T ;
  logic and_80_nl_R ;
  logic and_80_nl_C ;
  logic and_80_nl_X ;
  logic [13:0] and_80_nl_S ;
  logic and_81_nl;
  logic and_81_nl_T ;
  logic and_81_nl_R ;
  logic and_81_nl_C ;
  logic and_81_nl_X ;
  logic [13:0] and_81_nl_S ;
  logic and_82_nl;
  logic and_82_nl_T ;
  logic and_82_nl_R ;
  logic and_82_nl_C ;
  logic and_82_nl_X ;
  logic [13:0] and_82_nl_S ;
  logic and_86_nl;
  logic and_86_nl_T ;
  logic and_86_nl_R ;
  logic and_86_nl_C ;
  logic and_86_nl_X ;
  logic [13:0] and_86_nl_S ;
  logic and_dcpl_15;
  logic and_dcpl_15_T ;
  logic and_dcpl_15_R ;
  logic and_dcpl_15_C ;
  logic and_dcpl_15_X ;
  logic [13:0] and_dcpl_15_S ;
  logic and_dcpl_16;
  logic and_dcpl_16_T ;
  logic and_dcpl_16_R ;
  logic and_dcpl_16_C ;
  logic and_dcpl_16_X ;
  logic [13:0] and_dcpl_16_S ;
  logic and_dcpl_17;
  logic and_dcpl_17_T ;
  logic and_dcpl_17_R ;
  logic and_dcpl_17_C ;
  logic and_dcpl_17_X ;
  logic [13:0] and_dcpl_17_S ;
  logic and_dcpl_29;
  logic and_dcpl_29_T ;
  logic and_dcpl_29_R ;
  logic and_dcpl_29_C ;
  logic and_dcpl_29_X ;
  logic [13:0] and_dcpl_29_S ;
  logic and_dcpl_9;
  logic and_dcpl_9_T ;
  logic and_dcpl_9_R ;
  logic and_dcpl_9_C ;
  logic and_dcpl_9_X ;
  logic [13:0] and_dcpl_9_S ;
  logic and_nl;
  logic and_nl_T ;
  logic and_nl_R ;
  logic and_nl_C ;
  logic and_nl_X ;
  logic [13:0] and_nl_S ;
  logic and_tmp;
  logic and_tmp_T ;
  logic and_tmp_R ;
  logic and_tmp_C ;
  logic and_tmp_X ;
  logic [13:0] and_tmp_S ;
  output chn_a_rsc_lz;
  logic chn_a_rsc_lz ;
  output chn_a_rsc_lz_T ;
  logic chn_a_rsc_lz_T ;
  logic chn_a_rsc_lz_R ;
  logic chn_a_rsc_lz_C ;
  logic chn_a_rsc_lz_X ;
  logic [13:0] chn_a_rsc_lz_S ;
  input chn_a_rsc_lz_R0 ;
  input chn_a_rsc_lz_C0 ;
  input chn_a_rsc_lz_X0 ;
  output [13:0] chn_a_rsc_lz_S ;
  input chn_a_rsc_vz;
  input chn_a_rsc_vz_T ;
  input [13:0] chn_a_rsc_vz_S ;
  output chn_a_rsc_vz_R ;
  output chn_a_rsc_vz_X ;
  output chn_a_rsc_vz_C ;
  input [31:0] chn_a_rsc_z;
  input [31:0] chn_a_rsc_z_T ;
  input [13:0] chn_a_rsc_z_S ;
  output [31:0] chn_a_rsc_z_R ;
  output [31:0] chn_a_rsc_z_X ;
  output [31:0] chn_a_rsc_z_C ;
  logic chn_a_rsci_bawt;
  logic chn_a_rsci_bawt_T ;
  logic chn_a_rsci_bawt_R ;
  logic chn_a_rsci_bawt_C ;
  logic chn_a_rsci_bawt_X ;
  logic [13:0] chn_a_rsci_bawt_S ;
  logic [31:0] chn_a_rsci_d_mxwt;
  logic [31:0] chn_a_rsci_d_mxwt_T ;
  logic [31:0] chn_a_rsci_d_mxwt_R ;
  logic [31:0] chn_a_rsci_d_mxwt_C ;
  logic [31:0] chn_a_rsci_d_mxwt_X ;
  logic [13:0] chn_a_rsci_d_mxwt_S ;
  logic chn_a_rsci_iswt0;
  logic  chn_a_rsci_iswt0_T ;
  logic  chn_a_rsci_iswt0_PREV_VAL1 ;
  logic  chn_a_rsci_iswt0_PREV_VAL2 ;
  logic  chn_a_rsci_iswt0_R ;
  logic  chn_a_rsci_iswt0_X ;
  logic  chn_a_rsci_iswt0_C ;
  logic [13:0] chn_a_rsci_iswt0_S ;
  logic chn_a_rsci_iswt0_t_flag ;
  logic chn_a_rsci_iswt0_r_flag ;
  assign chn_a_rsci_iswt0_S = 717 ;
  logic chn_a_rsci_ld_core_psct;
  logic  chn_a_rsci_ld_core_psct_T ;
  logic  chn_a_rsci_ld_core_psct_PREV_VAL1 ;
  logic  chn_a_rsci_ld_core_psct_PREV_VAL2 ;
  logic  chn_a_rsci_ld_core_psct_R ;
  logic  chn_a_rsci_ld_core_psct_X ;
  logic  chn_a_rsci_ld_core_psct_C ;
  logic [13:0] chn_a_rsci_ld_core_psct_S ;
  logic chn_a_rsci_ld_core_psct_t_flag ;
  logic chn_a_rsci_ld_core_psct_r_flag ;
  assign chn_a_rsci_ld_core_psct_S = 718 ;
  logic chn_a_rsci_ld_core_psct_mx0c0;
  logic chn_a_rsci_ld_core_psct_mx0c0_T ;
  logic chn_a_rsci_ld_core_psct_mx0c0_R ;
  logic chn_a_rsci_ld_core_psct_mx0c0_C ;
  logic chn_a_rsci_ld_core_psct_mx0c0_X ;
  logic [13:0] chn_a_rsci_ld_core_psct_mx0c0_S ;
  input chn_a_rsci_oswt;
  input chn_a_rsci_oswt_T ;
  input [13:0] chn_a_rsci_oswt_S ;
  output chn_a_rsci_oswt_R ;
  output chn_a_rsci_oswt_X ;
  output chn_a_rsci_oswt_C ;
  output chn_a_rsci_oswt_unreg;
  logic chn_a_rsci_oswt_unreg ;
  output chn_a_rsci_oswt_unreg_T ;
  logic chn_a_rsci_oswt_unreg_T ;
  logic chn_a_rsci_oswt_unreg_R ;
  logic chn_a_rsci_oswt_unreg_C ;
  logic chn_a_rsci_oswt_unreg_X ;
  logic [13:0] chn_a_rsci_oswt_unreg_S ;
  input chn_a_rsci_oswt_unreg_R0 ;
  input chn_a_rsci_oswt_unreg_C0 ;
  input chn_a_rsci_oswt_unreg_X0 ;
  output [13:0] chn_a_rsci_oswt_unreg_S ;
  logic chn_a_rsci_wen_comp;
  logic chn_a_rsci_wen_comp_T ;
  logic chn_a_rsci_wen_comp_R ;
  logic chn_a_rsci_wen_comp_C ;
  logic chn_a_rsci_wen_comp_X ;
  logic [13:0] chn_a_rsci_wen_comp_S ;
  logic chn_o_and_cse;
  logic chn_o_and_cse_T ;
  logic chn_o_and_cse_R ;
  logic chn_o_and_cse_C ;
  logic chn_o_and_cse_X ;
  logic [13:0] chn_o_and_cse_S ;
  output chn_o_rsc_lz;
  logic chn_o_rsc_lz ;
  output chn_o_rsc_lz_T ;
  logic chn_o_rsc_lz_T ;
  logic chn_o_rsc_lz_R ;
  logic chn_o_rsc_lz_C ;
  logic chn_o_rsc_lz_X ;
  logic [13:0] chn_o_rsc_lz_S ;
  input chn_o_rsc_lz_R0 ;
  input chn_o_rsc_lz_C0 ;
  input chn_o_rsc_lz_X0 ;
  output [13:0] chn_o_rsc_lz_S ;
  input chn_o_rsc_vz;
  input chn_o_rsc_vz_T ;
  input [13:0] chn_o_rsc_vz_S ;
  output chn_o_rsc_vz_R ;
  output chn_o_rsc_vz_X ;
  output chn_o_rsc_vz_C ;
  output [16:0] chn_o_rsc_z;
  logic [16:0] chn_o_rsc_z ;
  output [16:0] chn_o_rsc_z_T ;
  logic [16:0] chn_o_rsc_z_T ;
  logic [16:0] chn_o_rsc_z_R ;
  logic [16:0] chn_o_rsc_z_C ;
  logic [16:0] chn_o_rsc_z_X ;
  logic [13:0] chn_o_rsc_z_S ;
  input [16:0] chn_o_rsc_z_R0 ;
  input [16:0] chn_o_rsc_z_C0 ;
  input [16:0] chn_o_rsc_z_X0 ;
  output [13:0] chn_o_rsc_z_S ;
  logic chn_o_rsci_bawt;
  logic chn_o_rsci_bawt_T ;
  logic chn_o_rsci_bawt_R ;
  logic chn_o_rsci_bawt_C ;
  logic chn_o_rsci_bawt_X ;
  logic [13:0] chn_o_rsci_bawt_S ;
  logic [4:0] chn_o_rsci_d_14_10;
  logic [4:0]  chn_o_rsci_d_14_10_T ;
  logic [4:0]  chn_o_rsci_d_14_10_PREV_VAL1 ;
  logic [4:0]  chn_o_rsci_d_14_10_PREV_VAL2 ;
  logic [4:0]  chn_o_rsci_d_14_10_R ;
  logic [4:0]  chn_o_rsci_d_14_10_X ;
  logic [4:0]  chn_o_rsci_d_14_10_C ;
  logic [13:0] chn_o_rsci_d_14_10_S ;
  logic chn_o_rsci_d_14_10_t_flag ;
  logic chn_o_rsci_d_14_10_r_flag ;
  assign chn_o_rsci_d_14_10_S = 719 ;
  logic chn_o_rsci_d_15;
  logic  chn_o_rsci_d_15_T ;
  logic  chn_o_rsci_d_15_PREV_VAL1 ;
  logic  chn_o_rsci_d_15_PREV_VAL2 ;
  logic  chn_o_rsci_d_15_R ;
  logic  chn_o_rsci_d_15_X ;
  logic  chn_o_rsci_d_15_C ;
  logic [13:0] chn_o_rsci_d_15_S ;
  logic chn_o_rsci_d_15_t_flag ;
  logic chn_o_rsci_d_15_r_flag ;
  assign chn_o_rsci_d_15_S = 720 ;
  logic chn_o_rsci_d_16;
  logic  chn_o_rsci_d_16_T ;
  logic  chn_o_rsci_d_16_PREV_VAL1 ;
  logic  chn_o_rsci_d_16_PREV_VAL2 ;
  logic  chn_o_rsci_d_16_R ;
  logic  chn_o_rsci_d_16_X ;
  logic  chn_o_rsci_d_16_C ;
  logic [13:0] chn_o_rsci_d_16_S ;
  logic chn_o_rsci_d_16_t_flag ;
  logic chn_o_rsci_d_16_r_flag ;
  assign chn_o_rsci_d_16_S = 721 ;
  logic [9:0] chn_o_rsci_d_9_0;
  logic [9:0]  chn_o_rsci_d_9_0_T ;
  logic [9:0]  chn_o_rsci_d_9_0_PREV_VAL1 ;
  logic [9:0]  chn_o_rsci_d_9_0_PREV_VAL2 ;
  logic [9:0]  chn_o_rsci_d_9_0_R ;
  logic [9:0]  chn_o_rsci_d_9_0_X ;
  logic [9:0]  chn_o_rsci_d_9_0_C ;
  logic [13:0] chn_o_rsci_d_9_0_S ;
  logic chn_o_rsci_d_9_0_t_flag ;
  logic chn_o_rsci_d_9_0_r_flag ;
  assign chn_o_rsci_d_9_0_S = 722 ;
  logic chn_o_rsci_d_9_0_mx0c1;
  logic chn_o_rsci_d_9_0_mx0c1_T ;
  logic chn_o_rsci_d_9_0_mx0c1_R ;
  logic chn_o_rsci_d_9_0_mx0c1_C ;
  logic chn_o_rsci_d_9_0_mx0c1_X ;
  logic [13:0] chn_o_rsci_d_9_0_mx0c1_S ;
  logic chn_o_rsci_iswt0;
  logic  chn_o_rsci_iswt0_T ;
  logic  chn_o_rsci_iswt0_PREV_VAL1 ;
  logic  chn_o_rsci_iswt0_PREV_VAL2 ;
  logic  chn_o_rsci_iswt0_R ;
  logic  chn_o_rsci_iswt0_X ;
  logic  chn_o_rsci_iswt0_C ;
  logic [13:0] chn_o_rsci_iswt0_S ;
  logic chn_o_rsci_iswt0_t_flag ;
  logic chn_o_rsci_iswt0_r_flag ;
  assign chn_o_rsci_iswt0_S = 723 ;
  input chn_o_rsci_oswt;
  input chn_o_rsci_oswt_T ;
  input [13:0] chn_o_rsci_oswt_S ;
  output chn_o_rsci_oswt_R ;
  output chn_o_rsci_oswt_X ;
  output chn_o_rsci_oswt_C ;
  output chn_o_rsci_oswt_unreg;
  logic chn_o_rsci_oswt_unreg ;
  output chn_o_rsci_oswt_unreg_T ;
  logic chn_o_rsci_oswt_unreg_T ;
  logic chn_o_rsci_oswt_unreg_R ;
  logic chn_o_rsci_oswt_unreg_C ;
  logic chn_o_rsci_oswt_unreg_X ;
  logic [13:0] chn_o_rsci_oswt_unreg_S ;
  input chn_o_rsci_oswt_unreg_R0 ;
  input chn_o_rsci_oswt_unreg_C0 ;
  input chn_o_rsci_oswt_unreg_X0 ;
  output [13:0] chn_o_rsci_oswt_unreg_S ;
  logic chn_o_rsci_wen_comp;
  logic chn_o_rsci_wen_comp_T ;
  logic chn_o_rsci_wen_comp_R ;
  logic chn_o_rsci_wen_comp_C ;
  logic chn_o_rsci_wen_comp_X ;
  logic [13:0] chn_o_rsci_wen_comp_S ;
  logic core_wen;
  logic core_wen_T ;
  logic core_wen_R ;
  logic core_wen_C ;
  logic core_wen_X ;
  logic [13:0] core_wen_S ;
  logic core_wten;
  logic core_wten_T ;
  logic core_wten_R ;
  logic core_wten_C ;
  logic core_wten_X ;
  logic [13:0] core_wten_S ;
  logic [1:0] fsm_output;
  logic [1:0] fsm_output_T ;
  logic [1:0] fsm_output_R ;
  logic [1:0] fsm_output_C ;
  logic [1:0] fsm_output_X ;
  logic [13:0] fsm_output_S ;
  logic main_stage_en_1;
  logic main_stage_en_1_T ;
  logic main_stage_en_1_R ;
  logic main_stage_en_1_C ;
  logic main_stage_en_1_X ;
  logic [13:0] main_stage_en_1_S ;
  logic main_stage_v_1;
  logic  main_stage_v_1_T ;
  logic  main_stage_v_1_PREV_VAL1 ;
  logic  main_stage_v_1_PREV_VAL2 ;
  logic  main_stage_v_1_R ;
  logic  main_stage_v_1_X ;
  logic  main_stage_v_1_C ;
  logic [13:0] main_stage_v_1_S ;
  logic main_stage_v_1_t_flag ;
  logic main_stage_v_1_r_flag ;
  assign main_stage_v_1_S = 724 ;
  logic main_stage_v_1_mx0c1;
  logic main_stage_v_1_mx0c1_T ;
  logic main_stage_v_1_mx0c1_R ;
  logic main_stage_v_1_mx0c1_C ;
  logic main_stage_v_1_mx0c1_X ;
  logic [13:0] main_stage_v_1_mx0c1_S ;
  logic main_stage_v_2;
  logic  main_stage_v_2_T ;
  logic  main_stage_v_2_PREV_VAL1 ;
  logic  main_stage_v_2_PREV_VAL2 ;
  logic  main_stage_v_2_R ;
  logic  main_stage_v_2_X ;
  logic  main_stage_v_2_C ;
  logic [13:0] main_stage_v_2_S ;
  logic main_stage_v_2_t_flag ;
  logic main_stage_v_2_r_flag ;
  assign main_stage_v_2_S = 725 ;
  logic main_stage_v_2_mx0c1;
  logic main_stage_v_2_mx0c1_T ;
  logic main_stage_v_2_mx0c1_R ;
  logic main_stage_v_2_mx0c1_C ;
  logic main_stage_v_2_mx0c1_X ;
  logic [13:0] main_stage_v_2_mx0c1_S ;
  logic mux_10_nl;
  logic mux_10_nl_T ;
  logic mux_10_nl_R ;
  logic mux_10_nl_C ;
  logic mux_10_nl_X ;
  logic [13:0] mux_10_nl_S ;
  logic mux_11_nl;
  logic mux_11_nl_T ;
  logic mux_11_nl_R ;
  logic mux_11_nl_C ;
  logic mux_11_nl_X ;
  logic [13:0] mux_11_nl_S ;
  logic mux_12_nl;
  logic mux_12_nl_T ;
  logic mux_12_nl_R ;
  logic mux_12_nl_C ;
  logic mux_12_nl_X ;
  logic [13:0] mux_12_nl_S ;
  logic mux_14_nl;
  logic mux_14_nl_T ;
  logic mux_14_nl_R ;
  logic mux_14_nl_C ;
  logic mux_14_nl_X ;
  logic [13:0] mux_14_nl_S ;
  logic mux_15_nl;
  logic mux_15_nl_T ;
  logic mux_15_nl_R ;
  logic mux_15_nl_C ;
  logic mux_15_nl_X ;
  logic [13:0] mux_15_nl_S ;
  logic mux_16_nl;
  logic mux_16_nl_T ;
  logic mux_16_nl_R ;
  logic mux_16_nl_C ;
  logic mux_16_nl_X ;
  logic [13:0] mux_16_nl_S ;
  logic mux_19_nl;
  logic mux_19_nl_T ;
  logic mux_19_nl_R ;
  logic mux_19_nl_C ;
  logic mux_19_nl_X ;
  logic [13:0] mux_19_nl_S ;
  logic mux_20_nl;
  logic mux_20_nl_T ;
  logic mux_20_nl_R ;
  logic mux_20_nl_C ;
  logic mux_20_nl_X ;
  logic [13:0] mux_20_nl_S ;
  logic mux_2_nl;
  logic mux_2_nl_T ;
  logic mux_2_nl_R ;
  logic mux_2_nl_C ;
  logic mux_2_nl_X ;
  logic [13:0] mux_2_nl_S ;
  logic mux_3_nl;
  logic mux_3_nl_T ;
  logic mux_3_nl_R ;
  logic mux_3_nl_C ;
  logic mux_3_nl_X ;
  logic [13:0] mux_3_nl_S ;
  logic mux_4_nl;
  logic mux_4_nl_T ;
  logic mux_4_nl_R ;
  logic mux_4_nl_C ;
  logic mux_4_nl_X ;
  logic [13:0] mux_4_nl_S ;
  logic mux_5_nl;
  logic mux_5_nl_T ;
  logic mux_5_nl_R ;
  logic mux_5_nl_C ;
  logic mux_5_nl_X ;
  logic [13:0] mux_5_nl_S ;
  logic mux_6_nl;
  logic mux_6_nl_T ;
  logic mux_6_nl_R ;
  logic mux_6_nl_C ;
  logic mux_6_nl_X ;
  logic [13:0] mux_6_nl_S ;
  logic mux_7_nl;
  logic mux_7_nl_T ;
  logic mux_7_nl_R ;
  logic mux_7_nl_C ;
  logic mux_7_nl_X ;
  logic [13:0] mux_7_nl_S ;
  logic mux_8_nl;
  logic mux_8_nl_T ;
  logic mux_8_nl_R ;
  logic mux_8_nl_C ;
  logic mux_8_nl_X ;
  logic [13:0] mux_8_nl_S ;
  logic mux_9_nl;
  logic mux_9_nl_T ;
  logic mux_9_nl_R ;
  logic mux_9_nl_C ;
  logic mux_9_nl_X ;
  logic [13:0] mux_9_nl_S ;
  logic mux_tmp;
  logic mux_tmp_T ;
  logic mux_tmp_R ;
  logic mux_tmp_C ;
  logic mux_tmp_X ;
  logic [13:0] mux_tmp_S ;
  logic mux_tmp_1;
  logic mux_tmp_1_T ;
  logic mux_tmp_1_R ;
  logic mux_tmp_1_C ;
  logic mux_tmp_1_X ;
  logic [13:0] mux_tmp_1_S ;
  logic mux_tmp_13;
  logic mux_tmp_13_T ;
  logic mux_tmp_13_R ;
  logic mux_tmp_13_C ;
  logic mux_tmp_13_X ;
  logic [13:0] mux_tmp_13_S ;
  logic mux_tmp_18;
  logic mux_tmp_18_T ;
  logic mux_tmp_18_R ;
  logic mux_tmp_18_C ;
  logic mux_tmp_18_X ;
  logic [13:0] mux_tmp_18_S ;
  logic nand_5_nl;
  logic nand_5_nl_T ;
  logic nand_5_nl_R ;
  logic nand_5_nl_C ;
  logic nand_5_nl_X ;
  logic [13:0] nand_5_nl_S ;
  logic nand_6_nl;
  logic nand_6_nl_T ;
  logic nand_6_nl_R ;
  logic nand_6_nl_C ;
  logic nand_6_nl_X ;
  logic [13:0] nand_6_nl_S ;
  logic [5:0] nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva;
  logic [5:0] nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_T ;
  logic [5:0] nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_R ;
  logic [5:0] nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_C ;
  logic [5:0] nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_X ;
  logic [13:0] nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_S ;
  logic [4:0] nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_lshift_rg_s;
  logic [4:0] nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_lshift_rg_s_T ;
  logic [4:0] nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_lshift_rg_s_R ;
  logic [4:0] nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_lshift_rg_s_C ;
  logic [4:0] nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_lshift_rg_s_X ;
  logic [13:0] nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_lshift_rg_s_S ;
  logic [22:0] nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_a;
  logic [22:0] nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_a_T ;
  logic [22:0] nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_a_R ;
  logic [22:0] nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_a_C ;
  logic [22:0] nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_a_X ;
  logic [13:0] nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_a_S ;
  logic [3:0] nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s;
  logic [3:0] nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_T ;
  logic [3:0] nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_R ;
  logic [3:0] nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_C ;
  logic [3:0] nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_X ;
  logic [13:0] nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_S ;
  logic [11:0] nl_FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva;
  logic [11:0] nl_FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_T ;
  logic [11:0] nl_FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_R ;
  logic [11:0] nl_FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_C ;
  logic [11:0] nl_FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_X ;
  logic [13:0] nl_FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_S ;
  logic [23:0] nl_FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl;
  logic [23:0] nl_FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_T ;
  logic [23:0] nl_FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_R ;
  logic [23:0] nl_FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_C ;
  logic [23:0] nl_FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_X ;
  logic [13:0] nl_FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_S ;
  logic [10:0] nl_FpMantRNE_24U_11U_else_acc_nl;
  logic [10:0] nl_FpMantRNE_24U_11U_else_acc_nl_T ;
  logic [10:0] nl_FpMantRNE_24U_11U_else_acc_nl_R ;
  logic [10:0] nl_FpMantRNE_24U_11U_else_acc_nl_C ;
  logic [10:0] nl_FpMantRNE_24U_11U_else_acc_nl_X ;
  logic [13:0] nl_FpMantRNE_24U_11U_else_acc_nl_S ;
  logic [9:0] nl_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl;
  logic [9:0] nl_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_T ;
  logic [9:0] nl_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R ;
  logic [9:0] nl_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C ;
  logic [9:0] nl_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X ;
  logic [13:0] nl_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_S ;
  logic [9:0] nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl;
  logic [9:0] nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_T ;
  logic [9:0] nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R ;
  logic [9:0] nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C ;
  logic [9:0] nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X ;
  logic [13:0] nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_S ;
  logic [2:0] nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2;
  logic [2:0] nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_T ;
  logic [2:0] nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_R ;
  logic [2:0] nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_C ;
  logic [2:0] nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_X ;
  logic [13:0] nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_S ;
  logic [8:0] nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl;
  logic [8:0] nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_T ;
  logic [8:0] nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R ;
  logic [8:0] nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C ;
  logic [8:0] nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X ;
  logic [13:0] nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_S ;
  logic [6:0] nl_FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3;
  logic [6:0] nl_FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_T ;
  logic [6:0] nl_FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_R ;
  logic [6:0] nl_FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_C ;
  logic [6:0] nl_FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_X ;
  logic [13:0] nl_FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_S ;
  logic [16:0] nl_HLS_fp32_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d;
  logic [16:0] nl_HLS_fp32_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_T ;
  logic [16:0] nl_HLS_fp32_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_R ;
  logic [16:0] nl_HLS_fp32_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_C ;
  logic [16:0] nl_HLS_fp32_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_X ;
  logic [13:0] nl_HLS_fp32_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_S ;
  logic nor_16_cse;
  logic nor_16_cse_T ;
  logic nor_16_cse_R ;
  logic nor_16_cse_C ;
  logic nor_16_cse_X ;
  logic [13:0] nor_16_cse_S ;
  logic nor_17_nl;
  logic nor_17_nl_T ;
  logic nor_17_nl_R ;
  logic nor_17_nl_C ;
  logic nor_17_nl_X ;
  logic [13:0] nor_17_nl_S ;
  logic nor_19_nl;
  logic nor_19_nl_T ;
  logic nor_19_nl_R ;
  logic nor_19_nl_C ;
  logic nor_19_nl_X ;
  logic [13:0] nor_19_nl_S ;
  logic nor_20_cse;
  logic nor_20_cse_T ;
  logic nor_20_cse_R ;
  logic nor_20_cse_C ;
  logic nor_20_cse_X ;
  logic [13:0] nor_20_cse_S ;
  logic nor_21_nl;
  logic nor_21_nl_T ;
  logic nor_21_nl_R ;
  logic nor_21_nl_C ;
  logic nor_21_nl_X ;
  logic [13:0] nor_21_nl_S ;
  logic nor_23_nl;
  logic nor_23_nl_T ;
  logic nor_23_nl_R ;
  logic nor_23_nl_C ;
  logic nor_23_nl_X ;
  logic [13:0] nor_23_nl_S ;
  logic nor_25_nl;
  logic nor_25_nl_T ;
  logic nor_25_nl_R ;
  logic nor_25_nl_C ;
  logic nor_25_nl_X ;
  logic [13:0] nor_25_nl_S ;
  logic nor_26_nl;
  logic nor_26_nl_T ;
  logic nor_26_nl_R ;
  logic nor_26_nl_C ;
  logic nor_26_nl_X ;
  logic [13:0] nor_26_nl_S ;
  logic nor_27_nl;
  logic nor_27_nl_T ;
  logic nor_27_nl_R ;
  logic nor_27_nl_C ;
  logic nor_27_nl_X ;
  logic [13:0] nor_27_nl_S ;
  logic nor_28_nl;
  logic nor_28_nl_T ;
  logic nor_28_nl_R ;
  logic nor_28_nl_C ;
  logic nor_28_nl_X ;
  logic [13:0] nor_28_nl_S ;
  logic nor_32_nl;
  logic nor_32_nl_T ;
  logic nor_32_nl_R ;
  logic nor_32_nl_C ;
  logic nor_32_nl_X ;
  logic [13:0] nor_32_nl_S ;
  logic nor_nl;
  logic nor_nl_T ;
  logic nor_nl_R ;
  logic nor_nl_C ;
  logic nor_nl_X ;
  logic [13:0] nor_nl_S ;
  logic not_tmp_20;
  logic not_tmp_20_T ;
  logic not_tmp_20_R ;
  logic not_tmp_20_C ;
  logic not_tmp_20_X ;
  logic [13:0] not_tmp_20_S ;
  input nvdla_core_clk;
  input nvdla_core_clk_T ;
  input [13:0] nvdla_core_clk_S ;
  output nvdla_core_clk_R ;
  output nvdla_core_clk_X ;
  output nvdla_core_clk_C ;
  input nvdla_core_rstn;
  input nvdla_core_rstn_T ;
  input [13:0] nvdla_core_rstn_S ;
  output nvdla_core_rstn_R ;
  output nvdla_core_rstn_X ;
  output nvdla_core_rstn_C ;
  logic or_16_nl;
  logic or_16_nl_T ;
  logic or_16_nl_R ;
  logic or_16_nl_C ;
  logic or_16_nl_X ;
  logic [13:0] or_16_nl_S ;
  logic or_2_nl;
  logic or_2_nl_T ;
  logic or_2_nl_R ;
  logic or_2_nl_C ;
  logic or_2_nl_X ;
  logic [13:0] or_2_nl_S ;
  logic or_34_nl;
  logic or_34_nl_T ;
  logic or_34_nl_R ;
  logic or_34_nl_C ;
  logic or_34_nl_X ;
  logic [13:0] or_34_nl_S ;
  logic or_9_cse;
  logic or_9_cse_T ;
  logic or_9_cse_R ;
  logic or_9_cse_C ;
  logic or_9_cse_X ;
  logic [13:0] or_9_cse_S ;
  logic or_dcpl_11;
  logic or_dcpl_11_T ;
  logic or_dcpl_11_R ;
  logic or_dcpl_11_C ;
  logic or_dcpl_11_X ;
  logic [13:0] or_dcpl_11_S ;
  logic or_tmp_11;
  logic or_tmp_11_T ;
  logic or_tmp_11_R ;
  logic or_tmp_11_C ;
  logic or_tmp_11_X ;
  logic [13:0] or_tmp_11_S ;
  logic or_tmp_24;
  logic or_tmp_24_T ;
  logic or_tmp_24_R ;
  logic or_tmp_24_C ;
  logic or_tmp_24_X ;
  logic [13:0] or_tmp_24_S ;
  logic or_tmp_28;
  logic or_tmp_28_T ;
  logic or_tmp_28_R ;
  logic or_tmp_28_C ;
  logic or_tmp_28_X ;
  logic [13:0] or_tmp_28_S ;
  logic or_tmp_3;
  logic or_tmp_3_T ;
  logic or_tmp_3_R ;
  logic or_tmp_3_C ;
  logic or_tmp_3_X ;
  logic [13:0] or_tmp_3_S ;
  logic or_tmp_50;
  logic or_tmp_50_T ;
  logic or_tmp_50_R ;
  logic or_tmp_50_C ;
  logic or_tmp_50_X ;
  logic [13:0] or_tmp_50_S ;
  logic or_tmp_9;
  logic or_tmp_9_T ;
  logic or_tmp_9_R ;
  logic or_tmp_9_C ;
  logic or_tmp_9_X ;
  logic [13:0] or_tmp_9_S ;
  logic reg_chn_o_rsci_ld_core_psct_cse;
  logic  reg_chn_o_rsci_ld_core_psct_cse_T ;
  logic  reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL1 ;
  logic  reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL2 ;
  logic  reg_chn_o_rsci_ld_core_psct_cse_R ;
  logic  reg_chn_o_rsci_ld_core_psct_cse_X ;
  logic  reg_chn_o_rsci_ld_core_psct_cse_C ;
  logic [13:0] reg_chn_o_rsci_ld_core_psct_cse_S ;
  logic reg_chn_o_rsci_ld_core_psct_cse_t_flag ;
  logic reg_chn_o_rsci_ld_core_psct_cse_r_flag ;
  assign reg_chn_o_rsci_ld_core_psct_cse_S = 726 ;
  assign nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2 = _108_[2:0] + 1'b1;
  assign nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_S = 0 ;
  logic [3:0] _108__C0 ;
  logic [3:0] _108__R0 ;
  logic [3:0] _108__X0 ;
  assign nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_T = _108__T [2:0] ;
  assign _108__C0 [2:0] = nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_C ;
  assign _108__R0 [2:0] = nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_R ;
  assign _108__X0 [2:0] = nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_X ;
  assign FpMantRNE_24U_11U_else_acc_nl = FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1[22:13] + FpMantRNE_24U_11U_else_carry_sva_2;
  assign FpMantRNE_24U_11U_else_acc_nl_S = 0 ;
  logic [28:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C0 ;
  logic [28:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R0 ;
  logic [28:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X0 ;
  logic [0:0] FpMantRNE_24U_11U_else_carry_sva_2_C0 ;
  logic [0:0] FpMantRNE_24U_11U_else_carry_sva_2_R0 ;
  logic [0:0] FpMantRNE_24U_11U_else_carry_sva_2_X0 ;
  assign FpMantRNE_24U_11U_else_acc_nl_T = FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_T [22:13] | FpMantRNE_24U_11U_else_carry_sva_2_T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C0 [22:13] = FpMantRNE_24U_11U_else_acc_nl_C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X0 [22:13] = FpMantRNE_24U_11U_else_acc_nl_X ;
  assign FpMantRNE_24U_11U_else_carry_sva_2_C0 = FpMantRNE_24U_11U_else_acc_nl_C ;
  assign FpMantRNE_24U_11U_else_carry_sva_2_X0 = FpMantRNE_24U_11U_else_acc_nl_X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R0 [22:13] = FpMantRNE_24U_11U_else_acc_nl_R | ( FpMantRNE_24U_11U_else_acc_nl_C & FpMantRNE_24U_11U_else_carry_sva_2_T );
  assign FpMantRNE_24U_11U_else_carry_sva_2_R0 = FpMantRNE_24U_11U_else_acc_nl_R | ( FpMantRNE_24U_11U_else_acc_nl_C & FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_T [22:13] );
  assign nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_lshift_rg_s = FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva + 5'b11111;
  assign nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_lshift_rg_s_S = 0 ;
  logic [4:0] FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_C0 ;
  logic [4:0] FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_R0 ;
  logic [4:0] FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_X0 ;
  assign nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_lshift_rg_s_T = FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_T ;
  assign FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_C0 = nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_lshift_rg_s_C ;
  assign FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_R0 = nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_lshift_rg_s_R ;
  assign FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_X0 = nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_lshift_rg_s_X ;
  logic [8:0] fangyuan0;
  logic [8:0] fangyuan0_T ;
  logic [8:0] fangyuan0_R ;
  logic [8:0] fangyuan0_C ;
  logic [8:0] fangyuan0_X ;
  assign fangyuan0 = { 1'b1, _143_ };
  assign fangyuan0_T = {  1'h0 , _143__T  };
  logic [13:0] fangyuan0_S ;
  assign fangyuan0_S = 0 ;
  logic [7:0] _143__R0 ;
  logic [7:0] _143__X0 ;
  logic [7:0] _143__C0 ;
  assign _143__R0 = fangyuan0_R [7:0] ;
  assign _143__X0 = fangyuan0_X [7:0] ;
  assign _143__C0 = fangyuan0_C [7:0] ;

  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl = fangyuan0 + 7'b1100001;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_S = 0 ;
  logic [8:0] fangyuan0_C0 ;
  logic [8:0] fangyuan0_R0 ;
  logic [8:0] fangyuan0_X0 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_T = fangyuan0_T ;
  assign fangyuan0_C0 = FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C ;
  assign fangyuan0_R0 = FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R ;
  assign fangyuan0_X0 = FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl = chn_a_rsci_d_mxwt[30:24] + 8'b11010101;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_S = 0 ;
  logic [31:0] chn_a_rsci_d_mxwt_C0 ;
  logic [31:0] chn_a_rsci_d_mxwt_R0 ;
  logic [31:0] chn_a_rsci_d_mxwt_X0 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_T = chn_a_rsci_d_mxwt_T [30:24] ;
  assign chn_a_rsci_d_mxwt_C0 [30:24] = FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C ;
  assign chn_a_rsci_d_mxwt_R0 [30:24] = FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R ;
  assign chn_a_rsci_d_mxwt_X0 [30:24] = FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl = chn_a_rsci_d_mxwt[30:23] + 9'b101100001;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_S = 0 ;
  assign { chn_a_rsci_d_mxwt_R0 [0], chn_a_rsci_d_mxwt_R0 [1], chn_a_rsci_d_mxwt_R0 [2], chn_a_rsci_d_mxwt_R0 [3], chn_a_rsci_d_mxwt_R0 [4], chn_a_rsci_d_mxwt_R0 [5], chn_a_rsci_d_mxwt_R0 [6], chn_a_rsci_d_mxwt_R0 [7], chn_a_rsci_d_mxwt_R0 [8], chn_a_rsci_d_mxwt_R0 [9], chn_a_rsci_d_mxwt_R0 [10], chn_a_rsci_d_mxwt_R0 [11], chn_a_rsci_d_mxwt_R0 [12], chn_a_rsci_d_mxwt_R0 [13], chn_a_rsci_d_mxwt_R0 [14], chn_a_rsci_d_mxwt_R0 [15], chn_a_rsci_d_mxwt_R0 [16], chn_a_rsci_d_mxwt_R0 [17], chn_a_rsci_d_mxwt_R0 [18], chn_a_rsci_d_mxwt_R0 [19], chn_a_rsci_d_mxwt_R0 [20], chn_a_rsci_d_mxwt_R0 [21], chn_a_rsci_d_mxwt_R0 [22], chn_a_rsci_d_mxwt_R0 [23], chn_a_rsci_d_mxwt_R0 [31:31] } = 0;
  assign { chn_a_rsci_d_mxwt_X0 [0], chn_a_rsci_d_mxwt_X0 [1], chn_a_rsci_d_mxwt_X0 [2], chn_a_rsci_d_mxwt_X0 [3], chn_a_rsci_d_mxwt_X0 [4], chn_a_rsci_d_mxwt_X0 [5], chn_a_rsci_d_mxwt_X0 [6], chn_a_rsci_d_mxwt_X0 [7], chn_a_rsci_d_mxwt_X0 [8], chn_a_rsci_d_mxwt_X0 [9], chn_a_rsci_d_mxwt_X0 [10], chn_a_rsci_d_mxwt_X0 [11], chn_a_rsci_d_mxwt_X0 [12], chn_a_rsci_d_mxwt_X0 [13], chn_a_rsci_d_mxwt_X0 [14], chn_a_rsci_d_mxwt_X0 [15], chn_a_rsci_d_mxwt_X0 [16], chn_a_rsci_d_mxwt_X0 [17], chn_a_rsci_d_mxwt_X0 [18], chn_a_rsci_d_mxwt_X0 [19], chn_a_rsci_d_mxwt_X0 [20], chn_a_rsci_d_mxwt_X0 [21], chn_a_rsci_d_mxwt_X0 [22], chn_a_rsci_d_mxwt_X0 [23], chn_a_rsci_d_mxwt_X0 [31:31] } = 0;
  assign { chn_a_rsci_d_mxwt_C0 [0], chn_a_rsci_d_mxwt_C0 [1], chn_a_rsci_d_mxwt_C0 [2], chn_a_rsci_d_mxwt_C0 [3], chn_a_rsci_d_mxwt_C0 [4], chn_a_rsci_d_mxwt_C0 [5], chn_a_rsci_d_mxwt_C0 [6], chn_a_rsci_d_mxwt_C0 [7], chn_a_rsci_d_mxwt_C0 [8], chn_a_rsci_d_mxwt_C0 [9], chn_a_rsci_d_mxwt_C0 [10], chn_a_rsci_d_mxwt_C0 [11], chn_a_rsci_d_mxwt_C0 [12], chn_a_rsci_d_mxwt_C0 [13], chn_a_rsci_d_mxwt_C0 [14], chn_a_rsci_d_mxwt_C0 [15], chn_a_rsci_d_mxwt_C0 [16], chn_a_rsci_d_mxwt_C0 [17], chn_a_rsci_d_mxwt_C0 [18], chn_a_rsci_d_mxwt_C0 [19], chn_a_rsci_d_mxwt_C0 [20], chn_a_rsci_d_mxwt_C0 [21], chn_a_rsci_d_mxwt_C0 [22], chn_a_rsci_d_mxwt_C0 [23], chn_a_rsci_d_mxwt_C0 [31:31] } = 0;
  logic [31:0] chn_a_rsci_d_mxwt_C1 ;
  logic [31:0] chn_a_rsci_d_mxwt_R1 ;
  logic [31:0] chn_a_rsci_d_mxwt_X1 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_T = chn_a_rsci_d_mxwt_T [30:23] ;
  assign chn_a_rsci_d_mxwt_C1 [30:23] = FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C ;
  assign chn_a_rsci_d_mxwt_R1 [30:23] = FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R ;
  assign chn_a_rsci_d_mxwt_X1 [30:23] = FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X ;
  assign FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva = FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2 + FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2;
  assign FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_S = 0 ;
  logic [10:0] FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_C0 ;
  logic [10:0] FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_R0 ;
  logic [10:0] FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_X0 ;
  logic [0:0] FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_C0 ;
  logic [0:0] FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_R0 ;
  logic [0:0] FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_X0 ;
  assign FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_T = FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_T | FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_T ;
  assign FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_C0 = FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_C ;
  assign FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_X0 = FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_X ;
  assign FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_C0 = FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_C ;
  assign FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_X0 = FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_X ;
  assign FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_R0 = FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_R | ( FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_C & FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_T );
  assign FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_R0 = FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_R | ( FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_C & FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_T );
  logic [5:0] fangyuan1;
  logic [5:0] fangyuan1_T ;
  logic [5:0] fangyuan1_R ;
  logic [5:0] fangyuan1_C ;
  logic [5:0] fangyuan1_X ;
  assign fangyuan1 = { _001_, FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1[27:23] };
  assign fangyuan1_T = {  _001__T , FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_T [27:23]  };
  logic [13:0] fangyuan1_S ;
  assign fangyuan1_S = 0 ;
  logic [0:0] _001__R0 ;
  logic [0:0] _001__X0 ;
  logic [0:0] _001__C0 ;
  assign _001__R0 = fangyuan1_R [5:5] ;
  assign _001__X0 = fangyuan1_X [5:5] ;
  assign _001__C0 = fangyuan1_C [5:5] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R0 [27:23] = fangyuan1_R [4:0] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X0 [27:23] = fangyuan1_X [4:0] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C0 [27:23] = fangyuan1_C [4:0] ;

  assign FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3 = fangyuan1 + 1'b1;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_S = 0 ;
  logic [5:0] fangyuan1_C0 ;
  logic [5:0] fangyuan1_R0 ;
  logic [5:0] fangyuan1_X0 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_T = fangyuan1_T ;
  assign fangyuan1_C0 = FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_C ;
  assign fangyuan1_R0 = FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_R ;
  assign fangyuan1_X0 = FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_X ;
  assign FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl = FpMantDecShiftRight_23U_8U_10U_guard_mask_sva[22:0] + 23'b11111111111111111111111;
  assign FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_S = 0 ;
  logic [23:0] FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_C0 ;
  logic [23:0] FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_R0 ;
  logic [23:0] FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_X0 ;
  assign FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_T = FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_T [22:0] ;
  assign FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_C0 [22:0] = FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_C ;
  assign FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_R0 [22:0] = FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_R ;
  assign FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_X0 [22:0] = FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_X ;
  logic [3:0] fangyuan2;
  logic [3:0] fangyuan2_T ;
  logic [3:0] fangyuan2_R ;
  logic [3:0] fangyuan2_C ;
  logic [3:0] fangyuan2_X ;
  assign fangyuan2 = { FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2, nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s[0] };
  assign fangyuan2_T = {  FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_T , nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_T [0]  };
  logic [13:0] fangyuan2_S ;
  assign fangyuan2_S = 0 ;
  logic [2:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_R0 ;
  logic [2:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_X0 ;
  logic [2:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_C0 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_R0 = fangyuan2_R [3:1] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_X0 = fangyuan2_X [3:1] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_C0 = fangyuan2_C [3:1] ;
  logic [3:0] nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_R0 ;
  logic [3:0] nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_X0 ;
  logic [3:0] nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_C0 ;
  assign nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_R0 [0:0] = fangyuan2_R [0:0] ;
  assign nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_X0 [0:0] = fangyuan2_X [0:0] ;
  assign nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_C0 [0:0] = fangyuan2_C [0:0] ;

  assign FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva = fangyuan2 + 4'b1101;
  assign FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_S = 0 ;
  logic [3:0] fangyuan2_C0 ;
  logic [3:0] fangyuan2_R0 ;
  logic [3:0] fangyuan2_X0 ;
  assign FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_T = fangyuan2_T ;
  assign fangyuan2_C0 = FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_C ;
  assign fangyuan2_R0 = FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_R ;
  assign fangyuan2_X0 = FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_X ;
  assign _049_ = _048_ & mux_5_nl;
  assign _049__S = 0 ;
  logic [0:0] _048__C0 ;
  logic [0:0] _048__R0 ;
  logic [0:0] _048__X0 ;
  logic [0:0] mux_5_nl_C0 ;
  logic [0:0] mux_5_nl_R0 ;
  logic [0:0] mux_5_nl_X0 ;
  assign _049__T = _048__T | mux_5_nl_T ;
  assign _048__C0 = _049__C ;
  assign _048__X0 = _049__X ;
  assign mux_5_nl_C0 = _049__C ;
  assign mux_5_nl_X0 = _049__X ;
  assign _048__R0 = ( _049__R | _049__C & mux_5_nl_T ) & { 1{ mux_5_nl != 0 }} ;
  assign mux_5_nl_R0 = ( _049__R | _049__C & _048__T ) & { 1{ _048_ != 0 }} ;
  assign _050_ = _048_ & mux_7_nl;
  assign _050__S = 0 ;
  logic [0:0] _048__C1 ;
  logic [0:0] _048__R1 ;
  logic [0:0] _048__X1 ;
  logic [0:0] mux_7_nl_C0 ;
  logic [0:0] mux_7_nl_R0 ;
  logic [0:0] mux_7_nl_X0 ;
  assign _050__T = _048__T | mux_7_nl_T ;
  assign _048__C1 = _050__C ;
  assign _048__X1 = _050__X ;
  assign mux_7_nl_C0 = _050__C ;
  assign mux_7_nl_X0 = _050__X ;
  assign _048__R1 = ( _050__R | _050__C & mux_7_nl_T ) & { 1{ mux_7_nl != 0 }} ;
  assign mux_7_nl_R0 = ( _050__R | _050__C & _048__T ) & { 1{ _048_ != 0 }} ;
  assign _051_ = _048_ & mux_9_nl;
  assign _051__S = 0 ;
  logic [0:0] _048__C2 ;
  logic [0:0] _048__R2 ;
  logic [0:0] _048__X2 ;
  logic [0:0] mux_9_nl_C0 ;
  logic [0:0] mux_9_nl_R0 ;
  logic [0:0] mux_9_nl_X0 ;
  assign _051__T = _048__T | mux_9_nl_T ;
  assign _048__C2 = _051__C ;
  assign _048__X2 = _051__X ;
  assign mux_9_nl_C0 = _051__C ;
  assign mux_9_nl_X0 = _051__X ;
  assign _048__R2 = ( _051__R | _051__C & mux_9_nl_T ) & { 1{ mux_9_nl != 0 }} ;
  assign mux_9_nl_R0 = ( _051__R | _051__C & _048__T ) & { 1{ _048_ != 0 }} ;
  assign _052_ = _048_ & mux_10_nl;
  assign _052__S = 0 ;
  logic [0:0] _048__C3 ;
  logic [0:0] _048__R3 ;
  logic [0:0] _048__X3 ;
  logic [0:0] mux_10_nl_C0 ;
  logic [0:0] mux_10_nl_R0 ;
  logic [0:0] mux_10_nl_X0 ;
  assign _052__T = _048__T | mux_10_nl_T ;
  assign _048__C3 = _052__C ;
  assign _048__X3 = _052__X ;
  assign mux_10_nl_C0 = _052__C ;
  assign mux_10_nl_X0 = _052__X ;
  assign _048__R3 = ( _052__R | _052__C & mux_10_nl_T ) & { 1{ mux_10_nl != 0 }} ;
  assign mux_10_nl_R0 = ( _052__R | _052__C & _048__T ) & { 1{ _048_ != 0 }} ;
  assign _053_ = core_wen & _153_;
  assign _053__S = 0 ;
  logic [0:0] core_wen_C0 ;
  logic [0:0] core_wen_R0 ;
  logic [0:0] core_wen_X0 ;
  logic [0:0] _153__C0 ;
  logic [0:0] _153__R0 ;
  logic [0:0] _153__X0 ;
  assign _053__T = core_wen_T | _153__T ;
  assign core_wen_C0 = _053__C ;
  assign core_wen_X0 = _053__X ;
  assign _153__C0 = _053__C ;
  assign _153__X0 = _053__X ;
  assign core_wen_R0 = ( _053__R | _053__C & _153__T ) & { 1{ _153_ != 0 }} ;
  assign _153__R0 = ( _053__R | _053__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _054_ = _154_ & _156_;
  assign _054__S = 0 ;
  logic [0:0] _154__C0 ;
  logic [0:0] _154__R0 ;
  logic [0:0] _154__X0 ;
  logic [0:0] _156__C0 ;
  logic [0:0] _156__R0 ;
  logic [0:0] _156__X0 ;
  assign _054__T = _154__T | _156__T ;
  assign _154__C0 = _054__C ;
  assign _154__X0 = _054__X ;
  assign _156__C0 = _054__C ;
  assign _156__X0 = _054__X ;
  assign _154__R0 = ( _054__R | _054__C & _156__T ) & { 1{ _156_ != 0 }} ;
  assign _156__R0 = ( _054__R | _054__C & _154__T ) & { 1{ _154_ != 0 }} ;
  assign _055_ = _048_ & mux_15_nl;
  assign _055__S = 0 ;
  logic [0:0] _048__C4 ;
  logic [0:0] _048__R4 ;
  logic [0:0] _048__X4 ;
  logic [0:0] mux_15_nl_C0 ;
  logic [0:0] mux_15_nl_R0 ;
  logic [0:0] mux_15_nl_X0 ;
  assign _055__T = _048__T | mux_15_nl_T ;
  assign _048__C4 = _055__C ;
  assign _048__X4 = _055__X ;
  assign mux_15_nl_C0 = _055__C ;
  assign mux_15_nl_X0 = _055__X ;
  assign _048__R4 = ( _055__R | _055__C & mux_15_nl_T ) & { 1{ mux_15_nl != 0 }} ;
  assign mux_15_nl_R0 = ( _055__R | _055__C & _048__T ) & { 1{ _048_ != 0 }} ;
  assign _056_ = _048_ & mux_tmp_13;
  assign _056__S = 0 ;
  logic [0:0] _048__C5 ;
  logic [0:0] _048__R5 ;
  logic [0:0] _048__X5 ;
  logic [0:0] mux_tmp_13_C0 ;
  logic [0:0] mux_tmp_13_R0 ;
  logic [0:0] mux_tmp_13_X0 ;
  assign _056__T = _048__T | mux_tmp_13_T ;
  assign _048__C5 = _056__C ;
  assign _048__X5 = _056__X ;
  assign mux_tmp_13_C0 = _056__C ;
  assign mux_tmp_13_X0 = _056__X ;
  assign _048__R5 = ( _056__R | _056__C & mux_tmp_13_T ) & { 1{ mux_tmp_13 != 0 }} ;
  assign mux_tmp_13_R0 = ( _056__R | _056__C & _048__T ) & { 1{ _048_ != 0 }} ;
  assign _057_ = FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_else_mux_2_nl & _118_;
  assign _057__S = 0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_else_mux_2_nl_C0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_else_mux_2_nl_R0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_else_mux_2_nl_X0 ;
  logic [0:0] _118__C0 ;
  logic [0:0] _118__R0 ;
  logic [0:0] _118__X0 ;
  assign _057__T = FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_else_mux_2_nl_T | _118__T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_else_mux_2_nl_C0 = _057__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_else_mux_2_nl_X0 = _057__X ;
  assign _118__C0 = _057__C ;
  assign _118__X0 = _057__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_else_mux_2_nl_R0 = ( _057__R | _057__C & _118__T ) & { 1{ _118_ != 0 }} ;
  assign _118__R0 = ( _057__R | _057__C & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_else_mux_2_nl_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_else_mux_2_nl != 0 }} ;
  assign _058_ = _048_ & not_tmp_20;
  assign _058__S = 0 ;
  logic [0:0] _048__C6 ;
  logic [0:0] _048__R6 ;
  logic [0:0] _048__X6 ;
  logic [0:0] not_tmp_20_C0 ;
  logic [0:0] not_tmp_20_R0 ;
  logic [0:0] not_tmp_20_X0 ;
  assign _058__T = _048__T | not_tmp_20_T ;
  assign _048__C6 = _058__C ;
  assign _048__X6 = _058__X ;
  assign not_tmp_20_C0 = _058__C ;
  assign not_tmp_20_X0 = _058__X ;
  assign _048__R6 = ( _058__R | _058__C & not_tmp_20_T ) & { 1{ not_tmp_20 != 0 }} ;
  assign not_tmp_20_R0 = ( _058__R | _058__C & _048__T ) & { 1{ _048_ != 0 }} ;
  assign _059_ = nor_16_cse & or_9_cse;
  assign _059__S = 0 ;
  logic [0:0] nor_16_cse_C0 ;
  logic [0:0] nor_16_cse_R0 ;
  logic [0:0] nor_16_cse_X0 ;
  logic [0:0] or_9_cse_C0 ;
  logic [0:0] or_9_cse_R0 ;
  logic [0:0] or_9_cse_X0 ;
  assign _059__T = nor_16_cse_T | or_9_cse_T ;
  assign nor_16_cse_C0 = _059__C ;
  assign nor_16_cse_X0 = _059__X ;
  assign or_9_cse_C0 = _059__C ;
  assign or_9_cse_X0 = _059__X ;
  assign nor_16_cse_R0 = ( _059__R | _059__C & or_9_cse_T ) & { 1{ or_9_cse != 0 }} ;
  assign or_9_cse_R0 = ( _059__R | _059__C & nor_16_cse_T ) & { 1{ nor_16_cse != 0 }} ;
  assign _060_ = core_wen & _158_;
  assign _060__S = 0 ;
  logic [0:0] core_wen_C1 ;
  logic [0:0] core_wen_R1 ;
  logic [0:0] core_wen_X1 ;
  logic [0:0] _158__C0 ;
  logic [0:0] _158__R0 ;
  logic [0:0] _158__X0 ;
  assign _060__T = core_wen_T | _158__T ;
  assign core_wen_C1 = _060__C ;
  assign core_wen_X1 = _060__X ;
  assign _158__C0 = _060__C ;
  assign _158__X0 = _060__X ;
  assign core_wen_R1 = ( _060__R | _060__C & _158__T ) & { 1{ _158_ != 0 }} ;
  assign _158__R0 = ( _060__R | _060__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _061_ = _060_ & mux_19_nl;
  assign _061__S = 0 ;
  logic [0:0] _060__C0 ;
  logic [0:0] _060__R0 ;
  logic [0:0] _060__X0 ;
  logic [0:0] mux_19_nl_C0 ;
  logic [0:0] mux_19_nl_R0 ;
  logic [0:0] mux_19_nl_X0 ;
  assign _061__T = _060__T | mux_19_nl_T ;
  assign _060__C0 = _061__C ;
  assign _060__X0 = _061__X ;
  assign mux_19_nl_C0 = _061__C ;
  assign mux_19_nl_X0 = _061__X ;
  assign _060__R0 = ( _061__R | _061__C & mux_19_nl_T ) & { 1{ mux_19_nl != 0 }} ;
  assign mux_19_nl_R0 = ( _061__R | _061__C & _060__T ) & { 1{ _060_ != 0 }} ;
  assign _062_ = core_wen & _161_;
  assign _062__S = 0 ;
  logic [0:0] core_wen_C2 ;
  logic [0:0] core_wen_R2 ;
  logic [0:0] core_wen_X2 ;
  logic [0:0] _161__C0 ;
  logic [0:0] _161__R0 ;
  logic [0:0] _161__X0 ;
  assign _062__T = core_wen_T | _161__T ;
  assign core_wen_C2 = _062__C ;
  assign core_wen_X2 = _062__X ;
  assign _161__C0 = _062__C ;
  assign _161__X0 = _062__X ;
  assign core_wen_R2 = ( _062__R | _062__C & _161__T ) & { 1{ _161_ != 0 }} ;
  assign _161__R0 = ( _062__R | _062__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _063_ = _062_ & not_tmp_20;
  assign _063__S = 0 ;
  logic [0:0] _062__C0 ;
  logic [0:0] _062__R0 ;
  logic [0:0] _062__X0 ;
  logic [0:0] not_tmp_20_C1 ;
  logic [0:0] not_tmp_20_R1 ;
  logic [0:0] not_tmp_20_X1 ;
  assign _063__T = _062__T | not_tmp_20_T ;
  assign _062__C0 = _063__C ;
  assign _062__X0 = _063__X ;
  assign not_tmp_20_C1 = _063__C ;
  assign not_tmp_20_X1 = _063__X ;
  assign _062__R0 = ( _063__R | _063__C & not_tmp_20_T ) & { 1{ not_tmp_20 != 0 }} ;
  assign not_tmp_20_R1 = ( _063__R | _063__C & _062__T ) & { 1{ _062_ != 0 }} ;
  assign _064_ = core_wen & _162_;
  assign _064__S = 0 ;
  logic [0:0] core_wen_C3 ;
  logic [0:0] core_wen_R3 ;
  logic [0:0] core_wen_X3 ;
  logic [0:0] _162__C0 ;
  logic [0:0] _162__R0 ;
  logic [0:0] _162__X0 ;
  assign _064__T = core_wen_T | _162__T ;
  assign core_wen_C3 = _064__C ;
  assign core_wen_X3 = _064__X ;
  assign _162__C0 = _064__C ;
  assign _162__X0 = _064__X ;
  assign core_wen_R3 = ( _064__R | _064__C & _162__T ) & { 1{ _162_ != 0 }} ;
  assign _162__R0 = ( _064__R | _064__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _065_ = _064_ & mux_tmp;
  assign _065__S = 0 ;
  logic [0:0] _064__C0 ;
  logic [0:0] _064__R0 ;
  logic [0:0] _064__X0 ;
  logic [0:0] mux_tmp_C0 ;
  logic [0:0] mux_tmp_R0 ;
  logic [0:0] mux_tmp_X0 ;
  assign _065__T = _064__T | mux_tmp_T ;
  assign _064__C0 = _065__C ;
  assign _064__X0 = _065__X ;
  assign mux_tmp_C0 = _065__C ;
  assign mux_tmp_X0 = _065__X ;
  assign _064__R0 = ( _065__R | _065__C & mux_tmp_T ) & { 1{ mux_tmp != 0 }} ;
  assign mux_tmp_R0 = ( _065__R | _065__C & _064__T ) & { 1{ _064_ != 0 }} ;
  assign _066_ = _048_ & mux_20_nl;
  assign _066__S = 0 ;
  logic [0:0] _048__C7 ;
  logic [0:0] _048__R7 ;
  logic [0:0] _048__X7 ;
  logic [0:0] mux_20_nl_C0 ;
  logic [0:0] mux_20_nl_R0 ;
  logic [0:0] mux_20_nl_X0 ;
  assign _066__T = _048__T | mux_20_nl_T ;
  assign _048__C7 = _066__C ;
  assign _048__X7 = _066__X ;
  assign mux_20_nl_C0 = _066__C ;
  assign mux_20_nl_X0 = _066__X ;
  assign _048__R7 = ( _066__R | _066__C & mux_20_nl_T ) & { 1{ mux_20_nl != 0 }} ;
  assign mux_20_nl_R0 = ( _066__R | _066__C & _048__T ) & { 1{ _048_ != 0 }} ;
  assign _067_ = and_dcpl_29 & _119_;
  assign _067__S = 0 ;
  logic [0:0] and_dcpl_29_C0 ;
  logic [0:0] and_dcpl_29_R0 ;
  logic [0:0] and_dcpl_29_X0 ;
  logic [0:0] _119__C0 ;
  logic [0:0] _119__R0 ;
  logic [0:0] _119__X0 ;
  assign _067__T = and_dcpl_29_T | _119__T ;
  assign and_dcpl_29_C0 = _067__C ;
  assign and_dcpl_29_X0 = _067__X ;
  assign _119__C0 = _067__C ;
  assign _119__X0 = _067__X ;
  assign and_dcpl_29_R0 = ( _067__R | _067__C & _119__T ) & { 1{ _119_ != 0 }} ;
  assign _119__R0 = ( _067__R | _067__C & and_dcpl_29_T ) & { 1{ and_dcpl_29 != 0 }} ;
  assign _068_ = _067_ & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl[8];
  assign _068__S = 0 ;
  logic [0:0] _067__C0 ;
  logic [0:0] _067__R0 ;
  logic [0:0] _067__X0 ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C0 ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R0 ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X0 ;
  assign _068__T = _067__T | FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_T [8] ;
  assign _067__C0 = _068__C ;
  assign _067__X0 = _068__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C0 [8] = _068__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X0 [8] = _068__X ;
  assign _067__R0 = ( _068__R | _068__C & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_T [8] ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl[8] != 0 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R0 [8] = ( _068__R | _068__C & _067__T ) & { 1{ _067_ != 0 }} ;
  assign _069_ = core_wen & _163_;
  assign _069__S = 0 ;
  logic [0:0] core_wen_C4 ;
  logic [0:0] core_wen_R4 ;
  logic [0:0] core_wen_X4 ;
  logic [0:0] _163__C0 ;
  logic [0:0] _163__R0 ;
  logic [0:0] _163__X0 ;
  assign _069__T = core_wen_T | _163__T ;
  assign core_wen_C4 = _069__C ;
  assign core_wen_X4 = _069__X ;
  assign _163__C0 = _069__C ;
  assign _163__X0 = _069__X ;
  assign core_wen_R4 = ( _069__R | _069__C & _163__T ) & { 1{ _163_ != 0 }} ;
  assign _163__R0 = ( _069__R | _069__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _070_ = _069_ & mux_tmp;
  assign _070__S = 0 ;
  logic [0:0] _069__C0 ;
  logic [0:0] _069__R0 ;
  logic [0:0] _069__X0 ;
  logic [0:0] mux_tmp_C1 ;
  logic [0:0] mux_tmp_R1 ;
  logic [0:0] mux_tmp_X1 ;
  assign _070__T = _069__T | mux_tmp_T ;
  assign _069__C0 = _070__C ;
  assign _069__X0 = _070__X ;
  assign mux_tmp_C1 = _070__C ;
  assign mux_tmp_X1 = _070__X ;
  assign _069__R0 = ( _070__R | _070__C & mux_tmp_T ) & { 1{ mux_tmp != 0 }} ;
  assign mux_tmp_R1 = ( _070__R | _070__C & _069__T ) & { 1{ _069_ != 0 }} ;
  assign _071_ = core_wen & _121_;
  assign _071__S = 0 ;
  logic [0:0] core_wen_C5 ;
  logic [0:0] core_wen_R5 ;
  logic [0:0] core_wen_X5 ;
  logic [0:0] _121__C0 ;
  logic [0:0] _121__R0 ;
  logic [0:0] _121__X0 ;
  assign _071__T = core_wen_T | _121__T ;
  assign core_wen_C5 = _071__C ;
  assign core_wen_X5 = _071__X ;
  assign _121__C0 = _071__C ;
  assign _121__X0 = _071__X ;
  assign core_wen_R5 = ( _071__R | _071__C & _121__T ) & { 1{ _121_ != 0 }} ;
  assign _121__R0 = ( _071__R | _071__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _072_ = core_wen & _123_;
  assign _072__S = 0 ;
  logic [0:0] core_wen_C6 ;
  logic [0:0] core_wen_R6 ;
  logic [0:0] core_wen_X6 ;
  logic [0:0] _123__C0 ;
  logic [0:0] _123__R0 ;
  logic [0:0] _123__X0 ;
  assign _072__T = core_wen_T | _123__T ;
  assign core_wen_C6 = _072__C ;
  assign core_wen_X6 = _072__X ;
  assign _123__C0 = _072__C ;
  assign _123__X0 = _072__X ;
  assign core_wen_R6 = ( _072__R | _072__C & _123__T ) & { 1{ _123_ != 0 }} ;
  assign _123__R0 = ( _072__R | _072__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _073_ = or_tmp_9 & FpMantRNE_24U_11U_else_and_svs;
  assign _073__S = 0 ;
  logic [0:0] or_tmp_9_C0 ;
  logic [0:0] or_tmp_9_R0 ;
  logic [0:0] or_tmp_9_X0 ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_C0 ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_R0 ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_X0 ;
  assign _073__T = or_tmp_9_T | FpMantRNE_24U_11U_else_and_svs_T ;
  assign or_tmp_9_C0 = _073__C ;
  assign or_tmp_9_X0 = _073__X ;
  assign FpMantRNE_24U_11U_else_and_svs_C0 = _073__C ;
  assign FpMantRNE_24U_11U_else_and_svs_X0 = _073__X ;
  assign or_tmp_9_R0 = ( _073__R | _073__C & FpMantRNE_24U_11U_else_and_svs_T ) & { 1{ FpMantRNE_24U_11U_else_and_svs != 0 }} ;
  assign FpMantRNE_24U_11U_else_and_svs_R0 = ( _073__R | _073__C & or_tmp_9_T ) & { 1{ or_tmp_9 != 0 }} ;
  assign _074_ = _073_ & _172_;
  assign _074__S = 0 ;
  logic [0:0] _073__C0 ;
  logic [0:0] _073__R0 ;
  logic [0:0] _073__X0 ;
  logic [0:0] _172__C0 ;
  logic [0:0] _172__R0 ;
  logic [0:0] _172__X0 ;
  assign _074__T = _073__T | _172__T ;
  assign _073__C0 = _074__C ;
  assign _073__X0 = _074__X ;
  assign _172__C0 = _074__C ;
  assign _172__X0 = _074__X ;
  assign _073__R0 = ( _074__R | _074__C & _172__T ) & { 1{ _172_ != 0 }} ;
  assign _172__R0 = ( _074__R | _074__C & _073__T ) & { 1{ _073_ != 0 }} ;
  assign and_nl = chn_a_rsci_bawt & _126_;
  assign and_nl_S = 0 ;
  logic [0:0] chn_a_rsci_bawt_C0 ;
  logic [0:0] chn_a_rsci_bawt_R0 ;
  logic [0:0] chn_a_rsci_bawt_X0 ;
  logic [0:0] _126__C0 ;
  logic [0:0] _126__R0 ;
  logic [0:0] _126__X0 ;
  assign and_nl_T = chn_a_rsci_bawt_T | _126__T ;
  assign chn_a_rsci_bawt_C0 = and_nl_C ;
  assign chn_a_rsci_bawt_X0 = and_nl_X ;
  assign _126__C0 = and_nl_C ;
  assign _126__X0 = and_nl_X ;
  assign chn_a_rsci_bawt_R0 = ( and_nl_R | and_nl_C & _126__T ) & { 1{ _126_ != 0 }} ;
  assign _126__R0 = ( and_nl_R | and_nl_C & chn_a_rsci_bawt_T ) & { 1{ chn_a_rsci_bawt != 0 }} ;
  assign and_82_nl = or_tmp_11 & FpMantRNE_24U_11U_else_and_svs_2;
  assign and_82_nl_S = 0 ;
  logic [0:0] or_tmp_11_C0 ;
  logic [0:0] or_tmp_11_R0 ;
  logic [0:0] or_tmp_11_X0 ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_2_C0 ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_2_R0 ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_2_X0 ;
  assign and_82_nl_T = or_tmp_11_T | FpMantRNE_24U_11U_else_and_svs_2_T ;
  assign or_tmp_11_C0 = and_82_nl_C ;
  assign or_tmp_11_X0 = and_82_nl_X ;
  assign FpMantRNE_24U_11U_else_and_svs_2_C0 = and_82_nl_C ;
  assign FpMantRNE_24U_11U_else_and_svs_2_X0 = and_82_nl_X ;
  assign or_tmp_11_R0 = ( and_82_nl_R | and_82_nl_C & FpMantRNE_24U_11U_else_and_svs_2_T ) & { 1{ FpMantRNE_24U_11U_else_and_svs_2 != 0 }} ;
  assign FpMantRNE_24U_11U_else_and_svs_2_R0 = ( and_82_nl_R | and_82_nl_C & or_tmp_11_T ) & { 1{ or_tmp_11 != 0 }} ;
  assign and_14_nl = FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3 & and_42_cse;
  assign and_14_nl_S = 0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_C0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_R0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X0 ;
  logic [0:0] and_42_cse_C0 ;
  logic [0:0] and_42_cse_R0 ;
  logic [0:0] and_42_cse_X0 ;
  assign and_14_nl_T = FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_T | and_42_cse_T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_C0 = and_14_nl_C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X0 = and_14_nl_X ;
  assign and_42_cse_C0 = and_14_nl_C ;
  assign and_42_cse_X0 = and_14_nl_X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_R0 = ( and_14_nl_R | and_14_nl_C & and_42_cse_T ) & { 1{ and_42_cse != 0 }} ;
  assign and_42_cse_R0 = ( and_14_nl_R | and_14_nl_C & FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3 != 0 }} ;
  assign _075_ = or_9_cse & mux_tmp_18;
  assign _075__S = 0 ;
  logic [0:0] or_9_cse_C1 ;
  logic [0:0] or_9_cse_R1 ;
  logic [0:0] or_9_cse_X1 ;
  logic [0:0] mux_tmp_18_C0 ;
  logic [0:0] mux_tmp_18_R0 ;
  logic [0:0] mux_tmp_18_X0 ;
  assign _075__T = or_9_cse_T | mux_tmp_18_T ;
  assign or_9_cse_C1 = _075__C ;
  assign or_9_cse_X1 = _075__X ;
  assign mux_tmp_18_C0 = _075__C ;
  assign mux_tmp_18_X0 = _075__X ;
  assign or_9_cse_R1 = ( _075__R | _075__C & mux_tmp_18_T ) & { 1{ mux_tmp_18 != 0 }} ;
  assign mux_tmp_18_R0 = ( _075__R | _075__C & or_9_cse_T ) & { 1{ or_9_cse != 0 }} ;
  assign and_76_nl = _191_ & main_stage_v_2;
  assign and_76_nl_S = 0 ;
  logic [0:0] _191__C0 ;
  logic [0:0] _191__R0 ;
  logic [0:0] _191__X0 ;
  logic [0:0] main_stage_v_2_C0 ;
  logic [0:0] main_stage_v_2_R0 ;
  logic [0:0] main_stage_v_2_X0 ;
  assign and_76_nl_T = _191__T | main_stage_v_2_T ;
  assign _191__C0 = and_76_nl_C ;
  assign _191__X0 = and_76_nl_X ;
  assign main_stage_v_2_C0 = and_76_nl_C ;
  assign main_stage_v_2_X0 = and_76_nl_X ;
  assign _191__R0 = ( and_76_nl_R | and_76_nl_C & main_stage_v_2_T ) & { 1{ main_stage_v_2 != 0 }} ;
  assign main_stage_v_2_R0 = ( and_76_nl_R | and_76_nl_C & _191__T ) & { 1{ _191_ != 0 }} ;
  assign _076_ = FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl[8] & chn_a_rsci_bawt;
  assign _076__S = 0 ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C0 ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R0 ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X0 ;
  logic [0:0] chn_a_rsci_bawt_C1 ;
  logic [0:0] chn_a_rsci_bawt_R1 ;
  logic [0:0] chn_a_rsci_bawt_X1 ;
  assign _076__T = FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_T [8] | chn_a_rsci_bawt_T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C0 [8] = _076__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X0 [8] = _076__X ;
  assign chn_a_rsci_bawt_C1 = _076__C ;
  assign chn_a_rsci_bawt_X1 = _076__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R0 [8] = ( _076__R | _076__C & chn_a_rsci_bawt_T ) & { 1{ chn_a_rsci_bawt != 0 }} ;
  assign chn_a_rsci_bawt_R1 = ( _076__R | _076__C & FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_T [8] ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl[8] != 0 }} ;
  assign _077_ = or_tmp_11 & main_stage_v_1;
  assign _077__S = 0 ;
  logic [0:0] or_tmp_11_C1 ;
  logic [0:0] or_tmp_11_R1 ;
  logic [0:0] or_tmp_11_X1 ;
  logic [0:0] main_stage_v_1_C0 ;
  logic [0:0] main_stage_v_1_R0 ;
  logic [0:0] main_stage_v_1_X0 ;
  assign _077__T = or_tmp_11_T | main_stage_v_1_T ;
  assign or_tmp_11_C1 = _077__C ;
  assign or_tmp_11_X1 = _077__X ;
  assign main_stage_v_1_C0 = _077__C ;
  assign main_stage_v_1_X0 = _077__X ;
  assign or_tmp_11_R1 = ( _077__R | _077__C & main_stage_v_1_T ) & { 1{ main_stage_v_1 != 0 }} ;
  assign main_stage_v_1_R0 = ( _077__R | _077__C & or_tmp_11_T ) & { 1{ or_tmp_11 != 0 }} ;
  assign _078_ = _077_ & FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3;
  assign _078__S = 0 ;
  logic [0:0] _077__C0 ;
  logic [0:0] _077__R0 ;
  logic [0:0] _077__X0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_C1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_R1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X1 ;
  assign _078__T = _077__T | FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_T ;
  assign _077__C0 = _078__C ;
  assign _077__X0 = _078__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_C1 = _078__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X1 = _078__X ;
  assign _077__R0 = ( _078__R | _078__C & FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3 != 0 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_R1 = ( _078__R | _078__C & _077__T ) & { 1{ _077_ != 0 }} ;
  assign _079_ = _078_ & _139_;
  assign _079__S = 0 ;
  logic [0:0] _078__C0 ;
  logic [0:0] _078__R0 ;
  logic [0:0] _078__X0 ;
  logic [0:0] _139__C0 ;
  logic [0:0] _139__R0 ;
  logic [0:0] _139__X0 ;
  assign _079__T = _078__T | _139__T ;
  assign _078__C0 = _079__C ;
  assign _078__X0 = _079__X ;
  assign _139__C0 = _079__C ;
  assign _139__X0 = _079__X ;
  assign _078__R0 = ( _079__R | _079__C & _139__T ) & { 1{ _139_ != 0 }} ;
  assign _139__R0 = ( _079__R | _079__C & _078__T ) & { 1{ _078_ != 0 }} ;
  assign _080_ = _079_ & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3;
  assign _080__S = 0 ;
  logic [0:0] _079__C0 ;
  logic [0:0] _079__R0 ;
  logic [0:0] _079__X0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_C0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_R0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_X0 ;
  assign _080__T = _079__T | FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_T ;
  assign _079__C0 = _080__C ;
  assign _079__X0 = _080__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_C0 = _080__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_X0 = _080__X ;
  assign _079__R0 = ( _080__R | _080__C & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3 != 0 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_R0 = ( _080__R | _080__C & _079__T ) & { 1{ _079_ != 0 }} ;
  assign _081_ = _080_ & _140_;
  assign _081__S = 0 ;
  logic [0:0] _080__C0 ;
  logic [0:0] _080__R0 ;
  logic [0:0] _080__X0 ;
  logic [0:0] _140__C0 ;
  logic [0:0] _140__R0 ;
  logic [0:0] _140__X0 ;
  assign _081__T = _080__T | _140__T ;
  assign _080__C0 = _081__C ;
  assign _080__X0 = _081__X ;
  assign _140__C0 = _081__C ;
  assign _140__X0 = _081__X ;
  assign _080__R0 = ( _081__R | _081__C & _140__T ) & { 1{ _140_ != 0 }} ;
  assign _140__R0 = ( _081__R | _081__C & _080__T ) & { 1{ _080_ != 0 }} ;
  assign and_86_nl = _081_ & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3;
  assign and_86_nl_S = 0 ;
  logic [0:0] _081__C0 ;
  logic [0:0] _081__R0 ;
  logic [0:0] _081__X0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_C0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_R0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_X0 ;
  assign and_86_nl_T = _081__T | FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_T ;
  assign _081__C0 = and_86_nl_C ;
  assign _081__X0 = and_86_nl_X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_C0 = and_86_nl_C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_X0 = and_86_nl_X ;
  assign _081__R0 = ( and_86_nl_R | and_86_nl_C & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3 != 0 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_R0 = ( and_86_nl_R | and_86_nl_C & _081__T ) & { 1{ _081_ != 0 }} ;
  logic [4:0] fangyuan3;
  logic [4:0] fangyuan3_T ;
  logic [4:0] fangyuan3_R ;
  logic [4:0] fangyuan3_C ;
  logic [4:0] fangyuan3_X ;
  assign fangyuan3 = { FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt, FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt, FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt, FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt, FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt };
  assign fangyuan3_T = {  FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_T , FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_T , FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_T , FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_T , FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_T  };
  logic [13:0] fangyuan3_S ;
  assign fangyuan3_S = 0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_R0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_X0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_C0 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_R0 = fangyuan3_R [4:4] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_X0 = fangyuan3_X [4:4] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_C0 = fangyuan3_C [4:4] ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_R1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_X1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_C1 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_R1 = fangyuan3_R [3:3] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_X1 = fangyuan3_X [3:3] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_C1 = fangyuan3_C [3:3] ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_R2 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_X2 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_C2 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_R2 = fangyuan3_R [2:2] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_X2 = fangyuan3_X [2:2] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_C2 = fangyuan3_C [2:2] ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_R3 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_X3 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_C3 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_R3 = fangyuan3_R [1:1] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_X3 = fangyuan3_X [1:1] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_C3 = fangyuan3_C [1:1] ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_R4 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_X4 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_C4 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_R4 = fangyuan3_R [0:0] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_X4 = fangyuan3_X [0:0] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_C4 = fangyuan3_C [0:0] ;

  assign _082_ = 5'b11110 & fangyuan3;
  assign _082__S = 0 ;
  logic [4:0] fangyuan3_C0 ;
  logic [4:0] fangyuan3_R0 ;
  logic [4:0] fangyuan3_X0 ;
  assign _082__T = fangyuan3_T ;
  assign fangyuan3_C0 = _082__C ;
  assign fangyuan3_R0 = _082__R ;
  assign fangyuan3_X0 = _082__X ;
  logic [4:0] fangyuan4;
  logic [4:0] fangyuan4_T ;
  logic [4:0] fangyuan4_R ;
  logic [4:0] fangyuan4_C ;
  logic [4:0] fangyuan4_X ;
  assign fangyuan4 = { FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt, FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt, FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt, FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt, FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt };
  assign fangyuan4_T = {  FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_T , FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_T , FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_T , FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_T , FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_T  };
  logic [13:0] fangyuan4_S ;
  assign fangyuan4_S = 0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_R0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_X0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_C0 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_R0 = fangyuan4_R [4:4] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_X0 = fangyuan4_X [4:4] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_C0 = fangyuan4_C [4:4] ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_R1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_X1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_C1 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_R1 = fangyuan4_R [3:3] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_X1 = fangyuan4_X [3:3] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_C1 = fangyuan4_C [3:3] ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_R2 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_X2 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_C2 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_R2 = fangyuan4_R [2:2] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_X2 = fangyuan4_X [2:2] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_C2 = fangyuan4_C [2:2] ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_R3 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_X3 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_C3 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_R3 = fangyuan4_R [1:1] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_X3 = fangyuan4_X [1:1] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_C3 = fangyuan4_C [1:1] ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_R4 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_X4 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_C4 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_R4 = fangyuan4_R [0:0] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_X4 = fangyuan4_X [0:0] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_C4 = fangyuan4_C [0:0] ;

  assign _083_ = FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3[4:0] & fangyuan4;
  assign _083__S = 0 ;
  logic [5:0] FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_C0 ;
  logic [5:0] FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_R0 ;
  logic [5:0] FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_X0 ;
  logic [4:0] fangyuan4_C0 ;
  logic [4:0] fangyuan4_R0 ;
  logic [4:0] fangyuan4_X0 ;
  assign _083__T = FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_T [4:0] | fangyuan4_T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_C0 [4:0] = _083__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_X0 [4:0] = _083__X ;
  assign fangyuan4_C0 = _083__C ;
  assign fangyuan4_X0 = _083__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_R0 [4:0] = ( _083__R | _083__C & fangyuan4_T ) & { 5{ fangyuan4 != 0 }} ;
  assign fangyuan4_R0 = ( _083__R | _083__C & FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_T [4:0] ) & { 5{ FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3[4:0] != 0 }} ;
  logic [4:0] fangyuan5;
  logic [4:0] fangyuan5_T ;
  logic [4:0] fangyuan5_R ;
  logic [4:0] fangyuan5_C ;
  logic [4:0] fangyuan5_X ;
  assign fangyuan5 = { FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt, FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt, FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt, FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt, FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt };
  assign fangyuan5_T = {  FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_T , FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_T , FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_T , FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_T , FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_T  };
  logic [13:0] fangyuan5_S ;
  assign fangyuan5_S = 0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_R0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_X0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_C0 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_R0 = fangyuan5_R [4:4] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_X0 = fangyuan5_X [4:4] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_C0 = fangyuan5_C [4:4] ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_R1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_X1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_C1 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_R1 = fangyuan5_R [3:3] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_X1 = fangyuan5_X [3:3] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_C1 = fangyuan5_C [3:3] ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_R2 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_X2 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_C2 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_R2 = fangyuan5_R [2:2] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_X2 = fangyuan5_X [2:2] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_C2 = fangyuan5_C [2:2] ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_R3 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_X3 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_C3 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_R3 = fangyuan5_R [1:1] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_X3 = fangyuan5_X [1:1] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_C3 = fangyuan5_C [1:1] ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_R4 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_X4 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_C4 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_R4 = fangyuan5_R [0:0] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_X4 = fangyuan5_X [0:0] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_C4 = fangyuan5_C [0:0] ;

  assign _084_ = FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1[27:23] & fangyuan5;
  assign _084__S = 0 ;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R0 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R0 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R0 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R0 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R0 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R0 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R0 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R0 [7], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R0 [8], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R0 [9], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R0 [10], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R0 [11], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R0 [12], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R0 [28:28] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X0 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X0 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X0 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X0 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X0 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X0 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X0 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X0 [7], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X0 [8], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X0 [9], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X0 [10], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X0 [11], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X0 [12], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X0 [28:28] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C0 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C0 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C0 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C0 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C0 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C0 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C0 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C0 [7], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C0 [8], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C0 [9], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C0 [10], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C0 [11], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C0 [12], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C0 [28:28] } = 0;
  logic [28:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C1 ;
  logic [28:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R1 ;
  logic [28:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X1 ;
  logic [4:0] fangyuan5_C0 ;
  logic [4:0] fangyuan5_R0 ;
  logic [4:0] fangyuan5_X0 ;
  assign _084__T = FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_T [27:23] | fangyuan5_T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C1 [27:23] = _084__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X1 [27:23] = _084__X ;
  assign fangyuan5_C0 = _084__C ;
  assign fangyuan5_X0 = _084__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R1 [27:23] = ( _084__R | _084__C & fangyuan5_T ) & { 5{ fangyuan5 != 0 }} ;
  assign fangyuan5_R0 = ( _084__R | _084__C & FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_T [27:23] ) & { 5{ FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1[27:23] != 0 }} ;
  logic [4:0] fangyuan6;
  logic [4:0] fangyuan6_T ;
  logic [4:0] fangyuan6_R ;
  logic [4:0] fangyuan6_C ;
  logic [4:0] fangyuan6_X ;
  assign fangyuan6 = { FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt, FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt, FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt, FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt, FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt };
  assign fangyuan6_T = {  FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_T , FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_T , FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_T , FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_T , FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_T  };
  logic [13:0] fangyuan6_S ;
  assign fangyuan6_S = 0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_R0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_X0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_C0 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_R0 = fangyuan6_R [4:4] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_X0 = fangyuan6_X [4:4] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_C0 = fangyuan6_C [4:4] ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_R1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_X1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_C1 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_R1 = fangyuan6_R [3:3] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_X1 = fangyuan6_X [3:3] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_C1 = fangyuan6_C [3:3] ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_R2 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_X2 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_C2 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_R2 = fangyuan6_R [2:2] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_X2 = fangyuan6_X [2:2] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_C2 = fangyuan6_C [2:2] ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_R3 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_X3 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_C3 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_R3 = fangyuan6_R [1:1] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_X3 = fangyuan6_X [1:1] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_C3 = fangyuan6_C [1:1] ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_R4 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_X4 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_C4 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_R4 = fangyuan6_R [0:0] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_X4 = fangyuan6_X [0:0] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_C4 = fangyuan6_C [0:0] ;

  assign _085_ = 1'b1 & fangyuan6;
  assign _085__S = 0 ;
  logic [4:0] fangyuan6_C0 ;
  logic [4:0] fangyuan6_R0 ;
  logic [4:0] fangyuan6_X0 ;
  assign _085__T = fangyuan6_T ;
  assign fangyuan6_C0 = _085__C ;
  assign fangyuan6_R0 = _085__R ;
  assign fangyuan6_X0 = _085__X ;
  assign chn_o_and_cse = core_wen & _141_;
  assign chn_o_and_cse_S = 0 ;
  logic [0:0] core_wen_C7 ;
  logic [0:0] core_wen_R7 ;
  logic [0:0] core_wen_X7 ;
  logic [0:0] _141__C0 ;
  logic [0:0] _141__R0 ;
  logic [0:0] _141__X0 ;
  assign chn_o_and_cse_T = core_wen_T | _141__T ;
  assign core_wen_C7 = chn_o_and_cse_C ;
  assign core_wen_X7 = chn_o_and_cse_X ;
  assign _141__C0 = chn_o_and_cse_C ;
  assign _141__X0 = chn_o_and_cse_X ;
  assign core_wen_R7 = ( chn_o_and_cse_R | chn_o_and_cse_C & _141__T ) & { 1{ _141_ != 0 }} ;
  assign _141__R0 = ( chn_o_and_cse_R | chn_o_and_cse_C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse = _048_ & mux_tmp;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_S = 0 ;
  logic [0:0] _048__C8 ;
  logic [0:0] _048__R8 ;
  logic [0:0] _048__X8 ;
  logic [0:0] mux_tmp_C2 ;
  logic [0:0] mux_tmp_R2 ;
  logic [0:0] mux_tmp_X2 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_T = _048__T | mux_tmp_T ;
  assign _048__C8 = FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_C ;
  assign _048__X8 = FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_X ;
  assign mux_tmp_C2 = FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_C ;
  assign mux_tmp_X2 = FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_X ;
  assign _048__R8 = ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_R | FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_C & mux_tmp_T ) & { 1{ mux_tmp != 0 }} ;
  assign mux_tmp_R2 = ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_R | FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_C & _048__T ) & { 1{ _048_ != 0 }} ;
  assign and_42_cse = or_9_cse & main_stage_v_1;
  assign and_42_cse_S = 0 ;
  logic [0:0] or_9_cse_C2 ;
  logic [0:0] or_9_cse_R2 ;
  logic [0:0] or_9_cse_X2 ;
  logic [0:0] main_stage_v_1_C1 ;
  logic [0:0] main_stage_v_1_R1 ;
  logic [0:0] main_stage_v_1_X1 ;
  assign and_42_cse_T = or_9_cse_T | main_stage_v_1_T ;
  assign or_9_cse_C2 = and_42_cse_C ;
  assign or_9_cse_X2 = and_42_cse_X ;
  assign main_stage_v_1_C1 = and_42_cse_C ;
  assign main_stage_v_1_X1 = and_42_cse_X ;
  assign or_9_cse_R2 = ( and_42_cse_R | and_42_cse_C & main_stage_v_1_T ) & { 1{ main_stage_v_1 != 0 }} ;
  assign main_stage_v_1_R1 = ( and_42_cse_R | and_42_cse_C & or_9_cse_T ) & { 1{ or_9_cse != 0 }} ;
  assign FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse = _048_ & mux_11_nl;
  assign FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_S = 0 ;
  logic [0:0] _048__C9 ;
  logic [0:0] _048__R9 ;
  logic [0:0] _048__X9 ;
  logic [0:0] mux_11_nl_C0 ;
  logic [0:0] mux_11_nl_R0 ;
  logic [0:0] mux_11_nl_X0 ;
  assign FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_T = _048__T | mux_11_nl_T ;
  assign _048__C9 = FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_C ;
  assign _048__X9 = FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_X ;
  assign mux_11_nl_C0 = FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_C ;
  assign mux_11_nl_X0 = FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_X ;
  assign _048__R9 = ( FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_R | FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_C & mux_11_nl_T ) & { 1{ mux_11_nl != 0 }} ;
  assign mux_11_nl_R0 = ( FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_R | FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_C & _048__T ) & { 1{ _048_ != 0 }} ;
  assign _048_ = core_wen & _116_;
  assign _048__S = 0 ;
  logic [0:0] core_wen_C8 ;
  logic [0:0] core_wen_R8 ;
  logic [0:0] core_wen_X8 ;
  logic [0:0] _116__C0 ;
  logic [0:0] _116__R0 ;
  logic [0:0] _116__X0 ;
  assign _048__T = core_wen_T | _116__T ;
  assign core_wen_C8 = _048__C ;
  assign core_wen_X8 = _048__X ;
  assign _116__C0 = _048__C ;
  assign _116__X0 = _048__X ;
  assign core_wen_R8 = ( _048__R | _048__C & _116__T ) & { 1{ _116_ != 0 }} ;
  assign _116__R0 = ( _048__R | _048__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign Fp32ToFp17_and_1_cse = _048_ & mux_16_nl;
  assign Fp32ToFp17_and_1_cse_S = 0 ;
  logic [0:0] _048__C10 ;
  logic [0:0] _048__R10 ;
  logic [0:0] _048__X10 ;
  logic [0:0] mux_16_nl_C0 ;
  logic [0:0] mux_16_nl_R0 ;
  logic [0:0] mux_16_nl_X0 ;
  assign Fp32ToFp17_and_1_cse_T = _048__T | mux_16_nl_T ;
  assign _048__C10 = Fp32ToFp17_and_1_cse_C ;
  assign _048__X10 = Fp32ToFp17_and_1_cse_X ;
  assign mux_16_nl_C0 = Fp32ToFp17_and_1_cse_C ;
  assign mux_16_nl_X0 = Fp32ToFp17_and_1_cse_X ;
  assign _048__R10 = ( Fp32ToFp17_and_1_cse_R | Fp32ToFp17_and_1_cse_C & mux_16_nl_T ) & { 1{ mux_16_nl != 0 }} ;
  assign mux_16_nl_R0 = ( Fp32ToFp17_and_1_cse_R | Fp32ToFp17_and_1_cse_C & _048__T ) & { 1{ _048_ != 0 }} ;
  assign and_77_cse = FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4 & FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4;
  assign and_77_cse_S = 0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_C0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_R0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_X0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_C0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_R0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_X0 ;
  assign and_77_cse_T = FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_T | FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_C0 = and_77_cse_C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_X0 = and_77_cse_X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_C0 = and_77_cse_C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_X0 = and_77_cse_X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_R0 = ( and_77_cse_R | and_77_cse_C & FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4 != 0 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_R0 = ( and_77_cse_R | and_77_cse_C & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4 != 0 }} ;
  assign and_48_rgt = or_tmp_11 & or_9_cse;
  assign and_48_rgt_S = 0 ;
  logic [0:0] or_tmp_11_C2 ;
  logic [0:0] or_tmp_11_R2 ;
  logic [0:0] or_tmp_11_X2 ;
  logic [0:0] or_9_cse_C3 ;
  logic [0:0] or_9_cse_R3 ;
  logic [0:0] or_9_cse_X3 ;
  assign and_48_rgt_T = or_tmp_11_T | or_9_cse_T ;
  assign or_tmp_11_C2 = and_48_rgt_C ;
  assign or_tmp_11_X2 = and_48_rgt_X ;
  assign or_9_cse_C3 = and_48_rgt_C ;
  assign or_9_cse_X3 = and_48_rgt_X ;
  assign or_tmp_11_R2 = ( and_48_rgt_R | and_48_rgt_C & or_9_cse_T ) & { 1{ or_9_cse != 0 }} ;
  assign or_9_cse_R3 = ( and_48_rgt_R | and_48_rgt_C & or_tmp_11_T ) & { 1{ or_tmp_11 != 0 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt = FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_nor_ssc & _116_;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_S = 0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_nor_ssc_C0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_nor_ssc_R0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_nor_ssc_X0 ;
  logic [0:0] _116__C1 ;
  logic [0:0] _116__R1 ;
  logic [0:0] _116__X1 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_T = FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_nor_ssc_T | _116__T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_nor_ssc_C0 = FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_nor_ssc_X0 = FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_X ;
  assign _116__C1 = FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_C ;
  assign _116__X1 = FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_nor_ssc_R0 = ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_R | FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_C & _116__T ) & { 1{ _116_ != 0 }} ;
  assign _116__R1 = ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_R | FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_C & FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_nor_ssc_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_nor_ssc != 0 }} ;
  assign _086_ = _142_ & FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c;
  assign _086__S = 0 ;
  logic [0:0] _142__C0 ;
  logic [0:0] _142__R0 ;
  logic [0:0] _142__X0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_C0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_R0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_X0 ;
  assign _086__T = _142__T | FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_T ;
  assign _142__C0 = _086__C ;
  assign _142__X0 = _086__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_C0 = _086__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_X0 = _086__X ;
  assign _142__R0 = ( _086__R | _086__C & FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c != 0 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_R0 = ( _086__R | _086__C & _142__T ) & { 1{ _142_ != 0 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt = _086_ & _116_;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_S = 0 ;
  logic [0:0] _086__C0 ;
  logic [0:0] _086__R0 ;
  logic [0:0] _086__X0 ;
  logic [0:0] _116__C2 ;
  logic [0:0] _116__R2 ;
  logic [0:0] _116__X2 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_T = _086__T | _116__T ;
  assign _086__C0 = FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_C ;
  assign _086__X0 = FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_X ;
  assign _116__C2 = FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_C ;
  assign _116__X2 = FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_X ;
  assign _086__R0 = ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_R | FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_C & _116__T ) & { 1{ _116_ != 0 }} ;
  assign _116__R2 = ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_R | FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_C & _086__T ) & { 1{ _086_ != 0 }} ;
  assign _087_ = FpMantRNE_24U_11U_else_and_svs_2 & FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c;
  assign _087__S = 0 ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_2_C1 ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_2_R1 ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_2_X1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_C1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_R1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_X1 ;
  assign _087__T = FpMantRNE_24U_11U_else_and_svs_2_T | FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_T ;
  assign FpMantRNE_24U_11U_else_and_svs_2_C1 = _087__C ;
  assign FpMantRNE_24U_11U_else_and_svs_2_X1 = _087__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_C1 = _087__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_X1 = _087__X ;
  assign FpMantRNE_24U_11U_else_and_svs_2_R1 = ( _087__R | _087__C & FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c != 0 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_R1 = ( _087__R | _087__C & FpMantRNE_24U_11U_else_and_svs_2_T ) & { 1{ FpMantRNE_24U_11U_else_and_svs_2 != 0 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt = _087_ & _116_;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_S = 0 ;
  logic [0:0] _087__C0 ;
  logic [0:0] _087__R0 ;
  logic [0:0] _087__X0 ;
  logic [0:0] _116__C3 ;
  logic [0:0] _116__R3 ;
  logic [0:0] _116__X3 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_T = _087__T | _116__T ;
  assign _087__C0 = FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_C ;
  assign _087__X0 = FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_X ;
  assign _116__C3 = FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_C ;
  assign _116__X3 = FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_X ;
  assign _087__R0 = ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_R | FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_C & _116__T ) & { 1{ _116_ != 0 }} ;
  assign _116__R3 = ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_R | FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_C & _087__T ) & { 1{ _087_ != 0 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt = FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0 & _116_;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_S = 0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_C0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_R0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_X0 ;
  logic [0:0] _116__C4 ;
  logic [0:0] _116__R4 ;
  logic [0:0] _116__X4 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_T = FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_T | _116__T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_C0 = FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_X0 = FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_X ;
  assign _116__C4 = FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_C ;
  assign _116__X4 = FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_R0 = ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_R | FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_C & _116__T ) & { 1{ _116_ != 0 }} ;
  assign _116__R4 = ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_R | FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_C & FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0 != 0 }} ;
  assign and_50_rgt = or_9_cse & _122_;
  assign and_50_rgt_S = 0 ;
  logic [0:0] or_9_cse_C4 ;
  logic [0:0] or_9_cse_R4 ;
  logic [0:0] or_9_cse_X4 ;
  logic [0:0] _122__C0 ;
  logic [0:0] _122__R0 ;
  logic [0:0] _122__X0 ;
  assign and_50_rgt_T = or_9_cse_T | _122__T ;
  assign or_9_cse_C4 = and_50_rgt_C ;
  assign or_9_cse_X4 = and_50_rgt_X ;
  assign _122__C0 = and_50_rgt_C ;
  assign _122__X0 = and_50_rgt_X ;
  assign or_9_cse_R4 = ( and_50_rgt_R | and_50_rgt_C & _122__T ) & { 1{ _122_ != 0 }} ;
  assign _122__R0 = ( and_50_rgt_R | and_50_rgt_C & or_9_cse_T ) & { 1{ or_9_cse != 0 }} ;
  assign and_53_rgt = or_dcpl_11 & or_9_cse;
  assign and_53_rgt_S = 0 ;
  logic [0:0] or_dcpl_11_C0 ;
  logic [0:0] or_dcpl_11_R0 ;
  logic [0:0] or_dcpl_11_X0 ;
  logic [0:0] or_9_cse_C5 ;
  logic [0:0] or_9_cse_R5 ;
  logic [0:0] or_9_cse_X5 ;
  assign and_53_rgt_T = or_dcpl_11_T | or_9_cse_T ;
  assign or_dcpl_11_C0 = and_53_rgt_C ;
  assign or_dcpl_11_X0 = and_53_rgt_X ;
  assign or_9_cse_C5 = and_53_rgt_C ;
  assign or_9_cse_X5 = and_53_rgt_X ;
  assign or_dcpl_11_R0 = ( and_53_rgt_R | and_53_rgt_C & or_9_cse_T ) & { 1{ or_9_cse != 0 }} ;
  assign or_9_cse_R5 = ( and_53_rgt_R | and_53_rgt_C & or_dcpl_11_T ) & { 1{ or_dcpl_11 != 0 }} ;
  assign FpMantRNE_24U_11U_else_and_svs_mx0w0 = FpMantRNE_24U_11U_else_carry_sva_mx0w0 & _109_;
  assign FpMantRNE_24U_11U_else_and_svs_mx0w0_S = 0 ;
  logic [0:0] FpMantRNE_24U_11U_else_carry_sva_mx0w0_C0 ;
  logic [0:0] FpMantRNE_24U_11U_else_carry_sva_mx0w0_R0 ;
  logic [0:0] FpMantRNE_24U_11U_else_carry_sva_mx0w0_X0 ;
  logic [0:0] _109__C0 ;
  logic [0:0] _109__R0 ;
  logic [0:0] _109__X0 ;
  assign FpMantRNE_24U_11U_else_and_svs_mx0w0_T = FpMantRNE_24U_11U_else_carry_sva_mx0w0_T | _109__T ;
  assign FpMantRNE_24U_11U_else_carry_sva_mx0w0_C0 = FpMantRNE_24U_11U_else_and_svs_mx0w0_C ;
  assign FpMantRNE_24U_11U_else_carry_sva_mx0w0_X0 = FpMantRNE_24U_11U_else_and_svs_mx0w0_X ;
  assign _109__C0 = FpMantRNE_24U_11U_else_and_svs_mx0w0_C ;
  assign _109__X0 = FpMantRNE_24U_11U_else_and_svs_mx0w0_X ;
  assign FpMantRNE_24U_11U_else_carry_sva_mx0w0_R0 = ( FpMantRNE_24U_11U_else_and_svs_mx0w0_R | FpMantRNE_24U_11U_else_and_svs_mx0w0_C & _109__T ) & { 1{ _109_ != 0 }} ;
  assign _109__R0 = ( FpMantRNE_24U_11U_else_and_svs_mx0w0_R | FpMantRNE_24U_11U_else_and_svs_mx0w0_C & FpMantRNE_24U_11U_else_carry_sva_mx0w0_T ) & { 1{ FpMantRNE_24U_11U_else_carry_sva_mx0w0 != 0 }} ;
  assign _088_ = _110_ & FpMantRNE_24U_11U_else_and_svs_2;
  assign _088__S = 0 ;
  logic [0:0] _110__C0 ;
  logic [0:0] _110__R0 ;
  logic [0:0] _110__X0 ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_2_C2 ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_2_R2 ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_2_X2 ;
  assign _088__T = _110__T | FpMantRNE_24U_11U_else_and_svs_2_T ;
  assign _110__C0 = _088__C ;
  assign _110__X0 = _088__X ;
  assign FpMantRNE_24U_11U_else_and_svs_2_C2 = _088__C ;
  assign FpMantRNE_24U_11U_else_and_svs_2_X2 = _088__X ;
  assign _110__R0 = ( _088__R | _088__C & FpMantRNE_24U_11U_else_and_svs_2_T ) & { 1{ FpMantRNE_24U_11U_else_and_svs_2 != 0 }} ;
  assign FpMantRNE_24U_11U_else_and_svs_2_R2 = ( _088__R | _088__C & _110__T ) & { 1{ _110_ != 0 }} ;
  assign _089_ = _088_ & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3;
  assign _089__S = 0 ;
  logic [0:0] _088__C0 ;
  logic [0:0] _088__R0 ;
  logic [0:0] _088__X0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_C1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_R1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_X1 ;
  assign _089__T = _088__T | FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_T ;
  assign _088__C0 = _089__C ;
  assign _088__X0 = _089__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_C1 = _089__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_X1 = _089__X ;
  assign _088__R0 = ( _089__R | _089__C & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3 != 0 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_R1 = ( _089__R | _089__C & _088__T ) & { 1{ _088_ != 0 }} ;
  assign _090_ = _089_ & _140_;
  assign _090__S = 0 ;
  logic [0:0] _089__C0 ;
  logic [0:0] _089__R0 ;
  logic [0:0] _089__X0 ;
  logic [0:0] _140__C1 ;
  logic [0:0] _140__R1 ;
  logic [0:0] _140__X1 ;
  assign _090__T = _089__T | _140__T ;
  assign _089__C0 = _090__C ;
  assign _089__X0 = _090__X ;
  assign _140__C1 = _090__C ;
  assign _140__X1 = _090__X ;
  assign _089__R0 = ( _090__R | _090__C & _140__T ) & { 1{ _140_ != 0 }} ;
  assign _140__R1 = ( _090__R | _090__C & _089__T ) & { 1{ _089_ != 0 }} ;
  assign _091_ = FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp & FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3;
  assign _091__S = 0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_C0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_R0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_X0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_C2 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_R2 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X2 ;
  assign _091__T = FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_T | FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_C0 = _091__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_X0 = _091__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_C2 = _091__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X2 = _091__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_R0 = ( _091__R | _091__C & FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3 != 0 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_R2 = ( _091__R | _091__C & FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp != 0 }} ;
  assign FpMantRNE_24U_11U_else_carry_sva_mx0w0 = chn_a_rsci_d_mxwt[12] & _216_;
  assign FpMantRNE_24U_11U_else_carry_sva_mx0w0_S = 0 ;
  logic [0:0] _216__C0 ;
  logic [0:0] _216__R0 ;
  logic [0:0] _216__X0 ;
  assign FpMantRNE_24U_11U_else_carry_sva_mx0w0_T = chn_a_rsci_d_mxwt_T [12] | _216__T ;
  assign chn_a_rsci_d_mxwt_C1 [12] = FpMantRNE_24U_11U_else_carry_sva_mx0w0_C ;
  assign chn_a_rsci_d_mxwt_X1 [12] = FpMantRNE_24U_11U_else_carry_sva_mx0w0_X ;
  assign _216__C0 = FpMantRNE_24U_11U_else_carry_sva_mx0w0_C ;
  assign _216__X0 = FpMantRNE_24U_11U_else_carry_sva_mx0w0_X ;
  assign chn_a_rsci_d_mxwt_R1 [12] = ( FpMantRNE_24U_11U_else_carry_sva_mx0w0_R | FpMantRNE_24U_11U_else_carry_sva_mx0w0_C & _216__T ) & { 1{ _216_ != 0 }} ;
  assign _216__R0 = ( FpMantRNE_24U_11U_else_carry_sva_mx0w0_R | FpMantRNE_24U_11U_else_carry_sva_mx0w0_C & chn_a_rsci_d_mxwt_T [12] ) & { 1{ chn_a_rsci_d_mxwt[12] != 0 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2 = _218_ & FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_S = 0 ;
  logic [0:0] _218__C0 ;
  logic [0:0] _218__R0 ;
  logic [0:0] _218__X0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_C1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_R1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_X1 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_T = _218__T | FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_T ;
  assign _218__C0 = FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_C ;
  assign _218__X0 = FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_C1 = FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_X1 = FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_X ;
  assign _218__R0 = ( FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_R | FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_C & FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4 != 0 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_R1 = ( FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_R | FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_C & _218__T ) & { 1{ _218_ != 0 }} ;
  assign main_stage_en_1 = chn_a_rsci_bawt & or_9_cse;
  assign main_stage_en_1_S = 0 ;
  logic [0:0] chn_a_rsci_bawt_C2 ;
  logic [0:0] chn_a_rsci_bawt_R2 ;
  logic [0:0] chn_a_rsci_bawt_X2 ;
  logic [0:0] or_9_cse_C6 ;
  logic [0:0] or_9_cse_R6 ;
  logic [0:0] or_9_cse_X6 ;
  assign main_stage_en_1_T = chn_a_rsci_bawt_T | or_9_cse_T ;
  assign chn_a_rsci_bawt_C2 = main_stage_en_1_C ;
  assign chn_a_rsci_bawt_X2 = main_stage_en_1_X ;
  assign or_9_cse_C6 = main_stage_en_1_C ;
  assign or_9_cse_X6 = main_stage_en_1_X ;
  assign chn_a_rsci_bawt_R2 = ( main_stage_en_1_R | main_stage_en_1_C & or_9_cse_T ) & { 1{ or_9_cse != 0 }} ;
  assign or_9_cse_R6 = ( main_stage_en_1_R | main_stage_en_1_C & chn_a_rsci_bawt_T ) & { 1{ chn_a_rsci_bawt != 0 }} ;
  assign FpMantDecShiftRight_23U_8U_10U_guard_bits_22_0_sva = FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1[22:0] & FpMantDecShiftRight_23U_8U_10U_guard_mask_sva[22:0];
  assign FpMantDecShiftRight_23U_8U_10U_guard_bits_22_0_sva_S = 0 ;
  assign { FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_R0 [23:23] } = 0;
  assign { FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_X0 [23:23] } = 0;
  assign { FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_C0 [23:23] } = 0;
  logic [23:0] FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_C1 ;
  logic [23:0] FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_R1 ;
  logic [23:0] FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_X1 ;
  assign FpMantDecShiftRight_23U_8U_10U_guard_bits_22_0_sva_T = FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_T [22:0] | FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_T [22:0] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C1 [22:0] = FpMantDecShiftRight_23U_8U_10U_guard_bits_22_0_sva_C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X1 [22:0] = FpMantDecShiftRight_23U_8U_10U_guard_bits_22_0_sva_X ;
  assign FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_C1 [22:0] = FpMantDecShiftRight_23U_8U_10U_guard_bits_22_0_sva_C ;
  assign FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_X1 [22:0] = FpMantDecShiftRight_23U_8U_10U_guard_bits_22_0_sva_X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R1 [22:0] = ( FpMantDecShiftRight_23U_8U_10U_guard_bits_22_0_sva_R | FpMantDecShiftRight_23U_8U_10U_guard_bits_22_0_sva_C & FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_T [22:0] ) & { 23{ FpMantDecShiftRight_23U_8U_10U_guard_mask_sva[22:0] != 0 }} ;
  assign FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_R1 [22:0] = ( FpMantDecShiftRight_23U_8U_10U_guard_bits_22_0_sva_R | FpMantDecShiftRight_23U_8U_10U_guard_bits_22_0_sva_C & FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_T [22:0] ) & { 23{ FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1[22:0] != 0 }} ;
  assign FpMantDecShiftRight_23U_8U_10U_stick_bits_22_0_sva = FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1[22:0] & FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl;
  assign FpMantDecShiftRight_23U_8U_10U_stick_bits_22_0_sva_S = 0 ;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R1 [28:28] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X1 [28:28] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C1 [28:28] } = 0;
  logic [28:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C2 ;
  logic [28:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R2 ;
  logic [28:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X2 ;
  logic [22:0] FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_C0 ;
  logic [22:0] FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_R0 ;
  logic [22:0] FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_X0 ;
  assign FpMantDecShiftRight_23U_8U_10U_stick_bits_22_0_sva_T = FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_T [22:0] | FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C2 [22:0] = FpMantDecShiftRight_23U_8U_10U_stick_bits_22_0_sva_C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X2 [22:0] = FpMantDecShiftRight_23U_8U_10U_stick_bits_22_0_sva_X ;
  assign FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_C0 = FpMantDecShiftRight_23U_8U_10U_stick_bits_22_0_sva_C ;
  assign FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_X0 = FpMantDecShiftRight_23U_8U_10U_stick_bits_22_0_sva_X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R2 [22:0] = ( FpMantDecShiftRight_23U_8U_10U_stick_bits_22_0_sva_R | FpMantDecShiftRight_23U_8U_10U_stick_bits_22_0_sva_C & FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_T ) & { 23{ FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl != 0 }} ;
  assign FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_R0 = ( FpMantDecShiftRight_23U_8U_10U_stick_bits_22_0_sva_R | FpMantDecShiftRight_23U_8U_10U_stick_bits_22_0_sva_C & FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_T [22:0] ) & { 23{ FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1[22:0] != 0 }} ;
  assign FpMantDecShiftRight_23U_8U_10U_least_bits_22_0_sva = FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1[22:0] & FpMantDecShiftRight_23U_8U_10U_least_mask_sva[22:0];
  assign FpMantDecShiftRight_23U_8U_10U_least_bits_22_0_sva_S = 0 ;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R2 [28:23] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X2 [28:23] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C2 [28:23] } = 0;
  logic [28:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C3 ;
  logic [28:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R3 ;
  logic [28:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X3 ;
  logic [23:0] FpMantDecShiftRight_23U_8U_10U_least_mask_sva_C0 ;
  logic [23:0] FpMantDecShiftRight_23U_8U_10U_least_mask_sva_R0 ;
  logic [23:0] FpMantDecShiftRight_23U_8U_10U_least_mask_sva_X0 ;
  assign FpMantDecShiftRight_23U_8U_10U_least_bits_22_0_sva_T = FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_T [22:0] | FpMantDecShiftRight_23U_8U_10U_least_mask_sva_T [22:0] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C3 [22:0] = FpMantDecShiftRight_23U_8U_10U_least_bits_22_0_sva_C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X3 [22:0] = FpMantDecShiftRight_23U_8U_10U_least_bits_22_0_sva_X ;
  assign FpMantDecShiftRight_23U_8U_10U_least_mask_sva_C0 [22:0] = FpMantDecShiftRight_23U_8U_10U_least_bits_22_0_sva_C ;
  assign FpMantDecShiftRight_23U_8U_10U_least_mask_sva_X0 [22:0] = FpMantDecShiftRight_23U_8U_10U_least_bits_22_0_sva_X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R3 [22:0] = ( FpMantDecShiftRight_23U_8U_10U_least_bits_22_0_sva_R | FpMantDecShiftRight_23U_8U_10U_least_bits_22_0_sva_C & FpMantDecShiftRight_23U_8U_10U_least_mask_sva_T [22:0] ) & { 23{ FpMantDecShiftRight_23U_8U_10U_least_mask_sva[22:0] != 0 }} ;
  assign FpMantDecShiftRight_23U_8U_10U_least_mask_sva_R0 [22:0] = ( FpMantDecShiftRight_23U_8U_10U_least_bits_22_0_sva_R | FpMantDecShiftRight_23U_8U_10U_least_bits_22_0_sva_C & FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_T [22:0] ) & { 23{ FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1[22:0] != 0 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c = FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp & _091_;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_S = 0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_C0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_R0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_X0 ;
  logic [0:0] _091__C0 ;
  logic [0:0] _091__R0 ;
  logic [0:0] _091__X0 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_T = FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_T | _091__T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_C0 = FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_X0 = FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_X ;
  assign _091__C0 = FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_C ;
  assign _091__X0 = FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_R0 = ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_R | FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_C & _091__T ) & { 1{ _091_ != 0 }} ;
  assign _091__R0 = ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_R | FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_C & FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp != 0 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp = FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3 & _140_;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_S = 0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_C2 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_R2 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_X2 ;
  logic [0:0] _140__C2 ;
  logic [0:0] _140__R2 ;
  logic [0:0] _140__X2 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_T = FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_T | _140__T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_C2 = FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_X2 = FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_X ;
  assign _140__C2 = FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_C ;
  assign _140__X2 = FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_R2 = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_R | FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_C & _140__T ) & { 1{ _140_ != 0 }} ;
  assign _140__R2 = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_R | FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_C & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3 != 0 }} ;
  assign and_dcpl_29 = FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl[8] & or_9_cse;
  assign and_dcpl_29_S = 0 ;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R0 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R0 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R0 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R0 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R0 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R0 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R0 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R0 [7] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X0 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X0 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X0 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X0 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X0 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X0 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X0 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X0 [7] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C0 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C0 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C0 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C0 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C0 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C0 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C0 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C0 [7] } = 0;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C1 ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R1 ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X1 ;
  logic [0:0] or_9_cse_C7 ;
  logic [0:0] or_9_cse_R7 ;
  logic [0:0] or_9_cse_X7 ;
  assign and_dcpl_29_T = FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_T [8] | or_9_cse_T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C1 [8] = and_dcpl_29_C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X1 [8] = and_dcpl_29_X ;
  assign or_9_cse_C7 = and_dcpl_29_C ;
  assign or_9_cse_X7 = and_dcpl_29_X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R1 [8] = ( and_dcpl_29_R | and_dcpl_29_C & or_9_cse_T ) & { 1{ or_9_cse != 0 }} ;
  assign or_9_cse_R7 = ( and_dcpl_29_R | and_dcpl_29_C & FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_T [8] ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl[8] != 0 }} ;
  assign and_tmp = and_dcpl_29 & chn_a_rsci_bawt;
  assign and_tmp_S = 0 ;
  logic [0:0] and_dcpl_29_C1 ;
  logic [0:0] and_dcpl_29_R1 ;
  logic [0:0] and_dcpl_29_X1 ;
  logic [0:0] chn_a_rsci_bawt_C3 ;
  logic [0:0] chn_a_rsci_bawt_R3 ;
  logic [0:0] chn_a_rsci_bawt_X3 ;
  assign and_tmp_T = and_dcpl_29_T | chn_a_rsci_bawt_T ;
  assign and_dcpl_29_C1 = and_tmp_C ;
  assign and_dcpl_29_X1 = and_tmp_X ;
  assign chn_a_rsci_bawt_C3 = and_tmp_C ;
  assign chn_a_rsci_bawt_X3 = and_tmp_X ;
  assign and_dcpl_29_R1 = ( and_tmp_R | and_tmp_C & chn_a_rsci_bawt_T ) & { 1{ chn_a_rsci_bawt != 0 }} ;
  assign chn_a_rsci_bawt_R3 = ( and_tmp_R | and_tmp_C & and_dcpl_29_T ) & { 1{ and_dcpl_29 != 0 }} ;
  assign and_80_nl = FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4 & main_stage_v_2;
  assign and_80_nl_S = 0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_C2 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_R2 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_X2 ;
  logic [0:0] main_stage_v_2_C1 ;
  logic [0:0] main_stage_v_2_R1 ;
  logic [0:0] main_stage_v_2_X1 ;
  assign and_80_nl_T = FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_T | main_stage_v_2_T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_C2 = and_80_nl_C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_X2 = and_80_nl_X ;
  assign main_stage_v_2_C1 = and_80_nl_C ;
  assign main_stage_v_2_X1 = and_80_nl_X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_R2 = ( and_80_nl_R | and_80_nl_C & main_stage_v_2_T ) & { 1{ main_stage_v_2 != 0 }} ;
  assign main_stage_v_2_R1 = ( and_80_nl_R | and_80_nl_C & FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4 != 0 }} ;
  assign _092_ = and_80_nl & reg_chn_o_rsci_ld_core_psct_cse;
  assign _092__S = 0 ;
  logic [0:0] and_80_nl_C0 ;
  logic [0:0] and_80_nl_R0 ;
  logic [0:0] and_80_nl_X0 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C0 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R0 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X0 ;
  assign _092__T = and_80_nl_T | reg_chn_o_rsci_ld_core_psct_cse_T ;
  assign and_80_nl_C0 = _092__C ;
  assign and_80_nl_X0 = _092__X ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C0 = _092__C ;
  assign reg_chn_o_rsci_ld_core_psct_cse_X0 = _092__X ;
  assign and_80_nl_R0 = ( _092__R | _092__C & reg_chn_o_rsci_ld_core_psct_cse_T ) & { 1{ reg_chn_o_rsci_ld_core_psct_cse != 0 }} ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R0 = ( _092__R | _092__C & and_80_nl_T ) & { 1{ and_80_nl != 0 }} ;
  assign and_81_nl = _092_ & _145_;
  assign and_81_nl_S = 0 ;
  logic [0:0] _092__C0 ;
  logic [0:0] _092__R0 ;
  logic [0:0] _092__X0 ;
  logic [0:0] _145__C0 ;
  logic [0:0] _145__R0 ;
  logic [0:0] _145__X0 ;
  assign and_81_nl_T = _092__T | _145__T ;
  assign _092__C0 = and_81_nl_C ;
  assign _092__X0 = and_81_nl_X ;
  assign _145__C0 = and_81_nl_C ;
  assign _145__X0 = and_81_nl_X ;
  assign _092__R0 = ( and_81_nl_R | and_81_nl_C & _145__T ) & { 1{ _145_ != 0 }} ;
  assign _145__R0 = ( and_81_nl_R | and_81_nl_C & _092__T ) & { 1{ _092_ != 0 }} ;
  assign _093_ = FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3;
  assign _093__S = 0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_C3 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_R3 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X3 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_C0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_R0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_X0 ;
  assign _093__T = FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_T | FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_C3 = _093__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X3 = _093__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_C0 = _093__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_X0 = _093__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_R3 = ( _093__R | _093__C & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3 != 0 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_R0 = ( _093__R | _093__C & FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3 != 0 }} ;
  assign _094_ = or_9_cse & or_tmp_28;
  assign _094__S = 0 ;
  logic [0:0] or_9_cse_C8 ;
  logic [0:0] or_9_cse_R8 ;
  logic [0:0] or_9_cse_X8 ;
  logic [0:0] or_tmp_28_C0 ;
  logic [0:0] or_tmp_28_R0 ;
  logic [0:0] or_tmp_28_X0 ;
  assign _094__T = or_9_cse_T | or_tmp_28_T ;
  assign or_9_cse_C8 = _094__C ;
  assign or_9_cse_X8 = _094__X ;
  assign or_tmp_28_C0 = _094__C ;
  assign or_tmp_28_X0 = _094__X ;
  assign or_9_cse_R8 = ( _094__R | _094__C & or_tmp_28_T ) & { 1{ or_tmp_28 != 0 }} ;
  assign or_tmp_28_R0 = ( _094__R | _094__C & or_9_cse_T ) & { 1{ or_9_cse != 0 }} ;
  assign _095_ = FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3;
  assign _095__S = 0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_C1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_R1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_X1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_C3 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_R3 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_X3 ;
  assign _095__T = FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_T | FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_C1 = _095__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_X1 = _095__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_C3 = _095__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_X3 = _095__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_R1 = ( _095__R | _095__C & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3 != 0 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_R3 = ( _095__R | _095__C & FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp != 0 }} ;
  assign _096_ = _095_ & FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3;
  assign _096__S = 0 ;
  logic [0:0] _095__C0 ;
  logic [0:0] _095__R0 ;
  logic [0:0] _095__X0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_C4 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_R4 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X4 ;
  assign _096__T = _095__T | FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_T ;
  assign _095__C0 = _096__C ;
  assign _095__X0 = _096__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_C4 = _096__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X4 = _096__X ;
  assign _095__R0 = ( _096__R | _096__C & FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3 != 0 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_R4 = ( _096__R | _096__C & _095__T ) & { 1{ _095_ != 0 }} ;
  assign _097_ = _096_ & _140_;
  assign _097__S = 0 ;
  logic [0:0] _096__C0 ;
  logic [0:0] _096__R0 ;
  logic [0:0] _096__X0 ;
  logic [0:0] _140__C3 ;
  logic [0:0] _140__R3 ;
  logic [0:0] _140__X3 ;
  assign _097__T = _096__T | _140__T ;
  assign _096__C0 = _097__C ;
  assign _096__X0 = _097__X ;
  assign _140__C3 = _097__C ;
  assign _140__X3 = _097__X ;
  assign _096__R0 = ( _097__R | _097__C & _140__T ) & { 1{ _140_ != 0 }} ;
  assign _140__R3 = ( _097__R | _097__C & _096__T ) & { 1{ _096_ != 0 }} ;
  assign and_dcpl_9 = _145_ & reg_chn_o_rsci_ld_core_psct_cse;
  assign and_dcpl_9_S = 0 ;
  logic [0:0] _145__C1 ;
  logic [0:0] _145__R1 ;
  logic [0:0] _145__X1 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C1 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R1 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X1 ;
  assign and_dcpl_9_T = _145__T | reg_chn_o_rsci_ld_core_psct_cse_T ;
  assign _145__C1 = and_dcpl_9_C ;
  assign _145__X1 = and_dcpl_9_X ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C1 = and_dcpl_9_C ;
  assign reg_chn_o_rsci_ld_core_psct_cse_X1 = and_dcpl_9_X ;
  assign _145__R1 = ( and_dcpl_9_R | and_dcpl_9_C & reg_chn_o_rsci_ld_core_psct_cse_T ) & { 1{ reg_chn_o_rsci_ld_core_psct_cse != 0 }} ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R1 = ( and_dcpl_9_R | and_dcpl_9_C & _145__T ) & { 1{ _145_ != 0 }} ;
  assign and_dcpl_15 = or_9_cse & main_stage_v_2;
  assign and_dcpl_15_S = 0 ;
  logic [0:0] or_9_cse_C9 ;
  logic [0:0] or_9_cse_R9 ;
  logic [0:0] or_9_cse_X9 ;
  logic [0:0] main_stage_v_2_C2 ;
  logic [0:0] main_stage_v_2_R2 ;
  logic [0:0] main_stage_v_2_X2 ;
  assign and_dcpl_15_T = or_9_cse_T | main_stage_v_2_T ;
  assign or_9_cse_C9 = and_dcpl_15_C ;
  assign or_9_cse_X9 = and_dcpl_15_X ;
  assign main_stage_v_2_C2 = and_dcpl_15_C ;
  assign main_stage_v_2_X2 = and_dcpl_15_X ;
  assign or_9_cse_R9 = ( and_dcpl_15_R | and_dcpl_15_C & main_stage_v_2_T ) & { 1{ main_stage_v_2 != 0 }} ;
  assign main_stage_v_2_R2 = ( and_dcpl_15_R | and_dcpl_15_C & or_9_cse_T ) & { 1{ or_9_cse != 0 }} ;
  assign and_dcpl_16 = chn_o_rsci_bawt & reg_chn_o_rsci_ld_core_psct_cse;
  assign and_dcpl_16_S = 0 ;
  logic [0:0] chn_o_rsci_bawt_C0 ;
  logic [0:0] chn_o_rsci_bawt_R0 ;
  logic [0:0] chn_o_rsci_bawt_X0 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C2 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R2 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X2 ;
  assign and_dcpl_16_T = chn_o_rsci_bawt_T | reg_chn_o_rsci_ld_core_psct_cse_T ;
  assign chn_o_rsci_bawt_C0 = and_dcpl_16_C ;
  assign chn_o_rsci_bawt_X0 = and_dcpl_16_X ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C2 = and_dcpl_16_C ;
  assign reg_chn_o_rsci_ld_core_psct_cse_X2 = and_dcpl_16_X ;
  assign chn_o_rsci_bawt_R0 = ( and_dcpl_16_R | and_dcpl_16_C & reg_chn_o_rsci_ld_core_psct_cse_T ) & { 1{ reg_chn_o_rsci_ld_core_psct_cse != 0 }} ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R2 = ( and_dcpl_16_R | and_dcpl_16_C & chn_o_rsci_bawt_T ) & { 1{ chn_o_rsci_bawt != 0 }} ;
  assign and_dcpl_17 = and_dcpl_16 & _133_;
  assign and_dcpl_17_S = 0 ;
  logic [0:0] and_dcpl_16_C0 ;
  logic [0:0] and_dcpl_16_R0 ;
  logic [0:0] and_dcpl_16_X0 ;
  logic [0:0] _133__C0 ;
  logic [0:0] _133__R0 ;
  logic [0:0] _133__X0 ;
  assign and_dcpl_17_T = and_dcpl_16_T | _133__T ;
  assign and_dcpl_16_C0 = and_dcpl_17_C ;
  assign and_dcpl_16_X0 = and_dcpl_17_X ;
  assign _133__C0 = and_dcpl_17_C ;
  assign _133__X0 = and_dcpl_17_X ;
  assign and_dcpl_16_R0 = ( and_dcpl_17_R | and_dcpl_17_C & _133__T ) & { 1{ _133_ != 0 }} ;
  assign _133__R0 = ( and_dcpl_17_R | and_dcpl_17_C & and_dcpl_16_T ) & { 1{ and_dcpl_16 != 0 }} ;
  assign or_tmp_50 = main_stage_en_1 & fsm_output[1];
  assign or_tmp_50_S = 0 ;
  logic [0:0] main_stage_en_1_C0 ;
  logic [0:0] main_stage_en_1_R0 ;
  logic [0:0] main_stage_en_1_X0 ;
  logic [1:0] fsm_output_C0 ;
  logic [1:0] fsm_output_R0 ;
  logic [1:0] fsm_output_X0 ;
  assign or_tmp_50_T = main_stage_en_1_T | fsm_output_T [1] ;
  assign main_stage_en_1_C0 = or_tmp_50_C ;
  assign main_stage_en_1_X0 = or_tmp_50_X ;
  assign fsm_output_C0 [1] = or_tmp_50_C ;
  assign fsm_output_X0 [1] = or_tmp_50_X ;
  assign main_stage_en_1_R0 = ( or_tmp_50_R | or_tmp_50_C & fsm_output_T [1] ) & { 1{ fsm_output[1] != 0 }} ;
  assign fsm_output_R0 [1] = ( or_tmp_50_R | or_tmp_50_C & main_stage_en_1_T ) & { 1{ main_stage_en_1 != 0 }} ;
  assign chn_o_rsci_d_9_0_mx0c1 = and_dcpl_15 & _147_;
  assign chn_o_rsci_d_9_0_mx0c1_S = 0 ;
  logic [0:0] and_dcpl_15_C0 ;
  logic [0:0] and_dcpl_15_R0 ;
  logic [0:0] and_dcpl_15_X0 ;
  logic [0:0] _147__C0 ;
  logic [0:0] _147__R0 ;
  logic [0:0] _147__X0 ;
  assign chn_o_rsci_d_9_0_mx0c1_T = and_dcpl_15_T | _147__T ;
  assign and_dcpl_15_C0 = chn_o_rsci_d_9_0_mx0c1_C ;
  assign and_dcpl_15_X0 = chn_o_rsci_d_9_0_mx0c1_X ;
  assign _147__C0 = chn_o_rsci_d_9_0_mx0c1_C ;
  assign _147__X0 = chn_o_rsci_d_9_0_mx0c1_X ;
  assign and_dcpl_15_R0 = ( chn_o_rsci_d_9_0_mx0c1_R | chn_o_rsci_d_9_0_mx0c1_C & _147__T ) & { 1{ _147_ != 0 }} ;
  assign _147__R0 = ( chn_o_rsci_d_9_0_mx0c1_R | chn_o_rsci_d_9_0_mx0c1_C & and_dcpl_15_T ) & { 1{ and_dcpl_15 != 0 }} ;
  assign _098_ = main_stage_v_1 & _120_;
  assign _098__S = 0 ;
  logic [0:0] main_stage_v_1_C2 ;
  logic [0:0] main_stage_v_1_R2 ;
  logic [0:0] main_stage_v_1_X2 ;
  logic [0:0] _120__C0 ;
  logic [0:0] _120__R0 ;
  logic [0:0] _120__X0 ;
  assign _098__T = main_stage_v_1_T | _120__T ;
  assign main_stage_v_1_C2 = _098__C ;
  assign main_stage_v_1_X2 = _098__X ;
  assign _120__C0 = _098__C ;
  assign _120__X0 = _098__X ;
  assign main_stage_v_1_R2 = ( _098__R | _098__C & _120__T ) & { 1{ _120_ != 0 }} ;
  assign _120__R0 = ( _098__R | _098__C & main_stage_v_1_T ) & { 1{ main_stage_v_1 != 0 }} ;
  assign main_stage_v_1_mx0c1 = _098_ & or_9_cse;
  assign main_stage_v_1_mx0c1_S = 0 ;
  logic [0:0] _098__C0 ;
  logic [0:0] _098__R0 ;
  logic [0:0] _098__X0 ;
  logic [0:0] or_9_cse_C10 ;
  logic [0:0] or_9_cse_R10 ;
  logic [0:0] or_9_cse_X10 ;
  assign main_stage_v_1_mx0c1_T = _098__T | or_9_cse_T ;
  assign _098__C0 = main_stage_v_1_mx0c1_C ;
  assign _098__X0 = main_stage_v_1_mx0c1_X ;
  assign or_9_cse_C10 = main_stage_v_1_mx0c1_C ;
  assign or_9_cse_X10 = main_stage_v_1_mx0c1_X ;
  assign _098__R0 = ( main_stage_v_1_mx0c1_R | main_stage_v_1_mx0c1_C & or_9_cse_T ) & { 1{ or_9_cse != 0 }} ;
  assign or_9_cse_R10 = ( main_stage_v_1_mx0c1_R | main_stage_v_1_mx0c1_C & _098__T ) & { 1{ _098_ != 0 }} ;
  assign _099_ = or_9_cse & _002_;
  assign _099__S = 0 ;
  logic [0:0] or_9_cse_C11 ;
  logic [0:0] or_9_cse_R11 ;
  logic [0:0] or_9_cse_X11 ;
  logic [0:0] _002__C0 ;
  logic [0:0] _002__R0 ;
  logic [0:0] _002__X0 ;
  assign _099__T = or_9_cse_T | _002__T ;
  assign or_9_cse_C11 = _099__C ;
  assign or_9_cse_X11 = _099__X ;
  assign _002__C0 = _099__C ;
  assign _002__X0 = _099__X ;
  assign or_9_cse_R11 = ( _099__R | _099__C & _002__T ) & { 1{ _002_ != 0 }} ;
  assign _002__R0 = ( _099__R | _099__C & or_9_cse_T ) & { 1{ or_9_cse != 0 }} ;
  assign main_stage_v_2_mx0c1 = _099_ & main_stage_v_2;
  assign main_stage_v_2_mx0c1_S = 0 ;
  logic [0:0] _099__C0 ;
  logic [0:0] _099__R0 ;
  logic [0:0] _099__X0 ;
  logic [0:0] main_stage_v_2_C3 ;
  logic [0:0] main_stage_v_2_R3 ;
  logic [0:0] main_stage_v_2_X3 ;
  assign main_stage_v_2_mx0c1_T = _099__T | main_stage_v_2_T ;
  assign _099__C0 = main_stage_v_2_mx0c1_C ;
  assign _099__X0 = main_stage_v_2_mx0c1_X ;
  assign main_stage_v_2_C3 = main_stage_v_2_mx0c1_C ;
  assign main_stage_v_2_X3 = main_stage_v_2_mx0c1_X ;
  assign _099__R0 = ( main_stage_v_2_mx0c1_R | main_stage_v_2_mx0c1_C & main_stage_v_2_T ) & { 1{ main_stage_v_2 != 0 }} ;
  assign main_stage_v_2_R3 = ( main_stage_v_2_mx0c1_R | main_stage_v_2_mx0c1_C & _099__T ) & { 1{ _099_ != 0 }} ;
  assign _100_ = _148_ & fsm_output[1];
  assign _100__S = 0 ;
  assign { fsm_output_R0 [0] } = 0;
  assign { fsm_output_X0 [0] } = 0;
  assign { fsm_output_C0 [0] } = 0;
  logic [0:0] _148__C0 ;
  logic [0:0] _148__R0 ;
  logic [0:0] _148__X0 ;
  logic [1:0] fsm_output_C1 ;
  logic [1:0] fsm_output_R1 ;
  logic [1:0] fsm_output_X1 ;
  assign _100__T = _148__T | fsm_output_T [1] ;
  assign _148__C0 = _100__C ;
  assign _148__X0 = _100__X ;
  assign fsm_output_C1 [1] = _100__C ;
  assign fsm_output_X1 [1] = _100__X ;
  assign _148__R0 = ( _100__R | _100__C & fsm_output_T [1] ) & { 1{ fsm_output[1] != 0 }} ;
  assign fsm_output_R1 [1] = ( _100__R | _100__C & _148__T ) & { 1{ _148_ != 0 }} ;
  assign _101_ = core_wen & chn_a_rsci_ld_core_psct_mx0c0;
  assign _101__S = 0 ;
  logic [0:0] core_wen_C9 ;
  logic [0:0] core_wen_R9 ;
  logic [0:0] core_wen_X9 ;
  logic [0:0] chn_a_rsci_ld_core_psct_mx0c0_C0 ;
  logic [0:0] chn_a_rsci_ld_core_psct_mx0c0_R0 ;
  logic [0:0] chn_a_rsci_ld_core_psct_mx0c0_X0 ;
  assign _101__T = core_wen_T | chn_a_rsci_ld_core_psct_mx0c0_T ;
  assign core_wen_C9 = _101__C ;
  assign core_wen_X9 = _101__X ;
  assign chn_a_rsci_ld_core_psct_mx0c0_C0 = _101__C ;
  assign chn_a_rsci_ld_core_psct_mx0c0_X0 = _101__X ;
  assign core_wen_R9 = ( _101__R | _101__C & chn_a_rsci_ld_core_psct_mx0c0_T ) & { 1{ chn_a_rsci_ld_core_psct_mx0c0 != 0 }} ;
  assign chn_a_rsci_ld_core_psct_mx0c0_R0 = ( _101__R | _101__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _102_ = FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1 & _150_;
  assign _102__S = 0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_C0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_R0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_X0 ;
  logic [0:0] _150__C0 ;
  logic [0:0] _150__R0 ;
  logic [0:0] _150__X0 ;
  assign _102__T = FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_T | _150__T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_C0 = _102__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_X0 = _102__X ;
  assign _150__C0 = _102__C ;
  assign _150__X0 = _102__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_R0 = ( _102__R | _102__C & _150__T ) & { 1{ _150_ != 0 }} ;
  assign _150__R0 = ( _102__R | _102__C & FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1 != 0 }} ;
  assign _103_ = and_dcpl_15 & IsNaN_8U_23U_land_lpi_1_dfm_2;
  assign _103__S = 0 ;
  logic [0:0] and_dcpl_15_C1 ;
  logic [0:0] and_dcpl_15_R1 ;
  logic [0:0] and_dcpl_15_X1 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_2_C0 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_2_R0 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_2_X0 ;
  assign _103__T = and_dcpl_15_T | IsNaN_8U_23U_land_lpi_1_dfm_2_T ;
  assign and_dcpl_15_C1 = _103__C ;
  assign and_dcpl_15_X1 = _103__X ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_2_C0 = _103__C ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_2_X0 = _103__X ;
  assign and_dcpl_15_R1 = ( _103__R | _103__C & IsNaN_8U_23U_land_lpi_1_dfm_2_T ) & { 1{ IsNaN_8U_23U_land_lpi_1_dfm_2 != 0 }} ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_2_R0 = ( _103__R | _103__C & and_dcpl_15_T ) & { 1{ and_dcpl_15 != 0 }} ;
  assign _104_ = core_wen & _224_;
  assign _104__S = 0 ;
  logic [0:0] core_wen_C10 ;
  logic [0:0] core_wen_R10 ;
  logic [0:0] core_wen_X10 ;
  logic [0:0] _224__C0 ;
  logic [0:0] _224__R0 ;
  logic [0:0] _224__X0 ;
  assign _104__T = core_wen_T | _224__T ;
  assign core_wen_C10 = _104__C ;
  assign core_wen_X10 = _104__X ;
  assign _224__C0 = _104__C ;
  assign _224__X0 = _104__X ;
  assign core_wen_R10 = ( _104__R | _104__C & _224__T ) & { 1{ _224_ != 0 }} ;
  assign _224__R0 = ( _104__R | _104__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _105_ = core_wen & _225_;
  assign _105__S = 0 ;
  logic [0:0] core_wen_C11 ;
  logic [0:0] core_wen_R11 ;
  logic [0:0] core_wen_X11 ;
  logic [0:0] _225__C0 ;
  logic [0:0] _225__R0 ;
  logic [0:0] _225__X0 ;
  assign _105__T = core_wen_T | _225__T ;
  assign core_wen_C11 = _105__C ;
  assign core_wen_X11 = _105__X ;
  assign _225__C0 = _105__C ;
  assign _225__X0 = _105__X ;
  assign core_wen_R11 = ( _105__R | _105__C & _225__T ) & { 1{ _225_ != 0 }} ;
  assign _225__R0 = ( _105__R | _105__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _106_ = core_wen & _226_;
  assign _106__S = 0 ;
  logic [0:0] core_wen_C12 ;
  logic [0:0] core_wen_R12 ;
  logic [0:0] core_wen_X12 ;
  logic [0:0] _226__C0 ;
  logic [0:0] _226__R0 ;
  logic [0:0] _226__X0 ;
  assign _106__T = core_wen_T | _226__T ;
  assign core_wen_C12 = _106__C ;
  assign core_wen_X12 = _106__X ;
  assign _226__C0 = _106__C ;
  assign _226__X0 = _106__X ;
  assign core_wen_R12 = ( _106__R | _106__C & _226__T ) & { 1{ _226_ != 0 }} ;
  assign _226__R0 = ( _106__R | _106__C & core_wen_T ) & { 1{ core_wen != 0 }} ;
  assign _107_ = _048_ & mux_3_nl;
  assign _107__S = 0 ;
  logic [0:0] _048__C11 ;
  logic [0:0] _048__R11 ;
  logic [0:0] _048__X11 ;
  logic [0:0] mux_3_nl_C0 ;
  logic [0:0] mux_3_nl_R0 ;
  logic [0:0] mux_3_nl_X0 ;
  assign _107__T = _048__T | mux_3_nl_T ;
  assign _048__C11 = _107__C ;
  assign _048__X11 = _107__X ;
  assign mux_3_nl_C0 = _107__C ;
  assign mux_3_nl_X0 = _107__X ;
  assign _048__R11 = ( _107__R | _107__C & mux_3_nl_T ) & { 1{ mux_3_nl != 0 }} ;
  assign mux_3_nl_R0 = ( _107__R | _107__C & _048__T ) & { 1{ _048_ != 0 }} ;
  assign _109_ = chn_a_rsci_d_mxwt[22:13] == 10'b1111111111;
  assign _109__S = 0 ;
  assign _109__T = | chn_a_rsci_d_mxwt_T [22:13] ;
  assign chn_a_rsci_d_mxwt_C1 [22:13] = { 10{ _109__C }} ;
  assign chn_a_rsci_d_mxwt_R1 [22:13] = { 10{ _109__R }} ;
  assign chn_a_rsci_d_mxwt_X1 [22:13] = { 10{ _109__X }} ;
  assign _110_ = FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3 == 6'b111111;
  assign _110__S = 0 ;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_R0 [5:5] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_X0 [5:5] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_C0 [5:5] } = 0;
  logic [5:0] FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_C1 ;
  logic [5:0] FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_R1 ;
  logic [5:0] FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_X1 ;
  assign _110__T = | FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_C1 = { 6{ _110__C }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_R1 = { 6{ _110__R }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_X1 = { 6{ _110__X }} ;
  assign _111_ = chn_a_rsci_d_mxwt[30:23] == 8'b11111111;
  assign _111__S = 0 ;
  assign { chn_a_rsci_d_mxwt_R1 [0], chn_a_rsci_d_mxwt_R1 [1], chn_a_rsci_d_mxwt_R1 [2], chn_a_rsci_d_mxwt_R1 [3], chn_a_rsci_d_mxwt_R1 [4], chn_a_rsci_d_mxwt_R1 [5], chn_a_rsci_d_mxwt_R1 [6], chn_a_rsci_d_mxwt_R1 [7], chn_a_rsci_d_mxwt_R1 [8], chn_a_rsci_d_mxwt_R1 [9], chn_a_rsci_d_mxwt_R1 [10], chn_a_rsci_d_mxwt_R1 [11], chn_a_rsci_d_mxwt_R1 [31:31] } = 0;
  assign { chn_a_rsci_d_mxwt_X1 [0], chn_a_rsci_d_mxwt_X1 [1], chn_a_rsci_d_mxwt_X1 [2], chn_a_rsci_d_mxwt_X1 [3], chn_a_rsci_d_mxwt_X1 [4], chn_a_rsci_d_mxwt_X1 [5], chn_a_rsci_d_mxwt_X1 [6], chn_a_rsci_d_mxwt_X1 [7], chn_a_rsci_d_mxwt_X1 [8], chn_a_rsci_d_mxwt_X1 [9], chn_a_rsci_d_mxwt_X1 [10], chn_a_rsci_d_mxwt_X1 [11], chn_a_rsci_d_mxwt_X1 [31:31] } = 0;
  assign { chn_a_rsci_d_mxwt_C1 [0], chn_a_rsci_d_mxwt_C1 [1], chn_a_rsci_d_mxwt_C1 [2], chn_a_rsci_d_mxwt_C1 [3], chn_a_rsci_d_mxwt_C1 [4], chn_a_rsci_d_mxwt_C1 [5], chn_a_rsci_d_mxwt_C1 [6], chn_a_rsci_d_mxwt_C1 [7], chn_a_rsci_d_mxwt_C1 [8], chn_a_rsci_d_mxwt_C1 [9], chn_a_rsci_d_mxwt_C1 [10], chn_a_rsci_d_mxwt_C1 [11], chn_a_rsci_d_mxwt_C1 [31:31] } = 0;
  logic [31:0] chn_a_rsci_d_mxwt_C2 ;
  logic [31:0] chn_a_rsci_d_mxwt_R2 ;
  logic [31:0] chn_a_rsci_d_mxwt_X2 ;
  assign _111__T = | chn_a_rsci_d_mxwt_T [30:23] ;
  assign chn_a_rsci_d_mxwt_C2 [30:23] = { 8{ _111__C }} ;
  assign chn_a_rsci_d_mxwt_R2 [30:23] = { 8{ _111__R }} ;
  assign chn_a_rsci_d_mxwt_X2 [30:23] = { 8{ _111__X }} ;
  assign _112_ = | FpMantDecShiftRight_23U_8U_10U_guard_bits_22_0_sva;
  logic [22:0] FpMantDecShiftRight_23U_8U_10U_guard_bits_22_0_sva_C0 ;
  logic [22:0] FpMantDecShiftRight_23U_8U_10U_guard_bits_22_0_sva_R0 ;
  logic [22:0] FpMantDecShiftRight_23U_8U_10U_guard_bits_22_0_sva_X0 ;
  assign _112__T = | FpMantDecShiftRight_23U_8U_10U_guard_bits_22_0_sva_T ;
  assign FpMantDecShiftRight_23U_8U_10U_guard_bits_22_0_sva_C0 = { 23{ _112__C }} ;
  assign FpMantDecShiftRight_23U_8U_10U_guard_bits_22_0_sva_X0 = { 23{ _112__X }} ;
  assign FpMantDecShiftRight_23U_8U_10U_guard_bits_22_0_sva_R0 = { 23{ _112__R }} & FpMantDecShiftRight_23U_8U_10U_guard_bits_22_0_sva ;
  assign _112__S = 0 ;
  assign _113_ = | FpMantDecShiftRight_23U_8U_10U_stick_bits_22_0_sva;
  logic [22:0] FpMantDecShiftRight_23U_8U_10U_stick_bits_22_0_sva_C0 ;
  logic [22:0] FpMantDecShiftRight_23U_8U_10U_stick_bits_22_0_sva_R0 ;
  logic [22:0] FpMantDecShiftRight_23U_8U_10U_stick_bits_22_0_sva_X0 ;
  assign _113__T = | FpMantDecShiftRight_23U_8U_10U_stick_bits_22_0_sva_T ;
  assign FpMantDecShiftRight_23U_8U_10U_stick_bits_22_0_sva_C0 = { 23{ _113__C }} ;
  assign FpMantDecShiftRight_23U_8U_10U_stick_bits_22_0_sva_X0 = { 23{ _113__X }} ;
  assign FpMantDecShiftRight_23U_8U_10U_stick_bits_22_0_sva_R0 = { 23{ _113__R }} & FpMantDecShiftRight_23U_8U_10U_stick_bits_22_0_sva ;
  assign _113__S = 0 ;
  assign _114_ = | FpMantDecShiftRight_23U_8U_10U_least_bits_22_0_sva;
  logic [22:0] FpMantDecShiftRight_23U_8U_10U_least_bits_22_0_sva_C0 ;
  logic [22:0] FpMantDecShiftRight_23U_8U_10U_least_bits_22_0_sva_R0 ;
  logic [22:0] FpMantDecShiftRight_23U_8U_10U_least_bits_22_0_sva_X0 ;
  assign _114__T = | FpMantDecShiftRight_23U_8U_10U_least_bits_22_0_sva_T ;
  assign FpMantDecShiftRight_23U_8U_10U_least_bits_22_0_sva_C0 = { 23{ _114__C }} ;
  assign FpMantDecShiftRight_23U_8U_10U_least_bits_22_0_sva_X0 = { 23{ _114__X }} ;
  assign FpMantDecShiftRight_23U_8U_10U_least_bits_22_0_sva_R0 = { 23{ _114__R }} & FpMantDecShiftRight_23U_8U_10U_least_bits_22_0_sva ;
  assign _114__S = 0 ;
  assign _115_ = | chn_a_rsci_d_mxwt[22:0];
  assign _115__T = | chn_a_rsci_d_mxwt_T [22:0] ;
  assign chn_a_rsci_d_mxwt_C2 [22:0] = { 23{ _115__C }} ;
  assign chn_a_rsci_d_mxwt_X2 [22:0] = { 23{ _115__X }} ;
  assign chn_a_rsci_d_mxwt_R2 [22:0] = { 23{ _115__R }} & chn_a_rsci_d_mxwt[22:0] ;
  assign _115__S = 0 ;
  assign _116_ = ~ and_dcpl_9;
  logic [0:0] and_dcpl_9_C0 ;
  logic [0:0] and_dcpl_9_R0 ;
  logic [0:0] and_dcpl_9_X0 ;
  assign _116__T = and_dcpl_9_T ;
  assign and_dcpl_9_C0 = _116__C ;
  assign and_dcpl_9_R0 = _116__R ;
  assign and_dcpl_9_X0 = _116__X ;
  assign _116__S = 0 ;
  assign _117_ = ~ main_stage_v_2_mx0c1;
  logic [0:0] main_stage_v_2_mx0c1_C0 ;
  logic [0:0] main_stage_v_2_mx0c1_R0 ;
  logic [0:0] main_stage_v_2_mx0c1_X0 ;
  assign _117__T = main_stage_v_2_mx0c1_T ;
  assign main_stage_v_2_mx0c1_C0 = _117__C ;
  assign main_stage_v_2_mx0c1_R0 = _117__R ;
  assign main_stage_v_2_mx0c1_X0 = _117__X ;
  assign _117__S = 0 ;
  assign _119_ = ~ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl[7];
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C0 ;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R0 ;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X0 ;
  assign _119__T = FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_T [7] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C0 [7] = _119__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R0 [7] = _119__R ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X0 [7] = _119__X ;
  assign _119__S = 0 ;
  assign _120_ = ~ chn_a_rsci_bawt;
  logic [0:0] chn_a_rsci_bawt_C4 ;
  logic [0:0] chn_a_rsci_bawt_R4 ;
  logic [0:0] chn_a_rsci_bawt_X4 ;
  assign _120__T = chn_a_rsci_bawt_T ;
  assign chn_a_rsci_bawt_C4 = _120__C ;
  assign chn_a_rsci_bawt_R4 = _120__R ;
  assign chn_a_rsci_bawt_X4 = _120__X ;
  assign _120__S = 0 ;
  assign _121_ = ~ _166_;
  logic [0:0] _166__C0 ;
  logic [0:0] _166__R0 ;
  logic [0:0] _166__X0 ;
  assign _121__T = _166__T ;
  assign _166__C0 = _121__C ;
  assign _166__R0 = _121__R ;
  assign _166__X0 = _121__X ;
  assign _121__S = 0 ;
  assign _122_ = ~ FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl[8];
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R1 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R1 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R1 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R1 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R1 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R1 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R1 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R1 [7] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X1 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X1 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X1 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X1 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X1 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X1 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X1 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X1 [7] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C1 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C1 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C1 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C1 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C1 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C1 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C1 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C1 [7] } = 0;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C2 ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R2 ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X2 ;
  assign _122__T = FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_T [8] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C2 [8] = _122__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R2 [8] = _122__R ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X2 [8] = _122__X ;
  assign _122__S = 0 ;
  assign _123_ = ~ _168_;
  logic [0:0] _168__C0 ;
  logic [0:0] _168__R0 ;
  logic [0:0] _168__X0 ;
  assign _123__T = _168__T ;
  assign _168__C0 = _123__C ;
  assign _168__R0 = _123__R ;
  assign _168__X0 = _123__X ;
  assign _123__S = 0 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_nl = ~ _003_;
  logic [9:0] _003__C0 ;
  logic [9:0] _003__R0 ;
  logic [9:0] _003__X0 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_nl_T = _003__T ;
  assign _003__C0 = FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_nl_C ;
  assign _003__R0 = FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_nl_R ;
  assign _003__X0 = FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_nl_X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_nl_S = 0 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_1_nl = ~ _004_;
  logic [9:0] _004__C0 ;
  logic [9:0] _004__R0 ;
  logic [9:0] _004__X0 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_1_nl_T = _004__T ;
  assign _004__C0 = FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_1_nl_C ;
  assign _004__R0 = FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_1_nl_R ;
  assign _004__X0 = FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_1_nl_X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_1_nl_S = 0 ;
  assign _108_[2:0] = ~ chn_a_rsci_d_mxwt[26:24];
  assign { chn_a_rsci_d_mxwt_R2 [31:31] } = 0;
  assign { chn_a_rsci_d_mxwt_X2 [31:31] } = 0;
  assign { chn_a_rsci_d_mxwt_C2 [31:31] } = 0;
  logic [31:0] chn_a_rsci_d_mxwt_C3 ;
  logic [31:0] chn_a_rsci_d_mxwt_R3 ;
  logic [31:0] chn_a_rsci_d_mxwt_X3 ;
  assign _108__T [2:0] = chn_a_rsci_d_mxwt_T [26:24] ;
  assign chn_a_rsci_d_mxwt_C3 [26:24] = _108__C [2:0] ;
  assign chn_a_rsci_d_mxwt_R3 [26:24] = _108__R [2:0] ;
  assign chn_a_rsci_d_mxwt_X3 [26:24] = _108__X [2:0] ;
  assign _108__S = 0 ;
  assign _000_ = ~ or_tmp_3;
  logic [0:0] or_tmp_3_C0 ;
  logic [0:0] or_tmp_3_R0 ;
  logic [0:0] or_tmp_3_X0 ;
  assign _000__T = or_tmp_3_T ;
  assign or_tmp_3_C0 = _000__C ;
  assign or_tmp_3_R0 = _000__R ;
  assign or_tmp_3_X0 = _000__X ;
  assign _000__S = 0 ;
  assign _124_ = ~ and_tmp;
  logic [0:0] and_tmp_C0 ;
  logic [0:0] and_tmp_R0 ;
  logic [0:0] and_tmp_X0 ;
  assign _124__T = and_tmp_T ;
  assign and_tmp_C0 = _124__C ;
  assign and_tmp_R0 = _124__R ;
  assign and_tmp_X0 = _124__X ;
  assign _124__S = 0 ;
  assign nor_nl = ~ _169_;
  logic [0:0] _169__C0 ;
  logic [0:0] _169__R0 ;
  logic [0:0] _169__X0 ;
  assign nor_nl_T = _169__T ;
  assign _169__C0 = nor_nl_C ;
  assign _169__R0 = nor_nl_R ;
  assign _169__X0 = nor_nl_X ;
  assign nor_nl_S = 0 ;
  assign _125_ = ~ FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_C5 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_R5 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X5 ;
  assign _125__T = FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_C5 = _125__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_R5 = _125__R ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X5 = _125__X ;
  assign _125__S = 0 ;
  assign _126_ = ~ _074_;
  logic [0:0] _074__C0 ;
  logic [0:0] _074__R0 ;
  logic [0:0] _074__X0 ;
  assign _126__T = _074__T ;
  assign _074__C0 = _126__C ;
  assign _074__R0 = _126__R ;
  assign _074__X0 = _126__X ;
  assign _126__S = 0 ;
  assign _127_ = ~ FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_C4 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_R4 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_X4 ;
  assign _127__T = FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_C4 = _127__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_R4 = _127__R ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_X4 = _127__X ;
  assign _127__S = 0 ;
  assign _128_ = ~ _173_;
  logic [0:0] _173__C0 ;
  logic [0:0] _173__R0 ;
  logic [0:0] _173__X0 ;
  assign _128__T = _173__T ;
  assign _173__C0 = _128__C ;
  assign _173__R0 = _128__R ;
  assign _173__X0 = _128__X ;
  assign _128__S = 0 ;
  assign _129_ = ~ FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_C1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_R1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_X1 ;
  assign _129__T = FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_C1 = _129__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_R1 = _129__R ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_X1 = _129__X ;
  assign _129__S = 0 ;
  assign _130_ = ~ _175_;
  logic [0:0] _175__C0 ;
  logic [0:0] _175__R0 ;
  logic [0:0] _175__X0 ;
  assign _130__T = _175__T ;
  assign _175__C0 = _130__C ;
  assign _175__R0 = _130__R ;
  assign _175__X0 = _130__X ;
  assign _130__S = 0 ;
  assign _002_ = ~ main_stage_v_1;
  logic [0:0] main_stage_v_1_C3 ;
  logic [0:0] main_stage_v_1_R3 ;
  logic [0:0] main_stage_v_1_X3 ;
  assign _002__T = main_stage_v_1_T ;
  assign main_stage_v_1_C3 = _002__C ;
  assign main_stage_v_1_R3 = _002__R ;
  assign main_stage_v_1_X3 = _002__X ;
  assign _002__S = 0 ;
  assign nor_32_nl = ~ _178_;
  logic [0:0] _178__C0 ;
  logic [0:0] _178__R0 ;
  logic [0:0] _178__X0 ;
  assign nor_32_nl_T = _178__T ;
  assign _178__C0 = nor_32_nl_C ;
  assign _178__R0 = nor_32_nl_R ;
  assign _178__X0 = nor_32_nl_X ;
  assign nor_32_nl_S = 0 ;
  assign _131_ = ~ FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl[8];
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R0 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R0 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R0 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R0 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R0 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R0 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R0 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R0 [7] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X0 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X0 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X0 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X0 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X0 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X0 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X0 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X0 [7] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C0 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C0 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C0 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C0 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C0 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C0 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C0 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C0 [7] } = 0;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C1 ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R1 ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X1 ;
  assign _131__T = FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_T [8] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C1 [8] = _131__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R1 [8] = _131__R ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X1 [8] = _131__X ;
  assign _131__S = 0 ;
  assign nor_28_nl = ~ _179_;
  logic [0:0] _179__C0 ;
  logic [0:0] _179__R0 ;
  logic [0:0] _179__X0 ;
  assign nor_28_nl_T = _179__T ;
  assign _179__C0 = nor_28_nl_C ;
  assign _179__R0 = nor_28_nl_R ;
  assign _179__X0 = nor_28_nl_X ;
  assign nor_28_nl_S = 0 ;
  assign nor_27_nl = ~ _182_;
  logic [0:0] _182__C0 ;
  logic [0:0] _182__R0 ;
  logic [0:0] _182__X0 ;
  assign nor_27_nl_T = _182__T ;
  assign _182__C0 = nor_27_nl_C ;
  assign _182__R0 = nor_27_nl_R ;
  assign _182__X0 = nor_27_nl_X ;
  assign nor_27_nl_S = 0 ;
  assign _132_ = ~ FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_C3 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_R3 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_X3 ;
  assign _132__T = FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_C3 = _132__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_R3 = _132__R ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_X3 = _132__X ;
  assign _132__S = 0 ;
  assign _133_ = ~ main_stage_v_2;
  logic [0:0] main_stage_v_2_C4 ;
  logic [0:0] main_stage_v_2_R4 ;
  logic [0:0] main_stage_v_2_X4 ;
  assign _133__T = main_stage_v_2_T ;
  assign main_stage_v_2_C4 = _133__C ;
  assign main_stage_v_2_R4 = _133__R ;
  assign main_stage_v_2_X4 = _133__X ;
  assign _133__S = 0 ;
  assign _134_ = ~ reg_chn_o_rsci_ld_core_psct_cse;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C3 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R3 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X3 ;
  assign _134__T = reg_chn_o_rsci_ld_core_psct_cse_T ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C3 = _134__C ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R3 = _134__R ;
  assign reg_chn_o_rsci_ld_core_psct_cse_X3 = _134__X ;
  assign _134__S = 0 ;
  assign nor_23_nl = ~ _187_;
  logic [0:0] _187__C0 ;
  logic [0:0] _187__R0 ;
  logic [0:0] _187__X0 ;
  assign nor_23_nl_T = _187__T ;
  assign _187__C0 = nor_23_nl_C ;
  assign _187__R0 = nor_23_nl_R ;
  assign _187__X0 = nor_23_nl_X ;
  assign nor_23_nl_S = 0 ;
  assign _001_ = ~ FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1[28];
  assign _001__T = FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_T [28] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C3 [28] = _001__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R3 [28] = _001__R ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X3 [28] = _001__X ;
  assign _001__S = 0 ;
  assign nand_5_nl = ~ _075_;
  logic [0:0] _075__C0 ;
  logic [0:0] _075__R0 ;
  logic [0:0] _075__X0 ;
  assign nand_5_nl_T = _075__T ;
  assign _075__C0 = nand_5_nl_C ;
  assign _075__R0 = nand_5_nl_R ;
  assign _075__X0 = nand_5_nl_X ;
  assign nand_5_nl_S = 0 ;
  assign nor_19_nl = ~ _188_;
  logic [0:0] _188__C0 ;
  logic [0:0] _188__R0 ;
  logic [0:0] _188__X0 ;
  assign nor_19_nl_T = _188__T ;
  assign _188__C0 = nor_19_nl_C ;
  assign _188__R0 = nor_19_nl_R ;
  assign _188__X0 = nor_19_nl_X ;
  assign nor_19_nl_S = 0 ;
  assign _135_ = ~ FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_C0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_R0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_X0 ;
  assign _135__T = FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_C0 = _135__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_R0 = _135__R ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_X0 = _135__X ;
  assign _135__S = 0 ;
  assign _136_ = ~ _190_;
  logic [0:0] _190__C0 ;
  logic [0:0] _190__R0 ;
  logic [0:0] _190__X0 ;
  assign _136__T = _190__T ;
  assign _190__C0 = _136__C ;
  assign _190__R0 = _136__R ;
  assign _190__X0 = _136__X ;
  assign _136__S = 0 ;
  assign _137_ = ~ or_tmp_9;
  logic [0:0] or_tmp_9_C1 ;
  logic [0:0] or_tmp_9_R1 ;
  logic [0:0] or_tmp_9_X1 ;
  assign _137__T = or_tmp_9_T ;
  assign or_tmp_9_C1 = _137__C ;
  assign or_tmp_9_R1 = _137__R ;
  assign or_tmp_9_X1 = _137__X ;
  assign _137__S = 0 ;
  assign _138_ = ~ _076_;
  logic [0:0] _076__C0 ;
  logic [0:0] _076__R0 ;
  logic [0:0] _076__X0 ;
  assign _138__T = _076__T ;
  assign _076__C0 = _138__C ;
  assign _076__R0 = _138__R ;
  assign _076__X0 = _138__X ;
  assign _138__S = 0 ;
  assign nor_17_nl = ~ _194_;
  logic [0:0] _194__C0 ;
  logic [0:0] _194__R0 ;
  logic [0:0] _194__X0 ;
  assign nor_17_nl_T = _194__T ;
  assign _194__C0 = nor_17_nl_C ;
  assign _194__R0 = nor_17_nl_R ;
  assign _194__X0 = nor_17_nl_X ;
  assign nor_17_nl_S = 0 ;
  assign _139_ = ~ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_C0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_R0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X0 ;
  assign _139__T = FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_C0 = _139__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_R0 = _139__R ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X0 = _139__X ;
  assign _139__S = 0 ;
  assign _140_ = ~ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_C1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_R1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_X1 ;
  assign _140__T = FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_C1 = _140__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_R1 = _140__R ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_X1 = _140__X ;
  assign _140__S = 0 ;
  assign nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s[0] = ~ FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1[23];
  assign nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_T [0] = FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_T [23] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C3 [23] = nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_C [0] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R3 [23] = nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_R [0] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X3 [23] = nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_X [0] ;
  assign nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_S = 0 ;
  assign _141_ = ~ _198_;
  logic [0:0] _198__C0 ;
  logic [0:0] _198__R0 ;
  logic [0:0] _198__X0 ;
  assign _141__T = _198__T ;
  assign _198__C0 = _141__C ;
  assign _198__R0 = _141__R ;
  assign _198__X0 = _141__X ;
  assign _141__S = 0 ;
  assign nor_25_nl = ~ _201_;
  logic [0:0] _201__C0 ;
  logic [0:0] _201__R0 ;
  logic [0:0] _201__X0 ;
  assign nor_25_nl_T = _201__T ;
  assign _201__C0 = nor_25_nl_C ;
  assign _201__R0 = nor_25_nl_R ;
  assign _201__X0 = nor_25_nl_X ;
  assign nor_25_nl_S = 0 ;
  assign nor_26_nl = ~ _204_;
  logic [0:0] _204__C0 ;
  logic [0:0] _204__R0 ;
  logic [0:0] _204__X0 ;
  assign nor_26_nl_T = _204__T ;
  assign _204__C0 = nor_26_nl_C ;
  assign _204__R0 = nor_26_nl_R ;
  assign _204__X0 = nor_26_nl_X ;
  assign nor_26_nl_S = 0 ;
  assign nor_16_cse = ~ or_tmp_11;
  logic [0:0] or_tmp_11_C3 ;
  logic [0:0] or_tmp_11_R3 ;
  logic [0:0] or_tmp_11_X3 ;
  assign nor_16_cse_T = or_tmp_11_T ;
  assign or_tmp_11_C3 = nor_16_cse_C ;
  assign or_tmp_11_R3 = nor_16_cse_R ;
  assign or_tmp_11_X3 = nor_16_cse_X ;
  assign nor_16_cse_S = 0 ;
  assign nor_20_cse = ~ or_9_cse;
  logic [0:0] or_9_cse_C12 ;
  logic [0:0] or_9_cse_R12 ;
  logic [0:0] or_9_cse_X12 ;
  assign nor_20_cse_T = or_9_cse_T ;
  assign or_9_cse_C12 = nor_20_cse_C ;
  assign or_9_cse_R12 = nor_20_cse_R ;
  assign or_9_cse_X12 = nor_20_cse_X ;
  assign nor_20_cse_S = 0 ;
  assign _142_ = ~ FpMantRNE_24U_11U_else_and_svs_2;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_2_C3 ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_2_R3 ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_2_X3 ;
  assign _142__T = FpMantRNE_24U_11U_else_and_svs_2_T ;
  assign FpMantRNE_24U_11U_else_and_svs_2_C3 = _142__C ;
  assign FpMantRNE_24U_11U_else_and_svs_2_R3 = _142__R ;
  assign FpMantRNE_24U_11U_else_and_svs_2_X3 = _142__X ;
  assign _142__S = 0 ;
  assign _143_ = ~ chn_a_rsci_d_mxwt[30:23];
  assign { chn_a_rsci_d_mxwt_R3 [0], chn_a_rsci_d_mxwt_R3 [1], chn_a_rsci_d_mxwt_R3 [2], chn_a_rsci_d_mxwt_R3 [3], chn_a_rsci_d_mxwt_R3 [4], chn_a_rsci_d_mxwt_R3 [5], chn_a_rsci_d_mxwt_R3 [6], chn_a_rsci_d_mxwt_R3 [7], chn_a_rsci_d_mxwt_R3 [8], chn_a_rsci_d_mxwt_R3 [9], chn_a_rsci_d_mxwt_R3 [10], chn_a_rsci_d_mxwt_R3 [11], chn_a_rsci_d_mxwt_R3 [12], chn_a_rsci_d_mxwt_R3 [13], chn_a_rsci_d_mxwt_R3 [14], chn_a_rsci_d_mxwt_R3 [15], chn_a_rsci_d_mxwt_R3 [16], chn_a_rsci_d_mxwt_R3 [17], chn_a_rsci_d_mxwt_R3 [18], chn_a_rsci_d_mxwt_R3 [19], chn_a_rsci_d_mxwt_R3 [20], chn_a_rsci_d_mxwt_R3 [21], chn_a_rsci_d_mxwt_R3 [22], chn_a_rsci_d_mxwt_R3 [23], chn_a_rsci_d_mxwt_R3 [31:27] } = 0;
  assign { chn_a_rsci_d_mxwt_X3 [0], chn_a_rsci_d_mxwt_X3 [1], chn_a_rsci_d_mxwt_X3 [2], chn_a_rsci_d_mxwt_X3 [3], chn_a_rsci_d_mxwt_X3 [4], chn_a_rsci_d_mxwt_X3 [5], chn_a_rsci_d_mxwt_X3 [6], chn_a_rsci_d_mxwt_X3 [7], chn_a_rsci_d_mxwt_X3 [8], chn_a_rsci_d_mxwt_X3 [9], chn_a_rsci_d_mxwt_X3 [10], chn_a_rsci_d_mxwt_X3 [11], chn_a_rsci_d_mxwt_X3 [12], chn_a_rsci_d_mxwt_X3 [13], chn_a_rsci_d_mxwt_X3 [14], chn_a_rsci_d_mxwt_X3 [15], chn_a_rsci_d_mxwt_X3 [16], chn_a_rsci_d_mxwt_X3 [17], chn_a_rsci_d_mxwt_X3 [18], chn_a_rsci_d_mxwt_X3 [19], chn_a_rsci_d_mxwt_X3 [20], chn_a_rsci_d_mxwt_X3 [21], chn_a_rsci_d_mxwt_X3 [22], chn_a_rsci_d_mxwt_X3 [23], chn_a_rsci_d_mxwt_X3 [31:27] } = 0;
  assign { chn_a_rsci_d_mxwt_C3 [0], chn_a_rsci_d_mxwt_C3 [1], chn_a_rsci_d_mxwt_C3 [2], chn_a_rsci_d_mxwt_C3 [3], chn_a_rsci_d_mxwt_C3 [4], chn_a_rsci_d_mxwt_C3 [5], chn_a_rsci_d_mxwt_C3 [6], chn_a_rsci_d_mxwt_C3 [7], chn_a_rsci_d_mxwt_C3 [8], chn_a_rsci_d_mxwt_C3 [9], chn_a_rsci_d_mxwt_C3 [10], chn_a_rsci_d_mxwt_C3 [11], chn_a_rsci_d_mxwt_C3 [12], chn_a_rsci_d_mxwt_C3 [13], chn_a_rsci_d_mxwt_C3 [14], chn_a_rsci_d_mxwt_C3 [15], chn_a_rsci_d_mxwt_C3 [16], chn_a_rsci_d_mxwt_C3 [17], chn_a_rsci_d_mxwt_C3 [18], chn_a_rsci_d_mxwt_C3 [19], chn_a_rsci_d_mxwt_C3 [20], chn_a_rsci_d_mxwt_C3 [21], chn_a_rsci_d_mxwt_C3 [22], chn_a_rsci_d_mxwt_C3 [23], chn_a_rsci_d_mxwt_C3 [31:27] } = 0;
  logic [31:0] chn_a_rsci_d_mxwt_C4 ;
  logic [31:0] chn_a_rsci_d_mxwt_R4 ;
  logic [31:0] chn_a_rsci_d_mxwt_X4 ;
  assign _143__T = chn_a_rsci_d_mxwt_T [30:23] ;
  assign chn_a_rsci_d_mxwt_C4 [30:23] = _143__C ;
  assign chn_a_rsci_d_mxwt_R4 [30:23] = _143__R ;
  assign chn_a_rsci_d_mxwt_X4 [30:23] = _143__X ;
  assign _143__S = 0 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp = ~ _090_;
  logic [0:0] _090__C0 ;
  logic [0:0] _090__R0 ;
  logic [0:0] _090__X0 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_T = _090__T ;
  assign _090__C0 = FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_C ;
  assign _090__R0 = FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_R ;
  assign _090__X0 = FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_S = 0 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0 = ~ _091_;
  logic [0:0] _091__C1 ;
  logic [0:0] _091__R1 ;
  logic [0:0] _091__X1 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_T = _091__T ;
  assign _091__C1 = FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_C ;
  assign _091__R1 = FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_R ;
  assign _091__X1 = FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_S = 0 ;
  assign IsNaN_8U_23U_nor_tmp = ~ _115_;
  logic [0:0] _115__C0 ;
  logic [0:0] _115__R0 ;
  logic [0:0] _115__X0 ;
  assign IsNaN_8U_23U_nor_tmp_T = _115__T ;
  assign _115__C0 = IsNaN_8U_23U_nor_tmp_C ;
  assign _115__R0 = IsNaN_8U_23U_nor_tmp_R ;
  assign _115__X0 = IsNaN_8U_23U_nor_tmp_X ;
  assign IsNaN_8U_23U_nor_tmp_S = 0 ;
  assign IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp = ~ _111_;
  logic [0:0] _111__C0 ;
  logic [0:0] _111__R0 ;
  logic [0:0] _111__X0 ;
  assign IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_T = _111__T ;
  assign _111__C0 = IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_C ;
  assign _111__R0 = IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_R ;
  assign _111__X0 = IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_X ;
  assign IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_S = 0 ;
  assign _144_ = ~ _217_;
  logic [0:0] _217__C0 ;
  logic [0:0] _217__R0 ;
  logic [0:0] _217__X0 ;
  assign _144__T = _217__T ;
  assign _217__C0 = _144__C ;
  assign _217__R0 = _144__R ;
  assign _217__X0 = _144__X ;
  assign _144__S = 0 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_nor_ssc = ~ _118_;
  logic [0:0] _118__C1 ;
  logic [0:0] _118__R1 ;
  logic [0:0] _118__X1 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_nor_ssc_T = _118__T ;
  assign _118__C1 = FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_nor_ssc_C ;
  assign _118__R1 = FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_nor_ssc_R ;
  assign _118__X1 = FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_nor_ssc_X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_nor_ssc_S = 0 ;
  assign _145_ = ~ chn_o_rsci_bawt;
  logic [0:0] chn_o_rsci_bawt_C1 ;
  logic [0:0] chn_o_rsci_bawt_R1 ;
  logic [0:0] chn_o_rsci_bawt_X1 ;
  assign _145__T = chn_o_rsci_bawt_T ;
  assign chn_o_rsci_bawt_C1 = _145__C ;
  assign chn_o_rsci_bawt_R1 = _145__R ;
  assign chn_o_rsci_bawt_X1 = _145__X ;
  assign _145__S = 0 ;
  assign _146_ = ~ _077_;
  logic [0:0] _077__C1 ;
  logic [0:0] _077__R1 ;
  logic [0:0] _077__X1 ;
  assign _146__T = _077__T ;
  assign _077__C1 = _146__C ;
  assign _077__R1 = _146__R ;
  assign _077__X1 = _146__X ;
  assign _146__S = 0 ;
  assign nand_6_nl = ~ _094_;
  logic [0:0] _094__C0 ;
  logic [0:0] _094__R0 ;
  logic [0:0] _094__X0 ;
  assign nand_6_nl_T = _094__T ;
  assign _094__C0 = nand_6_nl_C ;
  assign _094__R0 = nand_6_nl_R ;
  assign _094__X0 = nand_6_nl_X ;
  assign nand_6_nl_S = 0 ;
  assign nor_21_nl = ~ _219_;
  logic [0:0] _219__C0 ;
  logic [0:0] _219__R0 ;
  logic [0:0] _219__X0 ;
  assign nor_21_nl_T = _219__T ;
  assign _219__C0 = nor_21_nl_C ;
  assign _219__R0 = nor_21_nl_R ;
  assign _219__X0 = nor_21_nl_X ;
  assign nor_21_nl_S = 0 ;
  assign _147_ = ~ IsNaN_8U_23U_land_lpi_1_dfm_2;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_2_C1 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_2_R1 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_2_X1 ;
  assign _147__T = IsNaN_8U_23U_land_lpi_1_dfm_2_T ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_2_C1 = _147__C ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_2_R1 = _147__R ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_2_X1 = _147__X ;
  assign _147__S = 0 ;
  assign _148_ = ~ main_stage_en_1;
  logic [0:0] main_stage_en_1_C1 ;
  logic [0:0] main_stage_en_1_R1 ;
  logic [0:0] main_stage_en_1_X1 ;
  assign _148__T = main_stage_en_1_T ;
  assign main_stage_en_1_C1 = _148__C ;
  assign main_stage_en_1_R1 = _148__R ;
  assign main_stage_en_1_X1 = _148__X ;
  assign _148__S = 0 ;
  assign _149_ = ~ _100_;
  logic [0:0] _100__C0 ;
  logic [0:0] _100__R0 ;
  logic [0:0] _100__X0 ;
  assign _149__T = _100__T ;
  assign _100__C0 = _149__C ;
  assign _100__R0 = _149__R ;
  assign _100__X0 = _149__X ;
  assign _149__S = 0 ;
  assign _150_ = ~ FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_C0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_R0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_X0 ;
  assign _150__T = FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_C0 = _150__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_R0 = _150__R ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_X0 = _150__X ;
  assign _150__S = 0 ;
  assign _151_ = ~ and_dcpl_17;
  logic [0:0] and_dcpl_17_C0 ;
  logic [0:0] and_dcpl_17_R0 ;
  logic [0:0] and_dcpl_17_X0 ;
  assign _151__T = and_dcpl_17_T ;
  assign and_dcpl_17_C0 = _151__C ;
  assign and_dcpl_17_R0 = _151__R ;
  assign and_dcpl_17_X0 = _151__X ;
  assign _151__S = 0 ;
  assign _152_ = ~ main_stage_v_1_mx0c1;
  logic [0:0] main_stage_v_1_mx0c1_C0 ;
  logic [0:0] main_stage_v_1_mx0c1_R0 ;
  logic [0:0] main_stage_v_1_mx0c1_X0 ;
  assign _152__T = main_stage_v_1_mx0c1_T ;
  assign main_stage_v_1_mx0c1_C0 = _152__C ;
  assign main_stage_v_1_mx0c1_R0 = _152__R ;
  assign main_stage_v_1_mx0c1_X0 = _152__X ;
  assign _152__S = 0 ;
  assign _153_ = and_42_cse | main_stage_v_2_mx0c1;
  assign _153__S = 0 ;
  logic [0:0] and_42_cse_C1 ;
  logic [0:0] and_42_cse_R1 ;
  logic [0:0] and_42_cse_X1 ;
  logic [0:0] main_stage_v_2_mx0c1_C1 ;
  logic [0:0] main_stage_v_2_mx0c1_R1 ;
  logic [0:0] main_stage_v_2_mx0c1_X1 ;
  assign _153__T = and_42_cse_T | main_stage_v_2_mx0c1_T ;
  assign and_42_cse_C1 = _153__C ;
  assign and_42_cse_X1 = _153__X ;
  assign main_stage_v_2_mx0c1_C1 = _153__C ;
  assign main_stage_v_2_mx0c1_X1 = _153__X ;
  assign and_42_cse_R1 = ( _153__R | _153__C & main_stage_v_2_mx0c1_T ) & { 1{ main_stage_v_2_mx0c1 != 1'b1 }} ;
  assign main_stage_v_2_mx0c1_R1 = ( _153__R | _153__C & and_42_cse_T ) & { 1{ and_42_cse != 1'b1 }} ;
  assign _154_ = _112_ | FpMantDecShiftRight_23U_8U_10U_guard_mask_sva[23];
  assign _154__S = 0 ;
  logic [0:0] _112__C0 ;
  logic [0:0] _112__R0 ;
  logic [0:0] _112__X0 ;
  assign _154__T = _112__T | FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_T [23] ;
  assign _112__C0 = _154__C ;
  assign _112__X0 = _154__X ;
  assign FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_C1 [23] = _154__C ;
  assign FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_X1 [23] = _154__X ;
  assign _112__R0 = ( _154__R | _154__C & FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_T [23] ) & { 1{ FpMantDecShiftRight_23U_8U_10U_guard_mask_sva[23] != 1'b1 }} ;
  assign FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_R1 [23] = ( _154__R | _154__C & _112__T ) & { 1{ _112_ != 1'b1 }} ;
  assign _155_ = _113_ | _114_;
  assign _155__S = 0 ;
  logic [0:0] _113__C0 ;
  logic [0:0] _113__R0 ;
  logic [0:0] _113__X0 ;
  logic [0:0] _114__C0 ;
  logic [0:0] _114__R0 ;
  logic [0:0] _114__X0 ;
  assign _155__T = _113__T | _114__T ;
  assign _113__C0 = _155__C ;
  assign _113__X0 = _155__X ;
  assign _114__C0 = _155__C ;
  assign _114__X0 = _155__X ;
  assign _113__R0 = ( _155__R | _155__C & _114__T ) & { 1{ _114_ != 1'b1 }} ;
  assign _114__R0 = ( _155__R | _155__C & _113__T ) & { 1{ _113_ != 1'b1 }} ;
  assign _156_ = _155_ | FpMantDecShiftRight_23U_8U_10U_least_mask_sva[23];
  assign _156__S = 0 ;
  logic [0:0] _155__C0 ;
  logic [0:0] _155__R0 ;
  logic [0:0] _155__X0 ;
  assign _156__T = _155__T | FpMantDecShiftRight_23U_8U_10U_least_mask_sva_T [23] ;
  assign _155__C0 = _156__C ;
  assign _155__X0 = _156__X ;
  assign FpMantDecShiftRight_23U_8U_10U_least_mask_sva_C0 [23] = _156__C ;
  assign FpMantDecShiftRight_23U_8U_10U_least_mask_sva_X0 [23] = _156__X ;
  assign _155__R0 = ( _156__R | _156__C & FpMantDecShiftRight_23U_8U_10U_least_mask_sva_T [23] ) & { 1{ FpMantDecShiftRight_23U_8U_10U_least_mask_sva[23] != 1'b1 }} ;
  assign FpMantDecShiftRight_23U_8U_10U_least_mask_sva_R0 [23] = ( _156__R | _156__C & _155__T ) & { 1{ _155_ != 1'b1 }} ;
  assign _157_ = _057_ | FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0;
  assign _157__S = 0 ;
  logic [0:0] _057__C0 ;
  logic [0:0] _057__R0 ;
  logic [0:0] _057__X0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_C1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_R1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_X1 ;
  assign _157__T = _057__T | FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_T ;
  assign _057__C0 = _157__C ;
  assign _057__X0 = _157__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_C1 = _157__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_X1 = _157__X ;
  assign _057__R0 = ( _157__R | _157__C & FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0 != 1'b1 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_R1 = ( _157__R | _157__C & _057__T ) & { 1{ _057_ != 1'b1 }} ;
  assign _158_ = _059_ | and_48_rgt;
  assign _158__S = 0 ;
  logic [0:0] _059__C0 ;
  logic [0:0] _059__R0 ;
  logic [0:0] _059__X0 ;
  logic [0:0] and_48_rgt_C0 ;
  logic [0:0] and_48_rgt_R0 ;
  logic [0:0] and_48_rgt_X0 ;
  assign _158__T = _059__T | and_48_rgt_T ;
  assign _059__C0 = _158__C ;
  assign _059__X0 = _158__X ;
  assign and_48_rgt_C0 = _158__C ;
  assign and_48_rgt_X0 = _158__X ;
  assign _059__R0 = ( _158__R | _158__C & and_48_rgt_T ) & { 1{ and_48_rgt != 1'b1 }} ;
  assign and_48_rgt_R0 = ( _158__R | _158__C & _059__T ) & { 1{ _059_ != 1'b1 }} ;
  assign _159_ = FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt | FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt;
  assign _159__S = 0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_C5 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_R5 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_X5 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_C5 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_R5 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_X5 ;
  assign _159__T = FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_T | FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_C5 = _159__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_X5 = _159__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_C5 = _159__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_X5 = _159__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_R5 = ( _159__R | _159__C & FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt != 1'b1 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_R5 = ( _159__R | _159__C & FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt != 1'b1 }} ;
  assign _160_ = _159_ | FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt;
  assign _160__S = 0 ;
  logic [0:0] _159__C0 ;
  logic [0:0] _159__R0 ;
  logic [0:0] _159__X0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_C5 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_R5 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_X5 ;
  assign _160__T = _159__T | FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_T ;
  assign _159__C0 = _160__C ;
  assign _159__X0 = _160__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_C5 = _160__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_X5 = _160__X ;
  assign _159__R0 = ( _160__R | _160__C & FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt != 1'b1 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_R5 = ( _160__R | _160__C & _159__T ) & { 1{ _159_ != 1'b1 }} ;
  assign _161_ = _160_ | FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt;
  assign _161__S = 0 ;
  logic [0:0] _160__C0 ;
  logic [0:0] _160__R0 ;
  logic [0:0] _160__X0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_C5 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_R5 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_X5 ;
  assign _161__T = _160__T | FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_T ;
  assign _160__C0 = _161__C ;
  assign _160__X0 = _161__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_C5 = _161__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_X5 = _161__X ;
  assign _160__R0 = ( _161__R | _161__C & FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt != 1'b1 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_R5 = ( _161__R | _161__C & _160__T ) & { 1{ _160_ != 1'b1 }} ;
  assign _162_ = and_dcpl_29 | and_50_rgt;
  assign _162__S = 0 ;
  logic [0:0] and_dcpl_29_C2 ;
  logic [0:0] and_dcpl_29_R2 ;
  logic [0:0] and_dcpl_29_X2 ;
  logic [0:0] and_50_rgt_C0 ;
  logic [0:0] and_50_rgt_R0 ;
  logic [0:0] and_50_rgt_X0 ;
  assign _162__T = and_dcpl_29_T | and_50_rgt_T ;
  assign and_dcpl_29_C2 = _162__C ;
  assign and_dcpl_29_X2 = _162__X ;
  assign and_50_rgt_C0 = _162__C ;
  assign and_50_rgt_X0 = _162__X ;
  assign and_dcpl_29_R2 = ( _162__R | _162__C & and_50_rgt_T ) & { 1{ and_50_rgt != 1'b1 }} ;
  assign and_50_rgt_R0 = ( _162__R | _162__C & and_dcpl_29_T ) & { 1{ and_dcpl_29 != 1'b1 }} ;
  assign _163_ = _068_ | and_53_rgt;
  assign _163__S = 0 ;
  logic [0:0] _068__C0 ;
  logic [0:0] _068__R0 ;
  logic [0:0] _068__X0 ;
  logic [0:0] and_53_rgt_C0 ;
  logic [0:0] and_53_rgt_R0 ;
  logic [0:0] and_53_rgt_X0 ;
  assign _163__T = _068__T | and_53_rgt_T ;
  assign _068__C0 = _163__C ;
  assign _068__X0 = _163__X ;
  assign and_53_rgt_C0 = _163__C ;
  assign and_53_rgt_X0 = _163__X ;
  assign _068__R0 = ( _163__R | _163__C & and_53_rgt_T ) & { 1{ and_53_rgt != 1'b1 }} ;
  assign and_53_rgt_R0 = ( _163__R | _163__C & _068__T ) & { 1{ _068_ != 1'b1 }} ;
  assign _164_ = and_dcpl_9 | _120_;
  assign _164__S = 0 ;
  logic [0:0] and_dcpl_9_C1 ;
  logic [0:0] and_dcpl_9_R1 ;
  logic [0:0] and_dcpl_9_X1 ;
  logic [0:0] _120__C1 ;
  logic [0:0] _120__R1 ;
  logic [0:0] _120__X1 ;
  assign _164__T = and_dcpl_9_T | _120__T ;
  assign and_dcpl_9_C1 = _164__C ;
  assign and_dcpl_9_X1 = _164__X ;
  assign _120__C1 = _164__C ;
  assign _120__X1 = _164__X ;
  assign and_dcpl_9_R1 = ( _164__R | _164__C & _120__T ) & { 1{ _120_ != 1'b1 }} ;
  assign _120__R1 = ( _164__R | _164__C & and_dcpl_9_T ) & { 1{ and_dcpl_9 != 1'b1 }} ;
  assign _165_ = _164_ | or_dcpl_11;
  assign _165__S = 0 ;
  logic [0:0] _164__C0 ;
  logic [0:0] _164__R0 ;
  logic [0:0] _164__X0 ;
  logic [0:0] or_dcpl_11_C1 ;
  logic [0:0] or_dcpl_11_R1 ;
  logic [0:0] or_dcpl_11_X1 ;
  assign _165__T = _164__T | or_dcpl_11_T ;
  assign _164__C0 = _165__C ;
  assign _164__X0 = _165__X ;
  assign or_dcpl_11_C1 = _165__C ;
  assign or_dcpl_11_X1 = _165__X ;
  assign _164__R0 = ( _165__R | _165__C & or_dcpl_11_T ) & { 1{ or_dcpl_11 != 1'b1 }} ;
  assign or_dcpl_11_R1 = ( _165__R | _165__C & _164__T ) & { 1{ _164_ != 1'b1 }} ;
  assign _166_ = _165_ | fsm_output[0];
  assign _166__S = 0 ;
  logic [0:0] _165__C0 ;
  logic [0:0] _165__R0 ;
  logic [0:0] _165__X0 ;
  assign _166__T = _165__T | fsm_output_T [0] ;
  assign _165__C0 = _166__C ;
  assign _165__X0 = _166__X ;
  assign fsm_output_C1 [0] = _166__C ;
  assign fsm_output_X1 [0] = _166__X ;
  assign _165__R0 = ( _166__R | _166__C & fsm_output_T [0] ) & { 1{ fsm_output[0] != 1'b1 }} ;
  assign fsm_output_R1 [0] = ( _166__R | _166__C & _165__T ) & { 1{ _165_ != 1'b1 }} ;
  assign _167_ = _164_ | _122_;
  assign _167__S = 0 ;
  logic [0:0] _164__C1 ;
  logic [0:0] _164__R1 ;
  logic [0:0] _164__X1 ;
  logic [0:0] _122__C1 ;
  logic [0:0] _122__R1 ;
  logic [0:0] _122__X1 ;
  assign _167__T = _164__T | _122__T ;
  assign _164__C1 = _167__C ;
  assign _164__X1 = _167__X ;
  assign _122__C1 = _167__C ;
  assign _122__X1 = _167__X ;
  assign _164__R1 = ( _167__R | _167__C & _122__T ) & { 1{ _122_ != 1'b1 }} ;
  assign _122__R1 = ( _167__R | _167__C & _164__T ) & { 1{ _164_ != 1'b1 }} ;
  assign _168_ = _167_ | fsm_output[0];
  assign _168__S = 0 ;
  logic [0:0] _167__C0 ;
  logic [0:0] _167__R0 ;
  logic [0:0] _167__X0 ;
  logic [1:0] fsm_output_C2 ;
  logic [1:0] fsm_output_R2 ;
  logic [1:0] fsm_output_X2 ;
  assign _168__T = _167__T | fsm_output_T [0] ;
  assign _167__C0 = _168__C ;
  assign _167__X0 = _168__X ;
  assign fsm_output_C2 [0] = _168__C ;
  assign fsm_output_X2 [0] = _168__X ;
  assign _167__R0 = ( _168__R | _168__C & fsm_output_T [0] ) & { 1{ fsm_output[0] != 1'b1 }} ;
  assign fsm_output_R2 [0] = ( _168__R | _168__C & _167__T ) & { 1{ _167_ != 1'b1 }} ;
  assign or_2_nl = FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl[8] | FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl[7];
  assign or_2_nl_S = 0 ;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R1 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R1 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R1 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R1 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R1 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R1 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R1 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R1 [7] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X1 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X1 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X1 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X1 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X1 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X1 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X1 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X1 [7] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C1 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C1 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C1 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C1 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C1 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C1 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C1 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C1 [7] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R0 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R0 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R0 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R0 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R0 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R0 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R0 [6] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X0 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X0 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X0 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X0 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X0 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X0 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X0 [6] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C0 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C0 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C0 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C0 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C0 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C0 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C0 [6] } = 0;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C2 ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R2 ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X2 ;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C1 ;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R1 ;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X1 ;
  assign or_2_nl_T = FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_T [8] | FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_T [7] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C2 [8] = or_2_nl_C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X2 [8] = or_2_nl_X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C1 [7] = or_2_nl_C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X1 [7] = or_2_nl_X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R2 [8] = ( or_2_nl_R | or_2_nl_C & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_T [7] ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl[7] != 1'b1 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R1 [7] = ( or_2_nl_R | or_2_nl_C & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_T [8] ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl[8] != 1'b1 }} ;
  assign _169_ = or_2_nl | _124_;
  assign _169__S = 0 ;
  logic [0:0] or_2_nl_C0 ;
  logic [0:0] or_2_nl_R0 ;
  logic [0:0] or_2_nl_X0 ;
  logic [0:0] _124__C0 ;
  logic [0:0] _124__R0 ;
  logic [0:0] _124__X0 ;
  assign _169__T = or_2_nl_T | _124__T ;
  assign or_2_nl_C0 = _169__C ;
  assign or_2_nl_X0 = _169__X ;
  assign _124__C0 = _169__C ;
  assign _124__X0 = _169__X ;
  assign or_2_nl_R0 = ( _169__R | _169__C & _124__T ) & { 1{ _124_ != 1'b1 }} ;
  assign _124__R0 = ( _169__R | _169__C & or_2_nl_T ) & { 1{ or_2_nl != 1'b1 }} ;
  assign _170_ = FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3 | FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3;
  assign _170__S = 0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_C2 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_R2 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_X2 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_C1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_R1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X1 ;
  assign _170__T = FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_T | FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_C2 = _170__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_X2 = _170__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_C1 = _170__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X1 = _170__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_R2 = ( _170__R | _170__C & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3 != 1'b1 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_R1 = ( _170__R | _170__C & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3 != 1'b1 }} ;
  assign _171_ = _170_ | _125_;
  assign _171__S = 0 ;
  logic [0:0] _170__C0 ;
  logic [0:0] _170__R0 ;
  logic [0:0] _170__X0 ;
  logic [0:0] _125__C0 ;
  logic [0:0] _125__R0 ;
  logic [0:0] _125__X0 ;
  assign _171__T = _170__T | _125__T ;
  assign _170__C0 = _171__C ;
  assign _170__X0 = _171__X ;
  assign _125__C0 = _171__C ;
  assign _125__X0 = _171__X ;
  assign _170__R0 = ( _171__R | _171__C & _125__T ) & { 1{ _125_ != 1'b1 }} ;
  assign _125__R0 = ( _171__R | _171__C & _170__T ) & { 1{ _170_ != 1'b1 }} ;
  assign _172_ = FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl[7] | _122_;
  assign _172__S = 0 ;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R1 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R1 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R1 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R1 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R1 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R1 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R1 [6] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X1 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X1 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X1 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X1 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X1 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X1 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X1 [6] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C1 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C1 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C1 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C1 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C1 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C1 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C1 [6] } = 0;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C2 ;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R2 ;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X2 ;
  logic [0:0] _122__C2 ;
  logic [0:0] _122__R2 ;
  logic [0:0] _122__X2 ;
  assign _172__T = FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_T [7] | _122__T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C2 [7] = _172__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X2 [7] = _172__X ;
  assign _122__C2 = _172__C ;
  assign _122__X2 = _172__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R2 [7] = ( _172__R | _172__C & _122__T ) & { 1{ _122_ != 1'b1 }} ;
  assign _122__R2 = ( _172__R | _172__C & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_T [7] ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl[7] != 1'b1 }} ;
  assign _173_ = FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3 | _127_;
  assign _173__S = 0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_C2 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_R2 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_X2 ;
  logic [0:0] _127__C0 ;
  logic [0:0] _127__R0 ;
  logic [0:0] _127__X0 ;
  assign _173__T = FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_T | _127__T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_C2 = _173__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_X2 = _173__X ;
  assign _127__C0 = _173__C ;
  assign _127__X0 = _173__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_R2 = ( _173__R | _173__C & _127__T ) & { 1{ _127_ != 1'b1 }} ;
  assign _127__R0 = ( _173__R | _173__C & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3 != 1'b1 }} ;
  assign _174_ = _128_ | _129_;
  assign _174__S = 0 ;
  logic [0:0] _128__C0 ;
  logic [0:0] _128__R0 ;
  logic [0:0] _128__X0 ;
  logic [0:0] _129__C0 ;
  logic [0:0] _129__R0 ;
  logic [0:0] _129__X0 ;
  assign _174__T = _128__T | _129__T ;
  assign _128__C0 = _174__C ;
  assign _128__X0 = _174__X ;
  assign _129__C0 = _174__C ;
  assign _129__X0 = _174__X ;
  assign _128__R0 = ( _174__R | _174__C & _129__T ) & { 1{ _129_ != 1'b1 }} ;
  assign _129__R0 = ( _174__R | _174__C & _128__T ) & { 1{ _128_ != 1'b1 }} ;
  assign _175_ = _174_ | FpMantRNE_24U_11U_else_and_svs_st_2;
  assign _175__S = 0 ;
  logic [0:0] _174__C0 ;
  logic [0:0] _174__R0 ;
  logic [0:0] _174__X0 ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_st_2_C0 ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_st_2_R0 ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_st_2_X0 ;
  assign _175__T = _174__T | FpMantRNE_24U_11U_else_and_svs_st_2_T ;
  assign _174__C0 = _175__C ;
  assign _174__X0 = _175__X ;
  assign FpMantRNE_24U_11U_else_and_svs_st_2_C0 = _175__C ;
  assign FpMantRNE_24U_11U_else_and_svs_st_2_X0 = _175__X ;
  assign _174__R0 = ( _175__R | _175__C & FpMantRNE_24U_11U_else_and_svs_st_2_T ) & { 1{ FpMantRNE_24U_11U_else_and_svs_st_2 != 1'b1 }} ;
  assign FpMantRNE_24U_11U_else_and_svs_st_2_R0 = ( _175__R | _175__C & _174__T ) & { 1{ _174_ != 1'b1 }} ;
  assign _176_ = _130_ | _125_;
  assign _176__S = 0 ;
  logic [0:0] _130__C0 ;
  logic [0:0] _130__R0 ;
  logic [0:0] _130__X0 ;
  logic [0:0] _125__C1 ;
  logic [0:0] _125__R1 ;
  logic [0:0] _125__X1 ;
  assign _176__T = _130__T | _125__T ;
  assign _130__C0 = _176__C ;
  assign _130__X0 = _176__X ;
  assign _125__C1 = _176__C ;
  assign _125__X1 = _176__X ;
  assign _130__R0 = ( _176__R | _176__C & _125__T ) & { 1{ _125_ != 1'b1 }} ;
  assign _125__R1 = ( _176__R | _176__C & _130__T ) & { 1{ _130_ != 1'b1 }} ;
  assign _177_ = _176_ | FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3;
  assign _177__S = 0 ;
  logic [0:0] _176__C0 ;
  logic [0:0] _176__R0 ;
  logic [0:0] _176__X0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_C2 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_R2 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X2 ;
  assign _177__T = _176__T | FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_T ;
  assign _176__C0 = _177__C ;
  assign _176__X0 = _177__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_C2 = _177__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X2 = _177__X ;
  assign _176__R0 = ( _177__R | _177__C & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3 != 1'b1 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_R2 = ( _177__R | _177__C & _176__T ) & { 1{ _176_ != 1'b1 }} ;
  assign _178_ = _177_ | _002_;
  assign _178__S = 0 ;
  logic [0:0] _177__C0 ;
  logic [0:0] _177__R0 ;
  logic [0:0] _177__X0 ;
  logic [0:0] _002__C1 ;
  logic [0:0] _002__R1 ;
  logic [0:0] _002__X1 ;
  assign _178__T = _177__T | _002__T ;
  assign _177__C0 = _178__C ;
  assign _177__X0 = _178__X ;
  assign _002__C1 = _178__C ;
  assign _002__X1 = _178__X ;
  assign _177__R0 = ( _178__R | _178__C & _002__T ) & { 1{ _002_ != 1'b1 }} ;
  assign _002__R1 = ( _178__R | _178__C & _177__T ) & { 1{ _177_ != 1'b1 }} ;
  assign or_16_nl = _131_ | FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl[7];
  assign or_16_nl_S = 0 ;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R2 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R2 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R2 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R2 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R2 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R2 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R2 [6] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X2 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X2 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X2 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X2 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X2 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X2 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X2 [6] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C2 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C2 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C2 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C2 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C2 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C2 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C2 [6] } = 0;
  logic [0:0] _131__C0 ;
  logic [0:0] _131__R0 ;
  logic [0:0] _131__X0 ;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C3 ;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R3 ;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X3 ;
  assign or_16_nl_T = _131__T | FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_T [7] ;
  assign _131__C0 = or_16_nl_C ;
  assign _131__X0 = or_16_nl_X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C3 [7] = or_16_nl_C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X3 [7] = or_16_nl_X ;
  assign _131__R0 = ( or_16_nl_R | or_16_nl_C & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_T [7] ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl[7] != 1'b1 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R3 [7] = ( or_16_nl_R | or_16_nl_C & _131__T ) & { 1{ _131_ != 1'b1 }} ;
  assign _179_ = or_16_nl | _124_;
  assign _179__S = 0 ;
  logic [0:0] or_16_nl_C0 ;
  logic [0:0] or_16_nl_R0 ;
  logic [0:0] or_16_nl_X0 ;
  logic [0:0] _124__C1 ;
  logic [0:0] _124__R1 ;
  logic [0:0] _124__X1 ;
  assign _179__T = or_16_nl_T | _124__T ;
  assign or_16_nl_C0 = _179__C ;
  assign or_16_nl_X0 = _179__X ;
  assign _124__C1 = _179__C ;
  assign _124__X1 = _179__X ;
  assign or_16_nl_R0 = ( _179__R | _179__C & _124__T ) & { 1{ _124_ != 1'b1 }} ;
  assign _124__R1 = ( _179__R | _179__C & or_16_nl_T ) & { 1{ or_16_nl != 1'b1 }} ;
  assign _180_ = _129_ | FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3;
  assign _180__S = 0 ;
  logic [0:0] _129__C1 ;
  logic [0:0] _129__R1 ;
  logic [0:0] _129__X1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_C3 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_R3 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X3 ;
  assign _180__T = _129__T | FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_T ;
  assign _129__C1 = _180__C ;
  assign _129__X1 = _180__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_C3 = _180__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X3 = _180__X ;
  assign _129__R1 = ( _180__R | _180__C & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3 != 1'b1 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_R3 = ( _180__R | _180__C & _129__T ) & { 1{ _129_ != 1'b1 }} ;
  assign _181_ = _180_ | _125_;
  assign _181__S = 0 ;
  logic [0:0] _180__C0 ;
  logic [0:0] _180__R0 ;
  logic [0:0] _180__X0 ;
  logic [0:0] _125__C2 ;
  logic [0:0] _125__R2 ;
  logic [0:0] _125__X2 ;
  assign _181__T = _180__T | _125__T ;
  assign _180__C0 = _181__C ;
  assign _180__X0 = _181__X ;
  assign _125__C2 = _181__C ;
  assign _125__X2 = _181__X ;
  assign _180__R0 = ( _181__R | _181__C & _125__T ) & { 1{ _125_ != 1'b1 }} ;
  assign _125__R2 = ( _181__R | _181__C & _180__T ) & { 1{ _180_ != 1'b1 }} ;
  assign _182_ = FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl[7] | _124_;
  assign _182__S = 0 ;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R3 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R3 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R3 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R3 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R3 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R3 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R3 [6] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X3 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X3 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X3 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X3 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X3 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X3 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X3 [6] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C3 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C3 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C3 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C3 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C3 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C3 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C3 [6] } = 0;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C4 ;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R4 ;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X4 ;
  logic [0:0] _124__C2 ;
  logic [0:0] _124__R2 ;
  logic [0:0] _124__X2 ;
  assign _182__T = FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_T [7] | _124__T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C4 [7] = _182__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X4 [7] = _182__X ;
  assign _124__C2 = _182__C ;
  assign _124__X2 = _182__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R4 [7] = ( _182__R | _182__C & _124__T ) & { 1{ _124_ != 1'b1 }} ;
  assign _124__R2 = ( _182__R | _182__C & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_T [7] ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl[7] != 1'b1 }} ;
  assign _183_ = FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3 | _125_;
  assign _183__S = 0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_C4 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_R4 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X4 ;
  logic [0:0] _125__C3 ;
  logic [0:0] _125__R3 ;
  logic [0:0] _125__X3 ;
  assign _183__T = FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_T | _125__T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_C4 = _183__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X4 = _183__X ;
  assign _125__C3 = _183__C ;
  assign _125__X3 = _183__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_R4 = ( _183__R | _183__C & _125__T ) & { 1{ _125_ != 1'b1 }} ;
  assign _125__R3 = ( _183__R | _183__C & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3 != 1'b1 }} ;
  assign _184_ = FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4 | _132_;
  assign _184__S = 0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_C0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_R0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_X0 ;
  logic [0:0] _132__C0 ;
  logic [0:0] _132__R0 ;
  logic [0:0] _132__X0 ;
  assign _184__T = FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_T | _132__T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_C0 = _184__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_X0 = _184__X ;
  assign _132__C0 = _184__C ;
  assign _132__X0 = _184__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_R0 = ( _184__R | _184__C & _132__T ) & { 1{ _132_ != 1'b1 }} ;
  assign _132__R0 = ( _184__R | _184__C & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4 != 1'b1 }} ;
  assign _185_ = _184_ | _133_;
  assign _185__S = 0 ;
  logic [0:0] _184__C0 ;
  logic [0:0] _184__R0 ;
  logic [0:0] _184__X0 ;
  logic [0:0] _133__C1 ;
  logic [0:0] _133__R1 ;
  logic [0:0] _133__X1 ;
  assign _185__T = _184__T | _133__T ;
  assign _184__C0 = _185__C ;
  assign _184__X0 = _185__X ;
  assign _133__C1 = _185__C ;
  assign _133__X1 = _185__X ;
  assign _184__R0 = ( _185__R | _185__C & _133__T ) & { 1{ _133_ != 1'b1 }} ;
  assign _133__R1 = ( _185__R | _185__C & _184__T ) & { 1{ _184_ != 1'b1 }} ;
  assign _186_ = _185_ | _134_;
  assign _186__S = 0 ;
  logic [0:0] _185__C0 ;
  logic [0:0] _185__R0 ;
  logic [0:0] _185__X0 ;
  logic [0:0] _134__C0 ;
  logic [0:0] _134__R0 ;
  logic [0:0] _134__X0 ;
  assign _186__T = _185__T | _134__T ;
  assign _185__C0 = _186__C ;
  assign _185__X0 = _186__X ;
  assign _134__C0 = _186__C ;
  assign _134__X0 = _186__X ;
  assign _185__R0 = ( _186__R | _186__C & _134__T ) & { 1{ _134_ != 1'b1 }} ;
  assign _134__R0 = ( _186__R | _186__C & _185__T ) & { 1{ _185_ != 1'b1 }} ;
  assign _187_ = _186_ | chn_o_rsci_bawt;
  assign _187__S = 0 ;
  logic [0:0] _186__C0 ;
  logic [0:0] _186__R0 ;
  logic [0:0] _186__X0 ;
  logic [0:0] chn_o_rsci_bawt_C2 ;
  logic [0:0] chn_o_rsci_bawt_R2 ;
  logic [0:0] chn_o_rsci_bawt_X2 ;
  assign _187__T = _186__T | chn_o_rsci_bawt_T ;
  assign _186__C0 = _187__C ;
  assign _186__X0 = _187__X ;
  assign chn_o_rsci_bawt_C2 = _187__C ;
  assign chn_o_rsci_bawt_X2 = _187__X ;
  assign _186__R0 = ( _187__R | _187__C & chn_o_rsci_bawt_T ) & { 1{ chn_o_rsci_bawt != 1'b1 }} ;
  assign chn_o_rsci_bawt_R2 = ( _187__R | _187__C & _186__T ) & { 1{ _186_ != 1'b1 }} ;
  assign _188_ = nor_20_cse | mux_tmp_18;
  assign _188__S = 0 ;
  logic [0:0] nor_20_cse_C0 ;
  logic [0:0] nor_20_cse_R0 ;
  logic [0:0] nor_20_cse_X0 ;
  logic [0:0] mux_tmp_18_C1 ;
  logic [0:0] mux_tmp_18_R1 ;
  logic [0:0] mux_tmp_18_X1 ;
  assign _188__T = nor_20_cse_T | mux_tmp_18_T ;
  assign nor_20_cse_C0 = _188__C ;
  assign nor_20_cse_X0 = _188__X ;
  assign mux_tmp_18_C1 = _188__C ;
  assign mux_tmp_18_X1 = _188__X ;
  assign nor_20_cse_R0 = ( _188__R | _188__C & mux_tmp_18_T ) & { 1{ mux_tmp_18 != 1'b1 }} ;
  assign mux_tmp_18_R1 = ( _188__R | _188__C & nor_20_cse_T ) & { 1{ nor_20_cse != 1'b1 }} ;
  assign _189_ = and_77_cse | FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5;
  assign _189__S = 0 ;
  logic [0:0] and_77_cse_C0 ;
  logic [0:0] and_77_cse_R0 ;
  logic [0:0] and_77_cse_X0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_C0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_R0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_X0 ;
  assign _189__T = and_77_cse_T | FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_T ;
  assign and_77_cse_C0 = _189__C ;
  assign and_77_cse_X0 = _189__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_C0 = _189__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_X0 = _189__X ;
  assign and_77_cse_R0 = ( _189__R | _189__C & FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5 != 1'b1 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_R0 = ( _189__R | _189__C & and_77_cse_T ) & { 1{ and_77_cse != 1'b1 }} ;
  assign _190_ = _189_ | _135_;
  assign _190__S = 0 ;
  logic [0:0] _189__C0 ;
  logic [0:0] _189__R0 ;
  logic [0:0] _189__X0 ;
  logic [0:0] _135__C0 ;
  logic [0:0] _135__R0 ;
  logic [0:0] _135__X0 ;
  assign _190__T = _189__T | _135__T ;
  assign _189__C0 = _190__C ;
  assign _189__X0 = _190__X ;
  assign _135__C0 = _190__C ;
  assign _135__X0 = _190__X ;
  assign _189__R0 = ( _190__R | _190__C & _135__T ) & { 1{ _135_ != 1'b1 }} ;
  assign _135__R0 = ( _190__R | _190__C & _189__T ) & { 1{ _189_ != 1'b1 }} ;
  assign _191_ = _136_ | IsNaN_8U_23U_land_lpi_1_dfm_2;
  assign _191__S = 0 ;
  logic [0:0] _136__C0 ;
  logic [0:0] _136__R0 ;
  logic [0:0] _136__X0 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_2_C2 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_2_R2 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_2_X2 ;
  assign _191__T = _136__T | IsNaN_8U_23U_land_lpi_1_dfm_2_T ;
  assign _136__C0 = _191__C ;
  assign _136__X0 = _191__X ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_2_C2 = _191__C ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_2_X2 = _191__X ;
  assign _136__R0 = ( _191__R | _191__C & IsNaN_8U_23U_land_lpi_1_dfm_2_T ) & { 1{ IsNaN_8U_23U_land_lpi_1_dfm_2 != 1'b1 }} ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_2_R2 = ( _191__R | _191__C & _136__T ) & { 1{ _136_ != 1'b1 }} ;
  assign _192_ = _137_ | _131_;
  assign _192__S = 0 ;
  logic [0:0] _137__C0 ;
  logic [0:0] _137__R0 ;
  logic [0:0] _137__X0 ;
  logic [0:0] _131__C1 ;
  logic [0:0] _131__R1 ;
  logic [0:0] _131__X1 ;
  assign _192__T = _137__T | _131__T ;
  assign _137__C0 = _192__C ;
  assign _137__X0 = _192__X ;
  assign _131__C1 = _192__C ;
  assign _131__X1 = _192__X ;
  assign _137__R0 = ( _192__R | _192__C & _131__T ) & { 1{ _131_ != 1'b1 }} ;
  assign _131__R1 = ( _192__R | _192__C & _137__T ) & { 1{ _137_ != 1'b1 }} ;
  assign _193_ = _192_ | FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl[7];
  assign _193__S = 0 ;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R4 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R4 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R4 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R4 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R4 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R4 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R4 [6] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X4 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X4 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X4 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X4 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X4 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X4 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X4 [6] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C4 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C4 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C4 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C4 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C4 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C4 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C4 [6] } = 0;
  logic [0:0] _192__C0 ;
  logic [0:0] _192__R0 ;
  logic [0:0] _192__X0 ;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C5 ;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R5 ;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X5 ;
  assign _193__T = _192__T | FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_T [7] ;
  assign _192__C0 = _193__C ;
  assign _192__X0 = _193__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C5 [7] = _193__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X5 [7] = _193__X ;
  assign _192__R0 = ( _193__R | _193__C & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_T [7] ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl[7] != 1'b1 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R5 [7] = ( _193__R | _193__C & _192__T ) & { 1{ _192_ != 1'b1 }} ;
  assign _194_ = _193_ | _138_;
  assign _194__S = 0 ;
  logic [0:0] _193__C0 ;
  logic [0:0] _193__R0 ;
  logic [0:0] _193__X0 ;
  logic [0:0] _138__C0 ;
  logic [0:0] _138__R0 ;
  logic [0:0] _138__X0 ;
  assign _194__T = _193__T | _138__T ;
  assign _193__C0 = _194__C ;
  assign _193__X0 = _194__X ;
  assign _138__C0 = _194__C ;
  assign _138__X0 = _194__X ;
  assign _193__R0 = ( _194__R | _194__C & _138__T ) & { 1{ _138_ != 1'b1 }} ;
  assign _138__R0 = ( _194__R | _194__C & _193__T ) & { 1{ _193_ != 1'b1 }} ;
  assign _195_ = _082_ | _083_;
  assign _195__S = 0 ;
  logic [4:0] _082__C0 ;
  logic [4:0] _082__R0 ;
  logic [4:0] _082__X0 ;
  logic [4:0] _083__C0 ;
  logic [4:0] _083__R0 ;
  logic [4:0] _083__X0 ;
  assign _195__T = _082__T | _083__T ;
  assign _082__C0 = _195__C ;
  assign _082__X0 = _195__X ;
  assign _083__C0 = _195__C ;
  assign _083__X0 = _195__X ;
  assign _082__R0 = ( _195__R | _195__C & _083__T ) & { 5{ _083_ != 5'b11111 }} ;
  assign _083__R0 = ( _195__R | _195__C & _082__T ) & { 5{ _082_ != 5'b11111 }} ;
  assign _196_ = _195_ | _084_;
  assign _196__S = 0 ;
  logic [4:0] _195__C0 ;
  logic [4:0] _195__R0 ;
  logic [4:0] _195__X0 ;
  logic [4:0] _084__C0 ;
  logic [4:0] _084__R0 ;
  logic [4:0] _084__X0 ;
  assign _196__T = _195__T | _084__T ;
  assign _195__C0 = _196__C ;
  assign _195__X0 = _196__X ;
  assign _084__C0 = _196__C ;
  assign _084__X0 = _196__X ;
  assign _195__R0 = ( _196__R | _196__C & _084__T ) & { 5{ _084_ != 5'b11111 }} ;
  assign _084__R0 = ( _196__R | _196__C & _195__T ) & { 5{ _195_ != 5'b11111 }} ;
  assign _197_ = _196_ | _085_;
  assign _197__S = 0 ;
  logic [4:0] _196__C0 ;
  logic [4:0] _196__R0 ;
  logic [4:0] _196__X0 ;
  logic [4:0] _085__C0 ;
  logic [4:0] _085__R0 ;
  logic [4:0] _085__X0 ;
  assign _197__T = _196__T | _085__T ;
  assign _196__C0 = _197__C ;
  assign _196__X0 = _197__X ;
  assign _085__C0 = _197__C ;
  assign _085__X0 = _197__X ;
  assign _196__R0 = ( _197__R | _197__C & _085__T ) & { 5{ _085_ != 5'b11111 }} ;
  assign _085__R0 = ( _197__R | _197__C & _196__T ) & { 5{ _196_ != 5'b11111 }} ;
  assign _198_ = and_dcpl_9 | _133_;
  assign _198__S = 0 ;
  logic [0:0] and_dcpl_9_C2 ;
  logic [0:0] and_dcpl_9_R2 ;
  logic [0:0] and_dcpl_9_X2 ;
  logic [0:0] _133__C2 ;
  logic [0:0] _133__R2 ;
  logic [0:0] _133__X2 ;
  assign _198__T = and_dcpl_9_T | _133__T ;
  assign and_dcpl_9_C2 = _198__C ;
  assign and_dcpl_9_X2 = _198__X ;
  assign _133__C2 = _198__C ;
  assign _133__X2 = _198__X ;
  assign and_dcpl_9_R2 = ( _198__R | _198__C & _133__T ) & { 1{ _133_ != 1'b1 }} ;
  assign _133__R2 = ( _198__R | _198__C & and_dcpl_9_T ) & { 1{ and_dcpl_9 != 1'b1 }} ;
  assign or_9_cse = _134_ | chn_o_rsci_bawt;
  assign or_9_cse_S = 0 ;
  logic [0:0] _134__C1 ;
  logic [0:0] _134__R1 ;
  logic [0:0] _134__X1 ;
  logic [0:0] chn_o_rsci_bawt_C3 ;
  logic [0:0] chn_o_rsci_bawt_R3 ;
  logic [0:0] chn_o_rsci_bawt_X3 ;
  assign or_9_cse_T = _134__T | chn_o_rsci_bawt_T ;
  assign _134__C1 = or_9_cse_C ;
  assign _134__X1 = or_9_cse_X ;
  assign chn_o_rsci_bawt_C3 = or_9_cse_C ;
  assign chn_o_rsci_bawt_X3 = or_9_cse_X ;
  assign _134__R1 = ( or_9_cse_R | or_9_cse_C & chn_o_rsci_bawt_T ) & { 1{ chn_o_rsci_bawt != 1'b1 }} ;
  assign chn_o_rsci_bawt_R3 = ( or_9_cse_R | or_9_cse_C & _134__T ) & { 1{ _134_ != 1'b1 }} ;
  assign _199_ = _002_ | _125_;
  assign _199__S = 0 ;
  logic [0:0] _002__C2 ;
  logic [0:0] _002__R2 ;
  logic [0:0] _002__X2 ;
  logic [0:0] _125__C4 ;
  logic [0:0] _125__R4 ;
  logic [0:0] _125__X4 ;
  assign _199__T = _002__T | _125__T ;
  assign _002__C2 = _199__C ;
  assign _002__X2 = _199__X ;
  assign _125__C4 = _199__C ;
  assign _125__X4 = _199__X ;
  assign _002__R2 = ( _199__R | _199__C & _125__T ) & { 1{ _125_ != 1'b1 }} ;
  assign _125__R4 = ( _199__R | _199__C & _002__T ) & { 1{ _002_ != 1'b1 }} ;
  assign _200_ = _199_ | FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3;
  assign _200__S = 0 ;
  logic [0:0] _199__C0 ;
  logic [0:0] _199__R0 ;
  logic [0:0] _199__X0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_C5 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_R5 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X5 ;
  assign _200__T = _199__T | FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_T ;
  assign _199__C0 = _200__C ;
  assign _199__X0 = _200__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_C5 = _200__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X5 = _200__X ;
  assign _199__R0 = ( _200__R | _200__C & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3 != 1'b1 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_R5 = ( _200__R | _200__C & _199__T ) & { 1{ _199_ != 1'b1 }} ;
  assign _201_ = _200_ | FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3;
  assign _201__S = 0 ;
  logic [0:0] _200__C0 ;
  logic [0:0] _200__R0 ;
  logic [0:0] _200__X0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_C3 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_R3 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_X3 ;
  assign _201__T = _200__T | FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_T ;
  assign _200__C0 = _201__C ;
  assign _200__X0 = _201__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_C3 = _201__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_X3 = _201__X ;
  assign _200__R0 = ( _201__R | _201__C & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3 != 1'b1 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_R3 = ( _201__R | _201__C & _200__T ) & { 1{ _200_ != 1'b1 }} ;
  assign _202_ = _133_ | _132_;
  assign _202__S = 0 ;
  logic [0:0] _133__C3 ;
  logic [0:0] _133__R3 ;
  logic [0:0] _133__X3 ;
  logic [0:0] _132__C1 ;
  logic [0:0] _132__R1 ;
  logic [0:0] _132__X1 ;
  assign _202__T = _133__T | _132__T ;
  assign _133__C3 = _202__C ;
  assign _133__X3 = _202__X ;
  assign _132__C1 = _202__C ;
  assign _132__X1 = _202__X ;
  assign _133__R3 = ( _202__R | _202__C & _132__T ) & { 1{ _132_ != 1'b1 }} ;
  assign _132__R1 = ( _202__R | _202__C & _133__T ) & { 1{ _133_ != 1'b1 }} ;
  assign _203_ = _202_ | FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4;
  assign _203__S = 0 ;
  logic [0:0] _202__C0 ;
  logic [0:0] _202__R0 ;
  logic [0:0] _202__X0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_C1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_R1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_X1 ;
  assign _203__T = _202__T | FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_T ;
  assign _202__C0 = _203__C ;
  assign _202__X0 = _203__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_C1 = _203__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_X1 = _203__X ;
  assign _202__R0 = ( _203__R | _203__C & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4 != 1'b1 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_R1 = ( _203__R | _203__C & _202__T ) & { 1{ _202_ != 1'b1 }} ;
  assign _204_ = _203_ | FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4;
  assign _204__S = 0 ;
  logic [0:0] _203__C0 ;
  logic [0:0] _203__R0 ;
  logic [0:0] _203__X0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_C0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_R0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_X0 ;
  assign _204__T = _203__T | FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_T ;
  assign _203__C0 = _204__C ;
  assign _203__X0 = _204__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_C0 = _204__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_X0 = _204__X ;
  assign _203__R0 = ( _204__R | _204__C & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4 != 1'b1 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_R0 = ( _204__R | _204__C & _203__T ) & { 1{ _203_ != 1'b1 }} ;
  assign or_tmp_11 = IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2 | IsNaN_8U_23U_nor_itm_2;
  assign or_tmp_11_S = 0 ;
  logic [0:0] IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_C0 ;
  logic [0:0] IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_R0 ;
  logic [0:0] IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_X0 ;
  logic [0:0] IsNaN_8U_23U_nor_itm_2_C0 ;
  logic [0:0] IsNaN_8U_23U_nor_itm_2_R0 ;
  logic [0:0] IsNaN_8U_23U_nor_itm_2_X0 ;
  assign or_tmp_11_T = IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_T | IsNaN_8U_23U_nor_itm_2_T ;
  assign IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_C0 = or_tmp_11_C ;
  assign IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_X0 = or_tmp_11_X ;
  assign IsNaN_8U_23U_nor_itm_2_C0 = or_tmp_11_C ;
  assign IsNaN_8U_23U_nor_itm_2_X0 = or_tmp_11_X ;
  assign IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_R0 = ( or_tmp_11_R | or_tmp_11_C & IsNaN_8U_23U_nor_itm_2_T ) & { 1{ IsNaN_8U_23U_nor_itm_2 != 1'b1 }} ;
  assign IsNaN_8U_23U_nor_itm_2_R0 = ( or_tmp_11_R | or_tmp_11_C & IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_T ) & { 1{ IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2 != 1'b1 }} ;
  assign _205_ = chn_a_rsci_d_mxwt[0] | chn_a_rsci_d_mxwt[1];
  assign _205__S = 0 ;
  assign _205__T = chn_a_rsci_d_mxwt_T [0] | chn_a_rsci_d_mxwt_T [1] ;
  assign chn_a_rsci_d_mxwt_C4 [0] = _205__C ;
  assign chn_a_rsci_d_mxwt_X4 [0] = _205__X ;
  assign chn_a_rsci_d_mxwt_C4 [1] = _205__C ;
  assign chn_a_rsci_d_mxwt_X4 [1] = _205__X ;
  assign chn_a_rsci_d_mxwt_R4 [0] = ( _205__R | _205__C & chn_a_rsci_d_mxwt_T [1] ) & { 1{ chn_a_rsci_d_mxwt[1] != 1'b1 }} ;
  assign chn_a_rsci_d_mxwt_R4 [1] = ( _205__R | _205__C & chn_a_rsci_d_mxwt_T [0] ) & { 1{ chn_a_rsci_d_mxwt[0] != 1'b1 }} ;
  assign _206_ = _205_ | chn_a_rsci_d_mxwt[2];
  assign _206__S = 0 ;
  logic [0:0] _205__C0 ;
  logic [0:0] _205__R0 ;
  logic [0:0] _205__X0 ;
  assign _206__T = _205__T | chn_a_rsci_d_mxwt_T [2] ;
  assign _205__C0 = _206__C ;
  assign _205__X0 = _206__X ;
  assign chn_a_rsci_d_mxwt_C4 [2] = _206__C ;
  assign chn_a_rsci_d_mxwt_X4 [2] = _206__X ;
  assign _205__R0 = ( _206__R | _206__C & chn_a_rsci_d_mxwt_T [2] ) & { 1{ chn_a_rsci_d_mxwt[2] != 1'b1 }} ;
  assign chn_a_rsci_d_mxwt_R4 [2] = ( _206__R | _206__C & _205__T ) & { 1{ _205_ != 1'b1 }} ;
  assign _207_ = _206_ | chn_a_rsci_d_mxwt[3];
  assign _207__S = 0 ;
  logic [0:0] _206__C0 ;
  logic [0:0] _206__R0 ;
  logic [0:0] _206__X0 ;
  assign _207__T = _206__T | chn_a_rsci_d_mxwt_T [3] ;
  assign _206__C0 = _207__C ;
  assign _206__X0 = _207__X ;
  assign chn_a_rsci_d_mxwt_C4 [3] = _207__C ;
  assign chn_a_rsci_d_mxwt_X4 [3] = _207__X ;
  assign _206__R0 = ( _207__R | _207__C & chn_a_rsci_d_mxwt_T [3] ) & { 1{ chn_a_rsci_d_mxwt[3] != 1'b1 }} ;
  assign chn_a_rsci_d_mxwt_R4 [3] = ( _207__R | _207__C & _206__T ) & { 1{ _206_ != 1'b1 }} ;
  assign _208_ = _207_ | chn_a_rsci_d_mxwt[4];
  assign _208__S = 0 ;
  logic [0:0] _207__C0 ;
  logic [0:0] _207__R0 ;
  logic [0:0] _207__X0 ;
  assign _208__T = _207__T | chn_a_rsci_d_mxwt_T [4] ;
  assign _207__C0 = _208__C ;
  assign _207__X0 = _208__X ;
  assign chn_a_rsci_d_mxwt_C4 [4] = _208__C ;
  assign chn_a_rsci_d_mxwt_X4 [4] = _208__X ;
  assign _207__R0 = ( _208__R | _208__C & chn_a_rsci_d_mxwt_T [4] ) & { 1{ chn_a_rsci_d_mxwt[4] != 1'b1 }} ;
  assign chn_a_rsci_d_mxwt_R4 [4] = ( _208__R | _208__C & _207__T ) & { 1{ _207_ != 1'b1 }} ;
  assign _209_ = _208_ | chn_a_rsci_d_mxwt[5];
  assign _209__S = 0 ;
  logic [0:0] _208__C0 ;
  logic [0:0] _208__R0 ;
  logic [0:0] _208__X0 ;
  assign _209__T = _208__T | chn_a_rsci_d_mxwt_T [5] ;
  assign _208__C0 = _209__C ;
  assign _208__X0 = _209__X ;
  assign chn_a_rsci_d_mxwt_C4 [5] = _209__C ;
  assign chn_a_rsci_d_mxwt_X4 [5] = _209__X ;
  assign _208__R0 = ( _209__R | _209__C & chn_a_rsci_d_mxwt_T [5] ) & { 1{ chn_a_rsci_d_mxwt[5] != 1'b1 }} ;
  assign chn_a_rsci_d_mxwt_R4 [5] = ( _209__R | _209__C & _208__T ) & { 1{ _208_ != 1'b1 }} ;
  assign _210_ = _209_ | chn_a_rsci_d_mxwt[6];
  assign _210__S = 0 ;
  logic [0:0] _209__C0 ;
  logic [0:0] _209__R0 ;
  logic [0:0] _209__X0 ;
  assign _210__T = _209__T | chn_a_rsci_d_mxwt_T [6] ;
  assign _209__C0 = _210__C ;
  assign _209__X0 = _210__X ;
  assign chn_a_rsci_d_mxwt_C4 [6] = _210__C ;
  assign chn_a_rsci_d_mxwt_X4 [6] = _210__X ;
  assign _209__R0 = ( _210__R | _210__C & chn_a_rsci_d_mxwt_T [6] ) & { 1{ chn_a_rsci_d_mxwt[6] != 1'b1 }} ;
  assign chn_a_rsci_d_mxwt_R4 [6] = ( _210__R | _210__C & _209__T ) & { 1{ _209_ != 1'b1 }} ;
  assign _211_ = _210_ | chn_a_rsci_d_mxwt[7];
  assign _211__S = 0 ;
  logic [0:0] _210__C0 ;
  logic [0:0] _210__R0 ;
  logic [0:0] _210__X0 ;
  assign _211__T = _210__T | chn_a_rsci_d_mxwt_T [7] ;
  assign _210__C0 = _211__C ;
  assign _210__X0 = _211__X ;
  assign chn_a_rsci_d_mxwt_C4 [7] = _211__C ;
  assign chn_a_rsci_d_mxwt_X4 [7] = _211__X ;
  assign _210__R0 = ( _211__R | _211__C & chn_a_rsci_d_mxwt_T [7] ) & { 1{ chn_a_rsci_d_mxwt[7] != 1'b1 }} ;
  assign chn_a_rsci_d_mxwt_R4 [7] = ( _211__R | _211__C & _210__T ) & { 1{ _210_ != 1'b1 }} ;
  assign _212_ = _211_ | chn_a_rsci_d_mxwt[8];
  assign _212__S = 0 ;
  logic [0:0] _211__C0 ;
  logic [0:0] _211__R0 ;
  logic [0:0] _211__X0 ;
  assign _212__T = _211__T | chn_a_rsci_d_mxwt_T [8] ;
  assign _211__C0 = _212__C ;
  assign _211__X0 = _212__X ;
  assign chn_a_rsci_d_mxwt_C4 [8] = _212__C ;
  assign chn_a_rsci_d_mxwt_X4 [8] = _212__X ;
  assign _211__R0 = ( _212__R | _212__C & chn_a_rsci_d_mxwt_T [8] ) & { 1{ chn_a_rsci_d_mxwt[8] != 1'b1 }} ;
  assign chn_a_rsci_d_mxwt_R4 [8] = ( _212__R | _212__C & _211__T ) & { 1{ _211_ != 1'b1 }} ;
  assign _213_ = _212_ | chn_a_rsci_d_mxwt[9];
  assign _213__S = 0 ;
  logic [0:0] _212__C0 ;
  logic [0:0] _212__R0 ;
  logic [0:0] _212__X0 ;
  assign _213__T = _212__T | chn_a_rsci_d_mxwt_T [9] ;
  assign _212__C0 = _213__C ;
  assign _212__X0 = _213__X ;
  assign chn_a_rsci_d_mxwt_C4 [9] = _213__C ;
  assign chn_a_rsci_d_mxwt_X4 [9] = _213__X ;
  assign _212__R0 = ( _213__R | _213__C & chn_a_rsci_d_mxwt_T [9] ) & { 1{ chn_a_rsci_d_mxwt[9] != 1'b1 }} ;
  assign chn_a_rsci_d_mxwt_R4 [9] = ( _213__R | _213__C & _212__T ) & { 1{ _212_ != 1'b1 }} ;
  assign _214_ = _213_ | chn_a_rsci_d_mxwt[10];
  assign _214__S = 0 ;
  logic [0:0] _213__C0 ;
  logic [0:0] _213__R0 ;
  logic [0:0] _213__X0 ;
  assign _214__T = _213__T | chn_a_rsci_d_mxwt_T [10] ;
  assign _213__C0 = _214__C ;
  assign _213__X0 = _214__X ;
  assign chn_a_rsci_d_mxwt_C4 [10] = _214__C ;
  assign chn_a_rsci_d_mxwt_X4 [10] = _214__X ;
  assign _213__R0 = ( _214__R | _214__C & chn_a_rsci_d_mxwt_T [10] ) & { 1{ chn_a_rsci_d_mxwt[10] != 1'b1 }} ;
  assign chn_a_rsci_d_mxwt_R4 [10] = ( _214__R | _214__C & _213__T ) & { 1{ _213_ != 1'b1 }} ;
  assign _215_ = _214_ | chn_a_rsci_d_mxwt[11];
  assign _215__S = 0 ;
  logic [0:0] _214__C0 ;
  logic [0:0] _214__R0 ;
  logic [0:0] _214__X0 ;
  assign _215__T = _214__T | chn_a_rsci_d_mxwt_T [11] ;
  assign _214__C0 = _215__C ;
  assign _214__X0 = _215__X ;
  assign chn_a_rsci_d_mxwt_C4 [11] = _215__C ;
  assign chn_a_rsci_d_mxwt_X4 [11] = _215__X ;
  assign _214__R0 = ( _215__R | _215__C & chn_a_rsci_d_mxwt_T [11] ) & { 1{ chn_a_rsci_d_mxwt[11] != 1'b1 }} ;
  assign chn_a_rsci_d_mxwt_R4 [11] = ( _215__R | _215__C & _214__T ) & { 1{ _214_ != 1'b1 }} ;
  assign _216_ = _215_ | chn_a_rsci_d_mxwt[13];
  assign _216__S = 0 ;
  logic [0:0] _215__C0 ;
  logic [0:0] _215__R0 ;
  logic [0:0] _215__X0 ;
  assign _216__T = _215__T | chn_a_rsci_d_mxwt_T [13] ;
  assign _215__C0 = _216__C ;
  assign _215__X0 = _216__X ;
  assign chn_a_rsci_d_mxwt_C4 [13] = _216__C ;
  assign chn_a_rsci_d_mxwt_X4 [13] = _216__X ;
  assign _215__R0 = ( _216__R | _216__C & chn_a_rsci_d_mxwt_T [13] ) & { 1{ chn_a_rsci_d_mxwt[13] != 1'b1 }} ;
  assign chn_a_rsci_d_mxwt_R4 [13] = ( _216__R | _216__C & _215__T ) & { 1{ _215_ != 1'b1 }} ;
  assign _217_ = FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva[10] | FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4;
  assign _217__S = 0 ;
  logic [10:0] FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_C0 ;
  logic [10:0] FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_R0 ;
  logic [10:0] FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_X0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_C1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_R1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_X1 ;
  assign _217__T = FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_T [10] | FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_T ;
  assign FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_C0 [10] = _217__C ;
  assign FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_X0 [10] = _217__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_C1 = _217__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_X1 = _217__X ;
  assign FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_R0 [10] = ( _217__R | _217__C & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4 != 1'b1 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_R1 = ( _217__R | _217__C & FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_T [10] ) & { 1{ FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva[10] != 1'b1 }} ;
  assign _218_ = _144_ | FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4;
  assign _218__S = 0 ;
  logic [0:0] _144__C0 ;
  logic [0:0] _144__R0 ;
  logic [0:0] _144__X0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_C1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_R1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_X1 ;
  assign _218__T = _144__T | FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_T ;
  assign _144__C0 = _218__C ;
  assign _144__X0 = _218__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_C1 = _218__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_X1 = _218__X ;
  assign _144__R0 = ( _218__R | _218__C & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4 != 1'b1 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_R1 = ( _218__R | _218__C & _144__T ) & { 1{ _144_ != 1'b1 }} ;
  assign _118_ = FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp | FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0;
  assign _118__S = 0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_C1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_R1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_X1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_C2 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_R2 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_X2 ;
  assign _118__T = FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_T | FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_C1 = _118__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_X1 = _118__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_C2 = _118__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_X2 = _118__X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_R1 = ( _118__R | _118__C & FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0 != 1'b1 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_R2 = ( _118__R | _118__C & FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_T ) & { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp != 1'b1 }} ;
  assign or_tmp_3 = or_9_cse | _002_;
  assign or_tmp_3_S = 0 ;
  logic [0:0] or_9_cse_C13 ;
  logic [0:0] or_9_cse_R13 ;
  logic [0:0] or_9_cse_X13 ;
  logic [0:0] _002__C3 ;
  logic [0:0] _002__R3 ;
  logic [0:0] _002__X3 ;
  assign or_tmp_3_T = or_9_cse_T | _002__T ;
  assign or_9_cse_C13 = or_tmp_3_C ;
  assign or_9_cse_X13 = or_tmp_3_X ;
  assign _002__C3 = or_tmp_3_C ;
  assign _002__X3 = or_tmp_3_X ;
  assign or_9_cse_R13 = ( or_tmp_3_R | or_tmp_3_C & _002__T ) & { 1{ _002_ != 1'b1 }} ;
  assign _002__R3 = ( or_tmp_3_R | or_tmp_3_C & or_9_cse_T ) & { 1{ or_9_cse != 1'b1 }} ;
  assign or_tmp_9 = IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp | IsNaN_8U_23U_nor_tmp;
  assign or_tmp_9_S = 0 ;
  logic [0:0] IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_C0 ;
  logic [0:0] IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_R0 ;
  logic [0:0] IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_X0 ;
  logic [0:0] IsNaN_8U_23U_nor_tmp_C0 ;
  logic [0:0] IsNaN_8U_23U_nor_tmp_R0 ;
  logic [0:0] IsNaN_8U_23U_nor_tmp_X0 ;
  assign or_tmp_9_T = IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_T | IsNaN_8U_23U_nor_tmp_T ;
  assign IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_C0 = or_tmp_9_C ;
  assign IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_X0 = or_tmp_9_X ;
  assign IsNaN_8U_23U_nor_tmp_C0 = or_tmp_9_C ;
  assign IsNaN_8U_23U_nor_tmp_X0 = or_tmp_9_X ;
  assign IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_R0 = ( or_tmp_9_R | or_tmp_9_C & IsNaN_8U_23U_nor_tmp_T ) & { 1{ IsNaN_8U_23U_nor_tmp != 1'b1 }} ;
  assign IsNaN_8U_23U_nor_tmp_R0 = ( or_tmp_9_R | or_tmp_9_C & IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_T ) & { 1{ IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp != 1'b1 }} ;
  assign or_tmp_24 = nor_20_cse | main_stage_v_1;
  assign or_tmp_24_S = 0 ;
  logic [0:0] nor_20_cse_C1 ;
  logic [0:0] nor_20_cse_R1 ;
  logic [0:0] nor_20_cse_X1 ;
  logic [0:0] main_stage_v_1_C4 ;
  logic [0:0] main_stage_v_1_R4 ;
  logic [0:0] main_stage_v_1_X4 ;
  assign or_tmp_24_T = nor_20_cse_T | main_stage_v_1_T ;
  assign nor_20_cse_C1 = or_tmp_24_C ;
  assign nor_20_cse_X1 = or_tmp_24_X ;
  assign main_stage_v_1_C4 = or_tmp_24_C ;
  assign main_stage_v_1_X4 = or_tmp_24_X ;
  assign nor_20_cse_R1 = ( or_tmp_24_R | or_tmp_24_C & main_stage_v_1_T ) & { 1{ main_stage_v_1 != 1'b1 }} ;
  assign main_stage_v_1_R4 = ( or_tmp_24_R | or_tmp_24_C & nor_20_cse_T ) & { 1{ nor_20_cse != 1'b1 }} ;
  assign or_tmp_28 = _093_ | _146_;
  assign or_tmp_28_S = 0 ;
  logic [0:0] _093__C0 ;
  logic [0:0] _093__R0 ;
  logic [0:0] _093__X0 ;
  logic [0:0] _146__C0 ;
  logic [0:0] _146__R0 ;
  logic [0:0] _146__X0 ;
  assign or_tmp_28_T = _093__T | _146__T ;
  assign _093__C0 = or_tmp_28_C ;
  assign _093__X0 = or_tmp_28_X ;
  assign _146__C0 = or_tmp_28_C ;
  assign _146__X0 = or_tmp_28_X ;
  assign _093__R0 = ( or_tmp_28_R | or_tmp_28_C & _146__T ) & { 1{ _146_ != 1'b1 }} ;
  assign _146__R0 = ( or_tmp_28_R | or_tmp_28_C & _093__T ) & { 1{ _093_ != 1'b1 }} ;
  assign _219_ = nor_20_cse | or_tmp_28;
  assign _219__S = 0 ;
  logic [0:0] nor_20_cse_C2 ;
  logic [0:0] nor_20_cse_R2 ;
  logic [0:0] nor_20_cse_X2 ;
  logic [0:0] or_tmp_28_C1 ;
  logic [0:0] or_tmp_28_R1 ;
  logic [0:0] or_tmp_28_X1 ;
  assign _219__T = nor_20_cse_T | or_tmp_28_T ;
  assign nor_20_cse_C2 = _219__C ;
  assign nor_20_cse_X2 = _219__X ;
  assign or_tmp_28_C1 = _219__C ;
  assign or_tmp_28_X1 = _219__X ;
  assign nor_20_cse_R2 = ( _219__R | _219__C & or_tmp_28_T ) & { 1{ or_tmp_28 != 1'b1 }} ;
  assign or_tmp_28_R1 = ( _219__R | _219__C & nor_20_cse_T ) & { 1{ nor_20_cse != 1'b1 }} ;
  assign _220_ = and_77_cse | IsNaN_8U_23U_land_lpi_1_dfm_2;
  assign _220__S = 0 ;
  logic [0:0] and_77_cse_C1 ;
  logic [0:0] and_77_cse_R1 ;
  logic [0:0] and_77_cse_X1 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_2_C3 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_2_R3 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_2_X3 ;
  assign _220__T = and_77_cse_T | IsNaN_8U_23U_land_lpi_1_dfm_2_T ;
  assign and_77_cse_C1 = _220__C ;
  assign and_77_cse_X1 = _220__X ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_2_C3 = _220__C ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_2_X3 = _220__X ;
  assign and_77_cse_R1 = ( _220__R | _220__C & IsNaN_8U_23U_land_lpi_1_dfm_2_T ) & { 1{ IsNaN_8U_23U_land_lpi_1_dfm_2 != 1'b1 }} ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_2_R3 = ( _220__R | _220__C & and_77_cse_T ) & { 1{ and_77_cse != 1'b1 }} ;
  assign _221_ = _220_ | _133_;
  assign _221__S = 0 ;
  logic [0:0] _220__C0 ;
  logic [0:0] _220__R0 ;
  logic [0:0] _220__X0 ;
  logic [0:0] _133__C4 ;
  logic [0:0] _133__R4 ;
  logic [0:0] _133__X4 ;
  assign _221__T = _220__T | _133__T ;
  assign _220__C0 = _221__C ;
  assign _220__X0 = _221__X ;
  assign _133__C4 = _221__C ;
  assign _133__X4 = _221__X ;
  assign _220__R0 = ( _221__R | _221__C & _133__T ) & { 1{ _133_ != 1'b1 }} ;
  assign _133__R4 = ( _221__R | _221__C & _220__T ) & { 1{ _220_ != 1'b1 }} ;
  assign _222_ = _002_ | IsNaN_8U_23U_nor_itm_2;
  assign _222__S = 0 ;
  logic [0:0] _002__C4 ;
  logic [0:0] _002__R4 ;
  logic [0:0] _002__X4 ;
  logic [0:0] IsNaN_8U_23U_nor_itm_2_C1 ;
  logic [0:0] IsNaN_8U_23U_nor_itm_2_R1 ;
  logic [0:0] IsNaN_8U_23U_nor_itm_2_X1 ;
  assign _222__T = _002__T | IsNaN_8U_23U_nor_itm_2_T ;
  assign _002__C4 = _222__C ;
  assign _002__X4 = _222__X ;
  assign IsNaN_8U_23U_nor_itm_2_C1 = _222__C ;
  assign IsNaN_8U_23U_nor_itm_2_X1 = _222__X ;
  assign _002__R4 = ( _222__R | _222__C & IsNaN_8U_23U_nor_itm_2_T ) & { 1{ IsNaN_8U_23U_nor_itm_2 != 1'b1 }} ;
  assign IsNaN_8U_23U_nor_itm_2_R1 = ( _222__R | _222__C & _002__T ) & { 1{ _002_ != 1'b1 }} ;
  assign or_34_nl = _222_ | IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2;
  assign or_34_nl_S = 0 ;
  logic [0:0] _222__C0 ;
  logic [0:0] _222__R0 ;
  logic [0:0] _222__X0 ;
  logic [0:0] IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_C1 ;
  logic [0:0] IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_R1 ;
  logic [0:0] IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_X1 ;
  assign or_34_nl_T = _222__T | IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_T ;
  assign _222__C0 = or_34_nl_C ;
  assign _222__X0 = or_34_nl_X ;
  assign IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_C1 = or_34_nl_C ;
  assign IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_X1 = or_34_nl_X ;
  assign _222__R0 = ( or_34_nl_R | or_34_nl_C & IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_T ) & { 1{ IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2 != 1'b1 }} ;
  assign IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_R1 = ( or_34_nl_R | or_34_nl_C & _222__T ) & { 1{ _222_ != 1'b1 }} ;
  assign or_dcpl_11 = _172_ | _131_;
  assign or_dcpl_11_S = 0 ;
  logic [0:0] _172__C1 ;
  logic [0:0] _172__R1 ;
  logic [0:0] _172__X1 ;
  logic [0:0] _131__C2 ;
  logic [0:0] _131__R2 ;
  logic [0:0] _131__X2 ;
  assign or_dcpl_11_T = _172__T | _131__T ;
  assign _172__C1 = or_dcpl_11_C ;
  assign _172__X1 = or_dcpl_11_X ;
  assign _131__C2 = or_dcpl_11_C ;
  assign _131__X2 = or_dcpl_11_X ;
  assign _172__R1 = ( or_dcpl_11_R | or_dcpl_11_C & _131__T ) & { 1{ _131_ != 1'b1 }} ;
  assign _131__R2 = ( or_dcpl_11_R | or_dcpl_11_C & _172__T ) & { 1{ _172_ != 1'b1 }} ;
  assign chn_a_rsci_ld_core_psct_mx0c0 = main_stage_en_1 | fsm_output[0];
  assign chn_a_rsci_ld_core_psct_mx0c0_S = 0 ;
  assign { fsm_output_R2 [1:1] } = 0;
  assign { fsm_output_X2 [1:1] } = 0;
  assign { fsm_output_C2 [1:1] } = 0;
  logic [0:0] main_stage_en_1_C2 ;
  logic [0:0] main_stage_en_1_R2 ;
  logic [0:0] main_stage_en_1_X2 ;
  logic [1:0] fsm_output_C3 ;
  logic [1:0] fsm_output_R3 ;
  logic [1:0] fsm_output_X3 ;
  assign chn_a_rsci_ld_core_psct_mx0c0_T = main_stage_en_1_T | fsm_output_T [0] ;
  assign main_stage_en_1_C2 = chn_a_rsci_ld_core_psct_mx0c0_C ;
  assign main_stage_en_1_X2 = chn_a_rsci_ld_core_psct_mx0c0_X ;
  assign fsm_output_C3 [0] = chn_a_rsci_ld_core_psct_mx0c0_C ;
  assign fsm_output_X3 [0] = chn_a_rsci_ld_core_psct_mx0c0_X ;
  assign main_stage_en_1_R2 = ( chn_a_rsci_ld_core_psct_mx0c0_R | chn_a_rsci_ld_core_psct_mx0c0_C & fsm_output_T [0] ) & { 1{ fsm_output[0] != 1'b1 }} ;
  assign fsm_output_R3 [0] = ( chn_a_rsci_ld_core_psct_mx0c0_R | chn_a_rsci_ld_core_psct_mx0c0_C & main_stage_en_1_T ) & { 1{ main_stage_en_1 != 1'b1 }} ;
  assign _223_ = _102_ | IsNaN_8U_23U_land_lpi_1_dfm_2;
  assign _223__S = 0 ;
  logic [0:0] _102__C0 ;
  logic [0:0] _102__R0 ;
  logic [0:0] _102__X0 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_2_C4 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_2_R4 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_2_X4 ;
  assign _223__T = _102__T | IsNaN_8U_23U_land_lpi_1_dfm_2_T ;
  assign _102__C0 = _223__C ;
  assign _102__X0 = _223__X ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_2_C4 = _223__C ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_2_X4 = _223__X ;
  assign _102__R0 = ( _223__R | _223__C & IsNaN_8U_23U_land_lpi_1_dfm_2_T ) & { 1{ IsNaN_8U_23U_land_lpi_1_dfm_2 != 1'b1 }} ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_2_R4 = ( _223__R | _223__C & _102__T ) & { 1{ _102_ != 1'b1 }} ;
  assign _224_ = _103_ | chn_o_rsci_d_9_0_mx0c1;
  assign _224__S = 0 ;
  logic [0:0] _103__C0 ;
  logic [0:0] _103__R0 ;
  logic [0:0] _103__X0 ;
  logic [0:0] chn_o_rsci_d_9_0_mx0c1_C0 ;
  logic [0:0] chn_o_rsci_d_9_0_mx0c1_R0 ;
  logic [0:0] chn_o_rsci_d_9_0_mx0c1_X0 ;
  assign _224__T = _103__T | chn_o_rsci_d_9_0_mx0c1_T ;
  assign _103__C0 = _224__C ;
  assign _103__X0 = _224__X ;
  assign chn_o_rsci_d_9_0_mx0c1_C0 = _224__C ;
  assign chn_o_rsci_d_9_0_mx0c1_X0 = _224__X ;
  assign _103__R0 = ( _224__R | _224__C & chn_o_rsci_d_9_0_mx0c1_T ) & { 1{ chn_o_rsci_d_9_0_mx0c1 != 1'b1 }} ;
  assign chn_o_rsci_d_9_0_mx0c1_R0 = ( _224__R | _224__C & _103__T ) & { 1{ _103_ != 1'b1 }} ;
  assign _225_ = and_dcpl_15 | and_dcpl_17;
  assign _225__S = 0 ;
  logic [0:0] and_dcpl_15_C2 ;
  logic [0:0] and_dcpl_15_R2 ;
  logic [0:0] and_dcpl_15_X2 ;
  logic [0:0] and_dcpl_17_C1 ;
  logic [0:0] and_dcpl_17_R1 ;
  logic [0:0] and_dcpl_17_X1 ;
  assign _225__T = and_dcpl_15_T | and_dcpl_17_T ;
  assign and_dcpl_15_C2 = _225__C ;
  assign and_dcpl_15_X2 = _225__X ;
  assign and_dcpl_17_C1 = _225__C ;
  assign and_dcpl_17_X1 = _225__X ;
  assign and_dcpl_15_R2 = ( _225__R | _225__C & and_dcpl_17_T ) & { 1{ and_dcpl_17 != 1'b1 }} ;
  assign and_dcpl_17_R1 = ( _225__R | _225__C & and_dcpl_15_T ) & { 1{ and_dcpl_15 != 1'b1 }} ;
  assign _226_ = or_tmp_50 | main_stage_v_1_mx0c1;
  assign _226__S = 0 ;
  logic [0:0] or_tmp_50_C0 ;
  logic [0:0] or_tmp_50_R0 ;
  logic [0:0] or_tmp_50_X0 ;
  logic [0:0] main_stage_v_1_mx0c1_C1 ;
  logic [0:0] main_stage_v_1_mx0c1_R1 ;
  logic [0:0] main_stage_v_1_mx0c1_X1 ;
  assign _226__T = or_tmp_50_T | main_stage_v_1_mx0c1_T ;
  assign or_tmp_50_C0 = _226__C ;
  assign or_tmp_50_X0 = _226__X ;
  assign main_stage_v_1_mx0c1_C1 = _226__C ;
  assign main_stage_v_1_mx0c1_X1 = _226__X ;
  assign or_tmp_50_R0 = ( _226__R | _226__C & main_stage_v_1_mx0c1_T ) & { 1{ main_stage_v_1_mx0c1 != 1'b1 }} ;
  assign main_stage_v_1_mx0c1_R1 = ( _226__R | _226__C & or_tmp_50_T ) & { 1{ or_tmp_50 != 1'b1 }} ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs <= 1'b0;
    else
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs <= _022_;
  logic [0:0] _022__X0 ;
  logic [0:0] _022__R0 ;
  logic [0:0] _022__C0 ;
  assign _022__X0 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_S != _022__S }} ;
  assign _022__R0 = 0 ;
  assign _022__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_T 		<= !nvdla_core_rstn ? 0 : ( _022__T & _022__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_t_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_t_flag ? 1 : | _022__T & ( | _022__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_r_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_r_flag ? 1 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_t_flag ? 0 : ( | FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMantRNE_24U_11U_else_and_svs <= 1'b0;
    else
      FpMantRNE_24U_11U_else_and_svs <= _007_;
  logic [0:0] _007__X0 ;
  logic [0:0] _007__R0 ;
  logic [0:0] _007__C0 ;
  assign _007__X0 = { 1{ FpMantRNE_24U_11U_else_and_svs_S != _007__S }} ;
  assign _007__R0 = 0 ;
  assign _007__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMantRNE_24U_11U_else_and_svs_T 		<= !nvdla_core_rstn ? 0 : ( _007__T & _007__X0 );
  always @( posedge nvdla_core_clk )
      FpMantRNE_24U_11U_else_and_svs_t_flag 	<= !nvdla_core_rstn ? 0 : FpMantRNE_24U_11U_else_and_svs_t_flag ? 1 : | _007__T & ( | _007__X0 );
  always @( posedge nvdla_core_clk )
      FpMantRNE_24U_11U_else_and_svs_r_flag 	<= !nvdla_core_rstn ? 0 : FpMantRNE_24U_11U_else_and_svs_r_flag ? 1 : FpMantRNE_24U_11U_else_and_svs_t_flag ? 0 : ( | FpMantRNE_24U_11U_else_and_svs_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMantRNE_24U_11U_else_and_svs_2 <= 1'b0;
    else
      FpMantRNE_24U_11U_else_and_svs_2 <= _008_;
  logic [0:0] _008__X0 ;
  logic [0:0] _008__R0 ;
  logic [0:0] _008__C0 ;
  assign _008__X0 = { 1{ FpMantRNE_24U_11U_else_and_svs_2_S != _008__S }} ;
  assign _008__R0 = 0 ;
  assign _008__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMantRNE_24U_11U_else_and_svs_2_T 		<= !nvdla_core_rstn ? 0 : ( _008__T & _008__X0 );
  always @( posedge nvdla_core_clk )
      FpMantRNE_24U_11U_else_and_svs_2_t_flag 	<= !nvdla_core_rstn ? 0 : FpMantRNE_24U_11U_else_and_svs_2_t_flag ? 1 : | _008__T & ( | _008__X0 );
  always @( posedge nvdla_core_clk )
      FpMantRNE_24U_11U_else_and_svs_2_r_flag 	<= !nvdla_core_rstn ? 0 : FpMantRNE_24U_11U_else_and_svs_2_r_flag ? 1 : FpMantRNE_24U_11U_else_and_svs_2_t_flag ? 0 : ( | FpMantRNE_24U_11U_else_and_svs_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMantRNE_24U_11U_else_carry_sva_2 <= 1'b0;
    else
      FpMantRNE_24U_11U_else_carry_sva_2 <= _010_;
  logic [0:0] _010__X0 ;
  logic [0:0] _010__R0 ;
  logic [0:0] _010__C0 ;
  assign _010__X0 = { 1{ FpMantRNE_24U_11U_else_carry_sva_2_S != _010__S }} ;
  assign _010__R0 = 0 ;
  assign _010__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMantRNE_24U_11U_else_carry_sva_2_T 		<= !nvdla_core_rstn ? 0 : ( _010__T & _010__X0 );
  always @( posedge nvdla_core_clk )
      FpMantRNE_24U_11U_else_carry_sva_2_t_flag 	<= !nvdla_core_rstn ? 0 : FpMantRNE_24U_11U_else_carry_sva_2_t_flag ? 1 : | _010__T & ( | _010__X0 );
  always @( posedge nvdla_core_clk )
      FpMantRNE_24U_11U_else_carry_sva_2_r_flag 	<= !nvdla_core_rstn ? 0 : FpMantRNE_24U_11U_else_carry_sva_2_r_flag ? 1 : FpMantRNE_24U_11U_else_carry_sva_2_t_flag ? 0 : ( | FpMantRNE_24U_11U_else_carry_sva_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3 <= 1'b0;
    else
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3 <= _023_;
  logic [0:0] _023__X0 ;
  logic [0:0] _023__R0 ;
  logic [0:0] _023__C0 ;
  assign _023__X0 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_S != _023__S }} ;
  assign _023__R0 = 0 ;
  assign _023__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_T 		<= !nvdla_core_rstn ? 0 : ( _023__T & _023__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_t_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_t_flag ? 1 : | _023__T & ( | _023__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_r_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_r_flag ? 1 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_t_flag ? 0 : ( | FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1 <= 5'b00000;
    else
      FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1 <= _011_;
  logic [4:0] _011__X0 ;
  logic [4:0] _011__R0 ;
  logic [4:0] _011__C0 ;
  assign _011__X0 = { 5{ FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_S != _011__S }} ;
  assign _011__R0 = 0 ;
  assign _011__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_T 		<= !nvdla_core_rstn ? 0 : ( _011__T & _011__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_t_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_t_flag ? 1 : | _011__T & ( | _011__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_r_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_r_flag ? 1 : FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_t_flag ? 0 : ( | FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1 <= 10'b0000000000;
    else
      FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1 <= _016_;
  logic [9:0] _016__X0 ;
  logic [9:0] _016__R0 ;
  logic [9:0] _016__C0 ;
  assign _016__X0 = { 10{ FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_S != _016__S }} ;
  assign _016__R0 = 0 ;
  assign _016__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_T 		<= !nvdla_core_rstn ? 0 : ( _016__T & _016__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_t_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_t_flag ? 1 : | _016__T & ( | _016__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_r_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_r_flag ? 1 : FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_t_flag ? 0 : ( | FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5 <= 1'b0;
    else
      FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5 <= _029_;
  logic [0:0] _029__X0 ;
  logic [0:0] _029__R0 ;
  logic [0:0] _029__C0 ;
  assign _029__X0 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_S != _029__S }} ;
  assign _029__R0 = 0 ;
  assign _029__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_T 		<= !nvdla_core_rstn ? 0 : ( _029__T & _029__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_t_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_t_flag ? 1 : | _029__T & ( | _029__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_r_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_r_flag ? 1 : FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_t_flag ? 0 : ( | FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      IsNaN_8U_23U_land_lpi_1_dfm_2 <= 1'b0;
    else
      IsNaN_8U_23U_land_lpi_1_dfm_2 <= _031_;
  logic [0:0] _031__X0 ;
  logic [0:0] _031__R0 ;
  logic [0:0] _031__C0 ;
  assign _031__X0 = { 1{ IsNaN_8U_23U_land_lpi_1_dfm_2_S != _031__S }} ;
  assign _031__R0 = 0 ;
  assign _031__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_land_lpi_1_dfm_2_T 		<= !nvdla_core_rstn ? 0 : ( _031__T & _031__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_land_lpi_1_dfm_2_t_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_8U_23U_land_lpi_1_dfm_2_t_flag ? 1 : | _031__T & ( | _031__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_land_lpi_1_dfm_2_r_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_8U_23U_land_lpi_1_dfm_2_r_flag ? 1 : IsNaN_8U_23U_land_lpi_1_dfm_2_t_flag ? 0 : ( | IsNaN_8U_23U_land_lpi_1_dfm_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4 <= 1'b0;
    else
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4 <= _019_;
  logic [0:0] _019__X0 ;
  logic [0:0] _019__R0 ;
  logic [0:0] _019__C0 ;
  assign _019__X0 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_S != _019__S }} ;
  assign _019__R0 = 0 ;
  assign _019__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_T 		<= !nvdla_core_rstn ? 0 : ( _019__T & _019__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_t_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_t_flag ? 1 : | _019__T & ( | _019__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_r_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_r_flag ? 1 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_t_flag ? 0 : ( | FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4 <= 1'b0;
    else
      FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4 <= _027_;
  logic [0:0] _027__X0 ;
  logic [0:0] _027__R0 ;
  logic [0:0] _027__C0 ;
  assign _027__X0 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_S != _027__S }} ;
  assign _027__R0 = 0 ;
  assign _027__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_T 		<= !nvdla_core_rstn ? 0 : ( _027__T & _027__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_t_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_t_flag ? 1 : | _027__T & ( | _027__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_r_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_r_flag ? 1 : FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_t_flag ? 0 : ( | FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4 <= 1'b0;
    else
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4 <= _024_;
  logic [0:0] _024__X0 ;
  logic [0:0] _024__R0 ;
  logic [0:0] _024__C0 ;
  assign _024__X0 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_S != _024__S }} ;
  assign _024__R0 = 0 ;
  assign _024__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_T 		<= !nvdla_core_rstn ? 0 : ( _024__T & _024__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_t_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_t_flag ? 1 : | _024__T & ( | _024__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_r_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_r_flag ? 1 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_t_flag ? 0 : ( | FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1 <= 1'b0;
    else
      FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1 <= _015_;
  logic [0:0] _015__X0 ;
  logic [0:0] _015__R0 ;
  logic [0:0] _015__C0 ;
  assign _015__X0 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_S != _015__S }} ;
  assign _015__R0 = 0 ;
  assign _015__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_T 		<= !nvdla_core_rstn ? 0 : ( _015__T & _015__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_t_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_t_flag ? 1 : | _015__T & ( | _015__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_r_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_r_flag ? 1 : FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_t_flag ? 0 : ( | FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1 <= 1'b0;
    else
      FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1 <= _012_;
  logic [0:0] _012__X0 ;
  logic [0:0] _012__R0 ;
  logic [0:0] _012__C0 ;
  assign _012__X0 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_S != _012__S }} ;
  assign _012__R0 = 0 ;
  assign _012__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_T 		<= !nvdla_core_rstn ? 0 : ( _012__T & _012__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_t_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_t_flag ? 1 : | _012__T & ( | _012__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_r_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_r_flag ? 1 : FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_t_flag ? 0 : ( | FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4 <= 1'b0;
    else
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4 <= _026_;
  logic [0:0] _026__X0 ;
  logic [0:0] _026__R0 ;
  logic [0:0] _026__C0 ;
  assign _026__X0 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_S != _026__S }} ;
  assign _026__R0 = 0 ;
  assign _026__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_T 		<= !nvdla_core_rstn ? 0 : ( _026__T & _026__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_t_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_t_flag ? 1 : | _026__T & ( | _026__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_r_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_r_flag ? 1 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_t_flag ? 0 : ( | FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4 <= 1'b0;
    else
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4 <= _021_;
  logic [0:0] _021__X0 ;
  logic [0:0] _021__R0 ;
  logic [0:0] _021__C0 ;
  assign _021__X0 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_S != _021__S }} ;
  assign _021__R0 = 0 ;
  assign _021__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_T 		<= !nvdla_core_rstn ? 0 : ( _021__T & _021__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_t_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_t_flag ? 1 : | _021__T & ( | _021__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_r_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_r_flag ? 1 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_t_flag ? 0 : ( | FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2 <= 11'b00000000000;
    else
      FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2 <= _006_;
  logic [10:0] _006__X0 ;
  logic [10:0] _006__R0 ;
  logic [10:0] _006__C0 ;
  assign _006__X0 = { 11{ FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_S != _006__S }} ;
  assign _006__R0 = 0 ;
  assign _006__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_T 		<= !nvdla_core_rstn ? 0 : ( _006__T & _006__X0 );
  always @( posedge nvdla_core_clk )
      FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_t_flag 	<= !nvdla_core_rstn ? 0 : FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_t_flag ? 1 : | _006__T & ( | _006__X0 );
  always @( posedge nvdla_core_clk )
      FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_r_flag 	<= !nvdla_core_rstn ? 0 : FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_r_flag ? 1 : FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_t_flag ? 0 : ( | FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2 <= 1'b0;
    else
      FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2 <= _005_;
  logic [0:0] _005__X0 ;
  logic [0:0] _005__R0 ;
  logic [0:0] _005__C0 ;
  assign _005__X0 = { 1{ FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_S != _005__S }} ;
  assign _005__R0 = 0 ;
  assign _005__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_T 		<= !nvdla_core_rstn ? 0 : ( _005__T & _005__X0 );
  always @( posedge nvdla_core_clk )
      FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_t_flag 	<= !nvdla_core_rstn ? 0 : FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_t_flag ? 1 : | _005__T & ( | _005__X0 );
  always @( posedge nvdla_core_clk )
      FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_r_flag 	<= !nvdla_core_rstn ? 0 : FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_r_flag ? 1 : FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_t_flag ? 0 : ( | FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      main_stage_v_2 <= 1'b0;
    else
      main_stage_v_2 <= _041_;
  logic [0:0] _041__X0 ;
  logic [0:0] _041__R0 ;
  logic [0:0] _041__C0 ;
  assign _041__X0 = { 1{ main_stage_v_2_S != _041__S }} ;
  assign _041__R0 = 0 ;
  assign _041__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      main_stage_v_2_T 		<= !nvdla_core_rstn ? 0 : ( _041__T & _041__X0 );
  always @( posedge nvdla_core_clk )
      main_stage_v_2_t_flag 	<= !nvdla_core_rstn ? 0 : main_stage_v_2_t_flag ? 1 : | _041__T & ( | _041__X0 );
  always @( posedge nvdla_core_clk )
      main_stage_v_2_r_flag 	<= !nvdla_core_rstn ? 0 : main_stage_v_2_r_flag ? 1 : main_stage_v_2_t_flag ? 0 : ( | main_stage_v_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      IsNaN_8U_23U_nor_itm_2 <= 1'b0;
    else
      IsNaN_8U_23U_nor_itm_2 <= _032_;
  logic [0:0] _032__X0 ;
  logic [0:0] _032__R0 ;
  logic [0:0] _032__C0 ;
  assign _032__X0 = { 1{ IsNaN_8U_23U_nor_itm_2_S != _032__S }} ;
  assign _032__R0 = 0 ;
  assign _032__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_nor_itm_2_T 		<= !nvdla_core_rstn ? 0 : ( _032__T & _032__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_nor_itm_2_t_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_8U_23U_nor_itm_2_t_flag ? 1 : | _032__T & ( | _032__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_nor_itm_2_r_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_8U_23U_nor_itm_2_r_flag ? 1 : IsNaN_8U_23U_nor_itm_2_t_flag ? 0 : ( | IsNaN_8U_23U_nor_itm_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2 <= 1'b0;
    else
      IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2 <= _030_;
  logic [0:0] _030__X0 ;
  logic [0:0] _030__R0 ;
  logic [0:0] _030__C0 ;
  assign _030__X0 = { 1{ IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_S != _030__S }} ;
  assign _030__R0 = 0 ;
  assign _030__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_T 		<= !nvdla_core_rstn ? 0 : ( _030__T & _030__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_t_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_t_flag ? 1 : | _030__T & ( | _030__X0 );
  always @( posedge nvdla_core_clk )
      IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_r_flag 	<= !nvdla_core_rstn ? 0 : IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_r_flag ? 1 : IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_t_flag ? 0 : ( | IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3 <= 1'b0;
    else
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3 <= _018_;
  logic [0:0] _018__X0 ;
  logic [0:0] _018__R0 ;
  logic [0:0] _018__C0 ;
  assign _018__X0 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_S != _018__S }} ;
  assign _018__R0 = 0 ;
  assign _018__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_T 		<= !nvdla_core_rstn ? 0 : ( _018__T & _018__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_t_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_t_flag ? 1 : | _018__T & ( | _018__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_r_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_r_flag ? 1 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_t_flag ? 0 : ( | FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3 <= 1'b0;
    else
      FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3 <= _028_;
  logic [0:0] _028__X0 ;
  logic [0:0] _028__R0 ;
  logic [0:0] _028__C0 ;
  assign _028__X0 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_S != _028__S }} ;
  assign _028__R0 = 0 ;
  assign _028__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_T 		<= !nvdla_core_rstn ? 0 : ( _028__T & _028__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_t_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_t_flag ? 1 : | _028__T & ( | _028__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_r_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_r_flag ? 1 : FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_t_flag ? 0 : ( | FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1 <= 1'b0;
    else
      FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1 <= _014_;
  logic [0:0] _014__X0 ;
  logic [0:0] _014__R0 ;
  logic [0:0] _014__C0 ;
  assign _014__X0 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_S != _014__S }} ;
  assign _014__R0 = 0 ;
  assign _014__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_T 		<= !nvdla_core_rstn ? 0 : ( _014__T & _014__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_t_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_t_flag ? 1 : | _014__T & ( | _014__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_r_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_r_flag ? 1 : FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_t_flag ? 0 : ( | FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3 <= 1'b0;
    else
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3 <= _025_;
  logic [0:0] _025__X0 ;
  logic [0:0] _025__R0 ;
  logic [0:0] _025__C0 ;
  assign _025__X0 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_S != _025__S }} ;
  assign _025__R0 = 0 ;
  assign _025__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_T 		<= !nvdla_core_rstn ? 0 : ( _025__T & _025__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_t_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_t_flag ? 1 : | _025__T & ( | _025__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_r_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_r_flag ? 1 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_t_flag ? 0 : ( | FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3 <= 1'b0;
    else
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3 <= _020_;
  logic [0:0] _020__X0 ;
  logic [0:0] _020__R0 ;
  logic [0:0] _020__C0 ;
  assign _020__X0 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_S != _020__S }} ;
  assign _020__R0 = 0 ;
  assign _020__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_T 		<= !nvdla_core_rstn ? 0 : ( _020__T & _020__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_t_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_t_flag ? 1 : | _020__T & ( | _020__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_r_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_r_flag ? 1 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_t_flag ? 0 : ( | FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpMantRNE_24U_11U_else_and_svs_st_2 <= 1'b0;
    else
      FpMantRNE_24U_11U_else_and_svs_st_2 <= _009_;
  logic [0:0] _009__X0 ;
  logic [0:0] _009__R0 ;
  logic [0:0] _009__C0 ;
  assign _009__X0 = { 1{ FpMantRNE_24U_11U_else_and_svs_st_2_S != _009__S }} ;
  assign _009__R0 = 0 ;
  assign _009__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpMantRNE_24U_11U_else_and_svs_st_2_T 		<= !nvdla_core_rstn ? 0 : ( _009__T & _009__X0 );
  always @( posedge nvdla_core_clk )
      FpMantRNE_24U_11U_else_and_svs_st_2_t_flag 	<= !nvdla_core_rstn ? 0 : FpMantRNE_24U_11U_else_and_svs_st_2_t_flag ? 1 : | _009__T & ( | _009__X0 );
  always @( posedge nvdla_core_clk )
      FpMantRNE_24U_11U_else_and_svs_st_2_r_flag 	<= !nvdla_core_rstn ? 0 : FpMantRNE_24U_11U_else_and_svs_st_2_r_flag ? 1 : FpMantRNE_24U_11U_else_and_svs_st_2_t_flag ? 0 : ( | FpMantRNE_24U_11U_else_and_svs_st_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1 <= 29'b00000000000000000000000000000;
    else
      FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1 <= _013_;
  logic [28:0] _013__X0 ;
  logic [28:0] _013__R0 ;
  logic [28:0] _013__C0 ;
  assign _013__X0 = { 29{ FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_S != _013__S }} ;
  assign _013__R0 = 0 ;
  assign _013__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_T 		<= !nvdla_core_rstn ? 0 : ( _013__T & _013__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_t_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_t_flag ? 1 : | _013__T & ( | _013__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_r_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_r_flag ? 1 : FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_t_flag ? 0 : ( | FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2 <= 3'b000;
    else
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2 <= _017_;
  logic [2:0] _017__X0 ;
  logic [2:0] _017__R0 ;
  logic [2:0] _017__C0 ;
  assign _017__X0 = { 3{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_S != _017__S }} ;
  assign _017__R0 = 0 ;
  assign _017__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_T 		<= !nvdla_core_rstn ? 0 : ( _017__T & _017__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_t_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_t_flag ? 1 : | _017__T & ( | _017__X0 );
  always @( posedge nvdla_core_clk )
      FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_r_flag 	<= !nvdla_core_rstn ? 0 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_r_flag ? 1 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_t_flag ? 0 : ( | FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      main_stage_v_1 <= 1'b0;
    else
      main_stage_v_1 <= _040_;
  logic [0:0] _040__X0 ;
  logic [0:0] _040__R0 ;
  logic [0:0] _040__C0 ;
  assign _040__X0 = { 1{ main_stage_v_1_S != _040__S }} ;
  assign _040__R0 = 0 ;
  assign _040__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      main_stage_v_1_T 		<= !nvdla_core_rstn ? 0 : ( _040__T & _040__X0 );
  always @( posedge nvdla_core_clk )
      main_stage_v_1_t_flag 	<= !nvdla_core_rstn ? 0 : main_stage_v_1_t_flag ? 1 : | _040__T & ( | _040__X0 );
  always @( posedge nvdla_core_clk )
      main_stage_v_1_r_flag 	<= !nvdla_core_rstn ? 0 : main_stage_v_1_r_flag ? 1 : main_stage_v_1_t_flag ? 0 : ( | main_stage_v_1_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      reg_chn_o_rsci_ld_core_psct_cse <= 1'b0;
    else
      reg_chn_o_rsci_ld_core_psct_cse <= _042_;
  logic [0:0] _042__X0 ;
  logic [0:0] _042__R0 ;
  logic [0:0] _042__C0 ;
  assign _042__X0 = { 1{ reg_chn_o_rsci_ld_core_psct_cse_S != _042__S }} ;
  assign _042__R0 = 0 ;
  assign _042__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      reg_chn_o_rsci_ld_core_psct_cse_T 		<= !nvdla_core_rstn ? 0 : ( _042__T & _042__X0 );
  always @( posedge nvdla_core_clk )
      reg_chn_o_rsci_ld_core_psct_cse_t_flag 	<= !nvdla_core_rstn ? 0 : reg_chn_o_rsci_ld_core_psct_cse_t_flag ? 1 : | _042__T & ( | _042__X0 );
  always @( posedge nvdla_core_clk )
      reg_chn_o_rsci_ld_core_psct_cse_r_flag 	<= !nvdla_core_rstn ? 0 : reg_chn_o_rsci_ld_core_psct_cse_r_flag ? 1 : reg_chn_o_rsci_ld_core_psct_cse_t_flag ? 0 : ( | reg_chn_o_rsci_ld_core_psct_cse_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_o_rsci_d_9_0 <= 10'b0000000000;
    else
      chn_o_rsci_d_9_0 <= _038_;
  logic [9:0] _038__X0 ;
  logic [9:0] _038__R0 ;
  logic [9:0] _038__C0 ;
  assign _038__X0 = { 10{ chn_o_rsci_d_9_0_S != _038__S }} ;
  assign _038__R0 = 0 ;
  assign _038__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_9_0_T 		<= !nvdla_core_rstn ? 0 : ( _038__T & _038__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_9_0_t_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_9_0_t_flag ? 1 : | _038__T & ( | _038__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_9_0_r_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_9_0_r_flag ? 1 : chn_o_rsci_d_9_0_t_flag ? 0 : ( | chn_o_rsci_d_9_0_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_o_rsci_d_16 <= 1'b0;
    else
      chn_o_rsci_d_16 <= _037_;
  logic [0:0] _037__X0 ;
  logic [0:0] _037__R0 ;
  logic [0:0] _037__C0 ;
  assign _037__X0 = { 1{ chn_o_rsci_d_16_S != _037__S }} ;
  assign _037__R0 = 0 ;
  assign _037__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_16_T 		<= !nvdla_core_rstn ? 0 : ( _037__T & _037__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_16_t_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_16_t_flag ? 1 : | _037__T & ( | _037__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_16_r_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_16_r_flag ? 1 : chn_o_rsci_d_16_t_flag ? 0 : ( | chn_o_rsci_d_16_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_o_rsci_d_15 <= 1'b0;
    else
      chn_o_rsci_d_15 <= _036_;
  logic [0:0] _036__X0 ;
  logic [0:0] _036__R0 ;
  logic [0:0] _036__C0 ;
  assign _036__X0 = { 1{ chn_o_rsci_d_15_S != _036__S }} ;
  assign _036__R0 = 0 ;
  assign _036__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_15_T 		<= !nvdla_core_rstn ? 0 : ( _036__T & _036__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_15_t_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_15_t_flag ? 1 : | _036__T & ( | _036__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_15_r_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_15_r_flag ? 1 : chn_o_rsci_d_15_t_flag ? 0 : ( | chn_o_rsci_d_15_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_o_rsci_d_14_10 <= 5'b00000;
    else
      chn_o_rsci_d_14_10 <= _035_;
  logic [4:0] _035__X0 ;
  logic [4:0] _035__R0 ;
  logic [4:0] _035__C0 ;
  assign _035__X0 = { 5{ chn_o_rsci_d_14_10_S != _035__S }} ;
  assign _035__R0 = 0 ;
  assign _035__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_14_10_T 		<= !nvdla_core_rstn ? 0 : ( _035__T & _035__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_14_10_t_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_14_10_t_flag ? 1 : | _035__T & ( | _035__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_d_14_10_r_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_d_14_10_r_flag ? 1 : chn_o_rsci_d_14_10_t_flag ? 0 : ( | chn_o_rsci_d_14_10_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_a_rsci_ld_core_psct <= 1'b0;
    else
      chn_a_rsci_ld_core_psct <= _034_;
  logic [0:0] _034__X0 ;
  logic [0:0] _034__R0 ;
  logic [0:0] _034__C0 ;
  assign _034__X0 = { 1{ chn_a_rsci_ld_core_psct_S != _034__S }} ;
  assign _034__R0 = 0 ;
  assign _034__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_a_rsci_ld_core_psct_T 		<= !nvdla_core_rstn ? 0 : ( _034__T & _034__X0 );
  always @( posedge nvdla_core_clk )
      chn_a_rsci_ld_core_psct_t_flag 	<= !nvdla_core_rstn ? 0 : chn_a_rsci_ld_core_psct_t_flag ? 1 : | _034__T & ( | _034__X0 );
  always @( posedge nvdla_core_clk )
      chn_a_rsci_ld_core_psct_r_flag 	<= !nvdla_core_rstn ? 0 : chn_a_rsci_ld_core_psct_r_flag ? 1 : chn_a_rsci_ld_core_psct_t_flag ? 0 : ( | chn_a_rsci_ld_core_psct_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_o_rsci_iswt0 <= 1'b0;
    else
      chn_o_rsci_iswt0 <= _039_;
  logic [0:0] _039__X0 ;
  logic [0:0] _039__R0 ;
  logic [0:0] _039__C0 ;
  assign _039__X0 = { 1{ chn_o_rsci_iswt0_S != _039__S }} ;
  assign _039__R0 = 0 ;
  assign _039__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_o_rsci_iswt0_T 		<= !nvdla_core_rstn ? 0 : ( _039__T & _039__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_iswt0_t_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_iswt0_t_flag ? 1 : | _039__T & ( | _039__X0 );
  always @( posedge nvdla_core_clk )
      chn_o_rsci_iswt0_r_flag 	<= !nvdla_core_rstn ? 0 : chn_o_rsci_iswt0_r_flag ? 1 : chn_o_rsci_iswt0_t_flag ? 0 : ( | chn_o_rsci_iswt0_R ) ;
  always @(posedge nvdla_core_clk or negedge nvdla_core_rstn)
    if (!nvdla_core_rstn)
      chn_a_rsci_iswt0 <= 1'b0;
    else
      chn_a_rsci_iswt0 <= _033_;
  logic [0:0] _033__X0 ;
  logic [0:0] _033__R0 ;
  logic [0:0] _033__C0 ;
  assign _033__X0 = { 1{ chn_a_rsci_iswt0_S != _033__S }} ;
  assign _033__R0 = 0 ;
  assign _033__C0 = 0 ;
  always @( posedge nvdla_core_clk )
      chn_a_rsci_iswt0_T 		<= !nvdla_core_rstn ? 0 : ( _033__T & _033__X0 );
  always @( posedge nvdla_core_clk )
      chn_a_rsci_iswt0_t_flag 	<= !nvdla_core_rstn ? 0 : chn_a_rsci_iswt0_t_flag ? 1 : | _033__T & ( | _033__X0 );
  always @( posedge nvdla_core_clk )
      chn_a_rsci_iswt0_r_flag 	<= !nvdla_core_rstn ? 0 : chn_a_rsci_iswt0_r_flag ? 1 : chn_a_rsci_iswt0_t_flag ? 0 : ( | chn_a_rsci_iswt0_R ) ;
  assign mux_20_nl = or_9_cse ? nor_17_nl : and_86_nl;
  logic [0:0] or_9_cse_C14 ;
  logic [0:0] or_9_cse_R14 ;
  logic [0:0] or_9_cse_X14 ;
  assign or_9_cse_C14 = | mux_20_nl_C ;
  assign or_9_cse_X14 = | mux_20_nl_X ;
  assign mux_20_nl_T = or_9_cse ? ( { 1{ or_9_cse_T  }} | nor_17_nl_T ) : ( { 1{ or_9_cse_T  }} | and_86_nl_T );
  assign mux_20_nl_S = or_9_cse ? nor_17_nl_S : and_86_nl_S ;
  assign or_9_cse_R14 = ( | (mux_20_nl_R | ( mux_20_nl_C & ( { 1{ or_9_cse }} & nor_17_nl_T | { 1{ !or_9_cse }} & and_86_nl_T )))) && nor_17_nl != and_86_nl ;
  logic [0:0] nor_17_nl_C0 ;
  logic [0:0] nor_17_nl_R0 ;
  logic [0:0] nor_17_nl_X0 ;
  assign nor_17_nl_C0 = { 1{ or_9_cse }} ;
  assign nor_17_nl_R0 = { 1{ or_9_cse }} & ( mux_20_nl_R | ( { 1{ or_9_cse_T  }} & mux_20_nl_C ));
  assign nor_17_nl_X0 = { 1{ or_9_cse }} & mux_20_nl_X ;
  logic [0:0] and_86_nl_C0 ;
  logic [0:0] and_86_nl_R0 ;
  logic [0:0] and_86_nl_X0 ;
  assign and_86_nl_C0 = { 1{ !or_9_cse }} ;
  assign and_86_nl_R0 = { 1{ !or_9_cse }} & ( mux_20_nl_R | ( { 1{ or_9_cse_T  }} & mux_20_nl_C ));
  assign and_86_nl_X0 = { 1{ !or_9_cse }} & mux_20_nl_X ;
  assign mux_19_nl = and_76_nl ? nand_5_nl : nor_19_nl;
  logic [0:0] and_76_nl_C0 ;
  logic [0:0] and_76_nl_R0 ;
  logic [0:0] and_76_nl_X0 ;
  assign and_76_nl_C0 = | mux_19_nl_C ;
  assign and_76_nl_X0 = | mux_19_nl_X ;
  assign mux_19_nl_T = and_76_nl ? ( { 1{ and_76_nl_T  }} | nand_5_nl_T ) : ( { 1{ and_76_nl_T  }} | nor_19_nl_T );
  assign mux_19_nl_S = and_76_nl ? nand_5_nl_S : nor_19_nl_S ;
  assign and_76_nl_R0 = ( | (mux_19_nl_R | ( mux_19_nl_C & ( { 1{ and_76_nl }} & nand_5_nl_T | { 1{ !and_76_nl }} & nor_19_nl_T )))) && nand_5_nl != nor_19_nl ;
  logic [0:0] nand_5_nl_C0 ;
  logic [0:0] nand_5_nl_R0 ;
  logic [0:0] nand_5_nl_X0 ;
  assign nand_5_nl_C0 = { 1{ and_76_nl }} ;
  assign nand_5_nl_R0 = { 1{ and_76_nl }} & ( mux_19_nl_R | ( { 1{ and_76_nl_T  }} & mux_19_nl_C ));
  assign nand_5_nl_X0 = { 1{ and_76_nl }} & mux_19_nl_X ;
  logic [0:0] nor_19_nl_C0 ;
  logic [0:0] nor_19_nl_R0 ;
  logic [0:0] nor_19_nl_X0 ;
  assign nor_19_nl_C0 = { 1{ !and_76_nl }} ;
  assign nor_19_nl_R0 = { 1{ !and_76_nl }} & ( mux_19_nl_R | ( { 1{ and_76_nl_T  }} & mux_19_nl_C ));
  assign nor_19_nl_X0 = { 1{ !and_76_nl }} & mux_19_nl_X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_else_mux_2_nl = FpMantRNE_24U_11U_else_and_svs_2 ? FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3[5] : _001_;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_2_C4 ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_2_R4 ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_2_X4 ;
  assign FpMantRNE_24U_11U_else_and_svs_2_C4 = | FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_else_mux_2_nl_C ;
  assign FpMantRNE_24U_11U_else_and_svs_2_X4 = | FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_else_mux_2_nl_X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_else_mux_2_nl_T = FpMantRNE_24U_11U_else_and_svs_2 ? ( { 1{ FpMantRNE_24U_11U_else_and_svs_2_T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_T [5] ) : ( { 1{ FpMantRNE_24U_11U_else_and_svs_2_T  }} | _001__T );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_else_mux_2_nl_S = FpMantRNE_24U_11U_else_and_svs_2 ? FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_S : _001__S ;
  assign FpMantRNE_24U_11U_else_and_svs_2_R4 = ( | (FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_else_mux_2_nl_R | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_else_mux_2_nl_C & ( { 1{ FpMantRNE_24U_11U_else_and_svs_2 }} & FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_T [5] | { 1{ !FpMantRNE_24U_11U_else_and_svs_2 }} & _001__T )))) && FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3[5] != _001_ ;
  logic [5:0] FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_C2 ;
  logic [5:0] FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_R2 ;
  logic [5:0] FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_X2 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_C2 [5] = { 1{ FpMantRNE_24U_11U_else_and_svs_2 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_R2 [5] = { 1{ FpMantRNE_24U_11U_else_and_svs_2 }} & ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_else_mux_2_nl_R | ( { 1{ FpMantRNE_24U_11U_else_and_svs_2_T  }} & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_else_mux_2_nl_C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_X2 [5] = { 1{ FpMantRNE_24U_11U_else_and_svs_2 }} & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_else_mux_2_nl_X ;
  logic [0:0] _001__C1 ;
  logic [0:0] _001__R1 ;
  logic [0:0] _001__X1 ;
  assign _001__C1 = { 1{ !FpMantRNE_24U_11U_else_and_svs_2 }} ;
  assign _001__R1 = { 1{ !FpMantRNE_24U_11U_else_and_svs_2 }} & ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_else_mux_2_nl_R | ( { 1{ FpMantRNE_24U_11U_else_and_svs_2_T  }} & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_else_mux_2_nl_C ));
  assign _001__X1 = { 1{ !FpMantRNE_24U_11U_else_and_svs_2 }} & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_else_mux_2_nl_X ;
  assign mux_15_nl = FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3 ? nor_23_nl : mux_14_nl;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_C6 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_R6 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X6 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_C6 = | mux_15_nl_C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X6 = | mux_15_nl_X ;
  assign mux_15_nl_T = FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3 ? ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_T  }} | nor_23_nl_T ) : ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_T  }} | mux_14_nl_T );
  assign mux_15_nl_S = FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3 ? nor_23_nl_S : mux_14_nl_S ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_R6 = ( | (mux_15_nl_R | ( mux_15_nl_C & ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3 }} & nor_23_nl_T | { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3 }} & mux_14_nl_T )))) && nor_23_nl != mux_14_nl ;
  logic [0:0] nor_23_nl_C0 ;
  logic [0:0] nor_23_nl_R0 ;
  logic [0:0] nor_23_nl_X0 ;
  assign nor_23_nl_C0 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3 }} ;
  assign nor_23_nl_R0 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3 }} & ( mux_15_nl_R | ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_T  }} & mux_15_nl_C ));
  assign nor_23_nl_X0 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3 }} & mux_15_nl_X ;
  logic [0:0] mux_14_nl_C0 ;
  logic [0:0] mux_14_nl_R0 ;
  logic [0:0] mux_14_nl_X0 ;
  assign mux_14_nl_C0 = { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3 }} ;
  assign mux_14_nl_R0 = { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3 }} & ( mux_15_nl_R | ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_T  }} & mux_15_nl_C ));
  assign mux_14_nl_X0 = { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3 }} & mux_15_nl_X ;
  assign mux_14_nl = FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4 ? and_14_nl : mux_tmp_13;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_C2 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_R2 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_X2 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_C2 = | mux_14_nl_C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_X2 = | mux_14_nl_X ;
  assign mux_14_nl_T = FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4 ? ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_T  }} | and_14_nl_T ) : ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_T  }} | mux_tmp_13_T );
  assign mux_14_nl_S = FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4 ? and_14_nl_S : mux_tmp_13_S ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_R2 = ( | (mux_14_nl_R | ( mux_14_nl_C & ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4 }} & and_14_nl_T | { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4 }} & mux_tmp_13_T )))) && and_14_nl != mux_tmp_13 ;
  logic [0:0] and_14_nl_C0 ;
  logic [0:0] and_14_nl_R0 ;
  logic [0:0] and_14_nl_X0 ;
  assign and_14_nl_C0 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4 }} ;
  assign and_14_nl_R0 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4 }} & ( mux_14_nl_R | ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_T  }} & mux_14_nl_C ));
  assign and_14_nl_X0 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4 }} & mux_14_nl_X ;
  logic [0:0] mux_tmp_13_C1 ;
  logic [0:0] mux_tmp_13_R1 ;
  logic [0:0] mux_tmp_13_X1 ;
  assign mux_tmp_13_C1 = { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4 }} ;
  assign mux_tmp_13_R1 = { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4 }} & ( mux_14_nl_R | ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_T  }} & mux_14_nl_C ));
  assign mux_tmp_13_X1 = { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4 }} & mux_14_nl_X ;
  assign mux_10_nl = FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3 ? mux_tmp_1 : and_tmp;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_C6 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_R6 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X6 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_C6 = | mux_10_nl_C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X6 = | mux_10_nl_X ;
  assign mux_10_nl_T = FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3 ? ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_T  }} | mux_tmp_1_T ) : ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_T  }} | and_tmp_T );
  assign mux_10_nl_S = FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3 ? mux_tmp_1_S : and_tmp_S ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_R6 = ( | (mux_10_nl_R | ( mux_10_nl_C & ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3 }} & mux_tmp_1_T | { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3 }} & and_tmp_T )))) && mux_tmp_1 != and_tmp ;
  logic [0:0] mux_tmp_1_C0 ;
  logic [0:0] mux_tmp_1_R0 ;
  logic [0:0] mux_tmp_1_X0 ;
  assign mux_tmp_1_C0 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3 }} ;
  assign mux_tmp_1_R0 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3 }} & ( mux_10_nl_R | ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_T  }} & mux_10_nl_C ));
  assign mux_tmp_1_X0 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3 }} & mux_10_nl_X ;
  logic [0:0] and_tmp_C1 ;
  logic [0:0] and_tmp_R1 ;
  logic [0:0] and_tmp_X1 ;
  assign and_tmp_C1 = { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3 }} ;
  assign and_tmp_R1 = { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3 }} & ( mux_10_nl_R | ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_T  }} & mux_10_nl_C ));
  assign and_tmp_X1 = { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3 }} & mux_10_nl_X ;
  assign mux_9_nl = _183_ ? nor_27_nl : mux_8_nl;
  logic [0:0] _183__C0 ;
  logic [0:0] _183__R0 ;
  logic [0:0] _183__X0 ;
  assign _183__C0 = | mux_9_nl_C ;
  assign _183__X0 = | mux_9_nl_X ;
  assign mux_9_nl_T = _183_ ? ( { 1{ _183__T  }} | nor_27_nl_T ) : ( { 1{ _183__T  }} | mux_8_nl_T );
  assign mux_9_nl_S = _183_ ? nor_27_nl_S : mux_8_nl_S ;
  assign _183__R0 = ( | (mux_9_nl_R | ( mux_9_nl_C & ( { 1{ _183_ }} & nor_27_nl_T | { 1{ !_183_ }} & mux_8_nl_T )))) && nor_27_nl != mux_8_nl ;
  logic [0:0] nor_27_nl_C0 ;
  logic [0:0] nor_27_nl_R0 ;
  logic [0:0] nor_27_nl_X0 ;
  assign nor_27_nl_C0 = { 1{ _183_ }} ;
  assign nor_27_nl_R0 = { 1{ _183_ }} & ( mux_9_nl_R | ( { 1{ _183__T  }} & mux_9_nl_C ));
  assign nor_27_nl_X0 = { 1{ _183_ }} & mux_9_nl_X ;
  logic [0:0] mux_8_nl_C0 ;
  logic [0:0] mux_8_nl_R0 ;
  logic [0:0] mux_8_nl_X0 ;
  assign mux_8_nl_C0 = { 1{ !_183_ }} ;
  assign mux_8_nl_R0 = { 1{ !_183_ }} & ( mux_9_nl_R | ( { 1{ _183__T  }} & mux_9_nl_C ));
  assign mux_8_nl_X0 = { 1{ !_183_ }} & mux_9_nl_X ;
  assign mux_8_nl = FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl[7] ? _000_ : mux_tmp_1;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R5 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R5 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R5 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R5 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R5 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R5 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R5 [6] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X5 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X5 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X5 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X5 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X5 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X5 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X5 [6] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C5 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C5 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C5 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C5 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C5 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C5 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C5 [6] } = 0;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C6 ;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R6 ;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X6 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C6 [7] = | mux_8_nl_C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X6 [7] = | mux_8_nl_X ;
  assign mux_8_nl_T = FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl[7] ? ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_T  [7] }} | _000__T ) : ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_T  [7] }} | mux_tmp_1_T );
  assign mux_8_nl_S = FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl[7] ? _000__S : mux_tmp_1_S ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R6 [7] = ( | (mux_8_nl_R | ( mux_8_nl_C & ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl[7] }} & _000__T | { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl[7] }} & mux_tmp_1_T )))) && _000_ != mux_tmp_1 ;
  logic [0:0] _000__C0 ;
  logic [0:0] _000__R0 ;
  logic [0:0] _000__X0 ;
  assign _000__C0 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl[7] }} ;
  assign _000__R0 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl[7] }} & ( mux_8_nl_R | ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_T  [7] }} & mux_8_nl_C ));
  assign _000__X0 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl[7] }} & mux_8_nl_X ;
  logic [0:0] mux_tmp_1_C1 ;
  logic [0:0] mux_tmp_1_R1 ;
  logic [0:0] mux_tmp_1_X1 ;
  assign mux_tmp_1_C1 = { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl[7] }} ;
  assign mux_tmp_1_R1 = { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl[7] }} & ( mux_8_nl_R | ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_T  [7] }} & mux_8_nl_C ));
  assign mux_tmp_1_X1 = { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl[7] }} & mux_8_nl_X ;
  assign mux_7_nl = _181_ ? nor_28_nl : mux_6_nl;
  logic [0:0] _181__C0 ;
  logic [0:0] _181__R0 ;
  logic [0:0] _181__X0 ;
  assign _181__C0 = | mux_7_nl_C ;
  assign _181__X0 = | mux_7_nl_X ;
  assign mux_7_nl_T = _181_ ? ( { 1{ _181__T  }} | nor_28_nl_T ) : ( { 1{ _181__T  }} | mux_6_nl_T );
  assign mux_7_nl_S = _181_ ? nor_28_nl_S : mux_6_nl_S ;
  assign _181__R0 = ( | (mux_7_nl_R | ( mux_7_nl_C & ( { 1{ _181_ }} & nor_28_nl_T | { 1{ !_181_ }} & mux_6_nl_T )))) && nor_28_nl != mux_6_nl ;
  logic [0:0] nor_28_nl_C0 ;
  logic [0:0] nor_28_nl_R0 ;
  logic [0:0] nor_28_nl_X0 ;
  assign nor_28_nl_C0 = { 1{ _181_ }} ;
  assign nor_28_nl_R0 = { 1{ _181_ }} & ( mux_7_nl_R | ( { 1{ _181__T  }} & mux_7_nl_C ));
  assign nor_28_nl_X0 = { 1{ _181_ }} & mux_7_nl_X ;
  logic [0:0] mux_6_nl_C0 ;
  logic [0:0] mux_6_nl_R0 ;
  logic [0:0] mux_6_nl_X0 ;
  assign mux_6_nl_C0 = { 1{ !_181_ }} ;
  assign mux_6_nl_R0 = { 1{ !_181_ }} & ( mux_7_nl_R | ( { 1{ _181__T  }} & mux_7_nl_C ));
  assign mux_6_nl_X0 = { 1{ !_181_ }} & mux_7_nl_X ;
  assign mux_6_nl = or_16_nl ? _000_ : mux_tmp_1;
  logic [0:0] or_16_nl_C1 ;
  logic [0:0] or_16_nl_R1 ;
  logic [0:0] or_16_nl_X1 ;
  assign or_16_nl_C1 = | mux_6_nl_C ;
  assign or_16_nl_X1 = | mux_6_nl_X ;
  assign mux_6_nl_T = or_16_nl ? ( { 1{ or_16_nl_T  }} | _000__T ) : ( { 1{ or_16_nl_T  }} | mux_tmp_1_T );
  assign mux_6_nl_S = or_16_nl ? _000__S : mux_tmp_1_S ;
  assign or_16_nl_R1 = ( | (mux_6_nl_R | ( mux_6_nl_C & ( { 1{ or_16_nl }} & _000__T | { 1{ !or_16_nl }} & mux_tmp_1_T )))) && _000_ != mux_tmp_1 ;
  logic [0:0] _000__C1 ;
  logic [0:0] _000__R1 ;
  logic [0:0] _000__X1 ;
  assign _000__C1 = { 1{ or_16_nl }} ;
  assign _000__R1 = { 1{ or_16_nl }} & ( mux_6_nl_R | ( { 1{ or_16_nl_T  }} & mux_6_nl_C ));
  assign _000__X1 = { 1{ or_16_nl }} & mux_6_nl_X ;
  logic [0:0] mux_tmp_1_C2 ;
  logic [0:0] mux_tmp_1_R2 ;
  logic [0:0] mux_tmp_1_X2 ;
  assign mux_tmp_1_C2 = { 1{ !or_16_nl }} ;
  assign mux_tmp_1_R2 = { 1{ !or_16_nl }} & ( mux_6_nl_R | ( { 1{ or_16_nl_T  }} & mux_6_nl_C ));
  assign mux_tmp_1_X2 = { 1{ !or_16_nl }} & mux_6_nl_X ;
  assign mux_5_nl = or_9_cse ? and_nl : mux_4_nl;
  logic [0:0] or_9_cse_C15 ;
  logic [0:0] or_9_cse_R15 ;
  logic [0:0] or_9_cse_X15 ;
  assign or_9_cse_C15 = | mux_5_nl_C ;
  assign or_9_cse_X15 = | mux_5_nl_X ;
  assign mux_5_nl_T = or_9_cse ? ( { 1{ or_9_cse_T  }} | and_nl_T ) : ( { 1{ or_9_cse_T  }} | mux_4_nl_T );
  assign mux_5_nl_S = or_9_cse ? and_nl_S : mux_4_nl_S ;
  assign or_9_cse_R15 = ( | (mux_5_nl_R | ( mux_5_nl_C & ( { 1{ or_9_cse }} & and_nl_T | { 1{ !or_9_cse }} & mux_4_nl_T )))) && and_nl != mux_4_nl ;
  logic [0:0] and_nl_C0 ;
  logic [0:0] and_nl_R0 ;
  logic [0:0] and_nl_X0 ;
  assign and_nl_C0 = { 1{ or_9_cse }} ;
  assign and_nl_R0 = { 1{ or_9_cse }} & ( mux_5_nl_R | ( { 1{ or_9_cse_T  }} & mux_5_nl_C ));
  assign and_nl_X0 = { 1{ or_9_cse }} & mux_5_nl_X ;
  logic [0:0] mux_4_nl_C0 ;
  logic [0:0] mux_4_nl_R0 ;
  logic [0:0] mux_4_nl_X0 ;
  assign mux_4_nl_C0 = { 1{ !or_9_cse }} ;
  assign mux_4_nl_R0 = { 1{ !or_9_cse }} & ( mux_5_nl_R | ( { 1{ or_9_cse_T  }} & mux_5_nl_C ));
  assign mux_4_nl_X0 = { 1{ !or_9_cse }} & mux_5_nl_X ;
  assign mux_4_nl = and_82_nl ? nor_32_nl : main_stage_v_1;
  logic [0:0] and_82_nl_C0 ;
  logic [0:0] and_82_nl_R0 ;
  logic [0:0] and_82_nl_X0 ;
  assign and_82_nl_C0 = | mux_4_nl_C ;
  assign and_82_nl_X0 = | mux_4_nl_X ;
  assign mux_4_nl_T = and_82_nl ? ( { 1{ and_82_nl_T  }} | nor_32_nl_T ) : ( { 1{ and_82_nl_T  }} | main_stage_v_1_T );
  assign mux_4_nl_S = and_82_nl ? nor_32_nl_S : main_stage_v_1_S ;
  assign and_82_nl_R0 = ( | (mux_4_nl_R | ( mux_4_nl_C & ( { 1{ and_82_nl }} & nor_32_nl_T | { 1{ !and_82_nl }} & main_stage_v_1_T )))) && nor_32_nl != main_stage_v_1 ;
  logic [0:0] nor_32_nl_C0 ;
  logic [0:0] nor_32_nl_R0 ;
  logic [0:0] nor_32_nl_X0 ;
  assign nor_32_nl_C0 = { 1{ and_82_nl }} ;
  assign nor_32_nl_R0 = { 1{ and_82_nl }} & ( mux_4_nl_R | ( { 1{ and_82_nl_T  }} & mux_4_nl_C ));
  assign nor_32_nl_X0 = { 1{ and_82_nl }} & mux_4_nl_X ;
  logic [0:0] main_stage_v_1_C5 ;
  logic [0:0] main_stage_v_1_R5 ;
  logic [0:0] main_stage_v_1_X5 ;
  assign main_stage_v_1_C5 = { 1{ !and_82_nl }} ;
  assign main_stage_v_1_R5 = { 1{ !and_82_nl }} & ( mux_4_nl_R | ( { 1{ and_82_nl_T  }} & mux_4_nl_C ));
  assign main_stage_v_1_X5 = { 1{ !and_82_nl }} & mux_4_nl_X ;
  assign mux_3_nl = _171_ ? nor_nl : mux_2_nl;
  logic [0:0] _171__C0 ;
  logic [0:0] _171__R0 ;
  logic [0:0] _171__X0 ;
  assign _171__C0 = | mux_3_nl_C ;
  assign _171__X0 = | mux_3_nl_X ;
  assign mux_3_nl_T = _171_ ? ( { 1{ _171__T  }} | nor_nl_T ) : ( { 1{ _171__T  }} | mux_2_nl_T );
  assign mux_3_nl_S = _171_ ? nor_nl_S : mux_2_nl_S ;
  assign _171__R0 = ( | (mux_3_nl_R | ( mux_3_nl_C & ( { 1{ _171_ }} & nor_nl_T | { 1{ !_171_ }} & mux_2_nl_T )))) && nor_nl != mux_2_nl ;
  logic [0:0] nor_nl_C0 ;
  logic [0:0] nor_nl_R0 ;
  logic [0:0] nor_nl_X0 ;
  assign nor_nl_C0 = { 1{ _171_ }} ;
  assign nor_nl_R0 = { 1{ _171_ }} & ( mux_3_nl_R | ( { 1{ _171__T  }} & mux_3_nl_C ));
  assign nor_nl_X0 = { 1{ _171_ }} & mux_3_nl_X ;
  logic [0:0] mux_2_nl_C0 ;
  logic [0:0] mux_2_nl_R0 ;
  logic [0:0] mux_2_nl_X0 ;
  assign mux_2_nl_C0 = { 1{ !_171_ }} ;
  assign mux_2_nl_R0 = { 1{ !_171_ }} & ( mux_3_nl_R | ( { 1{ _171__T  }} & mux_3_nl_C ));
  assign mux_2_nl_X0 = { 1{ !_171_ }} & mux_3_nl_X ;
  assign mux_2_nl = or_2_nl ? _000_ : mux_tmp_1;
  logic [0:0] or_2_nl_C1 ;
  logic [0:0] or_2_nl_R1 ;
  logic [0:0] or_2_nl_X1 ;
  assign or_2_nl_C1 = | mux_2_nl_C ;
  assign or_2_nl_X1 = | mux_2_nl_X ;
  assign mux_2_nl_T = or_2_nl ? ( { 1{ or_2_nl_T  }} | _000__T ) : ( { 1{ or_2_nl_T  }} | mux_tmp_1_T );
  assign mux_2_nl_S = or_2_nl ? _000__S : mux_tmp_1_S ;
  assign or_2_nl_R1 = ( | (mux_2_nl_R | ( mux_2_nl_C & ( { 1{ or_2_nl }} & _000__T | { 1{ !or_2_nl }} & mux_tmp_1_T )))) && _000_ != mux_tmp_1 ;
  logic [0:0] _000__C2 ;
  logic [0:0] _000__R2 ;
  logic [0:0] _000__X2 ;
  assign _000__C2 = { 1{ or_2_nl }} ;
  assign _000__R2 = { 1{ or_2_nl }} & ( mux_2_nl_R | ( { 1{ or_2_nl_T  }} & mux_2_nl_C ));
  assign _000__X2 = { 1{ or_2_nl }} & mux_2_nl_X ;
  logic [0:0] mux_tmp_1_C3 ;
  logic [0:0] mux_tmp_1_R3 ;
  logic [0:0] mux_tmp_1_X3 ;
  assign mux_tmp_1_C3 = { 1{ !or_2_nl }} ;
  assign mux_tmp_1_R3 = { 1{ !or_2_nl }} & ( mux_2_nl_R | ( { 1{ or_2_nl_T  }} & mux_2_nl_C ));
  assign mux_tmp_1_X3 = { 1{ !or_2_nl }} & mux_2_nl_X ;
  assign _004_ = FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2 ? 10'b1111111111 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_nl;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_C1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_R1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_X1 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_C1 = | _004__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_X1 = | _004__X ;
  logic [9:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_nl_C0 ;
  logic [9:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_nl_R0 ;
  logic [9:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_nl_X0 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_nl_C0 = { 10{ !FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2 }};
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_nl_R0 = { 10{ !FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2 }} & ( _004__R | ( { 10{ FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_T  }} & _004__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_nl_X0 = { 10{ !FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2 }} & _004__X ;
  assign _004__T = FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2 ? { 10{ | FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_T  }} : ( { 10{ | FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_nl_T );
  assign _004__S = FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2 ? FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_S : FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_nl_S ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_R1 = ( | (_004__R | ( { 10{ !FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2 }} & FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_nl_T & _004__C ))) && 10'b1111111111 != FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_nl ;
  assign _003_ = FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5 ? 10'b1111111111 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_C1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_R1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_X1 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_C1 = | _003__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_X1 = | _003__X ;
  logic [9:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl_C0 ;
  logic [9:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl_R0 ;
  logic [9:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl_X0 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl_C0 = { 10{ !FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5 }};
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl_R0 = { 10{ !FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5 }} & ( _003__R | ( { 10{ FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_T  }} & _003__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl_X0 = { 10{ !FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5 }} & _003__X ;
  assign _003__T = FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5 ? { 10{ | FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_T  }} : ( { 10{ | FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl_T );
  assign _003__S = FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5 ? FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_S : FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl_S ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_R1 = ( | (_003__R | ( { 10{ !FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5 }} & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl_T & _003__C ))) && 10'b1111111111 != FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl = FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4 ? FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1 : FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva[9:0];
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_C2 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_R2 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_X2 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_C2 = | FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl_C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_X2 = | FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl_X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl_T = FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4 ? ( { 10{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_T ) : ( { 10{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_T  }} | FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_T [9:0] );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl_S = FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4 ? FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_S : FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_S ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_R2 = ( | (FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl_R | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl_C & ( { 10{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4 }} & FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_T | { 10{ !FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4 }} & FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_T [9:0] )))) && FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1 != FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva[9:0] ;
  logic [9:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_C0 ;
  logic [9:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_R0 ;
  logic [9:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_X0 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_C0 = { 10{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_R0 = { 10{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4 }} & ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl_R | ( { 10{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_T  }} & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl_C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_X0 = { 10{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4 }} & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl_X ;
  assign FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_C0 [9:0] = { 10{ !FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4 }} ;
  assign FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_R0 [9:0] = { 10{ !FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4 }} & ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl_R | ( { 10{ FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_T  }} & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl_C ));
  assign FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_X0 [9:0] = { 10{ !FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4 }} & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl_X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_and_nl = FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2 ? 5'b00000 : FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_C2 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_R2 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_X2 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_C2 = | FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_and_nl_C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_X2 = | FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_and_nl_X ;
  logic [4:0] FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_C0 ;
  logic [4:0] FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_R0 ;
  logic [4:0] FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_X0 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_C0 = { 5{ !FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2 }};
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_R0 = { 5{ !FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2 }} & ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_and_nl_R | ( { 5{ FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_T  }} & FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_and_nl_C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_X0 = { 5{ !FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2 }} & FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_and_nl_X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_and_nl_T = FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2 ? { 5{ | FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_T  }} : ( { 5{ | FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_T );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_and_nl_S = FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2 ? FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_S : FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_S ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_R2 = ( | (FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_and_nl_R | ( { 5{ !FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2 }} & FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_T & FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_and_nl_C ))) && 5'b00000 != FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1 ;
  assign mux_tmp_18 = _097_ ? _002_ : or_34_nl;
  logic [0:0] _097__C0 ;
  logic [0:0] _097__R0 ;
  logic [0:0] _097__X0 ;
  assign _097__C0 = | mux_tmp_18_C ;
  assign _097__X0 = | mux_tmp_18_X ;
  assign mux_tmp_18_T = _097_ ? ( { 1{ _097__T  }} | _002__T ) : ( { 1{ _097__T  }} | or_34_nl_T );
  assign mux_tmp_18_S = _097_ ? _002__S : or_34_nl_S ;
  assign _097__R0 = ( | (mux_tmp_18_R | ( mux_tmp_18_C & ( { 1{ _097_ }} & _002__T | { 1{ !_097_ }} & or_34_nl_T )))) && _002_ != or_34_nl ;
  logic [0:0] _002__C5 ;
  logic [0:0] _002__R5 ;
  logic [0:0] _002__X5 ;
  assign _002__C5 = { 1{ _097_ }} ;
  assign _002__R5 = { 1{ _097_ }} & ( mux_tmp_18_R | ( { 1{ _097__T  }} & mux_tmp_18_C ));
  assign _002__X5 = { 1{ _097_ }} & mux_tmp_18_X ;
  logic [0:0] or_34_nl_C0 ;
  logic [0:0] or_34_nl_R0 ;
  logic [0:0] or_34_nl_X0 ;
  assign or_34_nl_C0 = { 1{ !_097_ }} ;
  assign or_34_nl_R0 = { 1{ !_097_ }} & ( mux_tmp_18_R | ( { 1{ _097__T  }} & mux_tmp_18_C ));
  assign or_34_nl_X0 = { 1{ !_097_ }} & mux_tmp_18_X ;
  assign not_tmp_20 = _221_ ? nor_21_nl : nand_6_nl;
  logic [0:0] _221__C0 ;
  logic [0:0] _221__R0 ;
  logic [0:0] _221__X0 ;
  assign _221__C0 = | not_tmp_20_C ;
  assign _221__X0 = | not_tmp_20_X ;
  assign not_tmp_20_T = _221_ ? ( { 1{ _221__T  }} | nor_21_nl_T ) : ( { 1{ _221__T  }} | nand_6_nl_T );
  assign not_tmp_20_S = _221_ ? nor_21_nl_S : nand_6_nl_S ;
  assign _221__R0 = ( | (not_tmp_20_R | ( not_tmp_20_C & ( { 1{ _221_ }} & nor_21_nl_T | { 1{ !_221_ }} & nand_6_nl_T )))) && nor_21_nl != nand_6_nl ;
  logic [0:0] nor_21_nl_C0 ;
  logic [0:0] nor_21_nl_R0 ;
  logic [0:0] nor_21_nl_X0 ;
  assign nor_21_nl_C0 = { 1{ _221_ }} ;
  assign nor_21_nl_R0 = { 1{ _221_ }} & ( not_tmp_20_R | ( { 1{ _221__T  }} & not_tmp_20_C ));
  assign nor_21_nl_X0 = { 1{ _221_ }} & not_tmp_20_X ;
  logic [0:0] nand_6_nl_C0 ;
  logic [0:0] nand_6_nl_R0 ;
  logic [0:0] nand_6_nl_X0 ;
  assign nand_6_nl_C0 = { 1{ !_221_ }} ;
  assign nand_6_nl_R0 = { 1{ !_221_ }} & ( not_tmp_20_R | ( { 1{ _221__T  }} & not_tmp_20_C ));
  assign nand_6_nl_X0 = { 1{ !_221_ }} & not_tmp_20_X ;
  assign mux_tmp_13 = FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3 ? mux_12_nl : and_81_nl;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_C7 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_R7 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X7 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_C7 = | mux_tmp_13_C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X7 = | mux_tmp_13_X ;
  assign mux_tmp_13_T = FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3 ? ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_T  }} | mux_12_nl_T ) : ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_T  }} | and_81_nl_T );
  assign mux_tmp_13_S = FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3 ? mux_12_nl_S : and_81_nl_S ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_R7 = ( | (mux_tmp_13_R | ( mux_tmp_13_C & ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3 }} & mux_12_nl_T | { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3 }} & and_81_nl_T )))) && mux_12_nl != and_81_nl ;
  logic [0:0] mux_12_nl_C0 ;
  logic [0:0] mux_12_nl_R0 ;
  logic [0:0] mux_12_nl_X0 ;
  assign mux_12_nl_C0 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3 }} ;
  assign mux_12_nl_R0 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3 }} & ( mux_tmp_13_R | ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_T  }} & mux_tmp_13_C ));
  assign mux_12_nl_X0 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3 }} & mux_tmp_13_X ;
  logic [0:0] and_81_nl_C0 ;
  logic [0:0] and_81_nl_R0 ;
  logic [0:0] and_81_nl_X0 ;
  assign and_81_nl_C0 = { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3 }} ;
  assign and_81_nl_R0 = { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3 }} & ( mux_tmp_13_R | ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_T  }} & mux_tmp_13_C ));
  assign and_81_nl_X0 = { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3 }} & mux_tmp_13_X ;
  assign mux_12_nl = and_80_nl ? or_tmp_24 : and_42_cse;
  logic [0:0] and_80_nl_C1 ;
  logic [0:0] and_80_nl_R1 ;
  logic [0:0] and_80_nl_X1 ;
  assign and_80_nl_C1 = | mux_12_nl_C ;
  assign and_80_nl_X1 = | mux_12_nl_X ;
  assign mux_12_nl_T = and_80_nl ? ( { 1{ and_80_nl_T  }} | or_tmp_24_T ) : ( { 1{ and_80_nl_T  }} | and_42_cse_T );
  assign mux_12_nl_S = and_80_nl ? or_tmp_24_S : and_42_cse_S ;
  assign and_80_nl_R1 = ( | (mux_12_nl_R | ( mux_12_nl_C & ( { 1{ and_80_nl }} & or_tmp_24_T | { 1{ !and_80_nl }} & and_42_cse_T )))) && or_tmp_24 != and_42_cse ;
  logic [0:0] or_tmp_24_C0 ;
  logic [0:0] or_tmp_24_R0 ;
  logic [0:0] or_tmp_24_X0 ;
  assign or_tmp_24_C0 = { 1{ and_80_nl }} ;
  assign or_tmp_24_R0 = { 1{ and_80_nl }} & ( mux_12_nl_R | ( { 1{ and_80_nl_T  }} & mux_12_nl_C ));
  assign or_tmp_24_X0 = { 1{ and_80_nl }} & mux_12_nl_X ;
  logic [0:0] and_42_cse_C2 ;
  logic [0:0] and_42_cse_R2 ;
  logic [0:0] and_42_cse_X2 ;
  assign and_42_cse_C2 = { 1{ !and_80_nl }} ;
  assign and_42_cse_R2 = { 1{ !and_80_nl }} & ( mux_12_nl_R | ( { 1{ and_80_nl_T  }} & mux_12_nl_C ));
  assign and_42_cse_X2 = { 1{ !and_80_nl }} & mux_12_nl_X ;
  assign mux_tmp_1 = FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl[8] ? mux_tmp : _000_;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R2 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R2 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R2 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R2 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R2 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R2 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R2 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R2 [7] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X2 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X2 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X2 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X2 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X2 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X2 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X2 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X2 [7] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C2 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C2 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C2 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C2 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C2 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C2 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C2 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C2 [7] } = 0;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C3 ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R3 ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X3 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C3 [8] = | mux_tmp_1_C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X3 [8] = | mux_tmp_1_X ;
  assign mux_tmp_1_T = FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl[8] ? ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_T  [8] }} | mux_tmp_T ) : ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_T  [8] }} | _000__T );
  assign mux_tmp_1_S = FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl[8] ? mux_tmp_S : _000__S ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R3 [8] = ( | (mux_tmp_1_R | ( mux_tmp_1_C & ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl[8] }} & mux_tmp_T | { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl[8] }} & _000__T )))) && mux_tmp != _000_ ;
  logic [0:0] mux_tmp_C3 ;
  logic [0:0] mux_tmp_R3 ;
  logic [0:0] mux_tmp_X3 ;
  assign mux_tmp_C3 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl[8] }} ;
  assign mux_tmp_R3 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl[8] }} & ( mux_tmp_1_R | ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_T  [8] }} & mux_tmp_1_C ));
  assign mux_tmp_X3 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl[8] }} & mux_tmp_1_X ;
  logic [0:0] _000__C3 ;
  logic [0:0] _000__R3 ;
  logic [0:0] _000__X3 ;
  assign _000__C3 = { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl[8] }} ;
  assign _000__R3 = { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl[8] }} & ( mux_tmp_1_R | ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_T  [8] }} & mux_tmp_1_C ));
  assign _000__X3 = { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl[8] }} & mux_tmp_1_X ;
  assign mux_tmp = or_9_cse ? chn_a_rsci_bawt : main_stage_v_1;
  logic [0:0] or_9_cse_C16 ;
  logic [0:0] or_9_cse_R16 ;
  logic [0:0] or_9_cse_X16 ;
  assign or_9_cse_C16 = | mux_tmp_C ;
  assign or_9_cse_X16 = | mux_tmp_X ;
  assign mux_tmp_T = or_9_cse ? ( { 1{ or_9_cse_T  }} | chn_a_rsci_bawt_T ) : ( { 1{ or_9_cse_T  }} | main_stage_v_1_T );
  assign mux_tmp_S = or_9_cse ? chn_a_rsci_bawt_S : main_stage_v_1_S ;
  assign or_9_cse_R16 = ( | (mux_tmp_R | ( mux_tmp_C & ( { 1{ or_9_cse }} & chn_a_rsci_bawt_T | { 1{ !or_9_cse }} & main_stage_v_1_T )))) && chn_a_rsci_bawt != main_stage_v_1 ;
  logic [0:0] chn_a_rsci_bawt_C5 ;
  logic [0:0] chn_a_rsci_bawt_R5 ;
  logic [0:0] chn_a_rsci_bawt_X5 ;
  assign chn_a_rsci_bawt_C5 = { 1{ or_9_cse }} ;
  assign chn_a_rsci_bawt_R5 = { 1{ or_9_cse }} & ( mux_tmp_R | ( { 1{ or_9_cse_T  }} & mux_tmp_C ));
  assign chn_a_rsci_bawt_X5 = { 1{ or_9_cse }} & mux_tmp_X ;
  logic [0:0] main_stage_v_1_C6 ;
  logic [0:0] main_stage_v_1_R6 ;
  logic [0:0] main_stage_v_1_X6 ;
  assign main_stage_v_1_C6 = { 1{ !or_9_cse }} ;
  assign main_stage_v_1_R6 = { 1{ !or_9_cse }} & ( mux_tmp_R | ( { 1{ or_9_cse_T  }} & mux_tmp_C ));
  assign main_stage_v_1_X6 = { 1{ !or_9_cse }} & mux_tmp_X ;
  assign mux_16_nl = main_stage_v_2 ? or_tmp_24 : and_42_cse;
  logic [0:0] main_stage_v_2_C5 ;
  logic [0:0] main_stage_v_2_R5 ;
  logic [0:0] main_stage_v_2_X5 ;
  assign main_stage_v_2_C5 = | mux_16_nl_C ;
  assign main_stage_v_2_X5 = | mux_16_nl_X ;
  assign mux_16_nl_T = main_stage_v_2 ? ( { 1{ main_stage_v_2_T  }} | or_tmp_24_T ) : ( { 1{ main_stage_v_2_T  }} | and_42_cse_T );
  assign mux_16_nl_S = main_stage_v_2 ? or_tmp_24_S : and_42_cse_S ;
  assign main_stage_v_2_R5 = ( | (mux_16_nl_R | ( mux_16_nl_C & ( { 1{ main_stage_v_2 }} & or_tmp_24_T | { 1{ !main_stage_v_2 }} & and_42_cse_T )))) && or_tmp_24 != and_42_cse ;
  logic [0:0] or_tmp_24_C1 ;
  logic [0:0] or_tmp_24_R1 ;
  logic [0:0] or_tmp_24_X1 ;
  assign or_tmp_24_C1 = { 1{ main_stage_v_2 }} ;
  assign or_tmp_24_R1 = { 1{ main_stage_v_2 }} & ( mux_16_nl_R | ( { 1{ main_stage_v_2_T  }} & mux_16_nl_C ));
  assign or_tmp_24_X1 = { 1{ main_stage_v_2 }} & mux_16_nl_X ;
  logic [0:0] and_42_cse_C3 ;
  logic [0:0] and_42_cse_R3 ;
  logic [0:0] and_42_cse_X3 ;
  assign and_42_cse_C3 = { 1{ !main_stage_v_2 }} ;
  assign and_42_cse_R3 = { 1{ !main_stage_v_2 }} & ( mux_16_nl_R | ( { 1{ main_stage_v_2_T  }} & mux_16_nl_C ));
  assign and_42_cse_X3 = { 1{ !main_stage_v_2 }} & mux_16_nl_X ;
  assign mux_11_nl = or_9_cse ? nor_25_nl : nor_26_nl;
  logic [0:0] or_9_cse_C17 ;
  logic [0:0] or_9_cse_R17 ;
  logic [0:0] or_9_cse_X17 ;
  assign or_9_cse_C17 = | mux_11_nl_C ;
  assign or_9_cse_X17 = | mux_11_nl_X ;
  assign mux_11_nl_T = or_9_cse ? ( { 1{ or_9_cse_T  }} | nor_25_nl_T ) : ( { 1{ or_9_cse_T  }} | nor_26_nl_T );
  assign mux_11_nl_S = or_9_cse ? nor_25_nl_S : nor_26_nl_S ;
  assign or_9_cse_R17 = ( | (mux_11_nl_R | ( mux_11_nl_C & ( { 1{ or_9_cse }} & nor_25_nl_T | { 1{ !or_9_cse }} & nor_26_nl_T )))) && nor_25_nl != nor_26_nl ;
  logic [0:0] nor_25_nl_C0 ;
  logic [0:0] nor_25_nl_R0 ;
  logic [0:0] nor_25_nl_X0 ;
  assign nor_25_nl_C0 = { 1{ or_9_cse }} ;
  assign nor_25_nl_R0 = { 1{ or_9_cse }} & ( mux_11_nl_R | ( { 1{ or_9_cse_T  }} & mux_11_nl_C ));
  assign nor_25_nl_X0 = { 1{ or_9_cse }} & mux_11_nl_X ;
  logic [0:0] nor_26_nl_C0 ;
  logic [0:0] nor_26_nl_R0 ;
  logic [0:0] nor_26_nl_X0 ;
  assign nor_26_nl_C0 = { 1{ !or_9_cse }} ;
  assign nor_26_nl_R0 = { 1{ !or_9_cse }} & ( mux_11_nl_R | ( { 1{ or_9_cse_T  }} & mux_11_nl_C ));
  assign nor_26_nl_X0 = { 1{ !or_9_cse }} & mux_11_nl_X ;
  assign _022_ = _072_ ? FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl[7] : FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs;
  logic [0:0] _072__C0 ;
  logic [0:0] _072__R0 ;
  logic [0:0] _072__X0 ;
  assign _072__C0 = | _022__C ;
  assign _072__X0 = | _022__X ;
  assign _022__T = _072_ ? ( { 1{ _072__T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_T [7] ) : ( { 1{ _072__T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_T );
  assign _022__S = _072_ ? FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_S : FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_S ;
  assign _072__R0 = ( | (_022__R | ( _022__C & ( { 1{ _072_ }} & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_T [7] | { 1{ !_072_ }} & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_T )))) && FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl[7] != FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs ;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R6 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R6 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R6 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R6 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R6 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R6 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R6 [6] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X6 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X6 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X6 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X6 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X6 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X6 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X6 [6] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C6 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C6 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C6 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C6 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C6 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C6 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C6 [6] } = 0;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C7 ;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R7 ;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X7 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C7 [7] = { 1{ _072_ }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R7 [7] = { 1{ _072_ }} & ( _022__R | ( { 1{ _072__T  }} & _022__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X7 [7] = { 1{ _072_ }} & _022__X ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_C0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_R0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_X0 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_C0 = { 1{ !_072_ }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_R0 = { 1{ !_072_ }} & ( _022__R | ( { 1{ _072__T  }} & _022__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_X0 = { 1{ !_072_ }} & _022__X ;
  assign _007_ = _071_ ? FpMantRNE_24U_11U_else_and_svs_mx0w0 : FpMantRNE_24U_11U_else_and_svs;
  logic [0:0] _071__C0 ;
  logic [0:0] _071__R0 ;
  logic [0:0] _071__X0 ;
  assign _071__C0 = | _007__C ;
  assign _071__X0 = | _007__X ;
  assign _007__T = _071_ ? ( { 1{ _071__T  }} | FpMantRNE_24U_11U_else_and_svs_mx0w0_T ) : ( { 1{ _071__T  }} | FpMantRNE_24U_11U_else_and_svs_T );
  assign _007__S = _071_ ? FpMantRNE_24U_11U_else_and_svs_mx0w0_S : FpMantRNE_24U_11U_else_and_svs_S ;
  assign _071__R0 = ( | (_007__R | ( _007__C & ( { 1{ _071_ }} & FpMantRNE_24U_11U_else_and_svs_mx0w0_T | { 1{ !_071_ }} & FpMantRNE_24U_11U_else_and_svs_T )))) && FpMantRNE_24U_11U_else_and_svs_mx0w0 != FpMantRNE_24U_11U_else_and_svs ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_mx0w0_C0 ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_mx0w0_R0 ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_mx0w0_X0 ;
  assign FpMantRNE_24U_11U_else_and_svs_mx0w0_C0 = { 1{ _071_ }} ;
  assign FpMantRNE_24U_11U_else_and_svs_mx0w0_R0 = { 1{ _071_ }} & ( _007__R | ( { 1{ _071__T  }} & _007__C ));
  assign FpMantRNE_24U_11U_else_and_svs_mx0w0_X0 = { 1{ _071_ }} & _007__X ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_C1 ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_R1 ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_X1 ;
  assign FpMantRNE_24U_11U_else_and_svs_C1 = { 1{ !_071_ }} ;
  assign FpMantRNE_24U_11U_else_and_svs_R1 = { 1{ !_071_ }} & ( _007__R | ( { 1{ _071__T  }} & _007__C ));
  assign FpMantRNE_24U_11U_else_and_svs_X1 = { 1{ !_071_ }} & _007__X ;
  assign _044_ = and_53_rgt ? FpMantRNE_24U_11U_else_and_svs : FpMantRNE_24U_11U_else_and_svs_mx0w0;
  logic [0:0] and_53_rgt_C1 ;
  logic [0:0] and_53_rgt_R1 ;
  logic [0:0] and_53_rgt_X1 ;
  assign and_53_rgt_C1 = | _044__C ;
  assign and_53_rgt_X1 = | _044__X ;
  assign _044__T = and_53_rgt ? ( { 1{ and_53_rgt_T  }} | FpMantRNE_24U_11U_else_and_svs_T ) : ( { 1{ and_53_rgt_T  }} | FpMantRNE_24U_11U_else_and_svs_mx0w0_T );
  assign _044__S = and_53_rgt ? FpMantRNE_24U_11U_else_and_svs_S : FpMantRNE_24U_11U_else_and_svs_mx0w0_S ;
  assign and_53_rgt_R1 = ( | (_044__R | ( _044__C & ( { 1{ and_53_rgt }} & FpMantRNE_24U_11U_else_and_svs_T | { 1{ !and_53_rgt }} & FpMantRNE_24U_11U_else_and_svs_mx0w0_T )))) && FpMantRNE_24U_11U_else_and_svs != FpMantRNE_24U_11U_else_and_svs_mx0w0 ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_C2 ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_R2 ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_X2 ;
  assign FpMantRNE_24U_11U_else_and_svs_C2 = { 1{ and_53_rgt }} ;
  assign FpMantRNE_24U_11U_else_and_svs_R2 = { 1{ and_53_rgt }} & ( _044__R | ( { 1{ and_53_rgt_T  }} & _044__C ));
  assign FpMantRNE_24U_11U_else_and_svs_X2 = { 1{ and_53_rgt }} & _044__X ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_mx0w0_C1 ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_mx0w0_R1 ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_mx0w0_X1 ;
  assign FpMantRNE_24U_11U_else_and_svs_mx0w0_C1 = { 1{ !and_53_rgt }} ;
  assign FpMantRNE_24U_11U_else_and_svs_mx0w0_R1 = { 1{ !and_53_rgt }} & ( _044__R | ( { 1{ and_53_rgt_T  }} & _044__C ));
  assign FpMantRNE_24U_11U_else_and_svs_mx0w0_X1 = { 1{ !and_53_rgt }} & _044__X ;
  assign _008_ = _070_ ? _044_ : FpMantRNE_24U_11U_else_and_svs_2;
  logic [0:0] _070__C0 ;
  logic [0:0] _070__R0 ;
  logic [0:0] _070__X0 ;
  assign _070__C0 = | _008__C ;
  assign _070__X0 = | _008__X ;
  assign _008__T = _070_ ? ( { 1{ _070__T  }} | _044__T ) : ( { 1{ _070__T  }} | FpMantRNE_24U_11U_else_and_svs_2_T );
  assign _008__S = _070_ ? _044__S : FpMantRNE_24U_11U_else_and_svs_2_S ;
  assign _070__R0 = ( | (_008__R | ( _008__C & ( { 1{ _070_ }} & _044__T | { 1{ !_070_ }} & FpMantRNE_24U_11U_else_and_svs_2_T )))) && _044_ != FpMantRNE_24U_11U_else_and_svs_2 ;
  logic [0:0] _044__C0 ;
  logic [0:0] _044__R0 ;
  logic [0:0] _044__X0 ;
  assign _044__C0 = { 1{ _070_ }} ;
  assign _044__R0 = { 1{ _070_ }} & ( _008__R | ( { 1{ _070__T  }} & _008__C ));
  assign _044__X0 = { 1{ _070_ }} & _008__X ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_2_C5 ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_2_R5 ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_2_X5 ;
  assign FpMantRNE_24U_11U_else_and_svs_2_C5 = { 1{ !_070_ }} ;
  assign FpMantRNE_24U_11U_else_and_svs_2_R5 = { 1{ !_070_ }} & ( _008__R | ( { 1{ _070__T  }} & _008__C ));
  assign FpMantRNE_24U_11U_else_and_svs_2_X5 = { 1{ !_070_ }} & _008__X ;
  assign _010_ = _066_ ? FpMantRNE_24U_11U_else_carry_sva_mx0w0 : FpMantRNE_24U_11U_else_carry_sva_2;
  logic [0:0] _066__C0 ;
  logic [0:0] _066__R0 ;
  logic [0:0] _066__X0 ;
  assign _066__C0 = | _010__C ;
  assign _066__X0 = | _010__X ;
  assign _010__T = _066_ ? ( { 1{ _066__T  }} | FpMantRNE_24U_11U_else_carry_sva_mx0w0_T ) : ( { 1{ _066__T  }} | FpMantRNE_24U_11U_else_carry_sva_2_T );
  assign _010__S = _066_ ? FpMantRNE_24U_11U_else_carry_sva_mx0w0_S : FpMantRNE_24U_11U_else_carry_sva_2_S ;
  assign _066__R0 = ( | (_010__R | ( _010__C & ( { 1{ _066_ }} & FpMantRNE_24U_11U_else_carry_sva_mx0w0_T | { 1{ !_066_ }} & FpMantRNE_24U_11U_else_carry_sva_2_T )))) && FpMantRNE_24U_11U_else_carry_sva_mx0w0 != FpMantRNE_24U_11U_else_carry_sva_2 ;
  logic [0:0] FpMantRNE_24U_11U_else_carry_sva_mx0w0_C1 ;
  logic [0:0] FpMantRNE_24U_11U_else_carry_sva_mx0w0_R1 ;
  logic [0:0] FpMantRNE_24U_11U_else_carry_sva_mx0w0_X1 ;
  assign FpMantRNE_24U_11U_else_carry_sva_mx0w0_C1 = { 1{ _066_ }} ;
  assign FpMantRNE_24U_11U_else_carry_sva_mx0w0_R1 = { 1{ _066_ }} & ( _010__R | ( { 1{ _066__T  }} & _010__C ));
  assign FpMantRNE_24U_11U_else_carry_sva_mx0w0_X1 = { 1{ _066_ }} & _010__X ;
  logic [0:0] FpMantRNE_24U_11U_else_carry_sva_2_C1 ;
  logic [0:0] FpMantRNE_24U_11U_else_carry_sva_2_R1 ;
  logic [0:0] FpMantRNE_24U_11U_else_carry_sva_2_X1 ;
  assign FpMantRNE_24U_11U_else_carry_sva_2_C1 = { 1{ !_066_ }} ;
  assign FpMantRNE_24U_11U_else_carry_sva_2_R1 = { 1{ !_066_ }} & ( _010__R | ( { 1{ _066__T  }} & _010__C ));
  assign FpMantRNE_24U_11U_else_carry_sva_2_X1 = { 1{ !_066_ }} & _010__X ;
  assign _043_ = and_50_rgt ? FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs : FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl[7];
  logic [0:0] and_50_rgt_C1 ;
  logic [0:0] and_50_rgt_R1 ;
  logic [0:0] and_50_rgt_X1 ;
  assign and_50_rgt_C1 = | _043__C ;
  assign and_50_rgt_X1 = | _043__X ;
  assign _043__T = and_50_rgt ? ( { 1{ and_50_rgt_T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_T ) : ( { 1{ and_50_rgt_T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_T [7] );
  assign _043__S = and_50_rgt ? FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_S : FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_S ;
  assign and_50_rgt_R1 = ( | (_043__R | ( _043__C & ( { 1{ and_50_rgt }} & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_T | { 1{ !and_50_rgt }} & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_T [7] )))) && FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs != FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl[7] ;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R7 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R7 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R7 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R7 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R7 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R7 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R7 [6] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X7 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X7 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X7 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X7 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X7 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X7 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X7 [6] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C7 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C7 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C7 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C7 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C7 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C7 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C7 [6] } = 0;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_C1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_R1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_X1 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_C1 = { 1{ and_50_rgt }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_R1 = { 1{ and_50_rgt }} & ( _043__R | ( { 1{ and_50_rgt_T  }} & _043__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_X1 = { 1{ and_50_rgt }} & _043__X ;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C8 ;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R8 ;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X8 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C8 [7] = { 1{ !and_50_rgt }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R8 [7] = { 1{ !and_50_rgt }} & ( _043__R | ( { 1{ and_50_rgt_T  }} & _043__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X8 [7] = { 1{ !and_50_rgt }} & _043__X ;
  assign _023_ = _065_ ? _043_ : FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3;
  logic [0:0] _065__C0 ;
  logic [0:0] _065__R0 ;
  logic [0:0] _065__X0 ;
  assign _065__C0 = | _023__C ;
  assign _065__X0 = | _023__X ;
  assign _023__T = _065_ ? ( { 1{ _065__T  }} | _043__T ) : ( { 1{ _065__T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_T );
  assign _023__S = _065_ ? _043__S : FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_S ;
  assign _065__R0 = ( | (_023__R | ( _023__C & ( { 1{ _065_ }} & _043__T | { 1{ !_065_ }} & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_T )))) && _043_ != FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3 ;
  logic [0:0] _043__C0 ;
  logic [0:0] _043__R0 ;
  logic [0:0] _043__X0 ;
  assign _043__C0 = { 1{ _065_ }} ;
  assign _043__R0 = { 1{ _065_ }} & ( _023__R | ( { 1{ _065__T  }} & _023__C ));
  assign _043__X0 = { 1{ _065_ }} & _023__X ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_C3 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_R3 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_X3 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_C3 = { 1{ !_065_ }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_R3 = { 1{ !_065_ }} & ( _023__R | ( { 1{ _065__T  }} & _023__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_X3 = { 1{ !_065_ }} & _023__X ;
  assign _011_ = _063_ ? _197_ : FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1;
  logic [0:0] _063__C0 ;
  logic [0:0] _063__R0 ;
  logic [0:0] _063__X0 ;
  assign _063__C0 = | _011__C ;
  assign _063__X0 = | _011__X ;
  assign _011__T = _063_ ? ( { 5{ _063__T  }} | _197__T ) : ( { 5{ _063__T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_T );
  assign _011__S = _063_ ? _197__S : FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_S ;
  assign _063__R0 = ( | (_011__R | ( _011__C & ( { 5{ _063_ }} & _197__T | { 5{ !_063_ }} & FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_T )))) && _197_ != FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1 ;
  logic [4:0] _197__C0 ;
  logic [4:0] _197__R0 ;
  logic [4:0] _197__X0 ;
  assign _197__C0 = { 5{ _063_ }} ;
  assign _197__R0 = { 5{ _063_ }} & ( _011__R | ( { 5{ _063__T  }} & _011__C ));
  assign _197__X0 = { 5{ _063_ }} & _011__X ;
  logic [4:0] FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_C1 ;
  logic [4:0] FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_R1 ;
  logic [4:0] FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_X1 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_C1 = { 5{ !_063_ }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_R1 = { 5{ !_063_ }} & ( _011__R | ( { 5{ _063__T  }} & _011__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_X1 = { 5{ !_063_ }} & _011__X ;
  assign _045_ = and_48_rgt ? FpMantRNE_24U_11U_else_acc_nl : FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1[9:0];
  logic [0:0] and_48_rgt_C1 ;
  logic [0:0] and_48_rgt_R1 ;
  logic [0:0] and_48_rgt_X1 ;
  assign and_48_rgt_C1 = | _045__C ;
  assign and_48_rgt_X1 = | _045__X ;
  assign _045__T = and_48_rgt ? ( { 10{ and_48_rgt_T  }} | FpMantRNE_24U_11U_else_acc_nl_T ) : ( { 10{ and_48_rgt_T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_T [9:0] );
  assign _045__S = and_48_rgt ? FpMantRNE_24U_11U_else_acc_nl_S : FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_S ;
  assign and_48_rgt_R1 = ( | (_045__R | ( _045__C & ( { 10{ and_48_rgt }} & FpMantRNE_24U_11U_else_acc_nl_T | { 10{ !and_48_rgt }} & FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_T [9:0] )))) && FpMantRNE_24U_11U_else_acc_nl != FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1[9:0] ;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R3 [24], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R3 [25], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R3 [26], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R3 [27] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X3 [24], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X3 [25], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X3 [26], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X3 [27] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C3 [24], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C3 [25], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C3 [26], FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C3 [27] } = 0;
  logic [9:0] FpMantRNE_24U_11U_else_acc_nl_C0 ;
  logic [9:0] FpMantRNE_24U_11U_else_acc_nl_R0 ;
  logic [9:0] FpMantRNE_24U_11U_else_acc_nl_X0 ;
  assign FpMantRNE_24U_11U_else_acc_nl_C0 = { 10{ and_48_rgt }} ;
  assign FpMantRNE_24U_11U_else_acc_nl_R0 = { 10{ and_48_rgt }} & ( _045__R | ( { 10{ and_48_rgt_T  }} & _045__C ));
  assign FpMantRNE_24U_11U_else_acc_nl_X0 = { 10{ and_48_rgt }} & _045__X ;
  logic [28:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C4 ;
  logic [28:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R4 ;
  logic [28:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X4 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C4 [9:0] = { 10{ !and_48_rgt }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R4 [9:0] = { 10{ !and_48_rgt }} & ( _045__R | ( { 10{ and_48_rgt_T  }} & _045__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X4 [9:0] = { 10{ !and_48_rgt }} & _045__X ;
  assign _016_ = _061_ ? _045_ : FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1;
  logic [0:0] _061__C0 ;
  logic [0:0] _061__R0 ;
  logic [0:0] _061__X0 ;
  assign _061__C0 = | _016__C ;
  assign _061__X0 = | _016__X ;
  assign _016__T = _061_ ? ( { 10{ _061__T  }} | _045__T ) : ( { 10{ _061__T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_T );
  assign _016__S = _061_ ? _045__S : FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_S ;
  assign _061__R0 = ( | (_016__R | ( _016__C & ( { 10{ _061_ }} & _045__T | { 10{ !_061_ }} & FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_T )))) && _045_ != FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1 ;
  logic [9:0] _045__C0 ;
  logic [9:0] _045__R0 ;
  logic [9:0] _045__X0 ;
  assign _045__C0 = { 10{ _061_ }} ;
  assign _045__R0 = { 10{ _061_ }} & ( _016__R | ( { 10{ _061__T  }} & _016__C ));
  assign _045__X0 = { 10{ _061_ }} & _016__X ;
  logic [9:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_C1 ;
  logic [9:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_R1 ;
  logic [9:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_X1 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_C1 = { 10{ !_061_ }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_R1 = { 10{ !_061_ }} & ( _016__R | ( { 10{ _061__T  }} & _016__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_X1 = { 10{ !_061_ }} & _016__X ;
  assign _029_ = _058_ ? FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0 : FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5;
  logic [0:0] _058__C0 ;
  logic [0:0] _058__R0 ;
  logic [0:0] _058__X0 ;
  assign _058__C0 = | _029__C ;
  assign _058__X0 = | _029__X ;
  assign _029__T = _058_ ? ( { 1{ _058__T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_T ) : ( { 1{ _058__T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_T );
  assign _029__S = _058_ ? FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_S : FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_S ;
  assign _058__R0 = ( | (_029__R | ( _029__C & ( { 1{ _058_ }} & FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_T | { 1{ !_058_ }} & FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_T )))) && FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0 != FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_C3 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_R3 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_X3 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_C3 = { 1{ _058_ }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_R3 = { 1{ _058_ }} & ( _029__R | ( { 1{ _058__T  }} & _029__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_X3 = { 1{ _058_ }} & _029__X ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_C2 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_R2 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_X2 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_C2 = { 1{ !_058_ }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_R2 = { 1{ !_058_ }} & ( _029__R | ( { 1{ _058__T  }} & _029__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_X2 = { 1{ !_058_ }} & _029__X ;
  assign _012_ = Fp32ToFp17_and_1_cse ? _157_ : FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1;
  logic [0:0] Fp32ToFp17_and_1_cse_C0 ;
  logic [0:0] Fp32ToFp17_and_1_cse_R0 ;
  logic [0:0] Fp32ToFp17_and_1_cse_X0 ;
  assign Fp32ToFp17_and_1_cse_C0 = | _012__C ;
  assign Fp32ToFp17_and_1_cse_X0 = | _012__X ;
  assign _012__T = Fp32ToFp17_and_1_cse ? ( { 1{ Fp32ToFp17_and_1_cse_T  }} | _157__T ) : ( { 1{ Fp32ToFp17_and_1_cse_T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_T );
  assign _012__S = Fp32ToFp17_and_1_cse ? _157__S : FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_S ;
  assign Fp32ToFp17_and_1_cse_R0 = ( | (_012__R | ( _012__C & ( { 1{ Fp32ToFp17_and_1_cse }} & _157__T | { 1{ !Fp32ToFp17_and_1_cse }} & FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_T )))) && _157_ != FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1 ;
  logic [0:0] _157__C0 ;
  logic [0:0] _157__R0 ;
  logic [0:0] _157__X0 ;
  assign _157__C0 = { 1{ Fp32ToFp17_and_1_cse }} ;
  assign _157__R0 = { 1{ Fp32ToFp17_and_1_cse }} & ( _012__R | ( { 1{ Fp32ToFp17_and_1_cse_T  }} & _012__C ));
  assign _157__X0 = { 1{ Fp32ToFp17_and_1_cse }} & _012__X ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_C1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_R1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_X1 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_C1 = { 1{ !Fp32ToFp17_and_1_cse }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_R1 = { 1{ !Fp32ToFp17_and_1_cse }} & ( _012__R | ( { 1{ Fp32ToFp17_and_1_cse_T  }} & _012__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_X1 = { 1{ !Fp32ToFp17_and_1_cse }} & _012__X ;
  assign _015_ = Fp32ToFp17_and_1_cse ? FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1 : FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1;
  logic [0:0] Fp32ToFp17_and_1_cse_C1 ;
  logic [0:0] Fp32ToFp17_and_1_cse_R1 ;
  logic [0:0] Fp32ToFp17_and_1_cse_X1 ;
  assign Fp32ToFp17_and_1_cse_C1 = | _015__C ;
  assign Fp32ToFp17_and_1_cse_X1 = | _015__X ;
  assign _015__T = Fp32ToFp17_and_1_cse ? ( { 1{ Fp32ToFp17_and_1_cse_T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_T ) : ( { 1{ Fp32ToFp17_and_1_cse_T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_T );
  assign _015__S = Fp32ToFp17_and_1_cse ? FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_S : FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_S ;
  assign Fp32ToFp17_and_1_cse_R1 = ( | (_015__R | ( _015__C & ( { 1{ Fp32ToFp17_and_1_cse }} & FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_T | { 1{ !Fp32ToFp17_and_1_cse }} & FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_T )))) && FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1 != FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_C0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_R0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_X0 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_C0 = { 1{ Fp32ToFp17_and_1_cse }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_R0 = { 1{ Fp32ToFp17_and_1_cse }} & ( _015__R | ( { 1{ Fp32ToFp17_and_1_cse_T  }} & _015__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_X0 = { 1{ Fp32ToFp17_and_1_cse }} & _015__X ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_C0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_R0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_X0 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_C0 = { 1{ !Fp32ToFp17_and_1_cse }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_R0 = { 1{ !Fp32ToFp17_and_1_cse }} & ( _015__R | ( { 1{ Fp32ToFp17_and_1_cse_T  }} & _015__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_X0 = { 1{ !Fp32ToFp17_and_1_cse }} & _015__X ;
  assign _024_ = Fp32ToFp17_and_1_cse ? FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4;
  logic [0:0] Fp32ToFp17_and_1_cse_C2 ;
  logic [0:0] Fp32ToFp17_and_1_cse_R2 ;
  logic [0:0] Fp32ToFp17_and_1_cse_X2 ;
  assign Fp32ToFp17_and_1_cse_C2 = | _024__C ;
  assign Fp32ToFp17_and_1_cse_X2 = | _024__X ;
  assign _024__T = Fp32ToFp17_and_1_cse ? ( { 1{ Fp32ToFp17_and_1_cse_T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_T ) : ( { 1{ Fp32ToFp17_and_1_cse_T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_T );
  assign _024__S = Fp32ToFp17_and_1_cse ? FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_S : FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_S ;
  assign Fp32ToFp17_and_1_cse_R2 = ( | (_024__R | ( _024__C & ( { 1{ Fp32ToFp17_and_1_cse }} & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_T | { 1{ !Fp32ToFp17_and_1_cse }} & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_T )))) && FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3 != FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_C4 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_R4 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_X4 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_C4 = { 1{ Fp32ToFp17_and_1_cse }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_R4 = { 1{ Fp32ToFp17_and_1_cse }} & ( _024__R | ( { 1{ Fp32ToFp17_and_1_cse_T  }} & _024__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_X4 = { 1{ Fp32ToFp17_and_1_cse }} & _024__X ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_C2 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_R2 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_X2 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_C2 = { 1{ !Fp32ToFp17_and_1_cse }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_R2 = { 1{ !Fp32ToFp17_and_1_cse }} & ( _024__R | ( { 1{ Fp32ToFp17_and_1_cse_T  }} & _024__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_X2 = { 1{ !Fp32ToFp17_and_1_cse }} & _024__X ;
  assign _027_ = Fp32ToFp17_and_1_cse ? FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3 : FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4;
  logic [0:0] Fp32ToFp17_and_1_cse_C3 ;
  logic [0:0] Fp32ToFp17_and_1_cse_R3 ;
  logic [0:0] Fp32ToFp17_and_1_cse_X3 ;
  assign Fp32ToFp17_and_1_cse_C3 = | _027__C ;
  assign Fp32ToFp17_and_1_cse_X3 = | _027__X ;
  assign _027__T = Fp32ToFp17_and_1_cse ? ( { 1{ Fp32ToFp17_and_1_cse_T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_T ) : ( { 1{ Fp32ToFp17_and_1_cse_T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_T );
  assign _027__S = Fp32ToFp17_and_1_cse ? FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_S : FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_S ;
  assign Fp32ToFp17_and_1_cse_R3 = ( | (_027__R | ( _027__C & ( { 1{ Fp32ToFp17_and_1_cse }} & FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_T | { 1{ !Fp32ToFp17_and_1_cse }} & FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_T )))) && FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3 != FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_C8 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_R8 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X8 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_C8 = { 1{ Fp32ToFp17_and_1_cse }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_R8 = { 1{ Fp32ToFp17_and_1_cse }} & ( _027__R | ( { 1{ Fp32ToFp17_and_1_cse_T  }} & _027__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X8 = { 1{ Fp32ToFp17_and_1_cse }} & _027__X ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_C4 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_R4 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_X4 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_C4 = { 1{ !Fp32ToFp17_and_1_cse }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_R4 = { 1{ !Fp32ToFp17_and_1_cse }} & ( _027__R | ( { 1{ Fp32ToFp17_and_1_cse_T  }} & _027__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_X4 = { 1{ !Fp32ToFp17_and_1_cse }} & _027__X ;
  assign _019_ = Fp32ToFp17_and_1_cse ? FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4;
  logic [0:0] Fp32ToFp17_and_1_cse_C4 ;
  logic [0:0] Fp32ToFp17_and_1_cse_R4 ;
  logic [0:0] Fp32ToFp17_and_1_cse_X4 ;
  assign Fp32ToFp17_and_1_cse_C4 = | _019__C ;
  assign Fp32ToFp17_and_1_cse_X4 = | _019__X ;
  assign _019__T = Fp32ToFp17_and_1_cse ? ( { 1{ Fp32ToFp17_and_1_cse_T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_T ) : ( { 1{ Fp32ToFp17_and_1_cse_T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_T );
  assign _019__S = Fp32ToFp17_and_1_cse ? FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_S : FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_S ;
  assign Fp32ToFp17_and_1_cse_R4 = ( | (_019__R | ( _019__C & ( { 1{ Fp32ToFp17_and_1_cse }} & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_T | { 1{ !Fp32ToFp17_and_1_cse }} & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_T )))) && FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3 != FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_C5 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_R5 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_X5 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_C5 = { 1{ Fp32ToFp17_and_1_cse }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_R5 = { 1{ Fp32ToFp17_and_1_cse }} & ( _019__R | ( { 1{ Fp32ToFp17_and_1_cse_T  }} & _019__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_X5 = { 1{ Fp32ToFp17_and_1_cse }} & _019__X ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_C3 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_R3 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_X3 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_C3 = { 1{ !Fp32ToFp17_and_1_cse }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_R3 = { 1{ !Fp32ToFp17_and_1_cse }} & ( _019__R | ( { 1{ Fp32ToFp17_and_1_cse_T  }} & _019__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_X3 = { 1{ !Fp32ToFp17_and_1_cse }} & _019__X ;
  assign _031_ = Fp32ToFp17_and_1_cse ? nor_16_cse : IsNaN_8U_23U_land_lpi_1_dfm_2;
  logic [0:0] Fp32ToFp17_and_1_cse_C5 ;
  logic [0:0] Fp32ToFp17_and_1_cse_R5 ;
  logic [0:0] Fp32ToFp17_and_1_cse_X5 ;
  assign Fp32ToFp17_and_1_cse_C5 = | _031__C ;
  assign Fp32ToFp17_and_1_cse_X5 = | _031__X ;
  assign _031__T = Fp32ToFp17_and_1_cse ? ( { 1{ Fp32ToFp17_and_1_cse_T  }} | nor_16_cse_T ) : ( { 1{ Fp32ToFp17_and_1_cse_T  }} | IsNaN_8U_23U_land_lpi_1_dfm_2_T );
  assign _031__S = Fp32ToFp17_and_1_cse ? nor_16_cse_S : IsNaN_8U_23U_land_lpi_1_dfm_2_S ;
  assign Fp32ToFp17_and_1_cse_R5 = ( | (_031__R | ( _031__C & ( { 1{ Fp32ToFp17_and_1_cse }} & nor_16_cse_T | { 1{ !Fp32ToFp17_and_1_cse }} & IsNaN_8U_23U_land_lpi_1_dfm_2_T )))) && nor_16_cse != IsNaN_8U_23U_land_lpi_1_dfm_2 ;
  logic [0:0] nor_16_cse_C1 ;
  logic [0:0] nor_16_cse_R1 ;
  logic [0:0] nor_16_cse_X1 ;
  assign nor_16_cse_C1 = { 1{ Fp32ToFp17_and_1_cse }} ;
  assign nor_16_cse_R1 = { 1{ Fp32ToFp17_and_1_cse }} & ( _031__R | ( { 1{ Fp32ToFp17_and_1_cse_T  }} & _031__C ));
  assign nor_16_cse_X1 = { 1{ Fp32ToFp17_and_1_cse }} & _031__X ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_2_C5 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_2_R5 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_2_X5 ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_2_C5 = { 1{ !Fp32ToFp17_and_1_cse }} ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_2_R5 = { 1{ !Fp32ToFp17_and_1_cse }} & ( _031__R | ( { 1{ Fp32ToFp17_and_1_cse_T  }} & _031__C ));
  assign IsNaN_8U_23U_land_lpi_1_dfm_2_X5 = { 1{ !Fp32ToFp17_and_1_cse }} & _031__X ;
  assign _026_ = _056_ ? FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4;
  logic [0:0] _056__C0 ;
  logic [0:0] _056__R0 ;
  logic [0:0] _056__X0 ;
  assign _056__C0 = | _026__C ;
  assign _056__X0 = | _026__X ;
  assign _026__T = _056_ ? ( { 1{ _056__T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_T ) : ( { 1{ _056__T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_T );
  assign _026__S = _056_ ? FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_S : FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_S ;
  assign _056__R0 = ( | (_026__R | ( _026__C & ( { 1{ _056_ }} & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_T | { 1{ !_056_ }} & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_T )))) && FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3 != FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_C7 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_R7 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X7 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_C7 = { 1{ _056_ }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_R7 = { 1{ _056_ }} & ( _026__R | ( { 1{ _056__T  }} & _026__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X7 = { 1{ _056_ }} & _026__X ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_C3 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_R3 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_X3 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_C3 = { 1{ !_056_ }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_R3 = { 1{ !_056_ }} & ( _026__R | ( { 1{ _056__T  }} & _026__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_X3 = { 1{ !_056_ }} & _026__X ;
  assign _021_ = _055_ ? FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4;
  logic [0:0] _055__C0 ;
  logic [0:0] _055__R0 ;
  logic [0:0] _055__X0 ;
  assign _055__C0 = | _021__C ;
  assign _055__X0 = | _021__X ;
  assign _021__T = _055_ ? ( { 1{ _055__T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_T ) : ( { 1{ _055__T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_T );
  assign _021__S = _055_ ? FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_S : FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_S ;
  assign _055__R0 = ( | (_021__R | ( _021__C & ( { 1{ _055_ }} & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_T | { 1{ !_055_ }} & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_T )))) && FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3 != FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_C4 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_R4 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_X4 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_C4 = { 1{ _055_ }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_R4 = { 1{ _055_ }} & ( _021__R | ( { 1{ _055__T  }} & _021__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_X4 = { 1{ _055_ }} & _021__X ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_C1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_R1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_X1 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_C1 = { 1{ !_055_ }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_R1 = { 1{ !_055_ }} & ( _021__R | ( { 1{ _055__T  }} & _021__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_X1 = { 1{ !_055_ }} & _021__X ;
  assign _005_ = FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse ? _054_ : FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2;
  logic [0:0] FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_C0 ;
  logic [0:0] FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_R0 ;
  logic [0:0] FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_X0 ;
  assign FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_C0 = | _005__C ;
  assign FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_X0 = | _005__X ;
  assign _005__T = FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse ? ( { 1{ FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_T  }} | _054__T ) : ( { 1{ FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_T  }} | FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_T );
  assign _005__S = FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse ? _054__S : FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_S ;
  assign FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_R0 = ( | (_005__R | ( _005__C & ( { 1{ FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse }} & _054__T | { 1{ !FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse }} & FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_T )))) && _054_ != FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2 ;
  logic [0:0] _054__C0 ;
  logic [0:0] _054__R0 ;
  logic [0:0] _054__X0 ;
  assign _054__C0 = { 1{ FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse }} ;
  assign _054__R0 = { 1{ FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse }} & ( _005__R | ( { 1{ FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_T  }} & _005__C ));
  assign _054__X0 = { 1{ FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse }} & _005__X ;
  logic [0:0] FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_C1 ;
  logic [0:0] FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_R1 ;
  logic [0:0] FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_X1 ;
  assign FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_C1 = { 1{ !FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse }} ;
  assign FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_R1 = { 1{ !FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse }} & ( _005__R | ( { 1{ FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_T  }} & _005__C ));
  assign FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_X1 = { 1{ !FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse }} & _005__X ;
  assign _006_ = FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse ? FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm[23:13] : FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2;
  logic [0:0] FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_C1 ;
  logic [0:0] FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_R1 ;
  logic [0:0] FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_X1 ;
  assign FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_C1 = | _006__C ;
  assign FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_X1 = | _006__X ;
  assign _006__T = FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse ? ( { 11{ FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_T  }} | FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_T [23:13] ) : ( { 11{ FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_T  }} | FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_T );
  assign _006__S = FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse ? FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_S : FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_S ;
  assign FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_R1 = ( | (_006__R | ( _006__C & ( { 11{ FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse }} & FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_T [23:13] | { 11{ !FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse }} & FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_T )))) && FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm[23:13] != FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2 ;
  logic [23:0] FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_C0 ;
  logic [23:0] FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_R0 ;
  logic [23:0] FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_X0 ;
  assign FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_C0 [23:13] = { 11{ FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse }} ;
  assign FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_R0 [23:13] = { 11{ FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse }} & ( _006__R | ( { 11{ FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_T  }} & _006__C ));
  assign FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_X0 [23:13] = { 11{ FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse }} & _006__X ;
  logic [10:0] FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_C1 ;
  logic [10:0] FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_R1 ;
  logic [10:0] FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_X1 ;
  assign FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_C1 = { 11{ !FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse }} ;
  assign FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_R1 = { 11{ !FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse }} & ( _006__R | ( { 11{ FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_T  }} & _006__C ));
  assign FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_X1 = { 11{ !FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse }} & _006__X ;
  assign _041_ = _053_ ? _117_ : main_stage_v_2;
  logic [0:0] _053__C0 ;
  logic [0:0] _053__R0 ;
  logic [0:0] _053__X0 ;
  assign _053__C0 = | _041__C ;
  assign _053__X0 = | _041__X ;
  assign _041__T = _053_ ? ( { 1{ _053__T  }} | _117__T ) : ( { 1{ _053__T  }} | main_stage_v_2_T );
  assign _041__S = _053_ ? _117__S : main_stage_v_2_S ;
  assign _053__R0 = ( | (_041__R | ( _041__C & ( { 1{ _053_ }} & _117__T | { 1{ !_053_ }} & main_stage_v_2_T )))) && _117_ != main_stage_v_2 ;
  logic [0:0] _117__C0 ;
  logic [0:0] _117__R0 ;
  logic [0:0] _117__X0 ;
  assign _117__C0 = { 1{ _053_ }} ;
  assign _117__R0 = { 1{ _053_ }} & ( _041__R | ( { 1{ _053__T  }} & _041__C ));
  assign _117__X0 = { 1{ _053_ }} & _041__X ;
  logic [0:0] main_stage_v_2_C6 ;
  logic [0:0] main_stage_v_2_R6 ;
  logic [0:0] main_stage_v_2_X6 ;
  assign main_stage_v_2_C6 = { 1{ !_053_ }} ;
  assign main_stage_v_2_R6 = { 1{ !_053_ }} & ( _041__R | ( { 1{ _053__T  }} & _041__C ));
  assign main_stage_v_2_X6 = { 1{ !_053_ }} & _041__X ;
  assign _014_ = FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse ? chn_a_rsci_d_mxwt[31] : FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_C0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_R0 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_X0 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_C0 = | _014__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_X0 = | _014__X ;
  assign _014__T = FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse ? ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_T  }} | chn_a_rsci_d_mxwt_T [31] ) : ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_T );
  assign _014__S = FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse ? chn_a_rsci_d_mxwt_S : FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_S ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_R0 = ( | (_014__R | ( _014__C & ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} & chn_a_rsci_d_mxwt_T [31] | { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} & FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_T )))) && chn_a_rsci_d_mxwt[31] != FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1 ;
  assign chn_a_rsci_d_mxwt_C4 [31] = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} ;
  assign chn_a_rsci_d_mxwt_R4 [31] = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} & ( _014__R | ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_T  }} & _014__C ));
  assign chn_a_rsci_d_mxwt_X4 [31] = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} & _014__X ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_C1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_R1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_X1 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_C1 = { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_R1 = { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} & ( _014__R | ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_T  }} & _014__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_X1 = { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} & _014__X ;
  assign _028_ = FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse ? FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl[8] : FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_C1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_R1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_X1 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_C1 = | _028__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_X1 = | _028__X ;
  assign _028__T = FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse ? ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_T [8] ) : ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_T );
  assign _028__S = FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse ? FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_S : FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_S ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_R1 = ( | (_028__R | ( _028__C & ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} & FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_T [8] | { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} & FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_T )))) && FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl[8] != FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3 ;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R3 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R3 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R3 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R3 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R3 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R3 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R3 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R3 [7] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X3 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X3 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X3 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X3 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X3 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X3 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X3 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X3 [7] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C3 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C3 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C3 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C3 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C3 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C3 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C3 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C3 [7] } = 0;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C4 ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R4 ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X4 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C4 [8] = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R4 [8] = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} & ( _028__R | ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_T  }} & _028__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X4 [8] = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} & _028__X ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_C9 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_R9 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X9 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_C9 = { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_R9 = { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} & ( _028__R | ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_T  }} & _028__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X9 = { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} & _028__X ;
  assign _018_ = FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse ? FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl[8] : FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_C2 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_R2 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_X2 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_C2 = | _018__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_X2 = | _018__X ;
  assign _018__T = FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse ? ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_T [8] ) : ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_T );
  assign _018__S = FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse ? FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_S : FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_S ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_R2 = ( | (_018__R | ( _018__C & ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_T [8] | { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_T )))) && FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl[8] != FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3 ;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R2 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R2 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R2 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R2 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R2 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R2 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R2 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R2 [7] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X2 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X2 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X2 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X2 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X2 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X2 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X2 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X2 [7] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C2 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C2 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C2 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C2 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C2 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C2 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C2 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C2 [7] } = 0;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C3 ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R3 ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X3 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C3 [8] = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R3 [8] = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} & ( _018__R | ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_T  }} & _018__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X3 [8] = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} & _018__X ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_C6 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_R6 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_X6 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_C6 = { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_R6 = { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} & ( _018__R | ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_T  }} & _018__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_X6 = { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} & _018__X ;
  assign _030_ = FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse ? IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp : IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_C3 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_R3 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_X3 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_C3 = | _030__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_X3 = | _030__X ;
  assign _030__T = FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse ? ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_T  }} | IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_T ) : ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_T  }} | IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_T );
  assign _030__S = FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse ? IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_S : IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_S ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_R3 = ( | (_030__R | ( _030__C & ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} & IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_T | { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} & IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_T )))) && IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp != IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2 ;
  logic [0:0] IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_C1 ;
  logic [0:0] IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_R1 ;
  logic [0:0] IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_X1 ;
  assign IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_C1 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} ;
  assign IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_R1 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} & ( _030__R | ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_T  }} & _030__C ));
  assign IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_X1 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} & _030__X ;
  logic [0:0] IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_C2 ;
  logic [0:0] IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_R2 ;
  logic [0:0] IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_X2 ;
  assign IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_C2 = { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} ;
  assign IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_R2 = { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} & ( _030__R | ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_T  }} & _030__C ));
  assign IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_X2 = { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} & _030__X ;
  assign _032_ = FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse ? IsNaN_8U_23U_nor_tmp : IsNaN_8U_23U_nor_itm_2;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_C4 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_R4 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_X4 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_C4 = | _032__C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_X4 = | _032__X ;
  assign _032__T = FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse ? ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_T  }} | IsNaN_8U_23U_nor_tmp_T ) : ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_T  }} | IsNaN_8U_23U_nor_itm_2_T );
  assign _032__S = FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse ? IsNaN_8U_23U_nor_tmp_S : IsNaN_8U_23U_nor_itm_2_S ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_R4 = ( | (_032__R | ( _032__C & ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} & IsNaN_8U_23U_nor_tmp_T | { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} & IsNaN_8U_23U_nor_itm_2_T )))) && IsNaN_8U_23U_nor_tmp != IsNaN_8U_23U_nor_itm_2 ;
  logic [0:0] IsNaN_8U_23U_nor_tmp_C1 ;
  logic [0:0] IsNaN_8U_23U_nor_tmp_R1 ;
  logic [0:0] IsNaN_8U_23U_nor_tmp_X1 ;
  assign IsNaN_8U_23U_nor_tmp_C1 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} ;
  assign IsNaN_8U_23U_nor_tmp_R1 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} & ( _032__R | ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_T  }} & _032__C ));
  assign IsNaN_8U_23U_nor_tmp_X1 = { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} & _032__X ;
  logic [0:0] IsNaN_8U_23U_nor_itm_2_C2 ;
  logic [0:0] IsNaN_8U_23U_nor_itm_2_R2 ;
  logic [0:0] IsNaN_8U_23U_nor_itm_2_X2 ;
  assign IsNaN_8U_23U_nor_itm_2_C2 = { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} ;
  assign IsNaN_8U_23U_nor_itm_2_R2 = { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} & ( _032__R | ( { 1{ FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_T  }} & _032__C ));
  assign IsNaN_8U_23U_nor_itm_2_X2 = { 1{ !FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse }} & _032__X ;
  assign _025_ = _052_ ? FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl[7] : FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3;
  logic [0:0] _052__C0 ;
  logic [0:0] _052__R0 ;
  logic [0:0] _052__X0 ;
  assign _052__C0 = | _025__C ;
  assign _052__X0 = | _025__X ;
  assign _025__T = _052_ ? ( { 1{ _052__T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_T [7] ) : ( { 1{ _052__T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_T );
  assign _025__S = _052_ ? FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_S : FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_S ;
  assign _052__R0 = ( | (_025__R | ( _025__C & ( { 1{ _052_ }} & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_T [7] | { 1{ !_052_ }} & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_T )))) && FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl[7] != FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3 ;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R8 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R8 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R8 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R8 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R8 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R8 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R8 [6] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X8 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X8 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X8 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X8 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X8 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X8 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X8 [6] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C8 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C8 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C8 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C8 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C8 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C8 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C8 [6] } = 0;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C9 ;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R9 ;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X9 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C9 [7] = { 1{ _052_ }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R9 [7] = { 1{ _052_ }} & ( _025__R | ( { 1{ _052__T  }} & _025__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X9 [7] = { 1{ _052_ }} & _025__X ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_C8 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_R8 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X8 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_C8 = { 1{ !_052_ }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_R8 = { 1{ !_052_ }} & ( _025__R | ( { 1{ _052__T  }} & _025__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X8 = { 1{ !_052_ }} & _025__X ;
  assign _020_ = _051_ ? FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl[8] : FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3;
  logic [0:0] _051__C0 ;
  logic [0:0] _051__R0 ;
  logic [0:0] _051__X0 ;
  assign _051__C0 = | _020__C ;
  assign _051__X0 = | _020__X ;
  assign _020__T = _051_ ? ( { 1{ _051__T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_T [8] ) : ( { 1{ _051__T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_T );
  assign _020__S = _051_ ? FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_S : FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_S ;
  assign _051__R0 = ( | (_020__R | ( _020__C & ( { 1{ _051_ }} & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_T [8] | { 1{ !_051_ }} & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_T )))) && FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl[8] != FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3 ;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R3 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R3 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R3 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R3 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R3 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R3 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R3 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R3 [7] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X3 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X3 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X3 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X3 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X3 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X3 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X3 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X3 [7] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C3 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C3 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C3 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C3 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C3 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C3 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C3 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C3 [7] } = 0;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C4 ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R4 ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X4 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C4 [8] = { 1{ _051_ }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R4 [8] = { 1{ _051_ }} & ( _020__R | ( { 1{ _051__T  }} & _020__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X4 [8] = { 1{ _051_ }} & _020__X ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_C5 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_R5 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_X5 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_C5 = { 1{ !_051_ }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_R5 = { 1{ !_051_ }} & ( _020__R | ( { 1{ _051__T  }} & _020__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_X5 = { 1{ !_051_ }} & _020__X ;
  assign _009_ = _050_ ? FpMantRNE_24U_11U_else_and_svs_mx0w0 : FpMantRNE_24U_11U_else_and_svs_st_2;
  logic [0:0] _050__C0 ;
  logic [0:0] _050__R0 ;
  logic [0:0] _050__X0 ;
  assign _050__C0 = | _009__C ;
  assign _050__X0 = | _009__X ;
  assign _009__T = _050_ ? ( { 1{ _050__T  }} | FpMantRNE_24U_11U_else_and_svs_mx0w0_T ) : ( { 1{ _050__T  }} | FpMantRNE_24U_11U_else_and_svs_st_2_T );
  assign _009__S = _050_ ? FpMantRNE_24U_11U_else_and_svs_mx0w0_S : FpMantRNE_24U_11U_else_and_svs_st_2_S ;
  assign _050__R0 = ( | (_009__R | ( _009__C & ( { 1{ _050_ }} & FpMantRNE_24U_11U_else_and_svs_mx0w0_T | { 1{ !_050_ }} & FpMantRNE_24U_11U_else_and_svs_st_2_T )))) && FpMantRNE_24U_11U_else_and_svs_mx0w0 != FpMantRNE_24U_11U_else_and_svs_st_2 ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_mx0w0_C2 ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_mx0w0_R2 ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_mx0w0_X2 ;
  assign FpMantRNE_24U_11U_else_and_svs_mx0w0_C2 = { 1{ _050_ }} ;
  assign FpMantRNE_24U_11U_else_and_svs_mx0w0_R2 = { 1{ _050_ }} & ( _009__R | ( { 1{ _050__T  }} & _009__C ));
  assign FpMantRNE_24U_11U_else_and_svs_mx0w0_X2 = { 1{ _050_ }} & _009__X ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_st_2_C1 ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_st_2_R1 ;
  logic [0:0] FpMantRNE_24U_11U_else_and_svs_st_2_X1 ;
  assign FpMantRNE_24U_11U_else_and_svs_st_2_C1 = { 1{ !_050_ }} ;
  assign FpMantRNE_24U_11U_else_and_svs_st_2_R1 = { 1{ !_050_ }} & ( _009__R | ( { 1{ _050__T  }} & _009__C ));
  assign FpMantRNE_24U_11U_else_and_svs_st_2_X1 = { 1{ !_050_ }} & _009__X ;
  assign _013_ = _049_ ? chn_a_rsci_d_mxwt[28:0] : FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1;
  logic [0:0] _049__C0 ;
  logic [0:0] _049__R0 ;
  logic [0:0] _049__X0 ;
  assign _049__C0 = | _013__C ;
  assign _049__X0 = | _013__X ;
  assign _013__T = _049_ ? ( { 29{ _049__T  }} | chn_a_rsci_d_mxwt_T [28:0] ) : ( { 29{ _049__T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_T );
  assign _013__S = _049_ ? chn_a_rsci_d_mxwt_S : FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_S ;
  assign _049__R0 = ( | (_013__R | ( _013__C & ( { 29{ _049_ }} & chn_a_rsci_d_mxwt_T [28:0] | { 29{ !_049_ }} & FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_T )))) && chn_a_rsci_d_mxwt[28:0] != FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1 ;
  assign { chn_a_rsci_d_mxwt_R4 [12], chn_a_rsci_d_mxwt_R4 [14], chn_a_rsci_d_mxwt_R4 [15], chn_a_rsci_d_mxwt_R4 [16], chn_a_rsci_d_mxwt_R4 [17], chn_a_rsci_d_mxwt_R4 [18], chn_a_rsci_d_mxwt_R4 [19], chn_a_rsci_d_mxwt_R4 [20], chn_a_rsci_d_mxwt_R4 [21], chn_a_rsci_d_mxwt_R4 [22] } = 0;
  assign { chn_a_rsci_d_mxwt_X4 [12], chn_a_rsci_d_mxwt_X4 [14], chn_a_rsci_d_mxwt_X4 [15], chn_a_rsci_d_mxwt_X4 [16], chn_a_rsci_d_mxwt_X4 [17], chn_a_rsci_d_mxwt_X4 [18], chn_a_rsci_d_mxwt_X4 [19], chn_a_rsci_d_mxwt_X4 [20], chn_a_rsci_d_mxwt_X4 [21], chn_a_rsci_d_mxwt_X4 [22] } = 0;
  assign { chn_a_rsci_d_mxwt_C4 [12], chn_a_rsci_d_mxwt_C4 [14], chn_a_rsci_d_mxwt_C4 [15], chn_a_rsci_d_mxwt_C4 [16], chn_a_rsci_d_mxwt_C4 [17], chn_a_rsci_d_mxwt_C4 [18], chn_a_rsci_d_mxwt_C4 [19], chn_a_rsci_d_mxwt_C4 [20], chn_a_rsci_d_mxwt_C4 [21], chn_a_rsci_d_mxwt_C4 [22] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R4 [28:10] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X4 [28:10] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C4 [28:10] } = 0;
  logic [31:0] chn_a_rsci_d_mxwt_C5 ;
  logic [31:0] chn_a_rsci_d_mxwt_R5 ;
  logic [31:0] chn_a_rsci_d_mxwt_X5 ;
  assign chn_a_rsci_d_mxwt_C5 [28:0] = { 29{ _049_ }} ;
  assign chn_a_rsci_d_mxwt_R5 [28:0] = { 29{ _049_ }} & ( _013__R | ( { 29{ _049__T  }} & _013__C ));
  assign chn_a_rsci_d_mxwt_X5 [28:0] = { 29{ _049_ }} & _013__X ;
  logic [28:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C5 ;
  logic [28:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R5 ;
  logic [28:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X5 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C5 = { 29{ !_049_ }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R5 = { 29{ !_049_ }} & ( _013__R | ( { 29{ _049__T  }} & _013__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X5 = { 29{ !_049_ }} & _013__X ;
  assign _017_ = _107_ ? nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2;
  logic [0:0] _107__C0 ;
  logic [0:0] _107__R0 ;
  logic [0:0] _107__X0 ;
  assign _107__C0 = | _017__C ;
  assign _107__X0 = | _017__X ;
  assign _017__T = _107_ ? ( { 3{ _107__T  }} | nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_T ) : ( { 3{ _107__T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_T );
  assign _017__S = _107_ ? nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_S : FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_S ;
  assign _107__R0 = ( | (_017__R | ( _017__C & ( { 3{ _107_ }} & nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_T | { 3{ !_107_ }} & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_T )))) && nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2 != FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2 ;
  logic [2:0] nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_C0 ;
  logic [2:0] nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_R0 ;
  logic [2:0] nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_X0 ;
  assign nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_C0 = { 3{ _107_ }} ;
  assign nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_R0 = { 3{ _107_ }} & ( _017__R | ( { 3{ _107__T  }} & _017__C ));
  assign nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_X0 = { 3{ _107_ }} & _017__X ;
  logic [2:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_C1 ;
  logic [2:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_R1 ;
  logic [2:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_X1 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_C1 = { 3{ !_107_ }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_R1 = { 3{ !_107_ }} & ( _017__R | ( { 3{ _107__T  }} & _017__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_X1 = { 3{ !_107_ }} & _017__X ;
  assign _040_ = _106_ ? _152_ : main_stage_v_1;
  logic [0:0] _106__C0 ;
  logic [0:0] _106__R0 ;
  logic [0:0] _106__X0 ;
  assign _106__C0 = | _040__C ;
  assign _106__X0 = | _040__X ;
  assign _040__T = _106_ ? ( { 1{ _106__T  }} | _152__T ) : ( { 1{ _106__T  }} | main_stage_v_1_T );
  assign _040__S = _106_ ? _152__S : main_stage_v_1_S ;
  assign _106__R0 = ( | (_040__R | ( _040__C & ( { 1{ _106_ }} & _152__T | { 1{ !_106_ }} & main_stage_v_1_T )))) && _152_ != main_stage_v_1 ;
  logic [0:0] _152__C0 ;
  logic [0:0] _152__R0 ;
  logic [0:0] _152__X0 ;
  assign _152__C0 = { 1{ _106_ }} ;
  assign _152__R0 = { 1{ _106_ }} & ( _040__R | ( { 1{ _106__T  }} & _040__C ));
  assign _152__X0 = { 1{ _106_ }} & _040__X ;
  logic [0:0] main_stage_v_1_C7 ;
  logic [0:0] main_stage_v_1_R7 ;
  logic [0:0] main_stage_v_1_X7 ;
  assign main_stage_v_1_C7 = { 1{ !_106_ }} ;
  assign main_stage_v_1_R7 = { 1{ !_106_ }} & ( _040__R | ( { 1{ _106__T  }} & _040__C ));
  assign main_stage_v_1_X7 = { 1{ !_106_ }} & _040__X ;
  assign _042_ = _105_ ? _151_ : reg_chn_o_rsci_ld_core_psct_cse;
  logic [0:0] _105__C0 ;
  logic [0:0] _105__R0 ;
  logic [0:0] _105__X0 ;
  assign _105__C0 = | _042__C ;
  assign _105__X0 = | _042__X ;
  assign _042__T = _105_ ? ( { 1{ _105__T  }} | _151__T ) : ( { 1{ _105__T  }} | reg_chn_o_rsci_ld_core_psct_cse_T );
  assign _042__S = _105_ ? _151__S : reg_chn_o_rsci_ld_core_psct_cse_S ;
  assign _105__R0 = ( | (_042__R | ( _042__C & ( { 1{ _105_ }} & _151__T | { 1{ !_105_ }} & reg_chn_o_rsci_ld_core_psct_cse_T )))) && _151_ != reg_chn_o_rsci_ld_core_psct_cse ;
  logic [0:0] _151__C0 ;
  logic [0:0] _151__R0 ;
  logic [0:0] _151__X0 ;
  assign _151__C0 = { 1{ _105_ }} ;
  assign _151__R0 = { 1{ _105_ }} & ( _042__R | ( { 1{ _105__T  }} & _042__C ));
  assign _151__X0 = { 1{ _105_ }} & _042__X ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C4 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R4 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X4 ;
  assign reg_chn_o_rsci_ld_core_psct_cse_C4 = { 1{ !_105_ }} ;
  assign reg_chn_o_rsci_ld_core_psct_cse_R4 = { 1{ !_105_ }} & ( _042__R | ( { 1{ _105__T  }} & _042__C ));
  assign reg_chn_o_rsci_ld_core_psct_cse_X4 = { 1{ !_105_ }} & _042__X ;
  assign _046_ = chn_o_rsci_d_9_0_mx0c1 ? FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_1_nl : FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1;
  logic [0:0] chn_o_rsci_d_9_0_mx0c1_C1 ;
  logic [0:0] chn_o_rsci_d_9_0_mx0c1_R1 ;
  logic [0:0] chn_o_rsci_d_9_0_mx0c1_X1 ;
  assign chn_o_rsci_d_9_0_mx0c1_C1 = | _046__C ;
  assign chn_o_rsci_d_9_0_mx0c1_X1 = | _046__X ;
  assign _046__T = chn_o_rsci_d_9_0_mx0c1 ? ( { 10{ chn_o_rsci_d_9_0_mx0c1_T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_1_nl_T ) : ( { 10{ chn_o_rsci_d_9_0_mx0c1_T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_T );
  assign _046__S = chn_o_rsci_d_9_0_mx0c1 ? FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_1_nl_S : FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_S ;
  assign chn_o_rsci_d_9_0_mx0c1_R1 = ( | (_046__R | ( _046__C & ( { 10{ chn_o_rsci_d_9_0_mx0c1 }} & FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_1_nl_T | { 10{ !chn_o_rsci_d_9_0_mx0c1 }} & FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_T )))) && FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_1_nl != FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1 ;
  logic [9:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_1_nl_C0 ;
  logic [9:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_1_nl_R0 ;
  logic [9:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_1_nl_X0 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_1_nl_C0 = { 10{ chn_o_rsci_d_9_0_mx0c1 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_1_nl_R0 = { 10{ chn_o_rsci_d_9_0_mx0c1 }} & ( _046__R | ( { 10{ chn_o_rsci_d_9_0_mx0c1_T  }} & _046__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_1_nl_X0 = { 10{ chn_o_rsci_d_9_0_mx0c1 }} & _046__X ;
  logic [9:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_C2 ;
  logic [9:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_R2 ;
  logic [9:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_X2 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_C2 = { 10{ !chn_o_rsci_d_9_0_mx0c1 }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_R2 = { 10{ !chn_o_rsci_d_9_0_mx0c1 }} & ( _046__R | ( { 10{ chn_o_rsci_d_9_0_mx0c1_T  }} & _046__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_X2 = { 10{ !chn_o_rsci_d_9_0_mx0c1 }} & _046__X ;
  assign _038_ = _104_ ? _046_ : chn_o_rsci_d_9_0;
  logic [0:0] _104__C0 ;
  logic [0:0] _104__R0 ;
  logic [0:0] _104__X0 ;
  assign _104__C0 = | _038__C ;
  assign _104__X0 = | _038__X ;
  assign _038__T = _104_ ? ( { 10{ _104__T  }} | _046__T ) : ( { 10{ _104__T  }} | chn_o_rsci_d_9_0_T );
  assign _038__S = _104_ ? _046__S : chn_o_rsci_d_9_0_S ;
  assign _104__R0 = ( | (_038__R | ( _038__C & ( { 10{ _104_ }} & _046__T | { 10{ !_104_ }} & chn_o_rsci_d_9_0_T )))) && _046_ != chn_o_rsci_d_9_0 ;
  logic [9:0] _046__C0 ;
  logic [9:0] _046__R0 ;
  logic [9:0] _046__X0 ;
  assign _046__C0 = { 10{ _104_ }} ;
  assign _046__R0 = { 10{ _104_ }} & ( _038__R | ( { 10{ _104__T  }} & _038__C ));
  assign _046__X0 = { 10{ _104_ }} & _038__X ;
  logic [9:0] chn_o_rsci_d_9_0_C0 ;
  logic [9:0] chn_o_rsci_d_9_0_R0 ;
  logic [9:0] chn_o_rsci_d_9_0_X0 ;
  assign chn_o_rsci_d_9_0_C0 = { 10{ !_104_ }} ;
  assign chn_o_rsci_d_9_0_R0 = { 10{ !_104_ }} & ( _038__R | ( { 10{ _104__T  }} & _038__C ));
  assign chn_o_rsci_d_9_0_X0 = { 10{ !_104_ }} & _038__X ;
  assign _047_ = IsNaN_8U_23U_land_lpi_1_dfm_2 ? 5'b11111 : FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_and_nl;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_2_C6 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_2_R6 ;
  logic [0:0] IsNaN_8U_23U_land_lpi_1_dfm_2_X6 ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_2_C6 = | _047__C ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_2_X6 = | _047__X ;
  logic [4:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_and_nl_C0 ;
  logic [4:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_and_nl_R0 ;
  logic [4:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_and_nl_X0 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_and_nl_C0 = { 5{ !IsNaN_8U_23U_land_lpi_1_dfm_2 }};
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_and_nl_R0 = { 5{ !IsNaN_8U_23U_land_lpi_1_dfm_2 }} & ( _047__R | ( { 5{ IsNaN_8U_23U_land_lpi_1_dfm_2_T  }} & _047__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_and_nl_X0 = { 5{ !IsNaN_8U_23U_land_lpi_1_dfm_2 }} & _047__X ;
  assign _047__T = IsNaN_8U_23U_land_lpi_1_dfm_2 ? { 5{ | IsNaN_8U_23U_land_lpi_1_dfm_2_T  }} : ( { 5{ | IsNaN_8U_23U_land_lpi_1_dfm_2_T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_and_nl_T );
  assign _047__S = IsNaN_8U_23U_land_lpi_1_dfm_2 ? IsNaN_8U_23U_land_lpi_1_dfm_2_S : FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_and_nl_S ;
  assign IsNaN_8U_23U_land_lpi_1_dfm_2_R6 = ( | (_047__R | ( { 5{ !IsNaN_8U_23U_land_lpi_1_dfm_2 }} & FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_and_nl_T & _047__C ))) && 5'b11111 != FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_and_nl ;
  assign _035_ = chn_o_and_cse ? _047_ : chn_o_rsci_d_14_10;
  logic [0:0] chn_o_and_cse_C0 ;
  logic [0:0] chn_o_and_cse_R0 ;
  logic [0:0] chn_o_and_cse_X0 ;
  assign chn_o_and_cse_C0 = | _035__C ;
  assign chn_o_and_cse_X0 = | _035__X ;
  assign _035__T = chn_o_and_cse ? ( { 5{ chn_o_and_cse_T  }} | _047__T ) : ( { 5{ chn_o_and_cse_T  }} | chn_o_rsci_d_14_10_T );
  assign _035__S = chn_o_and_cse ? _047__S : chn_o_rsci_d_14_10_S ;
  assign chn_o_and_cse_R0 = ( | (_035__R | ( _035__C & ( { 5{ chn_o_and_cse }} & _047__T | { 5{ !chn_o_and_cse }} & chn_o_rsci_d_14_10_T )))) && _047_ != chn_o_rsci_d_14_10 ;
  logic [4:0] _047__C0 ;
  logic [4:0] _047__R0 ;
  logic [4:0] _047__X0 ;
  assign _047__C0 = { 5{ chn_o_and_cse }} ;
  assign _047__R0 = { 5{ chn_o_and_cse }} & ( _035__R | ( { 5{ chn_o_and_cse_T  }} & _035__C ));
  assign _047__X0 = { 5{ chn_o_and_cse }} & _035__X ;
  logic [4:0] chn_o_rsci_d_14_10_C0 ;
  logic [4:0] chn_o_rsci_d_14_10_R0 ;
  logic [4:0] chn_o_rsci_d_14_10_X0 ;
  assign chn_o_rsci_d_14_10_C0 = { 5{ !chn_o_and_cse }} ;
  assign chn_o_rsci_d_14_10_R0 = { 5{ !chn_o_and_cse }} & ( _035__R | ( { 5{ chn_o_and_cse_T  }} & _035__C ));
  assign chn_o_rsci_d_14_10_X0 = { 5{ !chn_o_and_cse }} & _035__X ;
  assign _036_ = chn_o_and_cse ? _223_ : chn_o_rsci_d_15;
  logic [0:0] chn_o_and_cse_C1 ;
  logic [0:0] chn_o_and_cse_R1 ;
  logic [0:0] chn_o_and_cse_X1 ;
  assign chn_o_and_cse_C1 = | _036__C ;
  assign chn_o_and_cse_X1 = | _036__X ;
  assign _036__T = chn_o_and_cse ? ( { 1{ chn_o_and_cse_T  }} | _223__T ) : ( { 1{ chn_o_and_cse_T  }} | chn_o_rsci_d_15_T );
  assign _036__S = chn_o_and_cse ? _223__S : chn_o_rsci_d_15_S ;
  assign chn_o_and_cse_R1 = ( | (_036__R | ( _036__C & ( { 1{ chn_o_and_cse }} & _223__T | { 1{ !chn_o_and_cse }} & chn_o_rsci_d_15_T )))) && _223_ != chn_o_rsci_d_15 ;
  logic [0:0] _223__C0 ;
  logic [0:0] _223__R0 ;
  logic [0:0] _223__X0 ;
  assign _223__C0 = { 1{ chn_o_and_cse }} ;
  assign _223__R0 = { 1{ chn_o_and_cse }} & ( _036__R | ( { 1{ chn_o_and_cse_T  }} & _036__C ));
  assign _223__X0 = { 1{ chn_o_and_cse }} & _036__X ;
  logic [0:0] chn_o_rsci_d_15_C0 ;
  logic [0:0] chn_o_rsci_d_15_R0 ;
  logic [0:0] chn_o_rsci_d_15_X0 ;
  assign chn_o_rsci_d_15_C0 = { 1{ !chn_o_and_cse }} ;
  assign chn_o_rsci_d_15_R0 = { 1{ !chn_o_and_cse }} & ( _036__R | ( { 1{ chn_o_and_cse_T  }} & _036__C ));
  assign chn_o_rsci_d_15_X0 = { 1{ !chn_o_and_cse }} & _036__X ;
  assign _037_ = chn_o_and_cse ? FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1 : chn_o_rsci_d_16;
  logic [0:0] chn_o_and_cse_C2 ;
  logic [0:0] chn_o_and_cse_R2 ;
  logic [0:0] chn_o_and_cse_X2 ;
  assign chn_o_and_cse_C2 = | _037__C ;
  assign chn_o_and_cse_X2 = | _037__X ;
  assign _037__T = chn_o_and_cse ? ( { 1{ chn_o_and_cse_T  }} | FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_T ) : ( { 1{ chn_o_and_cse_T  }} | chn_o_rsci_d_16_T );
  assign _037__S = chn_o_and_cse ? FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_S : chn_o_rsci_d_16_S ;
  assign chn_o_and_cse_R2 = ( | (_037__R | ( _037__C & ( { 1{ chn_o_and_cse }} & FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_T | { 1{ !chn_o_and_cse }} & chn_o_rsci_d_16_T )))) && FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1 != chn_o_rsci_d_16 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_C1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_R1 ;
  logic [0:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_X1 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_C1 = { 1{ chn_o_and_cse }} ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_R1 = { 1{ chn_o_and_cse }} & ( _037__R | ( { 1{ chn_o_and_cse_T  }} & _037__C ));
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_X1 = { 1{ chn_o_and_cse }} & _037__X ;
  logic [0:0] chn_o_rsci_d_16_C0 ;
  logic [0:0] chn_o_rsci_d_16_R0 ;
  logic [0:0] chn_o_rsci_d_16_X0 ;
  assign chn_o_rsci_d_16_C0 = { 1{ !chn_o_and_cse }} ;
  assign chn_o_rsci_d_16_R0 = { 1{ !chn_o_and_cse }} & ( _037__R | ( { 1{ chn_o_and_cse_T  }} & _037__C ));
  assign chn_o_rsci_d_16_X0 = { 1{ !chn_o_and_cse }} & _037__X ;
  assign _034_ = _101_ ? chn_a_rsci_ld_core_psct_mx0c0 : chn_a_rsci_ld_core_psct;
  logic [0:0] _101__C0 ;
  logic [0:0] _101__R0 ;
  logic [0:0] _101__X0 ;
  assign _101__C0 = | _034__C ;
  assign _101__X0 = | _034__X ;
  assign _034__T = _101_ ? ( { 1{ _101__T  }} | chn_a_rsci_ld_core_psct_mx0c0_T ) : ( { 1{ _101__T  }} | chn_a_rsci_ld_core_psct_T );
  assign _034__S = _101_ ? chn_a_rsci_ld_core_psct_mx0c0_S : chn_a_rsci_ld_core_psct_S ;
  assign _101__R0 = ( | (_034__R | ( _034__C & ( { 1{ _101_ }} & chn_a_rsci_ld_core_psct_mx0c0_T | { 1{ !_101_ }} & chn_a_rsci_ld_core_psct_T )))) && chn_a_rsci_ld_core_psct_mx0c0 != chn_a_rsci_ld_core_psct ;
  logic [0:0] chn_a_rsci_ld_core_psct_mx0c0_C1 ;
  logic [0:0] chn_a_rsci_ld_core_psct_mx0c0_R1 ;
  logic [0:0] chn_a_rsci_ld_core_psct_mx0c0_X1 ;
  assign chn_a_rsci_ld_core_psct_mx0c0_C1 = { 1{ _101_ }} ;
  assign chn_a_rsci_ld_core_psct_mx0c0_R1 = { 1{ _101_ }} & ( _034__R | ( { 1{ _101__T  }} & _034__C ));
  assign chn_a_rsci_ld_core_psct_mx0c0_X1 = { 1{ _101_ }} & _034__X ;
  logic [0:0] chn_a_rsci_ld_core_psct_C0 ;
  logic [0:0] chn_a_rsci_ld_core_psct_R0 ;
  logic [0:0] chn_a_rsci_ld_core_psct_X0 ;
  assign chn_a_rsci_ld_core_psct_C0 = { 1{ !_101_ }} ;
  assign chn_a_rsci_ld_core_psct_R0 = { 1{ !_101_ }} & ( _034__R | ( { 1{ _101__T  }} & _034__C ));
  assign chn_a_rsci_ld_core_psct_X0 = { 1{ !_101_ }} & _034__X ;
  assign _033_ = core_wen ? _149_ : chn_a_rsci_iswt0;
  logic [0:0] core_wen_C13 ;
  logic [0:0] core_wen_R13 ;
  logic [0:0] core_wen_X13 ;
  assign core_wen_C13 = | _033__C ;
  assign core_wen_X13 = | _033__X ;
  assign _033__T = core_wen ? ( { 1{ core_wen_T  }} | _149__T ) : ( { 1{ core_wen_T  }} | chn_a_rsci_iswt0_T );
  assign _033__S = core_wen ? _149__S : chn_a_rsci_iswt0_S ;
  assign core_wen_R13 = ( | (_033__R | ( _033__C & ( { 1{ core_wen }} & _149__T | { 1{ !core_wen }} & chn_a_rsci_iswt0_T )))) && _149_ != chn_a_rsci_iswt0 ;
  logic [0:0] _149__C0 ;
  logic [0:0] _149__R0 ;
  logic [0:0] _149__X0 ;
  assign _149__C0 = { 1{ core_wen }} ;
  assign _149__R0 = { 1{ core_wen }} & ( _033__R | ( { 1{ core_wen_T  }} & _033__C ));
  assign _149__X0 = { 1{ core_wen }} & _033__X ;
  logic [0:0] chn_a_rsci_iswt0_C0 ;
  logic [0:0] chn_a_rsci_iswt0_R0 ;
  logic [0:0] chn_a_rsci_iswt0_X0 ;
  assign chn_a_rsci_iswt0_C0 = { 1{ !core_wen }} ;
  assign chn_a_rsci_iswt0_R0 = { 1{ !core_wen }} & ( _033__R | ( { 1{ core_wen_T  }} & _033__C ));
  assign chn_a_rsci_iswt0_X0 = { 1{ !core_wen }} & _033__X ;
  assign _039_ = core_wen ? and_dcpl_15 : chn_o_rsci_iswt0;
  logic [0:0] core_wen_C14 ;
  logic [0:0] core_wen_R14 ;
  logic [0:0] core_wen_X14 ;
  assign core_wen_C14 = | _039__C ;
  assign core_wen_X14 = | _039__X ;
  assign _039__T = core_wen ? ( { 1{ core_wen_T  }} | and_dcpl_15_T ) : ( { 1{ core_wen_T  }} | chn_o_rsci_iswt0_T );
  assign _039__S = core_wen ? and_dcpl_15_S : chn_o_rsci_iswt0_S ;
  assign core_wen_R14 = ( | (_039__R | ( _039__C & ( { 1{ core_wen }} & and_dcpl_15_T | { 1{ !core_wen }} & chn_o_rsci_iswt0_T )))) && and_dcpl_15 != chn_o_rsci_iswt0 ;
  logic [0:0] and_dcpl_15_C3 ;
  logic [0:0] and_dcpl_15_R3 ;
  logic [0:0] and_dcpl_15_X3 ;
  assign and_dcpl_15_C3 = { 1{ core_wen }} ;
  assign and_dcpl_15_R3 = { 1{ core_wen }} & ( _039__R | ( { 1{ core_wen_T  }} & _039__C ));
  assign and_dcpl_15_X3 = { 1{ core_wen }} & _039__X ;
  logic [0:0] chn_o_rsci_iswt0_C0 ;
  logic [0:0] chn_o_rsci_iswt0_R0 ;
  logic [0:0] chn_o_rsci_iswt0_X0 ;
  assign chn_o_rsci_iswt0_C0 = { 1{ !core_wen }} ;
  assign chn_o_rsci_iswt0_R0 = { 1{ !core_wen }} & ( _039__R | ( { 1{ core_wen_T  }} & _039__C ));
  assign chn_o_rsci_iswt0_X0 = { 1{ !core_wen }} & _039__X ;
  logic [4:0] nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_lshift_rg_s_R0 ;
  logic [4:0] nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_lshift_rg_s_X0 ;
  logic [4:0] nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_lshift_rg_s_C0 ;
// module: \$paramod\FP32_TO_FP17_mgc_shift_l_v4\width_a=1\signd_a=0\width_s=5\width_z=24
  \$paramod\FP32_TO_FP17_mgc_shift_l_v4\width_a=1\signd_a=0\width_s=5\width_z=24 FpMantDecShiftRight_23U_8U_10U_guard_mask_lshift_rg (
    .a_T (  1'h0  ),
    .a_R (  nouse_zy0  ),
    .a_X (  nouse_zy1  ),
    .a_C (  nouse_zy2  ),
    .a_S ( 1'h0 ),
    .s_T (  nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_lshift_rg_s_T  ),
    .s_R (  nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_lshift_rg_s_R0  ),
    .s_X (  nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_lshift_rg_s_X0  ),
    .s_C (  nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_lshift_rg_s_C0  ),
    .s_S (  nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_lshift_rg_s_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .rst_zy(rst_zy),
    .z_T (  FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_T  ),
    .z_R0 (  FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_R  ),
    .z_X0 (  FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_X  ),
    .z_C0 (  FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_C  ),
    .z_S ( FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_S ),
    .z ( FpMantDecShiftRight_23U_8U_10U_guard_mask_sva ),
    .a ( 1'b1 ),
    .s ( nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_lshift_rg_s )
  );
  logic [1-1:0] nouse_zy0 ;
  logic [1-1:0] nouse_zy1 ;
  logic [1-1:0] nouse_zy2 ;
  logic [28:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R6 ;
  logic [28:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X6 ;
  logic [28:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C6 ;
  assign { nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_R0 [3:1] } = 0;
  assign { nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_X0 [3:1] } = 0;
  assign { nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_C0 [3:1] } = 0;
  logic [2:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_R2 ;
  logic [2:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_X2 ;
  logic [2:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_C2 ;
  logic [3:0] nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_R1 ;
  logic [3:0] nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_X1 ;
  logic [3:0] nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_C1 ;
// module: \$paramod\FP32_TO_FP17_mgc_shift_r_v4\width_a=24\signd_a=0\width_s=4\width_z=24
  \$paramod\FP32_TO_FP17_mgc_shift_r_v4\width_a=24\signd_a=0\width_s=4\width_z=24 FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg (
    .a_T ( {  1'h0 , FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_T [22:0]  } ),
    .a_R ( {  nouse_zy3 , FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R6 [22:0]  } ),
    .a_X ( {  nouse_zy4 , FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X6 [22:0]  } ),
    .a_C ( {  nouse_zy5 , FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C6 [22:0]  } ),
    .a_S ( {  1'h0 , FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_S [22:0]  } ),
    .s_T ( {  FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_T , nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_T [0]  } ),
    .s_R ( {  FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_R2 , nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_R1 [0]  } ),
    .s_X ( {  FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_X2 , nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_X1 [0]  } ),
    .s_C ( {  FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_C2 , nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_C1 [0]  } ),
    .s_S ( {  FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_S , nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_S [0]  } ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .rst_zy(rst_zy),
    .z_T (  FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_T  ),
    .z_R0 (  FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_R  ),
    .z_X0 (  FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_X  ),
    .z_C0 (  FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_C  ),
    .z_S ( FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_S ),
    .z ( FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm ),
    .a ( { 1'b1, FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1[22:0] } ),
    .s ( { FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2, nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s[0] } )
  );
  logic [1-1:0] nouse_zy3 ;
  logic [1-1:0] nouse_zy4 ;
  logic [1-1:0] nouse_zy5 ;
  logic [4:0] FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_R1 ;
  logic [4:0] FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_X1 ;
  logic [4:0] FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_C1 ;
// module: \$paramod\FP32_TO_FP17_mgc_shift_l_v4\width_a=1\signd_a=0\width_s=5\width_z=24
  \$paramod\FP32_TO_FP17_mgc_shift_l_v4\width_a=1\signd_a=0\width_s=5\width_z=24 FpMantDecShiftRight_23U_8U_10U_least_mask_lshift_rg (
    .a_T (  1'h0  ),
    .a_R (  nouse_zy6  ),
    .a_X (  nouse_zy7  ),
    .a_C (  nouse_zy8  ),
    .a_S ( 1'h0 ),
    .s_T (  FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_T  ),
    .s_R (  FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_R1  ),
    .s_X (  FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_X1  ),
    .s_C (  FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_C1  ),
    .s_S (  FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .rst_zy(rst_zy),
    .z_T (  FpMantDecShiftRight_23U_8U_10U_least_mask_sva_T  ),
    .z_R0 (  FpMantDecShiftRight_23U_8U_10U_least_mask_sva_R  ),
    .z_X0 (  FpMantDecShiftRight_23U_8U_10U_least_mask_sva_X  ),
    .z_C0 (  FpMantDecShiftRight_23U_8U_10U_least_mask_sva_C  ),
    .z_S ( FpMantDecShiftRight_23U_8U_10U_least_mask_sva_S ),
    .z ( FpMantDecShiftRight_23U_8U_10U_least_mask_sva ),
    .a ( 1'b1 ),
    .s ( FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva )
  );
  logic [1-1:0] nouse_zy6 ;
  logic [1-1:0] nouse_zy7 ;
  logic [1-1:0] nouse_zy8 ;
  logic [0:0] chn_a_rsc_vz_R0 ;
  logic [0:0] chn_a_rsc_vz_X0 ;
  logic [0:0] chn_a_rsc_vz_C0 ;
  logic [31:0] chn_a_rsc_z_R0 ;
  logic [31:0] chn_a_rsc_z_X0 ;
  logic [31:0] chn_a_rsc_z_C0 ;
  logic [0:0] chn_a_rsci_iswt0_R1 ;
  logic [0:0] chn_a_rsci_iswt0_X1 ;
  logic [0:0] chn_a_rsci_iswt0_C1 ;
  logic [0:0] chn_a_rsci_ld_core_psct_R1 ;
  logic [0:0] chn_a_rsci_ld_core_psct_X1 ;
  logic [0:0] chn_a_rsci_ld_core_psct_C1 ;
  logic [0:0] chn_a_rsci_oswt_R0 ;
  logic [0:0] chn_a_rsci_oswt_X0 ;
  logic [0:0] chn_a_rsci_oswt_C0 ;
  logic [0:0] core_wen_R15 ;
  logic [0:0] core_wen_X15 ;
  logic [0:0] core_wen_C15 ;
  logic [0:0] core_wten_R0 ;
  logic [0:0] core_wten_X0 ;
  logic [0:0] core_wten_C0 ;
  logic [0:0] nvdla_core_rstn_R0 ;
  logic [0:0] nvdla_core_rstn_X0 ;
  logic [0:0] nvdla_core_rstn_C0 ;
// module: HLS_fp32_to_fp17_core_chn_a_rsci
  HLS_fp32_to_fp17_core_chn_a_rsci HLS_fp32_to_fp17_core_chn_a_rsci_inst (
    .chn_a_rsc_vz_T (  chn_a_rsc_vz_T  ),
    .chn_a_rsc_vz_R (  chn_a_rsc_vz_R0  ),
    .chn_a_rsc_vz_X (  chn_a_rsc_vz_X0  ),
    .chn_a_rsc_vz_C (  chn_a_rsc_vz_C0  ),
    .chn_a_rsc_vz_S (  chn_a_rsc_vz_S  ),
    .chn_a_rsc_z_T (  chn_a_rsc_z_T  ),
    .chn_a_rsc_z_R (  chn_a_rsc_z_R0  ),
    .chn_a_rsc_z_X (  chn_a_rsc_z_X0  ),
    .chn_a_rsc_z_C (  chn_a_rsc_z_C0  ),
    .chn_a_rsc_z_S (  chn_a_rsc_z_S  ),
    .chn_a_rsci_iswt0_T (  chn_a_rsci_iswt0_T  ),
    .chn_a_rsci_iswt0_R (  chn_a_rsci_iswt0_R1  ),
    .chn_a_rsci_iswt0_X (  chn_a_rsci_iswt0_X1  ),
    .chn_a_rsci_iswt0_C (  chn_a_rsci_iswt0_C1  ),
    .chn_a_rsci_iswt0_S (  chn_a_rsci_iswt0_S  ),
    .chn_a_rsci_ld_core_psct_T (  chn_a_rsci_ld_core_psct_T  ),
    .chn_a_rsci_ld_core_psct_R (  chn_a_rsci_ld_core_psct_R1  ),
    .chn_a_rsci_ld_core_psct_X (  chn_a_rsci_ld_core_psct_X1  ),
    .chn_a_rsci_ld_core_psct_C (  chn_a_rsci_ld_core_psct_C1  ),
    .chn_a_rsci_ld_core_psct_S (  chn_a_rsci_ld_core_psct_S  ),
    .chn_a_rsci_oswt_T (  chn_a_rsci_oswt_T  ),
    .chn_a_rsci_oswt_R (  chn_a_rsci_oswt_R0  ),
    .chn_a_rsci_oswt_X (  chn_a_rsci_oswt_X0  ),
    .chn_a_rsci_oswt_C (  chn_a_rsci_oswt_C0  ),
    .chn_a_rsci_oswt_S (  chn_a_rsci_oswt_S  ),
    .core_wen_T (  core_wen_T  ),
    .core_wen_R (  core_wen_R15  ),
    .core_wen_X (  core_wen_X15  ),
    .core_wen_C (  core_wen_C15  ),
    .core_wen_S (  core_wen_S  ),
    .core_wten_T (  core_wten_T  ),
    .core_wten_R (  core_wten_R0  ),
    .core_wten_X (  core_wten_X0  ),
    .core_wten_C (  core_wten_C0  ),
    .core_wten_S (  core_wten_S  ),
    .nvdla_core_rstn_T (  nvdla_core_rstn_T  ),
    .nvdla_core_rstn_R (  nvdla_core_rstn_R0  ),
    .nvdla_core_rstn_X (  nvdla_core_rstn_X0  ),
    .nvdla_core_rstn_C (  nvdla_core_rstn_C0  ),
    .nvdla_core_rstn_S (  nvdla_core_rstn_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .chn_a_rsc_lz_T (  chn_a_rsc_lz_T  ),
    .chn_a_rsc_lz_R0 (  chn_a_rsc_lz_R  ),
    .chn_a_rsc_lz_X0 (  chn_a_rsc_lz_X  ),
    .chn_a_rsc_lz_C0 (  chn_a_rsc_lz_C  ),
    .chn_a_rsc_lz_S ( chn_a_rsc_lz_S ),
    .chn_a_rsci_bawt_T (  chn_a_rsci_bawt_T  ),
    .chn_a_rsci_bawt_R0 (  chn_a_rsci_bawt_R  ),
    .chn_a_rsci_bawt_X0 (  chn_a_rsci_bawt_X  ),
    .chn_a_rsci_bawt_C0 (  chn_a_rsci_bawt_C  ),
    .chn_a_rsci_bawt_S ( chn_a_rsci_bawt_S ),
    .chn_a_rsci_d_mxwt_T (  chn_a_rsci_d_mxwt_T  ),
    .chn_a_rsci_d_mxwt_R0 (  chn_a_rsci_d_mxwt_R  ),
    .chn_a_rsci_d_mxwt_X0 (  chn_a_rsci_d_mxwt_X  ),
    .chn_a_rsci_d_mxwt_C0 (  chn_a_rsci_d_mxwt_C  ),
    .chn_a_rsci_d_mxwt_S ( chn_a_rsci_d_mxwt_S ),
    .chn_a_rsci_wen_comp_T (  chn_a_rsci_wen_comp_T  ),
    .chn_a_rsci_wen_comp_R0 (  chn_a_rsci_wen_comp_R  ),
    .chn_a_rsci_wen_comp_X0 (  chn_a_rsci_wen_comp_X  ),
    .chn_a_rsci_wen_comp_C0 (  chn_a_rsci_wen_comp_C  ),
    .chn_a_rsci_wen_comp_S ( chn_a_rsci_wen_comp_S ),
    .nvdla_core_clk ( nvdla_core_clk ),
    .chn_a_rsci_d_mxwt ( chn_a_rsci_d_mxwt ),
    .core_wten ( core_wten ),
    .chn_a_rsci_bawt ( chn_a_rsci_bawt ),
    .chn_a_rsc_z ( chn_a_rsc_z ),
    .chn_a_rsc_lz ( chn_a_rsc_lz ),
    .chn_a_rsc_vz ( chn_a_rsc_vz ),
    .chn_a_rsci_ld_core_psct ( chn_a_rsci_ld_core_psct ),
    .chn_a_rsci_oswt ( chn_a_rsci_oswt ),
    .nvdla_core_rstn ( nvdla_core_rstn ),
    .chn_a_rsci_wen_comp ( chn_a_rsci_wen_comp ),
    .chn_a_rsci_iswt0 ( chn_a_rsci_iswt0 ),
    .core_wen ( core_wen )
  );
  logic [0:0] chn_o_rsc_vz_R0 ;
  logic [0:0] chn_o_rsc_vz_X0 ;
  logic [0:0] chn_o_rsc_vz_C0 ;
  logic [0:0] chn_o_rsci_d_16_R1 ;
  logic [0:0] chn_o_rsci_d_16_X1 ;
  logic [0:0] chn_o_rsci_d_16_C1 ;
  logic [0:0] chn_o_rsci_d_15_R1 ;
  logic [0:0] chn_o_rsci_d_15_X1 ;
  logic [0:0] chn_o_rsci_d_15_C1 ;
  logic [4:0] chn_o_rsci_d_14_10_R1 ;
  logic [4:0] chn_o_rsci_d_14_10_X1 ;
  logic [4:0] chn_o_rsci_d_14_10_C1 ;
  logic [9:0] chn_o_rsci_d_9_0_R1 ;
  logic [9:0] chn_o_rsci_d_9_0_X1 ;
  logic [9:0] chn_o_rsci_d_9_0_C1 ;
  logic [0:0] chn_o_rsci_iswt0_R1 ;
  logic [0:0] chn_o_rsci_iswt0_X1 ;
  logic [0:0] chn_o_rsci_iswt0_C1 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_R5 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_X5 ;
  logic [0:0] reg_chn_o_rsci_ld_core_psct_cse_C5 ;
  logic [0:0] chn_o_rsci_oswt_R0 ;
  logic [0:0] chn_o_rsci_oswt_X0 ;
  logic [0:0] chn_o_rsci_oswt_C0 ;
  logic [0:0] core_wen_R16 ;
  logic [0:0] core_wen_X16 ;
  logic [0:0] core_wen_C16 ;
  logic [0:0] core_wten_R1 ;
  logic [0:0] core_wten_X1 ;
  logic [0:0] core_wten_C1 ;
  logic [0:0] nvdla_core_rstn_R1 ;
  logic [0:0] nvdla_core_rstn_X1 ;
  logic [0:0] nvdla_core_rstn_C1 ;
// module: HLS_fp32_to_fp17_core_chn_o_rsci
  HLS_fp32_to_fp17_core_chn_o_rsci HLS_fp32_to_fp17_core_chn_o_rsci_inst (
    .chn_o_rsc_vz_T (  chn_o_rsc_vz_T  ),
    .chn_o_rsc_vz_R (  chn_o_rsc_vz_R0  ),
    .chn_o_rsc_vz_X (  chn_o_rsc_vz_X0  ),
    .chn_o_rsc_vz_C (  chn_o_rsc_vz_C0  ),
    .chn_o_rsc_vz_S (  chn_o_rsc_vz_S  ),
    .chn_o_rsci_d_T ( {  chn_o_rsci_d_16_T , chn_o_rsci_d_15_T , chn_o_rsci_d_14_10_T , chn_o_rsci_d_9_0_T  } ),
    .chn_o_rsci_d_R ( {  chn_o_rsci_d_16_R1 , chn_o_rsci_d_15_R1 , chn_o_rsci_d_14_10_R1 , chn_o_rsci_d_9_0_R1  } ),
    .chn_o_rsci_d_X ( {  chn_o_rsci_d_16_X1 , chn_o_rsci_d_15_X1 , chn_o_rsci_d_14_10_X1 , chn_o_rsci_d_9_0_X1  } ),
    .chn_o_rsci_d_C ( {  chn_o_rsci_d_16_C1 , chn_o_rsci_d_15_C1 , chn_o_rsci_d_14_10_C1 , chn_o_rsci_d_9_0_C1  } ),
    .chn_o_rsci_d_S ( {  chn_o_rsci_d_16_S , chn_o_rsci_d_15_S , chn_o_rsci_d_14_10_S , chn_o_rsci_d_9_0_S  } ),
    .chn_o_rsci_iswt0_T (  chn_o_rsci_iswt0_T  ),
    .chn_o_rsci_iswt0_R (  chn_o_rsci_iswt0_R1  ),
    .chn_o_rsci_iswt0_X (  chn_o_rsci_iswt0_X1  ),
    .chn_o_rsci_iswt0_C (  chn_o_rsci_iswt0_C1  ),
    .chn_o_rsci_iswt0_S (  chn_o_rsci_iswt0_S  ),
    .chn_o_rsci_ld_core_psct_T (  reg_chn_o_rsci_ld_core_psct_cse_T  ),
    .chn_o_rsci_ld_core_psct_R (  reg_chn_o_rsci_ld_core_psct_cse_R5  ),
    .chn_o_rsci_ld_core_psct_X (  reg_chn_o_rsci_ld_core_psct_cse_X5  ),
    .chn_o_rsci_ld_core_psct_C (  reg_chn_o_rsci_ld_core_psct_cse_C5  ),
    .chn_o_rsci_ld_core_psct_S (  reg_chn_o_rsci_ld_core_psct_cse_S  ),
    .chn_o_rsci_oswt_T (  chn_o_rsci_oswt_T  ),
    .chn_o_rsci_oswt_R (  chn_o_rsci_oswt_R0  ),
    .chn_o_rsci_oswt_X (  chn_o_rsci_oswt_X0  ),
    .chn_o_rsci_oswt_C (  chn_o_rsci_oswt_C0  ),
    .chn_o_rsci_oswt_S (  chn_o_rsci_oswt_S  ),
    .core_wen_T (  core_wen_T  ),
    .core_wen_R (  core_wen_R16  ),
    .core_wen_X (  core_wen_X16  ),
    .core_wen_C (  core_wen_C16  ),
    .core_wen_S (  core_wen_S  ),
    .core_wten_T (  core_wten_T  ),
    .core_wten_R (  core_wten_R1  ),
    .core_wten_X (  core_wten_X1  ),
    .core_wten_C (  core_wten_C1  ),
    .core_wten_S (  core_wten_S  ),
    .nvdla_core_rstn_T (  nvdla_core_rstn_T  ),
    .nvdla_core_rstn_R (  nvdla_core_rstn_R1  ),
    .nvdla_core_rstn_X (  nvdla_core_rstn_X1  ),
    .nvdla_core_rstn_C (  nvdla_core_rstn_C1  ),
    .nvdla_core_rstn_S (  nvdla_core_rstn_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .chn_o_rsc_lz_T (  chn_o_rsc_lz_T  ),
    .chn_o_rsc_lz_R0 (  chn_o_rsc_lz_R  ),
    .chn_o_rsc_lz_X0 (  chn_o_rsc_lz_X  ),
    .chn_o_rsc_lz_C0 (  chn_o_rsc_lz_C  ),
    .chn_o_rsc_lz_S ( chn_o_rsc_lz_S ),
    .chn_o_rsc_z_T (  chn_o_rsc_z_T  ),
    .chn_o_rsc_z_R0 (  chn_o_rsc_z_R  ),
    .chn_o_rsc_z_X0 (  chn_o_rsc_z_X  ),
    .chn_o_rsc_z_C0 (  chn_o_rsc_z_C  ),
    .chn_o_rsc_z_S ( chn_o_rsc_z_S ),
    .chn_o_rsci_bawt_T (  chn_o_rsci_bawt_T  ),
    .chn_o_rsci_bawt_R0 (  chn_o_rsci_bawt_R  ),
    .chn_o_rsci_bawt_X0 (  chn_o_rsci_bawt_X  ),
    .chn_o_rsci_bawt_C0 (  chn_o_rsci_bawt_C  ),
    .chn_o_rsci_bawt_S ( chn_o_rsci_bawt_S ),
    .chn_o_rsci_wen_comp_T (  chn_o_rsci_wen_comp_T  ),
    .chn_o_rsci_wen_comp_R0 (  chn_o_rsci_wen_comp_R  ),
    .chn_o_rsci_wen_comp_X0 (  chn_o_rsci_wen_comp_X  ),
    .chn_o_rsci_wen_comp_C0 (  chn_o_rsci_wen_comp_C  ),
    .chn_o_rsci_wen_comp_S ( chn_o_rsci_wen_comp_S ),
    .nvdla_core_rstn ( nvdla_core_rstn ),
    .nvdla_core_clk ( nvdla_core_clk ),
    .chn_o_rsci_d ( { chn_o_rsci_d_16, chn_o_rsci_d_15, chn_o_rsci_d_14_10, chn_o_rsci_d_9_0 } ),
    .core_wten ( core_wten ),
    .chn_o_rsc_z ( chn_o_rsc_z ),
    .core_wen ( core_wen ),
    .chn_o_rsc_lz ( chn_o_rsc_lz ),
    .chn_o_rsci_ld_core_psct ( reg_chn_o_rsci_ld_core_psct_cse ),
    .chn_o_rsci_bawt ( chn_o_rsci_bawt ),
    .chn_o_rsc_vz ( chn_o_rsc_vz ),
    .chn_o_rsci_wen_comp ( chn_o_rsci_wen_comp ),
    .chn_o_rsci_iswt0 ( chn_o_rsci_iswt0 ),
    .chn_o_rsci_oswt ( chn_o_rsci_oswt )
  );
  logic [0:0] core_wen_R17 ;
  logic [0:0] core_wen_X17 ;
  logic [0:0] core_wen_C17 ;
  logic [0:0] nvdla_core_rstn_R2 ;
  logic [0:0] nvdla_core_rstn_X2 ;
  logic [0:0] nvdla_core_rstn_C2 ;
// module: HLS_fp32_to_fp17_core_core_fsm
  HLS_fp32_to_fp17_core_core_fsm HLS_fp32_to_fp17_core_core_fsm_inst (
    .core_wen_T (  core_wen_T  ),
    .core_wen_R (  core_wen_R17  ),
    .core_wen_X (  core_wen_X17  ),
    .core_wen_C (  core_wen_C17  ),
    .core_wen_S (  core_wen_S  ),
    .nvdla_core_rstn_T (  nvdla_core_rstn_T  ),
    .nvdla_core_rstn_R (  nvdla_core_rstn_R2  ),
    .nvdla_core_rstn_X (  nvdla_core_rstn_X2  ),
    .nvdla_core_rstn_C (  nvdla_core_rstn_C2  ),
    .nvdla_core_rstn_S (  nvdla_core_rstn_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .fsm_output_T (  fsm_output_T  ),
    .fsm_output_R0 (  fsm_output_R  ),
    .fsm_output_X0 (  fsm_output_X  ),
    .fsm_output_C0 (  fsm_output_C  ),
    .fsm_output_S ( fsm_output_S ),
    .nvdla_core_clk ( nvdla_core_clk ),
    .nvdla_core_rstn ( nvdla_core_rstn ),
    .core_wen ( core_wen ),
    .fsm_output ( fsm_output )
  );
  logic [0:0] chn_a_rsci_wen_comp_R0 ;
  logic [0:0] chn_a_rsci_wen_comp_X0 ;
  logic [0:0] chn_a_rsci_wen_comp_C0 ;
  logic [0:0] chn_o_rsci_wen_comp_R0 ;
  logic [0:0] chn_o_rsci_wen_comp_X0 ;
  logic [0:0] chn_o_rsci_wen_comp_C0 ;
  logic [0:0] nvdla_core_rstn_R3 ;
  logic [0:0] nvdla_core_rstn_X3 ;
  logic [0:0] nvdla_core_rstn_C3 ;
// module: HLS_fp32_to_fp17_core_staller
  HLS_fp32_to_fp17_core_staller HLS_fp32_to_fp17_core_staller_inst (
    .chn_a_rsci_wen_comp_T (  chn_a_rsci_wen_comp_T  ),
    .chn_a_rsci_wen_comp_R (  chn_a_rsci_wen_comp_R0  ),
    .chn_a_rsci_wen_comp_X (  chn_a_rsci_wen_comp_X0  ),
    .chn_a_rsci_wen_comp_C (  chn_a_rsci_wen_comp_C0  ),
    .chn_a_rsci_wen_comp_S (  chn_a_rsci_wen_comp_S  ),
    .chn_o_rsci_wen_comp_T (  chn_o_rsci_wen_comp_T  ),
    .chn_o_rsci_wen_comp_R (  chn_o_rsci_wen_comp_R0  ),
    .chn_o_rsci_wen_comp_X (  chn_o_rsci_wen_comp_X0  ),
    .chn_o_rsci_wen_comp_C (  chn_o_rsci_wen_comp_C0  ),
    .chn_o_rsci_wen_comp_S (  chn_o_rsci_wen_comp_S  ),
    .nvdla_core_rstn_T (  nvdla_core_rstn_T  ),
    .nvdla_core_rstn_R (  nvdla_core_rstn_R3  ),
    .nvdla_core_rstn_X (  nvdla_core_rstn_X3  ),
    .nvdla_core_rstn_C (  nvdla_core_rstn_C3  ),
    .nvdla_core_rstn_S (  nvdla_core_rstn_S  ),
    .INSTR_IN_ZY(INSTR_IN_ZY),
    .core_wen_T (  core_wen_T  ),
    .core_wen_R0 (  core_wen_R  ),
    .core_wen_X0 (  core_wen_X  ),
    .core_wen_C0 (  core_wen_C  ),
    .core_wen_S ( core_wen_S ),
    .core_wten_T (  core_wten_T  ),
    .core_wten_R0 (  core_wten_R  ),
    .core_wten_X0 (  core_wten_X  ),
    .core_wten_C0 (  core_wten_C  ),
    .core_wten_S ( core_wten_S ),
    .chn_o_rsci_wen_comp ( chn_o_rsci_wen_comp ),
    .nvdla_core_rstn ( nvdla_core_rstn ),
    .chn_a_rsci_wen_comp ( chn_a_rsci_wen_comp ),
    .nvdla_core_clk ( nvdla_core_clk ),
    .core_wen ( core_wen ),
    .core_wten ( core_wten )
  );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_acc_itm_8_1 = FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl[8];
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R4 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R4 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R4 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R4 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R4 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R4 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R4 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R4 [7] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X4 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X4 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X4 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X4 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X4 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X4 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X4 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X4 [7] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C4 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C4 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C4 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C4 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C4 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C4 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C4 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C4 [7] } = 0;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C5 ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R5 ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X5 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_acc_itm_8_1_T = FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_T [8] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C5 [8] = FpWidthDec_8U_23U_6U_10U_0U_1U_acc_itm_8_1_C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R5 [8] = FpWidthDec_8U_23U_6U_10U_0U_1U_acc_itm_8_1_R ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X5 [8] = FpWidthDec_8U_23U_6U_10U_0U_1U_acc_itm_8_1_X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_acc_itm_8_1_S = FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_S ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_itm_8_1 = FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl[8];
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R4 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R4 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R4 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R4 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R4 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R4 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R4 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R4 [7] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X4 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X4 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X4 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X4 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X4 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X4 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X4 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X4 [7] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C4 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C4 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C4 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C4 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C4 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C4 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C4 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C4 [7] } = 0;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C5 ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R5 ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X5 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_itm_8_1_T = FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_T [8] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C5 [8] = FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_itm_8_1_C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R5 [8] = FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_itm_8_1_R ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X5 [8] = FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_itm_8_1_X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_itm_8_1_S = FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_S ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_itm_7_1 = FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl[7];
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R9 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R9 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R9 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R9 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R9 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R9 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R9 [6] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X9 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X9 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X9 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X9 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X9 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X9 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X9 [6] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C9 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C9 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C9 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C9 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C9 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C9 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C9 [6] } = 0;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C10 ;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R10 ;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X10 ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_itm_7_1_T = FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_T [7] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C10 [7] = FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_itm_7_1_C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R10 [7] = FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_itm_7_1_R ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X10 [7] = FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_itm_7_1_X ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_itm_7_1_S = FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_S ;
  assign chn_a_rsci_oswt_unreg = or_tmp_50;
  logic [0:0] or_tmp_50_C1 ;
  logic [0:0] or_tmp_50_R1 ;
  logic [0:0] or_tmp_50_X1 ;
  assign chn_a_rsci_oswt_unreg_T = or_tmp_50_T ;
  assign or_tmp_50_C1 = chn_a_rsci_oswt_unreg_C ;
  assign or_tmp_50_R1 = chn_a_rsci_oswt_unreg_R ;
  assign or_tmp_50_X1 = chn_a_rsci_oswt_unreg_X ;
  assign chn_a_rsci_oswt_unreg_S = or_tmp_50_S ;
  assign chn_o_rsci_oswt_unreg = and_dcpl_16;
  logic [0:0] and_dcpl_16_C1 ;
  logic [0:0] and_dcpl_16_R1 ;
  logic [0:0] and_dcpl_16_X1 ;
  assign chn_o_rsci_oswt_unreg_T = and_dcpl_16_T ;
  assign and_dcpl_16_C1 = chn_o_rsci_oswt_unreg_C ;
  assign and_dcpl_16_R1 = chn_o_rsci_oswt_unreg_R ;
  assign and_dcpl_16_X1 = chn_o_rsci_oswt_unreg_X ;
  assign chn_o_rsci_oswt_unreg_S = and_dcpl_16_S ;
  assign nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva[4:0] = FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva;
  logic [4:0] FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_C2 ;
  logic [4:0] FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_R2 ;
  logic [4:0] FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_X2 ;
  assign nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_T [4:0] = FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_T ;
  assign FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_C2 = nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_C [4:0] ;
  assign FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_R2 = nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_R [4:0] ;
  assign FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_X2 = nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_X [4:0] ;
  assign nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_S = FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_S ;
  assign nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_a = FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1[22:0];
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R6 [28:23] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X6 [28:23] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C6 [28:23] } = 0;
  logic [28:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C7 ;
  logic [28:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R7 ;
  logic [28:0] FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X7 ;
  assign nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_a_T = FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_T [22:0] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C7 [22:0] = nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_a_C ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R7 [22:0] = nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_a_R ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X7 [22:0] = nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_a_X ;
  assign nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_a_S = FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_S ;
  assign nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s[3:1] = FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2;
  logic [2:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_C3 ;
  logic [2:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_R3 ;
  logic [2:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_X3 ;
  assign nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_T [3:1] = FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_C3 = nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_C [3:1] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_R3 = nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_R [3:1] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_X3 = nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_X [3:1] ;
  assign nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_S = FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_S ;
  assign nl_FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva[10:0] = FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva;
  logic [10:0] FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_C1 ;
  logic [10:0] FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_R1 ;
  logic [10:0] FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_X1 ;
  assign nl_FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_T [10:0] = FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_T ;
  assign FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_C1 = nl_FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_C [10:0] ;
  assign FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_R1 = nl_FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_R [10:0] ;
  assign FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_X1 = nl_FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_X [10:0] ;
  assign nl_FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_S = FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_S ;
  assign nl_FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl[22:0] = FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl;
  logic [22:0] FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_C1 ;
  logic [22:0] FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_R1 ;
  logic [22:0] FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_X1 ;
  assign nl_FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_T [22:0] = FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_T ;
  assign FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_C1 = nl_FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_C [22:0] ;
  assign FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_R1 = nl_FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_R [22:0] ;
  assign FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_X1 = nl_FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_X [22:0] ;
  assign nl_FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_S = FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_S ;
  assign nl_FpMantRNE_24U_11U_else_acc_nl[9:0] = FpMantRNE_24U_11U_else_acc_nl;
  logic [9:0] FpMantRNE_24U_11U_else_acc_nl_C1 ;
  logic [9:0] FpMantRNE_24U_11U_else_acc_nl_R1 ;
  logic [9:0] FpMantRNE_24U_11U_else_acc_nl_X1 ;
  assign nl_FpMantRNE_24U_11U_else_acc_nl_T [9:0] = FpMantRNE_24U_11U_else_acc_nl_T ;
  assign FpMantRNE_24U_11U_else_acc_nl_C1 = nl_FpMantRNE_24U_11U_else_acc_nl_C [9:0] ;
  assign FpMantRNE_24U_11U_else_acc_nl_R1 = nl_FpMantRNE_24U_11U_else_acc_nl_R [9:0] ;
  assign FpMantRNE_24U_11U_else_acc_nl_X1 = nl_FpMantRNE_24U_11U_else_acc_nl_X [9:0] ;
  assign nl_FpMantRNE_24U_11U_else_acc_nl_S = FpMantRNE_24U_11U_else_acc_nl_S ;
  assign nl_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl[8:0] = FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R5 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R5 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R5 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R5 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R5 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R5 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R5 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R5 [7] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X5 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X5 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X5 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X5 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X5 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X5 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X5 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X5 [7] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C5 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C5 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C5 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C5 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C5 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C5 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C5 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C5 [7] } = 0;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C6 ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R6 ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X6 ;
  assign nl_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_T [8:0] = FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C6 = nl_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C [8:0] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R6 = nl_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R [8:0] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X6 = nl_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X [8:0] ;
  assign nl_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_S = FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_S ;
  assign nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl[8:0] = FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R5 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R5 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R5 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R5 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R5 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R5 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R5 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R5 [7] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X5 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X5 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X5 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X5 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X5 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X5 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X5 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X5 [7] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C5 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C5 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C5 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C5 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C5 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C5 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C5 [6], FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C5 [7] } = 0;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C6 ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R6 ;
  logic [8:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X6 ;
  assign nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_T [8:0] = FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C6 = nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C [8:0] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R6 = nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R [8:0] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X6 = nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X [8:0] ;
  assign nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_S = FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_S ;
  assign nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl[7:0] = FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R10 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R10 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R10 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R10 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R10 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R10 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R10 [6] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X10 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X10 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X10 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X10 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X10 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X10 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X10 [6] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C10 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C10 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C10 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C10 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C10 [4], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C10 [5], FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C10 [6] } = 0;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C11 ;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R11 ;
  logic [7:0] FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X11 ;
  assign nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_T [7:0] = FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C11 = nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C [7:0] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R11 = nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R [7:0] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X11 = nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X [7:0] ;
  assign nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_S = FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_S ;
  assign nl_FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3[5:0] = FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_R2 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_R2 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_R2 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_R2 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_R2 [4] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_X2 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_X2 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_X2 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_X2 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_X2 [4] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_C2 [0], FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_C2 [1], FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_C2 [2], FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_C2 [3], FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_C2 [4] } = 0;
  logic [5:0] FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_C3 ;
  logic [5:0] FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_R3 ;
  logic [5:0] FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_X3 ;
  assign nl_FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_T [5:0] = FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_T ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_C3 = nl_FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_C [5:0] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_R3 = nl_FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_R [5:0] ;
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_X3 = nl_FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_X [5:0] ;
  assign nl_FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_S = FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_S ;
  assign nl_HLS_fp32_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d = { chn_o_rsci_d_16, chn_o_rsci_d_15, chn_o_rsci_d_14_10, chn_o_rsci_d_9_0 };
  assign nl_HLS_fp32_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_T = {  chn_o_rsci_d_16_T , chn_o_rsci_d_15_T , chn_o_rsci_d_14_10_T , chn_o_rsci_d_9_0_T  };
  logic [13:0] nl_HLS_fp32_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_S ;
  assign nl_HLS_fp32_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_S = 0 ;
  logic [0:0] chn_o_rsci_d_16_R2 ;
  logic [0:0] chn_o_rsci_d_16_X2 ;
  logic [0:0] chn_o_rsci_d_16_C2 ;
  assign chn_o_rsci_d_16_R2 = nl_HLS_fp32_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_R [16:16] ;
  assign chn_o_rsci_d_16_X2 = nl_HLS_fp32_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_X [16:16] ;
  assign chn_o_rsci_d_16_C2 = nl_HLS_fp32_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_C [16:16] ;
  logic [0:0] chn_o_rsci_d_15_R2 ;
  logic [0:0] chn_o_rsci_d_15_X2 ;
  logic [0:0] chn_o_rsci_d_15_C2 ;
  assign chn_o_rsci_d_15_R2 = nl_HLS_fp32_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_R [15:15] ;
  assign chn_o_rsci_d_15_X2 = nl_HLS_fp32_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_X [15:15] ;
  assign chn_o_rsci_d_15_C2 = nl_HLS_fp32_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_C [15:15] ;
  logic [4:0] chn_o_rsci_d_14_10_R2 ;
  logic [4:0] chn_o_rsci_d_14_10_X2 ;
  logic [4:0] chn_o_rsci_d_14_10_C2 ;
  assign chn_o_rsci_d_14_10_R2 = nl_HLS_fp32_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_R [14:10] ;
  assign chn_o_rsci_d_14_10_X2 = nl_HLS_fp32_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_X [14:10] ;
  assign chn_o_rsci_d_14_10_C2 = nl_HLS_fp32_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_C [14:10] ;
  logic [9:0] chn_o_rsci_d_9_0_R2 ;
  logic [9:0] chn_o_rsci_d_9_0_X2 ;
  logic [9:0] chn_o_rsci_d_9_0_C2 ;
  assign chn_o_rsci_d_9_0_R2 = nl_HLS_fp32_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_R [9:0] ;
  assign chn_o_rsci_d_9_0_X2 = nl_HLS_fp32_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_X [9:0] ;
  assign chn_o_rsci_d_9_0_C2 = nl_HLS_fp32_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_C [9:0] ;
  assign chn_o_rsci_wen_comp_C = ( chn_o_rsci_wen_comp_C0 );
  assign chn_a_rsci_wen_comp_C = ( chn_a_rsci_wen_comp_C0 );
  assign chn_o_rsci_oswt_C = ( chn_o_rsci_oswt_C0 );
  assign chn_o_rsc_vz_C = ( chn_o_rsc_vz_C0 );
  assign nvdla_core_rstn_C = ( nvdla_core_rstn_C0 ) | ( nvdla_core_rstn_C1 ) | ( nvdla_core_rstn_C2 ) | ( nvdla_core_rstn_C3 );
  assign core_wten_C = ( core_wten_C0 ) | ( core_wten_C1 );
  assign chn_a_rsci_oswt_C = ( chn_a_rsci_oswt_C0 );
  assign chn_a_rsc_z_C = ( chn_a_rsc_z_C0 );
  assign chn_a_rsc_vz_C = ( chn_a_rsc_vz_C0 );
  assign chn_o_rsci_iswt0_C = ( chn_o_rsci_iswt0_C0 ) | ( chn_o_rsci_iswt0_C1 );
  assign chn_a_rsci_iswt0_C = ( chn_a_rsci_iswt0_C0 ) | ( chn_a_rsci_iswt0_C1 );
  assign _149__C = ( _149__C0 );
  assign chn_a_rsci_ld_core_psct_C = ( chn_a_rsci_ld_core_psct_C0 ) | ( chn_a_rsci_ld_core_psct_C1 );
  assign _101__C = ( _101__C0 );
  assign chn_o_rsci_d_16_C = ( chn_o_rsci_d_16_C0 ) | ( chn_o_rsci_d_16_C1 ) | ( chn_o_rsci_d_16_C2 );
  assign chn_o_rsci_d_15_C = ( chn_o_rsci_d_15_C0 ) | ( chn_o_rsci_d_15_C1 ) | ( chn_o_rsci_d_15_C2 );
  assign _223__C = ( _223__C0 );
  assign chn_o_rsci_d_14_10_C = ( chn_o_rsci_d_14_10_C0 ) | ( chn_o_rsci_d_14_10_C1 ) | ( chn_o_rsci_d_14_10_C2 );
  assign _047__C = ( _047__C0 );
  assign chn_o_and_cse_C = ( chn_o_and_cse_C0 ) | ( chn_o_and_cse_C1 ) | ( chn_o_and_cse_C2 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_and_nl_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_and_nl_C0 );
  assign chn_o_rsci_d_9_0_C = ( chn_o_rsci_d_9_0_C0 ) | ( chn_o_rsci_d_9_0_C1 ) | ( chn_o_rsci_d_9_0_C2 );
  assign _046__C = ( _046__C0 );
  assign _104__C = ( _104__C0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_1_nl_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_1_nl_C0 );
  assign _151__C = ( _151__C0 );
  assign _105__C = ( _105__C0 );
  assign _152__C = ( _152__C0 );
  assign _106__C = ( _106__C0 );
  assign nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_C = ( nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_C0 );
  assign _107__C = ( _107__C0 );
  assign _049__C = ( _049__C0 );
  assign _050__C = ( _050__C0 );
  assign _051__C = ( _051__C0 );
  assign _052__C = ( _052__C0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_C0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_C1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_C2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_C3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_C4 );
  assign _117__C = ( _117__C0 );
  assign _053__C = ( _053__C0 );
  assign FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_C = ( FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_C0 );
  assign _054__C = ( _054__C0 );
  assign FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_C = ( FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_C0 ) | ( FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_C1 );
  assign _055__C = ( _055__C0 );
  assign _056__C = ( _056__C0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_C0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_C1 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_C0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_C1 );
  assign _157__C = ( _157__C0 );
  assign Fp32ToFp17_and_1_cse_C = ( Fp32ToFp17_and_1_cse_C0 ) | ( Fp32ToFp17_and_1_cse_C1 ) | ( Fp32ToFp17_and_1_cse_C2 ) | ( Fp32ToFp17_and_1_cse_C3 ) | ( Fp32ToFp17_and_1_cse_C4 ) | ( Fp32ToFp17_and_1_cse_C5 );
  assign _058__C = ( _058__C0 );
  assign _045__C = ( _045__C0 );
  assign _061__C = ( _061__C0 );
  assign FpMantRNE_24U_11U_else_acc_nl_C = ( FpMantRNE_24U_11U_else_acc_nl_C0 ) | ( FpMantRNE_24U_11U_else_acc_nl_C1 );
  assign _197__C = ( _197__C0 );
  assign _063__C = ( _063__C0 );
  assign _043__C = ( _043__C0 );
  assign _065__C = ( _065__C0 );
  assign _066__C = ( _066__C0 );
  assign _044__C = ( _044__C0 );
  assign _070__C = ( _070__C0 );
  assign FpMantRNE_24U_11U_else_and_svs_mx0w0_C = ( FpMantRNE_24U_11U_else_and_svs_mx0w0_C0 ) | ( FpMantRNE_24U_11U_else_and_svs_mx0w0_C1 ) | ( FpMantRNE_24U_11U_else_and_svs_mx0w0_C2 );
  assign _071__C = ( _071__C0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_C0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_C1 );
  assign _072__C = ( _072__C0 );
  assign nor_26_nl_C = ( nor_26_nl_C0 );
  assign nor_25_nl_C = ( nor_25_nl_C0 );
  assign or_tmp_24_C = ( or_tmp_24_C0 ) | ( or_tmp_24_C1 );
  assign and_81_nl_C = ( and_81_nl_C0 );
  assign mux_12_nl_C = ( mux_12_nl_C0 );
  assign nand_6_nl_C = ( nand_6_nl_C0 );
  assign nor_21_nl_C = ( nor_21_nl_C0 );
  assign _221__C = ( _221__C0 );
  assign or_34_nl_C = ( or_34_nl_C0 );
  assign _097__C = ( _097__C0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_C0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_C1 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_C0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_C1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_C2 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl_C0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_nl_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_nl_C0 );
  assign mux_2_nl_C = ( mux_2_nl_C0 );
  assign nor_nl_C = ( nor_nl_C0 );
  assign _171__C = ( _171__C0 );
  assign nor_32_nl_C = ( nor_32_nl_C0 );
  assign and_82_nl_C = ( and_82_nl_C0 );
  assign mux_4_nl_C = ( mux_4_nl_C0 );
  assign and_nl_C = ( and_nl_C0 );
  assign mux_6_nl_C = ( mux_6_nl_C0 );
  assign nor_28_nl_C = ( nor_28_nl_C0 );
  assign _181__C = ( _181__C0 );
  assign _000__C = ( _000__C0 ) | ( _000__C1 ) | ( _000__C2 ) | ( _000__C3 );
  assign mux_8_nl_C = ( mux_8_nl_C0 );
  assign nor_27_nl_C = ( nor_27_nl_C0 );
  assign _183__C = ( _183__C0 );
  assign mux_tmp_1_C = ( mux_tmp_1_C0 ) | ( mux_tmp_1_C1 ) | ( mux_tmp_1_C2 ) | ( mux_tmp_1_C3 );
  assign and_14_nl_C = ( and_14_nl_C0 );
  assign mux_14_nl_C = ( mux_14_nl_C0 );
  assign nor_23_nl_C = ( nor_23_nl_C0 );
  assign nor_19_nl_C = ( nor_19_nl_C0 );
  assign nand_5_nl_C = ( nand_5_nl_C0 );
  assign and_76_nl_C = ( and_76_nl_C0 );
  assign and_86_nl_C = ( and_86_nl_C0 );
  assign nor_17_nl_C = ( nor_17_nl_C0 );
  assign _033__C = ( _033__C0 );
  assign _039__C = ( _039__C0 );
  assign _034__C = ( _034__C0 );
  assign _035__C = ( _035__C0 );
  assign _036__C = ( _036__C0 );
  assign _037__C = ( _037__C0 );
  assign _038__C = ( _038__C0 );
  assign _042__C = ( _042__C0 );
  assign _040__C = ( _040__C0 );
  assign _017__C = ( _017__C0 );
  assign _013__C = ( _013__C0 );
  assign _009__C = ( _009__C0 );
  assign _020__C = ( _020__C0 );
  assign _025__C = ( _025__C0 );
  assign _014__C = ( _014__C0 );
  assign _028__C = ( _028__C0 );
  assign _018__C = ( _018__C0 );
  assign _030__C = ( _030__C0 );
  assign _032__C = ( _032__C0 );
  assign _041__C = ( _041__C0 );
  assign _005__C = ( _005__C0 );
  assign _006__C = ( _006__C0 );
  assign _021__C = ( _021__C0 );
  assign _026__C = ( _026__C0 );
  assign _012__C = ( _012__C0 );
  assign _015__C = ( _015__C0 );
  assign _024__C = ( _024__C0 );
  assign _027__C = ( _027__C0 );
  assign _019__C = ( _019__C0 );
  assign _031__C = ( _031__C0 );
  assign _029__C = ( _029__C0 );
  assign _016__C = ( _016__C0 );
  assign _011__C = ( _011__C0 );
  assign _023__C = ( _023__C0 );
  assign _010__C = ( _010__C0 );
  assign _008__C = ( _008__C0 );
  assign _007__C = ( _007__C0 );
  assign _022__C = ( _022__C0 );
  assign or_tmp_50_C = ( or_tmp_50_C0 ) | ( or_tmp_50_C1 );
  assign chn_o_rsci_d_9_0_mx0c1_C = ( chn_o_rsci_d_9_0_mx0c1_C0 ) | ( chn_o_rsci_d_9_0_mx0c1_C1 );
  assign _103__C = ( _103__C0 );
  assign _102__C = ( _102__C0 );
  assign _222__C = ( _222__C0 );
  assign _220__C = ( _220__C0 );
  assign _146__C = ( _146__C0 );
  assign _093__C = ( _093__C0 );
  assign IsNaN_8U_23U_nor_tmp_C = ( IsNaN_8U_23U_nor_tmp_C0 ) | ( IsNaN_8U_23U_nor_tmp_C1 );
  assign IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_C = ( IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_C0 ) | ( IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_C1 );
  assign _144__C = ( _144__C0 );
  assign FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_C = ( FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_C0 ) | ( FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_C1 );
  assign _215__C = ( _215__C0 );
  assign _214__C = ( _214__C0 );
  assign _213__C = ( _213__C0 );
  assign _212__C = ( _212__C0 );
  assign _211__C = ( _211__C0 );
  assign _210__C = ( _210__C0 );
  assign _209__C = ( _209__C0 );
  assign _208__C = ( _208__C0 );
  assign _207__C = ( _207__C0 );
  assign _206__C = ( _206__C0 );
  assign _205__C = ( _205__C0 );
  assign IsNaN_8U_23U_nor_itm_2_C = ( IsNaN_8U_23U_nor_itm_2_C0 ) | ( IsNaN_8U_23U_nor_itm_2_C1 ) | ( IsNaN_8U_23U_nor_itm_2_C2 );
  assign IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_C = ( IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_C0 ) | ( IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_C1 ) | ( IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_C2 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_C0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_C1 );
  assign _203__C = ( _203__C0 );
  assign _202__C = ( _202__C0 );
  assign _200__C = ( _200__C0 );
  assign _199__C = ( _199__C0 );
  assign _085__C = ( _085__C0 );
  assign _196__C = ( _196__C0 );
  assign _084__C = ( _084__C0 );
  assign _195__C = ( _195__C0 );
  assign _083__C = ( _083__C0 );
  assign _082__C = ( _082__C0 );
  assign _138__C = ( _138__C0 );
  assign _193__C = ( _193__C0 );
  assign _137__C = ( _137__C0 );
  assign _136__C = ( _136__C0 );
  assign _135__C = ( _135__C0 );
  assign _189__C = ( _189__C0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_C0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_C1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_C2 );
  assign and_77_cse_C = ( and_77_cse_C0 ) | ( and_77_cse_C1 );
  assign nor_20_cse_C = ( nor_20_cse_C0 ) | ( nor_20_cse_C1 ) | ( nor_20_cse_C2 );
  assign _186__C = ( _186__C0 );
  assign _134__C = ( _134__C0 ) | ( _134__C1 );
  assign _185__C = ( _185__C0 );
  assign _184__C = ( _184__C0 );
  assign _132__C = ( _132__C0 ) | ( _132__C1 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_C0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_C1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_C2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_C3 );
  assign _180__C = ( _180__C0 );
  assign or_16_nl_C = ( or_16_nl_C0 ) | ( or_16_nl_C1 );
  assign _131__C = ( _131__C0 ) | ( _131__C1 ) | ( _131__C2 );
  assign _177__C = ( _177__C0 );
  assign _176__C = ( _176__C0 );
  assign _130__C = ( _130__C0 );
  assign FpMantRNE_24U_11U_else_and_svs_st_2_C = ( FpMantRNE_24U_11U_else_and_svs_st_2_C0 ) | ( FpMantRNE_24U_11U_else_and_svs_st_2_C1 );
  assign _174__C = ( _174__C0 );
  assign _129__C = ( _129__C0 ) | ( _129__C1 );
  assign _128__C = ( _128__C0 );
  assign _127__C = ( _127__C0 );
  assign _125__C = ( _125__C0 ) | ( _125__C1 ) | ( _125__C2 ) | ( _125__C3 ) | ( _125__C4 );
  assign _170__C = ( _170__C0 );
  assign _124__C = ( _124__C0 ) | ( _124__C1 ) | ( _124__C2 );
  assign or_2_nl_C = ( or_2_nl_C0 ) | ( or_2_nl_C1 );
  assign _167__C = ( _167__C0 );
  assign _165__C = ( _165__C0 );
  assign _164__C = ( _164__C0 ) | ( _164__C1 );
  assign and_53_rgt_C = ( and_53_rgt_C0 ) | ( and_53_rgt_C1 );
  assign _068__C = ( _068__C0 );
  assign and_50_rgt_C = ( and_50_rgt_C0 ) | ( and_50_rgt_C1 );
  assign _160__C = ( _160__C0 );
  assign _159__C = ( _159__C0 );
  assign and_48_rgt_C = ( and_48_rgt_C0 ) | ( and_48_rgt_C1 );
  assign _059__C = ( _059__C0 );
  assign _057__C = ( _057__C0 );
  assign _155__C = ( _155__C0 );
  assign _114__C = ( _114__C0 );
  assign _113__C = ( _113__C0 );
  assign _112__C = ( _112__C0 );
  assign main_stage_v_1_mx0c1_C = ( main_stage_v_1_mx0c1_C0 ) | ( main_stage_v_1_mx0c1_C1 );
  assign and_dcpl_17_C = ( and_dcpl_17_C0 ) | ( and_dcpl_17_C1 );
  assign _100__C = ( _100__C0 );
  assign _219__C = ( _219__C0 );
  assign _094__C = ( _094__C0 );
  assign _217__C = ( _217__C0 );
  assign _111__C = ( _111__C0 );
  assign _115__C = ( _115__C0 );
  assign _090__C = ( _090__C0 );
  assign _204__C = ( _204__C0 );
  assign _201__C = ( _201__C0 );
  assign _198__C = ( _198__C0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_C0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_C1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_C2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_C3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_C4 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_C5 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_C6 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_C7 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_C8 );
  assign _194__C = ( _194__C0 );
  assign _076__C = ( _076__C0 );
  assign _190__C = ( _190__C0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_C0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_C1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_C2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_C3 );
  assign _188__C = ( _188__C0 );
  assign _075__C = ( _075__C0 );
  assign _187__C = ( _187__C0 );
  assign _182__C = ( _182__C0 );
  assign _179__C = ( _179__C0 );
  assign _178__C = ( _178__C0 );
  assign _175__C = ( _175__C0 );
  assign _173__C = ( _173__C0 );
  assign _074__C = ( _074__C0 );
  assign _169__C = ( _169__C0 );
  assign and_tmp_C = ( and_tmp_C0 ) | ( and_tmp_C1 );
  assign or_tmp_3_C = ( or_tmp_3_C0 );
  assign _004__C = ( _004__C0 );
  assign _003__C = ( _003__C0 );
  assign _168__C = ( _168__C0 );
  assign _166__C = ( _166__C0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C4 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C5 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C6 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C7 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C8 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C9 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C10 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C11 );
  assign main_stage_v_2_mx0c1_C = ( main_stage_v_2_mx0c1_C0 ) | ( main_stage_v_2_mx0c1_C1 );
  assign and_dcpl_9_C = ( and_dcpl_9_C0 ) | ( and_dcpl_9_C1 ) | ( and_dcpl_9_C2 );
  assign FpMantDecShiftRight_23U_8U_10U_least_bits_22_0_sva_C = ( FpMantDecShiftRight_23U_8U_10U_least_bits_22_0_sva_C0 );
  assign FpMantDecShiftRight_23U_8U_10U_stick_bits_22_0_sva_C = ( FpMantDecShiftRight_23U_8U_10U_stick_bits_22_0_sva_C0 );
  assign FpMantDecShiftRight_23U_8U_10U_guard_bits_22_0_sva_C = ( FpMantDecShiftRight_23U_8U_10U_guard_bits_22_0_sva_C0 );
  assign mux_3_nl_C = ( mux_3_nl_C0 );
  assign _226__C = ( _226__C0 );
  assign _225__C = ( _225__C0 );
  assign _224__C = ( _224__C0 );
  assign IsNaN_8U_23U_land_lpi_1_dfm_2_C = ( IsNaN_8U_23U_land_lpi_1_dfm_2_C0 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_2_C1 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_2_C2 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_2_C3 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_2_C4 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_2_C5 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_2_C6 );
  assign _150__C = ( _150__C0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_C0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_C1 );
  assign chn_a_rsci_ld_core_psct_mx0c0_C = ( chn_a_rsci_ld_core_psct_mx0c0_C0 ) | ( chn_a_rsci_ld_core_psct_mx0c0_C1 );
  assign _148__C = ( _148__C0 );
  assign _099__C = ( _099__C0 );
  assign _002__C = ( _002__C0 ) | ( _002__C1 ) | ( _002__C2 ) | ( _002__C3 ) | ( _002__C4 ) | ( _002__C5 );
  assign _098__C = ( _098__C0 );
  assign _120__C = ( _120__C0 ) | ( _120__C1 );
  assign _147__C = ( _147__C0 );
  assign and_dcpl_15_C = ( and_dcpl_15_C0 ) | ( and_dcpl_15_C1 ) | ( and_dcpl_15_C2 ) | ( and_dcpl_15_C3 );
  assign fsm_output_C = ( fsm_output_C0 ) | ( fsm_output_C1 ) | ( fsm_output_C2 ) | ( fsm_output_C3 );
  assign main_stage_en_1_C = ( main_stage_en_1_C0 ) | ( main_stage_en_1_C1 ) | ( main_stage_en_1_C2 );
  assign _133__C = ( _133__C0 ) | ( _133__C1 ) | ( _133__C2 ) | ( _133__C3 ) | ( _133__C4 );
  assign and_dcpl_16_C = ( and_dcpl_16_C0 ) | ( and_dcpl_16_C1 );
  assign chn_o_rsci_bawt_C = ( chn_o_rsci_bawt_C0 ) | ( chn_o_rsci_bawt_C1 ) | ( chn_o_rsci_bawt_C2 ) | ( chn_o_rsci_bawt_C3 );
  assign _096__C = ( _096__C0 );
  assign _095__C = ( _095__C0 );
  assign or_tmp_28_C = ( or_tmp_28_C0 ) | ( or_tmp_28_C1 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_C0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_C1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_C2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_C3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_C4 );
  assign _145__C = ( _145__C0 ) | ( _145__C1 );
  assign _092__C = ( _092__C0 );
  assign reg_chn_o_rsci_ld_core_psct_cse_C = ( reg_chn_o_rsci_ld_core_psct_cse_C0 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C1 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C2 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C3 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C4 ) | ( reg_chn_o_rsci_ld_core_psct_cse_C5 );
  assign and_80_nl_C = ( and_80_nl_C0 ) | ( and_80_nl_C1 );
  assign _091__C = ( _091__C0 ) | ( _091__C1 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_C0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_C1 );
  assign FpMantDecShiftRight_23U_8U_10U_least_mask_sva_C = ( FpMantDecShiftRight_23U_8U_10U_least_mask_sva_C0 );
  assign nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_lshift_rg_s_C = ( nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_lshift_rg_s_C0 );
  assign FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_C = ( FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_C0 ) | ( FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_C1 );
  assign _218__C = ( _218__C0 );
  assign _216__C = ( _216__C0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_C0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_C1 );
  assign _089__C = ( _089__C0 );
  assign _088__C = ( _088__C0 );
  assign _110__C = ( _110__C0 );
  assign _109__C = ( _109__C0 );
  assign FpMantRNE_24U_11U_else_carry_sva_mx0w0_C = ( FpMantRNE_24U_11U_else_carry_sva_mx0w0_C0 ) | ( FpMantRNE_24U_11U_else_carry_sva_mx0w0_C1 );
  assign or_dcpl_11_C = ( or_dcpl_11_C0 ) | ( or_dcpl_11_C1 );
  assign _122__C = ( _122__C0 ) | ( _122__C1 ) | ( _122__C2 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_C0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_C1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_C2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_C3 );
  assign _087__C = ( _087__C0 );
  assign _086__C = ( _086__C0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_C0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_C1 );
  assign _142__C = ( _142__C0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_nor_ssc_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_nor_ssc_C0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_C0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_C1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_C2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_C3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_C4 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_C0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_C1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_C2 );
  assign mux_16_nl_C = ( mux_16_nl_C0 );
  assign _116__C = ( _116__C0 ) | ( _116__C1 ) | ( _116__C2 ) | ( _116__C3 ) | ( _116__C4 );
  assign mux_11_nl_C = ( mux_11_nl_C0 );
  assign _141__C = ( _141__C0 );
  assign fangyuan6_C = ( fangyuan6_C0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_C0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_C1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_C2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_C3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_C4 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_C5 );
  assign fangyuan5_C = ( fangyuan5_C0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_C0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_C1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_C2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_C3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_C4 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_C5 );
  assign fangyuan4_C = ( fangyuan4_C0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_C0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_C1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_C2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_C3 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_C0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_C1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_C2 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_C0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_C1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_C2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_C3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_C4 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_C5 );
  assign fangyuan3_C = ( fangyuan3_C0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_C0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_C1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_C2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_C3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_C4 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_C5 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_C0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_C1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_C2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_C3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_C4 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_C5 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_C6 );
  assign _081__C = ( _081__C0 );
  assign _140__C = ( _140__C0 ) | ( _140__C1 ) | ( _140__C2 ) | ( _140__C3 );
  assign _192__C = ( _192__C0 );
  assign _080__C = ( _080__C0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_C0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_C1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_C2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_C3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_C4 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_C5 );
  assign _079__C = ( _079__C0 );
  assign _139__C = ( _139__C0 );
  assign _078__C = ( _078__C0 );
  assign _077__C = ( _077__C0 ) | ( _077__C1 );
  assign main_stage_v_1_C = ( main_stage_v_1_C0 ) | ( main_stage_v_1_C1 ) | ( main_stage_v_1_C2 ) | ( main_stage_v_1_C3 ) | ( main_stage_v_1_C4 ) | ( main_stage_v_1_C5 ) | ( main_stage_v_1_C6 ) | ( main_stage_v_1_C7 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C4 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C5 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C6 );
  assign main_stage_v_2_C = ( main_stage_v_2_C0 ) | ( main_stage_v_2_C1 ) | ( main_stage_v_2_C2 ) | ( main_stage_v_2_C3 ) | ( main_stage_v_2_C4 ) | ( main_stage_v_2_C5 ) | ( main_stage_v_2_C6 );
  assign _191__C = ( _191__C0 );
  assign mux_tmp_18_C = ( mux_tmp_18_C0 ) | ( mux_tmp_18_C1 );
  assign and_42_cse_C = ( and_42_cse_C0 ) | ( and_42_cse_C1 ) | ( and_42_cse_C2 ) | ( and_42_cse_C3 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_C0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_C1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_C2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_C3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_C4 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_C5 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_C6 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_C7 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_C8 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_C9 );
  assign FpMantRNE_24U_11U_else_and_svs_2_C = ( FpMantRNE_24U_11U_else_and_svs_2_C0 ) | ( FpMantRNE_24U_11U_else_and_svs_2_C1 ) | ( FpMantRNE_24U_11U_else_and_svs_2_C2 ) | ( FpMantRNE_24U_11U_else_and_svs_2_C3 ) | ( FpMantRNE_24U_11U_else_and_svs_2_C4 ) | ( FpMantRNE_24U_11U_else_and_svs_2_C5 );
  assign or_tmp_11_C = ( or_tmp_11_C0 ) | ( or_tmp_11_C1 ) | ( or_tmp_11_C2 ) | ( or_tmp_11_C3 );
  assign _126__C = ( _126__C0 );
  assign chn_a_rsci_bawt_C = ( chn_a_rsci_bawt_C0 ) | ( chn_a_rsci_bawt_C1 ) | ( chn_a_rsci_bawt_C2 ) | ( chn_a_rsci_bawt_C3 ) | ( chn_a_rsci_bawt_C4 ) | ( chn_a_rsci_bawt_C5 );
  assign _172__C = ( _172__C0 ) | ( _172__C1 );
  assign _073__C = ( _073__C0 );
  assign FpMantRNE_24U_11U_else_and_svs_C = ( FpMantRNE_24U_11U_else_and_svs_C0 ) | ( FpMantRNE_24U_11U_else_and_svs_C1 ) | ( FpMantRNE_24U_11U_else_and_svs_C2 );
  assign or_tmp_9_C = ( or_tmp_9_C0 ) | ( or_tmp_9_C1 );
  assign _123__C = ( _123__C0 );
  assign _121__C = ( _121__C0 );
  assign _069__C = ( _069__C0 );
  assign _163__C = ( _163__C0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C4 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C5 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C6 );
  assign _067__C = ( _067__C0 );
  assign _119__C = ( _119__C0 );
  assign and_dcpl_29_C = ( and_dcpl_29_C0 ) | ( and_dcpl_29_C1 ) | ( and_dcpl_29_C2 );
  assign mux_20_nl_C = ( mux_20_nl_C0 );
  assign mux_tmp_C = ( mux_tmp_C0 ) | ( mux_tmp_C1 ) | ( mux_tmp_C2 ) | ( mux_tmp_C3 );
  assign _064__C = ( _064__C0 );
  assign _162__C = ( _162__C0 );
  assign _062__C = ( _062__C0 );
  assign _161__C = ( _161__C0 );
  assign mux_19_nl_C = ( mux_19_nl_C0 );
  assign _060__C = ( _060__C0 );
  assign _158__C = ( _158__C0 );
  assign or_9_cse_C = ( or_9_cse_C0 ) | ( or_9_cse_C1 ) | ( or_9_cse_C2 ) | ( or_9_cse_C3 ) | ( or_9_cse_C4 ) | ( or_9_cse_C5 ) | ( or_9_cse_C6 ) | ( or_9_cse_C7 ) | ( or_9_cse_C8 ) | ( or_9_cse_C9 ) | ( or_9_cse_C10 ) | ( or_9_cse_C11 ) | ( or_9_cse_C12 ) | ( or_9_cse_C13 ) | ( or_9_cse_C14 ) | ( or_9_cse_C15 ) | ( or_9_cse_C16 ) | ( or_9_cse_C17 );
  assign nor_16_cse_C = ( nor_16_cse_C0 ) | ( nor_16_cse_C1 );
  assign not_tmp_20_C = ( not_tmp_20_C0 ) | ( not_tmp_20_C1 );
  assign _118__C = ( _118__C0 ) | ( _118__C1 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_else_mux_2_nl_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_else_mux_2_nl_C0 );
  assign mux_tmp_13_C = ( mux_tmp_13_C0 ) | ( mux_tmp_13_C1 );
  assign mux_15_nl_C = ( mux_15_nl_C0 );
  assign _156__C = ( _156__C0 );
  assign _154__C = ( _154__C0 );
  assign _153__C = ( _153__C0 );
  assign core_wen_C = ( core_wen_C0 ) | ( core_wen_C1 ) | ( core_wen_C2 ) | ( core_wen_C3 ) | ( core_wen_C4 ) | ( core_wen_C5 ) | ( core_wen_C6 ) | ( core_wen_C7 ) | ( core_wen_C8 ) | ( core_wen_C9 ) | ( core_wen_C10 ) | ( core_wen_C11 ) | ( core_wen_C12 ) | ( core_wen_C13 ) | ( core_wen_C14 ) | ( core_wen_C15 ) | ( core_wen_C16 ) | ( core_wen_C17 );
  assign mux_10_nl_C = ( mux_10_nl_C0 );
  assign mux_9_nl_C = ( mux_9_nl_C0 );
  assign mux_7_nl_C = ( mux_7_nl_C0 );
  assign mux_5_nl_C = ( mux_5_nl_C0 );
  assign _048__C = ( _048__C0 ) | ( _048__C1 ) | ( _048__C2 ) | ( _048__C3 ) | ( _048__C4 ) | ( _048__C5 ) | ( _048__C6 ) | ( _048__C7 ) | ( _048__C8 ) | ( _048__C9 ) | ( _048__C10 ) | ( _048__C11 );
  assign fangyuan2_C = ( fangyuan2_C0 );
  assign nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_C = ( nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_C0 ) | ( nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_C1 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_C0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_C1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_C2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_C3 );
  assign FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_C = ( FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_C0 ) | ( FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_C1 );
  assign fangyuan1_C = ( fangyuan1_C0 );
  assign _001__C = ( _001__C0 ) | ( _001__C1 );
  assign FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_C = ( FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_C0 ) | ( FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_C1 );
  assign FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_C = ( FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_C0 ) | ( FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_C1 );
  assign chn_a_rsci_d_mxwt_C = ( chn_a_rsci_d_mxwt_C0 ) | ( chn_a_rsci_d_mxwt_C1 ) | ( chn_a_rsci_d_mxwt_C2 ) | ( chn_a_rsci_d_mxwt_C3 ) | ( chn_a_rsci_d_mxwt_C4 ) | ( chn_a_rsci_d_mxwt_C5 );
  assign fangyuan0_C = ( fangyuan0_C0 );
  assign _143__C = ( _143__C0 );
  assign FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_C = ( FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_C0 ) | ( FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_C1 ) | ( FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_C2 );
  assign FpMantRNE_24U_11U_else_carry_sva_2_C = ( FpMantRNE_24U_11U_else_carry_sva_2_C0 ) | ( FpMantRNE_24U_11U_else_carry_sva_2_C1 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C = ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C4 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C5 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C6 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C7 );
  assign _108__C = ( _108__C0 );
  assign chn_o_rsci_oswt_unreg_C = ( chn_o_rsci_oswt_unreg_C0 );
  assign chn_o_rsc_z_C = ( chn_o_rsc_z_C0 );
  assign chn_o_rsc_lz_C = ( chn_o_rsc_lz_C0 );
  assign chn_a_rsci_oswt_unreg_C = ( chn_a_rsci_oswt_unreg_C0 );
  assign chn_a_rsc_lz_C = ( chn_a_rsc_lz_C0 );
  assign chn_o_rsci_wen_comp_X = ( chn_o_rsci_wen_comp_X0 );
  assign chn_a_rsci_wen_comp_X = ( chn_a_rsci_wen_comp_X0 );
  assign chn_o_rsci_oswt_X = ( chn_o_rsci_oswt_X0 );
  assign chn_o_rsc_vz_X = ( chn_o_rsc_vz_X0 );
  assign nvdla_core_rstn_X = ( nvdla_core_rstn_X0 ) | ( nvdla_core_rstn_X1 ) | ( nvdla_core_rstn_X2 ) | ( nvdla_core_rstn_X3 );
  assign core_wten_X = ( core_wten_X0 ) | ( core_wten_X1 );
  assign chn_a_rsci_oswt_X = ( chn_a_rsci_oswt_X0 );
  assign chn_a_rsc_z_X = ( chn_a_rsc_z_X0 );
  assign chn_a_rsc_vz_X = ( chn_a_rsc_vz_X0 );
  assign chn_o_rsci_iswt0_X = ( chn_o_rsci_iswt0_X0 ) | ( chn_o_rsci_iswt0_X1 );
  assign chn_a_rsci_iswt0_X = ( chn_a_rsci_iswt0_X0 ) | ( chn_a_rsci_iswt0_X1 );
  assign _149__X = ( _149__X0 );
  assign chn_a_rsci_ld_core_psct_X = ( chn_a_rsci_ld_core_psct_X0 ) | ( chn_a_rsci_ld_core_psct_X1 );
  assign _101__X = ( _101__X0 );
  assign chn_o_rsci_d_16_X = ( chn_o_rsci_d_16_X0 ) | ( chn_o_rsci_d_16_X1 ) | ( chn_o_rsci_d_16_X2 );
  assign chn_o_rsci_d_15_X = ( chn_o_rsci_d_15_X0 ) | ( chn_o_rsci_d_15_X1 ) | ( chn_o_rsci_d_15_X2 );
  assign _223__X = ( _223__X0 );
  assign chn_o_rsci_d_14_10_X = ( chn_o_rsci_d_14_10_X0 ) | ( chn_o_rsci_d_14_10_X1 ) | ( chn_o_rsci_d_14_10_X2 );
  assign _047__X = ( _047__X0 );
  assign chn_o_and_cse_X = ( chn_o_and_cse_X0 ) | ( chn_o_and_cse_X1 ) | ( chn_o_and_cse_X2 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_and_nl_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_and_nl_X0 );
  assign chn_o_rsci_d_9_0_X = ( chn_o_rsci_d_9_0_X0 ) | ( chn_o_rsci_d_9_0_X1 ) | ( chn_o_rsci_d_9_0_X2 );
  assign _046__X = ( _046__X0 );
  assign _104__X = ( _104__X0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_1_nl_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_1_nl_X0 );
  assign _151__X = ( _151__X0 );
  assign _105__X = ( _105__X0 );
  assign _152__X = ( _152__X0 );
  assign _106__X = ( _106__X0 );
  assign nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_X = ( nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_X0 );
  assign _107__X = ( _107__X0 );
  assign _049__X = ( _049__X0 );
  assign _050__X = ( _050__X0 );
  assign _051__X = ( _051__X0 );
  assign _052__X = ( _052__X0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_X0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_X1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_X2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_X3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_X4 );
  assign _117__X = ( _117__X0 );
  assign _053__X = ( _053__X0 );
  assign FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_X = ( FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_X0 );
  assign _054__X = ( _054__X0 );
  assign FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_X = ( FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_X0 ) | ( FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_X1 );
  assign _055__X = ( _055__X0 );
  assign _056__X = ( _056__X0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_X0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_X1 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_X0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_X1 );
  assign _157__X = ( _157__X0 );
  assign Fp32ToFp17_and_1_cse_X = ( Fp32ToFp17_and_1_cse_X0 ) | ( Fp32ToFp17_and_1_cse_X1 ) | ( Fp32ToFp17_and_1_cse_X2 ) | ( Fp32ToFp17_and_1_cse_X3 ) | ( Fp32ToFp17_and_1_cse_X4 ) | ( Fp32ToFp17_and_1_cse_X5 );
  assign _058__X = ( _058__X0 );
  assign _045__X = ( _045__X0 );
  assign _061__X = ( _061__X0 );
  assign FpMantRNE_24U_11U_else_acc_nl_X = ( FpMantRNE_24U_11U_else_acc_nl_X0 ) | ( FpMantRNE_24U_11U_else_acc_nl_X1 );
  assign _197__X = ( _197__X0 );
  assign _063__X = ( _063__X0 );
  assign _043__X = ( _043__X0 );
  assign _065__X = ( _065__X0 );
  assign _066__X = ( _066__X0 );
  assign _044__X = ( _044__X0 );
  assign _070__X = ( _070__X0 );
  assign FpMantRNE_24U_11U_else_and_svs_mx0w0_X = ( FpMantRNE_24U_11U_else_and_svs_mx0w0_X0 ) | ( FpMantRNE_24U_11U_else_and_svs_mx0w0_X1 ) | ( FpMantRNE_24U_11U_else_and_svs_mx0w0_X2 );
  assign _071__X = ( _071__X0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_X0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_X1 );
  assign _072__X = ( _072__X0 );
  assign nor_26_nl_X = ( nor_26_nl_X0 );
  assign nor_25_nl_X = ( nor_25_nl_X0 );
  assign or_tmp_24_X = ( or_tmp_24_X0 ) | ( or_tmp_24_X1 );
  assign and_81_nl_X = ( and_81_nl_X0 );
  assign mux_12_nl_X = ( mux_12_nl_X0 );
  assign nand_6_nl_X = ( nand_6_nl_X0 );
  assign nor_21_nl_X = ( nor_21_nl_X0 );
  assign _221__X = ( _221__X0 );
  assign or_34_nl_X = ( or_34_nl_X0 );
  assign _097__X = ( _097__X0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_X0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_X1 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_X0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_X1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_X2 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl_X0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_nl_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_nl_X0 );
  assign mux_2_nl_X = ( mux_2_nl_X0 );
  assign nor_nl_X = ( nor_nl_X0 );
  assign _171__X = ( _171__X0 );
  assign nor_32_nl_X = ( nor_32_nl_X0 );
  assign and_82_nl_X = ( and_82_nl_X0 );
  assign mux_4_nl_X = ( mux_4_nl_X0 );
  assign and_nl_X = ( and_nl_X0 );
  assign mux_6_nl_X = ( mux_6_nl_X0 );
  assign nor_28_nl_X = ( nor_28_nl_X0 );
  assign _181__X = ( _181__X0 );
  assign _000__X = ( _000__X0 ) | ( _000__X1 ) | ( _000__X2 ) | ( _000__X3 );
  assign mux_8_nl_X = ( mux_8_nl_X0 );
  assign nor_27_nl_X = ( nor_27_nl_X0 );
  assign _183__X = ( _183__X0 );
  assign mux_tmp_1_X = ( mux_tmp_1_X0 ) | ( mux_tmp_1_X1 ) | ( mux_tmp_1_X2 ) | ( mux_tmp_1_X3 );
  assign and_14_nl_X = ( and_14_nl_X0 );
  assign mux_14_nl_X = ( mux_14_nl_X0 );
  assign nor_23_nl_X = ( nor_23_nl_X0 );
  assign nor_19_nl_X = ( nor_19_nl_X0 );
  assign nand_5_nl_X = ( nand_5_nl_X0 );
  assign and_76_nl_X = ( and_76_nl_X0 );
  assign and_86_nl_X = ( and_86_nl_X0 );
  assign nor_17_nl_X = ( nor_17_nl_X0 );
  assign _033__X = ( _033__X0 );
  assign _039__X = ( _039__X0 );
  assign _034__X = ( _034__X0 );
  assign _035__X = ( _035__X0 );
  assign _036__X = ( _036__X0 );
  assign _037__X = ( _037__X0 );
  assign _038__X = ( _038__X0 );
  assign _042__X = ( _042__X0 );
  assign _040__X = ( _040__X0 );
  assign _017__X = ( _017__X0 );
  assign _013__X = ( _013__X0 );
  assign _009__X = ( _009__X0 );
  assign _020__X = ( _020__X0 );
  assign _025__X = ( _025__X0 );
  assign _014__X = ( _014__X0 );
  assign _028__X = ( _028__X0 );
  assign _018__X = ( _018__X0 );
  assign _030__X = ( _030__X0 );
  assign _032__X = ( _032__X0 );
  assign _041__X = ( _041__X0 );
  assign _005__X = ( _005__X0 );
  assign _006__X = ( _006__X0 );
  assign _021__X = ( _021__X0 );
  assign _026__X = ( _026__X0 );
  assign _012__X = ( _012__X0 );
  assign _015__X = ( _015__X0 );
  assign _024__X = ( _024__X0 );
  assign _027__X = ( _027__X0 );
  assign _019__X = ( _019__X0 );
  assign _031__X = ( _031__X0 );
  assign _029__X = ( _029__X0 );
  assign _016__X = ( _016__X0 );
  assign _011__X = ( _011__X0 );
  assign _023__X = ( _023__X0 );
  assign _010__X = ( _010__X0 );
  assign _008__X = ( _008__X0 );
  assign _007__X = ( _007__X0 );
  assign _022__X = ( _022__X0 );
  assign or_tmp_50_X = ( or_tmp_50_X0 ) | ( or_tmp_50_X1 );
  assign chn_o_rsci_d_9_0_mx0c1_X = ( chn_o_rsci_d_9_0_mx0c1_X0 ) | ( chn_o_rsci_d_9_0_mx0c1_X1 );
  assign _103__X = ( _103__X0 );
  assign _102__X = ( _102__X0 );
  assign _222__X = ( _222__X0 );
  assign _220__X = ( _220__X0 );
  assign _146__X = ( _146__X0 );
  assign _093__X = ( _093__X0 );
  assign IsNaN_8U_23U_nor_tmp_X = ( IsNaN_8U_23U_nor_tmp_X0 ) | ( IsNaN_8U_23U_nor_tmp_X1 );
  assign IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_X = ( IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_X0 ) | ( IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_X1 );
  assign _144__X = ( _144__X0 );
  assign FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_X = ( FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_X0 ) | ( FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_X1 );
  assign _215__X = ( _215__X0 );
  assign _214__X = ( _214__X0 );
  assign _213__X = ( _213__X0 );
  assign _212__X = ( _212__X0 );
  assign _211__X = ( _211__X0 );
  assign _210__X = ( _210__X0 );
  assign _209__X = ( _209__X0 );
  assign _208__X = ( _208__X0 );
  assign _207__X = ( _207__X0 );
  assign _206__X = ( _206__X0 );
  assign _205__X = ( _205__X0 );
  assign IsNaN_8U_23U_nor_itm_2_X = ( IsNaN_8U_23U_nor_itm_2_X0 ) | ( IsNaN_8U_23U_nor_itm_2_X1 ) | ( IsNaN_8U_23U_nor_itm_2_X2 );
  assign IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_X = ( IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_X0 ) | ( IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_X1 ) | ( IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_X2 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_X0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_X1 );
  assign _203__X = ( _203__X0 );
  assign _202__X = ( _202__X0 );
  assign _200__X = ( _200__X0 );
  assign _199__X = ( _199__X0 );
  assign _085__X = ( _085__X0 );
  assign _196__X = ( _196__X0 );
  assign _084__X = ( _084__X0 );
  assign _195__X = ( _195__X0 );
  assign _083__X = ( _083__X0 );
  assign _082__X = ( _082__X0 );
  assign _138__X = ( _138__X0 );
  assign _193__X = ( _193__X0 );
  assign _137__X = ( _137__X0 );
  assign _136__X = ( _136__X0 );
  assign _135__X = ( _135__X0 );
  assign _189__X = ( _189__X0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_X0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_X1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_X2 );
  assign and_77_cse_X = ( and_77_cse_X0 ) | ( and_77_cse_X1 );
  assign nor_20_cse_X = ( nor_20_cse_X0 ) | ( nor_20_cse_X1 ) | ( nor_20_cse_X2 );
  assign _186__X = ( _186__X0 );
  assign _134__X = ( _134__X0 ) | ( _134__X1 );
  assign _185__X = ( _185__X0 );
  assign _184__X = ( _184__X0 );
  assign _132__X = ( _132__X0 ) | ( _132__X1 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_X0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_X1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_X2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_X3 );
  assign _180__X = ( _180__X0 );
  assign or_16_nl_X = ( or_16_nl_X0 ) | ( or_16_nl_X1 );
  assign _131__X = ( _131__X0 ) | ( _131__X1 ) | ( _131__X2 );
  assign _177__X = ( _177__X0 );
  assign _176__X = ( _176__X0 );
  assign _130__X = ( _130__X0 );
  assign FpMantRNE_24U_11U_else_and_svs_st_2_X = ( FpMantRNE_24U_11U_else_and_svs_st_2_X0 ) | ( FpMantRNE_24U_11U_else_and_svs_st_2_X1 );
  assign _174__X = ( _174__X0 );
  assign _129__X = ( _129__X0 ) | ( _129__X1 );
  assign _128__X = ( _128__X0 );
  assign _127__X = ( _127__X0 );
  assign _125__X = ( _125__X0 ) | ( _125__X1 ) | ( _125__X2 ) | ( _125__X3 ) | ( _125__X4 );
  assign _170__X = ( _170__X0 );
  assign _124__X = ( _124__X0 ) | ( _124__X1 ) | ( _124__X2 );
  assign or_2_nl_X = ( or_2_nl_X0 ) | ( or_2_nl_X1 );
  assign _167__X = ( _167__X0 );
  assign _165__X = ( _165__X0 );
  assign _164__X = ( _164__X0 ) | ( _164__X1 );
  assign and_53_rgt_X = ( and_53_rgt_X0 ) | ( and_53_rgt_X1 );
  assign _068__X = ( _068__X0 );
  assign and_50_rgt_X = ( and_50_rgt_X0 ) | ( and_50_rgt_X1 );
  assign _160__X = ( _160__X0 );
  assign _159__X = ( _159__X0 );
  assign and_48_rgt_X = ( and_48_rgt_X0 ) | ( and_48_rgt_X1 );
  assign _059__X = ( _059__X0 );
  assign _057__X = ( _057__X0 );
  assign _155__X = ( _155__X0 );
  assign _114__X = ( _114__X0 );
  assign _113__X = ( _113__X0 );
  assign _112__X = ( _112__X0 );
  assign main_stage_v_1_mx0c1_X = ( main_stage_v_1_mx0c1_X0 ) | ( main_stage_v_1_mx0c1_X1 );
  assign and_dcpl_17_X = ( and_dcpl_17_X0 ) | ( and_dcpl_17_X1 );
  assign _100__X = ( _100__X0 );
  assign _219__X = ( _219__X0 );
  assign _094__X = ( _094__X0 );
  assign _217__X = ( _217__X0 );
  assign _111__X = ( _111__X0 );
  assign _115__X = ( _115__X0 );
  assign _090__X = ( _090__X0 );
  assign _204__X = ( _204__X0 );
  assign _201__X = ( _201__X0 );
  assign _198__X = ( _198__X0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X4 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X5 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X6 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X7 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X8 );
  assign _194__X = ( _194__X0 );
  assign _076__X = ( _076__X0 );
  assign _190__X = ( _190__X0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_X0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_X1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_X2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_X3 );
  assign _188__X = ( _188__X0 );
  assign _075__X = ( _075__X0 );
  assign _187__X = ( _187__X0 );
  assign _182__X = ( _182__X0 );
  assign _179__X = ( _179__X0 );
  assign _178__X = ( _178__X0 );
  assign _175__X = ( _175__X0 );
  assign _173__X = ( _173__X0 );
  assign _074__X = ( _074__X0 );
  assign _169__X = ( _169__X0 );
  assign and_tmp_X = ( and_tmp_X0 ) | ( and_tmp_X1 );
  assign or_tmp_3_X = ( or_tmp_3_X0 );
  assign _004__X = ( _004__X0 );
  assign _003__X = ( _003__X0 );
  assign _168__X = ( _168__X0 );
  assign _166__X = ( _166__X0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X4 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X5 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X6 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X7 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X8 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X9 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X10 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X11 );
  assign main_stage_v_2_mx0c1_X = ( main_stage_v_2_mx0c1_X0 ) | ( main_stage_v_2_mx0c1_X1 );
  assign and_dcpl_9_X = ( and_dcpl_9_X0 ) | ( and_dcpl_9_X1 ) | ( and_dcpl_9_X2 );
  assign FpMantDecShiftRight_23U_8U_10U_least_bits_22_0_sva_X = ( FpMantDecShiftRight_23U_8U_10U_least_bits_22_0_sva_X0 );
  assign FpMantDecShiftRight_23U_8U_10U_stick_bits_22_0_sva_X = ( FpMantDecShiftRight_23U_8U_10U_stick_bits_22_0_sva_X0 );
  assign FpMantDecShiftRight_23U_8U_10U_guard_bits_22_0_sva_X = ( FpMantDecShiftRight_23U_8U_10U_guard_bits_22_0_sva_X0 );
  assign mux_3_nl_X = ( mux_3_nl_X0 );
  assign _226__X = ( _226__X0 );
  assign _225__X = ( _225__X0 );
  assign _224__X = ( _224__X0 );
  assign IsNaN_8U_23U_land_lpi_1_dfm_2_X = ( IsNaN_8U_23U_land_lpi_1_dfm_2_X0 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_2_X1 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_2_X2 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_2_X3 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_2_X4 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_2_X5 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_2_X6 );
  assign _150__X = ( _150__X0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_X0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_X1 );
  assign chn_a_rsci_ld_core_psct_mx0c0_X = ( chn_a_rsci_ld_core_psct_mx0c0_X0 ) | ( chn_a_rsci_ld_core_psct_mx0c0_X1 );
  assign _148__X = ( _148__X0 );
  assign _099__X = ( _099__X0 );
  assign _002__X = ( _002__X0 ) | ( _002__X1 ) | ( _002__X2 ) | ( _002__X3 ) | ( _002__X4 ) | ( _002__X5 );
  assign _098__X = ( _098__X0 );
  assign _120__X = ( _120__X0 ) | ( _120__X1 );
  assign _147__X = ( _147__X0 );
  assign and_dcpl_15_X = ( and_dcpl_15_X0 ) | ( and_dcpl_15_X1 ) | ( and_dcpl_15_X2 ) | ( and_dcpl_15_X3 );
  assign fsm_output_X = ( fsm_output_X0 ) | ( fsm_output_X1 ) | ( fsm_output_X2 ) | ( fsm_output_X3 );
  assign main_stage_en_1_X = ( main_stage_en_1_X0 ) | ( main_stage_en_1_X1 ) | ( main_stage_en_1_X2 );
  assign _133__X = ( _133__X0 ) | ( _133__X1 ) | ( _133__X2 ) | ( _133__X3 ) | ( _133__X4 );
  assign and_dcpl_16_X = ( and_dcpl_16_X0 ) | ( and_dcpl_16_X1 );
  assign chn_o_rsci_bawt_X = ( chn_o_rsci_bawt_X0 ) | ( chn_o_rsci_bawt_X1 ) | ( chn_o_rsci_bawt_X2 ) | ( chn_o_rsci_bawt_X3 );
  assign _096__X = ( _096__X0 );
  assign _095__X = ( _095__X0 );
  assign or_tmp_28_X = ( or_tmp_28_X0 ) | ( or_tmp_28_X1 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_X0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_X1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_X2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_X3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_X4 );
  assign _145__X = ( _145__X0 ) | ( _145__X1 );
  assign _092__X = ( _092__X0 );
  assign reg_chn_o_rsci_ld_core_psct_cse_X = ( reg_chn_o_rsci_ld_core_psct_cse_X0 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X1 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X2 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X3 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X4 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X5 );
  assign and_80_nl_X = ( and_80_nl_X0 ) | ( and_80_nl_X1 );
  assign _091__X = ( _091__X0 ) | ( _091__X1 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_X0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_X1 );
  assign FpMantDecShiftRight_23U_8U_10U_least_mask_sva_X = ( FpMantDecShiftRight_23U_8U_10U_least_mask_sva_X0 );
  assign nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_lshift_rg_s_X = ( nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_lshift_rg_s_X0 );
  assign FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_X = ( FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_X0 ) | ( FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_X1 );
  assign _218__X = ( _218__X0 );
  assign _216__X = ( _216__X0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_X0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_X1 );
  assign _089__X = ( _089__X0 );
  assign _088__X = ( _088__X0 );
  assign _110__X = ( _110__X0 );
  assign _109__X = ( _109__X0 );
  assign FpMantRNE_24U_11U_else_carry_sva_mx0w0_X = ( FpMantRNE_24U_11U_else_carry_sva_mx0w0_X0 ) | ( FpMantRNE_24U_11U_else_carry_sva_mx0w0_X1 );
  assign or_dcpl_11_X = ( or_dcpl_11_X0 ) | ( or_dcpl_11_X1 );
  assign _122__X = ( _122__X0 ) | ( _122__X1 ) | ( _122__X2 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_X0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_X1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_X2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_X3 );
  assign _087__X = ( _087__X0 );
  assign _086__X = ( _086__X0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_X0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_X1 );
  assign _142__X = ( _142__X0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_nor_ssc_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_nor_ssc_X0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_X0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_X1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_X2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_X3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_X4 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_X0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_X1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_X2 );
  assign mux_16_nl_X = ( mux_16_nl_X0 );
  assign _116__X = ( _116__X0 ) | ( _116__X1 ) | ( _116__X2 ) | ( _116__X3 ) | ( _116__X4 );
  assign mux_11_nl_X = ( mux_11_nl_X0 );
  assign _141__X = ( _141__X0 );
  assign fangyuan6_X = ( fangyuan6_X0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_X0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_X1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_X2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_X3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_X4 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_X5 );
  assign fangyuan5_X = ( fangyuan5_X0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_X0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_X1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_X2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_X3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_X4 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_X5 );
  assign fangyuan4_X = ( fangyuan4_X0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_X0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_X1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_X2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_X3 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_X0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_X1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_X2 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_X0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_X1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_X2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_X3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_X4 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_X5 );
  assign fangyuan3_X = ( fangyuan3_X0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_X0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_X1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_X2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_X3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_X4 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_X5 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_X0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_X1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_X2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_X3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_X4 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_X5 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_X6 );
  assign _081__X = ( _081__X0 );
  assign _140__X = ( _140__X0 ) | ( _140__X1 ) | ( _140__X2 ) | ( _140__X3 );
  assign _192__X = ( _192__X0 );
  assign _080__X = ( _080__X0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_X0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_X1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_X2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_X3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_X4 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_X5 );
  assign _079__X = ( _079__X0 );
  assign _139__X = ( _139__X0 );
  assign _078__X = ( _078__X0 );
  assign _077__X = ( _077__X0 ) | ( _077__X1 );
  assign main_stage_v_1_X = ( main_stage_v_1_X0 ) | ( main_stage_v_1_X1 ) | ( main_stage_v_1_X2 ) | ( main_stage_v_1_X3 ) | ( main_stage_v_1_X4 ) | ( main_stage_v_1_X5 ) | ( main_stage_v_1_X6 ) | ( main_stage_v_1_X7 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X4 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X5 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X6 );
  assign main_stage_v_2_X = ( main_stage_v_2_X0 ) | ( main_stage_v_2_X1 ) | ( main_stage_v_2_X2 ) | ( main_stage_v_2_X3 ) | ( main_stage_v_2_X4 ) | ( main_stage_v_2_X5 ) | ( main_stage_v_2_X6 );
  assign _191__X = ( _191__X0 );
  assign mux_tmp_18_X = ( mux_tmp_18_X0 ) | ( mux_tmp_18_X1 );
  assign and_42_cse_X = ( and_42_cse_X0 ) | ( and_42_cse_X1 ) | ( and_42_cse_X2 ) | ( and_42_cse_X3 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X4 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X5 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X6 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X7 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X8 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X9 );
  assign FpMantRNE_24U_11U_else_and_svs_2_X = ( FpMantRNE_24U_11U_else_and_svs_2_X0 ) | ( FpMantRNE_24U_11U_else_and_svs_2_X1 ) | ( FpMantRNE_24U_11U_else_and_svs_2_X2 ) | ( FpMantRNE_24U_11U_else_and_svs_2_X3 ) | ( FpMantRNE_24U_11U_else_and_svs_2_X4 ) | ( FpMantRNE_24U_11U_else_and_svs_2_X5 );
  assign or_tmp_11_X = ( or_tmp_11_X0 ) | ( or_tmp_11_X1 ) | ( or_tmp_11_X2 ) | ( or_tmp_11_X3 );
  assign _126__X = ( _126__X0 );
  assign chn_a_rsci_bawt_X = ( chn_a_rsci_bawt_X0 ) | ( chn_a_rsci_bawt_X1 ) | ( chn_a_rsci_bawt_X2 ) | ( chn_a_rsci_bawt_X3 ) | ( chn_a_rsci_bawt_X4 ) | ( chn_a_rsci_bawt_X5 );
  assign _172__X = ( _172__X0 ) | ( _172__X1 );
  assign _073__X = ( _073__X0 );
  assign FpMantRNE_24U_11U_else_and_svs_X = ( FpMantRNE_24U_11U_else_and_svs_X0 ) | ( FpMantRNE_24U_11U_else_and_svs_X1 ) | ( FpMantRNE_24U_11U_else_and_svs_X2 );
  assign or_tmp_9_X = ( or_tmp_9_X0 ) | ( or_tmp_9_X1 );
  assign _123__X = ( _123__X0 );
  assign _121__X = ( _121__X0 );
  assign _069__X = ( _069__X0 );
  assign _163__X = ( _163__X0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X4 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X5 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X6 );
  assign _067__X = ( _067__X0 );
  assign _119__X = ( _119__X0 );
  assign and_dcpl_29_X = ( and_dcpl_29_X0 ) | ( and_dcpl_29_X1 ) | ( and_dcpl_29_X2 );
  assign mux_20_nl_X = ( mux_20_nl_X0 );
  assign mux_tmp_X = ( mux_tmp_X0 ) | ( mux_tmp_X1 ) | ( mux_tmp_X2 ) | ( mux_tmp_X3 );
  assign _064__X = ( _064__X0 );
  assign _162__X = ( _162__X0 );
  assign _062__X = ( _062__X0 );
  assign _161__X = ( _161__X0 );
  assign mux_19_nl_X = ( mux_19_nl_X0 );
  assign _060__X = ( _060__X0 );
  assign _158__X = ( _158__X0 );
  assign or_9_cse_X = ( or_9_cse_X0 ) | ( or_9_cse_X1 ) | ( or_9_cse_X2 ) | ( or_9_cse_X3 ) | ( or_9_cse_X4 ) | ( or_9_cse_X5 ) | ( or_9_cse_X6 ) | ( or_9_cse_X7 ) | ( or_9_cse_X8 ) | ( or_9_cse_X9 ) | ( or_9_cse_X10 ) | ( or_9_cse_X11 ) | ( or_9_cse_X12 ) | ( or_9_cse_X13 ) | ( or_9_cse_X14 ) | ( or_9_cse_X15 ) | ( or_9_cse_X16 ) | ( or_9_cse_X17 );
  assign nor_16_cse_X = ( nor_16_cse_X0 ) | ( nor_16_cse_X1 );
  assign not_tmp_20_X = ( not_tmp_20_X0 ) | ( not_tmp_20_X1 );
  assign _118__X = ( _118__X0 ) | ( _118__X1 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_else_mux_2_nl_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_else_mux_2_nl_X0 );
  assign mux_tmp_13_X = ( mux_tmp_13_X0 ) | ( mux_tmp_13_X1 );
  assign mux_15_nl_X = ( mux_15_nl_X0 );
  assign _156__X = ( _156__X0 );
  assign _154__X = ( _154__X0 );
  assign _153__X = ( _153__X0 );
  assign core_wen_X = ( core_wen_X0 ) | ( core_wen_X1 ) | ( core_wen_X2 ) | ( core_wen_X3 ) | ( core_wen_X4 ) | ( core_wen_X5 ) | ( core_wen_X6 ) | ( core_wen_X7 ) | ( core_wen_X8 ) | ( core_wen_X9 ) | ( core_wen_X10 ) | ( core_wen_X11 ) | ( core_wen_X12 ) | ( core_wen_X13 ) | ( core_wen_X14 ) | ( core_wen_X15 ) | ( core_wen_X16 ) | ( core_wen_X17 );
  assign mux_10_nl_X = ( mux_10_nl_X0 );
  assign mux_9_nl_X = ( mux_9_nl_X0 );
  assign mux_7_nl_X = ( mux_7_nl_X0 );
  assign mux_5_nl_X = ( mux_5_nl_X0 );
  assign _048__X = ( _048__X0 ) | ( _048__X1 ) | ( _048__X2 ) | ( _048__X3 ) | ( _048__X4 ) | ( _048__X5 ) | ( _048__X6 ) | ( _048__X7 ) | ( _048__X8 ) | ( _048__X9 ) | ( _048__X10 ) | ( _048__X11 );
  assign fangyuan2_X = ( fangyuan2_X0 );
  assign nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_X = ( nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_X0 ) | ( nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_X1 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_X0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_X1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_X2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_X3 );
  assign FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_X = ( FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_X0 ) | ( FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_X1 );
  assign fangyuan1_X = ( fangyuan1_X0 );
  assign _001__X = ( _001__X0 ) | ( _001__X1 );
  assign FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_X = ( FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_X0 ) | ( FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_X1 );
  assign FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_X = ( FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_X0 ) | ( FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_X1 );
  assign chn_a_rsci_d_mxwt_X = ( chn_a_rsci_d_mxwt_X0 ) | ( chn_a_rsci_d_mxwt_X1 ) | ( chn_a_rsci_d_mxwt_X2 ) | ( chn_a_rsci_d_mxwt_X3 ) | ( chn_a_rsci_d_mxwt_X4 ) | ( chn_a_rsci_d_mxwt_X5 );
  assign fangyuan0_X = ( fangyuan0_X0 );
  assign _143__X = ( _143__X0 );
  assign FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_X = ( FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_X0 ) | ( FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_X1 ) | ( FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_X2 );
  assign FpMantRNE_24U_11U_else_carry_sva_2_X = ( FpMantRNE_24U_11U_else_carry_sva_2_X0 ) | ( FpMantRNE_24U_11U_else_carry_sva_2_X1 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X = ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X4 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X5 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X6 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X7 );
  assign _108__X = ( _108__X0 );
  assign chn_o_rsci_oswt_unreg_X = ( chn_o_rsci_oswt_unreg_X0 );
  assign chn_o_rsc_z_X = ( chn_o_rsc_z_X0 );
  assign chn_o_rsc_lz_X = ( chn_o_rsc_lz_X0 );
  assign chn_a_rsci_oswt_unreg_X = ( chn_a_rsci_oswt_unreg_X0 );
  assign chn_a_rsc_lz_X = ( chn_a_rsc_lz_X0 );
  assign chn_o_rsci_wen_comp_R = ( chn_o_rsci_wen_comp_X0 & chn_o_rsci_wen_comp_R0 );
  assign chn_a_rsci_wen_comp_R = ( chn_a_rsci_wen_comp_X0 & chn_a_rsci_wen_comp_R0 );
  assign chn_o_rsci_oswt_R = ( chn_o_rsci_oswt_X0 & chn_o_rsci_oswt_R0 );
  assign chn_o_rsc_vz_R = ( chn_o_rsc_vz_X0 & chn_o_rsc_vz_R0 );
  assign nvdla_core_rstn_R = ( nvdla_core_rstn_X0 & nvdla_core_rstn_R0 ) | ( nvdla_core_rstn_X1 & nvdla_core_rstn_R1 ) | ( nvdla_core_rstn_X2 & nvdla_core_rstn_R2 ) | ( nvdla_core_rstn_X3 & nvdla_core_rstn_R3 );
  assign core_wten_R = ( core_wten_X0 & core_wten_R0 ) | ( core_wten_X1 & core_wten_R1 );
  assign chn_a_rsci_oswt_R = ( chn_a_rsci_oswt_X0 & chn_a_rsci_oswt_R0 );
  assign chn_a_rsc_z_R = ( chn_a_rsc_z_X0 & chn_a_rsc_z_R0 );
  assign chn_a_rsc_vz_R = ( chn_a_rsc_vz_X0 & chn_a_rsc_vz_R0 );
  assign chn_o_rsci_iswt0_R = ( chn_o_rsci_iswt0_X0 & chn_o_rsci_iswt0_R0 ) | ( chn_o_rsci_iswt0_X1 & chn_o_rsci_iswt0_R1 );
  assign chn_a_rsci_iswt0_R = ( chn_a_rsci_iswt0_X0 & chn_a_rsci_iswt0_R0 ) | ( chn_a_rsci_iswt0_X1 & chn_a_rsci_iswt0_R1 );
  assign _149__R = ( _149__X0 & _149__R0 );
  assign chn_a_rsci_ld_core_psct_R = ( chn_a_rsci_ld_core_psct_X0 & chn_a_rsci_ld_core_psct_R0 ) | ( chn_a_rsci_ld_core_psct_X1 & chn_a_rsci_ld_core_psct_R1 );
  assign _101__R = ( _101__X0 & _101__R0 );
  assign chn_o_rsci_d_16_R = ( chn_o_rsci_d_16_X0 & chn_o_rsci_d_16_R0 ) | ( chn_o_rsci_d_16_X1 & chn_o_rsci_d_16_R1 ) | ( chn_o_rsci_d_16_X2 & chn_o_rsci_d_16_R2 );
  assign chn_o_rsci_d_15_R = ( chn_o_rsci_d_15_X0 & chn_o_rsci_d_15_R0 ) | ( chn_o_rsci_d_15_X1 & chn_o_rsci_d_15_R1 ) | ( chn_o_rsci_d_15_X2 & chn_o_rsci_d_15_R2 );
  assign _223__R = ( _223__X0 & _223__R0 );
  assign chn_o_rsci_d_14_10_R = ( chn_o_rsci_d_14_10_X0 & chn_o_rsci_d_14_10_R0 ) | ( chn_o_rsci_d_14_10_X1 & chn_o_rsci_d_14_10_R1 ) | ( chn_o_rsci_d_14_10_X2 & chn_o_rsci_d_14_10_R2 );
  assign _047__R = ( _047__X0 & _047__R0 );
  assign chn_o_and_cse_R = ( chn_o_and_cse_X0 & chn_o_and_cse_R0 ) | ( chn_o_and_cse_X1 & chn_o_and_cse_R1 ) | ( chn_o_and_cse_X2 & chn_o_and_cse_R2 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_and_nl_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_and_nl_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_and_nl_R0 );
  assign chn_o_rsci_d_9_0_R = ( chn_o_rsci_d_9_0_X0 & chn_o_rsci_d_9_0_R0 ) | ( chn_o_rsci_d_9_0_X1 & chn_o_rsci_d_9_0_R1 ) | ( chn_o_rsci_d_9_0_X2 & chn_o_rsci_d_9_0_R2 );
  assign _046__R = ( _046__X0 & _046__R0 );
  assign _104__R = ( _104__X0 & _104__R0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_1_nl_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_1_nl_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_1_nl_R0 );
  assign _151__R = ( _151__X0 & _151__R0 );
  assign _105__R = ( _105__X0 & _105__R0 );
  assign _152__R = ( _152__X0 & _152__R0 );
  assign _106__R = ( _106__X0 & _106__R0 );
  assign nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_R = ( nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_X0 & nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_R0 );
  assign _107__R = ( _107__X0 & _107__R0 );
  assign _049__R = ( _049__X0 & _049__R0 );
  assign _050__R = ( _050__X0 & _050__R0 );
  assign _051__R = ( _051__X0 & _051__R0 );
  assign _052__R = ( _052__X0 & _052__R0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_R0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_X1 & FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_R1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_X2 & FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_R2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_X3 & FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_R3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_X4 & FpWidthDec_8U_23U_6U_10U_0U_1U_if_and_cse_R4 );
  assign _117__R = ( _117__X0 & _117__R0 );
  assign _053__R = ( _053__X0 & _053__R0 );
  assign FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_R = ( FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_X0 & FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_R0 );
  assign _054__R = ( _054__X0 & _054__R0 );
  assign FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_R = ( FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_X0 & FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_R0 ) | ( FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_X1 & FpMantDecShiftRight_23U_8U_10U_i_mant_s_and_cse_R1 );
  assign _055__R = ( _055__X0 & _055__R0 );
  assign _056__R = ( _056__X0 & _056__R0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_R0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_X1 & FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_R1 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_R0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_X1 & FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_R1 );
  assign _157__R = ( _157__X0 & _157__R0 );
  assign Fp32ToFp17_and_1_cse_R = ( Fp32ToFp17_and_1_cse_X0 & Fp32ToFp17_and_1_cse_R0 ) | ( Fp32ToFp17_and_1_cse_X1 & Fp32ToFp17_and_1_cse_R1 ) | ( Fp32ToFp17_and_1_cse_X2 & Fp32ToFp17_and_1_cse_R2 ) | ( Fp32ToFp17_and_1_cse_X3 & Fp32ToFp17_and_1_cse_R3 ) | ( Fp32ToFp17_and_1_cse_X4 & Fp32ToFp17_and_1_cse_R4 ) | ( Fp32ToFp17_and_1_cse_X5 & Fp32ToFp17_and_1_cse_R5 );
  assign _058__R = ( _058__X0 & _058__R0 );
  assign _045__R = ( _045__X0 & _045__R0 );
  assign _061__R = ( _061__X0 & _061__R0 );
  assign FpMantRNE_24U_11U_else_acc_nl_R = ( FpMantRNE_24U_11U_else_acc_nl_X0 & FpMantRNE_24U_11U_else_acc_nl_R0 ) | ( FpMantRNE_24U_11U_else_acc_nl_X1 & FpMantRNE_24U_11U_else_acc_nl_R1 );
  assign _197__R = ( _197__X0 & _197__R0 );
  assign _063__R = ( _063__X0 & _063__R0 );
  assign _043__R = ( _043__X0 & _043__R0 );
  assign _065__R = ( _065__X0 & _065__R0 );
  assign _066__R = ( _066__X0 & _066__R0 );
  assign _044__R = ( _044__X0 & _044__R0 );
  assign _070__R = ( _070__X0 & _070__R0 );
  assign FpMantRNE_24U_11U_else_and_svs_mx0w0_R = ( FpMantRNE_24U_11U_else_and_svs_mx0w0_X0 & FpMantRNE_24U_11U_else_and_svs_mx0w0_R0 ) | ( FpMantRNE_24U_11U_else_and_svs_mx0w0_X1 & FpMantRNE_24U_11U_else_and_svs_mx0w0_R1 ) | ( FpMantRNE_24U_11U_else_and_svs_mx0w0_X2 & FpMantRNE_24U_11U_else_and_svs_mx0w0_R2 );
  assign _071__R = ( _071__X0 & _071__R0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_R0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_X1 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_R1 );
  assign _072__R = ( _072__X0 & _072__R0 );
  assign nor_26_nl_R = ( nor_26_nl_X0 & nor_26_nl_R0 );
  assign nor_25_nl_R = ( nor_25_nl_X0 & nor_25_nl_R0 );
  assign or_tmp_24_R = ( or_tmp_24_X0 & or_tmp_24_R0 ) | ( or_tmp_24_X1 & or_tmp_24_R1 );
  assign and_81_nl_R = ( and_81_nl_X0 & and_81_nl_R0 );
  assign mux_12_nl_R = ( mux_12_nl_X0 & mux_12_nl_R0 );
  assign nand_6_nl_R = ( nand_6_nl_X0 & nand_6_nl_R0 );
  assign nor_21_nl_R = ( nor_21_nl_X0 & nor_21_nl_R0 );
  assign _221__R = ( _221__X0 & _221__R0 );
  assign or_34_nl_R = ( or_34_nl_X0 & or_34_nl_R0 );
  assign _097__R = ( _097__X0 & _097__R0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_R0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_X1 & FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_R1 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_R0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_X1 & FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_R1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_X2 & FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_R2 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_mux_1_nl_R0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_nl_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_nl_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_2_nor_nl_R0 );
  assign mux_2_nl_R = ( mux_2_nl_X0 & mux_2_nl_R0 );
  assign nor_nl_R = ( nor_nl_X0 & nor_nl_R0 );
  assign _171__R = ( _171__X0 & _171__R0 );
  assign nor_32_nl_R = ( nor_32_nl_X0 & nor_32_nl_R0 );
  assign and_82_nl_R = ( and_82_nl_X0 & and_82_nl_R0 );
  assign mux_4_nl_R = ( mux_4_nl_X0 & mux_4_nl_R0 );
  assign and_nl_R = ( and_nl_X0 & and_nl_R0 );
  assign mux_6_nl_R = ( mux_6_nl_X0 & mux_6_nl_R0 );
  assign nor_28_nl_R = ( nor_28_nl_X0 & nor_28_nl_R0 );
  assign _181__R = ( _181__X0 & _181__R0 );
  assign _000__R = ( _000__X0 & _000__R0 ) | ( _000__X1 & _000__R1 ) | ( _000__X2 & _000__R2 ) | ( _000__X3 & _000__R3 );
  assign mux_8_nl_R = ( mux_8_nl_X0 & mux_8_nl_R0 );
  assign nor_27_nl_R = ( nor_27_nl_X0 & nor_27_nl_R0 );
  assign _183__R = ( _183__X0 & _183__R0 );
  assign mux_tmp_1_R = ( mux_tmp_1_X0 & mux_tmp_1_R0 ) | ( mux_tmp_1_X1 & mux_tmp_1_R1 ) | ( mux_tmp_1_X2 & mux_tmp_1_R2 ) | ( mux_tmp_1_X3 & mux_tmp_1_R3 );
  assign and_14_nl_R = ( and_14_nl_X0 & and_14_nl_R0 );
  assign mux_14_nl_R = ( mux_14_nl_X0 & mux_14_nl_R0 );
  assign nor_23_nl_R = ( nor_23_nl_X0 & nor_23_nl_R0 );
  assign nor_19_nl_R = ( nor_19_nl_X0 & nor_19_nl_R0 );
  assign nand_5_nl_R = ( nand_5_nl_X0 & nand_5_nl_R0 );
  assign and_76_nl_R = ( and_76_nl_X0 & and_76_nl_R0 );
  assign and_86_nl_R = ( and_86_nl_X0 & and_86_nl_R0 );
  assign nor_17_nl_R = ( nor_17_nl_X0 & nor_17_nl_R0 );
  assign _033__R = ( _033__X0 & _033__R0 );
  assign _039__R = ( _039__X0 & _039__R0 );
  assign _034__R = ( _034__X0 & _034__R0 );
  assign _035__R = ( _035__X0 & _035__R0 );
  assign _036__R = ( _036__X0 & _036__R0 );
  assign _037__R = ( _037__X0 & _037__R0 );
  assign _038__R = ( _038__X0 & _038__R0 );
  assign _042__R = ( _042__X0 & _042__R0 );
  assign _040__R = ( _040__X0 & _040__R0 );
  assign _017__R = ( _017__X0 & _017__R0 );
  assign _013__R = ( _013__X0 & _013__R0 );
  assign _009__R = ( _009__X0 & _009__R0 );
  assign _020__R = ( _020__X0 & _020__R0 );
  assign _025__R = ( _025__X0 & _025__R0 );
  assign _014__R = ( _014__X0 & _014__R0 );
  assign _028__R = ( _028__X0 & _028__R0 );
  assign _018__R = ( _018__X0 & _018__R0 );
  assign _030__R = ( _030__X0 & _030__R0 );
  assign _032__R = ( _032__X0 & _032__R0 );
  assign _041__R = ( _041__X0 & _041__R0 );
  assign _005__R = ( _005__X0 & _005__R0 );
  assign _006__R = ( _006__X0 & _006__R0 );
  assign _021__R = ( _021__X0 & _021__R0 );
  assign _026__R = ( _026__X0 & _026__R0 );
  assign _012__R = ( _012__X0 & _012__R0 );
  assign _015__R = ( _015__X0 & _015__R0 );
  assign _024__R = ( _024__X0 & _024__R0 );
  assign _027__R = ( _027__X0 & _027__R0 );
  assign _019__R = ( _019__X0 & _019__R0 );
  assign _031__R = ( _031__X0 & _031__R0 );
  assign _029__R = ( _029__X0 & _029__R0 );
  assign _016__R = ( _016__X0 & _016__R0 );
  assign _011__R = ( _011__X0 & _011__R0 );
  assign _023__R = ( _023__X0 & _023__R0 );
  assign _010__R = ( _010__X0 & _010__R0 );
  assign _008__R = ( _008__X0 & _008__R0 );
  assign _007__R = ( _007__X0 & _007__R0 );
  assign _022__R = ( _022__X0 & _022__R0 );
  assign or_tmp_50_R = ( or_tmp_50_X0 & or_tmp_50_R0 ) | ( or_tmp_50_X1 & or_tmp_50_R1 );
  assign chn_o_rsci_d_9_0_mx0c1_R = ( chn_o_rsci_d_9_0_mx0c1_X0 & chn_o_rsci_d_9_0_mx0c1_R0 ) | ( chn_o_rsci_d_9_0_mx0c1_X1 & chn_o_rsci_d_9_0_mx0c1_R1 );
  assign _103__R = ( _103__X0 & _103__R0 );
  assign _102__R = ( _102__X0 & _102__R0 );
  assign _222__R = ( _222__X0 & _222__R0 );
  assign _220__R = ( _220__X0 & _220__R0 );
  assign _146__R = ( _146__X0 & _146__R0 );
  assign _093__R = ( _093__X0 & _093__R0 );
  assign IsNaN_8U_23U_nor_tmp_R = ( IsNaN_8U_23U_nor_tmp_X0 & IsNaN_8U_23U_nor_tmp_R0 ) | ( IsNaN_8U_23U_nor_tmp_X1 & IsNaN_8U_23U_nor_tmp_R1 );
  assign IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_R = ( IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_X0 & IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_R0 ) | ( IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_X1 & IsNaN_8U_23U_IsNaN_8U_23U_nand_tmp_R1 );
  assign _144__R = ( _144__X0 & _144__R0 );
  assign FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_R = ( FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_X0 & FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_R0 ) | ( FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_X1 & FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_R1 );
  assign _215__R = ( _215__X0 & _215__R0 );
  assign _214__R = ( _214__X0 & _214__R0 );
  assign _213__R = ( _213__X0 & _213__R0 );
  assign _212__R = ( _212__X0 & _212__R0 );
  assign _211__R = ( _211__X0 & _211__R0 );
  assign _210__R = ( _210__X0 & _210__R0 );
  assign _209__R = ( _209__X0 & _209__R0 );
  assign _208__R = ( _208__X0 & _208__R0 );
  assign _207__R = ( _207__X0 & _207__R0 );
  assign _206__R = ( _206__X0 & _206__R0 );
  assign _205__R = ( _205__X0 & _205__R0 );
  assign IsNaN_8U_23U_nor_itm_2_R = ( IsNaN_8U_23U_nor_itm_2_X0 & IsNaN_8U_23U_nor_itm_2_R0 ) | ( IsNaN_8U_23U_nor_itm_2_X1 & IsNaN_8U_23U_nor_itm_2_R1 ) | ( IsNaN_8U_23U_nor_itm_2_X2 & IsNaN_8U_23U_nor_itm_2_R2 );
  assign IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_R = ( IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_X0 & IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_R0 ) | ( IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_X1 & IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_R1 ) | ( IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_X2 & IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_R2 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_R0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_X1 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_R1 );
  assign _203__R = ( _203__X0 & _203__R0 );
  assign _202__R = ( _202__X0 & _202__R0 );
  assign _200__R = ( _200__X0 & _200__R0 );
  assign _199__R = ( _199__X0 & _199__R0 );
  assign _085__R = ( _085__X0 & _085__R0 );
  assign _196__R = ( _196__X0 & _196__R0 );
  assign _084__R = ( _084__X0 & _084__R0 );
  assign _195__R = ( _195__X0 & _195__R0 );
  assign _083__R = ( _083__X0 & _083__R0 );
  assign _082__R = ( _082__X0 & _082__R0 );
  assign _138__R = ( _138__X0 & _138__R0 );
  assign _193__R = ( _193__X0 & _193__R0 );
  assign _137__R = ( _137__X0 & _137__R0 );
  assign _136__R = ( _136__X0 & _136__R0 );
  assign _135__R = ( _135__X0 & _135__R0 );
  assign _189__R = ( _189__X0 & _189__R0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_R0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_X1 & FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_R1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_X2 & FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_R2 );
  assign and_77_cse_R = ( and_77_cse_X0 & and_77_cse_R0 ) | ( and_77_cse_X1 & and_77_cse_R1 );
  assign nor_20_cse_R = ( nor_20_cse_X0 & nor_20_cse_R0 ) | ( nor_20_cse_X1 & nor_20_cse_R1 ) | ( nor_20_cse_X2 & nor_20_cse_R2 );
  assign _186__R = ( _186__X0 & _186__R0 );
  assign _134__R = ( _134__X0 & _134__R0 ) | ( _134__X1 & _134__R1 );
  assign _185__R = ( _185__X0 & _185__R0 );
  assign _184__R = ( _184__X0 & _184__R0 );
  assign _132__R = ( _132__X0 & _132__R0 ) | ( _132__X1 & _132__R1 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_R0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_X1 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_R1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_X2 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_R2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_X3 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_R3 );
  assign _180__R = ( _180__X0 & _180__R0 );
  assign or_16_nl_R = ( or_16_nl_X0 & or_16_nl_R0 ) | ( or_16_nl_X1 & or_16_nl_R1 );
  assign _131__R = ( _131__X0 & _131__R0 ) | ( _131__X1 & _131__R1 ) | ( _131__X2 & _131__R2 );
  assign _177__R = ( _177__X0 & _177__R0 );
  assign _176__R = ( _176__X0 & _176__R0 );
  assign _130__R = ( _130__X0 & _130__R0 );
  assign FpMantRNE_24U_11U_else_and_svs_st_2_R = ( FpMantRNE_24U_11U_else_and_svs_st_2_X0 & FpMantRNE_24U_11U_else_and_svs_st_2_R0 ) | ( FpMantRNE_24U_11U_else_and_svs_st_2_X1 & FpMantRNE_24U_11U_else_and_svs_st_2_R1 );
  assign _174__R = ( _174__X0 & _174__R0 );
  assign _129__R = ( _129__X0 & _129__R0 ) | ( _129__X1 & _129__R1 );
  assign _128__R = ( _128__X0 & _128__R0 );
  assign _127__R = ( _127__X0 & _127__R0 );
  assign _125__R = ( _125__X0 & _125__R0 ) | ( _125__X1 & _125__R1 ) | ( _125__X2 & _125__R2 ) | ( _125__X3 & _125__R3 ) | ( _125__X4 & _125__R4 );
  assign _170__R = ( _170__X0 & _170__R0 );
  assign _124__R = ( _124__X0 & _124__R0 ) | ( _124__X1 & _124__R1 ) | ( _124__X2 & _124__R2 );
  assign or_2_nl_R = ( or_2_nl_X0 & or_2_nl_R0 ) | ( or_2_nl_X1 & or_2_nl_R1 );
  assign _167__R = ( _167__X0 & _167__R0 );
  assign _165__R = ( _165__X0 & _165__R0 );
  assign _164__R = ( _164__X0 & _164__R0 ) | ( _164__X1 & _164__R1 );
  assign and_53_rgt_R = ( and_53_rgt_X0 & and_53_rgt_R0 ) | ( and_53_rgt_X1 & and_53_rgt_R1 );
  assign _068__R = ( _068__X0 & _068__R0 );
  assign and_50_rgt_R = ( and_50_rgt_X0 & and_50_rgt_R0 ) | ( and_50_rgt_X1 & and_50_rgt_R1 );
  assign _160__R = ( _160__X0 & _160__R0 );
  assign _159__R = ( _159__X0 & _159__R0 );
  assign and_48_rgt_R = ( and_48_rgt_X0 & and_48_rgt_R0 ) | ( and_48_rgt_X1 & and_48_rgt_R1 );
  assign _059__R = ( _059__X0 & _059__R0 );
  assign _057__R = ( _057__X0 & _057__R0 );
  assign _155__R = ( _155__X0 & _155__R0 );
  assign _114__R = ( _114__X0 & _114__R0 );
  assign _113__R = ( _113__X0 & _113__R0 );
  assign _112__R = ( _112__X0 & _112__R0 );
  assign main_stage_v_1_mx0c1_R = ( main_stage_v_1_mx0c1_X0 & main_stage_v_1_mx0c1_R0 ) | ( main_stage_v_1_mx0c1_X1 & main_stage_v_1_mx0c1_R1 );
  assign and_dcpl_17_R = ( and_dcpl_17_X0 & and_dcpl_17_R0 ) | ( and_dcpl_17_X1 & and_dcpl_17_R1 );
  assign _100__R = ( _100__X0 & _100__R0 );
  assign _219__R = ( _219__X0 & _219__R0 );
  assign _094__R = ( _094__X0 & _094__R0 );
  assign _217__R = ( _217__X0 & _217__R0 );
  assign _111__R = ( _111__X0 & _111__R0 );
  assign _115__R = ( _115__X0 & _115__R0 );
  assign _090__R = ( _090__X0 & _090__R0 );
  assign _204__R = ( _204__X0 & _204__R0 );
  assign _201__R = ( _201__X0 & _201__R0 );
  assign _198__R = ( _198__X0 & _198__R0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_R0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X1 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_R1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X2 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_R2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X3 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_R3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X4 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_R4 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X5 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_R5 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X6 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_R6 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X7 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_R7 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_X8 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_R8 );
  assign _194__R = ( _194__X0 & _194__R0 );
  assign _076__R = ( _076__X0 & _076__R0 );
  assign _190__R = ( _190__X0 & _190__R0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_R0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_X1 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_R1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_X2 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_R2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_X3 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_R3 );
  assign _188__R = ( _188__X0 & _188__R0 );
  assign _075__R = ( _075__X0 & _075__R0 );
  assign _187__R = ( _187__X0 & _187__R0 );
  assign _182__R = ( _182__X0 & _182__R0 );
  assign _179__R = ( _179__X0 & _179__R0 );
  assign _178__R = ( _178__X0 & _178__R0 );
  assign _175__R = ( _175__X0 & _175__R0 );
  assign _173__R = ( _173__X0 & _173__R0 );
  assign _074__R = ( _074__X0 & _074__R0 );
  assign _169__R = ( _169__X0 & _169__R0 );
  assign and_tmp_R = ( and_tmp_X0 & and_tmp_R0 ) | ( and_tmp_X1 & and_tmp_R1 );
  assign or_tmp_3_R = ( or_tmp_3_X0 & or_tmp_3_R0 );
  assign _004__R = ( _004__X0 & _004__R0 );
  assign _003__R = ( _003__X0 & _003__R0 );
  assign _168__R = ( _168__X0 & _168__R0 );
  assign _166__R = ( _166__X0 & _166__R0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X1 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X2 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X3 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X4 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R4 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X5 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R5 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X6 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R6 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X7 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R7 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X8 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R8 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X9 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R9 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X10 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R10 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X11 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R11 );
  assign main_stage_v_2_mx0c1_R = ( main_stage_v_2_mx0c1_X0 & main_stage_v_2_mx0c1_R0 ) | ( main_stage_v_2_mx0c1_X1 & main_stage_v_2_mx0c1_R1 );
  assign and_dcpl_9_R = ( and_dcpl_9_X0 & and_dcpl_9_R0 ) | ( and_dcpl_9_X1 & and_dcpl_9_R1 ) | ( and_dcpl_9_X2 & and_dcpl_9_R2 );
  assign FpMantDecShiftRight_23U_8U_10U_least_bits_22_0_sva_R = ( FpMantDecShiftRight_23U_8U_10U_least_bits_22_0_sva_X0 & FpMantDecShiftRight_23U_8U_10U_least_bits_22_0_sva_R0 );
  assign FpMantDecShiftRight_23U_8U_10U_stick_bits_22_0_sva_R = ( FpMantDecShiftRight_23U_8U_10U_stick_bits_22_0_sva_X0 & FpMantDecShiftRight_23U_8U_10U_stick_bits_22_0_sva_R0 );
  assign FpMantDecShiftRight_23U_8U_10U_guard_bits_22_0_sva_R = ( FpMantDecShiftRight_23U_8U_10U_guard_bits_22_0_sva_X0 & FpMantDecShiftRight_23U_8U_10U_guard_bits_22_0_sva_R0 );
  assign mux_3_nl_R = ( mux_3_nl_X0 & mux_3_nl_R0 );
  assign _226__R = ( _226__X0 & _226__R0 );
  assign _225__R = ( _225__X0 & _225__R0 );
  assign _224__R = ( _224__X0 & _224__R0 );
  assign IsNaN_8U_23U_land_lpi_1_dfm_2_R = ( IsNaN_8U_23U_land_lpi_1_dfm_2_X0 & IsNaN_8U_23U_land_lpi_1_dfm_2_R0 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_2_X1 & IsNaN_8U_23U_land_lpi_1_dfm_2_R1 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_2_X2 & IsNaN_8U_23U_land_lpi_1_dfm_2_R2 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_2_X3 & IsNaN_8U_23U_land_lpi_1_dfm_2_R3 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_2_X4 & IsNaN_8U_23U_land_lpi_1_dfm_2_R4 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_2_X5 & IsNaN_8U_23U_land_lpi_1_dfm_2_R5 ) | ( IsNaN_8U_23U_land_lpi_1_dfm_2_X6 & IsNaN_8U_23U_land_lpi_1_dfm_2_R6 );
  assign _150__R = ( _150__X0 & _150__R0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_R0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_X1 & FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_R1 );
  assign chn_a_rsci_ld_core_psct_mx0c0_R = ( chn_a_rsci_ld_core_psct_mx0c0_X0 & chn_a_rsci_ld_core_psct_mx0c0_R0 ) | ( chn_a_rsci_ld_core_psct_mx0c0_X1 & chn_a_rsci_ld_core_psct_mx0c0_R1 );
  assign _148__R = ( _148__X0 & _148__R0 );
  assign _099__R = ( _099__X0 & _099__R0 );
  assign _002__R = ( _002__X0 & _002__R0 ) | ( _002__X1 & _002__R1 ) | ( _002__X2 & _002__R2 ) | ( _002__X3 & _002__R3 ) | ( _002__X4 & _002__R4 ) | ( _002__X5 & _002__R5 );
  assign _098__R = ( _098__X0 & _098__R0 );
  assign _120__R = ( _120__X0 & _120__R0 ) | ( _120__X1 & _120__R1 );
  assign _147__R = ( _147__X0 & _147__R0 );
  assign and_dcpl_15_R = ( and_dcpl_15_X0 & and_dcpl_15_R0 ) | ( and_dcpl_15_X1 & and_dcpl_15_R1 ) | ( and_dcpl_15_X2 & and_dcpl_15_R2 ) | ( and_dcpl_15_X3 & and_dcpl_15_R3 );
  assign fsm_output_R = ( fsm_output_X0 & fsm_output_R0 ) | ( fsm_output_X1 & fsm_output_R1 ) | ( fsm_output_X2 & fsm_output_R2 ) | ( fsm_output_X3 & fsm_output_R3 );
  assign main_stage_en_1_R = ( main_stage_en_1_X0 & main_stage_en_1_R0 ) | ( main_stage_en_1_X1 & main_stage_en_1_R1 ) | ( main_stage_en_1_X2 & main_stage_en_1_R2 );
  assign _133__R = ( _133__X0 & _133__R0 ) | ( _133__X1 & _133__R1 ) | ( _133__X2 & _133__R2 ) | ( _133__X3 & _133__R3 ) | ( _133__X4 & _133__R4 );
  assign and_dcpl_16_R = ( and_dcpl_16_X0 & and_dcpl_16_R0 ) | ( and_dcpl_16_X1 & and_dcpl_16_R1 );
  assign chn_o_rsci_bawt_R = ( chn_o_rsci_bawt_X0 & chn_o_rsci_bawt_R0 ) | ( chn_o_rsci_bawt_X1 & chn_o_rsci_bawt_R1 ) | ( chn_o_rsci_bawt_X2 & chn_o_rsci_bawt_R2 ) | ( chn_o_rsci_bawt_X3 & chn_o_rsci_bawt_R3 );
  assign _096__R = ( _096__X0 & _096__R0 );
  assign _095__R = ( _095__X0 & _095__R0 );
  assign or_tmp_28_R = ( or_tmp_28_X0 & or_tmp_28_R0 ) | ( or_tmp_28_X1 & or_tmp_28_R1 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_R0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_X1 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_R1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_X2 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_R2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_X3 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_R3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_X4 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_R4 );
  assign _145__R = ( _145__X0 & _145__R0 ) | ( _145__X1 & _145__R1 );
  assign _092__R = ( _092__X0 & _092__R0 );
  assign reg_chn_o_rsci_ld_core_psct_cse_R = ( reg_chn_o_rsci_ld_core_psct_cse_X0 & reg_chn_o_rsci_ld_core_psct_cse_R0 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X1 & reg_chn_o_rsci_ld_core_psct_cse_R1 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X2 & reg_chn_o_rsci_ld_core_psct_cse_R2 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X3 & reg_chn_o_rsci_ld_core_psct_cse_R3 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X4 & reg_chn_o_rsci_ld_core_psct_cse_R4 ) | ( reg_chn_o_rsci_ld_core_psct_cse_X5 & reg_chn_o_rsci_ld_core_psct_cse_R5 );
  assign and_80_nl_R = ( and_80_nl_X0 & and_80_nl_R0 ) | ( and_80_nl_X1 & and_80_nl_R1 );
  assign _091__R = ( _091__X0 & _091__R0 ) | ( _091__X1 & _091__R1 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_R0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_X1 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_and_tmp_R1 );
  assign FpMantDecShiftRight_23U_8U_10U_least_mask_sva_R = ( FpMantDecShiftRight_23U_8U_10U_least_mask_sva_X0 & FpMantDecShiftRight_23U_8U_10U_least_mask_sva_R0 );
  assign nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_lshift_rg_s_R = ( nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_lshift_rg_s_X0 & nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_lshift_rg_s_R0 );
  assign FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_R = ( FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_X0 & FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_R0 ) | ( FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_X1 & FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_R1 );
  assign _218__R = ( _218__X0 & _218__R0 );
  assign _216__R = ( _216__X0 & _216__R0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_R0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_X1 & FpWidthDec_8U_23U_6U_10U_0U_1U_nand_tmp_R1 );
  assign _089__R = ( _089__X0 & _089__R0 );
  assign _088__R = ( _088__X0 & _088__R0 );
  assign _110__R = ( _110__X0 & _110__R0 );
  assign _109__R = ( _109__X0 & _109__R0 );
  assign FpMantRNE_24U_11U_else_carry_sva_mx0w0_R = ( FpMantRNE_24U_11U_else_carry_sva_mx0w0_X0 & FpMantRNE_24U_11U_else_carry_sva_mx0w0_R0 ) | ( FpMantRNE_24U_11U_else_carry_sva_mx0w0_X1 & FpMantRNE_24U_11U_else_carry_sva_mx0w0_R1 );
  assign or_dcpl_11_R = ( or_dcpl_11_X0 & or_dcpl_11_R0 ) | ( or_dcpl_11_X1 & or_dcpl_11_R1 );
  assign _122__R = ( _122__X0 & _122__R0 ) | ( _122__X1 & _122__R1 ) | ( _122__X2 & _122__R2 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_R0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_X1 & FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_R1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_X2 & FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_R2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_X3 & FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_3_mx0w0_R3 );
  assign _087__R = ( _087__X0 & _087__R0 );
  assign _086__R = ( _086__X0 & _086__R0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_R0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_X1 & FpWidthDec_8U_23U_6U_10U_0U_1U_and_1_m1c_R1 );
  assign _142__R = ( _142__X0 & _142__R0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_nor_ssc_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_nor_ssc_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_nor_ssc_R0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_R0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_X1 & FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_R1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_X2 & FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_R2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_X3 & FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_R3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_X4 & FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_R4 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_R0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_X1 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_R1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_X2 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_R2 );
  assign mux_16_nl_R = ( mux_16_nl_X0 & mux_16_nl_R0 );
  assign _116__R = ( _116__X0 & _116__R0 ) | ( _116__X1 & _116__R1 ) | ( _116__X2 & _116__R2 ) | ( _116__X3 & _116__R3 ) | ( _116__X4 & _116__R4 );
  assign mux_11_nl_R = ( mux_11_nl_X0 & mux_11_nl_R0 );
  assign _141__R = ( _141__X0 & _141__R0 );
  assign fangyuan6_R = ( fangyuan6_X0 & fangyuan6_R0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_R0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_X1 & FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_R1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_X2 & FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_R2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_X3 & FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_R3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_X4 & FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_R4 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_X5 & FpWidthDec_8U_23U_6U_10U_0U_1U_and_4_rgt_R5 );
  assign fangyuan5_R = ( fangyuan5_X0 & fangyuan5_R0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_R0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_X1 & FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_R1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_X2 & FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_R2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_X3 & FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_R3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_X4 & FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_R4 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_X5 & FpWidthDec_8U_23U_6U_10U_0U_1U_and_2_rgt_R5 );
  assign fangyuan4_R = ( fangyuan4_X0 & fangyuan4_R0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_R0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_X1 & FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_R1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_X2 & FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_R2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_X3 & FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_R3 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_R0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_X1 & FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_R1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_X2 & FpWidthDec_8U_23U_6U_10U_0U_1U_is_zero_lpi_1_dfm_2_R2 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_R0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_X1 & FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_R1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_X2 & FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_R2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_X3 & FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_R3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_X4 & FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_R4 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_X5 & FpWidthDec_8U_23U_6U_10U_0U_1U_and_3_rgt_R5 );
  assign fangyuan3_R = ( fangyuan3_X0 & fangyuan3_R0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_R0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_X1 & FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_R1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_X2 & FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_R2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_X3 & FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_R3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_X4 & FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_R4 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_X5 & FpWidthDec_8U_23U_6U_10U_0U_1U_and_5_rgt_R5 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_R0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_X1 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_R1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_X2 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_R2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_X3 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_R3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_X4 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_R4 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_X5 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_R5 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_X6 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_R6 );
  assign _081__R = ( _081__X0 & _081__R0 );
  assign _140__R = ( _140__X0 & _140__R0 ) | ( _140__X1 & _140__R1 ) | ( _140__X2 & _140__R2 ) | ( _140__X3 & _140__R3 );
  assign _192__R = ( _192__X0 & _192__R0 );
  assign _080__R = ( _080__X0 & _080__R0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_R0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_X1 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_R1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_X2 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_R2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_X3 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_R3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_X4 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_R4 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_X5 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_R5 );
  assign _079__R = ( _079__X0 & _079__R0 );
  assign _139__R = ( _139__X0 & _139__R0 );
  assign _078__R = ( _078__X0 & _078__R0 );
  assign _077__R = ( _077__X0 & _077__R0 ) | ( _077__X1 & _077__R1 );
  assign main_stage_v_1_R = ( main_stage_v_1_X0 & main_stage_v_1_R0 ) | ( main_stage_v_1_X1 & main_stage_v_1_R1 ) | ( main_stage_v_1_X2 & main_stage_v_1_R2 ) | ( main_stage_v_1_X3 & main_stage_v_1_R3 ) | ( main_stage_v_1_X4 & main_stage_v_1_R4 ) | ( main_stage_v_1_X5 & main_stage_v_1_R5 ) | ( main_stage_v_1_X6 & main_stage_v_1_R6 ) | ( main_stage_v_1_X7 & main_stage_v_1_R7 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X1 & FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X2 & FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X3 & FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X4 & FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R4 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X5 & FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R5 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X6 & FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R6 );
  assign main_stage_v_2_R = ( main_stage_v_2_X0 & main_stage_v_2_R0 ) | ( main_stage_v_2_X1 & main_stage_v_2_R1 ) | ( main_stage_v_2_X2 & main_stage_v_2_R2 ) | ( main_stage_v_2_X3 & main_stage_v_2_R3 ) | ( main_stage_v_2_X4 & main_stage_v_2_R4 ) | ( main_stage_v_2_X5 & main_stage_v_2_R5 ) | ( main_stage_v_2_X6 & main_stage_v_2_R6 );
  assign _191__R = ( _191__X0 & _191__R0 );
  assign mux_tmp_18_R = ( mux_tmp_18_X0 & mux_tmp_18_R0 ) | ( mux_tmp_18_X1 & mux_tmp_18_R1 );
  assign and_42_cse_R = ( and_42_cse_X0 & and_42_cse_R0 ) | ( and_42_cse_X1 & and_42_cse_R1 ) | ( and_42_cse_X2 & and_42_cse_R2 ) | ( and_42_cse_X3 & and_42_cse_R3 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_R0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X1 & FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_R1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X2 & FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_R2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X3 & FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_R3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X4 & FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_R4 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X5 & FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_R5 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X6 & FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_R6 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X7 & FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_R7 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X8 & FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_R8 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_X9 & FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_R9 );
  assign FpMantRNE_24U_11U_else_and_svs_2_R = ( FpMantRNE_24U_11U_else_and_svs_2_X0 & FpMantRNE_24U_11U_else_and_svs_2_R0 ) | ( FpMantRNE_24U_11U_else_and_svs_2_X1 & FpMantRNE_24U_11U_else_and_svs_2_R1 ) | ( FpMantRNE_24U_11U_else_and_svs_2_X2 & FpMantRNE_24U_11U_else_and_svs_2_R2 ) | ( FpMantRNE_24U_11U_else_and_svs_2_X3 & FpMantRNE_24U_11U_else_and_svs_2_R3 ) | ( FpMantRNE_24U_11U_else_and_svs_2_X4 & FpMantRNE_24U_11U_else_and_svs_2_R4 ) | ( FpMantRNE_24U_11U_else_and_svs_2_X5 & FpMantRNE_24U_11U_else_and_svs_2_R5 );
  assign or_tmp_11_R = ( or_tmp_11_X0 & or_tmp_11_R0 ) | ( or_tmp_11_X1 & or_tmp_11_R1 ) | ( or_tmp_11_X2 & or_tmp_11_R2 ) | ( or_tmp_11_X3 & or_tmp_11_R3 );
  assign _126__R = ( _126__X0 & _126__R0 );
  assign chn_a_rsci_bawt_R = ( chn_a_rsci_bawt_X0 & chn_a_rsci_bawt_R0 ) | ( chn_a_rsci_bawt_X1 & chn_a_rsci_bawt_R1 ) | ( chn_a_rsci_bawt_X2 & chn_a_rsci_bawt_R2 ) | ( chn_a_rsci_bawt_X3 & chn_a_rsci_bawt_R3 ) | ( chn_a_rsci_bawt_X4 & chn_a_rsci_bawt_R4 ) | ( chn_a_rsci_bawt_X5 & chn_a_rsci_bawt_R5 );
  assign _172__R = ( _172__X0 & _172__R0 ) | ( _172__X1 & _172__R1 );
  assign _073__R = ( _073__X0 & _073__R0 );
  assign FpMantRNE_24U_11U_else_and_svs_R = ( FpMantRNE_24U_11U_else_and_svs_X0 & FpMantRNE_24U_11U_else_and_svs_R0 ) | ( FpMantRNE_24U_11U_else_and_svs_X1 & FpMantRNE_24U_11U_else_and_svs_R1 ) | ( FpMantRNE_24U_11U_else_and_svs_X2 & FpMantRNE_24U_11U_else_and_svs_R2 );
  assign or_tmp_9_R = ( or_tmp_9_X0 & or_tmp_9_R0 ) | ( or_tmp_9_X1 & or_tmp_9_R1 );
  assign _123__R = ( _123__X0 & _123__R0 );
  assign _121__R = ( _121__X0 & _121__R0 );
  assign _069__R = ( _069__X0 & _069__R0 );
  assign _163__R = ( _163__X0 & _163__R0 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X1 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X2 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X3 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X4 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R4 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X5 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R5 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X6 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R6 );
  assign _067__R = ( _067__X0 & _067__R0 );
  assign _119__R = ( _119__X0 & _119__R0 );
  assign and_dcpl_29_R = ( and_dcpl_29_X0 & and_dcpl_29_R0 ) | ( and_dcpl_29_X1 & and_dcpl_29_R1 ) | ( and_dcpl_29_X2 & and_dcpl_29_R2 );
  assign mux_20_nl_R = ( mux_20_nl_X0 & mux_20_nl_R0 );
  assign mux_tmp_R = ( mux_tmp_X0 & mux_tmp_R0 ) | ( mux_tmp_X1 & mux_tmp_R1 ) | ( mux_tmp_X2 & mux_tmp_R2 ) | ( mux_tmp_X3 & mux_tmp_R3 );
  assign _064__R = ( _064__X0 & _064__R0 );
  assign _162__R = ( _162__X0 & _162__R0 );
  assign _062__R = ( _062__X0 & _062__R0 );
  assign _161__R = ( _161__X0 & _161__R0 );
  assign mux_19_nl_R = ( mux_19_nl_X0 & mux_19_nl_R0 );
  assign _060__R = ( _060__X0 & _060__R0 );
  assign _158__R = ( _158__X0 & _158__R0 );
  assign or_9_cse_R = ( or_9_cse_X0 & or_9_cse_R0 ) | ( or_9_cse_X1 & or_9_cse_R1 ) | ( or_9_cse_X2 & or_9_cse_R2 ) | ( or_9_cse_X3 & or_9_cse_R3 ) | ( or_9_cse_X4 & or_9_cse_R4 ) | ( or_9_cse_X5 & or_9_cse_R5 ) | ( or_9_cse_X6 & or_9_cse_R6 ) | ( or_9_cse_X7 & or_9_cse_R7 ) | ( or_9_cse_X8 & or_9_cse_R8 ) | ( or_9_cse_X9 & or_9_cse_R9 ) | ( or_9_cse_X10 & or_9_cse_R10 ) | ( or_9_cse_X11 & or_9_cse_R11 ) | ( or_9_cse_X12 & or_9_cse_R12 ) | ( or_9_cse_X13 & or_9_cse_R13 ) | ( or_9_cse_X14 & or_9_cse_R14 ) | ( or_9_cse_X15 & or_9_cse_R15 ) | ( or_9_cse_X16 & or_9_cse_R16 ) | ( or_9_cse_X17 & or_9_cse_R17 );
  assign nor_16_cse_R = ( nor_16_cse_X0 & nor_16_cse_R0 ) | ( nor_16_cse_X1 & nor_16_cse_R1 );
  assign not_tmp_20_R = ( not_tmp_20_X0 & not_tmp_20_R0 ) | ( not_tmp_20_X1 & not_tmp_20_R1 );
  assign _118__R = ( _118__X0 & _118__R0 ) | ( _118__X1 & _118__R1 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_else_mux_2_nl_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_else_mux_2_nl_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_else_mux_2_nl_R0 );
  assign mux_tmp_13_R = ( mux_tmp_13_X0 & mux_tmp_13_R0 ) | ( mux_tmp_13_X1 & mux_tmp_13_R1 );
  assign mux_15_nl_R = ( mux_15_nl_X0 & mux_15_nl_R0 );
  assign _156__R = ( _156__X0 & _156__R0 );
  assign _154__R = ( _154__X0 & _154__R0 );
  assign _153__R = ( _153__X0 & _153__R0 );
  assign core_wen_R = ( core_wen_X0 & core_wen_R0 ) | ( core_wen_X1 & core_wen_R1 ) | ( core_wen_X2 & core_wen_R2 ) | ( core_wen_X3 & core_wen_R3 ) | ( core_wen_X4 & core_wen_R4 ) | ( core_wen_X5 & core_wen_R5 ) | ( core_wen_X6 & core_wen_R6 ) | ( core_wen_X7 & core_wen_R7 ) | ( core_wen_X8 & core_wen_R8 ) | ( core_wen_X9 & core_wen_R9 ) | ( core_wen_X10 & core_wen_R10 ) | ( core_wen_X11 & core_wen_R11 ) | ( core_wen_X12 & core_wen_R12 ) | ( core_wen_X13 & core_wen_R13 ) | ( core_wen_X14 & core_wen_R14 ) | ( core_wen_X15 & core_wen_R15 ) | ( core_wen_X16 & core_wen_R16 ) | ( core_wen_X17 & core_wen_R17 );
  assign mux_10_nl_R = ( mux_10_nl_X0 & mux_10_nl_R0 );
  assign mux_9_nl_R = ( mux_9_nl_X0 & mux_9_nl_R0 );
  assign mux_7_nl_R = ( mux_7_nl_X0 & mux_7_nl_R0 );
  assign mux_5_nl_R = ( mux_5_nl_X0 & mux_5_nl_R0 );
  assign _048__R = ( _048__X0 & _048__R0 ) | ( _048__X1 & _048__R1 ) | ( _048__X2 & _048__R2 ) | ( _048__X3 & _048__R3 ) | ( _048__X4 & _048__R4 ) | ( _048__X5 & _048__R5 ) | ( _048__X6 & _048__R6 ) | ( _048__X7 & _048__R7 ) | ( _048__X8 & _048__R8 ) | ( _048__X9 & _048__R9 ) | ( _048__X10 & _048__R10 ) | ( _048__X11 & _048__R11 );
  assign fangyuan2_R = ( fangyuan2_X0 & fangyuan2_R0 );
  assign nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_R = ( nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_X0 & nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_R0 ) | ( nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_X1 & nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_R1 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_R0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_X1 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_R1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_X2 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_R2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_X3 & FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_R3 );
  assign FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_R = ( FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_X0 & FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_R0 ) | ( FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_X1 & FpMantDecShiftRight_23U_8U_10U_guard_mask_sva_R1 );
  assign fangyuan1_R = ( fangyuan1_X0 & fangyuan1_R0 );
  assign _001__R = ( _001__X0 & _001__R0 ) | ( _001__X1 & _001__R1 );
  assign FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_R = ( FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_X0 & FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_R0 ) | ( FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_X1 & FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_R1 );
  assign FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_R = ( FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_X0 & FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_R0 ) | ( FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_X1 & FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_R1 );
  assign chn_a_rsci_d_mxwt_R = ( chn_a_rsci_d_mxwt_X0 & chn_a_rsci_d_mxwt_R0 ) | ( chn_a_rsci_d_mxwt_X1 & chn_a_rsci_d_mxwt_R1 ) | ( chn_a_rsci_d_mxwt_X2 & chn_a_rsci_d_mxwt_R2 ) | ( chn_a_rsci_d_mxwt_X3 & chn_a_rsci_d_mxwt_R3 ) | ( chn_a_rsci_d_mxwt_X4 & chn_a_rsci_d_mxwt_R4 ) | ( chn_a_rsci_d_mxwt_X5 & chn_a_rsci_d_mxwt_R5 );
  assign fangyuan0_R = ( fangyuan0_X0 & fangyuan0_R0 );
  assign _143__R = ( _143__X0 & _143__R0 );
  assign FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_R = ( FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_X0 & FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_R0 ) | ( FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_X1 & FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_R1 ) | ( FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_X2 & FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_R2 );
  assign FpMantRNE_24U_11U_else_carry_sva_2_R = ( FpMantRNE_24U_11U_else_carry_sva_2_X0 & FpMantRNE_24U_11U_else_carry_sva_2_R0 ) | ( FpMantRNE_24U_11U_else_carry_sva_2_X1 & FpMantRNE_24U_11U_else_carry_sva_2_R1 );
  assign FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R = ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X0 & FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R0 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X1 & FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R1 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X2 & FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R2 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X3 & FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R3 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X4 & FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R4 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X5 & FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R5 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X6 & FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R6 ) | ( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X7 & FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R7 );
  assign _108__R = ( _108__X0 & _108__R0 );
  assign chn_o_rsci_oswt_unreg_R = ( chn_o_rsci_oswt_unreg_X0 & chn_o_rsci_oswt_unreg_R0 );
  assign chn_o_rsc_z_R = ( chn_o_rsc_z_X0 & chn_o_rsc_z_R0 );
  assign chn_o_rsc_lz_R = ( chn_o_rsc_lz_X0 & chn_o_rsc_lz_R0 );
  assign chn_a_rsci_oswt_unreg_R = ( chn_a_rsci_oswt_unreg_X0 & chn_a_rsci_oswt_unreg_R0 );
  assign chn_a_rsc_lz_R = ( chn_a_rsc_lz_X0 & chn_a_rsc_lz_R0 );
 // ground taints for floating regs
 // ground taints for unused wires
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_acc_itm_8_1_R , FpWidthDec_8U_23U_6U_10U_0U_1U_acc_itm_8_1_C , FpWidthDec_8U_23U_6U_10U_0U_1U_acc_itm_8_1_X , FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_itm_8_1_R , FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_itm_8_1_C , FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_itm_8_1_X , FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_itm_7_1_R , FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_itm_7_1_C , FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_itm_7_1_X , nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_R , nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_C , nl_FpMantDecShiftRight_23U_8U_10U_guard_mask_acc_1_psp_sva_X , nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_a_R , nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_a_C , nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_a_X , nl_FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_R , nl_FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_C , nl_FpMantDecShiftRight_23U_8U_10U_o_mant_sum_sva_X , nl_FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_R , nl_FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_C , nl_FpMantDecShiftRight_23U_8U_10U_stick_mask_acc_nl_X , nl_FpMantRNE_24U_11U_else_acc_nl_R , nl_FpMantRNE_24U_11U_else_acc_nl_C , nl_FpMantRNE_24U_11U_else_acc_nl_X , nl_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_R , nl_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_C , nl_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_nl_X , nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_R , nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_C , nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_nl_X , nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_R , nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_C , nl_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_nl_X , nl_FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_R , nl_FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_C , nl_FpWidthDec_8U_23U_6U_10U_0U_1U_o_expo_sva_3_X , nl_HLS_fp32_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_R , nl_HLS_fp32_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_C , nl_HLS_fp32_to_fp17_core_chn_o_rsci_inst_chn_o_rsci_d_X  } = 0;
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_PREV_VAL1 <= FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_PREV_VAL2 <= FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMantRNE_24U_11U_else_and_svs_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMantRNE_24U_11U_else_and_svs_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMantRNE_24U_11U_else_and_svs_PREV_VAL1 <= FpMantRNE_24U_11U_else_and_svs ;
    if( INSTR_IN_ZY ) FpMantRNE_24U_11U_else_and_svs_PREV_VAL2 <= FpMantRNE_24U_11U_else_and_svs_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMantRNE_24U_11U_else_and_svs_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMantRNE_24U_11U_else_and_svs_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMantRNE_24U_11U_else_and_svs_2_PREV_VAL1 <= FpMantRNE_24U_11U_else_and_svs_2 ;
    if( INSTR_IN_ZY ) FpMantRNE_24U_11U_else_and_svs_2_PREV_VAL2 <= FpMantRNE_24U_11U_else_and_svs_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMantRNE_24U_11U_else_carry_sva_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMantRNE_24U_11U_else_carry_sva_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMantRNE_24U_11U_else_carry_sva_2_PREV_VAL1 <= FpMantRNE_24U_11U_else_carry_sva_2 ;
    if( INSTR_IN_ZY ) FpMantRNE_24U_11U_else_carry_sva_2_PREV_VAL2 <= FpMantRNE_24U_11U_else_carry_sva_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_PREV_VAL1 <= FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_PREV_VAL2 <= FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_PREV_VAL1 <= FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_PREV_VAL2 <= FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_PREV_VAL1 <= FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_PREV_VAL2 <= FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_PREV_VAL1 <= FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_PREV_VAL2 <= FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) IsNaN_8U_23U_land_lpi_1_dfm_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) IsNaN_8U_23U_land_lpi_1_dfm_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) IsNaN_8U_23U_land_lpi_1_dfm_2_PREV_VAL1 <= IsNaN_8U_23U_land_lpi_1_dfm_2 ;
    if( INSTR_IN_ZY ) IsNaN_8U_23U_land_lpi_1_dfm_2_PREV_VAL2 <= IsNaN_8U_23U_land_lpi_1_dfm_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_PREV_VAL1 <= FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_PREV_VAL2 <= FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_PREV_VAL1 <= FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_PREV_VAL2 <= FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_PREV_VAL1 <= FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_PREV_VAL2 <= FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_PREV_VAL1 <= FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_PREV_VAL2 <= FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_PREV_VAL1 <= FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_PREV_VAL2 <= FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_PREV_VAL1 <= FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_PREV_VAL2 <= FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_PREV_VAL1 <= FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_PREV_VAL2 <= FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_PREV_VAL1 <= FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2 ;
    if( INSTR_IN_ZY ) FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_PREV_VAL2 <= FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_PREV_VAL1 <= FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2 ;
    if( INSTR_IN_ZY ) FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_PREV_VAL2 <= FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) main_stage_v_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) main_stage_v_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) main_stage_v_2_PREV_VAL1 <= main_stage_v_2 ;
    if( INSTR_IN_ZY ) main_stage_v_2_PREV_VAL2 <= main_stage_v_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) IsNaN_8U_23U_nor_itm_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) IsNaN_8U_23U_nor_itm_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) IsNaN_8U_23U_nor_itm_2_PREV_VAL1 <= IsNaN_8U_23U_nor_itm_2 ;
    if( INSTR_IN_ZY ) IsNaN_8U_23U_nor_itm_2_PREV_VAL2 <= IsNaN_8U_23U_nor_itm_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_PREV_VAL1 <= IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2 ;
    if( INSTR_IN_ZY ) IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_PREV_VAL2 <= IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_PREV_VAL1 <= FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_PREV_VAL2 <= FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_PREV_VAL1 <= FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_PREV_VAL2 <= FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_PREV_VAL1 <= FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_PREV_VAL2 <= FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_PREV_VAL1 <= FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_PREV_VAL2 <= FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_PREV_VAL1 <= FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_PREV_VAL2 <= FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpMantRNE_24U_11U_else_and_svs_st_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpMantRNE_24U_11U_else_and_svs_st_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpMantRNE_24U_11U_else_and_svs_st_2_PREV_VAL1 <= FpMantRNE_24U_11U_else_and_svs_st_2 ;
    if( INSTR_IN_ZY ) FpMantRNE_24U_11U_else_and_svs_st_2_PREV_VAL2 <= FpMantRNE_24U_11U_else_and_svs_st_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_PREV_VAL1 <= FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_PREV_VAL2 <= FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_PREV_VAL1 <= FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2 ;
    if( INSTR_IN_ZY ) FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_PREV_VAL2 <= FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) main_stage_v_1_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) main_stage_v_1_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) main_stage_v_1_PREV_VAL1 <= main_stage_v_1 ;
    if( INSTR_IN_ZY ) main_stage_v_1_PREV_VAL2 <= main_stage_v_1_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL1 <= reg_chn_o_rsci_ld_core_psct_cse ;
    if( INSTR_IN_ZY ) reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL2 <= reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_o_rsci_d_9_0_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_o_rsci_d_9_0_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_9_0_PREV_VAL1 <= chn_o_rsci_d_9_0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_9_0_PREV_VAL2 <= chn_o_rsci_d_9_0_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_o_rsci_d_16_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_o_rsci_d_16_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_16_PREV_VAL1 <= chn_o_rsci_d_16 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_16_PREV_VAL2 <= chn_o_rsci_d_16_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_o_rsci_d_15_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_o_rsci_d_15_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_15_PREV_VAL1 <= chn_o_rsci_d_15 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_15_PREV_VAL2 <= chn_o_rsci_d_15_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_o_rsci_d_14_10_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_o_rsci_d_14_10_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_14_10_PREV_VAL1 <= chn_o_rsci_d_14_10 ;
    if( INSTR_IN_ZY ) chn_o_rsci_d_14_10_PREV_VAL2 <= chn_o_rsci_d_14_10_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_a_rsci_ld_core_psct_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_a_rsci_ld_core_psct_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_a_rsci_ld_core_psct_PREV_VAL1 <= chn_a_rsci_ld_core_psct ;
    if( INSTR_IN_ZY ) chn_a_rsci_ld_core_psct_PREV_VAL2 <= chn_a_rsci_ld_core_psct_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_o_rsci_iswt0_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_o_rsci_iswt0_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_iswt0_PREV_VAL1 <= chn_o_rsci_iswt0 ;
    if( INSTR_IN_ZY ) chn_o_rsci_iswt0_PREV_VAL2 <= chn_o_rsci_iswt0_PREV_VAL1 ;
  end
  always @( posedge nvdla_core_clk ) begin
    if( !nvdla_core_rstn ) chn_a_rsci_iswt0_PREV_VAL1 <= 0 ;
    if( !nvdla_core_rstn ) chn_a_rsci_iswt0_PREV_VAL2 <= 0 ;
    if( INSTR_IN_ZY ) chn_a_rsci_iswt0_PREV_VAL1 <= chn_a_rsci_iswt0 ;
    if( INSTR_IN_ZY ) chn_a_rsci_iswt0_PREV_VAL2 <= chn_a_rsci_iswt0_PREV_VAL1 ;
  end
 // ground taints for unused wire slices
  assign { FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_R0 [0], FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_R0 [1], FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_R0 [2], FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_R0 [3], FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_R0 [4], FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_R0 [5], FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_R0 [6], FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_R0 [7], FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_R0 [8], FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_R0 [9], FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_R0 [10], FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_R0 [11], FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_R0 [12] } = 0;
  assign { FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_X0 [0], FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_X0 [1], FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_X0 [2], FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_X0 [3], FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_X0 [4], FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_X0 [5], FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_X0 [6], FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_X0 [7], FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_X0 [8], FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_X0 [9], FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_X0 [10], FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_X0 [11], FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_X0 [12] } = 0;
  assign { FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_C0 [0], FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_C0 [1], FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_C0 [2], FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_C0 [3], FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_C0 [4], FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_C0 [5], FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_C0 [6], FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_C0 [7], FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_C0 [8], FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_C0 [9], FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_C0 [10], FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_C0 [11], FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_itm_C0 [12] } = 0;
  assign { fsm_output_R3 [1:1] } = 0;
  assign { fsm_output_X3 [1:1] } = 0;
  assign { fsm_output_C3 [1:1] } = 0;
  assign { nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_R1 [3:1] } = 0;
  assign { nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_X1 [3:1] } = 0;
  assign { nl_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_rg_s_C1 [3:1] } = 0;
  assign { chn_a_rsci_d_mxwt_R5 [31:29] } = 0;
  assign { chn_a_rsci_d_mxwt_X5 [31:29] } = 0;
  assign { chn_a_rsci_d_mxwt_C5 [31:29] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_R7 [28:23] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_X7 [28:23] } = 0;
  assign { FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_C7 [28:23] } = 0;
  assign { _108__R0 [3:3] } = 0;
  assign { _108__X0 [3:3] } = 0;
  assign { _108__C0 [3:3] } = 0;
  assert property( FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_r_flag == 0 || FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_PREV_VAL1 == FpMantDecShiftRight_23U_8U_10U_carry_and_itm_2_PREV_VAL2 );
  assert property( FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_r_flag == 0 || FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_PREV_VAL1 == FpMantDecShiftRight_23U_8U_10U_i_mant_s_slc_FpMantDecShiftRight_23U_8U_10U_i_mant_s_rshift_23_13_itm_2_PREV_VAL2 );
  assert property( FpMantRNE_24U_11U_else_and_svs_r_flag == 0 || FpMantRNE_24U_11U_else_and_svs_PREV_VAL1 == FpMantRNE_24U_11U_else_and_svs_PREV_VAL2 );
  assert property( FpMantRNE_24U_11U_else_and_svs_2_r_flag == 0 || FpMantRNE_24U_11U_else_and_svs_2_PREV_VAL1 == FpMantRNE_24U_11U_else_and_svs_2_PREV_VAL2 );
  assert property( FpMantRNE_24U_11U_else_and_svs_st_2_r_flag == 0 || FpMantRNE_24U_11U_else_and_svs_st_2_PREV_VAL1 == FpMantRNE_24U_11U_else_and_svs_st_2_PREV_VAL2 );
  assert property( FpMantRNE_24U_11U_else_carry_sva_2_r_flag == 0 || FpMantRNE_24U_11U_else_carry_sva_2_PREV_VAL1 == FpMantRNE_24U_11U_else_carry_sva_2_PREV_VAL2 );
  assert property( FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_r_flag == 0 || FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_PREV_VAL1 == FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_4_0_1_PREV_VAL2 );
  assert property( FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_r_flag == 0 || FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_PREV_VAL1 == FpWidthDec_8U_23U_6U_10U_0U_1U_FpWidthDec_8U_23U_6U_10U_0U_1U_mux1h_itm_1_5_1_PREV_VAL2 );
  assert property( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_r_flag == 0 || FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_PREV_VAL1 == FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_28_0_1_PREV_VAL2 );
  assert property( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_r_flag == 0 || FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_PREV_VAL1 == FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_1_31_1_PREV_VAL2 );
  assert property( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_r_flag == 0 || FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_PREV_VAL1 == FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_31_1_PREV_VAL2 );
  assert property( FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_r_flag == 0 || FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_PREV_VAL1 == FpWidthDec_8U_23U_6U_10U_0U_1U_bits_sva_2_9_0_1_PREV_VAL2 );
  assert property( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_r_flag == 0 || FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_PREV_VAL1 == FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_i_shift_acc_psp_1_sva_2_PREV_VAL2 );
  assert property( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_r_flag == 0 || FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_PREV_VAL1 == FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_3_PREV_VAL2 );
  assert property( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_r_flag == 0 || FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_PREV_VAL1 == FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_4_PREV_VAL2 );
  assert property( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_r_flag == 0 || FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_PREV_VAL1 == FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_3_PREV_VAL2 );
  assert property( FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_r_flag == 0 || FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_PREV_VAL1 == FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_else_acc_8_svs_st_4_PREV_VAL2 );
  assert property( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_r_flag == 0 || FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_PREV_VAL1 == FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_PREV_VAL2 );
  assert property( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_r_flag == 0 || FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_PREV_VAL1 == FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_3_PREV_VAL2 );
  assert property( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_r_flag == 0 || FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_PREV_VAL1 == FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_4_PREV_VAL2 );
  assert property( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_r_flag == 0 || FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_PREV_VAL1 == FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_3_PREV_VAL2 );
  assert property( FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_r_flag == 0 || FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_PREV_VAL1 == FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_else_if_acc_7_svs_st_4_PREV_VAL2 );
  assert property( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_r_flag == 0 || FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_PREV_VAL1 == FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_4_PREV_VAL2 );
  assert property( FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_r_flag == 0 || FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_PREV_VAL1 == FpWidthDec_8U_23U_6U_10U_0U_1U_if_slc_FpWidthDec_8U_23U_6U_10U_0U_1U_acc_8_svs_st_3_PREV_VAL2 );
  assert property( FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_r_flag == 0 || FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_PREV_VAL1 == FpWidthDec_8U_23U_6U_10U_0U_1U_is_inf_lpi_1_dfm_5_PREV_VAL2 );
  assert property( IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_r_flag == 0 || IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_PREV_VAL1 == IsNaN_8U_23U_IsNaN_8U_23U_nand_itm_2_PREV_VAL2 );
  assert property( IsNaN_8U_23U_land_lpi_1_dfm_2_r_flag == 0 || IsNaN_8U_23U_land_lpi_1_dfm_2_PREV_VAL1 == IsNaN_8U_23U_land_lpi_1_dfm_2_PREV_VAL2 );
  assert property( IsNaN_8U_23U_nor_itm_2_r_flag == 0 || IsNaN_8U_23U_nor_itm_2_PREV_VAL1 == IsNaN_8U_23U_nor_itm_2_PREV_VAL2 );
  assert property( chn_a_rsci_iswt0_r_flag == 0 || chn_a_rsci_iswt0_PREV_VAL1 == chn_a_rsci_iswt0_PREV_VAL2 );
  assert property( chn_a_rsci_ld_core_psct_r_flag == 0 || chn_a_rsci_ld_core_psct_PREV_VAL1 == chn_a_rsci_ld_core_psct_PREV_VAL2 );
  assert property( chn_o_rsci_d_14_10_r_flag == 0 || chn_o_rsci_d_14_10_PREV_VAL1 == chn_o_rsci_d_14_10_PREV_VAL2 );
  assert property( chn_o_rsci_d_15_r_flag == 0 || chn_o_rsci_d_15_PREV_VAL1 == chn_o_rsci_d_15_PREV_VAL2 );
  assert property( chn_o_rsci_d_16_r_flag == 0 || chn_o_rsci_d_16_PREV_VAL1 == chn_o_rsci_d_16_PREV_VAL2 );
  assert property( chn_o_rsci_d_9_0_r_flag == 0 || chn_o_rsci_d_9_0_PREV_VAL1 == chn_o_rsci_d_9_0_PREV_VAL2 );
  assert property( chn_o_rsci_iswt0_r_flag == 0 || chn_o_rsci_iswt0_PREV_VAL1 == chn_o_rsci_iswt0_PREV_VAL2 );
  assert property( main_stage_v_1_r_flag == 0 || main_stage_v_1_PREV_VAL1 == main_stage_v_1_PREV_VAL2 );
  assert property( main_stage_v_2_r_flag == 0 || main_stage_v_2_PREV_VAL1 == main_stage_v_2_PREV_VAL2 );
  assert property( reg_chn_o_rsci_ld_core_psct_cse_r_flag == 0 || reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL1 == reg_chn_o_rsci_ld_core_psct_cse_PREV_VAL2 );
  assign rst_zy = !nvdla_core_rstn ;
endmodule
